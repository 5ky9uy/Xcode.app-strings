com.apple.private.alloy.photostream
albumData
type
IDS: Send message %@ from %@ to %@ for album %@
IDS: Send message with identifier %@
IDS: Failed to send message. Error: %@ Info: %@
v16@?0@4@8^B12
delete
IDS: Successfully send message from %@ for album %@ with IDS identifier %@.
IDS: Failed to send message from %@ for album %@ with identifier %@. Error: %@ Info: %@
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
stateMachine
T@"MSASStateMachine",&,N,V_stateMachine
album
T@"MSASAlbum",&,N,V_album
idsService
T@"IDSService",&,N,V_idsService
sendMessageIdentifierToPhone
T@"NSMutableDictionary",&,N,V_sendMessageIdentifierToPhone
MSMSDServerSideConfigurationDidChangeNotification
personID
v4@?0
ERROR_PUBLISHER_MISSING
INV_SHARE_BOTH_WAYS_P_NAME_P_EMAIL_P_FNAME
INV_SHARE_BOTH_WAYS_P_EMAIL
INV_SHARE_OUR_STREAM_P_NAME_P_EMAIL
INV_SHARE_OUR_STREAM_P_EMAIL
INV_SHARE_THEIR_STREAM_P_NAME_P_EMAIL
INV_SHARE_THEIR_STREAM_P_EMAIL
INV_TITLE
UPDATE_STOPPED_SHARING_BOTH_WAYS_P_NAME
UPDATE_STOPPED_SHARING_OUR_STREAM_P_NAME
UPDATE_STOPPED_SHARING_THEIR_STREAM_P_NAME
UPDATE_PHOTO_STREAM_TITLE
mme.streams.application.configVersion
delegate
T@"<MSMediaStreamDaemonDelegate>",N,V_delegate
nextActivityDateByPersonIDKey
public.tiff
public.jpeg
public.camera-raw-image
public.png
 for the first time
, again
ERROR_PUBLISHER_UTI_REJECTED_P_UTI
ERROR_PUBLISHER_ASSET_ZERO_SIZE
ERROR_PUBLISHER_ASSET_TOO_LARGE
ERROR_PUBLISHER_MISSING_HASH
ERROR_PUBLISHER_CANNOT_COMPUTE_HASH
, %lld
%lld
ERROR_PUT_CONNECTION_INVALID_STREAMS_RESPONSE
ERROR_PUT_CONNECTION_INVALID_ASSET_HASH
ERROR_PUT_CONNECTION_INVALID_STORAGE_URL
ERROR_PUBLISHER_ASSET_REJECTED
code
4034
retryafter
assets
ERROR_PUBLISHER_SEND_QUEUE_MISMATCH
ERROR_PUBLISHER_ABORTED
T@"<MSPublisherDelegate>",N
publishBatchSize
Ti,N
daemon
T@"MSMediaStreamDaemon",N,V_daemon
storageProtocolURL
T@"NSURL",&,N,V_storageProtocolURL
publishTargetByteCount
Tq,N,V_publishTargetByteCount
Ti,N,V_publishBatchSize
T@"<MSPublisherDelegate>",N,V_delegate
nextActivityDateByPersonID
subs
poll
Idle
RetryFetchingNewList
FetchingNewList
RetryRetrieving
Retrieving
RetryReauth
WaitingForReauth
-[MSSubscriber retrieveAssets:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSSubscriber.m
[asset isKindOfClass:[MSAsset class]]
ERROR_SUBSCRIBER_ASSET_INVALID
Unexpected state
ERROR_SUBSCRIBER_ABORTED
ERROR_SUBSCRIBER_CANNOT_RETRIEVE
ERROR_SUBSCRIBER_NOT_AUTH
T@"<MSSubscriberDelegate>",N
targetRetrievalByteCount
Tq,N,V_targetRetrievalByteCount
retrievalBatchSize
Ti,N,V_retrievalBatchSize
T@"<MSSubscriberDelegate>",N,V_delegate
MSAssetMetadataFileSize
MSAssetMetadataPixelWidth
MSAssetMetadataPixelHeight
MSAssetMetadataDeviceID
MSAssetMetadataDateContentModified
MSAssetMetadataDateContentCreated
MSAssetMetadataSourceLibraryID
MSAssetMetadataSourceItemID
MSAssetMetadataItemID
MSAssetMetadataStreamIDKey
MSAssetMetadataSHA1HashKey
MSAssetMetadataSourceiCloudPhotoLibraryEnabledKey
MSAssetMetadataSourceContainerTypeKey
cameraRoll
event
MSAssetMetadataSourceContainerIDKey
MSAssetMetadataSourceContainerDisplayNameKey
MSAssetMetadataDeviceDisplayNameKey
MSAssetMetadataRasterToDisplayRotationAngleKey
MSAssetMetadataAssetFileTransferUUID
MSAssetMetadataAssetType
original
thumbnail
derivative
fullsize-derivative
MSAssetMetadataAssetTypeFlags
MSAssetMetadataHTTPURL
MSAssetMediaAssetType
 GUID: %@ 
Asset collection GUID: %@ 
Path: %@ 
metadata: %@
  type: %@
  master asset hash: %@
  file hash: %@
  MMCS header:%@
  MMCS Header set on: %@
  MMCS URL: %@
  MMCS Receipt: %@
  File data present.
  Batch creation date: %@
  Asset creation date: %@
  Asset is photo
  Media Asset Type %ld
  Asset is video
  Asset data is %@ available on server
  protocol file size:%lld
masterAssetHash
metadata
fileHash
path
MMCSAccessHeader
MMCSAccessHeaderTimeStamp
MMCSURL
MMCSReceipt
fileData
protocolFileSize
GUID
assetCollectionGUID
batchCreationDate
photoCreationDate
userInfo
mediaAssetType
assetDataAvailableOnServer
MMCSUTI
T@"NSString",&,N
MMCSItemID
TQ,N
MMCSHash
T@"NSData",&,N
MMCSItemSize
MMCSError
T@"NSError",&,N
T@"NSDate",&,N
MMCSItemFlags
TL,N
supportsSecureCoding
TB,R
T@"NSString",&,N,V_GUID
T@"NSData",&,N,V_masterAssetHash
T@"NSDictionary",&,N,V_metadata
T@"NSString",&,N,V_path
T@"NSURL",&,N,V_MMCSURL
T@"NSData",&,N,V_fileData
T@"NSString",&,N,V_assetCollectionGUID
T@"NSDate",&,N,V_batchCreationDate
T@"NSDate",&,N,V_photoCreationDate
error
T@"NSError",&,N,V_error
T@"<NSCoding>",&,N,V_userInfo
TI,N,V_mediaAssetType
TB,N,V_assetDataAvailableOnServer
T@"NSString",&,N,V_type
T@"NSData",&,N,V_fileHash
TQ,N,V_protocolFileSize
T@"NSString",&,N,V_MMCSAccessHeader
T@"NSDate",&,N,V_MMCSAccessHeaderTimeStamp
T@"NSString",&,N,V_MMCSReceipt
  Asset collection ID: %@
 ctag: %@
 File name: %@
 Server uploaded date: %@
  Master asset: %@
  Derived assets: %@
assetCollectionID
ctag
masterAsset
derivedAssets
fileName
wasDeleted
initialFailureDate
serverUploadedDate
T@"NSString",&,N,V_assetCollectionID
T@"NSString",&,N,V_ctag
T@"MSAsset",&,N,V_masterAsset
T@"NSData",R,W,N
T@"NSArray",&,N
T@"NSString",&,N,V_fileName
TB,N,V_wasDeleted
T@"NSDate",&,N,V_serverUploadedDate
Tq,N,V_initialFailureDate
manifest.plist
queue.sqlite3
derivatives.sqlite3
quarantine.sqlite3
protocol
share
mmcs
config
serverconfig.plist
albumshare
Daemon.sqlite
PersonID.sqlite
mmcs-pub
Model.sqlite
mmcs-sub
perf
perf.sqlite
%@+%lu
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSUtilities.m
MSSHA1HashForData
length < UINT32_MAX
enabled
TB,N,V_enabled
MSDaemonErrorDomain
MSStreamsPutConnectionErrorDomain
MSStreamsGetConnectionErrorDomain
MSPublishStorageProtocolErrorDomain
MSSubscribeStorageProtocolErrorDomain
MSPublisherErrorDomain
MSSubscriberErrorDomain
MSSharingErrorDomain
MSDeleterErrorDomain
MSASStateMachineErrorDomain
MSASSubscriberErrorDomain
MSASProtocolErrorDomain
MSASAssetTransferErrorDomain
MSASAssetUploaderErrorDomain
MSASAssetDownloaderErrorDomain
MSASModelErrorDomain
MSErrorIsPrimary
Domain  : %@
Code    : %ld
Desc    : %@
Sugg    : %@
UserInfo: %@
...Underlying error:
B8@?0@"NSError"4
Retry-After
asset-XXXXXX
MSTempFilePathCannotAllocateTemplate
Cannot allocate temporary file path
MSTempFilePathCannotCreatePath
Cannot create temporary file path
0123456789abcdef
Unable to allocate memory for length (%lu)
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
data is too large to encode
unable to allocate memory for length (%lu)
Cannot allocate space for hex conversion buffer
0123456789abcdef
MSCoreMediaStreamNotInitializedException
CoreMediaStream framework has not been initialized before use.
ERROR_PUT_CONNECTION_MISSING_ASSET_FIELD_P_FIELD
width
height
fingerprint
%llu
size
chunk_%04d.plist
ERROR_GET_CONNECTION_MISSING_CHUNK
ERROR_GET_CONNECTION_INVALID_FIELD_P_NAME
kfjVrXr0t5Dl
%@/streams/getmetadata
%@/streams/putmetadata
%@/streams/reset
%@/streams/gettokens
%@/streams/uploadcomplete
%@/streams/deletemetadata
-[MSStreamsProtocol abort]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSStreamsProtocol.m
T@"<MSStreamsProtocolDelegate>",N,V_delegate
T@"NSString",R,N,V_personID
putURL
T@"NSURL",R,W,N
getURL
resetURL
reauthorizeURL
uploadCompleteURL
deleteURL
nextFileID
com.apple.Dataclass.MediaStream
-[MSMMCSProtocol _getFileDescriptorFromItem:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSMMCSProtocol.m
-[MSMMCSProtocol _getItemDone:path:error:]
-[MSMMCSProtocol _putItemDone:putReceipt:error:]
-[MSMMCSProtocol _requestCompleted]
engine
T^{_mmcs_engine=},R,N,V_engine
ERROR_PUBLISH_STORAGE_CANNOT_PUBLISH
ERROR_PUBLISH_STORAGE_NEED_RESUBMISSION
ERROR_PUBLISH_STORAGE_CANNOT_QUEUE
T@"<MSPublishStorageProtocolDelegate>",N
T@"<MSPublishStorageProtocolDelegate>",N,V_delegate
asset
ERROR_SUBSCRIBER_ASSET_BAD_SIGNATURE
ERROR_SUBSCRIBER_BAD_TOKEN
ERROR_SUBSCRIBER_CANNOT_GET_ASSET
T@"<MSSubscribeStorageProtocolDelegate>",N
T@"<MSSubscribeStorageProtocolDelegate>",N,V_delegate
mmcsurl
MSPSPCSendMetadataAsync
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSPublishStreamsProtocolCore.c
messageAssetCollectionsArray
messageDict
POST
MSPSPCUCSendUploadCompleteAsync
outputArray
assetcollid
checksum
receipt
filename
derivatives
bytecount
sha1
dateContentModified
dateContentCreated
sourceLibraryID
sourceItemID
sourceContainerType
sourceContainerID
sourceContainerDisplayName
deviceDisplayName
rasterToDisplayRotationAngle
sourceiCloudPhotoLibraryEnabled
displayname
devices
streamid
tokens
mmcsheader
ERROR_GET_CORE_CONNECTION_BLOCK_SHORT
_didReceiveData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSSubscribeStreamProtocolCore.c
ERROR_GET_CORE_CONNECTION_INVALID_CHUNK_SIZE
ERROR_GET_CORE_CONNECTION_BAD_CHUNK_TYPE
ERROR_GET_CORE_CONNECTION_BAD_STATE
parttype
stream-metadata-begin
sharing-status
ERROR_GET_CORE_CONNECTION_BAD_PART_TYPE
reset
ERROR_GET_CORE_CONNECTION_BAD_FIELD_P_FIELD
asset-metadata
stream-metadata-end
errorcode
mmcsheaders
server-uploadeddate
deviceid
sharingstatus
streamsProtocolCoreErrorDomain
MSPublishStreamsProtocolCoreErrorDomain
MSSubscribeStreamsProtocolCoreErrorDomain
MSSharesProtocolCoreErrorDomain
MSServerSideConfigCoreErrorDomain
MSDeleteStreamsProtocolCoreErrorDomain
CoreMediaStream
com.apple.CoreMediaStream
%@ %@
retryAfterSeconds
mpsAction
icplAction
version
hasRetryAfterSeconds
TB,N
Tq,N,V_retryAfterSeconds
hasMpsAction
Ti,N,V_mpsAction
hasIcplAction
Ti,N,V_icplAction
hasVersion
Tq,N,V_version
NoMPSAct
PromptToDisableMPS
AutomaticDisableMPS
(unknown: %i)
NoICPLAct
PromptToEnableICPL
AutomaticEnableICPL
fileSize
pixelWidth
pixelHeight
deviceID
itemID
streamID
SHA1
collId
deleted
name
ERROR_CONNECTION_CORE_NO_URL_ERROR
MSSPCStartHTTPTransaction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSStreamsProtocolCore.c
method
chunked
x-apple-mme-streams-client-token
x-apple-mme-streams-client-udid
authorization
[present]
properties
MSSPCCreateHexStringFromData
0123456789abcdef
MSSPCCreateDataFromHexString
(length & 1) == 0
x-apple-mme-streams-version
x-mme-client-info
%@:%@
X-MobileMe-AuthToken %@
_scheduleTimer
timer
x-apple-mme-streams-config-version
0123456789 
ERROR_CONNECTION_CORE_FAILED_SERVER_ERROR
ERROR_CONNECTION_CORE_AUTH_FAILED_ERROR
ERROR_CONNECTION_CORE_FORBIDDEN_ERROR
ERROR_CONNECTION_CORE_FATAL_P_RESPONSE
PersonID: %@
First name: %@
Last name: %@
Email: %@
Sharing our stream: %d
Sharing their stream: %d
firstName
lastName
emailAddress
sharingOurStream
sharingTheirStream
UUID
T@"NSString",&,N,V_personID
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_emailAddress
T@"NSString",&,N,V_UUID
Ti,N,V_sharingOurStream
Ti,N,V_sharingTheirStream
fullName
sharingOurPhotostream
sharingTheirPhotostream
invitation
T@"MSShare",&,N,V_invitation
accept
TB,N,V_accept
T@"<MSSharingManagerDelegate>",N
T@"NSString",R,N
shares
T@"<MSSharingManagerDelegate>",N,V_delegate
Stream ID: %@
CTAG: %@
T@"NSString",&,N,V_streamID
prsID
email
uuid
friend
pendingstatus
friendemail
friendfirstname
friendlastname
requesttype
firstname
lastname
responderemails
_createInviteSharingBodyFromShare
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSSharingProtocolCore.c
retval
originator
_createResponseBodyFromShare
data
_createManageSharesBodyFromShares
_createDeleteSharesBodyFromShares
ERROR_SHARING_INVALID_TYPE
ERROR_SHARING_BAD_FIELD_P_FIELD
%@/streams/invitesharing
%@/streams/managesharing
%@/streams/respondsharing
%@/streams/sharingstatus
failures
ERROR_SHARING_INVALID_PUSH_FIELD_P_FIELD
T@"<MSSharingProtocolDelegate>",N,V_delegate
pushToken
UDID
clientInfo
authToken
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
MSPCUCreateBase64StringFromData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSProtocolCoreUtilities.c
encodedLength >= length
destBuf
MPSDeviceID
iCPLDeviceID
BackupDeviceID
BackupDeviceUUID
BackupDeviceUDID
hasMPSDeviceID
TB,R,N
mPSDeviceID
T@"NSString",&,N,V_mPSDeviceID
hasICPLDeviceID
T@"NSString",&,N,V_iCPLDeviceID
hasBackupDeviceID
backupDeviceID
T@"NSString",&,N,V_backupDeviceID
hasBackupDeviceUUID
backupDeviceUUID
T@"NSString",&,N,V_backupDeviceUUID
hasBackupDeviceUDID
backupDeviceUDID
T@"NSString",&,N,V_backupDeviceUDID
title
T@"NSString",&,N,V_title
body
T@"NSString",&,N,V_body
sourcePersonID
T@"NSString",&,N,V_sourcePersonID
Failed to read file for hashing.
%@/streams/configuration
T@"<MSServerSideConfigProtocolDelegate>",N,V_delegate
SERVER_CONFIG_INVALID
MSServerSideConfigChanged
T@"NSDictionary",&,N
mme.streams.client.bidirectionalSharingOnly
mme.streams.client.maxFriends
mme.streams.client.maxPhotosOwner
mme.streams.client.maxPhotosShared
mme.streams.client.pubMaxUploadBatchCount
mme.streams.client.pubUploadBatchTargetSize
mme.streams.client.pubMaxErrorRetryCount
supportedAssets
assetType
maxFileSizeMB
mme.streams.client.subMaxDownloadBatchCount
mme.streams.client.subDownloadBatchTargetSize
mme.streams.client.subMaxErrorRetryCount
mme.streams.client.maxActiveTimeAfterPush
mme.streams.client.maxActiveTimeAfterLossOfForeground
mme.streams.client.maxActiveTimeAfterGlobalResetSync
personID.plist
personIDToPersonInfoDictionary
T@"NSMutableDictionary",&,N,V_personIDToPersonInfoDictionary
pathForPersonInfoDictionary
T@"NSString",&,N,V_pathForPersonInfoDictionary
MSRPCReauthorizeAsync
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSReauthorizeProtocolCore.c
pragma journal_mode = wal;
create table if not exists Properties(
   key             text primary key,
   value           text
create table if not exists Queue (
   size            integer,
   object          blob,
   errorCount      integer
create index if not exists QueueBySize on Queue (size asc);
select value from Properties where key = 'version';
insert or replace into Properties (key, value) values ('version', '0');
-[MSObjectQueue _statementLabel:query:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSObjectQueue.m
count
select count(*) from Queue;
appendObjectWrappers
insert into Queue (size, object) values (?, ?);
-[MSObjectQueue appendObjectWrappers:]
objectDataLength <= INT_MAX
allObjectWrappersMaxCount
select rowid, size, errorCount, object from Queue limit ?;
objectWrappersWithZeroSizeMaxCount
select rowid, size, errorCount, object from Queue where size = 0 limit ?;
smallestObjectReferencesTargetTotalSize
select rowid, size, errorCount, object from Queue where size != 0 order by size asc limit ?;
allObjectsWrapperOrderedByDescendingErrorCountMaxCount
select rowid, size, errorCount, object from Queue order by errorCount desc limit ?;
removeObjectWrappersFromQueue
delete from Queue where rowid = ?;
removeAllObjectWrappersFromQueue
delete from Queue;
commitErrorCountsForObjectWrappers
update or ignore Queue set errorCount = ? where rowid = ?;
commitObjectWrappers
update or ignore Queue set size = ?, object = ?, errorCount = ? where rowid = ?;
-[MSObjectQueue commitObjectsWrappers:]
Tq,R
Tq,N,V_size
uniqueID
Tq,N,V_uniqueID
object
T@"<NSCoding>",R,N,V_object
errorCount
Ti,N,V_errorCount
initialInterval
backoffFactor
randomizeFactor
maxBackoffInterval
currentInterval
nextExpiryDate
retryAfterDate
T@"<MSBackoffManagerDelegate>",N,V_delegate
Td,N,V_initialInterval
Td,N,V_backoffFactor
Td,N,V_randomizeFactor
Td,N,V_maxBackoffInterval
Td,N,V_currentInterval
T@"NSDate",&
T@"NSDate",&,V_retryAfterDate
streamsBackoffInterval
streamsBackoffDate
streamsRetryAfterDate
MMCSBackoffInterval
MMCSBackoffDate
MMCSRetryAfterDate
-[MSCupidStateMachine _updateMasterManifest]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSCupidStateMachine.m
-[MSCupidStateMachine _abort]
-[MSCupidStateMachine _forget]
_userManifest
T@"NSMutableDictionary",&,N,V_userManifest
hasDeactivated
TB,N,V_hasDeactivated
ERROR_DELETER_ABORTED
T@"<MSDeleterDelegate>",N
batchSize
Ti,N,V_batchSize
T@"<MSDeleterDelegate>",N,V_delegate
T@"<MSDeleteStreamsProtocolDelegate>",D,N
deleteResult
MSDSPCSendDeletionRequestAsync
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSDeleteStreamsProtocolCore.c
messageDeleteArray
success
ERROR_DELETE_CORE_BAD_FIELD_P_FIELD
ownerEmail
ownerPersonID
ownerFullName
ownerFirstName
ownerLastName
ownerIsWhitelisted
subscriptionDate
relationshipState
foreignCtag
urlString
context
publicURLString
familySharedAlbum
 GUID: %@
 owner: %@ (%@ %@)
 owner is whitelisted: %d
 subscription date: %@
 ctag: %@
 Relationship: %d
 foreign ctag: %@
 URL: %@
 metadata: %@
 Public URL: %@
 Family shared album
T@"NSString",&,N,V_ownerEmail
T@"NSString",&,N,V_ownerFullName
T@"NSString",&,N,V_ownerPersonID
T@"NSString",&,N,V_ownerFirstName
T@"NSString",&,N,V_ownerLastName
TB,N,V_ownerIsWhitelisted
T@"NSDate",&,N,V_subscriptionDate
Ti,N,V_relationshipState
T@"NSString",&,N,V_foreignCtag
URLString
T@"NSString",&,N,V_URLString
T@"NSString",&,N,V_publicURLString
T@,&,N,V_context
isFamilySharedAlbum
TB,N,V_isFamilySharedAlbum
useForeignCtag
ispublic
allowcontributions
phoneInvitationToken
creationDate
unknown
video
pendingUploadGUID
batchGUID
batchDateCreated
dateCreated
originalPaths
sourceItemIdentifier
sourceContainerIdentifier
sourceLibraryIdentifier
videoDuration
locationISO6709
mediaGroupUUID
videoComplStillDisplayTime
videoComplDuration
playback-style-identifier
autoloop
playback-variation
 album GUID: %@
 first,last name: %@,%@
 full name = %@
 personID = %@
 email = %@
 isMine=%@ isDeletable=%@
 photo number: %lld
 Time: %@
 Has comments: %d
 collection metadata: %@
 Assets:
albumGUID
isDeletable
isMine
photoNumber
timestamp
T@"NSString",&,N,V_albumGUID
T@"NSArray",&,N,V_assets
Tq,N,V_photoNumber
T@"NSDate",&,N,V_timestamp
T@"NSString",&,N,V_fullName
T@"NSString",&,N,V_email
TB,N,V_isDeletable
TB,N,V_isMine
hasComments
TB,N,V_hasComments
MSAlbumSharingDaemon map queue
MSAlbumSharingDaemon work queue
T@"NSString",R,&,N
maxGroupedCallbackEventBatchCount
maxGroupedCallbackEventIdleInterval
Td,N
maxGroupedCallbackEventStaleness
-[MSAlbumSharingDaemon existingModelForPersonID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/MSAlbumSharingDaemon.m
[delegate conformsToProtocol:@protocol(MSASModel)]
-[MSAlbumSharingDaemon modelForPersonID:]
v12@?0@"NSDictionary"4@"NSError"8
MSASCounterpartInstance
T@"MSASStateMachine",N
mapQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_mapQueue
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
personIDToStateMachineMap
T@"NSMutableDictionary",&,N,V_personIDToStateMachineMap
personIDToDelegateMap
T@"NSMutableDictionary",&,N,V_personIDToDelegateMap
daemonModel
T@"MSASDaemonModel",&,N,V_daemonModel
busyCount
Ti,N,V_busyCount
isRetryingOutstandingActivities
TB,N,V_isRetryingOutstandingActivities
nextUpdateDateByPersonID
T@"NSMutableDictionary",&,N,V_nextUpdateDateByPersonID
T@"<MSAlbumSharingDaemonDelegate>",W,N,V_delegate
MSASPlatform
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/MSASPlatform.m
_thePlatform
isGlobalResetSync
isAlbumResetSync
isLocalChange
eventIsDueToAlbumDeletion
eventIsDueToAssetCollectionDeletion
notInteresting
isErrorRecovery
info
resetSync
invitationGUID
albumFlags
assetGUID
albums
newCtag
assetCollection
assetCollections
assetCollectionGUIDs
successfulAssetCollections
failedAssetCollections
failedAssetCollectionsAndErrors
sharingRelationship
sharingRelationships
sharingRelationshipGUID
commandRetryCount
isUIForeground
lastCommentID
commentPosition
comment
comments
commentsChange
commentGUID
lastViewedDate
albumState
assetCollectionState
invitationToken
assetTypeFlags
scaleFactor
moveLastViewedAssetCollection
accessControlGUID
accessControl
command
params
commandWasRequeued
urlExpiration
modelRefresh
modelRefreshContentOfAlbumWithGUID
modelRefreshAccessControlListOfAlbumWithGUID
modelRefreshCommentsForAssetCollectionWithGUID
modelAddAlbum
modelModifyAlbumMetadata
modelDeleteAlbumWithGUID
modelMarkAlbumGUIDAsViewed
modelSubscribeToAlbumWithGUID
acceptInvitationWithToken
markAsSpamInvitationWithToken
markAsSpamInvitationWithGUID
markAsSpamAlbumWithGUID
modelUnsubscribeFromAlbumWithGUID
modelAcceptInvitationWithGUID
modelRejectInvitationWithGUID
modelAddAccessControl
modelRemoveAccessControlEntryWithGUID
modelAddAssetCollection
modelDeleteAssetCollectionWithGUID
modelDeleteAssetCollectionsWithGUIDs
modelMarkCommentsForAssetCollectionWithGUIDAsViewed
modelAddCommentsToAssetCollectionWithGUID
modelDeleteCommentWithGUID
retrieveAssetsInAlbumWithGUID
retrieveAssetsFromAssetCollectionsWithGUIDs
modelForgetEverything
modelSetPublicAccessEnabled
modelSetMultipleContributorsEnabled
isBusy
assetsInDownloadQueue
activityIsThrottled
setFocusAssetCollectionGUID
modelAlbumGUIDs
modelAlbumWithGUID
modelAccessControlGUIDs
modelAccessControlWithGUID
modelInvitationGUIDs
modelInvitationWithGUID
assetCollectionWithGUID
videoURLForAssetCollectionWithGUID
videoURLsForAssetCollectionWithGUID
commentGUIDs
commentWithGUID
isAssetCollectionMarkedAsViewed
serverSideConfig
nextActivityDate
isInRetryState
retryOutstandingActivities
retryOutstandingActivitiesForPersonID
cancelActivities
push
setIsUIForeground
setFocusAlbum
rootCtag
pendingRootCtag
rootCtagRetries
com.apple.sharedstreams.config.configVersion
com.apple.sharedstreams.config.maxNumRetriesOnFailure.server
com.apple.sharedstreams.config.maxNumRetriesOnFailure.network
com.apple.sharedstreams.config.maxNumRetriesOnFailure.content
com.apple.sharedstreams.config.maxUploadAssetBatchSize
mme.sharedstreams.client.downloadMMCSBatchSize
mme.sharedstreams.client.downloadMMCSErrorRetries
com.apple.sharedstreams.config.maxnum.ownedAlbums
com.apple.sharedstreams.config.maxnum.subscribedAlbums
com.apple.sharedstreams.config.maxnum.photosPerAlbum
com.apple.sharedstreams.config.maxnum.subscribersPerAlbum
com.apple.sharedstreams.config.maxnum.commentsPerPhoto
com.apple.sharedstreams.config.maxNum.charactersPerComment
com.apple.sharedstreams.config.maxNumPhotosToSendInShareAction
com.apple.sharedstreams.config.dimensions.thumbnail
com.apple.sharedstreams.config.dimensions.preview
com.apple.sharedstreams.config.videoderivatives
com.apple.sharedstreams.config.dimensions.invites
mme.sharedstreams.application.invitationImageCount
com.apple.sharedstreams.config.switch.3G
com.apple.sharedstreams.config.defaultRetryAfterInSeconds
com.apple.sharedstreams.config.maxActiveTimeAfterPush
com.apple.sharedstreams.config.maxActiveTimeAfterLossOfForeground
com.apple.sharedstreams.config.maxActiveTimeAfterGlobalResetSync
com.apple.sharedstreams.config.maxMMCSTokenValidity
com.apple.sharedstreams.config.maxNumPhotosToShare.hourly
com.apple.sharedstreams.config.maxNumPhotosToShare.daily
com.apple.sharedstreams.config.maxNumInvites.daily
com.apple.sharedstreams.config.apiVersion
MSASStabilizedIdleStateDidChangeNotification
MSASFileTransferPushTimerDidStartNotification
MSASFileTransferPushTimerDidEndNotification
MSASServerSideConfigDidChangeNotification
%@: GUID : %@, name: %@, owner: %@ (%@ %@) was deleted: %@, share: %@
T@"NSString",C,N,V_ownerEmail
T@"NSString",C,N,V_ownerPersonID
T@"NSString",C,N,V_ownerFullName
T@"NSString",C,N,V_ownerFirstName
T@"NSString",C,N,V_ownerLastName
T@"NSString",&,N,V_name
T@"MSASInvitation",&,N,V_invitation
%@: GUID : %@, ctag: %@, was deleted: %@
%@: Type: %d, comment: %@, deletion index: %d
T@"MSASComment",&,N,V_comment
deletionIndex
Ti,N,V_deletionIndex
Ti,N,V_type
metadataBackoffManager
MMCSBackoffManager
T@"MSAsset",&,N,V_asset
MSASStateMachineInitException
MSASStateMachine work queue
MSASStateMachine event queue
MSASStateMachine server side config queue
MSASStateMachine member queue
v8@?0@"NSNotification"4
1536:2048:2560
256:332:455
v12@?0@"NSError"4@"NSDictionary"8
-[MSASStateMachine workQueueDidFinishCommand]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/MSASStateMachine.m
_commandState == kMSASCommandStatePerformingCommand
-[MSASStateMachine workQueueDidFailToFinishCommandDueToTemporaryError:]
-[MSASStateMachine workQueueDidFinishCommandByLeavingCommandInQueue]
-[MSASStateMachine workQueueDidFinishCommandDueToCancellation]
ERROR_STATE_CANNOT_REQUEUE_AFTER_URL
v12@?0@"NSError"4@"NSString"8
ERROR_STATE_CANCELED
ERROR_STATE_STOPPED
ERROR_STATE_PHOTO_REJECTED
ERROR_STATE_PHOTO_FAILED
ERROR_MSAS_SUB_MISSING_FIELD_P_FIELD
rootctag
v28@?0@"NSError"4B8@"NSString"12@"NSArray"16@"NSArray"20@"NSArray"24
v28@?0@"NSError"4B8@"NSArray"12B16@"MSASAlbum"20@"NSString"24
v12@?0@"NSError"4@"NSArray"8
v8@?0@"NSError"4
ERROR_MSAS_SUB_NO_METADATA
v20@?0@"NSError"4@"NSString"8@"NSArray"12@"NSArray"16
v16@?0@"NSString"4@"NSDictionary"8@"NSString"12
v16@?0@"NSError"4@"NSDictionary"8@"NSString"12
ERROR_STATE_ALBUM_STATE_CTAG_MISSING
v8@?0@"NSArray"4
v16@?0@"NSError"4@"NSArray"8@"NSDictionary"12
v20@?0@"NSError"4@"NSURL"8@"NSArray"12@"NSDictionary"16
v12@?0@"NSError"4i8
Enabling
Disabling
v16@?0@"NSError"4@"NSArray"8@"NSDate"12
ERROR_SUBSCRIBER_CANNOT_GET_VIDEO
ERROR_STATE_PHOTO_NOT_IN_MODEL
_assetInfoToReauthForDownload
T@"NSMutableArray",&,N,S_setAssetInfoToReauthForDownload:,V_assetInfoToReauthForDownload
_stopHandlerBlock
T@?,C,N,S_setStopHandlerBlock:,V_stopHandlerBlock
eventQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_eventQueue
serverSideConfigQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serverSideConfigQueue
memberQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
hasShutDown
TB,N,V_hasShutDown
metadataBackoffManagerParameters
T@"NSDictionary",&,N,V_metadataBackoffManagerParameters
MMCSBackoffManagerParameters
T@"NSDictionary",&,N,V_MMCSBackoffManagerParameters
postCommandCompletionBlock
T@?,C,N,V_postCommandCompletionBlock
T@"MSAlbumSharingDaemon",W,N,V_daemon
maxMetadataRetryCount
Ti,N,V_maxMetadataRetryCount
serverSideConfiguration
T@"NSDictionary",&,N,V_serverSideConfiguration
serverSideConfigurationVersion
T@"NSString",R,&,N,V_serverSideConfigurationVersion
T@"MSASProtocol",&,N,V_protocol
phoneInvitations
T@"MSASPhoneInvitations",&,N,V_phoneInvitations
focusAlbumGUID
T@"NSString",&,N,V_focusAlbumGUID
focusAssetCollectionGUID
T@"NSString",&,N,V_focusAssetCollectionGUID
derivativeSpecifications
T@"NSArray",R,&,N,V_derivativeSpecifications
derivativeImageScalingSpecification
T@"MSImageScalingSpecification",R,&,N,V_derivativeImageScalingSpecification
thumbnailImageScalingSpecification
T@"MSImageScalingSpecification",R,&,N,V_thumbnailImageScalingSpecification
T@,W,N,V_delegate
nextMMCSItemID
serverSideConfigVersion
T@"<NSObject>",&,N,V_object
create table if not exists CommandQueue (
   ord                   integer,
   command               text,
   params                blob,
   personID              text,
   albumGUID             text,
   assetCollectionGUID   text
create index if not exists CommandQueueByOrder on CommandQueue (ord asc);
create table if not exists PendingCommandQueue (
   ord                   integer,
   command               text,
   params                blob,
   personID              text,
   albumGUID             text,
   assetCollectionGUID   text
create index if not exists PendingCommandQueueByOrder on PendingCommandQueue (ord asc);
create table if not exists PendingAssetCollections (
   assetCollectionGUID   text unique,
   albumGUID             text
create table if not exists DownloadQueue (
  ord                  integer,
  isThumbnail          integer default 0,
  isInflight           integer default 0,
  GUID                 text,
  albumGUID            text,
  assetCollectionGUID  text,
  batchCreationDate    real,
  photoCreationDate    real,
  errorCount           integer default 0,
  album                blob,
  object               blob
create index if not exists DownloadQueueGeneralOrder on DownloadQueue (isThumbnail asc, albumGUID asc, batchCreationDate asc, photoCreationDate asc);
create index if not exists DownloadQueueGeneralReverseOrder on DownloadQueue (isThumbnail asc, albumGUID asc, batchCreationDate desc, photoCreationDate asc);
create table if not exists UploadQueue (
  ord                  integer,
  uploadPriority       integer default 0,
  GUID                 text,
  albumGUID            text,
  errorCount           integer default 0,
  album                blob,
  object               blob
create index if not exists UploadQueueByOrder on UploadQueue (ord asc);
create index if not exists UploadQueueByGUID on UploadQueue (GUID asc);
create index if not exists DownloadQueueByGUID on DownloadQueue (GUID asc);
analyze;
alter table DownloadQueue add column batchCreationDate real;
alter table DownloadQueue add column photoCreationDate real;
alter table PendingAssetCollections add column albumGUID text;
alter table UploadQueue add column uploadPriority integer
alter table DownloadQueue drop column album
alter table DownloadQueue add column isInflight integer
select max(ord) from CommandQueue;
select min(ord) from CommandQueue;
insert into CommandQueue (ord, command, params, personID, albumGUID, assetCollectionGUID) values (?, ?, ?, ?, ?, ?);
select max(ord) from PendingCommandQueue;
insert into PendingCommandQueue (ord, command, params, personID, albumGUID, assetCollectionGUID) values (?, ?, ?, ?, ?, ?);
select command, params, personID, albumGUID, assetCollectionGUID from PendingCommandQueue where assetCollectionGUID = ?;
delete from PendingCommandQueue where AssetCollectionGUID = ?;
select command, params, personID, albumGUID, assetCollectionGUID from PendingCommandQueue where albumGUID = ?;
delete from PendingCommandQueue where albumGUID = ?;
select ord, command, params, personID, albumGUID, assetCollectionGUID from CommandQueue where ord >= ? order by ord limit 1;
select ord, command, params, personID, albumGUID, assetCollectionGUID from CommandQueue order by ord limit 1;
update CommandQueue set params = ? where ord = ?;
-[MSASPersonModel setParams:forCommandWithIdentifier:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/MSASPersonModel.m
paramsDataLength < INT_MAX
delete from CommandQueue where ord = ?;
delete from %@;
CommandQueue
PendingCommandQueue
PendingAssetCollections
DownloadQueue
UploadQueue
select count(*) from CommandQueue where command = ?;
select count(*) from CommandQueue;
select assetCollectionGUID from PendingAssetCollections where assetCollectionGUID = ? limit 1;
insert or ignore into PendingAssetCollections (assetCollectionGUID, albumGUID) values (?, ?);
delete from PendingAssetCollections where assetCollectionGUID = ?;
delete from PendingAssetCollections where albumGUID = ?;
select count(*) from %@ where albumGUID = ?
select count(*) from %@;
update %@ set errorCount = ? where GUID = ?;
delete from %@ where GUID = ?;
select GUID from %@ where GUID = ? limit 1;
insert into DownloadQueue (ord, object, GUID, albumGUID, assetCollectionGUID, isThumbnail, batchCreationDate, photoCreationDate) values (?, ?, ?, ?, ?, ?, ?, ?);
-[MSASPersonModel enqueueAssetForDownload:inAlbumWithGUID:]_block_invoke
assetArchiveLength <= INT_MAX
select object, albumGUID, errorCount from DownloadQueue where assetCollectionGUID = :assetcol and isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate asc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where assetCollectionGUID = :assetcol and isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate desc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where albumGUID = :album and isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate asc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where albumGUID = :album and isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate desc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate asc, photoCreationDate asc limit:lim;
select object, albumGUID, errorCount from DownloadQueue where isThumbnail = :thumb and isInflight = :inflight order by albumGUID asc, batchCreationDate desc, photoCreationDate asc limit:lim;
:assetcol
:album
:thumb
:inflight
:lim
select ord from DownloadQueue where assetCollectionGUID = :assetcol limit 1;
select ord from DownloadQueue where albumGUID = :album limit 1;
select ord from DownloadQueue limit 1;
select count(*) from DownloadQueue where assetCollectionGUID = :assetcol;
select count(*) from DownloadQueue where albumGUID = :album;
select count(*) from DownloadQueue;
update or ignore DownloadQueue set isInflight = 1 where GUID = ?;
insert into UploadQueue (ord, object, album, GUID, albumGUID, uploadPriority) values (?, ?, ?, ?, ?, ?);
-[MSASPersonModel enqueueAssetCollectionForUpload:album:]_block_invoke
objectArchiveLength <= INT_MAX
albumArchiveLength <= INT_MAX
select object, album, errorCount from UploadQueue;
@8@?0^{sqlite3_stmt=}4
select object, album, errorCount from UploadQueue where albumGUID = :alb and uploadPriority <= :priority order by uploadPriority,ord limit :lim;
select object, album, errorCount from UploadQueue where uploadPriority <= :priority order by uploadPriority,ord limit :lim;
:alb
:priority
shouldDownloadEarliestPhotosFirst
TB,N,V_shouldDownloadEarliestPhotosFirst
create table if not exists NextActivity(
   personID              text unique primary key,
   nextActivity          float
create index if not exists NextActivityByDate on NextActivity (nextActivity asc);
select nextActivity from NextActivity order by nextActivity asc limit 1;
select personID, nextActivity from NextActivity;
insert or replace into NextActivity (personID, nextActivity) values (?, ?);
delete from NextActivity where personID = ?;
delete from NextActivity;
MSASModelBase statement queue - %@
MSASModelBase db queue - %@
pragma cache_size = -128;
savepoint migration;
release savepoint migration;
rollback transaction to savepoint migration;
-shm
-wal
-journal
create table if not exists Properties(
   key             text unique primary key,
   value           blob
insert or replace into Properties (key, value) values ('version', ?);
select value from Properties where key = ?
insert or replace into Properties (key, value) values (?, ?);
-[MSASModelBase dbQueueSetPersistentData:forKey:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/MSASModelBase.m
dataLength <= INT_MAX
delete from Properties where key = ?;
savepoint save;
release savepoint save;
rollback transaction;
statementQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_statementQueue
statements
T^{__CFDictionary=},N,V_statements
dbQueueDB
T^{sqlite3=},R,N,V_db
dbQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dbQueue
dbWasRecreated
TB,N,V_dbWasRecreated
T@"MMCSEngine",W,N,V_engine
TL,N,V_count
itemIDs
T^Q,N,V_itemIDs
itemFlags
T^I,N,V_itemFlags
signatures
T^*,N,V_signatures
authTokens
T^*,N,V_authTokens
workPathURL
appIDHeader
dataClass
options
modes
com.apple.MMCSKit.itemIDToAssetMapQueue
com.apple.MMCSKit.requestorContextQueue
com.apple.MMCSKit.autoItemIDDictionaryQueue
Performance logging enabled.
Performance logging disabled.
ERROR_CANNOT_GET_FD_P_ASSET
ERROR_CANNOT_FIND_ASSET_P_ITEMID
ERROR_CANNOT_REGISTER_FILE
nextItemID
nextItemID.plist
Unknown
None
Pending
Authorizing
Transferring
Cancelling
Done
Chunking
Acknowledging
threadKeepAliveTimer
T@"NSTimer",&,N,V_threadKeepAliveTimer
isDone
TB,N,V_isDone
T@"<MMCSEngineDelegate>",W,N,V_delegate
hasOutstandingActivity
autoGenerateItemID
TB,N,V_autoGenerateItemID
isMetricsGatheringEnabled
TB,N,V_isMetricsGatheringEnabled
workThread
T@"NSThread",&,N,V_workThread
kMMCSKitErrorDomain
MMCSKit
Not following any more underlying errors.
ERROR_ASSET_UPLOADER_ORPHANED
state
Ti,N,V_state
itemsInFlight
T@"NSMutableArray",&,N,V_itemsInFlight
assetCollectionsToItemInFlightMap
T@"NSMutableDictionary",&,N,V_assetCollectionsToItemInFlightMap
assetToAssetCollectionMap
T@"NSMutableDictionary",&,N,V_assetToAssetCollectionMap
finishedAssetCollections
T@"NSMutableArray",&,N,V_finishedAssetCollections
assetCollectionsWithAuthorizationError
T@"NSMutableSet",&,N,V_assetCollectionsWithAuthorizationError
didEncounterNetworkConditionError
TB,N,V_didEncounterNetworkConditionError
assetCollectionGUIDToRequestorContext
T@"NSMutableDictionary",&,N,V_assetCollectionGUIDToRequestorContext
T@"<MSASAssetUploaderDelegate>",W,D,N
MSASAssetDownloader.downloadLatency
MSASAssetDownloader.downloadRate
ERROR_ASSET_DOWNLOADER_ORPHANED
v20@?0d4d12
assetToItemInFlightMap
T@"NSMutableDictionary",&,N,V_assetToItemInFlightMap
finishedAssets
T@"NSMutableArray",&,N,V_finishedAssets
isDownloadingThumbnails
TB,N,V_isDownloadingThumbnails
currentFocusAlbumGUID
T@"NSString",&,N,V_currentFocusAlbumGUID
currentFocusAssetCollectionGUID
T@"NSString",&,N,V_currentFocusAssetCollectionGUID
isWaitingForFirstDownloadEvent
TB,N,V_isWaitingForFirstDownloadEvent
objectGUID
T@"NSString",&,N,V_objectGUID
downloadBatchPerfGUID
T@"NSString",&,N,V_downloadBatchPerfGUID
T@"<MSASAssetDownloaderDelegate>",W,D,N
MSASAssetTransfererDidIdle
MSASAssetTransferer work queue
MSASAssetTransferer event queue
com.apple.Dataclass.SharedStreams
MSPlatformPerformanceLoggingSettingDidChange
-[MSASAssetTransferer _pathForPersonID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/MSASAssetTransferer.m
ERROR_ASSET_TRANS_MISSING_URL
ERROR_ASSET_TRANS_MISSING_MMCS_TOKEN
ERROR_ASSET_TRANS_MMCS_TOKEN_TOO_OLD
ERROR_ASSET_TRANS_CANCELED
T@"NSString",C,N,V_personID
T@"MMCSEngine",R,N,V_engine
maxMMCSTokenValidityTimeInterval
Td,N,V_maxMMCSTokenValidityTimeInterval
model
T@"MSASPersonModel",W,N,V_model
backoffManager
T@"MSBackoffManager",W,N,V_backoffManager
T@"NSString",C,N,V_focusAlbumGUID
T@"NSString",C,N,V_focusAssetCollectionGUID
maxBatchCount
Ti,N,V_maxBatchCount
maxRetryCount
Ti,N,V_maxRetryCount
+[MSProtocolUtilities Win32SHA1OfUDID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSProtocolUtilities.m
udidLength < UINT32_MAX
CFBundleShortVersionString
%@/%@
<%@><%@><%@ (%@)>
com.apple.mediastream
sharedstreams
mpsstate
X-MMe-Client-Info
application/protobuf
Content-Type
com.apple.photos.cloud
v12@?0@"NSString"4@"NSError"8
received an error from server
Missing data in the response
Invalid status code %ld in the response
v16@?0@"NSData"4@"NSURLResponse"8@"NSError"12
emails
phones
 Album GUID: %@
 email: %@
 emails: %@
 phones: %@
 Full Name: %@
 PersonID: %@
 Subscription Date: %@
owned
pending
subscribed
unsubscribed
declined
unshared
undefined
 State: %@
 IsMine
T@"NSArray",&,N,V_emails
T@"NSArray",&,N,V_phones
MSArchiverUtilitiesErrorDomain
Empty data
clientTimestamp
isLike
isCaption
isBatchComment
content
%@, GUID: %@, ID: %d, name: %@ (%@ %@) server timestamp: %@, client timestamp: %@, is Like: %d, is Caption: %d, is Batch Comment: %d, is Mine: %d, content: %@
(Present)
(No)
%@, GUID: %@, ID: %d, server timestamp: %@, client timestamp: %@, is Like: %d, is Caption: %d, is Batch Comment: %d, is Mine: %d, content: %@
Ti,N,V_ID
T@"NSDate",&,N,V_clientTimestamp
TB,N,V_isLike
TB,N,V_isCaption
TB,N,V_isBatchComment
T@"NSString",&,N,V_content
-[MSASModelEnumerator init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/Model/MSASModelEnumerator.m
T^{sqlite3=},N,V_db
stmt
T^{sqlite3_stmt=},N,V_stmt
stepBlock
T@?,C,N,V_stepBlock
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
unviewedFlag
stateCtag
largestCommentID
lastviewedctag
lastassetposition
lastcommentposition
lastcommenttimestamp
preFlushPendingCommentQueue
flushPendingCommentQueue
reconstruct
v16@?0@4I8^B12
pendingAlbumGUIDsWithKeyValueChanges
T@"NSMutableSet",&,N,V_pendingAlbumGUIDsWithKeyValueChanges
pendingAlbumChanges
T@"NSMutableSet",&,N,V_pendingAlbumChanges
pendingAlbumGUIDsWithSharingInfoChanges
T@"NSMutableSet",&,N,V_pendingAlbumGUIDsWithSharingInfoChanges
pendingAlbumGUIDToAssetCollections
T@"NSMutableDictionary",&,N,V_pendingAlbumGUIDToAssetCollections
subscriptionMethod
MSASServerSideModel member queue
v8@?0@"<MSASModelObserver>"4
create table if not exists Albums (
  GUID             text unique primary key,
  name             text,
  ctag             text,
  foreignCtag      text,
  url              text,
  obj              blob,
  userInfo         blob
create index if not exists AlbumsByName on Albums (name asc);
create index if not exists AlbumsByGUID on Albums (GUID asc);
create table if not exists AlbumMetadata (
  albumGUID        text, 
  key              text, 
  value            text,
  constraint UniquePerAlbum primary key (albumGUID, key) on conflict replace);
create table if not exists AccessControls (
  GUID             text unique primary key,
  email            text,
  albumGUID        text,
  obj              blob,
  userInfo         blob
create index if not exists AccessControlsByAlbumGUID on AccessControls (albumGUID asc);
create index if not exists AccessControlsByAlbumGUID on AccessControls (email asc);
create table if not exists Invitations (
  GUID             text unique primary key,
  albumGUID        text,
  email            text,
  obj              blob,
  userInfo         blob
create index if not exists InvitationsByAlbumGUID on Invitations (albumGUID asc);
create index if not exists InvitationsByEmail on Invitations (albumGUID asc);
create table if not exists AssetCollections (
  GUID                text unique primary key,
  ctag                text,
  albumGUID           text,
  batchDate           real,
  photoDate           real,
  photoNumber         int,
  obj                 blob,
  userInfo            blob
create index if not exists AssetCollectionsByAlbumGUID on AssetCollections (albumGUID asc, batchDate asc, photoDate asc, GUID asc);
create table if not exists AssetCollectionMetadata (
  assetCollectionGUID  text, 
  albumGUID            text, 
  key                  text, 
  value                text,
  constraint UniquePerAssetCollection primary key (assetCollectionGUID, key) on conflict replace);
create index if not exists AssetCollectionMetadataByAlbum on AssetCollectionMetadata (albumGUID asc);
create table if not exists Comments (
  GUID                 text unique primary key,
  id                   int,
  timestamp            real,
  assetCollectionGUID  text,
  isCaption            int,
  isMine               int,
  obj                  blob,
  userInfo             blob
create index if not exists CommentsByAssetCollectionGUID on Comments (assetCollectionGUID asc, timestamp asc, GUID asc);
create index if not exists CommentsByAssetCollectionGUIDAndMine on Comments (assetCollectionGUID asc, timestamp asc, isMine asc);
create table if not exists GroupedCommand (
  command              text,
  variant              blob,
  invariant            blob
create table if not exists CommentCheckQueue (
  assetCollectionGUID  text unique,
  albumGUID            text
select obj from Albums order by GUID asc;
select GUID from Albums order by GUID asc;
select obj from AccessControls where albumGUID = '%@' order by email asc;
select GUID from AccessControls where albumGUID = '%@' order by email asc;
select obj from Invitations order by email;
select GUID from Invitations order by email;
v16@?0@"NSError"4@"NSURL"8@"NSDate"12
select obj from AssetCollections where albumGUID = '%@' order by albumGUID asc, batchDate asc, photoDate asc, GUID asc;
select GUID from AssetCollections where albumGUID = '%@' order by albumGUID asc, batchDate asc, photoDate asc, GUID asc;
select obj from Comments where assetCollectionGUID = '%@' order by timestamp asc;
select obj from Comments where assetCollectionGUID = ? and isCaption != 0 order by timestamp limit 1;
update or ignore Albums set userInfo = ? where GUID = ?;
update or ignore AssetCollections set userInfo = ? where GUID = ?;
update or ignore AccessControls set userInfo = ? where GUID = ?;
update or ignore Invitations set userInfo = ? where GUID = ?;
update or ignore Comments set userInfo = ? where GUID = ?;
MSASModelDidUpdateServerCommunicationBackoffDateNotification
ERROR_MODEL_INVALID_INVITATION
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/Model/MSASServerSideModel.m
<Unknown File>
Invalid parameter not satisfying: %@
ERROR_MODEL_CANNOT_SET_PUBLIC
ERROR_MODEL_CANNOT_UNSET_PUBLIC
ERROR_MODEL_CANNOT_SET_MULTIPLECONTRIBUTORS
ERROR_MODEL_CANNOT_UNSET_MULTIPLECONTRIBUTORS
ERROR_MODEL_INVALID_ALBUM
ERROR_MODEL_INVALID_COMMENT
select obj, name, ctag, foreignCtag, url, userInfo from Albums where GUID = ?;
insert or replace into Albums (GUID, name, ctag, foreignCtag, obj, url, userInfo) values (?, ?, ?, ?, ?, ?, ?);
update or ignore Albums set obj = ?, ctag = ? , foreignCtag = ? where GUID = ?;
delete from Albums where GUID = ?;
select obj, email, albumGUID, userInfo from AccessControls where GUID = ?;
insert or replace into AccessControls (GUID, email, albumGUID, obj, userInfo) values (?, ?, ?, ?, ?);
delete from AccessControls where GUID = ?;
select obj, albumGUID, email, userInfo from Invitations where GUID = ?;
select obj, GUID, email, userInfo from Invitations where albumGUID = ?;
insert or replace into Invitations (GUID, albumGUID, email, obj, userInfo) values (?, ?, ?, ?, ?);
delete from Invitations where GUID = ?;
select obj, ctag, albumGUID, batchDate, photoDate, photoNumber, userInfo from AssetCollections where GUID = ?;
insert or replace into AssetCollections (GUID, ctag, albumGUID, batchDate, photoDate, photoNumber, obj, userInfo) values (?, ?, ?, ?, ?, ?, ?, ?);
delete from AssetCollections where GUID = ?;
select count(GUID) from AssetCollections where albumGUID = ?
select obj, id, timestamp, assetCollectionGUID, isCaption, userInfo from Comments where GUID = ?;
select obj, GUID, timestamp, isCaption, userInfo from Comments where id = ? and assetCollectionGUID = ?;
insert or replace into Comments (GUID, id, timestamp, assetCollectionGUID, isCaption, isMine, obj, userInfo) values (?, ?, ?, ?, ?, ?, ?, ?);
delete from Comments where GUID = ?;
select count(GUID) from Comments where assetCollectionGUID = ?;
select max(id) from Comments where assetCollectionGUID = ?;
select assetCollectionGUID from Comments where assetCollectionGUID = ? and isMine > 0;
select value from AlbumMetadata where albumGUID = ? and key = ?;
insert or replace into AlbumMetadata (albumGUID, key, value) values (?, ?, ?);
delete from AlbumMetadata where albumGUID = ? and key = ?;
delete from AlbumMetadata where albumGUID = ?;
select value from AssetCollectionMetadata where assetCollectionGUID = ? and key = ?;
insert or replace into AssetCollectionMetadata (assetCollectionGUID, albumGUID, key, value) values (?, ?, ?, ?);
delete from AssetCollectionMetadata where assetCollectionGUID = ? and key = ?;
delete from AssetCollectionMetadata where assetCollectionGUID = ?;
select max(photoNumber) from AssetCollections where AlbumGUID = ?
select count(*) from AssetCollectionMetadata where albumGUID = ? and key = 'unviewedFlag' and value = '1';
select count(albumGUID) from AlbumMetadata where key = 'unviewedFlag' and value = '1';
select count(GUID) from AssetCollections where albumGUID = ? and photoNumber > ?;
delete from CommentCheckQueue;
select assetCollectionGUID, albumGUID from CommentCheckQueue order by albumGUID;
insert or replace into CommentCheckQueue (assetCollectionGUID, albumGUID) values (?, ?);
select GUID from AssetCollections where albumGUID = ? and photoNumber > ? order by albumGUID asc, batchDate asc, photoDate asc, GUID asc;
Model.error.invalidInvitationGUID_GUID
Model.error.invalidACLGUID_GUID
Model.error.invalidAssetCollectionGUID_GUID
Model.error.protocol
i12@?0@4@8
v16@?0@"NSArray"4@"NSArray"8@"NSDictionary"12
v12@?0@"NSArray"4@"NSArray"8
observers
T@"NSCountedSet",&,N,V_observers
T@"MSASStateMachine",R,N
commandQueue
T@"MSASServerSideModelGroupedCommandQueue",&,N,V_commandQueue
pendingChanges
T@"MSASPendingChanges",&,N,V_pendingChanges
T@"MSASStateMachine",N,V_counterpartInstance
insert or rollback into GroupedCommand (command, invariant, variant) values (?, ?, ?);
select count(*) from GroupedCommand;
select rowid, command, invariant, variant from GroupedCommand order by rowid asc limit ?;
delete from GroupedCommand where rowid <= ?;
MSSqliteBindDataOrNull
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSSqliteUtilities.m
MSSqliteTrapForDBLockError
MSDaemon idle count queue
UIBusyCount
Ti,N,V_UIBusyCount
hysteresisTimer
T@"NSTimer",&,N,V_hysteresisTimer
stabilizedIsBusy
TB,N,V_stabilizedIsBusy
idleCountQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_idleCountQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/MSPerformanceLogger.m
create table if not exists PerfLog (
   rowid       integer primary key asc autoincrement,
   operation   text,
   GUID        text,
   event       text,
   timestamp   float);
create index if not exists PerfLogByGUID on PerfLog (GUID asc, operation asc);
insert into PerfLog (operation, GUID, event, timestamp) values (?, ?, ?, ?);
start
stop
delete from PerfLog where operation = ? and GUID = ?;
select event, timestamp from PerfLog where operation = ? and GUID = ? order by rowid asc;
MSASPServerSideConfigurationDidChangeNotification
MSASPDidReceiveRetryAfterNotification
x-apple-mme-sharedstreams-client-token
X-Apple-MMe-Host
x-apple-mme-sharedstreams-version
x-apple-mme-sharedstreams-config-version
Original
PosterFrame
360p
720p
videoType
uploadpending
assetguid
collectionmetadata
files
servertimestamp
personid
fullname
createdbyme
candelete
assetnumber
commentposition
commenttimestamp
commentservertimestamp
iscaption
isbatchcomment
commenttype
MSASProtocol connections queue
MSASProtocol work queue
MSASProtocol member queue
6oWcrYvjLx0f
ERROR_MSAS_PROT_SHUTTING_DOWN
ERROR_MSAS_PROT_STOPPING
-[MSASProtocol sendURLRequest:method:bodyObj:checkServerSideConfigVersion:completionBlock:]_block_invoke_2
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/MSASProtocol.m
!self.gate
ERROR_MSAS_PROT_CANNOT_ENCODE
v16@?0@"NSURLResponse"4@"NSData"8@"NSError"12
text/plist
ERROR_MSAS_PROT_HTTP_ERROR_P_CODE
ERROR_MSAS_PROT_VISITOR_AUTH_FAILURE
ERROR_MSAS_PROT_CANNOT_CONTINUE
createalbum
updatealbum
putassets
getuploadtokens
getvideourl
uploadcomplete
unshare
addcomment
setalbumpublic
setallowcontributions
deletealbum
deleteassets
deletecomment
getchanges
sharinginfo
albumsummary
getassets
gettokens
subscribe
unsubscribe
reportspam
getcomments
setcommentposition
albumstate
setassetstate
setalbumstate
configuration
albumurl
albumguid
attributes
ERROR_MSAS_PROT_CANNOT_CREATE_ALBUM
albumctag
4032
ERROR_MSAS_PROT_LIMIT_ALBUMS_P_COUNT
v16@?0@"NSHTTPURLResponse"4@"NSError"8@12
contenturl
pendinguploadid
contenttokens
reason
ASSET_ALREADY_EXISTS
ERROR_MSAS_PROT_COLL_ALREADY_EXISTS
ERROR_MSAS_PROT_COLL_REJECTED
ERROR_MSAS_PROT_COLL_IGNORED
4036
ERROR_MSAS_PROT_LIMIT_PHOTOS_P_COUNT
checksums
ERROR_MSAS_PROT_LIMIT_BANDWIDTH
ERROR_MSAS_PROT_MISMATCHED_COLLECTION
RROR_SHARING_BAD_FIELD_P_FIELD
url_expiry
en_US
yyyy-MM-dd'T'HH:mm:ss'Z'
maxallowed
promote
videoCompl
ERROR_MSAS_PROT_BAD_FIELD_P_FIELD
response body
pending upload ID
assetctag
invitationguid
phonenumbers
alternateemails
invitations
4031
ERROR_MSAS_PROT_LIMIT_SUBSCRIBERS_P_COUNT
4033
ERROR_MSAS_PROT_LIMIT_INVITATIONS_P_COUNT
sharingtype
phonenumber
invitationtoken
ERROR_MSAS_PROT_LIMIT_COMMENTS_P_COUNT
4035
ERROR_MSAS_PROT_LIMIT_COMMENT_LENGTH
ERROR_MSAS_PROT_COMMENT_NO_INDEX
ctagrespected
albumlocation
sharinginfochanges
albumstatechanges
publicurl
isfamilysharealbum
sharinginfochanged
hascomments
ERROR_MSAS_PROT_NOT_REAUTHED
ERROR_MSAS_PROT_LIMIT_SUBSCRIPTIONS_P_COUNT
deletedcommentposition
assetstates
assetstatectag
albumstatectag
gate
T@"MSASPConnectionGate",&,N,V_gate
pendingConnectionsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingConnectionsQueue
pendingConnectionsGroup
T@"NSObject<OS_dispatch_group>",&,N,V_pendingConnectionsGroup
isShuttingDown
TB,N,V_isShuttingDown
headerVersion
T@"NSString",R,N,V_headerVersion
T@"NSString",R,&,N,V_personID
baseURL
T@"NSURL",&,N,V_baseURL
T@"NSString",&,N,V_serverSideConfigVersion
requestedbyme
subscriptiondate
variant
invariant
T@"NSString",C,N,V_command
variantParam
T@"NSDictionary",&,N,V_variantParam
invariantParam
T@"NSDictionary",&,N,V_invariantParam
-[MSASServerSideModelGroupedCommandQueue workQueueEnqueueCommand:variantParam:invariantParam:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreMediaStream_Sim/CoreMediaStream-3272.0.140/AlbumSharing/Model/MSASServerSideModelGroupedCommandQueue.m
self.model
newAlbum
deleteAlbum
newAssetCollection
deleteAssetCollection
newACL
deleteACL
newComment
deleteComment
newInvitation
deleteInvitation
i12@?0@"MSASServerSideModelGroupedCommandQueue"4@"NSArray"8
lastEnqueuedCommand
T@"MSASEnqueuedCommand",&,N,V_lastEnqueuedCommand
%@ Short side: %0.0f min long side: %0.0f max long side: %0.0f
nominalShortSideLength
Tf,N,V_nominalShortSideLength
minimumLongSideLength
Tf,N,V_minimumLongSideLength
maximumLongSideLength
Tf,N,V_maximumLongSideLength
Ti,N,V_assetTypeFlags
MSASGroupedQueue work queue
MSASGroupedQueue member queue
idleTimerGate
T@"MSTimerGate",&,N,V_idleTimerGate
stalenessTimerGate
T@"MSTimerGate",&,N,V_stalenessTimerGate
T@"MSASServerSideModel",W,N,V_model
Ti,N,V_maxGroupedCallbackEventBatchCount
Td,N,V_maxGroupedCallbackEventIdleInterval
Td,N,V_maxGroupedCallbackEventStaleness
isAssertingBusyAssertion
TB,R,N,V_isAssertingBusyAssertion
cellular
powerRequired
bitRate
useCellular
TB,R,N,V_useCellular
TB,R,N,V_powerRequired
Tf,R,N,V_bitRate
T@"NSString",R,N,V_videoType
TI,R,N,V_mediaAssetType
init
alloc
initWithService:
addDelegate:queue:
dictionary
accounts
anyObject
setMetadataValue:forKey:
setWithObject:
archivedDataWithRootObject:
setObject:forKey:
numberWithDouble:
numberWithBool:
dictionaryWithObjects:forKeys:count:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
userInfo
stringWithFormat:
enumerateKeysAndObjectsUsingBlock:
count
setWithCapacity:
countByEnumeratingWithState:objects:count:
phones
addObject:
objectForKey:
removeObjectForKey:
delegate
MSASStateMachine:didFinishSendingInvitationByPhone:toOwnedAlbum:info:error:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
addPendingPhoneInvitations:toOwnedAlbum:inStateMachin:
removeSharingRelationships:forAlbum:
.cxx_destruct
stateMachine
setStateMachine:
album
setAlbum:
idsService
setIdsService:
sendMessageIdentifierToPhone
setSendMessageIdentifierToPhone:
_stateMachine
_album
_idsService
_sendMessageIdentifierToPhone
nextActivityDate
compare:
personIDsWithOutstandingActivities
containsObject:
isInRetryState
mediaStreamDaemonDidIdle:
mediaStreamDaemonDidUnidle:
publisherForPersonID:
publisherPluginClass
publisherPluginForPersonID:
publisherWillAssignPluginAsDelegateOfPublisher:
setDelegate:
setDaemon:
subscriberForPersonID:
subscriberPluginClass
subscriberPluginForPersonID:
subscriberWillAssignPluginAsDelegateOfSubscriber:
sharingManagerForPersonID:
sharingPluginClass
sharingPluginForPersonID:
sharingManagerWillAssignPluginAsDelegateOfSharingManager:
deleterForPersonID:
deletePluginClass
deleterPluginForPersonID:
deleterWillAssignPluginAsDelegateOfDeleter:
configManagerForPersonID:
retainBusy
_boundPublisherForPersonID:
publish
_boundSubscriberForPersonID:
checkForOutstandingActivities
_boundDeleterForPersonID:
performOutstandingActivities
releaseBusy
reenqueueQuarantinedAssetCollections
existingPublisherForPersonID:
abort
existingSubscriberForPersonID:
existingDeleterForPersonID:
existingSharingManagerForPersonID:
existingConfigManagerForPersonID:
stopAllActivities
abortAllActivities
forgetPersonID:
defaultManager
removeItemAtPath:error:
enqueueAssetCollections:outError:
dequeueAssetCollectionWithGUIDs:outError:
MSErrorWithDomain:code:description:
checkForNewAssetCollections
personIDsForPollingTriggeredByPushNotification
isEqualToString:
didReceivePushNotificationForPersonID:
pollForSubscriptionUpdatesForPersonID:
resetSync
computeHashForAsset:
subscribedStreams
ownSubscribedStream
_boundSharingManagerForPersonID:
shares
setShares:
shareFromPushUserInfo:outSourcePersonID:outTargetPersonID:outError:
sharesForPersonID:
personID
sharingOurStream
sharingTheirStream
firstName
lastName
fullNameFromFirstName:lastName:
length
emailAddress
invitationStringsWithTitle:body:
sendInvitationsForShares:
respondToInvitation:accept:
modifyShare:
removeShare:
personIDIsAcceptingInvitations:
refreshCurrentShareState
objectAtIndex:
removeObjectAtIndex:
array
mutableCopy
_findShareWithPersonID:inArray:
notificationStringsWithTitle:body:sourcePersonID:
_removeShareWithPersonID:inArray:
_boundServerSideConfigManagerForPersonID:
config
serverSideConfigurationForPersonID:
refreshServerSideConfigurationForPersonID:
refreshConfiguration
defaultCenter
dictionaryWithObjectsAndKeys:
postNotificationName:object:userInfo:
deleteAssetCollections:
retryOutstandingActivities
_clearInstantiatedPublishersByPersonID
publisherWillDeassignPluginAsDelegateOfPublisher:
removeObject:
deactivate
_clearInstantiatedSubscribersByPersonID
subscriberWillDeassignPluginAsDelegateOfSubscriber:
_clearInstantiatedSharingManagersByPersonID
sharingManagerWillDeassignPluginAsDelegateOfSharingManager:
hasOutstandingActivity
personIDHasOutstandingPublications:
didIdle
didUnidle
reenqueueQuarantinedActivitiesWithReason:
abortAllActivityForPersonID:
enqueueAssetCollection:personID:outError:
dequeueAssetCollectionWithGUIDs:personID:outError:
pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:
resetSubscriberSyncForPersonID:
computeHashForAsset:personID:
subscribedStreamsForPersonID:
ownSubscribedStreamForPersonID:
_setShares:forPersonID:
invitationFromPushNotificationUserInfo:outSourcePersonID:outTargetPersonID:
invitationStringsFromInvitation:targetPersonID:
sendInvitations:forPersonID:
respondToInvitation:forPersonID:accept:
modifyShare:forPersonID:
removeShare:forPersonID:
refreshShareStatesForPersonID:
notificationStringsForShareStateTransitionOldShares:newShares:
didReceiveServerSideConfigurationVersion:forPersonID:
didReceiveNewServerSideConfigurationForPersonID:
deleteAssetCollections:forPersonID:
start
stop
didReceiveNewShareState:oldShareState:forPersonID:
showInvitationFailureAlertForPersonID:failures:
didReceiveAuthenticationFailureForPersonID:
didReceiveAuthenticationSuccessForPersonID:
didExceedPublishQuotaForPersonID:retryDate:
didReceiveGlobalResetSyncForPersonID:
mayDownloadPersonID:
_delegate
_retainedObjects
baseURLForPersonID:
initWithPersonID:baseURL:
forget
allKeys
allValues
_isInRetryState
initWithPersonID:
initWithPath:
_serverSideConfigurationDidChange:
addObserver:selector:name:object:
_refreshServerSideConfiguredParameters
nextActivityDateForPersonID:
removeObserver:
deactivateRemoveAllFiles:
dealloc
_latestNextActivityDate
_setMasterNextActivityDate:forPersonID:
dateWithTimeIntervalSinceNow:
arrayWithCapacity:
assetCollectionID
MSMakeUUID
setAssetCollectionID:
wrapperWithObject:size:
appendObjectWrappers:
_updateMasterManifest
setWithArray:
allObjectWrappersMaxCount:
object
removeObjectWrappersFromQueue:
longLongValueForParameter:forPersonID:defaultValue:
intValueForParameter:forPersonID:defaultValue:
initWithObjects:
objectForKey:forPersonID:defaultValue:
removeAllObjects
longLongValue
numberWithLongLong:
currentThread
mainThread
performSelectorOnMainThread:withObject:waitUntilDone:
setFileHash:
setProtocolFileSize:
arrayWithObject:
_didFinishUsingAssetCollections:
masterAsset
_registerAsset:
derivedAssets
initialFailureDate
setInitialFailureDate:
setErrorCount:
publisher:didEncounterError:publishingAssetCollections:
path
fileData
publisher:didRequestOpenFileDescriptorForAsset:
fileExistsAtPath:isDirectory:
fileName
collectionWithMasterAsset:fileName:
_verifyAssetFile:
_collectionWithNoDerivatives:
size
_checkAssetCollectionFiles:
policyMayUpload
date
hasDeactivated
_isAllowedToUpload
_requestDerivatives
_sendMetadataToStreams
_sendFilesToMMCS
_sendUploadComplete
smallestObjectWrappersTargetTotalSize:maxCount:
objectWrappersWithZeroSizeMaxCount:
objectsFromWrappers:
masterAssetHash
metadata
allObjectWrappersOrderedByDescendingErrorCountMaxCount:
errorCount
commitErrorCountsForObjectWrappers:
publisher:didRequestSubmissionOfAssetCollections:
fileHash
MSRemoveOneObjectByPointerComparison:
addObjectsFromArray:
didFinishUsingAssets:
submitAssetCollectionsForPublication:skipAssetCollections:
type
_fileSize
publishStorageProtocol:didRequestFDForAsset:
_fileSizeOnDisk
publishStorageProtocol:didFinishUsingFD:forAsset:
MSVerboseDescription
_removeAssetsInAssetCollectionWrappersFromAssetMap:
_checkObjectWrappers:
uniqueID
appendFormat:
initWithFormat:
_addAssetToFileHashMap:
sendMetadataForAssetCollections:
MSErrorWithDomain:code:description:underlyingError:
_invalidStreamsResponseErrorUnderlyingError:
MSHexData
setMMCSAccessHeader:
URLWithString:
setStorageProtocolURL:
MMCSAccessHeader
MSIsTemporaryNetworkError
MSIsQuotaError
intValue
_didReceiveStreamsRetryAfterDate:
_backoffStreamsBackoffTimer
isEqualToData:
MSNeedsBackoff
MSIsCounted
removeObjectsInArray:
_quarantineOrDiscardWrappers:withError:
_resetStreamsBackoffTimer
publisher:willPublishAssetCollections:
addMetadataValue:forKey:
contentURLForPersonID:
publishAssets:URL:
setError:
publisher:didRequestCloseFileDescriptor:forAsset:
MSTempFilePath
writeToFile:atomically:
fileSystemRepresentation
MSCanBeIgnored
MSIsFatal
MSIsBadTokenError
MSIsAuthError
error
_categorizeError:setOutIsIgnorable:setOutIsCounted:setOutIsFatal:setOutNeedsBackoff:setOutIsTemporary:setOutIsTokenAuth:setOutIsAuthError:
MSMMCSRetryAfterDate
_didReceiveMMCSRetryAfterDate:
_backoffMMCSBackoffTimer
domain
code
MSIsRegistrationError
_registerAllAssetsForWrapper:
commitObjectsWrappers:
didDetectUnrecoverableCondition
_resetMMCSBackoffTimer
sendUploadCompleteForAssetCollections:
publisher:didFinishPublishingAssetCollections:
_stop
_abortedError
_abort
submitAssetCollectionsForPublication:
publishBatchSize
setPublishBatchSize:
protocol:didReceiveRetryAfterDate:
publishStreamsProtocol:didFinishUploadingMetadataResponse:error:
publishStreamsProtocol:didReceiveAuthenticationError:
publishStreamsProtocol:didFinishSendingUploadCompleteError:
publishStorageProtocol:didFinishUploadingAsset:error:
publishStorageProtocolDidFinishPublishingAllAssets:
_removeAssetFromFileHashMap:
_forget
daemon
storageProtocolURL
publishTargetByteCount
setPublishTargetByteCount:
_daemon
_state
_uploadQueue
_derivativesQueue
_quarantinedQueue
_pendingDerivativesQueue
_requestAuthQueue
_sendingQueueCount
_sendingQueue
_fileHashToAssetMap
_protocol
_storageProtocol
_storageProtocolURL
_tempFiles
_maxSizeByUTI
_publishTargetByteCount
_publishBatchSize
_maxErrorCount
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
_subscriptionsByStreamID
_refreshServerSideConfigurationParameters
_descriptionForState:
_descriptionForRetrievalState:
_hasOutstandingPoll
_userManifest
boolValue
_commitUserManifest
_stopOutSubscriberState:outRetrievalState:
policyMayDownload
_setHasOutstandingPoll:
_isAllowedToDownload
_changeStateTo:
_checkForNewAssetCollections
dictionaryWithCapacity:
ctag
streamID
pollForSubscriptionUpdatesWithAccountAnchors:
_setSubscriptionsByStreamID:
subscriberDidCompleteCheckForNewAssetCollections:
subscribedStreamWithStreamID:
subscriber:didResetSyncForStreamID:
subscriber:willBeginRequestingAssetRetrievalForStreamID:
wasDeleted
subscriber:didReceiveDeleteForAssetCollections:streamID:
subscriber:didRequestAssetRetrievalForAssetCollections:streamID:
subscriber:didFinishRequestingAssetRetrievalForStreamID:
setCtag:
subscriber:didFindDisappearedSubscriptionforStreamID:
subscriber:didFailToRetriveSubscriptionUpdateWithError:
_didFinishRetrievingSubscriptionUpdate
_didReceiveAuthenticationError:
shareStateFromProtocol:
subscriber:didFinishRetrievingAsset:error:
_retrieveAssets
_changeRetrievalStateTo:
_retrieveNextAssets
_reauthorizeAssets
raise:format:
retrieveAssets:
requestReauthorizationForAssets:
indexOfObject:inWrapperArray:
_finishedRetrievingAsset:
subscribeStreamsProtocol:willReceiveUpdatesForPersonID:wasReset:metadata:
subscribeStreamsProtocol:didReceiveAssetCollections:forPersonID:
subscribeStreamsProtocol:didFinishReceivingUpdatesForPersonID:ctag:
subscribeStreamsProtocol:didFindDisappearedSubscriptionForPersonID:
subscribeStreamsProtocol:didFindTemporarilyUnavailableSubscriptionForPersonID:
subscribeStreamsProtocol:didFindShareState:
subscribeStreamsProtocol:didFinishError:
subscribeStreamsProtocol:didReceiveAuthenticationError:
subscribeStorageProtocol:didFinishRetrievingAsset:error:
subscribeStorageProtocolDidFinishRetrievingAllAssets:
reauthorizationProtocol:reauthorizedAssets:rejectedAssets:error:
reauthorizationProtocol:didReceiveAuthenticationError:
targetRetrievalByteCount
setTargetRetrievalByteCount:
retrievalBatchSize
setRetrievalBatchSize:
_checkOneMoreTime
_newSubscriptionsByStreamID
_retrievalState
_reauthProtocol
_retrievalQueue
_assetsBeingRetrieved
_targetRetrievalByteCount
_retrievalBatchSize
MMCSHash
setMMCSHash:
MMCSUTI
setMMCSUTI:
MMCSItemSize
setMMCSItemSize:
GUID
initWithGUID:
setMasterAssetHash:
setMetadata:
setPath:
MMCSURL
setMMCSURL:
setFileData:
MMCSAccessHeaderTimeStamp
setMMCSAccessHeader:andTimeStamp:
MMCSReceipt
setMMCSReceipt:
assetCollectionGUID
setAssetCollectionGUID:
batchCreationDate
setBatchCreationDate:
photoCreationDate
setPhotoCreationDate:
copy
setUserInfo:
mediaAssetType
setMediaAssetType:
assetDataAvailableOnServer
setAssetDataAvailableOnServer:
isPhoto
isVideo
unsignedLongLongValue
metadataValueForKey:
numberWithUnsignedLongLong:
pathExtension
attributesOfItemAtPath:error:
fileSize
encodeObject:forKey:
absoluteString
encodeInt64:forKey:
encodeInteger:forKey:
encodeBool:forKey:
decodeObjectForKey:
initWithString:
decodeInt64ForKey:
decodeIntegerForKey:
decodeBoolForKey:
MSSafeUnarchiveObjectWithData:outError:
asset
assetWithAsset:
supportsSecureCoding
MMCSOpenNewFileDescriptor
MMCSItemType
MMCSItemID
setMMCSItemID:
MMCSError
setMMCSError:
setMMCSAccessHeaderTimeStamp:
MMCSItemFlags
setMMCSItemFlags:
encodeWithCoder:
initWithCoder:
copyWithZone:
setType:
protocolFileSize
setGUID:
_assetDataAvailableOnServer
_masterAssetHash
_metadata
_path
_MMCSURL
_fileData
_error
_type
_fileHash
_MMCSAccessHeader
_MMCSAccessHeaderTimeStamp
_MMCSReceipt
_GUID
_assetCollectionGUID
_batchCreationDate
_photoCreationDate
_userInfo
_mediaAssetType
_protocolFileSize
initWithMasterAsset:fileName:derivedAssets:
stringWithString:
decodeObjectOfClass:forKey:
collectionWithMasterAsset:fileName:derivedAssets:
setDerivedAssets:
setMasterAsset:
setFileName:
setWasDeleted:
serverUploadedDate
setServerUploadedDate:
_assetCollectionID
_ctag
_masterAsset
_derivedAssets
_fileName
_wasDeleted
_serverUploadedDate
_initialFailureDate
pathMediaStreamDir
stringByAppendingPathComponent:
pathAlbumSharingDir
alphanumericCharacterSet
invertedSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
dataWithBytes:length:
bytes
disable
enable
enabled
setEnabled:
_enabled
MSErrorWithDomain:code:description:suggestion:
errorWithDomain:code:userInfo:
MSErrorWithDomain:code:description:underlyingError:additionalUserInfo:
MSFindPrimaryError
localizedDescription
localizedRecoverySuggestion
_MSVerboseDescriptionRecursionCount:
_MSApplyBlock:
MSContainsErrorWithDomain:code:
MSMakePrimaryError
MSASStateMachineIsCanceledError
initWithCapacity:
keyEnumerator
MSMutableDeepCopyWithZone:
MSDeepCopyWithZone:
MSMutableDeepCopy
MSDeepCopy
MSRemoveOneObject:
cStringUsingEncoding:
stringWithCString:encoding:
MSUniqueID
MSStringWithBool:
getCharacters:range:
initWithBytesNoCopy:length:freeWhenDone:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytes:length:encoding:
MSInitWithBase64Encoding:
MSBase64Encoding
MSHexString
deviceInfoDict
_missingAssetFieldErrorWithFieldName:
unsignedLongValue
_metadataDictForAsset:outError:
_refreshAuthTokenForContext:
putURL
_metadataDictForAssetCollection:outError:
uploadCompleteURL
_resetConnectionVariables
_insertInfoAboutAsset:intoDictionary:outError:
_coreProtocolDidFinishResponse:error:
_coreProtocolDidFailAuthenticationError:
_coreProtocolDidFinishUCResults:error:
_context
_assetCollectionsInFlight
_UCContext
_didReceiveRetryAfterDate:
_didFindServerSideConfigurationVersion:
getURL
_parseChunks
initWithData:encoding:
_pathToChunkIndex:
_parseNextChunk
initWithContentsOfFile:
_assetCollectionsFromCoreArray:personID:outError:
_invalidFieldErrorWithFieldName:suggestion:
_invalidFieldErrorWithFieldName:
_assetFromCoreDictionary:personID:outError:
doubleValue
dateWithTimeIntervalSince1970:
_coreProtocolDidFinishError:
_coreProtocolDidGetDataChunk:
_coreProtocolDidFailAuthentication:
_chunkDidBeginStreamForPersonID:wasReset:metadata:
_chunkDidParseAssetCollections:forPersonID:
_chunkDidEndStreamForPersonID:ctag:
_chunkDidFindSubscriptionGoneForPersonID:
_chunkDidFindSubscriptionTemporarilyUnavailableForPersonID:
_chunkDidFindShareState:
_chunkIndex
_parseContext
shouldEnableNewFeatures
URLWithString:relativeToURL:
deviceInfoDictForPersonID:
theDaemon
authTokenForPersonID:
resetURL
reauthorizeURL
deleteURL
_personID
currentRunLoop
getCFRunLoop
fileURLWithPath:
appBundleInfoString
computeItemIDForAsset:
initWithPersonID:path:
_getFileDescriptorFromItem:
_getUTIFromItem:
_getItemDone:path:error:
_putItemDone:putReceipt:error:
_requestCompleted
engine
_MMCSDirPath
_engine
_engineDirPath
logStringForGetItemState:
stringWithFileSystemRepresentation:length:
logStringForPutItemState:
_putItemsFailure
initWithUnsignedLongLong:
_itemIDToAssetDict
_itemIDs
_signatures
_authTokens
_itemFlags
_itemsInFlight
_tellDelegateProtocolDidFinishRetrievingAssetParams:
_itemCount
dictionaryRepresentation
allocWithZone:
setRetryAfterSeconds:
setHasRetryAfterSeconds:
hasRetryAfterSeconds
mpsAction
setMpsAction:
setHasMpsAction:
hasMpsAction
mpsActionAsString:
StringAsMpsAction:
icplAction
setIcplAction:
setHasIcplAction:
hasIcplAction
icplActionAsString:
StringAsIcplAction:
setVersion:
setHasVersion:
hasVersion
readFrom:
writeTo:
copyTo:
mergeFrom:
retryAfterSeconds
version
_retryAfterSeconds
_version
_icplAction
_mpsAction
_has
shouldLogAtLevel:
logFacility:level:format:args:
logFile:func:line:facility:level:format:args:
setSharingOurStream:
setSharingTheirStream:
UUID
numberWithInt:
share
sharingOurPhotostream
setSharingOurPhotostream:
sharingTheirPhotostream
setSharingTheirPhotostream:
setFullName:
fullName
setPersonID:
setFirstName:
setLastName:
setEmailAddress:
setUUID:
_firstName
_lastName
_emailAddress
_UUID
_sharingOurStream
_sharingTheirStream
initWithInvitation:accept:
responseWithInvitation:accept:
invitation
setInvitation:
accept
setAccept:
_invitation
_accept
invalidate
MSSafeUnarchiveObjectWithFile:outError:
isEqualToArray:
stringByDeletingLastPathComponent
archiveRootObject:toFile:
sharingManagerDidReceiveShareStateUpdate:
_performNextQueuedAction
_shareDebounceTimerDidFire:
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
setFireDate:
_sharesWithLocalModifications
deleteShares:
sendInvitations:
sendResponseToInvitation:accept:
replaceObjectAtIndex:withObject:
modifyShares:
requestCurrentShareState
_sendNextDeletion
_sendNextInvitationResponse
_sendNextInvitation
_sendNextManagedShare
_requestCurrentShareState
sharingProtocol:didFindShareState:
sharingProtocol:didCompleteTransactionWithError:
sharingProtocol:didFailToSendInvitations:
sharingProtocol:didReceiveAuthenticationError:
_manifestPath
_shares
_requestCurrentStateRequested
_invitationQueue
_invitationResponseQueue
_manageShareByPersonID
_deleteQueue
_manageShareDebounceTimer
initWithStreamID:
setStreamID:
_streamID
initWithString:relativeToURL:
_shareStateFromShareDictShareState:
_dictShareStateFromShareState:
_shareFromShareDict:
_shareDictFromShare:
_shareDictsArrayFromShares:
_sharesFromShareDictsArray:
_checkForFailedInvitesWithResponse:
characterAtIndex:
substringFromIndex:
_didFindShareState:
_didFinishTransactionWithResponseObject:error:
_didFailAuthenticationWithError:
_inviteURL
_manageURL
_respondURL
_statusURL
_transactionType
setMPSDeviceID:
setICPLDeviceID:
setBackupDeviceID:
setBackupDeviceUUID:
setBackupDeviceUDID:
hasMPSDeviceID
hasICPLDeviceID
hasBackupDeviceID
hasBackupDeviceUUID
hasBackupDeviceUDID
mPSDeviceID
iCPLDeviceID
backupDeviceID
backupDeviceUUID
backupDeviceUDID
_backupDeviceID
_backupDeviceUDID
_backupDeviceUUID
_iCPLDeviceID
_mPSDeviceID
initWithTitle:body:
title
setTitle:
body
setBody:
_title
_body
initWithTitle:body:sourcePersonID:
sourcePersonID
setSourcePersonID:
_sourcePersonID
initWithContentsOfFile:options:error:
serverSideConfigProtocol:didFinishWithConfiguration:error:
serverSideConfigProtocol:didReceiveAuthenticationError:
queryConfiguration
_didFinishWithResponse:error:
_configURL
isEqualToDictionary:
setConfig:
longValue
doubleValueForParameter:forPersonID:defaultValue:
longValueForParameter:forPersonID:defaultValue:
_config
_configPath
sharedManager
dictionaryWithContentsOfFile:
email
updateWithSharingRelationship:
firstNameForPersonID:
lastNameForPersonID:
fullNameForPersonID:
emailForPersonID:
personIDToPersonInfoDictionary
setPersonIDToPersonInfoDictionary:
pathForPersonInfoDictionary
setPathForPersonInfoDictionary:
_personIDToPersonInfoDictionary
_pathForPersonInfoDictionary
resetServerProtocol:didFinishWithError:
resetServerProtocol:didReceiveAuthenticationError:
resetServerState
resetServerObjectWithPersonID:baseURL:
resetServer
_selfReference
_assetsInFlight
_statementLabel:query:
setUniqueID:
_objectWrapperFromQueueQuery:outSize:
removeAllObjectWrappersFromQueue
_statements
initWithObject:size:
objectsFromWrappers:equalToObject:
setSize:
_size
_uniqueID
_object
_errorCount
initWithTimeIntervalSinceNow:
setNextExpiryDate:
distantPast
retryAfterDate
setRetryAfterDate:
MSBackoffManagerDidUpdateNextExpiryDate:
initialInterval
backoffFactor
randomizeFactor
maxBackoffInterval
currentInterval
encodeDouble:forKey:
nextExpiryDate
timeIntervalSinceReferenceDate
containsValueForKey:
decodeDoubleForKey:
_complainAboutMissingKeyInArchive:
dateWithTimeIntervalSinceReferenceDate:
initWithInitialInterval:backoffFactor:randomizeFactor:maxBackoffInterval:retryAfterDate:
setCurrentInterval:
didReceiveRetryAfterDate:
reset
backoff
copyParameters
setInitialInterval:
setBackoffFactor:
setRandomizeFactor:
setMaxBackoffInterval:
_initialInterval
_backoffFactor
_randomizeFactor
_maxBackoffInterval
_currentInterval
_nextExpiryDate
_retryAfterDate
setHasDeactivated:
set_userManifest:
_streamsBackoffManager
_MMCSBackoffManager
_hasDeactivated
policyMaySendDelete
_isAllowedToDelete
_sendDeleteRequest
sendDeletionRequestForAssetCollections:
deleter:didFinishDeletingAssetCollection:error:
_clearInstantiatedDeletersByPersonID
deleteProtocol:didFinishSuccessfulCollections:failedCollections:error:
deleteProtocol:didReceiveAuthenticationError:
batchSize
setBatchSize:
_requestedDeleteWrappers
_batchSize
MSDSPAssetCollectionWithMasterFileHash:
_collectionsInFlight
ownerEmail
setOwnerEmail:
ownerPersonID
setOwnerPersonID:
ownerFullName
setOwnerFullName:
ownerFirstName
setOwnerFirstName:
ownerLastName
setOwnerLastName:
ownerIsWhitelisted
setOwnerIsWhitelisted:
subscriptionDate
setSubscriptionDate:
relationshipState
setRelationshipState:
foreignCtag
setForeignCtag:
URLString
setURLString:
context
setContext:
isFamilySharedAlbum
setIsFamilySharedAlbum:
albumWithAlbum:
decodeIntForKey:
encodeInt:forKey:
appendString:
useForeignCtag
publicURLString
setPublicURLString:
_ownerIsWhitelisted
_isFamilySharedAlbum
_ownerEmail
_ownerPersonID
_ownerFullName
_ownerFirstName
_ownerLastName
_subscriptionDate
_relationshipState
_foreignCtag
_URLString
_publicURLString
albumGUID
setAlbumGUID:
timestamp
setTimestamp:
setEmail:
isDeletable
setIsDeletable:
isMine
setIsMine:
assets
setAssets:
hasComments
photoNumber
setPhotoNumber:
isPhotoIris
hasVideoAsset
assetCollectionWithAssetCollection:
initWithFileName:path:
isAutoloopVideo
setHasComments:
_hasComments
_isDeletable
_isMine
_albumGUID
_assets
_timestamp
_fullName
_email
_photoNumber
workQueue
shutDownCompletionBlock:
mapQueue
mapQueueShutDownStateMachineInMap:personIDs:index:forDestruction:completionBlock:
shutDownStateMachine:forDestruction:completionBlock:
earliestNextActivityDate
MSAlbumSharingDaemonDidIdle:
MSAlbumSharingDaemonDidUnidle:
setFocusAlbumGUID:
setFocusAssetCollectionGUID:
hasCommandsInGroupedCommandQueue
isRetryingOutstandingActivities
setIsRetryingOutstandingActivities:
nextActivityDateByPersonID
boundStateMachineForPersonID:
stopAssetDownloadsCompletionBlock:
cancelCompletionBlock:
updateOwnerReputationScoreForAlbum:
pluginClass
didFindNewAlbum:
didFindDeletedAlbumWithGUID:
MSASPersonIDsForPollingTriggeredByPushNotification
personIDsEnabledForAlbumSharing
personIDsListeningToPushNotification
checkForChangesInfo:
nextUpdateDateByPersonID
setNextUpdateDateByPersonID:
null
isEqualToDate:
setNextActivityDate:forPersonID:
assetsInDownloadQueueCount
existingStateMachineForPersonID:
cancel
shutDown
shutDownForDestruction:completionBlock:
hasEnqueuedActivities
addObserver:
albums
albumGUIDs
albumWithGUID:
accessControlsForAlbumWithGUID:
accessControlGUIDsForAlbumWithGUID:
accessControlWithGUID:
invitations
invitationGUIDs
invitationForAlbumWithGUID:
invitationWithGUID:
isPublicAccessEnabledForAlbumWithGUID:
assetCollectionsInAlbumWithGUID:
assetCollectionGUIDsInAlbumWithGUID:
assetCollectionWithGUID:
videoURLForAssetCollectionWithGUID:completionBlock:
videoURLsForAssetCollectionWithGUID:forMediaAssetType:completionBlock:
commentsForAssetCollectionWithGUID:
commentWithGUID:
captionForAssetCollectionWithGUID:
isAlbumWithGUIDMarkedAsUnviewed:
unviewedAlbumCount
isAssetCollectionWithGUIDMarkedAsUnviewed:
unviewedAssetCollectionCountForAlbumWithGUID:
earliestUnviewedAssetCollectionGUIDInAlbumWithGUID:
lastViewedCommentDateForAssetCollectionWithGUID:
setUserInfo:forAlbumWithGUID:
userInfoForAlbumWithGUID:
setUserInfo:forAssetCollectionWithGUID:
userInfoForAssetCollectionWithGUID:
setUserInfo:forAccessControlWithGUID:
userInfoForAccessControlWithGUID:
setUserInfo:forInvitationWithGUID:
userInfoForInvitationWithGUID:
setUserInfo:forCommentWithGUID:
userInfoForCommentWithGUID:
serverCommunicationBackoffDate
refreshResetSync:info:
refreshContentOfAlbumWithGUID:resetSync:info:
refreshCommentsForAssetCollectionWithGUID:resetSync:info:
refreshAccessControlListForAlbumWithGUID:info:
addAlbum:info:
modifyAlbumMetadata:info:
deleteAlbumWithGUID:info:
markAlbumGUIDAsViewed:info:
markAlbumGUIDAsViewed:moveLastViewedAssetCollectionMarker:info:
subscribeToAlbumWithGUID:info:
unsubscribeFromAlbumWithGUID:info:
acceptInvitationWithToken:info:completionBlock:
acceptInvitationWithGUID:info:
rejectInvitationWithGUID:info:
markAsSpamAlbumWithGUID:info:
markAsSpamInvitationWithGUID:info:
markAsSpamInvitationWithToken:info:
addAccessControlEntries:toAlbumWithGUID:info:
removeAccessControlEntryWithGUID:info:
setPublicAccessEnabled:forAlbumWithGUID:info:completionBlock:
setMultipleContributorsEnabled:forAlbumWithGUID:info:completionBlock:
addAssetCollections:toAlbumWithGUID:info:
deleteAssetCollectionWithGUID:info:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:info:
addComments:toAssetCollectionWithGUID:info:
deleteCommentWithGUID:info:
forgetEverythingInfo:
forgetEverythingInfo:completionBlock:
refreshResetSync:
refreshContentOfAlbumWithGUID:resetSync:
refreshCommentsForAssetCollectionWithGUID:resetSync:
refreshAccessControlListForAlbumWithGUID:
addAlbum:
modifyAlbumMetadata:
deleteAlbumWithGUID:
markAlbumGUIDAsViewed:
subscribeToAlbumWithGUID:
unsubscribeFromAlbumWithGUID:
acceptInvitationWithToken:completionBlock:
acceptInvitationWithGUID:
rejectInvitationWithGUID:
addAccessControlEntries:toAlbumWithGUID:
removeAccessControlEntryWithGUID:
setPublicAccessEnabled:forAlbumWithGUID:completionBlock:
setMultipleContributorsEnabled:forAlbumWithGUID:completionBlock:
addAssetCollections:toAlbumWithGUID:
deleteAssetCollectionWithGUID:
deleteAssetCollectionsWithGUIDs:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:
addComments:toAssetCollectionWithGUID:
deleteCommentWithGUID:
forgetEverything
retrieveAssets:inAlbumWithGUID:
retrieveAssetsFromAssetCollectionsWithGUIDs:assetTypeFlags:
serverSideConfiguration
focusAssetCollectionGUID
errorIsCancellation:
maxGroupedCallbackEventBatchCount
setMaxGroupedCallbackEventBatchCount:
maxGroupedCallbackEventIdleInterval
setMaxGroupedCallbackEventIdleInterval:
maxGroupedCallbackEventStaleness
setMaxGroupedCallbackEventStaleness:
refreshResetSync:personID:info:
modelForPersonID:
refreshContentOfAlbumWithGUID:resetSync:personID:info:
refreshAccessControlListOfAlbumWithGUID:personID:info:
refreshCommentsForAssetCollectionWithGUID:resetSync:personID:info:
addAlbum:personID:info:
modifyAlbumMetadata:personID:info:
deleteAlbumWithGUID:personID:info:
markAlbumGUIDAsViewed:personID:info:
markAlbumGUIDAsViewed:personID:moveLastViewedAssetCollectionMarker:info:
subscribeToAlbumWithGUID:personID:info:
unsubscribeFromAlbumWithGUID:personID:info:
acceptInvitationWithToken:personID:info:completionBlock:
acceptInvitationWithGUID:personID:info:
rejectInvitationWithGUID:personID:info:
addAccessControlEntries:toAlbumWithGUID:personID:info:
removeAccessControlEntryWithGUID:personID:info:
setPublicAccessEnabled:forAlbumWithGUID:personID:info:completionBlock:
setMultipleContributorsEnabled:forAlbumWithGUID:personID:info:completionBlock:
addAssetCollections:toAlbumWithGUID:personID:info:
deleteAssetCollectionWithGUID:personID:info:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:personID:info:
addComments:toAssetCollectionWithGUID:personID:info:
deleteCommentWithGUID:personID:info:
forgetEverythingAboutPersonID:completionBlock:
didDestroyStateMachineForPersonID:
MSAlbumSharingDaemon:didForgetPersonID:
willDestroyStateMachineForPersonID:
_postModelShutdownForPersonID:completionBlock:
workQueueForgetEverythingAboutPersonID:completionBlock:
workQueueForgetEverythingAboutPersonIDs:index:completionBlock:
contentsOfDirectoryAtPath:error:
daemonModel
clearAllNextActivityDates
refreshServerSideConfig
persistentObjectForKey:
setPersistentObject:forKey:
delegatePluginForPersonID:
MSASStateMachineDidStart:
MSASStateMachineDidFindGlobalResetSync:info:
MSASStateMachine:didFindSyncedKeyValueChangesForAlbumGUIDS:albumChanges:accessControlChangesForAlbumGUIDS:info:
MSASStateMachine:didFindAlbumChanges:info:
MSASStateMachine:didFindAccessControlChangesForAlbumGUIDS:info:
MSASStateMachine:didFindSyncedKeyValueChangesForAlbumGUIDS:info:
MSASStateMachine:didFinishCheckingForChangesInfo:error:
MSASStateMachine:willCheckForUpdatesInAlbum:info:
MSASStateMachine:didFindAssetCollectionChanges:forAlbum:info:
MSASStateMachine:didFindChangesInAlbum:info:error:
MSASStateMachine:didFinishCheckingForUpdatesInAlbum:info:error:
MSASStateMachine:didFinishCheckingForUpdatesInAlbums:info:
MSASStateMachine:didFindNewURLString:forAlbumWithGUID:info:
MSASStateMachine:didFinishGettingAccessControls:forAlbum:info:error:
MSASStateMachine:willUpdateAssetCollections:inAlbum:info:
MSASStateMachine:didFinishUpdatingAssetCollections:inAlbum:info:error:
MSASStateMachine:didFinishSubscribingToAlbum:info:error:
MSASStateMachine:didFinishUnsubscribingFromAlbum:info:error:
MSASStateMachine:didFinishMarkingAsSpamInvitationForAlbum:invitationGUID:info:error:
MSASStateMachine:didFinishMarkingAsSpamInvitationForToken:info:error:
MSASStateMachine:didFindCommentChanges:inAssetCollectionWithGUID:inAlbumWithGUID:info:
MSASStateMachine:didFinishCheckingForCommentChangesInAssetCollectionWithGUID:largestCommentID:info:error:
MSASStateMachine:willCheckForAlbumSyncedStateChangesInAlbum:info:
MSASStateMachine:didFindAssetCollectionSyncedState:forAssetCollectionGUID:inAlbum:assetCollectionStateCtag:info:
MSASStateMachine:didFindAlbumSyncedState:forAlbum:info:
MSASStateMachine:didFinishCheckingForAlbumSyncedStateChangesInAlbum:info:error:newAlbumStateCtag:
MSASStateMachine:didFinishSettingSyncedStateForAlbum:info:error:newAlbumStateCtag:
MSASStateMachine:didFinishSettingSyncedStateForAssetCollection:inAlbum:assetStateCtag:info:error:
MSASStateMachineDidRequestAlbumStateCtagForAlbumWithGUID:info:
MSASStateMachineDidRequestAlbumURLStringForAlbumWithGUID:info:
MSASStateMachineDidRequestAlbumWithGUID:
MSASStateMachineDidRequestAssetCollectionStateCtagForAssetCollectionWithGUID:info:
MSASStateMachine:didQueryIsAssetCollectionWithGUIDInModel:
MSASStateMachine:didFinishEnqueueingAssetsForDownload:inAlbumWithGUID:
MSASStateMachine:didFinishRetrievingAsset:inAlbum:error:
MSASStateMachine:didFinishDeletingAlbum:info:error:
MSASStateMachine:didFinishDeletingAssetCollection:inAlbum:info:error:
MSASStateMachine:didFinishDeletingComment:inAssetCollection:inAlbum:info:error:
MSASStateMachine:didFinishCreatingAlbum:info:error:
MSASStateMachine:didFinishUpdatingAlbum:info:error:
MSASStateMachine:didRequestAssetsForAddingAssetCollections:inAlbum:specifications:info:
MSASStateMachine:didFinishAddingAssetCollection:toAlbum:info:error:
MSASStateMachine:didFinishAddingSharingRelationships:toOwnedAlbum:info:error:
MSASStateMachine:didFinishRemovingSharingRelationship:fromOwnedAlbum:info:error:
MSASStateMachine:didFinishAddingComment:toAssetCollection:inAlbum:info:error:
MSASStateMachine:didFireScheduledEvent:forAssetCollectionGUID:albumGUID:info:
MSASStateMachineDidUpdateServerCommunicationBackoffDate:
MSASCounterpartInstance
setMSASCounterpartInstance:
personIDEnabledForAlbumSharing:
_delegateForPersonID:
dbWasRecreated
reconstruct
didCreateStateMachineForPersonID:
MSAlbumSharingDaemon:didReceiveTooManyAlbumsError:personID:
MSAlbumSharingDaemon:didReceiveTooManyPhotosError:forAlbum:personID:
MSAlbumSharingDaemon:didReceiveTooManySubscriptionsError:personID:
MSAlbumSharingDaemon:didReceiveTooManyCommentsError:forAssetCollection:inAlbum:personID:
MSAlbumSharingDaemon:didReceiveCommentTooLongError:forAssetCollection:inAlbum:personID:
handleWithEmailAddress:
reputationForHandle:timeout:error:
score
setFocusAlbumGUID:forPersonID:
setFocusAssetCollectionGUID:forPersonID:
didReceiveAuthFailureForPersonID:
didReceiveAuthSuccessForPersonID:
isWaitingForAuth
retryOutstandingActivitiesForPersonID:
stopAssetDownloadsForPersonID:
cancelActivitiesForPersonID:
sendServerSideConfigurationDidChangeNotificationForPersonID:
assetsInDownloadQueueCountForPersonID:
existingModelForPersonID:
refreshResetSync:personID:
refreshContentOfAlbumWithGUID:resetSync:personID:
refreshAccessControlListOfAlbumWithGUID:personID:
refreshCommentsForAssetCollectionWithGUID:resetSync:personID:
addAlbum:personID:
modifyAlbumMetadata:personID:
deleteAlbumWithGUID:personID:
markAlbumGUIDAsViewed:personID:
subscribeToAlbumWithGUID:personID:
unsubscribeFromAlbumWithGUID:personID:
markAsSpamAlbumWithGUID:personID:
markAsSpamInvitationWithGUID:personID:
markAsSpamInvitationWithToken:personID:
acceptInvitationWithToken:personID:completionBlock:
acceptInvitationWithGUID:personID:
rejectInvitationWithGUID:personID:
addAccessControlEntries:toAlbumWithGUID:personID:
removeAccessControlEntryWithGUID:personID:
setPublicAccessEnabled:forAlbumWithGUID:personID:completionBlock:
setMultipleContributorsEnabled:forAlbumWithGUID:personID:completionBlock:
addAssetCollections:toAlbumWithGUID:personID:
deleteAssetCollectionWithGUID:personID:
deleteAssetCollectionsWithGUIDs:personID:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:personID:
addComments:toAssetCollectionWithGUID:personID:
deleteCommentWithGUID:personID:
retrieveAssets:inAlbumWithGUID:personID:
retrieveAssetsInAssetCollectionsWithGUIDs:assetTypeFlags:personID:
forgetEverythingAboutPersonID:
forgetEverythingCompletionBlock:
persistentObjectForKey:personID:
setPersistentObject:forKey:personID:
didReceiveTooManyAlbumsError:personID:
didReceiveTooManyPhotosError:forAlbum:personID:
didReceiveTooManySubscriptionsError:personID:
didReceiveTooManyCommentsError:forAssetCollection:inAlbum:personID:
didReceiveCommentTooLongError:forAssetCollection:inAlbum:personID:
personIDToStateMachineMap
setPersonIDToStateMachineMap:
personIDToDelegateMap
setPersonIDToDelegateMap:
setDaemonModel:
busyCount
setBusyCount:
setMapQueue:
setWorkQueue:
_isRetryingOutstandingActivities
_personIDToStateMachineMap
_personIDToDelegateMap
_daemonModel
_busyCount
_mapQueue
_workQueue
_nextUpdateDateByPersonID
addEntriesFromDictionary:
MSASAddDictionary:
MSASAddIsGlobalResetSync
MSASAddIsAlbumResetSyncAlbumGUID:
MSASAddIsLocalChange
MSASAddEventIsDueToAlbumDeletionAlbumGUID:
MSASAddEventIsDueToAssetCollectionDeletionAssetCollectionGUID:
MSASAddNotInterestingKey
MSASAddIsErrorRecovery
MSASDictionaryWithCopyOfDictionary:
MSASIsGlobalResetSync
MSASAlbumResetSyncAlbumGUID
MSASIsLocalChange
MSASEventIsDueToAlbumDeletionAlbumGUID
MSASEventIsDueToAssetCollectionDeletionAssetCollectionGUID
MSASIsNotInteresting
MSASIsErrorRecovery
name
setName:
_name
comment
deletionIndex
setComment:
setDeletionIndex:
_comment
_deletionIndex
setAsset:
_asset
memberQueue
serverSideConfigurationVersion
setServerSideConfigVersion:
exceptionWithName:reason:userInfo:
raise
initWithPersonID:eventQueue:
shouldDownloadEarliestPhotosFirst
setShouldDownloadEarliestPhotosFirst:
setModel:
setBackoffManager:
workQueueUpdateNextActivityDate
addObserverForName:object:queue:usingBlock:
_model
persistentStringForKey:
protocol
workQueueApplyServerSideConfiguration
mainQueue
_sendGetServerSideConfigurationDisposition:params:
enqueueCommandAtHeadOfQueue:params:personID:albumGUID:assetCollectionGUID:
workQueueRetryOutstandingActivities
_metadataBackoffManager
_assetDownloader
assetsInDownloadQueue
setMaxMetadataRetryCount:
_assetUploader
setMaxBatchCount:
setMaxRetryCount:
setMaxMMCSTokenValidityTimeInterval:
setSuppressCellular:
specificationWithSharedAlbumSpecificationString:
setAssetTypeFlags:
videoDerivativeSpecificationsWithDictionaryArray:
eventQueue
itemsForDownloadCountFocusAlbumGUID:focusAssetCollectionGUID:
setHasShutDown:
_workQueueEmptyFileTransferQueuesCompletionBlock:
setPostCommandCompletionBlock:
_stopHandlerBlock
_stoppedError
purgeCompletionBlock:
stopCompletionBlock:
workQueueCancelCompletionBlock:
commandAtHeadOfQueueOutParams:outCommandIdentifier:outPersonID:outAlbumGUID:outAssetCollectionGUID:
removeCommandIdentifier:
commandWithMinimumIdentifier:outParams:outCommandIdentifier:outPersonID:outAlbumGUID:outAssetCollectionGUID:
_canceledError
workQueueCancelAllCommandsFilteredByAlbumGUID:assetCollectionGUID:
unsignedIntegerValue
numberWithUnsignedInteger:
setPersistentString:forKey:
deletePersistentValueWithKey:
setRootCtagFromPendingRootCtag
_cancelOutstandingCommandsDisposition:params:
itemsForUpload
unregisterAssetCollections:
removeAssetCollectionsFromUploadQueue:
nextItemsForDownloadFocusAlbumGUID:focusAssetCollectionGUID:maxCount:
unregisterAssets:
removeAssetsFromDownloadQueue:
requeuePendingAssetCollectionsWithAlbumGUID:
requeuePendingAssetCollectionGUID:
workQueueDidFinishCommand
serverSideConfigQueue
serverSideQueueServerSideConfiguration
_serverSideConfigDictionaryByApplyingDefaultsToDictionary:
serverSideQueueSetServerSideConfiguration:
workQueueRefreshServerSideConfig
enqueueCommand:params:personID:albumGUID:assetCollectionGUID:
workQueueEndCommandWithError:command:params:albumGUID:assetCollectionGUID:
dbQueue
dbQueueBeginTransaction
dbQueueSetPersistentString:forKey:
dbQueueSetPersistentObject:forKey:
dbQueueEndTransaction
getServerSideConfigCompletionBlock:
countOfEnqueuedCommands
assetCollectionsInUploadQueue
earlierDate:
latestNextActivityDate
MMCSBackoffManagerParameters
setMMCSBackoffManagerParameters:
metadataBackoffManagerParameters
setMetadataBackoffManagerParameters:
hasItemsForDownloadCountFocusAlbumGUID:focusAssetCollectionGUID:
workQueueCheckForNextCommand
hasShutDown
MSASIsAllowedToTransferMetadata
workQueuePerformNextCommand
setParams:forCommandWithIdentifier:
postCommandCompletionBlock
dbQueueRemoveCommandIdentifier:
dbQueueEnqueueCommand:params:personID:albumGUID:assetCollectionGUID:sequenceNumber:
workQueueDidFinishCommandDueToCancellation
workQueueDidFinishCommandByLeavingCommandInQueue
workQueueDidFailToFinishCommandDueToTemporaryError:
_getAlbumURLDisposition:params:
workQueueDidFinishCommandByReplacingCurrentCommandWithCommand:params:personID:albumGUID:assetCollectionGUID:
maxMetadataRetryCount
_URLReauthFailureWithUnderlyingError:
getAlbumURLForAlbumWithGUID:completionBlock:
checkForChangesResetSync:info:
_checkForChangesDisposition:params:
countOfEnqueuedCommand:
rootCtagToCheckForChanges
stopHandlerBlock
_setStopHandlerBlock:
setPendingRootCtag:
getChangesRootCtag:completionBlock:
beginTransaction
_checkForUpdatesInAlbumDisposition:params:
_didFinishCheckingUpdatesInAlbumsDisposition:params:
endTransaction
getAccessControlsForAlbums:info:
albumSummaryAlbum:albumURLString:resetSync:completionBlock:
_getAccessControlsDisposition:params:
getSharingInfoForAlbum:albumURLString:completionBlock:
_subscribeToAlbumDisposition:params:
subscribeToAlbum:completionBlock:
_unsubscribeFromAlbumDisposition:params:
unsubscribeFromAlbum:completionBlock:
setObject:forKeyedSubscript:
_markAsSpamInvitationForAlbumDisposition:params:
objectForKeyedSubscript:
markAsSpamInvitationForAlbum:completionBlock:
_markAsSpamInvitationForTokenDisposition:params:
markAsSpamInvitationForToken:completionBlock:
_checkForAssetCollectionUpdatesDisposition:params:
getAssetCollections:inAlbum:albumURLString:completionBlock:
_checkForCommentChangesDisposition:params:
getCommentChanges:inAlbumWithGUID:albumURLString:completionBlock:
_checkForAlbumSyncedStateDisposition:params:
getAlbumSyncedStateForAlbum:assetCollectionStateBlock:completionBlock:
_setAlbumSyncedStateDisposition:params:
setAlbumSyncedState:forAlbum:albumStateCtag:completionBlock:
_setAssetCollectionSyncedStateDisposition:params:
setAssetCollectionSyncedState:forAssetCollection:inAlbum:assetCollectionStateCtag:completionBlock:
_deleteAlbumDisposition:params:
deleteAlbum:completionBlock:
_deleteAssetCollectionsDisposition:params:
cancelAssetCollections:
deleteAssetCollections:inAlbum:completionBlock:
_deleteCommentDisposition:params:
enqueueCommand:params:personID:albumGUID:pendingOnAssetCollectionGUID:
deleteComment:fromAssetCollection:inAlbum:albumURLString:completionBlock:
_createAlbumDisposition:params:
createAlbum:completionBlock:
_updateAlbumDisposition:params:
updateAlbum:albumURLString:completionBlock:
stringByAppendingPathExtension:
hardlinkOrCopyFileFromPath:toPath:outError:
_createHardlinkedOrCopiedAssetsInAssetCollections:
addPendingAssetCollectionGUID:albumGUID:
_addAssetCollectionsDisposition:params:
_assetCollectionFailedError
subarrayWithRange:
addAssetCollections:toAlbum:info:
firstObject
_deleteAssetFilesInAssetCollection:
derivativeSpecifications
_deleteAssetFilesInAssetCollections:
_continueAddingAssetCollectionsDisposition:params:
_sendUploadCompleteDisposition:params:
_sendPutAssetCollectionsDisposition:params:
registerAssetCollections:completionBlock:
sendUploadCompleteSuccessfulAssetCollections:failedAssetCollections:album:completionBlock:
enqueueAssetCollectionForUpload:album:
_assetCollectionRejectedError
cancelOutstandingCommandsForAssetCollectionWithGUID:
unregisterAssetCollections:completionBlock:
putAssetCollections:intoAlbum:albumURLString:completionBlock:
_sendGetUploadTokensDisposition:params:
getUploadTokens:forAssetCollectionWithGUID:inAlbumWithGUID:albumURLString:completionBlock:
_addSharingRelationshipsDisposition:params:
phoneInvitations
memberQueueMetadataBackoffManager
addSharingRelationships:toAlbum:completionBlock:
_removeSharingRelationshipsDisposition:params:
removeSharingRelationships:fromAlbum:completionBlock:
_addCommentDisposition:params:
setID:
addComment:toAssetCollection:inAlbum:albumURLString:completionBlock:
_scheduleEventDisposition:params:
setPublicAccessEnabled:forAlbum:completionBlock:
setMultipleContributorsEnabled:forAlbum:completionBlock:
getVideoURL:forAssetCollectionWithGUID:inAlbumWithGUID:albumURLString:completionBlock:
lastObject
MMCSIsAuthorizationError
enqueueAssetForDownload:inAlbumWithGUID:
didEnqueueAsset:forAlbumGUID:
registerAssets:completionBlock:
_setAssetInfoToReauthForDownload:
_assetInfoToReauthForDownload
_sendReauthorizeAssetsForDownloadDisposition:params:
getTokensForAssets:inAlbum:albumURLString:completionBlock:
workQueueScheduleReauthForAssets:inAlbum:
MSASAssetUploader:didFinishUploadingAssetCollection:intoAlbum:error:
MSASAssetDownloader:willBeginBatchCount:
MSASAssetDownloader:didFinishDownloadingAsset:inAlbumGUID:error:
MSASAssetDownloaderDidFinishBatch:
purgeEverythingCompletionBlock:
cancelOutstandingCommandsForAlbumWithGUID:
setServerSideConfiguration:
checkForUpdatesInAlbums:resetSync:info:
subscribeToAlbum:info:
unsubscribeFromAlbum:info:
markAsSpamInvitationForAlbum:invitationGUID:info:
markAsSpamInvitationForToken:info:
checkForAssetCollectionUpdates:inAlbum:info:
checkForCommentChanges:inAlbumWithGUID:
checkForAlbumSyncedStateChangesInAlbums:info:
setAlbumSyncedState:forAlbum:info:
setAssetCollectionSyncedState:forAssetCollection:album:info:
deleteAlbum:info:
deleteAssetCollections:inAlbum:info:
deleteComments:inAssetCollection:inAlbum:info:
createAlbum:info:
updateAlbum:updateAlbumFlags:info:
continueAddingAssetCollections:skipAssetCollections:toAlbum:info:
addSharingRelationships:toOwnedAlbum:info:
removeSharingRelationships:fromOwnedAlbum:info:
addComments:toAssetCollection:inAlbum:info:
scheduleEvent:assetCollectionGUID:albumGUID:info:
setPublicAccessEnabled:forAlbum:info:completionBlock:
setMultipleContributorsEnabled:forAlbum:info:completionBlock:
videoURLForAssetCollection:inAlbum:completionBlock:
videoURLsForAssetCollection:forMediaAssetType:inAlbum:completionBlock:
focusAlbumGUID
setProtocol:
setPhoneInvitations:
derivativeImageScalingSpecification
thumbnailImageScalingSpecification
setEventQueue:
setServerSideConfigQueue:
setMemberQueue:
_commandState
_currentCommand
_currentCommandID
_currentCommandParams
_hasShutDown
_maxMetadataRetryCount
_serverSideConfiguration
_serverSideConfigurationVersion
_focusAlbumGUID
_focusAssetCollectionGUID
_phoneInvitations
_derivativeImageScalingSpecification
_thumbnailImageScalingSpecification
_derivativeSpecifications
_metadataBackoffManagerParameters
_MMCSBackoffManagerParameters
_eventQueue
_serverSideConfigQueue
_memberQueue
_postCommandCompletionBlock
setObject:
initWithPersonID:databasePath:currentVersion:
dbQueueUpgradeFromDatabaseVersion:currentVersion:
dbQueueDB
statementForString:
dbQueueNextCommandSequenceNumber
dbQueueEnqueueCommand:params:personID:albumGUID:assetCollectionGUID:
dbQueueSmallestCommandSequenceNumber
dbQueueIsAssetCollectionWithGUIDPending:
dbQueueRequeuePendingCommandsWithQueryStatement:deleteStatement:
dataWithBytesNoCopy:length:freeWhenDone:
_commandWithMinimumIdentifier:outParams:outCommandIdentifier:outPersonID:outAlbumGUID:outAssetCollectionGUID:
dbQueueRemoveAllEntriesFromTable:
UTF8String
dbQueueRequeuePendingCommandsWithAssetCollectionGUID:
dbQueueRequeuePendingCommandsWithAlbumGUID:
dbQueuePersistentObjectForKey:
dbQueueIsGUIDQueued:inQueue:
dbQueueAssetCountAlbumGUID:inQueue:
nextItemsForDownloadFocusAlbumGUID:focusAssetCollectionGUID:thumbnails:maxCount:isInflight:
dbQueueSetErrorCount:forGUID:inQueue:
dbQueueRemoveGUID:fromQueue:
enumeratorWithDatabase:query:stepBlock:
nextItemsForUploadAlbumGUID:maxPriority:maxCount:
dbQueueRemoveCommandAtHeadOfQueue
isAssetCollectionWithGUIDPending:
nextMMCSItemID
assetsInDownloadQueueAlbumGUID:
setErrorCount:forAssetInDownloadQueue:
setInFlightAssets:
assetCollectionsInUploadQueueAlbumGUID:
nextItemsForUploadMaxCount:
setErrorCount:forAssetCollectionInUploadQueue:
_shouldDownloadEarliestPhotosFirst
defaultModel
dbQueueInitializeDatabasePath:currentVersion:
stringByAppendingString:
statementQueue
dbQueuePersistentStringForKey:
dbQueueSetPersistentData:forKey:
dbQueueDeletePersistentValueWithKey:
dbQueuePersistentDataForKey:
dataUsingEncoding:
dbQueueRollbackTransaction
statements
setStatements:
setStatementQueue:
setDbWasRecreated:
_dbWasRecreated
_statementQueue
_dbQueue
copyItemAtPath:toPath:error:
stringWithUTF8String:
initWithEngine:type:
contextWithEngine:type:
setEngine:
signatures
setSignatures:
setCount:
itemIDs
setItemIDs:
itemFlags
setItemFlags:
authTokens
setAuthTokens:
_count
threadMain:
initWithTarget:selector:object:
initWithWorkPath:appIDHeader:dataClass:options:modes:
performBlock:
performSelector:onThread:withObject:waitUntilDone:
performBlockOnWorkThread:waitUntilDone:
_doNothingTimerHandler:
timerWithTimeInterval:target:selector:userInfo:repeats:
isDone
distantFuture
runMode:beforeDate:
setIsDone:
MMCSEngine:logPerformanceMetrics:
performBlockOnWorkThread:
_assetWithItemID:
MMCSErrorWithDomain:code:description:
MMCSEngine:didMakeGetProgress:state:onAsset:
MMCSEngine:didFinishGettingAsset:path:error:
MMCSEngine:didMakePutProgress:state:onAsset:
MMCSEngine:didFinishPuttingAsset:putReceipt:error:
isMetricsGatheringEnabled
didFinishGettingAllAssets
didFinishPuttingAllAssets
_removeRequestorContext:
threadKeepAliveTimer
setThreadKeepAliveTimer:
_nextItemID
_removeAssetForItemID:
_registerRequestorContext:
MMCSEngine:didCreateRequestorContext:forAssets:
URLByAppendingPathComponent:
dictionaryWithContentsOfURL:
_initItemIDPersistence
writeToURL:atomically:
initWithWorkPath:appIDHeader:dataClass:options:
setIsMetricsGatheringEnabled:
_getFileDescriptorAndContentTypeFromItemID:outFD:outItemType:outError:
_getItemProgressItemID:state:progress:requestorContext:error:
_getItemDoneItemID:path:requestorContext:error:
_putItemProgressItemID:state:progress:requestorContext:error:
_putItemDoneItemID:requestorContext:putReceipt:error:
_requestCompletedRequestorContext:
cancelOperationsWithContext:
cancelAllOperations
isActive
registerAssetForUpload:completionBlock:
reregisterAssetForUpload:
reregisterAssetForDownload:
registerAssets:forDownloadCompletionBlock:
unregisterAsset:
getAssets:requestURL:DSID:options:
putAssets:requestURL:DSID:options:
autoGenerateItemID
setAutoGenerateItemID:
workThread
setWorkThread:
_workPathURL
_appIDHeader
_dataClass
_options
_engineClientContext
_itemIDToAssetMap
_itemIDToAssetMapQueue
_requestorContexts
_reqestorContextQueue
_autoItemIDDictionary
_autoItemIDPersistenceURL
_autoItemIDDictionaryQueue
_autoGenerateItemID
_isMetricsGatheringEnabled
_isDone
_workThread
_threadKeepAliveTimer
bundleForClass:
localizedStringForKey:value:table:
initWithFormat:arguments:
MMCSIsNetworkConditionsError
MMCSIsFatalError
_MMCSApplyBlock:
MMCSErrorType
MMCSIsCancelError
MMCSRetryAfterDate
MSASIsAllowedToUploadAssets
workQueueUploadNextBatch
state
_sendDidIdleNotification
workQueueGoIdle
_workQueueStop
workQueueStop
workQueueShutDownCompletionBlock:
model
setDidEncounterNetworkConditionError:
maxBatchCount
_missingURLError
MMCSUploadSocketOptionsForPersonID:
dictionaryWithObject:forKey:
_orphanedAssetCollectionError
workQueueDidFinishWithItem:error:
workQueueNextItemID
workQueueRegisterAssets:index:completionBlock:
workQueueRegisterAssetCollections:index:results:completionBlock:
workQueueCancelAssetCollections:
workQueueStopTrackingItem:
backoffManager
maxRetryCount
didEncounterNetworkConditionError
_pathForPersonID:
workQueueCancel
setState:
itemsInFlight
setItemsInFlight:
assetCollectionsToItemInFlightMap
setAssetCollectionsToItemInFlightMap:
assetToAssetCollectionMap
setAssetToAssetCollectionMap:
finishedAssetCollections
setFinishedAssetCollections:
assetCollectionsWithAuthorizationError
setAssetCollectionsWithAuthorizationError:
assetCollectionGUIDToRequestorContext
setAssetCollectionGUIDToRequestorContext:
_didEncounterNetworkConditionError
_assetCollectionsToItemInFlightMap
_assetToAssetCollectionMap
_finishedAssetCollections
_assetCollectionsWithAuthorizationError
_assetCollectionGUIDToRequestorContext
MSASPersonIDIsAllowedToDownloadAssets:
workQueueDownloadNextBatch
_workQueueGoIdle
isPerformanceLoggingEnabled
setIsWaitingForFirstDownloadEvent:
sharedLogger
workQueueObjectGUID
stopOperation:itemGUID:
downloadBatchPerfGUID
discardOperation:itemGUID:
setCurrentFocusAssetCollectionGUID:
setCurrentFocusAlbumGUID:
setIsDownloadingThumbnails:
_missingMMCSTokenError
timeIntervalSinceDate:
workQueueMaxMMCSTokenValidityTimeInterval
_MMCSTokenTooOldError
startOperation:itemGUID:
setDownloadBatchPerfGUID:
MMCSDownloadSocketOptionsForPersonID:
workQueueRegisterAssets:completionBlock:
workQueueUnregisterAssets:
_workQueueStopTrackingItem:
_workQueueDidFinishWithItem:error:
isWaitingForFirstDownloadEvent
summarizeOperation:itemGUID:formatBlock:
MMCSEngine:didFinishPuttingAsset:error:
_orphanedAssetError
assetToItemInFlightMap
setAssetToItemInFlightMap:
finishedAssets
setFinishedAssets:
isDownloadingThumbnails
currentFocusAlbumGUID
currentFocusAssetCollectionGUID
objectGUID
setObjectGUID:
_isDownloadingThumbnails
_isWaitingForFirstDownloadEvent
_assetToItemInFlightMap
_finishedAssets
_currentFocusAlbumGUID
_currentFocusAssetCollectionGUID
_objectGUID
_downloadBatchPerfGUID
MMCSConcurrentConnectionsCount
_rereadPerformanceLoggingSetting
postNotificationName:object:
logLevel:personID:albumGUID:format:
MMCSEngine:didRequestAssetWithItemID:
MMCSEngine:shouldLogAtLogLevel:
MMCSEngine:logMessage:logLevel:
maxMMCSTokenValidityTimeInterval
_backoffManager
_maxBatchCount
_maxRetryCount
_maxMMCSTokenValidityTimeInterval
infoDictionary
hardwareString
OSString
UDID
pushTokenForPersonID:
timeIntervalSinceNow
initWithIdentifier:
defaultSessionConfiguration
set_appleIDContext:
sessionWithConfiguration:
requestWithURL:
setAllHTTPHeaderFields:
containerWithIdentifier:
fetchCurrentDeviceIDWithCompletionHandler:
data
setHTTPBody:
setHTTPMethod:
_urlSession
statusCode
initWithData:
dataTaskWithRequest:completionHandler:
resume
Win32SHA1OfUDID:
retryAfterDateBasedOnRetryAfterHeaderString:
appleIDSession
fetchMPSStateWithBaseAvailabilityURL:personID:completionBlock:
emails
setEmails:
setPhones:
isEqualToSharingRelationship:
_emails
_phones
setWithObjects:
allowedClasses
unarchivedObjectOfClasses:fromData:error:
reason
clientTimestamp
isLike
isCaption
isBatchComment
content
setClientTimestamp:
setIsLike:
setIsCaption:
setIsBatchComment:
setContent:
_isLike
_isCaption
_isBatchComment
_clientTimestamp
_content
initWithDatabase:query:stepBlock:
stmt
stepBlock
setStmt:
setStepBlock:
nextObject
setDb:
queue
setQueue:
_stmt
_stepBlock
_queue
enumerateObjectsUsingBlock:
initWithSyncedKeyValueChangesForAlbumGUIDS:albumChanges:accessControlChangesForAlbumGUIDS:
removePendingKeyValueChangesForAlbumGUID:
addPendingChangesForAlbumGUID:
removePendingChangesForAlbumGUID:
addPendingAssetCollectionChanges:forAlbumGUID:
removePendingAssetCollection:forAlbumGUID:
removePendingSharingInfoChangesForAlbumGUID:
hasPendingChanges
pendingAlbumGUIDsWithKeyValueChanges
setPendingAlbumGUIDsWithKeyValueChanges:
pendingAlbumChanges
setPendingAlbumChanges:
pendingAlbumGUIDsWithSharingInfoChanges
setPendingAlbumGUIDsWithSharingInfoChanges:
pendingAlbumGUIDToAssetCollections
setPendingAlbumGUIDToAssetCollections:
_pendingAlbumGUIDsWithKeyValueChanges
_pendingAlbumChanges
_pendingAlbumGUIDsWithSharingInfoChanges
_pendingAlbumGUIDToAssetCollections
initWithPersonID:databasePath:eventQueue:
MSASModelDidReceiveNewServerSideConfiguration:info:
eventQueuePerformBlockOnObservers:
MSASModelDidReceiveNewServerSideConfiguration:
commandQueue
shutDownFlush:completionBlock:
hasEnqueuedItems
observers
dbQueueAlbumGUIDs
dbQueueAlbumWithGUID:outObject:outName:outCtag:outForeignCtag:outURLString:outUserInfoData:
dbQueueAccessControlsForAlbumWithGUID:
dbQueueAccessControlGUIDsForAlbumWithGUID:
dbQueueAccessControlWithGUID:outObject:outAlbumGUID:outEmail:outUserInfoData:
dbQueueInvitationForAlbumWithGUID:
dbQueueInvitationWithAlbumGUID:outObject:outInvitationGUID:outEmail:outUserInfoData:
dbQueueInvitationWithGUID:outObject:outAlbumGUID:outEmail:outUserInfoData:
dbQueueAssetCollectionWithGUID:outObject:outCtag:outAlbumGUID:outBatchDate:outPhotoDate:outPhotoNumber:outUserInfoData:
dbQueueAssetCollectionGUIDsInAlbumWithGUID:
dbQueueCommentsForAssetCollectionWithGUID:
dbQueueCommentWithGUID:outObject:outID:outTimestamp:outAssetCollectionGUID:outIsCaption:outUserInfoData:
MSASModelDidDeleteAllAlbumsInAlbumList:
dbQueueLookupOrCreateAssetCollectionWithGUID:outAlbum:
dbQueueMaximumCommentIDForAssetCollectionWithGUID:
dbQueueLookupOrCreateAlbumWithGUID:
dbQueueSetAlbum:info:
dbQueueDeleteAlbumWithGUID:info:
dbQueueSetAlbumMetadataAlbumGUID:key:value:info:
dbQueueSetUnviewedState:onAlbumWithGUID:info:
dbQueueMaximumPhotoNumberForAlbumWithGUID:
dbQueueAlbumMetadataWithAlbumGUID:key:outValue:
dbQueueUnviewedAssetCollectionCountForAlbumWithGUID:
eventQueueNotifyObserversOfUpdatedUnviewedCountInAlbum:unviewedCount:info:
MSASModel:didFinishMarkingAlbumAsViewed:info:error:
MSASModel:didFinishMarkingAlbumAsViewed:error:
dbQueueDeleteInvitationForAlbumWithGUID:info:
dbQueueSetInvitation:info:
MSASModel:didFinishAcceptingInvitation:forAlbum:info:error:
_invalidInvitationGUIDErrorWithGUID:
MSASModel:didFinishAcceptingInvitation:forAlbum:error:
dbQueueDeleteInvitationWithGUID:info:
MSASModel:didFinishRejectingInvitation:info:error:
MSASModel:didFinishRejectingInvitation:error:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
MSASModel:didFinishMarkingAsSpamInvitation:info:error:
_protocolErrorForUnderlyingError:
MSASModel:didFinishMarkingAsSpamInvitationWithToken:info:error:
dbQueueSetAccessControl:info:
dbQueueDeleteAccessControlWithGUID:info:
MSASModel:didFinishRemovingAccessControlEntry:fromAlbum:info:error:
_invalidAccessControlGUIDErrorwithGUID:
MSASModel:didFinishRemovingAccessControlEntry:fromAlbum:error:
dbQueueSetAssetCollection:inAlbumWithGUID:info:
MSASModel:didFinishDeletingAssetCollection:fromAlbum:info:error:
_invalidAssetCollectionGUIDErrorwithGUID:
MSASModel:didFinishDeletingAssetCollection:fromAlbum:error:
dbQueueDeleteAssetCollectionWithGUID:info:
dbQueueSetAssetCollectionMetadataAssetCollectionGUID:key:value:info:
MSASModel:didFinishMarkingCommentsAsViewedInAssetCollection:inAlbum:info:error:
MSASModel:didFinishMarkingCommentsAsViewedInAssetCollection:inAlbum:error:
dbQueueSetUnviewedState:onAssetCollectionWithGUID:info:
dbQueueSetComment:forAssetCollectionWithGUID:info:
MSASModel:didFinishAddingComment:toAssetCollection:inAlbum:info:error:
MSASModel:didFinishAddingComment:toAssetCollection:inAlbum:error:
dbQueueLookupOrCreateCommentWithGUID:outAssetCollection:outAlbum:
MSASModel:didFinishDeletingComment:fromAssetCollection:inAlbum:info:error:
MSASModel:didFinishDeletingComment:fromAssetCollection:inAlbum:error:
dbQueueDeleteCommentWithGUID:info:
MSASModelWillBeForgotten:info:
MSASModelWillBeForgotten:
MSASModel:didFailToFindAssetsForAssetCollectionGUID:assetTypeFlags:
MSASModel:didFindAlbumMetadataChange:info:
MSASModel:didFindAlbumMetadataChange:
flushQueueCompletionBlock:
MSASModel:didFindNewAlbum:info:
MSASModel:didFindNewAlbum:
dbQueueDeleteAllAlbumMetadataForAlbumWithGUID:info:
MSASModel:didFindDeletedAlbum:info:
MSASModel:didFindDeletedAlbum:
MSASModel:didFindAccessControlChange:inAlbum:info:
MSASModel:didFindAccessControlChange:inAlbum:
MSASModel:didFindNewAccessControl:inAlbum:info:
MSASModel:didFindNewAccessControl:inAlbum:
MSASModel:didFindDeletedAccessControl:inAlbum:info:
MSASModel:didFindDeletedAccessControl:inAlbum:
MSASModel:didFindInvitationChange:info:
MSASModel:didFindInvitationChange:
MSASModel:didFindNewInvitation:info:
MSASModel:didFindNewInvitation:
MSASModel:didFindDeletedInvitation:info:
MSASModel:didFindDeletedInvitation:
MSASModel:didFindAssetCollectionChange:inAlbum:info:
MSASModel:didFindAssetCollectionChange:inAlbum:
MSASModel:didFindNewAssetCollection:inAlbum:info:
MSASModel:didFindNewAssetCollection:inAlbum:
dbQueueDeleteAllAssetCollectionMetadataForAssetCollectionWithGUID:info:
MSASModel:didFindDeletedAssetCollection:inAlbum:info:
MSASModel:didFindDeletedAssetCollection:inAlbum:
MSASModel:didFindCommentChange:inAssetCollection:inAlbum:info:
MSASModel:didFindCommentChange:inAssetCollection:inAlbum:
MSASModel:didFindNewComment:forAssetCollection:inAlbum:info:
MSASModel:didFindNewComment:forAssetCollection:inAlbum:
MSASModel:didDeleteComment:forAssetCollection:inAlbum:info:
MSASModel:didDeleteComment:forAssetCollection:inAlbum:
dbQueueAssetCollectionMetadataWithAssetCollectionGUID:key:outValue:
MSASModel:didFindLastViewedCommentDate:forAssetCollection:inAlbum:info:
MSASModel:didFindLastViewedCommentDate:forAssetCollection:inAlbum:
MSASModel:didMarkAssetCollection:asHavingUnreadComments:inAlbum:info:
MSASModel:didMarkAssetCollection:asHavingUnreadComments:inAlbum:
dbQueueCountOfUnviewedAssetCollectionsInAlbumWithGUID:
MSASModel:didMarkAlbum:asHavingUnreadContent:info:
MSASModel:didMarkAlbum:asHavingUnreadContent:
MSASModel:didUpdateUnviewedAssetCollectionCount:forAlbum:info:
MSASModel:didUpdateUnviewedAssetCollectionCount:forAlbum:
dbQueueUnviewedAlbumCount
dbQueueFlushAllPendingCommentCheckOperations
dbQueuePendingCommentCheckOperations
dbQueueDeleteAllPendingCommentCheckOperations
MSASModel:didFindGlobalResetSyncInfo:
pendingChanges
setPendingChanges:
flushAllPendingCommentCheckOperations
MSASModel:didFinishCheckingForChangesInfo:error:
dbQueueUpdateAlbumCtag:
dbQueueCheckToClearUnviewedStateOnAlbumWithGUID:info:
_reconstruct
dbQueueAddCommentCheckOperation:
MSASModel:didFinishSubscribingToAlbum:info:error:
MSASModel:didFinishSubscribingToAlbum:error:
MSASModel:didFinishUnsubscribingFromAlbum:info:error:
MSASModel:didFinishUnsubscribingFromAlbum:error:
MSASModel:didFinishEnqueueingAssetsForDownload:inAlbumWithGUID:
MSASModel:didFinishRetrievingAsset:inAlbum:error:
dbQueueAssetCollectionContainsCommentsFromMeAssetCollectionGUID:
sortUsingComparator:
dbQueueCommentWithID:assetCollectionGUID:outObject:outGUID:outTimestamp:outIsCaption:outUserInfoData:
dbQueueCheckToClearUnviewedStateOnAssetCollectionWithGUID:info:
MSASModel:didFinishDeletingAlbum:info:error:
MSASModel:didFinishDeletingAlbum:error:
MSASModel:didFinishAddingAlbum:info:error:
MSASModel:didFinishAddingAlbum:error:
MSASModel:didFinishModifyingAlbumMetadata:info:error:
MSASModel:didFinishModifyingAlbumMetadata:error:
MSASModel:didRequestDerivativesForAssetCollections:specifications:info:completionBlock:
MSASModel:didRequestDerivativesForAssetCollections:specifications:completionBlock:
MSASModel:didFinishAddingAssetCollection:toAlbum:info:error:
MSASModel:didFinishAddingAssetCollection:toAlbum:error:
MSASModel:didFinishAddingAccessControlEntry:toAlbum:info:error:
MSASModel:didFinishAddingAccessControlEntry:toAlbum:error:
MSASModel:didFinishSendingInvitationByPhone:toAlbum:info:error:
initWithPersonID:databasePath:
dbQueueDeleteAlbumMetadataAlbumGUID:key:info:
dbQueueDeleteAssetCollectionMetadataAssetCollectionGUID:key:info:
setObservers:
setCommandQueue:
_counterpartInstance
_observers
_commandQueue
_pendingChanges
command
invariantParam
variantParam
commandwithCommand:variantParam:invariantParam:
canBeGroupedWithCommand:
enqueueCommand:
commandCount
nextCommandGroupMaxCount:outCommand:outLastCommandIndex:
removeCommandsUpToCommandIndex:
performBlockOnObservers:
idleCountQueue
retainPowerAssertion
releasePowerAssertion
hysteresisTimer
setHysteresisTimer:
stabilizedIsBusy
setStabilizedIsBusy:
stabilizedDidUnidle
_hysteresisTimerDidFire:
_didChangeIdleBusyState:
stabilizedDidIdle
isBusy
retainUIBusy
releaseUIBusy
UIBusyCount
setUIBusyCount:
setIdleCountQueue:
_stabilizedIsBusy
_UIBusyCount
_idleCountQueue
_hysteresisTimer
_logSqliteErrorLine:
dbQueueDiscardOperation:itemGUID:
nukeCompletionBlock:
numberWithUnsignedLong:
MSASPProtocolDictionary
MSASPAssetFromProtocolDictionary:
stringByDeletingPathExtension
MSASPAssetCollectionFromProtocolDictionary:
MSASPSharingRelationshipFromProtocolDictionary:
MSASPInvitationFromProtocolDictionary:
MSASPCommentFromProtocolDictionary:
gate
baseSharingURLForPersonID:
sharedStreamsProtocolVersionString
setIsShuttingDown:
shutDownError
stoppingError
sendURLRequest:method:bodyObj:checkServerSideConfigVersion:completionBlock:
isShuttingDown
dataWithPropertyList:format:options:error:
_sendOneURLRequest:checkServerSideConfigVersion:retryCount:completionBlock:
setGate:
_prepareHeadersForRequest:
allHeaderFields
handleResponse:forRequest:shouldRetry:
scheme
initWithScheme:host:path:
setURL:
setBaseURL:
errorFromStandardProcessingOnResponse:responseObject:checkServerSideConfigVersion:error:body:
sendAsynchronousRequest:queue:completionHandler:
appleIDHeadersForRequest:
allHTTPHeaderFields
compare:options:
HTTPBody
numberWithInteger:
caseInsensitiveCompare:
serverSideConfigVersion
substringToIndex:
HTTPErrorWithStatusCode:
baseURL
_createAlbumURL
setValue:forKey:
responseDict:containsLimitErrorCode:outMaxAllowed:
sendURLRequest:bodyObj:completionBlock:
_updateAlbumURLWithBaseURL:
_putAssetsURLWithBaseURL:
_getUploadTokensURLWithBaseURL:
_getVideoURLWithBaseURL:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
dateFromString:
_uploadCompleteURLWithBaseURL:
_shareURL
allObjects
_unshareURL
_addCommentURLWithBaseURL:
_enablePublicAccessURLWithBaseURL:
_enableMultipleContributorsURLWithBaseURL:
_deleteURLWithBaseURL:
_deleteAssetsURLWithBaseURL:
_deleteCommentURLWithBaseURL:
_getChangesURL
_sharingInfoURLWithBaseURL:
_albumSummaryURLWithBaseURL:
_getAssetsURLWithBaseURL:
_getTokensURLWithBaseURL:
_couldNotReauthorizeError
_subscribeURL
_unsubscribeURL
_reportSpamURL
_getCommentsURLWithBaseURL:
_albumStateURL
_setAssetStateURL
_setAlbumStateURL
_serverSideConfigURL
_getAlbumURL
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
_setCommentPositionURL
pendingConnectionsQueue
setPendingConnectionsQueue:
pendingConnectionsGroup
setPendingConnectionsGroup:
headerVersion
_isShuttingDown
_gate
_pendingConnectionsQueue
_pendingConnectionsGroup
_baseURL
_serverSideConfigVersion
_headerVersion
initWithCommand:variantParam:invariantParam:
setCommand:
setVariantParam:
setInvariantParam:
_command
_variantParam
_invariantParam
workQueueFlushQueue
setLastEnqueuedCommand:
calloutBlockForCommand:
workQueueDidEnqueueFirstItem
workQueueDidEnqueueSubsequentItem
MSASModel:didFindNewAlbums:info:
MSASModel:didFindDeletedAlbums:info:
MSASModel:didFindNewAssetCollections:inAlbum:info:
MSASModel:didFindDeletedAssetCollections:inAlbum:info:
MSASModel:didFindNewAccessControls:inAlbum:info:
MSASModel:didFindDeletedAccessControls:inAlbum:info:
MSASModel:didFindNewInvitations:info:
MSASModel:didFindDeletedInvitations:info:
MSASModel:didFindNewComments:forAssetCollection:inAlbum:info:
MSASModel:didFindDeletedComments:forAssetCollection:inAlbum:info:
workQueueEnqueueCommand:variantParam:invariantParam:
flushQueue
lastEnqueuedCommand
_lastEnqueuedCommand
nominalShortSideLength
minimumLongSideLength
maximumLongSideLength
componentsSeparatedByString:
integerValue
setNominalShortSideLength:
setMinimumLongSideLength:
setMaximumLongSideLength:
assetTypeFlags
scaleFactorForInputSize:
numberWithFloat:
assetsToGenerateFromImageWithInputSize:toConformToSpecifications:
_nominalShortSideLength
_minimumLongSideLength
_maximumLongSideLength
_assetTypeFlags
assertBusyAssertion
deassertBusyAssertion
workQueueAssertBusyAssertion
workQueueDeassertBusyAssertion
memberQueueIsAssertingBusyAssertion
memberQueueSetIsAssertingBusyAssertion:
workQueueClearIdleTimer
workQueueClearStalenessTimer
idleTimerGate
setIdleTimerGate:
stalenessTimerGate
setStalenessTimerGate:
workQueueRestartStalenessTimer
workQueueRestartIdleTimer
isAssertingBusyAssertion
_isAssertingBusyAssertion
_maxGroupedCallbackEventBatchCount
_idleTimerGate
_stalenessTimerGate
_maxGroupedCallbackEventIdleInterval
_maxGroupedCallbackEventStaleness
floatValue
initWithDictionary:
useCellular
powerRequired
bitRate
videoType
_useCellular
_powerRequired
_bitRate
_videoType
IDS: Send message %{public}@ from %@ to %@ for album %{public}@
IDS: Send message with identifier %{public}@
%{public}@
IDS: Get send message callback for service %{public}@ account %@ identifier %{public}@ success %d error %{public}@ info %{public}@
IDS: Successfully send message from %@ for album %{public}@ with IDS identifier %{public}@.
%{public}@: Reenqueuing quarantined activities. Reason: %{public}@.
Aborting all activities for person ID %@.
Forgetting everything about person ID %@...
Person ID %@ forgotten.
%{public}@: Push notification received for My Photo Stream with targetPersonID %@.
%{public}@: Serving push notification
The subscription plugin class does not support push notification refreshing.
Server-side configuration has changed. Refreshing configuration.
Not refreshing server-side configuration.
Sending local notification about new server-side configuration for %@
Media stream daemon starting...
Media stream daemon stopping.
Received authentication failure for person ID %@
Successfully authenticated person ID %@
Received quota excess failure for person ID %@. Next retry date: %{public}@
%{public}@ - Found empty person ID.
%{public}@ - setting next activity date for %@ to %{public}@.
%{public}@: next activity date is %{public}@
%{public}@ - %@ enqueuing asset collections: %{public}@
%{public}@ - %@ dequeuing asset collections: %{public}@
%{public}@ - %@ removed %lu asset collections from upload queue
Server-side configuration key %{public}@ cannot be parsed as a number.
Server-side configuration key %{public}@ is not a string.
Server-side configuration key %{public}@ does not contain an array.
%{public}@ - %@ _maxSizeByUTI: %{public}@
%{public}@ - %@ Server-side configuration has changed. Reading new values.
%{public}@ - quarantine for %{public}@ has been there for too long. Better to just abandon
%{public}@ - putting %{public}@ in quarantine%{public}s.
%{public}@ - %{public}@ has disappeared.
%{public}@ - %{public}@ has lost his collection ID.
%{public}@ - %{public}@ for %{public}@ has disappeared. Will have to recompute derivatives.
%{public}@ - discarding a collection with identifier %{public}@ that was quarantined too many times.
%{public}@ - reenqueuing %ld quarantined collections.
%{public}@ - %@ Not uploading at this time.
%{public}@ - %@ Not publishing because we're shutting down.
%{public}@ - %@ Requesting derivatives for %ld files.
%{public}@ - Retrying to get derivative for %{public}@ (error count: %i)
%{public}@ - unable to generate derivatives for %{public}@ safely.
%{public}@ - %@ No more derivatives to request.
%{public}@ - %@ No file hash for asset %{public}@
%{public}@ - %@ Submitting %ld asset collections for publication.
%{public}@ - %@ ...skipping %ld asset collections.
%{public}@ - %@ The UTI for 
%{public}@
 is not accepted by the server. Asset collection: %{public}@
%{public}@ - %@ The master asset has zero size. Rejecting upload.
%{public}@ - %@ The master asset has size %lld, which is larger than the maximum allowed %lld. %{public}@
%{public}@ - %@ The master asset in the collection does not have a hash. Rejecting from publication: %{public}@
%{public}@ - %@ Could not compute hash for derived asset %{public}@. Rejecting asset from publication.
%{public}@ - %@ The asset has zero size. Rejecting upload.
%{public}@ - %@ The asset has size %lld, which is larger than the maximum allowed %lld. %{public}@
%{public}@ - %@ Rejecting asset collection %{public}@
Error: %{public}@
%{public}@ - %@ Sending metadata...
Wrong state detected. Expected %d, actually %d. Not serving message.
%{public}@ - failed to properly clean up wrappers from queue (before/after count: %lld/%lld). Wrapper ids that were supposed to be removed: (%{public}@)
%{public}@ - %lu collections changed (kept %lu / lost %ld - total collections in queue after cleaning: %lld).
%{public}@ - %@ nothing to send.
%{public}@ - %@ received metadata upload response: %{public}@
Setting MMCS header in asset %{public}@
%{public}@ - %@ Encountered network issues during upload. Will try again later...
%{public}@ - %@ Received a quota error.
%{public}@ - %@ Quota error code: %{public}@
%{public}@ - %@ Server reject asset collection because it is too large: %{public}@
%{public}@ - %@ Could not parse the server's response.
%{public}@ - %@ Error uploading metadata to Streams server: %{public}@
%{public}@ - %@ Too many errors encountered while uploading %ld asset collections. Aborting.
%{public}@ - %@ Nothing to upload.
%{public}@ - %@ Found authentication error. Will try again later...
%{public}@ - %@ uploading %ld assets...
%{public}@ - %@ Using contentURL %{public}@ from MSPlatform for upload.
Failed to get contentURL from MSPlatform. Using URL from metadata for upload
%{public}@ - %@ Finished uploading asset. Error: %{public}@
Exception %{public}@ thrown while opening temp file %@. Ignored.
%{public}@ - %@ Failed to write temp file at path %@.
%{public}@ - %@ Opening asset file at path %@...
Exception %{public}@ thrown while opening asset file at path %@. Ignored.
%{public}@ - %@ ... got FD %d.
%{public}@ - %@ Cannot retrieve file descriptor for asset: %{public}@
%{public}@ - %@ Closing FD %d for asset %{public}@
%{public}@ - %@ Found mismatch between expecting sending queue count and actual count. Expected %lu, actually %lu.
%{public}@ - %@ Ignoring errors for %lu asset collections.
%{public}@ - %@ Encountered temporary network issues during upload. Will try again later...
%{public}@ - %@ Received auth error. Resending metadata for %lu asset collections.
%{public}@ - %@ Error uploading %lu asset collections.
%{public}@ - %@ error uploading %{public}@: %{public}@ %ld.
%{public}@ - %@ needs to re-register %{public}@.
%{public}@ - %@ Gave up uploading %lu asset collections.
%{public}@ - %@ Will retry uploading %ld asset collections.
%{public}@ - %@ Detected an inconsistent state.
%{public}@ - %@ Successfully uploaded %lu asset collections.
%{public}@ - %@ Encountered temporary error. Will try again later...
%{public}@ - %@ Error sending upload complete: %{public}@
%{public}@ - %@ Failed to send upload complete for %lu asset collections. Error: %{public}@
%{public}@ - %@ Finished sending upload complete.
Unable to deserialize publisher master manifest: %{public}@
[STATE %{public}@] %{public}@ -> %{public}@
[RETRIEVALSTATE %{public}@] %{public}@ -> %{public}@
%{public}@ - %@ Setting outstanding poll: %d
%{public}@ - %@ Subscriber sync state was reset locally.
%{public}@ - %@ Not downloading at this time.
%{public}@ - %@ Not checking for new asset collections because we're shutting down.
checkForNewAssetCollections called, state: %d
%{public}@ - %@ Checking for subscription updates...
%{public}@ - %@ Subscriber state was reset by the server.
%{public}@ - %@ Beginning subscriber updates for personID: %@ wasReset: %d
Metadata: %{public}@
%{public}@ - %@ Found %ld new asset collections.
New Collections: %{public}@
Deleted asset collections: %{public}@
%{public}@ - %@ Finished receiving updates for personID: %@.
%{public}@ - %@ New ctag: %{public}@
%{public}@ - %@ Received CTAG for new person ID %@.
%{public}@ - %@ Subscription for personID %@ is no longer available.
%{public}@ - %@ Found temporary network error. Trying again later. Error: %{public}@
%{public}@ - %@ Found error when retrieving subscription updates: %{public}@
%{public}@ - %@ Finished retrieving subscription updates.
%{public}@ - %@ Received authentication error: %{public}@
%{public}@ - %@ Subscription stream for person ID %{public}@ is temporarily unavailable.
%{public}@ - %@ Scheduling retrieval of %ld assets.
%{public}@ - %@ Rejected invalid asset %{public}@.
%{public}@ - %@ Not checking for outstanding activities because we're shutting down.
%{public}@ - %@ Not retrieving assets because we're shutting down.
%{public}@ - %@ Retrieval state: %d
%{public}@ - %@ No more assets to retrieve.
%{public}@ - %@ Retrieving %lu assets...
%{public}@ - %@ Reauthorizing retrieval of %lu assets...
%{public}@ - %@ Finished retrieving asset.
%{public}@ - %@ Finished retrieving assets. Checking for errors on %lu assets...
%{public}@ - %@ Ignoring error: %{public}@
%{public}@ - %@ Encountered temporary network error.
%{public}@ - %@ Encountered authentication error.
%{public}@ - %@ Encountered bad asset retrieval token.
%{public}@ - %@ Too many errors encountered for asset. Aborting download. %{public}@
%{public}@ - %@ Asset retrieval failed with error: %{public}@
%{public}@ - %@ Found orphaned asset. Ignoring. %{public}@
%{public}@ - %@ ...Finished handling errors.
%{public}@ - %@ Found temporary network errors during asset downloading. Trying again later.
%{public}@ - %@ Reauthorization protocol received authentication error: %{public}@
%{public}@ - %@ Encountered temporary network error during subscription update. Trying again later. Error :%{public}@
%{public}@ - %@ Reauthorization resulted in %lu rejected assets. Error: %{public}@
%{public}@ - %@ Successfully reauthorized %lu assets.
Unable to deserialize subscriber master manifest: %{public}@
Ignoring attempt to set MMCS Item Flags on an MSAsset.
Setting MMCS Item ID to %lld for %{public}@
Can't query for file size at path %@. Error: %{public}@
The file at %@ could not be opened for hashing.
Not logging any more underlying errors.
%{public}@ - %@ Rejecting asset %{public}@
Reason: %{public}@
%{public}@ - %@ Rejecting asset collection %{public}@
Reason: %{public}@
%{public}@ - %@ Sending metadata to Streams server...
%{public}@ - %@ Sending metadata for asset collections: %{public}@
%{public}@ - %@ Sending upload complete...
%{public}@ - %@ Put connection has failed. Error: %{public}@
%{public}@ - %@ Failed authentication. Error: %{public}@
%{public}@ - %@ Upload complete connection has failed. Error: %{public}@
%{public}@ - %@ Requesting subscription updates...
Got chunk: %{public}@
%{public}@ - %@ Starting to parse %d chunks.
%{public}@ - %@ Parsing chunk number %d.
%{public}@- %@ Error found while parsing chunk number %d. Error: %{public}@
%{public}@ - %@ Finished parsing all chunks. Error: %{public}@
%{public}@ - %@ Begin stream for personID: %@ - was reset: %d
Metadata: %{public}@
%{public}@ - %@ Parsed asset collections: %{public}@
%{public}@ - %@ Could not create asset collections from response. Error: %{public}@
%{public}@- %@ Finished stream for personID: %@
%{public}@ - %@ Subscription is gone for person ID %@
%{public}@ - %@ Subscription temporarily unavailable for person ID %@
%{public}@ - %@ Found share state: %{public}@
%{public}@ - %@ Cannot parse asset dictionary. Error: %{public}@
%{public}@ retrieved a retry-after header, but we're ignoring it.
Removing database.
MMCS reported an error during download: %{public}@
MMCS downloading callback for itemID: %llu state: %{public}@ progress: %.2f
MMCS reported an error: %{public}@
MMCS reported an error during upload: %{public}@
MMCS uploading callback for itemID: %llu state: %{public}@ progress: %.2f
Unable to deserialize MMCS master manifest: %{public}@
%{public}@ - %@ Could not compute signature for asset. Ignoring. %{public}@
Error: %{public}@
%{public}@ - %@ Could not compute hash for asset. Ignoring. %{public}@
%{public}@ - %@ attempted to get file descriptor for unknown itemID %llu
%{public}@ - %@ retrieving file descriptor for item %llu, returned %d.
%{public}@ - %@ attempted to get UTI for unknown itemID %llu
%{public}@ - %@ retrieved MMCSItemType for itemID %llu. ItemType: %{public}@
%{public}@ - %@ Failed to publish assets: %{public}@
Error: %{public}@
%{public}@ - %@ _putItemDone. Error: %{public}@
%{public}@ - %@ _requestCompleted
%{public}@ - %@ _putItemsFailure
%{public}@ - %@ Failed to get asset with hash %{public}@
Error: %{public}@
%{public}@ - %@ Begin retrieving assets %{public}@
%{public}@ - %@ Using contentURL %{public}@ from MSPlatform for download
Failed to get contentURL from MSPlatform. Using URL from asset metadata for download
%{public}@ - %@ Nothing to retrieve.
%{public}@ - %@ Cannot find asset for item ID %lld
%{public}@ - %@ Retrieved file for asset %{public}@ at path %@, error %{public}@
%{public}@ - %@ Retreived asset %{public}@ with error %{public}@
%{public}@ - %@ Finished retrieving assets.
Unable to serialize metadata: %{public}@
Unable to serialize upload complete data: %{public}@
Unable to serialize get metadata request data: %{public}@
Parsing next chunk.
Error encountered during chunk parsing: %{public}@
_parseAny: %{public}@
_parseBegin: %{public}@
Subscription stream was reset by the server.
_parseAssets: %{public}@
Stream %{public}@ is not available. Status: %{public}@
Rejecting derived asset because of error: %{public}@
Rejecting asset collection because of error: %{public}@
_parseEnd: %{public}@
_parseSharingStatus: %{public}@
Error: No URL provided for HTTP transaction.
About to send to URL: %{public}@
Headers: %@
MSSPCCreateDataFromHexString Could not create data object.
Could not format auth string.
Could not base64-encode auth string.
Could not create data representation of auth string.
Could not create authentication string.
Connection failed. Error: %{public}@
Received response status: %ld
Headers: %@
Found a retry-after header with an date string: %{public}@. Date: %{public}@
Found a retry-after header with a relative interval of %d seconds. Date: %{public}@
Found a retry-after header that could not be parsed: %{public}@
Could not create character set for date matching.
Received response: %@
Transaction completed. Code: %ld.
Transaction failed. A server error has been reported. Code: %ld.
Authentication failed. Code: %ld.
Transaction forbidden. Code: %ld.
Transaction failed. Error: %{public}@
%{public}@ - %@ sending sharing update.
%{public}@ - %@ modifyShare: %{public}@
%{public}@ - %@ Aborting share operation.
%{public}@ - %@ Received share state: %{public}@
%{public}@ - %@ Transaction completed. Error: %{public}@
Failed to parse share state. Error: %{public}@
Invitation does not contain an email address. Skipped. %{public}@
Failed to send invitations: %{public}@
Can't parse invitation push notification: %{public}@
Could not parse file hash.
Refreshing server-side configuration.
Finished retrieving server-side configuration: %{public}@, error: %{public}@
Failed to retrieve configuration due to authentication error: %{public}@
PersonID %@ using server-side value for parameter %{public}@. Value: %d
PersonID %@ using server-side value for parameter %{public}@. Value: %f
PersonID %@ using server-side value for parameter %{public}@. Value: %ld
PersonID %@ using server-side value for parameter %{public}@. Value: %lld
PersonID %@ using server-side value for key %{public}@. Value: %{public}@
Can't reset server state. Error: %{public}@
%{public}@: Failed to save personIDToPersonInfo dictionary %{public}@ to %@.
%{public}@ - %@ Reset server state protocol has failed. Error: %{public}@
Resetting server state...
Couldn't reset server. Error: %{public}@
Successfully reset server state.
Couldn't reset server. Received authentication error: %{public}@
Unable to serialize reauthorize data: %{public}@
%{public}@ - %@ Reauthorizing %ld items
%{public}@ - %@ Reauthorization has failed. Error: %{public}@
Could not create sqlite3 object queue at path %@
%{public}@: Could not set journal mode. Ignoring. Error: %{public}s
Could not create tables. Error: %{public}s
SQL operation failed with code %d
Setting version number in queue database
Could not update version number. Error: %{public}s
Wrong database version. Expected 0. Actual: %{public}s
Could not retrieve database version. SQLITE error: %d
Could not compile SQL query: %{public}s
Failed to unarchive object. Error: %{public}@
Retrieving up to %lld items from queue.
sqlite error while fetching objects from the queue. Status: %d
Fetched %ld objects from the queue.
Retrieving up to %lld items from queue with zero size.
Retrieving up to %lld items from queue, target size: %lld bytes.
Retrieving up to %lld items from queue ordered by errorCount.
Removing %ld entries from the queue.
Removing all entries from the queue.
Commiting error counts for %ld items.
Updating objects for %ld items.
Not setting retry-after date because the new date is nil.
Not resetting retry-after date, because the new date %{public}@ is not later than the existing date %{public}@
Setting retry-after date to %{public}@. Old retry-after date was %{public}@
Backoff manager reset to zero seconds.
Backing off. Old interval: %0.3lf sec, new interval: %0.3lf. Next fire date: %{public}@
%{public}@: Missing key in archive: 
%{public}@
%{public}@ - %@ Cannot save user manifest.
%{public}@ - %@ Resetting metadata stream backoff timer.
%{public}@ - %@ Backing off the metadata server. Interval: %lf, next fire date: %{public}@
%{public}@ - %@ Received a metadata server retry-after date of: %{public}@
%{public}@ - %@ Resetting MMCS backoff timer.
%{public}@ - %@ Backing off the MMCS server. Interval: %lf, next fire date: %{public}@
%{public}@ - %@ Received an MMCS server retry-after date of: %{public}@
%{public}@ - %@ Not sending delete request at this time.
%{public}@ - %@ Deleting asset collections: %{public}@
%{public}@ - %@ Not deleting because we're shutting down.
%{public}@ - %@ No outstanding deletes to send.
%{public}@ - %@ Found authentication error. Will try again later. %{public}@
%{public}@ - %@ Received delete response. Successful deletes: %{public}@
Failed deletes: %{public}@
%{public}@ - %@ Successfully sent %lu delete requests.
%{public}@ - %@ Encountered temporary network issues during deletion. Will retry later.
... Error: %{public}@
%{public}@ - %@ Error sending delete request: %{public}@
%{public}@ - %@ Giving up sending %lu delete requests.
Unable to deserialize delete master manifest: %{public}@
%{public}@ - Asset collection has no master file hash: %@
%{public}@ - %@ Delete request has failed. Error: %{public}@
%{public}@ - %@ Delete response contains unknown file hash %{public}@
%{public}@ - %@ Delete response is missing the delete result. %{public}@
%{public}@ - %@ Delete response is missing a hash: %{public}@
%{public}@ - %@ These asset collections did not receive a delete response: %{public}@
Cannot convert file hash %{public}@ to string.
Cannot create dictionary.
Unable to serialize delete request data: %{public}@
Response array element is not a dictionary.
%{public}@: Idled.
%{public}@: Unidled.
%{public}@: Stopping downloads for personID %@.
%{public}@: Canceling all activities for personID %@
%{public}@: Push notification received for Shared Photo Stream with targetPersonID %@.
%{public}@: Not setting next activity date for a nil person ID.
%{public}@: Completed forgetting personID %@.
%{public}@: Shutting down state machine for personID %@.
%{public}@: Shutting down model.
%{public}@: Model has shut down.
%{public}@: Forgetting everything about person ID %@
%{public}@: Model not found for person ID %@.
%{public}@: Forgetting everything.
%{public}@: Could not enumerate contents of Shared Photo Stream directory. Error: %{public}@
%{public}@: Forgotten everything.
Plugin does not conform to MSASStateMachineDelegate protocol.
Plugin class does not implement the pluginForPersonID: selector.
%{public}@: Forcing model reset sync.
%{public}@: Could not create delegate for person ID %@.
%{public}@: Shared Photo Stream is disabled for person ID %@. Not instantiating state machine.
%{public}@: Unexpected nil album owner email
%{public}@: Unable to query contacts reputation score: %{public}@
MSASPlatform initialized.
%{public}@: Server-side config has changed. We will refetch the config and try again.
%{public}@: Received retry-after from metadata server with date :%{public}@
%{public}@: Shutting down uploader.
%{public}@: Shutting down downloader.
%{public}@: Shutting down state machine.
%{public}@: Stopping current operation.
%{public}@: Cancelling all commands. Filter album GUID: %{public}@, filter asset collection GUID %{public}@
%{public}@: Cancelled %d commands.
%{public}@: Canceling current operation.
%{public}@: Setting a new pending root ctag %{public}@ that is different from existing pending root ctag %{public}@.
%{public}@: Retried %lu times for root ctag %{public}@. Replacing with pending root ctag %{public}@.
%{public}@: Canceling outstanding operations for album GUID %{public}@, asset collection GUID %{public}@.
%{public}@: Removing upload items...
%{public}@: Finished removing upload items...
%{public}@: Removing download items...
%{public}@: Finished removing download items...
%{public}@: Reading persisted server-side config from disk.
Raw config: %{public}@
After applying defaults: %{public}@
%{public}@: Setting server-side configuration.
Original server config: %{public}@
After applying defaults: %{public}@
%{public}@: Failed to retrieve server-side configuration. Error: %{public}@
%{public}@: Retrieved server-side config version: %{public}@
%{public}@: Computed next activity date: %{public}@
%{public}@: Received event for unknown backoff manager %{public}@
%{public}@: Updated backoff time for backoff manager %{public}@
%{public}@: Retrying outstanding activities.
%{public}@: Not checking for any commands because we're shutting down.
%{public}@: Holding off until %{public}@ before performing next command.
%{public}@: Not allowed to transfer metadata at this time. Try again later.
%{public}@: Not performing any more commands because we're shutting down.
%{public}@: No more commands to perform.
%{public}@: Retrieved command for personID %{public}@, but Shared Photo Stream has been disabled. Skipping.
%{public}@: Unknown command: %{public}@. Skipping.
%{public}@: Command will be replaced by command: %{public}@
%{public}@: Encountered temporary error. Will retry later. Error: %{public}@
%{public}@: Leaving command in queue.
%{public}@: Command finished because it was cancelled.
%{public}@: Command was cancelled.
%{public}@: Command was stopped. Not removing from the command queue.
%{public}@: Encountered temporary network problems.
%{public}@: Received authentication error: %{public}@
%{public}@: Encountered visitor authentication failure. Getting new album URL and retrying command. Error: %{public}@
%{public}@: Encountered fatal error. Not retrying. Error: %{public}@
%{public}@: Encountered error: %{public}@. This command has encountered %d errors so far.
%{public}@: Retrying.
%{public}@: Giving up.
%{public}@: Cannot retry a command after a URL validation error, because the command does not have an album parameter.
%{public}@: Not scheduling another check for changes because there is already one scheduled.
%{public}@: Scheduling check for changes. Reset sync: %d
%{public}@: Scheduling retrieval of server side configuration because we don't have it yet.
%{public}@: Checking for album list updates. Reset sync: %d
%{public}@: Global reset sync found.
%{public}@: Failed to check for changes. Error: %{public}@
%{public}@: Successfully checked for changes updates.
%{public}@: New root ctag: %{public}@
%{public}@: Scheduling check for updates in albums %{public}@
%{public}@: Checking for update in album %{public}@
%{public}@: Could not complete checking for updates for album %{public}@. Error: %{public}@
%{public}@: Finished checking for updates in album %{public}@.
%{public}@: Album %{public}@ was reset synced.
%{public}@: Saving album %{public}@.
%{public}@: Found changes to %lu asset collections in album %{public}@.
%{public}@: Found sharing info changes to album %{public}@.
%{public}@: Finished checking for updates for %ld albums.
%{public}@: Scheduling retrieval of ACL for albums %{public}@
%{public}@: Retrieving access controls for album %{public}@
%{public}@: Failed to retrieve access controls for album %{public}@. Error: %{public}@
%{public}@: Successfully retrieved %ld access control entries for album %{public}@
%{public}@: Scheduling subscription to album %{public}@
%{public}@: Subscribing to album %{public}@
%{public}@: Failed to subscribe to album %{public}@. Error: %{public}@
%{public}@: Successfully subscribed to album %{public}@
%{public}@: Scheduling unsubscription from album %{public}@
%{public}@: Unsubscribing from album %{public}@
%{public}@: Failed to unsubscribe from album %{public}@. Error: %{public}@
%{public}@: Successfully unsubscribed from album %{public}@
%{public}@: Scheduling mark as spam invitation for album %{public}@
%{public}@: Marking as spam invitation for album %{public}@
%{public}@: Failed to mark as spam invitation for album %{public}@. Error: %{public}@
%{public}@: Successfully marked as spam invitation for album %{public}@
%{public}@: Scheduling mark as spam invitation for token %{public}@
%{public}@: Marking as spam invitation for token %{public}@
%{public}@: Failed to mark as spam invitation for token %{public}@. Error: %{public}@
%{public}@: Successfully marked as spam invitation for token %{public}@
%{public}@: Accepting invitation using token.
%{public}@: Scheduling update of metadata for %ld photos in album %{public}@
%{public}@: Getting metadata for %ld photos in album %{public}@.
%{public}@: Failed to get metadata. Error: %{public}@
%{public}@: Successfully checked for asset collection updates.
%{public}@: Scheduling checking for comment changes %{public}@ in album %{public}@.
%{public}@: Checking for comment changes in album %{public}@,
%{public}@: Failed to check for comment changes in asset collections %{public}@ in album %{public}@. Error: %{public}@
%{public}@: Successfully checked for comment changes %{public}@ in album %{public}@.
%{public}@: Scheduling checking for album synced state changes in albums %{public}@
%{public}@: Checking for album synced state changes in album %{public}@
%{public}@: Failed to check for synced state changes in album %{public}@. Error: %{public}@
%{public}@: Scheduling setting album synced state for album %{public}@
%{public}@: Setting synced state for album %{public}@
%{public}@: Can't set synced state for album %{public}@. This is not an error. Status: %{public}@
%{public}@: Failed to set synced state for album %{public}@. Error: %{public}@
%{public}@: Not setting synced state for album %{public}@ because we don't have a state ctag.
%{public}@: Scheduling setting asset collection synced state for asset collection %{public}@ in album %{public}@
%{public}@: Setting synced state for asset collection %{public}@ in album %{public}@
%{public}@: Can't set synced state for asset collection %{public}@ in album %{public}@. This is not an error. Status: %{public}@
%{public}@: Failed to set synced state for asset collection %{public}@ in album %{public}@. Error: %{public}@
%{public}@: Deleting album: %{public}@
%{public}@: Failed to delete album. Error: %{public}@
%{public}@: Successfully deleted album %{public}@
%{public}@: Deleting %ld photos in album %{public}@
%{public}@: Failed to delete %ld asset collections in album %{public}@. Error: %{public}@
%{public}@: Successfully deleted %ld photos in album %{public}@
%{public}@: Scheduling deletion of %ld comments in asset collection %{public}@ in album %{public}@.
%{public}@: Deleting comment %{public}@ from asset collection %{public}@ in album %{public}@.
%{public}@: Failed to delete comment %{public}@ from asset collection %{public}@ in album %{public}@. Error: %{public}@
%{public}@: Successfully deleted comment %{public}@ from asset collection %{public}@ in album %{public}@.
%{public}@: Creating album: %{public}@
%{public}@: Failed to create album %{public}@. Error: %{public}@
%{public}@: Successfully created album %{public}@
%{public}@: Updating album: %{public}@
%{public}@: Failed to update album %{public}@. Error: %{public}@
%{public}@: Successfully updated album %{public}@
%{public}@: Cannot hardlink or copy file from path %@ to %@. Error: %{public}@
%{public}@: Adding %ld asset collections to album %{public}@ retry %d.
%{public}@: Retried %d times to add asset collections %{public}@ to album %{public}@.
%{public}@: Giving up uploading asset collections %{public}@ to album %{public}@.
%{public}@: Skipping publication of %ld asset collections.
%{public}@: Scheduling addition of %ld asset collections.
%{public}@: Not expecting derivatives to arrive from plugin. Proceeding anyway.
%{public}@: Preparing upload of assets for %ld asset collections.
%{public}@: No valid asset collections to send to the metadata server.
%{public}@: Sending upload complete for %ld successful photos, and %ld failed photos.
%{public}@: Failed to send upload complete. Error: %{public}@
%{public}@: Successfully sent upload complete.
%{public}@: Adding %ld photos to album %{public}@.
%{public}@: Failed to add photos to album %{public}@. Error: %{public}@
%{public}@: Successfully enqueued %ld photos for upload to album %{public}@.
%{public}@: Failed to enqueue %ld photos for upload to album %{public}@.
%{public}@: Failed to get upload tokens for assets %{public}@. Error: %{public}@
%{public}@: Successfully obtained %ld upload tokens in asset collection %{public}@.
%{public}@: Scheduling addition of sharing relationships %{public}@ to album %{public}@
%{public}@: Adding %ld sharing relationships to album %{public}@
%{public}@: Failed to add sharing relationships to album %{public}@. Error: %{public}@
%{public}@: Successfully added sharing relationsips to album %{public}@
%{public}@: Scheduling removal of sharing relationships %{public}@ from album %{public}@
%{public}@: Removing %ld sharing relationships from album %{public}@
%{public}@: Failed to remove sharing relationships from album %{public}@. Error: %{public}@
%{public}@: Successfully removed sharing relationships from album %{public}@
%{public}@: Scheduling the addition of %ld comments to asset collection %{public}@ in album %{public}@.
%{public}@: Adding comment %{public}@ to asset collection %{public}@ in album %{public}@.
%{public}@: Failed to add comment %{public}@ to asset collection %{public}@ in album %{public}@. Error: %{public}@
%{public}@: Finished adding comment %{public}@ to asset collection %{public}@ in album %{public}@.
%{public}@: Scheduling event to fire: %{public}@, asset collection GUID: %{public}@ album GUID: %{public}@
%{public}@: Event fired: %{public}@ for assetCollectionGUID: %{public}@, albumGUID: %{public}@
%{public}@: %{public}@ public URL sharing for album %{public}@.
%{public}@: %{public}@ multiple contributors for album %{public}@.
%{public}@: Getting video URL for asset collection %{public}@.
%{public}@: Using video URL %{public}@ for asset collection %{public}@.
%{public}@: Unable to get a working video URL for asset collection %{public}@. Error:%{public}@
%{public}@: No asset has been completely uploaded for asset collection %{public}@.
%{public}@: Encountered visitor authentication failure. Getting new album URL. Error: %{public}@
%{public}@: Requesting video URL using new album URL %{public}@ for album %{public}@.
%{public}@: Unable to get a new album URL for album %{public}@. Error: %{public}@.
%{public}@: Using video URLs %{public}@ with expiration %{public}@ for asset collection %{public}@ and media asset type %ld.
%{public}@: Unable to get a working video URL for asset collection %{public}@. Error: %{public}@.
%{public}@: Cleaning up files for asset collection %{public}@.
%{public}@: Deleting asset file: %@
%{public}@: Failed to delete asset file at path %@. Error: %{public}@
%{public}@: The uploaded asset collection GUID %{public}@ is no longer in the model. Discontiniuing upload.
%{public}@: Retrieving %ld assets in albumGUID %{public}@.
%{public}@: Scheduling reauthorization for %ld items in album %{public}@
%{public}@: Reauthorizing %ld assets download from album %{public}@
%{public}@: Failed to authorize %ld assets in album %{public}@. Error: %{public}@
%{public}@: Failed to reauthorize asset GUID %{public}@ for redownload.
%{public}@: Successfully reauthorized the download of %ld assets. Trying download again.
 ...Asset GUID %{public}@
%{public}@: Failed to reauthorize asset %{public}@. Error: %{public}@
%{public}@: Could not create person model command queue. Error: %{public}s
%{public}@: Could not create command queueindex. Error: %{public}s
%{public}@: Could not create person model pending command queue. Error: %{public}s
%{public}@: Could not create pending command queue index. Error: %{public}s
%{public}@: Could not create person model pending asset collections table. Error: %{public}s
%{public}@: Could not create download queue tables. Error: %{public}s
%{public}@: Could not create download queue index. Error: %{public}s
%{public}@: Could not create download queue reverse index. Error: %{public}s
%{public}@: Could not create upload queue tables. Error: %{public}s
%{public}@: Could not create upload queue order index. Error: %{public}s
%{public}@: Could not create upload queue GUID index. Error: %{public}s
%{public}@: Could not create download queue GUID index. Error: %{public}s
%{public}@: Could not analyze database. Ignoring. Error: %{public}s
%{public}@: Could not add download queue column. Error: %{public}s
%{public}@: Could not add albumGUID column to pending asset collections queue. Error: %{public}s
%{public}@: Could not add uploadPriority column to UploadQueue. Error: %{public}s
%{public}@: Could not drop album column in DownloadQueue. Ignoring. Error: %{public}s
%{public}@: Could not add isInflight column to DownloadQueue. Error: %{public}s
%{public}@: Not supporting migration from version %d. Recreating database.
%{public}@: Could not retrieve next command sequence number. sqlite error: %{public}s
%{public}@: ...next command sequence: %lld
%{public}@: ...smallest command number: %lld
%{public}@: Enqueueing command %{public}@ at sequence number %lld.
%{public}@: Enqueueing pending command 
%{public}@
%{public}@: Requeueing pended command: %{public}@ at position %lld
%{public}@: Retrieving command with minimum identifier %{public}@.
%{public}@: Retrieving command at the head of the queue.
%{public}@: Error retrieving command at the head of the queue. sqlite error: %{public}s
%{public}@: ...retrieved command %{public}@ at sequence number %lld for personID %@, album GUID %{public}@,  asset collection GUID %@
%{public}@: Setting parameters for command at sequence number %lld.
%{public}@: ...done.
%{public}@: Removing command at order %lld.
%{public}@: Removing all entries from table %{public}@.
%{public}@: Counting number of queued command %{public}@
%{public}@: Error counting number of 
%{public}@
 commands enqueued.sqlite error: %{public}s
%{public}@: ...found %lld instances.
%{public}@: Counting number of commands queued
%{public}@: Error counting number of commands enqueued.sqlite error: %{public}s
%{public}@: ...found %lld commands in the queue.
%{public}@: Adding asset collection GUID %{public}@ in album GUID %{public}@ as pending.
%{public}@: Removing asset collection GUID %{public}@ from pending list.
%{public}@: Removing asset collections from album with GUID %{public}@ from pending list.
%{public}@: Cannot count number of assets enqueued in %{public}@. Error: %{public}s
%{public}@: Found %d assets enqueued in %{public}@ for album GUID %{public}@.
%{public}@: Found %d assets enqueued in %{public}@.
%{public}@: Setting error count for GUID %{public}@ in %{public}@ to %d.
%{public}@: Removing GUID %{public}@ from %{public}@.
%{public}@: Cannot check if GUID %{public}@ is in %{public}@. Error: %{public}s
%{public}@: Attempting to re-enqueue asset (GUID: %{public}@ collectionGUID: %{public}@) for download. Ignoring.
%{public}@: Enqueueing download for asset (GUID: %{public}@ collectionGUID: %{public}@) in album with GUID: %{public}@.
%{public}@: Querying for the next assets to download using criteria: thumbnail: %d focus album GUID: %{public}@ focus asset collection GUID: %{public}@ isInflight: %{public}@
%{public}@: Error retrieving items for download. Error: %{public}s
%{public}@: ...found %ld assets.
%{public}@: Checking if there are assets to download using criteria: focus album GUID: %{public}@ focus asset collection GUID: %{public}@
%{public}@: Error checking for assets to download. Error: %{public}s
%{public}@: result: %d
%{public}@: Counting number of assets to download using criteria: focus album GUID: %{public}@ focus asset collection GUID: %{public}@
%{public}@: Error counting items for download. Error: %{public}s
%{public}@: ...found %d assets.
%{public}@: Setting inflight for assets with GUIDs %{public}@ in DownloadQueue.
%{public}@: Failed to set inflight for assets with GUIDs %{public}@ in DownloadQueue.
%{public}@: Enqueueing upload for asset collection: %{public}@
 In album with GUID: %{public}@
%{public}@: Attempting to re-enqueue asset collection %{public}@ for upload. Ignoring.
%{public}@: Querying for next items to upload. Album GUID: %{public}@. Max: %d.
%{public}@: Error retrieving items for upload. Error: %{public}s
%{public}@: ...found %ld items.
%{public}@: Could not create daemon model tables. Error: %{public}s
%{public}@: Could not create index. Error: %{public}s
%{public}@: Could not analyze database indexes. Ignoring. Error: %{public}s
%{public}@: Cannot upgrade from database version %d to %d. Recreating database.
%{public}@: Retrieving next activity date.
%{public}@: Cannot retrieve next activity date. sqlite error: %{public}s
%{public}@: ...retrieved date: %{public}@
%{public}@: Retrieving next activity date by personID.
%{public}@: Error retrieving next activity date by personID. sqlite error: %{public}s
%{public}@: ...retrieved %ld entries.
%{public}@: Setting next activity date %{public}@ for personID %@.
%{public}@: Clearing out all next activity dates.
%{public}@: Opening database at %@
%{public}@ Cannot open sqlite3 database at path %@. Recreating database.
%{public}@: Creating new database.
%{public}@: Cannot create sqlite3 database at path %@. Carrying on.
%{public}@: Could not set cache size. Ignoring. Error: %{public}s
%{public}@: Could not compile version check statement. Deleting database and recreating.
%{public}@: Fatal error: Could not read current version. Deleting database and recreating.
%{public}@: Fatal error: database version %d is greater than what the model understands (%d). Deleting database and recreating.
%{public}@: Migrating database from version %d to version %d.
%{public}@: Could not begin transaction. Error: %{public}s
%{public}@: Could not end transaction. Error: %{public}s
%{public}@: Could not roll back transaction. Error: %{public}s
%{public}@: Could not truncate sqlite database (%d).
%{public}@: Could not close sqlite database.
%{public}@: Database ready.
%{public}@: Could not create Properties table. Error: %{public}s
%{public}@: Set database version to %d.
%{public}@: Failed to create properties table.
%{public}@: Shutting down. For destruction: %d
%{public}@: Can't shut down. sqlite error: %{public}s. Ignoring.
%{public}@: Could not compile SQL query: %{public}@. sqlite error: %{public}s
%{public}@: Retrieving persistent value for key: %{public}@
%{public}@: Cannot retrieve persistent value for key %{public}@. sqlite status: %d
%{public}@: Retrieved persistent string %{public}@ for key %{public}@.
%{public}@: Retrieved persistent object %{public}@ for key %{public}@.
%{public}@: Could not unarchive persistent object for key %{public}@: %@
%{public}@: Setting persistent value for key %{public}@.
%{public}@: Could not set persistent value for key %{public}@.
%{public}@: Deleting persistent value for key %{public}@.
%{public}@: Could not delete persistent value for key %{public}@.
%{public}@: Beginning transaction.
%{public}@: Ending transaction.
%{public}@: Rolling back transaction.
%{public}@: Hardlinked path %@ to %@.
%{public}@: Copying path %@ to %@.
%{public}@: Could not hardlink path %@ to %@. Error: %{public}@
Could not create MMCS Engine!
Getting file descriptor for itemID %lld
Could not get file descriptor for itemID %lld. Error: %{public}@
Got file descriptor %d for itemID %lld. UTI: %{public}@
Get item progress: %f state: %{public}@ asset: %p
Get item progress state: %{public}@ asset: %p
Get item progress: Could not get asset for item ID %lld. Ignoring.
Get item failed. Error: %{public}@
Asset: %{public}@
Get item completed. Asset: %{public}@. Path: %@
Get item done: Could not get asset for item ID %lld.
Put item progress: %f state: %{public}@ asset: %p
Put item progress state: %{public}@ asset: %p
Put item progress: Could not get asset for item ID %lld. Ignoring.
Put item failed. Error: %{public}@
Asset: %{public}@
Put item completed. Asset: %{public}@
Put item done: Could not get asset for item ID %lld.
Request completed.
Unknown requestor context type %d found at request completion. Ignoring.
Cancel operations: Could not find context. Ignoring
Could not register asset: %{public}@
Error: %{public}@
Registered asset for upload: %{public}@
Registered asset for download: %{public}@ 
Unregistered asset: %{public}@
Get assets called with zero assets.
Begin getting %lu assets.
Assets: %{public}@
URL: %{public}@
DSID: %@
Options:%{public}@
Get Items failed with error: %{public}@
Put assets called with zero assets.
Begin putting %lu assets.
Assets: %{public}@
URL: %{public}@
DSID: %@
Options: %{public}@
Put items failed with error: %{public}@
Attempting to register two different assets under the same MMCS ID. Rejecting.
New asset: %{public}@
Old asset: %{public}@
%{public}@: Unknown state: %d
%{public}@: Stopping all uploads.
%{public}@: Canceling all uploads.
%{public}@: Not uploading because we're shutting down.
%{public}@: Nothing to upload.
%{public}@: Rejecting asset collection %{public}@ from album %{public}@. Error: %{public}@
%{public}@: Missing expected asset collection in person model item %{public}@.
%{public}@: Uploading %ld assets for %ld asset collections.
%{public}@: No assets to upload, but detected %ld orphaned asset collections.
%{public}@: No assets to upload.
%{public}@: Cannot cancel upload for assetCollections %{public}@ which is either not in progress, or has more than one items in an upload batch
%{public}@: Cancelling in-progress upload for asset collection %{public}@ with context %{public}@
%{public}@: Cannot cancel upload for assetCollection %{public}@ which is not in progress
%{public}@: Asset upload was canceled. Ignoring.
%{public}@: Encountered temporary network error while uploading asset. Will retry later.
%{public}@: Error: %{public}@
%{public}@: Encountered MMCS auth error. Will reauthorize. Error: %{public}@
%{public}@: Failed to upload asset collection %{public}@. Error: %{public}@. Will retry later.
%{public}@: Failed to upload asset collection: %{public}@. Error: %{public}@. Giving up.
%{public}@: Already reported error on asset %{public}@. Ignoring.
%{public}@: Successfully uploaded asset collection: %{public}@
%{public}@: Could not find upload item that matches the completed asset collection.
%{public}@: Successfully uploaded asset %{public}@, but can't find matching asset collection. Ignoring.
%{public}@: Upload progress: %.2f, state: %{public}@, on asset: %p
%{public}@: Upload progress state: %{public}@, on asset: %p
%{public}@: Finished uploading %ld asset collections.
%{public}@: Found %ld orphaned assets. Ignoring.
%{public}@: Found %ld orphaned asset collections.
%{public}@: Unexpected callback - MMCSEngine:didFinishGettingAsset:context:error:
%{public}@: Unexpected callback - MMCSEngine:didMakeGetProgress:state:onAsset:context:
%{public}@: Unexpected callback - MMCSEngine:didFinishGettingAllAssetsContext:
%{public}@: Not allowed to download assets at this time.
%{public}@: Stopping all downloads.
%{public}@: Canceling all downloads.
%{public}@: Work queue go idle.
%{public}@: Setting idle state.
%{public}@: Not downloading any more assets because we're shutting down.
%{public}@: Nothing to download.
%{public}@: Rejecting asset %{public}@ from albumGUID %{public}@. Error: %{public}@
%{public}@: Needing to get auth token for %lu assets
%{public}@: Downloading %ld assets.
%{public}@: No assets to download.
%{public}@: Unexpected callback: MMCSEngine:didFinishPuttingAsset:context:error:
%{public}@: Unexpected callback: MMCSEngine:didCreateRequestorContext:context:error:
%{public}@: Unexpected callback: MMCSEngine:didMakePutProgress:state:context:
%{public}@: Unexpected callback: MMCSEngine:didFinishPuttingAllAssetsContext:
%{public}@: Asset download was canceled. Ignoring.
%{public}@: Encountered temporary network error while downloading asset. Will retry later.
%{public}@: Failed to download asset: %{public}@ due to MMCS auth error: %{public}@. Will reauthorize now.
%{public}@: Failed to download asset: %{public}@. Error: %{public}@. Will retry later.
%{public}@: Failed to download asset: %{public}@. Error: %{public}@. Giving up.
%{public}@: Already reported on asset %{public}@. Ignoring.
%{public}@: We aren't expecting an event for asset %{public}@. Ignoring.
%{public}@: Successfully downloaded asset %{public}@.
Download Latency: %0.3f seconds.
%{public}@: Download progress: %.2f, state: %{public}@, on asset: %p
%{public}@: Download progress state: %{public}@, on asset: %p
%{public}@: Finished downloading %ld assets.
%{public}@: Finished downloading batch of %lu files, for a total of %lld bytes, in %0.3f seconds. Effective download rate: %0.3f kbps.
%{public}@: %{public}@
Found a retry-after header with a date string: %{public}@. Date: %{public}@
Received a retry-after date which occurs in the past: %{public}@. Ignoring.
deviceInfo %@
Setting MPS deviceID: %@
Setting iCPL deviceID: %@ Error: %@
Request %@
Received error for request %@: %@
Response %@
MPSStateResponse %@
Missing data from response
Invalid status code %ld, ignoring
Exception thrown during object unarchival: %{public}@. Ignored.
Exception thrown during object unarchival from path %@: %{public}@. Ignored.
%{public}@: Could not compile SQL query: 
%{public}@
. sqlite error: %{public}s
%{public}@: Can't enumerate the next object in the model. Error: %{public}s
%{public}@: Could not remove pending key value changes for album with nil GUID.
%{public}@: Could not add pending changes for album with nil GUID.
%{public}@: Could not remove pending changes for album with nil GUID.
%{public}@: Could not add pending asset collection changes for album with nil GUID.
%{public}@: Could not remove pending asset collection with nil GUID.
%{public}@: Could not remove pending asset collections for album with nil GUID.
%{public}@: Could not remove pending sharing info changes for album with nil GUID.
%{public}@: Could not create album tables. Error: %{public}s
%{public}@: Could not create album by name index. Error: %{public}s
%{public}@: Could not create album by GUID index. Error: %{public}s
%{public}@: Could not create synced album metadata tables. Error: %{public}s
%{public}@: Could not create access control tables. Error: %{public}s
%{public}@: Could not create access control Album GUID index. Error: %{public}s
%{public}@: Could not create access control email index. Error: %{public}s
%{public}@: Could not create invitation tables. Error: %{public}s
%{public}@: Could not create invitation index. Error: %{public}s
%{public}@: Could not create invitation email index. Error: %{public}s
%{public}@: Could not create asset collection tables. Error: %{public}s
%{public}@: Could not create asset collection index. Error: %{public}s
%{public}@: Could not create synced asset collection metadata tables. Error: %{public}s
%{public}@: Could not create asset collection metadata index. Error: %{public}s
%{public}@: Could not create comment tables. Error: %{public}s
%{public}@: Could not create comment index. Error: %{public}s
%{public}@: Could not create comment ownership index. Error: %{public}s
%{public}@: Could not create grouped command tables. Error: %{public}s
%{public}@: Could not create comment checking queue. Error: %{public}s
%{public}@: Cannot migrate from database version %d to %d. Recreating database.
%{public}@: Command Queue has shut down.
%{public}@: Reconstructing model from the server.
%{public}@: Rejecting access control destined for non-existent album.
%{public}@: Not updating access control with an equivalent object.
%{public}@: Rejecting asset collection destined for non-existent album.
%{public}@: Rejecting comment destined for non-existent asset collection.
%{public}@: Not setting unviewed state on asset collection GUID %{public}@ because it is the same as the previous state: %d
%{public}@: Not setting unviewed state on album GUID %{public}@ because it is the same as the previous state: %d
%{public}@: Setting unviewed count for album %{public}@ to %d.
%{public}@: Deleting all comment check operations.
%{public}@: Enqueuing comment check operation for asset collection GUID %{public}@ in album GUID %{public}@
%{public}@: Flushing pending comment check queue.
%{public}@: Flushing pending comment check operation for asset collection GUID %{public}@ in album GUID %{public}@
%{public}@: Reconciling current album list due to a reset sync.
%{public}@: Deleting album GUID %{public}@ due to reset sync.
%{public}@: Finished checking album changes
%{public}@: Still has pending changes %{public}@
%{public}@: Finished checking for changes
%{public}@: Finished checking album access controls
%{public}@: Reconciling contents of album GUID %{public}@ due to a reset sync.
%{public}@: Finished checking album updates
%{public}@: Finished checking asset collections
%{public}@: Failed to subscribe from album GUID %{public}@. Error: %{public}@. Reset-syncing albums.
%{public}@: Failed to unsubscribe from album GUID %{public}@. Error: %{public}@. Reset-syncing albums.
%{public}@: Downloaded asset GUID %{public}@ for an album GUID %{public}@ that no lenger exists. Ignoring.
%{public}@: Finished checking album synced state
%{public}@: Failed to set synced state for album %{public}@. Error: %{public}@. Requesting latest state.
%{public}@: Failed to set synced state for asset collection %{public}@ in album %{public}@. Error: %{public}@. Requesting latest state.
%{public}@: Failed to delete album %{public}@. Error: %{public}@. Reset-syncing album list.
%{public}@: Failed to delete asset collection %{public}@. Error: %{public}@. Reset-syncing album.
%{public}@: Failed to delete comment ID %d in asset collection GUID %{public}@. Error: %{public}@. Reset-syncing comments.
%{public}@: Failed to create album %{public}@. Error: %{public}@.
%{public}@: Failed to update album %{public}@. Error: %{public}@. Re-reading album metadata.
%{public}@: Received derivatives for %ld photos, and received rejections for %ld photos.
%{public}@: Computing derivatives for %ld photos took %.2f seconds, or %.2f per photo.
%{public}@: Requesting derivatives for %ld photos.
%{public}@: Specs: %{public}@
%{public}@: Failed to add empty asset collection. Error: %{public}@.
%{public}@: Failed to add asset collection %{public}@. Error: %{public}@. Deleting asset collection and cancelling pending commands.
%{public}@: Failed to add sharing %ld relationships. Error: %{public}@. Deleting and refreshing list.
%{public}@: Failed to delete sharing relationship %{public}@. Error: %{public}@. Reset-syncing ACLs.
%{public}@: Failed to add comment GUID %{public}@. Error: %{public}@. Deleting comment.
%{public}@: Attempting to enqueue a command without a command string. Rejected and ignored.
%{public}@: %d: SQL operation failed: %{public}s
sqlite3 operation failed with a SQLITE_BUSY. Please grab the crash report and attach to <rdar://problem/11375454>!.
%{public}@ Retaining busy count. Now busy = %d, UI busy = %d
%{public}@ Releasing busy count. Now busy = %d, UI busy = %d
%{public}@ Retaining UI busy count. Now busy = %d, UI busy = %d
%{public}@ Releasing UI busy count. Now busy = %d, UI busy = %d
%{public}@: Hysteresis-stabilized unidled.
%{public}@ Hysteresis-stabilized idled.
%{public}s:%d: SQL operation failed: %{public}s
Could not create performance log. Error: %{public}s
Could not create performance log index. Error: %{public}s
Could not analyze performance log database. Ignoring. Error: %{public}s
Cannot migrate performance log database from version %d to %d. Recreating.
Start %{public}@ - %{public}@
Stop %{public}@ - %{public}@
%{public}@ - %{public}@ Discarding measurements.
Summarizing %{public}@ - %{public}@
%{public}@ - %{public}@ Perf log entry missing event indicator. Aborting.
%{public}@ - %{public}@ Perf log entry missing facility indicator. Aborting.
%{public}@ - %{public}@ Unexpected start event. Aborting.
%{public}@ - %{public}@ Unexpected stop event. Aborting.
%{public}@ - %{public}@ Unknown event type 
%{public}@
. Aborting.
%{public}@: Found an unknown video asset type
%{public}@: Found an unsupported videoType %{public}@
%{public}@: Found an unsupported photoType %{public}@
%{public}@: Found uploadpending flag for non-video asset
Found inconsistency of media asset type between asset (%d) and asset collection (%d)
%{public}@: Not making request because we're shutting down.
%{public}@: Cannot encode object to send to server. Error: %{public}@
%{public}@: Transaction terminated with error: %{public}@
%{public}@: Received response code %ld
%{public}@: Headers: %@
%{public}@: Will retry request %@ with response %@ due to AuthKit error
%{public}@: Will retry request %@ with response %@ due to partition move
%{public}@: Retrying request %@
%{public}@: Exceeded max retry attempts for request %@, giving up
%{public}@: Cannot unserialize server's response. Error: %{public}@
%{public}@: Sending request to %{public}@.
Headers: %{public}@
%{public}@: Server side config version has changed.
%{public}@: Our version string: %{public}@, server
s version string: %{public}@
%{public}@: Visitor authentication has failed. Client must reauth.
%{public}@: Rejecting response code %ld
%{public}@: Posting retry-after date of %{public}@ for person ID %@.
%{public}@: Creating album %{public}@
%{public}@: Finished creating album. Error: %{public}@
%{public}@: Updating album %{public}@
%{public}@: Finished updating album. Error: %{public}@
%{public}@: Sending metadata for %ld photos into album %{public}@.
%{public}@: Could not find matching asset for MMCS hash %{public}@.
%{public}@: Server did not respond to %ld assets out of %ld in a putasset request into album %{public}@.
%{public}@: Finished sending metadata for %ld photos into album %{public}@. Error: %{public}@
%{public}@: Requesting MMCS upload token for asset %{public}@ that already has token %{public}@. Ignoring the request.
%{public}@: Empty MMCS hash for asset %{public}@ requesting upload token. Ignoring the request.
%{public}@: Getting upload tokens for %ld assets of asset collection with GUID %{public}@.
%{public}@: Obtained upload token %{public}@ for asset %{public}@.
%{public}@: Did not find asset matching hash %{public}@ when requesting upload token.
%{public}@: Assets %{public}@ already have upload tokens. Ignoring the request.
%{public}@: Getting video URL for asset %{public}@.
%{public}@: Bad request to server. Error: %{public}@
%{public}@: Album does not exist on server. Error: %{public}@
%{public}@: Precondition failed. Error: %{public}@
%{public}@: Bandwidth Limit Exceeded
Unknown server error response %{public}@
%{public}@: Unable to create URL with server url string %{public}@
%{public}@: Server does not return expiry for URLs %{public}@.
%{public}@: Setting to expire in 20 minutes.
%{public}@: Sending upload complete with %ld successful uploads and %ld failed uploads.
%{public}@: Ignoring unknown pending upload ID %{public}@
%{public}@: Skipping asset collection in response. Error: %{public}@
%{public}@: Sending request to delete album %{public}@
%{public}@: Sending request to delete %ld photos.
%{public}@: Sending request to delete comment %{public}@
%{public}@: Requesting changes since root ctag %{public}@
Album change received: %{public}@
Sharing info changed for album GUID: %{public}@
Key-Value info changed for album GUID: %{public}@
%{public}@: Received changes for %ld albums, sharing info changes for %ld albums, KV changes for %ld albums. Error: %{public}@
%{public}@: Requesting sharing relationships for album %{public}@
Found sharing relationship: %{public}@
%{public}@: Requesting summary of changes for album %{public}@.
%{public}@: Finished retrieving album summary for album %{public}@. Error: %{public}@
%{public}@: Requesting metadata for %ld photos in album %{public}@.
%{public}@: Finished receiving metadata for %ld assets and skipped %ld assets, in album %{public}@. Error: %{public}@
%{public}@: Getting tokens for %ld assets from album %{public}@
%{public}@: Using contentURL %{public}@ for album %{public}@
%{public}@: Marking as spam invitation with token %{public}@
%{public}@: Retrieving comments for asset collections %{public}@ in album %{public}@
%{public}@: Unknown comment type: %{public}@. Ignoring
%{public}@: Getting synced state for album %{public}@.
%{public}@: Refreshing server-side configuration.
%{public}@: Retrieving new album URL for album with GUID %{public}@.
Unknown sharing relationship: %{public}@, skipping.
%{public}@: Flushing %d events with command %{public}@. Invariant:%{public}@
%{public}@: Not enqueueing command %{public}@ because we're shutting down.
%{public}@: New command %{public}@ cannot be grouped with command %{public}@. Flushing.
%{public}@: There are already %d commands in the queue. Flushing.
%{public}@: Cannot find callout block for command: %{public}@
%{public}@: Asserting busy assertion.
%{public}@: Deasserting busy assertion.
%{public}@: Shutting down.
%{public}@: Flushing queue.
%{public}@: Restarting idle timer.
%{public}@: Idle timer fired.
%{public}@: Restarting staleness timer.
%{public}@: Staleness timer fired.
%{public}@: Not enqueueing first item because we're shutting down.
%{public}@: Enqueueing first item.
%{public}@: Not enqueueing subsequent item because we're shutting down.
%{public}@: Enqueueing subsequent item.
MSASPhoneInvitations
IDSServiceDelegate
NSObject
MSMediaStreamDaemon
MSPublisher
MSPublishStreamsProtocolDelegate
MSStreamsProtocolDelegate
MSPublishStorageProtocolDelegate
MSSubscriber
MSSubscribeStreamsProtocolDelegate
MSSubscribeStorageProtocolDelegate
MSReauthorizationProtocolDelegate
MSAsset
MMCSAsset
NSSecureCoding
NSCoding
NSCopying
MSAssetCollection
MSTimerGate
MSErrorUtilities
MCDictionaryUtilities
MSArrayUtilities
MSStringUtilities
MSDataUtilities
MSPublishStreamsProtocol
MSSubscribeStreamsProtocol
MSStreamsProtocol
MSMMCSProtocol
MSStorageProtocol
MSPublishMMCSProtocol
MSPublishStorageProtocol
MSSubscribeMMCSProtocol
MSSubscribeStorageProtocol
MPSStateResponse
MSShare
MSInvitationResponse
MSSharingManager
MSSharingProtocolDelegate
MSSubscribedStream
MSSharingProtocol
MPSStateRequest
MSInvitationStrings
MSShareStateNotificationString
MSServerSideConfigProtocol
MSServerSideConfigManager
MSServerSideConfigProtocolDelegate
MSASPersonInfoManager
MSResetServerProtocol
MSResetServer
MSResetServerProtocolDelegate
MSReauthorizationProtocol
MSObjectQueue
MSObjectWrapper
MSBackoffManager
MSCupidStateMachine
MSDeleter
MSDeleteStreamsProtocolDelegate
MSDeleteStreamsProtocol
MSASAlbum
MSASAssetCollection
MSASModel
MSASStateMachineDelegate
MSAlbumSharingDaemon
MSASServerSideModel
MSASDefinitions
MSASAlbumChange
MSASAssetCollectionChange
MSASCommentChange
MSASAssetInfoToReauthForDownload
MSASStateMachine
MSBackoffManagerDelegate
MSASAssetUploaderDelegate
MSASAssetDownloaderDelegate
MSASPersonModelItem
MSASPersonModel
MSASDaemonModel
MSASModelBase
MSFileUtilities
MMCSRequestorContext
MMCSEngine
MMCSKit
MSASAssetUploader
MSASAssetDownloader
MSASAssetTransferer
MMCSEngineDelegate
MSProtocolUtilities
MSASSharingRelationship
MSUtilities
MSASComment
MSASModelEnumerator
MSASInvitation
MSASCommentCheckOperation
MSASPendingChanges
GroupedCommands
MSDaemon
MSPerformanceLogger
MSASProtocol
MSASPConnectionGate
NSURLConnectionDelegate
MSASEnqueuedCommand
MSASServerSideModelGroupedCommandQueue
MSImageScalingSpecification
MSASGroupedQueue
MSVideoDerivativeSpecification
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v28@0:4@8@12@16@20@24
v32@0:4@8@12@16@20@24@28
v16@0:4@8@12
v28@0:4@8@12@16B20@24
v32@0:4@8@12@16B20@24@28
v24@0:4@8@12@16@20
v12@0:4@8
v20@0:4@8@12@?16
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
v20@0:4@8@12@16
v8@0:4
@"MSASStateMachine"
@"MSASAlbum"
@"IDSService"
@"NSMutableDictionary"
@12@0:4@8
B20@0:4@8@12^@16
@20@0:4@8^@12^@16
@16@0:4@8@12
v20@0:4@8@12B16
@"<MSMediaStreamDaemonDelegate>"
@"NSCountedSet"
i8@0:4
v12@0:4i8
v12@0:4@"NSArray"8
v16@0:4@"NSArray"8@"NSArray"12
@"<MSPublisherDelegate>"8@0:4
v12@0:4@"<MSPublisherDelegate>"8
v16@0:4@"MSStreamsProtocol"8@"NSDate"12
v20@0:4@"MSPublishStreamsProtocol"8@"NSDictionary"12@"NSError"16
v16@0:4@"MSPublishStreamsProtocol"8@"NSError"12
i16@0:4@8@12
v20@0:4@8i12@16
v20@0:4@"<MSPublishStorageProtocol>"8@"MSAsset"12@"NSError"16
i16@0:4@"<MSPublishStorageProtocol>"8@"MSAsset"12
v20@0:4@"<MSPublishStorageProtocol>"8i12@"MSAsset"16
v12@0:4@"<MSPublishStorageProtocol>"8
B16@0:4@8^@12
v40@0:4@8^B12^B16^B20^B24^B28^B32^B36
q8@0:4
v16@0:4q8
@"<MSPublisherDelegate>"
@"MSMediaStreamDaemon"
@"MSObjectQueue"
@"NSArray"
@"NSMutableArray"
@"MSPublishStreamsProtocol"
@"<MSPublishStorageProtocol>"
@"NSURL"
@12@0:4i8
@"NSArray"8@0:4
@"MSSubscribedStream"8@0:4
@"<MSSubscriberDelegate>"8@0:4
v12@0:4@"<MSSubscriberDelegate>"8
v24@0:4@8@12B16@20
v24@0:4@"MSSubscribeStreamsProtocol"8@"NSString"12B16@"NSDictionary"20
v20@0:4@"MSSubscribeStreamsProtocol"8@"NSArray"12@"NSString"16
v20@0:4@"MSSubscribeStreamsProtocol"8@"NSString"12@"NSString"16
v16@0:4@"MSSubscribeStreamsProtocol"8@"NSString"12
v16@0:4@"MSSubscribeStreamsProtocol"8@12
v16@0:4@"MSSubscribeStreamsProtocol"8@"NSError"12
v20@0:4@"<MSSubscribeStorageProtocol>"8@"MSAsset"12@"NSError"16
v12@0:4@"<MSSubscribeStorageProtocol>"8
v24@0:4@"MSReauthorizationProtocol"8@"NSArray"12@"NSArray"16@"NSError"20
v16@0:4@"MSReauthorizationProtocol"8@"NSError"12
v12@0:4B8
v16@0:4^i8^i12
@"<MSSubscriberDelegate>"
@"MSSubscribeStreamsProtocol"
@"<MSSubscribeStorageProtocol>"
@"MSReauthorizationProtocol"
Q8@0:4
v16@0:4Q8
L8@0:4
v12@0:4L8
v12@0:4@"NSString"8
@"NSData"8@0:4
v12@0:4@"NSData"8
@"NSError"8@0:4
v12@0:4@"NSError"8
@"NSDate"8@0:4
v12@0:4@"NSDate"8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@12@0:4^{_NSZone=}8
v12@0:4I8
@"NSData"
@"NSDictionary"
@"NSString"
@"NSError"
@"NSDate"
@"<NSCoding>"
@20@0:4@8@12@16
@"MSAsset"
v12@0:4@?8
B16@0:4@8i12
@20@0:4@8i12@16
@24@0:4@8i12@16@20
@28@0:4@8i12@16@20@24
@12@0:4B8
@16@0:4@8^@12
{__MSPSPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?"didReceiveRetryAfterCallback"^?}
{__MSPSPCUCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?}
v20@0:4@8B12@16
@20@0:4@8@12^@16
{__MSSSPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"gotDataChunkCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?"didReceiveRetryAfterCallback"^?"connectionTimeout"d"__state"i"__chunkLengthData"^{__CFData}"__currentChunkData"^{__CFData}"__chunkBytesRemaining"i}
^{__MSSSPCChunkParsingContext=^v^?^?^?^?^?^?^{__CFString}^{__CFURL}^{__CFString}^{__CFString}i}
v12@0:4^{__MSSPCContext=^v^{__CFString}^{__CFString}^{__CFDictionary}^{__CFDictionary}d^?^?^?^?^?^{CFURLConnectionClient_V1}^{_CFURLConnection}^{__CFData}^{__CFHTTPMessage}^{__CFError}}8
@"<MSStreamsProtocolDelegate>"
i16@0:4Q8
@16@0:4Q8
v24@0:4Q8@16@20
^{_mmcs_engine=}8@0:4
^{_mmcs_engine=}
v16@0:4@"NSArray"8@"NSURL"12
v12@0:4@"MSAsset"8
@"<MSPublishStorageProtocolDelegate>"8@0:4
v12@0:4@"<MSPublishStorageProtocolDelegate>"8
@"<MSPublishStorageProtocolDelegate>"
@"<MSSubscribeStorageProtocolDelegate>"8@0:4
v12@0:4@"<MSSubscribeStorageProtocolDelegate>"8
@"<MSSubscribeStorageProtocolDelegate>"
i12@0:4@8
{?="retryAfterSeconds"b1"version"b1"icplAction"b1"mpsAction"b1}
@16@0:4@8B12
@"MSShare"
v16@0:4@8B12
v16@0:4@"MSShare"8B12
v12@0:4@"MSShare"8
@"<MSSharingManagerDelegate>"8@0:4
v12@0:4@"<MSSharingManagerDelegate>"8
v16@0:4@"MSSharingProtocol"8@"NSArray"12
v16@0:4@"MSSharingProtocol"8@"NSError"12
@"MSSharingProtocol"
@"NSTimer"
@"<MSSharingManagerDelegate>"
@24@0:4@8^@12^@16^@20
{__MSShPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"didFindShareStateCallback"^?"didFinishTransactionCallback"^?"didFailAuthenticationCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?"__contextType"i}
@"<MSSharingProtocolDelegate>"
@"<MSServerSideConfigProtocolDelegate>"
{__MSSSCPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"didFinishCallback"^?"didFailAuthenticationCallback"^?}
i20@0:4@8@12i16
d24@0:4@8@12d16
l20@0:4@8@12l16
q24@0:4@8@12q16
v20@0:4@"MSServerSideConfigProtocol"8@"NSDictionary"12@"NSError"16
v16@0:4@"MSServerSideConfigProtocol"8@"NSError"12
@"MSServerSideConfigProtocol"
{__MSRSPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?}
v16@0:4@"MSResetServerProtocol"8@"NSError"12
@"MSResetServerProtocol"
{__MSRPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveRetryAfterCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?}
^{sqlite3_stmt=}16@0:4@8r*12
@16@0:4^{sqlite3_stmt=}8^q12
@16@0:4q8
@24@0:4q8q16
^{sqlite3=}
^{__CFDictionary=}
@20@0:4@8q12
@"<NSObject><NSCoding>"
@44@0:4d8d16d24d32@40
v16@0:4d8
d8@0:4
@"<MSBackoffManagerDelegate>"
@"MSBackoffManager"
@"<MSDeleterDelegate>"8@0:4
v12@0:4@"<MSDeleterDelegate>"8
v24@0:4@"MSDeleteStreamsProtocol"8@"NSArray"12@"NSArray"16@"NSError"20
v16@0:4@"MSDeleteStreamsProtocol"8@"NSError"12
@"MSDeleteStreamsProtocol"
@"<MSDeleterDelegate>"
{_MSDSPCContext="_super"{__MSSPCContext="owner"^v"personID"^{__CFString}"authToken"^{__CFString}"deviceInfo"^{__CFDictionary}"clientHeadersRef"^{__CFDictionary}"connectionTimeout"d"__didReceiveDataCallback"^?"__didFinishCallback"^?"__didFailAuthenticationCallback"^?"__didReceiveServerSideConfigVersionCallback"^?"__didReceiveRetryAfterCallback"^?"__client"^{CFURLConnectionClient_V1}"__connection"^{_CFURLConnection}"__responseData"^{__CFData}"__response"^{__CFHTTPMessage}"__error"^{__CFError}}"finishedCallback"^?"authFailedCallback"^?"didReceiveServerSideConfigurationVersionCallback"^?"didReceiveRetryAfterCallback"^?}
v16@0:4B8@?12
v16@0:4@8@?12
v20@0:4@8I12@?16
v16@0:4B8@12
v24@0:4B8@12@16@?20
v20@0:4B8@12@?16
v16@0:4@8i12
v16@0:4B8@?<v@?>12
v12@0:4@"<MSASModelObserver>"8
@"MSASModelEnumerator"8@0:4
@"MSASAlbum"12@0:4@"NSString"8
@"MSASModelEnumerator"12@0:4@"NSString"8
@"MSASSharingRelationship"12@0:4@"NSString"8
@"MSASInvitation"12@0:4@"NSString"8
@"NSNumber"12@0:4@"NSString"8
@"MSASAssetCollection"12@0:4@"NSString"8
v16@0:4@"NSString"8@?<v@?@"NSError"@"NSURL"@"NSDate">12
v20@0:4@"NSString"8I12@?<v@?@"NSError"@"NSArray"@"NSDate">16
@"MSASComment"12@0:4@"NSString"8
B12@0:4@"NSString"8
i12@0:4@"NSString"8
@"NSString"12@0:4@"NSString"8
@"NSDate"12@0:4@"NSString"8
v16@0:4@"<NSCoding>"8@"NSString"12
@12@0:4@"NSString"8
v16@0:4B8@"NSDictionary"12
v20@0:4@"NSString"8B12@"NSDictionary"16
v16@0:4@"NSString"8@"NSDictionary"12
v16@0:4@"MSASAlbum"8@"NSDictionary"12
v20@0:4@"NSString"8@"NSDictionary"12@?<v@?@"NSDictionary"@"NSError">16
v20@0:4@"NSArray"8@"NSString"12@"NSDictionary"16
v24@0:4B8@"NSString"12@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">20
v20@0:4@"NSString"8@"NSDate"12@"NSDictionary"16
v12@0:4@"NSDictionary"8
v16@0:4@"NSDictionary"8@?<v@?>12
v16@0:4@"NSString"8B12
v12@0:4@"MSASAlbum"8
v16@0:4@"NSString"8@?<v@?@"NSError">12
v16@0:4@"NSArray"8@"NSString"12
v20@0:4B8@"NSString"12@?<v@?@"NSError">16
v16@0:4@"NSString"8@"NSDate"12
v16@0:4@"NSArray"8i12
@"NSDictionary"8@0:4
B12@0:4@"NSError"8
v28@0:4@8@12i16@20@24
B16@0:4@8@12
v12@0:4@"MSASStateMachine"8
v16@0:4@"MSASStateMachine"8@"NSDictionary"12
v28@0:4@"MSASStateMachine"8@"NSArray"12@"NSArray"16@"NSArray"20@"NSDictionary"24
v20@0:4@"MSASStateMachine"8@"NSArray"12@"NSDictionary"16
v20@0:4@"MSASStateMachine"8@"NSDictionary"12@"NSError"16
v20@0:4@"MSASStateMachine"8@"MSASAlbum"12@"NSDictionary"16
v24@0:4@"MSASStateMachine"8@"NSArray"12@"MSASAlbum"16@"NSDictionary"20
v24@0:4@"MSASStateMachine"8@"MSASAlbum"12@"NSDictionary"16@"NSError"20
v24@0:4@"MSASStateMachine"8@"NSString"12@"NSString"16@"NSDictionary"20
v28@0:4@"MSASStateMachine"8@"NSArray"12@"MSASAlbum"16@"NSDictionary"20@"NSError"24
v28@0:4@"MSASStateMachine"8@"MSASAlbum"12@"NSString"16@"NSDictionary"20@"NSError"24
v24@0:4@"MSASStateMachine"8@"NSString"12@"NSDictionary"16@"NSError"20
v28@0:4@"MSASStateMachine"8@"NSArray"12@"NSString"16@"NSString"20@"NSDictionary"24
v28@0:4@"MSASStateMachine"8@"NSString"12i16@"NSDictionary"20@"NSError"24
v32@0:4@"MSASStateMachine"8@"NSDictionary"12@"NSString"16@"MSASAlbum"20@"NSString"24@"NSDictionary"28
v24@0:4@"MSASStateMachine"8@"NSDictionary"12@"MSASAlbum"16@"NSDictionary"20
v28@0:4@"MSASStateMachine"8@"MSASAlbum"12@"NSDictionary"16@"NSError"20@"NSString"24
v32@0:4@"MSASStateMachine"8@"MSASAssetCollection"12@"MSASAlbum"16@"NSString"20@"NSDictionary"24@"NSError"28
@"NSString"16@0:4@"NSString"8@"NSDictionary"12
B16@0:4@"MSASStateMachine"8@"NSString"12
v20@0:4@"MSASStateMachine"8@"NSArray"12@"NSString"16
v24@0:4@"MSASStateMachine"8@"MSAsset"12@"MSASAlbum"16@"NSError"20
v28@0:4@"MSASStateMachine"8@"MSASAssetCollection"12@"MSASAlbum"16@"NSDictionary"20@"NSError"24
v32@0:4@"MSASStateMachine"8@"MSASComment"12@"MSASAssetCollection"16@"MSASAlbum"20@"NSDictionary"24@"NSError"28
v28@0:4@"MSASStateMachine"8@"NSArray"12@"MSASAlbum"16@"NSArray"20@"NSDictionary"24
v28@0:4@"MSASStateMachine"8@"NSString"12@"MSASAlbum"16@"NSDictionary"20@"NSError"24
v28@0:4@"MSASStateMachine"8@"MSASSharingRelationship"12@"MSASAlbum"16@"NSDictionary"20@"NSError"24
v28@0:4@"MSASStateMachine"8@12@"NSString"16@"NSString"20@"NSDictionary"24
@"MSASStateMachine"8@0:4
v28@0:4@8@12I16B20@?24
v20@0:4B8@12@16
v24@0:4@8B12@16@20
v24@0:4@8@12@16@?20
v28@0:4B8@12@16@20@?24
v20@0:4@8B12@?16
@"<MSAlbumSharingDaemonDelegate>"
@"MSASDaemonModel"
@"NSObject<OS_dispatch_queue>"
@"MSASInvitation"
@"MSASComment"
v12@0:4@"MSBackoffManager"8
v24@0:4@"MSASAssetUploader"8@"MSASAssetCollection"12@"MSASAlbum"16@"NSError"20
v16@0:4@8I12
v16@0:4@"MSASAssetDownloader"8I12
v24@0:4@"MSASAssetDownloader"8@"MSAsset"12@"NSString"16@"NSError"20
v12@0:4@"MSASAssetDownloader"8
v16@0:4i8@12
B28@0:4@8@12@16@20@24
v24@0:4@8I12@16@?20
@?8@0:4
@"MSASPersonModel"
@"MSASAssetUploader"
@"MSASAssetDownloader"
@"MSAlbumSharingDaemon"
@"MSASProtocol"
@"MSASPhoneInvitations"
@"MSImageScalingSpecification"
@"<NSObject>"
B16@0:4i8i12
v36@0:4@8@12@16@20@24q28
v16@0:4^{sqlite3_stmt=}8^{sqlite3_stmt=}12
@32@0:4@8^@12^q16^@20^@24^@28
@28@0:4^@8^q12^@16^@20^@24
@36@0:4q8^@16^q20^@24^@28^@32
v20@0:4@8q12
q12@0:4@8
v20@0:4i8@12@16
@28@0:4@8@12B16i20B24
@20@0:4@8@12i16
@20@0:4@8i12i16
^{sqlite3=}8@0:4
^{sqlite3_stmt=}12@0:4@8
^{__CFDictionary=}8@0:4
v12@0:4^{__CFDictionary=}8
@16@0:4@8i12
^*8@0:4
v12@0:4^*8
^Q8@0:4
v12@0:4^Q8
^I8@0:4
v12@0:4^I8
@"MMCSEngine"
@28@0:4@8@12@16@20@24
@24@0:4@8@12@16@20
v16@0:4@?8B12
B28@0:4Q8^i16^@20^@24
v36@0:4Q8i16d20@28@32
v28@0:4Q8@16@20@24
{?="version"i"context"^v"getFileDescriptorAndContentTypeFromItemCallback"^?"getItemProgressCallback"^?"getItemDoneCallback"^?"putItemProgressCallback"^?"putItemDoneCallback"^?"requestCompletedCallback"^?}
@"<MMCSEngineDelegate>"
@"NSThread"
v24@0:4@8f12i16@20
@"NSMutableSet"
@20@0:4@8Q12
v20@0:4@8@12i16
v24@0:4@"MMCSEngine"8@"<MMCSAsset>"12@"NSString"16@"NSError"20
v24@0:4@"MMCSEngine"8f12i16@"<MMCSAsset>"20
v20@0:4@"MMCSEngine"8@"MMCSRequestorContext"12@"NSArray"16
@"<MMCSAsset>"20@0:4@"MMCSEngine"8Q12
B16@0:4@"MMCSEngine"8i12
v20@0:4@"MMCSEngine"8@"NSString"12i16
v16@0:4@"MMCSEngine"8@"NSString"12
@20@0:4^{sqlite3=}8@12@?16
v12@0:4^{sqlite3=}8
^{sqlite3_stmt=}8@0:4
v12@0:4^{sqlite3_stmt=}8
^{sqlite3_stmt=}
B36@0:4@8^@12^@16^@20^@24^@28^@32
B28@0:4@8^@12^@16^@20^@24
B40@0:4@8^@12^@16^@20^@24^@28^q32^@36
B36@0:4@8^@12^I16^@20^@24^B28^@32
B36@0:4i8@12^@16^@20^@24^B28^@32
@"MSASServerSideModelGroupedCommandQueue"
@"MSASPendingChanges"
@20@0:4i8^@12^q16
v16@0:4@"NSURLConnection"8@"NSError"12
B12@0:4@"NSURLConnection"8
v16@0:4@"NSURLConnection"8@"NSURLAuthenticationChallenge"12
B16@0:4@"NSURLConnection"8@"NSURLProtectionSpace"12
v28@0:4@8@12@16B20@?24
v24@0:4@8B12I16@?20
@28@0:4@8@12B16@20@24
v28@0:4@8@12@16@20@?24
v24@0:4@8@12B16@?20
v20@0:4@8@?12@?16
@"MSASPConnectionGate"
@"NSObject<OS_dispatch_group>"
@?12@0:4@8
@"MSASEnqueuedCommand"
@20@0:4{CGSize=ff}8@16
f16@0:4{CGSize=ff}8
f8@0:4
v12@0:4f8
@"MSASServerSideModel"
@"MSTimerGate"
?456789:;<=
 !"#$%&'()*+,-./0123
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
