initWithRequestedPropertySet:
standardUserDefaults
boolForKey:
alloc
arrayWithObjects:count:
allSupportedProperties
dictionaryWithObjects:forKeys:count:
initWithProperties:relationships:
countByEnumeratingWithState:objects:count:
conformsToProtocol:
integerValue
respondsToSelector:
contentItemTypeForRawResponseKindIdentifierValue:
itemKind
isEqualToString:
iTunesBrandType
requestedPropertySet
properties
containsObject:
relationships
objectForKey:
contentItemTypeForStoreItemMetadata:
artistUploadedContentType
modelObjectWithStoreItemMetadata:
identifiers
setItemType:
setDetailedItemType:
setAlbum:
setArtist:
setCurator:
setMovie:
setPlaylist:
setRadioStation:
setSong:
setEpisode:
setSeason:
setShow:
setShowCreator:
setSocialPerson:
setArtistUploadedContentType:
initWithIdentifiers:block:
contentItemTypeForRawResponseKindIdentifiers:
.cxx_destruct
allowsRadioStations
setAllowsRadioStations:
allowsVideoContent
setAllowsVideoContent:
_requestedBrowseContentItemProperties
_albumBuilder
_artistBuilder
_curatorBuilder
_episodeBuilder
_movieBuilder
_radioStationBuilder
_socialPersonBuilder
_playlistBuilder
_seasonBuilder
_songBuilder
_showBuilder
_showCreatorBuilder
_shouldFakeEpisodes
_allowsRadioStations
_allowsVideoContent
_init
raise:format:
init
array
sharedManager
addObserver:
removeObserver:
prioritizeDownload:
allMediaDownloadLibraryIdentifiers
enqueueAssetForDownload:withCompletionHandler:
sendKeepLocalStatusChanged:forLibraryIdentifier:entityType:withCompletionHandler:
cancelDownloads:
hasActiveDownloads
activeDownloadForMediaItemPersistentID:
activeDownloadForStoreID:
socialProfileID
dataWithJSONObject:options:error:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
bagKey
httpBody
httpBodyType
httpMethod
queryItems
person
setPerson:
fallbackBagKeys
fallbackURLString
_person
_MediaLibrary_coreLibrary
sharedRestrictionsMonitor
allowsExplicitContent
maximumTVShowRating
maximumMovieRating
library
filteringOptions
initWithLibrary:filteringOptions:
setMediaLibrary:
setModelKind:
modelClass
translatorForMPModelClass:
emptyPropertySet
entityQueryForPropertySet:sortDescriptors:context:view:
_performCoreQuery:error:
performCoreQuery:withCompletion:
copyWithZone:
hasEntitiesForModelKind:
mlCoreView
performCoreSearchQuery:withCompletion:
.cxx_construct
_coreView
_library
_filteringOptions
stringWithUTF8String:
errorWithDomain:code:userInfo:
numberWithBool:
initWithCGImage:
size
scale
CGImage
CGColor
shadowOffset
shadowBlurRadius
shadowColor
clearColor
initWithContentsOfExactFilePath:
imageWithEtchedBorderOfColor:radius:
imageWithShadow:
mainScreen
imageWithCGImage:scale:orientation:
label
copy
setLabel:
middlewareClasses
setMiddlewareClasses:
qualityOfService
setQualityOfService:
timeoutInterval
setTimeoutInterval:
stringWithFormat:
date
expectedMaximumResponseTimeInterval
queue
operations
valueForKeyPath:
componentsJoinedByString:
error
invalidationHandler
setInvalidationHandler:
invalidationObservers
timeoutDescription
cancel
timeIntervalSinceNow
_performWithCompletion:
prepareForResponseWithCompletion:
setName:
mapForRequest:
responseClass
allMiddleware
initWithRequest:middleware:
invalidate
operationsForMiddleware:
addObjectsFromArray:
addObject:
count
setInvalidationObservers:
blockOperationWithBlock:
allOperations
addDependency:
addOperations:waitUntilFinished:
addOperation:
performWithCompletion:
calloutQueue
completionOperation
cancelationError
_label
_qualityOfService
_calloutQueue
_completionOperation
_cancelationError
_queue
_middlewareClasses
_timeoutInterval
builderProtocol
builderProxyForProtocol:
willChangeValueForKey:
didChangeValueForKey:
request
defaultCenter
postNotificationName:object:
middleware
initWithMiddleware:protocol:
chain
isValid
setMiddleware:
builder
_valid
_request
_middleware
_builder
initWithFrame:
setOpaque:
mediaPlayerBundle
imageNamed:inBundle:
initWithImage:
setFrame:
addSubview:
setAlpha:
removeObserver:name:object:
dealloc
_playbackStateDidChangeNotification:
addObserver:selector:name:object:
alpha
beginAnimations:
setAnimationDuration:
setAnimationDelegate:
endAnimations
_fadeOut
performSelector:withObject:afterDelay:
showPlaybackStateOverlaysOnTVOut
userInfo
unsignedIntegerValue
setImage:
_changeState
setPlayer:
animationDidStop:
player
_currentState
_playbackMode
_player
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
initWithRequest:
initWithFormat:
appendString:
appendFormat:
isMainThread
getChangeDetailsFromPreviousResponse:completion:
_invalidate
deferredSectionProperties
setDeferredSectionProperties:
deferredItemProperties
setDeferredItemProperties:
results
setResults:
_deferredSectionProperties
_deferredItemProperties
_results
length
substringToIndex:
stringByAppendingString:
__text__KEY
__MPModelPropertyLyricsText__PROPERTY
__hasStoreLyrics__KEY
__MPModelPropertyLyricsHasStoreLyrics__PROPERTY
descriptionWithType:
text
setText:
hasStoreLyrics
setHasStoreLyrics:
_hasStoreLyrics
_text
isFileURL
path
_setMoviePlayer:
weakObjectsHashTable
setContentURL:
initWithContentURL:
setAsset:
setPlayerItem:
methodSignatureForSelector:
setTarget:
invoke
contentURL
view
backgroundView
playbackState
loadState
controlStyle
setControlStyle:
repeatMode
setRepeatMode:
shouldAutoplay
setShouldAutoplay:
isFullscreen
setFullscreen:
setFullscreen:animated:
scalingMode
setScalingMode:
allowsAirPlay
setAllowsAirPlay:
isAirPlayVideoActive
prepareToPlay
isPreparedToPlay
play
pause
stop
beginSeekingForward
beginSeekingBackward
endSeeking
skipToNextItem
skipToBeginning
skipToPreviousItem
movieMediaTypes
setMovieSourceType:
movieSourceType
duration
playableDuration
naturalSize
setInitialPlaybackTime:
initialPlaybackTime
setEndPlaybackTime:
endPlaybackTime
currentPlaybackTime
setCurrentPlaybackTime:
currentPlaybackRate
setCurrentPlaybackRate:
_resignActive
makeObjectsPerformSelector:
_isReadyForDisplay
allInstancesResignActive
initWithAsset:
initWithPlayerItem:
forwardInvocation:
readyForDisplay
_implementation
times
setTimes:
timeOption
setTimeOption:
_times
_timeOption
movieView:willMoveToWindow:
movieViewDidMoveToWindow:
movieView:willMoveToSuperview:
willMoveToWindow:
didMoveToWindow
willMoveToSuperview:
delegate
setDelegate:
_delegate
setStopAtEnd:
initWithPlayer:
_firstVideoFrameDisplayedNotification:
_isExternalPlaybackActiveDidChangeNotification:
_itemDidChangeNotification:
_itemReadyToPlayNotification:
_itemPlaybackDidEndNotification:
_itemPlaybackErrorNotification:
_bufferingStateDidChangeNotification:
_rateDidChangeNotification:
_timedMetadataAvailableNotification:
_timedMetadataImageAvailableNotification:
_timeDidJumpNotification:
_serverDiedNotification:
_moviePlayerWillBecomeActiveNotification:
_moviePlayerDidBecomeActiveNotification:
_movieTypeAvailableNotification:
_movieSourceTypeAvailableNotification:
_movieDurationAvailableNotification:
_movieNaturalSizeAvailableNotification:
_videoViewPathWillChangeNotification:
_willResignActiveNotification:
_didBecomeActiveNotification:
_willTerminateNotification:
_simpleRemoteNotification:
lastObject
_movieOptions
movieWithURL:options:error:
_setMovies:
asset
playerItem
movieWithAsset:error:
movieWithPlayerItem:error:
blackColor
setBackgroundColor:
_videoViewController
bounds
setAutoresizingMask:
backgroundPlaceholderView
state
bufferingState
setScaleModeOverride:animated:
scaleMode
_ensureActive
setCanShowControlsOverlay:
_setVideoViewControllerOverlayStyle
setAutoPlayWhenLikelyToKeepUp:
superview
setAllowsWirelessPlayback:
allowsWirelessPlayback
avPlayer
isExternalPlaybackActive
currentItem
status
_prepareToPlayWithStartIndex:
setDefaultPlaybackRate:
currentDevice
userInterfaceIdiom
_cacheAccessAndErrorLogs
_endPlayback
_postNotificationName:object:
resignKeyWindow
_setCurrentPlaybackTime:timeOption:
currentTime
setRate:
rate
beginSeek:
endSeek
changePlaybackIndexBy:deltaType:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
objectAtIndex:
playbackMode
setPlaybackMode:
setStartPlaybackTime:
startPlaybackTime
_endUsingVideoLayer
cancelPreviousPerformRequestsWithTarget:selector:object:
beginUsingVideoLayer
window
TVOutEnabled
item
type
numberWithDouble:
numberWithUnsignedInteger:
initWithObjectsAndKeys:
_postNotificationName:object:userInfo:
_postDidFinishNotificationWithReason:
moviePlayerBookmarkButtonPressed:
moviePlayerNextButtonPressed:
feeder
queueIdentifier
indexOfItemWithIdentifier:
itemCount
moviePlayerPreviousButtonPressed:
_restartPlaybackFromBeginning
moviePlayerShareButtonPressed:
_updateDisabledPartsFromDelegate
moviePlayer:willShowOverlayWithDuration:
moviePlayerDidShowOverlay:
moviePlayer:willHideOverlayWithDuration:
moviePlayerDidHideOverlay:
setItem:
_handlePlaybackEnd
_clearPlaybackStateAfterTimeJumpIfNecessary
changePlaybackIndexBy:
_initWithMetadataItem:
setObject:forKey:
initWithCapacity:
addEntriesFromDictionary:
postNotificationName:object:userInfo:
setItemTypeOverride:
object
videoView
canShowControlsOverlay
setVideoSnapshotEnabled:
setActive:
_setUseApplicationAudioSession:
setCurrentTime:options:
displayVideoView
setControlsOverlayVisible:animate:
_canContinuePlayingWhenLocked
_pausePlaybackForSuspension
unsignedIntValue
advertisementView
controlsOverlayVisible
disallowsAMRAudio
navigationBarHidden
movieSubtitle
movieTitle
videoOverlayView
navigationBar
timeOfPlayableEnd
timeOfPlayableStart
resolvedURL
timeOfSeekableEnd
timeOfSeekableStart
visibleParts
desiredParts
setDesiredParts:
setVisibleParts:
alwaysAllowHidingControlsOverlay
setAlwaysAllowHidingControlsOverlay:
setControlsOverlayVisible:animate:force:
_setControlsHidden:animated:
setDisplayOverridePlaybackState:
setState:
setDisallowsAMRAudio:
isEqualToDictionary:
setMovieSubtitle:
setMovieTitle:
setNavigationBarHidden:
setShouldEnforceHDCP:
setVideoOverlayStyle:
shouldEnforceHDCP
setDisplayPlaybackErrorAlerts:
setUseHostedWindowWhenFullscreen:
setTVOutEnabled:
_videoViewScaleModeDidChangeNotification:
setActionAtItemEnd:
setInlinePlaybackUsesTVOut:
inlinePlaybackUsesTVOut
hostedWindow
hostedWindowContextID
accessLog
_initWithAVItemAccessLog:
errorLog
_initWithAVItemErrorLog:
endPlayback
_didPostFinishNotificationForReason:
dictionaryWithObject:forKey:
indexOfObjectIdenticalTo:
setPlaybackIndex:
setEnabled:
valueForKey:
initWithArrayQueueItems:
setShouldStartPlayback:
setStartIndex:
reloadWithPlaybackContext:
requestThumbnailImagesAtTimes:timeOption:
setUseApplicationAudioSession:
setNextFadeOutDuration:
dictionary
code
numberWithInteger:
_nowPlayingMovie
_MPArrayQueueItem
startTime
setCurrentTime:
_shouldContinuePlaybackInBackground
endUsingVideoLayer
moviePlayer:shouldDisableButtonForAction:
setDisabledParts:
currentRunLoop
dateWithTimeIntervalSinceNow:
runUntilDate:
assetImageGeneratorWithAsset:
setAppliesPreferredTrackTransform:
copyCGImageAtTime:actualTime:error:
imageWithCGImage:
removeObject:
generateCGImagesAsynchronouslyForTimes:completionHandler:
cancelAllCGImageGeneration
allValues
videoControllerShouldAutohide:
videoControllerWillEnterFullscreen:
videoControllerDidEnterFullscreen:
videoControllerWillExitFullscreen:
videoControllerDidExitFullscreen:
viewControllerRequestsExit:reason:
videoController:tappedButtonPart:
videoController:willShowOverlayWithDuration:
videoControllerDidShowOverlay:
videoController:willHideOverlayWithDuration:
videoControllerDidHideOverlay:
_additionalButtons
_advertisementView
_areControlsHidden
_currentItem
_HTTPHeaderFields
_isNavigationBarHidden
_isTVOutEnabled
_movieSubtitle
_movieTitle
_navigationBar
_playableEndTime
_playableStartTime
_resolvedContentURL
_seekableEndTime
_seekableStartTime
_setAdditionalButtons:
_setControlsHidden:
_setDelegate:
_setDisallowsAMRAudio:
_setHTTPHeaderFields:
_setMovieMediaTypesOverride:
_setMovieSubtitle:
_setMovieTitle:
_setNavigationBarHidden:
_setShouldEnforceHDCP:
_shouldEnforceHDCP
_videoView
_setUseHostedWindowWhenFullscreen:
_useHostedWindowWhenFullscreen
_hostedWindow
_hostedWindowContextID
setMovieControlMode:
useApplicationAudioSession
_movies
_setNowPlayingMovie:
thumbnailImageAtTime:timeOption:
cancelAllThumbnailImageRequests
timedMetadata
timedMetadataForKey:
_asyncImageGenerators
_controlStyle
_currentPlaybackRate
_moviePlayer
_moviesNeedReload
_movieSourceType
_movieView
_nowPlayingObserver
_playbackError
_queuedThumbnailRequests
_repeatMode
_stateBeforeSettingPlaybackTime
_finishNotificationsPosted
_shouldAutoplay
_useApplicationAudioSession
_setUseApplicationAudioSessionWhenPlaybackEnds
_preparedQueue
_didAppear
_ignorePlaybackStateChanges
_playWhenSourceTypeIsDetermined
_prepareWhenSourceTypeIsDetermined
_isChangingMoviePath
_wasPlayingBeforeSuspended
_canPostDidFinishNotificationOnItemChange
_readyForDisplay
_shouldRestartPlaybackFromBeginning
_shouldIgnoreItemChange
_willSoonEndUsingVideoLayer
_preApexSupportWindow
_initialPlaybackTime
_endPlaybackTime
_timedMetadataForUniqueKey
_isActive
_isResigningActive
_didResignActive
_canShowControlsOverlayBeforeResignedActive
_timeWhenResignedActive
_movieIndexWhenResignedActive
_cachedAccessLog
_cachedErrorLog
keySpace
value
time
extraAttributes
mutableCopy
keyspace
timestamp
allMetadata
_metadataItem
extendedLogData
extendedLogDataStringEncoding
events
_initWithAVItemAccessLogEvent:
_accessLog
_initWithAVItemErrorLogEvent:
_errorLog
numberOfMediaRequests
playbackStartDate
serverAddress
numberOfServerAddressChanges
playbackSessionID
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfStalls
numberOfBytesTransferred
observedBitrate
indicatedBitrate
numberOfDroppedVideoFrames
numberOfSegmentsDownloaded
_event
errorStatusCode
errorDomain
errorComment
setRequestedTimeToleranceBefore:
setRequestedTimeToleranceAfter:
initWithOptions:capacity:
logAssistantEvent:withTimestamp:
unsignedLongLongValue
sharedAnalytics
eventCode
eventPayload
logEventWithType:machAbsoluteTime:context:
logEventWithType:context:
_attemptLikelyToKeepUpReportingEventWithPlayer:
siriReferenceIdentifier
sharedController
registerPlayer:
unregisterPlayer:
logAssistantEvent:
_eventQueue
_lastSiriReferenceIdentifierWithLikelyToKeepUp
_players
locale
localeIdentifier
canonicalLanguageIdentifierFromString:
mediaType
hasMediaCharacteristic:
_setDisplayNameFromOption:
canonicalLanguageIdentifier
currentLocale
displayNameForKey:value:
isMainProgram
isDVS
localizedCaseInsensitiveCompare:
option
displayName
shortValue
threeCharCodesForEncodedISO639_2_T:
initWithOption:
compare:
setDisplayName:
_displayName
_canonicalLanguageIdentifier
_option
_isMainProgram
_isDVS
_mpUTITypeFromMRUTIType:
mpUniversalTrackIDType
mpUniversalTrackIDBaseID
sharedAggregateDictionary
isEnabled
_handlePlaybackStateChangedNotification:
_handleItemChangedNotification:
_handleItemTypeAvailableNotification:
timeIntervalSinceReferenceDate
addValue:forKey:
_stopPlaybackTimer
_startPlaybackTimer
_updateLastMediaTypeForItem
_item
_lastMediaType
_playbackStartTime
_playbackStartTimeIsValid
setMaxConcurrentOperationCount:
newHierarchyTokenFromParentToken:
_isRTCReportingSupported
setClientName:
setClientType:
setClientVersion:
setHierarchyToken:
setServiceIdentifier:
setSessionID:
setResponseHandler:
fetchReportingStatesWithUserInfo:fetchComplete:
_recordEvent:withInternalSession:
addOperationWithBlock:
isRTCReportingSupported
newRTCReportingMessageDictionary
sendMessageWithDictionary:error:
hasCompleteSessionSetup
hasInitializedSession
additionalUserInfo
clientName
clientType
clientVersion
hierarchyToken
serviceIdentifier
sessionID
setAdditionalUserInfo:
initializeSession
completeSessionSetup
finalizeSession
recordEvent:
_accessQueue
_additionalUserInfo
_clientName
_clientType
_clientVersion
_hasCompleteSessionSetup
_hasInitializedSession
_hierarchyToken
_internalSession
_operationQueue
_pendingReportingEvents
_serviceIdentifier
_sessionID
_sessionUserInfo
isAssetLoaded
statusOfValueForKey:error:
mediaSelectionGroupForMediaCharacteristic:
selectMediaOption:inMediaSelectionGroup:
trackID
setAlternateAudioTrackID:
setAlternateAudioTrackLocale:
enableLegibleOutputIfNecessary
offTrack
selectMediaOptionAutomaticallyInMediaSelectionGroup:
autoTrack
_suppressAVFSubtitleRendering
_currentTextTrackAccordingToAVF
tracksForType:
indexOfCurrentTrackForType:
currentTrackForType:
indexOfObject:
selectedMediaOptionInMediaSelectionGroup:
reloadData
_keyForTrackType:
beginTrackChanges
commitTrackChanges
dictionaryWithCapacity:
setValue:forKey:
reloadDataWithChangedCaptionDisplayType:
outputSupportsAC3
options
mpIsOnlyAC3
associatedMediaSelectionOptionInMediaSelectionGroup:
sortUsingSelector:
playableMediaSelectionOptionsFromArray:
mpIsSDH
insertObject:atIndex:
removeOutput:
setDelegate:queue:
setSuppressesPlayerRendering:
setTextStylingResolution:
setAdvanceIntervalForDelegateInvocation:
addOutput:
subtitleLanguages
outputSequenceWasFlushed:
legibleOutput:didOutputAttributedStrings:nativeSampleBuffers:forItemTime:
initWithItem:
isLoaded
setDisableAlternateTextTrackRendering:
selectedAlternateTextTrack
setSelectedAlternateTextTrack:
setOutOfBandTextTracks:
setTrack:forType:
hasTracksForTypes:
trackCountForTypes:
outOfBandTextTracks
disableAlternateTextTrackRendering
_alternateTracks
_trackChangeDictionary
_disableAlternateTextTrackRendering
_legibleOutput
_currentTextTrack
_outOfBandTextTracks
activeAccount
initWithIdentity:
initWithStoreRequestContext:
resultCode
domain
initWithDomain:code:userInfo:
tokenResult
token
timeToLiveMillis
performRequestWithResponseHandler:
handleFailureInFunction:file:lineNumber:description:
userAgent
setAllowedRetryCount:
setCachePolicy:
setITunesStoreRequest:
setValue:forHTTPHeaderField:
setURLBagKey:
setURL:
setRequestParameters:
uniqueIdentifier
longLongValue
storeFrontIdentifier
initWithRequestProperties:
setShouldMescalSign:
initWithAccount:
setAllowsSilentAuthentication:
setAuthenticationContext:
subarrayWithRange:
allowsSynchronousArtworkCatalogsBlockExecution
artworkCatalogsWithCount:
existingArtworkCatalogsWithCount:
hasExistingArtworkCatalogsWithCount:
artworkCatalogsBlock
setArtworkCatalogsBlock:
setAllowsSynchronousArtworkCatalogsBlockExecution:
numberOfColumns
setNumberOfColumns:
numberOfRows
setNumberOfRows:
tileSpacing
setTileSpacing:
entityIdentifier
setEntityIdentifier:
namespaceIdentifier
setNamespaceIdentifier:
revisionIdentifier
setRevisionIdentifier:
_artworkCatalogsCache
_artworkCatalogsCacheCount
_allowsSynchronousArtworkCatalogsBlockExecution
_artworkCatalogsBlock
_numberOfColumns
_numberOfRows
_tileSpacing
_entityIdentifier
_namespaceIdentifier
_revisionIdentifier
rtcReportingCategory
numberWithUnsignedShort:
rtcReportingType
newRTCReportingPayloadDictionary
networkInterfaceType
setNetworkInterfaceType:
_rtcReportingCategory
_rtcReportingType
_networkInterfaceType
RTCReportingFrameworkPath
UTF8String
copyRawItemAtIndex:
stopTime
setOverrideDuration:
playbackInfoForIdentifier:
objectAtIndexedSubscript:
indexOfObjectPassingTest:
items
startIndex
initWithItems:
pathAtIndex:
identifierAtIndex:
reloadWithPlaybackContext:completionHandler:
_queueItems
initWithMPAVItem:
setPath:
setStartTime:
setStopTime:
_path
_startTime
_stopTime
currentThread
modelObject
deviceMediaLibrary
deviceLibraryPersistentID
_handlePersistentID:modelClass:mediaLibrary:
defaultLibraryView
setLibraryView:
setModelClass:
setIdentifierSets:
libraryIdentifierSetForIdentifierSet:
finish
finishWithError:
isSubclassOfClass:
itemWithPersistentID:verifyExistence:
_deleteItems:withLibrary:
setDeviceLibraryPersistentID:
initWithBlock:
kindWithVariants:
setItemKind:
setScopedContainers:
enumerateItemIdentifiersUsingBlock:
newOperationWithResponseHandler:
playlistWithPersistentID:
_isCloudLibraryEnabled
valueForProperty:
sharedCloudController
removePlaylistsWithSagaIDs:completionHandler:
removePlaylist:
removeItemsWithSagaIDs:completionHandler:
isPurchaseHistoryEnabled
setValue:forProperty:
hideItemsWithPurchaseHistoryIDs:completionHandler:
deleteItems:
isCloudLibraryEnabled
execute
setRequest:
responseHandler
_responseHandler
URLWithString:relativeToURL:
scheme
stringByRemovingPercentEncoding
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
fileURLWithPath:isDirectory:
URLAssetWithURL:options:
playerItemWithAsset:
_loadAssetProperties
setupPlaybackInfo
_expectedPlaybackMode
UUID
UUIDString
_applicationDidBecomeActive:
_internalLikedStateDidChangeNotification:
_setListeningForCaptionsAppearanceSettingsChanged:
removeObserver:forKeyPath:context:
cancelPreviousPerformRequestsWithTarget:
loadAssetAndPlayerItem
setIsAssetLoaded:
_updateSoundCheckVolumeNormalizationForPlayerItem
_loadAssetAndPlayerItem
addObserver:forKeyPath:options:context:
_playerItemNewAccessLogEntryNotification:
_updateHasFinishedDownloading
mediaItem
rememberBookmarkTime
bookmarkTime
playbackInfo
_initialPlaybackStartTimeForPlaybackInfo:
_checkAllowsBlockingDurationCall
_durationInSeconds
absoluteString
displayableText
lyrics
_persistedLikedState
isNetworkSupportedPath:
limitReadAhead
presentationSize
defaultPlaybackRate
forwardPlaybackEndTime
setForwardPlaybackEndTime:
setLimitReadAhead:
likedState
_likedStateDidChange
_handleUpdatedLikedState:completion:
storeItemInt64ID
objectForKeyedSubscript:
boolValue
useEmbeddedChapterData
_releaseAllTimeMarkers
contentItemID
initWithIdentifier:
artworkCatalogForPlaybackTime:
initWithArtworkCatalog:allowsNetworking:
setArtwork:
visualIdenticalityIdentifier
stringRepresentation
setArtworkIdentifier:
libraryLyrics
initWithLyrics:userProvided:
setLyrics:
setLyricsDataSource:
setPlayable:
durationIfAvailable
setDuration:
setPlaybackRate:
setElapsedTime:
setStoreID:
albumStoreID
setStoreAlbumID:
artistStoreID
setStoreArtistID:
storeSubscriptionAdamID
setStoreSubscriptionID:
mainTitle
setTitle:
album
setAlbumName:
artist
setTrackArtistName:
albumArtist
setAlbumArtistName:
composer
setComposerName:
genre
setGenreName:
discNumber
setDiscNumber:
discCount
setTotalDiscCount:
albumTrackNumber
setTrackNumber:
albumTrackCount
setTotalTrackCount:
setMediaType:
externalContentIdentifier
setExternalContentIdentifier:
isExplicitTrack
setExplicitContent:
isAlwaysLive
setAlwaysLiveItem:
modelPlayEvent
itemType
radioStation
name
setRadioStationName:
radioStationStringID
setRadioStationStringIdentifier:
performWithoutEnforcement:
contentItemCollectionInfo
setCollectionInfo:
setEditingStyleFlags:
setObject:forKeyedSubscript:
shouldShowComposer
setUserInfo:
_currentContentItemDeviceSpecificUserInfo
setDeviceSpecificUserInfo:
artworkCatalogBlock
availableChapterLocales
preferredLanguages
initWithLocaleIdentifier:
enumerateObjectsUsingBlock:
arrayWithObjects:
chapterMetadataGroupsWithTitleLocale:containingItemsWithCommonKeys:
loadValuesAsynchronouslyForKeys:completionHandler:
commonKey
initWithMarkerType:
URLWithString:
setUrl:
stringValue
setTime:
setMetadata:
markerType
setIndex:
title
_playerItemDurationIfAvailable
setChapterTimeMarkers:
setArtworkTimeMarkers:
setUrlTimeMarkers:
arrayWithObject:
_loadTimeMarkersBlocking
mpLoadValuesAsynchronouslyForKeys:completionQueue:completionHandler:
_loadTimeMarkersAsync
chapterTimeMarkers
_timeMarkerFromMarkers:forTime:
artworkTimeMarkers
urlTimeMarkers
closedCaptionTimeMarkers
trackReferences
intValue
trackWithTrackID:
localizedPositionInPlaylistString:
durationFromExternalMetadata
_seekableTimeRanges
CMTimeRangeValue
_durationFromExternalMetadataIfAvailable
loadedTimeRanges
_playableDurationForLoadedTimeRanges:
hasDisplayableText
CMTimeValue
observeValueForKeyPath:ofObject:change:context:
persistentID
numberWithUnsignedLongLong:
cloudID
cloudAlbumID
cloudUniversalLibraryID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
modelGenericObject
numberWithLongLong:
flattenedGenericObject
anyObject
playlist
isLibraryAdded
isLibraryAddEligible
keepLocalEnableState
keepLocalManagedStatus
localFileAsset
isNonPurgeable
protectionType
storeAsset
isRedownloadable
isSubscriptionRequired
endpointType
userRating
numberWithFloat:
doubleValue
seekableTimeRanges
setSoundCheckVolumeNormalization:
feedUniqueIdentifier
customAVEQPreset
allowsEQ
_setEQPreset:
seekToTime:completionHandler:
_setAudibleDRMInfo:
_setRampInOutInfo:
_itemAttributeAvailableKey:
threadDictionary
contentItem
setElapsedTime:playbackRate:
_currentPlaybackRateDidChange:
_captionAppearanceSettingsChanged
languageCode
_isStreaming
_imageChapterTrackIDsForAsset:
tracks
assetTrack
notifyAVPlayerItemWillChange:
notifyAVPlayerItemDidChange:
errorResolverForItem:
initWithErrorResolver:
setResolutionHandler:
resolveError:
defaultScaleMode
setDefaultScaleMode:
URLFromPath:
applyVolumeNormalizationForQueuedItems:
nowPlayingInfoCenter:lyricsForContentItem:completion:
isSupportedDefaultPlaybackSpeed:
initWithURL:
initWithURL:options:
flushNowPlayingCaches
initialPlaybackStartTime
resetBookkeeping
setPlaybackStoppedTime:
notePlaybackFinishedByHittingEnd
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
setRating:
subtitleTrackID
setSubtitleTrackID:
setUserAdvancedDuringPlayback:
setUserChangedItemsDuringPlayback:
setUserSkippedPlayback:
userAdvancedDuringPlayback
userSkippedPlayback
userChangedItemsDuringPlayback
durationInSeconds
applyVolumeNormalizationWithSoundCheckEnabled:
canSeedGenius
isCloudItem
isValidPlayerSubstituteForItem:
isAssetURLValid
currentTimeDisplayOverride
displayableTextLoaded
hasAlternatesForTypes:
alternatesCountForTypes:
hasDataForItemArtwork
hasPlayedThisSession
isAd
isStreamable
podcastURL
playbackRateForLevel:direction:paused:
prepareForRate:completionHandler:
setFeeder:
scanIntervalForLevel:paused:
setHasPlayedThisSession:
setLikedState:
storeItemID
supportsRewindAndFastForward15Seconds
supportsSkip
supportsSkipToPreviousItem
supportsRating
supportsSettingCurrentTime
_realoadEmbeddedTimeMarkers
timedMetadataIfAvailable
setContentItemID:
isInWishList
isRadioItem
setInWishList:
stationAllowsItemLiking
stationID
stationHash
stationName
stationStringID
supportsRadioTrackActions
setClosedCaptionTimeMarkers:
chapterTimeMarkerForTime:
artworkTimeMarkerForTime:
urlTimeMarkerForTime:
closedCaptionTimeMarkerForTime:
localizedPositionInPlaylistString
durationIsValid
playableDurationIfAvailable
blockForDirectAVControllerNotificationReferencingItem:
_clearAsset
setupEQPresetWithDefaultPreset:
_isBackgroundPlaybackRestricted
_updateDurationSnapshotWithElapsedTime:playbackRate:
_expectedStartTimeWithPlaybackInfo:
_expectedStopTimeWithPlaybackInfo:
_loadMediaItemWithCompletionHandler:
_setCurrentPlaybackRate:
_setNeedsPersistedLikedStateUpdate
invalidateContentItemDeviceSpecificUserInfo
localeForAssetTrack:
reevaluatePlaybackMode
reevaluateType
replacePlayerItemWithPlayerItem:
resolvePlaybackError:withCompletion:
_willBecomeActivePlayerItem
_willResignActivePlayerItem
recordQueuedTimestamp
alternateTracks
soundCheckVolumeNormalization
didAttemptToLoadAsset
canReusePlayerItem
itemError
setItemError:
playlistIdentifier
setPlaylistIdentifier:
setQueueIdentifier:
setFeedUniqueIdentifier:
buyOffers
copyrightText
isLikedStateEnabled
supportsLikedState
loudnessInfoVolumeNormalization
setLoudnessInfoVolumeNormalization:
prefersSeekOverSkip
shouldPreventPlayback
allowsAirPlayFromCloud
allowsExternalPlayback
aggregateDictionaryItemIdentifier
hasFinishedDownloading
hasPerformedErrorResolution
setHasPerformedErrorResolution:
queuedTimestamp
setQueuedTimestamp:
_asset
_assetQueue
_avPlayerItem
_isAssetLoaded
_feeder
_soundCheckVolumeNormalization
_chapterTimeMarkers
_artworkTimeMarkers
_urlTimeMarkers
_closedCaptionTimeMarkers
_cachedDuration
_cachedPlayableDuration
_cachedSeekableTimeRanges
_seekableTimeRangesCacheTime
_type
_contentItem
_defaultPlaybackRate
_advancedDuringPlayback
_handledFinishTime
_hasPlayedThisSession
_wasCountedAsSkipped
_isStreamable
_watchingAttributes
_userChangedItemsDuringPlayback
_lyricsAvailable
_timeMarkersNeedLoading
_hasLoadedPlaybackMode
_hasPostedNaturalSizeChange
_hasRegisteredForCaptionsAppearanceChanged
_hasValidPlayerItemDuration
_lastLoggedTotalDuration
_likedState
_limitReadAhead
_playerItemDuration
_assetLoaded
_didAttemptToLoadAsset
_canReusePlayerItem
_likedStateEnabled
_supportsLikedState
_prefersSeekOverSkip
_shouldPreventPlayback
_allowsAirPlayFromCloud
_allowsExternalPlayback
_hasFinishedDownloading
_hasPerformedErrorResolution
_itemError
_playlistIdentifier
_queueIdentifier
_feedUniqueIdentifier
_buyOffers
_copyrightText
_externalContentIdentifier
_mediaItem
_loudnessInfoVolumeNormalization
_modelGenericObject
_aggregateDictionaryItemIdentifier
_contentItemID
_queuedTimestamp
_albumStoreID
_storeItemInt64ID
_storeSubscriptionAdamID
weakRefWithObject:
MPAVItem
setMPAVItem:
defaultInfo
arrayWithCapacity:
storeItemMetadataRequestItemIdentifier
requestingBundleIdentifier
requestingBundleVersion
clientInfo
setRequestingBundleIdentifier:
setRequestingBundleVersion:
defaultIdentityStore
itemIdentifiers
setItemIdentifiers:
reason
setKeyProfile:
personalizationStyle
setPersonalizationStyle:
allowLocalEquivalencies
setReturnsLocalEquivalencies:
delegatedUserIdentity
setDelegatedIdentity:
userIdentity
setIdentity:
userIdentityStore
setIdentityStore:
setClientInfo:
setRequestContext:
setClientIdentifier:
setPlatformIdentifier:
itemIdentifiersForModelObjects:
clientIdentifier
isPersonalized
storePlatformRequest
setAllowLocalEquivalencies:
setReason:
platform
setPlatform:
setDelegatedUserIdentity:
setUserIdentity:
setUserIdentityStore:
_allowLocalEquivalencies
_reason
_itemIdentifiers
_platform
_clientIdentifier
_personalizationStyle
_clientInfo
_delegatedUserIdentity
_userIdentity
_userIdentityStore
MSVBase64UUIDString
bidirectionalDictionary
decodeIntegerForKey:
decodeObjectOfClass:forKey:
encodeInteger:forKey:
encodeObject:forKey:
removeObjectForKey:
canSkipToPreviousItemForItem:
uuidWithMSVBase64UUID:
queueIdentifierForItemID:
itemForIdentifier:
keyForObject:
itemIDAtIndex:
contentItemIDForQueueItemID:
setKey:forObject:
queueFeederDidReplaceItem:
itemClass
repeatType
shuffleType
itemForIndex:
audioSessionModeForMediaType:
hasValidItemAtIndex:
contentItemIDAtIndex:
_itemForIndex:queueIdentifier:
mediaItemAtIndex:
contentsDidChangeWithPreferredStartIndex:error:
queueFeeder:didChangeContentsWithPreferredStartIndex:error:
queueFeeder:didChangeContentsWithReplacementPlaybackContext:
queueFeederDidInvalidateAssets:
queueFeederDidInvalidateRealRepeatType:
queueFeederDidInvalidateRealShuffleType:
_canPurgeNextStartTimes
bundleWithIdentifier:
localizedStringForKey:value:table:
MP_attributedStringWithEmphasizedTextSeparator:regularTextAttributes:emphasizedTextAttributes:
setNumberStyle:
setUsesSignificantDigits:
setUsesGroupingSeparator:
stringFromNumber:
supportsStateRestoration
canSkipItem:
allowsUserVisibleUpcomingItems
canSeek
canSkipToPreviousItem
userCanChangeShuffleAndRepeatType
encodeWithCoder:
initWithCoder:
restoreState:
shouldReuseQueueFeederForPlaybackContext:
setNextStartTime:forIndentifier:
shuffleItemsWithAnchor:
reloadWithPlaybackContext:requireFinalTracklist:completionHandler:
shouldBeginPlaybackOfItem:error:
canReorder
itemTypeForIndex:
playerPreparesItemsForPlaybackAsynchronously
skipLimit
itemForItemID:
indexForItemID:
generateContentIDForItem:
isPlaceholderItemForQueueIdentifier:
applyVolumeNormalizationForItem:
realRepeatType
realShuffleType
audioSessionModeForItemAtIndex:
hasItemForIndex:
initialPlaybackQueueDepthForStartingIndex:
metadataItemForIdentifier:
indexOfMediaItem:
mediaItemForIdentifier:
contentsDidChangeWithPreferredStartIndex:
contentsDidChangeWithReplacementPlaybackContext:
invalidateAssets
invalidateRealRepeatType
invalidateRealShuffleType
localizedAttributedPositionInPlaylistStringForItem:withRegularTextAttributes:emphasizedTextAttributes:
player:currentItemWillChangeFromItem:
player:currentItemDidChangeToItem:
player:shouldContinuePlaybackForNetworkType:returningError:
requiresQueueChangeVerification
setRequiresQueueChangeVerification:
setSkipLimit:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
setSiriReferenceIdentifier:
playbackContextUniqueIdentifier
setPlaybackContextUniqueIdentifier:
setRepeatType:
setShuffleType:
activeShuffleType
setActiveShuffleType:
_repeatType
_shuffleType
_nextStartTimes
_exportableItemIDs
_requiresQueueChangeVerification
_state
_playActivityFeatureName
_playActivityRecommendationData
_siriReferenceIdentifier
_playbackContextUniqueIdentifier
_activeShuffleType
_uniqueIdentifier
_modelPlayEvent
_skipLimit
sharedDeviceLibraryController
performDeleteEntityChangeRequest:withRelatedModelObjects:completion:
performWithResponseHandler:
setModelObject:
_modelObject
isNSDictionary__
initWithStorePlatformDictionary:expirationDate:
initWithStorePlatformDictionary:parentStoreItemMetadata:expirationDate:
offers
storeID
decodePropertyListForKey:
decodeBoolForKey:
isNSArray__
encodeBool:forKey:
allocWithZone:
isNSString__
artworkRequestTokenForStorePlatformDictionary:
setArtworkURL:
artworkRequestToken
childrenStoreIDs
childStorePlatformDictionaryForStoreID:
initWithStorePlatformDictionary:parentStoreItemMetadata:
descriptionTextWithStyle:
assets
editorNotesWithStyle:
expirationDate
artistName
artworkTrackIDs
collectionName
collectionStoreID
composerName
curatorID
curatorName
hasArtistBiography
hasLyrics
hasSocialPosts
genreNames
isBeats1
explicitRating
isExplicitContent
isCompilation
isMasteredForITunes
isPreorder
playlistType
movementName
movementCount
movementNumber
movieClips
lookupDictionary
playlistIdentifiers
popularity
releaseDate
_storePlatformReleaseDateFormatter
stringFromDate:
lastModifiedDate
_storePlatformLastModifiedDateFormatter
shortName
shouldBookmarkPlayPosition
showComposer
trackCount
trackNumber
seasonNumber
episodeCount
versionHash
workName
handle
nameRaw
isPrivatePerson
isVerifiedPerson
shortURL
videoSubtype
firstObject
isNSNumber__
artworkRequestTokenForStorePlatformArtworkValue:
initWithLookupDictionary:
dateFromString:
initWithRawMediaLookupDictionary:
setLookupItemArtworks:
calendarWithIdentifier:
timeZoneForSecondsFromGMT:
setTimeZone:
setSourceEditorialArtworkKind:
artworkRequestTokenForScreenshotArtwork
setCropStyle:
artworkRequestTokenForEditorialArtworkKind:
artworkRequestTokenForUberArtworkKind:
initWithDownloadAssetDictionary:
earlierDate:
setLocale:
setDateFormat:
setLenient:
supportsSecureCoding
storeServerCalendar
initWithStorePlatformDictionary:
childStoreItemMetadatas
descriptionText
editorNotes
isExpired
shortEditorNotes
effectiveStorePlatformDictionary
latestAlbumArtworkRequestToken
movieClipsCount
avatarArtworkRequestToken
childStorePlatformDictionaryForArtworkTrackID:
tvEpisodeArtworkRequestToken
tvShowArtworkRequestToken
movieArtworkRequestToken
flowcaseEditorialArtworkRequestToken
brickEditorialArtworkRequestToken
metadataByAppendingMetadata:
metadataWithChildStorePlatformDictionaries:
metadataWithParentMetadata:
parentStoreItemMetadata
_downloadAssetDictionary
_downloadMetadataDictionary
_expirationDate
_hasOverrideChildStorePlatformDictionaries
_overrideChildStorePlatformDictionaries
_storePlatformDictionary
_parentStoreItemMetadata
offerType
currentCalendar
component:fromDate:
whitespaceAndNewlineCharacterSet
urlTitleTrimmingCharacterSet
stringByTrimmingCharactersInSet:
comparableTime
maxTime
hasArtworkAtPlaybackTime
index
metadata
_duration
_index
_time
_title
_url
_markerType
_metadata
setAVItem:
setChapterMarker:
setArtworkMarker:
setURLMarker:
setClosedCaptionMarker:
chapterMarker
artworkMarker
URLMarker
closedCaptionMarker
initWithTimeMarkerNotificationUserInfo:
crossedMarkerOfType:
AVItem
_AVItem
_chapterMarker
_artworkMarker
_URLMarker
_closedCaptionMarker
crossedTimeMakerWithEvent:
__crossedTimeMarkerNotification:
registerForTimeMarkerNotificationsIfNecessaryForPlayer:
unregisterForTimeMarkerNotifications
initWithStyle:reuseIdentifier:
colorWithWhite:alpha:
setSelectedBackgroundView:
setContentMode:
contentView
setTintColor:
textLabel
font
setFont:
whiteColor
setHighlightedTextColor:
setTextAlignment:
setTextColor:
_setWantsUnderlineForAccessibilityButtonShapesEnabled:
preferredFontForTextStyle:
darkGrayColor
_separatorView:
setDebugCell:
setPendingSelection:
routeName
_detailTextForRoute:
_iconImageForRoute:
setNeedsLayout
setAccessoryType:
_updateSpinnerStyle
startAnimating
stopAnimating
_updateSmartAudioAccessory
layoutSubviews
_shouldReverseLayoutDirection
traitCollection
displayScale
_defaultAccessoryView
frame
image
sizeThatFits:
setIconStyle:
lightGrayColor
leftPercentage
rightPercentage
floatValue
batteryLevel
_shouldShowSeparateBatteryPercentagesForBatteryLevel:
singlePercentage
casePercentage
isPickedOnPairedDevice
auxiliaryDevices
isPlaying
deviceName
accessoryType
kitImageNamed:
imageWithRenderingMode:
setAccessoryView:
_checkmarkImageForSmartAudio
sizeToFit
setActivityIndicatorViewStyle:
titleView
subtitleView
iconView
separatorView
setRoute:
setMirroringStyle:
setUseSmartAudioCheckmarkStyle:
_configureLabel:
_configureDetailLabel:
route
mirroringSwitchVisible
setMirroringSwitchVisible:
mirroringStyle
iconStyle
isDebugCell
isPendingSelection
useSmartAudioCheckmarkStyle
provideOwnSeparator
setProvideOwnSeparator:
_iconImageView
_routeNameLabel
_subtitleTextLabel
_spinnerView
_smartAudioImageView
_mirroringSwitchVisible
_debugCell
_pendingSelection
_useSmartAudioCheckmarkStyle
_provideOwnSeparator
_route
_mirroringStyle
_iconStyle
initWithOptions:
_debugLogSystemControllerState
addPointer:
_onQueueUpdateClientRouteDiscoveryMode
removePointerAtIndex:
compact
discoveryMode
allObjects
stringByAppendingPathComponent:
writeToFile:atomically:encoding:error:
sharedRoutingCoordinator
registerClientDataSource:
unregisterClientDataSource:
reloadClientRouteDiscoveryMode
_clientDataSources
_clientDiscoveryMode
_serialQueue
_debugNotifyToken
setCountLimit:
representationSize
scaledFittingSize
representationToken
cache
_representationCacheKeyForArtworkCatalog:forAnyRevision:
_removeLoadingRequestForArtworkCatalog:
_performSyncBlock:
_addLoadingRequestForArtworkCatalog:
_hasLoadingRequestForArtworkCatalog:
_errorWithDescription:
tileArtworkVisualIdenticalityIdentifiers
renderHint
setRenderHint:
isEqualToArray:
representationWithSize:image:
setTileArtworkVisualIdenticalityIdentifiers:
setRepresentationToken:
null
destinationScale
_tileSizeForFittingSize:rows:columns:spacing:
setFittingSize:
setDestinationScale:
replaceObjectAtIndex:withObject:
requestImageWithCompletionHandler:
drawInRect:
initWithTiledArtworkRequest:scaledFittingSize:
dataSource
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
_loadingRequestForArtworkCatalog:
sharedDataSource
areRepresentationsAvailableForCatalog:
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
hasExistingRepresentationOnDiskForArtworkCatalog:
getExportableArtworkURLForCatalog:completionHandler:
_performAsyncBlock:
_loadingTiledArtworkRequests
_loadingTiledArtworkRequestsAccessQueue
_tiledArtworkRepresentationFallbackCache
_tilingArtworkCatalogOperationQueue
legacyMediaQuery
_executeLegacyRequest
_executeRequest
mediaLibrary
connectionAssertionWithIdentifier:
_libraryView
_itemProperties
sectionKind
MLCorePropertiesForPropertySet:
entityClass
_sectionProperties
groupingType
predicateForProperty:
setGroupingType:
collections
_representativeCollectionGroupingType
resultSet
playlistAttributes
revision
itemsQuery
_hasStaticEntities
_enumerateItemPersistentIDsUsingBlock:
setWithObject:
setItemPropertiesToFetch:
initWithRequest:sectionQueryResults:itemQueryResults:
initWithDataSource:
sectionInfo
sections
range
sectionIndexTitles
_enumerateCollectionPersistentIDsUsingBlock:
initWithRequest:itemQueryResults:itemIdentifierQueryResults:
setLibraryAssertion:
_sanityCheckRequest
setOperationQueue:
operationQueue
setSectionKeepLocalStatusConfigurations:
contentRange
scopedContainers
setAllowedItemIdentifiers:
setFilteringOptions:
sectionSortDescriptors
setQuery:
setSerialAccessQueue:
serialAccessQueue
wantsDetailedKeepLocalRequestableResponse
setMultiQuery:
arrayByAddingObject:
itemSortDescriptors
setDownloadablePlaylistItemEntityQueryBlock:
setDownloadableItemsQuery:
setResultHandler:
allowedItemIdentifiers
propertySetWithProperties:
propertiesQueryForPropertySet:scopedContainers:allowedItemIdentifiers:view:
itemTranslationContext
itemProperties
sectionProperties
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
propertySetByCombiningWithPropertySet:
_serialAccessQueue
query
libraryView
resultHandler
_resultHandler
_query
episode
season
show
storeAdamID
artworkCatalog
emptyIdentifierSet
setTvEpisode:
storeCloudID
requiredLocalFileAssetProperties
requiredPlaybackPositionProperties
requiredStoreAssetProperties
playbackPosition
_invalidateModelObjectPlaybackItemMetadata
requiredProperties
albumArtistName
albumStoreAdamID
albumTitle
allowsInitiatingPlayWhileDownload
artistStoreAdamID
contentTitle
contentType
expectedDuration
storeSagaID
_episode
sharedInstance
_resetInternalState
playlistManagerClass
setPlaylistManager:
_itemTimeMarkersAvailableNotification:
_applicationWillAddDeactivationReason:
_applicationDidRemoveDeactivationReason:
_applicationDidEnterBackgroundNotification:
_applicationWillEnterForegroundNotification:
sharedNetworkObserver
_networkChangedNotification:
sharedMonitor
_cancelStallTimer
_cancelUpdateCurrentItemBookkeepingTimer
removeTimeObserver:
_unregisterForPlayer:
_unregisterForAVItemNotifications:
_unregisterForPlaylistManager:
sharedApplication
endBackgroundTask:
_playlistManager
hasQueueContents
canSeekItem:
setUbiquitousBookkeepingEnabled:
_pauseWithFadeout:forScanning:
_setState:
currentItemIsRental
_playerAVAudioSession
setActive:error:
setHidden:
animateWithDuration:animations:
_updateScanningRate
_hasValidPlayerTime
_setLastSetTime:
updateBookkeepingNow
currentIndex
setCurrentIndex:selectionDirection:
silenceOutput:error:
setPlaybackIndex:selectionDirection:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:allowSkippingUnskippableContent:
changePlaybackIndexBy:deltaType:ignoreElapsedTime:allowSkippingUnskippableContent:error:
_delayedPlaybackIndexChange
_changeChapterTimeMarkerIndexBy:
indexWithDelta:fromIndex:ignoreElapsedTime:didReachEnd:
_endSeekAndChangeRate:
isCurrentItemReady
isLiveStreaming
_currentTimeWithPreloadedPlayerTime:value:
_setRate:forScanning:withItem:
_setAllowsItemErrorResolution:
reset
pauseWithFadeout:
disableAutoplayForCurrentItem
_setStoppingFadeOutDuration:
_setRate:forScanning:
playWithOptions:
_playWithOptions:allowsEnablingAutoPlay:
_delayedSetCurrentTime
_hasEnoughDataToPlay
_canPlayItem:
_rateDidChange:
enableAutoplayForCurrentItem
playItemAtIndex:forceRestart:
playItemAtIndex:withOptions:
reloadItemsKeepingCurrentItem:
playChapterTimeMarkerAtIndex:withOptions:
_attemptAutoPlay
togglePlaybackWithOptions:
alwaysPlayWheneverPossible
initWithInterval:queue:block:
interval
block
addPeriodicTimeObserverForInterval:queue:usingBlock:
_addObserverInfo:forCoreMediaObserver:forInitialCreation:
valueWithCMTime:
initWithTimes:queue:block:
addBoundaryTimeObserverForTimes:queue:usingBlock:
initWithKeyOptions:valueOptions:capacity:
endTickTimer
compare:options:range:
setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:
setAllowsExternalPlayback:shouldIgnorePlaybackQueueTransactions:
_showsPlayingWhenInState:
_displayPlaybackState
rawRate
usesExternalPlaybackWhileExternalScreenIsActive
setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:
setUsesExternalPlaybackWhileExternalScreenIsActive:shouldIgnorePlaybackQueueTransactions:
_sendTracePlaybackStartDidFinishIfNeededForItem:
applyRepeatSettings
applyShuffleSettings
volumeControlIsAvailable
_userVolume
_setUserVolume:
pickedRoute
_setActionAtEndAttributeForState:
initWithName:
_applyAirPlayMusicMode
setClient:wantsToAllowExternalPlayback:
setDisableAirPlayMirroringDuringPlayback:
setUsesAudioOnlyModeForExternalPlayback:
_disconnectAVPlayerWithReason:
setApplicationAudioSession:
_connectAVPlayer
audioFormats
_setAutoPlayBackgroundTaskAssertionEnabled:
_setVideoLayerAttachedToPlayer:force:pauseIfNecessary:
_clearVideoLayer:
externalPlaybackType
externalPlaybackVideoGravity
authorizationStatus
defaultMediaLibrary
preferredAudioLanguages
preferredSubtitleLanguages
playerAVAudioSession
setExternalPlaybackVideoGravity:
_clearSeekingIntervalsForStreaming
_resumeTickTimer
_pauseTickTimer
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
_pickedRoute
routeSubtype
_applyCellularAccessSettings
setUsesAudioOnlyModeForExternalPlayback:shouldIgnorePlaybackQueueTransactions:
usesAudioOnlyModeForExternalPlayback
_CALayerDestinationIsTVOut
_setCALayerDestinationIsTVOut:
layer
setPlayerCurrentItem:
_playbackFailedWithError:canResolve:
shouldStartPlayback
shouldRestartPlayback
_playerFailedToQueueNotification:
currentTimeForBookmarking
playableDurationOfCurrentItemIfAvailable
_verifyShouldContinuePlayback
_setPreferredLanguageList:
_setPreparesItemsForPlaybackAsynchronously:
networkType
_applyAirPlayMusicModeForItem:shouldIgnorePlaybackQueueTransactions:
isSuspended
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
_registerForAVItemNotifications:
_updateTypeForItem:
_updateCurrentItemHasFinishedDownloading
_updateStateForPlaybackPrevention
_reloadTimeMarkerObservationsForItem:
_streamLimitExceeded:
isTransitioningSource
indexOfItemIdentifier:
_isChangingPlayerProperties
shouldResetQueueWhenReachingEnd
_itemFailedToPlayToEnd:
lastResourceLoadingError
airPlayVideoEnded
airPlayFailedRentalDownloadRequired
seekToTime:toleranceBefore:toleranceAfter:
_delayedUpdateScanningRate
actionAtItemEnd
_verifyDisplayProtection
_setValid:
_setBufferingState:
canPlayFastForward
canPlayFastReverse
_postMPAVControllerItemReadyToPlayNotificationWithItem:
_updatePlaybackModeForItem:
sharedNetworkPlayabilityMonitor
adjustEffectiveNetworkTypeUsingPreviouslyPlayedItem:
_delayedUpdateTimeMarker
_prepareToPlayItem:
applicationState
skipToSeekableEnd
_resumePlayback:
routingController
clearCachedRoutes
_updateCurrentItemBookkeepingMarkedAsCheckpoint:
_clearLastSetTimeIfPlayerTimeIsValid
connectPlayer
_expectedAssetTypesForPlaybackMode:
_setExpectedAssetTypes:
_volumeDidChangeNotification:
_playerKeysToObserve
_setClientName:
isApplicationAudioSession
setCategory:error:
seekToTime:
routingControllerAvailableRoutesDidChange:
disconnectPlayer
_postMPAVControllerSizeDidChangeNotificationWithItem:
_checkForBoundaryTimeCrossing
_extractImageFromMetadata:
pickBestDeviceRoute
_itemWillChange:
_itemDidChange:
_isExternalPlaybackActiveDidChange:
_serverConnectionDidDie:
_streamRanDry:
_streamBufferFull:
_streamLikelyToKeepUp:
_streamUnlikelyToKeepUp:
_sizeDidChange:
_itemReadyToPlay:
_timedMetadataAvailable:
_tracksDidChange:
_durationDidChange:
_firstVideoFrameDisplayed:
_pausePlaybackIfNecessary
_resumePlaybackIfNecessary
_pauseBookkeepingTimer
_resumeBookkeepingTimer
_currentIndexInBoundaryCMTimes:
outputObscuredDueToInsufficientExternalProtection
dictionaryWithObjectsAndKeys:
initWithObjects:
externalScreenType
avRouteDescription
limitsBandwidthForCellularAccess
setLimitsBandwidthForCellularAccess:
playlistFeeder
superlayer
begin
commit
flush
setAvController:
removeObserver:forKeyPath:
_registerForPlaylistManager:
_configureAVPlaylistManager
isPlaybackLikelyToKeepUp
isPlaybackBufferFull
sortUsingComparator:
isEqualToValue:
addIndex:
removeObjectsAtIndexes:
embeddedDataTimesForItem:
_itemKeysToObserve
_itemFailedToPlayToEndNotification:
_timeHasJumpedNotification:
_itemAssetIsLoadedNotification:
_itemTypeAvailableNotification:
_itemPlaybackModeAvailableNotification:
_itemBookmarkTimeDidChangeNotification:
_itemShouldPreventPlaybackDidChangeNotification:
_itemSecureKeyDeliverDidFinishNotification:
_itemHasFinishedDownloadingDidChangeNotification:
beginBackgroundTaskWithName:expirationHandler:
autoPlayWhenLikelyToKeepUp
storePlaybackEndpointType
timeIntervalSinceDate:
stringWithString:
beginBackgroundTaskWithExpirationHandler:
shouldHaveNoActionAtEndForState:
postNotification:
notificationWithName:object:userInfo:
_delayedPostPlaybackStateChangedNotification
performSelector:target:argument:order:modes:
autoclearDisplayOverride
_postPlaybackStateChangedNotificationWithOriginalState:newState:delayable:
_scheduleUpdateCurrentItemBookkeepingTimer
_clearResetRateAfterSeeking
_seeklessStateForState:
_configureUpdateCurrentItemBookkeepingTimer
videoLayer
_updateSeekingIntervalsForStreaming
tickTimerFired
setRateForScanning:
metadataItemsFromArray:withKey:keySpace:
dataValue
imageWithData:
_handlePlaybackErrorResolutionType:forItem:playbackError:resolutionError:
handlePlaybackFailureForItem:
destinationIsTVOut
isSuspendedUnderLock
availableRoutes
isPicked
routeType
useAirPlayMusicMode
_isVideoLayerAttachedToPlayer
initialize
keyPathsForValuesAffectingCurrentItem
automaticallyNotifiesObserversOfPlaylistManager
beginInterruption
endInterruptionWithFlags:
endInterruption
inputIsAvailableChanged:
beginInterruptionFromInterruptor:
endInterruptionFromInterruptor:category:flags:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeTelephonyStatus:
playlistManager:didTransitionToPlaylistFeeder:
playlistManager:didFailLoadingAllItemsForQueueFeeder:
playlistManager:queueCoordinator:willInsertItem:afterItem:
routingController:pickedRouteDidChange:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingController:didFailToPickRouteWithError:
routingControllerDidPauseFromActiveRouteChange:
_updateLastSetTimeForCurrentItemIfNeeded
isSeekingOrScrubbing
isRewindHoldingAtStart
currentMonotonousTime
playItemAtIndex:
playChapterTimeMarkerAtIndex:
togglePlayback
forceRestartPlaybackIfNecessary
addPeriodicTimeObserverForInterval:usingBlock:
addBoundaryTimeObserverForTimes:usingBlock:
beginTickTimerWithInterval:
isTickTimerEnabled
activeRepeatType
currentMediaItem
currentMediaQuery
shouldDisplayAsPlaying
isShuffled
setAlwaysPlayWheneverPossible:
_rawRate
disableAirPlayMirroringDuringPlayback
hasVolumeControl
volume
setVolume:
routeNameForVolumeControl
stopAtEnd
setUseAirPlayMusicMode:
setManagesAirPlayBehaviors:
setDestinationIsTVOut:
finalizeBookkeepingNow
durationOfCurrentItemIfAvailable
canSeekBackwards
canSeekForwards
canSkipToSeekableEnd
skipToSeekableStart
ubiquitousBookkeepingEnabled
_updateCurrentItemBookkeepingForTimerCallback
_streamLimitExceeded
_contentsChanged
setAutoclearingDisplayOverridePlaybackState:
_updateProgress:
closedCaptioningEnabled
setClosedCaptioningEnabled:
displayOverridePlaybackState
shouldSkipToNextTrackOnResumeFromInterruption
setShouldSkipToNextTrackOnResumeFromInterruption:
setShouldResetQueueWhenReachingEnd:
nextFadeOutDuration
muted
managesAirPlayBehaviors
_currentItemStartedAsCloudItem
_currentItemHasFinishedDownloading
_didResolveError
_disallowsAMRAudio
_disableAirPlayMirroringDuringPlayback
_itemDidChangeDate
_shouldPreventStateChangesForRateChange
_stallBackgroundTaskIdentifier
_usesAudioOnlyModeForExternalPlayback
_allowsItemErrorResolution
_routingController
_videoLayer
_videoLayerUsageCount
_periodicTimeObserverToken
_tickTimerEnabled
_tickTimer
_tickInterval
_currentItemBookkeepingTimer
_indexChangeDirection
_itemIndexAtDeath
_lastDisconnectReason
_lastKnownTimeBeforeDeath
_lastPlaybackIndexChangeTime
_lastSetTime
_lastSetTimeChangeTime
_hasDelayedCurrentTimeToSet
_forceDelayedCurrentTimeToSet
_delayedCurrentTimeToSet
_delayedCurrentTimeOptions
_lastSetTimeMarker
_temporaryChapterTime
_autoPlayWhenLikelyToKeepUp
_autoplayDisabledForCurrentItem
_autoPlayBackgroundTaskAssertionEnabled
_autoPlayBackgroundTaskCount
_autoPlayBackgroundTaskIdentifier
_nextFadeOutDuration
_hasPendingRate
_hasSentTracePlaybackStartDidFinish
_pendingRateItem
_pendingRate
_pendingChangeForScanning
_boundaryTimeObserver
_boundaryTimes
_boundaryTimeIndexLastPosted
_observerInfos
_observerInfoToCoreMediaObserver
_rateBeforeSeek
_inflightSeekRate
_scanLevel
_scanDirection
_resetRateAfterSeekingUpdateDisabled
_seeklessState
_isSeekingOrScrubbing
_resetRateAfterSeeking
_activeRewindHoldingAtStart
_lastSeekableEnd
_whenSawSeekableEnd
_maxSeekableFwd
_seekFwdSlop
_lastSeekableStart
_whenSawSeekableStart
_maxSeekableRev
_seekRevSlop
_canSeekRev
_canSeekFwd
_alwaysPlayWheneverPossible
_stopAtEnd
_didReachEnd
_pausedDuringInterruption
_resumePlaybackWhenActive
_playInBackgroundUserDefaultEnabled
_canPlayFastForward
_canPlayFastReverse
_shouldAutoclearDisplayOverride
_displayOverridePlaybackState
_bufferingState
_delayedPlaybackStateNotification
_stallTimerSource
_isConnectingPlayer
_aggregateDCommunicator
_itemInitialBookmarkTime
_rateBeforeResignActive
_ubiquitousBookkeepingDisabledCount
_secondsSinceUbiquitousCheckpoint
_videoViewClass
_lastInterruptionEnd
_clientsWantingExternalPlayback
_currentItemRevisionID
_numberOfErrorsSinceLastPlay
_shouldSkipToNextTrackOnResumeFromInterruption
_shouldResetQueueWhenReachingEnd
_muted
_useAirPlayMusicMode
_managesAirPlayBehaviors
_limitsBandwidthForCellularAccess
allowsKeyedCoding
initWithLookupItemOffer:
buyParameters
formattedPrice
price
actionTextForType:
_lookupDictionary
chapters
chapterOfType:atTime:
previewArtworkRequestToken
endAutomaticallyRefreshingSubscriptionLease
endObservingShouldPlaybackRequireSubscriptionLease
endObservingSubscriptionLease
endObservingSubscriptionStatus
shouldUseLease
hasPlaybackCapability
getFinalSubscriptionStatusWithCompletionHandler:
initWithSubscriptionStatus:
isDefinitiveInformation
getSubscriptionStatusWithOptions:statusBlock:
acquireSubscriptionLeaseWithCompletionHandler:
refreshSubscriptionLeaseWithCompletionHandler:
_updateUsesSubscriptionLease
_subscriptionLeaseDidBeginNotification:
_subscriptionLeaseDidEndNotification:
_subscriptionStatusDidChangeNotification:
_shouldPlaybackRequireSubscriptionLeaseDidChangeNotification:
beginObservingSubscriptionLease
beginObservingSubscriptionStatus
beginObservingShouldPlaybackRequireSubscriptionLease
_playerStateDidChangeNotification:
_playerItemReadyToPlayNotification:
_playerItemWillChangeNotification:
_playerWillReloadWithPlaybackContextNotification:
_updatePlayerEffectivelyPlaying
_startLeaseIfNeededForPlaybackResumptionWithCompletionHandler:
_acquireSubscriptionLeaseForCurrentItemIfNeededWithPlayer:
_shouldPausePlaybackReturningWasLeaseTaken:
_pausePlayerForLeaseEnd:
hasSubscriptionLease
_pausePlayersForLeaseEndWithNotification:
getFairPlaySubscriptionStatusWithCompletionHandler:
_startLeaseIfNeededForCurrentPlayerItemsFromUserAction:withCompletionHandler:
usesSubscriptionLease
didDeferLeaseStart
_calculateEffectivelyPlayingForPlayer:
startLeaseIfNeededForPlaybackResumptionWithCompletionHandler:
beginAutomaticallyRefreshingSubscriptionLease
shouldPlaybackRequireSubscriptionLease
subscriptionStatus
acquireShouldStartLeaseForAssetCreationWithCompletionHandler:
handleLeaseForErrorResolutionWithCompletionHandler:
_hasDoneInitialSetup
_isAutomaticLeaseRefreshEnabled
_isObservingSubscriptionNotifications
_isPlayerEffectivelyPlaying
_isStartingLeaseForPlaybackResumption
_preventionState
_shouldStartLeaseForAssets
_shouldStartLeaseForUserAction
_startLeaseForPlaybackResumptionCompletionHandlers
_usesSubscriptionLease
_initWithResponseDictionary:
fallbackStreamingKeyCertificateURL
setFallbackStreamingKeyCertificateURL:
fallbackStreamingKeyServerURL
setFallbackStreamingKeyServerURL:
initWithResponseDictionary:
responseDictionary
_responseDictionary
_fallbackStreamingKeyServerURL
_fallbackStreamingKeyCertificateURL
setRadioStationStringID:
setBeats1:
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
sharedStoreItemMetadataRequestController
addStoreItemMetadata:
_requestedRadioStationProperties
kindWithModelClass:
kindWithVariants:options:
variants
_variants
_options
appendIdentifiersToDescription:
__title__KEY
__MPModelPropertySongTitle__PROPERTY
__album__KEY
__MPModelRelationshipSongAlbum__PROPERTY
__artist__KEY
__MPModelRelationshipSongArtist__PROPERTY
__genre__KEY
__MPModelRelationshipSongGenre__PROPERTY
__composer__KEY
__MPModelRelationshipSongComposer__PROPERTY
__grouping__KEY
__MPModelPropertySongGrouping__PROPERTY
__copyrightText__KEY
__MPModelPropertySongCopyrightText__PROPERTY
__duration__KEY
__MPModelPropertySongDuration__PROPERTY
__trackNumber__KEY
__MPModelPropertySongTrackNumber__PROPERTY
__discNumber__KEY
__MPModelPropertySongDiscNumber__PROPERTY
__explicitSong__KEY
__MPModelPropertySongExplicit__PROPERTY
__artistUploadedContent__KEY
__MPModelPropertySongArtistUploadedContent__PROPERTY
__hasVideo__KEY
__MPModelPropertySongHasVideo__PROPERTY
__beatsPerMinute__KEY
__MPModelPropertySongBeatsPerMinute__PROPERTY
__lyrics__KEY
__MPModelRelationshipSongLyrics__PROPERTY
__shouldShowComposer__KEY
__MPModelPropertySongShouldShowComposer__PROPERTY
__shouldExcludeFromShuffle__KEY
__MPModelPropertySongShouldExcludeFromShuffle__PROPERTY
__volumeNormalization__KEY
__MPModelPropertySongVolumeNormalization__PROPERTY
__artworkCatalogBlock__KEY
__MPModelPropertySongArtwork__PROPERTY
__localFileAsset__KEY
__MPModelRelationshipSongLocalFileAsset__PROPERTY
__keepLocalEnableState__KEY
__MPModelPropertySongKeepLocalEnableState__PROPERTY
__keepLocalManagedStatus__KEY
__MPModelPropertySongKeepLocalManagedStatus__PROPERTY
__libraryAdded__KEY
__MPModelPropertySongLibraryAdded__PROPERTY
__libraryAddedDate__KEY
__MPModelPropertySongLibraryAddedDate__PROPERTY
__libraryAddEligible__KEY
__MPModelPropertySongLibraryAddEligible__PROPERTY
__hasCloudSyncSource__KEY
__MPModelPropertySongHasCloudSyncSource__PROPERTY
__classicalWork__KEY
__MPModelPropertySongClassicalWork__PROPERTY
__classicalMovement__KEY
__MPModelPropertySongClassicalMovement__PROPERTY
__classicalMovementCount__KEY
__MPModelPropertySongClassicalMovementCount__PROPERTY
__classicalMovementNumber__KEY
__MPModelPropertySongClassicalMovementNumber__PROPERTY
__year__KEY
__MPModelPropertySongYear__PROPERTY
__homeSharingAsset__KEY
__MPModelRelationshipSongHomeSharingAsset__PROPERTY
__storeAsset__KEY
__MPModelRelationshipSongStoreAsset__PROPERTY
__userRating__KEY
__MPModelPropertySongUserRating__PROPERTY
__gaplessInfo__KEY
__MPModelPropertySongGaplessInfo__PROPERTY
__volumeAdjustment__KEY
__MPModelPropertySongVolumeAdjustment__PROPERTY
__playbackPosition__KEY
__MPModelRelationshipSongPlaybackPosition__PROPERTY
grouping
setGrouping:
isExplicitSong
setExplicitSong:
isArtistUploadedContent
setArtistUploadedContent:
hasVideo
setHasVideo:
beatsPerMinute
setBeatsPerMinute:
setCopyrightText:
shouldExcludeFromShuffle
setShouldExcludeFromShuffle:
setShouldShowComposer:
volumeNormalization
setVolumeNormalization:
year
setYear:
setUserRating:
gaplessInfo
setGaplessInfo:
volumeAdjustment
setVolumeAdjustment:
classicalWork
setClassicalWork:
classicalMovement
setClassicalMovement:
classicalMovementCount
setClassicalMovementCount:
classicalMovementNumber
setClassicalMovementNumber:
setGenre:
setComposer:
homeSharingAsset
setHomeSharingAsset:
setLocalFileAsset:
setPlaybackPosition:
setStoreAsset:
setLibraryAdded:
libraryAddedDate
setLibraryAddedDate:
setLibraryAddEligible:
hasCloudSyncSource
setHasCloudSyncSource:
setKeepLocalEnableState:
setKeepLocalManagedStatus:
_explicitSong
_artistUploadedContent
_hasVideo
_shouldExcludeFromShuffle
_shouldShowComposer
_libraryAdded
_libraryAddEligible
_hasCloudSyncSource
_grouping
_trackNumber
_discNumber
_beatsPerMinute
_volumeNormalization
_year
_userRating
_gaplessInfo
_volumeAdjustment
_classicalWork
_classicalMovement
_classicalMovementCount
_classicalMovementNumber
_album
_artist
_genre
_composer
_lyrics
_homeSharingAsset
_localFileAsset
_playbackPosition
_storeAsset
_libraryAddedDate
_keepLocalEnableState
_keepLocalManagedStatus
_artworkCatalogBlock
_onQueue_controllerDidDiscoverTelevision:
_onQueue_controllerDidRemoveTelevision:
setDiscoveryMode:
_discoveredTelevisions
initWithTelevision:
devicePresenceDetected
getRoutesForCategory:withCompletion:
getPickedRouteHasVolumeControlWithCompletion:
_discoveryController
numberWithUnsignedInt:
siriSessionIdentifier
setSiriSessionIdentifier:
_siriSessionIdentifier
storePurchasedAdamID
setSongPopularity:forAdamID:
songPopularityForAdamID:
dictionaryWithDictionary:
initWithAppDataDictionary:
setSongPopularity:forIdentifierSet:
songPopularityForIdentifiers:
createAppDataDictionary
version
_version
_appDataDict
_dirtyPopularityDict
otherConnectedDevicesFromRouteDescription:
initWithRouteDescription:
_airPlayExtendedInfo
initWithRouteDescriptor:
routeUID
productIdentifier
pickableRouteType
requiresPassword
passwordType
isCarplayRoute
isB238Route
_auxiliaryDevices
_batteryLevel
allKeys
decodeObjectForKey:
mutableCopyWithZone:
_keyToObjectDictionary
_objectToKeyDictionary
removeAllObjects
assetURL
downloadKey
fairPlayInfoList
initWithiTunesCloudStoreFileAssetFairPlayInfo:
flavorType
fileExtension
fileSize
initWithiTunesCloudStoreFileAssetInfo:
_internalInfo
descriptionComponents
_countOfItems
queueFeederClass
initWithQuery:
startTimeModifications
setStartTimeModifications:
endTimeModifications
setEndTimeModifications:
_startTimeModifications
_endTimeModifications
completeMyCollectionArtworkDataSource
offerArtworkDescriptor
screenshotArtworkCatalog
timerWithInterval:repeats:block:
timerWithInterval:repeats:queue:block:
initWithInterval:repeats:queue:block:
timerWithInterval:block:
timerWithInterval:queue:block:
_timerSource
enableState
setEnableState:
_enableState
setDesiredParts:animate:
setVisibleParts:animate:
isBatteryMonitoringEnabled
setBatteryMonitoringEnabled:
videoView_itemTypeAvailableNotification:
_videoView_effectiveScaleModeChangedNotification:
videoView_tvOutCapabilityDidChangeNotification:
_videoView_resumeEventsOnlyNotification:
_videoView_applicationSuspendedNotification:
_videoView_applicationWillEnterForegroundNotification:
_videoView_batteryStateDidChangeNotification:
_screenDidConnect:
_screenDidDisconnect:
setIdleTimerDisabled:
_endBackgroundTask
setEnabledGestureTypes:
setSwipeDelegate:
presentedViewController
dismissViewControllerAnimated:completion:
registerForPlayerNotifications
_videoView_availableRoutesDidChangeNotification:
videoView_bufferingStateChangedNotification:
videoView_firstVideoFrameDisplayedNotification:
_videoView_isExternalPlaybackActiveDidChangeNotification:
_videoView_playbackErrorNotification:
videoView_playbackStateChangedNotification:
_videoView_sizeChangedNotification:
_videoView_timedImageMetadataAvailableNotification:
_videoView_validityChangedNotification:
unregisterForPlayerNotifications
disableControlsAutohide
reloadArtworkImageView
isTransitioningToFullscreen
isTransitioningFromFullscreen
isFullscreenForLayoutPurposes
artworkImageStyle
orientation
heightForStyle:orientation:
videoOverlayViewIfLoaded
calculateFullScreenArtworkImageViewFrame
calculateArtworkImageViewFrameInRect:
itemTypeOverride
displayArtworkImageStyle
_itemTypeWithActualTypePreference
showArtworkForTVOut
setOrientation:animate:
calculateArtworkImageViewFrame
setSquareImage:
setReflectionVisible:withDuration:
artworkImageView
showArtworkInImageView
posterImage
newArtworkImageView
setBackgroundPlaceholderPosterImageView:
layoutIfNeeded
defaultReflectionHeight
setFrame:withReflectionHeight:
_canEnableAirPlayVideoRoutes
_showDestinationPlaceholder
setShowDestinationPlaceholder:animated:
setDestinationName:
setDestinationPlaceholderStyle:
canChangeScaleMode
setScaleMode:
_itemDurationDidChange:
_updateProgressControlForItem:
enableAirPlayVideoRoutesIfNecessary
disabledPartsForProposedParts:
setScaleMode:animated:
_updateAlwaysPlayWheneverPossible
_scheduleLoadingIndicatorIfNeeded
_hideLoadingIndicator
toggleScaleMode:
backgroundPlaceholderPosterImageView
setView:
removeChildViewController:
setUserInteractionEnabled:
_videoView_scaleModeChangedNotification:
prepareToDisplayVideo
viewDidAppear:
viewWillDisappear:
setKeepContextInBackground:
viewControllerRequestsExit:
allowsTVOutInBackground
tearDownTVOutWindow
airtunesRouteIsPicked
_updateIdleTimerDisabledFromPlaybackState:
handleScaleModeChange
handleExternalPlaybackDidChange
videoController:shouldDisplayAlertForError:
localizedDescription
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
viewControllerFailedToPlay:withError:
_exitPlayerForPlaybackError
_delayedUpdateBackgroundView
setCustomBackgroundImage:
_updateBackgroundView:
setShowQTAudioOnlyUI:
canShowQTAudioOnlyUI
backgroundViewDidUpdate
_delayedPopForTimeJump
endIgnoringInteractionEvents
shouldMakeUIForDefaultPNG
_activityIndicatorViewStyle
initWithActivityIndicatorStyle:
displayVideoViewOnTV
displayVideoViewOnScreen
setVideoView:
keyWindow
makeKeyAndVisible
makeKeyWindow
videoController:scaleModeDidChange:
canHideOverlay:
setNeedsDisplay
_delayedShowLoading
_showStillFrameIfNotAlreadyPlaying
downloadForMediaItem:
removeFromSuperview
batteryState
disabledParts
supportsFullscreenDisplay
clearWeakReferencesToObject:
noteIgnoredChangeTypes:
setOrientation:
exitFullscreen
setControlsNeedLayout
setOwnsStatusBar:
allowsDetailScrubbing
setAllowsDetailScrubbing:
setArtworkImageStyle:
attemptAutoPlayWhenControlsHidden
setAttemptAutoPlayWhenControlsHidden:
backstopColor
setBackstopColor:
canAnimateControlsOverlay
setCanAnimateControlsOverlay:
setControlsOverlayVisible:
disableAutoRotation
setDisableAutoRotation:
setDisableControlsAutohide:
displayPlaybackErrorAlerts
setPosterImage:
viewControllerWillRequestExit
swipableView:willMoveToSuperview:
swipableView:didMoveToSuperview:
swipableView:willMoveToWindow:
swipableView:overrideHitTest:withEvent:
swipableView:swipedInDirection:
swipableView:tappedWithCount:atLocation:
swipableView:tappedWithCount:
swipableView:pinchedToScale:withVelocity:
swipableViewHadActivity:
visiblePartsForProposedParts:
loadView
setAllowsTVOutInBackground:
_popForTimeJump:
_backgroundView
_backstopView
_batteryMonitoringWasEnabled
_desiredParts
_disabledParts
_visibleParts
_tvOutEnabled
_allowsTVOutInBackground
_itemTypeOverride
_scaleMode
_scaleModeOverride
_backstopColor
_loadingIndicator
_tvOutWindow
_backgroundTaskId
_artworkImageStyle
_posterImage
_canAnimateControlsOverlay
_canShowControlsOverlay
_disableControlsAutohide
_playAfterPop
_scheduledLoadingIndicator
_displayPlaybackErrorAlerts
_allowsDetailScrubbing
_attemptAutoPlayWhenControlsHidden
_alwaysAllowHidingControlsOverlay
_hasShownFirstVideoFrame
_allowsWirelessPlayback
_disableAutoRotation
_inlinePlaybackUsesTVOut
_alertController
setObservesApplicationSuspendResumeEventsOnly:
viewController:beginIgnoringChangeTypes:
parentViewController
beginIgnoringChangeTypes:
viewController:endIgnoringChangeType:
endIgnoringChangeTypes:
stopTicking
startTicking
applicationDidSuspendEventsOnly
applicationDidResumeEventsOnly
applicationResumed
sharedStatistics
incrementViewDisplayCountForViewController:
childViewControllers
lockPlayer
unlockPlayer
_setIdleTimerDisabled:forReason:
setParentViewController:
removeViewControllerForView:
setRegisteredForPlayerNotifications:
incrementAggregateStatisticsDisplayCount
viewWillAppear:
addChildViewController:
canDisplayItem:withInterfaceOrientation:
copyOverlayViewForTransitionToItem:
beginTransitionOverlayHidding
endTransitionOverlayHidingWithTransferedOverlayView:
didChangeToInterfaceOrientation:
displayableInterfaceOrientationForInterfaceOrientation:
isAppearing
observesApplicationSuspendResumeEventsOnly
willChangeToInterfaceOrientation:
setAppearing:
_canReloadView
registeredForPlayerNotifications
idleTimerDisabled
_interfaceOrientation
_appearing
_observesApplicationSuspendResumeEventsOnly
_showOverlayWhileAppearingDisabled
_registeredForPlayerNotifications
_playerLockedCount
_idleTimerDisabled
setPredicates:
dictionaryRepresentation
addPredicates:
writeTo:
data
writeData:forTag:
predicatesCount
clearPredicates
predicatesAtIndex:
readFrom:
copyTo:
predicates
_predicates
initWithBuyParameters:endpointType:shouldUseStreamingRedownload:
isCancelled
sharedBagLoadingController
requestAccessToBagUsingBlock:
copyDictionaryForQueryString:unescapedValues:
guid
setHTTPMethod:
initWithURLRequestProperties:
configureWithURLBagDictionary:
initWithURLBagDictionary:
storeFrontSuffix
setStoreFrontSuffix:
setMachineDataStyle:
initWithPolicyType:
setSAPSignaturePolicy:
consumer
setDataConsumer:
dataWithPropertyList:format:options:error:
setHTTPBody:
setPrepareRequestBlock:
setOutputBlock:
start
waitUntilFinished
pastisKeyServerURL
pastisCertificateURL
initWithBuyParameters:endpointType:
main
redownloadProductResponse
responseError
isStreamingRental
setStreamingRental:
_redownloadProductResponse
_responseError
_shouldUseStreamingRedownload
_URLOperation
_streamingRental
_buyParameters
_endpointType
_requestingBundleIdentifier
_requestingBundleVersion
setReflectionFraction:
setReflectionAlpha:
setPosition:
setAnchorPoint:
setOpacity:
setMask:
reflectionAlpha
setAllowsEdgeAntialiasing:
setEdgeAntialiasingMask:
containerView
albumArtImage
setAlbumVisible:reflectionVisible:
imageView
squareImage
_imageView
_squareImage
_scaledFittingSize
numberWithInt:
initWithMediaRemotePlaybackQueue:
queueWithMediaRemotePlaybackQueue:
registerRemotePlaybackQueueClass:forPlaybackQueueType:
isRequestingImmediatePlayback
setRequestingImmediatePlayback:
siriRecommendationIdentifier
setSiriRecommendationIdentifier:
shouldOverrideManuallyCuratedQueue
setShouldOverrideManuallyCuratedQueue:
verifyWithError:
_mediaRemotePlaybackQueue
unarchiveObjectWithData:
initWithData:
initWithProtobufferDecodableObject:
initWithMultiverseIdentifier:
predicateWithValue:forProperty:
initWithFilterPredicates:
setShouldIncludeNonLibraryEntities:
mediaQuery
_countOfCollections
firstItem
playbackItemMetadataForMediaItem:
isPlaybackItemMetadataValidForAssetCreation:
initWithMediaItem:
_mediaQuery
_firstItem
_stationStringID
_stationID
trackIdentifiers
firstTrackIdentifier
_firstTrackIdentifier
_trackIdentifiers
seedTrack
identifier
initWithIdentifier:data:
supportsLyricsForURLBagDictionary:
song
_song
fastFaceDetector
detectFacesInCGImage:options:error:
face
valueWithCGRect:
appendSection:
appendItems:
responseWithPeople:originatingRequest:
storeItemMetadataForItemIdentifier:
requestStoreItemMetadataForReason:withItemIdentifiers:responseHandler:
getFollowedStoreIDs:
setWithObjects:
decodeObjectOfClasses:forKey:
localizedTitle
setLocalizedTitle:
stations
setStations:
_localizedTitle
_stations
allSupportedInternalOnlyProperties
setSectionType:
setLoadAdditionalContentURL:
setUniformContentItemType:
setMemberOfChartSet:
setBrick:
setPreviouslyRetrievedNestedResponse:
allSupportedPropertiesIncludingInternalOnlyProperties:
requestedPropertySetExcludingInternalOnlyProperties
modelObjectWithTitle:loadAdditionalContentURL:uniformContentItemType:isMemberOfChartSet:isBrick:previouslyRetrievedNestedResponse:
_requestedBrowseSectionProperties
_requestedPropertySet
_automationID
defaultVisibleParts
_alternateTypesChangedNotification:
_itemDurationDidChangeNotification:
_timeMarkersAvailableNotification:
removeTarget:action:forControlEvents:
_availableRoutesChangedNotification:
_itemChangedNotification:
_playbackStateChangedNotification:
_validityChangedNotification:
_reloadViewWithAnimation:
setNeedsUpdate
didMoveToSuperview
target
transportControlsDidResize:
tintColorDidChange
usesTintColorForControls
buttonForPart:
tintColorForPart:
_applyDesiredPartsWithAnimation:
setDesiredParts:animated:
_updateEnabledStates:
_updatePlayButtonImage
_updateTintColorForPart:
setVisibleParts:animated:
_applyPossibleVisiblePartsToParts:
pauseButtonImage
playButtonImage
cancelTouchTracking
buttonImagesUseBackgroundImage
buttonImageForPart:
setBackgroundImage:forState:
setImage:forState:
highlightedButtonImageForPart:
removeIndex:
_handleHoldForPart:
_handleReleaseForPart:
containsIndex:
_handleTapForPart:
buttonClass
buttonType
buttonWithType:
buttonDown:
addTarget:action:forControlEvents:
buttonUp:
setExclusiveTouch:
disabledButtonImageForPart:
setShowsTouchWhenHighlighted:
setCharge:
setHitRectInsets:
setTag:
playPauseButtonImage
wirelessDisplayRouteIsPicked
routeOtherThanHandsetAndSpeakerAvailable
showsVolumeSliderWhenNoVolumeControlAvailable
transportControls:heldButtonPart:
transportControls:releasedHeldButtonPart:
transportControls:tappedButtonPart:
_updateAdditions:removals:forPart:
buttonHeld:
buttonHoldReleased:
accessibilitySetIdentification:
newVolumeSlider
reloadForAdditions:removals:animate:
newButtonForPart:
allowsWirelessPlaybackForCurrentItem
alwaysHidesSystemVolumeHUD
_target
_heldParts
_playing
_alternatesButton
_bookmarkButton
_chaptersButton
_emailButton
_fastForward15SecondsButton
_likeOrBanButton
_nextButton
_playButton
_previousButton
_rewind15SecondsButton
_rewind30SecondsButton
_scaleButton
_toggleFullscreenButton
_volumeSlider
setStoreAdamID:
setTrackCount:
setDiscCount:
setHasCleanContent:
setMaximumItemTrackNumber:
setCompilation:
setClassical:
components:fromDate:
setReleaseDateComponents:
setPreorder:
setSongPopularityBlock:
_requestedAlbumProperties
setBool:forKey:
screens
_isWorkspaceCapable
mirroredScreen
_setupTargetScreen:
setScreen:
_playbackStateChanged:
_screenModeDidChange:
screen
setBitsPerComponent:
setOverscanCompensation:
preferredMode
availableModes
setCurrentMode:
isDescendantOfView:
insertSubview:belowSubview:
_hudView
representedSearchScopePredicate
initWithItemKind:name:properties:
coreScope
_coreScope
_itemKind
_name
_playerPlaybackStateDidChangeNotification:
receivedUserInteractionEvent
addPlayer:
removePlayer:
albumAppData
predicateWithProperty:equalToInt64:
sharedLibrary
anyInLibrary:predicate:
setValues:forProperties:async:withCompletionBlock:
representativeModelObject
setRepresentativeModelObject:
songResults
setSongResults:
storeImportAllowedHandler
setStoreImportAllowedHandler:
_playlist
_representativeModelObject
_songResults
_storeImportAllowedHandler
_tvOutCapabilityDidChangeNotification:
_updateDestinationBackgroundViewAnimated:
systemGrayColor
_flatImageWithColor:
setClipsToBounds:
qtIcon
insertSubview:aboveSubview:
insertSubview:atIndex:
setLineBreakMode:
viewWithTag:
setStyle:
setInterfaceOrientation:
_createInformationalTitleView:systemFont:lineBreakMode:
setBackgroundPlaceholderImage:
backgroundPlaceholderImage
destinationName
destinationPlaceholderStyle
interfaceOrientation
layoutSubviewsPostflightHandler
setLayoutSubviewsPostflightHandler:
_iconView
_backgroundPlaceholderImageView
_backgroundPlaceholderPosterImageView
_backgroundPlaceholderView
_customBackgroundImageView
_destinationName
_destinationPlaceholderStyle
_layoutSubviewsPostflightHandler
systemFontOfSize:
lineHeight
layoutBelowIfNeeded
style
_destinationSubtitleLabel
_destinationTitleLabel
_style
_videosImageView
_artworkCatalogWithArtworkType:
cachedValueForProperty:isCached:
initWithLibrary:identifier:entityType:artworkType:
setAvailableArtworkToken:
setFetchableArtworkToken:
setFetchableArtworkSource:
artworkDataSource
artworkCatalogCacheProperties
screenshotArtworkCatalogCacheProperties
allAdditionalContentIdentifiersNeedingLookup
hasAdditionalContentItems
changeDetails
setChangeDetails:
parser
setParser:
_changeDetails
_parser
setArtworkResizingAccessQueue:
setArtworkResizingOperationQueue:
artworkResizingOperationQueue
strongToStrongObjectsMapTable
setArtworkResizingOperations:
artworkResizingAccessQueue
artworkResizingOperations
initWithImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:destinationURL:
operationGroup
setCompletionBlock:
resizedImage
resizeImage:scaledFittingSize:useExactFittingSizeAsDestinationSize:saveToDestinationURL:completionHandler:
cancelResizeImage:
_artworkResizingAccessQueue
_artworkResizingOperationQueue
_artworkResizingOperations
_initializeAsEmptySectionedCollection
numberOfSections
numberOfItemsInSection:
sectionAtIndex:
indexPathForItem:inSection:
itemAtIndexPath:
section
indexSet
operationsWithPreviousCount:finalCount:previousBaseIndexPath:finalBaseIndexPath:isEqualBlock:
totalItemCount
indexPath
indexPathWithIndex:
enumerateIndexesUsingBlock:
appendSectionMoveFromIndex:toIndex:updated:
previousIndexPath
finalIndexPath
removeObjectAtIndex:
appendItemMoveFromIndexPath:toIndexPath:updated:
setInsertedSections:
setDeletedSections:
setUpdatedSections:
setInsertedItemIndexPaths:
setDeletedItemIndexPaths:
setUpdatedItemIndexPaths:
hasChanges
lastItem
enumerateSectionsUsingBlock:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateItemsUsingBlock:
firstSection
globalIndexForIndexPath:
indexPathForGlobalIndex:
itemsInSectionAtIndex:
hasSameContentAsSectionedCollection:
lastSection
changeDetailsToSectionedCollection:isEqualBlock:isUpdatedBlock:
_sectionedItems
_sections
exchangeObjectAtIndex:withObjectAtIndex:
insertSection:atIndex:
insertItem:atIndexPath:
appendItem:
removeSectionAtIndex:
moveSectionFromIndex:toIndex:
removeItemAtIndexPath:
replaceObjectAtIndexPath:withObject:
moveItemFromIndexPath:toIndexPath:
setShortTitle:
setEpisodesCount:
setTagline:
setEditorialArtworkCatalogBlock:
_storeAssetBuilder
_storeAssetProperties
_requestedTVShowProperties
videoGravity
setVideoGravity:
setScaleMode:duration:
videoRect
layerClass
effectiveScaleMode
movieFrame
movieContentFrame
AVURLAssetOptions
setAVURLAssetOptions:
_AVURLAssetOptions
_contentView
__datePlayed__KEY
__MPModelPropertyPlayEventDatePlayed__PROPERTY
__MPModelRelationshipPlayEventAlbum__PROPERTY
__MPModelRelationshipPlayEventArtist__PROPERTY
__playlist__KEY
__MPModelRelationshipPlayEventPlaylist__PROPERTY
__radioStation__KEY
__MPModelRelationshipPlayEventRadioStation__PROPERTY
datePlayed
setDatePlayed:
_datePlayed
_radioStation
initWithFrame:style:
setAllowsGroupBlending:
setAllowsGroupOpacity:
_activeAudioRouteDidChange:
sharedAVSystemController
_unregisterForItemNotifications:
_unregisterForPlayerNotifications:
horizontalSizeClass
verticalSizeClass
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
setConstant:
removeConstraint:
setPriority:
updateConstraints
_updateTopBarBoundsBasedConstraints
_updateScaleButton
isHidden
statusBar
showsContentsOnScreen
setNeedsUpdateConstraints
traitCollectionDidChange:
convertPoint:toView:
pointInside:withEvent:
setBounds:
presentingViewController
allowsScrubbing
setAllowsScrubbing:
_configureAuxiliaryButtons:
constant
_itemChanged:
_updateVolumeSlider
_configureTransportControls
_registerForPlayerNotifications:
updateTimeBasedValues
setHidden:animated:completionBlock:
setHidden:animated:animateAlongside:completionBlock:
beginIgnoringInteractionEvents
animateWithDuration:animations:completion:
_newFrostedGlassBackdropView
setTranslatesAutoresizingMaskIntoConstraints:
constraintsWithVisualFormat:options:metrics:views:
addConstraints:
easyTouchButtonWithType:
_playPauseButtonTapped:
_observeControl:
_setDrawsAsBackdropOverlay:
hitRectInsets
_fullscreenButtonTapped:
_airplayButtonTapped:
_updateAirplayButton
_imageNamed:forControlState:
_pictureInPictureButtonTapped:
setSimulatesLegacyAppearance:
requestStyle:animated:
setTitle:forState:
setTitleColor:forState:
titleLabel
boldSystemFontOfSize:
_doneButtonTapped:
_scaleButtonTapped:
currentHeight
_setIsOffScreen:
_skipButtonTouchDown:
_skipButtonTouchCancel:
_skipButtonTouchUpInside:
_skipButtonTouchUpOutside:
_audioAndSubtitlesButtonTapped:
localizedScrubSpeedText
overlay:interpretCurrentTime:
_showScrubInstructions
overlayDidBeginScrubbing:
_notifyDelegateOfUserEventBegin:
_hideScrubInstructions
overlayDidEndScrubbing:
_notifyDelegateOfUserEventEnd:
detailScrubbingAvailableForCurrentDuration
animateWithDuration:delay:options:animations:completion:
_handleDismissAudioAndSubtitlesController
_isInPopoverPresentation
initWithAVItem:completionHandler:
setModalPresentationStyle:
setPreferredContentSize:
setViewControllerForOrientation:
_viewControllerForAncestor
presentViewController:animated:completion:
popoverPresentationController
setSourceRect:
setSourceView:
presentationController
setOverrideTraitCollection:
_notifyDelegateOfUserEventCancel:
overlayTappedBackButton:
overlayTappedFullscreenButton:
_notifyDelegateOfUserEvent:
overlayTappedPictureInPictureButton:
_buttonInteractionBegan:
_buttonInteractionCanceled:
_buttonInteractionEnded:
overlayTappedScaleModeButton:
_startSeeking
overlayShouldAcceptSkipBackwardEvent:
overlayShouldAcceptSkipForwardEvent:
_registerForItemNotifications:
_updateLoadingIndicator
setWithArray:
minusSet:
removeConstraints:
_setButtons:inBar:animated:
allowsAudioAndSubtitles
bundleForClass:
_imageNamed:
initWithFrame:privateStyle:
inputSettings
setRenderingHint:
setGroupName:
_alternateTracksAvailable:
_durationAvailable:
_seekabilityChanged:
_tick:
_effectiveScaleModeDidChange:
_videoViewDidMoveToWindow:
overlay:didBeginUserEvent:
overlay:didCancelUserEvent:
overlay:didEndUserEvent:
setValue:
tintColor
systemBlueColor
setColor:
overlay:interpretDuration:
setTimeLabelStyle:
setAvailableDuration:
adaptivePresentationStyleForPresentationController:
adaptivePresentationStyleForPresentationController:traitCollection:
presentationController:viewControllerForAdaptivePresentationStyle:
presentationController:willPresentWithAdaptiveStyle:transitionCoordinator:
prepareForPopoverPresentation:
popoverPresentationControllerShouldDismissPopover:
popoverPresentationControllerDidDismissPopover:
popoverPresentationController:willRepositionPopoverToRect:inView:
showAlternateTracks
hideAlternateTracks
videoViewController
setVideoViewController:
detailSliderTrackingDidBegin:
detailSliderTrackingDidEnd:
detailSliderTrackingDidCancel:
detailSlider:didChangeValue:
detailSlider:didChangeScrubSpeed:
setAllowsExitFromFullscreen:
setAllowsPictureInPicture:
bottomBarHeight
setHidden:animated:
_setScrubberDuration:
_setOverrideType:
_setScrubberValue:
automaticallyHandleTransportControls
setAutomaticallyHandleTransportControls:
allowsExitFromFullscreen
allowsPictureInPicture
setAllowsAudioAndSubtitles:
viewControllerForModalPresentationOrientation
setViewControllerForModalPresentationOrientation:
topBarBackdropView
bottomBarBackdropView
overrideType
_scrubber
_playPauseButton
_fullscreenButton
_pictureInPictureButton
_airplayButton
_statusBar
_doneButton
_loadingLabel
_scrubInstructions1
_scrubInstructions2
_leftButton
_rightButton
_audioAndSubtitlesButton
_airplayController
_topBarLayoutGuide
_topBarItemsGuide
_bottomBarTopLayoutGuide
_bottomBarBottomLayoutGuide
_bottomBarItemsGuide
_audioAndSubtitlesController
_ticking
_ignoreTouchUp
_shouldResumePlayback
_seekDirection
_topBarBottomConstraint
_bottomBarHeightConstraint
_topItemsTrailingConstraint
_bottomItemsRightConstraint
_volumeSliderRightConstraint
_volumeSliderWidthConstraint
_topItemsConstraints
_bottomItemsConstraints
_previousTopBarMargin
_topBarTraitCollectionConstraints
_topItems
_bottomItems
_automaticallyHandleTransportControls
_allowsExitFromFullscreen
_allowsPictureInPicture
_allowsAudioAndSubtitles
_viewControllerForModalPresentationOrientation
_topBarBackdropView
_bottomBarBackdropView
_overrideType
isSelected
_updateSelected:highlighted:
isHighlighted
_drawingAsSelected
setHighlighted:
setSelected:
_updateForStateChangeAnimated:
compositingFilter
_setDrawsAsBackdropOverlayWithBlendMode:
_enumerateAssetDictionariesWithBlock:
allFlavors
firstAsset
HLSKeyCertificateURL
HLSKeyServerURL
HLSPlaylistURL
isiTunesStoreStream
assetForFlavor:
usesCurrentAccountIfAvailable
setUsesCurrentAccountIfAvailable:
_usesCurrentAccountIfAvailable
_initWithTracklist:options:startingEntry:
_itemEntry:sectionIdentifier:
latestUserClone
previousEntry
nextEntries
startEntries
reverseObjectEnumerator
nextObjectIdenticalTo:
branchDepth
initWithType:branchDepth:
endEntry
nextObject
removeLastObject
isDataSourceRemoved
isRemoved
sectionHeadEntryMap
sectionIdentifier
lastItemEntry
tailEntryWithSection:branchDepth:
tracklist
initWithTracklist:options:
initWithTracklist:options:startingAtItem:inSection:
setOptions:
contexts
setContexts:
nextEmittableEnumerationResults
setNextEmittableEnumerationResults:
_tracklist
_contexts
_nextEmittableEnumerationResults
objectEnumerator
_startEntryProxy
entriesToEmit
setEntriesToEmit:
_entriesToEmit
itemResult
trackingEntryResult
entryType
_branchDepth
_entryType
_sectionIdentifier
tableCellGrayTextColor
_activityIndicator
playlistURL
keyCertificateURL
keyServerURL
initWithiTunesCloudStoreHLSAssetInfo:
blockingSecureKeyLoadDuration
setBlockingSecureKeyLoadDuration:
perceivedTotalStartupTime
setPerceivedTotalStartupTime:
tracklistLoadDuration
setTracklistLoadDuration:
_perceivedTotalStartupTime
_blockingSecureKeyLoadDuration
_tracklistLoadDuration
externalError
updateWithExternalLeaseResponseError:
_endUsingSubscriptionLease
_beginUsingSubscriptionLeaseWithCompletionHandler:
setExternalError:
_externalError
_setUseLookNeue:
_resetThumbImageForState:
_minTrackImageForStyle:
setMinimumTrackImage:forState:
_maxTrackImageForStyle:
setMaximumTrackImage:forState:
addLayoutGuide:
_endBlinkingWarningView
createThumbView
setThumbImage:forState:
isTracking
setVolumeValue:
setValue:animated:
_layoutVolumeWarningView
thumbRectForBounds:trackRect:value:
trackRectForBounds:
locationInView:
setMuted:
_commitVolumeChange
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
volumeWarningEnabled
volumeWarningState
allowUserToExceedEUVolumeLimit
beginTrackingWithTouch:withEvent:
endTrackingWithTouch:withEvent:
_endTracking
updateVolumeWarningState
cancelTrackingWithEvent:
_layoutForAvailableRoutes
topAnchor
_minTrackView
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
trailingAnchor
_maxTrackView
activateConstraints:
updateVolumeValue
mainContext
registerView:inContext:
unregisterView:inContext:
hitRect
_availableRoutesDidChangeNotification:
volumeAudioCategory
setVolumeAudioCategory:
sendActionsForControlEvents:
_beginBlinkingWarningView
setShadowColor:
setShadowBlurRadius:
setShadowOffset:
thumbImageForState:
_systemInteractionTintColor
minimumTrackImageForState:
maximumTrackImageForState:
_thumbImageForStyle:
beginAnimations:context:
_routeNameLabelAnimationDidEnd
setAnimationDidStopSelector:
commitAnimations
EUVolumeLimit
_newVolumeWarningView
maximumValue
_blinkWarningView
stretchableImageWithLeftCapWidth:topCapHeight:
colorWithRed:green:blue:alpha:
resizableImageWithCapInsets:
volumeController:volumeValueDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:mutedStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
minimumValue
setVolumeWarningTrackImage:
_isOffScreen
thumbView
volumeWarningTrackImage
volumeWarningView
trackLayoutGuide
_volumeController
_commitTimer
_thumbImageView
_forcingOffscreenVisibility
_thumbIsDefault
_configuredLayoutGuide
_volumeWarningView
_volumeWarningBlinking
_volumeWarningTrackImage
_trackLayoutGuide
_hitRectInsets
_createSubviews
_initWithStyle:
containsValueForKey:
_setShowsVolumeSlider:
_setShowsRouteButton:animated:
convertPoint:fromView:
_setRouteDiscoveryEnabled:
routeOtherThanHandsetAvailable
_updateWirelessRouteStatus
fetchAvailableRoutesWithCompletionHandler:
imageForState:
showsTouchWhenHighlighted
_getDefaultVolumeSliderFrame:routeButtonFrame:forBounds:
_setChargeEnabled:
routeButtonShowsTouchWhenHighlighted
convertRect:toView:
convertRect:fromView:
_defaultRouteButtonImageAsSelected:
_displayAudioRoutePicker
isVisible
volumeSliderRectForBounds:
routeButtonRectForBounds:
isShowingRouteButton
isWirelessRouteActive
areWirelessRoutesAvailable
minimumVolumeSliderImageForState:
maximumVolumeSliderImageForState:
volumeWarningSliderImage
routeButtonImageForState:
setMinimumVolumeSliderImage:forState:
setMaximumVolumeSliderImage:forState:
setVolumeWarningSliderImage:
setRouteButtonImage:forState:
setRouteButtonShowsTouchWhenHighlighted:
setShowsRouteButton:
setShowsVolumeSlider:
setVolumeThumbImage:forState:
showsRouteButton
showsVolumeSlider
volumeThumbImageForState:
volumeThumbRectForBounds:volumeSliderRect:value:
volumeSlider
hidesRouteLabelWhenNoRouteChoice
volumeSliderShrinksFromBothEnds
setHidesRouteLabelWhenNoRouteChoice:
setVolumeSliderShrinksFromBothEnds:
dismissActiveOverlaysAnimated:
isShowingActiveOverlays
_setVolumeAudioCategory:
_routeButton
_hasNonDefaultRouteButtonImages
_hasNonDefaultMaxVolumeSliderImage
_hasNonDefaultMinVolumeSliderImage
_hidesRouteLabelWhenNoRouteChoice
_routeButtonShowsTouchWhenHighlighted
_routeDiscoveryEnabled
_routeLabel
_showingButton
_showingLabel
_showingSlider
_showsRouteButton
_showsVolumeSlider
_volumeSliderShrinksFromBothEnds
_wirelessRouteIsPicked
_wirelessRoutesAvailable
_pushedRouteDiscoveryModeState
integerPredicateValue
doublePredicateValue
floatPredicateValue
boolPredicateValue
stringPredicateValue
bytesPredicateValue
setType:
setIntegerPredicateValue:
setFloatPredicateValue:
setDoublePredicateValue:
setStringPredicateValue:
setBytesPredicateValue:
hasType
enumerateObjectsWithOptions:usingBlock:
_enumerateNodesWithOptions:usingBlock:
setRelativeOffset:
initWithRelativeOffset:object:
replaceObjectAtIndex:withObject:returningExistingObject:
_removeObjectAtIndex:shouldSlide:
setObject:
removeObjectAtIndex:returningRemovedObject:
relativeOffset
firstEmptyIndex
maximumIndex
_maximumIndex
_nodes
_relativeOffset
_object
encodeInt64:forKey:
_representativeCollection
setSectionKind:
setWantsDetailedKeepLocalRequestableResponse:
setLegacyMediaQuery:
sectionTranslationContext
setContentRange:
_wantsDetailedKeepLocalRequestableResponse
_mediaLibrary
_allowedItemIdentifiers
_scopedContainers
_legacyMediaQuery
_contentRange
_mediaLibraryDidChangeNotification:
beginGeneratingLibraryChangeNotifications
endGeneratingLibraryChangeNotifications
setIdentifyingModelObject:
sectionKeepLocalStatusConfigurations
downloadableItemsQuery
downloadablePlaylistItemEntityQueryBlock
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
libraryAssertion
_sectionKeepLocalStatusConfigurations
_libraryAssertion
_downloadablePlaylistItemEntityQueryBlock
_downloadableItemsQuery
assetFlavor
setAssetFlavor:
assetQuality
setAssetQuality:
didStartLeaseSession
setDidStartLeaseSession:
downloadToken
setDownloadToken:
setITunesStoreStream:
isHLSAsset
setIsHLSAsset:
setProtectionType:
purchaseBundle
setPurchaseBundle:
responseAssetDictionary
setResponseAssetDictionary:
sourceURL
setSourceURL:
streamingKeyServerURL
setStreamingKeyServerURL:
streamingKeyCertificateURL
setStreamingKeyCertificateURL:
alternateSourceURL
setAlternateSourceURL:
_didStartLeaseSession
_iTunesStoreStream
_isHLSAsset
_assetFlavor
_assetQuality
_protectionType
_purchaseBundle
_responseAssetDictionary
_sourceURL
_streamingKeyServerURL
_streamingKeyCertificateURL
_alternateSourceURL
_downloadToken
destinationURL
setDestinationURL:
_destinationURL
_mediaItemValuesForProperties
_cachedLocalPlaybackAssetFilePathWithIntegrityCheck:returningAssetQuality:protectionType:usesPurchaseBundle:
storeAccountID
setStoreSubscriptionAdamID:
setStoreCloudID:
setStoreCloudAlbumID:
setRedownloadable:
setEndpointType:
setSubscriptionRequired:
setAccountIdentifier:
shouldReportPlayEventsToStore
setShouldReportPlayEvents:
setRedownloadParameters:
localNetworkContentURL
setAvailable:
setNonPurgeable:
stringByDeletingPathExtension
stringByAppendingPathExtension:
setPurchaseBundleFilePath:
setFilePath:
setQualityType:
protectedContentSupportStorageURL
_writeQueue
populateLocationPropertiesWithPath:assetProtectionType:
loadMediaItemWithCompletionHandler:
clearLocationProperties
defaultStore
mediaLibraryPersistentID
streamingPlaybackAssetDestinationFilePathForMediaLibraryPersistentID:storeAdamID:storeSagaID:assetQuality:assetFlavor:protectionType:pathExtension:
_invalidateMediaItemProperties
_highQualityCachedAssetDestinationDirectory
_lowQualityCachedAssetDestinationDirectory
pathForResourceFileOrFolder:
defaultManager
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
streamingPlaybackPurchaseBundleDestinationFilePathForAssetFilePath:
setCachedLocalPlaybackAssetFilePath:protectionType:assetQuality:withCompletionHandler:
removeItemAtPath:error:
valuesForProperties:
_onqueue_mediaItemValuesForProperties
cachedLocalPlaybackAssetFilePathReturningAssetQuality:protectionType:usesPurchaseBundle:
downloadIdentifier
iTunesStoreContentID
iTunesStoreContentDSID
clearLocalPlaybackAssetFilePathWithCompletionHandler:
shouldRememberBookmarkTime
storeUbiquitousIdentifier
streamingPlaybackAssetDestinationFilePathForAssetQuality:assetFlavor:protectionType:pathExtension:
setMediaItem:
setWriteQueue:
_hasValidMediaItemValuesForProperties
_playbackKeys
initWithRequest:responseHandler:
allSupportedItemProperties
allSupportedGroupProperties
allSupportedSectionProperties
customForYouURL
setCustomForYouURL:
_customForYouURL
viewDidLoad
preferredContentSize
volumeView
_volumeView
initWithAudioCategory:
presentAlertControllerInWindow:
dismissAlertController
_keyWindowDidChange:
setRootViewController:
_flip
setContentViewController:
initWithStyle:
_tableView
hostingWindow
setHostingWindow:
previousWindow
setPreviousWindow:
_audioCategory
_hostingWindow
_previousWindow
_block
_interval
propertiesToFetchMap
setPropertiesToFetchMap:
propertiesToSortMap
setPropertiesToSortMap:
sortTransformer
setSortTransformer:
valueTransformer
setValueTransformer:
_sortTransformer
_valueTransformer
_propertiesToFetchMap
_propertiesToSortMap
relationshipModelClass
entityTranslator
foreignPropertyBase
setForeignPropertyBase:
setRelationshipModelClass:
transient
setTransient:
relationshipValidationProperties
setRelationshipValidationProperties:
validRelationshipHandler
setValidRelationshipHandler:
_transient
_foreignPropertyBase
_relationshipModelClass
_validRelationshipHandler
_relationshipValidationProperties
_translatorForMPModelClass:mlcoreEntityClass:create:transient:
mapPropertyKey:withPropertiesToFetch:valueTransformer:
_MPMediaLibraryEntityTranslator_MLCoreSortDescriptorOrdering
mapPropertyKey:withPropertiesToFetch:propertiesToSort:sortTransformer:valueTransformer:
_propertyTranslatorForKeyPath:
MPModelClass
_propertyForKeyPath:
_propertyMapForKeyPath:includePropertiesToSort:
valueForKeyPath:forEntity:context:
setByAddingObject:
enumerateKeysAndObjectsUsingBlock:
objectForPropertySet:entity:baseTranslator:prependKeyPath:context:
removeProperty:
MLCorePropertiesForPropertySet:withForeignPropertyBase:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:
mapRelationshipKey:toModelClass:transient:usingForeignPropertyBase:relationshipValidationProperties:isValidRelationshipHandler:
keyPath
modelKind
relationshipKinds
entityQueryBlock
relatedProperties
ascending
sortDescriptorWithKey:ascending:
MLCoreSortDescriptorsForModelSortDescriptors:
translatorForTransientMPModelClass:
translatorForMPModelClass:mlcoreEntityClass:
MLCoreEntityClassForModelEntityClass:
mapPropertyKey:toMLProperty:
classForRelationshipKey:
identifiersForEntity:
mapIdentifierMLProperties:identifierCreationBlock:
objectForPropertySet:entity:context:
propertiesToFetchForPropertyKey:
mapRelationshipKey:toModelClass:usingForeignPropertyBase:
isTransient
allowedItemPredicatesBlock
setAllowedItemPredicatesBlock:
setEntityQueryBlock:
_propertiesToTranslators
_relationshipsToTranslators
_MPModelClass
_entityClass
_allowedItemPredicatesBlock
_entityQueryBlock
isMultiQuery
_multiQuery
_modelKind
generation
deviceIdentifier
positionKeyWithDeviceIdentifier:generation:
setDeviceIdentifier:
setGeneration:
_deviceIdentifier
_generation
itemIdentifier
setBranchDepth:
setPreviousEntry:
initWithPositionKey:sectionIdentifier:
addBranch:
setDataSourceRemoved
positionKey
_dataSourceRemoved
_positionKey
_nextEntries
_previousEntry
headEntryWithSectionIdentifier:
identifiersItemEntryMap
setLastItemEntry:
_identifiersItemEntryMap
_lastItemEntry
itemEntryWithSectionIdentifier:itemIdentifier:generationPrefix:
rootEntry
isUserMoved
isUserRemoved
isDataSourceMoved
clonedEntries
_generationNumber
setRootEntry:
itemEntryWithSectionIdentifier:itemIdentifier:
setDataSourceMoved
setUserRemoved
setUserMoved
newClonedEntry
_dataSourceMoved
_userRemoved
_userMoved
_itemIdentifier
_rootEntry
_clonedEntries
initWithNibName:bundle:
beginReceivingRemoteControlEvents
_moviePlayerViewController_applicationDidEnterBackgroundNotification:
moviePlayer
dismissMoviePlayerViewControllerAnimated
endReceivingRemoteControlEvents
_moviePlayerViewController_playbackDidFinishNotification:
subtype
didRotateFromInterfaceOrientation:
setStatusBarHidden:
becomeFirstResponder
resignFirstResponder
viewDidDisappear:
rootViewController
canBecomeFirstResponder
remoteControlReceivedWithEvent:
shouldAutorotate
prefersStatusBarHidden
shouldAutorotateToInterfaceOrientation:
willAnimateRotationToInterfaceOrientation:duration:
supportedInterfaceOrientations
_shouldUseFullScreenLayoutInWindow:parentViewController:
_internal
_statusBarWasHidden
presentModalViewController:withTransition:
isPerformingModalTransition
dismissModalViewControllerWithTransition:
defaultDurationForTransition:
presentMoviePlayerViewControllerAnimated:
_wasDisplayedAnimated
initWithCommand:mediaRemoteType:options:
mediaRemoteOptions
eventWithCommand:mediaRemoteType:options:
contextID
playbackQueueOffset
command
_mediaRemoteOptions
_contextID
_command
_timestamp
rating
_rating
playbackRate
_playbackRate
isNegative
_negative
isRequestingDefermentToPlaybackQueuePosition
_requestingDefermentToPlaybackQueuePosition
_trackID
_stationHash
positionTime
_positionTime
preservesRepeatMode
_preservesRepeatMode
preservesShuffleMode
_preservesShuffleMode
stationURL
isRequestingPlaybackInitialization
_requestingPlaybackInitialization
_stationURL
initWithCommand:playbackQueue:
playbackQueue
_playbackQueue
insertAfterContextItemID
destinationOffset
_insertAfterContextItemID
_destinationOffset
initWithCommand:playbackQueue:options:
supportedInsertionPositions
setSupportedInsertionPositions:
insertionPosition
insertAfterContentItemID
_supportedInsertionPositions
_insertionPosition
_insertAfterContentItemID
initWithMRLanguageOption:
languageOption
setting
_languageOption
_setting
playbackProgress
_playbackProgress
_usesSections
shouldIncludeContentItemID
copyWithBlock:
copyWithIdentifiers:block:
hasCommonIdentifierWithIdentifierSet:
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
identifiersForItemAtIndexPath:
identifiersForSectionAtIndex:
indexPathForItemWithIdentifiersIntersectingSet:
itemIdentifierQueryResults
itemQueryResults
_entityTranslationContext
_itemIdentifierQueryResults
_itemQueryResults
loadAdditionalContentURL
previouslyRetrievedNestedResponse
setPreviousRetrievedNestedResponse:
configureWithParentSection:
previousRetrievedNestedResponse
setDomain:
filteringPolicy
setFilteringPolicy:
previousResponse
setPreviousResponse:
_loadAdditionalContentURL
_previousRetrievedNestedResponse
_domain
_filteringPolicy
_previousResponse
kindWithAlbumKind:
albumKind
_albumKind
editorialArtworkCatalogBlock
__hasBiography__KEY
__MPModelPropertyArtistHasBiography__PROPERTY
__MPModelPropertyArtistArtwork__PROPERTY
__editorialArtworkCatalogBlock__KEY
__MPModelPropertyArtistEditorialArtwork__PROPERTY
__MPModelRelationshipArtistGenre__PROPERTY
__songCount__KEY
__MPModelPropertyArtistSongCount__PROPERTY
__albumCount__KEY
__MPModelPropertyArtistAlbumCount__PROPERTY
__MPModelPropertyArtistLibraryAddedDate__PROPERTY
editorialArtworkCatalog
hasBiography
setHasBiography:
songCount
setSongCount:
albumCount
setAlbumCount:
_hasBiography
_songCount
_albumCount
_editorialArtworkCatalogBlock
_registerNotifications
initWithDataSource:name:
_unregisterNotifications
_scheduleSendDelegateRoutesChanged
_externalScreenType:
_setExternalScreenType:
getExternalScreenTypeWithCompletion:
_updateCachedRoutes
_pickedRouteInArray:
_volumeControlStateForPickedRoute
_onQueueClearCachedRoutes
pickRoute:withPassword:
setPickedRoute:withPassword:completion:
pickRoute:
unpickAirPlayAVRoutesWithCompletion:
supportsWirelessDisplay
_deviceAvailabilityOverrideState
isAppleTVRoute
isAirpodsRoute
isPowerbeatsRoute
isBeatsSoloRoute
isBeatsXRoute
isDeviceRoute
_currentDeviceRoutingIconImageName
_imageThatSuppressesAccessibilityHairlineThickening
persistentDomainForName:
_pickableRoutesDidChangeNotification:
_routeStatusDidChangeNotification:
_volumeControlAvailabilityDidChangeNotification:
_externalScreenTypeDidChangeNotification:
_activeAudioRouteDidChangeNotification:
_onQueueSetExternalScreenType:
_currentDeviceRoutingIconImage
setCategory:
setRouteTypes:
videoRouteForRoute:
pickHandsetRoute
pickSpeakerRoute
unpickAirPlayScreenRouteWithCompletion:
speakerRouteIsPicked
handsetRouteIsPicked
receiverRouteIsPicked
wirelessDisplayRoutesAvailable
_mediaServerDiedNotification:
logCurrentRoutes
category
routeTypes
pendingPickedRoute
_cachedRoutes
_cachedPickedRoute
_legacyCachedRoute
_asyncFetchingCompletionHandlers
_asyncFetchingRoutes
_externalScreenType
_hasExternalScreenType
_scheduledSendDelegateRoutesChanged
_deviceAvailabilityNotifyToken
_dataSource
_discoveryMode
_category
_routeTypes
_pendingPickedRoute
supportedSizesForCatalog:
_artworkTypeForCatalog:
artworkURLForSize:type:
requestWithURL:cachePolicy:timeoutInterval:
availableSizesForArtworkOfType:
sortedSupportedSizesForCatalog:
cacheKeyForCatalog:size:
requestForCatalog:size:
__MPModelPropertyComposerLibraryAddedDate__PROPERTY
initWithSessionInfo:userInfo:frameworksToCheck:
startConfigurationWithCompletionHandler:
pathWithComponents:
playbackLeaseRequest
_updateSubscriptionInformationWithEndReasonType:completionHandler:
getAssetWithRequest:completionBlock:
setPlaybackLeaseRequest:
_playbackLeaseRequest
set_MediaLibrary_coreLibrary:
__MediaLibrary_coreLibrary
_MLCoreStorage
databasePath
lastPathComponent
stringByDeletingLastPathComponent
fileSystemRepresentation
set_MLCoreStorage:
sectionsInfo
sortingDetails
addContentItemType:
uniformContentItemType
_hasValidUniformContentItemType
_contentItemTypeOccurrences
_totalNumberOfOccurrences
_uniformContentItemType
globalPlaylistID
radioStationID
radioStationHash
_mediaPlaybackItemMetadataDidChangeNotification:
_mediaPlaybackItemMetadataLikedStateDidChangeNotification:
endPrioritizingDownloadSession:
sharedDownloadSessionController
_newTimeMarkersForChapterType:
isGeniusEnabled
setValue:forProperty:withCompletionBlock:
_shouldRememberBookmarkTime
genreTitle
isPlaybackItemMetadataStreamingForAssetCreation:returningProtectionType:
playbackItemMetadata
_currentPreferredAssetQualityForPlaybackItemMetadata:
_assetURLForCachedLocalPlaybackAssetFilePathForPlaybackItemMetadata:withMinimumAssetQuality:assetOptions:returningProtectionType:assetQuality:usesPurchaseBundle:
allowsCellularNetworking
downloadForMediaPlaybackItemMetadata:
setTimeout:
setSearchBlock:
startWithCompletionHandler:
_requiresPendingItemDownload
_storeRedownloadProductItem
_addStoreDownloadForRedownloadProductItem:
_getAssetURL:playWhileDownloadSession:assetQuality:error:usingStoreDownload:assetOptions:shouldStartDownload:
isFinished
requiresPlayWhileDownload
setPlaybackItemMetadata:
setPreferredAssetQuality:
shouldUseAccountLessStreaming
setShouldUseAccountLessStreaming:
setPrefersHLS:
setShouldUseStreamingRedownload:
isRental
equivalencySourceAdamID
setEquivalencySourceAdamID:
assetSourceStoreFrontID
setAssetSourceStoreFrontID:
rtcReportingServiceIdentifierWithAssetURL:
setDownloadSessionAlternativeConfigurationOptionsBlock:
setShouldStartLeaseSession:
acquireDownloadSessionWithRequest:completionHandler:
startDownloadSession:
downloadHandlerIdentifier
_shouldRespectMusicCellularDataSetting
_shouldRespectStoreCellularDataSetting
storeDownloadForPlaybackItemMetadata:type:attributes:
reloadFromServer
iTunesStoreContentType
_rentalIdentifier
iTunesStoreContentDownloadParameters
iTunesStoreContentPurchasedMediaKind
iTunesStoreContentUserAgent
sharedStorage
allCookiesForUserIdentifier:
additionalHTTPHeaderFields
resourceLoader
setMediaKind:
setAllowProgressiveSwitchUp:
gaplessHeuristicInfo:durationInSamples:lastPacketsResync:encodingDelay:encodingDrain:
setPlaybackLikelyToKeepUpTrigger:
_prioritizeDownloadSessionsIfNeeded
releasePlayWhileDownloadSession:
releaseDownloadSession:
setDeallocationHandler:
storeAVItem:didReceiveResponseAssetDictionary:
_handlePlaybackFinishedTime:finishedByHittingEnd:
hasSubscriptionSlot
lastKnownFairPlaySubscriptionStatus
_applyLoudnessInfo
_updateBookmarkTimeIfNecessary:isCheckpoint:
noteWasPlayedToTime:skipped:
_mediaSelectionOptionFromGroup:withTrackID:
initWithPreferredLanguages:preferredMediaCharacteristics:
setMediaSelectionCriteria:forMediaCharacteristic:
streamType
playbackDuration
_bookmarkTime
setLikedState:withCompletionHandler:
isITunesU
allowsStoreBagStreamingKeyURLsFallback
isRentalCheckoutRequired
rentalID
setShouldIncludeGUID:
setCertificateURL:
setKeyServerURL:
setLeaseAction:
setResourceLoadingRequest:
setServerPlaybackContextDataDelegate:
setRentalId:
setSkippedRentalCheckout:
finishLoading
persistentContentKeyContext
playbackStartTime
_persistPlaybackStartTime:
finishLoadingWithError:
setResponseBlock:
performSubscriptionSecureKeyDeliveryRequestOperation:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
serverPlaybackContextData
setServerPlaybackContextDataForStoppingLease:
canCreateStoreDownloadForPlaybackItemMetadata:type:attributes:
nominalHasBeenPlayedThresholdForDuration:
fileExistsAtPath:isDirectory:
pathExtension
initWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
effectiveNetworkTypeForPlayback
isVideoCellularStreamingAllowed
preferredVideosAssetQualityOnCellular
preferredVideosAssetQualityOnWifi
allowsHighQualityMusicStreamingOnCellular
setLoudnessInfo:
addDownloads:
acquirePlayWhileDownloadSessionForDownload:withCompletionHandler:
didSkipWithPlayedToTime:
serverPlaybackContextDataForStoppingLease
setServerPlaybackContextData:
incrementPlayCountForPlayingToEnd
incrementPlayCountForStopTime:
performTransactionWithBlock:
handlePlaybackFinishedTime:finishedByHittingEnd:
chaptersOfType:
chapterType
playbackTime
indexInChaptersWithAnyType
setChapterIndex:
setChapters:
indexInChaptersWithSameType
setHasArtworkAtPlaybackTime:
dateWithTimeIntervalSince1970:
beginPrioritizingDownloadSession:
hasNominalAmountBeenPlayedForElapsedTime:startTime:stopTime:
shouldIncrementPlayCountForElapsedTime:startTime:stopTime:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
secureKeyDeliveryRequestOperationDidChangeServerPlaybackContextData:
rtcReportingParentHierarchyToken
rtcReportingServiceIdentifier
rtcReportingAssetType
initWithPlaybackItemMetadata:options:
isStreamingLowQualityAsset
storeDownload
mpcReporting_equivalencySourceAdamID
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
_chapterTitleForTime:
_storeUbiquitousIdentifier
isPrivateListeningEnabled
setPrivateListeningEnabled:
isSiriInitiated
setSiriInitiated:
_persistenceQueue
_didDeferLeaseStart
_hasEverPrioritizedPlayerItem
_hasPrioritizedPlayWhileDownloadSession
_hasPrioritizedStreamingDownloadSession
_hasValidAssetQuality
_isActivePlayerItem
_lastResourceLoadingError
_playWhileDownloadSession
_preferredAssetQuality
_rtcReportingParentHierarchyToken
_rtcReportingServiceIdentifier
_streamingDownloadSession
_loadingRequest
_serverPlaybackContextDataForStoppingLease
_rentalCheckoutRequired
_playbackItemMetadata
_assetSourceStoreFrontID
_privateListeningEnabled
_siriInitiated
_equivalencySourceAdamID
_rentalID
initWithStoreAccountIdentifier:
caseInsensitiveCompare:
sortedArrayUsingSelector:
requireFinalTracklist
setRequireFinalTracklist:
setShouldRestartPlayback:
_playerCurrentItem
_shouldStartPlayback
_requireFinalTracklist
_shouldRestartPlayback
_startIndex
playerCurrentItem
_updateGestureRecognizersForEnabledTypes
removeGestureRecognizer:
hitTest:withEvent:
addGestureRecognizer:
swipeDirection
tapCount
velocity
simultaneousGestureTypes
_tapGestureRecognized:
initWithTarget:action:
_swipeGestureRecognized:
requireGestureRecognizerToFail:
_pinchGestureRecognized:
setCancelsTouchesInView:
setDelaysTouchesEnded:
_activityGestureRecognized:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
swipeDelegate
enabledGestureTypes
setSimultaneousGestureTypes:
_enabledGestureTypes
_simultaneousGestureTypes
_swipeDelegate
_tapGestureRecognizer
_swipeGestureRecognizer
_activityGestureRecognizer
_pinchGestureRecognizer
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
_startLocation
_trackingTouch
_swipeDirection
_delayedHandleTaps:
timerWithTimeInterval:target:selector:userInfo:repeats:
addTimer:forMode:
_resetTapTimer
_setTapTimerWithDuration:
isIgnoringInteractionEvents
setTapCount:
_lastTapCount
_tapLocation
_tapHandleTimer
_stopReportingOngoingActivity
_reportOngoingActivity
_touchesTerminated:withEvent:
allTouches
phase
removeTarget:action:
_deviceMediaLibraryDidChangeNotification:
setTasteType:forPlaylistGlobalID:withCompletionHandler:
setTasteType:forStoreAdamID:withContentType:completionHandler:
_libraryEntityForModel:
setTasteType:forMediaEntity:withCompletionHandler:
_removePendingUpdateRecordForPlaylistGlobalID:token:
_removePendingUpdateRecordForStoreAdamID:token:
_addPendingUpdateRecordForPlaylistGlobalID:contentTasteType:
_addPendingUpdateRecordForStoreAdamID:contentTasteType:
_libraryPlaylistWithGlobalID:
addNonLibraryOwnedPlaylistWithGlobalID:completion:
_libraryEntityWithStoreID:contentType:
initWithStoreItemID:additionalTrackMetadata:
initWithImportElements:usingCloudLibraryDestination:
setLikedState:forAlbumWithStoreID:
setLikedState:forEntityWithStoreID:withMediaType:
performStoreItemLibraryImport:withCompletion:
tasteTypeForPlaylistGlobalID:
tasteTypeForStoreAdamID:
tasteTypeForMediaEntity:
tasteType
initWithPlaylistGlobalID:tasteType:
initWithStoreAdamID:tasteType:
collectionWithPersistentID:groupingType:
predicateWithProperty:equalToValue:
_ML3QueryWithEntityClass:predicate:options:
anyEntityPersistentID
enumeratePersistentIDsAndProperties:ordered:usingBlock:
collectionWithPersistentID:groupingType:verifyExistence:
libraryDataProvider
queryWithLibrary:predicate:orderingTerms:usingSections:options:
setTasteType:forModel:withCompletionHandler:
tasteTypeForModel:
_pendingUpdateRecordByPlaylistGlobalID
_pendingUpdateRecordByStoreAdamID
cacheableItemIdentifier
initWithCacheSize:
addMetadata:forItemIdentifier:
_removeExpiredItemsPeriodically
getCacheKeyWithRequest:completionHandler:
getStoreItemMetadataForRequest:responseHandler:
setFinalResponse:
metadataForItemIdentifier:
setStoreItemMetadata:forItemIdentifier:
hasMetadataForRequestReason:
metadataDictionary
initWithRequest:response:
setBatchResultsHandler:
removeExpiredMetadata
optimalBatchSize
_lastExpiredMetadataPurgeMachTime
_itemCaches
easyTouchDefaultHitRectInsets
easyTouchDefaultCharge
_handleTouchDown
_handleTouchCancel
_handleTouchUp
redColor
setBorderColor:
setBorderWidth:
colorWithAlphaComponent:
_delayedTriggerHold
holdDelayInterval
alignmentRectInsets
isHolding
setAlignmentRectInsets:
setHitTestDebugEnabled:
setHoldDelayInterval:
hitTestDebugEnabled
_holding
_hitTestDebugView
_hitTestDebugEnabled
_holdDelayInterval
_alignmentRectInsets
displayablePartsInPartMask:
reloadControls
_setVisiblePartsNeedReload
_isGeniusEnabledDidChangeNotification:
_unregisterForAVItemNotifications
_updateButtonVisibility
_fastForwardButton:
_rewindButton:
_geniusButton:
geniusButtonImageForControlState:
_mailButton:
mailButtonImage
_playbackSpeedButton:
_repeatButton:
repeatButtonImage
_shuffleButton:
shuffleButtonImage
playbackControlsScrubberShouldDisplaySingleChapters:
progressBarClipsToChapterDuration
cancelTracking
_currentDisplayTime
_updatedDisplayDurationForTime:preciseChapterMarkers:
_resetGeniusButtonImages
repeatTypeForPlaybackControls:
detailScrubbingHidesControls
updateForEndOfDetailScrubbing
controlsOverlayDetailSliderInstructionOverlayWillHide:
controlsOverlayDetailSliderTrackingDidEnd:
shuffleIsOn
shuffleTypeForPlaybackControls:
_setCurrentTime:duration:
_contentsChangedNotification:
_playbackModeDidChangeNotification:
_tickNotification:
shouldOverrideProgressTimeLabelStyle
_registerForAVItemNotifications
controlsOverlay:shouldUseDetailScrubberForItem:
setIgnoresInteractionEvents:
_handleGeniusButtonClick
playbackControlsDidTapGeniusButton:
controlsOverlay:didClickMailPodcastLinkButtonForItem:
controlsOverlayDidClickPlaybackSpeedButton:
_updateForPlaybackSpeed
playbackControls:changedRepeatType:
handleChangeToRepeatType:
controlsOverlayDidClickFastForwardButton:
_addOpacityAnimationToBezelView:reversed:
controlsOverlayDidClickRewindButton:
playbackControls:changedShuffleType:
handleChangeToShuffleType:
removeAnimationForKey:
controlsOverlayDetailSliderTrackingDidBegin:
controlsOverlayDetailSliderInstructionOverlayWillShow:
resetDetailSlider:
controlsOverlay:detailSliderTrackingDidChangeScrubSpeed:
reloadView
animationWithKeyPath:
setBeginTime:
functionWithName:
setTimingFunction:
setFromValue:
setToValue:
setRemovedOnCompletion:
setFillMode:
setKeyTimes:
valueWithCATransform3D:
setValues:
setTimingFunctions:
addAnimation:forKey:
newButtonBezelViewForPart:
newTrackInfoLabel
newProgressIndicator
setValue:duration:
hideGeniusButtonForPlaybackControls:
hideGeniusButton
controlsOverlay:shouldDisableFastFowardAndRewindButtonForItem:
controlsOverlay:shouldDisablePlaybackSpeedButtonForItem:
controlsOverlay:shouldDisableMailPodcastLinkButtonForItem:
controlsOverlay:shouldHideMailPodcastLinkButtonForItem:
controlsOverlay:playbackSpeedForItem:
playbackSpeedButtonImageForPlaybackSpeed:
playbackSpeedTitleForPlaybackSpeed:
setAttributedTitle:forState:
animationDidStart:
animationDidStop:finished:
reloadButtonVisibility
isScrubbing
_changeGeniusImageToPressedImage:
_changeGeniusImageToNormalImage:
_fastFowardButton
_fastFowardButtonBezel
_geniusButton
_markerForProgressControlDuration
_mailButton
_playbackSpeedButton
_progressControl
_repeatButton
_rewindButton
_rewindButtonBezel
_rewindOpacityAnimation
_progressOffset
_seekedToValue
_shuffleButton
_trackInfoLabel
_wantsTick
_geniusButtonDisabled
_fastForwardAndRewindButtonDisabled
_playbackSpeedButtonDisabled
_mailButtonDisabled
_mailButtonHidden
_useMediaDetailSlider
_detailScrubbing
_needsUpdateButtonVisibility
mediaObjectType
libraryIdentifiers
libraryIdentifiersCount
libraryId
collectionExistsContainedWithinPersistentIDs:count:groupingType:existentPID:
collectionExistsWithName:groupingType:existentPID:
initWithPersistentID:
_createFilterableDictionary
canFilterByProperty:
_isValidPlaylistProperty:
componentsSeparatedByString:
seedTracksQuery
addFilterPredicate:
isCloudMix
isMusicCellularStreamingAllowed
predicateWithValue:forProperty:comparisonType:
importArtworkTokenForEntityPersistentID:entityType:artworkToken:artworkType:sourceType:
representativeItem
importOriginalArtworkFromImageData:withArtworkToken:artworkType:sourceType:mediaType:
notifyDisplayValuesPropertyDidChange
isCloudEnabled
uploadArtworkForPlaylist:completionHandler:
addItemWithProductID:completionHandler:
addMediaItems:completionHandler:
existsInLibrary
seedItems
authorDisplayName
removeFirstItem
mediaTypes
multiverseIdentifier
representativeArtists
canPlayUsingNetworkType:
setUserSelectedArtworkImage:
_representativeArtists
_seedTracksQuery
mainBundle
localizedInfoDictionary
infoDictionary
setAuthorDisplayName:
setDescriptionText:
_defaultAuthorDisplayName
_authorDisplayName
_descriptionText
__MPModelPropertyTVEpisodeTitle__PROPERTY
__descriptionText__KEY
__MPModelPropertyTVEpisodeDescriptionText__PROPERTY
__MPModelPropertyTVEpisodeDuration__PROPERTY
__MPModelPropertyTVEpisodeHasCloudSyncSource__PROPERTY
__musicShow__KEY
__MPModelPropertyTVEpisodeMusicShow__PROPERTY
__episodeNumber__KEY
__MPModelPropertyTVEpisodeNumber__PROPERTY
__explicitRating__KEY
__MPModelPropertyTVEpisodeExplicitRating__PROPERTY
__MPModelRelationshipTVEpisodeLocalFileAsset__PROPERTY
__MPModelRelationshipTVEpisodePlaybackPosition__PROPERTY
__MPModelRelationshipTVEpisodeStoreAsset__PROPERTY
__season__KEY
__MPModelRelationshipTVEpisodeSeason__PROPERTY
__show__KEY
__MPModelRelationshipTVEpisodeShow__PROPERTY
__releaseDate__KEY
__MPModelPropertyTVEpisodeReleaseDate__PROPERTY
__episodeType__KEY
__MPModelPropertyTVEpisodeType__PROPERTY
__episodeTypeDisplayName__KEY
__MPModelPropertyTVEpisodeTypeDisplayName__PROPERTY
__MPModelPropertyTVEpisodeLibraryAdded__PROPERTY
__MPModelPropertyTVEpisodeLibraryAddedDate__PROPERTY
__MPModelPropertyTVEpisodeLibraryAddEligible__PROPERTY
__MPModelPropertyTVEpisodeKeepLocalEnableState__PROPERTY
__MPModelPropertyTVEpisodeKeepLocalManagedStatus__PROPERTY
__MPModelPropertyTVEpisodeArtwork__PROPERTY
isMusicShow
setMusicShow:
episodeNumber
setEpisodeNumber:
setExplicitRating:
setReleaseDate:
episodeType
setEpisodeType:
episodeTypeDisplayName
setEpisodeTypeDisplayName:
_musicShow
_episodeNumber
_explicitRating
_releaseDate
_episodeType
_episodeTypeDisplayName
_season
_show
hasLoadedValueForKey:
shouldLibraryAdd
setEntityLimit:
setIgnoreRestrictionsPredicates:
addGlobalPlaylistWithID:andAddToCloudLibrary:completion:
setGlobalPlaylistID:
setShouldLibraryAdd:
_shouldLibraryAdd
_globalPlaylistID
setFilterPredicates:
stringByAppendingFormat:
decodeObject
decodeValueOfObjCType:at:
encodeObject:
encodeValueOfObjCType:at:
_isFilteringDisabled
initWithCriteria:library:
setStaticEntities:entityType:
itemExistsWithPersistentID:
collectionExistsWithPersistentID:groupingType:
filterPredicatesCount
filterPredicates
entityOrder
filteringDisabled
staticEntityIdentifiersCount
staticEntityIdentifiers
entityWithMultiverseIdentifier:
staticEntityType
protobufferEncodableObject
addFilterPredicates:
setFilteringDisabled:
setEntityOrder:
setStaticEntityType:
addStaticEntityIdentifiers:
setSortItems:
audiobooksQuery
_itemsForQueryCriteria:
_collectionsForQueryCriteria:
initFilteringDisabled
playlistsQuery
_setOrderingProperties:
_setOrderingDirectionMappings:
_hasItemsForQueryCriteria:
_hasCollectionsForQueryCriteria:
_countOfItemsForQueryCriteria:
_countOfCollectionsForQueryCriteria:
_itemPersistentIdentifiersForQueryCriteria:
_collectionPersistentIdentifiersForQueryCriteria:
newPlaylistWithPersistentID:
_getRepresentativeCollectionGrouping:propertyPredicate:
initWithIdentifier:itemsQuery:grouping:
excludesEntitiesWithBlankNames
specifiesPlaylistItems
groupingThreshold
itemSectionInfo
collectionSectionInfo
initWithInteger:
loadValueForAggregateFunction:onCollectionsForProperty:queryCriteria:completionBlock:
loadValueForAggregateFunction:onItemsForProperty:queryCriteria:completionBlock:
_valueForAggregateFunction:onProperty:entityType:
isFilteringDisabled
_enumerateItemsInOrder:usingBlock:
_enumerateItemPersistentIDsInOrder:usingBlock:
concreteMediaItemWithPersistentID:library:
enumerateItemIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
_enumerateCollectionsInOrder:usingBlock:
_enumerateCollectionPersistentIDsInOrder:usingBlock:
enumerateCollectionIdentifiersForQueryCriteria:ordered:cancelBlock:usingBlock:
persistentIDPropertyForGroupingType:
initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:
albumsQuery
artistsQuery
songsQuery
podcastsQuery
ITunesUQuery
ITunesUAudioQuery
videoITunesUQuery
audibleAudiobooksQuery
compilationsQuery
composersQuery
genresQuery
albumArtistsQuery
videosQuery
musicVideosQuery
tvShowsQuery
homeVideosQuery
moviesQuery
movieRentalsQuery
audioPodcastsQuery
videoPodcastsQuery
geniusMixesQuery
playlistsRecentlyAddedQuery
initWithEntities:entityType:
copyByRemovingStaticEntities
copyBySanitizingStaticEntities
removeFilterPredicate:
entityLimit
shouldIncludeNonLibraryEntities
includeEntitiesWithBlankNames
setIncludeEntitiesWithBlankNames:
ignoreSystemFilterPredicates
setIgnoreSystemFilterPredicates:
ignoreRestrictionsPredicates
itemPropertiesToFetch
collectionPropertiesToFetch
setCollectionPropertiesToFetch:
_hasItems
_hasCollections
itemPersistentIdentifiers
collectionPersistentIdentifiers
_orderingProperties
_orderingDirectionMappings
sortItems
setUseSections:
useSections
willGroupEntities
itemSections
collectionSections
valueForAggregateFunction:onItemsForProperty:
valueForAggregateFunction:onCollectionsForProperty:
_enumerateItemsUsingBlock:
_enumerateUnorderedItemsUsingBlock:
_enumerateUnorderedItemPersistentIDsUsingBlock:
_enumerateCollectionsUsingBlock:
_enumerateUnorderedCollectionsUsingBlock:
_enumerateUnorderedCollectionPersistentIDsUsingBlock:
criteria
setCriteria:
_criteria
_staticEntities
_staticEntityType
evaluateEntity:
hasSuffix:
descriptionOfValue:forProperty:
propertyPredicate
property
comparisonType
setProperty:
setComparisonType:
multiverseIdentifierForCollectionWithPersistentID:groupingType:
multiverseIdentifierForTrackWithPersistentID:
setPropertyPredicate:
_property
_value
_comparisonType
initWithConditionPredicate:thenPredicate:elsePredicate:
conditionalPredicate
hasConditionalPredicate
hasThenPredicate
thenPredicate
hasElsePredicate
elsePredicate
setConditionalPredicate:
setThenPredicate:
setElsePredicate:
predicateWithConditionPredicate:thenPredicate:elsePredicate:
conditionPredicate
_conditionPredicate
_thenPredicate
_elsePredicate
initWithPredicates:
compoundPredicate
setCompoundPredicate:
predicateMatchingPredicates:
predicateWithProperty:values:
values
_values
initWithLongLong:
persistentIDsPredicate
shouldContain
persistentIDsCount
persistentIDs
setShouldContain:
addPersistentIDs:
setPersistentIDsPredicate:
predicateWithPersistentIDs:count:shouldContain:
_persistentIDs
_shouldContain
_count
setSearchString:
setProperties:
searchStringPredicate
searchString
initWithArray:
setSearchStringPredicate:
predicateWithSearchString:forProperties:
_searchString
_properties
MPIsEmpty
removeItemAtIndex:
moveItemFromIndex:toIndex:
modelObjects
setStoreIDs:
setCloudUniversalLibraryID:
setCloudVersionHash:
setLastModifiedDateComponents:
setOwner:
setCuratorPlaylist:
setPublicPlaylist:
setVisiblePlaylist:
setSubscribed:
setUserEditableComponents:
setShareURL:
setShareShortURL:
setTiledArtworkRequest:
_requestedPlaylistProperties
applicationQueuePlayer
_setUseApplicationSpecificQueue:
systemMusicPlayer
initWithMusicPlayerController:
_serverDied:
_systemVolumeDidChange:
_registerForLaunchNotifications
_clientCheckInUsingExistencePort:
_musicPlayerExistencePortIsValid
_stopMigServer
_unregisterForLaunchNotifications
invokeWithTarget:
prepareToPlayWithCompletionHandler:
_cancelExistingPrepareToPlay
nowPlayingItem
setNowPlayingItem:
setQueueWithQuery:firstItem:
setQueueWithItemCollection:
shuffleMode
setShuffleMode:
volumeCategoryForAudioCategory:
getVolume:forCategory:
getCString:maxLength:encoding:
setVolumeTo:forCategory:
setQueueWithDescriptor:
openURL:options:completionHandler:
isGeniusAvailable
isGeniusAvailableForSeedItems:
setQueueWithSeedItems:
pauseWithFadeoutDuration:
nowPlayingItemAtIndex:
indexOfNowPlayingItem
numberOfItems
currentChapterIndex
setCurrentChapterIndex:
setQueueWithGeniusMixPlaylist:
setQueueWithRadioStation:
setQueueWithStoreIDs:
prependQueueDescriptor:
appendQueueDescriptor:
userQueueModificationsDisabled
setUserQueueModificationsDisabled:
skipInDirection:
queueAsQuery
queueAsRadioStation
playItem:
shuffle
skipToBeginningOrPreviousItem
skipToNextChapter
skipToPreviousChapter
prepareQueueForPlayback
serverIsAlive
setUseApplicationSpecificQueue:
_playbackStateDidChange:
_nowPlayingItemDidChange:
acquireProcessAssertion
_runMigServerOnPort:
registerForServerDiedNotifications
setInBlockHandlingPlaybackStateChangedMessageFromServer:
inBlockHandlingPlaybackStateChangedMessageFromServer
_shuffleModeDidChange:
_repeatModeDidChange:
_isQueuePreparedDidChange:
_itemPlaybackDidEnd:
_queuePreparationFailedWithErrorCode:
_queueRequestDidFinish
_queueUpdateDidFinish
_queueDidInvalidate
applicationMusicPlayer
iPodMusicPlayer
setRunLoopForNotifications:
internal
setQueueWithQuery:
setVolumePrivate:
beginGeneratingPlaybackNotifications
endGeneratingPlaybackNotifications
openToPlayQueueDescriptor:
playbackSpeed
setPlaybackSpeed:
isNowPlayingItemFromGeniusMix
skipInDirection:error:
_musicPlayerDidLaunch
prepareForRemoteSelectorInvocation
launchMusicPlayerSuspended
performSelectorOnMainThread:withObject:waitUntilDone:
sharedService
_bundleIdentifier
openApplication:options:withResult:
didPrepareForRemoteSelectorInvocation
serverConnectionDied
initWithBundleIdentifier:flags:reason:name:withHandler:
currentQueueUUID
queueWithUUID:
requestQueue
setQueue:
_clientPort
_inBlockHandlingPlaybackStateChangedMessageFromServer
_itemCollection
_musicPlayerController
_playbackNotificationObservers
_playbackState
_preparedToPlay
_processAssertion
_runLoopSource
_didCheckIn
_useApplicationSpecificQueue
_useCachedPlaybackState
_cachedPlaybackStateIsValid
_wantsQueueModificationsDisabled
_prepareToPlayCompletionHandler
endReasonType
setEndReasonType:
_endReasonType
genericModelObjectWithRequestedProperties:
isLoadingRepresentation
destination
fittingSize
setLoadingRepresentation:
_updateRepresentation
bestImageFromDisk
setDestination:progressiveConfigurationBlock:
setDestination:
_artworkLoadQueue
initWithImage:algorithm:
analyzeWithCompletionHandler:
radiosityImageWithImage:displayScale:completionHandler:
_artworkCacheForIdentifier:requestingContext:
setEvictsObjectsWhenApplicationEntersBackground:
setCacheIdentifier:
setRequestingContext:
cacheIdentifier
requestingContext
_updateWithRepresentation:isBestRepresentation:modelRevisionID:
_loadBestRepresentationIfNeeded
staticArtworkCatalogWithImage:
setCacheLimit:forCacheIdentifier:requestingContext:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:
hasImageOnDisk
setDestination:configurationBlock:
isArtworkVisuallyIdenticalToCatalog:
existingColorAnalysisWithAlgorithm:
requestColorAnalysisWithAlgorithm:completionHandler:
requestFocusRegionsWithCompletionHandler:
requestRadiosityImageWithCompletionHandler:
requestExportableArtworkURLWithCompletion:
setCacheIdentifier:forRequestingContext:
configurationBlock
setConfigurationBlock:
setToken:
setDataSource:
_fittingSize
_modelRevisionID
_loadingRepresentation
_destinationScale
_cacheIdentifier
_requestingContext
_destination
_configurationBlock
_token
_renderHint
setRepresentationSize:
debugQuickLookObject
_image
_representationToken
_representationSize
CGSizeValue
sortedArrayUsingComparator:
artworkIdentifier
_artworkIdentifier
subviews
clearArtworkCatalogs
artworkCatalogBackingFileURL
_conditionalPredicate
isAsynchronous
isConcurrent
isExecuting
_isExecuting
_isFinished
_error
followWithPerson:
_performCallback:
_displayFollows
_serialRead:
prepareCache:
targetEntityID
_enqueueFollows:unfollow:completion:
_shouldUpdate
_actuallyUpdateCache:
setUnfollow:
_barrierWrite:
activeDSID
_followingURLFromBag:accountDSID:
_updateFollowsFromStoreDictionary:
unionSet:
componentsWithString:
initWithName:value:
arrayWithArray:
setQueryItems:
followWithStoreDictionary:
intersectSet:
_autofollowStatusURLFromBag:
_enableAutofollowURLFromBag:enable:
getIsFollowingPerson:completion:
cachedIsFollowingPerson:
follow:completion:
unfollow:completion:
hasCacheEntries
autoFollowStatusIsEnabled:
setAutoFollowStatus:completionBlock:
_serverOperationsQueue
_callbackQueue
_followed
_transientFollowed
_transientUnfollowed
_lastFollowListUpdate
_isAutoFollowing
_lastAutoFollowingUpdate
setTargetEntityID:
setTargetEntityType:
targetEntityType
_targetEntityID
_targetEntityType
itemWithPersistentID:
decodeItemWithCoder:
_isValidItemProperty:
_directStoreURL
_libraryLinkURL
populateLocationPropertiesOfItem:withPath:assetProtectionType:
invalidateCachedProperties
populateLocationPropertiesOfItem:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItem:
bundleIdentifier
enumerateValuesForProperties:usingBlock:
_libraryLinkKind
_libraryLinkArtist
_libraryLinkPlaylistName
URLQueryAllowedCharacterSet
titlePropertyForGroupingType:
fallbackTitlePropertyForGroupingType:
dynamicProperties
itemArrayCoderPIDDataCodingClass
incrementPlayCount
markNominalAmountHasBeenPlayed
incrementSkipCount
updateDateAccessedToCurrentDateWithWriteCompletionBlock:
nominalHasBeenPlayedThreshold
didReceiveMemoryWarning
_bestStoreURL
populateLocationPropertiesWithPath:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
effectiveAlbumArtist
artwork
dateAdded
comments
hasProtectedAsset
effectiveStopTime
podcastTitle
podcastPersistentID
playCount
setPlayCount:
playCountSinceSync
setPlayCountSinceSync:
lastPlayedDate
setLastPlayedDate:
dateAccessed
setDateAccessed:
skipCount
setSkipCount:
skipCountSinceSync
setSkipCountSinceSync:
lastSkippedDate
setLastSkippedDate:
hasBeenPlayed
setHasBeenPlayed:
playbackStoreID
isExplicitItem
userGrouping
chapterOfType:atIndex:
countOfChaptersOfType:
isUsableAsRepresentativeItem
defaultPropertyValues
decodeInt64ForKey:
_persistentID
initWithBoundsSize:requestHandler:
imageWithSize:
pngDataFromImage:
imageCropRect
jpegDataWithSize:
pngDataWithSize:
_bounds
_requestHandler
setRedownloadableItemCount:
setDownloadEnabledItemCount:
setNonPurgeableItemCount:
setPendingItemIdentifiers:
longValue
identifyingModelObject
redownloadableItemCount
_identifyingModelObject
_redownloadableItemCount
disconnect
_clearPendingDisconnection
_reloadLibraryForContentsChangeWithNotificationInfo:
initWithLibrary:
callStackSymbols
_scheduleLibraryChangeNotificationPostingBlock:
requestAuthorization:
_setupNotifications
setLibraryFilterPredicates
_tearDownNotifications
mediaLibraries
_clearCachedEntitiesIncludingResultSets:
_clearCachedContentDataAndResultSets:
_reloadLibraryForRestrictionsChange
beginScanningForLibraries
_endDiscoveringMediaLibrariesIfAllowed
connectWithAuthenticationData:completionBlock:progressHandler:
_disconnect
requestCapabilitiesWithCompletionHandler:
sdk_addItemWithOpaqueID:withCompletion:
currentEntityRevision
syncGenerationID
playlistGeneration
writable
hasMediaOfType:
hasGeniusMixes
hasSongs
hasUbiquitousBookmarkableItems
_checkHasContent:determined:mediaType:queryHasEntitiesBlock:
_checkHasContent:determined:queryHasEntitiesBlock:
playlistExistsWithPersistentID:
itemPersistentIDForStoreID:
initWithUnsignedLongLong:
initWithProperties:itemsQuery:
localizedSectionHeaderForSectionIndex:
localizedSectionIndexTitles
playbackHistoryPlaylistPersistentID
addPlaylistWithName:activeGeniusPlaylist:
addPlaylistWithValuesForProperties:
setValue:forDatabaseProperty:
valueForDatabaseProperty:
databaseID
URLForItemDataRequest:
deleteItemsWithIdentifiers:count:
removeItemsWithIdentifiers:count:
removePlaylistWithIdentifier:
storeDownloadForMediaItem:type:attributes:
failureError
addFinishHandler:forDownloads:
requestPermissionToDownloadWithType:completionHandler:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:
populateLocationPropertiesOfItemWithIdentifier:withPath:assetProtectionType:completionBlock:
clearLocationPropertiesOfItemWithIdentifier:
setValues:forProperties:forItemPersistentIDs:
geniusItemsForSeedItem:completion:
requiresAuthentication
connectWithCompletionHandler:
_initWithMediaLibrary:identifier:
weakObjectsPointerArray
performReadTransactionWithBlock:
isCurrentThreadInTransaction
syncValidity
entityCache
entityFromURL:inLibrary:
entityWithLibraryURL:
_persistentIDForAssetURL:
host
scannerWithString:
scanLongLong:
collectionExistsWithStoreID:groupingType:existentPID:
itemResultSetForQueryCriteria:
updateToLibraryCurrentRevision
initWithResultSet:queryCriteria:entityType:library:
loadQueryCriteria:hasItemsWithCompletionBlock:
_getCachedValueForQueryCritiera:valueCriteriaCache:entitiesForCriteriaCache:didLoadBlocksByQueryCriteria:valueLoadedFromEntitiesArrayBlock:loadValueFromDataProviderBlock:
loadQueryCriteria:hasCollectionsWithCompletionBlock:
loadQueryCriteria:countOfItemsWithCompletionBlock:
loadQueryCriteria:countOfCollectionsWithCompletionBlock:
enumeratePersistentIDsUsingBlock:
collectionResultSetForQueryCriteria:
additionalLibraryFilterPredicates
setLibraryEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
cloudFilteringType
setLibraryContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicEntityFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
setLibraryPublicContainerFilterPredicatesWithCloudFilteringType:additionalFilterPredicates:
pointerAtIndex:
_canShowCloudTracksDidChangeNotification:
addObserverForName:object:queue:usingBlock:
_displayValuesDidChangeNotification:
_didReceiveMemoryWarning:
endScanningForLibraries
_mediaLibraries
removeObjectIdenticalTo:
_libraryDataProviders
_initWithLibraryDataProvider:
_libraryForDataProvider:
setRemovalReason:
_reloadLibraryForDynamicPropertyChangeWithNotificationInfo:
_reloadLibraryForInvisiblePropertyChangeWithNotificationInfo:
companionDeviceActiveStoreAccountIsSubscriber
addStoreItemIDs:andAddTracksToCloudLibrary:withCompletion:
initWithLookupDictionary:additionalTrackMetadata:
sdk_addPlaylistWithValuesForProperties:
sdk_createPlaylistWithPersistenID:properties:tracklist:completionHandler:
addPlaylistStoreItemsForLookupItems:withCompletion:
addTracksToMyLibrary:
addNonLibraryOwnedPlaylistsWithGlobalIDs:completion:
recordPlayEventForAlbumPersistentID:
recordPlayEventForPlaylistPersistentID:
setDefaultMediaLibrary:
beginDiscoveringMediaLibraries
endDiscoveringMediaLibraries
isLibraryServerDisabled
setLibraryServerDisabled:
sharedMediaLibraries
mediaLibraryWithUniqueIdentifier:
libraryDataProviders
addLibraryDataProvider:
removeLibraryDataProvider:removalReason:
reloadLibraryDataProvider:
postEntitiesAddedOrRemovedNotificationForLibraryDataProvider:
reloadDynamicPropertiesForLibraryDataProvider:
reloadInvisiblePropertiesForLibraryDataProvider:
reloadDisplayValuesForLibraryDataProvider:
syncGenerationDidChangeForLibraryDataProvider:
uniqueIdentifierDidChangeForLibraryDataProvider:
addLibraryFilterPredicate:
removeLibraryFilterPredicate:
removalReason
hasMedia
hasPlaylists
hasArtists
hasAlbums
hasPodcasts
hasGenres
hasComposers
hasAudiobooks
hasVideos
hasMusicVideos
hasAudibleAudioBooks
hasMovies
hasCompilations
hasITunesUContent
hasAudioITunesUContent
hasVideoITunesUContent
hasMovieRentals
hasTVShows
hasHomeVideos
hasVideoPodcasts
itemExistsInDatabaseWithPersistentID:
itemWithStoreID:
playbackHistoryPlaylist
addPlaylistWithName:
setSyncPlaylistId:
syncPlaylistId
homeSharingDatabaseID
URLForHomeSharingRequest:
removeItems:
downloadAsset:completionHandler:
connectWithAuthenticationData:completionBlock:
connectionProgress
entityWithSpotlightIdentifier:
entityWithPersistentID:entityType:
isValidAssetURL:
pathForAssetURL:
setCloudFilteringType:
_removeConnectionAssertion:
addStoreItem:andAddTracksToCloudLibrary:withCompletion:
addAdvertisementItemWithDictionary:completion:
getPlaylistWithUUID:creationMetadata:completionHandler:
addPlaylistStoreItemsWithMetadata:completion:
_libraryDataProvider
_libraryChangeObservers
_entityCacheQueue
_fixedQueue
_notificationObservers
_itemsForCriteriaCache
_hasItemsForCriteriaCache
_countOfItemsForCriteriaCache
_itemResultSetsForCriteriaCache
_collectionsForCriteriaCache
_hasCollectionsForCriteriaCache
_countOfCollectionsForCriteriaCache
_collectionsResultSetsForCriteriaCache
_hasItemsDidLoadForCriteria
_hasCollectionsDidLoadForCriteria
_countOfCollectionsDidLoadForCriteria
_countOfItemsDidLoadForCriteria
_additionalLibraryFilterPredicates
_additionalLibraryFilterPredicatesAccessQueue
_connectionAssertions
_connectionAssertionsQueue
_disconnectAfterReleasingAssertions
_connectionProgress
_removalReason
_determinedHasMedia
_hasMedia
_determinedHasSongs
_hasSongs
_determinedHasGeniusMixes
_hasGeniusMixes
_determinedHasPlaylists
_hasPlaylists
_determinedHasComposers
_hasComposers
_determinedHasPodcasts
_hasPodcasts
_determinedHasUbiquitousBookmarkableItems
_hasUbiquitousBookmarkableContent
_determinedHasAudiobooks
_hasAudiobooks
_cloudFilteringType
_filteringDisabled
_hasVideos
_determinedHasVideos
_hasMusicVideos
_determinedHasMusicVideos
_hasAudibleAudioBooks
_determinedHasAudibleAudioBooks
_hasMovies
_determinedHasMovies
_hasCompilations
_determinedHasCompilations
_hasITunesU
_determinedHasITunesU
_hasVideoITunesU
_determinedHasVideoITunesU
_hasMovieRentals
_determinedHasMovieRentals
_hasTVShows
_determinedHasTVShows
_hasHomeVideos
_determinedHasHomeVideos
_hasVideoPodcasts
_determinedHasVideoPodcasts
_originalCellNetworkFlags
_originalWiFiNetworkFlags
__MLCoreStorage
_identifier
initWithEntity:anchor:deletionType:
entity
anchor
deletionType
_entity
_anchor
_deletionType
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:itemBlock:collectionBlock:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:inUsersLibrary:usingBlock:
enumerateEntityChangesAfterSyncAnchor:maximumRevisionType:usingBlock:
_syncValidity
enumerateEntityChangesAfterSyncAnchor:usingBlock:
sharedQueue
_kindForClass:
kindWithSongKind:
kindWithVariants:playlistEntryKind:options:
kindWithKinds:
kindWithRelationshipKinds:
sectionClass
setSectionClass:
setItemClass:
setSectionProperties:
setSectionSortDescriptors:
setItemProperties:
setItemSortDescriptors:
setShouldIncludeContentItemID:
_shouldIncludeContentItemID
_sectionKind
_sectionSortDescriptors
_itemSortDescriptors
setClientAuditToken:
clientPID
setClientPID:
clientAuditToken
context
setContext:
invocation
setInvocation:
_clientPID
_clientAuditToken
_context
_invocation
_registerNotificationsForSelectors
rangeOfString:
stringByReplacingOccurrencesOfString:withString:
centerNamed:
runServerOnCurrentThread
_center
_forwardMessage:userInfo:auditToken:
registerForMessageName:target:selector:
invocationWithMethodSignature:
setSelector:
setArgument:atIndex:
retainArguments
methodReturnType
shouldDelayInvocation:
delayReply
getReturnValue:
methodSignature
sendDelayedReply:dictionary:
performDelayedInvocationsIfNeeded
clientBundleIdentifier
clientBundleVersion
deferredInvocations
setDeferredInvocations:
_clientBundleIdentifier
_clientBundleVersion
_deferredInvocations
_messagingCenterDied:
numberOfArguments
getArgument:atIndex:
selector
_performRemoteSelector:userInfo:timeout:
_performRemoteSelectorAndReceiveReply:userInfo:timeout:
setReturnValue:
_serverConnectionDied
prepareForRemoteSelectorInvocationWithTimeout:
sendNonBlockingMessageName:userInfo:
sendMessageAndReceiveReplyName:userInfo:error:
_didPrepareForRemoteSelectorInvocation
_lastPrepareForRemoteSelectorInvocationTimedOut
_lastPrepareAttemptTime
setBundleIdentifier:
bundleVersion
setBundleVersion:
_bundleVersion
archivedDataWithRootObject:
initWithMediaTypes:
_requestRemoteViewController
setMediaPickerController:
willMoveToParentViewController:
_addRemoteView
_sendSettingsToService
_pickerDidPickItems:
_pickerDidCancel
_hasAddedRemoteView
_serviceViewControllerProxy
serviceMediaPickerSetPrompt:
serviceMediaPickerSetAllowsPickingMultipleItems:
serviceMediaPickerSetShowsCloudItems:
serviceMediaPickerSetShowsItemsWithProtectedAssets:
serviceMediaPickerSetPicksSingleCollectionEntity:
serviceMediaPickerSetWatchCompatibilityVersion:
isViewLoaded
mediaPickerDidCancel:
_forceDismissal
mediaPicker:didPickMediaItems:
_beginDelayingPresentation:cancellationHandler:
didMoveToParentViewController:
_endDelayingPresentation
requestViewController:fromServiceWithBundleIdentifier:connectionHandler:
serviceMediaPickerSetMediaTypes:
_canShowTextServices
serviceMediaPickerSetShouldPreventShowingTextServices:
serviceViewControllerProxy
preheatMediaPicker
remoteMediaPickerDidPickMediaItems:
remoteMediaPickerDidCancel
setPrompt:
allowsPickingMultipleItems
setAllowsPickingMultipleItems:
showsCloudItems
setShowsCloudItems:
showsItemsWithProtectedAssets
setShowsItemsWithProtectedAssets:
picksSingleCollectionEntity
setPicksSingleCollectionEntity:
watchCompatibilityVersion
setWatchCompatibilityVersion:
_resetRemoteViewController
prompt
_cancelRequest
_modalContext
_remoteViewController
_allowsPickingMultipleItems
_showsCloudItems
_showsItemsWithProtectedAssets
_picksSingleCollectionEntity
_watchCompatibilityVersion
_mediaTypes
_prompt
cancelAllOperations
_updateCurrentItem
_updateQueueDepthIfNeeded
_reloadItemsKeepingCurrentItem:
MP_shortDescription
queueCoordinator:failedToLoadItem:
_syncItemsWithPreviousItems:
_sendItemsDidChange
_playerItems
_beginBackgroundTaskAssertion
beginPlaybackQueueTransactionAndPause:
_syncPlayerItems
_dequeueFailedItem:
commitPlaybackQueueTransaction
_endBackgroundTaskAssertion
setCurrentPlaybackQueueTransactionDisplayTime:
_preferredQueueDepthWithFirstItem:
queueCoordinator:itemToFollowItem:
removeObjectsInRange:
_hasAchievedEquilibrium
_loadAssetForItem:
_removeItemFromPlayer:
MP_associatedQueuePlayer
setMP_associatedQueuePlayer:
defaultItemEQPresetType
queueCoordinator:willInsertItem:afterItem:
insertItem:afterItem:
removeItem:
queueCoordinatorDidChangeItems:
_currentItemHasFinishedDownloadingDidChangeNotification:
initWithPlayer:dataSource:
equilibriumAchievedHandler
setEquilibriumAchievedHandler:
_backgroundTaskIdentifier
_backgroundTasks
_holdingPlaybackTransactionForFirstItem
_isPendingPlayerItemSync
_isSyncingPlayerItems
_itemsPendingAssetLoading
_lastItemAnchor
_lastPausedDate
_lastPreferredQueueDepth
_needsCurrentItemUpdateAfterPlayerItemSync
_preventLoadingItems
_rateQueueDepthAdjustmentDelay
_reusableItems
_items
_equilibriumAchievedHandler
setInformalMediaClipID:
setPreviewArtworkCatalogBlock:
setInformalStaticAssetID:
flavor
setFlavorType:
setStaticAssets:
mediaClipWithStoreItemMetadata:storeItemMovieClip:
_requestedClipProperties
_transientStateDidChangeNotification:
_updateActiveDownloadsAllowingDownloadRemoval:
_updateCurrentStatus
intersectsSet:
downloadReason
downloadProgress
transientKeepLocalStateForModelObject:
nonPurgeableItemCount
downloadEnabledItemCount
hasNonPurgeableAsset
isCollectionType
managedStatus
isStoreRedownloadable
pendingItemIdentifiers
_activeDownloadForIdentifierSet:
isEqualToSet:
_calculateCurrentStatus
downloadManager:didEnqueueAssetDownloads:didRemoveAssetDownloads:
downloadManager:didUpdateDownloadProgress:
downloadManager:didFinishAsset:withError:
setConfiguration:
configuration
currentStatus
statusBlock
setStatusBlock:
_activeDownloads
_configuration
_statusBlock
_currentStatus
_pendingItemIdentifiers
_downloadEnabledItemCount
_nonPurgeableItemCount
setCollectionType:
setManagedStatus:
setHasNonPurgeableAsset:
setStoreRedownloadable:
_collectionType
_hasNonPurgeableAsset
_storeRedownloadable
_managedStatus
initWithItemsQuery:
collectionWithItems:
sortTitlePropertyForGroupingType:
representativePersistentIDPropertyForGroupingType:
_containedMediaTypes
_initializedContainedMediaTypes
_itemsCount
_itemsQuery
_representativeItem
initWithMPStoreDownload:
initWithATAsset:
deviceLibraryID
setDownloadReason:
setDownloadProgress:
libraryID
setLibraryID:
setStoreSagaID:
_downloadReason
_deviceLibraryID
_storeItemID
_downloadProgress
_libraryID
_storeSagaID
setHasSocialPosts:
_requestedArtistProperties
errorResolver:didResolveError:withResolution:
errorResolver
resolutionHandler
_strongSelf
_errorResolver
_resolutionHandler
initWithScrubbingControl:
setDetailedScrubbingEnabled:
_setupControlsForStyle
setDeliversTouchesForGesturesToSuperview:
setSemanticContentAttribute:
initWithFrame:style:maxTrackWidth:
timeLabelFontForStyle:
timeLabelTextColorForStyle:
labelClass
_stringForCurrentTime:
_stringForInverseCurrentTime:
_updateTrackInset
detailedScrubbingEnabled
durationAllowsForDetailedScrubbing
removeAllAnimations
currentThumbImage
_setValueWhileTracking:duration:
animationKeys
_updateForAvailableDuraton
_updateTimeDisplayForTime:
_commitValue
thumbHitRect
scaleForVerticalPosition:
isContinuous
statusBarOrientation
setRepeatCount:
setAutoreverses:
_autoscrubTick:
continueTrackingWithTouch:withEvent:
_resetScrubInfo
currentScrubSpeed
_updateTimeDisplayForTime:force:
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
setFill
bezierPathWithRoundedRect:cornerRadius:
fill
alphaComponent
_modernThumbImageWithColor:height:includeShadow:
_colorSliceImageWithColor:height:
_legacy_sizeWithFont:
stringFromSeconds:
_stringForTime:elapsed:
detailScrubControllerDidBeginScrubbing:
detailScrubControllerDidEndScrubbing:
detailScrubController:didChangeValue:
detailScrubController:didChangeScrubSpeed:
viewForFirstBaselineLayout
viewForLastBaselineLayout
_thumbHitEdgeInsets
setMinTimeLabelWidth:
detailScrubbingVerticalRange
setDetailScrubbingVerticalRange:
availableDuration
timeLabelStyle
minTimeLabelWidth
_currentTimeInverseLabel
_currentTimeLabel
_scrubController
_allowsScrubbing
_autoscrubActive
_autoscrubTimer
_canCommit
_currentTime
_downloadingTrackOverlay
_glowDetailScrubImageView
_isTracking
_maxTrackWidth
_previousLocationInView
_trackInset
_formatter
_detailScrubbingVerticalRange
_timeLabelStyle
_minTimeLabelWidth
_availableDuration
hasModifications
performQueueTransaction:completionHandler:
_queueTransationQueue
_queueLoadingSemaphore
initWithMediaItems:uuid:
mutableItems
uuid
_uuid
insertQueueDescriptor:afterItem:
queueDescriptorsToPrepend
queueInsertions
removals
_insertions
_queueDescriptorsToPrepend
_itemsToRemove
_deviceIsCarplayCapable
currentCarPlayExternalDevice
_areContentLimitsEnforced
setContentLimitsEnforced:
_musicListsLimited
setEnforcedContentItemsCount:
setEnforcedContentTreeDepth:
setEndpointAvailable:
_setupMediaRemoteEndpoint
_tearDownMediaRemoteEndpoint
_scheduleUpdateSupportedAPIs
_pushContentItemsUpdate
_onQueueContentItemWasSentToMediaRemote:
_contentItemChangedNotification:
_limitedUIChanged:
_browsableContentEndpointChanged:
waitUntilAllOperationsAreFinished
_mediaRemoteContentItem
serviced
playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:
setServiced:
playableContentManager:didUpdateContext:
screenIDs
limitedUIElements
limitedUI
playableContentManager:initializePlaybackQueueWithContentItems:completionHandler:
playableContentManager:initializePlaybackQueueWithCompletionHandler:
beginLoadingChildItemsAtIndexPath:completionHandler:
contentItemAtIndexPath:
childItemsDisplayPlaybackProgressAtIndexPath:
_updateSupportedAPIs
sharedContentManager
beginUpdates
endUpdates
setNowPlayingIdentifiers:
_enqueueArtworkUpdate:withCompletion:
_enqueueArtworkUpdate:size:withCompletion:
_handlePlaybackInitializationCompletedWithContext:error:
_contentItemWasSentToMediaRemote:
_markContentItemsAsSentToMediaRemote:
nowPlayingIdentifiers
_mutatedContentItems
_contentItemIdentifiersSentToMediaRemote
_artworkUpdateQueue
_coalescingUpdates
_scheduledSupportedAPIsChange
_externalDevice
_nowPlayingIdentifiers
initWithIndexPath:
_serviced
_indexPath
indexAtPosition:
initWithIndexes:length:
numberOfChildItemsAtIndexPath:
indexPathByAddingIndex:
_initWithMediaRemoteContentItem:
contentItemForIdentifier:completionHandler:
lock
unlock
_lyricsURLForURLBagDictionary:
initWithURL:resolvingAgainstBaseURL:
_enqueueOperationWithURL:bagDictionary:allowingAuthentication:
URLResponse
statusCode
setAccountNameEditable:
setPromptStyle:
initWithAuthenticationContext:
authenticateResponseType
startWithAuthenticateResponseBlock:
setLyricsID:
wirelessRouteIsPicked
cachedObjectAtIndexPath:
updateCacheWithObject:atIndexPath:
_cachedNumberOfItemsInSections
_cachedNumberOfSections
_hasValidCachedNumberOfSections
_itemsCache
_sectionsCache
_runMigServer
_avController
startMusicPlayerControllerServerWithDelegate:
isMusicPlayerControllerServerRunning
allowForeignAssetPlayback
_prepareQueueIfNecessaryWithCompletion:
musicPlayerServer:setNowPlayingItem:
nowPlayingItemForMusicPlayerServer:
_setQueueWithQuery:
_clientState
_numberOfItems
setSeeking:
useApplicationSpecificQueue
_canSeedGeniusWithItem:
activeGeniusPlaylist
populateWithSeedItem:queue:completionBlock:
setFirstItem:
setQueueDescriptor:
setGeniusMixPlaylist:
musicPlayerServer:prependQueueDescriptor:
musicPlayerServer:appendQueueDescriptor:
currentMediaQueryForMusicPlayerServer:
currentRadioStationForMusicPlayerServer:
displayIndexForItem:
playlistFeederForPlaylistIndex:
itemForPlaylistIndex:
indexOfNowPlayingItemForMusicPlayerServer:
userQueueModificationsDisabledForMusicPlayerServer:
musicPlayerServer:setUserQueueModificationsDisabled:
currentQueueUUIDForMusicPlayerServer:
musicPlayerServer:queueForUUID:
machPort
requestQueueForMusicPlayerServer:completionHandler:
musicPlayerServer:setQueue:withCompletionHandler:
MP_capabilities
_clientPortInvalidated:
_clientPIDHasPermissionToPlay:
_endPlaybackForClientIfNecessary:
_setQueuePrepared:
allKeysForObject:
_avControllerForClientPID:
_handlePendingPreparationClientPIDs
initWithMachPort:options:
setHasAudioBackgroundMode:
_playbackBufferingStateDidChangeNotification:
_playbackErrorPostedNotification:
_queueDidInvalidateNotification:
musicPlayerServer:registerForShuffleModeChangesWithChangeHandler:
musicPlayerServer:registerForRepeatModeChangesWithChangeHandler:
_clientPortInvalidatedNotification:
_applicationStateChangedWithUserInfo:
setHandler:
_clientStateForPID:
mostElevatedApplicationStateForPID:
bundleInfoValueForKey:PID:
backgroundPlaybackAccess
hasAudioBackgroundMode
setBackgroundPlaybackAccess:
playerForMusicPlayerServer:usingApplicationSpecificQueue:requestingBundleIdentifier:
geniusMixPlaylist
queueDescriptor
storeIDs
_currentClientPIDHasPermissionToPlay
startItemID
musicPlayerServer:setFirstItemIdentifier:
musicPlayerServer:setFirstItem:
musicPlayerServer:setShuffleMode:
musicPlayerServer:setTimeModifications:
assetStoreFrontOverrides
musicPlayerServer:setAssetStoreFrontOverrides:
musicPlayerServer:prepareQueueWithQuery:withCompletionHandler:
musicPlayerServer:prepareQueueWithGeniusMixPlaylist:withCompletionHandler:
musicPlayerServer:prepareQueueWithRadioStation:withCompletionHandler:
musicPlayerServer:prepareQueueWithStoreIDs:withCompletionHandler:
musicPlayerServer:prepareQueueWithDescriptor:withCompletionHandler:
seeking
displayCountForItem:
_registerClientPort:forProcessID:hasAudioBackgroundMode:
_musicPlayerServer
_activeClientPID
_applicationStateMonitor
_applicationStateMonitorCount
_clientPorts
_clientPortsForPIDs
_clientStateForPIDs
_queuePrepared
_hasSentQueuePrepared
_isInsidePrepareQueue
_pendingPreparationClientPIDs
setAssetStoreFrontOverrides:
setStartItemID:
_hasAudioBackgroundMode
_seeking
_backgroundPlaybackAccess
_geniusMixPlaylist
_shuffleMode
_assetStoreFrontOverrides
_startItemID
_storeIDs
_queueDescriptor
__MPModelPropertyStaticAssetDuration__PROPERTY
__flavorType__KEY
__MPModelPropertyStaticAssetFlavorType__PROPERTY
__mediaType__KEY
__MPModelPropertyStaticAssetMediaType__PROPERTY
__url__KEY
__MPModelPropertyStaticAssetURL__PROPERTY
_flavorType
_mediaType
_setNeedsDisplayedRoutesUpdate
_initWithStyle:routingController:
_setNeedsRouteDiscoveryModeUpdate
setSeparatorInset:
setTableFooterView:
registerClass:forCellReuseIdentifier:
_setTableCellsContentColor:
setBackgroundView:
_setSeparatorsDrawAsOverlay:
setIndicatorStyle:
setContentInset:
setScrollIndicatorInsets:
_reloadEmptyStateVisibility
_beginRouteDiscovery
_updateDisplayedRoutes
_endRouteDiscovery
viewWillLayoutSubviews
_tableViewNumberOfRows
_tableViewHeightAccordingToDataSource
dequeueReusableCellWithIdentifier:forIndexPath:
_displayedRoutes
_shouldShowAirPlayDebugButton
backgroundColor
themeDelegate
routingViewController:willDisplayCell:
_showAirPlayDebug
displayIsPicked
_pickRoute:
setPicked:
indexPathForRow:inSection:
reloadRowsAtIndexPaths:withRowAnimation:
routingViewController:didPickRoute:
deselectRowAtIndexPath:animated:
_normalCellHeight
_tableViewHeaderViewHeight
_tableViewFooterViewHeight
_setRouteDiscoveryMode:
_setupUpdateTimerIfNecessary
compare:options:
setScrollEnabled:
_displayableRoutesInRoutes:
insertedItemIndexPaths
insertRowsAtIndexPaths:withRowAnimation:
deletedItemIndexPaths
deleteRowsAtIndexPaths:withRowAnimation:
updatedItemIndexPaths
moveRowAtIndexPath:toIndexPath:
enumerateItemMovesWithBlock:
performBatchUpdates:completion:
routingViewControllerDidUpdateContents:
initWithStyle:routeName:completionHandler:
cancelButtonIndex
dismissWithClickedButtonIndex:animated:
routingViewControllerDidShowAirPlayDebugScreen:
tableView:heightForHeaderInSection:
tableView:titleForFooterInSection:
preferredFontDescriptorWithTextStyle:
fontDescriptorWithSymbolicTraits:
boundingRectWithSize:options:attributes:context:
routingCell:mirroringSwitchValueDidChange:
tableView:numberOfRowsInSection:
tableView:cellForRowAtIndexPath:
numberOfSectionsInTableView:
tableView:titleForHeaderInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForFooterInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:viewForFooterInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
initWithStyle:routingController:
setAVItemType:
allowMirroring
setAllowMirroring:
setDiscoveryModeOverride:
_expandedCellHeight
_tableCellsBackgroundColor
_tableCellsContentColor
_setTableCellsBackgroundColor:
_shouldAutomaticallyUpdateRoutesList
_setShouldAutomaticallyUpdateRoutesList:
_shouldPickRouteOnSelection
_setShouldPickRouteOnSelection:
_tableHeaderView
avItemType
discoveryModeOverride
setThemeDelegate:
_emptyStateView
_cachedRoutesHasRoutePickedOnPairedDevice
_lastPendingPickedRoute
_updateTimer
_routeDiscoveryMode
_airPlayPasswordAlertDidAppearToken
_airPlayPasswordAlertDidCancelToken
_airPlayPasswordAlertDidAppearTokenIsValid
_cachedShowAirPlayDebugButton
_hasCachedAirPlayDebugButtonStatus
_needsDisplayedRoutesUpdate
_suspendedDiscoveryModeDueToApplicationState
_updatesSincePresentation
_discoveryModeBeforeEnteringBackground
_avItemType
_discoveryModeOverride
_themeDelegate
didCancelRoutePicking:
_playbackPositionBuilder
_requestedSongProperties
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
exportedInterface
serviceViewControllerInterface
shouldPropagateAppearanceCustomizations
viewServiceDidTerminateWithError:
mediaPickerController
_mediaPickerController
_updateVisiblePartsForAvailableRoutes
availableProgressControlAreaFrame
_newDescriptionLabel
_frameInBackgroundViewForDescriptionLabel:
bringSubviewToFront:
setPlaybackErrorDescription:
playbackErrorDescription
_transportControls
_streamingLabel
_playbackErrorDescription
_playbackErrorDescriptionLabel
mediaItemPropertyValues
tvEpisode
movie
playlistEntry
releaseDateComponents
dateFromComponents:
number
_initWithPropertyValues:
initWithArtworkCatalog:
dictionaryWithValuesForKeys:
initWithModelObject:
_propertyValues
previewDuration
previewURL
_initWithURL:options:error:
_initWithAsset:error:
_initWithPlayerItem:error:
_sharedInit
_durationAvailableNotification:
_naturalSizeAvailableNotification:
_typeAvailableNotification:
_determineMediaType
isPlayable
hasProtectedContent
_startPlaybackTime
_explicitlySetMovieSourceType
_movieIsUnplayable
_lastKnownDuration
_lastKnownNaturalSize
_lastKnownType
initWithMaximumCapacity:
_itemIdentifierToCompositeStoreItemMetadataLRUDictionary
_itemIdentifierToCompositeStoreItemMetadataMapTable
initWithIdentifier:userInfo:
initWithMediaRemoteLyricsItemToken:
mediaRemoteLyricsItemToken
_mediaRemoteLyricsItemToken
initWithLyrics:userProvided:token:
initWithMediaRemoteLyricsItem:
userProvided
mediaRemoteLyricsItem
_mediaRemoteLyricsItem
initWithMediaRemoteLyricsEvent:
startDate
endDate
mediaRemoteLyricsEvent
_mediaRemoteLyricsEvent
initWithDictionary:
uniqueID
productName
modelIdentifier
_uniqueID
_productName
_deviceName
_modelIdentifier
weakToStrongObjectsMapTable
methodForSelector:
instanceMethodForSelector:
defaultSessionConfiguration
setHTTPShouldUsePipelining:
setRequestCachePolicy:
setURLCache:
URLCache
setMemoryCapacity:
setDiskCapacity:
setAllowsCellularAccess:
sessionWithConfiguration:
URLSession
fallbackArtworkRepresentationCache
_existingRepresentativeObjectForArtworkCatalog:handler:
_existingRepresentationFromURLCacheForArtworkCatalog:immediateImageDecompressionAllowed:
pendingRequestToCompletionHandlers
URLSessionConfiguration
setRepresentationSize:forRequest:
_artworkRepresentationWithImageFromData:forURLResponse:size:immediateImageDecompressionAllowed:
callbackQueue
catalogTaskMap
_performAsyncBarrierBlock:
dataTaskWithRequest:completionHandler:
resume
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
dataWithContentsOfURL:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
getResourceValue:forKey:error:
removeItemAtURL:error:
wantsBackgroundImageDecompression
MIMEType
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:
cachedResponseForRequest:
response
shouldLookForLargerRepresentationsWhenBestRepresentationIsUnavailable
valueWithCGSize:
_isRepresentationSize:validForCatalog:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
accessQueue
setAccessQueue:
setCallbackQueue:
setFallbackArtworkRepresentationCache:
setCatalogTaskMap:
setPendingRequestToCompletionHandlers:
setURLSession:
_fallbackArtworkRepresentationCache
_catalogTaskMap
_pendingRequestToCompletionHandlers
_URLSession
initWithResponse:data:userInfo:storagePolicy:
storeCachedResponse:forRequest:
_requestSizeMap
_setStartTime:forIdentifiers:
_setEndTime:forIdentifiers:
startTimes
endTimes
_endTimes
_startTimes
initWithItemCollection:
setStartTime:forItem:
setEndTime:forItem:
itemCollection
startItem
setStartItem:
_startItem
initWithStoreIDs:
setStartTime:forItemWithStoreID:
setEndTime:forItemWithStoreID:
setSourceStorefront:forItemWithStoreID:
assetStoreFronts
_storeFronts
isLibraryContent
_libraryContent
_dictionary
_identifiers
initWithPlayParametersQueue:
setStartTime:forItemWithPlayParameters:
setEndTime:forItemWithPlayParameters:
playParametersQueue
setPlayParametersQueue:
startItemPlayParameters
setStartItemPlayParameters:
_playParametersQueue
_startItemPlayParameters
initWithKey:ascending:
setKeyPath:
sortDescriptorWithKeyPath:ascending:
_keyPath
setRelatedProperties:
sortDescriptorWithRelatedProperties:ascending:
_relatedProperties
itemEntityQueryResults
sectionEntityQueryResult
_itemTranslationContext
_sectionTranslationContext
_itemEntityQueryResults
_sectionEntityQueryResult
sendDidResolveError:withResolution:
previewArtworkCatalogBlock
__previewArtworkCatalogBlock__KEY
__MPModelPropertyMediaClipPreviewArtwork__PROPERTY
__staticAssets__KEY
__MPModelRelationshipMediaClipStaticAssets__PROPERTY
__MPModelPropertyMediaClipTitle__PROPERTY
previewArtworkCatalog
staticAssets
_staticAssets
_previewArtworkCatalogBlock
_initWithPersistentID:library:propertiesCache:
itemWithIdentifier:loadEntityBlock:
concreteMediaItemWithPersistentID:
dataProviderEntityClass
removeEntityWithIdentifier:dataProviderEntityClass:
valueForProperty:isCached:
_nonBatchableOrCachedValueForProperty:needsFetch:
cacheValue:forProperty:persistValueInBackgroundBlock:
loadProperties:ofItemWithIdentifier:completionBlock:
cachePropertyValues:forProperties:persistValueInBackgroundBlock:
setValue:forProperty:ofItemWithIdentifier:completionBlock:
cachedPropertyValues
initWithPersistentID:library:
classForCoder
_propertiesCache
_catalog
_initWithIdentifier:valuesForProperties:itemsQuery:grouping:representativeItemIdentifier:propertiesCache:
collectionWithIdentifier:grouping:loadEntityBlock:
hasStoreId
storeId
hasName
setClassName:forClass:
loadProperties:ofCollectionWithIdentifier:groupingType:completionBlock:
setValue:forProperty:ofCollectionWithIdentifier:groupingType:completionBlock:
setValue:forProperty:ofPlaylistWithIdentifier:completionBlock:
setItemsWithIdentifiers:forPlaylistWithIdentifier:completionBlock:
_updateLibraryForPlaylistEdit:
addItemWithIdentifier:toPlaylistWithIdentifier:completionBlock:
addItemsWithIdentifiers:toPlaylistWithIdentifier:completionBlock:
_allowsEditing
cloudItemIDListForPlaylist:
setPlaylistProperties:trackList:forPlaylistWithPersistentID:completionHandler:
appendItems:completion:
sdk_addItemWithOpaqueIdentifier:toPlaylistWithIdentifier:completionBlock:
removeItemsAtIndexes:inPlaylistWithIdentifier:completionBlock:
removeAllItemsInPlaylistWithIdentifier:
removeFirstItemFromPlaylistWithIdentifier:
moveItemFromIndex:toIndex:inPlaylistWithIdentifier:completionBlock:
seedPlaylistWithIdentifier:withItemWithIdentifier:completionBlock:
releaseGeniusClusterPlaylist:
createGeniusClusterPlaylistWithSeedItemIdentifiers:count:error:
generateItemIdentifiersForGeniusClusterPlaylist:count:error:
replaceItems:completion:
replaceItemsWithPersistentIDs:completion:
appendItem:completion:
removeItems:atFilteredIndexes:completionBlock:
removeAllItems
moveItemFromIndex:toIndex:completionBlock:
populateWithSeedItem:completionBlock:
beginGeneratingGeniusClusterItemsWithSeedItems:error:
geniusClusterItemsWithCount:error:
endGeneratingGeniusClusterItems
_clusterPlaylist
addSectionWithHeaderTitle:sectionIndexTitleIndex:count:
enumerateSectionHeadersUsingBlock:
setSectionIndexTitles:
localRevision
persistentIDAtIndex:
setObject:atIndexedSubscript:
setOrderingProperties:
isQueryResultSetInvalidated
_resultSet
_libraryWeakRef
_sectionInfo
_entities
_entitiesQueue
_queryCriteria
_revision
_onBarrierCacheValues:persistValueInBackgroundBlock:
initWithLibraryDataProvider:dataProviderEntityClass:identifier:
delete
dataProvider
_dataProviderEntityClass
_valuePersistenceBlocks
_propertiesQueue
_dataProvider
drawInRect:blendMode:alpha:
_defaultRequestEnvironment
requiredPropertiesForStaticMediaClips
playbackRequestEnvironment
setPlaybackRequestEnvironment:
startItemIdentifiers
setStartItemIdentifiers:
setAssetStoreFronts:
_playbackRequestEnvironment
_startItemIdentifiers
_assetStoreFronts
sectionIndexTitleIndexForSectionIndex:
initWithMediaLibraryDataProvider:
_libraryContentsDidChange:
_libraryEntitiesAddedOrRemoved:
_dynamicPropertiesDidChange:
_invisiblePropertiesDidChange:
_displayValuesDidChange:
_syncGenerationDidChange:
_libraryUIDDidChange:
_libraryCloudLibraryAvailabilityDidChange:
_postEvents
currentDeviceInfo
libraryUID
_databaseFilePaths
databaseConnectionAllowingWrites:withBlock:
attributesOfItemAtPath:error:
fileModificationDate
currentRevision
executeQuery:
int64ValueForFirstRowAndColumn
performBackgroundTaskWithBlock:
predicateWithProperty:equalToInteger:
trackWithPersistentID:visibleInLibrary:
newWithPersistentID:inLibrary:
queryWithLibrary:predicate:
predicateWithProperty:value:comparison:
ML3ItemsQueryInLibrary:
hasEntities
ML3CollectionsQueryInLibrary:
countOfEntities
initWithPersistentID:inLibrary:
setValues:forProperties:forEntityPersistentIDs:inLibrary:usingConnection:
performDatabaseTransactionWithBlock:
sdk_addStoreItemWithOpaqueID:completionHandler:
importElements
storeItem
allItems
additionalTrackMetadata
addToCloudLibrary
_importStoreItemElements:andAddTracksToCloudLibrary:usingCloudAdamID:withCompletion:
initWithLookupItems:
cloudAddToPlaylistBehavior
trackData
initWithLibraryPath:trackData:playlistData:
setTracksAreLibraryOwnedContent:
setPendingMatch:
sharedMediaLibraryService
performImport:fromSource:withProgressBlock:completionHandler:
initWithImportElements:
addStoreItemWithAdamID:completionHandler:
addStorePlaylistWithGlobalID:completionHandler:
_addGlobalPlaylistsToLibraryDatabase:asLibraryOwned:completion:
playlistsData
setPlaylistsAreLibraryOwnedContent:
queryWithLibrary:predicate:options:
recordPlayEventForContainerPersistentID:
enumeratePersistentIDsAndProperties:ordered:cancelBlock:usingBlock:
propertyForMPMediaEntityProperty:
getObjects:range:
adjustedValueForMPProperty:ofEntity:withDefaultValue:
_loadValueForAggregateFunction:entityClass:property:query:completionBlock:
_loadProperties:ofEntityWithIdentifier:ML3EntityClass:completionBlock:
_unadjustedValueForMPProperty:withDefaultValue:
uploadCloudItemProperties
setItemProperties:forSagaID:
trackForeignPersistentID
queryWithLibrary:predicate:orderingTerms:usingSections:
enumeratePersistentIDsAndProperties:usingBlock:
setValues:forProperties:usingConnection:
setCollectionProperties:forCollectionWithPersistentID:groupingType:completionHandler:
containerQueryWithContainer:
containerQueryWithContainer:predicate:
uploadCloudPlaylistProperties
setLikedState:forPlaylistWithGlobalID:
currentDevicePlaybackHistoryPlaylist
newWithDictionary:inLibrary:
deleteFromLibrary:deletionType:persistentIDs:count:
removeFromMyLibrary:deletionType:persistentIDs:count:
unlinkRedownloadableAssetsFromLibrary:persistentIDs:
setTracksWithPersistentIDs:notify:
appendTracksWithPersistentIDs:notify:
sdk_addStoreItemWithOpaqueID:toPlaylistWithPersistentID:completionHandler:
removeTracksAtIndexes:notify:
removeAllTracks
removeFirstTrack
moveTrackFromIndex:toIndex:
preferredAudioTracks
preferredSubtitleTracks
revisionTrackingCode
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:forMediaTypes:inUsersLibrary:usingBlock:
populateLocationPropertiesWithPath:protectionType:
populateLocationPropertiesWithPath:protectionType:completionBlock:
ML3SystemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:additionalFilterPredicates:
setLibraryEntityFilterPredicates:
setLibraryContainerFilterPredicates:
setLibraryPublicEntityFilterPredicates:
setLibraryPublicContainerFilterPredicates:
canShowCloudMusic
canShowCloudVideo
hasProperNetworkConditionsToPlayMedia
systemFilterPredicatesWithGroupingType:cloudTrackFilteringType:subscriptionFilteringOptions:
arrayByAddingObjectsFromArray:
ML3PredicateForContainer
ML3PredicateForTrack
processInfo
processName
dateWithTimeIntervalSinceReferenceDate:
dataUsingEncoding:
chapterTOC
countOfGroupsForProperty:
chapterIndexForGroupIndex:groupingProperty:
timeLocationInMSOfChapterAtIndex:
localizedStringWithFormat:
lowercaseString
_adjustedItemPropertyAssetURLOfEntity:withDefaultValue:
_adjustedItemTimeOfEntity:withDefaultValue:
_adjustedItemPropertyChapterArtworkTimesOfEntity:withDefaultValue:
_adjustedItemPropertyChaptersOfEntity:withDefaultValue:
_adjustedItemPropertyContentRatingOfEntity:withDefaultValue:
_adjustedItemDateOfEntity:withDefaultValue:
_adjustedItemPropertyEpisodeNumberOfEntity:withDefaultValue:
_adjustedItemPropertyEQPresetOfEntity:withDefaultValue:
_adjustedItemPropertyFilePathOfEntity:withDefaultValue:
_adjustedPropertyMediaTypeOfEntity:withDefaultValue:
_adjustedItemPropertyMovieInfoOfEntity:withDefaultValue:
_adjustedItemPropertyRatingOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNameOfEntity:withDefaultValue:
_adjustedItemPropertySeasonNumberOfEntity:withDefaultValue:
_adjustedItemPropertyVerifiedIntegrityOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeAdjustmentOfEntity:withDefaultValue:
_adjustedItemPropertyVolumeNormalizationOfEntity:withDefaultValue:
_adjustedPlaylistPropertySeedItemsOfEntity:withDefaultValue:
_unadjustedValueForItemTimeWithDefaultValue:
_unadjustedValueForItemDateWithDefaultValue:
_unadjustedValueForItemPropertyRatingWithDefaultValue:
_unadjustedValueForItemPropertyVolumeAdjustmentWithDefaultValue:
_unadjustedValueForItemPropertyVolumeNormalizationWithDefaultValue:
_dataProviderSupportsEntityChangeTracking
updateEntitesToCurrentRevision
supportsEntityChangeTrackingForMediaEntityType:collectionGroupingType:dataProviderClass:
_coalesceEvents
getValues:forProperties:count:
valueForAggregateFunction:onEntitiesForProperty:
propertiesToCache
setLibrary:
_removeEntitiesWithIdentifiers:count:entityClass:
_backgroundTaskQueue
_backgroundTask
_backgroundTaskCount
_hasScheduledEventPosting
_refreshState
_setValuesWidthLimitedQueue
_entitiesAddedOrRemovedNotificationQueue
_entitiesAddedOrRemovedCoalescingTimer
_entityCache
_artworkDataSource
_sortByChapterIndex:
countOfChapters
initWithML3Library:identifier:entityType:artworkType:
setArtworkRequest:
setArtworkDataSource:
setChapterType:
setIndexInChaptersWithSameType:
setIndexInChaptersWithAnyType:
setPlaybackTime:
durationInMSOfGroupAtIndex:groupingProperty:
setPlaybackDuration:
setRetrievalTime:
titlePropertyOfChapterAtIndex:
urlPropertyOfChapterAtIndex:
urlTitlePropertyOfChapterAtIndex:
setValueLoader:
contentsOfDirectoryAtPath:error:
hasPrefix:
stringByStandardizingPath
_connectionStateDidChange:error:
_connectionDidReceiveCustomData:
isConnected
initWithExternalDevice:
connectWithCompletion:
isInvalidated
sendCustomData:
sendMediaRemoteCommand:withOptions:completionHandler:
becomeActiveOriginWithCompletionHandler:
resignActiveOriginWithCompletionHandler:
receivedCustomDataHandler
setReceivedCustomDataHandler:
externalDevice
_invalidated
_pendingConnectionHandlers
_receivedCustomDataHandler
_invalidationHandler
orderingTermWithProperty:
orderingTermWithProperty:direction:
albumsDefaultOrderingTerms
albumsByAlbumArtistDefaultOrderingTerms
artistsDefaultOrderingTerms
composersDefaultOrderingTerms
genresDefaultOrderingTerms
podcastsDefaultOrderingTerms
TVShowEpisodesDefaultOrderingTerms
podcastsEpisodesDefaultOrderingTerms
albumAllArtistsDefaultOrderingTerms
defaultOrderingTerms
orderingProperties
orderingDirectionMappings
ML3OrderingTermsForMPOrderingProperties:directionalityMapping:entityClass:
ML3ItemsQueryInLibrary:orderingTerms:nameBlankProperty:
predicateWithProperty:
ML3OrderingTermsForGroupingType:
containerQueryWithContainer:predicate:orderingTerms:
includeNonLibraryEntities
allItemsQueryWithLibrary:predicate:orderingTerms:usingSections:
setLimit:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
queryWithLibrary:predicate:orderingTerms:
aggregateQueryWithUnitQuery:foreignPersistentIDProperty:
staticResponse
setStaticResponse:
_staticResponse
setAlbumAppData:
_albumAppData
_mirroringTitleTextAttributes
initWithString:attributes:
setAttributedText:
setNumberOfLines:
_mirroringCompactDescription
_mirroringCompactDescriptionTextAttributes
setStrokeColor:
setLineWidth:
setFillColor:
addSublayer:
moveToPoint:
addLineToPoint:
CGPath
setAlignment:
defaultFontForTextStyle:
_edgeInsets
_titleLabel
_detailLabel
_borderLayer
initWithResponseSinfDictionary:
responseSinfDictionary
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
_objectAddress
_ML3PredicateForML3EntityProperty:
numberWithUnsignedLong:
predicateWithPredicate:
predicateWithProperty:value:comparison:caseInsensitive:
_ML3PredicateForEntityClass:
_ML3PredicateForEntityTypeSelector:
spotlightPropertyForMPMediaEntityProperty:
predicateWithProperties:searchString:
predicateWithConcatenatedProperties:searchString:
preferredAssetQuality
prefersHLS
shouldStartLeaseSession
shouldUseStreamingRedownload
downloadSessionAlternativeConfigurationOptionsBlock
_prefersHLS
_shouldStartLeaseSession
_shouldUseAccountLessStreaming
_downloadSessionAlternativeConfigurationOptionsBlock
_storeAdamID
_multiverseIdentifier
sectionIndexTitleIndex
hasUnknownSection
setHasUnknownSection:
_sectionIndexTitles
_hasUnknownSection
setSectionIndexTitleIndex:
setRange:
setDownloadPhasesToIgnore:
setSessionsNeedPowerAssertion:
setSessionsShouldBlockOtherDownloads:
keyEnumerator
removeObserver:forDownloads:
releaseSessionControl
_handleDownloadPrioritization
_updateActiveSessionsForDownload:
_updateForDownloadTokenRefreshWithDownload:
_updateForDownloadStateRefreshWithDownload:
_postActiveSessionsDidFinishForStoreDownload:
downloadPhase
downloadAsset
download
_SSDownload
setCanBePaused:
setStatusDescription:
handlerIdentifier
_beginPrioritizingDownload:
_endPrioritizingDownload:
_isStoreDownloadValidForPlayWhileDownload:
sinfs
localFilePath
fileURLWithPath:
_beginDownloadObservationForDownload:
setDownloadHandler:completionBlock:
_getDownloadTokenForStoreDownload:withCompletionHandler:
_suspendUntilValidDownloadStateForStoreDownload:withCompletionHandler:
_beginPrioritizingDownloadSession:
_endPrioritizingDownloadSession:
_endDownloadObservationForDownload:
addObserver:forDownloads:
libraryItemIdentifier
assetsForType:
setSinfs:
setLocalFilePath:
downloads
phaseIdentifier
pauseDownloads:
resumeDownloads:
_getDownloadPropertiesForStoreDownload:withCompletionHandler:
downloadManager:didAddDownloads:removeDownloads:
downloadManager:didAddActiveDownloads:removeActiveDownloads:
downloadManager:downloadDidFinish:
downloadManager:downloadDidProgress:
downloadManager:downloadPurchaseDidFinish:
downloadManager:downloadsDidProgress:
downloadManagerNetworkUsageDidChange:
downloadHandlerDidDisconnect:
downloadHandler:handleSession:
downloadHandler:cancelSession:
downloadHandler:pauseSession:
downloadHandler:handleAuthenticationSession:
_downloadHandler
_downloadToActiveSessions
_downloadToDownloadTokenPendingCompletionHandlers
_downloadToProcessingDownloadHandlerSessions
_downloadToObservationTransactionCount
_downloadToValidStatePendingCompletionHandlers
_pausedDownloads
_prioritizedDownloads
_volumeFromAVController
attributeForKey:
_setVolumeWarningState:
_setWantsVolumeChangesWhenPausedOrInactive:
volumeValue
_internalSetVolumeValue:
_isPlayerInValidState
setAttribute:forKey:error:
_systemMuteDidChange:
_EUVolumeLimitDidChange:
_EUVolumeLimitEnforcedDidChange:
_volumeDidChange:
_forcefullySetVolumeValue:
_volumeAudioCategory
_debugVolumeWarning
_volumeWarningEnabled
_volumeValue
_volumeWarningState
_EUVolumeLimit
_finishWithSuccess:error:
_followURL:accountDSID:
_enqueueOperationWithURL:bagDictionary:
unfollow
_unfollow
curatorKind
encodeDouble:forKey:
decodeDoubleForKey:
valueLoader
artworkRequest
_chapterType
_indexInChaptersWithAnyType
_indexInChaptersWithSameType
_playbackDuration
_playbackTime
_valueLoader
_artworkRequest
model
relativeModelObjectForStoreLibraryPersonalization
personalizationScopedPropertiesForProperties:
_intersectingLightweightPersonalizationPropertiesForModelClass:
propertySetByIntersectingWithPropertySet:
requiredStoreLibraryPersonalizationProperties
_requiredLightweightPersonalizationPropertiesForModelClass:requestedProperties:
_libraryObjectWithRelativeModelClass:identifierSet:propertySet:
_lightweightPersonalizedObjectWithUnpersonalizedObject:libraryObject:personalizationProperties:overrideLibraryAddedStatus:
objectWithStoreLibraryPersonalizationRelativeModelObject:
_completePersonalizedObjectWithLibraryObject:personalizationProperties:overrideLibraryAddedStatus:
setBookmarkTime:
userPlayCount
setUserPlayCount:
redownloadParameters
accountIdentifier
shouldReportPlayEvents
_identifiersByCombiningPersonalizedIdentifiers:unpersonalizedIdentifiers:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:libraryPlaybackPosition:personalizationProperties:
_lightweightPersonalizedStoreAssetWithUnpersonalizedAsset:libraryAsset:personalizationProperties:
_lightweightPersonalizedPlaybackPositionWithUnpersonalizedPlaybackPosition:identifiers:personalizationProperties:
_intersectingStoreAssetLightweightPersonalizationProperties
_intersectingPlaybackPositionLightweightPersonalizationProperties
_configureFallbackContentItemIDForIdentifierSet:
setStorePurchasedAdamID:
storeCloudAlbumID
informalMediaClipID
informalStaticAssetID
_entityCacheForEntityClass:propertiesToFetch:
unpersonalizedContentDescriptors
setUnpersonalizedContentDescriptors:
unpersonalizedRequest
setUnpersonalizedRequest:
translatingContext
setTranslatingContext:
relativeModelClassToMappingResponse
setRelativeModelClassToMappingResponse:
sectionToLibraryAddedOverride
setSectionToLibraryAddedOverride:
_accessSerialQueue
_entityCaches
_unpersonalizedContentDescriptors
_unpersonalizedRequest
_translatingContext
_relativeModelClassToMappingResponse
_sectionToLibraryAddedOverride
chapterIndex
_chapterIndex
_chapters
_hasArtworkAtPlaybackTime
initWithType:includeMirroring:
initWithRootViewController:
initWithContentViewController:
dismissPopoverAnimated:
popoverControllerDidDismissPopover:
_tableViewController
contentViewController
setPopoverContentSize:animated:
topViewController
initWithType:
setMirroringOnly:
mirroringOnly
_mirroringIncluded
_routingViewController
_mirroringOnly
_calculateAllowsCellularNetworking
_contentTasteControllerDidChangeNotification:
_musicCellularNetworkingAllowedDidChangeNotification:
_storeCellularNetworkingAllowedDidChangeNotification:
copyUserAgent
contextWithBagType:
URLBagForContext:
newNetworkConstraintsByDownloadKindFromURLBag:
setSizeLimit:forNetworkType:
loadWithCompletionBlock:
isStoreCellularNetworkingAllowed
_setNeedsAllowsCellularNetworkingUpdate
allowsAssetCaching
getNetworkConstraintsForDownloadKind:withCompletionHandler:
_allowsCellularNetworking
_allowsInitiatingPlayWhileDownload
_isExplicitTrack
_requiresPlayWhileDownload
_showComposer
_shouldReportPlayEventsToStore
_subscriptionRequired
_albumArtistName
_albumTitle
_artistName
_composerName
_contentTitle
_contentType
_genreTitle
_localNetworkContentURL
_protectedContentSupportStorageURL
_iTunesStoreContentID
_iTunesStoreContentDSID
_albumStoreAdamID
_artistStoreAdamID
_downloadIdentifier
_expectedDuration
_mediaLibraryPersistentID
_storeAccountID
downloadForMediaItemPersistentID:
downloadForStoreID:
_getEffectiveStoreDownloadAttributes:forPlaybackItemMetadata:attributes:
initWithType:attributes:
queryStringForDictionary:escapedValues:
initWithObject:keyPath:options:handler:
handler
_handler
maximumResultsPerScope
scopes
initWithEntityQueryResult:forScope:entityTranslationContext:
initWithEntitiesQueryResultContainers:
_runningQuery
containsString:
setRouteName:
setAVRouteDescription:
wirelessDisplayRoute
setWirelessDisplayRoute:
displayRouteType
setDisplayRouteType:
isPlayingOnPairedDevice
connection
_routeName
_picked
_avRouteDescription
_wirelessDisplayRoute
_displayRouteType
_pickedOnPairedDevice
_playingOnPairedDevice
_requiresPassword
_carplayRoute
_b238Route
_routeUID
_productIdentifier
_routeType
_pickableRouteType
_routeSubtype
_connection
componentsWithURL:resolvingAgainstBaseURL:
remainingTimeInterval
initWithURLRequest:
_missingContentIdentifiersInRecommendationsArray:storeItemMetadataResults:
isFinalResponse
_produceResponseWithRecommendationsArray:storeItemMetadataResults:completion:
addProperty:
initWithRequestedGroupPropertySet:requestedItemPropertySet:storeItemMetadataResults:flatSectionedItems:
modelObjectForRecommendationDictionary:
isBackedByStoreItemMetadata
initWithModel:personalizationStyle:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
_responseWithResults:personalizationResponse:
setSectionedItems:
subgroups
_personalizeRecommendationGroup:flatPersonalizedSectionedItems:
setSubgroups:
configurationForLoadingModelDataWithStoreBagDictionary:error:
produceResponseWithLoadedOutput:completion:
_attemptDownloadSearch
_beginMonitoringDownloadManager
_finishWithDownload:error:
searchBlock
_endMonitoringDownloadManager
timeout
_completionHandler
_dispatchSource
_downloadManagerMonitorCount
_searchBlock
_timeout
setLibraryIdentifierSet:forIdentifierSet:
libraryAddedStatus
setLibraryAddedStatus:
_storeIdentifierSetToLibraryIdentifierSet
_libraryAddedStatus
removePredicatesForProperty:
setFilterPredicate:forProperty:
containingPlaylist
setFilterPropertyPredicate:
_updatePredicateForProperty:withPropertyPredicate:
collectionByJoiningCollections
currentDevicePurchasesPlaylist
dispatchSync:
_finishWithResponse:error:
_nestedRequestsOperationQueue
initWithRequestedItemIdentifiers:reason:
initWithPreviousParser:additionalStoreItemMetadataResponse:options:sectionBuilder:contentItemBuilder:
_produceRegularResponseWithParser:completion:
initWithRawResponseOutput:options:sectionBuilder:contentItemBuilder:
_produceCarPlayResponseWithParser:withNestedRequestsForEmptyBrickSectionsInOperationQueue:completion:
assertRunningInAccessQueue
isBrick
sectionBuilder
isMemberOfChartSet
_produceResponseWithParser:results:changeDetails:completion:
adjustTimeoutInterval:
_didInitializeTimeoutIntervalAdditions
_errorReportingDisabled
_individualPendingNestedRequestOperation
_nestedRequestOperationsGroup
_requestType
_sectionsToPendingNestedRequestOperations
_timeoutIntervalAdditions
__MPModelPropertyMovieTitle__PROPERTY
__MPModelPropertyMovieDescriptionText__PROPERTY
__MPModelPropertyMovieExplicitRating__PROPERTY
__tagline__KEY
__MPModelPropertyMovieTagline__PROPERTY
__movieInfoDictionary__KEY
__MPModelPropertyMovieInfoDictionary__PROPERTY
__clips__KEY
__MPModelRelationshipMovieClips__PROPERTY
__MPModelPropertyMovieReleaseDate__PROPERTY
__MPModelRelationshipMovieLocalFileAsset__PROPERTY
__MPModelRelationshipMoviePlaybackPosition__PROPERTY
__MPModelRelationshipMovieStoreAsset__PROPERTY
__MPModelPropertyMovieArtwork__PROPERTY
__MPModelPropertyMovieEditorialArtwork__PROPERTY
__MPModelPropertyMovieDuration__PROPERTY
__MPModelPropertyMovieHasCloudSyncSource__PROPERTY
__MPModelPropertyMovieLibraryAdded__PROPERTY
__MPModelPropertyMovieLibraryAddedDate__PROPERTY
__MPModelPropertyMovieLibraryAddEligible__PROPERTY
__MPModelPropertyMovieKeepLocalEnableState__PROPERTY
__MPModelPropertyMovieKeepLocalManagedStatus__PROPERTY
tagline
movieInfoDictionary
setMovieInfoDictionary:
clips
setClips:
_tagline
_movieInfoDictionary
_clips
__beats1__KEY
__MPModelPropertyRadioStationBeats1__PROPERTY
__name__KEY
__MPModelPropertyRadioStationName__PROPERTY
__editorNotes__KEY
__MPModelPropertyRadioStationEditorNotes__PROPERTY
__shortEditorNotes__KEY
__MPModelPropertyRadioStationShortEditorNotes__PROPERTY
__hasExplicitContent__KEY
__MPModelPropertyRadioStationHasExplicitContent__PROPERTY
__MPModelPropertyRadioStationArtwork__PROPERTY
__allowsItemLiking__KEY
__MPModelPropertyRadioStationAllowsItemLiking__PROPERTY
hasExplicitContent
allowsItemLiking
setAllowsItemLiking:
_beats1
_hasExplicitContent
_allowsItemLiking
_editorNotes
_shortEditorNotes
__MPModelPropertyTVShowCreatorArtwork__PROPERTY
noArtPlaceholderImageForMediaType:
_parseAVRouteDescriptions:
_avSessionMediaServicesResetNotification:
_routesDetected
initWithObjects:forKeys:count:
setModelObjects:
_finishWithCloudLibraryUpdateForPlaylist:
addItemWithSagaID:toPlaylistWithPersistentID:completionHandler:
addStoreItemWithAdamID:toPlaylistWithPersistentID:completionHandler:
setShouldRememberBookmarkTime:
ubiquitousIdentifierWithStoreAdamID:
setStoreUbiquitousIdentifier:
_requestedPlaybackPositionProperties
kindWithEpisodeKind:
episodeKind
_episodeKind
__MPModelPropertyPodcastTitle__PROPERTY
__author__KEY
__MPModelRelationshipPodcastAuthor__PROPERTY
__MPModelPropertyPodcastArtwork__PROPERTY
author
setAuthor:
_author
initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles:
_addTextFieldWithValue:label:
setSecureTextEntry:
setKeyboardType:
setGroupsTextFields:
alertView:clickedButtonAtIndex:
alertViewCancel:
willPresentAlertView:
didPresentAlertView:
alertView:willDismissWithButtonIndex:
alertView:didDismissWithButtonIndex:
alertViewShouldEnableFirstOtherButton:
_passwordTextField
initWithStartHandler:
initWithModel:
_hasBeenPlayed
_model
encodeConditionalObject:forKey:
_commitPendingInvalidations
shuffleController:identifierForItemAtIndex:
_replaceItemIdentifierAtOriginalIndex:withItemIdentifier:
_loadItemCountIfPendingInvalidation
_clearPendingInvalidationInformation
_removeAllItemIdentifiers
removeAllIndexes
addIndexesInRange:
_generateShuffleIndexFromAvailableIndexSet
shuffleController:countOfItemIdentifier:withMaximumCount:
countOfIndexesInRange:
_removeItemIdentifierAtOriginalIndex:
firstIndex
lastIndex
indexLessThanOrEqualToIndex:
indexGreaterThanIndex:
indexGreaterThanOrEqualToIndex:
indexLessThanIndex:
itemCountForShuffleController:
_loadItemCount
invalidateWithRemovedIdentifiers:
itemIndexForShuffledIndex:
shuffleWithStartingIndex:
shuffledIndexForItemIndex:
_availableShuffleIndexSet
_isPendingFineGrainedInvalidation
_isPendingGlobalInvalidation
_itemCount
_itemIdentifierToKnownCount
_originalIndexToItemIdentifier
_originalIndexToShuffledIndex
_pendingInvalidationRemovedIdentifiers
shouldIgnoreImage
lookupItemArtworks
artworkURL
_bestURLForCatalog:size:
MP_colorForColorKind:
MP_isArtworkColorAnalyzerLightColorForAlgorithm:
setBackgroundColorLight:
setPrimaryTextColor:
setPrimaryTextColorLight:
setSecondaryTextColor:
setSecondaryTextColorLight:
height
width
URLWithHeight:width:
cropStyle
URLWithHeight:width:cropStyle:format:
_sectionIndexTitleIndex
_range
initWithImage:scaledFittingSize:destinationURL:
dataWithContentsOfFile:options:error:
_resizedScaledSizeForScaledImageSize:scaledFittingSize:
usesExactFittingSizeAsDestinationSize
URLByDeletingLastPathComponent
initWithImage:scaledFittingSize:
setScaledFittingSize:
setUsesExactFittingSizeAsDestinationSize:
_usesExactFittingSizeAsDestinationSize
_resizedImage
_operationGroup
isBackgroundColorLight
primaryTextColor
isPrimaryTextColorLight
secondaryTextColor
isSecondaryTextColorLight
_copyWithClass:
_backgroundColor
_backgroundColorLight
_primaryTextColor
_primaryTextColorLight
_secondaryTextColor
_secondaryTextColorLight
enumeratorWithOptions:
_debugDescriptionWithEnumerator:
enumeratorWithOptions:startingAtItem:inSection:
stringByPaddingToLength:withString:startingAtIndex:
string
stringByLeftPaddingToLength:withString:startingAtIndex:
debugDescriptionStartingAtItem:inSection:
curator
mediaClip
socialPerson
showCreator
innerObject
__itemType__KEY
__MPModelStoreBrowseContentItemPropertyItemType__PROPERTY
__detailedItemType__KEY
__MPModelStoreBrowseContentItemPropertyDetailedItemType__PROPERTY
__artistUploadedContentType__KEY
__MPModelStoreBrowseContentItemPropertyArtistUploadedContentType__PROPERTY
__MPModelStoreBrowseContentItemRelationshipAlbum__PROPERTY
__MPModelStoreBrowseContentItemRelationshipArtist__PROPERTY
__curator__KEY
__MPModelStoreBrowseContentItemRelationshipCurator__PROPERTY
__mediaClip__KEY
__MPModelStoreBrowseContentItemRelationshipMediaClip__PROPERTY
__movie__KEY
__MPModelStoreBrowseContentItemRelationshipMovie__PROPERTY
__MPModelStoreBrowseContentItemRelationshipPlaylist__PROPERTY
__MPModelStoreBrowseContentItemRelationshipRadioStation__PROPERTY
__socialPerson__KEY
__MPModelStoreBrowseContentItemRelationshipSocialPerson__PROPERTY
__song__KEY
__MPModelStoreBrowseContentItemRelationshipSong__PROPERTY
__episode__KEY
__MPModelStoreBrowseContentItemRelationshipTVEpisode__PROPERTY
__MPModelStoreBrowseContentItemRelationshipTVSeason__PROPERTY
__MPModelStoreBrowseContentItemRelationshipTVShow__PROPERTY
__showCreator__KEY
__MPModelStoreBrowseContentItemRelationshipTVShowCreator__PROPERTY
setMediaClip:
detailedItemType
_itemType
_artistUploadedContentType
_curator
_mediaClip
_movie
_socialPerson
_showCreator
_detailedItemType
_endSliderTracking
_playableDuration
initWithDouble:
performSelector:whenTickingPastTime:
cancelPreviousPerformTickEventsForSelector:
_scrubControl
_controlsAutohideDisabled
_tickTimeEvents
_lastTickTime
setNumber:
setCreator:
_requestedEpisodeProperties
addProperties:
writeString:forTag:
hasSearchString
propertiesCount
clearProperties
propertiesAtIndex:
deletePlaybackActivityWithIdentifier:
MPMediaLibraryDataProviderSystemML3CoercedString
_initInstanceVariableOnce
hasGeniusFeatureEnabled
_isGeniusEnabled
hasGeniusDataAvailable
_seedCloudPlaylistWithTrack:container:completionBlock:
_localizedGeniusErrorForError:
populateContainer:withSeedTrack:completionBlock:
playlistControllerWithSeedTracks:error:
tracksFromClusterForCount:error:
geniusTracksForSeedTrack:error:
supportsDeviceCapability:
_localizedCloudGeniusErrorForError:
loadGeniusItemsForSagaID:completionHandler:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
_currentRevision
updatePropertyValuesInEntityWithIdentifier:dataProviderEntityClass:deleted:
enumeratePersistentIDsAfterRevision:revisionTrackingCode:maximumRevisionType:usingBlock:
_completeMyCollectionArtworkDataSource
deallocationHandler
_deallocationHandler
setPlaylistEntry:
shouldUsePlaylistEntry
setShouldUsePlaylistEntry:
_tvEpisodeBuilder
_tvSeasonBuilder
_tvShowBuilder
_shouldUsePlaylistEntry
_leftPercentage
_rightPercentage
_singlePercentage
_casePercentage
representedObjects
setLibraryResponse:
setRepresentedObjectResults:
supportsModelClass:
setPersistentIDs:
personalizedResponseForContentDescriptor:requestedProperties:
_calculateCurrentMusicRepeatType
_calculateCurrentMusicShuffleType
_calculateCurrentMusicEQPreset
_addNotificationObserver:forUserDefaultKey:
_mobileiPodPrefsDidChange
_postRepeatShuffleTypeGlobalNotification
eqPresetForName:
typeForAVController
musicRepeatType
musicShuffleType
setMusicRepeatType:
setMusicShuffleType:
soundCheckEnabled
shouldUseNewQueueManagement
musicEQPreset
_allowsHighQualityMusicStreamingOnCellular
_musicEQPreset
_musicRepeatType
_musicShuffleType
_soundCheckEnabled
_notifyTokens
_userDefaultsMutationQueue
pushContext
_updateVisibility
setSystemVolumeHUDEnabled:forAudioCategory:
popContext
_categories
accountStatus
carrierBundlingStatus
playlistIndexOfIndex:inPlaylistFeeder:
_mediaLibraryDisplayValuesDidChangeNotification:
avController
player:currentItemDidChangeFromItem:toItem:
_applyVolumeNormalizationForQueuedItems
setPlaylistFeeder:startIndex:keepPlaying:
clearQueueFeeder
isChangingPlayer
isChangingPlaylistFeeder
_reloadQueuedItemsIfPathBecameAvailable
_prepareToQueuePlaybackIndex:selectionDirection:
_notifyQueueFeederContentsChanged
playlistIndexWithDelta:fromIndex:ignoreElapsedTime:didReachEnd:
_playbackIndexForDelta:fromIndex:ignoreElapsedTime:totalItemCount:didReachEnd:
playlistIndexOfItemIdentifier:
_updateAudioSessionModeWithIndex:
_willFinishReloadWithQueueFeeder:fromPlaybackContext:
canChangePlaylistFeeder
_queuePlayerFeederItemForIndex:
_nextItemIndex:repeatMode:
_itemToFollowItemIndex:skipUnavailableContent:
setMode:error:
indexForContentItemID:
finalizeStateRestorationWithCompletionHandler:
itemForContentItemID:
isPlaceholderItemForContentItemID:
updateForSoundCheckDefaultsChange
contentItemIDForPlaylistIndex:
_indexForStringIdentifier:
metadataItemForPlaylistIndex:
playlistIndexOfItem:
playlistIndexOfQueueIdentifier:inPlaylistFeeder:
musicPlayerControllerQueueForUUID:
requestMusicPlayerControllerQueueWithCompletionHandler:
setMusicPlayerControllerQueue:withCompletionHandler:
_nowplayingContentItemIdentifierForIndex:
_nowplayingContentItemForIndex:
queueCoordinator
_goToTargetIndex
_lastSelectionDirection
_playlistFeeder
_targetIndex
_updatedAudioSessionMode
_currentQueueFeeder
_currentItemQueueIdentifier
_changingPlayer
_changingPlaylistFeeder
_queueCoordinator
_copyWithPlaybackResponseClass:
dialogDictionary
fileAssetInfoList
hlsAssetInfo
suzeLeaseID
_dialogDictionary
_fileAssetInfoList
_hlsAssetInfo
_suzeLeaseID
setDialogDictionary:
setExpirationDate:
setFileAssetInfoList:
setHlsAssetInfo:
setSuzeLeaseID:
enumerateSectionIdentifiersUsingBlock:
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
sharedCoordinator
removeBagObserver:
_calculateShouldPlaybackRequireSubscriptionLeaseReturningLikelyToReachRemoteServer:
_updateWithURLBagDictionary:
_subscriptionOperationQueue
_currentCloudLibraryEnabled
_currentPurchaseHistoryEnabled
integerForKey:
lastKnownStatus
setShouldAutomaticallyRefreshLease:
_beginObservingAccountStoreDidChange
_fairPlaySubscriptionController
_fairPlaySubscriptionControllerSubscriptionStatusDidChangeNotification:
_updateMatchStatus
_updateForNetworkReachabilityObserversCountChange
_beginObservingURLBag
getStatusWithOptions:statusBlock:
_endObservingAccountStoreDidChange
_endObservingURLBag
_getCurrentFairPlaySubscriptionStatusWithCompletionHandler:
initWithURLBag:
setRefreshesAutomatically:
_setHasSubscriptionLease:endReasonType:
_activeAccount
subscriptionStatusForAccountUniqueIdentifier:
_accountStoreChangedNotification:
addBagObserver:
bagDictionary
isRemoteServerLikelyReachable
ic_sharedAccountStore
ic_activeLockerAccount
setInteger:forKey:
getITunesMatchStatusWithCompletionBlock:
bagDidChange:
playbackLease:automaticRefreshDidFinishWithResponse:error:
playbackLeaseDidEnd:
playbackLease:didEndWithReasonType:
playbackLease:automaticRefreshDidFailWithError:
playbackLeaseAutomaticRefreshDidFinish:
isSubscriptionAvailable
matchStatus
beginObservingCloudLibraryEnabled
beginObservingFairPlaySubscriptionStatus
beginObservingMatchStatus
beginObservingPurchaseHistoryEnabled
beginObservingSubscriptionAvailability
endObservingCloudLibraryEnabled
endObservingFairPlaySubscriptionStatus
endObservingMatchStatus
endObservingPurchaseHistoryEnabled
endObservingSubscriptionAvailability
getSubscriptionAssetWithRequest:completionHandler:
preheatSubscriptionLeaseRequestsWithCompletionHandler:
updateWithExternalLeaseResponseError:completionHandler:
_cloudClientAuthenticationDidChange
_existingPlaybackLease
_accountStoreChangeObservationCount
_automaticLeaseRefreshCount
_cloudLibraryObservationCount
_fairPlayOperationQueue
_fairPlaySubscriptionStatusObservationCount
_hasLoadedMatchStatus
_hasLoadedURLBag
_lastKnownFairPlaySubscriptionStatus
_lastKnownSubscriptionStatus
_matchStatusObservationCount
_matchStatus
_observingNetworkReachability
_playbackLease
_hasSubscriptionLease
_purchaseHistoryObservationCount
_shouldPlaybackRequireSubscriptionLease
_shouldPlaybackRequireSubscriptionLeaseObservationCount
_subscriptionAvailable
_subscriptionAvailabilityObservationCount
_subscriptionLeaseUsageCount
_subscriptionStatusObservationCount
_URLBagObservationCount
setStaticEntityIdentifiers:
writeInt32:forTag:
writeBOOL:forTag:
clearFilterPredicates
filterPredicatesAtIndex:
hasGroupingType
hasFilteringDisabled
hasEntityOrder
clearStaticEntityIdentifiers
staticEntityIdentifiersAtIndex:
hasStaticEntityType
setHasGroupingType:
setHasFilteringDisabled:
setHasEntityOrder:
setHasStaticEntityType:
_entityOrder
_filterPredicates
_groupingType
_staticEntityIdentifiers
_has
_requestedStoreAssetProperties
initWithFileAsset:sourceItemIdentifiers:
sourceItemIdentifiers
setSourceItemIdentifiers:
fileAsset
setFileAsset:
_sourceItemIdentifiers
_fileAsset
setIncludeNonLibraryEntities:
setOrderingDirectionMappings:
_entityLimit
_itemPropertiesToFetch
_collectionPropertiesToFetch
_useSections
_ignoreSystemFilterPredicates
_ignoreRestrictionsPredicates
_includeNonLibraryEntities
_includeEntitiesWithBlankNames
_actionTypeString
initWithAction:
action
_action
parsedStoreItemsImportProperties
_associatedElementForPropertyDict:
_importPropertiesDictFromImportMetadataDict:
_importElements
assetLoadError
setAssetLoadError:
assetLoadDuration
setAssetLoadDuration:
blockingSecureKeyLoadCount
setBlockingSecureKeyLoadCount:
maximumSecureKeyLoadDuration
setMaximumSecureKeyLoadDuration:
secureKeyLoadCount
setSecureKeyLoadCount:
secureKeyError
setSecureKeyError:
tracklistLoadError
setTracklistLoadError:
hadBlockingTracklistLoad
setHadBlockingTracklistLoad:
playbackEndError
setPlaybackEndError:
startupState
setStartupState:
interfaceTypeChangeCount
setInterfaceTypeChangeCount:
startInterfaceType
setStartInterfaceType:
_hadBlockingTracklistLoad
_assetLoadError
_blockingSecureKeyLoadCount
_secureKeyLoadCount
_secureKeyError
_tracklistLoadError
_playbackEndError
_startupState
_interfaceTypeChangeCount
_startInterfaceType
_assetLoadDuration
_maximumSecureKeyLoadDuration
subgroup
parentGroup
subgroupIndex
__MPModelForYouRecommendationItemPropertyItemType__PROPERTY
__MPModelForYouRecommendationItemRelationshipAlbum__PROPERTY
__MPModelForYouRecommendationItemRelationshipPlaylist__PROPERTY
__backedByStoreItemMetadata__KEY
__MPModelForYouRecommendationItemPropertyBackedByStoreItemMetadata__PROPERTY
__parentGroup__KEY
__MPModelForYouRecommendationItemPropertyParentGroup__PROPERTY
__subgroupIndex__KEY
__MPModelForYouRecommendationItemPropertySubgroupIndex__PROPERTY
setParentGroup:
setSubgroupIndex:
setBackedByStoreItemMetadata:
_backedByStoreItemMetadata
_parentGroup
_subgroupIndex
load
libraryAddStatusObserverConfiguration
supportsLibraryAddStatusObservation
requiredLibraryAddStatusObservationProperties
hasCleanContent
_avControllerBufferingStateDidChangeNotification:
_avControllerItemWillChangeNotification:
_avControllerDidReloadWithPlaybackContextNotification:
_avControllerWillReloadWithPlaybackContextNotification:
_avControllerPlaylistManagerFailedToQueueNotification:
_avItemAssetLoadedNotification:
_avItemTypeDidChangeNotification:
_avItemSecureKeyDeliveryRequestDidFinishNotification:
_preparedSummaryEventForAVItem:
_configureStartupStateForSummaryEvent:withItem:
_configureBaseEventPropertiesForEvent:
_newReportingSession
_initializeReportingSession:forAVItem:
_completeSetupForReportingSession:avItem:fallbackQueueFeeder:
_setPerceivedTotalStartupTimeForItem:withSummaryEvent:
_reportingSessionForAVItem:
_completeSetupForReportingSession:avItem:
_isAVItemReadyForReportingSessionInitialization:
_isAVItemReadyForReportingSessionSetupCompletion:
setError:
rtcReportingPlayQueueSourceIdentifier
rtcReportingSessionAdditionalUserInfo
_uniqueIdentifierForAVItem:
_handleDeallocationForUniqueIdentifier:
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
_networkTypeDidChangeNotification:
_currentInterfaceType
_isReloadingWithPlaybackContext
_pendingFailureQueueFeeder
_tracklistStartUptime
_tracklistSummaryEvent
_uniqueIdentifierToReportingSession
_uniqueIdentifierToSummaryEvent
playlistName
shouldCreatePlaylist
playlistEntries
parentPlaylist
playlistDescription
isPublicPlaylist
isVisiblePlaylist
isCuratorPlaylist
isOwner
authorStoreIdentifier
didSetPlaylistUserImage
playlistUserImage
localPersistenceResponseHandler
completeResponseHandler
createPlaylistWithPersistentID:properties:trackList:completionHandler:
requiredPlaylistEntryProperties
setLocalPersistenceResponseHandler:
setCompleteResponseHandler:
_localPersistenceResponseHandler
_completeResponseHandler
proxyForObjects:protocol:
setObjects:
setProtocol:
objects
protocol
signatureWithObjCTypes:
proxyForObject:protocol:
_protocol
_objects
setAddState:
setRelatedModelObjects:
setKeepLocalState:
addState
relatedModelObjects
keepLocalState
registerTransientAddState:forModelObjects:relatedModelObjects:
unregisterTransientState:
performLibraryImportChangeRequest:withRelatedModelObjects:completion:
performKeepLocalChangeRequest:withRelatedModelObjects:completion:
registerTransientKeepLocalState:forModelObjects:relatedModelObjects:
transientAddStateForModelObject:
performDeleteEntityChangeRequest:withRelatedModelObjects:
performLibraryImportChangeRequest:withRelatedModelObjects:
performKeepLocalChangeRequest:withRelatedModelObjects:
_notificationQueue
_registeredTransientState
_addState
_keepLocalState
_modelObjects
_relatedModelObjects
dataWithBytes:length:
exceptionWithName:reason:userInfo:
predicateWithBaseProperty:
applyToView:withContext:
sharedSystemFilters
shouldExcludePurchaseHistoryContentForLibrary:
songKind
playlistEntryKind
kinds
seasonKind
setSyncID:
syncID
setHeuristicInfo:
setDurationInFrames:
setEncodingDelayInFrames:
setEncodingDrainInFrames:
setLastPacketsResync:
initWithLibrary:identifier:entityType:artworkType:mediaType:
punctuationCharacterSet
requestWithDatabaseID:itemID:format:
setScheme:
artworkCatalogsWithMaximumCount:
setVendorID:
artworkData
setArtworkData:
_artwork
_artworkData
initWithPlayerID:
becomeActive
infoCenterForPlayerID:
strongToWeakObjectsMapTable
objectForInfoDictionaryKey:
setPlaybackQueueDataSource:
setPlaybackQueueDelegate:
setLyricsDelegate:
_pushNowPlayingInfoAndRetry:
_registerPlaybackQueueDataSourceCallbacks:
_registerLyricsDelegateCallbacks:
childContentItemAtIndex:ofItem:
_queryChildItemFromDataSource:atIndexPath:fromRoot:
_removeToken:
languageOptionDataSource
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
setAvailableLanguageOptions:
setCurrentLanguageOptions:
descriptionDataSource
nowPlayingInfoCenter:localizedDescriptionForContentItem:completion:
setInfo:
lyricsDataSource
nowPlayingInfoCenter:artworkForContentItem:size:completion:
_clearPlaybackQueueDataSourceCallbacks
contentItemForOffset:
performSuppressingChangeNotifications:
nowPlayingContentItemForIdentifier:
_getLanguageOptionsForRequest:item:returnItem:completion:
_getInfoForRequest:item:returnItem:completion:
_getLyricsForRequest:item:returnItem:completion:
_getArtworkForRequest:item:returnItem:completion:
nowPlayingContentItemsForRequest:range:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
setNowPlayingInfo:
setPlaybackState:
playbackQueueDataSource
playbackQueueDelegate
lyricsDelegate
nowPlayingInfo
invalidatePlaybackQueue
beginPlaybackQueueContentItemUpdates
endPlaybackQueueContentItemUpdates
beginObservingChangesForContentItemIDs:
playerID
_mediaRemoteNowPlayingInfo
_nowPlayingInfo
_queuedNowPlayingInfo
_convertedNowPlayingInfo
_mutatedPlaybackQueueRequests
_artworkResizeUtility
_pushDate
_playbackQueueDataSource
_playbackQueueDelegate
_lyricsDelegate
_createPlaybackQueueToken
_createItemForIdentifierToken
_createItemForOffsetToken
_createChildItemToken
_metadataToken
_infoToken
_languageOptionsToken
_lyricsToken
_artworkToken
_playerPath
_publishedContext
_playerID
__mediaRemoteNowPlayingInfo
_enableEnforcementIfNeeded
originalIdentifierSet
appendIdentifiersToDescription:withIdentifiersPrefix:
hasLoadedValuesForProperties:
_wasFullyInitialized
_initializedProperties
_originalObject
_modelClass
uppercaseString
stringByReplacingCharactersInRange:withString:
addAttributes:range:
substringFromIndex:
getRed:green:blue:alpha:forColorKind:
libraryRemovalSupportedOptions
requiredLibraryRemovalProperties
supportsLibraryRemoval
newKeepLocalStatusObserverConfiguration
statusType
carrierBundlingStatusType
initWithICSubscriptionStatus:
requiresCarrierManualVerification
_subscriptionStatusObject
_definitiveInformation
_hasPlaybackCapability
_requiresCarrierManualVerification
_shouldUseLease
initWithHomeSharingLibrary:
homeSharingLibrary
browser:didAddLibrary:
browser:didRemoveLibrary:
homeSharingGroupID
homeSharingBrowserWithGroupID:
_determineHomeSharingGroupIDWithCompletionHandler:
groupID
urlForRequest:
_homeSharingGroupIDDidChangeNotification:
_homeSharingLibraryDidUpdateRevisionNumber:
_homeSharingLibraryDidBecomeUnavailable:
isSupportedSharingVersion
hs_homeSharingErrorWithCode:userInfo:
connectionState
initWithPath:
_fetchTokensForAuthorizedDSIDs
removeAllRentalsForDatabaseID:
buildDatabaseFromHomeSharingLibrary:atPath:completionHandler:progressHandler:
_fillContainerForQueryCriteria:completionBlock:
requestWithDatabaseID:itemID:
setValue:forArgument:
responseCode
sendRequest:withResponseHandler:
replaceCharactersInRange:withString:
initWithItemID:homeSharingID:rentalID:accountID:
setDataProvider:
_tokenDataForAccountID:
initWithKeybagURL:accountID:accountTokenData:downloaderAccountID:downloaderAccountTokenData:familyAccountID:
initWithKeybagURL:accountID:accountTokenData:
isScanningForLibraries
checkForChangesInHomeSharingLibrary:completionHandler:
initWithLength:
mutableBytes
bytes
determineGroupIDWithCompletionHandler:
deviceGUID
authorizedDSIDs
requestWithDSID:deviceGUID:
tokenData
setTokenData:forAuthorizedDSID:
fillContainerForHomeSharingLibrary:containerID:completionHandler:
setRentalPlaybackStartDateForItemID:
setDatabaseID:
_homeSharingLibrary
_tokenDataForDSIDs
_loadedContainerPIDs
_blocksForLoadingContainerPIDs
_containerFillQueue
_databaseID
setShortName:
setCuratorKind:
_requestedCuratorProperties
registerClass:
baseURL
client
URLProtocol:didFailWithError:
initWithURL:MIMEType:expectedContentLength:textEncodingName:
requestWithURL:
allHTTPHeaderFields
securityInfoForURL:
setAllHTTPHeaderFields:
URLProtocol:wasRedirectedToRequest:redirectResponse:
URLProtocolDidFinishLoading:
canInitWithRequest:
canonicalRequestForRequest:
startLoading
stopLoading
springCubicTimingParameters
setSpringCubicTimingParameters:
cubicTimingParameters
_springCubicTimingParameters
_basicAnimationForView:withKeyPath:
timingParameters
_mediaTimingFunction
_updateTokens
artworkType
entityType
retrievalTime
retrieveBestArtworkTokensForEntityPersistentID:entityType:artworkType:retrievalTime:completionHandler:
availableArtworkToken
fetchableArtworkToken
fetchableArtworkSource
clearFailedFetchableToken
promoteFetchableArtworkTokenIfNeeded
libraryArtwork
setLibraryArtwork:
_hasRetrievedTokens
_artworkType
_entityType
_libraryArtwork
_availableArtworkToken
_fetchableArtworkToken
_fetchableArtworkSource
_retrievalTime
isArtworkTokenAvailable:
initWithToken:artworkType:musicLibrary:
availableArtworkWithRequest:
loadArtworkForEntityPersistentID:entityType:artworkType:artworkSourceType:completionHandler:
deprioritizeArtworkRequestForEntityPersistentID:entityType:artworkType:artworkSourceType:
imageFileURLForSize:
fileURLForSize:
fileURLForEffect:
systemConfiguration
supportedSizesForMediaType:artworkType:
interestDictionary
setInterestDictionary:
artworkExistsForRequest:
needsToFetchArtworkForRequest:
fetchArtworkForRequest:completionHandler:
cancelFetchingArtworkForRequest:
originalFileURL
imageFileURLForEffect:
validSizes
effectsMetadata
setEffectsMetadata:
_validSizes
MP_artworkType
_playlistEntry
initWithPlaylist:
URLRequest
requestedItemIdentifiers
itemMetadataRequestReason
_URLRequest
_requestedItemIdentifiers
_itemMetadataRequestReason
dictionaryWithContentsOfFile:
_saveRentals
initWithAccountIdentifier:rentalKeyIdentifier:
startWithCompletionBlock:
removeRentalWithItemID:
writeToFile:atomically:
addRentalWithItemID:databaseID:
_rentalTrackerQueue
_rentals
contentLimitsEnforced
contentLimitsEnabled
enforcedContentItemsCount
enforcedContentTreeDepth
endpointAvailable
_contentLimitsEnforced
_endpointAvailable
_enforcedContentItemsCount
_enforcedContentTreeDepth
kindWithVariants:songKind:
kindWithPlaylistEntryKind:options:
kindWithSeasonKind:
filterAvailableContentGroups:withOptions:
_errorIsFairPlayError:
_performMachineAuthorization
bodyData
_processNextAuthorizationRequest
initWithAuthorizationToken:accountIdentifier:
setKeybagPath:
request:didFailWithError:
requestDidFinish:
authorizationRequest:didReceiveResponse:
_keybagURL
_accountID
_accountTokenData
_downloaderAccountID
_downloaderAccountTokenData
_familyAccountID
_requests
_activeRequest
_atLeastOneAuthorizationRequestSuccessful
commandCenterForPlayerID:
startMediaRemoteSync
stopMediaRemoteSync
_scheduleSupportedCommandsChanged
_activeCommands
isSupported
createCommandInfoRepresentation
_pushMediaRemoteCommand:withOptions:completion:
mediaRemoteCommandType
newCommandEventWithCommandType:options:
dispatchCommandEvent:completion:
_setupMediaRemoteCommandHandler
_teardownMediaRemoteCommandHandler
_teardownNotifications
invokeCommandWithEvent:completion:
_createRemoteCommandWithConcreteClass:mediaRemoteType:
initWithMediaRemoteCommandType:
setCommandCenterDelegate:
_commandTargetsDidChangeNotification:
_playbackQueueDelegateDidChangeNotification:
_copySupportedCommands
hasTargets
removeFromPlaybackQueueCommand
_handleRemoveCommand:
addTarget:action:
reorderQueueCommand
_handleReorderCommand:
playItemInQueueCommand
_handlePlayItemCommand:
nowPlayingInfoCenter:moveItemAtSourceOffset:toDestintationOffset:
nowPlayingInfoCenter:removeItemAtOffset:
nowPlayingInfoCenter:playItemAtOffset:
sharedCommandCenter
remoteCommandDidMutatePropagatableProperty:
_pushMediaRemoteCommand:withOptions:
pauseCommand
playCommand
stopCommand
togglePlayPauseCommand
enableLanguageOptionCommand
disableLanguageOptionCommand
nextTrackCommand
previousTrackCommand
skipForwardCommand
skipBackwardCommand
seekForwardCommand
seekBackwardCommand
ratingCommand
changePlaybackRateCommand
likeCommand
dislikeCommand
bookmarkCommand
changePlaybackPositionCommand
changeRepeatModeCommand
changeShuffleModeCommand
specialSeekForwardCommand
specialSeekBackwardCommand
buyTrackCommand
buyAlbumCommand
preOrderAlbumCommand
cancelDownloadCommand
advanceShuffleModeCommand
advanceRepeatModeCommand
createRadioStationCommand
setPlaybackQueueCommand
insertIntoPlaybackQueueCommand
addNowPlayingItemToLibraryCommand
addItemToLibraryCommand
changePlaybackProgressCommand
_mediaRemoteCommandHandler
_scheduledSupportedCommandsChangedNotification
_canBeNowPlayingApplication
_handlingPlaybackQueueCommands
_pauseCommand
_playCommand
_stopCommand
_togglePlayPauseCommand
_enableLanguageOptionCommand
_disableLanguageOptionCommand
_nextTrackCommand
_previousTrackCommand
_skipForwardCommand
_skipBackwardCommand
_seekForwardCommand
_seekBackwardCommand
_ratingCommand
_changePlaybackRateCommand
_likeCommand
_dislikeCommand
_bookmarkCommand
_changePlaybackPositionCommand
_changeRepeatModeCommand
_changeShuffleModeCommand
_specialSeekForwardCommand
_specialSeekBackwardCommand
_buyTrackCommand
_buyAlbumCommand
_preOrderAlbumCommand
_cancelDownloadCommand
_advanceShuffleModeCommand
_advanceRepeatModeCommand
_createRadioStationCommand
_setPlaybackQueueCommand
_insertIntoPlaybackQueueCommand
_removeFromPlaybackQueueCommand
_reorderQueueCommand
_playItemInQueueCommand
_addNowPlayingItemToLibraryCommand
_addItemToLibraryCommand
_changePlaybackProgressCommand
itemID
_itemID
_homeSharingID
_unregisterDownloadSession:
_removeFileForAssetDownloadSession:playbackItemMetadata:
_auditNetworkConstraintsForAssetDownloadSession:playbackItemMetadata:
itemForItemIdentifier:
_newDownloadSessionForRequest:sourceURL:downloadKey:sinfs:pathExtension:assetFlavor:allowAssetCaching:allowITunesContentConfiguration:protectionType:returningAssetDownloadSession:
_handleNewDownloadSession:withAssetDownloadSession:forPlaybackItemMetadata:
_preferredAssetFlavorsForAssetQuality:
assetDictionary
URLString
allHeaderFields
setItemIdentifier:
setAssetStoreFrontIdentifier:
setValue:forParameter:
setStartsLeaseSession:
leaseDuration
_assetDownloadSessionForDownloadSession:
_postFailedForDownloadSession:
_handlePrioritizationForFinishingAssetDownloadSession:
_postFailedForDownloadSession:withError:
writeToFile:options:error:
deleteAutoFilledTracksOfAtLeastTotalSize:urgency:respectSongMattress:
availableFileSize
sizeLimitForNetworkType:
_auditAssetDownloadSession:withNetworkConstraints:
_getNetworkConstraintsForPlaybackItemMetadata:withCompletionHandler:
cookieWithProperties:
_registerForNotificationsForAssetDownloadSession:
_registerForNotificationsForPlaybackItemMetadata:
_assetQualityForAssetFlavor:
_downloadKeyCookieWithValue:URL:
sharedHTTPCookieStorage
setCookie:
_saveCookies
_sinfsByCleaningSinfs:
assetDownloadSessionWithURL:destinationURL:options:
_assetDownloadSessionDownloadFailedNotification:
_assetDownloadSessionDownloadSucceededNotification:
_assetDownloadSessionFileSizeAvailableNotification:
_playbackItemMetadataNetworkConstraintsDidChangeNotification:
_unregisterForNotificationsForAssetDownloadSession:
_unregisterForNotificationsForPlaybackItemMetadata:
beginPausingAllDownloadSessions
endPausingAllDownloadSessions
_assetDownloadSessionToDownloadSession
_assetDownloadSessionToPlaybackMetadata
_assetDownloadSessionsPendingStart
_pausingAllDownloadsTransactionCount
_prioritizedDownloadTokens
_streamingOperationQueue
__available__KEY
__MPModelPropertyHomeSharingAssetAvailable__PROPERTY
__protectedContentSupportStorageFileURL__KEY
__MPModelPropertyHomeSharingAssetProtectedContentSupportStorageFileURL__PROPERTY
__URL__KEY
__MPModelPropertyHomeSharingAssetURL__PROPERTY
isAvailable
protectedContentSupportStorageFileURL
setProtectedContentSupportStorageFileURL:
_available
_protectedContentSupportStorageFileURL
_URL
_additionalTrackMetadata
initWithMetadataDictionary:
_storeItem
_addToCloudLibrary
television
_television
_setIgnoreAppSupportedOrientations:
viewControllerForOrientation
_viewController
_navController
_viewControllerForOrientation
navigationItem
viewDidLayoutSubviews
_configurePopover
initWithTitle:style:target:action:
setRightBarButtonItem:
initWithPrivateStyle:
insertSubview:below:
dequeueReusableCellWithIdentifier:
_trackAtIndexPath:
visibleCells
indexPathForCell:
_applyChanges
_avItem
_hasAudio
_hasSubtitles
_originalAudioTrack
_originalSubtitleTrack
_newAudioTrack
_newSubtitleTrack
_backdropView
layoutSubviewsOfCell:
imageViewEdgeInsets
setImageViewEdgeInsets:
tableView
_wirelessDisplayCapableRouteIsPicked
tableFooterView
routesPreferringMirroring
flashScrollIndicators
setLayoutManager:
setSelectionStyle:
_effectivePickedRouteReturningActualPickedRouteType:
_mirroringSwitchValueDidChange:
setOn:
setHighlightedImage:
_debugButtonAction:
_availableRoutes
_popoverController
indexPathForSelectedRow
initWithType:displayMirroringRoutes:
_displayMirroringRoutes
_wirelessDisplayRouteIsPendingAsPicked
identifierSets
_identifierSets
setDurationFromExternalMetadata:
setExplicitTrack:
setLikedStateEnabled:
setMainTitle:
setSupportsLikedState:
_durationFromExternalMetadata
_explicitTrack
_likeStateEnabled
_mainTitle
_relationshipKinds
setPodcast:
setPodcastEpisode:
podcast
podcastEpisode
genericObjectWithModelObject:
__MPModelRelationshipGenericSong__PROPERTY
__MPModelRelationshipGenericAlbum__PROPERTY
__MPModelRelationshipGenericArtist__PROPERTY
__MPModelRelationshipGenericPlaylist__PROPERTY
__playlistEntry__KEY
__MPModelRelationshipGenericPlaylistEntry__PROPERTY
__tvEpisode__KEY
__MPModelRelationshipGenericTVEpisode__PROPERTY
__MPModelRelationshipGenericTVSeason__PROPERTY
__MPModelRelationshipGenericTVShow__PROPERTY
__MPModelRelationshipGenericMovie__PROPERTY
__MPModelRelationshipGenericMediaClip__PROPERTY
__podcast__KEY
__MPModelRelationshipGenericPodcast__PROPERTY
__podcastEpisode__KEY
__MPModelRelationshipGenericPodcastEpisode__PROPERTY
__MPModelRelationshipGenericRadioStation__PROPERTY
_tvEpisode
_podcast
_podcastEpisode
pathForResource:ofType:
dataWithContentsOfFile:
_finalize
removeSectionMoveFromIndex:
removeItemMoveFromIndexPath:
enumerateSectionMovesWithBlock:
insertedSections
deletedSections
updatedSections
_sectionMoves
_updatedSectionMoveFromIndexes
_itemMoves
_updatedItemMoveFromIndexPaths
_insertedSections
_deletedSections
_updatedSections
_insertedItemIndexPaths
_deletedItemIndexPaths
_updatedItemIndexPaths
deleteOperationWithIndexPath:
insertOperationWithIndexPath:
replaceOperationWithPreviousIndexPath:finalIndexPath:
operationWithType:previousIndexPath:finalIndexPath:
_previousIndexPath
_finalIndexPath
modelObjectWithStorePlatformDictionary:
acquire
availableMediaCharacteristicsWithMediaSelectionOptions
makeNowPlayingInfoLanguageOptionGroup
languageOptions
createLanguageOptionGroups
makeNowPlayingInfoLanguageOption
createLanguageOptions
mediaCharacteristics
extendedLanguageTag
_languageOptionIdentifier
initWithType:languageTag:characteristics:displayName:identifier:
defaultOption
allowsEmptySelection
initWithLanguageOptions:defaultLanguageOption:allowEmptySelection:
beginLeaseWithRequest:completionBlock:
isMediaApplication
canShowCloudDownloadButtonsDidChangeNotification:
canShowCloudTracksDidChangeNotification:
isCellularDataRestrictedDidChangeNotification:
hasProperNetworkConditionsToShowCloudMediaDidChangeNotification:
observerWithDistributedName:localName:queue:
hasProperNetworkConditionsToShowCloudMedia
isCellularDataRestrictedForMusic
shouldProhibitMusicActionForCurrentNetworkConditions
isCellularDataRestrictedForVideos
shouldProhibitVideosActionForCurrentNetworkConditions
isCellularDataRestrictedForStoreApps
shouldProhibitStoreAppsActionForCurrentNetworkConditions
canShowCloudDownloadButtons
updateSubscribedPlaylistsWithSagaIDs:ignoreMinRefreshInterval:completionHandler:
HSCloudItemIDList
sdk_createPlaylistWithPersistentID:properties:tracklist:completionHandler:
addGeniusPlaylistWithPersistentID:name:seedItemSagaIDs:itemSagaIDs:completionHandler:
canSetPlaylistProperty:
setPlaylistProperties:trackList:forPlaylistPersistentID:completionHandler:
publishPlaylistWithSagaID:completionHandler:
uploadArtworkForPlaylistWithPersistentID:completionHandler:
canSetItemProperty:
importItemArtworkForSagaID:completionHandler:
importItemArtworkForPurchaseHistoryID:completionHandler:
importSubscriptionItemArtworkForPersistentID:completionHandler:
importScreenshotForSagaID:completionHandler:
importScreenshotForPurchaseHistoryID:completionHandler:
importSubscriptionScreenshotForPersistentID:completionHandler:
importContainerArtworkForSagaID:completionHandler:
importSubscriptionContainerArtworkForPersistentID:completionHandler:
importArtistHeroImageForPersistentID:completionHandler:
importAlbumArtistHeroImageForPersistentID:completionHandler:
deprioritizeItemArtworkForSagaID:
deprioritizeItemArtworkForPurchaseHistoryID:
deprioritizeSubscriptionItemArtworkForPersistentID:
deprioritizeScreenshotForSagaID:
deprioritizeScreenshotForPurchaseHistoryID:
deprioritizeSubscriptionScreenshotForPersistentID:
deprioritizeContainerArtworkForSagaID:
deprioritizeSubscriptionContainerArtworkForPersistentID:
deprioritizeArtistHeroImageForPersistentID:
deprioritizeAlbumArtistHeroImageForPersistentID:
becomeActiveAndWaitUntilDone:
loadIsJaliscoGeniusSupportedWithCompletionHandler:
_initializeUpdateInProgressState
isAuthenticatedWithCompletionHandler:
activeLockerAccount
loadUpdateProgressWithCompletionHandler:
resignActive
isAuthenticatedWithQueue:completionHandler:
authenticateAndStartInitialImport:mergeWithCloudLibrary:completionHandler:
deauthenticateWithCompletionHandler:
setCloudAddToPlaylistBehavior:completionHandler:
setItemProperties:forPurchaseHistoryID:
updateJaliscoLibraryWithReason:completionHandler:
loadJaliscoGeniusCUIDWithCompletionHandler:
initWithResponseData:error:
loadJaliscoGeniusTermsAndConditionsWithCompletionHandler:
startWithConnectionResponseBlock:
isUserAccepted
JSONObjectWithData:options:error:
setJaliscoGeniusCUID:withCompletionHandler:
defaultMediaTasteController
setContentTasteType:forStoreAdamID:withContentType:completionHandler:
setContentTasteType:forPlaylistGlobalID:withCompletionHandler:
updateInProgressChangedHandler
loadIsUpdateInProgressWithCompletionHandler:
setUpdateInProgressChangedHandler:
migrateCellularDataPreferencesIfNeeded
isEnablingCloudLibraryDestructive
isCellularDataRestricted
shouldProhibitActionsForCurrentNetworkConditions
canDefaultMediaLibraryShowCloudContent
updateSubscribedPlaylistWithSagaID:ignoreMinRefreshInterval:completionHandler:
hasPurchaseHistoryAccount
hasCloudLockerAccount
isInitialImport
isUpdateInProgress
enableCloudLibraryWithOptions:completionHandler:
disableCloudLibraryWithCompletionHandler:
updateJaliscoMediaLibraryWithReason:completionHandler:
enablingJaliscoGeniusRequiresTerms
acceptJaliscGeniusTermsAndConditionsVersion:withCompletionHandler:
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
cloudClient
isJaliscoGeniusEnabled
_cloudAvailabilityController
_isUpdateInProgress
_preferencesChangedNotifyToken
_preferencesChangedNotifyTokenIsValid
_addToPlaylistBehaviorChangedObserver
_isInitialImport
_isCloudEnabled
_jaliscoGeniusEnabled
_cloudClient
addCloudItemID:idType:
insertCloudItemID:idType:atIndex:
_cloudItemIDList
_setUsesLegacyAutomaticWaitingBehavior:
setAppliesMediaSelectionCriteriaAutomatically:
_currentItemDidChangeNotification:
advanceToNextItem
_externalProtectionStatus
prepareItem:withCompletionHandler:
setAllowsExternalPlayback:
_setLimitsBandwidthForCellularAccess:
setUsesExternalPlaybackWhileExternalScreenIsActive:
_resumePlayback:error:
setDefaultItemEQPresetType:
setExpectedAssetTypes:
setPreparesItemsForPlaybackAsynchronously:
isPlaybackQueueTransactionActive
playbackQueueCommitHandler
setPlaybackQueueCommitHandler:
_allowsExternalPlaybackRevisionID
_isExternalPlaybackActive
_pausedForPlaybackQueueTransaction
_lastPickedRoute
_playbackQueueCommitHandler
_playbackQueueTransactionCount
_queuedOperations
_rate
_rateBeforePlaybackQueueTransaction
_routeDidChangeDuringPlaybackQueueTransaction
_status
_defaultItemEQPresetType
_outputObscuredDueToInsufficientExternalProtection
_usesAudioOnlyModeForExternalPlaybackRevisionID
_usesExternalPlaybackWhileExternalScreenIsActiveRevisionID
__shortName__KEY
__MPModelPropertyCuratorShortName__PROPERTY
__MPModelPropertyCuratorEditorNotes__PROPERTY
__MPModelPropertyCuratorShortEditorNotes__PROPERTY
__curatorKind__KEY
__MPModelPropertyCuratorKind__PROPERTY
__MPModelPropertyCuratorEditorialArtwork__PROPERTY
__handle__KEY
__MPModelPropertyCuratorHandle__PROPERTY
setHandle:
_shortName
_curatorKind
_handle
_tearDownTimeoutTimerSource
_handleTimeout
initWithIdentity:clientInfo:
sharedBagProvider
_executeURLLoadWithRequest:storeBagDictionary:requestContext:
_executeItemMetadataLoadForRequestedItemIdentifiers:reason:
getBagForRequestContext:withCompletionHandler:
initWithURLRequest:requestContext:
sharedStoreURLSession
parsedBody
enqueueDataRequest:withCompletionHandler:
dispatchAsync:
_childOperation
_response
_startExecutingTimeStamp
_timeoutTimerSource
durationInFrames
encodingDelayInFrames
encodingDrainInFrames
heuristicInfo
lastPacketsResync
_encodingDelayInFrames
_encodingDrainInFrames
_heuristicInfo
_durationInFrames
_lastPacketsResync
_representedObjects
_libraryResponseDidInvalidateNotification:
configureWithModelObject:
representedObjectResults
libraryResponse
_representedObjectResults
_libraryResponse
requiredHomeSharingAssetProperties
shouldAutomaticallyRefreshLease
_shouldAutomaticallyRefreshLease
applyVolumeNormalizationWithSoundCheckEnabled:forQueuedItems:currentQuery:
_playlistEntryKind
tiledArtworkRequest
__MPModelPropertyPlaylistName__PROPERTY
__MPModelPropertyPlaylistDescriptionText__PROPERTY
__MPModelRelationshipPlaylistCurator__PROPERTY
__hasCleanContent__KEY
__MPModelPropertyPlaylistHasCleanContent__PROPERTY
__MPModelPropertyPlaylistHasExplicitContent__PROPERTY
__curatorPlaylist__KEY
__MPModelPropertyPlaylistCuratorPlaylist__PROPERTY
__owner__KEY
__MPModelPropertyPlaylistIsOwner__PROPERTY
__publicPlaylist__KEY
__MPModelPropertyPlaylistPublicPlaylist__PROPERTY
__visiblePlaylist__KEY
__MPModelPropertyPlaylistVisiblePlaylist__PROPERTY
__subscribed__KEY
__MPModelPropertyPlaylistSubscribed__PROPERTY
__userEditableComponents__KEY
__MPModelPropertyPlaylistUserEditableComponents__PROPERTY
__type__KEY
__MPModelPropertyPlaylistType__PROPERTY
__trackCount__KEY
__MPModelPropertyPlaylistTrackCount__PROPERTY
__MPModelPropertyPlaylistEditorNotes__PROPERTY
__MPModelPropertyPlaylistShortEditorNotes__PROPERTY
__shareURL__KEY
__MPModelPropertyPlaylistShareURL__PROPERTY
__shareShortURL__KEY
__MPModelPropertyPlaylistShareShortURL__PROPERTY
__releaseDateComponents__KEY
__MPModelPropertyPlaylistReleaseDateComponents__PROPERTY
__lastModifiedDateComponents__KEY
__MPModelPropertyPlaylistLastModifiedDateComponents__PROPERTY
__MPModelPropertyPlaylistArtwork__PROPERTY
__MPModelPropertyPlaylistEditorialArtwork__PROPERTY
__MPModelPropertyPlaylistLibraryAdded__PROPERTY
__MPModelPropertyPlaylistLibraryAddedDate__PROPERTY
__tiledArtworkRequest__KEY
__MPModelPropertyPlaylistTracksTiledArtwork__PROPERTY
__MPModelPropertyPlaylistKeepLocalEnableState__PROPERTY
__MPModelPropertyPlaylistKeepLocalManagedStatus__PROPERTY
__lastDevicePlaybackDate__KEY
__MPModelPropertyPlaylistLastDevicePlaybackDate__PROPERTY
__cloudVersionHash__KEY
__MPModelPropertyPlaylistCloudVersionHash__PROPERTY
trackArtworkCatalogsWithCount:
tracksTiledArtworkCatalogWithRows:columns:
isSubscribed
userEditableComponents
shareURL
shareShortURL
lastModifiedDateComponents
lastDevicePlaybackDate
setLastDevicePlaybackDate:
cloudVersionHash
_hasCleanContent
_owner
_curatorPlaylist
_publicPlaylist
_visiblePlaylist
_subscribed
_trackCount
_userEditableComponents
_shareURL
_shareShortURL
_releaseDateComponents
_lastModifiedDateComponents
_lastDevicePlaybackDate
_cloudVersionHash
_tiledArtworkRequest
_storeURLRequestPropertiesUsingBag:
_internalErrorForHTTPResponseCode:
_urlStringForKey:inBag:
initWithString:
_stringRepresentationForHTTPMethod:
_stringRepresentationForHTTPBodyType:
_onQueueUpdateEffectiveNetworkTypesForPlayback
_onQueueEffectiveNetworkTypeForAverageBitrate:
lastAverageBitrate
_effectiveNetworkTypeForCloudPlayback
_lastAverageBitrate
_networkType
storeItemMetadataRequestNeedsPersonalization
storeItemMetadataRequestItemIdentifierForIdentifiers:
storeItemMetadataRequestNeedsPersonalizationForIdentifiers:
_onQueue_reloadIfNeeded
_responseDidInvalidate:
controller:shouldRetryFailedRequestWithError:
_onQueue_scheduleRetryAfterInterval:
controller:defersResponseReplacement:
setResponse:
beginAutomaticResponseLoading
endAutomaticResponseLoading
setNeedsReload
reloadIfNeeded
_numberOfObservers
_shouldAutomaticallyLoad
_needsReload
_cancelToken
_retryInterval
_retryTimer
setWithCapacity:
tiledArtworkCatalogWithRows:columns:
initWithOutputDevice:
outputDevice
_outputDevice
initWithResponse:localItemsQuery:
offerDictionariesForLookupCollectionPropertyValues:
defaultOfferVariant
bestOfferVariantInOfferDictionaries:withPreferredVariant:
_loadOfferingData
presentationStyle
mpShowBuysWithNoCompletionOffer
offerPassTypeForLookupCollectionPropertyValues:
initWithStoreOfferResponse:preferredStoreOfferVariant:
initWithOfferedCollection:localItemsQuery:preferredStoreOfferVariant:
mergedCollection
itemsByRemovingLocalItems
setDefaultOfferVariant:
itemsWithCompletionsCollection
offeringWithResponse:localItemsQuery:
copyByInvalidatingCalculatedContent
setPreferredStoreOfferVariant:
preferredStoreOfferVariant
collectionWithCompletionItems
storeURL
_preferredStoreOfferVariant
_storeOfferResponse
_localItemsQuery
_collectionWithCompletionItemsOffering
_presentationStyle
_storeURL
copyByOverlayingMediaItemsWithItemsQuery:preferredStoreOfferVariant:
localItems
offeredCollection
_offeredCollection
_mergedCollection
storeLookupIDForAlbumItemsQuery:
setLocalizationStyle:
setValue:forRequestParameter:
wantsArtwork
_specificationForArtworkSizesToRequest
lookupRequestForStorePlaylistIdentifier:
storeLookupIDString
indexOfObject:inSortedRange:options:usingComparator:
initWithAlbumItemsQuery:tokenID:wantsArtwork:responseBlock:
lookupRequestForAlbumWithRepresentativeItem:
newLookupRequest
albumItemsQuery
tokenID
responseBlock
storeLookupID
_wantsArtwork
_albumItemsQuery
_tokenID
_responseBlock
_storeLookupID
_defaultMediaLibraryDidChangeNotification:
_storeAccountsDidChangeNotification:
sharedConnection
_dumpCache
effectiveRestrictedBoolValueForSetting:
_sanitizedQuery:
_onQueueCompletionOfferingForAlbumItemsQuery:
_onQueueCancelCompletionOfferingLookupTokenID:
_onQueueStartCompletionOfferingLookupForAlbumItemsQuery:responseBlock:
_getIsCMCDisabled:disabledReason:
_onQueueClearCache
_onQueueRemoveLookupItem:
_onQueueSetCachedCompletionOffering:forStoreLookupID:
_onQueueRemoveLookupItemsForStoreLookupID:
mpCompletionOfferResponseDictionaryWithLocalAlbumsCollection:
mpSaveCompletionsResponseForDebuggingIfNecessaryWithExpectedStoreLookupID:
_isCmcEnabled
mpIsPersonalizedOffer
_onQueuePostLookupCompletedForLookupItem:offering:error:
mpVerboseCMCLogging
raise
_onQueueGetInsertedLookupItemForAlbumItemsQuery:requestAlreadyIssued:responseBlock:
_lookupCompletedWithResponse:lookupItem:error:
canRequestStoreOfferForLocalMediaItems:
mpLoadDebugCompletionsResponseWithStoreLookupID:
startWithLookupBlock:
storeOfferingController
setWantsArtwork:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
completionOfferingForAlbumItemsQuery:
cancelCompletionOfferingLookup:
startCompletionOfferingLookupForAlbumItemsQuery:responseBlock:
_offeringCache
_lookupItemsByStoreLookupID
_lookupItemsByTokenID
_nextTokenID
initWithUbiquitousIdentifier:
setBookmarkTimestamp:
hasBeenPlayedModified
userPlayCountModified
bookmarkTimeModified
bookmarkTimestampModified
ubiquitousIdentifier
bookmarkTimestamp
_ubiquitousIdentifier
_userPlayCount
_bookmarkTimestamp
_tileArtworkVisualIdenticalityIdentifiers
distantPast
albumOrderedChildItemIDsForLookupCollectionPropertyValues:
hasMediaItemValuesForStoreLookupCollectionPropertyValues:itemID:
initWithLookupLookupCollectionPropertyValues:preferredStoreOfferVariant:itemID:
mediaValueForStoreLookupCollectionPropertyValues:itemID:mediaProperty:
contentRatingForCollectionPropertyValues:itemID:
isRestrictedPurchase
MPSD_isDownloadInProgress
buyOfferForVariant:
buyType
_offeredItemAlreadyExists
_lookupOfferDictionaries
getBuyOfferDictionary:regularPriceOfferDictionary:inOfferDictionaries:variant:
initWithStoreOfferDictionary:regularPriceOfferDictionary:passType:entityType:persistentID:title:
canMergeStoreOfferWithLocalMediaItems:
offerArtworkDescriptorForLookupCollectionPropertyValues:itemID:
offerDictionariesForLookupCollectionPropertyValues:itemID:
mediaItemsWithStoreLookupCollectionPropertyValues:preferredStoreOfferVariant:
mediaItemsByMergingStoreOfferMediaItems:localItems:
mediaItemsByRemovingRestrictedContentFromMediaItems:
isDownloadable
_lookupCollectionPropertyValues
_contentRating
_offerArtworkDescriptor
_offerArtworkDescriptorOnceToken
_pid
buyOffer
MPSD_hasDownloadingItem
completionOfferForVariant:
isDownloadableStoreOffer
isPurchasableStoreOffer
initWithURLBagContext:
loadValueForKey:completionBlock:
_changeDictionary
_postItemChangedNotificationWithDeltaBlock:
deviceSpecificUserInfo
albumName
collectionIdentifier
directorName
info
localizedContentRating
profileIdentifier
radioStationName
seriesName
trackArtistName
totalDiscCount
totalTrackCount
genreName
radioStationStringIdentifier
isAlwaysLiveItem
isSharableItem
isSteerable
numberOfChildren
storeAlbumID
storeArtistID
storeSubscriptionID
radioStationType
editingStyleFlags
elapsedTime
collectionInfo
elapsedTimeTimestamp
initWithMRLanguageOptionGroup:
availableLanguageOptions
mrLanguageOptionGroup
currentLanguageOptions
mrLanguageOption
invalidateLanguageOptions
invalidateDescription
invalidateLyrics
invalidateArtwork
shouldPushArtworkData
setCollectionIdentifier:
setDirectorName:
setLocalizedContentRating:
setProfileIdentifier:
setSeriesName:
setSeasonNumber:
setSharableItem:
setSteerable:
setNumberOfChildren:
setPlaylistType:
setRadioStationType:
auxiliaryNowPlayingInfo
setLanguageOptionDataSource:
setSections:
setDescriptionDataSource:
setExplicitItem:
_mediaRemoteDeltaRequest
set_mediaRemoteDeltaRequest:
_languageOptionDataSource
_lyricsDataSource
_descriptionDataSource
colorWithITColor:
_fallbackColorAnalysis
algorithm
_algorithm
getWhite:alpha:
getRed:green:blue:alpha:
ITColor
modelObjectPlaybackItemMetadataWillDeallocate:
filePath
qualityType
purchaseBundleFilePath
modelObjectDelegate
setModelObjectDelegate:
_modelObjectDelegate
laterDate:
sharedCache
addCachedResponse:forRequest:
updateForPlaybackOfFileAsset:fromResponse:
_accessOrderedRequests
_requestToCachedResponse
accountID
setAccountID:
delegatedAccountID
setDelegatedAccountID:
storefrontID
setStorefrontID:
requestType
setRequestType:
storeRadioAdamID
setStoreRadioAdamID:
_storefrontID
_redownloadParameters
_cloudUniversalLibraryID
_delegatedAccountID
_storeCloudID
_storePurchasedAdamID
_storeRadioAdamID
__MPModelPropertyGenreName__PROPERTY
__MPModelPropertyGenreArtwork__PROPERTY
__MPModelPropertyGenreLibraryAddedDate__PROPERTY
refreshLeaseWithRequest:completionBlock:
mapTableWithKeyOptions:valueOptions:
operationsForRequest:
inputsProtocols
outputProtocols
inputOperations
setInputOperations:
_middlewareOperationMap
_operations
_addBuilderProtocol:
stringWithCString:encoding:
registerReturnType:returnValueBlock:
_middlewareEnumerator
isRestrictedContent
itemsByRemovingStoreOffers
hasDownloadableStoreOfferItemsForVariant:
hasPurchasableStoreOfferItemsForVariant:
mediaValueForStoreLookupCollectionPropertyValues:mediaProperty:
_loadLocalCollection
contentRatingForCollectionPropertyValues:
_checkIsUsableOffer
mediaItemsWithStoreOfferVariant:
initWithStoreOfferResponse:preferredStoreOfferVariant:offerMediaItems:localItemsQuery:
_hasRestrictedContent
indexesOfObjectsPassingTest:
removeObjectsInArray:
passType
isCheaperToPurchaseIndividualItems
countOfItemsByRemovingLocalItems
isCollectionOfferPresentable
_unmergedStoreMediaItems
_localCollection
_hasHiddenRestrictedContent
_collectionContentRating
_didSetTimeoutInterval
__bookmarkTime__KEY
__MPModelPropertyPlaybackPositionBookmarkTime__PROPERTY
__shouldRememberBookmarkTime__KEY
__MPModelPropertyPlaybackPositionShouldRememberBookmarkTime__PROPERTY
__hasBeenPlayed__KEY
__MPModelPropertyPlaybackPositionHasBeenPlayed__PROPERTY
__startTime__KEY
__MPModelPropertyPlaybackPositionStartTime__PROPERTY
__stopTime__KEY
__MPModelPropertyPlaybackPositionStopTime__PROPERTY
__storeUbiquitousIdentifier__KEY
__MPModelPropertyPlaybackPositionStoreUbiquitousIdentifier__PROPERTY
__userPlayCount__KEY
__MPModelPropertyPlaybackPositionUserPlayCount__PROPERTY
hlsURL
initWithRequestedPropertySet:storeItemMetadataResults:flatSectionedItems:
localeWithLocaleIdentifier:
setStoreRecommendationID:
setGroupType:
setLastUpdatedDate:
setRefreshURL:
modelObjectForRecommendationChildDictionary:parentGroup:subgroupsAccumulator:
setSectionIndex:
requestedGroupPropertySet
requestedItemPropertySet
storeItemMetadataResults
flatSectionedItems
_requestedGroupProperties
_itemBuilder
_lastUpdatedDateFormatter
_requestedGroupPropertySet
_requestedItemPropertySet
_storeItemMetadataResults
_flatSectionedItems
initWithOperationQueue:
mainQueue
_insertDataSource:forSection:afterEntry:
_addBranchToEntry:entries:
_dataSourceInsertItems:fromSection:afterEntry:
automaticallyReversesNonDestructiveDataSourceEdits
_dataSourceMoveItem:inSection:afterEntry:
tracklist:dataSourceDidMoveItemsInSection:
tracklist:dataSourceDidChangeItemsInSection:
tracklist:dataSourceDidRemoveItemsFromSection:
setConsumer:
loadItemsForSection:
tracklist:dataSourceDidAddItemsToSection:
dataSourceInsertItemsAtHead:inSection:
dataSourceInsertItems:afterItem:inSection:
dataSourceInsertItemsAtTail:inSection:
dataSourceMoveItemToHead:inSection:
dataSourceMoveItem:afterItem:inSection:
dataSourceMoveItemToTail:inSection:
dataSourceRemoveItem:fromSection:
addDataSourceAtStart:section:
addDataSource:section:afterHeadOfSection:
addDataSource:section:afterItem:inSection:
addDataSource:section:afterTailOfSection:
addDataSourceAtEnd:section:
moveItemToStart:fromSection:
moveItemToEnd:fromSection:
moveItem:fromSection:afterHeadOfSection:
moveItem:fromSection:afterItem:inSection:
moveItem:fromSection:afterTailOfSection:
removeItem:fromSection:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
_automaticallyReversesNonDestructiveDataSourceEdits
_startEntries
_endEntry
_sectionHeadEntryMap
preferredAssetDictionaryInOfferDictionary:
buyTypeForOfferDictionary:regularPriceOffer:
offerVariantResponseKeyForOfferVariant:
getBuyOfferDictionary:regularPriceOfferDictionary:inOfferDictionaries:variantString:
initWithFloat:
_priceForOfferDictionary:
_isBuy
uppercaseStringWithLocale:
actionDisplayTitle
displayPrice
buyURL
displayTitle
requiresConfirmation
regularPriceDisplayPrice
downloadSize
storeOfferDictionary
entityPersistentID
entityTitle
_offerDictionary
_regularPriceOffer
_mediaAssetDictionary
_entityPersistentID
_entityTitle
_passType
setPlaylistUserImage:
newOperationWithLocalPersistenceResponseHandler:completeResponseHandler:
setPlaylistEntries:
setPlaylistDescription:
setPlaylistName:
setIsOwner:
setAuthorStoreIdentifier:
setParentPlaylist:
setShouldCreatePlaylist:
_shouldCreatePlaylist
_didSetPlaylistUserImage
_playlistEntries
_playlistDescription
_playlistName
_playlistUserImage
_isOwner
_authorStoreIdentifier
_parentPlaylist
_entityTranslator
_entityQueryResult
_cellularNetworkAllowedDidChangeNotification:
beginUsingNetwork
endUsingNetwork
setVideoCellularStreamingAllowed:
isMusicCellularDownloadsAllowed
isUsingNetwork
isMusicCellularDownloadingAllowed
_musicCellularNetworkingAllowedNotifyToken
_videosPreferencesChangedToken
_networkUsageCount
_videosAllowsCellularStreaming
_isMusicCellularDownloadingAllowed
mediaSubTypes
collectionLookupKeyForMediaProperty:
cacheID
itemLookupKeyForMediaProperty:
offerLookupKeyForItemMediaProperty:
offerDictionaryWithPreferredAssetDictionaryInItemResponseDictionary:
assetLookupKeyForItemMediaProperty:
localRepresentativeItemPropertyForMediaProperty:
stringByExpandingTildeInPath
mpFakeCompletionDataForBuys
initWithCollectionRepresentativeItem:
collectionRepresentativeItem
setCollectionRepresentativeItem:
_collectionRepresentativeItem
initWithItemPersistentID:screenshotDictionaries:itemArtworkDictionaries:containerArtworkDictionaries:
mediaPropertyContentRatingValue
_requestedItemProperties
_contentItemBuilder
_subgroupBuilder
_endpointsDidChange:
initWithEndpoint:
_cachedEndpoints
_discoverySession
_callbackToken
startHandler
_startHandler
storeAccountIdentifier
_storeAccountIdentifier
ratingSystemFromString:
_isRatingSystemForApps:
_isRatingSystemForMovies:
_isRatingSystemForTV:
allowsStorePurchases
_isRatingSystemForMusic:
ratingLevel
setRatingLevel:
ratingDescription
setRatingDescription:
ratingLabel
setRatingLabel:
ratingSystem
setRatingSystem:
_ratingLevel
_ratingDescription
_ratingLabel
_ratingSystem
effectiveValueForSetting:
subtitle
isContainer
isStreamingContent
_mediaRemoteDeltaContentItem
_applyDeferredNotification
_loadArtwork:completion:
setSubtitle:
setPlaybackProgress:
setContainer:
setStreamingContent:
_artworkDescriptor
_localFilePath
_sinfs
__MPModelPropertyPersonName__PROPERTY
__hasSocialPosts__KEY
__MPModelPropertyPersonHasSocialPosts__PROPERTY
_hasSocialPosts
_allowsExplicitContentDidChangeNotification:
_cloudLibraryEnabledDidChangeNotification:
_updateInProgressDidChangeNotification:
setConfiguration:identifyingModelObject:
MP_lightness
defaultRadioLibrary
getRecentStationGroupsWithCompletionHandler:
stationCount
stationWithIdentifier:
addStationBasedOnTrackIDs:completion:
setStoreItemMetadata:
initWithStoreItemMetadata:
storeItemMetadata
_valueFromMetadataForProperty:
_storeItemMetadata
initWithPersistentID:size:
requestWithDatabaseID:itemID:size:
signedRequestFromURLRequest:
_size
isAutomaticLegibleLanguageOption
isAutomaticAudibleLanguageOption
languageOptionType
languageTag
languageOptionCharacteristics
_mrLanguageOption
defaultLanguageOption
allowEmptySelection
_mrLanguageOptionGroup
initWithStation:
setUniqueIdentifier:
localizedName
setLocalizedName:
setLocalizedDescription:
setStationStringID:
_localizedName
_localizedDescription
notifyPropagatablePropertyChanged
remoteCommand:isSupportedForContentItemIdentifier:
remoteCommand:isEnabledForContentItemIdentifier:
_addTarget:action:retainTarget:
initWithTargetBlock:
invokeWithRemoteCommandEvent:
methodReturnLength
_mediaRemoteCommandInfoOptions
isSupportedForContentItemIdentifier:
isEnabledForContentItemIdentifier:
removeTarget:
addTargetWithHandler:
isSupportedAndEnabled
newCommandEvent
newCommandEventWithContentItemIdentifier:
newCommandEventWithPlaybackQueueOffset:
newSeekCommandEventWithType:
commandCenterDelegate
isObserving
setObserving:
_targetInvocations
_enabled
_observing
_commandCenterDelegate
_mediaRemoteCommandType
setPreferredIntervals:
newCommandEventWithInterval:
preferredIntervals
_preferredIntervals
setLocalizedShortTitle:
setPresentationStyle:
newCommandEventWithState:
isActive
localizedShortTitle
_active
_localizedShortTitle
setMinimumRating:
setMaximumRating:
newCommandEventWithRating:
minimumRating
maximumRating
_minimumRating
_maximumRating
setSupportedPlaybackRates:
newCommandEventWithPlaybackRate:
supportedPlaybackRates
_supportedPlaybackRates
newCommandEventWithType:preservesRepeatMode:
setCurrentRepeatType:
setSupportedRepeatTypes:
newCommandEventWithType:
currentRepeatType
_supportedRepeatTypes
_currentRepeatType
newCommandEventWithType:preservesShuffleMode:
setCurrentShuffleType:
setSupportedShuffleTypes:
currentShuffleType
_supportedShuffleTypes
_currentShuffleType
registerSupportedQueueType:
registerSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
unregisterSpecializedQueueIdentifier:
unregisterSupportedQueueType:
registerSupportedCustomQueueIdentifier:
unregisterSupportedCustomQueueIdentifier:
setSupportedSharedQueue:
_registeredSpecializedQueues
_registeredQueueTypes
_registeredCustomQueueIdentifiers
_supportsSharedQueue
setCanBeControlledByScrubbing:
newCommandEventWithPositionTime:
canBeControlledByScrubbing
_canBeControlledByScrubbing
newCommandEventWithInsertingContentItemID:afterContentItemID:
newCommandEventWithPreservesShuffleMode:
newCommandEventWithPreservesRepeatMode:
setBlock:
groupType
lastUpdatedDate
timeIntervalSince1970
sectionedItems
sectionIndex
__groupType__KEY
__MPModelForYouRecommendationGroupPropertyGroupType__PROPERTY
__lastUpdatedDate__KEY
__MPModelForYouRecommendationGroupPropertyLastUpdatedDate__PROPERTY
__sectionedItems__KEY
__MPModelForYouRecommendationGroupPropertySectionedItems__PROPERTY
__sectionIndex__KEY
__MPModelForYouRecommendationGroupPropertySectionIndex__PROPERTY
__subgroups__KEY
__MPModelForYouRecommendationGroupPropertySubgroups__PROPERTY
__MPModelForYouRecommendationGroupPropertyTitle__PROPERTY
__loadAdditionalContentURL__KEY
__MPModelForYouRecommendationGroupPropertyLoadAdditionalContentURL__PROPERTY
__refreshURL__KEY
__MPModelForYouRecommendationGroupPropertyRefreshURL__PROPERTY
refreshURL
itemAtIndex:
_refreshURL
_groupType
_lastUpdatedDate
_sectionIndex
_subgroups
_kinds
__position__KEY
__MPModelPropertyPlaylistEntryPosition__PROPERTY
__MPModelRelationshipPlaylistEntryPlaylist__PROPERTY
__MPModelRelationshipPlaylistEntrySong__PROPERTY
__MPModelRelationshipPlaylistEntryTVEpisode__PROPERTY
__MPModelRelationshipPlaylistEntryMovie__PROPERTY
___artworkCatalog__KEY
___MPModelPropertyPlaylistEntryArtwork__PROPERTY
position
_artworkCatalog
set_artworkCatalog:
_position
__artworkCatalog
aggregateStatisticsDisplayCountKey
incrementViewDisplayCountForKey:
incrementKey:
setAggregateStatisticsDomain:
_lastAggregateStatisticsDisplayCountKey
_lastAggregateStatisticsDisplayCountTime
setAggregateStatisticsDisplayCountKey:
_parse
_populateStorePlatformDataResultsFromRawResponseOutputDictionary:
_parseUsingAdditionalContentIdentifiersFromPreviousParser
_populateUnavailableContentIdentifiersFromPageDataDictionary:
_parseFeaturedContentStructureModelChildren:
_parseSingleContentListFromPageDataDictionary:isMemberOfChartSet:
_parseFeaturedContentChild:isMemberOfChartSet:insertingResultsToSectionedCollection:atSectionIndex:additionalContentIdentifiers:allAdditionalContentIdentifiersNeedingLookup:
_storeItemMetadataForContentIdentifier:
_storeItemMetadataIsAvailableForContentIdentifier:
additionalContentIdentifiers
rawResponseOutput
previousParser
additionalStoreItemMetadataResponse
contentItemBuilder
_additionalContentIdentifiers
_allAdditionalContentIdentifiersNeedingLookup
_parseOnceToken
_storePlatformDataResults
_unavailableContentIdentifiers
_rawResponseOutput
_previousParser
_additionalStoreItemMetadataResponse
_sectionBuilder
_itemsByVariant
storefrontIdentifier
enqueuerAccountIdentifier
_isGoodCacheKey
_slowGetCacheKeyWithRequest:completionHandler:
_fastGetCacheKeyWithRequest:completionHandler:
isEqualToNumber:
getPropertiesForUserIdentity:completionHandler:
isDelegated
DSID
setEnqueuerAccountIdentifier:
setPersonalized:
standardDefaults
defaultStoreFront
setStorefrontIdentifier:
initWithURL:requestContext:
setAnisetteVersion:
setShouldUseMescalSigning:
ic_valueForHTTPHeaderField:
buildURLRequestWithCompletionHandler:
_personalized
_accountIdentifier
_enqueuerAccountIdentifier
_storefrontIdentifier
hasProperty
hasValue
hasComparisonType
setHasComparisonType:
sectionType
__MPModelStoreBrowseSectionPropertyTitle__PROPERTY
__sectionType__KEY
__MPModelStoreBrowseSectionPropertyType__PROPERTY
__MPModelStoreBrowseSectionPropertyLoadAdditionalContentURL__PROPERTY
__uniformContentItemType__KEY
__MPModelStoreBrowseSectionPropertyUniformContentItemType__PROPERTY
__memberOfChartSet__KEY
__MPModelStoreBrowseSectionPropertyMemberOfChartSet__PROPERTY
__brick__KEY
__MPModelStoreBrowseSectionPropertyBrick__PROPERTY
__previouslyRetrievedNestedResponse__KEY
__MPModelStoreBrowseSectionPropertyPreviouslyRetrievedNestedResponse__PROPERTY
_memberOfChartSet
_brick
_sectionType
_previouslyRetrievedNestedResponse
isSubsetOfSet:
containsPropertySet:
_relationships
addRelationship:properties:
removeRelationship:
storeItemMetadataForItemIdentifier:returningIsFinalMetadata:
earliestExpirationDate
_itemIdentifierToStoreItemMetadata
_finalResponse
__number__KEY
__MPModelPropertyTVSeasonNumber__PROPERTY
__MPModelPropertyTVSeasonDescriptionText__PROPERTY
__MPModelPropertyTVSeasonYear__PROPERTY
__episodesCount__KEY
__MPModelPropertyTVSeasonEpisodesCount__PROPERTY
__MPModelPropertyTVSeasonHasCleanContent__PROPERTY
__MPModelPropertyTVSeasonHasExplicitContent__PROPERTY
__MPModelPropertyTVSeasonLibraryAddedDate__PROPERTY
__MPModelPropertyTVSeasonLibraryAdded__PROPERTY
__MPModelPropertyTVSeasonLibraryAddEligible__PROPERTY
__sortType__KEY
__MPModelPropertyTVSeasonSortType__PROPERTY
__MPModelRelationshipTVSeasonShow__PROPERTY
__representativeEpisode__KEY
__MPModelRelationshipTVSeasonRepresentativeEpisode__PROPERTY
__MPModelPropertyTVSeasonArtwork__PROPERTY
episodesCount
sortType
setSortType:
representativeEpisode
setRepresentativeEpisode:
_number
_episodesCount
_sortType
_representativeEpisode
_cancelButtonAction:
setCornerRadius:
setMasksToBounds:
_setSeparatorBackdropOverlayBlendMode:
_setVisualAltitude:
_updateDismissButtonText
initWithAVItemType:
dismiss
_routingViewFrame
_cancelButtonFrame
_controlsViewFrame
performWithoutAnimation:
setWindowLevel:
_updateRoutingSheetFrame
_animateControls:withCompletionHandler:
_animateUsingDefaultTimingWithOptions:animations:completion:
_maxRoutingViewSize
showInView:withCompletionHandler:
_presentationWindow
_dismissBackgroundButton
_dismissControlsViewButton
_controlsView
_cancelButton
_isSecure
_canAffectStatusBarAppearance
setScopes:
setMaximumResultsPerScope:
_scopes
_maximumResultsPerScope
_availableRoutesChanged:
_itemTypeAvailable:
_applicationResumedEventsOnly:
_applicationSuspended:
_applicationWillEnterForeground:
_applicationWillResignActive:
_applicationDidFinishSuspensionSnapshot:
_batteryStateDidChange:
_unregisterForPlayerNotifications
setMasterController:
_destroyAudioOverlayView
_destroyVideoOverlayView
endDisablingInterfaceAutorotation
_setupSubviews
_enableAirPlayVideoRoutesIfNecessary
_updateBackgroundViewInformation
_registerForPlayerNotifications
_updateDisableAirPlayMirroringDuringPlayback
mpAddSubviewAndArrange:
_effectiveItemType
_viewWasTapped:
setNumberOfTouchesRequired:
setNumberOfTapsRequired:
_viewWasPinched:
_isAnimatingFullscreenTransition
setTransform:
_setupTVOutWindow
_performBlockAfterCATransactionCommits:
_transitionFromFullscreenAnimated:
_scaleModeDidChange:
_showOverlayAnimated:
_hideOverlayAnimated:
updateOverlayView
_cancelOverlayIdleTimer
_resetOverlayIdleTimer
_transitionToFullscreenAnimated:
_updateTVOutEnabled
_useInlineControls
_updateDoubleTapGestureRecognizer
_showVideoSnapshotView
_destroyVideoSnapshotView
_tearDownTVOutWindow
videoControllerDidBeginScrubbing:
videoControllerDidEndScrubbing:
_transitionFromFullscreenAnimated:fromDoneButton:
_postViewControllerRequestsExitWithReason:
_updateBackgroundViewConfiguration:
_postScaleModeDidChange
cancelOverlayIdleTimer
showLoadingIndicator
_flipFromChaptersDidStop:finished:context:
setAnimationTransition:forView:cache:
hideLoadingIndicator
_hideOverlayDidEnd
_bufferingStateChanged:
_playbackError:
_timedImageMetadataAvailable:
_validityChanged:
_resetOverlayIdleTimer:
_overlayIdleTimerFired:
resetOverlayIdleTimer
_delayedShowLoadingIndicator
_overlayViewIsVisible
audioOverlayStyle
_showOverlayAnimated:quickHide:
_showOverlayDidEnd:
showOverlayAnimated:
captureSnapshotOfView:withSnapshotType:
prepareForTransitionFromFullscreen
videoControllerWillExitFullscreen:reason:
_performWithoutDeferringTransitions:
beginDisablingInterfaceAutorotation
masterController
_transitionFromFullscreenDidEnd
videoControllerDidCreateFullscreenView:
setAnimationCurve:
_transitionToFullscreenDidEnd
_viewControllerForFullScreenPresentationFromView:
sendSubviewToBack:
_shouldShowDestinationPlaceholder
videoOverlayStyle
numberOfTapsRequired
overlayDidDismissAlternateTracksPopover:
fullscreenOverlayWillHideAnimated:
fullscreenOverlayWillShowAnimated:
fullscreenOverlayDidHide
fullscreenOverlayDidShow
fullscreenView
setAudioOverlayStyle:
_doneWithChapters:
_flipToChaptersDidStop:finished:context:
subtitlesView
_activeOverlayUserEvents
_controlsOverlayVisible
_needsTVWindowSetup
_needsTVWindowTeardown
_TVOutEnabled
_TVOutEnabledMaster
_view
_videoOverlayView
_audioOverlayStyle
_navigationBarHidden
_videoOverlayStyle
_alertSheet
_alternateTracksWindow
_audioOverlayView
_chaptersContainerController
_containerView
_doubleTapGestureRecognizer
_fullscreenViewController
_fullscreenViewSizeIsExternallyManaged
_fullscreenWindow
_idleTimer
_inCloneMirrorMode
_isAnimatingOverlay
_isTransitioningFromFullscreen
_isTransitioningToFullscreen
_subtitlesView
_swallowNextTapGesture
_videoBackgroundView
_viewsToFade
_wantsOverlayVisibleWhenItemIsAvailable
_wasPlaying
_windowForDisablingAutorotation
_windowForFullscreenTransition
_shouldDestroyVideoSnapshot
convertRect:toLayer:
convertRect:fromLayer:
scope
entityQueryResult
entityTranslationContext
resultContainers
_resultContainers
_scope
_presentationViewController
setSizesWindowToScene:
isInternalWindow
presentAlertController:animated:completion:
_existingRepresentationForArtworkCatalog:fromCacheOnly:
_cachedRepresentationForCatalog:
_isRepresentation:validForCatalog:
_representationAtSize:forCatalog:
_cacheRepresentation:forCatalog:
_resizeArtwork:forCatalog:toSize:completionHandler:
_resizeOriginalArtworkForArtworkCatalog:completionHandler:
initWithArtworkType:availableArtworkToken:fetchableArtworkToken:
usesFallbackCache
fallbackCache
initWithArtworkCatalog:representativeSize:
_isRepresentationSize:validForFittingSize:
initWithSourceURL:
addJPEGDestinationWithSize:compressionQuality:url:
addDestinationWithFormat:size:url:
sendRequest:completionHandler:
artworkResizeUtility
setUsesFallbackCache:
setFallbackCache:
setArtworkResizeUtility:
_usesFallbackCache
_fallbackCache
catalogIdentifier
setCatalogIdentifier:
_catalogIdentifier
__filePath__KEY
__MPModelPropertyFileAssetFilePath__PROPERTY
__fileSize__KEY
__MPModelPropertyFileAssetFileSize__PROPERTY
__nonPurgeable__KEY
__MPModelPropertyFileAssetNonPurgeable__PROPERTY
__protectionType__KEY
__MPModelPropertyFileAssetProtectionType__PROPERTY
__purchaseBundleFilePath__KEY
__MPModelPropertyFileAssetPurchaseBundleFilePath__PROPERTY
__qualityType__KEY
__MPModelPropertyFileAssetQualityType__PROPERTY
setFileSize:
_nonPurgeable
_filePath
_qualityType
_purchaseBundleFilePath
_fileSize
albumArtistArtworkCatalog
artistArtworkCatalog
_artworkCatalogRepresentativeItem
artworkCatalogCachePropertiesForGroupingType:
_outputDevicesDidChange:
_createDefaultApplicationOutputContext
_globalAudioSessionLock
_copyApplicationOutputContext
routeSharingPolicy
selectIndependentRoutingContext:
routingContextUID
_outputDevicesDidChangeNotification:
setRoutingContextUID:
_endpointsDidChangeNotification:
_cachedOutputDevices
_applicationOutputContext
_applicationOutputContextLock
_attemptedToInitializeAppOutputContext
willRotateToInterfaceOrientation:duration:
viewWillTransitionToSize:withTransitionCoordinator:
_overlayIdleTimerFired
_showOverlayDidEnd
_disableTaps
_masterController
_overlayView
_shouldForwardRotationEvents
_swipableView
placeholderTitle
setPlaceholderTitle:
_placeholderTitle
_cloudLibraryAvailabilityDidChange:
_updateFilters
_shouldExcludePurchaseHistoryContent
_internalUserActivity
objectForIdentifier:
payloadForIdentifier:
initWithData:encoding:
setPayload:object:identifier:
setPayloadIdentifier:object:withBlock:
_setExternalMediaContentBundleIdentifier:
externalMediaContentIdentifier
setExternalMediaContentIdentifier:
_externalMediaContentBundleIdentifier
_beginScrubbing
_minimumScale
_commitValue:
_endScrubbing
_scaleForIdealValueForVerticalPosition:
scrubbingControl
setScrubbingControl:
scrubbingVerticalRange
setScrubbingVerticalRange:
_didBeginTracking
_needsCommit
_accumulatedDelta
_beginLocationInView
_lastCommittedLocationInView
_currentValue
_detailedScrubbingEnabled
_scrubbingControl
_scrubbingVerticalRange
_currentScrubSpeed
requestedProperties
offerWithType:
kind
collectionStoreAdamID
initWithRequestedProperties:
genericObjectForStorePlatformMetadata:
_requestedProperties
initWithCFUserNotification:
_setUserNotification:forCFUserNotification:
_cancelSynchronously:
_userNotificationConversionAccessQueue
_userNotificationForCFUserNotification:
willShowNotificationHandler
setWillShowNotificationHandler:
showWithCompletionHandler:
_didReceiveResponseWithFlags:
cfUserNotification
_callbackInvocationQueue
_willShowNotificationHandler
strongSelf
_isShowing
_showingCompletionHandlers
_cfUserNotification
initWithMediaItem:repeatIndex:feederRevisionID:
feederRevisionID
repeatIndex
_repeatIndex
_feederRevisionID
_performWithSharedAccessForDataProviderEntityClass:block:
_entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:
_performWithExclusiveAccessForDataProviderEntityClass:block:
_clearSomeGlobalEntityTemporaryReferences
_entityMapForDataProviderEntityClass:
itemWithIdentifier:
_mediaLibraryDataProvider
_mediaLibraryDataProviderRespondsToSupportsEntityChangeTrackingMethod
_rwlock
_concreteEntitiesByDataProviderEntityClass
_entityTemporaryReferences
_resumedEventsOnlyNotification:
scheduleControlsOverlayAutohideAfterDelay:
transformVideoForInterfaceOrientation:animate:
_hideOverlayWithAnimation:shouldUpdateAutohideFlag:
_validInterfaceOrientation
hideOverlayAnimated:
showOverlayIfNecessary
inhibitOverlay
overlayView
cancelControlsOverlayAutohide
_autohideControlsOverlay
setInhibitOverlay:
forceScaleToFitInPortrait
_hideOverlayWithAnimation:
_requestExitAfterHidingControls
_rotateAfterHidingControls
_showControlsAfterRotate
_autoHidingForItemChange
_scheduledAutoHide
insertString:atIndex:
getActiveEndpointRouteWithCompletion:
endpoint
_endpoint
baseURLStringForReport
contentID
concernItemType
concernTypeID
commentText
queryItemWithName:value:
aucType
_performWithBag:
_deleteCommentURLComponentsFromBag:
_deletePostURLComponentsFromBag:
_dictionariesForType:
setConcernItemType:
setConcernTypeID:
setDisplayText:
setContentID:
setAucType:
setCommentText:
_reportConcernBagDictionary
sharedReporter
submitReport:completion:
deleteComment:activityID:completion:
deletePost:completion:
reportsForType:contentID:aucType:commentText:
userID
setUserID:
displayText
_userID
_contentID
_concernItemType
_commentText
_aucType
_concernTypeID
_displayText
_sizeToURLDictionaryFromStoreDictionariesArray:
_preferredArtworkURLsForType:
_availableSizesForArtworkURLs:
_itemPersistentID
_screenshotURLs
_itemArtworkURLs
_containerArtworkURLs
_screenshotSizes
_itemArtworkSizes
_containerArtworkSizes
_hash
_cacheID
_handlePersistentID:modelClass:keepLocal:mediaLibrary:
_handleKeepLocalUpdateStatus:forLibraryIdentifier:mediaType:completedWithError:
setKeepLocal:
keepLocal
_keepLocal
_devicePresenceDetected
__endpointType__KEY
__MPModelPropertyStoreAssetEndpointType__PROPERTY
__redownloadParameters__KEY
__MPModelPropertyStoreAssetRedownloadParameters__PROPERTY
__redownloadable__KEY
__MPModelPropertyStoreAssetRedownloadable__PROPERTY
__accountIdentifier__KEY
__MPModelPropertyStoreAssetAccountIdentifier__PROPERTY
__shouldReportPlayEvents__KEY
__MPModelPropertyStoreAssetShouldReportPlayEvents__PROPERTY
__subscriptionRequired__KEY
__MPModelPropertyStoreAssetSubscriptionRequired__PROPERTY
_redownloadable
_shouldReportPlayEvents
_initializeWithType:tasteType:
playlistGlobalID
_playlistGlobalID
_tasteType
_UUID
_seasonKind
__MPModelPropertyTVShowTitle__PROPERTY
__shortTitle__KEY
__MPModelPropertyTVShowShortTitle__PROPERTY
__MPModelPropertyTVShowEditorNotes__PROPERTY
__MPModelPropertyTVShowShortEditorNotes__PROPERTY
__creator__KEY
__MPModelRelationshipTVShowCreator__PROPERTY
__MPModelPropertyTVShowArtwork__PROPERTY
__MPModelPropertyTVShowEditorialArtwork__PROPERTY
__MPModelPropertyTVShowEpisodeCount__PROPERTY
__MPModelPropertyTVShowTagline__PROPERTY
shortTitle
creator
_shortTitle
_creator
writeInt64:forTag:
hasShouldContain
clearPersistentIDs
persistentIDsAtIndex:
setHasShouldContain:
setPersistentIDs:count:
writeDouble:forTag:
writeFloat:forTag:
hasIntegerPredicateValue
hasDoublePredicateValue
hasFloatPredicateValue
hasBoolPredicateValue
setBoolPredicateValue:
hasStringPredicateValue
hasBytesPredicateValue
setHasIntegerPredicateValue:
setHasDoublePredicateValue:
setHasFloatPredicateValue:
setHasBoolPredicateValue:
_doublePredicateValue
_integerPredicateValue
_bytesPredicateValue
_floatPredicateValue
_stringPredicateValue
_boolPredicateValue
__uncensoredName__KEY
__MPModelPropertySocialPersonUncensoredName__PROPERTY
__MPModelPropertySocialPersonHandle__PROPERTY
__biography__KEY
__MPModelPropertySocialPersonBiography__PROPERTY
__privatePerson__KEY
__MPModelPropertySocialPersonIsPrivate__PROPERTY
__verified__KEY
__MPModelPropertySocialPersonIsVerified__PROPERTY
__pendingRequestsCount__KEY
__MPModelPropertySocialPersonPendingRequestsCount__PROPERTY
__MPModelPropertySocialPersonArtwork__PROPERTY
uncensoredName
setUncensoredName:
biography
setBiography:
pendingRequestsCount
setPendingRequestsCount:
isPrivate
setPrivatePerson:
isVerified
setVerified:
_privatePerson
_verified
_uncensoredName
_biography
_pendingRequestsCount
_avItemArtworkDidChangeNotification:
_avItemDurationDidChangeNotification:
_avItemIsExplicitDidChangeNotification:
_avItemLikedStateDidChangeNotification:
_avItemTitlesDidChangeNotification:
_registerForNotificationsForPlayer:
_unregisterForNotificationsForPlayer:
_setNeedsNowPlayingInfoUpdate
_reloadArtworkIfPossible
_storeDownloadForNowPlayingItemInArray:
_updateProgressForDownload:
_hasProperConditionsToLoadArtwork
_coalescedUpdateLastUsedDateForCurrentItem
_activeDownloadForItemWithStoreID:
_MPNowPlayingDownloadStateForDownload:
percentComplete
_postNowPlayingInfoForItem:
isCanceled
isPurchasing
storeItemIdentifier
_setNowPlayingInfo:forItem:
_createNowPlayingInfoForItem:completionHandler:
_contentsDidChangeNotification:
_crossedTimeMarkerNotification:
_repeatTypeDidChangeNotification:
_playbackErrorNotification:
configureArtworkCatalog:
_additionalKeysForNowPlayingItem:
_postNowPlayingInfo
_itemNotificationIsRelevantToObservedPlayer:
_activeDownload
_currentArtworkCatalog
_currentArtworkImage
_currentArtworkData
_hasSeenAnyItem
_mediaItemCoalescedUpdateDateAccessedTimers
_scheduledNowPlayingInfoUpdate
dataWithContentsOfURL:options:error:
_updateDisplay
setEdgeInsets:
edgeInsets
_subtitleLabel
_libraryDidChangeNotification:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_commonInit
playbackItemMetadataClass
_configureStoreAVItem:
_mediaItemForPID:
setCloudDialogAllowedMediaItem:
_playbackIndexByApplyShuffleType:withStartIndex:startIndexMediaItem:shouldKeepConsistentQueueOrder:
_currentEmptyQueueError
_reloadQueryItems
_indexForSongShuffledIndex:
_identifierAtIndex:
_invalidateMediaLibraryValues
_indexForPersistentID:
_handleMediaLibraryDidChange
_verifyQueueInvalidationCompletionHandler:
_itemsForQuery:shuffleType:
supportsAddToQueue
unshuffledIndexOfAVItem:
cloudDialogAllowedMediaItem
_connectionAssertion
_hasValidItems
_isSiriInitiated
_queryItems
_shuffleController
_itemPIDs
_indexToIdentifierCache
_currentInvalidationRevision
_isPlaylistQueueFeeder
_cloudDialogAllowedMediaItem
_performTransientFollowState:onPerson:completion:
_transientStateForPerson:shouldCreate:
followState
_performTransientFollowPendingRequestState:onPerson:completion:
followPendingRequestState
_transientStatesDidChange
newOperationForTransientFollowState:completion:
newOperationForTransientFollowPendingRequestState:completion:
initWithPerson:
_queue_transientStatesDidChange
_handleTransientStateForPersonDidChangeNotification:
_addTransientFollowState:transientFollowPendingRequestState:forPerson:
_populateTransientStatesSnapshot:
_notifyTransientStatesDidChangeWithSnapshot:
followPerson:completion:
unfollowPerson:completion:
requestFollowPerson:completion:
cancelFollowRequestOnPerson:completion:
blockPerson:completion:
unblockPerson:completion:
transientFollowStateForPerson:
acceptAllFollowRequestsWithCompletion:
acceptFollowRequestFromPerson:completion:
declineFollowRequestFromPerson:completion:
transientFollowPendingRequestStateForPerson:
_transientStates
_endIfNeeded
completionBlock
_followState
_followPendingRequestState
_latestFollowOperation
_latestFollowPendingRequestOperation
_completionBlock
_transientFollowStatesPerProfileID
_transientFollowPendingRequestStatesPerProfileID
_mediaClipBuilder
_requestedMovieProperties
setSocialProfileID:
homeSharingLibraryID
setHomeSharingLibraryID:
setRadioStationHash:
setRadioStationID:
storeRecommendationID
lyricsID
vendorID
_socialProfileID
_storeCloudAlbumID
_storeRecommendationID
_radioStationStringID
_radioStationHash
_lyricsID
_vendorID
_informalMediaClipID
_informalStaticAssetID
_deviceLibraryPersistentID
_homeSharingLibraryID
_syncID
_radioStationID
_reccomendedArtistsURLFromBag:accountDSID:
_followRecommendationsFromPlatformValue:
responseWithRecommendations:originatingRequest:
_resultsDictionaryFromURLValue:
_displayNameForName:
canonicalLocaleIdentifierFromString:
initWithType:name:locale:
isInBand
_locale
_tag
__MPModelPropertyPodcastEpisodeTitle__PROPERTY
__MPModelPropertyPodcastEpisodeReleaseDateComponents__PROPERTY
__MPModelPropertyPodcastEpisodeDuration__PROPERTY
__MPModelPropertyPodcastEpisodeUserRating__PROPERTY
__explicitEpisode__KEY
__MPModelPropertyPodcastEpisodeExplicit__PROPERTY
__MPModelPropertyPodcastEpisodeDescriptionText__PROPERTY
__commentText__KEY
__MPModelPropertyPodcastEpisodeCommentText__PROPERTY
__MPModelPropertyPodcastEpisodeDatePlayed__PROPERTY
__feedURL__KEY
__MPModelPropertyPodcastEpisodeFeedURL__PROPERTY
__MPModelRelationshipPodcastEpisodeLocalFileAsset__PROPERTY
__MPModelRelationshipPodcastEpisodePodcast__PROPERTY
__MPModelRelationshipPodcastEpisodeAuthor__PROPERTY
__MPModelRelationshipPodcastEpisodePlaybackPosition__PROPERTY
__MPModelPropertyPodcastEpisodeArtwork__PROPERTY
isExplicitEpisode
setExplicitEpisode:
feedURL
setFeedURL:
_explicitEpisode
_feedURL
setArtworkConfiguration:
initWithConfigurationDictionaries:
artworkConfiguration
sizesToAutogenerateForMediaType:artworkType:
_artworkConfiguration
_updateWithCanPostNotifications:
settingEnabled
_cacheValue:forSetting:
isRunningInStoreDemoMode
_isRunningInStoreDemoMode
notificationWithName:object:
effectiveBoolValueForSetting:
hasRestrictionsPasscode
synchronizeWithCompletionHandler:
allowsAccountModification
allowsDeletion
allowsRadioPurchases
_cachedSettings
_allowsAccountModification
_allowsDeletion
_allowsExplicitContent
_allowsStorePurchases
_allowsRadioPurchases
setShouldIgnoreImage:
sourceEditorialArtworkKind
_shouldIgnoreImage
_artworkURL
_lookupItemArtworks
_cropStyle
_sourceEditorialArtworkKind
preheatLeaseRequestsWithCompletionBlock:
_SSPurchaseForType:attributes:
_setSSPurchase:SSPurchaseResponse:
storeDownloadForStoreOffer:type:attributes:
initWithPersistentIdentifier:
_setSSDownload:
bytesDownloaded
bytesTotal
persistentIdentifier
_SSPurchase
placeholderDownloadIdentifier
downloadSizeLimit
_isCanceled
_SSPurchaseResponse
_valueForDownloadProperty:
_currentOverridePhaseIdentifier
downloadPhaseIdentifier
valueForExternalProperty:
resetCachedExternalProperties:count:
setBuyParameters:
setIgnoresForcedPasswordRestriction:
downloadPolicy
initWithDownloadKind:URLBagType:
setCellularDataStates:
policyRules
setPolicyRules:
setDownloadPolicy:
setNetworkTypes:
setDownloadSizeLimit:
setKey:
setFallbackNumberValue:
addUserDefaultState:
setShouldInvertBoolValue:
setBackgroundPurchase:
setDisplaysOnLockScreen:
setValue:forDownloadProperty:
setRequestProperties:
valueForDownloadProperty:
storeDownloadForStoreItemOffer:attributes:
storeDownloadWithDownloadIdentifier:
isRestore
isPaused
purchaseError
rentalInformation
resetCachedRentalInformation
_setCanceled:
_getDownloadFilePath
_setDownloadFilePath:
_addOverridePhaseIdentifier:
_removeOverridePhaseIdentifier:
attributes
_attributes
_canceled
_overridePhaseIdentifiers
_downloadFilePath
setAcquireFunction:
setRelinquishFunction:
setHashFunction:
setIsEqualFunction:
setSizeFunction:
setDescriptionFunction:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
activeDownloads
_onQueue_findStoreDownloadWithSSDownload:SSPurchase:
_updateDownloadsWithAdditions:removals:
_sendDownloadsDidFinishToObserversForDownloads:notifyDownloadManager:completionHandler:
addPurchases:withCompletionBlock:
initWithDownload:
setDidFinishDownloadHandler:
_registerBlockObserver:
_updateActiveDownloadsWithCancelledDownloads:
_addNonCancelledDownloadsToActiveList:
cancelDownloads:completionBlock:
cancelPurchases:withCompletionBlock:
pauseDownloads:completionBlock:
_sendDownloadsDidProgressToObserversForDownloads:
resumeDownloads:completionBlock:
_existingDownloadForSSDownload:
restartDownloads:completionBlock:
prioritizeAboveDownload:completionBlock:
moveDownload:afterDownload:completionBlock:
movePurchases:afterPurchase:withCompletionBlock:
purchase
_sendDownloadsDidFinishPurchasesToObserversForDownloads:
_shouldHideDownload:
setSkipInstall:
_onQueue_addDownloadToMapTables:
downloadFilePath
_updateMediaItemPropertiesForFinishedStoreDownload:SSDownload:
_isActiveDownload:
_updateActiveDownloadsWithChangedActiveDownloads:inactiveDownloads:
_observersForAllDownloads
setDidFinishPurchaseHandler:
initWithDownloadMetadata:
insertDownloads:afterDownload:completionBlock:
_observersForDownload:
finishDownloads:
_sendActiveDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
_onQueue_hasExistingDownloadForStoreDownload:
_onQueue_removeDownloadFromMapTables:
_sendDownloadsDidChangeToObserversWithAddedDownloads:removedDownloads:
skipInstall
linkItemAtPath:toPath:error:
finishSessionWithSuccess:error:
setDownloadFilePath:
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
purchaseManager:didFinishPurchasesWithResponses:
userDownloads
restartDownloads:
downloadForDownloadPersistentIdentifier:
prioritizeDownloads:
_addPurchaseFinishedHandler:forDownloads:
hasFetchedInitialDownloads
_unregisterBlockObserver:
_calloutSerialQueue
_blockObservers
_downloadKindToRequiredClientBundleIdentifiers
_downloadManager
_downloads
_userDownloads
_downloadIdentifiersToDownloads
_downloadsToObservers
_libraryIdentifiersToDownloads
_purchaseManager
_storeIdentifiersToDownloads
_downloadHandlers
_fetchedInitialDownloads
didFinishDownloadHandler
didFinishPurchaseHandler
_didFinishDownloadHandler
_didFinishPurchaseHandler
_download
_skipInstall
MPSD_mediaQueryForDownloadableEntities
MPSD_mediaQueryForDownloadingEntities
MPSD_hasDownloadableEntities
MPSD_hasDownloadingEntities
MPSD_mediaItemPropertiesForDownloadability
MPSD_isDownloadable
_setupRequestedProperties
_requestedSocialPersonProperties
kindWithVariants:songKind:options:
_songKind
songPopularityBlock
kindWithSongKind:options:
__MPModelPropertyAlbumTitle__PROPERTY
__MPModelRelationshipAlbumArtist__PROPERTY
__MPModelRelationshipAlbumGenre__PROPERTY
__representativeSong__KEY
__MPModelRelationshipAlbumRepresentativeSong__PROPERTY
__MPModelPropertyAlbumTrackCount__PROPERTY
__maximumItemTrackNumber__KEY
__MPModelPropertyAlbumMaximumItemTrackNumber__PROPERTY
__discCount__KEY
__MPModelPropertyAlbumDiscCount__PROPERTY
__MPModelPropertyAlbumHasCleanContent__PROPERTY
__MPModelPropertyAlbumHasExplicitContent__PROPERTY
__compilation__KEY
__MPModelPropertyAlbumIsCompilation__PROPERTY
__classical__KEY
__MPModelPropertyAlbumIsClassical__PROPERTY
__MPModelPropertyAlbumReleaseDateComponents__PROPERTY
__MPModelPropertyAlbumArtwork__PROPERTY
__MPModelPropertyAlbumCopyrightText__PROPERTY
__MPModelPropertyAlbumEditorialArtwork__PROPERTY
__MPModelPropertyAlbumLibraryAddedDate__PROPERTY
__MPModelPropertyAlbumYear__PROPERTY
__MPModelPropertyAlbumLibraryAdded__PROPERTY
__MPModelPropertyAlbumVolumeNormalization__PROPERTY
__MPModelPropertyAlbumKeepLocalEnableState__PROPERTY
__MPModelPropertyAlbumKeepLocalManagedStatus__PROPERTY
__MPModelPropertyAlbumLibraryAddEligible__PROPERTY
__MPModelPropertyAlbumLastDevicePlaybackDate__PROPERTY
__preorder__KEY
__MPModelPropertyAlbumPreorder__PROPERTY
__MPModelPropertyAlbumEditorNotes__PROPERTY
__MPModelPropertyAlbumShortEditorNotes__PROPERTY
__songPopularityBlock__KEY
__MPModelPropertyAlbumSongPopularity__PROPERTY
representativeSong
setRepresentativeSong:
maximumItemTrackNumber
isClassical
_compilation
_classical
_preorder
_representativeSong
_maximumItemTrackNumber
_discCount
_songPopularityBlock
MPSD_hasDownloadableItem
hasPropertyPredicate
hasCompoundPredicate
hasPersistentIDsPredicate
hasSearchStringPredicate
setHasType:
_compoundPredicate
_persistentIDsPredicate
_propertyPredicate
_searchStringPredicate
MusicShouldFakeTVEpisodes
Linear
Non-Linear
Standalone
v8@?0@"MPModelStoreBrowseContentItem"4
allowsRadioStations
TB,N,V_allowsRadioStations
allowsVideoContent
TB,N,V_allowsVideoContent
v4@?0
-init is not supported, use +sharedInstance
sharedManager
T@"MPMediaDownloadManager",R,N
allMediaDownloadLibraryIdentifiers
T@"NSArray",R,N
unBlockSocialUser
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
person
T@"MPModelSocialPerson",&,N
T@"MPModelSocialPerson",&,N,V_person
v16@?0{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}4@"NSError"12
mlCoreView
T{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}},R,N
library
T@"MPMediaLibrary",R,N,V_library
filteringOptions
TI,R,N,V_filteringOptions
/BuildRoot/Applications/Xcode.app/Contents/Developer/Platforms/WatchSimulator.platform/Developer/SDKs/WatchSimulator4.0.sdk/System/Library/PrivateFrameworks/MediaLibraryCore.framework/Headers/LibraryView.hpp
Library must be validated before use
Invalid format options reference: Must be of form {*<index>} but no trailing '}' found.
Invalid format string- missing numeric value.
Parameter index out of bounds.
MediaLibraryCore
v24@?0^{CGContext=}4{CGRect={CGPoint=ff}{CGSize=ff}}8
<%@: %p label=%@>
class.description
error
T@"NSError",R,N
invalidationHandler
T@?,C,N
invalidationObservers
v12@?0@4@"NSError"8
v8@?0@"NSError"4
com.apple.MediaPlaybackCore/%@
com.apple.MediaPlaybackCore/%@.callout
v12@?0@"MPResponse"4@"NSError"8
v8@?0@"NSString"4
calloutQueue
T@"NSOperationQueue",R,N,V_calloutQueue
completionOperation
T@"NSBlockOperation",R,N,V_completionOperation
cancelationError
T@"NSError",R,N,V_cancelationError
queue
T@"NSOperationQueue",R,N,V_queue
middlewareClasses
T@"NSArray",C,N,V_middlewareClasses
label
T@"NSString",C,N,V_label
qualityOfService
Ti,N,V_qualityOfService
timeoutInterval
Td,N,V_timeoutInterval
<%@: %p request=%@>
valid
middleware
T@"NSArray",C,N,V_middleware
builder
T@,R,N,V_builder
request
T@,R,C,N,V_request
TB,R,N,GisValid,V_valid
MPResponseDidInvalidateNotification
MPRequestErrorDomain
MPRequestUnderlyingErrorsUserInfoKey
ov_play_1only_
ov_pause_1only_
ov_ffwd_1only_
ov_rwd_1only_
TVHudAlpha
TVHudFadeOut
player
T@"MPAVController",&,N,V_player
MPModelResponseDidInvalidateNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Data Model/MPModelResponse.m
<Unknown File>
-initWithRequest: must be used.
Invalid parameter not satisfying: %@
request != nil
<%@: %p
; isValid = NO
; deferredItemProperties = %@
; deferredSectionProperties = %@
; results = %@
deferredSectionProperties
T@"MPPropertySet",&,N,V_deferredSectionProperties
deferredItemProperties
T@"MPPropertySet",&,N,V_deferredItemProperties
results
T@"MPSectionedCollection",C,N,V_results
T@"MPModelRequest",R,C,N,V_request
; text = "%@"
MPModelPropertyLyricsText
text
MPModelPropertyLyricsHasStoreLyrics
hasStoreLyrics
T@"NSString",C,N,V_text
TB,N,V_hasStoreLyrics
MediaPlayerErrorDomain
MPMoviePlayerContentPreloadDidFinishNotification
Invalid file URL (%@)
asset must be non-nil
player item must be non-nil
isPreparedToPlay
TB,R,N
currentPlaybackTime
Td,N
currentPlaybackRate
Tf,N
contentURL
T@"NSURL",C,N
view
T@"UIView",R,N
backgroundView
playbackState
Ti,R,N
loadState
TI,R,N
controlStyle
Ti,N
repeatMode
shouldAutoplay
TB,N
fullscreen
TB,N,GisFullscreen
scalingMode
readyForDisplay
movieMediaTypes
movieSourceType
duration
Td,R,N
playableDuration
naturalSize
T{CGSize=ff},R,N
initialPlaybackTime
endPlaybackTime
allowsAirPlay
airPlayVideoActive
TB,R,N,GisAirPlayVideoActive
MPMediaPlaybackIsPreparedToPlayDidChangeNotification
_MPMoviePlayerPlaybackRateDidChangeNotification
MPMoviePlayerPlaybackStateDidChangeNotification
MPMoviePlayerPlaybackDidFinishNotification
MPMoviePlayerPlaybackDidFinishReasonUserInfoKey
MPMoviePlayerLoadStateDidChangeNotification
MPMoviePlayerNowPlayingMovieDidChangeNotification
MPMoviePlayerReadyForDisplayDidChangeNotification
_MPMoviePlayerReadyForDisplayDidChangeNotification
MPMoviePlayerScalingModeDidChangeNotification
MPMoviePlayerThumbnailImageRequestDidFinishNotification
MPMoviePlayerThumbnailImageKey
MPMoviePlayerThumbnailTimeKey
MPMoviePlayerThumbnailErrorKey
MPMoviePlayerTimedMetadataUpdatedNotification
MPMoviePlayerTimedMetadataUserInfoKey
name
info
mimeType
dataType
languageCode
MPMoviePlayerWillEnterFullscreenNotification
MPMoviePlayerDidEnterFullscreenNotification
MPMoviePlayerWillExitFullscreenNotification
MPMoviePlayerDidExitFullscreenNotification
MPMoviePlayerFullscreenAnimationDurationUserInfoKey
MPMoviePlayerFullscreenAnimationCurveUserInfoKey
MPMovieMediaTypesAvailableNotification
MPMovieSourceTypeAvailableNotification
MPMovieDurationAvailableNotification
MPMovieNaturalSizeAvailableNotification
MPMoviePlayerIsAirPlayVideoActiveDidChangeNotification
_MPMoviePlayerControllerWillBecomeActiveNotification
_MPMoviePlayerControllerDidBecomeActiveNotification
times
T@"NSArray",&,N,V_times
timeOption
Ti,N,V_timeOption
delegate
T@"<MPMovieViewDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMoviePlayerController.m
movie player %@ has wrong activation state (%d)
The movies properties only accepts MPMovie objects.
_MPArrayQueueItem
v64@?0{?=qiIq}4^{CGImage=}28{?=qiIq}32i56@"NSError"60
MPTimedMetadata cannot be created directly
keyspace
value
timestamp
org.iana.media-type
T@"NSString",R,N
T@,R,N
allMetadata
T@"NSDictionary",R,N
extendedLogData
T@"NSData",R,N
extendedLogDataStringEncoding
events
numberOfSegmentsDownloaded
playbackStartDate
T@"NSDate",R,N
serverAddress
numberOfServerAddressChanges
playbackSessionID
playbackStartOffset
segmentsDownloadedDuration
durationWatched
numberOfStalls
numberOfBytesTransferred
Tq,R,N
observedBitrate
indicatedBitrate
numberOfDroppedVideoFrames
date
errorStatusCode
errorDomain
errorComment
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
refId
sharedController
T@"MPAssistantAnalyticsReportingController",R
AFAnalytics
initAFAnalytics
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAssistantAnalyticsReportingController.m
classAFAnalytics
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
AssistantServicesLibrary
frameworkLibrary
en-US
%@ '%@' %@ %@
Main
displayName
T@"NSString",&,N,V_displayName
option
T@"AVMediaSelectionOption",R,N,V_option
isMainProgram
TB,R,N,V_isMainProgram
isDVS
TB,R,N,V_isDVS
canonicalLanguageIdentifier
T@"NSString",R,N,V_canonicalLanguageIdentifier
mpUniversalTrackIDType
mpUniversalTrackIDBaseID
com.apple.MediaPlayer.audioPlaybackTime
com.apple.MediaPlayer.videoPlaybackTime
com.apple.MediaPlayer.MPRTCReportingSession.accessQueue
com.apple.MediaPlayer.MPRTCReportingSession.operationQueue
v20@?0@"RTCReporting"4@"NSDictionary"8@"NSArray"12@"NSError"16
v8@?0@"NSArray"4
additionalUserInfo
T@"NSDictionary",C,N
clientName
T@"NSString",C,N
clientType
clientVersion
Tq,N
serviceIdentifier
hierarchyToken
T@,&,N
sessionID
TI,N
hasCompleteSessionSetup
hasInitializedSession
MPAlternateTextTrackWillChangeNotification
MPAlternateTextTrackDidOutputNotification
MPAlternateTextOutputStrings
MPAlternateTextOutputNativeSampleBuffers
MPAlternateTextOutputTime
AlternateTracksLogging
availableMediaCharacteristicsWithMediaSelectionOptions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/NowPlaying/MPAlternateTracks.m
tried to select an unknown track
loaded
TB,R,N,GisLoaded
outOfBandTextTracks
T@"NSArray",&,N,V_outOfBandTextTracks
disableAlternateTextTrackRendering
TB,N,V_disableAlternateTextTrackRendering
selectedAlternateTextTrack
T@"MPAlternateTextTrack",&,N
MACaptionAppearanceAddSelectedLanguage
initMACaptionAppearanceAddSelectedLanguage
softLinkMACaptionAppearanceAddSelectedLanguage
/System/Library/Frameworks/MediaAccessibility.framework/MediaAccessibility
MediaAccessibilityLibrary
MACaptionAppearanceSetDisplayType
initMACaptionAppearanceSetDisplayType
softLinkMACaptionAppearanceSetDisplayType
MACaptionAppearanceCopySelectedLanguages
initMACaptionAppearanceCopySelectedLanguages
softLinkMACaptionAppearanceCopySelectedLanguages
MACaptionAppearanceGetDisplayType
initMACaptionAppearanceGetDisplayType
softLinkMACaptionAppearanceGetDisplayType
MACaptionAppearanceCopyPreferredCaptioningMediaCharacteristics
initMACaptionAppearanceCopyPreferredCaptioningMediaCharacteristics
softLinkMACaptionAppearanceCopyPreferredCaptioningMediaCharacteristics
Success
Bad Request.  The request is malformed, it may be missing required parameters or the parameters might not be in the right format
Unauthorized.  Weak-token auth has failed, i.e., the requestor does not have permissions for the library DSID in the request
Not Found.  The requested token was not found.
Internal Server Error
Unknown Error
DebugErrorDescription
MPStoreClientTokenDidChangeNotification
v12@?0@"ICLibraryAuthServiceClientTokenResponse"4@"NSError"8
SSURLConnectionRequest *_MPStoreCreateClientRequest(NSURL *__strong, NSString *__strong, NSDictionary *__strong, SSAccount *__strong)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPStoreUtilities.m
You must provide either a URL or a URL bag key.
Software
User-Agent
%llu
com.apple.MediaPlayer.MPTiledArtworkRequest.accessQueue
artworkCatalogsBlock
T@?,C,N,V_artworkCatalogsBlock
allowsSynchronousArtworkCatalogsBlockExecution
TB,N,V_allowsSynchronousArtworkCatalogsBlockExecution
numberOfColumns
TI,N,V_numberOfColumns
numberOfRows
TI,N,V_numberOfRows
tileSpacing
Tf,N,V_tileSpacing
entityIdentifier
T@"<NSCopying>",C,N,V_entityIdentifier
namespaceIdentifier
T@"<NSCopying>",C,N,V_namespaceIdentifier
revisionIdentifier
T@"<NSCopying>",C,N,V_revisionIdentifier
NetworkInterface
rtcReportingCategory
TS,R,N,V_rtcReportingCategory
rtcReportingType
TS,R,N,V_rtcReportingType
networkInterfaceType
Ti,N,V_networkInterfaceType
kRTCReportingMessageParametersCategory
kRTCReportingMessageParametersType
kRTCReportingMessageParametersPayload
-%td
@"NSString"8@?0@"NSString"4
Domain
Code
B16@?0@"MPArrayQueueItem"4I8^B12
Tried to reload array queue feeder that has already been filled
items
item
T@"MPAVItem",R,N,V_item
path
T@"NSString",C,N,V_path
startTime
Td,N,V_startTime
stopTime
Td,N,V_stopTime
com.apple.MediaPlayer.MPModelLibraryKeepLocalChangeRequestOperation.operationQueue
v12@?0@"MPStoreLibraryMappingResponse"4@"NSError"8
v8@?0@"MPIdentifierSet"4
v8@?0@"MPModelAlbum"4
v16@?0@"NSIndexPath"4@"MPIdentifierSet"8^B12
v12@?0@"MPModelLibraryResponse"4@"NSError"8
v8@?0@"MPModelTVSeason"4
T@"MPModelLibraryDeleteEntityChangeRequest",C,N,V_request
responseHandler
T@?,C,N,V_responseHandler
MPAVItemAlbumStoreIDDidChangeNotification
MPAVItemArtworkDidChangeNotification
MPAVItemAssetIsLoadedNotification
MPAVItemBuyOffersDidChangeNotification
MPAVItemPlaybackModeAvailableNotification
MPAVItemTypeAvailableNotification
MPAVItemAlternateTracksAvailableNotification
MPAVItemDisplayableTextAvailableNotification
MPAVItemDurationAvailableNotification
MPAVItemIsExplicitDidChangeNotification
MPAVItemLikedStateDidChangeNotification
MPAVItemNaturalSizeAvailableNotification
MPAVItemNewAccessLogEntryNotification
MPAVItemRatingDidChangeNotification
MPAVItemStoreIDDidChangeNotification
MPAVItemTimeMarkersAvailableNotification
MPAVItemTitlesDidChangeNotification
MPAVItemModelGenericObjectDidChangeNotification
MPAVItemBookmarkTimeDidChangeNotification
_MPAVItemInternalLikedStateDidChangeNotification
MPAVItemPlaybackProperties_NextPlayStartTime
MPAVItemPlaybackProperties_StartTime
MPAVItemPlaybackProperties_EndTime
MPAVItemPlaybackProperties_LookForLyrics
MPAVItemPlaybackProperties_RampInDuration
MPAVItemPlaybackProperties_RampOutDuration
MPAVItemPlaybackProperties_AudibleDRMGroupID
AudibleDRMInfoGroupID
RampInOutInfoInDuration
RampInOutInfoOutDuration
MPAVItemShouldPreventPlaybackDidChangeNotification
MPAVItemHasFinishedDownloadingDidChangeNotification
MPAVItemSecureKeyDeliveryRequestDidFinishNotification
MPAVItemUserInfoKeyLoadDuration
MPAVItemUserInfoKeyRequestEndDate
MPAVItemUserInfoKeyRequestError
MPAVItemUserInfoKeyRequestStartDate
MPAVItemUserInfoKeyStoreDialogDictionary
AVItemPlaybackProperties_RampInDuration
AVItemPlaybackProperties_RampOutDuration
MPAVItemDurationObservationContext
MPAVItemLoadedTimeRangesObservationContext
com.apple.MediaPlayer.MPAVItem.accessQueue
com.apple.MediaPlayer.MPAVItem.assetQueue
loadedTimeRanges
v12@?0B4@"NSError"8
%lli
@"MPArtworkCatalog"4@?0
v16@?0@"NSString"4I8^B12
commonKey
extraAttributes
time
v16@?0@"MPTimeMarker"4I8^B12
availableChapterLocales
trackReferences
lyrics
v8@?0@"MPAVController"4
%@|%@
validateBlockingAVCalls
blockingAttributeAllowed-%p
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/NowPlaying/MPAVItem.m
use durationIfAvailable
type
v8@?0i4
isAssetLoaded
TB,V_isAssetLoaded
chapterTimeMarkers
T@"NSArray",&,N,V_chapterTimeMarkers
artworkTimeMarkers
T@"NSArray",&,N,V_artworkTimeMarkers
urlTimeMarkers
T@"NSArray",&,N,V_urlTimeMarkers
shouldPreventPlayback
TB,R,N,V_shouldPreventPlayback
modelGenericObject
T@"MPModelGenericObject",R,N,V_modelGenericObject
modelPlayEvent
T@"MPModelPlayEvent",R,N
bookmarkTime
T@"NSNumber",R,C,N
initialPlaybackStartTime
allowsAirPlayFromCloud
TB,R,N,V_allowsAirPlayFromCloud
allowsExternalPlayback
TB,R,N,V_allowsExternalPlayback
aggregateDictionaryItemIdentifier
T@"NSString",R,C,N,V_aggregateDictionaryItemIdentifier
_currentPlaybackRate
Tf,N,G_currentPlaybackRate,S_setCurrentPlaybackRate:,V_currentPlaybackRate
hasFinishedDownloading
TB,R,N,V_hasFinishedDownloading
hasPerformedErrorResolution
TB,N,V_hasPerformedErrorResolution
playbackInfo
T@"NSDictionary",R,C,N
playerItem
T@"AVPlayerItem",&,N
_playerItemDurationIfAvailable
T{?=qiIq},R,N
limitReadAhead
contentItemID
T@"NSString",C,N,V_contentItemID
contentItem
T@"MPNowPlayingContentItem",R,N
queuedTimestamp
T@"NSNumber",C,N,V_queuedTimestamp
assetLoaded
TB,R,N,GisAssetLoaded,V_assetLoaded
assetURLValid
TB,R,N,GisAssetURLValid
didAttemptToLoadAsset
TB,R,N,V_didAttemptToLoadAsset
asset
T@"AVAsset",R,N
canReusePlayerItem
TB,R,N,V_canReusePlayerItem
itemError
T@"NSError",&,N,V_itemError
status
playlistIdentifier
T@"<MPAVItemPlaylistIdentifier>",&,N,V_playlistIdentifier
queueIdentifier
T@"<MPAVItemQueueIdentifier>",&,N,V_queueIdentifier
feedUniqueIdentifier
T@"NSString",C,N,V_feedUniqueIdentifier
uniqueIdentifier
alwaysLive
TB,R,N,GisAlwaysLive
userAdvancedDuringPlayback
userChangedItemsDuringPlayback
userSkippedPlayback
feeder
T@"MPQueueFeeder",W,N,V_feeder
T@"MPAVController",W,N,V_player
hasPlayedThisSession
playbackMode
Ti,R,N,V_playbackMode
accessLog
T@"AVPlayerItemAccessLog",R,N
currentTimeDisplayOverride
defaultPlaybackRate
Tf,N,V_defaultPlaybackRate
closedCaptionTimeMarkers
T@"NSArray",&,N
useEmbeddedChapterData
customAVEQPreset
allowsEQ
alternateTracks
T@"MPAlternateTracks",R,N,V_alternateTracks
displayableText
displayableTextLoaded
hasDisplayableText
album
albumStoreID
Tq,R,N,V_albumStoreID
artist
albumArtist
artistStoreID
albumTrackNumber
albumTrackCount
buyOffers
T@"NSArray",R,C,N,V_buyOffers
canSeedGenius
composer
copyrightText
T@"NSString",R,C,N,V_copyrightText
discNumber
discCount
explicitTrack
TB,R,N,GisExplicitTrack
externalContentIdentifier
T@"NSString",R,C,N,V_externalContentIdentifier
genre
mediaType
isCloudItem
likedState
likedStateEnabled
TB,R,N,GisLikedStateEnabled,V_likedStateEnabled
supportsLikedState
TB,R,N,V_supportsLikedState
libraryLyrics
mainTitle
podcastURL
T@"NSURL",R,N
streamable
TB,R,N,GisStreamable
persistentID
TQ,R,N
cloudID
cloudUniversalLibraryID
cloudAlbumID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
shouldShowComposer
storeItemID
storeItemInt64ID
Tq,R,N,V_storeItemInt64ID
storeSubscriptionAdamID
Tq,R,N,V_storeSubscriptionAdamID
userRating
Tf,R,N
supportsRewindAndFastForward15Seconds
supportsSettingCurrentTime
durationIsValid
durationIfAvailable
durationFromExternalMetadata
playableDurationIfAvailable
timeOfSeekableStart
timeOfSeekableEnd
timedMetadataIfAvailable
mediaItem
T@"MPMediaItem",R,&,N,V_mediaItem
loudnessInfoVolumeNormalization
Tf,N,V_loudnessInfoVolumeNormalization
soundCheckVolumeNormalization
Tf,N,V_soundCheckVolumeNormalization
supportsSkip
supportsSkipToPreviousItem
supportsRating
prefersSeekOverSkip
TB,R,N,V_prefersSeekOverSkip
localizedPositionInPlaylistString
isAd
inWishList
TB,N,GisInWishList
radioItem
TB,R,N,GisRadioItem
stationAllowsItemLiking
stationHash
T@"NSString",R,C,N
stationID
stationName
stationStringID
supportsRadioTrackActions
forwardPlaybackEndTime
T{?=qiIq},N
presentationSize
MPAVItem
T@"MPAVItem",&,N
kMACaptionAppearanceSettingsChangedNotification
initkMACaptionAppearanceSettingsChangedNotification
constant
v8@?0@"ICStoreRequestContext"4
clientInfo
T@"ICClientInfo",C,N,V_clientInfo
delegatedUserIdentity
T@"ICUserIdentity",C,N,V_delegatedUserIdentity
userIdentity
T@"ICUserIdentity",C,N,V_userIdentity
userIdentityStore
T@"ICUserIdentityStore",&,N,V_userIdentityStore
storePlatformRequest
T@"ICStorePlatformRequest",R,C,N
allowLocalEquivalencies
TB,N,V_allowLocalEquivalencies
reason
TI,N,V_reason
itemIdentifiers
T@"NSArray",C,N,V_itemIdentifiers
T@"NSNumber",C,N,V_timeoutInterval
platform
T@"NSString",C,N,V_platform
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
requestingBundleIdentifier
requestingBundleVersion
personalized
TB,R,N,GisPersonalized
personalizationStyle
Ti,N,V_personalizationStyle
MPQueueFeederErrorDomain
MPQueueFeederContentsDidChangeNotification
repeatType
shuffleType
activeShuffleType
MPQueueFeederPlayActivityFeatureName
MPQueueFeederPlayActivityRecommendationData
com.apple.MediaPlayer
POSITION_IN_PLAYLIST_ATTRIBUTED_FORMAT_%d_%d
MediaPlayer
POSITION_IN_PLAYLIST_FORMAT_%@_%@
-[MPQueueFeeder pathAtIndex:]
allowsUserVisibleUpcomingItems
canSeek
canSkipToPreviousItem
userCanChangeShuffleAndRepeatType
playActivityFeatureName
T@"NSString",C,N,V_playActivityFeatureName
playActivityRecommendationData
T@"NSData",C,N,V_playActivityRecommendationData
siriReferenceIdentifier
T@"NSString",C,N,V_siriReferenceIdentifier
playbackContextUniqueIdentifier
T@"NSString",C,N,V_playbackContextUniqueIdentifier
realRepeatType
realShuffleType
Ti,N,V_repeatType
Ti,N,V_shuffleType
Ti,N,V_activeShuffleType
T@"NSString",R,N,V_uniqueIdentifier
T@"MPModelPlayEvent",R,N,V_modelPlayEvent
T@"<MPQueueFeederDelegate>",W,N,V_delegate
state
TI,N,V_state
requiresQueueChangeVerification
TB,N,V_requiresQueueChangeVerification
itemCount
itemClass
T#,R,N
canReorder
playerPreparesItemsForPlaybackAsynchronously
skipLimit
T{?=iid},N,V_skipLimit
MPQueueFeederSkipLimitDidChangeNotification
modelObject
T@"MPModelObject",&,N,V_modelObject
standard
short
bannerUber
subscriptionCover
subscriptionHero
storeFlowcase
browseCover
fullscreenBackground
masterArt
tagline
activity
brand
iTunesBrand
showBrand
movie
musicVideo
playlist
radioStation
song
tvEpisode
tvSeason
tvShow
socialProfile
uploadedAudio
uploadedVideo
tvtrailer
curatorName
kind
iTunesBrandType
shortUrl
playlistType
socialProfileId
handle
nameRaw
isPrivate
isVerified
metadata
<%@:%p storeID=%@ name=%@ subscriptionOffer=%@>
MPStoreItemMetadataDownloadAssetDictionary
MPStoreItemMetadataExpirationDate
MPStoreItemMetadataHasOverrideChildStorePlatformDictionaries
MPStoreItemMetadataOverrideChildStorePlatformDictionaries
MPStoreItemMetadataParentStoreItemMetadata
MPStoreItemMetadataStorePlatformDictionary
artistName
artistId
aucType
artworkURL
artworkTrackIds
isBeats1
childrenIds
collectionName
playlistName
collectionId
playlistId
copyright
curatorId
artwork
itunesNotes
hasArtistBio
hasLyrics
hasSocialPosts
genreNames
genres
riaa
contentRatingsBySystem
isCompilation
isMasteredForItunes
isPreorder
movementName
movementCount
movementNumber
movieClips
offers
playlistIds
popularity
releaseDate
lastModifiedDate
shortName
shouldBookmarkPlayPosition
showComposer
trackCount
trackNumber
seasonNumber
episodeCount
versionHash
workName
videoSubType
explicit
music-video
latestAlbumArtwork
title
itemName
librarySongId
itemId
work
editorialArtwork
screenshots
uber
avatarArtwork
artworkTracks
children
en_US
YYYY-MM-dd
yyyy-MM-dd'T'HH:mm:ss'Z'
supportsSecureCoding
TB,R
parentStoreItemMetadata
T@"MPStoreItemMetadata",R,C,N,V_parentStoreItemMetadata
artworkRequestToken
T@"MPStoreArtworkRequestToken",R,N
T@,R,C,N
artworkTrackIDs
T@"NSArray",R,C,N
artistUploadedContentType
beats1
TB,R,N,GisBeats1
childrenStoreIDs
childStoreItemMetadatas
collectionStoreID
compilation
TB,R,N,GisCompilation
composerName
curatorID
descriptionText
editorNotes
expirationDate
T@"NSDate",R,C,N
expired
TB,R,N,GisExpired
shortEditorNotes
effectiveStorePlatformDictionary
explicitContent
TB,R,N,GisExplicitContent
explicitRating
hasArtistBiography
itemKind
latestAlbumArtworkRequestToken
movieClipsCount
playlistIdentifiers
storeID
socialProfileID
shortURL
T@"NSURL",R,C,N
videoSubtype
privatePerson
TB,R,N,GisPrivatePerson
verifiedPerson
TB,R,N,GisVerifiedPerson
<%@: %p> time = range = [%@, %@), property = %d, _title = %@, url = %@, metadata = %@
comparableTime
Td,N,V_duration
index
TI,N,V_index
hasArtworkAtPlaybackTime
Td,N,V_time
maxTime
T@"NSString",&,N,V_title
T@"NSURL",&,N,V_url
T@"NSDictionary",&,N,V_metadata
markerType
Ti,R,N,V_markerType
AVItem
T@"MPAVItem",&,N,V_AVItem
chapterMarker
T@"MPTimeMarker",&,N,V_chapterMarker
artworkMarker
T@"MPTimeMarker",&,N,V_artworkMarker
URLMarker
T@"MPTimeMarker",&,N,V_URLMarker
closedCaptionMarker
T@"MPTimeMarker",&,N,V_closedCaptionMarker
%@%02lu:%02lu:%02lu.%02ld
MPAVItemTypeUnknown
MPAVItemTypeAudio
MPAVItemTypeVideo
MPAVItemType ???!!
AIRPLAY_DEBUG_LABEL
airplay_debug
AIRPLAY_DEVICE_BATTERY_LEVEL_COMBINED_FORMAT_%@_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_SINGLE_FORMAT_%@
AIRPLAY_DEVICE_BATTERY_LEVEL_CASE_%@
AIRPLAY_IN_USE_ON_PAIRED_DEVICE_%@
%@  %@
UITintedCircularButtonCheckmark
UIRemoveControlMultiNotCheckedImage
T@"<MPAVRoutingTableViewCellDelegate>",W,N,V_delegate
route
T@"MPAVRoute",&,N,V_route
mirroringSwitchVisible
TB,N,V_mirroringSwitchVisible
mirroringStyle
TI,N,V_mirroringStyle
iconStyle
TI,N,V_iconStyle
debugCell
TB,N,GisDebugCell,V_debugCell
pendingSelection
TB,N,GisPendingSelection,V_pendingSelection
useSmartAudioCheckmarkStyle
TB,N,V_useSmartAudioCheckmarkStyle
provideOwnSeparator
TB,N,V_provideOwnSeparator
MPAVSystemLegacyRoutingCoordinatorDidUpdateClientRouteDiscoveryModeNotification
com.apple.MediaPlayer.logAVRoutingState
-init is invalid. Use +sharedRoutingCoordinator instead.
com.apple.MediaPlayer.MPAVSystemLegacyRoutingCoordinator
MPAVSystemLegacyRoutingCoordinator status for %@
Client discovery mode: %@
%lu active client data source%s
<%@ %p "%@", discoveryMode = %@>
| - %@
SystemRoutingControllerState_%@_%.0f.log
com.apple.MediaPlayer.MPTiledArtworkDataSource.TilingArtworkCatalogOperationQueue
com.apple.MediaPlayer.MPTiledArtworkDataSource.LoadingTiledArtworkRequestsQueue
Tiled artwork count cannot be 0.
Tiling artwork request was cancelled
No artwork catalogs were found
com.apple.MediaPlayer.MPTiledArtworkDataSource.loadingTileDataAccessQueue
v8@?0@"UIImage"4
Artwork catalogs found, but at least one had an empty image
NSDebugDescription
MPTiledArtworkError
main-screen-width
main-screen-height
v16@?0q4^B12
v16@?0@"MPMediaQuerySection"4I8^B12
-[MPModelLibraryRequestOperation _executeLegacyRequest]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Data Model/MPModelLibraryRequestOperation.mm
Results should not be nil!
com.apple.MediaPlayer.MPModelLibraryRequest.itemQueryOperationQueue
-[MPModelLibraryRequestOperation _executeRequest]_block_invoke
com.apple.MediaPlayer.MPModelLibraryRequest.serialQueue
v8@?0@"MPModelObject"4
{shared_ptr<mlcore::PlaylistItemEntityQuery>=^{PlaylistItemEntityQuery}^{__shared_weak_count}}4@?0
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
serialAccessQueue
T@"NSOperationQueue",&,N,V_serialAccessQueue
T@"MPModelLibraryRequest",C,N,V_request
libraryView
T@"MPMediaLibraryView",&,N,V_libraryView
query
T{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}},N,V_query
resultHandler
T@?,C,N,V_resultHandler
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
v8@?0@"MPModelGenericObject"4
episode
T@"MPModelTVEpisode",&,N,V_episode
_AVPlayer_VolumeDidChangeNotification
MPAVControllerAvailableRoutesChangedNotification
MPAVControllerBufferingStateChangedNotification
MPAVControllerOldStateParameter
MPAVControllerNewStateParameter
MPAVControllerContentsChangedNotification
MPAVControllerCrossedTimeMarkerNotification
MPAVControllerChapterTimeMarkerParameter
MPAVControllerArtworkTimeMarkerParameter
MPAVControllerURLTimeMarkerParameter
MPAVControllerClosedCaptionTimeMarkerParameter
MPAVControllerFirstVideoFrameDisplayedNotification
MPAVControllerIsExternalPlaybackActiveDidChangeNotification
MPAVControllerItemChangedNotification
MPAVControllerItemParameter
MPAVControllerItemDidFinishLoadingNotification
MPAVControllerItemReadyToPlayNotification
MPAVControllerItemPlaybackDidEndNotification
MPAVControllerItemWillChangeNotification
MPAVControllerPlaybackErrorNotification
MPAVControllerErrorParameter
MPAVControllerConsecutiveErrorCountParamater
MPAVControllerErrorReasonParameter
MPAVControllerPlaybackModeDidChangeNotification
MPAVControllerPlaybackStateChangedNotification
MPAVControllerRepeatTypeChangedNotification
MPAVControllerSeekabilityDidChangeNotification
MPAVControllerServerDiedNotification
MPAVControllerShuffleTypeChangedNotification
MPAVControllerSizeDidChangeNotification
MPAVControllerTimeDidJumpNotification
MPAVControllerTimeParameter
MPAVControllerTickNotification
MPAVControllerValidityChangedNotification
MPAVControllerValidParameter
MPAVControllerTimedMetadataAvailableNotification
MPAVControllerTimedMetadataParameter
MPAVControllerTimedImageMetadataAvailableNotification
MPAVControllerTimedImageMetadataParameter
MPAVControllerRateDidChangeNotification
MPAVControllerVolumeDidChangeNotification
MPAVControllerDidReloadWithPlaybackContextNotification
MPAVControllerFailedToReloadPlaybackContextNotification
MPAVControllerFailedToReloadErrorParameter
MPAVControllerDidSetCurrentTimeNotification
MPAVControllerDidPauseForPlaybackPreventionNotification
MPAVControllerWillReloadWithPlaybackContextNotification
MPAVControllerPlaybackContextParameter
MPAVControllerWillSetCurrentTimeNotification
MPAVControllerPlaylistManagerFailedToQueueNotification
MPAVControllerErrorDomain
MPAVControllerErrorUserInfoKeyAlertDefaultButtonActionURLString
MPAVControllerErrorUserInfoKeyAlertDefaultButtonTitle
MPAVControllerErrorUserInfoKeyAlertMessage
MPAVControllerErrorUserInfoKeyAlertTitle
MPAVControllerDidRegisterItemNotificationsObject
_MPAVControllerExternalPlaybackVideoClient
PlayVideoInBackground
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/NowPlaying/MPAVController.m
invalid parameters
-[MPAVController pause]
v28@?0{?=qiIq}4
https://
http://
home-sharing://
_allowAirPlayVideoCount incorrect
-[MPAVController setClient:wantsToAllowExternalPlayback:shouldIgnorePlaybackQueueTransactions:]
playlistManager.currentItem
-[MPAVController setDisableAirPlayMirroringDuringPlayback:shouldIgnorePlaybackQueueTransactions:]
-[MPAVController setRepeatType:]
-[MPAVController setShuffleType:]
outputSupportsAC3
RepeatOneForAllMedia
v8@?0B4
contentsOpaque
NSNotFound
not loaded
Phone
%s-%i
tracks
currentItem
externalPlaybackActive
outputObscuredDueToInsufficientExternalProtection
rate
canPlayFastForward
canPlayFastReverse
playbackBufferEmpty
playbackBufferFull
playbackLikelyToKeepUp
timedMetadata
-[MPAVController _applicationWillAddDeactivationReason:]
-[MPAVController _applicationDidRemoveDeactivationReason:]
iPodAVControllerErrorDomain
HDCP_PROTECTION_ERROR_TITLE
HDCP_PROTECTION_ERROR_BODY
playlistManager
i12@?0@4@8
com.apple.MediaPlayer.MPAVController.AutoPlay
com.apple.MediaPlayer.
Match
PurchaseHistory
Subscription
WiFi
Cellular
StartedPlaybackInLessThan1Second
StartedPlaybackInLessThan3Seconds
StartedPlaybackInLessThan6Seconds
StartedPlaybackInMoreThan6Seconds
APIC
Movie/video screen capture
v12@?0i4@"NSError"8
T@"<MPAVQueueController>",&,N,G_playlistManager,V_playlistManager
videoView
T@"MPVideoView",R,N
videoLayer
T@"AVPlayerLayer",R,N
externalPlaybackVideoGravity
externalPlaybackType
usesAudioOnlyModeForExternalPlayback
TB,N,V_usesAudioOnlyModeForExternalPlayback
destinationIsTVOut
TB,N,GdestinationIsTVOut,SsetDestinationIsTVOut:
showPlaybackStateOverlaysOnTVOut
Ti,N,V_state
rawRate
Tf,R,N,V_rawRate
_displayPlaybackState
currentItemIsRental
useAirPlayMusicMode
TB,N,V_useAirPlayMusicMode
managesAirPlayBehaviors
TB,N,V_managesAirPlayBehaviors
_playerAVAudioSession
T@"AVAudioSessionMediaPlayerOnly",R,N
limitsBandwidthForCellularAccess
TB,N,V_limitsBandwidthForCellularAccess
disallowsAMRAudio
T@"MPQueueFeeder",R,N
T@"MPAVItem",R,N
routingController
T@"MPAVRoutingController",R,N
avPlayer
T@"MPQueuePlayer",R,N
shouldSkipToNextTrackOnResumeFromInterruption
TB,N,V_shouldSkipToNextTrackOnResumeFromInterruption
shouldResetQueueWhenReachingEnd
TB,N,V_shouldResetQueueWhenReachingEnd
tickTimerEnabled
TB,R,N,GisTickTimerEnabled
activeRepeatType
shuffled
TB,R,N,GisShuffled
autoPlayWhenLikelyToKeepUp
closedCaptioningEnabled
nextFadeOutDuration
Td,N,V_nextFadeOutDuration
hasVolumeControl
volume
muted
TB,R,N,V_muted
routeNameForVolumeControl
currentTime
currentMonotonousTime
durationOfCurrentItemIfAvailable
playableDurationOfCurrentItemIfAvailable
bufferingState
playing
TB,R,N,GisPlaying
rewindHoldingAtStart
TB,R,N,GisRewindHoldingAtStart
TB,R,N,GisValid
alwaysPlayWheneverPossible
Ti,N,V_playbackMode
stopAtEnd
useApplicationAudioSession
isCurrentItemReady
currentMediaItem
T@"MPMediaItem",R,N
currentMediaQuery
T@"MPMediaQuery",R,N
displayOverridePlaybackState
Ti,N,V_displayOverridePlaybackState
ubiquitousBookkeepingEnabled
isExternalPlaybackActive
disableAirPlayMirroringDuringPlayback
shouldEnforceHDCP
TB,N,V_shouldEnforceHDCP
radio
redownload
subscription
downloaded
downloading
long
medium
MPStoreItemOfferLookupDictionary
Only keyed archiving is supported.
assets
buyParams
action-params
priceFormatted
price
actionText
buyParameters
formattedPrice
offerType
lookupDictionary
T@"NSDictionary",R,C,N,V_lookupDictionary
@"MPArtworkCatalog"12@?0d4
clipAssets
previewArtwork
previewArtworkRequestToken
T@"MPStoreArtworkRequestToken",R,C,N
MPPlayerPlaybackLeaseControllerAllowsSubscriptionPlaybackDidChangeNotification
MPPlayerPlaybackLeaseControllerDidPausePlaybackForLeaseEndNotification
com.apple.MediaPlayer.MPPlayerPlaybackLeaseController.accessQueue
v12@?0@"MPSubscriptionStatusPlaybackInformation"4@"NSError"8
v16@?0@"SSVSubscriptionStatus"4B8@"NSError"12
v12@?0@"SSVFairPlaySubscriptionStatus"4@"NSError"8
songList
fallbackStreamingKeyServerURL
T@"NSURL",C,N,V_fallbackStreamingKeyServerURL
fallbackStreamingKeyCertificateURL
T@"NSURL",C,N,V_fallbackStreamingKeyCertificateURL
T@"MPStoreRedownloadProductItem",R,N
responseDictionary
T@"NSDictionary",R,C,N,V_responseDictionary
@"MPArtworkCatalog"8@?0@"MPModelRadioStation"4
v8@?0@"MPModelRadioStation"4
variants
options
TI,R,N,V_variants
TI,R,N,V_options
; title = "%@"
; artist = %@
; album = %@
; hasVideo = true
MPModelPropertySongTitle
MPModelRelationshipSongAlbum
MPModelRelationshipSongArtist
MPModelRelationshipSongGenre
MPModelRelationshipSongComposer
MPModelPropertySongGrouping
grouping
MPModelPropertySongCopyrightText
MPModelPropertySongDuration
MPModelPropertySongTrackNumber
MPModelPropertySongDiscNumber
MPModelPropertySongExplicit
explicitSong
MPModelPropertySongArtistUploadedContent
artistUploadedContent
MPModelPropertySongHasVideo
hasVideo
MPModelPropertySongBeatsPerMinute
beatsPerMinute
MPModelRelationshipSongLyrics
MPModelPropertySongShouldShowComposer
MPModelPropertySongShouldExcludeFromShuffle
shouldExcludeFromShuffle
MPModelPropertySongVolumeNormalization
volumeNormalization
MPModelPropertySongArtwork
artworkCatalogBlock
MPModelRelationshipSongLocalFileAsset
localFileAsset
MPModelPropertySongKeepLocalEnableState
keepLocalEnableState
MPModelPropertySongKeepLocalManagedStatus
keepLocalManagedStatus
MPModelPropertySongLibraryAdded
libraryAdded
MPModelPropertySongLibraryAddedDate
libraryAddedDate
MPModelPropertySongLibraryAddEligible
libraryAddEligible
MPModelPropertySongHasCloudSyncSource
hasCloudSyncSource
MPModelPropertySongClassicalWork
classicalWork
MPModelPropertySongClassicalMovement
classicalMovement
MPModelPropertySongClassicalMovementCount
classicalMovementCount
MPModelPropertySongClassicalMovementNumber
classicalMovementNumber
MPModelPropertySongYear
year
MPModelRelationshipSongHomeSharingAsset
homeSharingAsset
MPModelRelationshipSongStoreAsset
storeAsset
MPModelPropertySongUserRating
MPModelPropertySongGaplessInfo
gaplessInfo
MPModelPropertySongVolumeAdjustment
volumeAdjustment
MPModelRelationshipSongPlaybackPosition
playbackPosition
T@"NSString",C,N,V_title
T@"MPModelAlbum",&,N,V_album
T@"MPModelArtist",&,N,V_artist
T@"MPModelGenre",&,N,V_genre
T@"MPModelComposer",&,N,V_composer
T@"NSString",C,N,V_grouping
T@"MPModelFileAsset",&,N,V_localFileAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
T@"MPModelPlaybackPosition",&,N,V_playbackPosition
T@"MPModelStoreAsset",&,N,V_storeAsset
T@"NSString",C,N,V_copyrightText
Ti,N,V_trackNumber
Ti,N,V_discNumber
TB,N,GisExplicitSong,V_explicitSong
TB,N,GisArtistUploadedContent,V_artistUploadedContent
TB,N,V_hasVideo
Ti,N,V_beatsPerMinute
T@"MPModelLyrics",&,N,V_lyrics
TB,N,V_shouldExcludeFromShuffle
TB,N,V_shouldShowComposer
Tf,N,V_volumeNormalization
T@?,C,N,V_artworkCatalogBlock
TB,N,V_hasCloudSyncSource
TB,N,GisLibraryAdded,V_libraryAdded
T@"NSDate",C,N,V_libraryAddedDate
TB,N,GisLibraryAddEligible,V_libraryAddEligible
Ti,N,V_keepLocalEnableState
Ti,N,V_keepLocalManagedStatus
Ti,N,V_year
Tf,N,V_userRating
T@"MPGaplessInfo",&,N,V_gaplessInfo
Tf,N,V_volumeAdjustment
T@"NSString",C,N,V_classicalWork
T@"NSString",C,N,V_classicalMovement
Ti,N,V_classicalMovementCount
Ti,N,V_classicalMovementNumber
v8@?0^v4
RTCSessionIdentifier
eventCode
eventPayload
T@"NSMutableDictionary",R,N
TI,N,V_sessionID
siriSessionIdentifier
T@"NSString",C,N,V_siriSessionIdentifier
appDataDictionaryVersion
popularityDictionary
%lld
version
Ti,R,N,V_version
AudioAccessory1,1
deviceID
BTDetails_ProductID
CarAudioOutput
model
Speaker
Headphone
Headset
Receiver
LineOut
PersistentLineOut
HDMIOutput
AirTunes
HDMI
HeadphonesBT
HeadsetBT
BluetoothLEOutput
S/PDIF
keyToObjectDictionary
objectToKeyDictionary
assetURL
downloadKey
fairPlayInfoList
flavorType
fileExtension
fileSize
T@"NSData",R,C,N
protectionType
MPQueryPlaybackContextQuery
MPQueryPlaybackContextStartTimeModifications
MPQueryPlaybackContextEndTimeModifications
queryCount
T@"MPMediaQuery",R,N,V_query
startTimeModifications
T@"NSDictionary",C,N,V_startTimeModifications
endTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
enableState
Ti,N,V_enableState
MPVideoViewTVOutCapabilityChangedNotification
MPVideoViewDidDisplayVideoNotification
AirPlayEverywhereEnabled
.GlobalPreferences
frame
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/NowPlaying/MPVideoViewController.m
COULD_NOT_LOAD_MOVIE_ERROR_FMT_%@
GENERIC_COULD_NOT_LOAD_MOVIE
v8@?0@"UIAlertAction"4
T@,W,N
orientation
T@"MPAVController",&,N
T@"UIView",R,&,N
allowsDetailScrubbing
allowsWirelessPlayback
alwaysAllowHidingControlsOverlay
artworkImageStyle
attemptAutoPlayWhenControlsHidden
backstopColor
T@"UIColor",&,N
canAnimateControlsOverlay
canChangeScaleMode
canShowControlsOverlay
controlsOverlayVisible
desiredParts
TQ,N
disableAutoRotation
disableControlsAutohide
disabledParts
displayPlaybackErrorAlerts
hostedWindow
T@"_UIHostedWindow",R,N
hostedWindowContextID
inlinePlaybackUsesTVOut
itemTypeOverride
posterImage
T@"UIImage",&,N
scaleMode
TVOutEnabled
viewControllerWillRequestExit
videoOverlayView
T@"UIView<MPVideoOverlay>",R,&,N
T@"MPVideoView",R,&,N
visibleParts
canShowQTAudioOnlyUI
videoOverlayViewIfLoaded
T@"UIView<MPVideoOverlay>",R,N
allowsTVOutInBackground
transitioningToFullscreen
TB,R,N,GisTransitioningToFullscreen
transitioningFromFullscreen
TB,R,N,GisTransitioningFromFullscreen
artworkImageView
showArtworkInImageView
showArtworkForTVOut
Ti,N,V_artworkImageStyle
T@"UIColor",&,N,V_backstopColor
TQ,N,V_desiredParts
TQ,N,V_disabledParts
Ti,N,V_itemTypeOverride
T@"UIImage",&,N,V_posterImage
Ti,N,V_scaleMode
TQ,N,V_visibleParts
zoomin_icon.png
zoomout_icon.png
disableMovieHUDAutoHide
v16@?0@"MPViewController"4I8^B12
media player
registeredForPlayerNotifications
TB,N,V_registeredForPlayerNotifications
observesApplicationSuspendResumeEventsOnly
idleTimerDisabled
TB,N,GidleTimerDisabled,SsetIdleTimerDisabled:,V_idleTimerDisabled
T@,W,N,V_delegate
T@"MPAVItem",&,N,V_item
Ti,N,V_interfaceOrientation
%@ %@
predicates
T@"NSMutableArray",&,N,V_predicates
paidRedownloadProduct
redownloadProduct
com.apple.MPStoreRedownloadProductOperation.accessQueue
v12@?0@"NSDictionary"4@"NSError"8
guid
lightweight
playback
streamingRental
POST
v8@?0@"NSMutableURLRequest"4
failureType
dialog
T@"NSString",R,C,N,V_buyParameters
endpointType
TI,R,N,V_endpointType
redownloadProductResponse
T@"MPStoreRedownloadProductResponse",R,N
responseError
T@"NSError",R,C,N
TB,N,GisStreamingRental,V_streamingRental
T@"NSString",C,N,V_requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleVersion
image
squareImage
TB,N,V_squareImage
imageView
T@"UIImageView",R,N,V_imageView
; entityIdentifier = %@
; namespaceIdentifier = %@
; revisionIdentifier = %@
; numberOfColumns = %lu
; numberOfRows = %lu
; tileSpacing = %.2f
; scaledFittingSize = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPRemotePlaybackQueue.m
mrQueue
You must provide %@ with a MediaRemote playback queue. Use %@ instead.
userInfo
requestingImmediatePlayback
TB,N,GisRequestingImmediatePlayback
shouldOverrideManuallyCuratedQueue
siriRecommendationIdentifier
<%@ %p, query = %@, firstItem = %@, shuffleType = %@, repeatType = %@>
The provided queue has no items or collections.
The first media item has no path on disk, nor can a streaming download session be created.
mediaQuery
T@"MPMediaQuery",R,N,V_mediaQuery
firstItem
T@"MPMediaItem",R,N,V_firstItem
Ti,R,N,V_shuffleType
Ti,R,N,V_repeatType
<%@ %p, stationID = %@, stationStringID = %@>
Radio station is invalid or not found.
Tq,R,N,V_stationID
T@"NSString",R,N,V_stationStringID
<%@ %p, shuffleType = %@, trackIDs = %@>
Empty track IDs array provided
firstTrackIdentifier
T@"NSString",R,N,V_firstTrackIdentifier
trackIdentifiers
T@"NSArray",R,N,V_trackIdentifiers
<%@ %p, seedTrack = %@>
seedTrack
<%@:%p identifier=%@ dataLength=%lu>
identifier
data
<%@:%p EmptyQueue>
MPStoreLyricsRequestErrorDomain
T@"MPModelSong",&,N,V_song
FCRFaceDetector
initFCRFaceDetector
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Artwork/MPArtworkFocusRegion.m
classFCRFaceDetector
/System/Library/PrivateFrameworks/FaceCore.framework/FaceCore
FaceCoreLibrary
MPModelPropertyPersonName
v12@?0@"MPStoreItemMetadataResponse"4@"NSError"8
T@"MPStoreFollowingRequest",&,N,V_request
MPRadioRecentStationsGroupLocalizedTitle
MPRadioRecentStationsGroupStations
localizedTitle
T@"NSString",C,N,V_localizedTitle
stations
T@"NSArray",C,N,V_stations
v8@?0@"MPModelStoreBrowseSection"4
requestedPropertySet
T@"MPPropertySet",R,N,V_requestedPropertySet
requestedPropertySetExcludingInternalOnlyProperties
T@"MPPropertySet",R,N
Next
Pause
Play
Previous
AlternateTracks
ShowChapters
Email
AddBookmark
30SecondRewind
ToggleFullScreen
15SecondRewind
15SecondFastForward
T@"MPAVController",&,N,Vplayer
play.png
pause.png
nexttrack
prevtrack
prev30
alternatetracks
showchapters
email
addbookmark
airplay_on
airplay
AlternateTracksButton
BookmarkButton
ChaptersButton
EmailLinkButton
LikeOrBanButton
PlayButton
NextButton
PrevButton
ScaleButton
ToggleFullscreen
target
T@,W,N,V_target
TB,N,V_allowsWirelessPlayback
playButtonImage
pauseButtonImage
playPauseButtonImage
@"MPArtworkCatalog"8@?0@"MPModelAlbum"4
v8@?0@"MPModelArtist"4
v8@?0@"MPModelGenre"4
@"NSNumber"12@?0@"MPModelAlbum"4@"MPIdentifierSet"8
fakeTVOutCable
opengles-2
; itemKind = %@
; name = %@
; itemProperties = %@
MPModelLibrarySearchScopeItemKind
MPModelLibrarySearchScopeName
MPModelLibrarySearchScopeItemProperties
coreScope
T{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}},R,N
T@"MPModelKind",&,N,V_itemKind
T@"NSString",R,C,N,V_name
itemProperties
T@"MPPropertySet",R,C,N,V_itemProperties
T@"MPMusicSubscriptionLeaseController",R
T@"MPModelLibraryAlbumAppDataChangeRequest",C,N,V_request
MPModelLibraryAddToPlaylistChangeRequestErrorDomain
T@"MPModelPlaylist",&,N,V_playlist
representativeModelObject
T@"MPModelObject",&,N,V_representativeModelObject
songResults
T@"MPSectionedCollection",&,N,V_songResults
storeImportAllowedHandler
T@?,C,N,V_storeImportAllowedHandler
QTAudioOnlyBackground
interfaceOrientation
backgroundPlaceholderImage
backgroundPlaceholderView
backgroundPlaceholderPosterImageView
T@"UIView",&,N,V_backgroundPlaceholderPosterImageView
destinationPlaceholderStyle
Ti,N,V_destinationPlaceholderStyle
destinationName
T@"NSString",C,N,V_destinationName
layoutSubviewsPostflightHandler
T@?,C,N,V_layoutSubviewsPostflightHandler
NoContentVideosOverlay
AIRTUNES_VIDEO_POPOVER_TITLE
TVOUT_PLACEHOLDER_TITLE
AIRTUNES_VIDEO_PLACEHOLDER_SUBTITLE_FORMAT_%@
TVOUT_PLACEHOLDER_SUBTITLE
style
Ti,N,V_style
parser
T@"MPModelStoreBrowseResponseParser",&,N,V_parser
changeDetails
T@"MPChangeDetails",&,N,V_changeDetails
hasAdditionalContentItems
com.apple.mediaplayer.artworkservice.resizing.queue
com.apple.mediaplayer.artworkservice.resizing.OperationQueue
artworkResizingAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_artworkResizingAccessQueue
artworkResizingOperationQueue
T@"NSOperationQueue",&,N,V_artworkResizingOperationQueue
artworkResizingOperations
T@"NSMapTable",&,N,V_artworkResizingOperations
; %lu %@
section
sections
    %@ (%lu %@): [
        %@,
    
    %@ (%lu %@),
v16@?0@4I8^B12
v16@?0@"NSArray"4I8^B12
v12@?0I4^B8
v16@?0@"NSIndexPath"4I8^B12
v8@?0@"MPChangeDetails"4
firstSection
lastSection
lastItem
totalItemCount
@"MPArtworkCatalog"8@?0@"MPModelTVShow"4
v8@?0@"MPModelTVShow"4
MPVideoViewDidMoveToWindowNotification
MPVideoViewEffectiveScaleModeDidChangeNotification
MPVideoViewMoviePathWillChangeNotification
MPVideoViewMoviePathDidChangeNotification
MPVideoViewScaleModeDidChangeNotification
movieSubtitle
T@"NSString",&,N,V_movieSubtitle
movieTitle
T@"NSString",&,N,V_movieTitle
effectiveScaleMode
movieFrame
T{CGRect={CGPoint=ff}{CGSize=ff}},R,N
movieContentFrame
AVURLAssetOptions
T@"NSDictionary",&,N,V_AVURLAssetOptions
contentView
T@"UIView",R,N,V_contentView
MPModelPropertyPlayEventDatePlayed
datePlayed
MPModelRelationshipPlayEventAlbum
MPModelRelationshipPlayEventArtist
MPModelRelationshipPlayEventPlaylist
MPModelRelationshipPlayEventRadioStation
T@"NSDate",C,N,V_datePlayed
T@"MPModelRadioStation",&,N,V_radioStation
MPVideoOverlayViewBackgroupGroupName
pictureInPictureController.pictureInPicturePossible
_bottomBarBackdropView, _bottomBarTopLayoutGuide, _bottomBarBottomLayoutGuide
BOTTOM_BAR_HEIGHT
V:[_bottomBarBackdropView]|
|[_bottomBarBackdropView]|
V:|[_bottomBarTopLayoutGuide(BOTTOM_BAR_HEIGHT)]
|[_bottomBarTopLayoutGuide]|
V:[_bottomBarBottomLayoutGuide(BOTTOM_BAR_HEIGHT)]|
|[_bottomBarBottomLayoutGuide]|
VideoPlayer_ExitFullscreen
VideoPlayer_PictureInPicture
DONE
DETAIL_SCRUB_INSTRUCTIONS
_topBarBackdropView, _statusBar, _topBarLayoutGuide, _doneButton, _scrubber, _scrubInstructions1, _scrubInstructions2, _topBarItemsGuide
STATUS_BAR_HEIGHT
TOP_BAR_HEIGHT
V:|[_topBarBackdropView]
|[_topBarBackdropView]|
|[_statusBar]|
V:|[_statusBar(STATUS_BAR_HEIGHT)]
V:[_statusBar][_topBarLayoutGuide(TOP_BAR_HEIGHT)]
|[_topBarLayoutGuide]
VideoPlayer_AlternateTracks
_bottomBarTopLayoutGuide, _bottomBarBottomLayoutGuide, _leftButton, _playPauseButton, _rightButton, _volumeSlider, _bottomBarItemsGuide
TRANSPORT_BUTTON_PADDING
PLAY_PAUSE_BUTTON_WIDTH
BOTTOM_BAR_MARGIN
[_leftButton]-(TRANSPORT_BUTTON_PADDING)-[_playPauseButton(PLAY_PAUSE_BUTTON_WIDTH)]-(TRANSPORT_BUTTON_PADDING)-[_rightButton]
|-(BOTTOM_BAR_MARGIN@999)-[_volumeSlider]
_playPauseButton, _scrubber, _bottomBarItemsGuide
INLINE_BAR_MARGIN
|-(INLINE_BAR_MARGIN)-[_playPauseButton]-(INLINE_BAR_MARGIN)-[_scrubber]-(INLINE_BAR_MARGIN)-[_bottomBarItemsGuide]
VideoPlayer_Pause
VideoPlayer_Play
VideoPlayer_Rewind
VideoPlayer_SkipBackward
VideoPlayer_SkipForward
VideoPlayer_FastForward
-highlighted
-normal
VideoPlayer_Airplay
VideoPlayer_ScaleToFill
VideoPlayer_ScaleToFit
LOADING_MOVIE_LABEL
[_loadingIndicator]-(TOP_BAR_MARGIN_COMPACT)-[_loadingLabel]
TOP_BAR_MARGIN_COMPACT
_loadingIndicator, _loadingLabel
_statusBar, _doneButton, _scrubber, _topBarItemsGuide
TOP_BAR_MARGIN
|-(TOP_BAR_MARGIN@999)-[_doneButton]
[_doneButton]-(TOP_BAR_MARGIN)-[_scrubber]-(TOP_BAR_MARGIN)-[_topBarItemsGuide]
videoViewController
T@"<MPVideoControllerProtocol>",W,N
navigationBarHidden
navigationBar
T@"UINavigationBar",R,&,N
T@"<MPVideoOverlayDelegate>",W,N
viewControllerForModalPresentationOrientation
T@"UIViewController",W,N,V_viewControllerForModalPresentationOrientation
topBarBackdropView
T@"_UIBackdropView",R,N,V_topBarBackdropView
bottomBarBackdropView
T@"_UIBackdropView",R,N,V_bottomBarBackdropView
overrideType
Ti,N,S_setOverrideType:,V_overrideType
T@"MPVideoView",W,N,V_videoView
automaticallyHandleTransportControls
TB,N,V_automaticallyHandleTransportControls
allowsScrubbing
allowsExitFromFullscreen
TB,N,V_allowsExitFromFullscreen
allowsPictureInPicture
TB,N,V_allowsPictureInPicture
allowsAudioAndSubtitles
TB,N,V_allowsAudioAndSubtitles
bottomBarHeight
T@"<MPVideoControllerProtocol>",W,N,VvideoViewController
TB,N,VnavigationBarHidden
T@"<MPVideoOverlayDelegate>",W,N,V_delegate
TQ,N,VdesiredParts
TQ,N,VvisibleParts
TQ,N,VdisabledParts
v16@?0@"NSString"4@"NSDictionary"8^B12
hls-key-cert-url
hls-key-server-url
hls-playlist-url
is-itunes-stream
v16@?0@"NSDictionary"4I8^B12
T@"NSDictionary",R,N,V_responseDictionary
usesCurrentAccountIfAvailable
TB,N,V_usesCurrentAccountIfAvailable
allFlavors
T@"MPStoreRedownloadProductItemAsset",R,N
firstAsset
iTunesStoreStream
TB,R,N,GisiTunesStoreStream
HLSPlaylistURL
HLSKeyCertificateURL
HLSKeyServerURL
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Tracklist/MPTracklistEnumerator.m
Could not find item entry for identifier: %@
Cannot instantiate forward enumerator with MPTracklistEnumerationOptionReverse set
innerEntry not found in innerEntry.previousEntry.nextEntries
TI,N,V_options
contexts
T@"NSMutableArray",&,N,V_contexts
nextEmittableEnumerationResults
T@"NSMutableArray",&,N,V_nextEmittableEnumerationResults
tracklist
T@"MPTracklist",R,N,V_tracklist
entryToEmit not found in entryToEmit.previousEntry.nextEntries
entriesToEmit
T@"NSMutableArray",&,N,V_entriesToEmit
MPTracklistEntryTypeUnknown
MPTracklistEntryTypeStart
MPTracklistEntryTypeHead
MPTracklistEntryTypeItem
MPTracklistEntryTypeTail
MPTracklistEntryTypeEnd
<%@ %p> %@
branchDepth
entryType
Ti,R,N,V_branchDepth
Ti,R,N,V_entryType
sectionIdentifier
T@"NSString",R,N,V_sectionIdentifier
T@"<MPAVItemPlaylistIdentifier>",&,N
AIRPLAY_MIRRORING_DISCOVERING_STATUS
playlistURL
keyCertificateURL
keyServerURL
SecureKeyBlockingLoadDuration
PerceivedTotalStartupTime
TracklistLoadDuration
blockingSecureKeyLoadDuration
Td,N,V_blockingSecureKeyLoadDuration
perceivedTotalStartupTime
T@"NSNumber",C,N,V_perceivedTotalStartupTime
tracklistLoadDuration
Td,N,V_tracklistLoadDuration
v8@?0@"SSVPlaybackLease"4
externalError
T@"NSError",C,N,V_externalError
MPVolumeSliderPickedRouteDidChangeNotification
main-screen-class
VideoPlayer_Slider_Thumb
VideoPlayer_Slider_Track
VideoPlayer_Slider_Groove
VolumeWarning
_isOffScreen
TB,N,S_setIsOffScreen:
hitRectInsets
T{UIEdgeInsets=ffff},N,V_hitRectInsets
volumeWarningView
T@"UIView",R,N,V_volumeWarningView
trackLayoutGuide
T@"UILayoutGuide",R,N,V_trackLayoutGuide
thumbView
T@"UIView",R,W,N
Ti,R,N,V_style
volumeAudioCategory
volumeWarningTrackImage
T@"UIImage",&,N,V_volumeWarningTrackImage
MPVolumeViewVisibilityChangedNotification
MPVolumeViewRouteButtonChangedNotification
MPVolumeViewRoutePickerPresentedNotification
MPVolumeViewWirelessRoutesAvailableDidChangeNotification
MPVolumeViewWirelessRouteActiveDidChangeNotification
only keyed archiving is supported
MPVolumeViewShowsVolumeSlider
MPVolumeViewShowsRouteButton
NO_VOLUME_AVAILABLE
volumeSlider
T@"MPVolumeSlider",R,N
volumeSliderShrinksFromBothEnds
hidesRouteLabelWhenNoRouteChoice
isVisible
isShowingRouteButton
routeButtonShowsTouchWhenHighlighted
showsVolumeSlider
showsRouteButton
wirelessRoutesAvailable
TB,R,N,GareWirelessRoutesAvailable
wirelessRouteActive
TB,R,N,GisWirelessRouteActive
volumeWarningSliderImage
<%@ %p contents:
%ld: %@,
(null)
nodes
maximumIndex
v20@?0@"_MPSparseArrayNode"4I8I12^B16
v16@?0@"_MPSparseArrayNode"4I8^B12
count
firstEmptyIndex
object
relativeOffset
TI,N,V_relativeOffset
T@,&,N,V_object
MPModelLibraryRequestWantsDetailedKeepLocalRequestableResponse
MPModelLibraryRequestScopedContainerClasses
MPModelLibraryRequestScopedIdentifierSet
MPModelLibraryRequestContentRangeLocation
MPModelLibraryRequestContentRangeLength
MPModelLibraryRequestAllowedItemIdentifiers
MPModelLibraryRequestFilteringOptions
MPModelLibraryRequestLegacyMediaQuery
wantsDetailedKeepLocalRequestableResponse
legacyMediaQuery
T@"MPMediaQuery",C,N,V_legacyMediaQuery
mediaLibrary
T@"MPMediaLibrary",&,N,V_mediaLibrary
allowedItemIdentifiers
T@"NSArray",C,N,V_allowedItemIdentifiers
scopedContainers
T@"NSArray",C,N,V_scopedContainers
TI,N,V_filteringOptions
contentRange
T{_NSRange=II},N,V_contentRange
TB,N,V_wantsDetailedKeepLocalRequestableResponse
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Data Model/MPModelLibraryRequest.mm
Detailed keep local status only supported when request is sectioned.
Detailed keep local status only supported when request wantsDetailedKeepLocalRequestableResponse.
sectionKeepLocalStatusConfigurations
T@"NSArray",C,N,V_sectionKeepLocalStatusConfigurations
libraryAssertion
T@"MPMediaLibraryConnectionAssertion",&,N,V_libraryAssertion
downloadablePlaylistItemEntityQueryBlock
T@?,C,N,V_downloadablePlaylistItemEntityQueryBlock
downloadableItemsQuery
T{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}},N,V_downloadableItemsQuery
<%@ %p assetFlavor:'%@' assetQuality:%@ didStartLeaseSession:%@ downloadToken:%llu isHLSAsset:%@ protectionType:%@ hasPurchaseBundle:%@ hasResponseItemMetadata:%@ sourceURL:'%@'>
assetFlavor
T@"NSString",C,N,V_assetFlavor
assetQuality
TI,N,V_assetQuality
didStartLeaseSession
TB,N,V_didStartLeaseSession
downloadToken
TQ,N,V_downloadToken
isHLSAsset
TB,N,V_isHLSAsset
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
TI,N,V_protectionType
purchaseBundle
T@"NSDictionary",C,N,V_purchaseBundle
responseAssetDictionary
T@"NSDictionary",&,N,V_responseAssetDictionary
streamingKeyServerURL
T@"NSURL",C,N,V_streamingKeyServerURL
streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyCertificateURL
sourceURL
T@"NSURL",C,N,V_sourceURL
alternateSourceURL
T@"NSURL",C,N,V_alternateSourceURL
<%@ %p destinationURL:'%@' downloadToken:%llu hasPurchaseBundle:%@ sourceURL:'%@'>
destinationURL
T@"NSURL",C,N,V_destinationURL
com.apple.MPMediaLibraryPlaybackItemMetadata
v8@?0@"MPModelStoreAsset"4
v8@?0@"MPModelHomeSharingAsset"4
v8@?0@"MPModelComposer"4
@"MPArtworkCatalog"8@?0@"MPModelSong"4
plist
v8@?0@"MPModelFileAsset"4
v8@?0@"MPModelLyrics"4
v8@?0@"MPModelSong"4
v12@?0@"MPMediaItem"4@"NSError"8
persistentid-%llu
adamid-%lli
cloudid-%llu
%@%@%@.%@
com.apple.MediaPlayer.MPMediaLibraryPlaybackItemMetadata.writeQueue
writeQueue
T@"NSObject<OS_dispatch_queue>",&,N,G_writeQueue,V_writeQueue
T@"MPMediaItem",&,N
customForYouURL
T@"NSURL",C,N,V_customForYouURL
volumeView
T@"MPVolumeView",R,N,V_volumeView
hostingWindow
T@"UIWindow",W,N,V_hostingWindow
previousWindow
T@"UIWindow",W,N,V_previousWindow
block
T@?,R,C,N,V_block
interval
T{?=qiIq},R,N,V_interval
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
propertiesToFetchMap
T{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}},N,V_propertiesToFetchMap
propertiesToSortMap
T{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}},N,V_propertiesToSortMap
sortTransformer
T@?,C,N,V_sortTransformer
valueTransformer
T@?,C,N,V_valueTransformer
foreignPropertyBase
T^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}},N,V_foreignPropertyBase
relationshipModelClass
T#,N,V_relationshipModelClass
transient
TB,N,V_transient
relationshipValidationProperties
T{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}},N,V_relationshipValidationProperties
validRelationshipHandler
T@?,C,N,V_validRelationshipHandler
entityTranslator
T@"MPMediaLibraryEntityTranslator",R,N
+[MPMediaLibraryEntityTranslator _translatorForMPModelClass:mlcoreEntityClass:create:transient:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Data Model/MPMediaLibraryEntityTranslator.mm
MPModelClass && (entityClass || transient)
@28@?0@"MPMediaLibraryEntityTranslationContext"4{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}20
Sorting by %@ is ambiguous, please define sortTransformer.
{vector<mlcore::SortDescriptor, std::__1::allocator<mlcore::SortDescriptor> >=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::__1::allocator<mlcore::SortDescriptor> >=^{SortDescriptor}}}20@?0{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}4@"NSSortDescriptor"16
Relationship mapping missing for %@:%@
Property mapping missing for %@:%@
_default
v16@?0@"NSString"4@"MPPropertySet"8^B12
__%@__PROPERTY
Property key not found for %@:%@
Property translator mapping missing for %@:%@
B20@?0@"MPMediaLibraryEntityTranslationContext"4^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}12
Sort descriptor must have at least one key.
Sort descriptor missing transformer: %@
No entityQueryBlock was mapped for %@
%@ entityQueryBlock did not return a query.
MPModelGenericObject can only be sorted by MPMulitSortDescriptor.
All relatedProperties must have the same number of core sort descriptors.
v16@?0@"NSString"4@"NSString"8^B12
MPModelClass
T#,R,N,V_MPModelClass
entityClass
T^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=l[40c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}},R,N,V_entityClass
TB,R,N,GisTransient,V_transient
allowedItemPredicatesBlock
T@?,C,N,V_allowedItemPredicatesBlock
entityQueryBlock
T@?,C,N,V_entityQueryBlock
T@"NSArray",&,N,V_allowedItemIdentifiers
T@"NSArray",&,N,V_scopedContainers
multiQuery
TB,N,GisMultiQuery,V_multiQuery
modelKind
T@"MPModelKind",&,N,V_modelKind
deviceIdentifier
T@"NSString",C,N,V_deviceIdentifier
generation
T@"NSString",C,N,V_generation
itemIdentifier
removed
TB,R,N,GisRemoved
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Tracklist/MPTracklistEntry.m
Non-contiguous entries in MPTracklistEntryAddBranch [too many next]
Non-contiguous entries in MPTracklistEntryAddBranch [disconnected previous]
Non-linear entries in MPTracklistEntryAddBranch
positionKey
T@"MPTracklistEntryPositionKey",R,N,V_positionKey
nextEntries
T@"NSMutableArray",R,N,V_nextEntries
previousEntry
T@"MPTracklistEntry",W,N,V_previousEntry
Ti,N,V_branchDepth
dataSourceRemoved
TB,R,N,GisDataSourceRemoved,V_dataSourceRemoved
identifiersItemEntryMap
T@"NSMutableDictionary",R,N,V_identifiersItemEntryMap
lastItemEntry
T@"MPTracklistItemEntry",&,N,V_lastItemEntry
%@ - %@
T@"NSString",R,N,V_itemIdentifier
rootEntry
T@"MPTracklistItemEntry",W,N,V_rootEntry
clonedEntries
T@"NSMutableArray",R,N,V_clonedEntries
latestUserClone
T@"MPTracklistItemEntry",R,N
T{?=BBBBBBBi},R,N
dataSourceMoved
TB,R,N,GisDataSourceMoved,V_dataSourceMoved
userRemoved
TB,R,N,GisUserRemoved,V_userRemoved
userMoved
TB,R,N,GisUserMoved,V_userMoved
moviePlayer
T@"MPMoviePlayerController",R,N
%@s cannot be initialized externally.
command
T@"MPRemoteCommand",R,N,V_command
Td,R,N,V_timestamp
Td,R,N,V_interval
TI,R,N,V_type
rating
Tf,R,N,V_rating
playbackRate
Tf,R,N,V_playbackRate
negative
TB,R,N,GisNegative,V_negative
requestingDefermentToPlaybackQueuePosition
TB,R,N,GisRequestingDefermentToPlaybackQueuePosition,V_requestingDefermentToPlaybackQueuePosition
Ti,R,N,V_type
trackID
T@"NSNumber",R,N,V_trackID
T@"NSString",R,N,V_stationHash
T@"NSNumber",R,N,V_stationID
positionTime
Td,R,N,V_positionTime
preservesRepeatMode
TB,R,N,V_preservesRepeatMode
preservesShuffleMode
TB,R,N,V_preservesShuffleMode
stationURL
T@"NSURL",R,N,V_stationURL
requestingPlaybackInitialization
TB,R,N,GisRequestingPlaybackInitialization,V_requestingPlaybackInitialization
playbackQueue
T@"MPRemotePlaybackQueue",R,N,V_playbackQueue
insertAfterContextItemID
T@"NSString",R,N,V_insertAfterContextItemID
destinationOffset
Ti,R,N,V_destinationOffset
supportedInsertionPositions
T@"NSArray",C,N,V_supportedInsertionPositions
insertionPosition
Ti,R,N,V_insertionPosition
insertAfterContentItemID
T@"NSString",R,N,V_insertAfterContentItemID
languageOption
T@"MPNowPlayingInfoLanguageOption",R,N,V_languageOption
setting
Ti,R,N,V_setting
playbackProgress
Tf,R,N,V_playbackProgress
itemIdentifierQueryResults
T{shared_ptr<std::__1::vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > > >=^{vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > >}^{__shared_weak_count}},R,N,V_itemIdentifierQueryResults
itemQueryResults
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_itemQueryResults
T@"MPModelLibraryRequest",R,N,V_request
faulting not implemented yet
MPModelStoreBrowseRequestDomain
MPModelStoreBrowseRequestFilteringPolicy
MPModelStoreBrowseRequestLoadAdditionalContentURL
loadAdditionalContentURL
T@"NSURL",C,N,V_loadAdditionalContentURL
previousRetrievedNestedResponse
T@"MPModelStoreBrowseResponse",&,N,V_previousRetrievedNestedResponse
domain
Ti,N,V_domain
filteringPolicy
Ti,N,V_filteringPolicy
previousResponse
T@"MPModelStoreBrowseResponse",&,N,V_previousResponse
albumKind
T@"MPModelAlbumKind",R,C,N,V_albumKind
MPModelPropertyPersonHasSocialPosts
MPModelPropertyArtistHasBiography
hasBiography
MPModelPropertyArtistArtwork
MPModelPropertyArtistEditorialArtwork
editorialArtworkCatalogBlock
MPModelRelationshipArtistGenre
MPModelPropertyArtistSongCount
songCount
MPModelPropertyArtistAlbumCount
albumCount
MPModelPropertyArtistLibraryAddedDate
TB,N,V_hasBiography
Ti,N,V_songCount
Ti,N,V_albumCount
T@"MPModelGenre",C,N,V_genre
T@?,C,N,V_editorialArtworkCatalogBlock
com.apple.airplay.password
MPAVRoutingControllerDidPickRouteNotification
MPAVRoutingControllerRouteUserInfoKey
<%@ %p "%@" dataSource=%@>
<%@ %p dataSource=%@>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAVRoutingController.m
appleTV
airpods
beats-powerbeats
beats-solo
beats-x
carPlay
homePod
headphones
speaker
genericTV
genericBluetooth
genericSpeaker
-[MPAVRoutingController _activeAudioRouteDidChangeNotification:]_block_invoke
AVSystemController_ActiveAudioRouteDidChangeNotificationParameter_ShouldPause
MPLogCurrentRoutes
iPhone
iphone
iPad
ipad
iPod
ipod
DeviceClass
com.apple.airplay.deviceAvailability
T@"<MPAVRoutingControllerDelegate>",W,N,V_delegate
dataSource
T@"MPAVRoutingDataSource",R,N,V_dataSource
T@"NSString",C,N,V_name
discoveryMode
Ti,N,V_discoveryMode
externalScreenType
availableRoutes
category
T@"NSString",C,N,V_category
routeTypes
Ti,N,V_routeTypes
pickedRoute
T@"MPAVRoute",R,N
pendingPickedRoute
T@"MPAVRoute",R,N,V_pendingPickedRoute
volumeControlIsAvailable
MPModelPropertyComposerLibraryAddedDate
T@"NSDictionary",C,N,V_additionalUserInfo
T@"NSString",C,N,V_clientName
Ti,N,V_clientType
Tq,N,V_clientVersion
T@,&,N,V_hierarchyToken
T@"NSString",C,N,V_serviceIdentifier
Tq,N,V_sessionID
System
Library
PrivateFrameworks
RTCReporting.framework
RTCReporting
kRTCReportingSessionInfoClientType
kRTCReportingSessionInfoClientVersion
kRTCReportingSessionInfoSessionID
kRTCReportingSessionInfoBatchEvent
kRTCReportingSessionInfoRequireUserInfo
kRTCReportingSessionInfoHierarchyToken
kRTCReportingUserInfoClientName
kRTCReportingUserInfoServiceName
v8@?0@"SSVFairPlaySubscriptionStatus"4
v12@?0@"SSVPlaybackLeaseResponse"4@"NSError"8
playbackLeaseRequest
T@"SSVPlaybackLeaseRequest",C,N,V_playbackLeaseRequest
_MediaLibrary_coreLibrary
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},N,V__MediaLibrary_coreLibrary
MediaLibraryCore.framework
T{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}},R,N
SectionHeaders
LocalizedSectionHeaders
SectionIndices
LocalizedSectionIndices
NameTransform
FirstCharacterAfterLanguage
LastCharacter
Headers
InsignificantSortPrefixes
MPStoreAVItemErrorDomain
MPStoreAVItemRentalCheckoutRequestDidFinishNotification
MPStoreAVItemUserInfoKeyStreamingErrorCode
com.apple.MediaPlayer.MPStoreAVItem.accessQueue
com.apple.MediaPlayer.MPStoreAVItem.persistenceQueue
v20@?0@"MPSubscriptionStatusPlaybackInformation"4B8B12@"NSError"16
@"MPStoreDownload"8@?0@"MPStoreDownloadManager"4
v12@?0@"MPStoreDownload"4@"NSError"8
ServiceIdentifier
HierarchyToken
StorefrontID
@"NSDictionary"8@?0@"NSURL"4
v12@?0@"MPStreamingDownloadSession"4@"NSError"8
wapi
CELL_RESTRICTED_ALERT_TITLE_WLAN_MUSIC
CELL_RESTRICTED_ALERT_TITLE_WLAN_VIDEOS
CELL_RESTRICTED_ALERT_TITLE_MUSIC
CELL_RESTRICTED_ALERT_TITLE_VIDEOS
CELL_RESTRICTED_ALERT_BODY_WLAN_MUSIC
CELL_RESTRICTED_ALERT_BODY_WLAN_VIDEOS
CELL_RESTRICTED_ALERT_BODY_MUSIC
CELL_RESTRICTED_ALERT_BODY_VIDEOS
SETTINGS
prefs:root=MUSIC
prefs:root=STORE
v8@?0@"AVPlayerItem"4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPStoreAVItem.m
com.apple.MediaPlayer.MPStoreAVItem.operationQueue
SSVSecureKeyDeliveryErrorUserInfoKeyResponseStatus
app.music.uploaded-content
app.music.match
app.music.purchase
app.music.subscription
.cloud
movpkg
AlwaysUse64kbpsQuality
com.apple.mobileipod
AlwaysUse256kbpsQuality
CHAPTER_TITLE_FORMAT_%u_%u
v12@?0@"MPStorePlayWhileDownloadSession"4@"NSError"8
B4@?0
CHAPTER_INDEX_FORMAT_%u
rtcReportingParentHierarchyToken
rtcReportingServiceIdentifier
rtcReportingAssetType
serverPlaybackContextDataForStoppingLease
T@"NSData",&,N,V_serverPlaybackContextDataForStoppingLease
rentalCheckoutRequired
TB,R,N,GisRentalCheckoutRequired,V_rentalCheckoutRequired
rentalID
TQ,R,N,V_rentalID
allowsStoreBagStreamingKeyURLsFallback
privateListeningEnabled
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
playbackItemMetadata
T@"MPMediaPlaybackItemMetadata",R,N,V_playbackItemMetadata
streamType
assetSourceStoreFrontID
T@"NSString",C,N,V_assetSourceStoreFrontID
equivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
didDeferLeaseStart
isStreamingLowQualityAsset
lastResourceLoadingError
storeDownload
T@"MPStoreDownload",R,N
storePlaybackEndpointType
usesSubscriptionLease
MAAudibleMediaPrefCopyPreferDescriptiveVideo
initMAAudibleMediaPrefCopyPreferDescriptiveVideo
softLinkMAAudibleMediaPrefCopyPreferDescriptiveVideo
MPPlaybackContextShuffleType
MPPlaybackContextRepeatType
MPPlaybackContextShouldStartPlayback
MPPlaybackContextShouldRestartPlayback
MPPlaybackContextStartIndex
MPPlaybackContextPlayActivityFeatureName
MPPlaybackContextPlayActivityRecommendationData
startIndex
shuffle
repeat
startPlayback
restartPlayback
<%@:%p
 %@=%@
Ti,N,V_startIndex
shouldStartPlayback
TB,N,V_shouldStartPlayback
requireFinalTracklist
TB,N,V_requireFinalTracklist
shouldRestartPlayback
TB,N,V_shouldRestartPlayback
playerCurrentItem
enabledGestureTypes
Ti,N,V_enabledGestureTypes
simultaneousGestureTypes
Ti,N,V_simultaneousGestureTypes
swipeDelegate
T@"<MPSwipableViewDelegate>",W,N,V_swipeDelegate
swipeDirection
Ti,R,N,V_swipeDirection
tapCount
TI,V_lastTapCount
MPContentTasteControllerDidChangeNotification
MPContentTasteControllerNotificationUserInfoKeyContentType
MPContentTasteControllerNotificationUserInfoKeyMediaEntity
MPContentTasteControllerNotificationUserInfoKeyPlaylistGlobalID
MPContentTasteControllerNotificationUserInfoKeyStoreAdamID
MPContentTasteControllerNotificationUserInfoKeyTasteType
MPContentTasteControllerWillSetTasteTypeNotification
com.apple.MediaPlayer.MPContentTasteController.accessQueue
unknown entity type
v12@?0@"MPMediaPlaylist"4@"NSError"8
invalid playlist global ID
v12@?0@"NSArray"4@"NSError"8
v24@?0q4r^@12I16^B20
T@"MPContentTasteController",R,N
com.apple.MediaPlayer.MPStoreItemMetadataRequestController.accessQueue
v8@?0@"MPStoreItemMetadataCacheKey"4
com.apple.MediaPlayer.MPStoreItemMetadataRequestController
v12@?0@"ICStorePlatformMetadata"4^B8
v16@?0@"NSString"4@"MPStoreItemMetadata"8^B12
v16@?0@"NSArray"4@"<ICStorePlatformResponse>"8@"NSError"12
v12@?0@"<ICStorePlatformResponse>"4@"NSError"8
v16@?0@"MPStoreItemMetadataCacheKey"4@"MPStoreItemMetadataCache"8^B12
sharedStoreItemMetadataRequestController
T@"MPStoreItemMetadataRequestController",R,N
easyTouchDefaultHitRectInsets
T{UIEdgeInsets=ffff},R,N
easyTouchDefaultCharge
alignmentRectInsets
T{UIEdgeInsets=ffff},N,V_alignmentRectInsets
holdDelayInterval
Td,N,V_holdDelayInterval
holding
TB,R,N,GisHolding
hitTestDebugEnabled
TB,N,V_hitTestDebugEnabled
fastForwardButton
15-inner
rewindButton
geniusButton
mailLinkButton
playbackSpeedButton
normal.png
repeatButton
shuffleButton
15-ff-bezel
15-rw-bezel
nowplaying_atom.png
nowplaying_atom_pressed.png
mail.png
double.png
half.png
repeat_off.png
repeat_on_1.png
repeat_on.png
shuffle_off.png
shuffle_on.png
rewindOpacityAnimation
opacity
transform
rewindTransformAnimation
T@"<MPPlaybackControlsDelegate>",W,N,V_delegate
shuffleIsOn
hideGeniusButton
isScrubbing
localizedScrubSpeedText
mailButtonImage
T@"UIImage",R,N
shouldOverrideProgressTimeLabelStyle
repeatButtonImage
shuffleButtonImage
detailScrubbingHidesControls
playlistPersistentID
playlistAttributes
seedItems
dateCreated
dateModified
isWorkoutMix
isGeniusMix
isGeniusPlaylist
geniusMixRepresentativeArtists
isVoiceMemos
isActivePlaylist
isActiveGeniusPlaylist
isActiveOnTheGoPlaylist
isUserEditable
isDeletable
isLimitedDynamicSmartPlaylist
isHidden
descriptionInfo
isEditable
playCount
playCountSinceSync
parentPersistentID
isFolder
isPurchasesPlaylist
isCurrentDevicePurchasesPlaylist
isPlaybackHistoryPlaylist
isIgnoredSyncing
hasItems
storeCloudID
cloudGlobalID
cloudVersionHash
cloudShareURL
cloudIsPublic
cloudIsVisible
cloudIsSubscribed
cloudIsCuratorPlaylist
cloudAuthorStoreID
cloudAuthorDisplayName
cloudAuthorStoreURL
cloudUserCount
cloudGlobalPlayCount
cloudGlobalLikeCount
distinguishedKind
isITunesSynced
externalVendorDisplayName
externalVendorContainerTag
externalVendorIdentifier
isExternalVendorPlaylist
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMediaPlaylist.m
Playlist was initialized with a multiverse identifier containing the wrong object type (%d)
subclass must implement
authorDisplayName
CFBundleDisplayName
CFBundleExecutable
T@"NSString",C,N,V_authorDisplayName
T@"NSString",C,N,V_descriptionText
MPModelPropertyTVEpisodeTitle
MPModelPropertyTVEpisodeDescriptionText
MPModelPropertyTVEpisodeDuration
MPModelPropertyTVEpisodeHasCloudSyncSource
MPModelPropertyTVEpisodeMusicShow
musicShow
MPModelPropertyTVEpisodeNumber
episodeNumber
MPModelPropertyTVEpisodeExplicitRating
MPModelRelationshipTVEpisodeLocalFileAsset
MPModelRelationshipTVEpisodePlaybackPosition
MPModelRelationshipTVEpisodeStoreAsset
MPModelRelationshipTVEpisodeSeason
season
MPModelRelationshipTVEpisodeShow
show
MPModelPropertyTVEpisodeReleaseDate
MPModelPropertyTVEpisodeType
episodeType
MPModelPropertyTVEpisodeTypeDisplayName
episodeTypeDisplayName
MPModelPropertyTVEpisodeLibraryAdded
MPModelPropertyTVEpisodeLibraryAddedDate
MPModelPropertyTVEpisodeLibraryAddEligible
MPModelPropertyTVEpisodeKeepLocalEnableState
MPModelPropertyTVEpisodeKeepLocalManagedStatus
MPModelPropertyTVEpisodeArtwork
TB,N,GisMusicShow,V_musicShow
Ti,N,V_episodeNumber
T@"MPModelTVSeason",&,N,V_season
T@"MPModelTVShow",&,N,V_show
Ti,N,V_explicitRating
T@"NSDate",C,N,V_releaseDate
Ti,N,V_episodeType
T@"NSString",C,N,V_episodeTypeDisplayName
globalPlaylistID
T@"NSString",C,N,V_globalPlaylistID
shouldLibraryAdd
TB,N,V_shouldLibraryAdd
TOTAL
<%@:%p %@, %@, SystemFilters=%@>
DISABLED
enabled
 ordered by %@
MPFilterPredicates
MPGroupingType
MPIgnoreSystemFilterPredicates
MPIgnoreRestrictionsPredicates
MPIncludeNonLibraryEntities
MPIncludeEntitiesWithBlankNames
MPEntityOrder
MLEntityOrder
MLEntityOrderSorted
MLIsFilteringDisabled
MPStaticEntities
MPStaticEntityType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMediaQuery.m
Cannot decode protobuf object of type %@
v16@?0@"MPMediaItemCollection"4I8^B12
filtering_disabled
v8@?0@4
v20@?0q4@"NSDictionary"12^B16
T@"MPMediaLibrary",&,N
itemPropertiesToFetch
T@"NSSet",C,N
collectionPropertiesToFetch
orderingProperties
T@"NSArray",C,N,G_orderingProperties,S_setOrderingProperties:
orderingDirectionMappings
T@"NSDictionary",C,N,G_orderingDirectionMappings,S_setOrderingDirectionMappings:
sortItems
useSections
entityLimit
_hasItems
_hasCollections
_countOfItems
_countOfCollections
_hasStaticEntities
itemPersistentIdentifiers
collectionPersistentIdentifiers
itemSectionInfo
T@"MPMediaQuerySectionInfo",R,N
collectionSectionInfo
excludesEntitiesWithBlankNames
includeEntitiesWithBlankNames
specifiesPlaylistItems
shouldIncludeNonLibraryEntities
willGroupEntities
ignoreSystemFilterPredicates
ignoreRestrictionsPredicates
_representativeCollection
T@"MPMediaItemCollection",R,N
_representativeCollectionGroupingType
filterPredicates
T@"NSSet",&,N
collections
groupingType
itemSections
collectionSections
MPMediaPredicate is an abstract class and cannot be decoded.
MPMediaPredicate is an abstract class and cannot be encoded.
MPProperty
MPValue
MPComparisonType
'%@'
'%@' %@
equal to
not equal to
greater than
greater than or equal
less than
less than or equal
bit test
contains
starts with
ends with
<%@ %p> '%@' %@ %@
Cannot decode object of type %@
MPMediaPropertyPredicate cannot filter using the %@ property.
property
T@,C,N
comparisonType
conditionPredicate
T@"MPMediaPredicate",R,C,N,V_conditionPredicate
thenPredicate
T@"MPMediaPredicate",R,C,N,V_thenPredicate
elsePredicate
T@"MPMediaPredicate",R,C,N,V_elsePredicate
MPPredicates
T@"NSArray",R,C,N,V_predicates
containmentProperty
containmentValues
<%@ %p property:'%@' values:%@>
T@"NSString",R,C,N,V_property
values
T@"NSSet",R,C,N,V_values
shouldContain
persistentIDs
<%@ %p> should%@ contain %lu persistent IDs
TI,R,N,V_count
Tr^q,R,N,V_persistentIDs
TB,R,N,V_shouldContain
MPSearchString
MPProperties
<%@ %p> %@ matches '%@'
searchString
T@"NSString",C,N,V_searchString
properties
T@"NSSet",C,N,V_properties
MPMediaGroupingTitle
MPMediaGroupingSongsByAlbumArtist
MPMediaGroupingAlbum
MPMediaGroupingAlbumByArtist
MPMediaGroupingAlbumByAlbumArtist
MPMediaGroupingAlbumByComposer
MPMediaGroupingArtist
MPMediaGroupingAlbumArtist
MPMediaGroupingComposer
MPMediaGroupingGenre
MPMediaGroupingPlaylist
MPMediaGroupingPodcastTitle
MPMediaGroupingSeriesName
MPMediaGroupingSeasonName
MPMediaGroupingAudioBookTitle
MPMediaGroupingAlbumPersistentID
MPMediaGroupingAlbumRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyAdded
MPMediaGroupingAlbumArtistRecentlyPlayed
MPMediaGroupingComposerRecentlyAdded
MPMediaGroupingComposerRecentlyPlayed
MPMediaGroupingGenreRecentlyAdded
MPMediaGroupingGenreRecentlyPlayed
(unknown grouping type)
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.operationQueue
com.apple.MediaPlayer.MPModelLibraryImportChangeRequestOperation.accessQueue
T@"MPModelLibraryImportChangeRequest",C,N,V_request
editorial
external
user-shared
personal-mix
@"MPArtworkCatalog"8@?0@"MPModelPlaylist"4
@"NSArray"8@?0I4
v8@?0@"MPModelCurator"4
v8@?0@"MPModelPlaylist"4
MPMusicPlayerControllerPlaybackStateDidChangeNotification
MPMusicPlayerControllerPlaybackStateKey
MPMusicPlayerControllerNowPlayingItemDidChangeNotification
MPMusicPlayerControllerNowPlayingItemPersistentIDKey
MPMusicPlayerControllerVolumeDidChangeNotification
MPMusicPlayerControllerShuffleModeDidChangeNotification
MPMusicPlayerControllerRepeatModeDidChangeNotification
MPMusicPlayerControllerItemPlaybackDidEndNotification
MPMusicPlayerControllerFinishedItemPersistentIDKey
MPMusicPlayerControllerQueueDidChangeNotification
MPMusicPlayerControllerStartTimeDictionaryKey
MPMusicPlayerControllerEndTimeDictionaryKey
MPMusicPlayerControllerErrorDomain
com.apple.Music
_MPMusicPlayerControllerInternalServerDiedNotification
Audio/Video
music://show-now-playing
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMusicPlayerController.m
query must be a MPMediaQuery
music://subscribe
com.apple.mobileipod.MPMusicPlayerController.launched
com.apple.Music.MPMusicPlayerMigServerExists
com.apple.Music.MPMusicPlayerMigServer
applicationMusicPlayer
T@"MPMusicPlayerController",R
applicationQueuePlayer
T@"MPMusicPlayerApplicationController",R
systemMusicPlayer
T@"MPMusicPlayerController<MPSystemMusicPlayerController>",R
iPodMusicPlayer
shuffleMode
nowPlayingItem
T@"MPMediaItem",C,N
indexOfNowPlayingItem
SBApplication
com.apple.MediaPlayer.MPMusicPlayerController
inBlockHandlingPlaybackStateChangedMessageFromServer
FBSSystemService
initFBSSystemService
classFBSSystemService
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FrontBoardServicesLibrary
FBSOpenApplicationOptionKeyActivateSuspended
initFBSOpenApplicationOptionKeyActivateSuspended
BKSProcessAssertion
initBKSProcessAssertion
classBKSProcessAssertion
/System/Library/PrivateFrameworks/AssertionServices.framework/AssertionServices
AssertionServicesLibrary
endReasonType
TI,N,V_endReasonType
MPArtworkCatalogEffectOptionColorAnalyzerAlgorithm
MPArtworkRepresentationBackingFileURLAssociatedKey
<%@:%p token=%@ fittingSize=%@ destinationScale=%lf destination=%@>
v12@?0@"MPArtworkRepresentation"4@"NSError"8
v16@?0@4@"UIImage"8B12
v12@?0@"MPArtworkColorAnalyzer"4@"MPArtworkColorAnalysis"8
v8@?0@?<v@?@@"NSError">4
v8@?0^{CGImage=}4
v12@?0@"UIImage"4@"NSError"8
v12@?0@"NSURL"4@"NSError"8
cacheIdentifier
T@"NSString",C,N,V_cacheIdentifier
requestingContext
T@,W,N,V_requestingContext
destination
T@,W,N,V_destination
configurationBlock
T@?,C,N,V_configurationBlock
loadingRepresentation
TB,GisLoadingRepresentation,V_loadingRepresentation
token
T@,&,N,V_token
T@"<MPArtworkDataSource>",W,N,V_dataSource
cache
T@"NSCache",R,N
visualIdenticalityIdentifier
T@"<MPArtworkDataSourceVisualIdenticality>",R,N
renderHint
TI,N,V_renderHint
destinationScale
Tf,N,V_destinationScale
fittingSize
T{CGSize=ff},N,V_fittingSize
scaledFittingSize
hasImageOnDisk
T@"UIImage",&,N,V_image
representationSize
T{CGSize=ff},N,V_representationSize
representationToken
T@,&,N,V_representationToken
i12@?0@"NSValue"4@"NSValue"8
artworkIdentifier
T@"NSString",C,N,V_artworkIdentifier
T@"MPArtworkCatalog",R,N
artworkCatalogBackingFileURL
artworkCatalog
artworkCache
conditionalPredicate
hasConditionalPredicate
T@"MPPMediaPredicate",&,N,V_conditionalPredicate
hasThenPredicate
T@"MPPMediaPredicate",&,N,V_thenPredicate
hasElsePredicate
T@"MPPMediaPredicate",&,N,V_elsePredicate
com.apple.MediaPlayer.MPAsyncOperation.accessQueue
isExecuting
isFinished
T@"NSError",R,C,N,V_error
com.apple.MediaPlayer.%@
follows
user
enableAutoFollow
true
false
enable
userProfile
profile
autoFollowEnabled
T@"MPStoreFollowStatusController",R,N
hasCacheEntries
targetEntityId
targetEntityType
targetEntityID
T@"NSNumber",&,N,V_targetEntityID
Ti,N,V_targetEntityType
globalID
albumTitle
playbackDuration
containerItemPID
chosenByAutoFill
comments
storeItemAdamID
storeAccountID
storeDownloaderAccountID
storeFamilyAccountID
storeItemURL
storePlaylistAdamID
storeArtistAdamID
storeAlbumArtistAdamID
storeComposerAdamID
storeGenreAdamID
storeRentalID
isRental
isITunesU
isAudible
isMusicVideo
isHD
contentRating
includeInShuffle
shortDescriptionInfo
movieInfo
podcastTitle
seriesName
seasonName
showSortType
episodeSubSortOrder
isMusicShow
collectionDescription
skipCount
skipCountSinceSync
lastSkippedDate
rememberBookmarkTime
lastPlayedDate
userGrouping
sortTitle
sortArtist
sortAlbumTitle
sortAlbumArtist
sortComposer
filePath
verifiedIntegrity
locationFileName
hasAvailableItemArtwork
chapters
chapterArtworkTimes
albumPID
artistPID
albumArtistPID
genrePID
composerPID
podcastPID
hasBeenPlayed
isDemoRental
rentalDuration
rentalPlaybackDuration
rentalPlaybackStartTime
rentalStartTime
rentalExpirationDate
isOTAPurchased
isStreamingQuality
isTemporaryCloudDownload
durationInSamples
gaplessHeuristicInfo
gaplessEncodingDelay
gaplessEncodingDrain
gaplessLastFrameResync
podcastGUID
eqPreset
audioTrackID
audioTrackLocale
hasAlternateAudio
hasSubtitles
isPendingSync
hasProtectedAsset
hasAppleMusicDRM
needsRestore
storeCloudStatus
storeRedownloadParameters
downloadIdentifier
storeSagaID
restricted
storeBookmarkIdentifier
storeBookmarkTimestamp
storeBookmarkEntityRevision
isAlarm
isStoreRedownloadable
likedStateChanged
dateAccessed
artistOrderSection
purchaseHistoryID
isLocal
homeSharingID
isDeprotected
dateAdded
albumYear
albumKeepLocal
artistKeepLocal
albumArtistKeepLocal
genreKeepLocal
storeDatePurchased
storeExtrasURL
storeNeedsReporting
subscriptionStoreItemAdamID
storeAssetProtectionType
radioStationID
advertisementUniqueID
advertisementType
isArtistUploadedContent
cloudIsInMyLibrary
isExplicit
isPlayable
isMatchAudio
isNonLibraryOwnedSubscriptionContent
significantAmountHasBeenPlayed
syncID
entityRevision
hasNonPurgeableAsset
remoteLocationId
isInMyLibrary
storeCloudAssetAvailable
composerOrArtist
hasHLSVideo
storeCloudAlbumID
storeLyricsAvailable
playbackStoreID
availableItemArtworkToken
fetchableItemArtworkToken
fetchableItemArtworkSource
availableItemScreenshotToken
fetchableItemScreenshotToken
fetchableItemScreenshotSource
anyAudio
music
podcast
audioBook
voiceMemo
iTunesU-audio
anyVideo
home-video
podcast-video
iTunesU-video
anyMedia
AnyAudio
Music
Podcast
AudioBook
VoiceMemo
ITunesUAudio
AnyVideo
Movie
TVShow
HomeVideo
VideoPodcast
MusicVideo
AnyMedia
com.apple.LegacyMusic
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMediaItem.m
invalid parameter
v16@?0@"NSString"4@8^B12
viewPodcast?id=%1$llu
viewAudiobook?id=%2$llu
viewMovie?id=%2$llu
viewAlbum?id=%1$llu
viewTVSeason?id=%1$llu
http://itunes.apple.com/WebObjects/MZStore.woa/wa/
podcast-episode
book
feature-movie
tv-episode
podcast-url
&%@=%@
itms://?action=library-link%@
T@"NSDate",C,N
effectiveStopTime
effectiveAlbumArtist
isUsableAsRepresentativeItem
TQ,R,D,N
T@"MPMediaItemArtwork",R,N
explicitItem
TB,R,N,GisExplicitItem
cloudItem
TB,R,N,GisCloudItem
protectedAsset
TB,R,N,GhasProtectedAsset
podcastPersistentID
v12@?0@"NSString"4^B8
MPPersistentID
v12@?0@4^B8
image must be non-nil
@"UIImage"12@?0{CGSize=ff}4
requestHandler must be non-nil
bounds
imageCropRect
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Data Model/MPModelLibraryKeepLocalStatusRequestOperation.mm
Library view must not be nil.
v8@?0L4
Invalid creation options for MPModelLibraryKeepLocalStatusRequestOperation. downloadableItemsQuery or downloadablePlaylistItemEntityQueryBlock  must be specified
identifyingModelObject
T@"MPModelObject",&,N,V_identifyingModelObject
T@"MPMediaLibraryView",C,N,V_libraryView
redownloadableItemCount
T@"NSNumber",C,N,V_redownloadableItemCount
MPMediaLibraryDidChangeNotification
MPMediaLibraryChangeTypes
MPMediaLibraryChangeTypePlaylists
MPMediaLibraryChangeTypeItemsKey
_MPMediaLibraryAvailableMediaLibrariesDidChangePrivateNotification
MPMediaLibraryAvailableMediaLibrariesDidChangeNotification
MPMediaLibraryDefaultMediaLibraryDidChangeNotification
MPMediaLibraryDynamicPropertiesDidChangeNotification
MPMediaLibraryInvisiblePropertiesDidChangeNotification
MPMediaLibraryDisplayValuesDidChangeNotification
MPMediaLibraryDisplayValuesWillChangeNotification
MPMediaLibrarySyncGenerationDidChangeNotification
MPMediaLibraryConnectionProgressDidChange
MPMediaLibraryStatusDidChangeNotification
MPMediaLibraryRestrictionsDidChangeNotification
MPMediaLibraryFilteringDidChangeNotification
MPMediaLibraryCloudLibraryAvailabilityDidChangeNotification
MPMediaLibraryEntitiesAddedOrRemovedNotification
MPMediaLibraryContentTasteCatalogUpdateOptionInvalidateLocalCache
default_media_library
-[MPMediaLibrary init]_block_invoke
-[MPMediaLibrary init]
com.apple.mediaplayer.MPMediaLibrary
com.apple.mediaplayer.MPMediaLibrary.connectionAssertions
com.apple.mediaplayer.MPMediaLibrary.additionalLibraryFilterPredicatesAccessQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMediaLibrary.m
only keyed coding is supported
MPLibraryDataProviderUID
v8@?0C4
MPMediaLibraryErrorDomain
Connection already in progress
Unable to connect
v8@?0f4
PERMISSION_DENIED
v12@?0I4@"NSError"8
CAPABILITY_MISSING
UNKNOWN_ERROR
MLSyncPlaylistId
v8@?0@"MPStoreDownload"4
values/properties must have the same count (%lu != %lu)
ipod-library
only one of item/itemsResultSet should be set
v16@?0@?<v@?@"NSNumber">4I8^B12
v8@?0@"NSNumber"4
@"NSNumber"8@?0@"NSArray"4
v16@?0@"<MPMediaLibraryDataProvider>"4@"MPMediaQueryCriteria"8@?<v@?@"NSNumber">12
v8@?0I4
v20@?0q4I12^B16
v8@?0@"NSNotification"4
com.apple.mediaplayer.MPMediaLibraryRemote
i12@?0@"MPMediaLibrary"4@"MPMediaLibrary"8
unimplemented
-[MPMediaLibrary getPlaylistWithUUID:creationMetadata:completionHandler:]
NOT_FOUND
v16@?0Q4@"NSError"12
One or more store item metadata instances didn't have a valid storeID.
One or more store item metadata instances failed to be converted into SSLookupItems.
One or more persistentID failed to be converted into MPMediaItem.
removalReason
_MLCoreStorage
T@,&,N,V__MLCoreStorage
protectedContentSupportStorageURL
%p: %@
T@"NSString",R,N,V_identifier
entity
T@"MPMediaEntity",R,N,V_entity
anchor
T@"NSString",R,C,N,V_anchor
deletionType
Ti,R,N,V_deletionType
v24@?0q4@"NSString"12i16^B20
v28@?0q4i12@"NSString"16i20^B24
_syncValidity
SKCloudServiceController
initSKCloudServiceController
classSKCloudServiceController
/System/Library/Frameworks/StoreKit.framework/StoreKit
StoreKitLibrary
com.apple.MediaPlayer.MPModelRequest.sharedQueue
; sectionProperties = %@
; label = %@
MPModelRequestLabel
MPModelRequestSectionProperties
MPModelRequestItemProperties
sectionKind
MPModelRequestSectionSortDescriptors
MPModelRequestItemSortDescriptors
MPModelRequestItemShouldIncludeContentItemID
shouldIncludeContentItemID
TB,N,V_shouldIncludeContentItemID
T@"MPModelKind",&,N,V_sectionKind
sectionProperties
T@"MPPropertySet",C,N,V_sectionProperties
sectionSortDescriptors
T@"NSArray",C,N,V_sectionSortDescriptors
T@"MPPropertySet",C,N,V_itemProperties
itemSortDescriptors
T@"NSArray",C,N,V_itemSortDescriptors
sectionClass
T#,N
MPModelPropertySectionTitle
clientPID
Ti,N,V_clientPID
clientAuditToken
T^{?=[8I]},N,V_clientAuditToken
context
T@,&,N,V_context
invocation
T@"NSInvocation",&,N,V_invocation
com.apple.
Server
MPArguments
MPReturnValue
deferredInvocations
T@"NSMutableArray",&,N,V_deferredInvocations
Ti,R,N,V_clientPID
T^{?=[8I]},R,N,V_clientAuditToken
clientBundleIdentifier
T@"NSString",R,C,N,V_clientBundleIdentifier
clientBundleVersion
T@"NSString",R,C,N,V_clientBundleVersion
com.apple.Music.
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
bundleVersion
T@"NSString",C,N,V_bundleVersion
B8@?0B4
MusicUIServiceMediaPickerController
com.apple.MusicUIService
v12@?0@"_UIRemoteViewController"4@"NSError"8
mediaTypes
TI,R,N,V_mediaTypes
T@"<MPMediaPickerControllerDelegate>",W,N,V_delegate
allowsPickingMultipleItems
showsCloudItems
showsItemsWithProtectedAssets
prompt
T@"NSString",C,N,V_prompt
MPAVQueueCoordinatorFailedToQueueAnyItemsNotification
MPAVQueueCoordinator
 [anchored]
[reused]
v16@?0@"MPAVItem"4I8^B12
@"MPAVItem"8@?0@"AVPlayerItem"4
T@"MPQueuePlayer",R,N,V_player
T@"<MPAVQueueCoordinatorDataSource>",R,W,N,V_dataSource
T@"MPAVItem",R,N,V_currentItem
T@"NSArray",R,N,V_items
equilibriumAchievedHandler
T@?,C,N,V_equilibriumAchievedHandler
<%@:%p>
%@:%@
MP_associatedQueuePlayer
MP_associatedPlayer
T@"MPQueuePlayer",N
i12@?0@"MPStoreItemMovieClipAsset"4@"MPStoreItemMovieClipAsset"8
@"MPArtworkCatalog"8@?0@"MPModelMediaClip"4
v8@?0@"MPModelStaticAsset"4
v8@?0@"MPModelMediaClip"4
configuration
T@"MPLibraryKeepLocalStatusObserverConfiguration",&,N,V_configuration
currentStatus
T{MPLibraryActiveKeepLocalStatus=if},R,N,V_currentStatus
statusBlock
T@?,C,N,V_statusBlock
pendingItemIdentifiers
T@"NSArray",C,N,V_pendingItemIdentifiers
downloadEnabledItemCount
Ti,N,V_downloadEnabledItemCount
nonPurgeableItemCount
Ti,N,V_nonPurgeableItemCount
Ti,N,V_redownloadableItemCount
collectionType
TB,N,GisCollectionType,V_collectionType
managedStatus
Ti,N,V_managedStatus
TB,N,V_hasNonPurgeableAsset
storeRedownloadable
TB,N,GisStoreRedownloadable,V_storeRedownloadable
albumName
albumSortName
albumAlbumArtistPersistentID
albumAlbumArtist
albumRepresentativeItemPersistentID
albumRepresentativeItemArtworkToken
albumCloudStatus
albumAlbumYear
albumLikedState
artistSortName
artistRepresentativeItemPersistentID
artistRepresentativeItemArtworkToken
artistCloudStatus
artistArtistArtworkToken
albumArtistName
albumArtistSortName
albumArtistRepresentativeItemPersistentID
albumArtistRepresentativeItemArtworkToken
albumArtistCloudStatus
albumArtistStoreID
albumArtistArtistArtworkToken
composerSortName
composerRepresentativeItemPersistentID
composerRepresentativeItemArtworkToken
composerCloudStatus
composerStoreID
genreName
genreRepresentativeItemPersistentID
genreRepresentativeItemArtworkToken
genreCloudStatus
genreStoreID
artistCount
cloudStatus
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMediaItemCollection.m
MPMediaItemCollectionInitException
-init is not supported, use -initWithItems:
MPItems
MPItemsCount
MPRepresentativeItem
MPContainedMediaTypes
MPInitializedContainedMediaTypes
MPMediaItemsQuery
representativeItem
libraryID
Tq,V_libraryID
Tq,V_storeSagaID
downloadReason
Ti,N,V_downloadReason
downloadProgress
Td,N,V_downloadProgress
deviceLibraryID
Tq,R,N,V_deviceLibraryID
Tq,R,N,V_storeItemID
@"MPArtworkCatalog"8@?0@"MPModelArtist"4
errorResolver
T@"MPAVErrorResolver",R,N,V_errorResolver
resolutionHandler
T@?,C,N,V_resolutionHandler
scrubberglow
pulseAnimation
HI_SPEED_SCRUBBING
HALF_SPEED_SCRUBBING
QUARTER_SPEED_SCRUBBING
FINE_SCRUBBING
LIVE
UNKNOWN_DURATION
VideoPlayer_Slider_Track_Hollow
T@"<MPDetailSliderDelegate>",W,N,V_delegate
TB,N,V_allowsScrubbing
detailScrubbingVerticalRange
Tf,N,V_detailScrubbingVerticalRange
availableDuration
Td,N,V_availableDuration
detailScrubbingAvailableForCurrentDuration
timeLabelStyle
Ti,N,V_timeLabelStyle
minTimeLabelWidth
Tf,N,V_minTimeLabelWidth
MPMusicPlayerApplicationControllerQueueTransationQueue
MPMusicPlayerControllerQueueItems
MPMusicPlayerControllerUUID
mutableItems
T@"NSMutableArray",R,N
uuid
T@"NSUUID",R,N,V_uuid
MPMusicPlayerControllerQueueInsertions
MPMusicPlayerControllerQueuePrepends
MPMusicPlayerControllerQueueRemovals
queueDescriptorsToPrepend
queueInsertions
removals
hasModifications
MPSupportsExternallyPlayableContent
MPPlayableContentError
StarkCapability
com.apple.MediaRemote.MPPlayableContentManagerSerialQueue
-init is invalid. Use +sharedManager.
T@"MPPlayableContentManagerContext",&,N,V_context
T@"<MPPlayableContentDataSource>",W,N,V_dataSource
T@"<MPPlayableContentDelegate>",W,N,V_delegate
nowPlayingIdentifiers
T@"NSArray",&,N,V_nowPlayingIdentifiers
indexPath
T@"NSIndexPath",R,N,V_indexPath
serviced
TB,N,V_serviced
CFArrayRef _MPCopyChildContentItemsCallback(MRMediaRemoteIndexPath, CFRange, void *)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPPlayableContentManager.m
Hierarchy depth has exceeded the limit of %d
delegate doesn't support the requested method
v12@?0@"MPContentItem"4@"NSError"8
com.apple.MediaPlayer.MPStoreLyricsRequestOperation.operationQueue
v12@?0@"SSAuthenticateResponse"4@"NSError"8
T@"MPStoreLyricsRequest",C,N,V_request
MPAVRoutingControllerErrorDomain
v16@?0@4i8^B12
T@"<MPLazySectionedCollectionDataSource>",&,N,V_dataSource
T@"MPAVController",R,N
allowForeignAssetPlayback
v8@?0@"NSDictionary"4
UIBackgroundModes
audio
assetStoreFrontOverrides
T@"NSDictionary",C,N,V_assetStoreFrontOverrides
backgroundPlaybackAccess
Ti,N,V_backgroundPlaybackAccess
T@"MPMediaItem",&,N,V_firstItem
geniusMixPlaylist
T@"MPMediaPlaylist",&,N,V_geniusMixPlaylist
hasAudioBackgroundMode
TB,N,V_hasAudioBackgroundMode
T@"MPRadioStation",&,N,V_radioStation
Ti,N,V_repeatMode
seeking
TB,N,V_seeking
Ti,N,V_shuffleMode
startItemID
T@"NSString",C,N,V_startItemID
storeIDs
T@"NSArray",C,N,V_storeIDs
T@"MPMediaQuery",&,N,V_query
queueDescriptor
T@"MPMusicPlayerQueueDescriptor",&,N,V_queueDescriptor
useApplicationSpecificQueue
TB,N,V_useApplicationSpecificQueue
BKSApplicationStateProcessIDKey
initBKSApplicationStateProcessIDKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMusicPlayerControllerServer.m
/System/Library/PrivateFrameworks/BackBoardServices.framework/BackBoardServices
BackBoardServicesLibrary
BKSApplicationStateMostElevatedStateForProcessIDKey
initBKSApplicationStateMostElevatedStateForProcessIDKey
BKSApplicationStateMonitor
initBKSApplicationStateMonitor
classBKSApplicationStateMonitor
MPModelPropertyStaticAssetDuration
MPModelPropertyStaticAssetFlavorType
MPModelPropertyStaticAssetMediaType
MPModelPropertyStaticAssetURL
Ti,N,V_flavorType
Ti,N,V_mediaType
T@"NSURL",C,N,V_url
_MPAVRoutingViewCellIdentifier
AIRTUNES_POPOVER_TITLE
com.apple.mediaplayer.airPlayPasswordAlertDidCancel
v16@?0@"MPAVRoute"4I8^B12
mirroring switches are no longer supported in MPAVRoutingViewController
com.apple.airplay.startlogging
i12@?0@"MPAVRoute"4@"MPAVRoute"8
SECTION
B12@?0@"NSIndexPath"4@"NSIndexPath"8
v12@?0@"NSIndexPath"4@"NSIndexPath"8
com.apple.mediaplayer.airPlayPasswordAlertWillDisappear
v12@?0@"NSString"4B8
com.apple.mediaplayer.airPlayPasswordAlertWillAppear
com.apple.airplaydiagnostics.app.EmbeddedAirPlayDiagnostics
themeDelegate
T@"<MPAVRoutingViewControllerThemeDelegate>",W,N,V_themeDelegate
_routingController
_tableView
T@"UITableView",R,N
_normalCellHeight
_expandedCellHeight
_tableCellsBackgroundColor
T@"UIColor",&,N,S_setTableCellsBackgroundColor:
_tableCellsContentColor
T@"UIColor",&,N,S_setTableCellsContentColor:
_shouldAutomaticallyUpdateRoutesList
TB,N,S_setShouldAutomaticallyUpdateRoutesList:
_shouldPickRouteOnSelection
TB,N,S_setShouldPickRouteOnSelection:
TI,R,N,V_style
T@"<MPAVRoutingViewControllerDelegate>",W,N,V_delegate
avItemType
Ti,N,SsetAVItemType:,V_avItemType
allowMirroring
discoveryModeOverride
T@"NSNumber",C,N,V_discoveryModeOverride
BKSSystemService
initBKSSystemService
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAVRoutingViewController.m
classBKSSystemService
v8@?0^{__CFString=}4
mediaPickerController
T@"MPMediaPickerController",W,N,V_mediaPickerController
STREAMING_AUDIO_LABEL
LOADING_AUDIO_LABEL
T@"<MPVideoControllerProtocol>",W,N,V_videoViewController
playbackErrorDescription
T@"NSString",C,N,V_playbackErrorDescription
MPModelObjectArtworkTokenKey
_MPValuePropertyDictionary
flavor
preview
size
previewDuration
previewURL
_MPMovieMediaTypesAvailableNotification
_MPMovieSourceTypeAvailableNotification
_MPMovieDurationAvailableNotification
_MPMovieNaturalSizeAvailableNotification
playable
hasProtectedContent
T@"AVPlayerItem",R,N
startPlaybackTime
cacheableItemIdentifier
mediaRemoteLyricsItemToken
T^v,R,N,V_mediaRemoteLyricsItemToken
mediaRemoteLyricsItem
T^v,R,N,V_mediaRemoteLyricsItem
T@"MPNowPlayingInfoLyricsItemToken",R,N
userProvided
mediaRemoteLyricsEvent
T^v,R,N,V_mediaRemoteLyricsEvent
startDate
endDate
followProfile
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/NSBundle_MPAdditions.m
unable to find MediaPlayer bundle
uniqueID
T@"NSString",R,N,V_uniqueID
productName
T@"NSString",R,N,V_productName
deviceName
T@"NSString",R,N,V_deviceName
modelIdentifier
T@"NSString",R,N,V_modelIdentifier
TB,R,N,GisPlaying,V_playing
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.accessQueue
com.apple.mediaplayer.MPAbstractNetworkArtworkDataSource.callbackQueue
@16@?0{CGSize=ff}4^i12
response
v16@?0@"NSData"4@"NSURLResponse"8@"NSError"12
Radiosity
image/jpeg
@"NSCachedURLResponse"16@?0{CGSize=ff}4^i12
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
fallbackArtworkRepresentationCache
T@"NSCache",&,N,V_fallbackArtworkRepresentationCache
catalogTaskMap
T@"NSMapTable",&,N,V_catalogTaskMap
pendingRequestToCompletionHandlers
T@"NSMutableDictionary",&,N,V_pendingRequestToCompletionHandlers
URLSession
T@"NSURLSession",&,N,V_URLSession
URLSessionConfiguration
T@"NSURLSessionConfiguration",R,N
com.apple.mediaplayer.MPArtworkDataSourceURLCache.accessQueue
{-1,-1}
MPMusicPlayerPlayParametersQueueDescriptorPlayParameters
MPMusicPlayerPlayParametersQueueDescriptorStartItemPlayParameters
MPMusicPlayerPlayParametersDictionary
MPMusicPlayerPlayParametersIdentifiers
MPMusicPlayerPlayParametersItemKind
MPMusicPlayerPlayParametersIsLibraryContent
MPMusicPlayerQueueDescriptorStartTimes
MPMusicPlayerQueueDescriptorEndTimes
MPMusicPlayerMediaItemQueueDescriptorQuery
MPMusicPlayerMediaItemQueueDescriptorItemCollection
MPMusicPlayerMediaItemQueueDescriptorStartItem
T@"MPMediaQuery",R,C,N
itemCollection
startItem
T@"MPMediaItem",&,N,V_startItem
MPMusicPlayerStoreQueueDescriptorStoreIDs
MPMusicPlayerStoreQueueDescriptorStartItemID
MPMusicPlayerStoreQueueDescriptorStoreFronts
isLibrary
<%@:%p %@>
identifiers
T@"MPIdentifierSet",R,C,N,V_identifiers
T@"NSString",R,C,N,V_itemKind
libraryContent
TB,R,N,GisLibraryContent,V_libraryContent
dictionary
T@"NSDictionary",R,C,N,V_dictionary
<%@:%p queue=%@ startItem=%@>
playParametersQueue
T@"NSArray",C,N,V_playParametersQueue
startItemPlayParameters
T@"MPMusicPlayerPlayParameters",&,N,V_startItemPlayParameters
keyPath
T@"NSArray",C,N,V_keyPath
relatedProperties
T@"NSDictionary",C,N,V_relatedProperties
itemEntityQueryResults
T{shared_ptr<std::__1::map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > > >=^{map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >}^{__shared_weak_count}},R,N,V_itemEntityQueryResults
sectionEntityQueryResult
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_sectionEntityQueryResult
map::at:  key not found
T@"<MPAVErrorResolverDelegate>",W,N,V_delegate
MPModelPropertyMediaClipPreviewArtwork
previewArtworkCatalogBlock
MPModelRelationshipMediaClipStaticAssets
staticAssets
MPModelPropertyMediaClipTitle
T@?,C,N,V_previewArtworkCatalogBlock
T@"NSArray",C,N,V_staticAssets
Disabled
Presence Scan
Detailed Scan
MPConcreteMediaItemInitException
-init is not supported, use -initWithPersistentID:library:
@"MPMediaItem"8@?0@"MPConcreteMediaEntityPropertiesCache"4
 %llu
MPLibrary
v12@?0@4@"NSString"8
cachedPropertyValues
T@"MPConcreteMediaEntityPropertiesCache",R,&,N
@"MPMediaItemCollection"8@?0@"MPConcreteMediaEntityPropertiesCache"4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMediaLibraryDataProvider.m
No persistent ID property could be found for media object of type %d
MPQuery
MPConcreteMediaItemCollection
com.apple.MediaPlayer.MPConcreteMediaPlaylist.accessQueue
NOT_SUPPORTED
sectionInfo
T@"MPMediaQuerySectionInfo",R,C,D,N
v20@?0I4@"NSString"8I12^B16
com.apple.mediaplayer.ResultSetEntities
Wrong class %@
resultSet
T@"<MPMediaLibraryResultSet>",R,N,V_resultSet
com.apple.mediaplayer.EntityProperty
Property can't be nil
dataProvider
T@"<MPMediaLibraryDataProvider>",R,W,N,V_dataProvider
dataProviderEntityClass
T#,R,N,V_dataProviderEntityClass
Tq,R,N,V_identifier
MPCModelPlaybackContext
MPCModelQueueFeeder
requiredPropertiesForStaticMediaClips
playbackRequestEnvironment
T@,C,N,V_playbackRequestEnvironment
T@"MPModelRequest",C,N,V_request
startItemIdentifiers
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
assetStoreFronts
T@"NSDictionary",C,N,V_assetStoreFronts
ml3td_artwork_data
ml3td_radio_station_id
ml3td_advertisement_unique_id
ml3td_advertisement_type
v20@?0{_NSRange=II}4I12^B16
com.apple.MPMediaLibraryDataProviderML3.backgroundTask
com.apple.MPMediaLibraryDataProviderML3.entitiesAddedOrRemovedNotificationQueue
device
v8@?0@"ML3DatabaseConnection"4
SELECT revision FROM entity_revision WHERE class = 1 ORDER BY revision DESC LIMIT 1;
B8@?0@"ML3DatabaseConnection"4
v12@?0@"ICStorePlatformResponse"4@"NSError"8
v16@?0B4@"NSError"8@"NSData"12
items not found
item not found
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPMediaLibraryDataProviderML3.m
No ML3Property for MPProperty: %@
v36@?0q4q12i20i24i28^B32
continuous
iapd
SEASON_DISPLAY_FORMAT_%@
ratingProvider
localizedRating
ratingLevel
localizedReason
%@://%@/%@.%@?%@=%lli
isSourceExternal
entityCache
T@"MPMediaEntityCache",R,N
artworkDataSource
T@"<MPArtworkDataSource>",R,N
requiresAuthentication
propertiesToCache
T@"NSSet",R,N
syncValidity
databasePath
playbackHistoryPlaylistPersistentID
isGeniusEnabled
preferredAudioLanguages
preferredSubtitleLanguages
completeMyCollectionArtworkDataSource
localizedSectionIndexTitles
T@"ML3MusicLibrary",&,N,V_library
T@"MPMediaEntityCache",R,N,V_entityCache
T@"<MPArtworkDataSource>",R,N,V_artworkDataSource
v16@?0i4i8@?<v@?@"MPMediaChapter"I>12
v12@?0@"MPMediaChapter"4I8
@"UIImage"4@?0
NSUInteger MPITScaledVolumeNormalization(float)
MPITScaledVolumeNormalization is Unimplemented
Media-SimTestFiles
TestAudio
TestVideo
Media
/Library/
MPAVRouteConnectionErrorDomain
_MPAVRouteConnectionDidInvalidateNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAVRouteConnection.m
externalDevice
com.apple.MediaPlayerFramework.MPAVRouteConnection.accessQueue
com.apple.MediaPlayerFramework.MPAVRouteConnection.calloutQueue
v12@?0I4^{__CFError=}8
v12@?0^{__CFString=}4^{__CFData=}8
v16@?0{?=II}4@?<v@?^{__CFString=}B>12
MPAVRouteConnectionCustomData
v12@?0I4^{__CFArray=}8
T^v,R,N,V_externalDevice
connected
TB,R,N,GisConnected
invalidated
TB,R,N,GisInvalidated
receivedCustomDataHandler
T@?,C,N,V_receivedCustomDataHandler
T@?,C,N,V_invalidationHandler
staticResponse
T@"MPModelStaticResponse",&,N,V_staticResponse
albumAppData
T@"MPMediaLibraryAlbumAppData",&,N,V_albumAppData
AIRPLAY_MIRRORING_TITLE
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPHONE
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPAD
AIRPLAY_MIRRORING_COMPACT_DESCRIPTION_IPOD
responseSinfDictionary
dpInfoData
pinfData
sinfData
sinf2Data
purchaseBundleSinfDictionary
@"NSMutableArray"8@?0:4
@12@?0:4@"MPMediaPredicate"8
T@"MPMediaPlaybackItemMetadata",&,N,V_playbackItemMetadata
preferredAssetQuality
TI,N,V_preferredAssetQuality
prefersHLS
TB,N,V_prefersHLS
shouldStartLeaseSession
TB,N,V_shouldStartLeaseSession
shouldUseAccountLessStreaming
TB,N,V_shouldUseAccountLessStreaming
shouldUseStreamingRedownload
TB,N,V_shouldUseStreamingRedownload
Ti,R,N,V_endpointType
storeAdamID
Tq,R,N,V_storeAdamID
downloadSessionAlternativeConfigurationOptionsBlock
T@?,C,N,V_downloadSessionAlternativeConfigurationOptionsBlock
keepLocal
keepLocalStatus
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPMediaEntity.m
T@"MPMediaLibrary",R,N
multiverseIdentifier
T@"MIPMultiverseIdentifier",R,N,V_multiverseIdentifier
MPSections
MPSectionIndexTitles
sectionIndexTitles
T@"NSArray",C,N
T@"NSArray",R,C,N,V_sections
hasUnknownSection
TB,N,V_hasUnknownSection
T@"NSArray",C,D,N
MPStorePlayWhileDownloadControllerDidFinishPlayWhileDownloadSessionNotification
MPStorePlayWhileDownloadControllerUserInfoKeyPlayWhileDownloadSession
MPStorePlayWhileDownloadControllerErrorDomain
com.apple.MediaPlayer.MPStorePlayWhileDownloadController.accessQueue
PLAY_WHILE_DOWNLOAD_STATUS
v12@?0@"MPStorePlayWhileDownloadProperties"4@"NSError"8
v8@?0@"MPStorePlayWhileDownloadProperties"4
downloadHandlerIdentifier
RegionalBehaviorEUVolumeLimit
MPDebugEUVolumeLimit
MediaPlayback
CannotExceedEUVolumeLimit
_AVPlayer_Volume
T@"<MPVolumeControllerDelegate>",W,N,V_delegate
volumeValue
Tf,R,N,V_volumeValue
volumeWarningEnabled
TB,R,N,V_volumeWarningEnabled
volumeWarningState
Ti,R,N,V_volumeWarningState
EUVolumeLimit
Tf,R,N,V_EUVolumeLimit
success
unfollow
follow
TB,N,V_unfollow
T@"MPModelPerson",&,N,V_person
playbackTime
urlDescription
<%@: %p> chapter %lu, time = range = [%.2f, %.2f], %@ = %@
MPIndexInChaptersOfAnyType
MPIndexInChaptersOfSameType
MPChapterType
MPPlaybackDuration
MPPlaybackTime
MPChapterIndex
T@,&,N,V_value
valueLoader
T@?,C,N,V_valueLoader
chapterType
Ti,N,V_chapterType
Td,N,V_playbackTime
Td,N,V_playbackDuration
indexInChaptersWithSameType
TI,N,V_indexInChaptersWithSameType
indexInChaptersWithAnyType
TI,N,V_indexInChaptersWithAnyType
artworkRequest
T@"MPMediaLibraryArtworkRequest",&,N,V_artworkRequest
T@"MPMediaLibraryArtworkDataSource",W,N,V_artworkDataSource
com.apple.MediaPlayer.MPStoreLbraryPersonalizationCollectionDataSource.accessSerialQueue
v16@?0@4@"NSIndexPath"8^B12
v8@?0@"MPModelPlaybackPosition"4
v8@?0@"MPModelTVEpisode"4
v8@?0@"MPModelMovie"4
unpersonalizedContentDescriptors
T@"MPSectionedCollection",&,N,V_unpersonalizedContentDescriptors
unpersonalizedRequest
T@"MPModelRequest",C,N,V_unpersonalizedRequest
translatingContext
T@"MPMediaLibraryEntityTranslationContext",&,N,V_translatingContext
relativeModelClassToMappingResponse
T@"NSMapTable",C,N,V_relativeModelClassToMappingResponse
sectionToLibraryAddedOverride
T@"NSMutableDictionary",C,N,V_sectionToLibraryAddedOverride
chapterIndex
TI,N,V_chapterIndex
T@"NSArray",&,N,V_chapters
TB,N,V_hasArtworkAtPlaybackTime
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAudioVideoRoutingPopoverController.m
Mirroring is no longer supported by MPAudioVideoRoutingPopoverController
mirroringOnly
TB,N,V_mirroringOnly
MPMediaPlaybackItemMetadataDidChangeNotification
MPMediaPlaybackItemMetadataLikedStateDidChangeNotification
MPMediaPlaybackItemMetadataNetworkConstraintsDidChangeNotification
com.apple.MediaPlayer.MPMediaPlaybackItemMetadata.accessQueue
musicvideo
uploadedaudio
uploadedvideo
tvshow
match
purchaseHistory
v12@?0i4^B8
rentalIdentifier
T@"NSNumber",R,N,G_rentalIdentifier,V_rentalIdentifier
allowsCellularNetworking
allowsInitiatingPlayWhileDownload
TB,R,N,V_allowsInitiatingPlayWhileDownload
T@"NSString",R,C,N,V_albumArtistName
albumStoreAdamID
Tq,R,N,V_albumStoreAdamID
T@"NSString",R,C,N,V_albumTitle
allowsAssetCaching
T@"NSString",R,C,N,V_artistName
artistStoreAdamID
Tq,R,N,V_artistStoreAdamID
T@"NSString",R,N,V_buyParameters
T@"NSString",R,C,N,V_composerName
contentTitle
T@"NSString",R,C,N,V_contentTitle
contentType
TI,R,N,V_contentType
Tq,R,N,V_downloadIdentifier
expectedDuration
Td,R,N,V_expectedDuration
genreTitle
T@"NSString",R,C,N,V_genreTitle
additionalHTTPHeaderFields
isExplicitTrack
TB,R,N,V_isExplicitTrack
localNetworkContentURL
T@"NSURL",R,C,N,V_localNetworkContentURL
T@"MPMediaItem",R,N,V_mediaItem
mediaLibraryPersistentID
Tq,R,N,V_mediaLibraryPersistentID
T@"NSURL",R,C,N,V_protectedContentSupportStorageURL
requiresPlayWhileDownload
TB,R,N,V_requiresPlayWhileDownload
TB,R,N,V_showComposer
shouldReportPlayEventsToStore
TB,R,N,V_shouldReportPlayEventsToStore
Td,R,N,V_bookmarkTime
shouldRememberBookmarkTime
TB,R,N,V_shouldRememberBookmarkTime
storeUbiquitousIdentifier
T@"NSString",R,C,N,V_storeUbiquitousIdentifier
TQ,R,N,V_storeAccountID
TQ,R,N,V_storeSagaID
subscriptionRequired
TB,R,N,GisSubscriptionRequired,V_subscriptionRequired
Tf,R,N,V_volumeNormalization
iTunesStoreContentID
T@"NSNumber",R,C,N,V_iTunesStoreContentID
iTunesStoreContentType
iTunesStoreContentDownloadParameters
iTunesStoreContentDSID
T@"NSNumber",R,C,N,V_iTunesStoreContentDSID
iTunesStoreContentPurchasedMediaKind
iTunesStoreContentUserAgent
high
none
unknown
uploaded-audio
uploaded-video
T@,R,W,N,V_object
T@"NSString",R,C,N,V_keyPath
handler
T@?,R,C,N,V_handler
com.apple.MediaPlayer.MPModelLibrarySearchRequestOperation.accessSerialQueue
v16@?0@"MPModelLibrarySearchScope"4I8^B12
v16@?0{shared_ptr<mlcore::LocalizedSearchQueryResult>=^{LocalizedSearchQueryResult}^{__shared_weak_count}}4@"NSError"12
T@"MPModelLibrarySearchRequest",C,N,V_request
AirPlayPortExtendedInfo
76,8194
76,8198
76,8197
76,8195
<%@: %p, "%@", picked=%@ uid=%@>
| Mirroring Route: %@
<%@: %p name=%@ uid=%@>
T^v,R,N,G_externalDevice,V_externalDevice
routeName
picked
TB,N,GisPicked
avRouteDescription
wirelessDisplayRoute
T@"MPAVRoute",&,N
displayRouteType
connection
T@"MPAVRouteConnection",R,N,V_connection
routeUID
T@"NSString",R,N,V_routeUID
productIdentifier
T@"NSString",R,N,V_productIdentifier
routeType
Ti,R,N,V_routeType
pickableRouteType
Ti,R,N,V_pickableRouteType
routeSubtype
Ti,R,N,V_routeSubtype
isDeviceRoute
batteryLevel
T@"MPAVBatteryLevel",R,N,V_batteryLevel
auxiliaryDevices
T@"NSArray",R,N,V_auxiliaryDevices
pickedOnPairedDevice
TB,R,N,GisPickedOnPairedDevice,V_pickedOnPairedDevice
playingOnPairedDevice
TB,R,N,GisPlayingOnPairedDevice,V_playingOnPairedDevice
requiresPassword
TB,R,N,V_requiresPassword
supportsWirelessDisplay
passwordType
displayIsPicked
airpodsRoute
TB,R,N,GisAirpodsRoute
powerbeatsRoute
TB,R,N,GisPowerbeatsRoute
beatsSoloRoute
TB,R,N,GisBeatsSoloRoute
beatsXRoute
TB,R,N,GisBeatsXRoute
carplayRoute
TB,R,N,GisCarplayRoute,V_carplayRoute
appleTVRoute
TB,R,N,GisAppleTVRoute
b238Route
TB,R,N,GisB238Route,V_b238Route
apple-internal-install
isInternalInstall
isIcloudLibraryEnabled
B16@?0@"NSURLQueryItem"4I8^B12
recommendations
storePlatformData
v16@?0@4@8^B12
contentId
isUnavailableInAppleMusic
v16@?0@"MPModelForYouRecommendationItem"4i8^B12
v16@?0@"NSNull"4i8^B12
v12@?0@"MPModelResponse"4@"NSError"8
v8@?0@"MPModelForYouRecommendationGroup"4
v16@?0@"MPModelForYouRecommendationGroup"4i8^B12
MPStoreDownloadExpectationControllerErrorDomain
com.apple.MediaPlayer.MPStoreDownloadExpectationController.accessQueue
searchBlock
timeout
libraryAddedStatus
Ti,N,V_libraryAddedStatus
DEFAULT_GENIUS_PLAYLIST_NAME
containingPlaylist
T@"MPMediaPlaylist",R,N
collectionByJoiningCollections
v12@?0@"MPModelStoreBrowseResponse"4@"NSError"8
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.nestedRequestsOperationQueue
v16@?0@"MPModelStoreBrowseSection"4i8^B12
com.apple.MediaPlayer.MPModelStoreBrowseRequestOperation.sectionsToNestedResponseAccessQueue
v16@?0@"MPModelStoreBrowseContentItem"4i8^B12
MPModelPropertyMovieTitle
MPModelPropertyMovieDescriptionText
MPModelPropertyMovieExplicitRating
MPModelPropertyMovieTagline
MPModelPropertyMovieInfoDictionary
movieInfoDictionary
MPModelRelationshipMovieClips
clips
MPModelPropertyMovieReleaseDate
MPModelRelationshipMovieLocalFileAsset
MPModelRelationshipMoviePlaybackPosition
MPModelRelationshipMovieStoreAsset
MPModelPropertyMovieArtwork
MPModelPropertyMovieEditorialArtwork
MPModelPropertyMovieDuration
MPModelPropertyMovieHasCloudSyncSource
MPModelPropertyMovieLibraryAdded
MPModelPropertyMovieLibraryAddedDate
MPModelPropertyMovieLibraryAddEligible
MPModelPropertyMovieKeepLocalEnableState
MPModelPropertyMovieKeepLocalManagedStatus
T@"NSArray",C,N,V_clips
T@"NSString",C,N,V_tagline
T@"NSDictionary",C,N,V_movieInfoDictionary
; name = "%@"
MPModelPropertyRadioStationBeats1
MPModelPropertyRadioStationName
MPModelPropertyRadioStationEditorNotes
MPModelPropertyRadioStationShortEditorNotes
MPModelPropertyRadioStationHasExplicitContent
hasExplicitContent
MPModelPropertyRadioStationArtwork
MPModelPropertyRadioStationAllowsItemLiking
allowsItemLiking
TB,N,GisBeats1,V_beats1
T@"NSString",C,N,V_editorNotes
T@"NSString",C,N,V_shortEditorNotes
TB,N,V_hasExplicitContent
TB,N,V_allowsItemLiking
MPModelPropertyTVShowCreatorArtwork
MPPlaceholderArtwork-Podcast
MPPlaceholderArtwork-Audiobook
MPPlaceholderArtwork-Videos
MPPlaceholderArtwork-Music
v8@?0^{__CFArray=}4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAVLegacyRoutingDataSource.m
Attempted to set route on legacy data source with non descriptor-backed route object
Successfully
Failed to
B16@?0@"MPAVRoute"4I8^B12
T@"NSString",R,N,V_name
No error
Authentication failed
Route requires authentication
Route is busy
Unknown error
T@"MPModelPlaylistEntriesShareEligibilityRequest",C,N,V_request
com.apple.MediaPlayer.MPModelLibraryAddToPlaylistChangeRequestOperation.operationQueue
T@"MPModelLibraryAddToPlaylistChangeRequest",C,N,V_request
episodeKind
T@"MPModelPodcastEpisodeKind",R,N,V_episodeKind
MPModelPropertyPodcastTitle
MPModelRelationshipPodcastAuthor
author
MPModelPropertyPodcastArtwork
T@"MPModelPodcastAuthor",&,N,V_author
AIRTUNES_PIN_ALERT_TITLE
AIRTUNES_PASSWORD_ALERT_TITLE
AIRTUNES_PIN_ALERT_MESSAGE_FORMAT_%@
AIRTUNES_PASSWORD_ALERT_MESSAGE_FORMAT_%@
AIRTUNES_PASSCODE_ALERT_PLACEHOLDER
AIRTUNES_PASSWORD_ALERT_PLACEHOLDER
CANCEL
-initWithTitle:message:delegate:cancelButtonTitle:otherButtonTitles: is unsupported, use -initWithTitle:message:completionHandler:
MPErrorDomain
v8@?0@"MPAsyncBlockOperation"4
T@"MPModelObject",R,N,V_model
TB,N,V_hasBeenPlayed
availableShuffleIndexSet
originalIndexToItemIdentifier
originalIndexToShuffledIndex
itemIdentifierToKnownCountDictionary
T@"<MPShuffleControllerDataSource>",W,N,V_dataSource
sharedStoreArtworkDataSource
T@"MPStoreArtworkDataSource",R,N
MPMediaQuerySection is a read-only object
 title=%@, range=%@, sectionIndexTitleIndex=%lu
MPTitle
MPRangeLocation
MPRangeLength
MPSectionIndex
range
T{_NSRange=II},N,V_range
sectionIndexTitleIndex
TI,N,V_sectionIndexTitleIndex
MPArtworkResizeErrorDomain
Failed to resize nil image.
Input image has invalid size: {%f, %f}.
Input image has invalid scale: %f.
Failed to resize image with invalid scaled fitting size: {%f, %f}.
T{CGSize=ff},N,V_scaledFittingSize
usesExactFittingSizeAsDestinationSize
TB,N,V_usesExactFittingSizeAsDestinationSize
resizedImage
T@"UIImage",R,N,V_resizedImage
T@"NSError",R,N,V_error
T@"NSURL",R,N,V_destinationURL
operationGroup
T@"NSObject<OS_dispatch_group>",R,N,V_operationGroup
<%@: %p> (
  backgroundColor: %@ (%@)
  primaryTextColor: %@ (%@)
  secondaryTextColor: %@ (%@)
Light
Dark
backgroundColor
backgroundColorLight
primaryTextColor
primaryTextColorLight
secondaryTextColor
secondaryTextColorLight
T@"UIColor",R,N,V_backgroundColor
TB,R,N,GisBackgroundColorLight,V_backgroundColorLight
T@"UIColor",R,N,V_primaryTextColor
TB,R,N,GisPrimaryTextColorLight,V_primaryTextColorLight
T@"UIColor",R,N,V_secondaryTextColor
TB,R,N,GisSecondaryTextColorLight,V_secondaryTextColorLight
T@"UIColor",&,D,N
TB,D,N,GisBackgroundColorLight
TB,D,N,GisPrimaryTextColorLight
TB,D,N,GisSecondaryTextColorLight
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Tracklist/MPTracklist+Debugging.m
debugDescription is counting on itemResult being an instance of %@
%@%@%@%@%@
 (%ld)
UNKNOWN
%@ %@ %@ %@
MPModelStoreBrowseContentItemPropertyItemType
MPModelStoreBrowseContentItemRelationshipAlbum
MPModelStoreBrowseContentItemRelationshipArtist
MPModelStoreBrowseContentItemRelationshipCurator
; curator = %@
curator
MPModelStoreBrowseContentItemRelationshipMediaClip
; mediaClip = %@
mediaClip
MPModelStoreBrowseContentItemRelationshipMovie
; movie = %@
MPModelStoreBrowseContentItemRelationshipPlaylist
; playlist = %@
MPModelStoreBrowseContentItemRelationshipRadioStation
; radioStation = %@
MPModelStoreBrowseContentItemRelationshipSocialPerson
; socialPerson = %@
socialPerson
MPModelStoreBrowseContentItemRelationshipSong
; song = %@
MPModelStoreBrowseContentItemRelationshipTVEpisode
; episode = %@
MPModelStoreBrowseContentItemRelationshipTVSeason
; season = %@
MPModelStoreBrowseContentItemRelationshipTVShow
; show = %@
MPModelStoreBrowseContentItemRelationshipTVShowCreator
; showCreator = %@
showCreator
; itemType = %@
itemType
MPModelStoreBrowseContentItemPropertyDetailedItemType
detailedItemType
MPModelStoreBrowseContentItemPropertyArtistUploadedContentType
TI,N,V_itemType
T@"NSString",C,N,V_artistUploadedContentType
T@"MPModelCurator",&,N,V_curator
T@"MPModelMediaClip",&,N,V_mediaClip
T@"MPModelMovie",&,N,V_movie
T@"MPModelSocialPerson",&,N,V_socialPerson
T@"MPModelTVShowCreator",&,N,V_showCreator
Ti,N,V_detailedItemType
@"MPArtworkCatalog"8@?0@"MPModelTVEpisode"4
hasSearchString
T@"NSString",&,N,V_searchString
T@"NSMutableArray",&,N,V_properties
-init is not supported. Use +sharedManager.
WLKExternalMediaContentManager
initWLKExternalMediaContentManager
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPExternalMediaContentManager.m
classWLKExternalMediaContentManager
/System/Library/Frameworks/WatchListKit.framework/WatchListKit
WatchListKitLibrary
com.apple.mediaplayer.systemdataprovider
cellular-data
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL_WLAN
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_ALL
GENIUS_PLAYLIST_OFFLINE_TITLE
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_CELLULAR
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WLAN
GENIUS_PLAYLIST_OFFLINE_SUBTITLE_WIFI
GENIUS_FEATURE_NOT_AVAILABLE_TITLE
GENIUS_FEATURE_NOT_AVAILABLE_SUBTITLE
GENIUS_PICKER_NO_RESULTS_TITLE
GENIUS_PICKER_NO_RESULTS_MESSAGE
v32@?0q4q12i20i24^B28
deallocationHandler
T@?,C,N,V_deallocationHandler
v8@?0@"MPModelPlaylistEntry"4
shouldUsePlaylistEntry
TB,N,V_shouldUsePlaylistEntry
leftPercentage
T@"NSNumber",R,N,V_leftPercentage
rightPercentage
T@"NSNumber",R,N,V_rightPercentage
singlePercentage
T@"NSNumber",R,N,V_singlePercentage
casePercentage
T@"NSNumber",R,N,V_casePercentage
NSNumber *MPAVGetBatteryLevelFromRouteDescription(NSDictionary *__strong, MPAVBatteryLevelType)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAVBatteryLevel.m
battery level value is not a number
BTDetails_BatteryLevelLeft
BTDetails_BatteryLevelRight
BTDetails_BatteryLevelCase
BTDetails_BatteryLevelSingle
NSString *MPAVGetRouteDescriptionKey(MPAVBatteryLevelType)
unable to find route description key for battery level
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequestOperation.operationQueue
B8@?0@4
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequestOperation.accessQueue
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequestOperation.libraryAddedSerialQueue
T@"MPStoreLibraryPersonalizationRequest",C,N,V_request
T@"MPMediaLibraryView",N,V_libraryView
T{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}},N,V_persistentIDs
com.apple.mobileipod.playbackPreferencesChanged-
MPPlaybackUserDefaultsAllowsHighQualityMusicStreamingOnCellularDidChangeNotification
MPPlaybackUserDefaultsMusicEQPresetDidChangeNotification
MPPlaybackUserDefaultsMusicRepeatTypeDidChangeNotification
MPPlaybackUserDefaultsMusicShuffleTypeDidChangeNotification
MPPlaybackUserDefaultsSoundCheckEnabledDidChangeNotification
Songs
Albums
com.apple.MediaPlayer.MPPlaybackUserDefaults.accessQueue
com.apple.MediaPlayer.MPPlaybackUserDefaults.calloutQueue
com.apple.MediaPlayer.MPPlaybackUserDefaults.userDefaultsMutationQueue
MusicAllowsHighQualityStreamingOnCellular
MusicSoundCheckEnabledSetting
v8@?0@"MPPlaybackUserDefaults"4
MPRepeatType-Unknown
MusicRepeatSetting
MPShuffleType-Unknown
MusicShuffleSetting
PlaybackQualityCellular
com.apple.videos-preferences
BestQuality
PlaybackQuality
MPCPlaybackPrivateListeningEnabled
com.apple.mediaplaybackcore
DeviceClassNumber
UseNewQueueManagement
MusicEQPresetName
allowsHighQualityMusicStreamingOnCellular
musicEQPreset
Ti,R,N,V_musicEQPreset
musicRepeatType
musicShuffleType
soundCheckEnabled
preferredVideosAssetQualityOnCellular
preferredVideosAssetQualityOnWifi
T@"NSNumber",C,N,GisPrivateListeningEnabled
shouldUseNewQueueManagement
com.apple.mobileipod-prefsChanged
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPVolumeHUDController.m
tried to pop main context
mainContext
MP_capabilities
MPAVPlaylistManagerFailedToQueueNotification
MPAVPlaylistManagerCurrentItemObservationContext
MPAVPlaylistManagerMusicPlayerControllerQueueDidInvalidate
_repeatMode
_goToTargetIndex
_targetIndex
_lastSelectionDirection
_playlistFeeder
currentItemFeeder
currentItemIdentifier
currentIndex
com.apple.mobileipod.playbackQueueDidChangeNotification
avController
T@"MPAVController",W,N
isTransitioningSource
T@"MPQueuePlayer",R,V_player
queueCoordinator
T@"MPAVQueueCoordinator",R,V_queueCoordinator
T@"<MPAVPlaylistManagerDelegate>",W,N,V_delegate
playlistFeeder
T@"MPQueueFeeder",R,N,V_playlistFeeder
changingPlayer
TB,R,N,GisChangingPlayer,V_changingPlayer
changingPlaylistFeeder
TB,R,N,GisChangingPlaylistFeeder,V_changingPlaylistFeeder
T@"MPAVItem",R,V_currentItem
Ti,R
T@"MPAVController",W,N,V_avController
dialogDictionary
T@"NSDictionary",R,C,N,V_dialogDictionary
T@"NSDate",R,C,N,V_expirationDate
fileAssetInfoList
T@"NSArray",R,C,N,V_fileAssetInfoList
hlsAssetInfo
T@"MPStoreHLSAssetInfo",R,N,V_hlsAssetInfo
suzeLeaseID
T@,R,N,V_suzeLeaseID
T@"NSDictionary",C,D,N
T@"NSDate",C,D,N
T@"MPStoreHLSAssetInfo",&,D,N
T@,&,D,N
MPCloudServiceStatusControllerCloudLibraryEnabledDidChangeNotification
MPCloudServiceStatusControllerFairPlaySubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerMatchStatusDidChangeNotification
MPCloudServiceStatusControllerPurchaseHistoryEnabledDidChangeNotification
MPCloudServiceStatusControllerShouldPlaybackRequireSubscriptionLeaseDidChangeNotification
MPCloudServiceStatusControllerSubscriptionAvailabilityDidChangeNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidBeginNotification
MPCloudServiceStatusControllerSubscriptionLeaseDidEndeNotification
MPCloudServiceStatusControllerSubscriptionStatusDidChangeNotification
MPCloudServiceStatusControllerUserInfoKeyLeaseEndReasonType
_MPCloudServiceStatusControllerMatchStatus
_MPCloudServiceStatusControllerSubscriptionAvailability
com.apple.MediaPlayer.MPCloudServiceStatusController.accessQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.calloutQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.subscriptionOperationQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.initializationOperationQueue
com.apple.MediaPlayer.MPCloudServiceStatusController.fairPlayOperationQueue
T@"MPCloudServiceStatusController",R,N
_existingPlaybackLease
T@"SSVPlaybackLease",R,D,N
lastKnownFairPlaySubscriptionStatus
T@"SSVFairPlaySubscriptionStatus",R,N
matchStatus
subscriptionAvailable
TB,R,N,GisSubscriptionAvailable
subscriptionStatus
T@"SSVSubscriptionStatus",R,C,N
shouldPlaybackRequireSubscriptionLease
cloudLibraryEnabled
TB,R,N,GisCloudLibraryEnabled
purchaseHistoryEnabled
TB,R,N,GisPurchaseHistoryEnabled
filteringDisabled
entityOrder
staticEntityIdentifiers
staticEntityType
T@"NSMutableArray",&,N,V_filterPredicates
hasGroupingType
Ti,N,V_groupingType
hasFilteringDisabled
TB,N,V_filteringDisabled
hasEntityOrder
Ti,N,V_entityOrder
T@"NSMutableArray",&,N,V_staticEntityIdentifiers
hasStaticEntityType
Ti,N,V_staticEntityType
com.apple.MediaPlayer.MPModelVerifyLocalFileAssetIntegrityRequest.operationQueue
sourceItemIdentifiers
T@"MPIdentifierSet",&,N,V_sourceItemIdentifiers
fileAsset
T@"MPModelFileAsset",&,N,V_fileAsset
<%@: %p> %@, %@
 with sort direction=%@
filter predicates must be an NSSet
T@"NSSet",C,N,V_filterPredicates
T@"NSSet",C,N,V_itemPropertiesToFetch
T@"NSSet",C,N,V_collectionPropertiesToFetch
TI,N,V_entityLimit
TI,N,V_entityOrder
T@"NSArray",C,N,V_orderingProperties
TB,N,V_ignoreSystemFilterPredicates
TB,N,V_ignoreRestrictionsPredicates
includeNonLibraryEntities
TB,N,V_includeNonLibraryEntities
TB,N,V_includeEntitiesWithBlankNames
T@"NSDictionary",C,N,V_orderingDirectionMappings
approveAll
approve
cancel
decline
followRequest
followRequests
actionType
action
Ti,R,N,V_action
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPStoreItemImportTrackData.m
we should have a complete set of metadata here.
importElements
T@"NSArray",R,N,V_importElements
AssetLoadDuration
AssetLoadError
SecureKeyBlockingLoadCount
SecureKeyLoadCount
SecureKeyMaxLoadDuration
SecureKeyError
TracklistLoadRequired
TracklistLoadError
PlaybackEndError
EndReason
StartupState
NetworkInterfaceChangeCount
NetworkInterfaceStart
SiriSessionIdentifier
assetLoadError
T@"NSError",C,N,V_assetLoadError
assetLoadDuration
Td,N,V_assetLoadDuration
blockingSecureKeyLoadCount
Ti,N,V_blockingSecureKeyLoadCount
maximumSecureKeyLoadDuration
Td,N,V_maximumSecureKeyLoadDuration
secureKeyLoadCount
Ti,N,V_secureKeyLoadCount
secureKeyError
T@"NSError",C,N,V_secureKeyError
tracklistLoadError
T@"NSError",C,N,V_tracklistLoadError
hadBlockingTracklistLoad
TB,N,V_hadBlockingTracklistLoad
playbackEndError
T@"NSError",C,N,V_playbackEndError
Ti,N,V_endReasonType
startupState
Ti,N,V_startupState
interfaceTypeChangeCount
Ti,N,V_interfaceTypeChangeCount
startInterfaceType
Ti,N,V_startInterfaceType
MPModelForYouRecommendationItemPropertyItemType
MPModelForYouRecommendationItemRelationshipAlbum
MPModelForYouRecommendationItemRelationshipPlaylist
; subgroup = %@
subgroup
MPModelForYouRecommendationItemPropertyBackedByStoreItemMetadata
backedByStoreItemMetadata
MPModelForYouRecommendationItemPropertyParentGroup
parentGroup
MPModelForYouRecommendationItemPropertySubgroupIndex
subgroupIndex
MPModelForYouRecommendationItemRelationshipSubgroup
v8@?0@"MPModelForYouRecommendationItem"4
T@"MPModelForYouRecommendationGroup",W,N,V_parentGroup
Ti,N,V_subgroupIndex
TB,N,GisBackedByStoreItemMetadata,V_backedByStoreItemMetadata
T@"MPModelForYouRecommendationGroup",R,N
Default
Default-Oversize
Download
Download-Oversize
Library-Oversize
Middleware
Middleware-Oversize
Playback
Playback-Oversize
RemoteControl
RemoteControl-Oversize
SDKPlayback
SDKPlayback-Oversize
MPLogForCategory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPLog.m
category < MPLoggingCategoryMax
CompleteMyCollection
Radio
RadioPerformance
Reporting
Routing
SDKLibrary
StoreBookkeeper
StoreOperation
com.apple.amp.mediaplayer
com.apple.videos
com.apple.storebookkeeper
libraryAddStatusObserverConfiguration
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N
MPRTCReportingControllerErrorDomain
rtcReportingPlayQueueSourceIdentifier
rtcReportingSessionAdditionalUserInfo
UNDETERMINED
FILE
AssetType
AUDIO
VIDEO
MediaAVType
QueueUniqueID
QueueSource
app.%@.unknown
T@"NSString",R,C,N,V_clientName
Ti,R,N,V_clientType
Tq,R,N,V_clientVersion
T@"MPAVController",R,W,N,V_player
T@?,C,N,V_handler
com.apple.MediaPlayer.MPModelLibraryPlaylistEditChangeRequestOperation.accessQueue
v112@?0{PropertyCache=^^?{unordered_map<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data, std::__1::hash<mlcore::ModelProperty<mediaplatform::Data> *>, std::__1::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<mediaplatform::Data> *const, mediaplatform::Data> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<mediaplatform::Data> *, std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::hash<mlcore::ModelProperty<mediaplatform::Data> *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<mediaplatform::Data> *, std::__1::__hash_value_type<mlcore::ModelProperty<mediaplatform::Data> *, mediaplatform::Data>, std::__1::equal_to<mlcore::ModelProperty<mediaplatform::Data> *>, true> >=f}}}{unordered_map<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char>, std::__1::hash<mlcore::ModelProperty<std::__1::basic_string<char> > *>, std::__1::equal_to<mlcore::ModelProperty<std::__1::basic_string<char> > *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<std::__1::basic_string<char> > *const, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::hash<mlcore::ModelProperty<std::__1::basic_string<char> > *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::equal_to<mlcore::ModelProperty<std::__1::basic_string<char> > *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::hash<mlcore::ModelProperty<std::__1::basic_string<char> > *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::__hash_value_type<mlcore::ModelProperty<std::__1::basic_string<char> > *, std::__1::basic_string<char> >, std::__1::equal_to<mlcore::ModelProperty<std::__1::basic_string<char> > *>, true> >=f}}}{unordered_map<mlcore::ModelProperty<double> *, double, std::__1::hash<mlcore::ModelProperty<double> *>, std::__1::equal_to<mlcore::ModelProperty<double> *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<double> *const, double> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::hash<mlcore::ModelProperty<double> *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::equal_to<mlcore::ModelProperty<double> *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<double> *, std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::hash<mlcore::ModelProperty<double> *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<double> *, std::__1::__hash_value_type<mlcore::ModelProperty<double> *, double>, std::__1::equal_to<mlcore::ModelProperty<double> *>, true> >=f}}}{unordered_map<mlcore::ModelProperty<int> *, int, std::__1::hash<mlcore::ModelProperty<int> *>, std::__1::equal_to<mlcore::ModelProperty<int> *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<int> *const, int> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::hash<mlcore::ModelProperty<int> *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::equal_to<mlcore::ModelProperty<int> *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<int> *, std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::hash<mlcore::ModelProperty<int> *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<int> *, std::__1::__hash_value_type<mlcore::ModelProperty<int> *, int>, std::__1::equal_to<mlcore::ModelProperty<int> *>, true> >=f}}}{unordered_map<mlcore::ModelProperty<long long> *, long long, std::__1::hash<mlcore::ModelProperty<long long> *>, std::__1::equal_to<mlcore::ModelProperty<long long> *>, std::__1::allocator<std::__1::pair<mlcore::ModelProperty<long long> *const, long long> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::hash<mlcore::ModelProperty<long long> *>, true>, std::__1::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::equal_to<mlcore::ModelProperty<long long> *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelProperty<long long> *, std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::hash<mlcore::ModelProperty<long long> *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelProperty<long long> *, std::__1::__hash_value_type<mlcore::ModelProperty<long long> *, long long>, std::__1::equal_to<mlcore::ModelProperty<long long> *>, true> >=f}}}^^?}4
MPModelLibraryPlaylistEditChangeRequestOperationErrorDomain
T@"MPModelLibraryPlaylistEditChangeRequest",C,N,V_request
localPersistenceResponseHandler
T@?,C,N,V_localPersistenceResponseHandler
completeResponseHandler
T@?,C,N,V_completeResponseHandler
protocol
T@"Protocol",&,N,V_protocol
objects
T@"NSHashTable",&,N,V_objects
MPModelLibraryTransientStateControllerDidChangeNotification
com.apple.MediaPlayer.MPModelLibraryTransientStateController.accessQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.notificationQueue
com.apple.MediaPlayer.MPModelLibraryTransientStateController.operationQueue
v16@?0@"_MPModelLibraryRegisteredTransientState"4I8^B12
addState
Ti,N,V_addState
keepLocalState
Ti,N,V_keepLocalState
modelObjects
T@"MPSectionedCollection",C,N,V_modelObjects
relatedModelObjects
T@"MPSectionedCollection",C,N,V_relatedModelObjects
T@"NSUUID",C,N,V_token
unknown property type
v28@?0{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}4{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}16@"MPIdentifierSet"24
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}16@?0@"MPMediaLibraryEntityTranslationContext"4{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}8
void _MPMLInitPropertySongMap()_block_invoke_2
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Data Model/MPMediaLibraryTranslatorSchema.mm
Must have song kind to generate song entity query.
_MPMLInitPropertySongMap_block_invoke_2
{vector<std::__1::shared_ptr<mlcore::Predicate>, std::__1::allocator<std::__1::shared_ptr<mlcore::Predicate> > >=^{shared_ptr<mlcore::Predicate>}^{shared_ptr<mlcore::Predicate>}{__compressed_pair<std::__1::shared_ptr<mlcore::Predicate> *, std::__1::allocator<std::__1::shared_ptr<mlcore::Predicate> > >=^{shared_ptr<mlcore::Predicate>}}}8@?0@"NSArray"4
availableArtworkToken
fetchableArtworkToken
@"MPArtworkCatalog"8@?0@"MPModelObject"4
home-sharing
purchaseHistoryRedownloadParams
void _MPMLInitPropertyAlbumMap()_block_invoke_2
Must have album kind to generate album entity query.
_MPMLInitPropertyAlbumMap_block_invoke_2
void _MPMLInitPropertyPlaylistMap()_block_invoke_2
Must have playlist kind to generate playlist entity query.
void _MPMLInitPropertyArtistMap()_block_invoke_2
Must have artist kind to generate artist entity query.
void _MPMLInitPropertyComposerMap()_block_invoke_2
Must have composer kind to generate composer entity query.
void _MPMLInitPropertyGenreMap()_block_invoke_2
Must have Genre kind to generate Genre entity query.
void _MPMLInitPropertyPlaylistEntryMap()_block_invoke_2
Attempted to query playlist entries without scoping to a playlist.
Must have PlaylistEntry kind to generate PlaylistEntry entity query.
void _MPMLInitPropertyPodcastMap()_block_invoke_2
Must have podcast kind to generate podcast entity query.
void _MPMLInitPropertyPodcastEpisodeMap()_block_invoke_2
Must have Podcast Episode kind to generate Podcast Episode entity query.
_MPMLInitPropertyPodcastEpisodeMap_block_invoke_2
feedURL
void _MPMLInitPropertyMovieMap()_block_invoke_2
Must have Movie kind to generate Movie entity query.
void _MPMLInitPropertyTVEpisodeMap()_block_invoke_2
Must have TV Episode kind to generate TV Episode entity query.
_MPMLInitPropertyTVEpisodeMap_block_invoke_2
void _MPMLInitPropertyTVSeasonMap()_block_invoke_2
Must have TV Season kind to generate TV Season entity query.
_MPMLInitPropertyTVSeasonMap_block_invoke_2
void _MPMLInitPropertyTVShowMap()_block_invoke_2
Must have TV Show kind to generate TV Show entity query.
T@"MPMediaItemArtwork",&,N,V_artwork
artworkData
T@"NSData",&,N,V_artworkData
_MPNowPlayingInfoPropertyArtworkData
_MPNowPlayingInfoPropertyArtworkMIMEType
MPNowPlayingInfoPropertyChapterCount
MPNowPlayingInfoPropertyAvailableLanguageOptions
MPNowPlayingInfoPropertyCurrentLanguageOption
MPNowPlayingInfoCollectionIdentifier
_MPNowPlayingInfoPropertyCollectionInfo
MPNowPlayingInfoPropertyChapterNumber
MPNowPlayingInfoPropertyElapsedPlaybackTime
_MPNowPlayingInfoPropertyIsSharable
_MPNowPlayingInfoPropertyIsAdvertisement
MPNowPlayingInfoPropertyIsLiveStream
_MPNowPlayingInfoPropertyIsBanned
_MPNowPlayingInfoPropertyIsInWishList
_MPNowPlayingInfoPropertyIsLiked
_MPNowPlayingInfoPropertyIsMusicApp
_MPNowPlayingInfoPropertyIsVideosApp
MPNowPlayingInfoPropertyPlaybackQueueCount
MPNowPlayingInfoPropertyPlaybackQueueIndex
MPNowPlayingInfoPropertyPlaybackRate
MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyDefaultPlaybackRate
_MPNowPlayingInfoPropertyAppMetrics
_MPNowPlayingInfoPropertyIsSteerable
_MPNowPlayingInfoPropertyProhibitsSkip
_MPNowPlayingInfoPropertyRadioStationIdentifier
_MPNowPlayingInfoPropertyRadioStationHash
_MPNowPlayingInfoPropertyRadioStationName
_MPNowPlayingInfoPropertyRadioStationStringIdentifier
_MPNowPlayingInfoPropertyiTunesStoreIdentifier
_MPNowPlayingInfoPropertyiTunesStoreSubscriptionAdamIdentifier
_MPNowPlayingInfoPropertyArtistiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyAlbumiTunesStoreAdamIdentifier
_MPNowPlayingInfoPropertyPlaylistGlobalIdentifier
_MPNowPlayingInfoPropertyRepeatMode
_MPNowPlayingInfoPropertyShuffleMode
_MPNowPlayingInfoPropertyPurchaseInfoData
_MPNowPlayingInfoPropertyDownloadState
_MPNowPlayingInfoPropertyDownloadProgress
_MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalContentIdentifier
MPNowPlayingInfoPropertyExternalUserProfileIdentifier
MPNowPlayingInfoPropertyServiceIdentifier
MPNowPlayingInfoPropertyPlaybackProgress
MPNowPlayingInfoPropertyMediaType
MPNowPlayingInfoPropertyAssetURL
_MPNowPlayingInfoPropertyArtworkIdentifier
_MPNowPlayingInfoPropertySupportsIsBanned
_MPNowPlayingInfoPropertySupportsIsLiked
_MPNowPlayingInfoPropertySupportsFastForward15Seconds
_MPNowPlayingInfoPropertySupportsRewind15Seconds
_MPNowPlayingInfoPropertySupportsWishlisting
_MPNowPlayingCollectionInfoKeyTitle
_MPNowPlayingCollectionInfoKeyIdentifiers
_MPNowPlayingCollectionInfoKeyCollectionType
_MPNowPlayingCollectionInfoCollectionTypePlaylist
_MPNowPlayingCollectionInfoCollectionTypeAlbum
_MPNowPlayingCollectionInfoCollectionTypeRadio
_MPNowPlayingInfoCenterPlaybackQueueDelegateDidChangeNotification
_MPNowPlayingInfoCenterPlaybackQueueDidChangeNotification
_MPNowPlayingInfoCenterPlaybackStateDidChangeNotification
_MPNowPlayingContentItemDidChangeNotification
_MPNowPlayingContentItemsDidChangeNotification
_MPNowPlayingContentItemsUserInfoKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPNowPlayingInfoCenter.m
Cannot have two MPNowPlayingInfoCenters for the same playerID: %@
com.apple.MediaPlayer.MPNowPlayingInfoCenter
-init is not supported, use +defaultCenter
v8@?0^{__CFError=}4
v12@?0@"NSString"4@"NSError"8
v12@?0@"MPNowPlayingInfoLyricsItem"4@"NSError"8
image/png
^v8@?0l4
^v12@?0^{__CFArray=}4^v8
v20@?0^v4^v8^{__CFArray=}12@?<v@?^{__CFError=}>16
^v8@?0^v4
^v8@?0^{__CFString=}4
playerID
T@"NSString",R,N,V_playerID
playbackQueueDataSource
T@"<MPNowPlayingPlaybackQueueDataSource>",W,N
playbackQueueDelegate
T@"<MPNowPlayingPlaybackQueueDelegate>",W,N
lyricsDelegate
T@"<MPNowPlayingInfoLyricsDelegate>",W,N
_mediaRemoteNowPlayingInfo
T@"NSDictionary",R,N,V__mediaRemoteNowPlayingInfo
nowPlayingInfo
T@"NSDictionary",C
MPModelObjectEnforcementEnabled
<%@: %p>
originalIdentifierSet
T@"MPIdentifierSet",R,N
modelClass
T#,R,N,V_modelClass
__%s__KEY
void _MPModelEnableEnforcement()_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Data Model/MPModelObject.m
Attempt to retrieve enforced uninitialized property: -[%@ %@].
@8@?0@"MPModelObject"4
B8@?0@"MPModelObject"4
i8@?0@"MPModelObject"4
I8@?0@"MPModelObject"4
l8@?0@"MPModelObject"4
q8@?0@"MPModelObject"4
L8@?0@"MPModelObject"4
Q8@?0@"MPModelObject"4
f8@?0@"MPModelObject"4
d8@?0@"MPModelObject"4
@?<@@?@>8@?0@"MPModelObject"4
set%@
Attempt to call -[%@ %@] after initialization.
v12@?0@"MPModelObject"4@8
v12@?0@"MPModelObject"4B8
v12@?0@"MPModelObject"4i8
v12@?0@"MPModelObject"4I8
v12@?0@"MPModelObject"4l8
v16@?0@"MPModelObject"4q8
v12@?0@"MPModelObject"4L8
v16@?0@"MPModelObject"4Q8
v12@?0@"MPModelObject"4f8
v16@?0@"MPModelObject"4d8
v12@?0@"MPModelObject"4@?<@@?@>8
PROGRESS_TIME_FULL_WIDTH_HOURS_FORMAT_%@_%d_%d_%d
PROGRESS_TIME_FULL_WIDTH_NO_HOURS_FORMAT_%@_%d_%d
PROGRESS_TIME_ALT_SHORT_WIDTH_HOURS_FORMAT_%@_%d_%d
PROGRESS_TIME_SHORT_WIDTH_HOURS_FORMAT_%@_%d_%d_%d
PROGRESS_TIME_SHORT_WIDTH_NO_HOURS_FORMAT_%@_%d_%d
{h}bb
{h}{c}
libraryRemovalSupportedOptions
<%@ %p subscriptionStatusObject: %@>
definitiveInformation
TB,R,N,GisDefinitiveInformation,V_definitiveInformation
hasPlaybackCapability
TB,R,N,V_hasPlaybackCapability
requiresCarrierManualVerification
TB,R,N,V_requiresCarrierManualVerification
shouldUseLease
TB,R,N,V_shouldUseLease
TB,R,N,V_shouldUseAccountLessStreaming
HomeSharingML3DataProviderCredentialsDidChangeNotification
libraryDataProvider
SharingDisabled
com.apple.mobileipod.containerfill
Library.itdb
daap.songbookmark
daap.songuserrating
daap.songuserplaycount
daap.songuserskipcount
com.apple.itunes.liked-state
v8@?0@"HSResponse"4
Tokens
Unable to determine groupID
homeSharingLibrary
T@"HSHomeSharingLibrary",R,N,V_homeSharingLibrary
isSupportedSharingVersion
databaseID
TI,N,V_databaseID
@"MPArtworkCatalog"8@?0@"MPModelCurator"4
http
&daap-no-disconnect=1
HomeSharingURLProtocolErrorDomain
&hsgid=%@
&hs-mobile-device-client=1
text/plain
Client-Daap-Validation
Client-Daap-Request-Id
springCubicTimingParameters
T@"UICubicTimingParameters",C,N,V_springCubicTimingParameters
com.apple.MPMediaLibraryArtwork.accessQueue
<%@:%p libraryID=%llu entityType=%ld artworkType=%ld
 retrievalTime=%f
v16@?0@"NSString"4@"NSString"8i12
libraryArtwork
T@"MPMediaLibraryArtwork",&,N,V_libraryArtwork
T@"ML3MusicLibrary",R,N,V_library
artworkType
Ti,R,N,V_artworkType
TQ,R,N,V_libraryID
entityType
Ti,R,N,V_entityType
retrievalTime
Td,N,V_retrievalTime
T@"NSString",C,N,V_availableArtworkToken
T@"NSString",C,N,V_fetchableArtworkToken
fetchableArtworkSource
T@"NSNumber",C,N,V_fetchableArtworkSource
MPMediaLibraryArtworkErrorDomain
Unknown artwork source type.
T@"MPMediaLibraryArtworkRequest",W,N,V_artworkRequest
T@"ML3Artwork",&,N,V_artwork
validSizes
T@"NSArray",R,N,V_validSizes
originalFileURL
effectsMetadata
MP_artworkType
playlistEntry
T@"MPModelPlaylistEntry",&,N,V_playlistEntry
T@"MPModelPlaylist",R,N,V_playlist
URLRequest
T@"NSURLRequest",R,N,V_URLRequest
requestedItemIdentifiers
T@"NSArray",R,N,V_requestedItemIdentifiers
itemMetadataRequestReason
TI,R,N,V_itemMetadataRequestReason
com.apple.mobileipod.home-sharing-rental-tracker
Media/HomeSharingRentals.plist
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Sharing/MPHomeSharingRentalTracker.m
attempted to add rental with item ID: %llu, databaseID: %@
attempted to remove rental with no item ID
enforcedContentItemsCount
Ti,N,V_enforcedContentItemsCount
enforcedContentTreeDepth
Ti,N,V_enforcedContentTreeDepth
contentLimitsEnforced
TB,N,V_contentLimitsEnforced
endpointAvailable
TB,N,V_endpointAvailable
contentLimitsEnabled
sinfs
showAllTVShows
keybag
family
T@"MPHomeSharingML3DataProvider",&,N,V_dataProvider
MPRemoteCommandCenterCommandsDidChangeNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPRemoteCommandCenter.m
Cannot have two MPRemoteCommandCenters for the same playerID: %@
com.apple.MediaPlayer.MPRemoteCommandCenter
@"NSMutableArray"8@?0@"NSArray"4
v16@?0I4^{__CFDictionary=}8@?<v@?^{__CFArray=}>12
Attempted to create remote command object of unknown class %@
B16@?0@"MPRemoteCommand"4I8^B12
specialSeekForwardCommand
T@"MPRemoteCommand",R,N,V_specialSeekForwardCommand
specialSeekBackwardCommand
T@"MPRemoteCommand",R,N,V_specialSeekBackwardCommand
buyTrackCommand
T@"MPPurchaseCommand",R,N,V_buyTrackCommand
buyAlbumCommand
T@"MPPurchaseCommand",R,N,V_buyAlbumCommand
preOrderAlbumCommand
T@"MPPurchaseCommand",R,N,V_preOrderAlbumCommand
cancelDownloadCommand
T@"MPPurchaseCommand",R,N,V_cancelDownloadCommand
advanceShuffleModeCommand
T@"MPAdvanceShuffleModeCommand",R,N,V_advanceShuffleModeCommand
advanceRepeatModeCommand
T@"MPAdvanceRepeatModeCommand",R,N,V_advanceRepeatModeCommand
removeFromPlaybackQueueCommand
T@"MPRemoteCommand",R,N,V_removeFromPlaybackQueueCommand
reorderQueueCommand
T@"MPReorderQueueCommand",R,N,V_reorderQueueCommand
playItemInQueueCommand
T@"MPRemoteCommand",R,N,V_playItemInQueueCommand
createRadioStationCommand
T@"MPRemoteCommand",R,N,V_createRadioStationCommand
setPlaybackQueueCommand
T@"MPSetPlaybackQueueCommand",R,N,V_setPlaybackQueueCommand
insertIntoPlaybackQueueCommand
T@"MPInsertIntoPlaybackQueueCommand",R,N,V_insertIntoPlaybackQueueCommand
addNowPlayingItemToLibraryCommand
T@"MPFeedbackCommand",R,N,V_addNowPlayingItemToLibraryCommand
addItemToLibraryCommand
T@"MPFeedbackCommand",R,N,V_addItemToLibraryCommand
changePlaybackProgressCommand
T@"MPChangePlaybackProgressCommand",R,N,V_changePlaybackProgressCommand
T@"NSString",R,C,N,V_playerID
activeCommands
T@"NSArray",R,N,G_activeCommands
pauseCommand
T@"MPRemoteCommand",R,N,V_pauseCommand
playCommand
T@"MPRemoteCommand",R,N,V_playCommand
stopCommand
T@"MPRemoteCommand",R,N,V_stopCommand
togglePlayPauseCommand
T@"MPRemoteCommand",R,N,V_togglePlayPauseCommand
enableLanguageOptionCommand
T@"MPRemoteCommand",R,N,V_enableLanguageOptionCommand
disableLanguageOptionCommand
T@"MPRemoteCommand",R,N,V_disableLanguageOptionCommand
changePlaybackRateCommand
T@"MPChangePlaybackRateCommand",R,N,V_changePlaybackRateCommand
changeRepeatModeCommand
T@"MPChangeRepeatModeCommand",R,N,V_changeRepeatModeCommand
changeShuffleModeCommand
T@"MPChangeShuffleModeCommand",R,N,V_changeShuffleModeCommand
nextTrackCommand
T@"MPRemoteCommand",R,N,V_nextTrackCommand
previousTrackCommand
T@"MPRemoteCommand",R,N,V_previousTrackCommand
skipForwardCommand
T@"MPSkipIntervalCommand",R,N,V_skipForwardCommand
skipBackwardCommand
T@"MPSkipIntervalCommand",R,N,V_skipBackwardCommand
seekForwardCommand
T@"MPRemoteCommand",R,N,V_seekForwardCommand
seekBackwardCommand
T@"MPRemoteCommand",R,N,V_seekBackwardCommand
changePlaybackPositionCommand
T@"MPChangePlaybackPositionCommand",R,N,V_changePlaybackPositionCommand
ratingCommand
T@"MPRatingCommand",R,N,V_ratingCommand
likeCommand
T@"MPFeedbackCommand",R,N,V_likeCommand
dislikeCommand
T@"MPFeedbackCommand",R,N,V_dislikeCommand
bookmarkCommand
T@"MPFeedbackCommand",R,N,V_bookmarkCommand
itemID
TQ,R,N,V_itemID
MPStreamingDownloadSessionControllerDidFailDownloadSessionNotification
MPStreamingDownloadSessionControllerErrorDomain
MPStreamingDownloadSessionControllerUserInfoKeyDownloadSession
MPStreamingDownloadSessionControllerUserInfoKeyError
MPStreamingDownloadSessionControllerUserInfoKeyDialogDictionary
com.apple.MediaPlayer.MPStreamingDownloadSessionController.accessQueue
com.apple.MediaPlayer.MPStreamingDownloadSessionController.streamingOperationQueue
v20@?0@"SSVPlaybackResponse"4d8@"NSError"16
v12@?0@"SSVPlaybackResponse"4@"NSError"8
v20@?0B4@"NSString"8I12I16
v16@?0@"AVAssetDownloadSession"4I8^B12
v8@?0@"SSNetworkConstraints"4
AVAssetDownloadSessionAlternativeConfigurationOptionsKey
pinf
; isAvailable = "%@"
; URL = %@
MPModelPropertyHomeSharingAssetAvailable
available
MPModelPropertyHomeSharingAssetProtectedContentSupportStorageFileURL
protectedContentSupportStorageFileURL
MPModelPropertyHomeSharingAssetURL
TB,N,GisAvailable,V_available
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
T@"NSURL",C,N,V_URL
T@"MPModelLibraryHasPurchasesRequest",C,N,V_request
MPStoreItemLibraryImportMetadataKeyAlbumLikedState
MPStoreItemLibraryImportMetadataKeyTrackLikedState
additionalTrackMetadata
T@"NSDictionary",R,N,V_additionalTrackMetadata
T@"NSDictionary",R,N,V_lookupDictionary
addToCloudLibrary
TB,R,N,V_addToCloudLibrary
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAVTelevisionRoute.m
television
T^v,R,N,V_television
viewControllerForOrientation
T@"UIViewController",W,N,V_viewControllerForOrientation
AUDIO_AND_SUBTITLES_POPOVER_TITLE
AUDIO_2013
SUBTITLES_2013
imageViewEdgeInsets
T{UIEdgeInsets=ffff},N,VimageViewEdgeInsets
AIRPLAY_MIRRORING_IPAD_DESCRIPTION
AIRPLAY_MIRRORING_IPOD_DESCRIPTION
AIRPLAY_MIRRORING_IPHONE_DESCRIPTION
MPAudioVideoRoutingTableViewControllerCell
Report a Problem
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAudioVideoRoutingTableViewController.m
invalid index for picked route
AIRPLAY_MIRRORING_ENABLED_LABEL
airplay_audio
mirroring switches are no longer supported in MPAudioVideoRoutingTableViewController
T@"MPAVRoutingController",R,N,V_routingController
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Data Model/MPStoreLibraryMappingRequestOperation.mm
T#,N,V_modelClass
identifierSets
T@"NSArray",C,N,V_identifierSets
T@"NSString",&,N,V_album
T@"NSString",&,N,V_artist
Td,N,V_durationFromExternalMetadata
TB,N,GisExplicitTrack,V_explicitTrack
TB,N,GisLikedStateEnabled,V_likeStateEnabled
T@"NSString",&,N,V_mainTitle
TB,N,V_supportsLikedState
relationshipKinds
T@"NSDictionary",R,N,V_relationshipKinds
MPModelRelationshipGenericSong
MPModelRelationshipGenericAlbum
MPModelRelationshipGenericArtist
MPModelRelationshipGenericPlaylist
MPModelRelationshipGenericPlaylistEntry
MPModelRelationshipGenericTVEpisode
MPModelRelationshipGenericTVSeason
MPModelRelationshipGenericTVShow
MPModelRelationshipGenericMovie
MPModelRelationshipGenericMediaClip
MPModelRelationshipGenericPodcast
MPModelRelationshipGenericPodcastEpisode
podcastEpisode
MPModelRelationshipGenericRadioStation
T@"MPModelTVEpisode",&,N,V_tvEpisode
T@"MPModelPodcast",&,N,V_podcast
T@"MPModelPodcastEpisode",&,N,V_podcastEpisode
AirPlayShouldShowDebugButtonInPicker
demoMode
com.apple.airplay
Info
; %lu inserted %@
; %lu deleted %@
; %lu updated %@
; %lu moved %@
; none [UNNECESSARY]
v16@?0@"NSNumber"4@"NSNumber"8^B12
v16@?0@"NSIndexPath"4@"NSIndexPath"8^B12
insertedSections
T@"NSIndexSet",C,N,V_insertedSections
deletedSections
T@"NSIndexSet",C,N,V_deletedSections
updatedSections
T@"NSIndexSet",C,N,V_updatedSections
insertedItemIndexPaths
T@"NSArray",C,N,V_insertedItemIndexPaths
deletedItemIndexPaths
T@"NSArray",C,N,V_deletedItemIndexPaths
updatedItemIndexPaths
T@"NSArray",C,N,V_updatedItemIndexPaths
hasChanges
; Delete previousIndexPath: %@
; Insert finalIndexPath: %@
; Replace previousIndexPath: %@ finalIndexPath: %@
previousIndexPath
T@"NSIndexPath",R,N,V_previousIndexPath
finalIndexPath
T@"NSIndexPath",R,N,V_finalIndexPath
T@"NSIndexPath",R,N
MediaRemoteLanguageOption/%@/%@ "%@"
NULL
MPCloudControllerErrorDomain
MPCloudControllerEnableCloudLibraryOptionStartInitialImport
MPCloudControllerEnableCloudLibraryOptionMergeWithCloudLibrary
MPCloudControllerCanShowCloudDownloadButtonsDidChangeNotification
MPCloudControllerCanShowCloudTracksDidChangeNotification
MPCloudControllerHasProperNetworkConditionsToShowCloudMediaDidChangeNotification
MPCloudControllerIsCellularDataRestrictedDidChangeNotification
MPCloudControllerIsCloudEnabledDidChangeNotification
MPCloudControllerIsGeniusEnabledDidChangeNotification
MPCloudControllerIsUpdateInProgressDidChangeNotification
MPCloudControllerIsJaliscoGeniusEnabledDidChangeNotification
MPCloudControllerCloudAddToPlaylistBehaviorDidChangeNotification
com.apple.itunescloudd
com.apple.iBooks
com.apple.springboard
com.apple.tv
com.apple.Carousel
com.apple.mediaplayer.CloudController
One-off loading not supported for artworkType=%ld, sourceType=%ld
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPCloudController.m
Invalid update reason: %ld
user-collections-terms-check
v12@?0@"SSURLConnectionResponse"4@"NSError"8
accepted
cuid
-[MPCloudController fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:]
completion
cloudId
adamId
pmlt-url
recommendedContentIds
v12@?0B4B8
sharedCloudController
T@"MPCloudController",R,N
canShowCloudDownloadButtons
canDefaultMediaLibraryShowCloudContent
canShowCloudMusic
canShowCloudVideo
isCloudEnabled
TB,R,N,V_isCloudEnabled
hasCloudLockerAccount
hasPurchaseHistoryAccount
cloudClient
T@"HSCloudClient",R,N,V_cloudClient
isUpdateInProgress
TB,R,N,V_isUpdateInProgress
isInitialImport
TB,R,N,V_isInitialImport
jaliscoGeniusEnabled
TB,R,N,GisJaliscoGeniusEnabled,V_jaliscoGeniusEnabled
enablingJaliscoGeniusRequiresTerms
isQueryResultSetInvalidated
MPQueuePlayerCurrentItemObservationContext
MPQueuePlayerExternalPlaybackActiveObservationContext
MPQueuePlayerRateObservationContext
MPQueuePlayerStatusObservationContext
MPQueuePlayerInsufficientExternalProtectionContext
com.apple.MediaPlayer.MPQueuePlayer.accessQueue
AVPlayerStatusUnknown
AVPlayerStatusFailed
AVPlayerStatusReadyToPlay
@"NSString"8@?0i4
com.apple.MediaPlayer.MPQueuePlayer.periodicTimeObserverSerialQueue
actionAtItemEnd
TB,R,N,GisExternalPlaybackActive
usesExternalPlaybackWhileExternalScreenIsActive
defaultItemEQPresetType
Ti,N,V_defaultItemEQPresetType
playbackQueueCommitHandler
T@?,C,N,V_playbackQueueCommitHandler
isPlaybackQueueTransactionActive
_player
T@"AVPlayer",R,N
_externalProtectionStatus
playerAVAudioSession
MPModelPropertyCuratorShortName
MPModelPropertyCuratorEditorNotes
MPModelPropertyCuratorShortEditorNotes
MPModelPropertyCuratorKind
curatorKind
MPModelPropertyCuratorEditorialArtwork
MPModelPropertyCuratorHandle
T@"NSString",C,N,V_shortName
Ti,N,V_curatorKind
T@"NSString",C,N,V_handle
com.apple.MediaPlayer.MPStoreModelRequestOperation.accessSerialQueue
v12@?0@"ICURLBag"4@"NSError"8
v12@?0@"ICURLResponse"4@"NSError"8
remainingTimeInterval
T@"MPStoreModelRequest",C,N,V_request
durationInFrames
TQ,N,V_durationInFrames
encodingDelayInFrames
TI,N,V_encodingDelayInFrames
encodingDrainInFrames
TI,N,V_encodingDrainInFrames
heuristicInfo
TI,N,V_heuristicInfo
lastPacketsResync
TQ,N,V_lastPacketsResync
com.apple.MediaPlayer.MPStoreLibraryPersonalizationRequest.sharedQueue
T@"MPModelRequest",R,C,N,V_unpersonalizedRequest
T@"MPSectionedCollection",R,N,V_unpersonalizedContentDescriptors
representedObjects
T@"MPSectionedCollection",&,N,V_representedObjects
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Data Model/MPStoreLibraryPersonalizationRequest.mm
Item class %@ does not support library add status.
representedObjectResults
T@"MPSectionedCollection",&,N,V_representedObjectResults
libraryResponse
T@"MPModelResponse",&,N,V_libraryResponse
shouldAutomaticallyRefreshLease
TB,N,V_shouldAutomaticallyRefreshLease
playlistEntryKind
T@"MPModelPlaylistEntryKind",R,N,V_playlistEntryKind
MPModelPropertyPlaylistName
MPModelPropertyPlaylistDescriptionText
MPModelRelationshipPlaylistCurator
MPModelPropertyPlaylistHasCleanContent
hasCleanContent
MPModelPropertyPlaylistHasExplicitContent
MPModelPropertyPlaylistCuratorPlaylist
curatorPlaylist
MPModelPropertyPlaylistIsOwner
owner
MPModelPropertyPlaylistPublicPlaylist
publicPlaylist
MPModelPropertyPlaylistVisiblePlaylist
visiblePlaylist
MPModelPropertyPlaylistSubscribed
subscribed
MPModelPropertyPlaylistUserEditableComponents
userEditableComponents
MPModelPropertyPlaylistType
MPModelPropertyPlaylistTrackCount
MPModelPropertyPlaylistEditorNotes
MPModelPropertyPlaylistShortEditorNotes
MPModelPropertyPlaylistShareURL
shareURL
MPModelPropertyPlaylistShareShortURL
shareShortURL
MPModelPropertyPlaylistReleaseDateComponents
releaseDateComponents
MPModelPropertyPlaylistLastModifiedDateComponents
lastModifiedDateComponents
MPModelPropertyPlaylistArtwork
MPModelPropertyPlaylistEditorialArtwork
MPModelPropertyPlaylistLibraryAdded
MPModelPropertyPlaylistLibraryAddedDate
MPModelPropertyPlaylistTracksTiledArtwork
tiledArtworkRequest
MPModelPropertyPlaylistKeepLocalEnableState
MPModelPropertyPlaylistKeepLocalManagedStatus
MPModelPropertyPlaylistLastDevicePlaybackDate
lastDevicePlaybackDate
MPModelPropertyPlaylistCloudVersionHash
MPModelPlaylist
T@"MPModelCurator",C,N,V_curator
TI,N,V_trackCount
TB,N,V_hasCleanContent
TB,N,GisCuratorPlaylist,V_curatorPlaylist
TB,N,GisOwner,V_owner
TB,N,GisPublicPlaylist,V_publicPlaylist
TB,N,GisVisiblePlaylist,V_visiblePlaylist
TB,N,GisSubscribed,V_subscribed
Ti,N,V_userEditableComponents
Ti,N,V_type
T@"NSURL",C,N,V_shareURL
T@"NSURL",C,N,V_shareShortURL
T@"NSDateComponents",C,N,V_releaseDateComponents
T@"NSDateComponents",C,N,V_lastModifiedDateComponents
T@"NSDate",C,N,V_lastDevicePlaybackDate
T@"NSString",C,N,V_cloudVersionHash
T@"MPTiledArtworkRequest",C,N,V_tiledArtworkRequest
com.apple.MediaPlayer.MPStoreFollowing.operationQueue
com.apple.MPStoreSocialRequestOperation.accessQueue
application/x-www-form-urlencoded
application/json; charset=utf-8
DELETE
Content-Type
T@"<MPStoreSocialRequestOperationDataSource>",R,N,V_dataSource
MPNetworkPlayabilityMonitorNetworkTypeDidChangeNotification
MPNetworkPlayabilityMonitorEffectiveNetworkTypeForPlaybackDidChangeNotification
com.apple.MediaPlayer.MPNetworkPlayabilityMonitor
lastAverageBitrate
networkType
effectiveNetworkTypeForPlayback
com.apple.MediaPlayer/MPRequestResponseController
com.apple.MediaPlayer/MPRequestResponseController.calloutQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MediaPlaybackCore/Middleware/MPRequestResponseController.m
Request must be subclass of MPRequest.
Response must be subclass of MPResponse.
Mismatched begin/endAutomaticResonseLoading.
Must get a response or an error
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@,&,N,V_response
T@,&,N,V_request
T@"<MPRequestResponseControllerDelegate>",W,N,V_delegate
MPMediaPlaylist
v12@?0@"MPMediaItem"4^B8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAVOutputDeviceRoute.m
outputDevice
MRAVOutputDevice
AudioAccessory
T^v,R,N,V_outputDevice
v16@?0@"NSURL"4@"MPStoreCollectionCompletionOffering"8i12
B8@?0@"NSString"4
'pass type' is unsupported
preferredStoreOfferVariant
presentationStyle
Ti,R,N,V_presentationStyle
storeURL
T@"NSURL",R,C,N,V_storeURL
collectionWithCompletionItems
T@"MPStoreOfferMediaItemCollection",R,N
Ti,R,N,V_preferredStoreOfferVariant
offeredCollection
T@"MPStoreOfferMediaItemCollection",R,N,V_offeredCollection
mergedCollection
T@"MPStoreOfferMediaItemCollection",R,N,V_mergedCollection
itemsWithCompletionsCollection
localItems
MPStoreCompletionOfferingErrorDomain
caller
artwork,screenshots
omitKeys
dimensions
%dx%d
v24@?0{CGSize=ff}4B12@"NSArray"16@"NSMutableSet"20
albumItemsQuery
T@"MPMediaQuery",R,N,V_albumItemsQuery
wantsArtwork
TB,R,N,V_wantsArtwork
tokenID
TI,R,N,V_tokenID
responseBlock
T@?,R,C,N,V_responseBlock
storeLookupID
T@"NSNumber",R,N,V_storeLookupID
storeLookupIDString
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Store/MPStoreCompletionOfferingController.m
access MPStoreCompletionOfferingController using +storeOfferingController only.
com.apple.MPStoreCompletionOffering
Invalid query: %@
store use is restricted
default library is not the device media library (eg. is a homeshare)
v12@?0@"MPStoreCompletionOffering"4@"NSError"8
v16@?0@"MPStoreCompletionOfferingLookupItem"4I8^B12
No store IDs present
Store use is restricted
Can't be merged with store offers
There was an underlying store issue
v12@?0@"SSLookupResponse"4@"NSError"8
ubiquitousIdentifier
T@"NSString",R,C,N,V_ubiquitousIdentifier
bookmarkTimestamp
Td,N,V_bookmarkTimestamp
Td,N,V_bookmarkTime
userPlayCount
TI,N,V_userPlayCount
Duration
Error
T@"NSError",C,N,V_error
tileArtworkVisualIdenticalityIdentifiers
T@"NSArray",C,N,V_tileArtworkVisualIdenticalityIdentifiers
v16@?0@"NSNumber"4I8^B12
MPLookupCollectionPropertyValues
MPItemID
MPPreferredStoreOfferVariant
MPStoreOfferContentRating
%@ id=%llu, disc#=%@, track#=%@, name=%@, preferredStoreOfferVariant=%@
v16@?0@"MPMediaItem"4I8^B12
B16@?0@"MPMediaItem"4I8^B12
isDownloadable
isDownloadableStoreOffer
isPurchasableStoreOffer
addToSiriTagHistoryBaseUrl
addToTRHistoryBaseUrl
affiliateID
MPAcousticHistoryErrorDomain
void MPAcousticHistoryAddTrack(SSAccount *__strong, int64_t, NSString *__strong, void (^__strong)(NSError *__strong))
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAcousticHistory.m
account
Could not fetch a URL to use for the acoustic history request.
@"NSMutableArray"8@?0^{__CFArray=}4
^{__CFArray=}8@?0@"NSArray"4
availableLanguageOptions
currentLanguageOptions
_mediaRemoteDeltaRequest
T^v,N,V_mediaRemoteDeltaRequest
languageOptionDataSource
T@"<MPNowPlayingContentItemLanguageOptionDataSource>",W,N,V_languageOptionDataSource
lyricsDataSource
T@"<MPNowPlayingContentItemLyricsDataSource>",W,N,V_lyricsDataSource
T@"MPNowPlayingInfoLyricsItem",C,N
descriptionDataSource
T@"<MPNowPlayingContentItemDescriptionDataSource>",W,N,V_descriptionDataSource
T@"MPMediaItemArtwork",&,D,N
T@"<MPNowPlayingContentItemArtworkDataSource>",W,N,V_artworkDataSource
editingStyleFlags
radioStationType
totalDiscCount
totalTrackCount
elapsedTime
elapsedTimeTimestamp
storeAlbumID
storeArtistID
storeSubscriptionID
deviceSpecificUserInfo
radioStationName
radioStationStringIdentifier
alwaysLiveItem
TB,N,GisAlwaysLiveItem
sharableItem
TB,N,GisSharableItem
steerable
TB,N,GisSteerable
auxiliaryNowPlayingInfo
collectionInfo
trackArtistName
directorName
localizedContentRating
TB,N,GisExplicitItem
collectionIdentifier
profileIdentifier
numberOfChildren
clid
ulid
claid
apid
aarpid
arpid
gpid
cpid
peid
ppid
libAdded
libEligible
klEnable
klStatus
nonPurge
procType
rdwn
endpt
subReq
shComp
endT
hsStLy
_MPContentItemDidChangeUserInfoKeyDeltaRequest
algorithm
Ti,R,N,V_algorithm
T@"UIImage",R,N,V_image
com.apple.MediaPlayer.MPModelObjectPlaybackItemMetadata.writeQueue
T@"MPModelFileAsset",R,N
T@"MPModelHomeSharingAsset",R,N
T@"MPModelPlaybackPosition",R,N,V_playbackPosition
T@"MPModelStoreAsset",R,N
modelObjectDelegate
T@"<MPModelObjectPlaybackItemMetadataDelegate>",W,N,V_modelObjectDelegate
com.apple.MediaPlayer.MPStoreAssetInfoPlaybackCache.accessQueue
v16@?0@"MPStoreAssetInfoPlaybackCacheRequest"4@"MPStoreAssetPlaybackResponse"8^B12
sharedCache
T@"MPStoreAssetInfoPlaybackCache",R
accountID
TQ,N,V_accountID
delegatedAccountID
TQ,N,V_delegatedAccountID
storefrontID
T@"NSString",C,N,V_storefrontID
requestType
Ti,N,V_requestType
redownloadParameters
T@"NSString",C,N,V_redownloadParameters
T@"NSString",C,N,V_cloudUniversalLibraryID
Tq,N,V_storeSubscriptionAdamID
TQ,N,V_storeCloudID
storePurchasedAdamID
Tq,N,V_storePurchasedAdamID
storeRadioAdamID
Tq,N,V_storeRadioAdamID
MPModelPropertyGenreName
MPModelPropertyGenreArtwork
MPModelPropertyGenreLibraryAddedDate
inputsProtocols
outputProtocols
inputOperations
T@"NSMapTable",&,N
@12@?0@4@8
B12@?0@4B8
i12@?0@4i8
I12@?0@4I8
l12@?0@4l8
q16@?0@4q8
L12@?0@4L8
Q16@?0@4Q8
f12@?0@4f8
d16@?0@4d8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MediaPlaybackCore/Middleware/MPRequestMiddleware.m
Unknown builder protocol method return type: -(%s)%@. Consider calling +[MPMiddlewareChain registerReturnType:returnValueBlock:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Store/MPStoreOfferMediaItemCollection.m
invalid collection specification
MPStoreOfferResponse
MPUnmergedStoreMediaItems
MPLocalItemsQuery
%@, items = %@
CMA COLLECTION: %@
B16@?0@4I8^B12
T@"NSArray",R,D,N
itemsByRemovingStoreOffers
itemsByRemovingLocalItems
isCollectionOfferPresentable
MPStoreModelRequestTimeoutInterval
MPStoreModelRequestClientIdentifier
MPStoreModelRequestClientVersion
T@"NSString",C,N,V_clientVersion
; shouldRememberBookmarkTime = %@
; bookmarkTime = %f
; startTime = %f
; stopTime = %@
; hasBeenPlayed = %@
; userPlayCount = %td
; storeUbiquitousIdentifier = %@
MPModelPropertyPlaybackPositionBookmarkTime
MPModelPropertyPlaybackPositionShouldRememberBookmarkTime
MPModelPropertyPlaybackPositionHasBeenPlayed
MPModelPropertyPlaybackPositionStartTime
MPModelPropertyPlaybackPositionStopTime
MPModelPropertyPlaybackPositionStoreUbiquitousIdentifier
MPModelPropertyPlaybackPositionUserPlayCount
TB,N,V_shouldRememberBookmarkTime
T@"NSNumber",C,N,V_stopTime
T@"NSString",C,N,V_storeUbiquitousIdentifier
Ti,N,V_userPlayCount
sdVideo
sd480pVideo
720pHdVideo
1080pHdVideo
hlsUrl
hlsURL
en_US_POSIX
recoId
moduleType
PERSONALIZED_MIX
RECENTLY_PLAYED
TODAYS_PLAYLISTS
HEAVY_ROTATION
ALBUM_GROUPS
ARTIST_PLAYLISTS
NEW_RELEASES
ALBUM_RECO
stringForDisplay
FOR_YOU_PERSONAL_MIXES_TITLE
seeAllUrl
refreshUrl
requestedGroupPropertySet
T@"MPPropertySet",R,N,V_requestedGroupPropertySet
requestedItemPropertySet
T@"MPPropertySet",R,N,V_requestedItemPropertySet
storeItemMetadataResults
T@"NSDictionary",R,N,V_storeItemMetadataResults
flatSectionedItems
T@"MPMutableSectionedCollection",R,N,V_flatSectionedItems
T@"NSArray",R,N,V_times
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Tracklist/MPTracklist.m
Could not find head entry for section identifier: %@
Could not find last entry for section identifier: %@
Invalid insertion (no item identifiers) in section: %@
entryToMove cannot be nil
entryToMoveLatestUserClone cannot be nil
Could not find tail item entry for section identifier: %@
Cannot add empty branch
No item exists at %@:%@
startEntries
T@"NSMutableArray",R,N,V_startEntries
endEntry
T@"MPTracklistEntry",R,N,V_endEntry
T@"NSOperationQueue",R,N,V_operationQueue
sectionHeadEntryMap
T@"NSMutableDictionary",R,N,V_sectionHeadEntryMap
T@"<MPTracklistDelegate>",W,N,V_delegate
Ti,R,V_itemCount
automaticallyReversesNonDestructiveDataSourceEdits
TB,N,V_automaticallyReversesNonDestructiveDataSourceEdits
B8@?0i4
entityPersistentID
TQ,R,N,V_entityPersistentID
entityTitle
T@"NSString",R,C,N,V_entityTitle
buyType
passType
Ti,R,N,V_passType
displayTitle
actionDisplayTitle
requiresConfirmation
displayPrice
regularPriceDisplayPrice
downloadSize
MPStoreOfferVariantDefault
MPStoreOfferVariantStandardQuality
MPStoreOfferVariantHighQuality
MPStoreOfferVariant (Unknown)
didSetPlaylistUserImage
TB,R,N,V_didSetPlaylistUserImage
playlistEntries
T@"MPSectionedCollection",C,N,V_playlistEntries
playlistDescription
T@"NSString",C,N,V_playlistDescription
T@"NSString",C,N,V_playlistName
playlistUserImage
T@"UIImage",&,N,V_playlistUserImage
T@"NSNumber",C,N,GisPublicPlaylist,V_publicPlaylist
T@"NSNumber",C,N,GisVisiblePlaylist,V_visiblePlaylist
T@"NSNumber",C,N,GisCuratorPlaylist,V_curatorPlaylist
isOwner
T@"NSNumber",C,N,V_isOwner
authorStoreIdentifier
T@"NSString",C,N,V_authorStoreIdentifier
parentPlaylist
T@"MPModelPlaylist",&,N,V_parentPlaylist
shouldCreatePlaylist
TB,N,V_shouldCreatePlaylist
MPNetworkObserverIsUsingNetworkDidChangeNotification
MPNetworkObserverIsMusicCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsVideoCellularStreamingAllowedDidChangeNotification
MPNetworkObserverIsMusicCellularDownloadingAllowedDidChangeNotification
MPNetworkObserverIsStoreCellularNetworkingAllowedDidChangeNotification
MusicAllowsCellularData
AllowsCellularDataDownloads
CellularDataMode
com.apple.mobileipod.playbackPreferencesChanged-MusicAllowsCellularData
com.apple.Music-AllowsCellularDataDownloads
com.apple.videos-preferences-changed
MPNetworkObserverInitException
-init is not supported, use +sharedNetworkObserver
com.apple.MediaPlayer.MPNetworkObserver
com.apple.itunesstored
AllowAutoDownloadOnCellular
sharedNetworkObserver
T@"MPNetworkObserver",R,N
isUsingNetwork
isMusicCellularStreamingAllowed
videoCellularStreamingAllowed
TB,N,GisVideoCellularStreamingAllowed
isMusicCellularDownloadingAllowed
TB,R,N,V_isMusicCellularDownloadingAllowed
isStoreCellularNetworkingAllowed
mpIsOnlyAC3
mpIsSDH
__localRepresentativeItem
cmcAlternateCollectionsUrl
artistID
childrenIdsByAlbumOrder
description.long
description.standard
studioName
complete
completeWithoutEquivalencies
rent
preorder
update
variant
multi
itunes
actionText.short
actionText.long
shortFilm
ipodGame
iosSoftware
itunesPass
booklet
softwareAddOn
iMix
gamePackage
itunesMix
ringtone
ringtoneAlbum
preorderAlbum
movieBundle
epubBook
concert
richPost
socialArtist
desktopApp
tone
toneAlbum
thirdPartyMix
course
metaEbook
ibook
ibookTextbook
standardAudio
plusAudio
iosTone
sdVideoWithPlusAudio
hvgaVideo
hdMusicVideo
iPodGame
macSoftware
publication
plusPublication
preview.url
preview.duration
@8@?0@?<@@?@"NSString"^@>4
@12@?0@"NSString"4^@8
studio
CMC-verboseLogging
CMC-showNonCompletionOffers
StoreOfferResponse-raw-%@
json
@"NSDictionary"8@?0@"NSData"4
archivedData
@"SSLookupResponse"8@?0@?<@"NSString"@?@"NSString"@"NSString">4
@"NSString"12@?0@"NSString"4@"NSString"8
~mobile/DebugStoreResponses
/tmp/DebugStoreResponses
CMC-saveStoreResponses
/var/mobile/Library/Caches/com.apple.mobileipod/TemporaryDebuggingData
%@/StoreOfferResponse-%@-%@.%@
Invalid archive type '%@'
v16@?0@"NSDictionary"4@"NSString"8@"NSString"12
raw-nonull
mpIsPersonalizedOffer
collectionRepresentativeItem
T@"MPMediaItem",&,N,V_collectionRepresentativeItem
yyyy-MM-dd
status = %@, expectedStoreLookupID = %@, responseItemID = %@, productURL = %@
v16@?0@4@"NSDictionary"8^B12
i12@?0@"NSDictionary"4@"NSDictionary"8
!$%.2f
@"NSDictionary"12@?0@"NSDictionary"4i8
startHandler
T@?,R,C,N,V_startHandler
storeAccountIdentifier
T@"NSNumber",R,C,N,V_storeAccountIdentifier
ColorSyncProfileCreateWithName
initColorSyncProfileCreateWithName
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/Artwork/ColorAnalysis/iTunesColorAnalyzer/Source/C++/GraphicsUtilities.cpp
softLinkColorSyncProfileCreateWithName
/System/Library/PrivateFrameworks/ColorSync.framework/ColorSync
ColorSyncLibrary
kColorSyncSRGBProfile
initkColorSyncSRGBProfile
ColorSyncProfileCopyData
initColorSyncProfileCopyData
softLinkColorSyncProfileCopyData
system
clientId
MPStoreOfferContentRatingDictionary
Ti,N,V_ratingLevel
ratingLabel
T@"NSString",C,N,V_ratingLabel
ratingSystem
TI,N,V_ratingSystem
ratingDescription
T@"NSString",C,N,V_ratingDescription
restrictedContent
TB,R,N,GisRestrictedContent
restrictedPurchase
TB,R,N,GisRestrictedPurchase
mediaPropertyContentRatingValue
itunes-games
esrb
games
mpaa
bbfc
fr-cnc
de-fsk
ca-chvrs
ie-ifco
au-oflc
jp-eirin
nz-oflc
ch-movies
es-movies
it-movies
gr-movies
be-movies
nl-movies
lu-movies
mx-movies
se-movies
fi-movies
no-movies
dk-movies
pt-movies
us-tv
uk-tv
fr-tv
de-tv
ca-tv
au-tv
jp-tv
us-cable
apple
_MPContentItemDidChangeNotification
_MPContentItemDidChangeUserInfoKeyDeltaItem
_MPContentItemNotificationsSuppressedKey
<%@: %p id=%@ title="%@">
v16@?0@"NSData"4{CGSize=ff}8
_mediaRemoteDeltaContentItem
T^v,R,N,V_mediaRemoteDeltaContentItem
_mediaRemoteContentItem
T^v,R,N,V_mediaRemoteContentItem
subtitle
streamingContent
TB,N,GisStreamingContent
TB,N,GisExplicitContent
container
TB,N,GisContainer
TB,N,GisPlayable
unfollowProfile
localFilePath
T@"NSString",C,N,V_localFilePath
T@"NSArray",C,N,V_sinfs
TB,N,V_hasSocialPosts
TI,R,N,V_currentStatus
T{MPLibraryAddStatusObserverConfiguration=BBBBB},R,N,V_configuration
T@"MPModelObject",R,N,V_identifyingModelObject
MP_lightness
com.apple.MediaPlayer.MPConcreteMediaEntity.subclasses
%@_%lu
@"MPConcreteMediaItemCollection"24@?0@"MPConcreteMediaItemCollection"4q8@"MPMediaQuery"16i20
@"MPConcreteMediaItemCollection"36@?0@"MPConcreteMediaItemCollection"4q8@"NSDictionary"16@"MPMediaQuery"20i24q28
v16@?0@"MPMediaEntity"4@"NSSet"8@?<v@?@"NSString"@^B>12
v8@?0@"MPMediaEntity"4
@12@?0@"MPMediaEntity"4@"NSString"8
@"NSMutableDictionary"12@?0@"MPMediaEntity"4@"NSSet"8
MPRadioLibraryErrorDomain
MPRadioLibraryStationsDidChangeNotification
isEnabled
stationCount
_MPStorePlatformDictionary
storeItemMetadata
T@"MPStoreItemMetadata",&,N,V_storeItemMetadata
T@"HSHomeSharingLibrary",&,N,V_library
TQ,R,N,V_persistentID
T{CGSize=ff},R,N,V_size
RepeatTypeOff
RepeatTypeOne
RepeatTypeAll
RepeatTypeUserDefault
Unknown
ShuffleTypeOff
ShuffleTypeSongs
ShuffleTypeAlbums
ShuffleTypeUserDefault
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.accessibility.describes-video
public.easy-to-read
public.translation
public.translation.dubbed
public.translation.voice-over
mrLanguageOption
T^v,R,N,V_mrLanguageOption
languageOptionType
TI,R,D,N
languageTag
T@"NSString",R,D,N
languageOptionCharacteristics
mrLanguageOptionGroup
T^v,R,N,V_mrLanguageOptionGroup
languageOptions
defaultLanguageOption
T@"MPNowPlayingInfoLanguageOption",R,D,N
allowEmptySelection
TB,R,D,N
localizedName
localizedDescription
T@"NSString",C,N,V_stationStringID
Tq,N,V_uniqueIdentifier
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_localizedDescription
MPRemoteCommandSeekActionUserInfoKey
MPRemoteCommandSeekIntervalUserInfoKey
MPRemoteCommandTargetsDidChangeNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/SDK/MPRemoteCommand.m
commandCenterDelegate
T@"<MPRemoteCommandDelegate_Internal>",W,N,V_commandCenterDelegate
observing
TB,N,GisObserving,V_observing
hasTargets
supported
TB,R,N,GisSupported
supportedAndEnabled
TB,R,N,GisSupportedAndEnabled
mediaRemoteCommandType
TI,R,N,V_mediaRemoteCommandType
T@"<MPRemoteCommandDelegate_Private>",W,N,V_delegate
TB,N,GisEnabled,V_enabled
preferredIntervals
T@"NSArray",C,N,V_preferredIntervals
active
TB,N,GisActive,V_active
localizedShortTitle
T@"NSString",C,N,V_localizedShortTitle
minimumRating
Tf,N,V_minimumRating
maximumRating
Tf,N,V_maximumRating
supportedPlaybackRates
T@"NSArray",C,N,V_supportedPlaybackRates
currentRepeatType
Ti,N,V_currentRepeatType
currentShuffleType
Ti,N,V_currentShuffleType
MPSystemAppSpecializedQueueQuickPlayIdentifier
MPSystemAppSpecializedQueueProminentStationIdentifier
canBeControlledByScrubbing
TB,N,V_canBeControlledByScrubbing
T@?,C,N,V_block
MPModelForYouRecommendationGroupPropertyGroupType
personalizedMix
recentlyPlayed
todaysPlaylists
heavyRotation
albumGroups
artistPlaylists
newReleases
albumRecommendations
; groupType = %@
MPModelForYouRecommendationGroupPropertyTitle
MPModelForYouRecommendationGroupPropertyLastUpdatedDate
; lastUpdatedDate = %@
groupType
lastUpdatedDate
MPModelForYouRecommendationGroupPropertySectionedItems
sectionedItems
MPModelForYouRecommendationGroupPropertySectionIndex
sectionIndex
MPModelForYouRecommendationGroupPropertySubgroups
subgroups
MPModelForYouRecommendationGroupPropertyLoadAdditionalContentURL
MPModelForYouRecommendationGroupPropertyRefreshURL
refreshURL
TI,N,V_groupType
T@"NSDate",&,N,V_lastUpdatedDate
T@"MPSectionedCollection",&,N,V_sectionedItems
Ti,N,V_sectionIndex
T@"NSArray",C,N,V_subgroups
kinds
T@"NSArray",R,N,V_kinds
MPModelPropertyPlaylistEntryPosition
position
MPModelRelationshipPlaylistEntryPlaylist
MPModelRelationshipPlaylistEntrySong
MPModelRelationshipPlaylistEntryTVEpisode
MPModelRelationshipPlaylistEntryMovie
_MPModelPropertyPlaylistEntryArtwork
_artworkCatalog
Ti,N,V_position
T@"MPArtworkCatalog",&,N,V__artworkCatalog
.viewUsage.%@
_AggregateViewDisplayCountKeyKey
aggregateStatisticsDisplayCountKey
T@"NSString",&,N
pageData
fcStructure
selectedChart
fcKind
link
content
links
kindIds
pageTitle
adamIds
v16@?0@"NSString"4i8^B12
unAvailableContentIds
rawResponseOutput
T@,R,N,V_rawResponseOutput
T{?=BB},R,N,V_options
previousParser
T@"MPModelStoreBrowseResponseParser",R,N,V_previousParser
additionalStoreItemMetadataResponse
T@"MPStoreItemMetadataResponse",R,N,V_additionalStoreItemMetadataResponse
sectionBuilder
T@"MPModelStoreBrowseSectionBuilder",R,N,V_sectionBuilder
contentItemBuilder
T@"MPModelStoreBrowseContentItemBuilder",R,N,V_contentItemBuilder
T@"MPSectionedCollection",R,N
T@"MPChangeDetails",R,N,V_changeDetails
additionalContentIdentifiers
allAdditionalContentIdentifiersNeedingLookup
%@: [Account: %@, Enqueuer: %@, Personalized? %d, Storefront: %@]
com.apple.MediaPlayer.MPStoreItemMetadataCacheKey
v12@?0@"ICUserIdentityProperties"4@"NSError"8
https:///
v12@?0@"NSURLRequest"4@"NSError"8
accountIdentifier
T@"NSNumber",C,N,V_accountIdentifier
enqueuerAccountIdentifier
T@"NSNumber",C,N,V_enqueuerAccountIdentifier
TB,N,GisPersonalized,V_personalized
storefrontIdentifier
T@"NSString",C,N,V_storefrontIdentifier
hasProperty
T@"NSString",&,N,V_property
hasValue
T@"MPPMediaPredicateValue",&,N,V_value
hasComparisonType
Ti,N,V_comparisonType
MPModelStoreBrowseSectionPropertyType
top-songs
top-albums
top-music-videos
apple-curators-grouping
external-curators-grouping
activities-grouping
playlists-grouping
; sectionType = "%@"
MPModelStoreBrowseSectionPropertyUniformContentItemType
apple-curator
external-curator
; uniformContentItemType = "%@"
MPModelStoreBrowseSectionPropertyTitle
sectionType
MPModelStoreBrowseSectionPropertyLoadAdditionalContentURL
uniformContentItemType
MPModelStoreBrowseSectionPropertyMemberOfChartSet
memberOfChartSet
MPModelStoreBrowseSectionPropertyBrick
brick
MPModelStoreBrowseSectionPropertyPreviouslyRetrievedNestedResponse
previouslyRetrievedNestedResponse
Ti,N,V_sectionType
Ti,N,V_uniformContentItemType
TB,N,GisMemberOfChartSet,V_memberOfChartSet
TB,N,GisBrick,V_brick
T@"MPModelStoreBrowseResponse",&,N,V_previouslyRetrievedNestedResponse
%@%@
;%@%lu %@
relationship
relationships
%@: %@%@
MPPropertySetProperties
MPPropertySetRelationships
T@"NSSet",R,N,V_properties
T@"NSDictionary",R,N,V_relationships
finalResponse
TB,N,GisFinalResponse,V_finalResponse
earliestExpirationDate
T@"MPModelTVEpisodeKind",R,N,V_episodeKind
MPModelPropertyTVSeasonNumber
number
MPModelPropertyTVSeasonDescriptionText
MPModelPropertyTVSeasonYear
MPModelPropertyTVSeasonEpisodesCount
episodesCount
MPModelPropertyTVSeasonHasCleanContent
MPModelPropertyTVSeasonHasExplicitContent
MPModelPropertyTVSeasonLibraryAddedDate
MPModelPropertyTVSeasonLibraryAdded
MPModelPropertyTVSeasonLibraryAddEligible
MPModelPropertyTVSeasonSortType
sortType
MPModelRelationshipTVSeasonShow
MPModelRelationshipTVSeasonRepresentativeEpisode
representativeEpisode
MPModelPropertyTVSeasonArtwork
Ti,N,V_number
Ti,N,V_episodesCount
Ti,N,V_sortType
T@"MPModelTVEpisode",&,N,V_representativeEpisode
Ti,N,SsetAVItemType:
, searchString = %@
, scopes = %@
MPModelLibrarySearchRequestMaximumResultsPerScope
MPModelLibrarySearchRequestScopes
MPModelLibrarySearchRequestSearchString
scopes
T@"NSArray",C,N,V_scopes
maximumResultsPerScope
Ti,N,V_maximumResultsPerScope
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPInlineVideoController.m
MPInlineVideoChaptersHide
MPInlineVideoTransitionFromFullscreen
MPInlineVideoTransitionToFullscreen
advertisementView
T@"UIView",R,N,V_advertisementView
audioOverlayStyle
Ti,N,V_audioOverlayStyle
fullscreenView
TB,N,V_navigationBarHidden
subtitlesView
T@"UIView",R,N,V_subtitlesView
videoOverlayStyle
Ti,N,V_videoOverlayStyle
TB,N,V_allowsDetailScrubbing
TB,N,V_alwaysAllowHidingControlsOverlay
TB,N,V_attemptAutoPlayWhenControlsHidden
T@"UIView",R,N,V_backgroundView
TB,N,V_canAnimateControlsOverlay
TB,N,V_canShowControlsOverlay
TB,N,V_controlsOverlayVisible
TB,N,V_disableAutoRotation
TB,N,V_displayPlaybackErrorAlerts
TB,N,V_inlinePlaybackUsesTVOut
TB,N,V_TVOutEnabled
resultContainers
T@"NSArray",R,C,N,V_resultContainers
entityQueryResult
T{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}},R,N,V_entityQueryResult
scope
T@"MPModelLibrarySearchScope",R,C,N,V_scope
entityTranslationContext
T@"MPMediaLibraryEntityTranslationContext",R,N,V_entityTranslationContext
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPModalPresentationWindow.m
Multiple alert controllers assigned to the same window: %@
v12@?0@"MPMediaLibraryArtwork"4@"NSError"8
MPArtworkResizeDomain
Image did not exist at URL: %@
ColorAnalysis
FocusRegions
fallbackCache
T@"NSCache",&,N,V_fallbackCache
artworkResizeUtility
T@"MPArtworkResizeUtility",&,N,V_artworkResizeUtility
usesFallbackCache
TB,N,V_usesFallbackCache
catalogIdentifier
T@,C,N,V_catalogIdentifier
screenshot
chapter
artist-hero
; artworkType = %@
; availableArtworkToken = %@
; fetchableArtworkToken = %@
T@"NSString",R,N,V_availableArtworkToken
T@"NSString",R,N,V_fetchableArtworkToken
blockSocialUser
; filePath = "%@"
; protectionType = "%@"
; hasPurchaseBundleFilePath = YES
; qualityType = "%@"
MPModelPropertyFileAssetFilePath
MPModelPropertyFileAssetFileSize
MPModelPropertyFileAssetNonPurgeable
nonPurgeable
MPModelPropertyFileAssetProtectionType
MPModelPropertyFileAssetPurchaseBundleFilePath
purchaseBundleFilePath
MPModelPropertyFileAssetQualityType
qualityType
T@"NSString",C,N,V_filePath
TQ,N,V_fileSize
Ti,N,V_protectionType
TB,N,GisNonPurgeable,V_nonPurgeable
T@"NSString",C,N,V_purchaseBundleFilePath
Ti,N,V_qualityType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAVOutputDeviceRoutingDataSource.m
routingContextUID
invalid class for %@
com.apple.mobilesafari
masterController
T@"MPInlineVideoController",W,N,V_masterController
placeholderTitle
T@"NSString",C,N,V_placeholderTitle
UAPayloadIdentifierExternalMediaContentIdentifier
UAPayloadIdentifierExternalMediaContentBundleIdentifier
v20@?0@"UAUserActivity"4@8@"NSString"12@?<v@?@"NSString"@"NSData"^@B>16
externalMediaContentIdentifier
-init is invalid. Use -initWithScrubbingControl: instead.
scrubbingControl
T@"UIControl<MPDetailedScrubbing>",W,N,V_scrubbingControl
T@"<MPDetailScrubControllerDelegate>",W,N,V_delegate
scrubbingVerticalRange
Tf,N,V_scrubbingVerticalRange
detailedScrubbingEnabled
TB,N,V_detailedScrubbingEnabled
durationAllowsForDetailedScrubbing
isTracking
TB,R,N,V_isTracking
currentScrubSpeed
Ti,R,N,V_currentScrubSpeed
requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
Ti,R,N,V_personalizationStyle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPUserNotification.m
cfUserNotification
com.apple.MediaPlayer.MPUserNotification.accessQueue
com.apple.MediaPlayer.MPUserNotification.callbackInvocationQueue
com.apple.MediaPlayer.MPUserNotification.userNotificationConversionAccessQueue
MPUserNotification.responseCompletionHandlerInvocation
T^{__CFUserNotification=},R,N,V_cfUserNotification
willShowNotificationHandler
repeatIndex
feederRevisionID
TQ,R,N,V_feederRevisionID
TI,R,N,V_repeatIndex
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPMediaEntityCache.mm
Use +sharedEntityCache
v8@?0r^{map<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >={__tree<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true> >=L}}}4
v8@?0^{map<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >={__tree<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true> >=L}}}4
-[MPMediaEntityCache _entityWithIdentifier:mediaEntityType:collectionGroupingType:loadEntityBlock:]
Invalid entity
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPAVEndpointRoute.m
endpoint
 connection=%@
T^v,R,N,V_endpoint
concernItemType
concernTypeId
concernItemId
commentText
concernItemAUCType
commentId
reasonsForArtistPost
reasonsForArtistComment
reasonsForUserComment
reasonsForSharedPlaylist
reasonsForSocialProfile
musicCommon
reportConcern
musicConnect
deleteComment
deleteSocialPost
sharedReporter
T@"MPStoreContentReporter",R,N
<%@: %p %@:'%@'>
displayText
T@"NSString",C,N,V_displayText
userID
T@"NSString",C,N,V_userID
contentID
T@"NSString",C,N,V_contentID
Ti,N,V_concernItemType
T@"NSString",C,N,V_commentText
T@"NSString",C,N,V_aucType
concernTypeID
T@"NSString",C,N,V_concernTypeID
ARTIST_POST
ARTIST_COMMENT
USER_COMMENT
PUBLIC_PLAYLIST
SOCIAL_PROFILE
width
height
cacheID
T@"NSString",R,N,V_cacheID
T@"MPModelLibraryKeepLocalChangeRequest",C,N,V_request
T@"MPMediaItem",&,N,V_mediaItem
Ti,N,V_keepLocal
MPAVRoutingDataSourceActiveAudioRouteDidChangeNotification
MPAVRoutingDataSourceRoutesDidChangeNotification
MPAVRoutingDataSourceVolumeControlAvailabilityDidChangeNotification
MPAVRoutingDataSourceExternalScreenTypeDidChangeNotification
MPAVRoutingDataSourceFailureNotification
Route
VolumeControlAvailability
ExternalScreenType
%@ is abstract
devicePresenceDetected
TB,R,N,V_devicePresenceDetected
; endpointType = "%td"
; shouldReportPlayEvents = %@
MPModelPropertyStoreAssetEndpointType
MPModelPropertyStoreAssetRedownloadParameters
MPModelPropertyStoreAssetRedownloadable
MPModelPropertyStoreAssetAccountIdentifier
MPModelPropertyStoreAssetShouldReportPlayEvents
MPModelPropertyStoreAssetSubscriptionRequired
redownloadable
shouldReportPlayEvents
Ti,N,V_endpointType
TB,N,GisRedownloadable,V_redownloadable
TQ,N,V_accountIdentifier
TB,N,V_shouldReportPlayEvents
TB,N,GisSubscriptionRequired,V_subscriptionRequired
playlistGlobalID
T@"NSString",R,N,V_playlistGlobalID
tasteType
TI,R,N,V_tasteType
UUID
T@"NSUUID",R,N,V_UUID
seasonKind
T@"MPModelTVSeasonKind",R,C,N,V_seasonKind
MPModelPropertyTVShowTitle
MPModelPropertyTVShowShortTitle
shortTitle
MPModelPropertyTVShowEditorNotes
MPModelPropertyTVShowShortEditorNotes
MPModelRelationshipTVShowCreator
creator
MPModelPropertyTVShowArtwork
MPModelPropertyTVShowEditorialArtwork
MPModelPropertyTVShowEpisodeCount
MPModelPropertyTVShowTagline
T@"MPModelTVShowCreator",C,N,V_creator
T@"NSString",C,N,V_shortTitle
idx (%ld) is out of range (%ld)
hasShouldContain
TB,N,V_shouldContain
persistentIDsCount
T^q,R,N
integerPredicateValue
doublePredicateValue
floatPredicateValue
boolPredicateValue
stringPredicateValue
bytesPredicateValue
hasIntegerPredicateValue
Tq,N,V_integerPredicateValue
hasDoublePredicateValue
Td,N,V_doublePredicateValue
hasFloatPredicateValue
Tf,N,V_floatPredicateValue
hasBoolPredicateValue
TB,N,V_boolPredicateValue
hasStringPredicateValue
T@"NSString",&,N,V_stringPredicateValue
hasBytesPredicateValue
T@"NSData",&,N,V_bytesPredicateValue
MPModelPropertySocialPersonUncensoredName
MPModelPropertySocialPersonHandle
MPModelPropertySocialPersonBiography
MPModelPropertySocialPersonIsPrivate
MPModelPropertySocialPersonIsVerified
MPModelPropertySocialPersonPendingRequestsCount
MPModelPropertySocialPersonArtwork
uncensoredName
T@"NSString",C,N,V_uncensoredName
biography
T@"NSString",C,N,V_biography
TB,N,GisPrivate,V_privatePerson
verified
TB,N,GisVerified,V_verified
pendingRequestsCount
Ti,N,V_pendingRequestsCount
MPNowPlayingObserverArtworkCacheIdentifier
com.apple.MediaPlayer.MPNowPlayingObserver.accessQueue
image/none
VideoPlayer_External
edgeInsets
T{UIEdgeInsets=ffff},N,V_edgeInsets
shuffleController
v16@?0@"MPIdentifierSet"4@"NSNumber"8^B12
app.music.queue-source.library
v8@?0@"MPModelPlayEvent"4
com.apple.mobileipod.MediaQueryQueueFeeder
-[MPMediaQueryQueueFeeder _verifyQueueInvalidationCompletionHandler:]
T@"MPMediaQuery",C,N,V_query
cloudDialogAllowedMediaItem
T@"MPMediaItem",&,N,V_cloudDialogAllowedMediaItem
musicFriends
MPStoreSocialErrorDomain
MPStoreSocialServiceControllerTransientStatesDidChangeNotification
MPStoreSocialServiceControllerTransientStatesSnapshotKey
_MPStoreSocialTransientStateDidChangeNotification
com.apple.MediaPlayer.MPStoreSocialServiceController.operationQueue
com.apple.MediaPlayer.MPStoreSocialServiceController.accessQueue
v12@?0@"_MPStoreSocialTransientState"4^B8
v8@?0@"_MPStoreSocialTransientState"4
com.apple.MediaPlayer._MPStoreSocialTransientState.accessQueue
com.apple.MediaPlayer._MPStoreSocialTransientState.calloutQueue
T@"MPModelSocialPerson",R,N,V_person
followState
followPendingRequestState
completionBlock
T@?,C,N,V_completionBlock
@"MPArtworkCatalog"8@?0@"MPModelMovie"4
MPIdentifierSetDeviceLibraryPersistentID
MPIdentifierSetHomeSharingLibraryID
MPIdentifierSetStoreAdamID
MPIdentifierSetStoreCloudAlbumID
MPIdentifierSetStoreCloudID
MPIdentifierSetCloudUniversalLibraryID
MPIdentifierSetStorePurchasedAdamID
MPIdentifierSetStoreSubscriptionAdamID
MPIdentifierSetRadioStationStringID
MPIdentifierSetRadioStationHash
MPIdentifierSetRadioStationID
MPIdentifierSetGlobalPlaylistID
MPIdentifierSetContentItemID
MPIdentifierSetLyricsID
MPIdentifierSetVendorID
MPIdentifierSetInformalMediaClipID
MPIdentifierSetInformalStaticAssetID
MPIdentifierSetSocialProfileID
MPIdentifierSetSyncID
MPIdentifierSetStoreRecommendationID
; deviceLibraryPersistentID = %lld
; homeSharingLibraryID = %lld
; storeAdamID = %lld
; storeCloudAlbumID = "%@"
; storeCloudID = %lld
; cloudUniversalLibraryID = "%@"
; storePurchasedAdamID = %lld
; storeSubscriptionAdamID = %lld
; radioStationStringID = "%@"
; radioStationID = %lld
; radioStationHash = "%@"
; globalPlaylistID = "%@"
; storeRecommendationID = "%@"
; contentItemID = "%@"
; lyricsID = "%@"
; vendorID = "%@"
; informalMediaClipID = "%@"
; informalStaticAssetID = "%@"
; socialProfileID = "%@"
; syncID = %lld
; %@ = %@
emptyIdentifierSet
T@"MPIdentifierSet",R
deviceLibraryPersistentID
Tq,N,V_deviceLibraryPersistentID
homeSharingLibraryID
Tq,N,V_homeSharingLibraryID
Tq,N,V_storeAdamID
T@"NSString",C,N,V_socialProfileID
T@"NSString",C,N,V_storeCloudAlbumID
radioStationStringID
T@"NSString",C,N,V_radioStationStringID
radioStationHash
T@"NSString",C,N,V_radioStationHash
Tq,N,V_radioStationID
storeRecommendationID
T@"NSString",C,N,V_storeRecommendationID
lyricsID
T@"NSString",C,N,V_lyricsID
vendorID
T@"NSString",C,N,V_vendorID
informalMediaClipID
T@"NSString",C,N,V_informalMediaClipID
informalStaticAssetID
T@"NSString",C,N,V_informalStaticAssetID
Tq,N,V_syncID
recommendedEntities
entityId
lockup
T@"MPStoreFollowRecommendationsRequest",C,N,V_request
AUTO_SUBTITLES
SUBTITLE_TRACK_DISPLAY_FORMAT_%@_%@
CC_SUBTITLE_FORMAT_%@
UNKNOWN_LANGUAGE
isInBand
locale
T@"NSLocale",R,N
Ti,N,V_tag
; podcast = %@
MPModelPropertyPodcastEpisodeTitle
MPModelPropertyPodcastEpisodeReleaseDateComponents
MPModelPropertyPodcastEpisodeDuration
MPModelPropertyPodcastEpisodeUserRating
MPModelPropertyPodcastEpisodeExplicit
explicitEpisode
MPModelPropertyPodcastEpisodeDescriptionText
MPModelPropertyPodcastEpisodeCommentText
MPModelPropertyPodcastEpisodeDatePlayed
MPModelPropertyPodcastEpisodeFeedURL
MPModelRelationshipPodcastEpisodeLocalFileAsset
MPModelRelationshipPodcastEpisodePodcast
MPModelRelationshipPodcastEpisodeAuthor
MPModelRelationshipPodcastEpisodePlaybackPosition
MPModelPropertyPodcastEpisodeArtwork
TB,N,GisExplicitEpisode,V_explicitEpisode
T@"NSURL",C,N,V_feedURL
<%@ %p %@>
artworkConfiguration
T@"ML3ArtworkConfiguration",&,N,V_artworkConfiguration
MPRestrictionsMonitorAllowsAccountModificationDidChangeNotification
MPRestrictionsMonitorAllowsDeletionDidChangeNotification
MPRestrictionsMonitorAllowsExplicitContentDidChangeNotification
MPRestrictionsMonitorAllowsRadioPurchasesDidChangeNotification
MPRestrictionsMonitorAllowsStorePurchasesDidChangeNotification
com.apple.MediaPlayer.MPRestrictionsMonitor.accessQueue
sharedRestrictionsMonitor
T@"MPRestrictionsMonitor",R,N
allowsAccountModification
TB,R,N,V_allowsAccountModification
allowsDeletion
TB,R,N,V_allowsDeletion
allowsExplicitContent
TB,R,N,V_allowsExplicitContent
allowsStorePurchases
TB,R,N,V_allowsStorePurchases
allowsRadioPurchases
TB,R,N,V_allowsRadioPurchases
maximumTVShowRating
maximumMovieRating
hasRestrictionsPasscode
PSRestrictionsPasscodeController
initPSRestrictionsPasscodeController
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPRestrictionsMonitor.m
classPSRestrictionsPasscodeController
/System/Library/PrivateFrameworks/Preferences.framework/Preferences
PreferencesLibrary
cropStyle
artworkDictionaries
shouldIgnoreImage
sourceEditorialArtworkKind
T@"NSURL",C,N,V_artworkURL
lookupItemArtworks
T@"NSArray",C,N,V_lookupItemArtworks
T@"NSString",C,N,V_cropStyle
TB,N,V_shouldIgnoreImage
T@"NSString",C,N,V_sourceEditorialArtworkKind
LWHQ
MPStoreDownloadAttributeBackgroundRequest
MPStoreDownloadAttributeBuyParameters
MPStoreDownloadAttributeClientBundleIdentifier
MPStoreDownloadAttributeDisplaysOnLockscreen
MPStoreDownloadAttributeDownloadHandlerIdentifier
MPStoreDownloadAttributeKind
MPStoreDownloadAttributeLibraryItemIdentifier
MPStoreDownloadAttributeOriginator
MPStoreDownloadAttributeReason
MPStoreDownloadAttributeShouldDisableCellularRestrictionEnforcement
MPStoreDownloadAttributeShouldRespectMusicCellularDataRestriction
MPStoreDownloadAttributeShouldRespectStoreCellularDataRestriction
MPStoreDownloadAttributeStoreSagaItemIdentifier
MPStoreDownloadAttributeStoreItemIdentifier
MPStoreDownloadAttributeTitle
MPStoreDownloadAttributeURLBagKey
MPStoreDownloadAttributeSkipInstall
MPStoreDownloadErrorDomain
tilthistory
tiltmediacontrols
tiltnowplaying
tiltstore
tiltwishlist
MPStoreDownloadPhaseCanceled
MPStoreDownloadPhaseDataRestore
MPStoreDownloadPhaseDownloading
MPStoreDownloadPhaseFailed
MPStoreDownloadPhaseFinished
MPStoreDownloadPhaseInstalling
MPStoreDownloadPhasePaused
MPStoreDownloadPhasePreflight
MPStoreDownloadPhaseProcessing
MPStoreDownloadPhasePurchasing
MPStoreDownloadPhaseWaiting
buyProduct
subDownload
MPStoreDownloadURLBagKeyOverride
com.apple.MediaPlayer.MPStoreDownload.accessQueue
<%@ %p %@ error:%@ canceled:%@>
%@-%@
attributes
T@"NSDictionary",R,N,V_attributes
bytesDownloaded
bytesTotal
canceled
TB,R,N,GisCanceled
downloadSizeLimit
failureError
finished
TB,R,N,GisFinished
purchasing
TB,R,N,GisPurchasing
paused
TB,R,N,GisPaused
libraryItemIdentifier
percentComplete
phaseIdentifier
purchaseError
rentalInformation
restore
TB,R,N,GisRestore
storeItemIdentifier
&reporting=%@
;stationId:%llu
;stationHash:%@
MPStoreDownloadManagerDidFetchInitialDownloadsNotification
MPStoreDownloadManagerInitException
-init is not supported. Use +sharedManager instead.
com.apple.MediaPlayer.MPStoreDownloadManager.accessQueue
com.apple.MediaPlayer.MPStoreDownloadManager.calloutQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-3433.2/MPStoreDownloadManager.m
Downloads must not be empty.
/var/tmp/Media
%@/%@.%@
activeDownloads
downloads
userDownloads
usingNetwork
TB,R,N,GisUsingNetwork
didFinishDownloadHandler
T@?,C,N,V_didFinishDownloadHandler
didFinishPurchaseHandler
T@?,C,N,V_didFinishPurchaseHandler
download
T@"MPStoreDownload",R,N,V_download
downloadFilePath
T@"NSString",C,N,V_downloadFilePath
skipInstall
TB,N,V_skipInstall
@"MPArtworkCatalog"8@?0@"MPModelSocialPerson"4
v8@?0@"MPModelSocialPerson"4
songKind
T@"MPModelSongKind",R,N,V_songKind
; genre = %@
MPModelPropertyAlbumTitle
MPModelRelationshipAlbumArtist
MPModelRelationshipAlbumGenre
MPModelRelationshipAlbumRepresentativeSong
representativeSong
MPModelPropertyAlbumTrackCount
MPModelPropertyAlbumMaximumItemTrackNumber
maximumItemTrackNumber
MPModelPropertyAlbumDiscCount
MPModelPropertyAlbumHasCleanContent
MPModelPropertyAlbumHasExplicitContent
MPModelPropertyAlbumIsCompilation
MPModelPropertyAlbumIsClassical
classical
MPModelPropertyAlbumReleaseDateComponents
MPModelPropertyAlbumArtwork
MPModelPropertyAlbumCopyrightText
MPModelPropertyAlbumEditorialArtwork
MPModelPropertyAlbumLibraryAddedDate
MPModelPropertyAlbumYear
MPModelPropertyAlbumLibraryAdded
MPModelPropertyAlbumVolumeNormalization
MPModelPropertyAlbumKeepLocalEnableState
MPModelPropertyAlbumKeepLocalManagedStatus
MPModelPropertyAlbumLibraryAddEligible
MPModelPropertyAlbumLastDevicePlaybackDate
MPModelPropertyAlbumPreorder
MPModelPropertyAlbumEditorNotes
MPModelPropertyAlbumShortEditorNotes
MPModelPropertyAlbumSongPopularity
songPopularityBlock
Ti,N,V_trackCount
Ti,N,V_maximumItemTrackNumber
Ti,N,V_discCount
TB,N,GisCompilation,V_compilation
TB,N,GisClassical,V_classical
T@"MPModelSong",&,N,V_representativeSong
TB,N,GisPreorder,V_preorder
T@?,C,N,V_songPopularityBlock
propertyPredicate
compoundPredicate
persistentIDsPredicate
searchStringPredicate
hasType
hasPropertyPredicate
T@"MPPPropertyPredicate",&,N,V_propertyPredicate
hasCompoundPredicate
T@"MPPCompoundPredicate",&,N,V_compoundPredicate
T@"MPPConditionalPredicate",&,N,V_conditionalPredicate
hasPersistentIDsPredicate
T@"MPPPersistentIDsPredicate",&,N,V_persistentIDsPredicate
hasSearchStringPredicate
T@"MPPSearchStringPredicate",&,N,V_searchStringPredicate
NSFastEnumeration
MPModelStoreBrowseContentItemBuilder
MPMediaDownloadManager
MPStoreSocialUnblockOperationDataSource
MPStoreSocialRequestOperationDataSource
NSObject
MPMediaLibraryView
NSCopying
MPUtilities
MPMiddlewareOperation
MPRequest
MPRequestCancellationToken
MPResponse
MPMovieTVHUDView
MPModelResponse
MPModelLyrics
MPMoviePlayerController
MPMediaPlayback
MPMovieThumbnailRequest
MPMovieView
MPMoviePlayerControllerNew
MPMovieViewDelegate
%!QAB
MPTimedMetadata
MPMovieAccessLog
MPMovieErrorLog
MPMovieAccessLogEvent
MPMovieErrorLogEvent
MPAssistantAnalyticsReportingController
MPAlternateTrack
MPUniversalTrackIDAdditions
MPAVControllerToAggregateDCommunicator
MPRTCReportingSession
MPAlternateTracks
AVPlayerItemLegibleOutputPushDelegate
AVPlayerItemOutputPushDelegate
MPTiledArtworkRequest
MPRTCReportingEvent
MPArrayQueueFeeder
MPArrayQueueItem
MPModelLibraryDeleteEntityChangeRequestOperation
MPAVItem
MPNowPlayingContentItemLyricsDataSource
EA1!
MPAVItemAdditions
MPStoreItemMetadataRequest
MPQueueFeeder
MPQueueBehaviorManaging
NSCoding
MPModelLibraryDeleteEntityChangeRequest
MPStoreItemMetadata
NSSecureCoding
MPTimeMarker
MPAVItemTimeMarkerEvent
MPTimeMakerHelper
MPAVRoutingTableViewCell
MPAVRoutingThemeableCellView
MPAVSystemLegacyRoutingCoordinator
MPTiledArtworkDataSource
MPArtworkDataSource
4@P a
MPModelLibraryRequestOperation
_MPModelLibraryRequestItemsQueryOperation
MPModelTVEpisodePlaybackItemMetadata
MPAVController
AVAudioSessionDelegateMediaPlayerOnly
AVAudioSessionDelegate
ICEnvironmentMonitorObserver
MPAVPlaylistManagerDelegate
MPAVRoutingControllerDelegate
MPStoreItemOffer
MPArtworkCatalog
MPStoreItemMovieClip
MPPlayerPlaybackLeaseController
MPStoreRedownloadProductResponse
MPStoreModelRadioStationBuilder
MPModelSongKind
MPModelSong
MPAVTelevisionRoutingDataSource
MPAssistantMusicLogEvent
MPAssistantLogEvent
MPMediaLibraryAlbumAppData
MPAVDescriptorRoute
MPBidirectionalDictionary
NSMutableCopying
MPMutableBidirectionalDictionary
MPStoreFileAssetInfo
MPQueryPlaybackContext
MPWeakTimer
MPModelLibraryKeepLocalChangeRequest
MPVideoViewController
MPVideoControllerProtocol
MPControllerProtocol
MPSwipableViewDelegate
MPAVControllerNode
MPViewController
MPPCompoundPredicate
MPStoreRedownloadProductOperation
MPReflectionImageView
MPTiledArtworkRepresentationCacheKey
MPArtworkDataSourceVisualIdenticality
MPRemotePlaybackQueue
MPLocalMediaQueryRemotePlaybackQueue
MPRadioStationRemotePlaybackQueue
MPGenericTracklistPlaybackQueue
MPQuickPlayPlaybackQueue
MPGeniusPlaybackQueue
MPCustomDataPlaybackQueue
MPEmptyPlaybackQueue
MPStoreLyricsRequest
MPModelPodcastAuthor
MPStoreFollowingRequest
MPStoreFollowingResponse
_MPStoreFollowingOperation
MPRadioRecentStationsGroup
MPModelStoreBrowseSectionBuilder
MPTransportButton
MPTransportControls
MPStoreModelAlbumBuilder
MPTVOutWindow
MPModelLibrarySearchScope
MPMusicSubscriptionLeaseController
MPModelLibraryAlbumAppDataChangeRequestOperation
MPModelLibraryAddToPlaylistChangeRequest
MPVideoBackgroundView
MPVideoDestinationBackgroundView
MPModelStoreBrowseResponse
MPArtworkResizeUtility
MPSectionedCollection
MPMutableSectionedCollection
MPStoreModelTVShowBuilder
MPVideoView
MPModelPlayEvent
MPModelForYouRecommendationsResponse
MPVideoPlaybackOverlayView
UIPopoverPresentationControllerDelegate
UIAdaptivePresentationControllerDelegate
MPVideoOverlay
MPDetailSliderDelegate
MPKnockoutButton
MPStoreRedownloadProductItem
MPTracklistEnumerator
MPTracklistReverseEnumerator
_MPTracklistProxyEntry
MPTracklistEnumerationResult
_MPTracklistTailEntry
MPTracklistEnumerationTrackingEntry
MPCFastForward
MPAVMetadataItem
MPAVRoutingEmptyStateView
MPStoreHLSAssetInfo
MPAssistantMusicSummaryLogEvent
MPSubscriptionLeaseExternalErrorUpdateOperation
MPVolumeSlider
MPVolumeControllerDelegate
MPVolumeView
MPSparseArray
_MPSparseArrayNode
MPModelLibraryRequest
MPModelRequestDetailedKeepLocalStatusRequesting
MPModelLibraryResponse
MPModelResponseDetailedKeepLocalStatusRequesting
MPModelLibraryResponseKeepLocalStatusConfiguration
MPStreamingDownloadSession
MPStorePlayWhileDownloadSession
MPMediaLibraryPlaybackItemMetadata
MPModelForYouRecommendationsRequest
MPVolumeViewController
MPVolumeSettingsController
MPAVPeriodicTimeObserverInfo
_MPMediaLibraryEntityPropertyTranslator
_MPMediaLibraryEntityRelationshipTranslator
MPMediaLibraryEntityTranslator
MPMediaLibraryEntityTranslatorAdditions
MPMediaLibraryEntityTranslationContext
MPTracklistEntryPositionKey
MPTracklistEnumerationItem
MPTracklistEntry
MPTracklistHeadEntry
MPTracklistItemEntry
MPMoviePlayerViewController
MPMoviePlayerViewControllerInternal
MPRemoteCommandEvent
MPSkipIntervalCommandEvent
MPSeekCommandEvent
MPRatingCommandEvent
MPChangePlaybackRateCommandEvent
MPFeedbackCommandEvent
MPSkipTrackCommandEvent
MPSpecialSeekCommandEvent
MPPurchaseCommandEvent
MPChangePlaybackPositionCommandEvent
MPChangeRepeatModeCommandEvent
MPChangeShuffleModeCommandEvent
MPCreateRadioStationCommandEvent
MPSetPlaybackQueueCommandEvent
MPReorderQueueCommandEvent
MPInsertIntoPlaybackQueueCommandEvent
MPChangeLanguageOptionCommandEvent
MPAdvanceShuffleModeCommandEvent
MPAdvanceRepeatModeCommandEvent
MPChangePlaybackProgressCommandEvent
MPModelLibraryDefaultSectionedCollectionDataSource
MPLazySectionedCollectionDataSource
MPModelStoreBrowseRequest
MPModelArtistKind
MPModelArtist
MPAVRoutingController
MPCompleteMyCollectionArtworkDataSource
MPModelComposerKind
MPModelComposer
MPRTCReportingPrepareInternalSessionOperation
MPSubscriptionLeaseAssetRequestOperation
_MPMediaLibraryMLCoreStorage
MediaLibraryCore
MPModelStoreBrowseSectionUniformContentItemTypeResolver
MPContentItemAdditions
0"1Q
0"1B
0"0B
0"0@
MPStoreAVItem
AVAssetResourceLoaderDelegate
SSVSecureKeyDeliveryRequestOperationDelegate
MPRTCReportingItemSessionCreating
MPStoreAVItemAdditions
MPPlaybackContext
MPAutomaticProperties
MPSwipableView
UIGestureRecognizerDelegate
MPSwipeGestureRecognizer
MPTapGestureRecognizer
MPActivityGestureRecognizer
MPContentTasteController
MPStoreItemMetadataRequestController
MPButton
MPPlaybackControlsView
CAAnimationDelegate
MPMediaPlaylist
MPMediaPlaylistCreationMetadata
MPModelTVEpisodeKind
MPModelTVEpisode
MPModelLibraryGlobalPlaylistImportChangeRequestOperation
MPMediaQuery
MPPProtobufferCoding
MPMediaPredicate
MPMediaPropertyPredicate
MPMediaConditionalPredicate
MPMediaCompoundPredicate
MPMediaCompoundAllPredicate
MPMediaCompoundAnyPredicate
MPMediaContainmentPredicate
MPMediaPersistentIDsPredicate
_MPMediaSearchStringPredicate
MPMediaQueryAdditions
MPModelLibraryImportChangeRequestOperation
MPStoreModelPlaylistBuilder
MPMusicPlayerController
MPMusicPlayerControllerInternal
MPSubscriptionLeaseFairPlayStatusUpdateOperation
NewMP
MPArtworkRepresentation
_MPStaticArtworkVisualIdenticalityIdentifier
_MPArtworkCatalogStaticDataSource
MPPConditionalPredicate
MPAsyncOperation
MPStoreFollowStatusController
_MPStoreFollow
MPMediaItem
MPNondurableMediaItem
MPMediaItemArtwork
MPTracklistIdentifierPair
MPModelLibraryKeepLocalStatusRequestOperation
QueryCriteriaResultsCache
MPMediaLibrary
MPMediaLibraryContentProtectionAdditions
MPMediaLibraryConnectionAssertion
_MPMediaLibraryEntityChange
MPMediaLibrarySyncAnchorSupport
MPModelRequest
_MPServerDelayedInvocation
MPServerObject
MPServerObjectProxy
_MPServerClientBundleInformation
MPMediaPickerController
MPAVQueueCoordinator
MPLogDescription
MPAVQueueCoordinatorAdditions
MPStoreModelMovieMediaClipBuilder
MPLibraryKeepLocalStatusObserver
MPMediaDownloadObserver
MPLibraryKeepLocalStatusObserverConfiguration
MPLibraryKeepLocalStatusObserverDetailedContainerConfiguration
MPLibraryKeepLocalStatusObserverIndividualEntityConfiguration
MPMediaItemCollection
MPMediaDownload
MPStoreModelArtistBuilder
MPAVErrorResolverBlockHandler
MPAVErrorResolverDelegate
MPDetailSlider
MPDetailedScrubbing
MPDetailScrubControllerDelegate
MPMusicPlayerApplicationController
MPMusicPlayerControllerQueue
MPMusicPlayerControllerMutableQueue
MPPlayableContentManager
MPPlayableContentCallbackContext
MPStoreLyricsRequestOperation
MPAudioDeviceController
MPLazySectionedCollection
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerInternal
MPMusicPlayerMigServer
MPMusicPlayerClientState
MPModelStaticAsset
MPAVRoutingViewController
MPAVRoutingTableViewCellDelegate
UITableViewDataSource
UITableViewDelegate
UIScrollViewDelegate
MPStoreModelSongBuilder
MPClientMediaPickerController
MPServiceMediaPickerController
MPRemoteMediaPickerController
MPInlineAudioOverlay
MPInlineAudioTransportControls
MPModelObjectMediaItem
MPStoreItemOfferAsset
MPMovie
MPStoreItemMetadataCache
MPNowPlayingInfoLyricsItemToken
MPNowPlayingInfoLyricsItem
MPNowPlayingInfoLyricsEvent
MPStoreSocialFollowOperationDataSource
MPAdditions
MPAVAuxiliaryDevice
_MPAbstractNetworkArtworkDataSourceVisualIdenticalityIdentifier
MPAbstractNetworkArtworkDataSource
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
_MPArtworkDataSourceURLCache
MPMusicPlayerQueueDescriptor
MPMusicPlayerMediaItemQueueDescriptor
MPMusicPlayerStoreQueueDescriptor
MPMusicPlayerPlayParameters
MPMusicPlayerPlayParametersQueueDescriptor
MPModelSortDescriptor
MPMultiSortDescriptor
MPModelLibraryModelSectionedCollectionDataSource
MPModelLazySectionedCollectionDataSource
MPAVErrorResolver
MPAVErrorResolverAdditions
MPModelMediaClip
MPConcreteMediaItem
MPCacheableConcreteMediaEntity
MPConcreteMediaItemArtwork
MPConcreteMediaItemCollection
MPConcreteMediaPlaylist
MPMediaArray
MPMediaEntityResultSetArray
MPConcreteMediaEntityPropertiesCache
MPModelPlaybackContext
MPMediaLibraryAdditions
0"2@`
0"3`
0"2@
0"1@
MPMediaLibraryDataProviderML3
MPMediaLibraryDataProviderPrivate
MPMediaLibraryDataProvider
MPMediaLibraryDataProviderML3Additions
MPAVRouteConnection
ML3Additions
MPModelStaticRequest
MPModelStaticResponse
MPModelLibraryAlbumAppDataChangeRequest
MPAVRoutingTableHeaderView
MPStoreFileAssetFairPlayInfo
MPWeakRef
MPStreamingDownloadSessionRequest
MPMediaEntity
MPMediaQuerySectionInfo
MPMediaQueryMutableSectionInfo
MPStorePlayWhileDownloadController
MPStoreDownloadManagerObserver
SSDownloadHandlerDelegate
MPVolumeController
MPStoreFollowOperation
MPMediaChapter
MPStoreLibraryPersonalizationCollectionDataSource
MPMediaChapterTimeMarker
MPAudioVideoRoutingPopoverController
MPAVRoutingViewControllerDelegate
MPMediaPlaybackItemMetadata
MPMediaPlaybackItemMetadataAdditions
MPKeyValueObserver
MPModelLibrarySearchRequestOperation
MPAVRoute
MPModelForYouRecommendationsRequestOperation
MPStoreDownloadExpectationController
MPStoreLibraryMappingResponse
MPModelStoreBrowseRequestOperation
MPModelMovieKind
MPModelMovie
MPModelRadioStation
MPModelTVShowCreator
MPPlaceholderArtwork
MPAVLegacyRoutingDataSource
MPMediaAdditions
MPModelPlaylistEntriesShareEligibilityRequestOperation
MPModelLibraryAddToPlaylistChangeRequestOperation
MPStoreModelPlaybackPositionBuilder
MPModelPodcastKind
MPModelPodcast
MPPasswordAlertView
UIAlertViewDelegate
MPModelLibraryHasBeenPlayedChangeRequest
MPShuffleController
MPStoreArtworkDataSource
MPMediaQuerySection
MPArtworkResizeOperation
MPBrowsableContentItem
MPArtworkColorAnalysis
MPMutableArtworkColorAnalysis
Debugging
Padding
MPModelStoreBrowseContentItem
MPModelMoviePlaybackItemMetadata
MPStoreModelTVEpisodeBuilder
MPPSearchStringPredicate
MPExternalMediaContentManager
MPMediaLibraryDataProviderSystemML3StringCoercion
MPMediaLibraryDataProviderSystemML3
MPStoreAVPlayerItem
MPStoreModelGenericObjectBuilder
MPAVBatteryLevel
5@P`
0$0@
MPStoreLibraryPersonalizationRequestOperation
_MPStoreLibraryPersonalizationAggregateLibraryAddedOperation
MPPlaybackUserDefaults
MPVolumeHUDController
MPAVPlaylistManager
MPQueueFeederDelegate
MPAVQueueCoordinatorDataSource
MPAVQueueController
MPStoreAssetPlaybackResponse
MPMutableStoreAssetPlaybackResponse
MPModelAdditions
MPCloudServiceStatusController
ISURLBagObserver
SSVPlaybackLeaseDelegate
MPPMediaQuery
MPStoreModelStoreAssetBuilder
MPModelVerifyLocalFileAssetIntegrityRequest
MPMediaQueryCriteria
MPStoreSocialPendingFollowRequestOperationDataSource
MPStoreItemImportTrackData
MPRTCReportingSessionSummaryEvent
MPModelForYouRecommendationItem
_MPLog
MPLibraryAddStatusObserverAdditions
MPRTCReportingItemSessionContaining
MPRTCReportingController
_MPRTCReportingAVItemDeallocationHandler
MPModelLibraryPlaylistEditChangeRequestOperation
MPProtocolProxy
MPModelLibraryTransientStateController
_MPModelLibraryRegisteredTransientState
_MPModelLibraryItemArtist
_MPModelLibraryPodcastEpisodeAuthor
MPMediaLibraryTranslatorSchema
MPNowPlayingInfoCenterArtworkContext
MPNowPlayingInfoCenter
MPModelObject
MPModelKind
MPLibraryRemovalAdditions
MPLibraryKeepLocalStatusObserverAdditions
MPSubscriptionStatusPlaybackInformation
MPHSBrowserDelegate
HSBrowserDelegate
MPHomeSharingML3DataProvider
MPStoreModelCuratorBuilder
MPHomeSharingURLProtocol
MPCubicSpringTimingParameters
MPCubicSpringAnimator
MPMediaLibraryArtworkRequest
MPMediaLibraryArtwork
MPMediaLibraryArtworkCatalog
MPModelPlaylistEntryTVEpisodePlaybackItemMetadata
MPModelPlaylistEntriesShareEligibilityRequest
MPStoreModelRequestConfiguration
MPHomeSharingRentalTracker
MPPlayableContentManagerContext
MPStoreRedownloadProductItemAsset
MPHomeSharingErrorResolver
SSAuthorizationRequestDelegate
SSRequestDelegate
MPRemoteCommandCenter
MPRemoteCommandDelegate_Internal
MPStoreModelTVSeasonBuilder
MPHomeSharingRentalErrorResolver
MPStreamingDownloadSessionController
MPModelHomeSharingAsset
MPModelLibraryHasPurchasesRequestOperation
MPModelLibraryHasPurchasesRequest
MPStoreItemLibraryImportElement
MPStoreItemLibraryImportLookupElement
MPStoreItemLibraryImport
MPAVTelevisionRoute
MPAudioAndSubtitlesController
_MPAudioAndSubtitlesController
MPAudioVideoRoutingTableViewCellLayoutManager
MPAudioVideoRoutingTableViewController
MPStoreLibraryMappingRequestOperation
MPPlaceholderAVItem
MPModelGenericObjectKind
MPModelGenericObject
MPChangeDetails
MPChangeDetailOperation
MPStoreModelObjectBuilder
MPBluetoothCompanionLinkAssertion
MPStoreFollowRecommendationsRequest
MPNowPlayingInfoLanguageOptionGroupAdditions
MPNowPlayingInfoLanguageOptionAdditions
MPSubscriptionLeaseAcquireOperation
MPCloudController
MPCloudControllerItemIDList
MPModelLibraryImportChangeRequest
MediaAdditions
MPQueuePlayer
MPModelCurator
MPStoreModelRequestOperation
MPGaplessInfo
MPStoreLibraryPersonalizationRequest
MPStoreLibraryPersonalizationResponse
MPStoreLibraryPersonalizingAdditions
MPModelSongPlaybackItemMetadata
MPSubscriptionLeaseAutomaticRefreshChangeOperation
MPMediaQueryNowPlayingItem
MPModelPlaylistKind
MPModelPlaylist
MPStoreSocialRequestOperation
MPNetworkPlayabilityMonitor
MPModelLibraryStoreIDsImportChangeRequestOperation
MPRequestResponseController
MPAVOutputDeviceRoute
MPStoreCompletionOffering
MPStoreCollectionCompletionOffering
MPStoreCompletionOfferingLookupItem
MPStoreCompletionOfferingController
MCProfileConnectionObserver
MPModelLibraryIncrementSkipCountChangeRequest
MPUbiquitousPlaybackPositionEntity
MPRTCReportingSecureKeyLoadEvent
MPTiledArtworkRepresentationToken
MPStoreOfferMediaItem
MPStoreOfferMediaItemMethods
0"1A
MPNowPlayingContentItem
MPNowPlayingContentItemArtwork
MPNowPlayingContentItemArtworkDataSource
MPArtworkColorAnalyzer
MPArtworkColorAnalyzerAlgorithmiTunesAdditions
MPArtworkColorAnalyzerAdditions_
MPSubscriptionLeaseBeginObservationOperation
MPModelObjectPlaybackItemMetadata
MPStoreAssetInfoPlaybackCache
MPStoreAssetInfoPlaybackCacheRequest
MPModelGenreKind
MPModelGenre
MPSubscriptionLeaseRefreshOperation
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperationMap
MPMiddlewareChain
_MPMiddlewareChainBuilderProxy
MPStoreOfferMediaItemCollection
MPStoreModelRequest
MPModelPlaybackPosition
MPStoreItemMovieClipAsset
MPModelForYouRecommendationGroupBuilder
MPAVBoundaryTimeObserverInfo
MPTracklist
MPTracklistDataSourceConsuming
MPStoreOffer
MPModelLibraryPlaylistEditChangeRequest
MPModelLibraryDownloadQueueRequest
MPModelLibraryDownloadQueueResponse
_MPModelLibraryDownloadQueueDataSource
MPNetworkObserver
MPRTCReportingAssetLoadEvent
MediaPlayer
MPStoreOfferCMCParsing
MPStoreOfferCMC
MPSSLookupResponseTransformContext
MPModelForYouRecommendationItemBuilder
MPAVEndpointRoutingDataSource
MPAsyncBlockOperation
MPStorePurchaseErrorResolver
MPStoreOfferContentRating
MPContentItem
MPStoreSocialUnfollowOperationDataSource
MPStoreOfferMediaItemArtwork
MPStorePlayWhileDownloadProperties
MPModelPerson
MPLibraryAddStatusObserver
MPRadioLibrary
MPStorePlatformMediaItem
MPArrayPlaybackContext
MPHomeSharingArtworkDataSource
_MPHomeSharingArtworkCacheKey
MPNowPlayingInfoLanguageOption
MPNowPlayingInfoLanguageOptionGroup
MPRadioStation
MPRemoteCommand
MPSkipIntervalCommand
MPFeedbackCommand
MPRatingCommand
MPChangePlaybackRateCommand
MPPurchaseCommand
MPChangeRepeatModeCommand
MPChangeShuffleModeCommand
MPSkipTrackCommand
MPSetPlaybackQueueCommand
MPChangePlaybackPositionCommand
MPReorderQueueCommand
MPInsertIntoPlaybackQueueCommand
MPAdvanceShuffleModeCommand
MPAdvanceRepeatModeCommand
MPChangePlaybackProgressCommand
_MPWeakInvocationTarget
_MPRemoteCommandTarget
MPModelForYouRecommendationGroup
MPModelPlaylistEntryKind
MPModelPlaylistEntry
MPUsageStatistics
MPModelStoreBrowseResponseParser
MPStoreCompletionOfferResponse
MPStoreItemMetadataCacheKey
MPPPropertyPredicate
MPModelStoreBrowseSection
MPPropertySet
MPMutablePropertySet
MPStoreItemMetadataResponse
MPModelTVSeasonKind
MPModelTVSeason
MPAVRoutingSheet
_MPAVRoutingSheetSecureWindow
MPModelLibrarySearchRequest
MPModelLibrarySearchResponse
MPInlineVideoController
MPVideoOverlayDelegate
MPTransportControlsTarget
MPFullScreenTransitionViewController
MPAlternateTracksContainerViewController
MPVideoContainerView
MPAdvertisementContainerView
MPSubtitlesContainerView
MPFullscreenWindow
MPModelLibrarySearchSectionedCollectionDataSource
MPModelLibrarySearchEntityResultContainer
MPModalPresentationWindow
MPMediaLibraryArtworkDataSource
_MPMediaLibraryArtworkDataSourceCacheKey
_MPMediaLibraryArtworkVisualIdenticalityIdentifier
MPStoreSocialBlockOperationDataSource
MPModelFileAsset
MPAVOutputDeviceRoutingDataSource
MPInlineVideoFullscreenViewController
MPStoreModelTVShowCreatorBuilder
MPPlaybackPlaceholderMediaItem
MPMediaLibrarySystemFilters
MediaPlayerAdditions
MPDetailScrubController
MPModelStorePlatformMetadataGenericObjectBuilder
MPStoreLibraryPersonalizationContentDescriptor
MPUserNotification
MPMediaQueryQueueFeederItemIdentifier
MPAVItemQueueIdentifier
MPMediaEntityCache
MPAbstractFullScreenVideoViewController
MPAVEndpointRoute
MPStoreContentReporter
MPStoreContentReport
MPStoreOfferMediaItemArtworkDescriptor
MPAssistantMusicAssetLoadLogEvent
MPModelPlaylistEntrySongPlaybackItemMetadata
MPModelLibraryKeepLocalChangeRequestOperation
_MPModelLibraryKeepLocalChangeRequestUpdateItemOperation
MPAVRoutingDataSource
MPModelStoreAsset
MPContentTastePendingUpdateRecord
MPModelTVShowKind
MPModelTVShow
MPPPersistentIDsPredicate
MPPMediaPredicateValue
MPModelSocialPersonKind
MPModelSocialPerson
MPNowPlayingObserver
MPVideoPlaybackBackgroundView
MPMediaQueryQueueFeeder
MPShuffleControllerDataSource
MPStoreSocialServiceController
_MPStoreSocialTransientState
MPStoreSocialServiceTransientStatesSnapshot
MPStoreModelMovieBuilder
MPModelPlaylistEntryMoviePlaybackItemMetadata
MPIdentifierSet
MPStoreFollowRecommendationsOperation
MPStoreFollowRecommendationsResponse
MPAlternateTextTrack
MPModelLibraryIncrementPlayCountChangeRequest
MPModelPodcastEpisodeKind
MPModelPodcastEpisode
MPArtworkConfiguration
MPRTCReportingNetworkInterfaceChangeEvent
MPRestrictionsMonitor
MPStoreArtworkRequestToken
MPSubscriptionLeasePreheatOperation
MPSubscriptionLeaseEndObservationOperation
MPStoreDownload
MPStoreDownloadManager
SSDownloadManagerObserver
SSPurchaseManagerDelegate
_MPStoreDownloadBlockObserver
_MPStoreDownloadHandler
MPStoreDownloadAdditions
MPStoreModelSocialPersonBuilder
MPModelAlbumKind
MPModelAlbum
MPPMediaPredicate
I20@0:4^{?=L^@^L[5L]}8^@12I16
@8@0:4
@12@0:4@8
i12@0:4i8
i12@0:4@8
v8@0:4
B8@0:4
v12@0:4B8
{?="initialized"b1"itemType"b1"detailedItemType"b1"artist"b1"album"b1"curator"b1"episode"b1"movie"b1"playlist"b1"radioStation"b1"socialPerson"b1"song"b1"season"b1"show"b1"showCreator"b1"aucType"b1}
@"MPStoreModelAlbumBuilder"
@"MPStoreModelArtistBuilder"
@"MPStoreModelCuratorBuilder"
@"MPStoreModelTVEpisodeBuilder"
@"MPStoreModelMovieBuilder"
@"MPStoreModelRadioStationBuilder"
@"MPStoreModelSocialPersonBuilder"
@"MPStoreModelPlaylistBuilder"
@"MPStoreModelTVSeasonBuilder"
@"MPStoreModelSongBuilder"
@"MPStoreModelTVShowBuilder"
@"MPStoreModelTVShowCreatorBuilder"
v12@0:4@8
v16@0:4q8
v20@0:4q8@?16
v28@0:4i8q12i20@?24
@16@0:4q8
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
i8@0:4
@"NSData"8@0:4
@"NSArray"8@0:4
@"MPModelSocialPerson"8@0:4
v12@0:4@"MPModelSocialPerson"8
@"MPModelSocialPerson"
@12@0:4^{_NSZone=}8
@16@0:4@8I12
{shared_ptr<mlcore::DeviceLibraryView>=^{DeviceLibraryView}^{__shared_weak_count}}8@0:4
v20@0:4{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}8@?16
v20@0:4{shared_ptr<mlcore::LocalizedSearchQuery>=^{LocalizedSearchQuery}^{__shared_weak_count}}8@?16
{shared_ptr<mlcore::QueryResult>=^{QueryResult}^{__shared_weak_count}}20@0:4{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}8^@16
{shared_ptr<mlcore::DeviceLibraryView>="__ptr_"^{DeviceLibraryView}"__cntrl_"^{__shared_weak_count}}
@"MPMediaLibrary"
@16@0:4@8f12
@?8@0:4
v12@0:4@?8
@"NSError"8@0:4
@?<v@?@"NSString">8@0:4
v12@0:4@?<v@?@"NSString">8
d8@0:4
@12@0:4@?8
v12@0:4i8
v16@0:4d8
@"NSString"
@"NSOperationQueue"
@"NSBlockOperation"
@"NSError"
@"NSArray"
@16@0:4@8@12
@24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@"UIImageView"
@"MPAVController"
v16@0:4@8@?12
@"MPModelRequest"
@"MPPropertySet"
@"MPSectionedCollection"
@12@0:4i8
f8@0:4
v12@0:4f8
v16@0:4B8B12
{CGSize=ff}8@0:4
@"<MPMovieViewDelegate>"
v16@0:4@8@12
v16@0:4@"MPMovieView"8@"UIWindow"12
v12@0:4@"MPMovieView"8
v16@0:4@"MPMovieView"8@"UIView"12
v16@0:4@8i12
B20@0:4@8Q12
v20@0:4@8d12
v20@0:4d8i16
v12@0:4I8
B12@0:4i8
v20@0:4@8@12@16
@20@0:4d8i16
@"NSMutableSet"
@"<MPMoviePlayerControllerDelegate>"
@"NSDictionary"
@"MPMoviePlayerController"
@"MPMovieView"
@"MPNowPlayingObserver"
@"NSMutableArray"
@"MPInlineVideoController"
@"UIWindow"
@"NSMutableDictionary"
@"MPMovieAccessLog"
@"MPMovieErrorLog"
@"AVMetadataItem"
@"AVPlayerItemAccessLog"
@"AVPlayerItemErrorLog"
q8@0:4
@"AVPlayerItemAccessLogEvent"
@"AVPlayerItemErrorLogEvent"
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
@"AVMediaSelectionOption"
i12@0:4I8
@"MPAVItem"
@"RTCReporting"
v12@0:4@"AVPlayerItemOutput"8
v44@0:4@8@12@16{?=qiIq}20
v44@0:4@"AVPlayerItemLegibleOutput"8@"NSArray"12@"NSArray"16{?=qiIq}20
@12@0:4I8
I12@0:4I8
v16@0:4@8I12
B12@0:4I8
@"AVPlayerItemLegibleOutput"
@"MPAlternateTextTrack"
@"<NSCopying>"
S8@0:4
I12@0:4@8
v24@0:4q8#16@20
@"MPModelLibraryDeleteEntityChangeRequest"
v20@0:4@8@12@?16
v20@0:4@"MPNowPlayingInfoCenter"8@"MPNowPlayingContentItem"12@?<v@?@"MPNowPlayingInfoLyricsItem"@"NSError">16
f20@0:4I8i12B16
v16@0:4f8@?12
{?=qiIq}8@0:4
v32@0:4{?=qiIq}8
f16@0:4I8B12
@20@0:4@8d12
@16@0:4d8
Q8@0:4
v24@0:4@8@12@16^v20
d12@0:4@8
@?12@0:4@8
v20@0:4d8f16
v16@0:4i8@?12
@"AVAsset"
@"AVPlayerItem"
@"MPQueueFeeder"
@"MPAlternateTracks"
@"MPNowPlayingContentItem"
{?="value"q"timescale"i"flags"I"epoch"q}
@"<MPAVItemPlaylistIdentifier>"
@"<MPAVItemQueueIdentifier>"
@"MPMediaItem"
@"MPModelGenericObject"
@"NSNumber"
@"ICClientInfo"
@"ICUserIdentity"
@"ICUserIdentityStore"
B12@0:4@"MPAVItem"8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
v20@0:4d8@16
v12@0:4^I8
v20@0:4@8B12@?16
B16@0:4@8^@12
{?=iid}8@0:4
@16@0:4i8@12
v16@0:4I8@12
@20@0:4@8@12@16
B20@0:4@8i12^@16
v24@0:4{?=iid}8
@"MPMutableBidirectionalDictionary"
@"<MPQueueFeederDelegate>"
@"NSData"
@"MPModelPlayEvent"
{?="numberOfAvailableSkips"i"skipFrequency"i"skipInterval"d}
@"MPModelObject"
@"NSDate"
@"MPStoreItemMetadata"
@"NSURL"
@"MPTimeMarker"
@"UILabel"8@0:4
@"UIImageView"8@0:4
@"UIView"8@0:4
@"UILabel"
@"UIActivityIndicatorView"
@"<MPAVRoutingTableViewCellDelegate>"
@"MPAVRoute"
@"NSPointerArray"
@16@0:4@8B12
{CGSize=ff}28@0:4{CGSize=ff}8I16I20f24
B16@0:4@8@12
@20@0:4i8@12@16
v28@0:4i8@12@16@?20@?24
B12@0:4@"MPArtworkCatalog"8
B16@0:4@"MPArtworkRepresentation"8@"MPArtworkCatalog"12
@"MPArtworkRepresentation"12@0:4@"MPArtworkCatalog"8
v16@0:4@"MPArtworkCatalog"8@?<v@?@"MPArtworkRepresentation"@"NSError">12
v12@0:4@"MPArtworkCatalog"8
@"<MPArtworkDataSourceVisualIdenticality>"12@0:4@"MPArtworkCatalog"8
@20@0:4i8@"MPArtworkCatalog"12@"NSDictionary"16
v28@0:4i8@"MPArtworkCatalog"12@"NSDictionary"16@?<v@?@?<v@?@@"NSError">>20@?<v@?@@"NSError">24
v16@0:4@"MPArtworkCatalog"8@?<v@?@"NSURL"@"NSError">12
@"NSCountedSet"
@"NSCache"
@"MPModelLibraryRequest"
{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}8@0:4
v16@0:4{shared_ptr<mlcore::Query>=^{Query}^{__shared_weak_count}}8
@"MPMediaLibraryView"
{shared_ptr<mlcore::Query>="__ptr_"^{Query}"__cntrl_"^{__shared_weak_count}}
@"MPModelTVEpisode"
v20@0:4@8@12I16
v12@0:4@"NSString"8
v20@0:4@"NSString"8@"NSString"12I16
v12@0:4@"ICEnvironmentMonitor"8
v24@0:4@8@12@16@20
v16@0:4@"MPAVPlaylistManager"8@"MPQueueFeeder"12
v24@0:4@"MPAVPlaylistManager"8@"MPAVQueueCoordinator"12@"MPAVItem"16@"MPAVItem"20
v16@0:4@8B12
v12@0:4@"MPAVRoutingController"8
v16@0:4@"MPAVRoutingController"8@"MPAVRoute"12
v16@0:4@"MPAVRoutingController"8B12
v16@0:4@"MPAVRoutingController"8@"NSError"12
v16@0:4i8i12
v20@0:4i8i12B16
v24@0:4i8i12B16B20
B28@0:4i8i12B16B20^@24
v16@0:4f8B12
v16@0:4I8B12
v16@0:4I8I12
@20@0:4d8@?16
@16@0:4@8@?12
v20@0:4@8@12B16
v20@0:4@8B12B16
B12@0:4f8
B16@0:4f8B12
B20@0:4f8B12@16
d36@0:4B8{?=qiIq}12
v20@0:4B8B12B16
v12@0:4^{__CFRunLoopTimer=}8
v24@0:4i8@12@16@20
@"<MPAVQueueController>"
@"MPAVRoutingController"
@"AVPlayerLayer"
@"MPVideoView"
^{__CFRunLoopTimer=}
@"NSMapTable"
@"NSNotification"
@"NSObject<OS_dispatch_source>"
@"MPAVControllerToAggregateDCommunicator"
B12@0:4^B8
v16@0:4B8@?12
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1}
@16@0:4I8I12
@"MPGaplessInfo"
@"MPModelAlbum"
@"MPModelArtist"
@"MPModelGenre"
@"MPModelComposer"
@"MPModelLyrics"
@"MPModelHomeSharingAsset"
@"MPModelFileAsset"
@"MPModelPlaybackPosition"
@"MPModelStoreAsset"
v12@0:4^v8
@"NSMutableDictionary"8@0:4
v20@0:4@8q12
@"MPAVBatteryLevel"
@"ICStoreFileAssetInfo"
@"MPMediaQuery"
@24@0:4d8B16@?20
@24@0:4d8@16@?20
@28@0:4d8B16@20@?24
{CGRect={CGPoint=ff}{CGSize=ff}}24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
v16@0:4i8B12
@"MPAVItem"8@0:4
v12@0:4@"MPAVItem"8
@"MPAVController"8@0:4
v12@0:4@"MPAVController"8
B12@0:4B8
v20@0:4Q8B16
v16@0:4Q8
@"UIColor"8@0:4
v12@0:4@"UIColor"8
@"_UIHostedWindow"8@0:4
@"UIImage"8@0:4
v12@0:4@"UIImage"8
@"UIView<MPVideoOverlay>"8@0:4
@"MPVideoView"8@0:4
@24@0:4@8{CGPoint=ff}12@20
v24@0:4@8I12{CGPoint=ff}16
v20@0:4@8f12f16
v16@0:4@"MPSwipableView"8@"UIView"12
v16@0:4@"MPSwipableView"8@"UIWindow"12
@"UIView"24@0:4@"MPSwipableView"8{CGPoint=ff}12@"UIEvent"20
v16@0:4@"MPSwipableView"8i12
v24@0:4@"MPSwipableView"8I12{CGPoint=ff}16
v16@0:4@"MPSwipableView"8I12
v20@0:4@"MPSwipableView"8f12f16
v12@0:4@"MPSwipableView"8
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
Q16@0:4Q8
@"MPVideoBackgroundView"
@"MPSwipableView"
@"UIColor"
@"MPTVOutWindow"
@"UIImage"
@"UIAlertController"
B16@0:4@8i12
@20@0:4@8I12B16
@"MPStoreRedownloadProductResponse"
@"SSVLoadURLOperation"
v28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8f24
v16@0:4B8f12
@20@0:4@8{CGSize=ff}12
{CGSize="width"f"height"f}
@12@0:4^{_MRSystemAppPlaybackQueue=}8
v16@0:4#8i12
B12@0:4^@8
^{_MRSystemAppPlaybackQueue=}8@0:4
^{_MRSystemAppPlaybackQueue=}
@"MPModelSong"
@"MPStoreFollowingRequest"
@12@0:4B8
@32@0:4@8@12i16B20B24@28
{?="initialized"b1"title"b1"type"b1"loadAdditionalContentURL"b1"previouslyRetrievedNestedResponse"b1"uniformContentItemType"b1"memberOfChartSet"b1"brick"b1}
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@16@0:4Q8
B16@0:4Q8
@24@0:4@8@12Q16
@"NSMutableIndexSet"
@"MPButton"
{?="initialized"b1"copyrightText"b1"title"b1"trackCount"b1"maximumItemTrackNumber"b1"discCount"b1"hasCleanContent"b1"hasExplicitContent"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"libraryAddEligible"b1"compilation"b1"classical"b1"releaseDate"b1"artwork"b1"year"b1"preorder"b1"editorNotes"b1"shortEditorNotes"b1"volumeNormalization"b1"songPopularity"b1"artist"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}}
@"MPMovieTVHUDView"
{shared_ptr<mlcore::LocalizedSearchScope>=^{LocalizedSearchScope}^{__shared_weak_count}}8@0:4
{shared_ptr<mlcore::LocalizedSearchScope>="__ptr_"^{LocalizedSearchScope}"__cntrl_"^{__shared_weak_count}}
@"MPModelKind"
@"MPModelLibraryAlbumAppDataChangeRequest"
@"MPModelPlaylist"
v20@0:4^@8@12i16
@"UIView"
@"MPChangeDetails"
@"MPModelStoreBrowseResponseParser"
@32@0:4@8{CGSize=ff}12B20@24@?28
@20@0:4@8@?12@?16
@"MPStoreModelStoreAssetBuilder"
{?="initialized"b1"title"b1"shortTitle"b1"editorNotes"b1"shortEditorNotes"b1"editorialArtwork"b1"artwork"b1"episodeCount"b1"tagline"b1}
v16@0:4i8f12
@"MPModelRadioStation"
i16@0:4@8@12
@16@0:4@8i12
v20@0:4@8i12@16
i12@0:4@"UIPresentationController"8
i16@0:4@"UIPresentationController"8@"UITraitCollection"12
@"UIViewController"16@0:4@"UIPresentationController"8i12
v20@0:4@"UIPresentationController"8i12@"<UIViewControllerTransitionCoordinator>"16
v20@0:4@8N^{CGRect={CGPoint=ff}{CGSize=ff}}12N^@16
v12@0:4@"UIPopoverPresentationController"8
B12@0:4@"UIPopoverPresentationController"8
v20@0:4@"UIPopoverPresentationController"8N^{CGRect={CGPoint=ff}{CGSize=ff}}12N^@16
@"<MPVideoControllerProtocol>"8@0:4
v12@0:4@"<MPVideoControllerProtocol>"8
@"UINavigationBar"8@0:4
@"<MPVideoOverlayDelegate>"8@0:4
v12@0:4@"<MPVideoOverlayDelegate>"8
v16@0:4@8f12
v12@0:4@"MPDetailSlider"8
v16@0:4@"MPDetailSlider"8f12
v16@0:4@"MPDetailSlider"8i12
@28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8i24
B20@0:4{CGPoint=ff}8@16
v20@0:4B8B12@?16
v24@0:4B8B12@?16@?20
@"MPDetailSlider"
@"MPKnockoutButton"
@"UIStatusBar"
@"UIButton"
@"MPVolumeSlider"
@"MPAudioAndSubtitlesController"
@"NSLayoutConstraint"
@"<MPVideoOverlayDelegate>"
@"<MPVideoControllerProtocol>"
@"UIViewController"
@"_UIBackdropView"
@24@0:4@8I12@16@20
@20@0:4@8I12@16
@"MPTracklist"
@"_MPTracklistProxyEntry"
@"<MPTracklistEnumerationItem>"8@0:4
@"<MPTracklistEnumerationTrackingEntry>"8@0:4
@16@0:4i8i12
@"<MPAVItemPlaylistIdentifier>"8@0:4
v12@0:4@"<MPAVItemPlaylistIdentifier>"8
@"ICStoreHLSAssetInfo"
v16@0:4@"MPVolumeController"8f12
v16@0:4@"MPVolumeController"8i12
v16@0:4@"MPVolumeController"8B12
{CGRect={CGPoint=ff}{CGSize=ff}}44@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8{CGRect={CGPoint=ff}{CGSize=ff}}24f40
{UIEdgeInsets=ffff}8@0:4
v24@0:4{UIEdgeInsets=ffff}8
@"MPVolumeController"
@"NSTimer"
@"UILayoutGuide"
{UIEdgeInsets="top"f"left"f"bottom"f"right"f}
{CGSize=ff}16@0:4{CGSize=ff}8
v32@0:4^{CGRect={CGPoint=ff}{CGSize=ff}}8^{CGRect={CGPoint=ff}{CGSize=ff}}12{CGRect={CGPoint=ff}{CGSize=ff}}16
v16@0:4I8@?12
v20@0:4I8@12^@16
v16@0:4I8^@12
@16@0:4I8B12
@16@0:4I8@12
{_NSRange=II}8@0:4
v16@0:4{_NSRange=II}8
{_NSRange="location"I"length"I}
@16@0:4i8@?12
@"NSOperation"16@0:4i8@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">12
@"MPMediaLibraryConnectionAssertion"
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}8@0:4
v16@0:4{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}8
{shared_ptr<mlcore::EntityQuery>="__ptr_"^{EntityQuery}"__cntrl_"^{__shared_weak_count}}
@48@0:4q8q16Q24I32@36I40@44
@20@0:4^I8^I12^B16
v24@0:4@8I12I16@?20
@24@0:4I8@12I16@20
@24@0:4B8^I12^I16^B20
@"MPVolumeView"
@40@0:4{?=qiIq}8@32@?36
{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}}8@0:4
v16@0:4{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >=^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}^{__shared_weak_count}}8
{shared_ptr<std::__1::map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > > >="__ptr_"^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >}"__cntrl_"^{__shared_weak_count}}
^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}8@0:4
v12@0:4^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}8
v12@0:4#8
^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}
@24@0:4#8^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=l[40c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}12B16B20
@12@0:4#8
@16@0:4#8^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=l[40c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}12
^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=l[40c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}12@0:4#8
v16@0:4@8^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}12
v20@0:4@8r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}12@?16
v28@0:4@8r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}12r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}16@?20@?24
#12@0:4@8
^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}12@0:4@8
{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}16@0:4@8B12
@24@0:4@8{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}12@20
@16@0:4{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}8
v16@0:4r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8@?12
@32@0:4@8{shared_ptr<mlcore::Entity>=^{Entity}^{__shared_weak_count}}12@20@24@28
{vector<mlcore::ModelPropertyBase *, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}}}16@0:4@8^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}12
{vector<mlcore::ModelPropertyBase *, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}}}12@0:4@8
{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}12@0:4@8
v20@0:4@8#12^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}16
v24@0:4@8#12B16^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}20
v32@0:4@8#12B16^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}20r^{map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}24@?28
{vector<mlcore::SortDescriptor, std::__1::allocator<mlcore::SortDescriptor> >=^{SortDescriptor}^{SortDescriptor}{__compressed_pair<mlcore::SortDescriptor *, std::__1::allocator<mlcore::SortDescriptor> >=^{SortDescriptor}}}12@0:4@8
{shared_ptr<mlcore::EntityQuery>=^{EntityQuery}^{__shared_weak_count}}24@0:4@8@12@16@20
{shared_ptr<mlcore::PropertiesQuery>=^{PropertiesQuery}^{__shared_weak_count}}24@0:4@8@12@16@20
^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=l[40c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}8@0:4
^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=l[40c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}
@"MPTracklistEntryPositionKey"
@"MPTracklistEntry"
@"MPTracklistItemEntry"
{?=BBBBBBBi}8@0:4
v20@0:4i8d12
@"MPRemoteCommand"
@"MPRemotePlaybackQueue"
@"MPNowPlayingInfoLanguageOption"
@12@0:4@"NSIndexPath"8
B12@0:4@"<MPLazySectionedCollectionDataSource>"8
@28@0:4@8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}12{shared_ptr<std::__1::vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > > >=^{vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > >}^{__shared_weak_count}}20
{shared_ptr<std::__1::vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > > >=^{vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > >}^{__shared_weak_count}}8@0:4
{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}8@0:4
@"MPMediaLibraryEntityTranslationContext"
{shared_ptr<std::__1::vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > > >="__ptr_"^{vector<std::__1::shared_ptr<mlcore::Entity>, std::__1::allocator<std::__1::shared_ptr<mlcore::Entity> > >}"__cntrl_"^{__shared_weak_count}}
{shared_ptr<mlcore::EntityQueryResult>="__ptr_"^{EntityQueryResult}"__cntrl_"^{__shared_weak_count}}
@"MPModelStoreBrowseResponse"
@"MPModelAlbumKind"
i12@0:4^B8
@"<MPAVRoutingControllerDelegate>"
@"MPAVRoutingDataSource"
@"SSVPlaybackLeaseRequest"
{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}8@0:4
v16@0:4{shared_ptr<mlcore::DeviceLibrary>=^{DeviceLibrary}^{__shared_weak_count}}8
{shared_ptr<mlcore::DeviceLibrary>="__ptr_"^{DeviceLibrary}"__cntrl_"^{__shared_weak_count}}
{map<MPModelStoreBrowseDetailedContentItemType, unsigned long, std::__1::less<MPModelStoreBrowseDetailedContentItemType>, std::__1::allocator<std::__1::pair<const MPModelStoreBrowseDetailedContentItemType, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::__1::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::__1::less<MPModelStoreBrowseDetailedContentItemType>, true>, std::__1::allocator<std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<MPModelStoreBrowseDetailedContentItemType, std::__1::__value_type<MPModelStoreBrowseDetailedContentItemType, unsigned long>, std::__1::less<MPModelStoreBrowseDetailedContentItemType>, true> >="__first_"L}}}
B16@0:4@8^I12
B32@0:4d8d16d24
d16@0:4d8
@32@0:4@8I12@16^I20^I24^B28
B16@0:4@"AVAssetResourceLoader"8@"AVAssetResourceLoadingRequest"12
B16@0:4@"AVAssetResourceLoader"8@"AVAssetResourceRenewalRequest"12
v16@0:4@"AVAssetResourceLoader"8@"AVAssetResourceLoadingRequest"12
B16@0:4@"AVAssetResourceLoader"8@"NSURLAuthenticationChallenge"12
v16@0:4@"AVAssetResourceLoader"8@"NSURLAuthenticationChallenge"12
v12@0:4@"SSVSecureKeyDeliveryRequestOperation"8
v20@0:4d8B16
B36@0:4^@8^@12^I16^@20@24@28B32
@"MPStorePlayWhileDownloadSession"
@"MPStreamingDownloadSession"
@"AVAssetResourceLoadingRequest"
@"MPMediaPlaybackItemMetadata"
B12@0:4@"UIGestureRecognizer"8
B16@0:4@"UIGestureRecognizer"8@"UIGestureRecognizer"12
B16@0:4@"UIGestureRecognizer"8@"UITouch"12
B16@0:4@"UIGestureRecognizer"8@"UIPress"12
@20@0:4{CGPoint=ff}8@16
@"<MPSwipableViewDelegate>"
@"MPTapGestureRecognizer"
@"MPSwipeGestureRecognizer"
@"MPActivityGestureRecognizer"
@"UIPinchGestureRecognizer"
@16@0:4@8:12
{CGPoint="x"f"y"f}
@"UITouch"
{CGPoint=ff}12@0:4@8
v20@0:4i8@12@?16
i16@0:4q8
@20@0:4q8i16
@24@0:4#8@12q16
v20@0:4q8@16
v20@0:4I8@12@?16
v12@0:4@"CAAnimation"8
v16@0:4@"CAAnimation"8B12
d20@0:4d8B16
v24@0:4d8d16
@"<MPPlaybackControlsDelegate>"
@"CABasicAnimation"
@"MPModelTVSeason"
@"MPModelTVShow"
@"<MPPProtobufferCoding>"12@0:4@"PBCodable"8
@"PBCodable"8@0:4
v16@0:4^i8^@12
@20@0:4@8@12i16
@"MPMediaQueryCriteria"
@"MPMediaPredicate"
@"NSSet"
@20@0:4r^q8I12B16
r^q8@0:4
@"MPModelLibraryImportChangeRequest"
{?="initialized"b1"name"b1"trackCount"b1"editorNotes"b1"shortEditorNotes"b1"releaseDate"b1"lastModifiedDate"b1"artwork"b1"editorialArtwork"b1"tracksTiledArtwork"b1"hasCleanContent"b1"hasExplicitContent"b1"type"b1"libraryAdded"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"curatorPlaylist"b1"owner"b1"publicPlaylist"b1"visiblePlaylist"b1"subscribed"b1"userEditableComponents"b1"shareURL"b1"shareShortURL"b1"descriptionText"b1"cloudVersionHash"b1"curator"{?="identifiers"b1"name"b1}}
B16@0:4i8^@12
v12@0:4C8
@"MPMusicPlayerControllerInternal"
@"NSNumber"8@0:4
@"NSNumber"12@0:4@"NSArray"8
v12@0:4@"MPMediaQuery"8
v16@0:4@"MPMediaQuery"8@"MPMediaItem"12
v12@0:4@"MPMediaItemCollection"8
v12@0:4@"MPMediaPlaylist"8
v12@0:4@"MPRadioStation"8
v12@0:4@"MPMusicPlayerQueueDescriptor"8
v12@0:4@"MPMediaItem"8
@"MPMediaQuery"8@0:4
@"MPRadioStation"8@0:4
@"MPMediaItem"12@0:4@"NSNumber"8
v12@0:4@"NSNumber"8
@"MPMediaItem"8@0:4
@"NSData"12@0:4@"NSNumber"8
@"NSUUID"8@0:4
@"MPMusicPlayerControllerQueue"12@0:4@"NSUUID"8
v12@0:4@"MPMusicPlayerControllerQueue"8
@"MPMediaItemCollection"
@"MPMusicPlayerController"
@"BKSProcessAssertion"
^{__CFRunLoopSource=}
v20@0:4I8@12@16
v20@0:4B8@12@16
v16@0:4{CGSize=ff}8
v24@0:4@8B12q16
@"<MPArtworkDataSource>"
@20@0:4{CGSize=ff}8@16
@"MPPMediaPredicate"
B16@0:4d8
v20@0:4@8i12@?16
@16@0:4i8I12
@20@0:4i8d12
I12@0:4i8
v28@0:4^I8^Q12^Q16^I20^I24
@20@0:4{CGSize=ff}8@?16
@16@0:4{CGSize=ff}8
B20@0:4^B8^B12@?16
B24@0:4^B8^B12I16@?20
B20@0:4Q8i16
@20@0:4Q8i16
@24@0:4Q8i16B20
@20@0:4Q8B16
v20@0:4@8@12i16
v24@0:4@8@12i16@?20
B12@0:4@?8
Q12@0:4@8
B24@0:4r^Q8L12i16^Q20
B20@0:4@8i12^Q16
B24@0:4q8i16^Q20
@32@0:4@8@12@16@20@?24@?28
v24@0:4q8B16@?20
v32@0:4Q8i16@20i24i28
B28@0:4@8@12i16i20I24
B16@0:4q8
@"<MPMediaLibraryDataProviderPrivate>"
@"QueryCriteriaResultsCache"
@"MPMediaEntity"
v24@0:4@8i12B16@?20
v12@0:4^{?=[8I]}8
^{?=[8I]}8@0:4
^{?=[8I]}
@"NSInvocation"
@20@0:4@8@12^{?=[8I]}16
B12@0:4^d8
B24@0:4:8@12d16
@24@0:4:8@12d16
@"_UIAsyncInvocation"
@"MPRemoteMediaPickerController"
@"<MPMediaPickerControllerDelegate>"
@"MPQueuePlayer"
@"<MPAVQueueCoordinatorDataSource>"
{?="initialized"b1"title"b1"previewArtwork"b1"staticAssets"{?="identifiers"b1"duration"b1"flavorType"b1"mediaType"b1"url"b1}}
v20@0:4@"MPMediaDownloadManager"8@"NSArray"12@"NSArray"16
v16@0:4@"MPMediaDownloadManager"8@"NSArray"12
v20@0:4@"MPMediaDownloadManager"8@"NSArray"12@"NSError"16
{MPLibraryActiveKeepLocalStatus=if}8@0:4
@"MPLibraryKeepLocalStatusObserverConfiguration"
{MPLibraryActiveKeepLocalStatus="statusType"i"downloadProgress"f}
{?="initialized"b1"name"b1"hasBiography"b1"hasSocialPosts"b1"artwork"b1"editorialArtwork"b1"genre"{?="identifiers"b1"name"b1}}
v20@0:4@"MPAVErrorResolver"8@"NSError"12i16
@"MPAVErrorResolverBlockHandler"
@"MPAVErrorResolver"
v12@0:4@"MPDetailScrubController"8
v16@0:4@"MPDetailScrubController"8f12
v16@0:4@"MPDetailScrubController"8i12
@32@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8i24f28
v20@0:4f8d12
@20@0:4@8f12B16
@20@0:4d8B16
@"MPDetailScrubController"
@"AVTimeFormatter"
@"<MPDetailSliderDelegate>"
v16@0:4@?8@?12
@"NSObject<OS_dispatch_semaphore>"
@"NSUUID"
v24@0:4@8{CGSize=ff}12@?20
@"AVExternalDevice"
@"<MPPlayableContentDataSource>"
@"<MPPlayableContentDelegate>"
@"MPPlayableContentManagerContext"
@"NSIndexPath"
@"MPStoreLyricsRequest"
{vector<int, std::__1::allocator<int> >="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::__1::allocator<int> >="__first_"^i}}
@"<MPLazySectionedCollectionDataSource>"
@"MPMusicPlayerControllerServerInternal"
v20@0:4I8i12B16
@"<MPMusicPlayerControllerServerDelegate>"
@"MPMusicPlayerControllerServer"
@"BKSApplicationStateMonitor"
@"MPMediaPlaylist"
@"MPRadioStation"
@"MPMusicPlayerQueueDescriptor"
v16@0:4@"MPAVRoutingTableViewCell"8B12
i16@0:4@8i12
i20@0:4@8@12i16
i16@0:4@"UITableView"8i12
@"UITableViewCell"16@0:4@"UITableView"8@"NSIndexPath"12
i12@0:4@"UITableView"8
@"NSString"16@0:4@"UITableView"8i12
B16@0:4@"UITableView"8@"NSIndexPath"12
@"NSArray"12@0:4@"UITableView"8
i20@0:4@"UITableView"8@"NSString"12i16
v20@0:4@"UITableView"8i12@"NSIndexPath"16
v20@0:4@"UITableView"8@"NSIndexPath"12@"NSIndexPath"16
v24@0:4@8{CGPoint=ff}12N^{CGPoint=ff}20
v20@0:4@8@12f16
v12@0:4@"UIScrollView"8
v24@0:4@"UIScrollView"8{CGPoint=ff}12N^{CGPoint=ff}20
v16@0:4@"UIScrollView"8B12
@"UIView"12@0:4@"UIScrollView"8
v16@0:4@"UIScrollView"8@"UIView"12
v20@0:4@"UIScrollView"8@"UIView"12f16
B12@0:4@"UIScrollView"8
f16@0:4@8@12
f16@0:4@8i12
B24@0:4@8:12@16@20
v24@0:4@8:12@16@20
B20@0:4@8@12@16
v20@0:4@"UITableView"8@"UITableViewCell"12@"NSIndexPath"16
v20@0:4@"UITableView"8@"UIView"12i16
f16@0:4@"UITableView"8@"NSIndexPath"12
f16@0:4@"UITableView"8i12
@"UIView"16@0:4@"UITableView"8i12
i16@0:4@"UITableView"8@"NSIndexPath"12
v16@0:4@"UITableView"8@"NSIndexPath"12
@"NSIndexPath"16@0:4@"UITableView"8@"NSIndexPath"12
@"NSString"16@0:4@"UITableView"8@"NSIndexPath"12
@"NSArray"16@0:4@"UITableView"8@"NSIndexPath"12
@"UISwipeActionsConfiguration"16@0:4@"UITableView"8@"NSIndexPath"12
@"NSIndexPath"20@0:4@"UITableView"8@"NSIndexPath"12@"NSIndexPath"16
B24@0:4@"UITableView"8:12@"NSIndexPath"16@20
v24@0:4@"UITableView"8:12@"NSIndexPath"16@20
B16@0:4@"UITableView"8@"UITableViewFocusUpdateContext"12
v20@0:4@"UITableView"8@"UITableViewFocusUpdateContext"12@"UIFocusAnimationCoordinator"16
@"NSIndexPath"12@0:4@"UITableView"8
B20@0:4@"UITableView"8@"NSIndexPath"12@"<UISpringLoadedInteractionContext>"16
@"UITableView"
@"MPAVRoutingTableHeaderView"
@"MPAVRoutingEmptyStateView"
@"MPWeakTimer"
@"<MPAVRoutingViewControllerDelegate>"
@"<MPAVRoutingViewControllerThemeDelegate>"
@"MPStoreModelPlaybackPositionBuilder"
{?="initialized"b1"title"b1"duration"b1"trackNumber"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldShowComposer"b1"shouldExcludeFromShuffle"b1"volumeNormalization"b1"year"b1"userRating"b1"gaplessInfo"b1"volumeAdjustment"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1}}
@"MPMediaPickerController"
{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8
@"MPInlineAudioTransportControls"
@20@0:4@8@12^@16
@16@0:4@8^@12
@"CPLRUDictionary"
@12@0:4^v8
^v8@0:4
@20@0:4@8B12@16
v16@0:4@"NSURLSession"8@"NSError"12
v20@0:4@"NSURLSession"8@"NSURLAuthenticationChallenge"12@?<v@?i@"NSURLCredential">16
v12@0:4@"NSURLSession"8
v24@0:4@8@12@16@?20
v28@0:4@8@12@16@20@?24
v40@0:4@8@12q16q24q32
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLRequest"16@?<v@?i@"NSURLRequest">20
v16@0:4@"NSURLSession"8@"NSURLSessionTask"12
v28@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSHTTPURLResponse"16@"NSURLRequest"20@?<v@?@"NSURLRequest">24
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLAuthenticationChallenge"16@?<v@?i@"NSURLCredential">20
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@?<v@?@"NSInputStream">16
v40@0:4@"NSURLSession"8@"NSURLSessionTask"12q16q24q32
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLSessionTaskMetrics"16
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSError"16
v24@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLResponse"16@?<v@?i>20
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLSessionDownloadTask"16
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLSessionStreamTask"16
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSData"16
v24@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSCachedURLResponse"16@?<v@?@"NSCachedURLResponse">20
@28@0:4@8@12{CGSize=ff}16B24
B20@0:4{CGSize=ff}8@16
@"NSURLSession"
v20@0:4{CGSize=ff}8@16
@"MPIdentifierSet"
@"MPMusicPlayerPlayParameters"
@"MPIdentifierSet"12@0:4@"NSIndexPath"8
@"MPIdentifierSet"12@0:4i8
@"NSIndexPath"12@0:4@"MPIdentifierSet"8
@24@0:4@8{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}12^{map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >={__tree<std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> >, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> >, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::shared_ptr<mlcore::EntityQueryResult> >, std::__1::less<long long>, true> >=L}}}20
{shared_ptr<std::__1::map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > > >=^{map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >}^{__shared_weak_count}}8@0:4
{shared_ptr<std::__1::map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > > >="__ptr_"^{map<long long, std::__1::shared_ptr<mlcore::EntityQueryResult>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<mlcore::EntityQueryResult> > > >}"__cntrl_"^{__shared_weak_count}}
@"<MPAVErrorResolverDelegate>"
@20@0:4Q8@16
@"MPConcreteMediaEntityPropertiesCache"8@0:4
@24@0:4Q8@16@20
@16@0:4@8^B12
@"MPConcreteMediaEntityPropertiesCache"
@"MPArtworkCatalog"
{CGRect="origin"{CGPoint="x"f"y"f}"size"{CGSize="width"f"height"f}}
@40@0:4q8@16@20i24q28@36
@36@0:4q8@16@20i24q28
@24@0:4q8@16i20
v20@0:4I8I12@?16
@16@0:4I8^@12
@24@0:4@8@12i16@20
@"<MPMediaLibraryResultSet>"
@"MPWeakRef"
@"MPMediaQuerySectionInfo"
@24@0:4@8#12q16
@"<MPMediaLibraryDataProvider>"
v24@0:4@8q12@?20
v28@0:4@8q12i20@?24
v24@0:4@8B12@?16@?20
v20@0:4@8@?12@?16
v28@0:4@8i12B16@?20@?24
v16@0:4i8@12
v24@0:4@"NSString"8@"NSString"12@"MPMediaQueryCriteria"16@?<v@?@>20
v24@0:4@"NSSet"8q12@?<v@?@"NSDictionary">20
v28@0:4@"NSSet"8q12i20@?<v@?@"NSDictionary">24
@"<MPMediaLibraryResultSet>"12@0:4@"MPMediaQueryCriteria"8
v16@0:4@"MPMediaQueryCriteria"8@?<v@?B>12
v16@0:4@"MPMediaQueryCriteria"8@?<v@?I>12
@"MPMediaEntityCache"8@0:4
@"<MPArtworkDataSource>"8@0:4
v24@0:4@"MPMediaQueryCriteria"8B12@?<B@?>16@?<v@?q^B>20
v24@0:4@"MPMediaQueryCriteria"8B12@?<B@?>16@?<v@?q@"NSDictionary"^B>20
v20@0:4@"NSData"8@?<v@?B@"NSError">12@?<v@?f>16
v28@0:4@"NSString"8i12B16@?<v@?q@"NSString"i^B>20@?<v@?qi@"NSString"i^B>24
v16@0:4i8@"NSArray"12
@"NSSet"8@0:4
q16@0:4q8
v28@0:4@8@12q16@?24
v32@0:4@8@12q16i24@?28
q12@0:4@8
B16@0:4^q8I12
v28@0:4q8q16@?24
v28@0:4I8I12q16@?24
^v20@0:4^q8I12^@16
^q20@0:4^v8^I12^@16
v24@0:4q8@16i20
v28@0:4q8@16i20@?24
B20@0:4i8i12o^#16
@"NSDate"8@0:4
B20@0:4@"NSString"8i12^Q16
B12@0:4@?<B@?>8
v12@0:4@?<v@?>8
v28@0:4@8@"NSString"12q16@?<v@?B@"NSError">24
v20@0:4@"NSArray"8@"NSArray"12@"NSArray"16
v32@0:4@8@"NSString"12q16i24@?<v@?B@"NSError">28
q12@0:4@"NSDictionary"8
v24@0:4@"NSArray"8q12@?<v@?B>20
v28@0:4q8q16@?<v@?B>24
v24@0:4@"NSString"8q12@?<v@?@"NSError">20
v24@0:4@"NSIndexSet"8q12@?<v@?B>20
v28@0:4I8I12q16@?<v@?B>24
v28@0:4q8q16@?<v@?B@"NSError">24
v16@0:4@"MPMediaItem"8@?<v@?@"NSArray">12
v24@0:4q8@"NSString"16i20
v28@0:4q8@"NSString"16i20@?<v@?B@"NSError">24
@"NSString"12@0:4I8
@12@0:4@"NSString"8
B16@0:4@8@"NSString"12
@"MIPMultiverseIdentifier"16@0:4q8
@"MIPMultiverseIdentifier"20@0:4q8i16
v16@0:4@"MPStoreItemLibraryImport"8@?<v@?@"NSArray"@"NSError">12
v16@0:4@"NSString"8@?<v@?@"NSArray"@"NSError">12
v12@0:4@"NSArray"8
v16@0:4@"NSArray"8@?<v@?@"NSArray"@"NSError">12
v20@0:4@"NSString"8B12@?<v@?@"NSError">16
v16@0:4@"NSArray"8@?<v@?@"NSDictionary"@"NSError">12
B28@0:4@"NSData"8@"NSString"12i16i20I24
v32@0:4Q8i16@"NSString"20i24i28
v28@0:4@8B12q16@?24
@20@0:4i8i12i16
@24@0:4i8i12i16@20
v28@0:4@8q12#20@?24
v28@0:4@8#12@16@20@?24
B20@0:4^q8I12#16
@"ML3MusicLibrary"
@"MPMediaEntityCache"
@20@0:4@8@12#16
@"MPModelStaticResponse"
@"MPMediaLibraryAlbumAppData"
@"CAShapeLayer"
@"ICStoreFileAssetFairPlayInfo"
@"MIPMultiverseIdentifier"
v20@0:4@8I12I16
v20@0:4@"MPStoreDownloadManager"8@"NSArray"12@"NSArray"16
v16@0:4@"MPStoreDownloadManager"8@"MPStoreDownload"12
v16@0:4@"MPStoreDownloadManager"8@"NSArray"12
v12@0:4@"MPStoreDownloadManager"8
v12@0:4@"SSDownloadHandler"8
v16@0:4@"SSDownloadHandler"8@"SSDownloadHandlerSession"12
v16@0:4@"SSDownloadHandler"8@"SSDownloadSession"12
B16@0:4@"SSDownloadHandler"8@"SSDownloadSession"12
v16@0:4@"SSDownloadHandler"8@"SSDownloadAuthenticationSession"12
@"SSDownloadHandler"
f12@0:4f8
@"<MPVolumeControllerDelegate>"
v16@0:4B8@12
@"MPModelPerson"
@"MPMediaLibraryArtworkRequest"
@"MPMediaLibraryArtworkDataSource"
@24@0:4@8@12@16i20
@16@0:4#8@12
@20@0:4#8@12@16
{shared_ptr<mlcore::EntityCache>=^{EntityCache}^{__shared_weak_count}}24@0:4^{EntityClass=^^?{mutex={_opaque_pthread_mutex_t=l[40c]}}{unordered_map<std::__1::basic_string<char>, mlcore::ModelPropertyBase *, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::hash<std::__1::basic_string<char> >, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mlcore::ModelPropertyBase *>, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}{unordered_map<mlcore::ModelPropertyBase *, mlcore::EntityClass *, std::__1::hash<mlcore::ModelPropertyBase *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, std::__1::allocator<std::__1::pair<mlcore::ModelPropertyBase *const, mlcore::EntityClass *> > >={__hash_table<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true>, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true>, std::__1::allocator<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *> *> >=L}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::hash<mlcore::ModelPropertyBase *>, true> >=L}{__compressed_pair<float, std::__1::__unordered_map_equal<mlcore::ModelPropertyBase *, std::__1::__hash_value_type<mlcore::ModelPropertyBase *, mlcore::EntityClass *>, std::__1::equal_to<mlcore::ModelPropertyBase *>, true> >=f}}}}8{vector<mlcore::ModelPropertyBase *, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}^^{ModelPropertyBase}{__compressed_pair<mlcore::ModelPropertyBase **, std::__1::allocator<mlcore::ModelPropertyBase *> >=^^{ModelPropertyBase}}}12
{vector<std::__1::shared_ptr<mlcore::EntityCache>, std::__1::allocator<std::__1::shared_ptr<mlcore::EntityCache> > >="__begin_"^{shared_ptr<mlcore::EntityCache>}"__end_"^{shared_ptr<mlcore::EntityCache>}"__end_cap_"{__compressed_pair<std::__1::shared_ptr<mlcore::EntityCache> *, std::__1::allocator<std::__1::shared_ptr<mlcore::EntityCache> > >="__first_"^{shared_ptr<mlcore::EntityCache>}}}
v16@0:4@"MPAVRoutingViewController"8@"MPAVRoute"12
v12@0:4@"MPAVRoutingViewController"8
@16@0:4i8B12
@"MPAVRoutingViewController"
B20@0:4@8i12@16
@20@0:4@8i12@16
B20@0:4^@8@12@16
@24@0:4@8@12I16@?20
{shared_ptr<mlcore::LocalizedSearchQuery>="__ptr_"^{LocalizedSearchQuery}"__cntrl_"^{__shared_weak_count}}
@"MPModelLibrarySearchRequest"
@"MPAVRouteConnection"
@"NSOperation"
@"NSObject<OS_dispatch_group>"
@"MPModelPlaylistEntriesShareEligibilityRequest"
@"MPModelLibraryAddToPlaylistChangeRequest"
{?="initialized"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}
@"MPModelPodcastEpisodeKind"
@"MPModelPodcastAuthor"
v16@0:4@"UIAlertView"8i12
v12@0:4@"UIAlertView"8
B12@0:4@"UIAlertView"8
@20@0:4i8@12@?16
@28@0:4@8@12@16@20@24
@"UITextField"
@"MPSparseArray"
@"<MPShuffleControllerDataSource>"
@24@0:4@8{CGSize=ff}12@20
@28@0:4@8{CGSize=ff}12B20@24
{CGSize=ff}24@0:4{CGSize=ff}8{CGSize=ff}16
@20@0:4I8@12I16
@"MPModelCurator"
@"MPModelMediaClip"
@"MPModelMovie"
@"MPModelTVShowCreator"
v20@0:4:8d12
v12@0:4:8
{?="initialized"b1"title"b1"descriptionText"b1"duration"b1"artwork"b1"screenshotArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"musicShow"b1"episodeNumber"b1"explicitRating"b1"season"{?="identifiers"b1"number"b1"year"b1"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}"show"{?="identifiers"b1"title"b1"showCreator"{?="identifiers"b1"name"b1"artwork"b1}}}
@"MPStoreLibraryPersonalizationRequest"
{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}8@0:4
v20@0:4{vector<long long, std::__1::allocator<long long> >=^q^q{__compressed_pair<long long *, std::__1::allocator<long long> >=^q}}8
{vector<long long, std::__1::allocator<long long> >="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::__1::allocator<long long> >="__first_"^q}}
v16@0:4@?8^{__CFString=}12
v20@0:4@8I12@16
v20@0:4@"MPQueueFeeder"8I12@"NSError"16
v16@0:4@"MPQueueFeeder"8@"MPPlaybackContext"12
v12@0:4@"MPQueueFeeder"8
@"MPAVItem"16@0:4@"MPAVQueueCoordinator"8@"MPAVItem"12
v16@0:4@"MPAVQueueCoordinator"8@"MPAVItem"12
v20@0:4@"MPAVQueueCoordinator"8@"MPAVItem"12@"MPAVItem"16
v12@0:4@"MPAVQueueCoordinator"8
i24@0:4i8i12B16^B20
I12@0:4@"MPAVItem"8
v16@0:4@"MPPlaybackContext"8@?<v@?@"NSError">12
v12@0:4@?<v@?@"NSError">8
@"MPAVItem"12@0:4@"NSString"8
B12@0:4@"NSString"8
@"MPAVItem"12@0:4i8
I12@0:4@"NSString"8
@"NSString"12@0:4i8
i12@0:4@"<MPAVItemQueueIdentifier>"8
i12@0:4@"NSString"8
@"MPQueuePlayer"8@0:4
i16@0:4i8@12
i16@0:4i8i12
B20@0:4@8i12B16
B16@0:4@8@?12
I28@0:4i8I12B16I20^B24
@"MPAVQueueCoordinator"
@"<MPAVPlaylistManagerDelegate>"
@"MPStoreHLSAssetInfo"
v12@0:4@"NSDictionary"8
v20@0:4@"SSVPlaybackLease"8@"SSVPlaybackLeaseResponse"12@"NSError"16
v12@0:4@"SSVPlaybackLease"8
v16@0:4@"SSVPlaybackLease"8I12
v16@0:4@"SSVPlaybackLease"8@"NSError"12
v16@0:4B8I12
@"SSVFairPlaySubscriptionController"
@"SSVFairPlaySubscriptionStatus"
@"SSVSubscriptionStatus"
@"SSVPlaybackLease"
{?="entityOrder"b1"groupingType"b1"staticEntityType"b1"filteringDisabled"b1}
{?="initialized"b1"endpointType"b1"redownloadParameters"b1"redownloadable"b1"accountIdentifier"b1"shouldReportPlayEvents"b1"subscriptionRequired"b1}
@"MPModelForYouRecommendationGroup"
{MPLibraryAddStatusObserverConfiguration=BBBBB}8@0:4
@"NSDictionary"8@0:4
@28@0:4@8@12i16q20
@"MPRTCReportingSessionSummaryEvent"
@"MPModelLibraryPlaylistEditChangeRequest"
@"Protocol"
v20@0:4{shared_ptr<mlcore::LibraryView>=^{LibraryView}^{__shared_weak_count}}8@16
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}8@0:4
{shared_ptr<mlcore::Predicate>=^{Predicate}^{__shared_weak_count}}12@0:4^{ModelPropertyBase=^^?^{EntityClass}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}}8
@"MPMediaItemArtwork"
v24@0:4^v8@12@16@?20
v12@0:4^^v8
@"MPArtworkResizeUtility"
@"<MPNowPlayingPlaybackQueueDataSource>"
@"<MPNowPlayingPlaybackQueueDelegate>"
@"<MPNowPlayingInfoLyricsDelegate>"
@"MPNowPlayingInfoCenterArtworkContext"
v16@0:4@"HSBrowser"8@"HSHomeSharingLibrary"12
v20@0:4@8Q12
@"HSHomeSharingLibrary"
{?="initialized"b1"name"b1"shortName"b1"hasSocialPosts"b1"editorNotes"b1"shortEditorNotes"b1"curatorKind"b1"editorialArtwork"b1}
@"UICubicTimingParameters"
@28@0:4@8Q12i20i24
@32@0:4@8Q12i20i24I28
@"MPMediaLibraryArtwork"
@"ML3Artwork"
@"MPModelPlaylistEntry"
@"NSURLRequest"
v20@0:4Q8@16
I16@0:4I8I12
v16@0:4@"SSRequest"8@"NSError"12
v12@0:4@"SSRequest"8
v16@0:4@"SSAuthorizationRequest"8@"SSURLConnectionResponse"12
@24@0:4@8Q12@20
@44@0:4@8Q12@20Q24@32Q36
@"SSAuthorizationRequest"
@"MPHomeSharingML3DataProvider"
v12@0:4@"MPRemoteCommand"8
r^{__CFArray=}8@0:4
@16@0:4I8^{__CFDictionary=}12
v20@0:4I8^{__CFDictionary=}12@?16
@16@0:4#8I12
@"MPSkipIntervalCommand"
@"MPRatingCommand"
@"MPChangePlaybackRateCommand"
@"MPFeedbackCommand"
@"MPChangePlaybackPositionCommand"
@"MPChangeRepeatModeCommand"
@"MPChangeShuffleModeCommand"
@"MPPurchaseCommand"
@"MPAdvanceShuffleModeCommand"
@"MPAdvanceRepeatModeCommand"
@"MPSetPlaybackQueueCommand"
@"MPInsertIntoPlaybackQueueCommand"
@"MPReorderQueueCommand"
@"MPChangePlaybackProgressCommand"
@40@0:4Q8Q16Q24Q32
@"SSRentalCheckoutRequest"
@48@0:4@8@12@16@20@24@28B32B36I40^@44
{vector<unsigned long long, std::__1::allocator<unsigned long long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >="__first_"^Q}}
@"MPModelLibraryHasPurchasesRequest"
@20@0:4q8@16
@"ICStorePlatformMetadata"
@"_MPAudioAndSubtitlesController"
@"UINavigationController"
@"MPAlternateTrack"
@12@0:4^i8
@"MPModelPodcast"
@"MPModelPodcastEpisode"
@"NSIndexSet"
@28@0:4i8i12@16@20@?24
v24@0:4Q8B16@?20
v28@0:4Q8@16@20@?24
v32@0:4Q8@16@20@24@?28
v28@0:4@8@12Q16@?24
v28@0:4q8Q16@?24
v28@0:4Q8Q16@?24
v24@0:4@8Q12@?20
v20@0:4Q8@?16
v32@0:4q8i16i20i24@?28
v28@0:4q8i16i20i24
v32@0:4q8i16Q20@?28
v24@0:4i8q12I20
v20@0:4i8q12
@"NSObject<HSCloudAvailability>"
@"MSVDistributedNotificationObserver"
@"HSCloudClient"
v20@0:4Q8i16
v24@0:4Q8i16I20
@"HSCloudItemIDList"
@20@0:4@8@12@?16
v80@0:4{?=qiIq}8{?=qiIq}32{?=qiIq}56
v84@0:4{?=qiIq}8{?=qiIq}32{?=qiIq}56@?80
@"AVQueuePlayer"
@"MPModelResponse"
@"MPStoreModelRequest"
@"MPModelPlaylistEntryKind"
@"NSDateComponents"
@"MPTiledArtworkRequest"
@"<MPStoreSocialRequestOperationDataSource>"
i16@0:4d8
@"<MPRequestCancellationToken>"
@"<MPRequestResponseControllerDelegate>"
@"MPStoreCompletionOfferResponse"
@"MPStoreCollectionCompletionOffering"
@"MPStoreOfferMediaItemCollection"
@24@0:4@8i12B16@?20
v16@0:4^B8^@12
v16@0:4@"MCProfileConnection"8@"NSDictionary"12
I16@0:4@8@?12
@20@0:4@8^B12@?16
@"MPStoreOfferContentRating"
@"MPStoreOfferMediaItemArtworkDescriptor"
@"<MPNowPlayingContentItemLanguageOptionDataSource>"
@"<MPNowPlayingContentItemLyricsDataSource>"
@"<MPNowPlayingContentItemDescriptionDataSource>"
@"<MPNowPlayingContentItemArtworkDataSource>"
v28@0:4@8@12{CGSize=ff}16@?24
v28@0:4@"MPNowPlayingInfoCenter"8@"MPNowPlayingContentItem"12{CGSize=ff}16@?<v@?@"UIImage"@"NSError">24
{ITColor=ffff}8@0:4
@24@0:4{ITColor=ffff}8
@"<MPModelObjectPlaybackItemMetadataDelegate>"
^{NSMapTable=#}8@0:4
v12@0:4^{NSMapTable=#}8
v16@0:4r*8@12
@"NSEnumerator"
@24@0:4@8i12@16@20
@24@0:4@8@12@16@20
{?="initialized"b1"groupType"b1"lastUpdatedDate"b1"title"b1"subgroups"b1"loadAdditionalContentURL"b1"refreshURL"b1}
@"MPModelForYouRecommendationItemBuilder"
@"NSDateFormatter"
@"MPMutableSectionedCollection"
v16@0:4@"NSArray"8@"NSString"12
v20@0:4@"NSArray"8@"NSString"12@"NSString"16
v16@0:4@"NSString"8@"NSString"12
v20@0:4@"NSString"8@"NSString"12@"NSString"16
@20@0:4I8@12@16
@"<MPTracklistDelegate>"
v24@0:4^@8^@12@16@20
v24@0:4^@8^@12@16i20
@36@0:4@8@12i16i20Q24@32
@"MPStoreOffer"
@16@0:4@?8@?12
@"MPModelLibraryDownloadQueueRequest"
@"MPMediaLibraryEntityTranslator"
{?="initialized"b1"itemType"b1"backedByStoreItemMetadata"b1"album"b1"playlist"b1"subgroup"b1}
@"MPModelStoreBrowseContentItemBuilder"
@"MPModelForYouRecommendationGroupBuilder"
v17@0:4{MPLibraryAddStatusObserverConfiguration=BBBBB}8@13
{MPLibraryAddStatusObserverConfiguration="isValidContentType"B"isLibraryAdded"B"hasCleanContent"B"hasExplicitContent"B"isLibraryAddEligible"B}
@24@0:4Q8{CGSize=ff}16
@28@0:4I8@12@16@20@24
@20@0:4@8@12B16
v16@0:4@8:12
^{_MRMediaRemoteCommandInfo=}8@0:4
v20@0:4@8:12B16
@"<MPRemoteCommandDelegate_Internal>"
@"<MPRemoteCommandDelegate_Private>"
@12@0:4f8
v24@0:4@8@12i16@20
@22@0:4@8{?=BB}12@14@18
@26@0:4@8@12{?=BB}16@18@22
B32@0:4@8B12@16i20@24@28
{?=BB}8@0:4
{?="useCarPlayBrowseTopLevelContentOnly"B"useCarPlayBrowseTopLevelRequestReorderingHeuristics"B}
@"MPStoreItemMetadataResponse"
@"MPModelStoreBrowseSectionBuilder"
@"MPPMediaPredicateValue"
{?="comparisonType"b1}
@"MPModelTVEpisodeKind"
d20@0:4@8d12
v12@0:4@"UIView<MPVideoOverlay>"8
v16@0:4@"UIView<MPVideoOverlay>"8I12
d20@0:4@"UIView<MPVideoOverlay>"8d12
B12@0:4@"UIView<MPVideoOverlay>"8
B20@0:4@"MPTransportControls"8Q12
v12@0:4@"MPTransportControls"8
v20@0:4@8@12^v16
@"MPVideoPlaybackOverlayView"
@"UIAlertView"
@"MPInlineAudioOverlay"
@"MPVideoContainerView"
@"UITapGestureRecognizer"
@"MPInlineVideoFullscreenViewController"
@24@0:4{shared_ptr<mlcore::EntityQueryResult>=^{EntityQueryResult}^{__shared_weak_count}}8@16@20
@"MPModelLibrarySearchScope"
B24@0:4{CGSize=ff}8{CGSize=ff}16
@28@0:4@8@12{CGSize=ff}16@?24
@"NSLock"
@"UIControl<MPDetailedScrubbing>"
@"<MPDetailScrubControllerDelegate>"
{?="initialized"b1"title"b1"duration"b1"trackNumber"b1"discNumber"b1"grouping"b1"explicit"b1"artistUploadedContent"b1"hasVideo"b1"artwork"b1"copyrightText"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1"shouldExcludeFromShuffle"I"shouldShowComposer"b1"volumeNormalization"b1"year"b1"userRating"b1"gaplessInfo"b1"volumeAdjustment"b1"classicalWork"b1"classicalMovement"b1"classicalMovementCount"b1"classicalMovementNumber"b1"album"{?="identifiers"b1"title"b1"releaseDate"b1"year"b1"artist"b1}"artist"{?="identifiers"b1"name"b1}"composer"{?="identifiers"b1"name"b1}"genre"{?="identifiers"b1"name"b1}"homeSharingAsset"{?="identifiers"b1}"lyrics"{?="identifiers"b1"text"b1"hasStoreLyrics"b1}}
v16@0:4@8^{__CFUserNotification=}12
@12@0:4^{__CFUserNotification=}8
v12@0:4L8
^{__CFUserNotification=}8@0:4
^{__CFUserNotification=}
@24@0:4@8I12Q16
@20@0:4q8@?16
@24@0:4q8i16@?20
v24@0:4q8#16B20
v20@0:4q8#16
@28@0:4q8i16i20@?24
^{map<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >={__tree<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, MPMediaEntity<MPCacheableConcreteMediaEntity> *__weak>, std::__1::less<long long>, true> >=L}}}12@0:4#8
v16@0:4#8@?12
{_opaque_pthread_rwlock_t="__sig"l"__opaque"[124c]}
^{__CFDictionary=}
@24@0:4i8@12@16@20
@28@0:4q8@16@20@24
@20@0:4{CGSize=ff}8i16
v28@0:4q8#16i20@24
v28@0:4i8q12i20@24
@"MPModelLibraryKeepLocalChangeRequest"
@20@0:4q8I16
v16@0:4i8I12
@"MPModelTVSeasonKind"
^q8@0:4
q12@0:4I8
v16@0:4^q8I12
{?="list"^q"count"I"size"I}
{?="shouldContain"b1}
{?="doublePredicateValue"b1"integerPredicateValue"b1"floatPredicateValue"b1"boolPredicateValue"b1}
@"MPStoreDownload"
I20@0:4@8@12I16
I12@0:4@"MPShuffleController"8
@16@0:4@"MPShuffleController"8I12
I20@0:4@"MPShuffleController"8@12I16
I16@0:4Q8
I24@0:4i8I12@16B20
@"MPShuffleController"
@"MPStoreSocialRequestOperation"
v20@0:4i8i12@16
@"MPStoreModelMovieMediaClipBuilder"
{?="initialized"b1"title"b1"description"b1"duration"b1"explicitRating"b1"tagline"b1"artwork"b1"editorialArtwork"b1"keepLocalEnableState"b1"keepLocalManagedStatus"b1"hasCloudSyncSource"b1"localFileAsset"b1"libraryAdded"b1"libraryAddEligible"b1}
@"MPStoreFollowRecommendationsRequest"
@"NSLocale"
@16@0:4I8i12
@"ML3ArtworkConfiguration"
@"MCProfileConnection"
@"SSDownload"
@"SSPurchase"
@"SSPurchaseResponse"
v16@0:4@"SSDownloadManager"8@"NSArray"12
v12@0:4@"SSDownloadManager"8
v16@0:4@"SSPurchaseManager"8@"NSArray"12
v16@0:4@?8@12
@"SSDownloadManager"
@"SSPurchaseManager"
{?="initialized"b1"name"b1"uncensoredName"b1"handle"b1"biography"b1"artwork"b1"isVerified"b1"isPrivate"b1}
@"MPModelSongKind"
@"MPPCompoundPredicate"
@"MPPConditionalPredicate"
@"MPPPersistentIDsPredicate"
@"MPPPropertyPredicate"
@"MPPSearchStringPredicate"
{?="type"b1}
} <
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_5QueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
NSt3__117bad_function_callE
ZN6mlcore11LibraryView12performQueryINS_5QueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZ54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore11QueryResultEEEEEE
N6mlcore11QueryResultE
Z54-[MPMediaLibraryView performCoreQuery:withCompletion:]E3$_0
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_20LocalizedSearchQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
ZN6mlcore11LibraryView12performQueryINS_20LocalizedSearchQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZ60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore26LocalizedSearchQueryResultEEEEEE
Z60-[MPMediaLibraryView performCoreSearchQuery:withCompletion:]E3$_1
MbP?
NSt3__120__shared_ptr_pointerIPNS_6vectorIxNS_9allocatorIxEEEENS_14default_deleteIS4_EENS2_IS4_EEEE
NSt3__114default_deleteINS_6vectorIxNS_9allocatorIxEEEEEE
NSt3__120__shared_ptr_pointerIPNS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEENS_14default_deleteIS6_EENS4_IS6_EEEE
NSt3__114default_deleteINS_6vectorIN6mlcore7SectionENS_9allocatorIS3_EEEEEE
NSt3__120__shared_ptr_emplaceIN6mlcore24SmartPlaylistEntityCacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore17EntityQueryResultENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_6vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS5_IS7_EEEENS5_IS9_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIiEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_6vectorINS_10shared_ptrIN6mlcore6EntityEEENS_9allocatorIS5_EEEENS6_IS8_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchScopeENS_9allocatorIS2_EEEE
333333
NSt3__120__shared_ptr_emplaceINS_3mapINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPN6mlcore17ModelPropertyBaseENS_4lessIS7_EENS5_INS_4pairIKS7_SA_EEEEEENS5_ISH_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore15PropertiesQueryENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIN6mlcore4NoopENS_9allocatorIS3_EEFvdEEE
NSt3__110__function6__baseIFvdEEE
N6mlcore4NoopE
Ga==
N6mlcore17PropertyCacheBaseIJxidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJidNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJdNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJN13mediaplatform4DataEEEE
N6mlcore17PropertyCacheBaseIJEEE
NSt3__110__function6__funcIZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
NSt3__110__function6__baseIFvRKN6mlcore13PropertyCacheERbEEE
ZZZ56-[MPModelLibraryKeepLocalStatusRequestOperation execute]EUb_EUb0_E3$_0
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIiEENS_9allocatorIS3_EEEE
N6mlcore19ComparisonPredicateIiEE
NSt3__120__shared_ptr_emplaceIN6mlcore22AggregateFunctionQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceINS_3mapIxNS_10shared_ptrIN6mlcore17EntityQueryResultEEENS_4lessIxEENS_9allocatorINS_4pairIKxS5_EEEEEENS8_ISD_EEEE
?@:Q
BUUUUUU
NSt3__120__shared_ptr_emplaceIN6mlcore11EntityCacheENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore20LocalizedSearchQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore14UnaryPredicateIxEENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateIxEENS_9allocatorIS3_EEEE
N6mlcore19ComparisonPredicateIxEE
NSt3__120__shared_ptr_emplaceIN6mlcore14AnyInPredicateIxEENS_9allocatorIS3_EEEE
N6mlcore14AnyInPredicateIxEE
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb_E3$_0
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIxEENS_9allocatorIS3_EEEE
N6mlcore11InPredicateIxEE
NSt3__110__function6__funcIZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ110+[MPStoreLibraryPersonalizationRequestOperation personalizedResponseForContentDescriptor:requestedProperties:]EUb0_E3$_1
NSt3__110__function6__funcIZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ59-[MPModelLibraryPlaylistEditChangeRequestOperation execute]EUb_E3$_0
NSt3__120__shared_ptr_emplaceIN6mlcore16MultiEntityQueryENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
N6mlcore11InPredicateINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
NSt3__120__shared_ptr_emplaceIN6mlcore6ArtistENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore5GenreENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8ComposerENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore8PlaylistENS_9allocatorIS2_EEEE
NSt3__110__function6__funcIZN6mlcore11LibraryView12performQueryINS2_11EntityQueryEEEvNS_10shared_ptrIT_EENS6_INS2_11TransactionEEENS_8functionIFvNS6_INS7_6ResultEEEEEEEUlNS6_INS2_11QueryResultEEEE_NS_9allocatorISI_EEFvSH_EEE
ZN6mlcore11LibraryView12performQueryINS_11EntityQueryEEEvNSt3__110shared_ptrIT_EENS4_INS_11TransactionEEENS3_8functionIFvNS4_INS5_6ResultEEEEEEEUlNS4_INS_11QueryResultEEEE_
NSt3__110__function6__funcIZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4NS_9allocatorIS2_EEFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN6mlcore17EntityQueryResultEEEEEE
ZZL33_MPMLInitPropertyPlaylistEntryMapvEUb_E3$_4
NSt3__120__shared_ptr_emplaceIN6mlcore6TVShowENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6mlcore11InPredicateIiEENS_9allocatorIS3_EEEE
N6mlcore11InPredicateIiEE
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb_EUb0_E3$_0
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb1_EUb2_E3$_1
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb3_EUb4_E3$_2
NSt3__120__shared_ptr_emplaceIN6mlcore19ComparisonPredicateINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEENS6_IS9_EEEE
N6mlcore19ComparisonPredicateINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEE
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb5_E3$_3
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb6_EUb7_E3$_4
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb8_EUb9_E3$_5
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb10_E3$_6
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb11_EUb12_E3$_7
NSt3__110__function6__funcIZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb13_EUb14_E3$_8
NSt3__110__function6__funcIZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9NS_9allocatorIS2_EEFvRKN6mlcore13PropertyCacheERbEEE
ZZ48-[MPStoreLibraryMappingRequestOperation execute]EUb15_E3$_9
@?33
@ffF@
UUUUUU
333333
ffffff
START Request: %{public}@ aka [%{public}@]
TIMEOUT Request: %{public}@ timing out. Remaining operations: [%{public}@]
TIMEOUT Request: %{public}@ Operation: %{public}@
TIMEOUT Request: %{public}@ timing out.
FINISH Request: %{public}@ Error: %{public}@ [%fs]
FINISH Request: %{public}@ Response: %{public}@ [%fs]
INVALIDATE: Response invalid before completion. Request: %{public}@
MIDDLEWARE: [%{public}@]
INVALIDATE: Middleware: %{public}@ [%{public}@] request: %{public}@
INVALIDATE: Middleware: %{public}@ [%{public}@, but already invalid] request: %{public}@
INVALIDATE: Notifying invalidation for request: %{public}@
Set movies: %@
%@ attempting to become active while already resigning active.
Preparing playback queue for movies: %@
- selecting audio %@
- saving as track ID %d
- saving as track locale %@
- selecting subtitle %@
- selecting forced subtitles %@
- automatic subtitles
- disabling subtitles
Audio:
- excluded AC-3 option %@
- added %@ from %@
- added %@ as fallback from option %@
Subtitles/CC:
- skipped %@ because it's forced
- skipped %@ because it's not SDH/CC
- skipped %@ because it's SDH/CC
- skipped %@ because it's not the first of its locale
- added %@
Subtitles/CC Second Pass:
- added %@ as fallback
AVF selected invalid option %@
    AVPlayerItem: %{public}@
Assets should not be loaded on the main thread.
%{public}@: Setting volume normalization to %f on %{public}@
%{public}@: ignoring volume normalization %f on %{public}@
Setting item %{public}@ EQ to %d
setupPlaybackInfo:
%{public}@: Seeking to start time: %f
%{public}@: Setting forward playback end time to: %f
%{public}@: Setting Audible DRM info: %{public}@
%{public}@: Setting ramp in/out info: %{public}@
 %{public}@ loadedTimeRanges %.2f of %.2f
Cannot restore queue for %{public}@
%s should be overridden by subclasses
%{public}@
MPModelLibraryRequest: "%{public}@" has both allowedItemIdentifiers and scopedContainers set, expect weird results.
BEGIN SEEKING: %d
AVController setPlaybackIndex: %ld 
 %ld
changePlaybackIndexBy:deltaType:ignoreElapsedTime:allowSkippingUnskippableContent:error:
denied skip past current item.
denied skip to previous item.
throttling playback changes for %.2fs
applying an additional %ld delta from throttled changes
changing chapter
changing track, no more tracks.
changing track to %ld
endPlayback
Disabling autoplay for pause
playWithOptions:
skipping to next track after resume
%{public}@ %{public}@ %{public}@
%{public}@ %d
Setting rate on player: %{public}@ to %f
Finished preparing item: %{public}@ for rate: %f, setting.
Preparing item: %{public}@ for rate: %f
%{public}s %ld 
 %ld
disable autoplay
Disabling autoplay
enable autoplay
Enabling autoplay
Committing time change: %f
Delaying time change: %f
reloadWithPlaybackContext:completionHandler:
 playbackContext: %{public}@
Error loading tracklist for queue feeder: %{public}@
Ending playback because we don't have a current item after reload.
Ending playback due to network type.
Ending playback due to all items failing to load.
Disabling autoplay for pause from active route change.
Ignoring pause from active route change due to state being interrupted.
 %{public}@
 asset loaded %{public}@ : current item %{public}@
%{public}@: Pausing because current item (%{public}@) requested playback prevention.
 _itemDidChange 
 %{public}@
  currentIndex: %{public}@
  currentIdentifier: %{public}@
 AVPlayerItemFailedToPlayToEndTimeNotification
 %{public}@
 %{public}@
 _itemFailedToPlayToEnd %{public}@
 AVPlayerItemDidPlayToEndTimeNotification
 _itemReadyToPlay
 _itemWillChange %{public}@ 
 %{public}@
    previousItemAssetLoaded: %{public}@
AVAudioSessionDelegateMediaPlayerOnly - beginInterruption
MP AVAudioSessionDelegateMediaPlayerOnly end interruption. Interruptor <%{public}@> category <%{public}@> resumable <%lu>,  _state = %lu
paused during interruption: do not resume
current item requests playback prevention: do not resume
interruptor is not phone app, etc: do not resume
video while in background: do not resume
MP endInterruptionFromInterruptor :: resuming playback at %f
 _rateDidChange %.2f 
 %.2f
_connectAVPlayer
Setting allowsExternalPlayback: %{public}@
Setting usesExternalPlaybackWhileExternalScreenIsActive: %{public}@
_disconnectAVPlayerWithReason:
%{public}@ %{public}@: unregistering due to disconnect for reason: %li
 _serverConnectionDidDie
  -- notification: %{public}@
  -- error: %{public}@
  -- currentTime: %0.2f
 _streamBufferFull
 _streamLikelyToKeepUp
 _streamRanDry
 _streamUnlikelyToKeepUp
 AVPlayerItemTimeJumpedNotification 
 %.1fs
 timedMetadata 
 %{public}@
Ending playback due to AirPlay failure
 externalPlaybackActive 
 outputObscuredDueToInsufficientExternalProtection 
 rate
 canPlayFastForward 
 canPlayFastReverse 
 playbackBufferEmpty 
 playbackBufferFull 
 playbackLikelyToKeepUp 
 status 
 %ld
 readyForDisplay 
%{public}@:%d
%{public}@ %{public}@: with item: %{public}@ currentItem: %{public}@
applying throttled index change of %ld tracks
_verifyDisplayProtection
    ignoring because state is %d
 insufficient external protection
usesExternalPlaybackWhileExternalScreenIsActive: %{public}@, usesAudioOnlyMode: %{public}@, wantsExternalPlayback: %{public}@
BackgroundTask: End assertion (%lli) at %{public}s:%d
setPlaylistManager:
 playlistManager: %{public}@ 
 %{public}@
END SEEKING: %ld
- Registering for AVItem notifications from %{public}@
-- Asset loaded with player item: %{public}@
 Registering %{public}@ for double observation on %{public}@ (%{public}@)
Taking autoplay background task assertion.
Scheduling autoplay background task assertion ending...
Ending autoplay background task.
Scheduled autoplay background task assertion is no longer relevant.
Skipping autoplay, disabled (for current item: %d, on player: %d, state: %ld)
Likely to keep up or full buffer: %d
Skipping autoplay, not enough buffered to keep up.
Started playback in %f seconds.
BackgroundTask: End assertion (%lli) at %s:%d
BackgroundTask: Took assertion (%lli) for playback stall
Disabling autoplay after buffer stall timeout
 MPAVController _setState: %ld -> %ld
%{public}@ %{public}@: called with item: %{public}@ with asset loaded: %{public}@ and therefore player item: %{public}@
 _inflightSeekRate already set, which means multiple setRate:error: calls have been made before a _rateDidChange: was received
SCAN: Rate: %f, Interval: %f
Delayed time time change fired: %f
Found pictureType: %{public}@
Created image of size: %{public}@
Using %{public}@ to resolve error %{public}@
Playback failed with error: %{public}@, not resolving (canResolve: %{public}@, allowsItemErrorResolution: %{public}@)
 Cannot play restricted item when device is locked.
 Cannot play restricted item when no video layer is attached.
 Cannot play restricted item with AirPlay speaker route unless this app is in the foreground. %ld
Resolution for item %{public}@ resolved error: %{public}@ with resolution error: %{public}@
Resolution for item %{public}@ could not resolve error: %{public}@ with resolution error: %{public}@
_pausePlaybackIfNecessaryIgnoringVideoLayerAttachment:
_resumePlaybackIfNecessary
[MPPlayerPlaybackLeaseController] leaseHandlingCompletionHandler was called with prevention state: %ld uses lease: %{public}@, has lease: %{public}@
[MPPlayerPlaybackLeaseController] leaseHandlingCompletionHandler pausing for prevention state.
[MPPlayerPlaybackLeaseController] Starting deferred start lease from _shouldPlaybackRequireSubscriptionLeaseDidChangeNotification.
[MPPlayerPlaybackLeaseController] Finished starting deferred lease from _shouldPlaybackRequireSubscriptionLeaseDidChangeNotification with error: %{public}@.
[MPPlayerPlaybackLeaseController] Starting refreshing lease from _shouldPlaybackRequireSubscriptionLeaseDidChangeNotification.
[MPPlayerPlaybackLeaseController] Finished refreshing lease with result: hasLease:%{public}@ error:%{public}@
[MPPlayerPlaybackLeaseController] Received subscription lease did begin notification.
[MPPlayerPlaybackLeaseController] Received subscription lease did end notification with user info: %{public}@
[MPPlayerPlaybackLeaseController] Acquiring lease for %{public}@.
[MPPlayerPlaybackLeaseController] Potentially pausing player with current item: %{public}@ uses subscription lease: %{public}@ is ready to play: %{public}@
[MPPlayerPlaybackLeaseController] isPlayerEffectivelyPlaying did change: %{public}@
[MPPlayerPlaybackLeaseController] Beginning automatic lease refresh.
[MPPlayerPlaybackLeaseController] Ending automatic lease refresh.
[TelevisionRoutingDataSource] Beginning discovery using controller: %{public}@
[TelevisionRoutingDataSource] Ending discovery with controller: %{public}@
BackgroundTask: Took assertion (%lli) at %{public}s:%d
Unable to start background task, TV Out window may not tear down.
Could not play the movie %@.  We received the AVController_ItemFailedToPlayNotification with info: %@ 
[MPStoreRedownloadProductOperation] %{public}@: Using URL bag key: %{public}@
[MPStoreRedownloadProductOperation] %{public}@: Sending request with parameters: %{public}@
[MPStoreRedownloadProductOperation] %{public}@: Received response %{public}@ with error: %{public}@
[RemotePlaybackQueue] Initializing local playback queue from binary plist data
[RemotePlaybackQueue] Initializing local playback queue from protobuf-encoded media query: %@
Could not decode media query from supposed protobuffer data.
[RemotePlaybackQueue] Using first item with multiverse ID: %@
Could not find first item for playback queue with multiverse ID: %{public}@
[RemotePlaybackQueue] Using first item with PID: %lld
[RemotePlaybackQueue] Found first item in library: %@
Could not find first item for playback queue with PID: %lld
Failed to detect faces in image. %@
Error: no external display attached in tv out mode
available modes: %@
 checking mode with size %@
  found preferred display mode: %@
  found larger than ideal display mode: %@
  found smaller than ideal display mode: %@
using mode: %@
no suitable mode found for external display, available modes are %@
Failed to pick route %{public}@ error: %{public}@
Clearing pending picked route %{public}@ (route status %lld indicates failure)
 %{public}@ %{public}@
Current routes:
%3lld. "%@" (%@)
[MPStoreAVItem] %{public}@: Determining if asset URL is valid for %{public}@.
[MPStoreAVItem] %{public}@: isAssetURLValid: %{public}@
[MPStoreAVItem] %{public}@: Starting asset load for playback item metadata: %{public}@ with preferred asset quality: %{public}@
[MPStoreAVItem] %{public}@: Using local network content URL: %{public}@
[MPStoreAVItem] %{public}@: Found appropriate local cached asset with URL: %{public}@
[MPStoreAVItem] %{public}@: Found existing download, attempting to start play while download session: %{public}@
[MPStoreAVItem] %{public}@: Existing download (%{public}@) was finished, using asset URL that was created as a result: %{public}@
[MPStoreAVItem] %{public}@: Existing download was finished, but no allowed asset URL was found: %{public}@
[MPStoreAVItem] %{public}@: Failed to create asset URL using existing download: %{public}@
[MPStoreAVItem] %{public}@: Created asset URL using play while download session: %{public}@
[MPStoreAVItem] %{public}@: Subscription required because protection type is %ld, subscription information is %{public}@
[MPStoreAVItem] %{public}@: Attempting streaming download session with request: %{public}@, subscription playback information: %{public}@
[MPStoreAVItem] %{public}@: Finished attempt of streaming download session for request: %{public}@ with result: %{public}@ error: %{public}@
[MPStoreAVItem] %{public}@: Resulting download properties from streaming download session request: %{public}@ assetURL: %{public}@ download token: %llu
[MPStoreAVItem] %{public}@: Cannot start streaming download request because protection type is %ld, subscription information is %{public}@ and should allow subscription asset request is %{public}@
[MPStoreAVItem] %{public}@: Not attempting streaming session, as play-while-download is required.
[MPStoreAVItem] %{public}@: Initiating play-while-download session with store download: %{public}@
[MPStoreAVItem] %{public}@: Unable to initiate play-while-download session because store download could not be created.
[MPStoreAVItem] %{public}@: Not allowed to initiate play-while-download session.
[MPStoreAVItem] %{public}@: Reloading store download queue from server and waiting for playback item metadata: %{public}@
[MPStoreAVItem] %{public}@: Found store download after reloading store download queue, attempting to use it: %{public}@.
[MPStoreAVItem] %{public}@: Could not find store download after reloading store download queue with error: %{public}@, did time out finding: %{public}@.
[MPStoreAVItem] %{public}@: Not attempting to restart download due to missing download identifier.
[MPStoreAVItem] %{public}@: No local asset of preferred quality found, and can't download with current network type (%ld).
[MPStoreAVItem] %{public}@: Using fallback asset at URL: %{public}@
[MPStoreAVItem] %{public}@: No fallback asset URL found.
[MPStoreAVItem] %{public}@: FairPlay subscription status: %{public}@
[MPStoreAVItem] %{public}@: Acquiring lease preemptively because playback will need it.
[MPStoreAVItem] %{public}@: Preemptive lease acquisition finished with hasLease:%{public}@ error:%{public}@
[MPStoreAVItem] %{public}@: Has protection type of %{public}@, so not verifying validity.
[MPStoreAVItem] %{public}@: Using iTunes Store Content Info: %{public}@
[MPStoreAVItem] %{public}@: Created asset: %{public}@ and player item: %{public}@ for asset URL: %{public}@
[MPStoreAVItem] %{public}@: Setting gapless info: %{public}@
[MPStoreAVItem] %{public}@: Player item %{public}@ deallocating, releasing play-while-download session: %{public}@, streaming download session: %{public}@
[MPStoreAVItem] %{public}@: Finished creating asset.
[MPStoreAVItem] %@
[MPStoreAVItem] - fetching audio track %d
[MPStoreAVItem] - audio track id value is invalid. attempting to use locale.
[MPStoreAVItem] - saved audio option is %@
[MPStoreAVItem] - preferred languages: %@
[MPStoreAVItem] - preferred media characteristics: %@
%{public}@ Using start time: %f
%{public}@ Using bookmark start time: %f
[MPStoreAVItem] iPIMVFAC: %{public}@: Valid due to using local network remote URL.
[MPStoreAVItem] iPIMVFAC: %{public}@: Valid asset URL found.
[MPStoreAVItem] iPIMVFAC: %{public}@: lastKnownFairPlaySubscriptionStatus:%{public}@ networkType:%ld
[MPStoreAVItem] iPIMVFAC: %{public}@: No asset URL found, trying downloading...
[MPStoreAVItem] iPIMVFAC: %{public}@: Found existing store download: %{public}@
[MPStoreAVItem] iPIMVFAC: %{public}@: Valid due to being able to create a download.
[MPStoreAVItem] iPIMVFAC: %{public}@: Allowing stream due to network type: %ld, allows cellular networking: %{public}@.
[MPStoreAVItem] iPIMVFAC: %{public}@: Not allowing stream due to network type: %ld, allows cellular networking: %{public}@.
[MPStoreAVItem] %{public}@: Returned file path (%{public}@) is invalid (exists: %{public}@, isDirectory: %{public}@), clearing it out.
[MPStoreAVItem] %{public}@: Found local file path is valid: %{public}@
[MPStoreAVItem] %{public}@: Asset quality is appropriate (%{public}@), but no file path.
[MPStoreAVItem] %{public}@: Local asset quality (%{public}@) not good enough for minimum (%{public}@).
[MPStoreAVItem] %{public}@: Found purchase bundle at path: %{public}@
%{public}@: Setting loudness info %{public}@ on player item %{public}@
[MPStoreAVItem] %{public}@: Adding store download because initiating was requested for download: %{public}@
[MPStoreAVItem] %{public}@: Adding store download resulted in effective store download changing: %{public}@
[MPStoreAVItem] %{public}@: Added store download.
[MPStoreAVItem] %{public}@: Attempting play-while-download session acquisition with download: %{public}@
[MPStoreAVItem] %{public}@: Finished acquisition attempt for play-while-download session of download: %{public}@, resulting session: %{public}@ error: %{public}@
[MPStoreAVItem] %{public}@: Resulting properties of play-while-download of store download: %{public}@ asset URL: %{public}@ destination URL: %{public}@
[MPStoreAVItem] %{public}@: Store download not provided, play-while-download will fail as a result.
BackgroundTask: entered other async block in main queue for assertion (%lli) at %{public}s:%d
BackgroundTask: entered async block in low priority queue for assertion (%lli) at %{public}s:%d
BackgroundTask: about to perform media library transaction for assertion (%lli) at %{public}s:%d
BackgroundTask: entered media library transaction block for assertion (%lli) at %{public}s:%d
BackgroundTask: about to return from media library transaction block for assertion (%lli) at %{public}s:%d
BackgroundTask: just returned from media library transaction for assertion (%lli); about to enqueue async block to main queue at %{public}s:%d
[MPStoreAVItem] %{public}@: Prioritizing play-while-download session: %{public}@
[MPStoreAVItem] %{public}@: Prioritizing streaming download session: %{public}@
[MPStoreAVItem] %{public}@: Nothing streaming, no need to prioritize.
[MPStoreAVItem] %{public}@: De-prioritizing play-while-download session: %{public}@
[MPStoreAVItem] %{public}@: De-prioritizing streaming download session: %{public}@
[MPStoreAVItem] %{public}@: Nothing streaming, no need to de-prioritize.
[MPContentTasteController] Failed to add cache playlist to library. %@
[MPContentTasteController] Failed to add cache content to library. %@
Warning: Unknown part for %@: %ld
Cannot create playlist with an empty name
Could not resolve default author display name
No static entity found for multiverse ID %p
attempt to *nil* filter predicate to query: %@
Unknown comparison type %ld.
applicationMusicPlayer singleton initialized
systemMusicPlayer singleton initialized
MPMusicPlayerController init
Timeout creating MPMusicPlayerController: MRMediaRemoteGetMediaAppIsInstalled took longer than 4s.
Attempting to use MPMusicPlayerController without Music.app installed.
MPMusicPlayerController] dealloc
MPMusicPlayerController] systemVolumeDidChange: %@
MPMusicPlayerController] beginSeekingForward
MPMusicPlayerController] beginSeekingBackward
MPMusicPlayerController] endSeeking
[MPMusicPlayerController] isPreparedToPlay
MPMusicPlayerController] prepareToPlay
[MPMusicPlayerController] prepareToPlayWithCompletionHandler:
MPMusicPlayerController] play
MPMusicPlayerController] pause
MPMusicPlayerController] setCurrentPlaybackRate %f
MPMusicPlayerController] setCurrentPlaybackTime %f
MPMusicPlayerController] skipToNextItem
MPMusicPlayerController] skipToBeginning
MPMusicPlayerController] skipToPreviousItem
MPMusicPlayerController] stop
[MPMusicPlayerController] setNowPlayingItem:
MPMusicPlayerController] setQueueWithQuery: %@
MPMusicPlayerController] setQueueWithItemCollection: %@
[MPMusicPlayerController] Returning playback state: %li
[MPMusicPlayerController] repeatMode
[MPMusicPlayerController] setRepeatMode:
[MPMusicPlayerController] shuffleMode
[MPMusicPlayerController] setShuffleMode:
MPMusicPlayerController] setVolume: %f
MPMusicPlayerController] setVolumePrivate: %f
MPMusicPlayerController] beginGeneratingPlaybackNotifications
MPMusicPlayerController] endGeneratingPlaybackNotifications
MPMusicPlayerController] openToPlayQueueDescriptor: %{public}@
Failed to launch music app with URL.
Error preparing queue to launch music app: %{public}@
[MPMusicPlayerController] pauseWithFadeoutDuration: %0.g
[MPMusicPlayerController] nowPlayingItemAtIndex: %lu %{public}@
[MPMusicPlayerController] indexOfNowPlayingItem
[MPMusicPlayerController] numberOfItems -> %lu
MPMusicPlayerController] setQueueWithQuery: %@ firstItem: %@
MPMusicPlayerController] setQueueWithGeniusMixPlaylist: %@
MPMusicPlayerController] setQueueWithRadioStation: %@
MPMusicPlayerController] setQueueWithStoreIDs: %@
Could set queue store ids, launching music to update subscription status
[MPMusicPlayerController] setQueueWithDescriptor: %{public}@
[MPMusicPlayerController] prependQueueDescriptor: %{public}@
[MPMusicPlayerController] appendQueueDescriptor: %{public}@
MPMusicPlayerController] setUserQueueModificationsDisabled: %@
[MPMusicPlayerController] shuffle
[MPMusicPlayerController] prepareQueueForPlayback
[MPMusicPlayerController] setUseApplicationSpecificQueue: %@
MPMusicPlayerController] serverDied: %@
MPMusicPlayerController] musicPlayerDidLaunch
MPMusicPlayerController] registerForLaunchNotifications
MPMusicPlayerController] unregisterForLaunchNotifications
MPMusicPlayerController] Looking for port '%s'
MPMusicPlayerController] MPMusicPlayerController: Server is not running, deferring check-in
MPMusicPlayerController] Running reply server
MPMusicPlayerController] Unable to locate music player server
MPMusicPlayerController] MPSMusicPlayerClientPlaybackStateDidChange: serverPort %d playbackState %d
MPMusicPlayerController] playbackStateDidChange: %ld
MPMusicPlayerController] MPSMusicPlayerClientNowPlayingItemDidChange: serverPort %d nowPlayingItemPersistentID %llu
MPMusicPlayerController] nowPlayingItemDidChange: %llu
MPMusicPlayerController] MPSMusicPlayerClientShuffleModeDidChange: serverPort %d shuffleMode %d
MPMusicPlayerController] shuffleModeDidChange %ld
MPMusicPlayerController] MPSMusicPlayerClientRepeatModeDidChange: serverPort %d repeatMode %d
MPMusicPlayerController] repeatModeDidChange: %ld
MPMusicPlayerController] MPSMusicPlayerClientIsQueuePreparedDidChange: serverPort %d queuePrepared %d
[MPMusicPlayerController] isQueuePreparedDidChange: %d
[MPMusicPlayerController] MPSMusicPlayerClientItemPlaybackDidEnd: serverPort %d finishedItemPersistentID %llu
MPMusicPlayerController] itemPlaybackDidEnd: %llu
[MPMusicPlayerController] _MPSMusicPlayerClientQueuePreparedDidFail: serverPort %d errorCode %d
[MPMusicPlayerController] _MPSMusicPlayerClientQueueRequestDidFinish: serverPort %d errorCode %d
[MPMusicPlayerController] _MPSMusicPlayerClientQueueUpdateDidFinish: serverPort %d errorCode %d
[MPMusicPlayerController] _MPSMusicPlayerClientQueueDidInvalidate: serverPort %d
MPMusicPlayerController] _queuePreparationFailedWithErrorCode: %d
MPMusicPlayerController] runMigServerOnPort: %d
MPMusicPlayerController] stopMigServer
MPMusicPlayerControllerInternal] initWithMusicPlayerController: %@
MPMusicPlayerControllerInternal] dealloc
MPMusicPlayerControllerInternal] Running iPod music player server (from Springboard)
MPMusicPlayer: Unable to launch iPod music player server: %@
MPMusicPlayerControllerInternal] Running iPod music player server
MPMusicPlayerControllerInternal] didPrepareForRemoteSelectorInvocation
MPMusicPlayerControllerInternal] setting userQueueModificationsDisabled to YES as this is the requested state of the client
MPMusicPlayerControllerInternal] serverConnectionDied
MPMusicPlayerControllerInternal] acquireProcessAssertion
Unable to get process assertion for music player server.
MPMusicPlayerControllerInternal] setInBlockHandlingPlaybackStateChangedMessageFromServer: %@
[MPArtwork] HALTING -- Error loading artwork for catalog: %{public}@ %{public}@
MPMediaLibraryAuthorizationStatus has not been determined, %{public}@
%@, app not authorized for access
%@ Taking connection assertion: %@
%@ Active assertions: %{public}@
Not authorized, skipping filter predicate application
%@ Releasing connection assertion: %@
%@ Deferring disconnect due to active assertions: %{public}@
Adding data provider %@
Removing data provider %@
Reloading data provider %@
Could not determine UUID string for %@
Could not find playlist for %@ but no creation metadata was provided
Creating playlist for %@
Create playlist failed, not authorized
Cloud createPlaylist for %@ failed: %@
dataProvider: %@ does not allow creating a playlist using the SDK
Imported %{public}@ playlists with error %{public}@
MediaPlayer: Message %@ timed out.
Exception thrown when unarchiving data: %{public}@
Unsupported media types (%ld), using MPMediaTypeAny.
MPMediaPickerController must be presented modally.
setAllowsPickingMultipleItems mutually-exclusive with setPicksSingleCollectionEntity
setPicksSingleCollectionEntity mutually-exclusive with setAllowsPickingMultipleItems
Could not request view controller: %@
[BackgroundTasks] MPAVQueueCoordinator Expired.
[BackgroundTasks] MPAVQueueCoordinator Background Task Failed to Start.
[BackgroundTasks] MPAVQueueCoordinator Start [%lu]
[BackgroundTasks] MPAVQueueCoordinator End [%lu]
Removing failed item: %{public}@
Beginning transaction for first item load.
> Loading asset for: %{public}@
< Loaded asset for: %{public}@ [%.2fs]
Dropping asset because %{public}@ is no longer in queue.
Failed loading asset for: %{public}@ [%.2fs]
Committing transaction for first item load.
Queue depth limited to 1 due to being paused for %.2fs
Committing playback transaction because of reload without keeping current item.
+ SYNC ITEMS: [CLEARING]
+ SYNC ITEMS: %{public}@ [keeping current item]
Skipping loading items.
Beginning with active queue depth: %lu
+ SYNC ITEMS: %{public}@%{public}@ -> %{public}@ %{public}@
Updated active queue depth to: %lu
Failed to queue any items.
+ SYNC ITEMS: %{public}@ -> (null) [removal]
Attempting to achieve equilibrium between MP and AV queues
= SYNC PLAYER: Removing %{public}@ because it was not the correct item for the index in the queue.
= SYNC PLAYER: Removing %{public}@ because it was at an index beyond where it should be.
= SYNC PLAYER: %{public}@ was already in player. Making copy.
= SYNC PLAYER: %{public}@ -> %{public}@
= SYNC PLAYER: %{public}@ removed for being beyond active range.
Achieved equilibrium between %{public}@ and %{public}@.
Has not yet achieved equilibrium.
Skipping player sync because we've already achieved equilibrium.
+ SYNC ITEMS: [PRUNING] %{public}@
Current Item changed: %{public}@ -> %{public}@
Reloading items due to preferred queue depth change from %lu to %lu
Current uuid: %{public}@
Fetched cached queue: %{public}@
Requesting queue.
Fetched queue: %{public}@ for uuid: %{public}@
Failed to fetch queue
Calling transactionBlock with queue: %{public}@
%{public}@ has been modified
Waiting for update...
Updated queue uuid = %{public}@
Update queue has been invalidated, fetching a new one
Fetched updated queue: %{public}@
Updated queue = %{public}@
%{public}@ doesn't have modifications, nothing to do here
Calling completion handler with %{public}@
Queue request did finish
Queue update did finish
Queue did invalidate
Invalidating browsable content...
Content manager beginning to coalesce content item updates.
Content manager stopped coalescing content item updates. Pushing changes, if any.
Content manager updated now playing identifiers. Pushing new identifiers.
Content item %@ mutated. Enqueueing for update.
Pushing content items update with items: %@
The completion handler for the current %@ procedure has already been called once. You should only call MediaPlayer's completion handler once after servicing the call.
Playback initialization completed at index path: %@, error: %@
Updating supported browsable content APIs: %@
Error updating browsable content APIs. MediaRemote error %u
Loading operation at completed at index path: %@, error: %@
Warning: content items are ignored with current API
[MPMusicPlayerControllerServer] startMusicPlayerControllerServerWithDelegate: %@
[MPMusicPlayerControllerServer] forwardInvocation: %@
[MPMusicPlayerControllerServerInternal] init
[MPMusicPlayerControllerServerInternal] dealloc
Delaying MPMusicPlayerControllerServerInternal invocations because the port is not registered.
Invocation for %{public}@ requires queue preparation, starting that.
Delaying MPMusicPlayerControllerServerInternal invocations because queue is preparing.
[MPMusicPlayerControllerServerInternal] setNowPlayingItem: %@
[MPMusicPlayerControllerServerInternal] setQueueWithQuery: %@, filtering disabled: %@
[MPMusicPlayerControllerServerInternal] setQueueWithItemCollection: %@
[MPMusicPlayerControllerServerInternal] play
[MPMusicPlayerControllerServerInternal] prepareToPlay
[MPMusicPlayerControllerServerInternal] shuffle
[MPMusicPlayerControllerServerInternal] pause
[MPMusicPlayerControllerServerInternal] stop
[MPMusicPlayerControllerServerInternal] setCurrentPlaybackRate: %@
[MPMusicPlayerControllerServerInternal] setCurrentPlaybackTime: %@
[MPMusicPlayerControllerServerInternal] setShuffleMode: %@
[MPMusicPlayerControllerServerInternal] setRepeatMode: %@
[MPMusicPlayerControllerServerInternal] beginSeekingForward
[MPMusicPlayerControllerServerInternal] beginSeekingBackward
[MPMusicPlayerControllerServerInternal] endSeeking
[MPMusicPlayerControllerServerInternal] skipToNextItem
[MPMusicPlayerControllerServerInternal] skipToBeginning
[MPMusicPlayerControllerServerInternal] skipToPreviousItem
[MPMusicPlayerControllerServerInternal] skipToBeginningOrPreviousItem
[MPMusicPlayerControllerServerInternal] setQueueWithSeedItems: %@
MPMusicPlayerController: Genius is not supported.
Unable to use item for genius.
Unable to create genius playlist: %@
[MPMusicPlayerControllerServerInternal] setQueueWithQuery: %@ firstItem: %@
[MPMusicPlayerControllerServerInternal] setQueueWithDescriptor: %{public}@
itemIndex = %@
found media item = %@
[MPMusicPlayerControllerServerInternal] playItem: %@
[MPMusicPlayerControllerServerInternal] pauseWithFadeoutDuration: %@
[MPMusicPlayerControllerServerInternal] skipInDirection: %@
[MPMusicPlayerControllerServerInternal] skipToNextChapter
[MPMusicPlayerControllerServerInternal] skipToPreviousChapter
[MPMusicPlayerControllerServerInternal] setCurrentChapterIndex: %@
[MPMusicPlayerControllerServerInternal] prepareQueueForPlayback
registerForServerDiedNotifications
[MPMusicPlayerControllerServerInternal] Client pid %i set useApplicationSpecificQueue to %d
[MPMusicPlayerControllerServerInternal] setQueueWithGeniusMixPlaylist: %@
[MPMusicPlayerControllerServerInternal] Genius Mix Playlist is empty
[MPMusicPlayerControllerServerInternal] setQueueWithRadioStation: %@
[MPMusicPlayerControllerServerInternal] Station not found
[MPMusicPlayerControllerServerInternal] clientPortInvalidatedNotification: %@
[MPMusicPlayerControllerServerInternal] Client pid %i state changed to %u, ending playback if necessary.
[MPMusicPlayerControllerServerInternal] playbackBufferingStateDidChangeNotification: %@
[MPMusicPlayerControllerServerInternal] playbackStateDidChangeNotification: %@
[MPMusicPlayerControllerServerInternal] Playback state changed to %ld
[MPMusicPlayerControllerServerInternal] itemDidChangeNotification: %@
[MPMusicPlayerControllerServerInternal] Now playing item changed to %llu
[MPMusicPlayerControllerServerInternal] itemPlaybackDidEndNotification: %@
[MPMusicPlayerControllerServerInternal] _queueDidInvalidateNotification: %{public}@
[MPMusicPlayerControllerServerInternal] registerClientPort: %d forProcessID: %d hasAudioBackgroundMode: %@
Unable to register for notifications for pid %i, port invalid.
[MPMusicPlayerControllerServerInternal] Registered client with pid %i
[MPMusicPlayerControllerServerInternal] clientPortInvalidated: %@
[MPMusicPlayerControllerServerInternal] Invalidated client with pid %i (active client pid %i)
[MPMusicPlayerControllerServerInternal] Client with pid %i denied permission to play, application state is %u
[MPMusicPlayerControllerServerInternal] setQueuePrepared: %@
[MPMusicPlayerControllerServerInternal] Setting query %@ for client pid %i
[MPMusicPlayerControllerServerInternal] Attempting to prepare queue for client pid %i
[MPMusicPlayerControllerServerInternal] Preparing queue for client pid %i
[MPMusicPlayerControllerServerInternal] Preparing with query: %@
[MPMusicPlayerControllerServerInternal] Preparing with genius mix playlist: %@
[MPMusicPlayerControllerServerInternal] Preparing with radio station: %@
[MPMusicPlayerControllerServerInternal] Preparing with store ids: %@
[MPMusicPlayerControllerServerInternal] Preparing with queue descriptor: %@
[MPMusicPlayerControllerServerInternal] Active client pid is now %i
[MPMusicPlayerControllerServerInternal] Ending playback for client pid %i
[MPMusicPlayerControllerServerInternal] Ending seeking for client pid %i
Unable to start MPMusicPlayerController server.
Unable to register MPMusicPlayerController existence port.
Failed to open airplay debug app: %@
Failed to save password for route: %@ (MediaRemote error = %d)
Determined media type for %@: %lu
Determining media type for %@
Determined source type for %@: %ld
Determined unplayable for %@
[MPArtwork] Asked to cache response for %{public}@, but no size was set.
-[MPMusicPlayerPlayParameters initWithDictionary:] id or kind missing from playParams dictionary. Returning nil.
Error fetching store content for item add. %@
Parsing track data...
Importing %lu tracks...
Successfully imported track data.
Failed to import track data. %@
Adding %llu store items to library (also add to cloud library: %d): %{public}@
Adding %lld to cloud library...
Error adding track(s) to cloud library. %@
Successfully added track(s) to cloud library.
Successfully added playlist to cloud library.
Failed to add global playlist to cloud library. %@
import global playlist with id %@ - add to cloud library: %s...
Fetching global playlists with IDs %{public}@...
Found playlist data for %{public}@
Did not find playlist data for %{public}@
Successfully imported playlist data. Imported tracks: %@
found container_pid:%lld for global playlistid:%{public}@
Error importing playlist data.
Error fetching playlist data. %@
entityClass %@ (groupingType = %ld) has no ML3Property for MPProperty %@
Disabled keep_local on %lu tracks with status:%d for collection:%lld
Cancelled keep_local on %lu tracks with status:%d for collection: %lld
Cleared keep_local on %lu tracks with status:%d for collection:%lld
Cleared keep_local_status for collection %lld with status:%d
Disabled keep_local on %lu tracks with status:%d for playlist:%lld
Cancelled keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local on %lu tracks with status:%d for playlist:%lld
Cleared keep_local_status for playlist %lld with status:%d
Not clearing location properties for Simulator build.
While setting library filter predicates, caught exception %{public}@ trying to read media library
Unexpected content rating format: %@
Created timer to coalesce MPMediaLibraryEntitiesAddedOrRemovedNotification
Posting MPMediaLibraryEntitiesAddedOrRemovedNotification
Postponing MPMediaLibraryEntitiesAddedOrRemovedNotification timer due to continued notifications
Received cloud library availability did change notification
checking test media folder: %@ -- %@
no fallback test audio file found [TestAudio.<foo>]
no fallback test video file found [TestVideo.<foo>]
NOTE: Mapping file %@ to path %@
Requesting artwork for %@ - %@
Received artwork for %@ - %@
Skipping artwork fetch for %@ - %@
Unable to create orderingTerms for properties: %@
no ML3 collection query for grouping type %@, using items query
Cannot filter search string by %@
[MPStorePlayWhileDownloadController] Download handler: %{public}@ handle session: %{public}@ with phase: %{public}@
[MPStorePlayWhileDownloadController] Handling session (processing) for download: %{public}@
[MPStorePlayWhileDownloadController] Releasing session control for session because it's not a media asset: %{public}@
[MPStorePlayWhileDownloadController] Releasing session control for session because it's not in the processing phase: %{public}@
[MPStorePlayWhileDownloadController] Acquiring play while download session for download: %{public}@
[MPStorePlayWhileDownloadController] Suspending until valid download state for download: %{public}@
[MPStorePlayWhileDownloadController] Finished suspending for valid download: %{public}@
[MPStorePlayWhileDownloadController] Returning existing (new) session: %{public}@ for download: %{public}@
[MPStorePlayWhileDownloadController] Getting download token for download: %{public}@
[MPStorePlayWhileDownloadController] Finished getting download token for download: %{public}@ (%llu)
[MPStorePlayWhileDownloadController] Finishing session acquisition for download %{public}@ with new session %{public}@
[MPStorePlayWhileDownloadController] Download handler is already proper for download %{public}@
[MPStorePlayWhileDownloadController] Setting download handler for download %{public}@
[MPStorePlayWhileDownloadController] Finished getting download token for invalid download: %{public}@ (%llu)
[MPStorePlayWhileDownloadController] Download is not in proper state: %{public}@
[MPStorePlayWhileDownloadController] Finished suspending for invalid download: %{public}@
[MPStorePlayWhileDownloadController] Releasing download session: %{public}@
[MPStorePlayWhileDownloadController] Download session %{public}@ was last for download %{public}@, cleaning up...
[MPStorePlayWhileDownloadController] Starting observation of download: %{public}@
[MPStorePlayWhileDownloadController] Ending observation of download: %{public}@
[MPStorePlayWhileDownloadController] Pausing downloads due to prioritization: %{public}@
[MPStorePlayWhileDownloadController] Resuming downloads due to prioritization: %{public}@
[MPMediaPlaybackItemMetadata] Store download cannot be created for %@ due to missing buy parameters with endpoint type: %ld
[MPMediaPlaybackItemMetadata] Store download cannot be created for %@ due to missing adam ID with endpoint type: %ld
[LegacyRoutingDataSource] Fetching routes for category %{public}@
[LegacyRoutingDataSource] Setting picked route: %{public}@ with password: %@
[LegacyRoutingDataSource] %s set picked route %{public}@
[LegacyRoutingDataSource] AVAudioSessionMediaServicesWereReset notification received -- re-registering notifications and resetting cache
[MPArtwork] Failed to create directory at '%{public}@' with error: %{public}@
[MPArtwork] Could not write resized image to %{public}@: Failed to finalize CGImageDestination
Attempted to connect player when a player was already connected. %{public}@
Attempted to disconnect player without a player connected. %{public}@
%{public}@ invalidated with an error or to 0 items: %{public}@
Could not change playlist feeder because a change was in progress.
Error %{public}@ setting playback mode to '%{public}@'
[MPCloudServiceStatusController] Playback lease automatic refresh did finish with response: %{public}@ error: %{public}@
[MPCloudServiceStatusController] Received playback lease did end.
[MPStoreItemImportTrackData] Unknown import property for metadata key %{public}@
Did not find playlist for identifiers: %{public}@
becomeActivePlayer: %{public}@ failed %{public}@
becomeActivePlayer: %{public}@
Setting playback queue data source %@
Setting playback queue delegate %@
Setting lyrics delegate %@
No LanguageDataSource for item %@
No InfoDataSource for item %@
No LyricsDataSource for item %@
No ArtworkDataSource for item %@
-[%{public}@ %{public}@] skipping because type is not understood: %{public}s.
-[%{public}@ %{public}@] skipping because key is not bound
-[%{public}@ %{public}s] skipping because no setter with known type was found.
[MPHomeSharingML3DataProvider] [Browse] Found library %{public}@
[MPHomeSharingML3DataProvider] [Browse] Added %{public}@
[MPHomeSharingML3DataProvider] [Browse] Browser: %{public}@ Removed %{public}@
[MPHomeSharingML3DataProvider] [Browse] Beginning scan.
[MPHomeSharingML3DataProvider] [Browse] Group ID: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID, skipping scan.
[MPHomeSharingML3DataProvider] [Browse] Searching for libraries in home sharing group: %{public}@
[MPHomeSharingML3DataProvider] [Browse] Ending scan.
[MPHomeSharingML3DataProvider] Removing oldest cached library: %{public}@
[MPHomeSharingML3DataProvider] Sending request '%{public}@'
[MPHomeSharingML3DataProvider] Setting property '%{public}@' to '%{public}@' returned status code %lu
[MPHomeSharingML3DataProvider] Creating error resolver for item ID: %llu, account ID: %llu, rental ID: %llu
[MPHomeSharingML3DataProvider] Creating error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
Cannot create error resolver for media item: %{public}@ (accountID: %llu, accountTokenData: %llu bytes, downloaderAccountID: %llu, downloaderTokenData: %llu bytes)
[MPHomeSharingML3DataProvider] Creating error resolver for account ID: %llu, token data length: %lu
Cannot create error resolver for media item: %{public}@ (accountID: %llu, tokenData: %llu bytes)
Updating rental playback start date
[MPHomeSharingML3DataProvider] Home sharing group ID changed to: %{public}@
%{public}@: Failure to update shared library: %{public}@
[MPHomeSharingML3DataProvider] Home Sharing Library became unavailable: %{public}@
[MPHomeSharingML3DataProvider] [Browse] No group ID known, trying to determine it from user defaults account / password.
[MPHomeSharingML3DataProvider] Determined group ID: %{public}@
Could not populate container %{public}@: %{public}@
[MPHomeSharingURLProtocol] Starting loading for %{public}@
[MPArtwork] Failed to deprioritize artwork request %{public}@ 
 unknown artwork source type
[MPHomeSharingRentalTracker] Loading rentals from %{public}@
[MPHomeSharingRentalTracker] Adding rental with item ID: %llu, database ID: %{public}@
[MPHomeSharingRentalTracker] Removing rental with item ID: %{public}@
[MPHomeSharingRentalTracker] iTunes rental checkout response: %{public}@
Failed iTunes side checkout request (response code = %lu)
Failed to checkin rental to iTunes Store.
[MPHomeSharingRentalTracker] Removing all rentals for database ID: %{public}@
[MPHomeSharingRentalTracker] Saving rentals to %{public}@
[MPHomeSharingErrorResolver] Reconnecting to HomeSharing Library for error: %{public}@
[MPHomeSharingErrorResolver] Token response: %{public}@
[MPHomeSharingErrorResolver] Got keybag data of length: %lu
[MPHomeSharingErrorResolver] Got token data of length: %lu
Error setting supported commands: %{public}@
[MPHomeSharingRentalErrorResolver] Checking in rental on iTunes side with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in response: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental for rental ID: %llu, account ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental check-in failed
[MPHomeSharingRentalErrorResolver] Rental checkout failed: %{public}@
[MPHomeSharingRentalErrorResolver] Checking out rental on iTunes side after failure with item ID: %llu homesharing ID: %llu
[MPHomeSharingRentalErrorResolver] iTunes rental checkout response: %{public}@
[MPHomeSharingRentalErrorResolver] Rental checkout finished
[MPHomeSharingRentalErrorResolver] iTunes set rental playback start date response: %{public}@
 [MPStreamingDownloadSessionController] Pausing all download sessions...
 [MPStreamingDownloadSessionController] Ending pause of all download sessions...
 [MPStreamingDownloadSessionController] %{public}@: No playback item metadata, finishing...
 [MPStreamingDownloadSessionController] %{public}@: Attempting to acquire download session...
 [MPStreamingDownloadSessionController] 
 %{public}@: Lease item found (%{public}@), but it didn't have a valid source URL. Response dictionary: %{public}@ response headers: %{public}@
 [MPStreamingDownloadSessionController] 
 %{public}@: No lease item found in response. Response dictionary: %{public}@ response headers: %{public}@
 [MPStreamingDownloadSessionController] 
 %{public}@: Get asset request returned error: %{public}@
 [MPStreamingDownloadSessionController] 
 %{public}@: Missing adam ID, which is required for endpoint type %ld. Finishing...
 [MPStreamingDownloadSessionController] 
 %{public}@: Missing sourceURL from response: %{public}@
 [MPStreamingDownloadSessionController] 
 %{public}@: Redownload operation returned error: %{public}@
 [MPStreamingDownloadSessionController] %{public}@: Running operation %{public}@ for endpoint type %ld...
 [MPStreamingDownloadSessionController] 
 %{public}@: Missing buy parameters, which are required for endpoint type %ld. Finishing...
 [MPStreamingDownloadSessionController] 
 %{public}@: Unable to create download session with HLS playlist URL: %{public}@
 [MPStreamingDownloadSessionController] 
 %{public}@: Unable to create download session with source URL: %{public}@
 [MPStreamingDownloadSessionController] %{public}@: Finishing with download session: %{public}@ error: %{public}@
 [MPStreamingDownloadSessionController] 
%{public}@: Unknown endpoint type (%ld), unable to create request. Finishing...
 [MPStreamingDownloadSessionController] Prioritizing download session: %{public}@
 [MPStreamingDownloadSessionController] Deferring prioritization of download session %{public}@ %llu due to all downloads being paused.
 [MPStreamingDownloadSessionController] Deferring newly prioritized download token %llu due to all downloads being paused.
 [MPStreamingDownloadSessionController] Releasing download session: %{public}@
 [MPStreamingDownloadSessionController] Stopping asset download session (%{public}@) due to download session (%{public}@) being released.
 [MPStreamingDownloadSessionController] Deferring start of download session %{public}@ due to another download token being prioritized: %llu
 [MPStreamingDownloadSessionController] Deferring start of download session %{public}@ due to all downloads being paused.
 [MPStreamingDownloadSessionController] 
Asset download session failed: %{public}@ (%{public}@) error: %{public}@
 [MPStreamingDownloadSessionController] Asset download session finished successfully: %{public}@ (%{public}@)
 [MPStreamingDownloadSessionController] Set the file path for %{public}@ (%{public}@) to %{public}@, replaced file path: %{public}@
 [MPStreamingDownloadSessionController] Didn't set the file path for %{public}@ (%{public}@) due to the playback item metadata rejecting it.
 [MPStreamingDownloadSessionController] 
Invalid file path for %{public}@ due to it being a directory: %{public}@
 [MPStreamingDownloadSessionController] Removing file at file path for %{public}@ due to it using DP info: %{public}@
 [MPStreamingDownloadSessionController] 
Invalid file path for %{public}@ due to it being missing: %{public}@
 [MPStreamingDownloadSessionController] Removing file at file path for %{public}@ due to playback item metadata not allowing asset caching: %{public}@
 [MPStreamingDownloadSessionController] Removing file at file path for %{public}@ due to it missing the playback item metadata: %{public}@
 [MPStreamingDownloadSessionController] Purging %llu bytes for %{public}@ because needed space: %llu is greater than available capacity: %llu
 [MPStreamingDownloadSessionController] Verifying file size for asset download session is valid: %{public}@, file size limit: %lli, available file size: %lli
 [MPStreamingDownloadSessionController] 
Stopping asset download session due to it being too large: %{public}@
 [MPStreamingDownloadSessionController] Prioritizing download token %llu due to download token %llu finishing.
 [MPStreamingDownloadSessionController] 
 File already exists at path: %{public}@, removing it.
 [MPStreamingDownloadSessionController] 
Posting failure for download session: %{public}@
 [MPStreamingDownloadSessionController] Removing file at path: %{public}@ for asset download session: %{public}@
Identical route at index %lu picked, ignoring.
[MPCloudController] Skipping all properties for setPlaylistProperties:trackList:forPlaylist:completionHandler: %@
[MPCloudController] Skipping all properties for setItemProperties:forSagaID: %@
CloudPersonalizationDeprioritize artwork request not supported for artworkType=%ld, sourceType=%ld
[MPCloudController] Skipping all properties for setItemProperties:forPurchaseHistoryID: %{public}@
CloudPersonalizationError parsing response for recommended content with error: %{public}@
CloudPersonalizationFailed to fetch recommended content with error: %{public}@
CloudPersonalizationError setting content taste type on item %lld. %{public}@
CloudPersonalizationSuccessfully set content taste type on item %lld.
CloudPersonalizationError setting content taste type on album %lld. %{public}@
CloudPersonalizationSuccessfully set content taste type on album %lld.
CloudPersonalizationError setting content taste type on playlist %{public}@. %{public}@
CloudPersonalizationSuccessfully set content taste type on playlist %{public}@.
[MPCloudController] Failed to find ML3 equivalent for property: %{public}@
 MPQueuePlayer currentItem changed: %{public}@ -> %{public}@
 MPQueuePlayer rate changed: %f -> %f
 MPQueuePlayer item status changed: %{public}@ -> %{public}@
 insufficient external protection changed
Beginning playback queue transaction.
Setting rate to 0 for playback queue transaction.
Committing playback queue transaction, %lu queued operations.
Restoring rate to %f after playback queue transaction.
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (enqueued)
[%{public}@] Setting allows external playback to %{public}@ on player %{public}@ (not enqueued)
Setting rate on AVQueuePlayer: %f
Ignoring requested rate (%f), route changed during playback queue transaction.
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (enqueued)
[%{public}@] Setting uses audio only mode for external playback to %{public}@ on player %{public}@ (not enqueued)
[%{public}@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (enqueued)
[{public}%@] Setting uses external playback while external screen is active to %{public}@ on player %{public}@ (not enqueued)
 AVPlayerCurrentItemDidChangeNotification
Setting default EQ to %ld
%{public}@ was paused for playback queue transaction, but route changed. Not resuming after playback queue transaction commits.
Determined average bitrate for %@: %f
Determined effective cloud network type: %ld
RRC %{public}@: Canceling request [request changed]
RRC %{public}@: Needs reload [request changed]
RRC %{public}@: Reloading [automatic, request changed]
RRC %{public}@: Removing observer for %p
RRC %{public}@: Updating response to %p
RRC %{public}@: Needs reload [response invalid before -setResponse:]
RRC %{public}@: Reloading [response invalid before -setResponse:]
RRC %{public}@: Adding observer for %p
RRC %{public}@: Starting automatic reloading
RRC %{public}@: Reloading [automatic, beginLoading]
RRC %{public}@: Ending automatic reloading
RRC %{public}@: Needs reload [request by client]
RRC %{public}@: Canceling request [request by client]
RRC %{public}@: Reloading [requested by client]
RRC %{public}@: Needs reload [response invalid]
RRC %{public}@: Reloading [automatic, response invalid]
RRC %{public}@: Reloading [retry, failed request]
RRC %{public}@: Scheduled reload skipped.
RRC %{public}@: Request loading skipped [no request]
RRC %{public}@: Request loading skipped [already loading]
RRC %{public}@: Request loading skipped [not needed]
RRC %{public}@: Request finished loading
RRC %{public}@: Request failed with error: %{public}@
RRC %{public}@: Delegate %p returned shouldRetry: %d
RRC %{public}@: Needs reload [failed request]
RRC %{public}@: Scheduling retry after %fs
RRC %{public}@: Deferring replacement of %p to delegate %p
RRC %{public}@: Delegate %p replacing response with %p
RRC %{public}@: Replacing response
collection offer is not purchasable: %@.
collection offer could not be merged.  Using link instead.
showing debugging offer for '%@' since real offer is unusable...
No completion offer available for storeLookupID = %@ (offer is not personalized - weak token may be invalid...)
No completion offers available for storeLookupID = %@.  Underlying error = %@.
The previously available offer for storeLookupID = %@ is no longer available from the store.  Either the offer has been purchased, or the offer is not available for some other reason
exception while handling SSLookupResponse for storeLookupID = %@, exception = %@, userInfo = %@
No completion offer available for storeLookupID = %@ (%@)
No completion offer available for storeLookupID = %@ (no store album IDs available)
No completion offer available storeLookupID = %@ (local content is not mergable with store offers)
Received response for storeLookupID = %@
Issuing lookup request for storeLookupID = %@
Could not receive response for storeLookupID = %@, error = %@
Ignored %lu items with no property values %@
Invalid media item.  No property values present for %@
Warning: property %@ not handled yet.
NULL image being analyzed.
Zero-sized image being analyzed.
No items available in offer for collection %lld
No offer will be presented - offered collection is restricted %lld
No unrestricted items available in offer for collection %lld
All items in CMC response already exist locally for collection %lld
No downloadable or purchasable items available in offer for collection %lld
offer for collection '%@' did not contain any items.
NOTE: offer for collection '%@' did not contain any items not already present.
property %@ not handled yet.
WARNING: found canned response at %@, but could not deserialize it
WARNING: using canned response found at %@.
saved %@ response for storeLookupID %@ to %@
ERROR: saving %@ response for storeLookupID %@ to %@.  error = %@
No response received - %@
Received response, but CMC results are empty (the IDs for this album may have changed since it was purchased) - storeLookupID = %@.
contentRatingDictionary expected to be a dictionary, and not %@
[CMC] WARNING: contentRatingDictionary expected to be a dictionary, and not %@
WARNING: Generated debug completion offer from buy-only offer (collection level only)
[EndpointRoutingDataSource] Route search failed with error: %@
[EndpointRoutingDataSource] Successfully found and picked route.
Received artwork with length %llu for content item %@.
ignoring: %@.  it's quite possible the app's view controller received 2 viewDidAppear's when it should have only gotten 1.
incrementing: %@
Chapters are not implemented in Modern UI.
%@ %p setting routing context UID = %{public}@
Audio session's routing policy is "default". Requesting the shared audio session to select an independent routing context.
Successfully selected an independent routing context
ERROR: The audio session failed to select an independent routing context. (error = %{public}@)
Requesting routing context using UID: %{public}@
[MPMediaLibrarySystemFilters] Has cloud library revision: %d, purchase history filtered: %d
itemPID = %@, hash = %@, cacheID = %@
[BaseRoutingDataSource] Unpicking AirPlay AV routes...
[BaseRoutingDataSource] Failed to unpick AirPlay AV routes: %{public}@
[BaseRoutingDataSource] Successfully unpicked AirPlay AV routes
activeShuffleType -> %ld
anchoring shuffle at index: %lu
%{public}@ index not cached for identifier: %{public}@
%{public}@ setting override start time: %{public}@ for item with identifier: %{public}@
%{public}@ setting override stop time: %{public}@ for item with identifier: %{public}@
%{public}@ skipping invalidation verification because the result set is still valid
%{public}@ skipping invalidation verification as we don't have valid items
%{public}@ %{public}@
%{public}@ query: %{public}@ hasStaticEntities: YES
%{public}@ could not find staticEntity for pid: %llu
%{public}@ resultSetInvalidated
%{public}@ asked for _identifierAtIndex: %lu (greater than NSNotFound)
Cancelled downloads %@ with error %@
Failed to cancel downloads %@ with error %@
Cancelled purchases %@ with error %@, result %d
Failed to cancel purchases %@ with error %@
Failed to pause downloads %@ with error %@
Failed to resume downloads %@ with error %@
Failed to restart downloads %@ with error %@
Finished attempted restart with removed downloads: %@
Failed to move download: %@ with error: %@
Failed to move purchase: %@ with error: %@
[%@] UNKNOWN PURCHASE TYPE: %li
Download did change %@ with no existing download.
setting download handler to skip install for %@.
failed to set download handler. error=%@
already have download handler for %@.
Download did change: %@. Download: %@
Download states did change: %@, progressed downloads: %@, added downloads: %@, finished: %@
handling install phase for download %@
failed to link download file to destination path %@. err=%@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
&nld
9swe
Nspa
Ndan
Anor
9heb
 heb
 jpn
*ara
l&mlt
5tur
Rhrv
V"zho
izho
iurd
DVhin
.!tha
Qkor
-lit
41pol
Ahun
"est
60smi
Mfao
Jzho
izho
inld
9nld
9gle
)Nron
Ices
slk
Mslv
Myid
$eyid
$esrp
PNsrp
PNsrp
PNmkd
d5bul
rUbel
BWkaz
:,aze
%#kat
4,mol
5kir
2-tgk
Ptuk
Rmon
5mon
5pus
Bkur
.kas
3,snd
Mbod
8san
.Lmar
24ben
.@ori
I>mal
,4kan
.,tam
-Ptel
Psin
.Mmya
!7khm
-lao
/0vie
%Yind
%ind
%tgl
Pmsa
a6msa
a6amh
2Qorm
M>som
Mswa
Nkin
.-run
Jnya
!;mlg
5epo
4lat
40que
Fgrn
4Puig
'Udzo
6(und
Usun
Nglg
u%gla
Qgrc
,,abk
5 haw
7 ibo
O$ina
%ile
%ipk
&kau
5,lin
.1mni
5mri
I6nau
58oci
i<pap
0@roh
Ismo
Msag
'Lsot
Mtsn
nRsna
Mssw
wNsyr
2Otso
oRtwi
Rven
Xvol
Ywol
]xho
ayor
ezul
jcos
2zha
inob
9non
