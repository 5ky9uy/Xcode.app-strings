com.apple.speech.voice.Alex
com.apple.ttsbundle.gryphon_male
com.apple.ttsbundle.gryphon_female
(pause\=(\d{1,4})\\)
content is nil, language detection not possible
%s:%d %@
-[AXSpeechAction _detectLanguageFromContent]
com.apple.Accessibility
SpeechManager
Not enough characters (%lu) to accurately detect language
could not determine content language, returning default
<AXSpeechAction: %p> %@ :Pitch %f : Language: %@, IPA phonemes: %@
processedString
T@"NSString",&,N,V_processedString
emojiRangeReplacements
T@"NSMutableArray",&,N,V_emojiRangeReplacements
shouldQueue
TB,N,V_shouldQueue
cannotInterrupt
TB,N,V_cannotInterrupt
shouldDetectLanguage
TB,N,V_shouldDetectLanguage
shouldProcessEmoji
TB,N,V_shouldProcessEmoji
shouldProcessEmoticons
TB,N,V_shouldProcessEmoticons
shouldPrecomposeString
TB,N,V_shouldPrecomposeString
ignoreCustomSubstitutions
TB,N,V_ignoreCustomSubstitutions
language
T@"NSString",&,N,V_language
voiceIdentifier
T@"NSString",&,N,V_voiceIdentifier
audioQueueFlags
TI,N,V_audioQueueFlags
state
Ti,N,V_state
string
T@"NSString",C,N,V_string
attributedString
T@"NSAttributedString",C,N,V_attributedString
IPAPhonemes
T@"NSString",C,N,V_IPAPhonemes
completionCallback
T@?,C,N,V_completionCallback
onPauseCallback
T@?,C,N,V_onPauseCallback
onResumeCallback
T@?,C,N,V_onResumeCallback
onWillSpeakRangeCallback
T@?,C,N,V_onWillSpeakRangeCallback
onSpeechStartCallback
T@?,C,N,V_onSpeechStartCallback
speakingRate
Tf,N,V_speakingRate
useMonarchStyleSpeechRate
TB,N,V_useMonarchStyleSpeechRate
pitch
Tf,N,V_pitch
volume
Tf,N,V_volume
wordCallbackPostProcessedOffset
Ti,N,V_wordCallbackPostProcessedOffset
finalSpokenString
T@"NSString",&,N,V_finalSpokenString
AXSettings
v4@?0
Synthesizer created: %@
-[AXSpeechManager _initialize]
**** AX Error: Could not load AccessibilityUtilities.framework bundle. bundleWithPath came back nil
Could not load bundle: %@
com.apple.accessibility.AccessibilityUIServer
com.apple.springboard
Failure: %@
Removing from queue: %@
-[AXSpeechManager _speechJobFinished:action:]
Remaining queue: %@
Start next job
v20@?0@4{_NSRange=II}8^B16
Existing speech job already in flight
-[AXSpeechManager _startNextSpeechJob]
%@ Will speak: %@ %f
Stopping existing job
Speech Error:%@
%@ Should queue: %@ -> %d
-[AXSpeechManager _dispatchSpeechAction:]
Telling synthesizer to stop because this job doesn't want to queue
isSpeaking: %d
Speech queue items: %@
Starting next job
%@ Speech finished: %d %@
-[AXSpeechManager speechSynthesizer:didFinishSpeakingRequest:successfully:withError:]
processedRange
notified
originalRange
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
originalSpeechRateForJobOverride
T@"NSNumber",&,N,V_originalSpeechRateForJobOverride
isPaused
TB,N,VisPaused
speechEnabled
TB,N,V_speechEnabled
showControlCenterControls
TB,R,N,V_showControlCenterControls
isSpeaking
TB,R,D,N
TI,N
outputChannels
T@"NSArray",&,N
requestWillStart
T@?,C,N,V_requestWillStart
VOTEmoticons
plist
VOTLocalizedStrings
v16@?0@4@8^B12
\pause=350\ 
Unable to create AVSpeechSynthesisVoice from TTSVoice: %@
nb-no
no-NO
ru-RU
IPHONE_SIMULATOR_ROOT
/System/Library/CoreServices/VoiceOverTouch.app
NSBundle *VOTBundle()
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2391/Source/AXSpeechManager/AXEmojiUtilities.m
<Unknown File>
Unable to create VOT bundle from path: %@
v20@?0^{__EmojiTokenWrapper=}4{?=ii}8^B16
 %@ 
emoji.suffix
AXSpeech
%@ Don't call -cancel to stop an AXSpeechThread, call -stop instead.
alloc
init
setString:
setShouldQueue:
setAttributedString:
string
precomposedStringWithCanonicalMapping
language
_detectLanguageFromContent
setLanguage:
setProcessedString:
isEqualToString:
regularExpressionWithPattern:options:error:
processedString
length
stringByReplacingMatchesInString:options:range:withTemplate:
stringWithFormat:
UTF8String
rangeOfString:
actionWithString:shouldQueue:
actionWithAttributedString:shouldQueue:
preprocessAction
description
.cxx_destruct
shouldQueue
cannotInterrupt
setCannotInterrupt:
shouldDetectLanguage
setShouldDetectLanguage:
shouldProcessEmoji
setShouldProcessEmoji:
shouldProcessEmoticons
setShouldProcessEmoticons:
shouldPrecomposeString
setShouldPrecomposeString:
ignoreCustomSubstitutions
setIgnoreCustomSubstitutions:
voiceIdentifier
setVoiceIdentifier:
audioQueueFlags
setAudioQueueFlags:
state
setState:
attributedString
IPAPhonemes
setIPAPhonemes:
completionCallback
setCompletionCallback:
onPauseCallback
setOnPauseCallback:
onResumeCallback
setOnResumeCallback:
onWillSpeakRangeCallback
setOnWillSpeakRangeCallback:
onSpeechStartCallback
setOnSpeechStartCallback:
speakingRate
setSpeakingRate:
useMonarchStyleSpeechRate
setUseMonarchStyleSpeechRate:
pitch
setPitch:
volume
setVolume:
wordCallbackPostProcessedOffset
setWordCallbackPostProcessedOffset:
finalSpokenString
setFinalSpokenString:
emojiRangeReplacements
setEmojiRangeReplacements:
_string
_pitch
_volume
_speakingRate
_language
_shouldQueue
_cannotInterrupt
_shouldDetectLanguage
_shouldProcessEmoji
_shouldProcessEmoticons
_shouldPrecomposeString
_completionCallback
_onPauseCallback
_onResumeCallback
_onWillSpeakRangeCallback
_onSpeechStartCallback
_ignoreCustomSubstitutions
_useMonarchStyleSpeechRate
_voiceIdentifier
_audioQueueFlags
_state
_attributedString
_IPAPhonemes
_wordCallbackPostProcessedOffset
_finalSpokenString
_processedString
_emojiRangeReplacements
setIsPaused:
start
_initialize
performSelector:onThread:withObject:waitUntilDone:
delegate
setDelegate:
dealloc
_tearDown
stop
allocWithZone:
mainBundle
bundleIdentifier
setBundleIdentifier:
sharedInstance
_updateUserSubstitutions
customPronunciationSubstitutions
registerUpdateBlock:forRetrieveSelector:withListener:
setUserSubstitutions:
speechMarkupStringForType:forIdentifier:
availableLanguageCodes
bundleWithPath:
isLoaded
loadAndReturnError:
currentVoices
_resetAvailableVoices
allAvailableVoices
refreshAllAvailableVoices
count
initWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
copy
processInfo
processName
setCurrentVoices:
getCharacters:range:
getCharacters:
array
valueWithRange:
firstObject
removeObjectIdenticalTo:
_startNextSpeechJob
class
_speechVoiceForIdentifier:language:footprint:
identifier
isKindOfClass:
substringWithRange:
setOriginalString:
setPhonemes:
setReplacementRange:
enumerateAttribute:inRange:options:usingBlock:
objectAtIndex:
currentThread
name
isSpeaking
stopSpeakingAtNextBoundary:synchronously:error:
setRate:
setUseMonarchStyleRate:
useAudioQueueFlags:
speechSynthesizer:didStartSpeakingRequest:
speechSynthesizer:didFinishSpeakingRequest:successfully:withError:
_phonemeSubstitutionsForAction:
setPhonemeSubstitutions:
setSpeakingRequestClientContext:
requestWillStart
startSpeakingIPAPhonemes:withLanguageCode:request:error:
startSpeakingString:request:error:
startSpeakingString:withLanguageCode:request:error:
localizedDescription
clearSpeechQueue
removeAllObjects
_clearSpeechQueue
speechEnabled
_dispatchSpeechAction:
intValue
pauseSpeakingAtNextBoundary:error:
_pauseSpeaking:
numberWithUnsignedInt:
continueSpeakingWithError:
_continueSpeaking
integerValue
_stopSpeaking:
stopSpeaking:
_isSpeaking:
boolValue
outputChannels
convertChannels:
setOutputChannels:
channelWithChannel:
clientContext
objectAtIndexedSubscript:
_speechJobFinished:action:
text
__speechJobFinished:
numberWithInt:
arrayWithObjects:count:
objectForKey:
rangeValue
indexOfObject:
mutableCopy
numberWithBool:
setObject:forKeyedSubscript:
replaceObjectAtIndex:withObject:
currentLanguageCode
spellOutMarkupString:
pauseMarkupString:
availableVoices
createRegularExpressionFromString:
matchedRangesForString:withRegularExpression:
remapLanguageCode:
test_actionStartTap:
test_setUnitTestMode:
test_setAvailableVoices:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
speechSynthesizer:didFinishSpeakingRequest:successfully:phonemesSpoken:withError:
speechSynthesizer:didPauseSpeakingRequest:
speechSynthesizer:didContinueSpeakingRequest:
speechSynthesizer:willSpeakRangeOfSpeechString:forRequest:
tearDown
voiceIdentifierUsedForLanguage:
setSpeechEnabled:
dispatchSpeechAction:
pauseSpeaking:
continueSpeaking
stopSpeaking
isPaused
showControlCenterControls
setRequestWillStart:
originalSpeechRateForJobOverride
setOriginalSpeechRateForJobOverride:
_speechQueue
_synthesizer
_runThread
_isSpeaking
_speechEnabled
_showControlCenterControls
_requestWillStart
_originalSpeechRateForJobOverride
pathForResource:ofType:
dictionaryWithContentsOfFile:
whitespaceAndNewlineCharacterSet
rangeOfString:options:range:
characterAtIndex:
characterIsMember:
substringToIndex:
replaceCharactersInRange:withString:
dictionaryWithObjects:forKeys:count:
enumerateKeysAndObjectsUsingBlock:
stringByReplacingEmojiCharactersWithEmojiDescriptions:stringForPauses:language:rangeReplacements:appendEmojiSuffix:
lowercaseString
setIdentifier:
setName:
footprint
setQuality:
setIsInstalled:
canBeDownloaded
setCanBeDownloaded:
setAssetSize:
isCombinedFootprint
setIsCombinedVoice:
isDefault
setIsDefault:
nonCombinedVoiceId
setNonCombinedVoiceId:
gender
setGender:
hasPrefix:
stringWithUTF8String:
stringByAppendingString:
currentHandler
handleFailureInFunction:file:lineNumber:description:
currentLocale
languageCode
emojiRangeFromString:withSearchRange:
currentRunLoop
port
addPort:forMode:
isCancelled
distantFuture
runMode:beforeDate:
cancel
getCFRunLoop
main
_machPort
_threadRunLoop
%{private}s
AXSpeechAction
AXSpeechManager
TTSSpeechSynthesizerDelegate
NSObject
AXEmojiUtilities
AXSpeechThread
@16@0:4@8B12
@8@0:4
v8@0:4
B8@0:4
v12@0:4B8
v12@0:4@8
I8@0:4
v12@0:4I8
i8@0:4
v12@0:4i8
@?8@0:4
v12@0:4@?8
f8@0:4
v12@0:4f8
@"NSString"
@"NSAttributedString"
@"NSMutableArray"
@12@0:4@8
^{URegularExpression=}12@0:4@8
@16@0:4@8^{URegularExpression=}12
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@8@12
v24@0:4@8@12B16@20
v28@0:4@8@12B16@20@24
v24@0:4@8{_NSRange=II}12@20
v16@0:4@"TTSSpeechSynthesizer"8@"TTSSpeechRequest"12
v24@0:4@"TTSSpeechSynthesizer"8@"TTSSpeechRequest"12B16@"NSError"20
v28@0:4@"TTSSpeechSynthesizer"8@"TTSSpeechRequest"12B16@"NSString"20@"NSError"24
v24@0:4@"TTSSpeechSynthesizer"8{_NSRange=II}12@"TTSSpeechRequest"20
v16@0:4B8@12
@"TTSSpeechSynthesizer"
@"AXSpeechThread"
@"NSNumber"
{_NSRange=II}20@0:4@8{_NSRange=II}12
@28@0:4@8@12@16@20B24
@"NSPort"
@"NSRunLoop"
zPLR
zPLR
