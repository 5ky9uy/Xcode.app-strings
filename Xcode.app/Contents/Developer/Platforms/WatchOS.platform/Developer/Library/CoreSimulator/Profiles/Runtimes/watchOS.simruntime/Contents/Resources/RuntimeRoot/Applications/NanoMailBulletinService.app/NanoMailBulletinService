alloc
mainScreen
bounds
initWithFrame:
setWindow:
window
makeKeyAndVisible
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
.cxx_destruct
_window
snapshotImage
postsDidMoveToWindowNotification
backgroundImage
setBackgroundImage:
_backgroundImage
clearColor
setBackgroundColor:
bundleForClass:
localizedStringForKey:value:table:
initWithLabel:chevronDirection:
setAlpha:
setCenter:
setAutoresizingMask:
sharedInstance
platterLeftRightInset
headerPlatterHeight
initWithFrame:roundedCorners:color:
addSubview:
setContentSize:
setAlwaysBounceVertical:
setDelegate:
setDecelerationRate:
didTapContent:
initWithTarget:action:
requireGestureRecognizerToFail:
idealHeightForLongLook
initWithCustomHeaderView:
actionMenuOffset
setExtraTextContainerInset:
setMessageContentViewDelegate:
setFrame:
setShowsVerticalScrollIndicator:
addGestureRecognizer:
longLookPlatter
setSourceView:trackDynamically:
defaultCenter
_handleMessageRenderedNotification:
addObserver:selector:name:object:
addObserver:forKeyPath:options:context:
_reloadActionMenuIfNeeded
_updateLayout
removeObserver:name:object:
removeObserver:forKeyPath:context:
dealloc
from
subject
messageHasMultipleRecipients:
status
setDataSource:
layoutInStyle:
_prepareAllViewsForLongLookAnimation
_configureContentViewsAfterLongLookAnimation
_configureHeaderViewAfterLongLookAnimation
animateInQuickLookWithDuration:completion:
animateInLongLookWithDuration:additionalAnimations:completion:
animateToLongLookWithAdditionalAnimations:completion:
setUserInteractionEnabled:
tableView
removeFromSuperview
frame
contentOffset
init
setMenu:
setHeader:
arrayWithObjects:count:
setContentViews:
animateWithCompletion:
setScrollView:
setFadingRootView:
notifyContentDownloadFailure
notifyImageAttachmentLoadedForContentId:
initWithActivityIndicatorStyle:
setNeedsLayout
puic_crownInputSequencer
setContent:
contentBeingDisplayed
content
layoutSubviews
sizeToFit
text
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
isEqualToString:
setAnimating:
setTransform:
setContentOffset:
setScrollEnabled:
contentSize
_messageFromToDisplay
whiteColor
LocalizedStringFromFramework:
nnmlAppPrimaryColor
currentDevice
puic_deviceVariant
applicationProxyForIdentifier:
iconDataForVariant:
scale
initWithCGImage:scale:orientation:
delegate
notificationContentViewDidTapIconInHeaderView:
notificationContentViewDidTapQuickLookInHeaderView:
string
length
quoteLevel
characterAtIndex:
characterIsMember:
enumerateAttribute:inRange:options:usingBlock:
defaultParagraphStyle
setHyphenationFactor:
setQuoteLevel:
setFirstLineHeadIndent:
setHeadIndent:
setSpacingAfterLeadingOfBody:
replaceCharactersInRange:withString:
addAttribute:value:range:
setSpacingBeforeLeadingOfBody:
nnmlPreferredFontForTextStyle:
nnmlDefaultLabelColor
nnmlMediumWeightSystemFont
dictionaryWithObjects:forKeys:count:
initWithString:attributes:
_scaledValueForValue:
stringWithFormat:
nnmlSystemFont
insertAttributedString:atIndex:
alpha
notificationContentView:didScrollToYPosition:
_handleDidScrollToYPosition:
notificationContentView:didEndScrollingAtYPosition:
_handleDidEndScrollingAtYPosition:
notificationContentViewWillBeginDragging:
_handleWillEndDraggingWithVelocity:targetContentOffset:scrollView:
notificationContentViewWillStartLoading:
notificationContentViewDidStopLoading:
notificationContentViewDidRenderMessageContent:
notificationContentViewDidTapLongLookContent:
locationInView:
arrayWithCapacity:
_replyMessage
actionItemWithTitle:target:action:
insertObject:atIndex:
removeObject:
_markMessageAsUnread
addObject:
_unflagMessage
_flagMessage
action
count
indexOfObject:
_archiveMessage
_trashMessage
setActionItemType:
removeAllObjects
notificationContentViewDidRequestReplyActions:
notificationContentViewDidMarkMessageAsRead:
notificationContentViewDidMarkMessageAsUnread:
notificationContentViewDidFlagMessage:
notificationContentViewDidUnflagMessage:
notificationContentViewDidArchiveMessage:
notificationContentViewDidTrashMessage:
_handleQuickLookDidEndScrolling
animateToLongLookWithCompletion:
target
methodForSelector:
notificationContentViewDidDismissInActionMenu:
_puic_isTouchTracking
_draggedPastTopActionThreshold
flat
setFlat:
notificationContentViewDidDismissDragging:
animateWithDuration:animations:
contentInset
setContentInset:
preferredCompositeName
textContainerInset
_refreshActionItems
initWithActionItems:
setActionItems:
layoutIfNeeded
setFooterView:
messageContentViewWillRenderContent:
messageContentView:adjustedAttributedString:
messageContentView:didScrollToYPosition:
messageContentView:didEndScrollingAtYPosition:
messageContentViewWillBeginDragging:
messageContentView:willEndDraggingWithVelocity:targetContentOffset:
messageContentViewWillStartLoading:
messageContentViewDidStopLoading:
messageContentView:userTappedUnhandledURL:
messageContentView:userTappedAttachment:
titleForHeaderView:
titleColorForHeaderView:
subtitleForHeaderView:
subtitleColorForHeaderView:
iconForHeaderView:
longLookTitleForHeaderView:
longLookTitleColorForHeaderView:
longLookIconForHeaderView:
longLookPlatterColorForHeaderView:
iconTypeForHeaderView:
roundedCornersForHeaderView:
wantsLayerCornerRadiusForHeaderView:
peopleIdentifiersForHeaderView:
didTapIconInHeaderView:
didTapQuickLookInHeaderView:
bulletinActionMenu:didSelectItem:
didDismissBulletinActionMenu:
didMuteBulletinActionMenu:
isBulletinMutedActionMenu:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
setUpWithMessage:realIcon:resolveNames:
setPresentationMode:
animateInLongLookWithDuration:completion:
animateDismissLongLookWithCompletion:
animateSlideDownDismissLongLookWithCompletion:
showLoadingSpinner
hideLoadingSpinner
crownInputSequencer
setCurrentMessageStatus:
setShouldArchive:
observeValueForKeyPath:ofObject:change:context:
_markMessageAsRead
currentMessageStatus
shouldArchive
realIcon
resolveNames
setResolveNames:
messageFrom
setMessageFrom:
messageSubject
setMessageSubject:
multipleRecipients
setMultipleRecipients:
supportsMessageActions
setSupportsMessageActions:
supportsReplyActions
setSupportsReplyActions:
isDraggingQuickLook
setIsDraggingQuickLook:
animateToLongLookAnimationPending
setAnimateToLongLookAnimationPending:
animateToLongLookAnimationCompletionBlock
setAnimateToLongLookAnimationCompletionBlock:
headerView
setHeaderView:
messageContentView
setMessageContentView:
topChevronView
setTopChevronView:
backgroundPlatterContainer
setBackgroundPlatterContainer:
backgroundPlatter
setBackgroundPlatter:
actionMenu
setActionMenu:
backgroundScrollView
setBackgroundScrollView:
icon
setIcon:
actionItems
replyItem
setReplyItem:
markAsActionItem
setMarkAsActionItem:
flagUnflagActionItem
setFlagUnflagActionItem:
deleteActionItem
setDeleteActionItem:
contentTapGestureRecognizer
setContentTapGestureRecognizer:
urlAndAttachmentTapRecognizer
setUrlAndAttachmentTapRecognizer:
loadingSpinner
setLoadingSpinner:
_shouldArchive
_realIcon
_resolveNames
_multipleRecipients
_supportsMessageActions
_supportsReplyActions
_isDraggingQuickLook
_animateToLongLookAnimationPending
_delegate
_currentMessageStatus
_messageFrom
_messageSubject
_animateToLongLookAnimationCompletionBlock
_headerView
_messageContentView
_topChevronView
_backgroundPlatterContainer
_backgroundPlatter
_actionMenu
_backgroundScrollView
_icon
_actionItems
_replyItem
_markAsActionItem
_flagUnflagActionItem
_deleteActionItem
_contentTapGestureRecognizer
_urlAndAttachmentTapRecognizer
_loadingSpinner
initWithServiceName:interface:
prepareForBulletin
setView:
showMessageWithID:fallbackFrom:fallbackSubject:fallbackMessageSnippet:fallbackAccountId:contentToBeSynced:
showFakeMessageWithID:from:subject:messageBody:
animateInQuickLookWithDuration:
animateInLongLookWithDuration:
animateToLongLook
animateDismissLongLook
animateSlideDownDismissLongLook
configureBackgroundImage:
markMessageAsRead
notifyForcingDisplay
handleWheelRotationDelta:eventSourceTimestamp:
respondWithSelectedReplyOption:
interfaceWithProtocol:
didRenderMessage
didFailRenderingMessage
didUpdateAccountEmailAddresses:
didRequestDismissIfNotYetShowing
didAnimateInQuickLook:
didAnimateInLongLook:
didAnimateToLongLook:
didAnimateDismissLongLook:
didAnimateSlideDownDismissLongLook:
didTapIconInHeaderView
didTapQuickLookInHeaderView
didTapLongLookContentInHeaderView
didExecuteAction
didDismissInActionMenu
didDismissDragging
didTapAttachment:
didTapURL:
didScrollToYPosition:
didEndScrollingAtYPosition:
willBeginDragging
didStartSendingMessageRelatedToCurrentMessage
didRequestReplyOptionsActionSheetForMultipleRecipients
didCancelMessageComposerViewController
setHidden:
view
requestMessageWithId:
UUID
UUIDString
_fakeMessageWithID:from:subject:accountId:messageBody:
_setUpMessageContentViewResolvingNames:
_fakeMessageContentWithID:messageBody:
contentView
_executeOrPostponePresentationModeOperation:
setCurrentPresentationMode:
_remoteHost
_reportAggdDataIfNeeded
sharedFactory
invalidateBlursForSource:
setNeedsDisplay
removeState:
updateMessagesStatus:
_renderFallbackUIIfPossible
_updateOffsetWithRotationalDelta:eventSourceTimestamp:adjustForCrownOrientation:
_presentComposeViewControllerForSendingType:
reportNotificationAction:
_removeMessageState:
_handleActionExecuted
_addMessageState:
_deleteMessageWithDeletionState:
messageId
_handleMessageLoaded
accountId
countByEnumeratingWithState:objects:count:
emailAddresses
checkState:
messageContentForMessage:
_renderRealContent:
requestAccounts
stringByAppendingString:
setMessageId:
setMessageIdHeader:
setFrom:
setSubject:
setPreview:
setAccountId:
setConversationId:
setTo:
setCc:
date
setDateReceived:
setDateSent:
setStatus:
setMainAlternativeValid:
setAttachments:
setPartiallyLoaded:
initWithString:
nnmlTextForegroundColorForQuoteLevel:
archivedDataWithRootObject:
setTextData:
_remoteViewControllerProxy
_remoteViewControllerProxyWithErrorHandler:
addState:
deleteMessages:
initWithMessageSendingType:referenceMessage:nanoMailService:completionBlock:
setReplyAllExcludedEmailList:
presentFromViewController:animated:completion:
reportRenderedNotificationUsingLocalContent:mailboxSynced:messageSynced:contentDownloaded:
_exportedInterface
_remoteViewControllerInterface
nanoMailService:didReplyWithConversationOperations:totalConversationsCount:willFetch:error:reloadCache:
nanoMailService:didReplyWithMessage:
nanoMailService:didReplyWithMessageContent:
nanoMailService:didReplyWithMessageContentLoadFailedForMessageWithId:
nanoMailService:didReplyWithAccounts:error:
nanoMailService:didReplyWithMailboxSelection:
nanoMailService:didReplyWithComposedMessageIds:progress:
nanoMailService:didReplyWithFailedComposedMessageIdsAndSubjects:
nanoMailService:didReplyWithFirstUnreadMessages:
nanoMailService:didReplyWithIsConnected:
nanoMailService:didAddNewMessage:
nanoMailService:didUpdateMessage:
nanoMailService:didDeleteMessageWithId:
nanoMailService:didExecuteConversationOperations:
nanoMailService:didReceiveContentForMessageWithId:
nanoMailService:didReceiveImageAttachmentForMessageWithId:contentId:
nanoMailService:didAddNewAccount:
nanoMailService:didUpdateAccount:
nanoMailService:didDeleteAccountWithId:
nanoMailService:didChangeMailboxSelection:
nanoMailService:didReportFailureSendingComposedMessageWithId:subject:
nanoMailService:didReportSendingComposedMessageStartedWithId:referenceMessageId:
nanoMailService:didFinishSyncingMessagesSuccessfullyReceivingMessages:initialMessages:
nanoMailService:didFailSyncingMessagesWithError:
nanoMailServiceDidNotifyOldMessagesAvailable:
nanoMailServiceDidNotifyFetchRequestCompleted:batchResponse:
nanoMailService:didReportProgress:forComposedMessageWithId:referenceMessageId:
nanoMailServiceDidDeleteAllMessages:
nanoMailServiceDidRequestReloadCache:
nanoMailService:connectivityDidChange:
nanoMailServiceDidResetXPCConnection:
nanoMailService:didReplyWithMessagesCount:
nanoMailService:didReplyWithAllMessages:
backgroundSourceForAlertPlatterView:
loadView
_remoteHostWithErrorHandler:
nanoMailService
setNanoMailService:
messageIdWaitingFor
setMessageIdWaitingFor:
message
setMessage:
preparedForBulletin
setPreparedForBulletin:
setContentView:
pendingPresentationModeBlock
setPendingPresentationModeBlock:
shouldMarkMessageAsReadUponLoad
setShouldMarkMessageAsReadUponLoad:
fallbackFrom
setFallbackFrom:
fallbackSubject
setFallbackSubject:
fallbackMessageSnippet
setFallbackMessageSnippet:
fallbackAccountId
setFallbackAccountId:
renderingFallbackUI
setRenderingFallbackUI:
contentToBeSynced
setContentToBeSynced:
aggdDataReported
setAggdDataReported:
backgroundView
setBackgroundView:
currentPresentationMode
accountEmailAddresses
setAccountEmailAddresses:
_preparedForBulletin
_shouldMarkMessageAsReadUponLoad
_renderingFallbackUI
_contentToBeSynced
_aggdDataReported
_nanoMailService
_messageIdWaitingFor
_message
_contentView
_pendingPresentationModeBlock
_fallbackFrom
_fallbackSubject
_fallbackMessageSnippet
_fallbackAccountId
_backgroundView
_currentPresentationMode
_accountEmailAddresses
AppDelegate
UIApplicationDelegate
NSObject
NMBCRemoteMessageBodyBackgroundView
CUISAlertPlatterViewBackgroundSource
PUICBlurViewSource
NMBCNotificationContentView
NNMKMessageContentViewDelegate
CUISAlertHeaderViewDataSource
CUISAlertHeaderViewDelegate
CUISBulletinActionMenuDelegate
UIScrollViewDelegate
UIGestureRecognizerDelegate
NNMKBulletinContentViewServiceServer
NNMKBulletinContentViewServiceClient
NMBCRemoteMessageBodyServerViewController
NMBCNotificationContentViewDelegate
NNMKNanoMailServiceDelegate
CUISAlertPlatterBackgroundContainer
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4@8
B16@0:4@8@12
B24@0:4@8@12@16@20
B20@0:4@8@12@16
v24@0:4@8i12d16
v16@0:4@8i12
v28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12
v16@0:4@8@12
v24@0:4@8@12@16@?20
v28@0:4@8@12@16@20@?24
v20@0:4@8@12@?16
v16@0:4@8@?12
I16@0:4@8@12
@20@0:4@8@12@16
B20@0:4@8@12@?16
v20@0:4@8@12@16
v12@0:4@"UIApplication"8
B16@0:4@"UIApplication"8@"NSDictionary"12
B16@0:4@"UIApplication"8@"NSURL"12
B24@0:4@"UIApplication"8@"NSURL"12@"NSString"16@20
B20@0:4@"UIApplication"8@"NSURL"12@"NSDictionary"16
v24@0:4@"UIApplication"8i12d16
v16@0:4@"UIApplication"8i12
v28@0:4@"UIApplication"8{CGRect={CGPoint=ff}{CGSize=ff}}12
v16@0:4@"UIApplication"8@"UIUserNotificationSettings"12
v16@0:4@"UIApplication"8@"NSData"12
v16@0:4@"UIApplication"8@"NSError"12
v16@0:4@"UIApplication"8@"NSDictionary"12
v16@0:4@"UIApplication"8@"UILocalNotification"12
v24@0:4@"UIApplication"8@"NSString"12@"UILocalNotification"16@?<v@?>20
v28@0:4@"UIApplication"8@"NSString"12@"NSDictionary"16@"NSDictionary"20@?<v@?>24
v24@0:4@"UIApplication"8@"NSString"12@"NSDictionary"16@?<v@?>20
v28@0:4@"UIApplication"8@"NSString"12@"UILocalNotification"16@"NSDictionary"20@?<v@?>24
v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?I>16
v16@0:4@"UIApplication"8@?<v@?I>12
v20@0:4@"UIApplication"8@"UIApplicationShortcutItem"12@?<v@?B>16
v20@0:4@"UIApplication"8@"NSString"12@?<v@?>16
v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?@"NSDictionary">16
v20@0:4@"UIApplication"8@"INIntent"12@?<v@?@"INIntentResponse">16
I16@0:4@"UIApplication"8@"UIWindow"12
B16@0:4@"UIApplication"8@"NSString"12
@"UIViewController"20@0:4@"UIApplication"8@"NSArray"12@"NSCoder"16
B16@0:4@"UIApplication"8@"NSCoder"12
v16@0:4@"UIApplication"8@"NSCoder"12
B20@0:4@"UIApplication"8@"NSUserActivity"12@?<v@?@"NSArray">16
v20@0:4@"UIApplication"8@"NSString"12@"NSError"16
v16@0:4@"UIApplication"8@"NSUserActivity"12
v16@0:4@"UIApplication"8@"CKShareMetadata"12
@"UIWindow"8@0:4
v12@0:4@"UIWindow"8
v8@0:4
@"UIWindow"
@"UIImage"8@0:4
@"UIImage"
v16@0:4@8f12
v24@0:4@8{CGPoint=ff}12N^{CGPoint=ff}20
v12@0:4@"NNMKMessageContentView"8
v16@0:4@"NNMKMessageContentView"8@"NSMutableAttributedString"12
v16@0:4@"NNMKMessageContentView"8f12
v24@0:4@"NNMKMessageContentView"8{CGPoint=ff}12N^{CGPoint=ff}20
v16@0:4@"NNMKMessageContentView"8@"NSURL"12
v16@0:4@"NNMKMessageContentView"8@"NSTextAttachment"12
@12@0:4@8
I12@0:4@8
@"NSString"12@0:4@"CUISAlertHeaderView"8
@"UIColor"12@0:4@"CUISAlertHeaderView"8
@"UIImage"12@0:4@"CUISAlertHeaderView"8
I12@0:4@"CUISAlertHeaderView"8
B12@0:4@"CUISAlertHeaderView"8
@"NSArray"12@0:4@"CUISAlertHeaderView"8
v12@0:4@"CUISAlertHeaderView"8
v16@0:4@"CUISBulletinActionMenu"8@"PUICActionItem"12
v12@0:4@"CUISBulletinActionMenu"8
B12@0:4@"CUISBulletinActionMenu"8
v16@0:4@8B12
v20@0:4@8@12f16
v12@0:4@"UIScrollView"8
v24@0:4@"UIScrollView"8{CGPoint=ff}12N^{CGPoint=ff}20
v16@0:4@"UIScrollView"8B12
@"UIView"12@0:4@"UIScrollView"8
v16@0:4@"UIScrollView"8@"UIView"12
v20@0:4@"UIScrollView"8@"UIView"12f16
B12@0:4@"UIScrollView"8
B12@0:4@"UIGestureRecognizer"8
B16@0:4@"UIGestureRecognizer"8@"UIGestureRecognizer"12
B16@0:4@"UIGestureRecognizer"8@"UITouch"12
B16@0:4@"UIGestureRecognizer"8@"UIPress"12
@24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
v20@0:4@8B12B16
v12@0:4I8
v20@0:4d8@?16
v12@0:4@?8
v12@0:4B8
v24@0:4@8@12@16^v20
v12@0:4f8
v24@0:4{CGPoint=ff}8N^{CGPoint=ff}16@20
@?8@0:4
@"<NMBCNotificationContentViewDelegate>"
@"NSString"
@"CUISAlertHeaderView"
@"NNMKMessageContentView"
@"CUISAlertChevronView"
@"UIView"
@"CUISAlertPlatterView"
@"CUISBulletinActionMenu"
@"UIScrollView"
@"NSMutableArray"
@"PUICActionItem"
@"UITapGestureRecognizer"
@"NNMKMessageContentTapGestureRecognizer"
@"PUICActivityIndicatorView"
v32@0:4@8@12@16@20@24B28
v24@0:4@8@12@16@20
v16@0:4d8
v20@0:4f8d12
v32@0:4@"NSString"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24B28
v24@0:4@"NSString"8@"NSString"12@"NSString"16@"NSString"20
v12@0:4@"UIImage"8
v12@0:4@"NSArray"8
v12@0:4@"NSTextAttachment"8
v12@0:4@"NSURL"8
v12@0:4@"NMBCNotificationContentView"8
v16@0:4@"NMBCNotificationContentView"8f12
v32@0:4@8@12I16B20@24B28
v24@0:4@8i12@16@20
v16@0:4@8I12
v32@0:4@"NNMKNanoMailService"8@"NSArray"12I16B20@"NSError"24B28
v16@0:4@"NNMKNanoMailService"8@"NNMKMessage"12
v16@0:4@"NNMKNanoMailService"8@"NNMKMessageContent"12
v16@0:4@"NNMKNanoMailService"8@"NSString"12
v20@0:4@"NNMKNanoMailService"8@"NSArray"12@"NSError"16
v16@0:4@"NNMKNanoMailService"8@"NNMKMailboxSelection"12
v20@0:4@"NNMKNanoMailService"8@"NSDictionary"12@"NSDictionary"16
v16@0:4@"NNMKNanoMailService"8@"NSDictionary"12
v16@0:4@"NNMKNanoMailService"8@"NSArray"12
v16@0:4@"NNMKNanoMailService"8B12
v20@0:4@"NNMKNanoMailService"8@"NSString"12@"NSString"16
v16@0:4@"NNMKNanoMailService"8@"NNMKAccount"12
v20@0:4@"NNMKNanoMailService"8B12B16
v16@0:4@"NNMKNanoMailService"8@"NSError"12
v12@0:4@"NNMKNanoMailService"8
v24@0:4@"NNMKNanoMailService"8i12@"NSString"16@"NSString"20
v16@0:4@"NNMKNanoMailService"8I12
@"UIView<CUISAlertPlatterViewBackgroundSource>"12@0:4@"CUISAlertPlatterView"8
@28@0:4@8@12@16@20@24
@16@0:4@8@12
@12@0:4@?8
@"NNMKNanoMailService"
@"NNMKMessage"
@"NMBCNotificationContentView"
@"NMBCRemoteMessageBodyBackgroundView"
@"NSArray"
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
backgroundImage
T@"UIImage",&,N,V_backgroundImage
ALERT_CHEVRON_DISMISS_LABEL
Alert
contentSize
v4@?0
v8@?0B4
MAIL
com.apple.NanoMail
v20@?0@4{_NSRange=II}8^B16
NO_SUBJECT
REPLY_BUTTON_MULTIPLE
REPLY_BUTTON_SINGLE
MARK_AS_UNREAD_MENU_OPTION
UNFLAG_MENU_OPTION
FLAG_MENU_OPTION
ARCHIVE_MENU_OPTION
TRASH_MENU_OPTION
NO_FROM
messageFrom
T@"NSString",&,N,V_messageFrom
messageSubject
T@"NSString",&,N,V_messageSubject
multipleRecipients
TB,N,V_multipleRecipients
supportsMessageActions
TB,N,V_supportsMessageActions
supportsReplyActions
TB,N,V_supportsReplyActions
isDraggingQuickLook
TB,N,V_isDraggingQuickLook
animateToLongLookAnimationPending
TB,N,V_animateToLongLookAnimationPending
animateToLongLookAnimationCompletionBlock
T@?,C,N,V_animateToLongLookAnimationCompletionBlock
headerView
T@"CUISAlertHeaderView",&,N,V_headerView
messageContentView
T@"NNMKMessageContentView",&,N,V_messageContentView
topChevronView
T@"CUISAlertChevronView",&,N,V_topChevronView
backgroundPlatterContainer
T@"UIView",&,N,V_backgroundPlatterContainer
backgroundPlatter
T@"CUISAlertPlatterView",&,N,V_backgroundPlatter
actionMenu
T@"CUISBulletinActionMenu",&,N,V_actionMenu
backgroundScrollView
T@"UIScrollView",&,N,V_backgroundScrollView
icon
T@"UIImage",&,N,V_icon
actionItems
T@"NSMutableArray",&,N,V_actionItems
replyItem
T@"PUICActionItem",&,N,V_replyItem
markAsActionItem
T@"PUICActionItem",&,N,V_markAsActionItem
flagUnflagActionItem
T@"PUICActionItem",&,N,V_flagUnflagActionItem
deleteActionItem
T@"PUICActionItem",&,N,V_deleteActionItem
contentTapGestureRecognizer
T@"UITapGestureRecognizer",&,N,V_contentTapGestureRecognizer
urlAndAttachmentTapRecognizer
T@"NNMKMessageContentTapGestureRecognizer",&,N,V_urlAndAttachmentTapRecognizer
loadingSpinner
T@"PUICActivityIndicatorView",&,N,V_loadingSpinner
delegate
T@"<NMBCNotificationContentViewDelegate>",W,N,V_delegate
content
T@"NNMKMessageContent",&,N
currentMessageStatus
TI,N,V_currentMessageStatus
shouldArchive
TB,N,V_shouldArchive
contentBeingDisplayed
TB,R,N
realIcon
TB,R,N,V_realIcon
resolveNames
TB,N,V_resolveNames
nanoMailService
T@"NNMKNanoMailService",&,N,V_nanoMailService
messageIdWaitingFor
T@"NSString",&,N,V_messageIdWaitingFor
message
T@"NNMKMessage",&,N,V_message
preparedForBulletin
TB,N,V_preparedForBulletin
contentView
T@"NMBCNotificationContentView",&,N,V_contentView
pendingPresentationModeBlock
T@?,C,N,V_pendingPresentationModeBlock
shouldMarkMessageAsReadUponLoad
TB,N,V_shouldMarkMessageAsReadUponLoad
fallbackFrom
T@"NSString",&,N,V_fallbackFrom
fallbackSubject
T@"NSString",&,N,V_fallbackSubject
fallbackMessageSnippet
T@"NSString",&,N,V_fallbackMessageSnippet
fallbackAccountId
T@"NSString",&,N,V_fallbackAccountId
renderingFallbackUI
TB,N,V_renderingFallbackUI
contentToBeSynced
TB,N,V_contentToBeSynced
aggdDataReported
TB,N,V_aggdDataReported
backgroundView
T@"NMBCRemoteMessageBodyBackgroundView",&,N,V_backgroundView
currentPresentationMode
TI,N,V_currentPresentationMode
accountEmailAddresses
T@"NSArray",&,N,V_accountEmailAddresses
NanoMailBulletinService exiting...
Message rendered...
Did tap content.
Reloading action menu...
Action menu recreated.
Action menu re-layout.
View controller created. Waiting for Message ID to show...
View controller dealloc'ed.
Preparing to show another bulletin in the future...
Message ID to show received. Starting rendering... (Message Id: %{public}@).
Showing fake message. Not pre-rendered (Message Id: %{public}@).
Requested to present mode: %lu.
Animating in quick look.
Animating in long look.
Animating to long look.
Animating dismiss long look.
Animating slide down dismiss long look.
Marking message as read as requested by Client Factory.
Message won't be marked as read.
Client is forcing display. Trying to render fallbackUI, or requesting a dismiss if we're not showing anything.
Did tap icon in header view.
Did tap quick look in header view.
Did tap long look content in header view.
Did mark as read.
Did mark as unread.
Did flag message.
Did unflag message.
Did trash message.
Did archive message.
Did dismiss in action menu.
User did dismiss by dragging Notification Content View.
Message has not been received yet. Waiting... (Message Id: %{public}@).
Message updated. (Message Id: %{public}@ - Status: %lu).
Message deleted. (Message Id: %{public}@).
Account updated. (Account Id: %{public}@).
Received content. Starting to render notification... (Message Id: %{public}@).
Rendering content download failure. (Message Id: %{public}@).
Rendering attachment that has just been received. (Message Id: %{public}@ - ContentId: %{public}@).
Reply/forward to the current message started. Notifying UI Pluggin. (Reference message Id: %{public}@).
Message Loaded (Message Id: %{public}@).
Content has not been received yet. Waiting... (Message Id: %{public}@).
Rendering fallback UI... (Message Id: %{public}@).
Creating content view, as there wasn't one cached.
Content view created.
Content view set up.
User UPDATED message (Id: %{public}@). Added state: %lu.
User UPDATED message (Id: %{public}@). Removed state: %lu.
User DELETED message (Id: %{public}@ - Subject: %{public}@) with state: %lu.
Sending logs to aggd (Message Id: %{public}@ - Local Content: %d - Mailbox Synced: %d - Message Synced: %d - Content Downloaded: %d).
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.bulletinboard.utilities</key>
<true/>
<key>com.apple.private.nanomaild.sync</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/Applications/NanoMail.app/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>Library/NanoMailKit/Attachments/</string>
<string>Library/NanoMailKit/Content/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.bulletinboard.observerconnection</string>
<string>com.apple.coreduetd</string>
<string>com.apple.nanomail.sync.messages</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.NanoMail</string>
</array>
<key>com.apple.springboard.openurlinbackground</key>
<true/>
<key>platform-application</key>
<true/>
</dict>
</plist>
zPLR
zPLR
