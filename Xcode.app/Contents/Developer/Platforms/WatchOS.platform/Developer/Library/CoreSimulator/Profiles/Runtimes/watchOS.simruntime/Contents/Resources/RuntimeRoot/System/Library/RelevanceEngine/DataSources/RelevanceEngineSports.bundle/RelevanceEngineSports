init
alloc
teamManager
count
array
countByEnumeratingWithState:objects:count:
addObject:
_fetchGameForTeam:completion:
copy
_populateLogosForGames:completion:
fetchTeamNamesWithCompletion:
fetchedTeam
name
identifier
_refreshGame:completion:
arrayWithObjects:count:
initWithGame:
setFetchCompletionBlock:
re_sharedSerialOperationQueue
addOperation:
initWithTeam:
homeTeam
awayTeam
logoManager
populateLogoIntoTeams:completion:
fetchGamesWithCompletion:
fetchGames:completion:
fetchGame:completion:
.cxx_destruct
_teamManager
_logoManager
dictionary
hasStartedXPCRefresh
setStartedXPCRefresh:
_setupXPCRefresh
refreshGamesWithCompletion:
dealloc
completionBlocks
fetchInProgress
setFetchInProgress:
date
lastAllGamesRefreshDate
timeIntervalSinceDate:
games
status
startDate
timeIntervalSinceNow
_mergeGames:
removeAllObjects
gameManager
gamesByIdentifier
setLastAllGamesRefreshDate:
setObject:forKey:
objectForKey:
fetchedDate
removeObjectsForKeys:
allValues
setGames:
sportsRefreshManagerDidRefresh:
enumerateObservers:
beginAutomaticRefreshing
refreshGame:completion:
setCompletionBlocks:
_startedXPCRefresh
_fetchInProgress
_games
_completionBlocks
_gameManager
_lastAllGamesRefreshDate
_gamesByIdentifier
fetchCompletionBlock
team
logoImageData
setCompletionBlock:
isCancelled
logoURL
sharedSession
_logoDataFromLocation:
setLogoImageData:
downloadTaskWithURL:completionHandler:
resume
currentDevice
sizeClass
path
defaultManager
numberWithInt:
dictionaryWithObjects:forKeys:count:
setAttributes:ofItemAtPath:error:
dataWithContentsOfURL:options:error:
numberWithDouble:
numberWithBool:
data
main
_team
_fetchCompletionBlock
_logoImageData
isEqualToString:
class
dataSourceClassForKey:
initWithOriginatingTeam:
performer
favoriteTeam
length
setFetchedSchedule:
_fetchGameWithCompletion:
startDirectActionRequest
setRequestExecutionParameters:
startRequest
stringWithFormat:
setUtterance:
setTextToSpeechIsMuted:
performRequest:completion:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
startTime
isKindOfClass:
absoluteString
homeEntity
initWithEntity:
homeScore
homeTeamRecordSummary
awayEntity
awayScore
awayTeamRecordSummary
matchupOrder
periodDescription
winningEntity
supportsSecureCoding
encodeWithCoder:
initWithCoder:
copyWithZone:
initWithMatchup:forFetchedTeam:fromRequest:
setIdentifier:
teamOrder
homeRecord
awayRecord
fetchRequest
_identifier
_startDate
_status
_homeTeam
_awayTeam
_teamOrder
_homeScore
_awayScore
_homeRecord
_awayRecord
_periodDescription
_fetchedDate
_fetchedTeam
_fetchRequest
image
shortName
abbreviatedName
logoData
setLogoData:
_name
_shortName
_abbreviatedName
_logoURL
_logoData
bundleIdentifier
overrideLocalizedDataSourceName
applicationBundleIdentifier
supportedSections
getElementsInSection:withHandler:
initWithSuiteName:
newWatchListKitUserDefaults
registerDefaults:
sharedManager
setHttpArchiveBufferSize:
setDateStyle:
setTimeStyle:
sharedInstance
addObserver:
_sectionizedGames:
addObserver:forKeyPath:options:context:
removeObserver:
setUnlockedSinceBoot:
cachedRelevantGamesBySection
objectForKeyedSubscript:
_elementFromGame:
delegate
elementOperationQueue
invalidateElements
observeValueForKeyPath:ofObject:change:context:
initWithStartRequest:requestOptions:
performRequestWithCompletion:
initWithAction:
initWithStartDate:endDate:
dateByAddingTimeInterval:
containsDate:
endDate
initWithEventInterval:becomesIrrelevantDate:
earlierDate:
initWithEventInterval:becomesIrrelevantDate:firstBecomesRelevantDate:recentDuration:
initWithIdentifier:content:action:relevanceProviders:privacyBehavior:
currentCalendar
dateByAddingUnit:value:toDate:options:
_gameIsFinished:
compare:
setCachedRelevantGamesBySection:
initialize
minimumSupportedSystemVersion
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
_punchOutForGame:
refreshing
setRefreshing:
lastSuccessfulRefreshDate
setLastSuccessfulRefreshDate:
formatter
watchListKitDefaults
_refreshing
_lastSuccessfulRefreshDate
_formatter
_watchListKitDefaults
_cachedRelevantGamesBySection
_getGameFromCommand:forTeam:ofRequest:
_populateURLData:intoGame:
fetchedSchedule
urlData
addObjectsFromArray:
client
code
handleCommand:commandHandler:completion:
views
context
initWithFavoriteTeam:
_favoriteTeam
_client
_fetchedSchedule
logoCache
_logoCache
_performer
bundleForClass:
localizedStringForKey:value:table:
setStyle:
screenScale
imageWithData:scale:
sharedSettings
sportsScoreSpoilersAllowed
initWithHomeTeamImage:homeTeamName:homeTeamDetail:awayTeamImage:awayTeamName:awayTeamDetail:progress:startDate:status:dateFetched:
setMatchupAccessory:
game
_game
_useCachedTeams
fetchedTeams
setFetchedTeams:
setLastFetchDate:
lastFetchDate
_lastFetchDate
_fetchedTeams
fetchError
arrayForKey:
setWithCapacity:
initWithIdentifier:name:
setCaller:
setFetchError:
makeRequestWithCompletion:
fetchConfiguration:
_fetchError
Game manager fetching all teams!
Game Manager ignoring request. No handler.
Game manager found %lu teams!
Game manager skipping logos. No teams.
Game manager fetching games for %lu teams
Game manager found %lu games.
Game manager skipping %lu games refresh. No handler.
Game manager skipping %lu games refresh. No games.
Game manager starting fetch of %lu games
Game manager refreshing %@ for %@.
Game manager updated %@ game for %@.
Game manager did not find %@ game for %@.
Game manager updated %lu out of %lu games.
Game manager games %@ refresh. No handler.
Game manager asked to refresh a nil game.
Game manager asked to refresh %@.
Game manager refreshred %@ and found %@.
Game manager skipping logos for %lu games.No handler.
Game manager skipping logo refresh. No games.
Game manager fetching %lu team logos for %lu games
Sports Refresh Manager: Starting initial refresh
Sports Refresh Manager: Initial refresh completed.
Refresh Manager registering for wakes.
Refresh Manager activity callback for %@ - %@.
Refresh Manager is nil, handling callback early for %@.
Refresh Manager hasn't been used in a day. Skipping activity %@
Refresh Manager will refresh %@.
Unable to mark activity %@ as continuing
Refresh Manager did refresh %@.
Unable to mark activity %@ as done
Refresh Manager going away.
Refresh Manager ignoring all games request. No handler.
Refresh Manager already performing all games request. Adding handler
Refresh Manager all games request found %lu games. Notifying %lu handlers.
Refresh Manager subset games request of %lu games.
Sports Refresh Manager - Not refreshing cached games
Refresh Manager fetching all games.
Refresh Manager ignoring game request. No handler.
Refresh Manager ignoring game request. No game.
Refresh Manager refreshing game %@.
Refresh Manager refreshed game %@.
Sports Refresh Manager - Updating %lu games
Sports Refresh Manager - Pruning %lu games
Couldn't did not download data from %@
Couldn't mark image data as readonly at %@ - %@
Couldn't read image data at %@ - %@
Starting request for %@ (%@): %@
Failed to refresh game %@ (%@ vs. %@) from tap.
Fetched game info - status: %ld hometeam: %@  awayteam: %@ homescore: %@ awayscore: %@
Error handling command: %@
Error handling command on retry: %@
Logo Manager going away
Logos requested for %lu teams
Logo Manager ignoring request. No handler.
Logo Manager ignoring request. No teams.
Using cached logo for %@
Fetched logo data for %@
Caching logo for %@
No logo data for %@. Retrying
Retry yielded no logo data for %@.
Logo manager found %lu logos for %lu teams!
Team Manager going away
Team Manager asked for teams
Team Manager ignoring request. No handler.
Team Manager using %lu cached teams
Team Manager is already fetching teams
Team Manager is starting a team fetch
Team Manager found %lu team
Team Manager notifying %lu callbacks
Using %lu overridden teams %@
Unable to fetch response for teams.
Unable to fetch teams - (%ld) %@
Fetched %ld teams
v8@?0
v16@?0@"RESportsGame"8
v16@?0@"NSSet"8
teamManager
T@"RESportsTeamManager",R,N,V_teamManager
logoManager
T@"RESportsLogoManager",R,N,V_logoManager
v16@?0@"NSObject<OS_xpc_object>"8
v16@?0@"NSArray"8
v24@?0@"<RESportsRefreshManagerObserver>"8^B16
startedXPCRefresh
TB,N,GhasStartedXPCRefresh,V_startedXPCRefresh
fetchInProgress
TB,N,V_fetchInProgress
completionBlocks
T@"NSMutableArray",&,N,V_completionBlocks
gameManager
T@"RESportsGameManager",R,N,V_gameManager
lastAllGamesRefreshDate
T@"NSDate",C,N,V_lastAllGamesRefreshDate
gamesByIdentifier
T@"NSMutableDictionary",R,N,V_gamesByIdentifier
games
T@"NSArray",C,V_games
com.apple.sports.fifteenminutes
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
logoImageData
T@"NSData",&,V_logoImageData
team
T@"RESportsTeam",R,N,V_team
fetchCompletionBlock
T@?,C,V_fetchCompletionBlock
sportsEntityId
sportsAttribute
schedule
%@ schedule
fetchedDate
identifier
startDate
homeTeam
homeScore
homeRecord
awayTeam
awayScore
awayRecord
periodDescription
status
score
%@ score
sportsEventId
supportsSecureCoding
TB,R
T@"NSString",C,N,V_identifier
T@"NSDate",R,N,V_startDate
TQ,R,N,V_status
T@"RESportsTeam",R,N,V_homeTeam
T@"RESportsTeam",R,N,V_awayTeam
teamOrder
TQ,R,N,V_teamOrder
T@"NSString",R,N,V_homeScore
T@"NSString",R,N,V_awayScore
T@"NSString",R,N,V_homeRecord
T@"NSString",R,N,V_awayRecord
T@"NSString",R,N,V_periodDescription
T@"NSDate",R,N,V_fetchedDate
fetchedTeam
T@"RESportsTeamsFetchedTeam",R,N,V_fetchedTeam
fetchRequest
T@"SAStartRequest",R,N,V_fetchRequest
name
shortName
abbreviatedName
logoURL
logoData
T@"NSData",&,N,V_logoData
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_name
T@"NSString",R,N,V_shortName
T@"NSString",R,N,V_abbreviatedName
T@"NSURL",R,N,V_logoURL
com.apple.tv
SportsScoreSpoilersAllowed
v12@?0B8
v24@?0@"REElementAction"8@"NSDictionary"16
TEAM_SCHEDULE
%@ %@ game
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
refreshing
TB,V_refreshing
lastSuccessfulRefreshDate
T@"NSDate",C,V_lastSuccessfulRefreshDate
formatter
T@"NSDateFormatter",R,N,V_formatter
watchListKitDefaults
T@"NSUserDefaults",R,N,V_watchListKitDefaults
cachedRelevantGamesBySection
T@"NSDictionary",C,V_cachedRelevantGamesBySection
v16@?0@"SABaseCommand"8
v20@?0B8@"NSError"12
client
T@"AFClientLite",R,N,V_client
fetchedSchedule
T@"RESportsGame",&,V_fetchedSchedule
favoriteTeam
T@"RESportsTeamsFetchedTeam",R,N,V_favoriteTeam
v16@?0@"NSData"8
v24@?0@"RESportsTeam"8@"NSData"16
logoCache
T@"NSCache",R,N,V_logoCache
performer
T@"RESportsRequestPerformer",R,N,V_performer
com.apple.upnext.siri.sports
Sports
SPORTS_NAME
Favorite Teams
GAME_HIDDEN_SCORE
GAME_POSTPONED
Postponed
GAME_DELAYED
Delayed
GAME_CANCELLED
Cancelled
GAME_FINAL
Final
GAME_LIVE
Live
game
T@"RESportsGame",R,N,V_game
v24@?0@"NSSet"8@"NSError"16
lastFetchDate
T@"NSDate",C,N,V_lastFetchDate
fetchedTeams
T@"NSSet",C,N,V_fetchedTeams
SportsTeamOverride
RESportsDataSource
v24@?0@"NSArray"8@"NSError"16
v16@?0@"WLKServerConfigurationResponse"8
T@"NSSet",&,V_fetchedTeams
fetchError
T@"NSError",&,V_fetchError
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_identifier
RESportsGameManager
RESportsRefreshManager
RESportsLogoFetchOperation
RESiriSportsBundleConfiguration
RESportsTeamScheduleFetchOperation
RESportsGame
NSSecureCoding
NSCoding
NSCopying
RESportsTeam
RESiriSportsSampleDataSource
RESiriSportsDataSource
RESportsRefreshManagerObserver
NSObject
RESportsRequestPerformer
RESportsLogoManager
RESportsScheduleFetchOperation
RESiriSportsUtilities
RESportsGameScheduleFetchOperation
RESportsTeamManager
RESportsTeamsFetchOperation
RESportsTeamsFetchedTeam
@16@0:8
v24@0:8@?16
v32@0:8@16@?24
v16@0:8
@"RESportsTeamManager"
@"RESportsLogoManager"
v24@0:8@16
B16@0:8
v20@0:8B16
@"NSArray"
@"NSMutableArray"
@"RESportsGameManager"
@"NSDate"
@"NSMutableDictionary"
@24@0:8@16
@?16@0:8
@"RESportsTeam"
@"NSData"
#24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@40@0:8@16@24@32
Q16@0:8
@"NSString"
@"RESportsTeamsFetchedTeam"
@"SAStartRequest"
@"NSURL"
{?=qqq}16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"RESportsRefreshManager"16
v48@0:8@16@24@32^v40
@"NSDateFormatter"
@"NSUserDefaults"
@"NSDictionary"
v32@0:8@16@24
@"AFClientLite"
@"RESportsGame"
@"NSCache"
@"RESportsRequestPerformer"
@"NSSet"
@"NSError"
@32@0:8@16@24
@(#)PROGRAM:RelevanceEngineSports  PROJECT:RelevanceEngine-1
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
