init
sharedAVSystemController
numberWithInt:
setAttribute:forKey:error:
copy
alloc
arrayWithObjects:count:
initWithBundleIDs:states:
bundleInfoValueForKey:PID:
containsObject:
objectForKeyedSubscript:
integerValue
playbackEngines
allValues
countByEnumeratingWithState:objects:count:
playerPath
setPlayerPath:
setLabel:
pause
playerID
performRequest:completion:
performWithCompletion:
setHandler:
dictionaryWithCapacity:
strongToStrongObjectsMapTable
invalidate
dealloc
_playbackEngineForPlayerID:
start
becomeActive
addObject:
removeObject:
_updateProcessAssertions
setObject:forKey:
initWithPlayerID:
addEngineObserver:
setObject:forKeyedSubscript:
objectEnumerator
count
initWithPID:flags:reason:name:withHandler:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:willResetQueueWithPlaybackContext:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
getPlayerPathForPlayerID:reply:
startPlayerForPlayerID:
becomeActiveForPlayerID:
setWantsReverseProcessAssertion:forPlayerID:
initWithPID:
.cxx_destruct
bundleID
setBundleID:
setPid:
setPlaybackEngines:
playbackEngineStateMap
setPlaybackEngineStateMap:
stateMonitor
setStateMonitor:
processAssertion
setProcessAssertion:
playerIDsWantingAssertions
setPlayerIDsWantingAssertions:
supportsBackgroundAudio
setSupportsBackgroundAudio:
_playerQueue
_supportsBackgroundAudio
_bundleID
_pid
_playbackEngines
_playbackEngineStateMap
_stateMonitor
_processAssertion
_playerIDsWantingAssertions
processIdentifier
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
resume
listener:shouldAcceptNewConnection:
sharedCloudController
sharedController
beginObservingCloudLibraryEnabled
setFilteringDisabled:
defaultMediaLibrary
beginGeneratingLibraryChangeNotifications
serviceListener
setDelegate:
Failed to inherit application state: %{public}@
Pausing playback (%{public}@) due to task suspension error: %{public}@
Pausing playback (%{public}@) due to task suspension
Failed to acquire assertion for playback notifications.
UIBackgroundModes
audio
Supported command request for task suspension.
v8@?0@"NSError"4
v12@?0@"MPCPlayerResponse"4@"NSError"8
v8@?0@"NSDictionary"4
v4@?0
I4@?0
MPMusicPlayerController/applicationMusicPlayer/notifications
v8@?0B4
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
bundleID
T@"NSString",C,N,V_bundleID
Ti,N,V_pid
playbackEngines
T@"NSMutableDictionary",&,N,V_playbackEngines
playbackEngineStateMap
T@"NSMapTable",&,N,V_playbackEngineStateMap
stateMonitor
T@"BKSApplicationStateMonitor",&,N,V_stateMonitor
processAssertion
T@"BKSProcessAssertion",&,N,V_processAssertion
playerIDsWantingAssertions
T@"NSMutableSet",&,N,V_playerIDsWantingAssertions
supportsBackgroundAudio
TB,N,V_supportsBackgroundAudio
MPRemotePlayerService
MPCPlaybackEngineEventObserving
NSObject
MPRemotePlayerServiceProtocol
ServiceDelegate
NSXPCListenerDelegate
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@8I12
v20@0:4@8@12@16
v16@0:4@8@12
v16@0:4@8i12
v12@0:4@8
v16@0:4@"MPCPlaybackEngine"8I12
v20@0:4@"MPCPlaybackEngine"8@"MPAVItem"12@"MPAVItem"16
v16@0:4@"MPCPlaybackEngine"8@"MPAVItem"12
v16@0:4@"MPCPlaybackEngine"8@"MPPlaybackContext"12
v20@0:4@"MPCPlaybackEngine"8@"MPPlaybackContext"12@"NSError"16
v16@0:4@"MPCPlaybackEngine"8@"NSString"12
v16@0:4@"MPCPlaybackEngine"8i12
v12@0:4@"MPCPlaybackEngine"8
v16@0:4@8@?12
v16@0:4B8@12
v16@0:4@"NSString"8@?<v@?@"MPCPlayerPath">12
v12@0:4@"NSString"8
v16@0:4B8@"NSString"12
@12@0:4i8
v8@0:4
@12@0:4@8
i8@0:4
v12@0:4i8
v12@0:4B8
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"NSMutableDictionary"
@"NSMapTable"
@"BKSApplicationStateMonitor"
@"BKSProcessAssertion"
@"NSMutableSet"
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.PairingManager.Read</key>
<true/>
<key>com.apple.PairingManager.RemovePeer</key>
<true/>
<key>com.apple.PairingManager.Write</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.assertiond.background-view-services</key>
<true/>
<key>com.apple.assistant.contextprovider</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.coreaudio.allow-amr-encode</key>
<true/>
<key>com.apple.coremedia.allow-protected-content-playback</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.familycircle.agent</key>
<true/>
<key>com.apple.itunescloud.delegate-account-store</key>
<true/>
<key>com.apple.itunescloud.delegation-provider</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.launchservices.receivereferrerrurl</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.private.coreaudio.viewInterruptorName.allow</key>
<true/>
<key>com.apple.private.coremedia.pidinheritance.allow</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.iad.background-client</key>
<true/>
<key>com.apple.private.iad.privileged-client</key>
<true/>
<key>com.apple.private.rtcreportingd</key>
<true/>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.security.assets.music.read-write</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/tmp/MediaCache</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Preferences/com.apple.restrictionspassword.plist</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/com.apple.iTunesCloud/</string>
<string>/Library/com.apple.itunesstored/</string>
<string>/Library/Caches/com.apple.Music/</string>
<string>/Library/Cookies/</string>
<string>/Media/</string>
<string>/Library/Caches/com.apple.Radio/</string>
<string>/Library/Caches/com.apple.iTunesStore/</string>
<string>/Library/Caches/sharedCaches/com.apple.Radio.RadioImageCache/</string>
<string>/Library/Caches/sharedCaches/com.apple.Radio.RadioRequestURLCache/</string>
<string>/Library/com.apple.MediaSocial/</string>
<string>/Library/Logs/MediaServices/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.adid</string>
<string>com.apple.ak.anisette.xpc</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.familycircle.agent</string>
<string>com.apple.hsa-authentication-server</string>
<string>com.apple.mediaartworkd.xpc</string>
<string>com.apple.MediaPlayer.MPRadioControllerServer</string>
<string>com.apple.rtcreportingd</string>
<string>com.apple.storebookkeeperd.xpc</string>
<string>com.apple.atc.xpc</string>
<string>com.apple.atc.xpc.downloadprogress</string>
<string>com.apple.atc.xpc.runkeeplocaltask</string>
<string>com.apple.PairingManager</string>
<string>com.apple.itunescloud.delegation-provider</string>
<string>com.apple.itunescloud.delegate-account-store</string>
<string>com.apple.itunescloudd.playactivity</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.mediaplaybackcore</string>
<string>com.apple.videos-preferences</string>
<string>com.apple.mobileipod</string>
<string>com.apple.Music</string>
<string>com.apple.itunesstored</string>
<string>com.apple.homesharing</string>
<string>com.apple.mediaremote</string>
<string>com.apple.restrictionspassword</string>
<string>com.apple.itunescloudd</string>
<string>com.apple.medialibrary</string>
<string>com.apple.itunescloud</string>
</array>
<key>com.apple.security.files.downloads.read-write</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.smoot.subscriptionservice</key>
<true/>
<key>com.apple.springboard.activateassistant</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptoms.NetworkOfInterest</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>fairplay-client</key>
<integer>1974055701</integer>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.MediaRemote.pairing</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
zPLR
