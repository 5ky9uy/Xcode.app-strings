RDTemplate
com.apple.nanomail.retailDemoMigrationQueue
v8@?0
isMigrating
TB,N,V_isMigrating
migrationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_migrationQueue
demoContentMigrationCompletionBlock
T@?,C,N,V_demoContentMigrationCompletionBlock
messageDatesUpdatedCompletionBlock
T@?,C,N,V_messageDatesUpdatedCompletionBlock
index.sqlite
protected.sqlite
Journal
Database-Unprotected.sql
Database-Protected.sql
com.apple.nanomail.dbfactory
com.apple.nanomail.db
v24@?0@"NNMKRetailDemoUtility"8@"NSError"16
v16@?0@"NNMKRetailDemoUtility"8
PROTECTED
CONTROL
v16@?0@"NSString"8
/private/var/mobile/Library/Mail
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
databaseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_databaseQueue
connection
T@"NNMKProtectedSQLiteConnection",&,N,V_connection
journal
T@"NNMKSQLJournal",&,N,V_journal
database
T@"NNMKDatabase",&,N,V_database
demoUtility
T@"NNMKRetailDemoUtility",&,N,V_demoUtility
observer
T@"<NNMKDatabaseLifecycleObserver>",W,N,V_observer
createdDatabaseFromScratch
TB,N,V_createdDatabaseFromScratch
NanoMailDatabaseMigratedNotification
NanoMail
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NNMKDatabase",&,V_database
databaseFactory
T@"NNMKDatabaseFactory",&,V_databaseFactory
progress
Tf,V_progress
 FILTER_TYPE = ? 
 SYNC_ACTIVE = ? 
 SYNC_REQUESTED = ? 
 SYNC_ENABLED = ? 
 SET 
 SET CUSTOM_NAME = '%@' 
 SET CUSTOM_NAME = ? 
[filter_type: %@, 
syncActive: %@, 
syncRequested: %@, 
syncEnabled: %@, 
hasCustomName: %lu
filterType
T@"NSNumber",&,N,V_filterType
syncActive
T@"NSNumber",&,N,V_syncActive
syncRequested
T@"NSNumber",&,N,V_syncRequested
syncEnabled
T@"NSNumber",&,N,V_syncEnabled
customName
T@"NSString",&,N,V_customName
DBSchemaVersion
FullSyncVersion
ReceivedFullSyncMessages
DatabaseRecentlyMigrated
AppLastLaunchedDate
NotificationSettingsEnabled
LastIDSIdentifierForFullSyncRequest
LastIDSIdentifierForHaltSyncRequest
kControlKeyMailboxFilterIds
kControlKeyMailboxFilterType
M.ID = ?
v24@?0^{sqlite3_stmt=}8^Q16
M.MAILBOX_ID = ?
M.ACCOUNT_ID = ?
SELECT MAILBOX_ID FROM MESSAGE WHERE ID = ?
SELECT 1 FROM MESSAGE WHERE ID = ?
M.ID IN (%@)
OR (STATUS & ?)
AND M.ID NOT IN (%@)
(DATE_RECEIVED >= ?) AND (STATUS & ?) AND (CONTENT_SYNCED = ?) AND ((ACCOUNT_ID IN (%@)) %@ %@) %@
DATE_RECEIVED <= ?
SELECT IMAGE_ATTACHMENTS FROM MESSAGE WHERE ID = ?
SELECT ME.DATE_RECEIVED FROM CONVERSATION C LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = C.ID 
WHERE ME.MAILBOX_ID IN (%@) 
 ORDER BY ME.date_received ASC limit 1
-[NNMKDatabase conversationsAtIndexRange:messagesByConversationId:mailboxFilter:]_block_invoke
W.DATE_RECEIVED <= ?
-[NNMKDatabase conversationsReceivedBefore:count:initialIndex:messagesByConversationId:mailboxFilter:]_block_invoke
W.ID IN (%@)
CONVERSATION
 ME.MAILBOX_ID IN  (%@) 
(SELECT DISTINCT W.* FROM CONVERSATION W LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = W.ID WHERE %@)
LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = C.ID
 AND 
SELECT DISTINCT C.ID,                          (SELECT COUNT(ID) FROM %@ WHERE (DATE_RECEIVED > C.DATE_RECEIVED) OR (DATE_RECEIVED = C.DATE_RECEIVED AND ID < C.ID)) AS C_INDEX                          FROM CONVERSATION C %@ WHERE C.ID IN (%@) %@
W.ID = ?
W.ID = (SELECT CONVERSATION_ID FROM MESSAGE WHERE ID = ?)
LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = C.ID WHERE %@
SELECT COUNT(*) FROM (SELECT DISTINCT C.ID FROM CONVERSATION C %@)
A.ID = ?
v16@?0^{sqlite3_stmt=}8
 ACCOUNT_ID = ?
 M.ID = ? 
 SYNC_ACTIVE = 1 
 SYNC_ENABLED = 1 OR SYNC_REQUESTED = 1
SELECT SYNC_VERSION FROM MAILBOX_SYNC_VERSION WHERE MAILBOX_ID = ?
INSERT OR REPLACE INTO MAILBOX_SYNC_VERSION (MAILBOX_ID, SYNC_VERSION) VALUES (?, ?)
DELETE FROM MAILBOX_SYNC_VERSION 
INSERT INTO MESSAGE (ID, CONVERSATION_ID, ACCOUNT_ID, DATE_SENT, DATE_RECEIVED, MESSAGE_ID_HEADER, STATUS, VISIBLE_STATUS, STATUS_VERSION, CONTENT_SYNCED, NOTIFICATION_MESSAGE_ID, MAILBOX_ID, THREAD_SPECIFIC, SPECIAL_MAILBOX_SPECIFIC) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MESSAGE (ID, "FROM", SUBJECT, PREVIEW, "TO", CC, BCC) VALUES (?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MESSAGE (ID, "FROM", SUBJECT, PREVIEW, "TO", CC, BCC) VALUES (%Q, %Q, %Q, %Q, %Q, %Q, %Q)
, STATUS_VERSION = ?
UPDATE MESSAGE SET THREAD_SPECIFIC = ?, SPECIAL_MAILBOX_SPECIFIC = ?,  VISIBLE_STATUS = ?, STATUS = ?%@ WHERE ID = ?
UPDATE PROTECTED.MESSAGE SET PREVIEW = ? WHERE ID = ?
UPDATE PROTECTED.MESSAGE SET PREVIEW = %Q WHERE ID = %Q
UPDATE MESSAGE SET DATE_RECEIVED = ? WHERE ID = ?
UPDATE MESSAGE SET VISIBLE_STATUS = STATUS WHERE VISIBLE_STATUS != STATUS
SELECT 1 FROM MESSAGE WHERE VISIBLE_STATUS != STATUS 
SELECT ID FROM MESSAGE WHERE DATE_RECEIVED < ? 
 AND MAILBOX_ID = ? 
UPDATE MESSAGE SET CONTENT_SYNCED = ?, IMAGE_ATTACHMENTS = ? WHERE ID = ?
INSERT INTO CONVERSATION (ID, DATE_RECEIVED) VALUES (?, ?)
UPDATE CONVERSATION SET DATE_RECEIVED = ? WHERE ID = ?
INSERT INTO ACCOUNT (ID) VALUES (?)
INSERT INTO PROTECTED.ACCOUNT (ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES) VALUES (?, ?, ?, ?)
INSERT INTO PROTECTED.ACCOUNT (ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES) VALUES (%Q, %Q, %i, %Q)
UPDATE PROTECTED.ACCOUNT SET DISPLAY_NAME = ?, SHOULD_ARCHIVE = ?, EMAIL_ADDRESSES = ? WHERE ID = ?
UPDATE PROTECTED.ACCOUNT SET DISPLAY_NAME = %Q, SHOULD_ARCHIVE = %i, EMAIL_ADDRESSES = %Q WHERE ID = %Q
DELETE FROM PROTECTED.MAILBOX WHERE ID in  (SELECT ID FROM MAILBOX WHERE ACCOUNT_ID = ?)
DELETE FROM PROTECTED.MAILBOX WHERE ID = %Q
DELETE FROM MAILBOX WHERE ACCOUNT_ID = ?
DELETE FROM MAILBOX WHERE ID = ?
DELETE FROM PROTECTED.MAILBOX WHERE ID = ?
DELETE FROM CONVERSATION WHERE NOT EXISTS (SELECT ID FROM MESSAGE WHERE CONVERSATION_ID = CONVERSATION.ID)
DELETE FROM ACCOUNT WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT WHERE ID = %Q
INSERT INTO MAILBOX (ID, TYPE, FILTER_TYPE, ACCOUNT_ID, URL, SYNC_ENABLED, SYNC_REQUESTED, SYNC_ACTIVE) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MAILBOX (ID, CUSTOM_NAME) VALUES (?, ?)
INSERT INTO PROTECTED.MAILBOX (ID, CUSTOM_NAME) VALUES (%Q, %Q)
UPDATE MAILBOX %@ WHERE ID = ?
UPDATE PROTECTED.MAILBOX %@ WHERE ID = ?
UPDATE PROTECTED.MAILBOX %@ WHERE ID = '%@'
INSERT INTO IDS_IDENTIFIER_NOT_YET_ACKD (IDS_IDENTIFIER, OBJECT_ID, OBJECT_TYPE, DATE_TO_RESEND, RESEND_INTERVAL) VALUES (?, ?, ?, NULL, ?)
SELECT OBJECT_ID, OBJECT_TYPE, RESEND_INTERVAL FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
DELETE FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
UPDATE IDS_IDENTIFIER_NOT_YET_ACKD SET RESEND_INTERVAL = ?, DATE_TO_RESEND = ? WHERE IDS_IDENTIFIER = ?
SELECT IDS_IDENTIFIER, DATE_TO_RESEND FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE DATE_TO_RESEND IS NOT NULL
INSERT INTO COMPOSED_MESSAGE (ID, REFERENCE_MESSAGE_ID, IDS_IDENTIFIER, PROGRESS, DATE_SENT) VALUES (?, ?, ?, ?, ?)
INSERT INTO PROTECTED.COMPOSED_MESSAGE (ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS, DATE_SENT, IDS_IDENTIFIER) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.COMPOSED_MESSAGE (ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS, DATE_SENT, IDS_IDENTIFIER) VALUES (%Q, %lu, %Q, %Q, %Q, %Q, %Q, %i, datetime(%f, 'unixepoch'), %Q)
UPDATE COMPOSED_MESSAGE SET PROGRESS = ? WHERE ID = ?
DELETE FROM COMPOSED_MESSAGE WHERE ID = ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE ID = ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE ID = %Q
DELETE FROM COMPOSED_MESSAGE WHERE DATE_SENT < ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE DATE_SENT < ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE DATE_SENT < datetime(%f, 'unixepoch')
IDS_IDENTIFIER = ?
ID = ?
SELECT REFERENCE_MESSAGE_ID, ID, PROGRESS FROM COMPOSED_MESSAGE WHERE REFERENCE_MESSAGE_ID IS NOT NULL ORDER BY REFERENCE_MESSAGE_ID
SELECT ID, PROGRESS, REFERENCE_MESSAGE_ID FROM COMPOSED_MESSAGE WHERE IDS_IDENTIFIER = ?
SELECT ID, SUBJECT FROM PROTECTED.COMPOSED_MESSAGE
-[NNMKDatabase failedComposedMessageIdsAndSubjects]_block_invoke
SELECT REFERENCE_MESSAGE_ID FROM COMPOSED_MESSAGE WHERE ID = ?
SELECT COUNT(ID) FROM MESSAGE
M.ID is not null
SELECT MIN(DATE_RECEIVED) FROM MESSAGE WHERE MAILBOX_ID = ? AND THREAD_SPECIFIC = 0 
AND ((SPECIAL_MAILBOX_SPECIFIC & ? > 0) OR SPECIAL_MAILBOX_SPECIFIC = 0)
AND SPECIAL_MAILBOX_SPECIFIC = 0
 ORDER BY DATE_RECEIVED ASC 
DELETE FROM ACCOUNT
DELETE FROM PROTECTED.ACCOUNT
DELETE FROM MAILBOX
DELETE FROM PROTECTED.MAILBOX
v20@?0^{sqlite3_stmt=}8i16
SELECT KEY, VALUE FROM CONTROL
SELECT VALUE FROM %@CONTROL WHERE KEY = ?
PROTECTED.
INSERT OR REPLACE INTO %@CONTROL (KEY, VALUE) VALUES (?, ?)
INSERT OR REPLACE INTO PROTECTED.CONTROL (KEY, VALUE) VALUES (%s, %s)
SELECT ID FROM MAILBOX WHERE ACCOUNT_ID = ?
LIMIT ?, ?
 M.MAILBOX_ID IN (%@) 
SELECT %@ FROM MESSAGE M INNER JOIN PROTECTED.MESSAGE P ON M.ID == P.ID WHERE %@ ORDER BY %@ %@
SELECT %@ FROM MESSAGE M WHERE %@ ORDER BY %@ %@
CONVERSATION_ID
%@ID,                 %@ AS CONVERSATION_ID,                 %@ACCOUNT_ID,                 NULL AS "FROM",                 %@DATE_SENT,                 NULL AS SUBJECT,                 %@DATE_RECEIVED,                 %@MESSAGE_ID_HEADER,                 NULL AS PREVIEW,                 %@STATUS,                 %@VISIBLE_STATUS,                 NULL AS "TO",                 NULL AS CC,                 NULL AS BCC,                 %@NOTIFICATION_MESSAGE_ID,                 %@STATUS_VERSION,                 %@MAILBOX_ID,                 %@THREAD_SPECIFIC ,                 %@SPECIAL_MAILBOX_SPECIFIC
%@ID,                 %@ AS CONVERSATION_ID,                 %@ACCOUNT_ID,                 %@"FROM",                 %@DATE_SENT,                 %@SUBJECT,                 %@DATE_RECEIVED,                 %@MESSAGE_ID_HEADER,                 %@PREVIEW,                 %@STATUS,                 %@VISIBLE_STATUS,                 %@"TO",                 %@CC,                 %@BCC,                 %@NOTIFICATION_MESSAGE_ID,                 %@STATUS_VERSION,                 %@MAILBOX_ID,                 %@THREAD_SPECIFIC ,                 %@SPECIAL_MAILBOX_SPECIFIC
%@DATE_RECEIVED DESC, %@ID ASC
WHERE ID IN (%@)
DELETE FROM PROTECTED.MESSAGE %@
DELETE FROM PROTECTED.MESSAGE 
DELETE FROM MESSAGE %@
WHERE %@
LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = W.ID
 WHERE %@ 
 AND %@ 
(SELECT DISTINCT X.* FROM CONVERSATION X LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = X.ID WHERE %@)
, (SELECT COUNT(ID) FROM %@ WHERE (DATE_RECEIVED > C.DATE_RECEIVED) OR (DATE_RECEIVED = C.DATE_RECEIVED AND ID < C.ID)) AS C_INDEX 
 LEFT OUTER JOIN PROTECTED.MESSAGE P ON M.ID == P.ID 
SELECT %1$@ %2$@ FROM CONVERSATION C                          LEFT OUTER JOIN MESSAGE M ON M.CONVERSATION_ID = C.ID                          %3$@                          WHERE                          C.ID IN (SELECT DISTINCT W.ID FROM CONVERSATION W %4$@ %5$@ ORDER BY %6$@ LIMIT ?, ?)                            %7$@                          ORDER BY %8$@, %9$@
SELECT %@ FROM ACCOUNT A INNER JOIN PROTECTED.ACCOUNT P_ACCOUNT ON A.ID == P_ACCOUNT.ID %@
P_ACCOUNT
SELECT %@ FROM ACCOUNT A %@
SELECT %@ FROM MAILBOX M LEFT OUTER JOIN PROTECTED.MAILBOX P_MAILBOX ON M.ID == P_MAILBOX.ID %@
P_MAILBOX
SELECT %@ FROM MAILBOX M %@
%@ID, NULL, NULL, NULL
%@ID, %@DISPLAY_NAME, %@SHOULD_ARCHIVE, %@EMAIL_ADDRESSES
%@ID, %@TYPE, %@FILTER_TYPE, NULL, %@ACCOUNT_ID, %@URL, %@SYNC_ENABLED, %@SYNC_REQUESTED, %@SYNC_ACTIVE 
%@ID, %@TYPE, %@FILTER_TYPE, %@CUSTOM_NAME, %@ACCOUNT_ID, %@URL, %@SYNC_ENABLED, %@SYNC_REQUESTED, %@SYNC_ACTIVE 
SELECT ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS FROM PROTECTED.COMPOSED_MESSAGE WHERE %@
SELECT ID, NULL, NULL, NULL, NULL, NULL, REFERENCE_MESSAGE_ID, NULL FROM COMPOSED_MESSAGE WHERE %@
DELETE FROM IDS_IDENTIFIER_NOT_YET_ACKD
%@DATE_RECEIVED >= %f
(%@VISIBLE_STATUS & %lu) > 0
"%@"
 %@.MAILBOX_ID IN (%@) 
loadedSyncedMailboxProtectedData
TB,N,V_loadedSyncedMailboxProtectedData
protectedDatabaseAttached
TB,R,N
waitingForMigration
TB,N,V_waitingForMigration
currentDatabaseSchemaVersion
TQ,N,V_currentDatabaseSchemaVersion
expectedDatabaseVersion
TQ,R,N
fullSyncVersion
TQ,N,V_fullSyncVersion
receivedFullSyncMessages
TB,N,V_receivedFullSyncMessages
lastIDSIdentifierForFullSyncRequest
T@"NSString",&,N,V_lastIDSIdentifierForFullSyncRequest
lastIDSIdentifierForHaltSyncRequest
T@"NSString",&,N,V_lastIDSIdentifierForHaltSyncRequest
databaseRecentlyMigrated
TB,N,V_databaseRecentlyMigrated
mailboxFilter
T@"NNMKMailboxFilter",&,N,V_mailboxFilter
appLastLaunchedDate
T@"NSDate",&,N,V_appLastLaunchedDate
notificationSettingsEnabled
TB,N,V_notificationSettingsEnabled
init
defaultCenter
_watchDidStartPlayingDemoMovie
addObserver:selector:name:object:
_watchDidStopPlayingDemoMovie
removeObserver:name:object:
dealloc
forceDatabaseReplace
isMigrating
setIsMigrating:
sharedInstance
registryBasePath
stringByAppendingPathComponent:
defaultManager
contentsOfDirectoryAtPath:error:
countByEnumeratingWithState:objects:count:
removeItemAtPath:error:
copyItemAtPath:toPath:error:
demoContentMigrationCompletionBlock
date
messagesReceivedBefore:mailboxFilter:
count
objectAtIndexedSubscript:
dateReceived
timeIntervalSinceNow
dateByAddingTimeInterval:
setDateReceived:
dateSent
setDateSent:
updateMessageDatesForMessage:
messageDatesUpdatedCompletionBlock
shiftContentDatesForDatabase:
.cxx_destruct
setDemoContentMigrationCompletionBlock:
setMessageDatesUpdatedCompletionBlock:
migrationQueue
setMigrationQueue:
_isMigrating
_demoContentMigrationCompletionBlock
_messageDatesUpdatedCompletionBlock
_migrationQueue
initWithExecutionQueue:
_handleDatabaseMigratedNotification
_checkCurrentDeviceLockStatus
removeObserver:
_setupDatabases
observer
handleDatababaseMigrated
respondsToSelector:
isDeviceUnlocked
_handleDeviceLockStatusChanged:
isRunningInStoreDemoMode
_setupDatabaseForRetailDemo
_doSetupDatabase
setupConnection
_checkForDatabaseCorruptionFromErrorCode:
notifyProtectionDataAvailable:
errorCodeMeansCorruptedDatabase:
_recreateDatabaseFromScratch:
demoUtility
deleteDatabaseDirectoryCompletely
handleDatababaseDirectoryRecreated
alloc
setDemoUtility:
database
executionQueue
handleDatababaseChangedForRetailDemo
class
databaseDirectory
initWithUnprotectedDatabaseFileName:protectedDatabaseFileName:inDirectory:protectedDatabaseName:errorCode:
tableExists:inDatabase:
_createTablesUsingFile:
lastErrorMessage
setCreatedDatabaseFromScratch:
initWithPath:
initWithConnection:journal:queue:
setConnection:
setJournal:
loadControlValues
createdDatabaseFromScratch
setSchemaVersionToExpected
currentDatabaseSchemaVersion
protectedDatabaseAttached
handleDatabaseUnlocked
attachProtectedDatabase
_mergeJournal
dettachProtectedDatabase
beginTransaction
preparedStatementForPattern:cacheStatement:
stepPreparedStatement:
closeExecutedPreparedStatement:
mergeUsingBlock:
commitTransaction
bundleForClass:
bundlePath
stringWithContentsOfFile:encoding:error:
executeSQL:
messageFrameworkDatabaseDiretory
currentDatabase
recreateConnection
isProtectedDatabaseAttached
attemptToLoadProtectedData
setObserver:
setExecutionQueue:
databaseQueue
setDatabaseQueue:
connection
journal
setDatabase:
_createdDatabaseFromScratch
_observer
_executionQueue
_databaseQueue
_connection
_journal
_database
_demoUtility
_needsMigration
fullSyncVersion
setFullSyncVersion:
setDatabaseRecentlyMigrated:
databaseRecentlyMigrated
waitingForMigration
expectedDatabaseVersion
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
performMigration
dataClassName
estimatedDuration
migrationProgress
databaseFactory
setDatabaseFactory:
progress
setProgress:
_progress
_databaseFactory
numberWithBool:
setSyncActive:
setSyncEnabled:
setSyncRequested:
numberWithUnsignedInteger:
setFilterType:
setCustomName:
string
appendFormat:
length
appendString:
hasUnprotectedChanges
insertString:atIndex:
unsignedIntegerValue
bindUnsignedInteger:intoStatement:paramIndex:
boolValue
bindBool:intoStatement:paramIndex:
bindString:intoStatement:paramIndex:
updatesWithSyncActive:
updatesWithSyncActive:syncEnabled:
updatesWithSyncEnabled:
updatesWithSyncEnabled:syncRequested:
updatesWithSyncEnabled:filterType:
updatesWithSyncEnabled:syncRequested:filterType:
updatesWithCustomName:
updatesWithSyncEnabled:customName:
hasProtectedChanges
unprotectedFieldsSqlUpdate
bindUnprotectedValuesIntoStatement:paramIndex:
bindProtectedValuesIntoStatement:paramIndex:
protectedFieldsSqlUpdateWithValues
protectedFieldsSqlUpdate
filterType
syncActive
syncRequested
syncEnabled
customName
_filterType
_syncActive
_syncRequested
_syncEnabled
_customName
_loadControlValues
setCurrentDatabaseSchemaVersion:
_selectMessagesWhere:limitRange:mailboxFilter:blockForBinding:
firstObject
_messagesForMailboxId:
_messagesForAccountId:
_mailboxIdForMessageId:
initWithString:
preparedStatementForPattern:
isResponseOkFromPreparedStatementExecution:
stringFromStatement:columnIndex:
dictionaryWithCapacity:
_paramsStringWithString:count:
stringWithFormat:
messageId
setObject:forKeyedSubscript:
bindDate:intoStatement:paramIndex:
componentsSeparatedByString:
_selectConversationWhere:limitRange:index:messagesByConversationId:mailboxFilter:blockForBinding:
hasFilter
mailboxIds
isFilteredByType
mailboxType
_sqlFilterForMailboxType:tablePrefix:
_appendContent:toWhereClause:
dateFromStatement:columnIndex:
_selectConversationsWhere:limitRange:messagesByConversationId:indexesByConversationId:mailboxFilter:blockForBinding:
_indexForConversation:mailboxFilter:
_indexesForConversationsWithIds:mailboxFilter:
stringWithString:
unsignedIntegerFromStatement:columnIndex:
conversationsCountWithMailboxFilter:
_selectAccountsWhere:blockForBinding:
accountId
mailboxesWithAccountId:
setMailboxes:
_selectMailboxesWhere:blockForBinding:
lastObject
mailboxWithId:
integerFromStatement:columnIndex:
conversationId
messageIdHeader
status
visibleStatus
notificationMessageId
mailboxId
isThreadSpecific
isSpecialMailboxSpecific
componentsJoinedByString:
from
subject
preview
UTF8String
stringWithUTF8String:
appendSQLStatement:
flushIfNeeded
rollbackTransaction
_containsMessagesWithVisibleStatusDifferentThanStatus
arrayWithObjects:count:
_deleteMessagesWithIds:
_deleteMessagesAndContentForMailboxId:
array
addObject:
attachments
contentId
urlForMessageContentWithId:mailboxId:
archivedDataWithRootObject:
_storeProtectedData:atURL:
emailAddresses
displayName
shouldArchive
_mailboxIdsWithAccountId:
urlForMessageContentsFolderForMailboxId:
urlForImageAttachmentsFolderForMailboxId:
path
fileExistsAtPath:isDirectory:
removeItemAtURL:error:
_deleteMessagesWithMailboxId:
messageIdsFromMessages:
_deleteMessagesWithIdsWithoutTransaction:
urlForImageAttachmentOfMessageWithId:mailboxId:contentId:
type
bindInteger:intoStatement:paramIndex:
absoluteString
_updateUnprotectedFieldsForMailboxWithId:mailboxUpdates:
_updateProtectedFieldsForMailboxWithId:mailboxUpdates:
bindData:intoStatement:paramIndex:
dataFromStatement:columnIndex:
unarchiveObjectWithData:
dictionary
composedMessageId
referenceMessageId
sendingType
body
includeAttachments
timeIntervalSince1970
_selectComposedMessageWhere:blockForBinding:
isEqualToString:
numberWithInteger:
allMessagesWithMailboxFilter:
allMessagesWithMailboxFilter:limit:
oldestMessageDateForMailboxId:specialMailboxFilterType:
_shouldWaitForMigration
_deleteAllIDSIdentifiers
_setControlObjectForKey:protected:protectedBoundValue:withBlockForBinding:
boolFromStatement:columnIndex:
initWithMailboxIds:mailboxType:
_sqlFilterForMailboxType:
_messageFieldsInExpectedOrderWithUnprotectedPrefix:protectedPrefix:conversationPrefix:nullifyProtected:
_messageOrderByWithPrefix:
_messageFromCurrentRowInStatement:
stringByAppendingString:
setMessageId:
setConversationId:
setAccountId:
setFrom:
setSubject:
setMessageIdHeader:
setPreview:
setStatus:
setVisibleStatus:
setTo:
setCc:
setBcc:
setNotificationMessageId:
setStatusVersion:
setMailboxId:
setIsThreadSpecific:
setIsSpecialMailboxSpecific:
_deleteEmptyConversations
urlForMessageContentsFolder
urlForImageAttachmentsFolder
objectForKeyedSubscript:
urlForImageAttachmentsFolderForMessageWithId:mailboxId:
whereStatementWithMailboxFilter:messageTablePrefix:
initWithMailboxIds:
_conversationOrderByWithPrefix:
addMessageId:dateReceived:
setObject:forKey:
_accountFieldsInExpectedOrderWithPrefix:nullifyProtected:
_accountFromCurrentRowInStatement:
_mailboxFieldsInExpectedOrderWithPrefix:nonProtectedPrefix:nullifyProtected:
_mailboxFromCurrentRowInStatement:
setDisplayName:
setShouldArchive:
setEmailAddresses:
setType:
URLWithString:
setUrl:
setComposedMessageId:
setSendingType:
setBody:
setReferenceMessageId:
setIncludeAttachments:
writeToURL:options:error:
stringByPaddingToLength:withString:startingAtIndex:
nnmk_startOfCurrentDay
messageStateForMailboxFilterType:
messageWithId:
messagesForMailboxId:
messagesForAccountId:
mailboxIdForMessageId:
containsMessageWithId:
messagesWithIds:
unreadMessagesWithContentAtIndexRange:sinceDate:fromAccountsWithIds:orVIPs:orNotifyConversation:excludingMessageIds:
imageAttachmentContentIdsForMessageWithId:
conversationAtIndex:messages:mailboxFilter:
oldestConversationDateWithMailboxFilter:
conversationsAtIndexRange:messagesByConversationId:mailboxFilter:
conversationsReceivedBefore:count:initialIndex:messagesByConversationId:mailboxFilter:
conversationsWithIds:indexesByConversationId:messagesByConversationId:mailboxFilter:
indexesForConversationsWithIds:mailboxFilter:
conversationWithId:messages:index:
conversationForMessageWithId:messages:index:mailboxFilter:
conversationsCount
accountWithId:
accounts
hasMailboxSyncActiveForMailbox:
syncActiveMailboxes
syncEnabledMailboxes
syncVersionForMailboxId:
updateSyncVersion:forMailboxId:
resetMailboxSyncVersions
mailboxes
addMessage:
updateMessageStatusForMessageWithId:newStatus:newVisibleStatus:statusVersion:threadSpecific:specialMailboxSpecific:
updateMessagePreviewForMessageWithId:newPreview:
resetVisibleStatusForMessages
deleteMessageWithId:
deleteMessagesFromMailbox:
deleteMessagesWithIds:
deleteMessagesOlderThan:mailboxId:
addMessageContent:
addConversation:
updateConversation:
addAccount:
updateAccount:
deleteMailboxesWithAccountId:
deleteMailboxWithId:
deleteAccountWithId:
addImageData:forImageAttachmentOfMessageWithId:contentId:
addMailbox:
updateMailboxWithId:mailboxUpdates:
addObjectId:objectType:resendInterval:forIDSIdentifierNotYetAckd:
objectIdForIDSIdentifierNotYetAckd:objectType:resendInterval:
markIDSIdentifierAsAckd:
rescheduleIDSIdentifier:resendInterval:withDateToResend:
datesForIDSIdentifiersScheduledToBeResent
recordComposedMessage:IDSIdentifier:
updateProgress:forComposedMessageWithId:
deleteComposedMessageWithId:
deleteComposedMessagesOlderThan:
composedMessageWithIDSIdentifier:
composedMessageWithId:
composedMessageIdsByReferenceMessageIdsAndProgress:
composedMessageIdForIDSIdentifier:progress:referenceMessageId:
failedComposedMessageIdsAndSubjects
referenceMessageIdForComposedMessageId:
messagesCount
allMessages
oldestMessageDateForMailboxId:
deleteAllMessages
deleteAllAccounts
deleteAllMailboxes
setLastIDSIdentifierForFullSyncRequest:
setLastIDSIdentifierForHaltSyncRequest:
setReceivedFullSyncMessages:
setMailboxFilter:
setAppLastLaunchedDate:
setNotificationSettingsEnabled:
_controlValueForKey:protected:withBlockForColumn:
setWaitingForMigration:
receivedFullSyncMessages
lastIDSIdentifierForFullSyncRequest
lastIDSIdentifierForHaltSyncRequest
mailboxFilter
appLastLaunchedDate
notificationSettingsEnabled
loadedSyncedMailboxProtectedData
setLoadedSyncedMailboxProtectedData:
_waitingForMigration
_receivedFullSyncMessages
_databaseRecentlyMigrated
_notificationSettingsEnabled
_loadedSyncedMailboxProtectedData
_currentDatabaseSchemaVersion
_fullSyncVersion
_lastIDSIdentifierForFullSyncRequest
_lastIDSIdentifierForHaltSyncRequest
_mailboxFilter
_appLastLaunchedDate
Watch started playing demo movie.
Watch stopped playing demo movie.
Starting to replace retail database...
Error replacing database (%{public}@).
Finished replacing database.
Starting to refresh messages dates (Fetched %lu messages)...
Shifting dates by interval of %ld seconds...
Finished refreshing message dates.
Database migrated. Recreating...
Database corrupted
Found corrupted database. %d
Attempting to recover by recreating database from scratch...
Attempting to recover by replacing demo content...
Database created successfully
Couldn't handle protection database.
Couldn't recreate database.
Creating tables.
Error creating unprotected database Database-Unprotected.sql (%{public}@)
Creating new database instance.
Database was not created from scratch: (Schema version: %lu)
Lock state changed (Unlocked: %i)
Error creating protected database. (%{public}@)
Error executing SQL statement from journal (Error: %{public}@).
Journal merged sucessfully.
Database directory deleted (Path: %{public}@).
Migrator created.
Database Corrupted. Recreated...
Can't Perform Migration. Database isn't open.
PerformMigration starting now.
FullSyncVersion to migrate loaded (%lu).
Deleting database directory
Recreating Database. (instance: %{public}@)
Database recreated. (instance: %{public}@)
Setting full sync version back.
Full sync version set. %lu
Marking as recently migrated.
Recently migrated set. %lu
Migrator - Database migrated. (waiting for migration: %lu)
Migrator - nanomaild notified.
performMigration did not run, as database schema version is already correct. (Current version:%lu, Expected version:%lu)
Setting Database schema version - %lu
Error fetching mailbox id for message (Id: %{public}@, %{public}@).
Error checking if message exists (%{public}@).
Error getting attachment content ids (Message Id: %{public}@, Error: %{public}@).
Error getting oldest conversation date (Error: %{public}@).
%s Line: %d - Tried to access protected when it's unavailable (device is probably locked).
Error selecting indexes for conversations (%{public}@).
Error getting conversations count (%{public}@).
Error selecting sync version for mailbox. (%{public}@).
Error updating/adding sync version for mailbox (%{public}@).
Error deleting mailbox_sync_versions. %{public}@
Deleting mailbox_sync_versions.
Message ADDED to SQLite database (Id: %{public}@ - Date Received: %{public}@).
Error ADDING Message to SQLite database (%{public}@).
Message status UPDATED on SQLite database (Id: %{public}@ - Status: %lu).
Error UPDATING Message status on SQLite database (Id: %{public}@ - Error: %{public}@).
Message preview UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Message preview on SQLite database (Id: %{public}@ - Error: %{public}@).
Message dateRecieved UPDATED on SQLite database (Id: %{public}@).
Error UPDATING dateRecieved for Message on SQLite database (%{public}@).
Updated visibleStatus for messages
Error UPDATING visibleStatus for messages. %{public}@
Error selecting messages where visibleStatus != status. %{public}@
Error retrieving messages for deletion (%{public}@).
Message Content ADDED to SQLite database (Id: %{public}@).
Error ADDING Message Content to SQLite database (%{public}@).
Conversation ADDED to SQLite database (Id: %{public}@).
Error ADDING Conversation to SQLite database (%{public}@).
Conversation UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Conversation on SQLite database (%{public}@).
Account ADDED to SQLite database (Id: %{public}@).
Error ADDING Account to SQLite database (%{public}@).
Account UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Account on SQLite database (%{public}@).
Mailboxes for account DELETED from SQLite database (Account Id: %{public}@).
Error DELETING Mailboxes for account from SQLite database (%{public}@).
Mailbox can not be nil.
Mailbox DELETED from SQLite database (Id: %{public}@).
Error DELETING Mailbox from SQLite database (%{public}@).
Can not delete mailbox with empty id.
Error trying to delete message content for mailbox. (Id: %{public}@, Content Error: %{public}@, Attachments Error: %{public}@)
Error selecting deleting messages for mailbox id. %{public}@
Error deleting empty conversations. %{public}@
Account DELETED from SQLite database (Id: %{public}@).
Error DELETING Account from SQLite database (%{public}@).
Mailbox ADDED OR UPDATED to SQLite database (Id: %{public}@).
Error ADDING Mailbox to SQLite database (%{public}@).
Mailbox UPDATED on SQLite database (Id: %{public}@ - Status: %{public}@).
Error UPDATING Mailbox on SQLite database (Id: %{public}@ - Error: %{public}@).
Protected Mailbox UPDATED on SQLite database (Id: %{public}@ - Status: %{public}@).
Error UPDATING Protected Mailbox on SQLite database (Id: %{public}@ - Error: %{public}@).
Error adding Object for IDS Identifier (%{public}@).
Error retrieving Object for IDS identifier (%{public}@).
Error marking IDS Identifier as Ack'd (IDS Identifier: %{public}@ - Error: %{public}@).
Error rescheduling Object for IDS Identifier (IDS Identifier: %{public}@ - Error: %{public}@).
Error selecting IDS Identifiers scheduled to be resent (%{public}@).
Error ADDING Composed Message to Protected SQLite database (%{public}@).
Error ADDING Composed Message to SQLite database (%{public}@).
Error UPDATING Composed Message to SQLite database (%{public}@).
Error DELETING Composed Message from Protected SQLite database (%{public}@).
Error DELETING Composed Message from SQLite database (%{public}@).
Error DELETING Composed Message from Protected SQLite database before date (%{public}@).
Error selecting progress for Composed Message from IDS Identifier (%{public}@).
Error selecting message id for Composed Message (%{public}@).
Error getting messages count (%{public}@).
Error getting oldest message date (Mailbox Id: %{public}@, Mailbox Specific: %lu).
All Accounts deleted successfully.
Error deleting all accounts (%{public}@).
All mailboxes deleted successfully.
Error deleting all mailboxes (%{public}@).
Updating received full sync: %lu
Error loading control values (%{public}@).
Error getting Control Object from SQLite database (Key: %{public}@ - Error: %{public}@).
Connection is nil!
Control Object CHANGED in SQLite database (Key: %{public}@).
Error CHANGING Control Object in SQLite database (Key: %{public}@ - Error: %{public}@).
Error feching mailbox ids for account. (%{public}@).
Error selecting messages where %{public}@ (%{public}@).
Messages deleted successfully. %lu
Error deleting messages (Error: %{public}@).
Ignoring mailbox filter type for querying messages for conversation.
Error selecting messages and conversations where %{public}@ (%{public}@).
Error selecting accounts where %{public}@ (%{public}@).
Error selecting mailboxes where %{public}@ (%{public}@).
Error selecting Composed Message from IDS Identifier (%{public}@).
Error DELETING All IDS Identifiers from SQLite database (%{public}@).
Error writing protected file to disk (URL: %{public}@ - Data Length: %lu - Error: %{public}@).
NNMKRetailDemoUtility
NNMKDatabaseFactory
NNMKClientDataMigrator
NNMKDatabaseLifecycleObserver
NSObject
NNMKMailboxUpdates
NNMKDatabase
@16@0:8
v16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
B16@0:8
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@24@0:8@16
B20@0:8i16
i16@0:8
i20@0:8B16
B24@0:8@16
@"<NNMKDatabaseLifecycleObserver>"
@"NNMKProtectedSQLiteConnection"
@"NNMKSQLJournal"
@"NNMKDatabase"
@"NNMKRetailDemoUtility"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
f16@0:8
v20@0:8f16
@"NNMKDatabaseFactory"
@20@0:8B16
@24@0:8B16B20
@28@0:8B16Q20
@32@0:8B16B20Q24
@28@0:8B16@20
v32@0:8^{sqlite3_stmt=}16^i24
@"NSNumber"
@"NSString"
@40@0:8@16@24@32
@64@0:8{_NSRange=QQ}16@32@40B48B52@56
@32@0:8@16@24
@40@0:8Q16^@24@32
@48@0:8{_NSRange=QQ}16^@32@40
@56@0:8@16Q24^Q32^@40@48
@48@0:8@16^@24^@32@40
@40@0:8@16^@24^Q32
@48@0:8@16^@24^Q32@40
Q24@0:8@16
v32@0:8Q16@24
v60@0:8@16Q24Q32Q40B48Q52
v32@0:8@16@24
v40@0:8@16@24@32
v48@0:8@16@24Q32@40
v40@0:8@16Q24@32
v32@0:8q16@24
@24@0:8^@16
@40@0:8@16^q24^@32
@40@0:8@16{_NSRange=QQ}24
@32@0:8@16Q24
v24@0:8Q16
v36@0:8@16B24@?28
v44@0:8@16B24*28@?36
@56@0:8@16{_NSRange=QQ}24@40@?48
@44@0:8@16@24@32B40
@24@0:8^{sqlite3_stmt=}16
@72@0:8@16{_NSRange=QQ}24^Q40^@48@56@?64
@72@0:8@16{_NSRange=QQ}24^@40^@48@56@?64
Q32@0:8@16@24
@32@0:8@16@?24
@28@0:8@16B24
@36@0:8@16@24B32
B32@0:8@16@24
@24@0:8Q16
@32@0:8Q16@24
@"NNMKMailboxFilter"
@"NSDate"
zPLR
zPLR
zPLR
