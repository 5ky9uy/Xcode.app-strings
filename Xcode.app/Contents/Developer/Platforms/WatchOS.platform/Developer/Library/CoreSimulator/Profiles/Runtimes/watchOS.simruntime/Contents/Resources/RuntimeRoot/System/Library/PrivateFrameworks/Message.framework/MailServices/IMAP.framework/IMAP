aol.com
%@-%@
Sent
Trash
Drafts
Spam
aolAccountIcon
icloud.com
iCloud-%@
iCloud
%@-%p
com.apple.message.icloud.alias-update
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/Accounts.subproj/CastleIMAPAccount.m
<Unknown File>
Invalid parameter not satisfying: %@
nil != _appleAccountLock
CastleIMAPErrorDomain
Username
mac.com
me.com
dotMacMailSupported
EmailAddress
FullUserName
imapHostname
imapPort
imapRequiresSSL
v4@?0
Mailbox is over quota
smtpHostname
smtpPort
smtpRequiresSSL
sendFromAddressJSONURL
%@ (%@)
%@:%@
X-MobileMe-AuthToken %@
aliases
fullName
emails
address
canSendFrom
name
email
account
en_US_POSIX
EEE, dd MMM yyyy HH:mm:ss zzz
-[CastleIMAPAccount _updateEmailAddressAndAliases]
![NSThread isMainThread] && "This method must be called off the main thread"
Authorization
X-Apple-I-MD-M
X-Apple-I-MD
%llu
X-Apple-I-MD-RINFO
If-Modified-Since
p99-
v12@?0B4@"NSError"8
jsonrpc
update
method
params
POST
application/json-rpc; charset=UTF-8
castleAccountIcon
appleAccount
T@"ACAccount",R,N
accountStore
T@"ACAccountStore",R,N
deliveryHostname
T@"NSString",R,N
deliveryPortNumber
TI,R,N
deliveryUsesSSL
TB,R,N
aliasLookupURL
T@"NSURL",R,N
personID
T@"NSString",R,&,N
authToken
clientInfo
AKAnisetteProvisioningController
/System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
### Failed to Soft Linked: /System/Library/PrivateFrameworks/AuthKit.framework/AuthKit
(CHANGEDSINCE %@)
(FLAGS)
IMAPESearchMinKey
IMAPESearchMaxKey
IMAPESearchAllKey
IMAPESearchCountKey
IMAPESearchTagKey
-[MFIMAPConnection(ESearch) eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/MessageStores.subproj/IMAP.subproj/ESearch.m
returning && "Should have at least one return request on an esearch command."
RETURN
Expected space
Expected number for minimum result
Expected number for maximum result
COUNT
Expected number for count result
Did not find a valid search return.
Expected right paren
Exchange
StoreDraftsOnServer
StoreSentMessagesOnServer
Sent Items
Deleted Items
Contacts
Calendar
Journal
Notes
Tasks
(UID FLAGS BODY.PEEK[HEADER.FIELDS (content-class)])
 content-class
content-class
urn:content-classes:message
urn:content-classes:appointment
\Important
\Starred
\AllMail
\Spam
RegionalBehaviorGoogleMail
cellular-data
com.apple.carrier
UseGoogleMail
googlemail.com
gmail.com
Google Mail
Gmail
Your account is not enabled for IMAP use.
IDToken
gmailAccountIcon
VERIFICATION_REQUIRED_TITLE
Verification Required
Delayed
WEBLOGIN_PROMPT_FORMAT
Log in to your %@ account
MailErrorHandlerDoNotSanitize
xwebalert
webalert
EnableSchema
EnableHost
EnablePath
apple
GMAIL_ALL_MAIL_SPECIAL_MAILBOX_NAME
All Mail
self
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
GMAIL_DELIVERY_HOSTNAME
Gmail SMTP Server
mailAccount
T@"GmailAccount",&,N,GmailAccountIfAvailable,V_account
PLAIN-CLIENTTOKEN
MESSAGE_AUTH_GMAIL_CLIENTTOKEN
Gmail Client Token
IMAPAccountOfflineOperationQueued
ServerPathPrefix
CompactWhenClosingMailboxes
ListsSubscribedOnly
DaysBetweenSyncs
DateOfLastSync
PreventDismemberment
PushedMailboxes
NotesPushedMailboxes
NotesNotificationPrefix
urls
T@"NSArray",C,Vurls
paths
T@"NSArray",C,Vpaths
T@"IMAPAccount",&,Vaccount
path
T@"NSString",R,Vpath
TI,R,Vuid
changes
T@"NSDictionary",R,Vchanges
commitTime
Td,VcommitTime
connectionTag
TI,VconnectionTag
flagChangesLock
connectionLock
separator
namespace
capabilities
push-service-level
push-registered-mailboxes
aps-topic
163AccountIcon
126AccountIcon
qqAccountIcon
imapmbox
imap
imaps
IMAP
IMAP_SERVER_ALERT_FORMAT
WARNING_TITLE
Warning
DeleteInPlace
IMAP_OPEN_FAILED_TITLE_FORMAT
MailboxName
Apple Mail To Do
IMAPAccount
_releaseAllConnectionsAndCallSuper
edgeOnly
IMAP account %@ (%@)
com.apple.mail.imap.offlinestatuschange
INBOX
INBOX%@INBOX
-[IMAPAccount _newMailboxWithParent:name:attributes:dictionary:withCreationOption:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/Accounts.subproj/IMAPAccount.m
creationOption == MailboxCreationOptionDefault
SYNCHRONIZING_WITH_SERVER_FORMAT
Synchronizing with server
CHECKING_FOR_MAIL
Main
v16@?0@"NSString"4@"NSDictionary"8^B12
B8@?0@"MFMailboxUid"4
@8@?0@"MFMailboxUid"4
IMAP_REMOVING_CACHE_FILES
Removing old cache files...
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
NO_OFFLINE_MAILBOX_RENAMING
.OfflineCache
Account
RelativePath
v16@?0@"NSString"4@"NSString"8^B12
.%@.%@
RelatedMessagesShouldIncludeDrafts
could not create mailbox names for: %@, pushed mailboxes: %@ (sep: %@ prefix: %@)
not 
CANNOT
is NOT
    topic: %@
    known capabilities: %@
    negotiated push service level: %@
    last push registration time: %@
<never>
    mailboxes registered for push: %@
StoreTrashOnServer
StoreArchiveOnServer
<null>
<unavailable>
<unknown>
version 1
version 2
_pushServiceLevelName
0 && "unknown push service level"
BODYSTRUCTURE
BODY
.PEEK
HEADER
bodyDataConsumer
T@"<MFDataConsumer>",&,N,V_bodyDataConsumer
consumerSection
T@"NSString",&,N,V_consumerSection
fetchItem
T@"NSString",C,N,V_fetchItem
TI,N,V_uid
IMAPMailboxAttributes
DELETED
Source UIDS
Destination UIDS
\All
\Archive
\Drafts
\Flagged
\Junk
\Sent
\Trash
XAPPLEPUSHSERVICE
d-MMM-yyyy
(){ %*\"
    supports IDLE: %@
    using IDLE: %@ (seq=%lu)
STARTTLS
LITERAL+
LITERAL-
UIDPLUS
CHILDREN
IDLE
QUOTA
NAMESPACE
MULTIAPPEND
UNSELECT
LOGINDISABLED
XLIST
COMPRESS=DEFLATE
ESEARCH
CONDSTORE
SASL-IR
XYMHIGHESTMODSEQ
X-GM-EXT-1
MOVE
SPECIAL-USE
LIST-STATUS
LIST-EXTENDED
"%@"
"%@ (%@)"
"name"
"version"
"os"
"iOS"
"os-version"
%@%@
aps-version
aps-account-id
aps-device-token
aps-subtopic
mailboxes
mailbox
DEFLATE
FAILED_FETCH_TITLE
Cannot Get Mail
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/MessageStores.subproj/IMAP.subproj/IMAPConnection.m
outNonSynchronizingLiteral
{%lu%s}
%lu 
v20@?0r^v4{_NSRange=II}8^B16
B20@?0r*4L8B12B16
IMAP_OPEN_FAILED_MSG_FORMAT
IMAP_COMMAND_FAILED_FORMAT1
DisableESEARCH
DisableCOMPRESS
DisableCONDSTORE
FAILED_LOGIN
STATUS %@
RETURN (%@)
@"NSNull"8@?0^@4
*** Server doesn't support UIDPLUS
(NOT A CRASH) see <rdar://problem/26633447> : term should be an NSString, but is %@
B4@?0
MESSAGE-ID
+FLAGS.SILENT
-FLAGS.SILENT
(\Deleted)
BEFORE
uids
RFC822.SIZE
BODY.PEEK[HEADER]
(BODY.PEEK[HEADER.FIELDS (MESSAGE-ID)])
(UID X-GM-MSGID)
MinFetchChunkSize
MaxFetchChunkSize
FetchDeltaTarget
%d:*
%d:%d
%lu:%lu
%lu:*
%lu:%u
TLS_NOT_SUPPORTED_FORMAT
TLS_FAILED_FORMAT
Disconnected
Non-authenticated
Authenticated
Selected
<%@:%p> [%@%s] delegate=%p mailbox=<%@>
, Fetching
<%@:%p> [%@%s] delegate=%p
(UID FLAGS)
-[MFIMAPConnection _fetchArgumentForMessageSkeletonsWithHeaders:]
requiredHeaders
(INTERNALDATE UID RFC822.SIZE FLAGS 
MODSEQ 
X-GM-MSGID 
BODY.PEEK[HEADER.FIELDS (
idleCommandSequenceNumber
TI,N,V_idleCommandSequenceNumber
idleSubscriptionCancelable
T@"<MFCancelable>",&,N,V_idleSubscriptionCancelable
delegate
T@"<MFIMAPConnectionDelegate>",W,N
Ti,N,V_tag
connectTime
Td,R,N,V_connectTime
gotBadResponse
TB,R,N,V_gotBadResponse
additionalHeadersForFetch
T@"NSArray",C
valid
TB,R,N,GisValid
idle
TB,R,N,GisIdle
<%@: %p>
%@ set %@
%@ unset %@
mask
TQ,R,N,V_mask
searchTerms
T@"NSArray",R,N,V_searchTerms
isPositiveMatch
TB,R,N,V_isPositiveMatch
CAPABILITY
NOOP
LOGOUT
AUTHENTICATE
LOGIN
LIST
LSUB
STATUS
EXAMINE
CREATE
DELETE
RENAME
SELECT
SUBSCRIBE
UNSUBSCRIBE
EXPUNGE
UID EXPUNGE
CLOSE
APPEND
FETCH
UID FETCH
UID STORE
UID COPY
UID SEARCH
GETQUOTAROOT
GETQUOTA
DONE
SEARCH
XDELIVER
COMPRESS
UID MOVE
"dd-MMM-yyyy HH:mm:ss ZZ"
mainConsumer
T@"MFBaseFilterDataConsumer",R,N,V_mainConsumer
TEXT
BODY.PEEK[
-[MFIMAPFetchResult envelope]
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/MessageStores.subproj/IMAP.subproj/IMAPFetchResult.m
Invalid item type %d
-[MFIMAPFetchResult setEnvelope:]
-[MFIMAPFetchResult internalDate]
-[MFIMAPFetchResult setInternalDate:]
-[MFIMAPFetchResult fetchData]
-[MFIMAPFetchResult setFetchData:]
-[MFIMAPFetchResult messageSize]
-[MFIMAPFetchResult setMessageSize:]
-[MFIMAPFetchResult bodyStructure]
-[MFIMAPFetchResult setBodyStructure:]
-[MFIMAPFetchResult startOffset]
-[MFIMAPFetchResult setStartOffset:]
-[MFIMAPFetchResult section]
-[MFIMAPFetchResult setSection:]
-[MFIMAPFetchResult uid]
-[MFIMAPFetchResult setUid:]
-[MFIMAPFetchResult uniqueRemoteId]
-[MFIMAPFetchResult setUniqueRemoteId:]
-[MFIMAPFetchResult flagsArray]
-[MFIMAPFetchResult setFlagsArray:]
-[MFIMAPFetchResult setMessageFlags:]
-[MFIMAPFetchResult setCustomFlagsArray:]
-[MFIMAPFetchResult customFlagsArray]
* INVALID *
ENVELOPE %@
INTERNALDATE
RFC822.SIZE %u
BODYSTRUCTURE %@
BODY[%@]<%lu> {%lu}...
BODY[%@] {%lu}...
UID %u
X-GM-MSGID %llu
FLAGS (%@)
MODSEQ %d
 remoteID=%@
%s%u
temp-
multipart
boundary
%@: Unexpected byte %x at position %lu
attempt to create an invalid offline operation of type %d with no mailbox name %p
attempt to create an invalid store-flags offline operation: %lu true flags, %lu false flags, %lu uids
attempt to create an invalid copy-message offline operation: %lu srcUids, %lu dstUids, dstMailbox=%p (%lu)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/MessageStores.subproj/IMAP.subproj/IMAPOperation.m
Invalid method for type %d
CREATE [%@]
DELETE [%@]
[%@] STORE 
 ** expunged **
 <+FLAGS.SILENT%@>
 <-FLAGS.SILENT%@> 
APPEND [%@] %@ {%u}
COPY [%@] [%@]
PERFORMING_PENDED_OPERATIONS_TASK_NAME
Performing pended operations
operations
RECENT
-[MFIMAPParseContext setStart:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/MessageStores.subproj/IMAP.subproj/IMAPParseContext.m
start >= _originalStart && "Should not put the start before the original start."
-[MFIMAPParseContext setEnd:]
end <= _originalEnd && "Should not put the end past the original end."
Error while parsing IMAP response %@: %@
Remaining text: <%@>
Expected number in literal
Expected right curly brace
Expected end-of-line
Read failure
Ignoring extra bytes read during literal
d-MMM-yyyy H:mm:ss ZZZ
Can't parse array contents
In-Reply-To:
References:
BODY[HEADER.FIELDS (REFERENCES IN-REPLY-TO)]
Message-ID
v16@?0@"NSString"4I8^B12
UNDELETED
MESSAGES
EXISTS
_IMAPNameQuotaKey
_IMAPCurrentUsageQuotaKey
_IMAPMaxUsageQuotaKey
_IMAPNamespacePrefixKey
_IMAPNamespaceDelimiterKey
_IMAPNamespaceExtensionsKey
CHARSET=
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/MessageStores.subproj/IMAP.subproj/IMAPResponse.m
%@ is invalid for %s
%@ is invalid for response type %d
-[MFIMAPResponse fetchResults]
_responseType == IMAPFetchResponse && "Invalid response type for fetchResults"
(%@)
%@ %@
 ==> (%@)
 "%@"
 (%@ %@/%@)
 %@ %c%@
*nil*
("%@" 
 "%@" ("%@")
v16@?0@"NSString"4@"NSArray"8^B12
v8@?0@"NSArray"4
responseConsumer
T@"MFIMAPResponseConsumer",&,N,V_responseConsumer
privateNamespaces
T@"NSArray",C,N
publicNamespaces
sharedNamespaces
should not register multiple consumers for the same section: %@
--Not Set--
PREAUTH
FLAGS
QUOTAROOT
--OTHER--
X-UID-FLAGS
ALERT
UNAVAILABLE
AUTHENTICATIONFAILED
AUTHORIZATIONFAILED
EXPIRED
PRIVACYREQUIRED
CONTACTADMIN
NOPERM
INUSE
EXPUNGEISSUED
CORRUPTION
SERVERBUG
LIMIT
OVERQUOTA
ALREADYEXISTS
NONEXISTENT
BADCHARSET
NEWNAME
PARSE
READ-ONLY
READ-WRITE
TRYCREATE
UIDNEXT
HIGHESTMODSEQ
UIDVALIDITY
NOMODSEQ
UNSEEN
PERMANENTFLAGS
APPENDUID
COPYUID
CLIENTBUG
Expected ]
Expected list or NIL
\Noinferiors
\Noselect
\Marked
\Unmarked
\HasChildren
\HasNoChildren
\NonExistent
Invalid FETCH response
Couldn't parse FETCH: no space character in input
ENVELOPE
X-GM-MSGID
RFC822
RFC822.HEADER
RFC822.TEXT
MODSEQ
BODY[
HEADER.
Unable to parse header keys array
Couldn't parse FETCH: no square brace character in input
Expected number
Expected >
Unrecognized FETCH key
Expected a right paren
couldn't parse NAMESPACE: unexpected atom
couldn't parse namespace response: prefix and/or delimiter were not strings
couldn't parse namespace response extensions: invalid key or value
couldn't parse namespace response extensions: not enough values for keys
@"NSArray"4@?0
--EXTENSION--
\Seen
\Deleted
\Answered
\Recent
\Draft
$Forwarded
$Junk
$NotJunk
Forwarded
Junk
NotJunk
Redirected
Incomplete response
Junk at end of response
dataHolder
T@"MFDataHolder",&,N,V_dataHolder
@"MFMailMessage"4@?0
-[MFBaseSyncResponseQueue sequenceIdentifierForItem:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/MessageStores.subproj/IMAP.subproj/LibraryIMAPStore.m
[item isKindOfClass:[NSArray class]]
indexSet
T@"NSIndexSet",R,&,N,VindexSet
SupportsCustomFlags
CachedConnectionLock
DOWNLOADING_STATUS_FORMAT
Downloading %@ of %@
SEEN
FLAGGED
ANSWERED
KEYWORD
v8@?0@"MFIMAPConnection"4
store and connection mailboxes differ
@"MFMessageCriterion"8@?0@"MFMessageCriterion"4
LibraryIMAPStoreErrorDomain
v16@?0I4@"NSIndexSet"8@"NSError"12
IMAP_COMPACT_FAILED
@"NSString"8@?0L4
temp-%lu
v20@?0@"MFIMAPConnection"4@"NSArray"8{_NSRange=II}12
B8@?0@"MFLibraryMessage"4
@"NSArray"8@?0@"MFMailMessage"4
messageToTransfer
destinationMailbox
Unknown MoveResult (%ld)
operation
We should never pass a batchUIDs that is nil (might be interpreted as all messages)
@"NSNumber"8@?0@"MFAppStateMonitor"4
@"NSNumber"8@?0@"NSArray"4
com.apple.message.imap (IDLE)
v8@?0@"NSError"4
v8@?0@"NSNumber"4
DeletedSearchLimit
shouldUseIDLE
TB,V_shouldUseIDLE
cancelationToken
T@"MFCancelationToken",&,N,V_cancelationToken
i12@?0@4@8
i12@?0@"NSValue"4@"NSValue"8
CHARSET
UTF-8
v8@?0@"NSString"4
SUBJECT
fetchArgumentsForCriterion
0 && "Message ID header criterion must have a MessageRuleIsEqualTo qualifier"
FROM
(OR TO
NOT 
NSArray *fetchArgumentsForCriterion(MFMessageCriterion *, BOOL)
could not map expression to flag: %@
SINCE
0 && "Need to handle criterion for IMAP headers"
(OR FROM
(OR SUBJECT
(OR CC
MFAPSManagerDeviceTokenChangedNote
com.apple.message.apsManager
System/Library/PrivateFrameworks/ApplePushService.framework
APSConnection
development
production
MFUseAPSDevelopmentEnvironment
com.apple.mobilemail.dummyTopicToForceServerConnection
com.apple.mobilemail.push.
com.apple.mail.
account-id
==== MFAPSManager ====
  push service: %@
  watched topics: {%@}
  ignored topics: {%@}
  device token (%@): '%@'
waiting for token
has token
_tokenConditionString
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/Accounts.subproj/MFAPSManager.m
0 && "unknown token condition"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.6.9/MessageStores.subproj/IMAP.subproj/MFIMAPConnection+Move.m
mailboxName
command == _IMAPCommandUidMove || command == _IMAPCommandMove
B8@?0@"MFIMAPResponse"4
OS X Server
OSXServerIMAPErrorDomain
EmailAccountName
EmailAddresses
EmailDomain
%@@%@
IncomingMailServerAuthentication
EmailAuthCRAMMD5
EmailAuthNTLM
EmailAuthHTTPMD5
OutgoingMailServerAuthentication
EmailAuthNone
T@"MFOSXServerIMAPAccount",&,N,GmailAccountIfAvailable,V_mailAccount
parentAccountMailProperties
T@"NSDictionary",R,N
ATOKEN
MESSAGE_AUTH_ATOKEN
Apple Token
castleAccount
T@"CastleIMAPAccount",&,N,V_castleAccount
CASTLE_SMTP_SERVER
iCloud SMTP Server
XOAUTH2
MESSAGE_AUTH_OAUTH2TOKEN
OAuth 2.0 Token
user=%@
auth=Bearer %@
yahoo.com
YahooAllowSSL
YahooIMAPPort
Draft
Bulk Mail
%@@yahoo.com
Inbox
ymail://?fid=%@&mid=%@
yahoo.co.jp
ybb.ne.jp
yahooAccountIcon
YAHOO_DELIVERY_HOSTNAME
Yahoo! SMTP Server
T@"YahooAccount",&,N,GmailAccountIfAvailable,V_account
displayedAccountTypeString
stringWithFormat:
_defaultSpecialMailboxNameForType:
standardAccountClass:valueForKey:
class
hostname
username
isEqualToString:
_usernameWithHostname:
arrayWithObjects:count:
rangeOfString:
emailAddressHostPart
stringByAppendingFormat:
isEqual:
accountPropertiesValueForKey:value:
setUsername:
usesSSL
setUsesSSL:
boolValue
unsignedIntValue
_deliveryAccountCreateIfNeeded:
deliveryAccountHostname
accountWithHostname:username:
setShouldUseAuthentication:
deliveryAccountUsesSSL
deliveryAccountPortNumber
setPortNumber:
password
setPassword:
legacyPathNameForAccountWithHostname:username:
isPredefinedAccountType
usernameIsEmailAddress
statisticsKind
setHostname:
emailAddresses
displayUsername
iconString
derivesDeliveryAccountInfoFromMailAccount
shouldFetchACEDBInfoForError:
initWithLibrary:persistentAccount:
alloc
initWithName:andDelegate:
_resetAppleAccount
release
dealloc
isAccountClassEquivalentTo:
isUsernameEquivalentTo:
shouldRegisterForPush
canAttemptPushRegistration
canReceiveNewMailNotifications
separatorChar
startListeningForNotifications
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
lock
persistentAccount
parentAccount
retain
defaultCenter
_accountsChanged:
accountStore
addObserver:selector:name:object:
unlock
autorelease
removeObserver:name:object:
sharedAccountStore
persistentStore
appleAccount
propertiesForDataclass:
objectForKey:
dictionary
isProvisionedForDataclass:
errorWithDomain:code:localizedDescription:
childAccounts
countByEnumeratingWithState:objects:count:
accountType
identifier
setObject:forKey:
mf_addressDomain
containsObject:
setValue:forKey:
init
aa_firstName
setGivenName:
aa_lastName
setFamilyName:
localizedStringFromPersonNameComponents:style:options:
accountWithProperties:
defaultPath
setPath:
setParentAccount:
setAuthenticationType:
persistentAccountDidChange:previousAccount:
parentAccountIdentifier
_mailPropertyFromAppleAccountForKey:
setLastKnownHostname:
defaultEmailAddress
aa_personID
authTokenWithError:
aa_authTokenWithError:
mf_publicDescription
anisetteDataWithError:
clientInfoHeader
copy
length
mf_isInaccessibleAccountCredentialError
schemeWithName:
firstEmailAddress
count
emailAddressesAndAliases
allKeys
_fromEmailAddressesIncludingDisabled:
emailAddressesDictionary
receiveEmailAliasAddresses
array
valueForKey:
addObject:
aa_password
handleOverQuotaResponse:
handleAlertResponse:
initForDataclass:
showWithHandler:
displayName
setDisplayName:
deliveryHostname
deliveryPortNumber
deliveryUsesSSL
setPreferredAuthScheme:
setCastleAccount:
URLWithString:
initWithFormat:
aa_authToken
dataUsingEncoding:
mf_encodeBase64WithoutLineBreaks
JSONObjectWithData:options:error:
isKindOfClass:
objectForKeyedSubscript:
mf_formattedAddressWithName:email:useQuotes:
numberWithBool:
setDefaultEmailAddress:
setLocalDefaultEmailAddress:
mutableCopy
setEmailAddresses:
setReceiveEmailAliasAddresses:
setLocallyEnabled:forEmailAddress:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
_updateEmailAddressAndAliases
aliasLookupURL
sharedInstance
isNetworkUp
isMainThread
requestWithURL:
setHTTPMethod:
_aliasAuthorizationHeader
setValue:forHTTPHeaderField:
_aliasUserAgent
ak_addDeviceUDIDHeader
ak_addClientInfoHeader
machineID
oneTimePassword
routingInfo
lastEmailAliasesSyncDate
_headerStringFromDate:
statusCode
initWithData:encoding:
_aliasesFromData:
_emailsFromData:
_defaultEmailAddressFromData:
isEqualToDictionary:
fromEmailAddresses
objectAtIndex:
savePersistentAccount
date
setLastEmailAliasesSyncDate:
host
hasPrefix:
aa_updatePropertiesForAppleAccount:completion:
dictionaryWithObjectsAndKeys:
arrayWithCapacity:
mf_uncommentedAddress
_prepareAliasData
dataWithJSONObject:options:error:
setHTTPBody:
isEnabledForDataclass:
accountDescription
accountTypeIdentifier
accountTypeString
primaryDeliveryAccountIsDynamic
newChildAccountWithParentAccount:error:
shouldDisplayHostnameInErrorMessages
isEquivalentTo:hostname:username:
uniqueIdForPersistentConnection
portNumber
allowsTrustPrompt
personID
authToken
clientInfo
credentialAccessibility
preferredAuthScheme
emailAddressesAndAliasesList
fromEmailAddressesIncludingDisabled
setPasswordInKeychain:
_removePasswordInKeychain
passwordFromKeychain
_aliasesFromOldData:
setEnabled:forEmailAddress:
updateEmailAliases
pushUpdateForAliasData
supportsArchiving
_appleAccountLock
_appleAccount
_deliveryAccount
_readyForPushRegistration
_aliasChanges
_updatedDefaultEmail
_aliasUpdateQueue
messageSetForNumbers:
_responseFromSendingCommands:count:
responseType
fetchResults
modSequenceNumber
addItem:
didFinishCommands:count:
sendResponsesForCondStoreFlagFetchForUIDs:withSequenceIdentifier:toQueue:
allocWithZone:
initWithCapacity:
appendString:
addObjectsFromArray:
keyValuePairs
intValue
removeObjectAtIndex:
copyArgumentForSearchTerm:
eSearchIDSet:areMessageSequenceNumbers:arguments:success:returning:
initWithString:
isAtEnd
scanInteger:
scanLocation
characterAtIndex:
setScanLocation:
addIndexesInRange:
addIndex:
start
match:
parseSpace
emitWarning:
copyNumber
emitError:
response
copyMessageSet
parseIndexSetFromSequenceSet:
copyQuotedString
parseSearchReturn:
eSearchIDSet:areMessageSequenceNumbers:forTerms:success:returning:
parseESearchResponseWithContext:
_filterMailboxList:forMailboxWithPath:iisServer:
connectionClass
_syncOnly_defaultValueForShouldStoreJunkOnServer
storeDraftsOnServer
storeSentMessagesOnServer
shouldExpungeMessagesOnDelete
filterMailboxList:forMailbox:options:
_boolForAccountInfoKey:defaultValue:
_fetchArgumentForMessageSkeletonsWithHeaders:
substringFromIndex:
stringWithString:
insertString:atIndex:
fetchResultWithType:
fetchData
initWithData:
mf_convertNetworkLineEndingsToUnix
initWithHeaderData:encoding:
firstHeaderForKey:
_fetchArgumentForMessageUidsAndFlags
_isFetchResponseValid:
authSchemesForAccountClass
mf_lock
mf_unlock
removePasswordForServiceName:accountName:
passwordForServiceName:accountName:synchronizable:error:
_consumeExistingPreAuthToken
UUID
UUIDString
addClientToken:forAccount:
clientTokenForAccount:
oauth2Token
archiveDestinationForMailbox:
setMailAccount:
emptyFrequencyForMailboxType:
previousFailureCount
initWithUser:password:persistence:
sender
useCredential:forAuthenticationChallenge:
respondsToSelector:
finishWithResult:
finishWithError:
setObject:forKeyedSubscript:
errorWithDomain:code:localizedDescription:title:userInfo:
stringByRemovingPercentEncoding
gmailAuthAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
responseCode
responseInfo
caseInsensitiveCompare:
_URLFromUncleanString:
_webLoginErrorWithURL:
errorForResponse:
sharedCredentialStorage
allCredentials
allValues
removeCredential:forProtectionSpace:
future
setScheme:
setHost:
initWithURL:
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithRequest:
resume
resultWithTimeout:error:
cancel
_removeCredential:
localizedDescription
supportsCapability:
mailboxUidOfType:createIfNeeded:
specialUseAttributeForType:
specialUseAttributesForMailbox:
extraAttributes
setWithObject:
type
displayNameUsingSpecialNamesForMailboxUid:
anyObject
initWithKey:ascending:
initWithObjects:
sortedArrayUsingDescriptors:
firstObject
_childOfMailbox:withComponentName:
childWithExtraAttribute:
imapNotEnabledPrefix
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retainCount
zone
hash
superclass
description
debugDescription
clientToken
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_deleteHook
shouldArchiveByDefault
supportsFastRemoteBodySearch
archiveSentMessages
enableAccount
shouldEnableAfterError:
xListSupportedOnConnection:
allMailMailboxUid
persistentNameForMailbox:
_enablingPromise
_credential
_clientToken
accountForRenewingCredentials
continuationResponses
initWithArray:
failureReason
statusString
substringWithRange:
substringToIndex:
_urlFromResponse:
shouldUseAuthentication
displayHostname
mailAccountIfAvailable
_account
registerSchemeClass:
authenticationMechanisms
authenticatorForAccount:connection:
isSubclassOfClass:
canAuthenticateAccountClass:connection:
authenticatorClass
name
humanReadableName
authenticationState
setAuthenticationState:
account
setMissingPasswordError
data
appendBytes:length:
appendData:
saslName
supportsInitialClientResponse
justSentPlainTextPassword
responseForServerData:
_sentResponse
urls
setUrls:
paths
setPaths:
setAccount:
initWithPath:UID:changes:
path
changes
commitTime
setCommitTime:
connectionTag
setConnectionTag:
flushOfflineCache
setHandlerForOfflineCacheFlush:
userInfo
lastObject
primaryMailboxUid
library
URLString
maximumRemoteIDForMailbox:
_readCustomInfoFromMailboxCache:
numberWithInteger:
_writeCustomInfoToMailboxCache:
removeObserver:
sharedManager
stopWatchingForTopic:
offlineCacheIfExists
saveChanges
saveState
_renameLocalSpecialMailboxesToName:
compactWhenClosingMailboxes
setAccountProperty:forKey:
_queueAccountInfoDidChange
calendarWithIdentifier:
dateByAddingUnit:value:toDate:options:
components:fromDate:toDate:options:
numberWithUnsignedInt:
_setChildren:forMailboxUid:
resetSpecialMailboxes
setConnectionError:
isResponseWithCode:
isAlertResponse
offlineCacheDirectoryPath
stringByAppendingPathComponent:
initWithContentsOfFile:options:error:
readBufferSize
deleteInPlaceForAllMailboxes
currentMonitor
connectionState
shouldCancel
connectUsingAccount:
error
mf_isUserCancelledError
authenticateUsingAccount:
setError:
reportAuthenticationError:authScheme:
_updateSeparatorAndNamespaceWithConnection:
throttledGetMailboxListWithConnection:
setIsOffline:
setReadBufferSize:
mailboxUid
mailboxName
_nameForMailboxUid:
noop
examineMailbox:
selectMailbox:withAccount:
setCommitTime:forConnectionTag:
isValid
setShortDescription:
checkInConnection:
connectTime
removeFlagChangesCommittedBefore:
checkInConnection:destroy:
mf_tryLock
setDelegate:
gotBadResponse
_setCapabilities:
selectedMailbox
delegate
_shouldLogDeleteActivity
logout
disconnectAndNotifyDelegate:
_purgeStaleFlagChanges
dictionaryWithObjects:forKeys:count:
powerlog:eventData:
_releaseAllConnectionsAndCallSuper:edgeForcedOnly:ifIdleForTimeInterval:saveOfflineCache:
_invokeBlock:
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
retainArguments
sharedInvocationQueue
addInvocation:
isCellularConnection
isFetching
lastUsedTime
closeAndLogout
_mailboxUidForName:
autofetchAccount:mailboxUid:
releaseAllConnections
releaseAllForcedConnections
connectionForStore:delegate:options:
_flushOfflineCache
invocationWithSelector:target:taskName:priority:canBeCancelled:
uniqueId
networkAssertionWithIdentifier:
networkChanged
userString
statusEntries
userInfoObjectForKey:
setUserInfoObject:forKey:
unsignedIntegerValue
updateMostRecentStatusCount:
_releaseAllConnectionsAndCallSuper:
isActive
notificationWithName:object:userInfo:
postNotification:
serverPathPrefix
rootMailboxUid
isEqualToArray:
_writeMailboxCacheWithPrejudice:
isFatPipe
isPluggedIn
is3GConnection
is4GConnection
setFetchMinBytes:
setMinBytesLeft:
setFetchMaxBytes:
serverPathPrefixAccountValue
subscribedListingForMailbox:options:
listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
removeObject:
arrayWithArray:
initWithDictionary:
replaceObjectAtIndex:withObject:
mf_insertObject:usingSortFunction:context:allowDuplicates:
_listingForMailboxUid:listAllChildren:onlySubscribed:statusDataItems:withConnection:statusEntriesByMailbox:
_listingForMailboxUid:listAllChildren:onlySubscribed:
_copyMailboxWithParent:name:attributes:dictionary:
accountRelativePath
mailboxUidForRelativePath:create:
mutableCopyWithZone:
pathComponents
mf_fileSystemString
createMailbox:
offlineCache
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
_deleteMailbox:
unselectMailbox:
offlineCacheIfOffline
deleteMailbox:
isStore
parent
_listingForMailboxUid:listAllChildren:
mf_indexOfMailboxDictionaryWithName:
_setSpecialMailbox:forType:
setStoreMailboxType:onServer:
storeMailboxTypeOnServer:
_localMailboxNameForType:usingDisplayName:
renameMailbox:newName:parent:
isMailboxLocalForType:
localAccount
descendantWithExtraAttribute:
specialMailboxNameForType:
setRepresentedAccount:
isSpecialMailbox:
setWithArray:
intersectSet:
store
moveMessages:toMailbox:markAsRead:
moveMessages:fromMailbox:toMailbox:markAsRead:
_synchronizeAccountWithServer
getMailboxListWithConnection:statusDataItems:statusEntriesByMailbox:
_loadMailboxListingIntoCache:attributes:children:parent:
_mailboxListingChanged
isForeground
setMailbox:
mainBundle
localizedStringForKey:value:table:
isDraftsMailboxType:
enumerateKeysAndObjectsUsingBlock:
allMailboxUids
mf_filter:
nameForMailboxUid:
mf_map:
fetchStatusForMailboxes:args:
globalAsyncScheduler
reset
afterDelay:performBlock:
emptyTrash
drain
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
_assignSpecialMailboxToAppropriateIvar:forType:
setName:
setAttributes:
setExtraAttributes:
attributes
_deleteQueuedMailboxes:
_mailboxesWereRemovedFromTree:withFileSystemPaths:
_waitForMailboxListingLoadToComplete
mailboxUidFromActiveAccountsForURL:
deleteMailboxes:account:
newMailboxNameIsAcceptable:reasonForFailure:
isOffline
_uidNameForPathComponent:
renameMailbox:toMailbox:
reselectMailbox
mf_decodedIMAPMailboxName
mf_encodedIMAPMailboxName
isShared
rangeOfString:options:
componentsSeparatedByString:
childWithName:
canMailboxBeDeleted:
makeObjectsPerformSelector:
removeAccountPropertyForKey:
nowWouldBeAGoodTimeToStartBackgroundSynchronization
setServerPathPrefix:shouldSync:
_pathComponentForUidName:
componentsJoinedByString:
_fileSystemServerPathPrefix
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
initWithIMAPAccount:
hasPendingOfflineOperations
subarrayWithRange:
setServerPathPrefix:
setValueInAccountProperties:forKey:
addEntriesFromDictionary:
setLibrary:
messagesAdded:
dictionaryWithCapacity:
removeAllObjects
dataUsingEncoding:allowLossyConversion:
mf_MD5Digest
mf_copyHexString
startWatchingForTopic:
swapTopic:forNewTopic:
mustRegisterForPushOnNextConnection
authenticatedConnection
pushedMailboxUids
initWithSet:
_externalMailboxUids
unionSet:
setMustRegisterForPushOnNextConnection:
lastPushRegistration
supportedPushServiceLevel
updatePushRegisteredMailboxes:
setSupportedPushServiceLevel:
setAPSTopic:
setLastPushRegistration:
_notificationNameForMailbox:withPrefix:
notificationNamesForPrefix:mailboxUids:
setWithCapacity:
setAccountIdentifier:
setNotificationNamePrefix:
allObjects
setMailboxNames:
registerForPush:
accountPropertyForKey:
localizedCompare:
sortUsingSelector:
_copyMailboxListForNames:
resetMailboxTimer
fetchMailboxList
_schedulePushRegistrationConnection
canFetch
isSyncingNotes
_copyMailboxListPreferenceForKey:
supportsUserPushedMailboxes
_copyUserPushedMailboxes
standardUserDefaults
boolForKey:
postNotificationName:object:userInfo:
_updatePushedMailboxesAndNotify:
setWithSet:
setValueInAccountInfo:forKey:
_notesPrefix
_copyPushedMailboxesForPrefix:
mailboxesRegisteredForPushByHash
uppercaseString
_apsDeviceTokenChanged:
connect
canRegisterForAPSPush
isBatterySaverModeEnabled
_registerForDeviceTokenChanges
apsTopic
_unregisterForDeviceTokenChanges
stopListeningForNotifications
copyDiagnosticInformation
descriptionWithLocale:indent:
appendFormat:
dateWithTimeIntervalSinceReferenceDate:
defaultPortNumber
defaultSecurePortNumber
saslProfileName
csAccountTypeString
legacyKeychainProtocol
connection:shouldHandleUntaggedResponse:forCommand:
connection:didReceiveResponse:forCommand:
connection:didBeginBodyLoad:section:
connection:didLoadMoreBodyData:section:
connection:didFinishLoadingBodyData:section:
connectionBodyDataReadChunkSize:
connectionDidDisconnect:
willRemoveDelegation:
shouldStartIdleForConnection:
mf_lockOrdering
certUIService
greatestInboxUid
minUID
minID
storeClass
mailboxPathExtension
serviceName
secureServiceName
requiresAuthentication
setCompactWhenClosingMailboxes:
needToSynchronizeMailboxCaches
_didSynchronizeMailboxCachesAndFoundChanges:
_dataForTemporaryUid:
minimumPartialDownloadSize
allowsPartialDownloads
setAllowsPartialDownloads:
deleteInPlaceForMailbox:
connectAndAuthenticate:
checkInConnectionsForStore:
verifyESearchSupportWithBlock:
releaseAllConnectionsIdleForTimeInterval:
acquireNetworkAssertion
releaseNetworkAssertion
canGoOffline
lastKnownCapabilities
fetchLimits
_specialMailboxUidWithType:create:
getMailboxListWithConnection:
_synchronouslyLoadListingForParent:
_mailboxPathPrefix
requiresDataForOfflineTransfersFromStore:
_URLScheme
_infoForMatchingURL:
flagChangesLock
addFlagChanges:forMailboxPath:UID:
flagChangesForMailboxPath:UID:connectTime:
removeFlagChanges:forMessages:
setConnectionTag:forFlagChanges:forMessages:
supportsAppend
supportsRemoteAppend
supportsMailboxEditing
shouldRestoreMessagesAfterFailedDelete
serverRegisteredMailboxes:withTopic:version:
registerPushNotificationPrefix:forMailboxUids:
_registerPushNotificationPrefix:forMailboxNames:
changePushedMailboxUidsAdded:deleted:
mailboxNamesForPushRegistration
handlePushNotificationOnMailboxes:missedNotifications:
transferNotificationSessionToAccount:
_separatorChar
_serverNamespace
_cachedConnections
_mailboxesToSynchronize
_offlineCache
_greatestInboxUid
_timeLastFetchedMailboxList
_flagChangesLock
_recentFlagChanges
_connectionLock
_nextConnectionTag
_packetContextAssertion
_lockOrderingArray
_readBufferSize
_offlineCacheFlushHandler
_fetchedMailboxList
_isOffline
_lastKnownCapabilities
_eSearchSupportedLock
_eSearchSupported
_lastPushRegistration
_apsTopic
_pushedMailboxUids
_pushRegisteredMailboxes
_supportedPushServiceLevel
_observingPushedFoldersPrefsChanged
_mustRegisterForPushOnNextConnection
_didRequestPushRegistration
_listeningForDeviceTokenChanges
_didUpdateSeparatorAndNamespace
_objectForAccountInfoKey:
_newConnection
setTag:
setMailboxListFilter:
isMobileMail
performDeferredOperationsWithConnection:
copyWithZone:
hasSuffix:
flushCriteria
setUid:
setFetchItem:
setBodyDataConsumer:
setConsumerSection:
matchesFetchResponse:
fetchItem
bodyDataConsumer
consumerSection
addConsumer:forSection:
insertObject:atIndex:
initWithObjects:count:
setReadBufferSizeFromElapsedTime:bytesRead:
isUntagged
_removeFetchUnitMatchingResponse:
copyFailedFetchResponse
addFetchCommandForUid:fetchItem:expectedLength:bodyDataConsumer:consumerSection:
expectedSize
setChunkSize:
chunkSize
setFull:
isFull
failureResponsesFromSendingCommandsWithConnection:
isSending
_chunkSize
_expectedSize
_full
_sending
_fetchUnits
initWithType:
rangeOfString:options:range:
setSection:
setStartOffset:
_setupExpectedFetchResult
section
setResponseType:
setNumber:
setFetchResults:
_expectedFetchResult
_bodyDataConsumer
_consumerSection
_fetchItem
_uid
objectAtIndexedSubscript:
stringWithCString:encoding:
setReadSizeParameters
isIdle
idleCommandSequenceNumber
reference
weakReferenceWithObject:
retainedReference
setServerMessageCount:
setHighestModSequence:
capabilities
_addCapabilities:
arrayWithObjects:
parenthesizedStringWithObjects:
copyDeviceToken
bundleIdentifier
serverInfo
minusSet:
startCompression
_copyNextServerResponseForCommand:
remoteHostname
_clearCapabilities
_doBasicConnectionUsingAccount:
securityProtocol
startTLSForAccount:
clientCertificates
setClientCertificates:
setSecurityProtocol:
_updateCapabilitiesForAccount:withAuthenticationResponse:
inaccessiblePasswordErrorWithTitle:
missingPasswordErrorWithTitle:
_tryConnectionUsingAccount:
setEventHandler:
abort
endCompression
setLength:
isReadable
locked_finishIdle
mf_appendCString:
UTF8String
numberOfNewlinesNeedingConversion:
fillLiteralBuffer:count:dataLength:nonSynchronizingLiteral:
writeData:dontLogBytesInRange:
_copyNextTaggedOrContinuationResponseForCommand:
writeBytes:length:dontLogBytesInRange:
enumerateByteRangesUsingBlock:
writeData:
enumerateConvertingNewlinesUsingBlock:
bytes
initWithConnection:responseConsumer:
useGenericDescription:
_fetchCapabilities
timeout
setTimeout:
loginDisabled
loginWithAccount:password:
loginDisabledErrorWithTitle:
_sendApplePushForAccountIfSupported:
_sendClientInfoIfSupported
_enableCompressionIfSupported
_serverErrorForAccount:response:command:
setMoreInfo:
_doIMAPLoginForAccount:quotedUsername:password:
_sendCommands:count:response:
_doListCommand:withReference:mailboxName:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:
_doNamespaceCommand
privateNamespaces
mailboxAttributes
separator
numberWithUnsignedInteger:
_listingForMailbox:options:getSpecialUse:statusDataItems:statusEntriesByMailbox:withCommand:
close
handleBytesAvailable
mf_invocationWithSelector:target:
hasBytesAvailable
handleStreamEvent:
null
lazyFutureWithBlock:
result:
locked_scheduleIdleResetAfterDelay:
idleSubscriptionCancelable
globalAsyncSchedulerWithQualityOfService:
locked_startIdle
setIdleSubscriptionCancelable:
_errorForResponse:commandParams:
_updateSearchCapabilityWithAccount:
_sendMailboxCommand:withArguments:
quotas
initWithFloat:
firstIndex
indexGreaterThanIndex:
searchIDSet:forTerms:success:
searchUidSet:forTerms:success:
countForSearchOfIDSet:forTerms:success:
searchResults
setFlagsArray:
setUidFlagsChange:
setUids:
setFlagsFetchResult:
storeFlags:state:forMessageSet:
messageSetForRange:
storeFlags:state:forUids:
_responseFromSendingCommand:andPossiblyCreateMailbox:
arrayByAddingObjectsFromArray:
_headersToFetchIncludingThoseRequiredForRouting:withRecipients:
_doUidFetchWithRange:arguments:validateMessage:responses:
messageSize
copyFirstStringValueForKey:
numberWithUnsignedLong:
uniqueRemoteId
numberWithUnsignedLongLong:
integerForKey:
floatForKey:
sortUsingFunction:context:
integerValue
messageSetForNumbers:range:maxTokens:indexOfLastNumber:
messageSetForNumbers:range:
authScheme
arrayWithObject:
userData
base64EncodeResponseData
setData:
securityLayer
mf_lockWithPriority
readBytesIntoData:desiredLength:
readLineIntoData:
mutableBytes
locked_scheduleIdle
sendResponsesForCommand:toQueue:
fetchArgumentForMessageSkeletonsWithTo:
sendResponsesForUIDFetchForUIDs:fields:toQueue:
sequenceIdentifierForUIDs:
flush
setSequenceIdentifier:forUIDs:
sendResponsesForUIDs:fields:flagSearchResults:toQueue:
setSearchResults:
searchTerms
mask
isPositiveMatch
cacheStateForUIDs:mask:existenceSetsFlag:
copyResponseForUID:
number
unsignedLongLongValue
initialize
mailboxListFilter
disconnect
unselect
finishIdle
scheduleIdleReset
expunge
expungeUids:
subscribeMailbox:
unsubscribeMailbox:
getQuotaForRootName:
quotaPercentagesForMailbox:
countForSearchOfUidSet:forTerms:success:
getMailboxIDForUID:
searchUidSet:forNewMessageIDs:
storeFlags:state:forRange:
deleteMessagesOlderThanNumberOfDays:
copyUids:toMailboxNamed:newMessageInfo:
appendData:toMailboxNamed:flags:dateReceived:newMessageInfo:
additionalHeadersForFetch
setAdditionalHeadersForFetch:
fetchTotalSize:andMessageCount:
fetchHeadersForUid:
fetchMessageIdsForUids:
fetchUniqueRemoteIDsForUids:
performCustomCommand:withArguments:
messageSetForRange:butNotNumbers:
authenticateUsingAccount:authenticator:
notifyDelegateOfBodyLoadStart:section:
notifyDelegateOfBodyLoadAppendage:section:
notifyDelegateOfBodyLoadCompletion:section:
literalChunkSize
_readDataOfLength:
sendSkeletonResponsesForUIDs:includeTo:toQueue:
sendUidAndFlagResponsesForUIDs:sequenceIdentifierProvider:flagSearchResults:toQueue:
sendUidResponsesForSearchArguments:toQueue:
searchUIDs:withFlagRequests:
setIdleCommandSequenceNumber:
_mailboxListFilter
_capabilityFlags
_verifiedESearchResponse
_gotBadResponse
_tag
_connectTime
_connectionState
_selectedMailbox
_capabilities
_lastRequiredHeadersArray
_lastRequiredHeaders
_commandNumber
_data
_expirationTime
_streamEventQueue
_additionalHeadersForFetch
_noModSequence
_delegateState
_idleCommandSequenceNumber
_idleSubscriptionCancelable
containsIndex:
indexSet
_indexSetFromUIDs:
addIndexes:
removeObjectForKey:
_flagsForUID:
setMessageFlags:
_uidsWithFlagMaskSet
_uidsWithoutFlagMaskSet
initWithMask:searchTerms:positiveMatch:
requestWithMask:searchTerms:positiveMatch:
_isPositiveMatch
_searchTerms
_mask
compare:
initWithUid:
expectedLength
isComplete
bytesFetched
handleFetchResult:
processResults
addCommandsToPipeline:withCache:
lengthOfDataBeforeLineConversion
mainConsumer
_pendingFetchResults
_countingConsumer
_mainConsumer
initWithConsumers:
initWithUid:section:length:lengthIsKnown:range:consumer:
mf_shouldFailDownload
done
initWithUid:section:estimatedLength:consumer:
initWithUid:section:length:consumer:
initWithUid:section:range:consumer:
_section
_error
_length
_knownLength
_complete
_range
_originalDataLength
_offsetAdjustment
indexOfObjectIdenticalTo:
removeObjectIdenticalTo:
subdownloads
addSubdownload:
removeSubdownload:
_subdownloads
startOffset
initWithMessage:
downloadForMessage:
downloadForUid:section:length:consumer:
downloadForUid:section:expectedLength:consumer:
downloadForUid:section:range:consumer:
handleFetchResponse:forUid:
handleFetchResponses:
processResultsForUid:
cleanUpDownloadsForUid:
addCommandsForDownload:toPipeline:
_downloads
consumers
handleFailureInFunction:file:lineNumber:description:
flagsArray
envelope
bodyStructure
setEnvelope:
internalDate
setInternalDate:
setFetchData:
setMessageSize:
setBodyStructure:
setUniqueRemoteId:
messageFlags
setCustomFlagsArray:
customFlagsArray
setModSequenceNumber:
encoding
_itemType
_modSequenceNumber
_typeSpecific
_privacySafeDescription
remoteID
messageStore
hasValidCacheFileForMessage:
setPreferredEncoding:
stringValue
mailbox
remoteMailboxURL
initWithFlags:customFlags:size:uid:
messageID
compareByNumberWithMessage:
isPartial
setIsPartial:
isMessageContentsLocallyAvailable
hasTemporaryUid
setHasTemporaryUid:
customFlags
originalMailboxURL
_size
_customFlags
_uniqueRemoteId
initWithBytes:length:
bodyParameterForKey:
appendDataForMimePart:toData:withPartData:
setMessageData:isPartial:
parseIMAPPropertyList:
getNumberOfAttachments:isSigned:isEncrypted:
initWithConsumer:
message
partial
topLevelPart
setTopLevelPart:
setFetchBodyData:
fetchBodyData
_message
_topLevelPart
_allowsPartialDownloads
_usingPartialDownloads
_startedFetch
_fetchingMessageContents
_fetchingBodyText
_doneAddingSubdownloads
_fetchBodyData
_headerFilter
_headerConsumer
_textFilter
_textConsumer
messageData
mf_rangeOfRFC822HeaderData
mf_subdataWithRange:
preferredEncoding
setHeaders:
headers
headerData
headersIfAvailable
_messageData
_headers
mf_encodeModifiedBase64
dataWithBytes:length:
initWithLength:
mf_decodeModifiedBase64
initWithCharacters:length:
getBytes:range:
raise:format:
_deserializeOpSpecificValuesFromData:cursor:
_magic
initWithType:mailbox:
timeIntervalSinceReferenceDate
deserializedCopyFromData:cursor:
serializeIntoData:
initWithMailboxToCreate:
initWithMailboxToDelete:
initWithFlagsToSet:flagsToClear:forUids:inMailbox:
initWithUidsToCopy:fromMailbox:toMailbox:firstNewUid:
initWithAppendedUid:approximateSize:flags:internalDate:mailbox:
isSourceOfTemporaryUid:
actsOnTemporaryUid:
expungeTemporaryUid:
firstTemporaryUid
lastTemporaryUid
operationType
approximateSize
failureCount
setFailureCount:
usesRealUids
setUsesRealUids:
flagsToSet
flagsToClear
uids
flags
sourceUids
destinationUids
destinationMailbox
sourceUidForTemporaryUid:
getMessageId:andInternalDate:forDestinationUid:
setMessageId:andInternalDate:forMessageWithSourceUid:
_type
_failureCount
_temporaryUids
_mailboxName
_opSpecific
messageIds
internalDates
initWithUTF8String:
initWithBytes:length:encoding:
copyRemoteIDForTemporaryUid:
_queueDeferredOperation:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
headerDataForMessage:downloadIfNecessary:
writeToFile:options:error:
dateReceived
setUid:forMessageWithTemporaryUid:
initWithObjects:forKeys:
taskName
setTaskName:
acquireExclusiveAccessKey
_performCreateOperation:withContext:
_performDeleteOperation:withContext:
_performStoreOperation:withContext:
_performAppendOperation:withContext:
_performCopyOperation:withContext:
removeObjectsInRange:
relinquishExclusiveAccessKey:
setShouldFlattenCacheOperations:
setFlags:andClearFlags:forMessages:
setFlags:andClearFlags:forUids:forMailbox:
firstUidForCopyingMessages:fromMailbox:toMailbox:
uidForAppendingMessageData:withFlags:andInternalDate:toMailbox:
hasOperationsForMailbox:
deferredOperations
_handle
_ops
_lastUid
_lastSave
_lastUidValidity
_opsPending
defaultManager
mf_makeCompletePath:mode:
storeForMailboxUid:
copyStringFrom:to:withCaseOption:
logReadChars:length:
lookAhead
getNumber:
initWithUnsignedLongLong:
literalWithResponseConsumer:section:
appendData:forSection:
setPercentDone:
copyLiteral
copyLiteralString
copyAtom
dateFromString:
copyArrayAllowingNulls:
increment
hadWarningOrError
resetWarningOrError
initWithConnection:response:start:end:
connection
setStart:
setEnd:
logReadChars
match:upToSpecial:
copyNilOrString
copyAString
copyDateTime
copyArray
nextSeparator
_connection
_response
_start
_end
_originalStart
_originalEnd
_lastLoggedChar
_invalid
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
_messageIDsFromFetchResultData:
enumerateObjectsUsingBlock:
mf_subarraysOfSize:
_searchUidsForMessageIDs:excludeDeleted:
_uidsForMessageIDs:excludeDeleted:
_getReferencesForMessageSet:
_getFirstLevelMessageIDsForReference:
uidsReferencedBy:
isValidBase64:
mf_decodeBase64
string
quotaRootNames
quotaRootName
uidFlagsChange
flagsFetchResult
publicNamespaces
sharedNamespaces
responseName
parameters
setResponseConsumer:
reason
setUserData:responseCode:responseInfo:
setCapabilities:
setServerInfo:
setFlags:
setMailboxName:statusEntries:
setMailboxAttributes:separator:mailboxName:extraAttributes:
setMailboxName:quotaRootNames:
setQuotaRootName:quotas:
setPrivateNamespaces:
setPublicNamespaces:
setSharedNamespaces:
setResponseName:parameters:
responseConsumer
_responseType
_keyValuePairs
_responseConsumer
consumersBySection
_consumersBySection
mf_addObject:forKey:
compare:options:
initWithImmutableData:
partName
dataHolder
setDataHolder:
_dataHolder
initWithMaximumSize:latency:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
insertMessages:
gotNewMessagesState
dateWithTimeIntervalSinceNow:
timeIntervalSince1970
dateReceivedAsTimeIntervalSince1970
conversationFlags
setGotNewMessagesState:
mf_makeImmutable
shouldAddUID:
setDateReceivedTimeIntervalSince1970:
loadCachedHeaderValuesFromHeaders:
setMessageStore:
subject
setCurrentCount:
messageToSyncFlagsForUID:
handleItems:
_store
_numNewUIDs
_newMessageCount
_highestModSequence
_flags
_isSearching
messageForRemoteID:
uidForItem:
getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
shouldSyncFlags
flagsForItem:
messageWithLibraryID:options:inMailbox:
sequenceIdentifierForItem:
setSequenceIdentifier:forMessageWithLibraryID:
compactMessages:
_url
_currentUID
_missingUIDs
_libraryDetails
_shouldCompact
_shouldFetch
_shouldSyncFlags
setMaximumLatency:
removeIndex:
lastIndex
indexLessThanIndex:
limit
initWithMailboxUid:readOnly:
userInfoBoolForKey:
focusedMessageDidChange:
_observeChangesInIdleConditions
addCancelable:
setDisplayName:maxCount:
fetchMessagesWithUIDs:connection:newCount:flagsToSet:queueClass:
syncMessagesWithUIDs:connection:libraryDetails:flagSearchResults:
object
unreadCount
_updateSelectedUID:
_searchFlagsForUIDs:usingConnection:
getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
_performActionsOnConnection:uidsToFetch:uidsToSync:messagesToCompact:libraryDetails:flagSearchResults:shouldForce:newUIDsToFetch:
mf_insertObject:usingComparator:allowDuplicates:
setFlagsLocallyFromDictionary:forMessages:
performOperationRequiringConnection:withOptions:operation:
updateDeletedCountWithNotDeletedCount:
growFetchWindow
willFetchMessages
_selectMailbox:withConnection:
setIsFetching:
notifyConnectionEstablished
minimumRemoteIDForMailbox:
_shouldContinueToPreservedUID:
_searchArgumentsForSynchronize
_fetchMessagesWithArguments:idRange:onConnection:synchronize:limit:topUIDToCompact:topKnownUID:success:examinedRange:fetchableUIDsFound:preserveUID:numFetchedUIDs:
_fetchServerUnreadCountWithConnection:
canProvideMinimumRemoteID
shouldUseNonDeletedForUnreadCount
_updateServerUnreadCount:
setLastSyncAndMostRecentStatusCount:forMailbox:
postNotificationName:object:
setServerUnreadOnlyOnServerCount:forMailbox:
expression
whitespaceCharacterSet
qualifier
mf_isLegalEmailAddress
currentLocale
criterionType
includeRemoteBodyContent
setIncludeRemoteBodyContent:
criterionByApplyingTransform:
messageIsDeletedCriterion:
andCompoundCriterionWithCriteria:
criterionForSQL
_remoteBodySearchForCriterion:
errorWithDomain:code:userInfo:
_newSearchResponseQueueForConnection:limit:
_fetchMessagesMatchingCriterion:limit:withOptions:handler:
addRemoteID:mailbox:
serverMessageCount
allNonDeletedCountIncludingServerSearch:andThreadSearch:
defaultLoadOptions
copyOfAllMessagesWithOptions:
_flushAllMessageData
structureDidChange
canCompact
doCompact
deletedMessages
messagesForMailbox:olderThanNumberOfDays:
deleteMessages:moveToTrash:
addMessages:newMessagesByOldMessage:
_uidsForMessages:
_updateLibraryForTransferedMessages:toDestinationMailbox:newMessageInfo:flagsToSet:
performBatchOperationWithUIDs:requiringConnection:withOptions:operation:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
_doUidCopy:toStore:newMessages:
canPerformOfflineAppend
messageDataHolder
setMailboxUidValidity:
cachePolicy
setData:forMessage:isPartial:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:customIMAPFlagsToSet:
allowsAppend
replaceObjectsInRange:withObjectsFromArray:
_doAppend:
replaceObjectsInRange:withObjectsFromArray:range:
mf_firstObjectPassingTest:
messageIDHeader
indexOfObject:
initWithResultCode:failedMessages:transferedMessage:
setFlagsFromDictionary:forMessages:
moveUIDSet:toMailboxNamed:newMessageInfo:
_synchronouslySetFlags:clearFlags:forMessages:originalChanges:
relativePath
addFlagChanges:forMessages:
_setFlagsFromDictionary:forMessages:
setFlagsForAllMessagesFromDictionary:
setPreferredEncoding:forMessage:
range
mimeBody
partNumber
fetchMinBytes
minBytesLeft
filterWithConsumer:
initWithData:partial:incomplete:
_cachedBodyDataContainerForMessage:valueIfNotPresent:
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
_dataForMessage:readHeadersOnly:
_downloadForMessageBodyData:
_performBodyDataDownload:usingConnection:isPartial:
shouldRetryEmptyBodyDownloadForMessage:
_fetchHeaderDataForMessage:downloadIfNecessary:
shouldUseIDLE
observableWithResult:
lowPowerModeObservable
pluggedInObservable
wifiObservable
lockStateObservable
appStateObservable
startWith:
map:
combineLatest:
serialDispatchQueueSchedulerWithName:qualityOfService:
distinctUntilChanged
doOnError:
observeOn:
_idleConditionsObservable
_scheduleIdleTransition:
observerWithResultBlock:
subscribe:
setShouldUseIDLE:
fileExistsAtPath:
messageWithRemoteID:inRemoteMailbox:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:
messagesWereAdded:
criterionForMailboxURL:
messagesMatchingCriterion:options:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
keyEnumerator
nextObject
_setFlagsForMessages:
messageForRemoteID:inMailbox:
isRemoteSearch
updateDeletedCount
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
libraryIMAPStore:bodyDownloadBeganForUid:data:section:
libraryIMAPStore:bodyDownloadReceivedMoreDataForUid:data:section:
libraryIMAPStore:bodyDownloadCompletedForUid:data:section:
setHandlerForTemporaryUidToRemoteIDMapping:
setAdditionalFetchHeaders:
setAdditionalSynchronizationSearchArguments:
fetchNumMessages:preservingUID:options:
updateServerUnreadCountClosingConnection:
canFetchSearchResults
messageIdRollCall:
fetchMessagesMatchingCriterion:limit:
storeSearchResultMatchingCriterion:limit:offset:error:
canFetchMessageIDs
fetchMessagesWithMessageIDs:andSetFlags:
fetchMessagesWithRemoteIDs:andSetFlags:
removeAllLocalMessages
deleteMessagesOlderThanNumberOfDays:compact:
_addOfflineTransferMessages:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:
newDictionaryForLocalFlags:serverFlags:existingDictionary:
willSetFlagsFromDictionary:forMessages:
setFlagsCancelled:forMessages:
_fetchDataForMimePart:range:isComplete:consumer:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
bodyFetchRequiresNetworkActivity
remoteIDsFromUniqueRemoteIDs:
_changedFlagsForMessage:fetchResponse:newFlags:
fetchPipeline
downloadCache
uniqueRemoteIDsForMessages:
setDownloadDelegate:
cancelationToken
setCancelationToken:
_supportsCustomPermanentFlags
_supportsJunkFlag
_supportsDollarJunkFlag
_supportsNotJunkFlag
_supportsDollarNotJunkFlag
_supportsForwardedFlag
_supportsDollarForwardedFlag
_updatingCache
_updateMetadata
_readyToDealloc
_didSynchronizeOldMessages
_recentsExist
_settingServerCount
_reserved
_downloadCache
_fetchPipeline
_serverDeletedCount
_serverUidNext
_lastHighestModSequence
_selectedUID
_currentFetchUid
_relativePath
_additionalSynchronizationSearchArguments
_additionalFetchHeaders
_downloadDelegate
_cachedConnection
_cachedConnectionLock
_shouldUseIDLE
_cancelationToken
initWithObjectsAndKeys:
initWithTypes:error:
matchesInString:options:range:
rangeValue
valueWithRange:
deleteCharactersInRange:
criterionIdentifier
criteria
allCriteriaMustBeSatisfied
doubleValue
dateWithTimeIntervalSince1970:
mf_boolForKey:
libraryID
stringByAppendingString:
percentDone
enableThroughputMonitoring:
setExpectedLength:
initWithCondition:
sharedController
addDiagnosticsGenerator:
removeDiagnosticsGenerator:
bundleWithPath:
classNamed:
APSConnection
initWithEnvironmentName:launchBundleIdOnDemand:queue:
publicToken
connection:didReceivePublicToken:
unlockWithCondition:
_startAPS_nts
setEnabledTopics:ignoredTopics:
countForObject:
lockWhenCondition:beforeDate:
topic
wasFromStorage
accountWithUniqueId:
condition
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
_stopAPS_nts
_queue
_pushService
_watchedTopics
_unwatchedTopics
_deviceTokenLock
_deviceToken
_moveMessageSet:toMailboxName:command:newMessageInfo:
_UIDPlusInfoFromIMAPResponses:
moveSequenceSet:toMailboxName:newMessageInfo:
credentialWithError:
userFullName
_authSchemeForAuthenticationMethod:
_credentialCreateIfNecessary:error:
parentAccountMailProperties
_mailAccount
load
requiresPassword
initWithAuthScheme:account:connection:
castleAccount
dataWithCapacity:
_castleAccount
isSSLEditable
predefinedValueForKey:
emailAddressWithUsername:
defaultAllowedCharacterSet
getConfigurationFromServerForEmail:
transferDisabledMailboxUids
URLForMessage:
saveSentFolder
AOLAccount
CastleIMAPAccount
CondStore
ESearch
ExchangeAccount
MFExchangeConnection
GmailAccount
MFOAuth2TokenAuthProtocol
NSObject
MFClientTokenAuthProtocol
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
MFGmailSMTPAccount
MFGmailClientTokenAuthScheme
_MFGmailClientTokenAuthenticator
_MFIMAPMailboxDeletionQueueEntry
_MFFlagChangeEntry
IMAPAccount
MFIMAPConnectionDelegate
MFIMAPMailboxListFilter
MFIMAPCommandPipeline
_MFIMAPFetchUnit
MFIMAPConnection
MFIMAPConnectionFlagSearchResults
MFIMAPConnectionFlagSearchRequest
MFIMAPDownload
MFIMAPSimpleDownload
MFIMAPCompoundDownload
MFIMAPDownloadCache
MFIMAPFetchResult
MFIMAPMessage
MFIMAPMessageDownload
MFIMAPMessageWithCache
IMAPNameEncoding
MFIMAPOperation
MFIMAPOfflineCopyOnStupidServerOperation
MFIMAPOperationCache
MFIMAPParseContext
ReferenceSearching
MFIMAPResponse
MFIMAPResponseConsumer
_MFWholeMessageSection
MFMessageDataSection
MFFetchResponseQueue
MFSearchFetchResponseQueue
MFBaseSyncResponseQueue
MFSyncResponseQueue
MFSearchResponseQueue
0"0@
MFLibraryIMAPStore
MFIMAPSequenceIdentifierProvider
MFAPSManager
APSConnectionDelegate
MFDiagnosticsGenerator
Move
MFOSXServerIMAPAccount
MFOSXServerSMTPAccount
MFNewcastleAuthScheme
_MFNewcastleAuthenticator
MFNewcastleSMTPAccount
MFOAuth2TokenAuthScheme
_MFOAuth2TokenAuthenticator
YahooDeliveryAccount
YahooAccount
MFYahooSMTPAccount
@8@0:4
@16@0:4@8@12
B8@0:4
@12@0:4@8
I8@0:4
@12@0:4i8
v12@0:4@8
v12@0:4B8
@12@0:4B8
B12@0:4@8
@16@0:4@8^@12
v8@0:4
B20@0:4@8@12@16
v16@0:4@8@12
v12@0:4I8
@12@0:4^@8
v16@0:4B8@12
@"MFLock"
@"ACAccount"
@"DeliveryAccount"
@"NSMutableDictionary"
@"NSString"
@"NSObject<OS_dispatch_queue>"
B20@0:4@8^@12@16
@28@0:4@8B12@16^B20i24
#8@0:4
v20@0:4@8@12i16
v20@0:4@8@12@16
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v20@0:4@8@12@?16
v16@0:4@"NSURLSession"8@"NSError"12
v20@0:4@"NSURLSession"8@"NSURLAuthenticationChallenge"12@?<v@?i@"NSURLCredential">16
v12@0:4@"NSURLSession"8
v24@0:4@8@12@16@?20
v28@0:4@8@12@16@20@?24
v40@0:4@8@12q16q24q32
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLRequest"16@?<v@?i@"NSURLRequest">20
v16@0:4@"NSURLSession"8@"NSURLSessionTask"12
v28@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSHTTPURLResponse"16@"NSURLRequest"20@?<v@?@"NSURLRequest">24
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLAuthenticationChallenge"16@?<v@?i@"NSURLCredential">20
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@?<v@?@"NSInputStream">16
v40@0:4@"NSURLSession"8@"NSURLSessionTask"12q16q24q32
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLSessionTaskMetrics"16
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSError"16
v24@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLResponse"16@?<v@?i>20
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLSessionDownloadTask"16
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLSessionStreamTask"16
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSData"16
v24@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSCachedURLResponse"16@?<v@?@"NSCachedURLResponse">20
i12@0:4@8
i12@0:4i8
@"MFPromise"
@"NSURLCredential"
@"GmailAccount"
B16@0:4#8@12
@"NSArray"
@"IMAPAccount"
@20@0:4@8I12@16
d8@0:4
v16@0:4d8
@"NSDictionary"
^v8@0:4
B20@0:4@8@12^{?=i@@I@}16
v20@0:4@8@12^{?=i@@I@}16
I12@0:4@8
B20@0:4@"MFIMAPConnection"8@"MFIMAPResponse"12^{?=i@@I@}16
v20@0:4@"MFIMAPConnection"8@"MFIMAPResponse"12^{?=i@@I@}16
v20@0:4@"MFIMAPConnection"8@"NSMutableData"12@"NSString"16
I12@0:4@"MFIMAPConnection"8
v12@0:4@"MFIMAPConnection"8
B12@0:4@"MFIMAPConnection"8
v20@0:4@"NSMutableArray"8@"NSString"12i16
B16@0:4@8@12
B12@0:4i8
v16@0:4i8B12
@12@0:4L8
@20@0:4@8@12i16
v16@0:4@8B12
B12@0:4@?8
v12@0:4@?8
v28@0:4B8B12d16B24
@32@0:4@8B12B16@20@24^@28
@20@0:4@8B12B16
@16@0:4@8B12
@28@0:4@8@12I16@20i24
v16@0:4@8i12
@16@0:4i8B12
@24@0:4@8@12@16B20
B20@0:4@8@12^@16
@28@0:4@8@12I16@20@24
B16@0:4@8^@12
v16@0:4@8I12
v20@0:4@8@12I16
@24@0:4@8I12d16
v20@0:4d8I16
v20@0:4I8@12@16
i8@0:4
v12@0:4i8
^{__CFArray=}
@"MFIMAPOperationCache"
@"NSRecursiveLock"
@"NSMutableArray"
@"NSLock"
@"NSNumber"
@"NSSet"
v28@0:4L8@12I16@20@24
@"MFIMAPFetchResult"
@"<MFDataConsumer>"
i24@0:4*8L12I16^B20
I20@0:4^{?=i@@I@}8I12^@16
@12@0:4^{?=i@@I@}8
@16@0:4@8^{?=i@@I@}12
@20@0:4@8@12^{?=i@@I@}16
i20@0:4@8@12@16
@36@0:4i8@12@16i20B24@28^@32
@32@0:4@8i12B16@20^@24i28
@28@0:4@8i12B16@20^@24
@16@0:4@8i12
v12@0:4L8
B16@0:4i8@12
@20@0:4@8@12^B16
I20@0:4@8@12^B16
I12@0:4I8
B20@0:4@8B12@16
B24@0:4@8B12{?=II}16
@16@0:4^{?=i@@I@}8@12
B28@0:4@8@12@16@20^@24
@16@0:4B8B12
v16@0:4^Q8^I12
B28@0:4{?=II}8@16B20@24
@16@0:4{?=II}8
@20@0:4{?=II}8@16
@28@0:4@8{_NSRange=II}12I20^I24
@20@0:4@8{_NSRange=II}12
@12@0:4^{_NSZone=}8
@16@0:4^{?=i@@I@}8I12
B16@0:4^{?=i@@I@}8@12
B24@0:4@8@12@16@20
v16@0:4^{?=i@@I@}8I12
@"<MFIMAPMailboxListFilter>"
@"NSMutableSet"
@"NSMutableData"
@"MFInvocationQueue"
{?="holder"@"MFWeakReferenceHolder""delegate"^v"shouldHandleUntaggedResponse"b1"didReceiveResponse"b1"didFinishSelect"b1"didDisconnect"b1"didBeginBodyLoad"b1"didReceiveMoreBodyData"b1"didFinishBodyDataLoad"b1"bodyDataReadSize"b1"setServerMessageCount"b1"setHighestModSequence"b1"willRemoveDelegation"b1"shouldStartIdle"b1}
@"<MFCancelable>"
Q12@0:4I8
v24@0:4@8Q12B20
@12@0:4I8
@24@0:4Q8@16B20
Q8@0:4
L8@0:4
@"MFCountingDataConsumer"
@"MFBaseFilterDataConsumer"
@36@0:4L8@12I16B20{_NSRange=II}24@32
@24@0:4L8@12I16@20
@28@0:4L8@12{_NSRange=II}16@24
@"NSError"
{_NSRange="location"I"length"I}
v16@0:4@8L12
v16@0:4Q8
(?="envelope"@"NSArray""internalDate"@"NSDate""messageSize"I"bodyStructure"@"NSArray""bodySectionInfo"{?="section"@"NSString""startOffset"I"sectionData"@"NSData"}"uid"I"uniqueRemoteId"Q"flags"{?="messageFlags"Q"customFlags"@"NSArray"})
@28@0:4Q8@16I20L24
@"MFMessage"
@"MFMimePart"
@"<MFCollectingDataConsumer>"
@"NSData"
@"MFMessageHeaders"
@16@0:4@8^I12
C8@0:4
@16@0:4i8@12
@24@0:4@8@12@16@20
@24@0:4@8@12@16I20
@28@0:4I8I12@16@20@24
B12@0:4I8
B20@0:4^@8^@12I16
(?="store"{?="trueFlags"@"NSArray""falseFlags"@"NSArray""uids"^{__CFArray}}"append"{?="uid"I"flags"@"NSArray""internalDate"i"size"I}"copy"{?="srcUids"^{__CFArray}"dstUids"^{__CFArray}"destinationMailbox"@"NSString"})
v24@0:4@8@12@16@20
I20@0:4@8@12@16
I24@0:4@8@12@16@20
v16@0:4@8^{?=@@^{__CFDictionary}^{__CFDictionary}^{__CFDictionary}IIi@}12
@"NSFileHandle"
@24@0:4@8@12r*16r*20
r*8@0:4
v12@0:4r*8
B12@0:4^Q8
B12@0:4r*8
B16@0:4r*8r*12
^{__CFArray=}12@0:4B8
@20@0:4r*8r*12i16
@"MFIMAPConnection"
@"MFIMAPResponse"
v20@0:4@8i12@16
v24@0:4I8@12@16@20
(_IMAPResponseData="basic"{?="responseCode"i"responseInfoAndOrUserData"@}"capabilities"@"NSArray""number"Q"flags"@"NSArray""status"{?="mailboxName"@"NSString""entries"@"NSDictionary"}"searchResults"@"NSArray""list"{?="mailboxAttributes"I"separatorAndOrMboxName"@"extraAttributes"@"NSArray"}"fetch"{?="number"Q"items"@"NSArray""modSeqNumber"Q}"quotaRoot"{?="mailboxName"@"NSString""quotaRootNames"@"NSArray"}"quota"{?="quotaRootName"@"NSString""quotas"@"NSArray"}"uidFlags"{?="uids"@"NSString""flagsFetchResult"@"MFIMAPFetchResult""change"b1}"serverInfo"@"NSDictionary""namespace"{?="private"@"NSArray""public"@"NSArray""shared"@"NSArray"}"other"{?="name"@"NSString""parameters"@"NSArray"})
@"MFIMAPResponseConsumer"
@"MFDataHolder"8@0:4
@"MFDataHolder"
@"MFLibraryIMAPStore"
Q12@0:4@8
@"NSMutableIndexSet"
@"NSString"12@0:4@"NSArray"8
v16@0:4@"NSString"8@"NSArray"12
I32@0:4@8@12I16Q20#28
v40@0:4@8^@12^@16^@20@24@28B32^I36
v12@0:4^I8
I56@0:4@8@12@16B20I24I28I32^B36^{_NSRange=II}40^I44^I48^I52
i20@0:4I8@12I16
@16@0:4@8I12
v24@0:4@8I12i16@?20
i16@0:4@8I12
@24@0:4@8I12@16^@20
i20@0:4@8Q12
B20@0:4^{?=@@@@B@@@@II}8@12@16
I12@0:4^{?=@@@@B@@@@II}8
I28@0:4@8@12@16@20@24
I32@0:4@8@12@16@20@24@28
@20@0:4@8@12B16
@28@0:4Q8Q16@24
B16@0:4L8@12
B28@0:4@8{_NSRange=II}12^B20@24
@24@0:4@8^@12B16^B20
B20@0:4B8i12@?16
B24@0:4@8B12i16@?20
B20@0:4@8@12^Q16
v16@0:4L8L12
@"MFIMAPDownloadCache"
@"MFIMAPCommandPipeline"
@"MFCancelationToken"
v16@0:4@"APSConnection"8@"NSData"12
v24@0:4@"APSConnection"8@"NSData"12@"NSString"16@"NSString"20
v16@0:4@"APSConnection"8@"APSIncomingMessage"12
v20@0:4@"APSConnection"8@"NSString"12@"NSDictionary"16
v16@0:4@"APSConnection"8@"APSOutgoingMessage"12
v20@0:4@"APSConnection"8@"APSOutgoingMessage"12@"NSError"16
v16@0:4@"APSConnection"8B12
v12@0:4@"APSConnection"8
v12@0:4@"NSString"8
v16@0:4@"NSString"8@"NSString"12
@"NSData"8@0:4
@"APSConnection"
@"NSCountedSet"
@"NSConditionLock"
i20@0:4@8@12^@16
i24@0:4@8@12i16^@20
@16@0:4B8^@12
@"MFOSXServerIMAPAccount"
@20@0:4@8@12@16
@"CastleIMAPAccount"
@"YahooAccount"
%@ (%@) failed to get auth token: %{public}@
anisetteDataWithError failure: %@ (%.3f sec)
anisetteDataWithError success: %@ (%.3f sec)
Over quota error message: %@
#Warning #CloudSync AnisetteData not found for account: %{public}@ error: %{public}@
#CloudSync Starting request for aliases for account %@.
#CloudSync Response from new alias %@. Status Code: %lu
Data: %@
#CloudSync Alias Data: %@
Email alias request to [%@] failed with error code [%lu]
Email alias requests configured to use [%@], scheduling reprovision
#CloudSync Unable to push new alias data to server %@. Received response code %lu, with error %{public}@.
JSON:%@
#CloudSync response: %@.
JSON: %@
Got a response, but it was not for our tag.  Throwing out the results.
Got invalid value in sequence set
#Warning failed to get client token
*** Unable to determine name for %@
#IMAPFlagChanges removing all changes: %{public}@
#Warning Unselected connection checked back in, mailbox: %@, connection: %@
#Network %@: -[%@ _releaseAllConnectionsAndCallSuper:%@ edgeForcedOnly:%@ ifIdleForTimeInterval:(%.4f) saveOfflineCache:%@]
#Network All connections: %@
#Network EDGE ONLY
#Network Dropping connections: %@
No connection!! What's going on?
%{public}@ deleting messages from mailbox: %{public}@ older than %d days
#IMAPFlagChanges added %@
#IMAPFlagChanges using changes from %@
#IMAPFlagChanges resulting changes are %@
#IMAPFlagChanges removing failed entry %@
#IMAPFlagChanges removing committed entry %@
#IMAPFlagChanges remaining change entries: %@
#IMAPFlagChanges setting commit time %d for change %@
#IMAPFlagChanges setting connection %d for change %@
#aps-push warning, can't find mailbox with name '%@' (%@)
#aps-push failed to generate hash for mailbox named '%@'
#aps-push Setting aps-topic '%@' for account %@
#aps-push account <%@:%p> scheduling push registration connection
#aps-push account %@ forcing push registration connection
#aps-push account %@ will NOT force push registration connection, didRequestPushRegistration: %s, mustRegisterOnNextConnection: %s
#aps-push account %@ has no pushed mailboxes, skipping
#aps-push account %@ last registered for push %.3f seconds ago
#aps-push {mailboxes=%@, topic=%@, version=%d}
#aps-push external push client registration failed: %{public}@
#aps-push %@
#aps-push Received notification for account '%@', will %@handle push
#aps-push warning, %@ got a notification for mailbox %@, but we're not enabled for the appropriate dataclass
#aps-push warning, %@ got a notification for mailbox with hash '%@', but can't find that mailbox.
#aps-push account %@ will NOT start listening for notifications, canRegisterForAPSPush returned NO
#aps-push account %@ will NOT start listening for notifications, battery-saver mode is ON
#aps-push account %@ told to start listening for notifications
#aps-push account %@ did NOT register for push, %s register for push and PCConnectionStyle %s push
#aps-push account %@ told to stop listening for notifications
sending ID command: %@
server response to ID request: %@
server does not support ID extension
#aps-push not registering for push on unauthenticated connection for account %@
#aps-push connection doesn't support XAPPLEPUSHSERVICE for account %@
#aps-push MCC push settings are not set to push (%d != PCStylePush) for account %@
#aps-push account %@ not registering for push
#aps-push failed to get device token while registering for push on account %@
#aps-push account %@ registering for push: {%@}
#aps-push account %@ will send pushes for mailbox '%@'
#aps-push account %@ (version %@) ignoring invalid version in push response '%@'
#aps-push account %@ (version %@) sent unknown push response %@
#aps-push account %@ will NOT push these mailboxes {%@}
#aps-push account %@ will push all requested mailboxes
#aps-push account %@ specified bad version/topic in response: %@
#aps-push account %@ received mailbox responses but version 1 response, ignoring mailboxes
#aps-push account %@ rejected XAPPLEPUSHSERVICE request: %@
server supports deflate compression, sending COMPRESS request
server rejected our COMPRESS request: %@
*** Failed to read initial response from %@
*** Expected untagged initial response from %@
*** Invalid IMAP command %d
#imap-idle connection <%p> received response while idling: %@
#imap-idle connection <%p> starting IDLE state for delegate %@
#imap-idle connection <%p> failed to enter IDLE state: %@
#imap-idle connection <%p> delegate rejected starting IDLE state: %@
#imap-idle connection <%p> leaving IDLE state for delegate: %@
#imap-idle connection <%p> timer fired for delayed IDLE reset after %0.2fs delay: %@
#imap-idle connection <%p> resetting IDLE state: %@
%{public}@
inconsistent esearch counts detected, ignoring esearch capability
#Warning Invalid response from SEARCH command
#Warning %@ claimed to support initial response data, and didn't supply an initial response
IMAP protocol error: %@
IMAP auth failure: %@
*** Unexpected response during authentication: %@
Unhandled response to command %s: %@
MFIMAPConnection was lost during processing of command %s: %@.
uid of message %{public}@ is 0
Unexpected byte %u at position %lu
deserialized offline operation was invalid - skipping
attempt to create an invalid offline operation of type %d with no mailbox name %p
attempt to create an invalid store-flags offline operation: %lu true flags, %lu false flags, %lu uids
attempt to create an invalid copy-message offline operation: %lu srcUids, %lu dstUids, dstMailbox=%p (%lu)
*** Error while creating %@: %{public}@
**** Failed to append to %@
*** Error while copying messages to %@
replaying %lu operations with connection %@
replaying %@
removing failed operation from offline cache: %@
*** Error while selecting %@: %{public}@
*** Warning while parsing %@: %@
Remaining text: <%@>
ERROR: UNKNOWN RESULT: %@ %d
Invalid for response type %d
#Warning caught %@: %@
caught %@: %@
server returned data we don't have a consumer for, might be expected for section %@
We did something bad: we just got back a CLIENTBUG from the server.
#Power [Server Fetch Time] InternalDate=%@
#Power [New Message] subject=%@;
Compacting %lu messages during IMAP sync
[FetchActivity] Search for recent UIDs returned %lu items (success=%@)
[FetchActivity] starting UID sync for %@ (selected mailbox: %@) idRange=%@ limit=%lu topUIDToCompact=%lu topKnownUID=%lu UIDCount=%lu lowUID=%lu highUID=%lu libraryDetailsIndex=%lu libraryDetailsUIDRange=%lu:%lu
[FetchActivity] preserving UID %lu!
[FetchActivity] Compacting %lu (1)
[FetchActivity] Syncing %lu
[FetchActivity] Fetching %lu
[FetchActivity] Compacting %lu (2)
[FetchActivity] _fetchMessagesWithArguments returns %lu
%@: "Connecting..." starting
[FetchActivity] store and connection mailboxes differ: store=%@ connection=%@ (%p, valid: %@)
[FetchActivity] canceling fetch because connection is invalid
[FetchActivity] canceling fetch because mailbox could not be selected
%@: "Connecting..." completed
[FetchActivity] Compacting all messages
[FetchActivity] Compacting messages with UIDs <= %lu
IMAP Account %{public}@ deleting messages from store: %@ older than %d days using connection: %@
-[MFLibraryIMAPStore _dataForMessage:] bad message data
[FetchActivity] performOperationRequiringConnection: mailbox=%@ connection=%p cached=%@ options=%d
Forcing reload of %@ because of UIDVALIDITY change (old:%lu new:%lu)
#imap-idle error occurred while observing conditions for IDLE: %{public}@
#imap-idle scheduling IDLE transition (should-use-idle %@): %@
-[MFLibraryIMAPStore _setFlagsForMessages:] flagsByMessage contains mixed message types
#IMAPFlagChanges applying pending changes for message %u: %@
#IMAPFlagChanges remaining changes from server (connection %u): %@
#Warning unsupported header criterion type %@
#Warning need to handle criterion for IMAP search: %@
#aps-push Unable to open ApplePushService at %@
#aps-push Push service already running.
#aps-push Using %@ APS environment.
#aps-push Starting MFAPSManager.
#aps-push Starting MFAPSManager. Waiting for public token.
#aps-push Stopped MFAPSManager.
#aps-push Start watching topic '%@'
#aps-push Stop watching topic '%@'
#aps-push Swapping registered topic '%@' for topic '%@'
#aps-push Received public token '%@'.
#aps-push received notification on topic '%@', userInfo=%@
#Warning couldn't find our CastleAccount for our sending account: %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
