%@ %@
muted
category
originIdentifier
hasMuted
TB,N
TB,N,V_muted
hasCategory
TB,R,N
T@"NSString",&,N,V_category
hasOriginIdentifier
Ti,N,V_originIdentifier
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
pickedRoute
T@"NACAudioRoute",R,N
availableAudioRoutes
T@"NSArray",R,N
delegate
T@"<NACRoutingControllerDelegate>",W,N
T@"<NACRoutingControllerDelegate>",W,N,V_delegate
enabled
hasEnabled
TB,N,V_enabled
Audio/Video
volumeWarningEnabled
hasVolumeWarningEnabled
TB,N,V_volumeWarningEnabled
v4@?0
<NACVolumeControlTarget-System-(%@)>
<NACVolumeControlTarget-Origin-(%@)>
supportsSecureCoding
TB,R
T@"NSNumber",&,N,V_originIdentifier
pairedDevice
TB,R,N,GisPairedDevice
com.apple.NanoAudioControl
NACVolumeValueDidChangeNotification
NACVolumeControlAvailabilityDidChangeNotification
NACMutedStateDidChangeNotificaton
NACSystemMutedStateDidChangeNotification
NACProminentHapticStateDidChangeNotification
NACEULimitDidChangeNotification
NACHapticIntensityDidChangeNotification
NACVolumeWarningDidChangeNotification
NACAudioRoutesDidChangeNotification
Current
NanoMusicCore
NanoMediaRemote
NanoAudioControl
NanoMusicSync
NanoMediaUI
com.apple.nanomusic
com.apple.NanoAudioControl.XPC
v8@?0@"NSError"4
NACMessageTypeSetVolumeValue
NACMessageTypeVolumeDidChange
NACMessageTypeBeginObservingVolume
NACMessageTypeEndObservingVolume
NACMessageTypeVolumeControlAvailabilityDidChange
NACMessageTypeMutedStateDidChange
NACMessageTypeSetMuted
NACMessageTypeBeginObservingAudioRoutes
NACMessageTypeEndObservingAudioRoutes
NACMessageTypePickAudioRoute
NACMessageTypeAudioRoutesDidChange
NACMessageTypeHapticIntensityDidChange
NACMessageTypeSetHapticIntensity
NACMessageTypeEUVolumeLimitDidChange
NACMessageTypeVolumeWarningDidChange
NACMessageTypeVolumeObservationCancelled
NACMessageTypeRouteObservationCancelled
NACMessageTypeSystemMutedStateDidChange
NACMessageTypeSetSystemMuted
NACMessageTypeProminentHapticStateDidChange
NACMessageTypeSetProminentHapticEnabled
RingtonePreview
volumeControlAvailable
TB,N,GisVolumeControlAvailable,V_volumeControlAvailable
TB,N,GisVolumeWarningEnabled,V_volumeWarningEnabled
TB,N,GisMuted,V_muted
EUVolumeLimit
Tf,N,V_EUVolumeLimit
throttler
T@"NACEventThrottler",&,N,V_throttler
volumeController
T@"MPVolumeController",&,N,V_volumeController
routingController
T@"MPAVRoutingController",&,N,V_routingController
runAssertion
T@"NACRunAssertion",&,N,V_runAssertion
message
T@"PBCodable",&,N,V_message
type
Ti,N,V_type
timeout
Td,N,V_timeout
queueOne
T@"NSString",C,N,V_queueOne
com.apple.private.alloy.audiocontrol.music
com.apple.nanoaudiocontrol.ids.server
v8@?0@"NSArray"4
v8@?0@4
v8@?0i4
v8@?0@"MPAVEndpointRoute"4
v16@?0@"MPAVRoute"4I8^B12
RequestedVolume
ForceVolumeWarning
com.apple.springboard.ringerstate
hasVolumeControlAvailable
TB,N,V_volumeControlAvailable
identifier
hasIdentifier
T@"NSString",&,N,V_identifier
volumeValue
Tf,N,V_volumeValue
observers
T@"NSMutableSet",R,N
audioRoutes
T@"NSArray",&,N,V_audioRoutes
deferredAudioRoutes
T@"NSArray",&,N,V_deferredAudioRoutes
T@"NSMutableSet",&,N,V_observers
timestamp
Td,N,V_timestamp
com.apple.NanoAudioControl.Preview
com.apple.nanoaudiocontrol.NACXPCServer
v16@?0@4@8^B12
v12@?0i4@"NSError"8
VolumeRecords
HapticIntensity
SystemMutedState
ProminentHapticState
v16@?0@"NSString"4@"_NACAudioRoutesRecord"8^B12
T@"NACAudioRoute",R,N,V_pickedRoute
T@"NSArray",R,N,V_availableAudioRoutes
v8@?0f4
v8@?0B4
T@"<NACVolumeControllerDelegate>",W,N
TB,R,N,GisVolumeControlAvailable
TB,R,N,GisVolumeWarningEnabled
TB,R,N,GisMuted
Tf,R,N
hapticIntensity
Tf,N
systemMuted
TB,N,GisSystemMuted
prominentHapticEnabled
TB,N,GisProminentHapticEnabled
T@"<NACVolumeControllerDelegate>",W,N,V_delegate
TB,R,N,GisVolumeControlAvailable,V_volumeControlAvailable
TB,R,N,GisVolumeWarningEnabled,V_volumeWarningEnabled
TB,R,N,GisMuted,V_muted
Tf,R,N,V_EUVolumeLimit
TB,N,GisSystemMuted,V_systemMuted
TB,N,GisProminentHapticEnabled,V_prominentHapticEnabled
T@"NSMutableArray",&,N,V_audioRoutes
com.apple.nanoaudiocontrol.ids.client.outgoing
com.apple.nanoaudiocontrol.ids.client.dispatch
T@"<NACIDSClientDelegate>",W,N,V_delegate
com.apple.NanoAudioControl.EndpointObserver
v8@?0^{__CFArray=}4
sharedObserver
T@"NACEndpointObserver",R,N
uniqueIdentifier
routeName
supportsVolumeControl
picked
routeType
hasUniqueIdentifier
T@"NSString",&,N,V_uniqueIdentifier
hasRouteName
T@"NSString",&,N,V_routeName
hasSupportsVolumeControl
TB,N,V_supportsVolumeControl
hasPicked
TB,N,V_picked
hasRouteType
Ti,N,V_routeType
Unknown
Speaker
Headphones
AirPods
Powerbeats
BeatsSolo
BeatsStudio
BeatsX
CarPlay
AppleTV
HomePod
AirTunes
HomePodPair
(unknown: %i)
eventBlock
T@?,C,N,V_eventBlock
minimumDelay
Td,N,V_minimumDelay
value
T@,&,N,V_value
NACVolumeControllerLocal
v8@?0@"NSNumber"4
DemoVolume
Tf,N,V_hapticIntensity
intensity
hasIntensity
Tf,N,V_intensity
hasEUVolumeLimit
eUVolumeLimit
Tf,N,V_eUVolumeLimit
%@ - %@
T@"NSString",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_routeName
Ti,R,N,V_routeType
TB,R,N,V_supportsVolumeControl
TB,R,N,GisPicked,V_picked
VolumeValue-%@
VolumeControlAvailability-%@
MutedState-%@
EUVolumeLimit-%@
VolumeWarning-%@
AudioRoutes-%@
Haptic
RouteObservationCancelled-%@
VolumeObservationCancelled-%@
hasVolumeValue
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithBool:
setObject:forKey:
numberWithInt:
setCategory:
class
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
setMuted:
setHasMuted:
hasMuted
hasCategory
setOriginIdentifier:
setHasOriginIdentifier:
hasOriginIdentifier
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
muted
category
originIdentifier
_category
_originIdentifier
_muted
_has
setDiscoveryMode:
setDelegate:
availableRoutes
countByEnumeratingWithState:objects:count:
audioRouteWithMPAVRoute:
isEqualToAudioRoute:
pickRoute:
pickedRoute
addObject:
routingControllerDidUpdateAvailableRoutes:
routingControllerFailedToPickRoute:
respondsToSelector:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
initWithAudioCategory:
beginObservingRoutes
endObservingRoutes
pickAudioRoute:
availableAudioRoutes
delegate
_routingController
_audioCategory
_delegate
setEnabled:
setHasEnabled:
hasEnabled
enabled
_enabled
alloc
volumeControlTargetWithCategory:
initWithVolumeControlTarget:
isPairedDevice
localVolumeControllerWithAudioCategory:
proxyVolumeControllerWithAudioCategory:
proxyVolumeControllerWithTarget:
demoVolumeControllerWithAudioCategory:
setVolumeWarningEnabled:
setHasVolumeWarningEnabled:
hasVolumeWarningEnabled
volumeWarningEnabled
_volumeWarningEnabled
initWithOriginIdentifier:category:
setWithObjects:
containsObject:
decodeObjectOfClass:forKey:
encodeObject:forKey:
volumeControlTargetWithOriginIdentifier:
_isValidOriginIdentifier:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_createConnection
beginObservingVolumeForTarget:
removeObject:
beginObservingAudioRoutesForCategory:
_proxy
endObservingVolumeForTarget:
volumeValueForTarget:result:
volumeControlAvailabilityForTarget:result:
mutedStateForTarget:result:
hapticIntensity:
prominentHapticEnabled:
systemMutedState:
EULimitForTarget:result:
volumeWarningForTarget:result:
setVolumeValue:target:
setMuted:target:
setHapticIntensity:
setProminentHapticEnabled:
setSystemMuted:
audioRoutesForCategory:result:
endObservingAudioRoutesForCategory:
pickAudioRouteWithIdentifier:category:
playAudioAndHapticPreview
playProminentHapticPreview
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
initWithMachServiceName:options:
setRemoteObjectInterface:
_resumeVolumeObservingIfNecessary
_resumeRouteObservingIfNecessary
setInterruptionHandler:
invalidate
setInvalidationHandler:
resume
localizedDescription
remoteObjectProxyWithErrorHandler:
sharedClient
_xpcConnection
_xpcConnectionQueue
_routeObservingCategories
_volumeObservingTargets
arrayWithObjects:count:
initWithVolumeAudioCategories:
beginObservingHapticIntensity
beginObservingSystemMutedState
beginObservingProminentHapticState
gizmoServer
companionServer
_idsServer
isVolumeControlAvailable
setVolumeControlAvailable:
isVolumeWarningEnabled
isMuted
EUVolumeLimit
setEUVolumeLimit:
throttler
setThrottler:
volumeController
setVolumeController:
routingController
setRoutingController:
_volumeControlAvailable
_EUVolumeLimit
_throttler
_volumeController
runAssertion
setRunAssertion:
_runAssertion
message
setMessage:
type
setType:
timeout
setTimeout:
queueOne
setQueueOne:
_message
_type
_queueOne
_timeout
initWithService:
_handleSetVolume:
setProtobufAction:forIncomingRequestsOfType:
_handleSetMuted:
_handleSetHapticIntensity:
_handleBeginObservingVolume:
_handleEndObservingVolume:
_handleBeginObservingAudioRoutes:
_handleEndObservingAudioRoutes:
_handlePickAudioRoute:
_handleSetSystemMuted:
_handleSetProminentHapticEnabled:
addDelegate:queue:
_beginObservingSystemVolume
defaultCenter
removeObserver:
dealloc
_beginObservingHapticIntensity
_beginObservingSystemMutedState
_beginObservingProminentHapticState
data
initWithData:
_handleBeginObservingSystemVolume
_handleBeginObservingProxyVolumeForTarget:
objectForKeyedSubscript:
removeObjectForKey:
count
volumeValue
sharedAVSystemController
allowUserToExceedEUVolumeLimit
setVolumeValue:
isEqualToString:
server
_setWatchPrefersSalientToneAndVibration:
_updateProminentHapticState
intensity
setVibeIntensityTo:
setObject:forKeyedSubscript:
_cancelRouteObservationForCategory:
identifier
uniqueIdentifier
fetchAvailableRoutesWithCompletionHandler:
_hasRequestedVolumeAtLeastOnce
_setRequestedVolumeAtLeastOnce
_sendCurrentObservingSystemVolumeValues
_cancelSystemVolumeObservation
setVolumeAudioCategory:
initWithDataSource:
initWithQueue:
setMinimumDelay:
floatValue
_sendVolumeValue:target:
setEventBlock:
volumeControlIsAvailable
_sendVolumeControlAvailability:target:
_sendVolumeWarningEnabled:target:
_sendEUVolumeLimit:target:
_sendHapticIntensity:
_hapticIntensityDidChangeNotification:
addObserver:selector:name:object:
_sendCurrentHapticIntensityValue
_updateSystemMutedState
_sendSystemMutedState:
updateProminentHapticState
_watchPrefersSalientToneAndVibration
_sendProminentHapticState:
sharedObserver
_beginObservingProxyVolumeForTarget:withEndpointRoute:
fetchRouteForOriginIdentifier:completion:
initWithGroupRoute:outputDeviceRoute:
_cancelProxyVolumeObservationForTarget:
getVibeIntensity:
_sendMessage:type:timeout:queueOne:retry:
intValue
_targetForVolumeController:
numberWithFloat:
setValue:
_sendMutedState:target:
volumeWarningState
dataSource
volumeAudioCategory
groupRoute
endpoint
routeName
isPicked
setSupportsVolumeControl:
enumerateObjectsUsingBlock:
buffersFromAudioRoutes:
mutableCopy
setAudioRoutes:
userInfo
_shouldForceVolumeWarning
setIntensity:
initWithProtobufData:type:isResponse:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
initWithDictionary:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
length
code
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
volumeController:volumeControlAvailableDidChange:
volumeController:volumeControlLabelDidChange:
volumeController:volumeValueDidChange:
volumeController:mutedStateDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
_hapticThrottler
_systemVolumeRunAssertion
_proxyVolumeRunAssertion
_systemVolumeObservers
_proxyVolumeObservers
_routesObservers
_messageRecords
_volumeAudioCategories
_idsService
_serialQueue
_shouldPickRouteAfterFetching
_shouldObserveHapticIntensity
_shouldObserveSystemMutedState
_isSystemMuted
_systemMuteToken
_shouldObserveProminentHapticState
_isProminentHapticEnabled
setHasVolumeControlAvailable:
hasVolumeControlAvailable
volumeControlAvailable
setIdentifier:
hasIdentifier
_identifier
decodeFloatForKey:
decodeBoolForKey:
encodeFloat:forKey:
encodeBool:forKey:
observers
_observers
_volumeValue
audioRoutes
deferredAudioRoutes
setDeferredAudioRoutes:
setObservers:
timestamp
setTimestamp:
_audioRoutes
_deferredAudioRoutes
_timestamp
initWithType:
alertWithConfiguration:
initWithDomain:
synchronize
_cachedVolumeRecords
_cachedHapticIntensity
_cachedSystemMutedState
_cachedProminentHapticState
initWithMachServiceName:
setExportedInterface:
setExportedObject:
_cleanupConnection:
currentConnection
_beginObservingVolumeForTarget:connection:
_volumeRecordForTarget:
_aggregatedCountOfObserversForTarget:
enumerateKeysAndObjectsUsingBlock:
_endObservingVolumeForTarget:connection:
playWithCompletionHandler:
_audioRoutesRecordForCategory:
timeIntervalSinceReferenceDate
_endObservingAudioRoutesForCategory:connection:
_persistVolumeRecords
_persistHapticIntensity
_persistProminentHapticState
_persistSystemMutedState
_scheduleDeferredAudioRoutesUpdate:category:
_updateAudioRoutes:category:
_cancelDeferredAudioRoutesUpdate
objectForKey:
unarchivedObjectOfClasses:fromData:error:
dictionaryWithCapacity:
allKeys
archivedDataWithRootObject:requiringSecureCoding:error:
boolForKey:
_routeObservationCategoriesForConnection:
listener:shouldAcceptNewConnection:
client:volumeValue:didChangeForTarget:
client:volumeControlAvailable:didChangeForTarget:
client:mutedState:didChangeForTarget:
client:EULimit:didChangeForTarget:
client:volumeWarningEnabled:didChangeForTarget:
client:volumeObservationCancelledForTarget:
client:audioRoutes:didChangeForCategory:
client:routeObservationCancelledForCategory:
client:systemMutedStateDidChange:
client:hapticIntensityDidChange:
client:prominentHapticStateDidChange:
audioAndHapticPreviewHasCompletedPlaying
_internalQueue
_audioAndHapticPreviewQueue
_domainAccessor
_volumeRecords
_audioRoutesRecords
_xpcListener
_idsClient
_hapticIntensity
_prominentHapticEnabled
_systemMutedState
_audioRouteDeferTimer
_alert
_audioAndHapticPreviewIsPlaying
_prominentHapticPreviewIsPlaying
_applicationDidBecomeActiveNotification:
_applicationWillResignActiveNotification:
_audioRoutesDidChange
audioRoutesFromBuffers:
_xpcClient
_isObserving
_availableAudioRoutes
_pickedRoute
_setVolumeValue:
_setHapticIntensity:
endObservingVolume
_volumeControlAvailabilityDidChange
_volumeValueDidChange
_mutedStateDidChange
_systemMutedStateDidChange
_prominentHapticStateDidChange
_hapticIntensityDidChange
_volumeWarningDidChange
_EUVolumeLimitDidChange
sharedApplication
applicationState
_cancelSetVolumeTimer
_volumeTimout
_scheduleTimeoutWithBlock:
_notifyDelegateVolumeChanged
_prominentHapticTimeout
_notifyDelegateProminentHapticStateChanged
_cancelSetProminentHapticTimer
_hapticTimeout
_notifyDelegateHapticChanged
_cancelSetHapticTimer
volumeControllerDidUpdateVolumeControlAvailibility:
volumeControllerDidUpdateMutedState:
_notifyDelegateSystemMutedStateChanged
volumeControllerDidUpdateEUVolumeLimit:
volumeControllerDidUpdateVolumeWarningEnabled:
volumeControllerDidUpdateVolumeValue:
volumeControllerDidUpdateHapticIntensity:
volumeControllerDidUpdateSystemMutedState:
volumeControllerDidUpdateProminentHapticState:
beginObservingVolume
beginObservingHaptics
endObservingHaptics
hapticIntensity
isSystemMuted
isProminentHapticEnabled
_ignoreHapticObservation
setVolumeValue:muted:overrideEULimit:
_target
_volumeThrottler
_setVolumeTimer
_setHapticTimer
_setProminentHapticTimer
_lastReceivedVolumeValue
_lastRecievedHapticIntensity
_lastReceivedProminentHapticEnabled
_systemMuted
removeAllObjects
objectAtIndex:
initWithCapacity:
addAudioRoutes:
audioRoutesCount
clearAudioRoutes
audioRoutesAtIndex:
audioRoutesType
_handleVolumeValueDidChange:
_handleVolumeControlAvailabilityDidChange:
_handleMutedStateDidChange:
_handleHapticIntensityDidChange:
_handleEUVolumeLimitDidChange:
_handleVolumeWarningDidChange:
_handleAudioRoutesDidChange:
_handleVolumeObservationCancelled:
_handleRouteObservationCancelled:
_handleSystemMutedStatedDidChange:
_handleProminentHapticStateDidChange:
_sendMessage:type:timeout:queueOne:priority:
eUVolumeLimit
_idsDispatchQueue
_idsOutgoingQueue
initWithEndpoint:
_discoverySession
_callbackToken
_initialFetchGroup
localRoutingControllerWithAudioCategory:
proxyRoutingControllerWithAudioCategory:
companionRoutingControllerWithAudioCategory:
setUniqueIdentifier:
setRouteName:
hasUniqueIdentifier
hasRouteName
setHasSupportsVolumeControl:
hasSupportsVolumeControl
setPicked:
setHasPicked:
hasPicked
routeType
setRouteType:
setHasRouteType:
hasRouteType
routeTypeAsString:
StringAsRouteType:
supportsVolumeControl
picked
_routeName
_routeType
_uniqueIdentifier
_picked
_supportsVolumeControl
copy
_fire
cancel
eventBlock
minimumDelay
value
_lastUpdateTime
_timer
_queue
_eventBlock
_value
_minimumDelay
_updateMutedStateFromVolumeController:
_updateVolumeState
endObservingHapticIntensity
endObservingProminentHapticState
playPreview
_hapticIntensityDidChange:
removeObserver:name:object:
updateVolumeValue
updateVolumeWarningState
_volumeSetHistory
_validCachedMutedValue
_shouldIgnoreHaptics
_monitoringHaptics
_persistVolumeValue:
_setNeedsVolumeReload
_volumeDictionary
_defaultsThrottler
setHasIntensity:
hasIntensity
_intensity
setHasEUVolumeLimit:
hasEUVolumeLimit
_eUVolumeLimit
_routeTypeFromMPAVRoute:
routeUID
initWithMPAVRoute:
_routeTypeFromRouteBufferType:
audioRouteFromBuffer:
buffer
_routeBufferTypeFromRouteType:
routeSubtype
isAirpodsRoute
isPowerbeatsRoute
isBeatsSoloRoute
isBeatsStudioRoute
isBeatsXRoute
isCarplayRoute
isAppleTVRoute
isHomePodRoute
isStereoPair
setHasVolumeValue:
hasVolumeValue
NACMutedMessage
NSCopying
NACRoutingControllerLocal
MPAVRoutingControllerDelegate
NSObject
NACRoutingController
NACProminentHapticStateMessage
NACVolumeController
NACVolumeWarningMessage
NACProxyVolumeControlTarget
NSSecureCoding
NSCoding
NACCategoryMessage
NACXPCInterface
NACXPCClient
NACDaemonServer
_NACVolumeObserverRecord
_NACRoutesObserverRecord
_NACIDSMessageRecord
NACIDSServer
IDSServiceDelegate
MPVolumeControllerDelegate
NACVolumeControlAvailabilityMessage
NACPickAudioRouteMessage
_NACVolumeRecord
_NACAudioRoutesRecord
NACXPCServer
NSXPCListenerDelegate
NACIDSClientDelegate
NACRoutingControllerProxy
NACVolumeControllerProxy
NACAudioRoutesMessage
NACIDSClient
NACEndpointObserver
NACAudioRouteBuffer
NACRunAssertion
NACEventThrottler
NACOriginIdentifierMessage
NACVolumeControllerLocal
NACVolumeControllerDemo
NACHapticIntensityMessage
NACEUVolumeLimitMessage
NACAudioRoute
NACVolumeValueMessage
@12@0:4^{_NSZone=}8
v12@0:4B8
B8@0:4
v12@0:4i8
@8@0:4
B12@0:4@8
v12@0:4@8
I8@0:4
v8@0:4
i8@0:4
@"NSString"
{?="originIdentifier"b1"muted"b1}
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@8@12
v16@0:4@8B12
v12@0:4@"MPAVRoutingController"8
v16@0:4@"MPAVRoutingController"8@"NSError"12
v16@0:4@"MPAVRoutingController"8@"NSArray"12
v16@0:4@"MPAVRoutingController"8@"MPAVRoute"12
v16@0:4@"MPAVRoutingController"8B12
@12@0:4@8
@12@0:4@"NSString"8
v12@0:4@"NACAudioRoute"8
@"NACAudioRoute"8@0:4
@"NSArray"8@0:4
@"<NACRoutingControllerDelegate>"8@0:4
v12@0:4@"<NACRoutingControllerDelegate>"8
@"MPAVRoutingController"
@"<NACRoutingControllerDelegate>"
{?="enabled"b1}
{?="originIdentifier"b1"volumeWarningEnabled"b1}
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@16@0:4@8@12
@"NSNumber"
v16@0:4@8@?12
v16@0:4f8@12
v16@0:4B8@12
v12@0:4@?8
v12@0:4f8
v12@0:4@"NACProxyVolumeControlTarget"8
v16@0:4@"NACProxyVolumeControlTarget"8@?<v@?f>12
v16@0:4@"NACProxyVolumeControlTarget"8@?<v@?B>12
v16@0:4f8@"NACProxyVolumeControlTarget"12
v16@0:4B8@"NACProxyVolumeControlTarget"12
v12@0:4@?<v@?B>8
v12@0:4@?<v@?f>8
v12@0:4@"NSString"8
v16@0:4@"NSString"8@?<v@?@"NSArray">12
v16@0:4@"NSString"8@"NSString"12
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@"NACIDSServer"
f8@0:4
@"NACEventThrottler"
@"MPVolumeController"
@"NACRunAssertion"
d8@0:4
v16@0:4d8
@"PBCodable"
v28@0:4@8@12@16@20@24
v32@0:4@8@12@16@20@24@28
v28@0:4@8@12@16B20@24
v32@0:4@8@12@16B20@24@28
v24@0:4@8@12@16@20
v20@0:4@8@12@?16
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
v16@0:4@8f12
v16@0:4@8i12
v16@0:4@"MPVolumeController"8B12
v16@0:4@"MPVolumeController"8@"NSString"12
v16@0:4@"MPVolumeController"8f12
v16@0:4@"MPVolumeController"8i12
v32@0:4@8i12d16@24B28
@"NSMutableDictionary"
@"NSArray"
@"IDSService"
{?="originIdentifier"b1"volumeControlAvailable"b1}
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v20@0:4@8f12@16
v20@0:4@8B12@16
v20@0:4@8@12@16
v20@0:4@"NACIDSClient"8f12@"NACProxyVolumeControlTarget"16
v20@0:4@"NACIDSClient"8B12@"NACProxyVolumeControlTarget"16
v16@0:4@"NACIDSClient"8@"NACProxyVolumeControlTarget"12
v20@0:4@"NACIDSClient"8@"NSArray"12@"NSString"16
v16@0:4@"NACIDSClient"8@"NSString"12
v16@0:4@"NACIDSClient"8B12
v16@0:4@"NACIDSClient"8f12
i12@0:4@8
@"NPSDomainAccessor"
@"NSXPCListener"
@"NACIDSClient"
@"NSObject<OS_dispatch_source>"
@"TLAlert"
@"NACXPCClient"
@"NACAudioRoute"
@"<NACVolumeControllerDelegate>"8@0:4
v12@0:4@"<NACVolumeControllerDelegate>"8
v20@0:4f8B12B16
@12@0:4@?8
@"NACProxyVolumeControlTarget"
@"<NACVolumeControllerDelegate>"
@12@0:4I8
@"NSMutableArray"
v32@0:4@8i12d16@24i28
@"<NACIDSClientDelegate>"
@"NSObject<OS_dispatch_group>"
@12@0:4i8
{?="routeType"b1"picked"b1"supportsVolumeControl"b1}
@?8@0:4
{?="originIdentifier"b1}
@"NSCountedSet"
{?="intensity"b1}
{?="eUVolumeLimit"b1"originIdentifier"b1}
i12@0:4i8
{?="originIdentifier"b1"volumeValue"b1}
Failed to create proxy NACVolumeController with invalid target: %@
XPC connection interrupted
XPC connection invalidated
Error getting proxy object: %@
[NACIDS] Handle end observing system volume
[NACIDS] Handle end observing volume for target: %@
[NACIDS] End observing volume for target: %@
[NACIDS] Received attempt to end observing volume for target (%@), but observing was not in progress
[NACIDS] Handle set volume
[NACIDS] Requested value: %f for category: %@
[NACIDS] Requested value: %f for target: %@
[NACIDS] Handle set muted for category: %@
[NACIDS] Handle set muted for target: %@
[NACIDS] Handle set system muted
[NACIDS] Handle set prominent haptic enabled
[NACIDS] Handle set haptic intensity
[NACIDS] Handle begin observing audio routes
[NACIDS] Received attempt to begin observing audio routes for category [%@], but observing had already begun
[NACIDS] Begin observing routes for category: %@
[NACIDS] Route observation of category [%@] has been active for 30 seconds, cancelling and informing client
[NACIDS] Handle end observing audio routes
[NACIDS] End observing audio routes for category: %@
[NACIDS] Received attempt to end observing audio routes for category [%@], but observing was not in progress
[NACIDS] Handle pick audio route
[NACIDS] Pick audio route with identifier: %@, category: %@
[NACIDS] Found audio route, attempting to pick
[NACIDS] Couldn't find audio route to pick
[NACIDS] Received attempt to pick audio route for category [%@], but observing was not in progress
[NACIDS] Handle begin observing volume
[NACIDS] Volume observation has been holding a run assertion for 30 seconds, cancelling and informing client
[NACIDS] Observing volume for category: %@
[NACIDS] Observing haptic intensity
[NACIDS] Observing system mute
[NACIDS] Observing prominent haptic enabled
[NACIDS] Handle begin observing volume for target: %@
[NACIDS] Endpoint route doesn't exist for target: %@
[NACIDS] Last proxy volume observer cancelled. Cancelling proxy volume run assertion.
[NACIDS] Volume value for target %@ did change: %f
[NACIDS] Volume control availability for target %@ did change: %d
[NACIDS] Volume muted state for target %@ did change: %d
[NACIDS] EU limit for target %@ did change: %f
[NACIDS] Volume warning state for target %@ did change: %ld
[NACIDS] Available routes updated
[NACIDS] -> %@
[NACIDS] Haptic intensity changed
[NACIDS] Sending system volume value: %f for target: %@
[NACIDS] Sending system volume availability: %@ for target: %@
[NACIDS] Sending system EU volume limit: %f for target: %@
[NACIDS] Sending system volume warining enabled state: %d for category: %@
[NACIDS] Sending system muted state: %d for target: %@
[NACIDS] Failed to request delivery of IDS message, type: %@, queueOne: %@, identifier: %@, payload size: %tu, error: %@
[NACIDS] Successfully requested delivery of IDS message, type: %@, queueOne: %@, identifier: %@, payload size: %tu
[NACIDS] Successfully sent message (ID: %@).
[NACIDS] Failed to send message (ID: %@) with error "%@".
[NACXPC] XPC connection invalidated
[NACXPC] XPC connection interrupted
[NACXPC] Accepted new XPC connection
[NACXPC] Received request to begin observing volume for %@
[NACXPC] Sending IDS beginObservingVolume request for %@ because first observer is added
[NACXPC] Received request to end observing volume for %@
[NACXPC] Sending IDS endObservingVolume request for %@ because last observer is removed
Audio route cache expired, waiting for an update from companion
[NACXPC] Existing route list is larger, scheduling deferred update
[NACXPC] Got IDS volume observation cancelled message for %@
[NACXPC] Still have %ld observers. Resending IDS beginObservingVolume request for %@
[NACXPC] Failed to unarchive cached volume records due to %@
[NACXPC] Failed to archive volumeRecords due to %@
VolumeControllerProxy begin observing volume for target: %@
VolumeControllerProxy end observing volume for target: %@
Setting volume: %f for target: %@
Received volume value update: %f for target: %@
VolumeControllerProxy begin observing volume for target (%@) due to re-entering foreground
VolumeControllerProxy end observing volume for target (%@) due to entering background
[NACIDS] Handle volume change for target: %@
[NACIDS] Handle volume availability for target: %@
[NACIDS] Handle muted state for target: %@
[NACIDS] Handle haptic intensity change
[NACIDS] Handling EU limit change for target: %@
[NACIDS] Handling volume warning change for target: %@
[NACIDS] Handle audio routes changed
[NACIDS] Handle volume observation cancelled for target: %@
[NACIDS] Handle route observation cancelled
[NACIDS] Handle system muted state did change
[NACIDS] Handle prominent haptic state did change
NACEndpointObserver got initial updates for MRAVEndpoints!
333?
?333?
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
