init
release
dealloc
initWithServices:needToReport:service:
update
report
block
setBlock:
_update
_report
_block
copy
sendMessageToClient:timestamp:category:type:payload:
initWithAggregationBlock:
_aggregationBlock
objectForKeyedSubscript:
intValue
alloc
initWithMachServiceName:options:
setSessionInfo:userInfo:frameworksToCheck:hasAggregationBlock:
startConfigWithCompletionHandler:
fetchStatesWithUserInfo:completionHandler:
fetchDisplayURL:
sendMessageWithDictionary:reply:
flushMessagesWithCompletion:
finishSessionGracefully
uploadFileAtPath:extensionToken:completionHandler:
uploadLogData:completionHandler:
sendMessageWithSessionInfo:userInfo:category:type:payload:reply:
updateSharedDataWithDictionary:
updateSharedDataForKey:value:
setDigestKey:algorithm:
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedInterface:
autorelease
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
resume
description
UTF8String
remoteObjectProxyWithErrorHandler:
initWithDelegate:
initWithSessionInfo:userInfo:frameworksToCheck:aggregationBlock:
finishSession
retain
invalidate
count
compare:
stringWithFormat:
messageSentDelegate
didSendMessageForReportingClient:event:
respondsToSelector:
countByEnumeratingWithState:objects:count:
numberWithUnsignedShort:
setObject:forKeyedSubscript:
numberWithInt:
sendMessageWithDictionary:error:
notifyMessageWasSent:
unsignedIntValue
isWhitelistedEvent:
isBlacklistedEvent:
initWithSuiteName:
class
setObject:forKey:
objectForKey:
initWithDictionary:
numberWithBool:
remoteObjectProxy
isKindOfClass:
initWithObjectsAndKeys:
regeneratePersistentIdentifierForDNU:
getPersistentIdentifierForDNU:
sendOneMessageWithSessionInfo:userInfo:category:type:payload:error:
newHierarchyTokenFromParentToken:
aboutToDealloc
initWithSessionInfo:userInfo:frameworksToCheck:
setMessageSentDelegate:
startConfigurationWithCompletionHandler:
fetchReportingStatesWithUserInfo:fetchComplete:
setMessageLoggingBlock:
sendMessageWithCategory:type:payload:error:
flushMessages
messageLoggingBlock
_reportingQueue
_reportingPeriodicTasksQueue
_loggingBlock
_connection
_timer
_counter
_periodicServiceDict
_enabledBackendNames
_whitelistedEvents
_blacklistedEvents
_strongDeallocNotifier
_weakDeallocNotifier
_weakMessageSentDelegate
allKeys
integerValue
sortedArrayUsingComparator:
dictionaryWithObjects:forKeys:count:
_myPeriodicTask:type:intervalMultiplier:updateTimeout:
numberWithUnsignedInt:
removeObjectForKey:
startLogTimerWithInterval:reportingMultiplier:category:type:
stopLogTimer
registerPeriodicTaskForModule:needToUpdate:needToReport:serviceBlock:
unregisterPeriodTaskForModule:
containsObject:
fileSystemRepresentation
serverSupportsFileUpload
uploadFileWithURL:completionHandler:
uploadDataArray:completionHandler:
code
userInfo
errorWithDomain:code:userInfo:
addEntriesFromDictionary:
addObjectsFromArray:
_delegate
UpdateAndReportServices
RTCReportingAggregationObject
ClientSessionReplyInterface
ClientSessionInterface
RTCReporting
RTCReportingDeallocNotifierDelegate
RealtimeStats
FileUpload
ENCRYPTION
RTCReportingDeallocNotifier
@20@0:4B8B12@?16
v8@0:4
B8@0:4
@?8@0:4
v12@0:4@?8
v32@0:4@8d12S20S24@28
v32@0:4@"NSDictionary"8d12S20S24@"NSDictionary"28
@12@0:4@?8
v24@0:4@8@12@16B20
v16@0:4@8@?12
v20@0:4@8*12@?16
v32@0:4@8@12S16S20@24@?28
v12@0:4@8
v16@0:4@8@12
v16@0:4@8i12
v24@0:4@"NSDictionary"8@"NSDictionary"12@"NSArray"16B20
v12@0:4@?<v@?@"NSArray"@"NSArray"@"NSArray">8
v16@0:4@"NSDictionary"8@?<v@?@"NSArray"@"NSArray"@"NSArray">12
v12@0:4@?<v@?@"NSString">8
v16@0:4@"NSDictionary"8@?<v@?@"NSString">12
v12@0:4@?<v@?@"NSString"@"NSError">8
v20@0:4@"NSURL"8*12@?<v@?B>16
v16@0:4@"NSArray"8@?<v@?B@"NSError">12
v32@0:4@"NSDictionary"8@"NSDictionary"12S16S20@"NSDictionary"24@?<v@?@"NSString">28
v12@0:4@"NSDictionary"8
v16@0:4@"NSString"8@"NSObject"12
v16@0:4@"NSData"8i12
v12@0:4B8
@12@0:4B8
B32@0:4@8@12S16S20@24^@28
@12@0:4@8
@24@0:4@8@12@16@?20
@20@0:4@8@12@16
@8@0:4
Vv8@0:4
B12@0:4S8
B24@0:4S8S12@16^@20
B16@0:4@8^@12
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"NSObject<OS_dispatch_source>"
@"NSMutableDictionary"
@"NSArray"
@"RTCReportingDeallocNotifier"
v28@0:4S8S12i16Q20
v24@0:4i8i12S16S20
B24@0:4I8B12B16@?20
B12@0:4I8
B16@0:4@8@?12
B16@0:4@8i12
@"<RTCReportingDeallocNotifierDelegate>"
update
TB,R,V_update
report
TB,R,V_report
block
T@?,C,V_block
dashboard
upload_server
splunk
gonzo
power
EnableFlag
ComponentType
ClientVersion
SessionID
BatchEvents
RequireUserDict
HierarchyToken
_clientName
_serviceName
LogData
StartTime
EndTime
RTCReportingErrorDomain
ParametersCategory
ParametersType
ParametersPayload
ParametersFlag
token
level
mach-lookup
com.apple.rtcreportingd
v4@?0
v8@?0@"NSError"4
com.apple.RTCReporting.main
com.apple.RTCReporting.PeriodicTask
v16@?0@"NSArray"4@"NSArray"8@"NSArray"12
URL not available
URL for the session is: %@
v8@?0@"NSString"4
v12@?0@"NSString"4@"NSError"8
com.apple.RTCReporting.sendOneMessageQueue
messageSentDelegate
T@"<RTCReportingMessageSentNotifier>",N
messageLoggingBlock
T@?,C,N,V_loggingBlock
i12@?0@4@8
com.apple.rtcreporting.upload
v8@?0B4
v12@?0B4@"NSError"8
v28@?0@"NSDictionary"4d8S16S20@"NSDictionary"24
v8@?0@"NSArray"4
Missing mandatory parameter 'category'
Missing mandatory parameter 'type'
uuidRespectDNU
uuidOverrideDNU
com.apple.rtcreporting
0Effffff
sendMessageToClient: %u, %u
sendMessageToClient: Exception during invocation of aggregation block. Disabling aggregation
startLogging: Client starts logging...
initWithSessionInfo: the session is disabled
initWithSessionInfo: XPC not entitled, %d
initWithSessionInfo: Failed to connect to daemon
initWithSessionInfo: XPC connection invalidated
initWithSessionInfo: XPC connection interrupted
initWithSessionInfo: Failed to get remote object proxy: %s
initWithSessionInfo: Failed to create reporting queue
aboutToDealloc: RTCReporting client session %p is about to dealloc
Message Sent Delegate is set to %x:
Message Sent Delegate reads %x:
startConfigurationWithCompletionHandler: Failed to get remote object proxy: %s
Cached %d enabled backends, (%@, %@) listed events
fetchReportingStatesWithUserInfo: Failed to get remote object proxy: %s
setMessageLoggingBlock: called
notifyMessageWasSent: called
Event %u is filtered by storebag
sendMessageWithDictionary: Failed to get remote object proxy: %s
sendMessageWithDictionary: %s
flushMessages:
flushMessagesWithCompletion: Failed to get remote object proxy: %s
flushMessagesWithCompletion: flush failed with error '%s'
flushMessagesWithCompletion: flushed session successfully with reply %s
finishSession: Failed to get remote object proxy: %s
updateSharedDataWithDictionary: Failed to get remote object proxy: %s
updateSharedDataForKey: Failed to get remote object proxy: %s
regeneratePersistentIdentifierForDNU: Set new value for %s: %s
getPersistentIdentifierForDNU: The value for %s: %s
sendOneMessageWithSessionInfo: Failed to connect to daemon
sendOneMessageWithSessionInfo: XPC connection invalidated
sendOneMessageWithSessionInfo: XPC connection interrupted
sendOneMessageWithSessionInfo: Failed to get remote object proxy
_myPeriodicTask: Started RT periodic task
_myPeriodicTask: Timeout scheduling RT metrics report tasks
_myPeriodicTask: Timeout during periodic tasks metrics collection. Not all stats will be reported
_myPeriodicTask: All RT metrics collected
_myPeriodicTask: Sent realtime event after collection all RT metrics
_myPeriodicTask: Finished RT metrics collection
_myPeriodicTask: Timeout scheduling RT metrics update tasks
_myPeriodicTask: Timeout during RT metrics update
_myPeriodicTask: Finished RT updates for all registered modules.
startLogTimerWithInterval: %d, %d
stopLogTimer.
stopLogTimer: No timer is present.
registerPeriodicTaskForModule: %u,%s update,%s reporting
unregisterPeriodTaskForModule: %u doesn't exist
unregisterPeriodTaskForModule: %u removed
serverSupportsFileUpload:%s (%lu backends)
uploadFileWithURL: fileURL provided is nil
uploadFileWithURL: Failed to get sandbox extension for path %s, errno %d
uploadFileWithURL: Failed to get remote object proxy: %s
uploadDataArray: Log data array is empty
uploadDataArray: Failed to get remote object proxy: %s
setDigestKey: digestKey should not be nil!!!
validateSessionInfo: sessionInfo is nil
validateSessionInfo: clientType is invalid
zPLR
