x-et-notify
sender
type
unreadCount
addr
fromID
guid
ETAppViewControllerActivatedNotification
ETAppViewControllerDeactivatedNotification
etPeoplePickerScrollTest1up
etPeoplePickerScrollTest2up
etPeoplePickerScrollTest3up
com.apple.ET
com.apple.ET.app
com.apple.private.alloy.electrictouch
ETUserTappedOnNotificationNotification
ETPersonUnreadMessageStatusChangedNotification
UnreadMessageCountKey
ETPairedSyncStateChangedNotification
PairedSyncState
v8@?0B4
v4@?0
paletteCircles
T@"NSArray",&,N,V_paletteCircles
selectedCircle
T@"ETPaletteCircleView",&,N,V_selectedCircle
longPressRecognizer
T@"UILongPressGestureRecognizer",&,N,V_longPressRecognizer
delegate
T@"<DTSColorPickerDelegate>",W,N,V_delegate
selectedColor
T@"UIColor",R,N
dimmed
TB,N,GisDimmed,V_dimmed
colorCircleSize
TI,N,V_colorCircleSize
colorCircleDiameter
Tf,R,N
colorCircleHorizontalSpacing
%@ %@
messageType
sendDate
messageData
baseColor
identifier
supportsPlaybackTimeOffsets
startDelay
hasMessageType
TB,N
Ti,N,V_messageType
hasSendDate
Tq,N,V_sendDate
hasMessageData
TB,R,N
T@"NSData",&,N,V_messageData
hasBaseColor
TI,N,V_baseColor
hasIdentifier
T@"NSString",&,N,V_identifier
hasSupportsPlaybackTimeOffsets
TB,N,V_supportsPlaybackTimeOffsets
hasStartDelay
Td,N,V_startDelay
QuickTap
Heartbeat
Doodle
ReadReceipt
Video
Kiss
Anger
(unknown: %i)
ColorPickerRotationAnimationKey
transform.rotation.z
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isExpanded
TB,N,V_isExpanded
presentationDelegate
T@"<ETColorPickerViewDelegate>",W,N,V_presentationDelegate
beatsPerMinute
duration
normalizedCenterX
normalizedCenterY
rotation
heartbreakTime
hasBeatsPerMinute
Tf,N,V_beatsPerMinute
hasDuration
TI,N,V_duration
hasNormalizedCenterX
Tf,N,V_normalizedCenterX
hasNormalizedCenterY
Tf,N,V_normalizedCenterY
hasRotation
Tf,N,V_rotation
hasHeartbreakTime
Tf,N,V_heartbreakTime
DigitalTouchShared-Localizable
COLOR_PICKER_DONE_TEXT
T@"<DTSColorWheelDelegate>",W,N,V_delegate
colorWheelRadius
Tf,N,V_colorWheelRadius
gradientWidth
Tf,N,V_gradientWidth
pickerDiameter
Tf,N,V_pickerDiameter
hueRotation
Tf,N,V_hueRotation
pickerRotation
Tf,N,V_pickerRotation
pickerCircle
T@"UIView",&,N,V_pickerCircle
doneButton
T@"UIButton",&,N,V_doneButton
DigitalTouch
ERROR: Couldn't allocate EAGLContext
ERROR: Couldn't allocate ETGLSketchRenderer
v20@?0^4L8^12B16
Completed animation. Stopping displaylink and removing view
message playback mode has begun
Clearing Renderer
context
T@"EAGLContext",&,N,V_context
renderer
T@"ETGLSketchRenderer",&,N,V_renderer
interpolatingFIFO
T@"ETQuadCurvePointFIFO",&,N,V_interpolatingFIFO
smoothingFIFO
T@"ETBoxcarFilterPointFIFO",&,N,V_smoothingFIFO
pointFIFO
T@"ETPointFIFO",&,N,V_pointFIFO
secondaryInterpolatingFIFO
T@"ETQuadCurvePointFIFO",&,N,V_secondaryInterpolatingFIFO
secondarySmoothingFIFO
T@"ETBoxcarFilterPointFIFO",&,N,V_secondarySmoothingFIFO
secondaryPointFIFO
T@"ETPointFIFO",&,N,V_secondaryPointFIFO
unitSize
Tf,N,V_unitSize
vertexBatches
T{vector<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >, std::__1::allocator<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > > >=^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}{__compressed_pair<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > *, std::__1::allocator<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > > >=^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}}},N,V_vertexBatches
controlBatches
T{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^}},N,V_controlBatches
vertexBatchCount
T{vector<unsigned long, std::__1::allocator<unsigned long> >=^L^L{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^L}},N,V_vertexBatchCount
secondaryVertexBatchCount
T{vector<unsigned long, std::__1::allocator<unsigned long> >=^L^L{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^L}},N,V_secondaryVertexBatchCount
vertexOffset
TL,N,V_vertexOffset
delayBetweenStrokes
Td,N,V_delayBetweenStrokes
T@"ETSketchMessage",&,N,V_messageData
playing
TB,N,GisPlaying,V_playing
paused
TB,N,GisPaused,V_paused
wispDelay
Td,N,V_wispDelay
timestampForLastDrawnPoint
Td,N,V_timestampForLastDrawnPoint
playbackCompleted
TB,N,V_playbackCompleted
useFastVerticalWisp
TB,N,V_useFastVerticalWisp
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
-%@.%@
compact
regular
timeDeltas
points
colors
hasTimeDeltas
T@"NSData",&,N,V_timeDeltas
hasPoints
T@"NSData",&,N,V_points
hasColors
T@"NSData",&,N,V_colors
doodle
heartbeat
quick-tap
read-receipt
video
kiss
anger
unknown (%d)
{?={?=SS}{?=S}}
Drawing
hasMultipleColors
TB,N,V_hasMultipleColors
numberOfColors
TI,R,N
didEndWisping
TB,N,V_didEndWisping
didDrawPoints
TB,N,V_didDrawPoints
strokes
T@"NSArray",R,N
colorsInMessage
hideComet
TB,N,V_hideComet
NanoLifestylePrivacyEnableHeartRateNotification
EnableHeartRate
com.apple.nanolifestyle.privacy
count/min
v16@?0@"HKSampleQuery"4@"NSArray"8@"NSError"12
%K >= %@
v12@?0B4@"NSError"8
heartRateQuery
T@"HKQuery",&,N,V_heartRateQuery
recentHeartRate
TI,N,V_recentHeartRate
recentHeartRateTime
Td,N,V_recentHeartRateTime
color-wheel-gradient
strokeEnd
strokeStart
d12@?0d4
position
crownInputSequencer
T@"PUICCrownInputSequencer",&,N,V_crownInputSequencer
T@"UIColor",R,N,V_selectedColor
delays
angles
hasDelays
T@"NSData",&,N,V_delays
hasAngles
T@"NSData",&,N,V_angles
nextFIFO
T@"ETPointFIFO",&,N,V_nextFIFO
prevPoints
T{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^}},N,V_prevPoints
width
TI,N,V_width
spacing
Tf,N,V_spacing
T{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^}},N,V_points
controlPoints
T{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^}},N,V_controlPoints
lastPoint
T,N,V_lastPoint
emitInterpolatedPoints
TB,N,V_emitInterpolatedPoints
emissionHandler
T@?,C,V_emissionHandler
playingMessages
T@"NSArray",&,N
mediaURL
T@"NSURL",&,N,V_mediaURL
stillImage
T@"UIImage",&,N,V_stillImage
introMessage
T@"ETSketchMessage",&,N,V_introMessage
mediaType
TI,N,V_mediaType
canCompressTime
pauseTimeCompression
TB,N,V_pauseTimeCompression
selected
TB,N,GisSelected,V_selected
selectionMarker
T@"UIView",R,N
Tf,N,V_duration
ETWispDelay
ignoreBackgroundNotifications
Ending message: %@. Will send: %d
(%@) Got tap!
(%@) UITouchPhaseBegan
(%@) UITouchPhaseEnded
ERROR: Failed to allocate ETGLSketchView for message: %@
Ending %@, will send: %d
v8@?0I4
Displaying message %@ in scene %@
canvasDelegate
T@"<ETCanvasViewDelegate>",W,N,V_canvasDelegate
timeSource
T@"<ETMessageTimeSource>",W,N,V_timeSource
drawingColor
T@"UIColor",&,N,V_drawingColor
canComposeHeartbeat
TB,N,V_canComposeHeartbeat
canComposeTap
TB,N,V_canComposeTap
canComposeKiss
TB,N,V_canComposeKiss
canComposeAnger
TB,N,V_canComposeAnger
isComposing
TB,R,N,V_isComposing
usesMediaAppearance
TB,N,V_usesMediaAppearance
parentMessage
T@"ETMessage",&,N,V_parentMessage
angerUsesForceTouch
TB,N,V_angerUsesForceTouch
Unknown message type %du (%@)
Cannot archive message of type %@
Unknown
%@: %p; messageType: %@, time created: %@ (%f), sendTime: %@ (%f), identifier: %@
TS,R,N
messageVersion
TI,R,N,V_messageVersion
timeCreated
Td,N,V_timeCreated
sendTime
Td,N,V_sendTime
supportsPlaybackTimeOffset
TB,N,V_supportsPlaybackTimeOffset
missedDuringPlayback
TB,N,V_missedDuringPlayback
shouldLoopDuringPlayback
color
T@"UIColor",&,N,V_color
renderingOffscreen
TB,N,GisRenderingOffscreen,V_renderingOffscreen
renderingOffscreenOpaque
TB,N,GisRenderingOffscreenOpaque,V_renderingOffscreenOpaque
messageDuration
Td,R,N
T@"<ETMessageDelegate>",W,N,V_delegate
delayWisp
TB,N,V_delayWisp
T@"ETMessage",W,N,V_parentMessage
animated
TB,R,N,GisAnimated
mute
TB,N,V_mute
ETColorPickerColorData
ETColorPickerColors
ETColorPickerSelectedIndex
ETColorPrefsChangedExternallyNotification
com.apple.Carousel
selectedColorIndex
TI,N
doodleCount
doodleData
colorData
pointTimeDeltaData
hasDoodleCount
TI,N,V_doodleCount
hasDoodleData
T@"NSData",&,N,V_doodleData
hasColorData
T@"NSData",&,N,V_colorData
hasPointTimeDeltaData
T@"NSData",&,N,V_pointTimeDeltaData
%s: glGetError(0x%x)
-[ETGLSketchRenderer initWithContext:andDrawable:]
w and h -  %i %i
failed to make complete framebuffer object %x
Redundantly resizing Sketch renderer
resizing layer -  %i %i
-[ETGLSketchRenderer resizeFromCachedLayer]
-[ETGLSketchRenderer updateVertexBufferWithVertexCount:]
-[ETGLSketchRenderer _warmupShaders]
Unexpected failure to make complete framebuffer object during warmup (0x%04x)
Unexpected failure to create context during shader warmup
Error: GLSketch being asked to -render into a 0x0 viewport!
-[ETGLSketchRenderer render]
-[ETGLSketchRenderer setLineWidthScaleFactor:]
allVertices
T^{?=},N,V_allVertices
vertexBufferCount
Ti,N,V_vertexBufferCount
vertexBufferBegin
Ti,N,V_vertexBufferBegin
vertexCount
TL,N,V_vertexCount
deathTime
Tf,N,V_deathTime
lastBirth
Tf,N,V_lastBirth
brushColorForInitialColor
T,N,V_brushColorForInitialColor
brushColorForFinalColor
T,N,V_brushColorForFinalColor
shaderProgram
TI,N,V_shaderProgram
vboVertLineId
TI,N,V_vboVertLineId
vaoLineID
TI,N,V_vaoLineID
viewRenderbuffer
TI,N,V_viewRenderbuffer
viewFramebuffer
TI,N,V_viewFramebuffer
backingWidth
TI,N,V_backingWidth
backingHeight
TI,N,V_backingHeight
cometScaleFactor
Tf,N,V_cometScaleFactor
allocatedWidth
TI,N,V_allocatedWidth
allocatedHeight
TI,N,V_allocatedHeight
T@"EAGLContext",N,V_context
cachedLayer
T@"CAEAGLLayer",N,V_cachedLayer
completionBlock
T@?,C,N,V_completionBlock
currentTimeClock
Tf,R,N,V_currentTimeClock
currentTimeIndex
Tf,R,N,V_currentTimeIndex
isDying
TB,N,V_isDying
T@"<ETGLSketchRendererDelegate>",W,N,V_delegate
TB,N,V_renderingOffscreen
lineWidthScaleFactor
Tf,N,V_lineWidthScaleFactor
#version 100
#extension GL_EXT_separate_shader_objects : enable
layout(location = 0) attribute vec4 in_Vertex;
layout(location = 1) attribute vec4 in_InitialColor;
layout(location = 2) attribute vec4 in_FinalColor;
layout(location = 3) attribute vec4 in_TimesAndNoise;
layout(location = 4) attribute vec4 in_PointSize;
layout(location = 5) attribute float in_CurrentTime;
layout(location = 6) attribute float in_DeathTime;
layout(location = 7) attribute float in_LastBirthTime;
layout(location = 8) attribute float in_DeathPerPoint;
layout(location = 9) attribute float in_DeathUntilKill;
varying mediump vec4  out_Color;
void main(void)
mediump float cometLife = 0.3;
mediump float colorChangeTime = 5.25;
mediump float relaxationTime = 5.0;
mediump float life = (in_CurrentTime - in_TimesAndNoise.x);
mediump float birthToDeathRatio = in_TimesAndNoise.y/in_LastBirthTime;
mediump float kTimeIndexIncrement = 0.016666666667;
mediump float cometLifeRatio;
mediump float deathRatio;
mediump float deathRatioTriangle;
mediump float tailRatio;
deathRatio = (in_CurrentTime - in_DeathTime);
deathRatio = clamp(deathRatio - birthToDeathRatio * (in_DeathUntilKill - in_DeathPerPoint), 0.0, in_DeathPerPoint) / in_DeathPerPoint;
tailRatio = step((in_LastBirthTime - 500.0 * kTimeIndexIncrement)/in_LastBirthTime, birthToDeathRatio) * step(0.01, deathRatio) * birthToDeathRatio * deathRatio;
cometLifeRatio = 1.0 - clamp(life, 0.0, cometLife) / cometLife;
cometLifeRatio = smoothstep(0.0, 1.0, cometLifeRatio);
mediump float relaxationRatio = clamp(life, 0.0, relaxationTime) / relaxationTime;
mediump float colorChangeRatio = clamp(life, 0.0, colorChangeTime) / colorChangeTime;
deathRatioTriangle = 1.0 - clamp(abs((deathRatio - 0.25) * 4.0), 0.0, 1.0);
vec2 pos = vec2(in_Vertex.xy + (in_Vertex.zw - in_Vertex.xy) * relaxationRatio * relaxationRatio * relaxationRatio * (relaxationRatio * (relaxationRatio * 6. - 15.) + 10.));
pos = pos + (in_TimesAndNoise.zw * deathRatio * deathRatio * (1.0 + (tailRatio * tailRatio * tailRatio * 1.25)));
gl_Position = vec4(pos, 0.0, 1.0);
gl_PointSize = (1.0 + 7.0 * cometLifeRatio) * in_PointSize.x;
gl_PointSize -= (gl_PointSize-1.0) * deathRatio * deathRatio * deathRatio;
gl_PointSize += 31.0 * tailRatio * tailRatio * tailRatio;
out_Color = mix(in_InitialColor, in_FinalColor, colorChangeRatio);
out_Color.rgb = mix(out_Color.rgb, vec3(1.0), cometLifeRatio + deathRatioTriangle * 0.3);
out_Color.a = (1.0 - deathRatio) * (1.0 - tailRatio) * (0.15 + 0.85 * (1.0 - cometLifeRatio));
#version 100
uniform mediump sampler2D theTex;
varying mediump vec4  out_Color;
void main(void)
gl_FragColor = out_Color;
gl_FragColor.a *= texture2D(theTex, gl_PointCoord).r;
introMessageData
playingMessagesData
hasIntroMessageData
T@"NSData",&,N,V_introMessageData
hasPlayingMessagesData
T@"NSData",&,N,V_playingMessagesData
hasMediaType
Ti,N,V_mediaType
Photo
ETLoggingEnabled
ETSceneLoggingEnabled
ETEarlyLoadEnabled
ETLastInteractiveZoomLevel
ETArchiveSentMessages
mailto:
tel:
yyyy-MM-dd-HH:mm:ss.SSS
Corrupt tap message encountered
tapIndex > number of taps
(%@) ETTapMessage playing tap haptic
v12@?0@"SKNode"4f8
(%@) ETTapMessage displaying tap in scene
removal
/tmp/ETTapMessage-%@.sks
tapCount
doodle_wisp_stroke
doodle_wisp_dots
blends_heartToRndRect65
heartLines
u_tex2
u_tex3
u_speed
u_scale
u_shader_time
compositeHeart
HeartbreakAtlasSmall
warpedHeartAtlasSmall
heart
heartAndBlur
fade
Using duration
Not using duration
<%@:%p bpm:%3.0f duration:%d>
(%@) ETHeartbeatMessage(%p) stopping heartbeat haptic.
(%@) ETHeartbeatMessage(%p) starting heartbeat haptic with loop period: %f for BPM %f
Ti,N,V_duration
scale
Tf,N,V_scale
normalizedCenter
T{CGPoint=ff},N,V_normalizedCenter
broken
TB,R,N,GisBroken,V_broken
Td,R,N,V_heartbreakTime
{CGPoint=ff}
angerAtlasSmall
Td,N,V_duration
hitAreaCompact
TB,N,GisHitAreaCompact,V_hitAreaCompact
accessoryView
T@"UIButton",&,N,V_accessoryView
backActionFrame
T{CGRect={CGPoint=ff}{CGSize=ff}},R,N
visibleBounds
com.apple.et.iMessage.buttonTapped
com.apple.et.message.received.transportTime.toApp
com.apple.et.message.received.transportTime.toDaemon
com.apple.et.message.received.type.doodle
com.apple.et.message.received.type.video
com.apple.et.message.received.type.heartbeat
com.apple.et.message.received.type.tap.quickTap
com.apple.et.message.received.type.tap
com.apple.et.message.sent.size
com.apple.et.message.sent.type.doodle
com.apple.et.message.sent.type.heartbeat
com.apple.et.message.sent.type.tap.quickTap
com.apple.et.message.sent.type.tap
com.apple.et.message.expired.unread
com.apple.et.sent.numberOfColors
com.apple.et.ephemeral.added
com.apple.et.ephemeral.blocked
com.apple.et.message.received.uniqueSenderCount
com.apple.et.phone.buttonTapped
>60s
30-60s
20-30s
10-20s
%d-%ds
%@.%@
Aggd Log Key %@ : transportTime is %f
leavesMark
TB,N,V_leavesMark
Attempted to unarchive kiss that was missing points, angles, or delays.
KissAtlasSmall
ETVideoAudioOffPreference
DigitalTouchDemoHook
DigitalTouchDemoHookExportDirectory
DigitalTouchDemoHookMessageDataPath
DigitalTouchDemoHookAssetPath
DemoHook-
Digital Touch: Message Playback
AudioOn
AudioOff
Replay
Cancel
Skip
Failed to deactivate audio and notify others of deactivation with error: %@
Not adding nil message
Adding to session unplayed message ID: %@, total count: %lu
%@%@
Can't Export
%@ preference isn't set
No Replay Message
You can only export messages that have just played in full-screen.
Failed to write message
Error: %@, at path: %@
Wrote Message
Path: %@
Done
v16@?0@"ETMessage"4I8^B12
Ending all playback
Setting video player URL: %@
Missing Demo Message Data
Invalid data at path %@. Not changing incoming message to demo message.
Couldn't Unarchive Demo Message
Not changing incoming message to demo message. Data at path: %@
Movie Path Not Specified
Please set DigitalTouchDemoHookAssetPath preference.
Movie File Not Found
Couldn't find path: %@
Setting media URL: %@, URL exists on disk: %d
colorPicker
T@"DTSColorPicker",&,N,V_colorPicker
dataSource
T@"ETBalloonPluginDataSource",W,N,V_dataSource
balloonPlaybackCompletion
T@?,C,N,V_balloonPlaybackCompletion
messageForReplay
T@"ETMessage",&,N,V_messageForReplay
sendDelegate
T@"<DTSCanvasViewControllerSendDelegate>",W,N,V_sendDelegate
composingMessageType
TS,N,V_composingMessageType
composingCompositeMessage
TB,N,GisComposingCompositeMessage,V_composingCompositeMessage
playingCompositeMessage
TB,N,GisPlayingCompositeMessage,V_playingCompositeMessage
mediaMessagePlayTrackerTime
Td,N,V_mediaMessagePlayTrackerTime
composeDisabled
TB,N,GisComposeDisabled,V_composeDisabled
autoPlayOnAppearanceDisabled
TB,N,GisAutoPlayOnAppearanceDisabled,V_autoPlayOnAppearanceDisabled
ignoreAppearanceCallbacks
TB,N,V_ignoreAppearanceCallbacks
canvasView
T@"ETCanvasView",&,N,V_canvasView
TB,N,GisPlayingMessages,V_playingMessages
playingMessage
T@"ETMessage",&,N,V_playingMessage
deferMessageSend
TB,N,V_deferMessageSend
deferredMessages
T@"NSArray",R,N,V_deferredMessages
usesCompactKeyboardLayout
TB,N,V_usesCompactKeyboardLayout
overrideAudioDefaultToOff
TB,N,V_overrideAudioDefaultToOff
playbackEnabled
TB,N,GisPlaybackEnabled,V_playbackEnabled
bottomMargin
Tf,N,V_bottomMargin
root
?333333
?ffffff
ffffff
A333333
?VUU
$@333333
zD333>33
@(#)PROGRAM:DigitalTouchShared  PROJECT:ET-1
initWithFrame:
alloc
didReceiveLongPress:
initWithTarget:action:
addGestureRecognizer:
backgroundColor
paletteCircleDiameter
countByEnumeratingWithState:objects:count:
frame
colorCircleDiameter
center
setFrame:
setCenter:
setNeedsLayout
defaultStore
colors
count
initWithCapacity:
objectAtIndexedSubscript:
setBackgroundColor:
paletteCircleTapped:
requireGestureRecognizerToFail:
addObject:
addSubview:
selectedColorIndex
objectAtIndex:
setSelected:
setSelected:animated:completion:
indexOfObject:
setSelectedColorIndex:
view
selectedCircle
selectCircle:completion:
delegate
colorPickerSelectedColorDidChange:
colorPickerTapped:
state
locationInView:
paletteCircles
lastObject
showColorWheel
selectedColor
colorCircleHorizontalSpacing
setColorCircleSize:
createPaletteCirclesWithParentView:
.cxx_destruct
setDelegate:
isDimmed
setDimmed:
colorCircleSize
setPaletteCircles:
setSelectedCircle:
longPressRecognizer
setLongPressRecognizer:
_paletteCircles
_selectedCircle
_longPressRecognizer
_dimmed
_delegate
_colorCircleSize
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithLongLong:
numberWithUnsignedInt:
numberWithBool:
numberWithDouble:
class
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
setMessageData:
setIdentifier:
messageType
setMessageType:
setHasMessageType:
hasMessageType
messageTypeAsString:
StringAsMessageType:
setSendDate:
setHasSendDate:
hasSendDate
hasMessageData
setBaseColor:
setHasBaseColor:
hasBaseColor
hasIdentifier
setSupportsPlaybackTimeOffsets:
setHasSupportsPlaybackTimeOffsets:
hasSupportsPlaybackTimeOffsets
setStartDelay:
setHasStartDelay:
hasStartDelay
readFrom:
writeTo:
mergeFrom:
sendDate
messageData
baseColor
identifier
supportsPlaybackTimeOffsets
startDelay
_sendDate
_startDelay
_baseColor
_identifier
_messageData
_messageType
_supportsPlaybackTimeOffsets
_has
isEqualToString:
bounds
presentTapReceived:
layoutPaletteCircles
_dismissAnimated:completion:
presentationDelegate
colorPickerViewWillPresent:duration:
colorPickerViewDidPresent:
presentAnimated:completion:
setEnabled:
setIsExpanded:
removeFromSuperview
_isCenterCircle:
_addRotationAnimationFromAngle:toAngle:
setTransform:
setAlpha:
animateWithDuration:delay:options:animations:completion:
isExpanded
colorPickerView:willDismissAnimated:duration:
colorPickerViewDidDismiss:
animationWithKeyPath:
setDuration:
setAdditive:
setRemovedOnCompletion:
setFillMode:
numberWithFloat:
setFromValue:
setToValue:
functionWithName:
setTimingFunction:
begin
layer
removeAnimationForKey:
setCompletionBlock:
addAnimation:forKey:
commit
isHidden
hideColorWheelPickingColor:
performWithoutAnimation:
_shouldReverseLayoutDirection
animateToGray
animateToSelectedColor
setUserInteractionEnabled:
colorWithWhite:alpha:
animateWithDuration:animations:
dismissAnimated:completion:
animateWithDuration:animations:completion:
showColorWheelFromPaletteCircle:rotation:
fadeoutPaletterCirclesInPairs
transformSelectionMarkerToPickerCircleWithCompletion:
colorWheelWidth
movePaletteCircleTowardsViewCenter:distance:
selectionMarker
pickerDiameter
selectionMarkerDiameter
pickerWidth
setBorderWidth:
pickerBorderColor
setBorderColor:
selectionMarkerColor
sendSubviewToBack:
movePalettCircleToOriginalLayoutPosition:
paletteCircleAnimationPairs
fadeoutPaletteCircle:delay:
fadeinPaletteCircle:delay:
arrayWithObjects:count:
fadeinPaletterCirclesInPairs
saveColor:forIndex:
transformPickerCircleToSelectionMarkerWithCompletion:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
colorWheel:willPickColor:
colorWheel:didPickColor:
colorWheel:pickerColorChanged:
initWithFrame:collapsedFrame:
pointInside:withEvent:
animateOffscreen
animateOnscreen
setPresentationDelegate:
_contentView
_collapsedSelectedCircle
_presentTapGestureRecognizer
_expandedFrame
_collapsedFrame
_colorWheelView
_dismissingColorPicker
_selectedCircleRotationAngle
_isExpanded
_presentationDelegate
currentDevice
puic_deviceVariant
defaultCenter
_applicationDidEnterBackground
addObserver:selector:name:object:
_applicationWillEnterForeground
_updateLayout
sharedApplication
applicationState
layoutSubviews
_applicationDidBecomeActive
_shouldDelayLayout
_didDelayLayout
setBeatsPerMinute:
setHasBeatsPerMinute:
hasBeatsPerMinute
setHasDuration:
hasDuration
setNormalizedCenterX:
setHasNormalizedCenterX:
hasNormalizedCenterX
setNormalizedCenterY:
setHasNormalizedCenterY:
hasNormalizedCenterY
setRotation:
setHasRotation:
hasRotation
setHeartbreakTime:
setHasHeartbreakTime:
hasHeartbreakTime
beatsPerMinute
duration
normalizedCenterX
normalizedCenterY
rotation
heartbreakTime
_beatsPerMinute
_duration
_heartbreakTime
_normalizedCenterX
_normalizedCenterY
_rotation
beganTouches:
finishedTouches
anyObject
updatePickerPositionForPoint:
pickerCircle
bundleForClass:
localizedStringForKey:value:table:
setTitle:forState:
whiteColor
setTitleColor:forState:
doneButtonTapped:
addTarget:action:forControlEvents:
setDoneButton:
colorWheelRadius
gradientWidth
setPickerRotation:
pickerViewHighlightedColor
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
createDoneButtonWithFrame:
setColorWheelRadius:
setGradientWidth:
setPickerDiameter:
hueRotation
setHueRotation:
pickerRotation
setPickerCircle:
doneButton
_colorWheelRadius
_gradientWidth
_pickerDiameter
_hueRotation
_pickerRotation
_pickerCircle
_doneButton
setCurrentContext:
setOpaque:
dictionaryWithObjects:forKeys:count:
setDrawableProperties:
setAsynchronous:
mainScreen
scale
setContentScaleFactor:
initWithAPI:
setGLContextAsCurrent
initWithContext:andDrawable:
setUseFastVerticalWisp:
setLineWidthScaleFactor:
contentScaleFactor
initWithFIFO:
initWithFIFO:width:spacing:
setUnitSize:
updateRendererWithPoints:count:controlPoint:flush:
setEmissionHandler:
setEmitInterpolatedPoints:
updateRendererWithSecondaryPoints:count:controlPoint:flush:
setWispDelay:
isRenderingOffscreen
setRenderingOffscreen:
didEndWisping
didEndWisp
clear
isPaused
animateOutWithCompletion:
addStrokeWithColor:
CGColor
getRed:green:blue:alpha:
renderer
setFinalDrawingColor:
getHue:saturation:brightness:alpha:
colorWithHue:saturation:brightness:alpha:
setInitialDrawingColor:
strokes
getValue:
hasMultipleColors
colorsInMessage
color
beginStrokeWithColor:
handleTapAtPosition:
handleSketchAtPosition:
didCompleteStroke
setPlaying:
_endPlayback
_drawCurrentPointAdvancingPlayback
render
didDrawPoints
timestamp
supportsPlaybackTimeOffset
_getCurrentSketchPoint:
_doesPoint:predateTime:
hideComet
updateGLWithTime:
createRenderedFrameImageUsingAlpha:
delayWisp
setIsDying:
isRenderingOffscreenOpaque
willBeginWisp
invalidate
drawView:
displayLinkWithTarget:selector:
setPreferredFramesPerSecond:
mainRunLoop
addToRunLoop:forMode:
setDidDrawPoints:
setDidEndWisping:
setPaused:
erase
reset
clearAllPoints
resizeFromLayer:
setSpacing:
addSketchPoint:
appendPointArray:length:
appendDualPointArray:length:controlPoint:alternatePoints:alternateLength:alternateControlPoint:unitSize:segmentIndex:segmentCount:
addPoints:count:
flush
didReachRendererLimit
layerClass
sketchRendererDidReachVertexLimit:
drawFrameBeforeWisp
createRenderedFrameImage
createImageForTime:
.cxx_construct
isPlaying
wispDelay
timestampForLastDrawnPoint
setTimestampForLastDrawnPoint:
playbackCompleted
setPlaybackCompleted:
useFastVerticalWisp
context
setContext:
setRenderer:
interpolatingFIFO
setInterpolatingFIFO:
smoothingFIFO
setSmoothingFIFO:
pointFIFO
setPointFIFO:
secondaryInterpolatingFIFO
setSecondaryInterpolatingFIFO:
secondarySmoothingFIFO
setSecondarySmoothingFIFO:
secondaryPointFIFO
setSecondaryPointFIFO:
unitSize
vertexBatches
setVertexBatches:
controlBatches
setControlBatches:
vertexBatchCount
setVertexBatchCount:
secondaryVertexBatchCount
setSecondaryVertexBatchCount:
vertexOffset
setVertexOffset:
delayBetweenStrokes
setDelayBetweenStrokes:
_displayLink
_currentStrokeColor
_lastDisplayLinkTime
_renderingOffscreen
_currentStrokeIndex
_currentPointIndex
_numberOfDrawnStrokes
_renderingDelay
_renderingStartTime
_pauseTime
_playing
_paused
_playbackCompleted
_useFastVerticalWisp
_context
_renderer
_interpolatingFIFO
_smoothingFIFO
_pointFIFO
_secondaryInterpolatingFIFO
_secondarySmoothingFIFO
_secondaryPointFIFO
_unitSize
_vertexOffset
_wispDelay
_timestampForLastDrawnPoint
_delayBetweenStrokes
_vertexBatches
_controlBatches
_vertexBatchCount
_secondaryVertexBatchCount
pathExtension
length
stringByDeletingPathExtension
stringByAppendingFormat:
etImageNamed:inBundle:
imageNamed:inBundle:
etImageNamed:
setTimeDeltas:
setPoints:
setColors:
hasTimeDeltas
hasPoints
hasColors
timeDeltas
points
_colors
_points
_timeDeltas
initWithData:
identifierInArchive:
messageTypeInArchive:
getSendTime:type:inArchive:
sendTimeInArchive:
array
messageWillReachSizeLimit:
setColor:
timeSource
elapsedTimeSinceStartOfMessage:
valueWithBytes:objCType:
doodleCount
doodleData
bytes
colorData
pointTimeDeltaData
initWithArchiveData:
_decodeWithDoodle:
setDoodleCount:
data
setLength:
mutableBytes
setDoodleData:
setColorData:
setPointTimeDeltaData:
parentMessage
childMessageDidDelayWisp:
messageWillStopPlaying:
messageDidStopPlaying:
setParentMessage:
setDelayWisp:
arrayWithCapacity:
setSupportsPlaybackTimeOffset:
numberOfColors
addSketchPoint:atTime:
archiveData
messageTypeAsString
convertToSimulatedPlaybackSpeed
messageDuration
setHasMultipleColors:
setHideComet:
_strokes
_colorsInMessage
_hasMultipleColors
_didEndWisping
_didDrawPoints
_hideComet
colorWithRed:green:blue:alpha:
_updateHeartRateEnabled
_updateHeartRateWithCompletion:
isHealthDataAvailable
setHeartRateQuery:
firstObject
quantity
unitFromString:
doubleValueForUnit:
setRecentHeartRate:
endDate
timeIntervalSinceReferenceDate
setRecentHeartRateTime:
date
dateByAddingTimeInterval:
predicateWithFormat:
quantityTypeForIdentifier:
sortDescriptorWithKey:ascending:
initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:
setWithObject:
executeQuery:
requestAuthorizationToShareTypes:readTypes:completion:
isRunningInStoreDemoMode
sharedStore
recentHeartRateWithCompletion:
heartRateQuery
recentHeartRate
recentHeartRateTime
_heartRateEnabled
_healthStore
_heartRateQuery
_recentHeartRate
_recentHeartRateTime
_pressure
setState:
_startTime
_hasSufficientForce
clearColor
setImage:
setLineWidth:
setFillColor:
blackColor
setStrokeColor:
setLineCap:
setPath:
setMask:
mask
setStrokeStart:
setStrokeEnd:
removeAllAnimations
prepareToAnimateColorWheelWithRotation:
revealColorWheelWithCompletion:
hideColorWheelWithRotation:completion:
_imageView
titleLabel
systemFontOfSize:
setFont:
setHidden:
hideDoneButton
setContinuous:
setStart:
setEnd:
setCurve:
crownInputSequencer
updateWithCrownInputEvent:
offset
isIdle
addPickerCircleForPaletteCircle:
showDoneButtonAnimated
becomeFirstResponder
setCornerRadius:
superview
convertPoint:fromView:
setOffset:
pickerShouldDismissClockwise
resignFirstResponder
hideDoneButtonAnimated
animatePickerToOriginalPosition
colorWheelDismissalRotation
crownInputSequencer:offsetDidReachBoundary:
crownInputSequencerIdleDidChange:
crownInputSequencerOffsetDidChange:
crownInputSequencer:shouldRubberBandAtBoundary:
crownInputSequencerWillBecomeIdle:withCrownVelocity:targetOffset:
crownInputSequencerDidBecomeIdle:willDecelerate:
crownInputSequencerWillBeginDecelerating:
crownInputSequencerDidEndDecelerating:
crownInputSequencerAverageCrownVelocityDidChange:
canBecomeFirstResponder
_wheelChangedWithEvent:
setCrownInputSequencer:
_gradientView
_originalRotation
_originalPickerRotation
_handlingTouches
_selectedColor
_crownInputSequencer
setDelays:
setAngles:
hasDelays
hasAngles
delays
angles
_angles
_delays
setNextFIFO:
emitPoints:count:
nextFIFO
_nextFIFO
emitAveragedPoint
width
setWidth:
spacing
prevPoints
setPrevPoints:
_width
_spacing
_prevPoints
emitInterpolatedPoints
emissionHandler
controlPoints
setControlPoints:
lastPoint
setLastPoint:
_emitInterpolatedPoints
_emissionHandler
_lastPoint
_controlPoints
introMessageData
unarchive:
playingMessagesData
unarchiveObjectWithData:
hasMediaType
mediaType
_mediaTypeFromETPVideoType:
archive
setIntroMessageData:
archivedDataWithRootObject:
setPlayingMessagesData:
_etpMediaTypeFromETMediaType:
setMediaType:
arrayWithArray:
path
dataWithContentsOfFile:
imageWithData:
initWithURL:options:
initWithAsset:
setAppliesPreferredTrackTransform:
setRequestedTimeToleranceAfter:
setRequestedTimeToleranceBefore:
copyCGImageAtTime:actualTime:error:
initWithCGImage:
URLAssetWithURL:options:
setPlayingMessages:
setIntroMessage:
shouldLoopDuringPlayback
playingMessages
canCompressTime
compressTimeSinceStartOfMessage:
stillImage
isAnimated
mediaURL
setMediaURL:
setStillImage:
introMessage
pauseTimeCompression
setPauseTimeCompression:
_playingMessages
_compressedTimeTotal
_compressedTimeLastEventTime
_messageDuration
_pauseTimeCompression
_mediaURL
_stillImage
_introMessage
_mediaType
_updateSelectionMarkerFrame
isSelected
_selectionMarker
_selected
initWithSize:
setAnchorPoint:
setShouldCullNonVisibleNodes:
setIgnoresSiblingOrder:
setAllowsTransparency:
presentScene:
options
setMasksToBounds:
_heartbeatRecognized:
setNumberOfTouchesRequired:
setMinimumPressDuration:
_tapRecognized:
setDelaysTouchesBegan:
setAllowableMovement:
_kissRecognized:
traitCollection
forceTouchCapability
setForceTouchEnabled:
_configureAngerRecognizer
setMultipleTouchEnabled:
standardUserDefaults
persistentDomainForName:
objectForKey:
doubleValue
setContentMode:
insertSubview:atIndex:
_updatePhotoViewFrame
playerLayerWithPlayer:
addSublayer:
_updateVideoViewFrame
removeFromSuperlayer
setSize:
canvasViewShouldUseFastVerticalWisp:
_sketchInProgress
setTimeSource:
drawingColor
_createSketchViewWithColor:time:message:
_setIsComposingMessageOfType:
endMessageComposition
_startDoodleMessageCompositionAtTime:
canvasView:didBeginComposingMessageType:
_startCheckForIdleTimer
_updateRecognizersAtEndOfComposition
canvasView:didEndComposingMessageType:
canvasView:sendMessage:
_stopCheckForIdleTimer
removeObserver:
dealloc
allValues
_clearSendMessageTimer
isComposing
_startSendMessageTimer
allObjects
setMute:
_setSketchesPaused:
canvasViewDidPause:
canvasViewDidUnpause:
clearCanvasAnimated:
_animateOutSketchView:withCompletion:
_clearDoodleViewForMessage:
removeObjectForKey:
snapshotViewAfterScreenUpdates:
removeAllObjects
removeAllActions
removeAllChildren
_checkForIdle
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
hasActions
children
locationOfTouch:inView:
canvasView:tapRecognizerShouldBegin:
_isTapTooRecentAfterKissGesture
_canComposeExclusiveMessage
_fastTapAllowableMovementTimerFired
_startFastTapAllowableMovementTimer
_viewPointNormalizedInSceneSpace:
_endMessage:withSend:
_sendAnger
_normalizedGesturePoint:
_showAngerAtPoint:
canvasView:didUpdateComposingMessageType:
setNormalizedPoint:atRelativeTime:inScene:
_hideAnger
timeCreated
setNormalizedCenter:
displayInScene:
_angerDurationLimitTimerFired
stopPlaying
reachedSizeLimit
_sendKiss
_angleOfRotationBetweenTwoFingers:
addKissAtNormalizedPoint:angle:time:toScene:
touches
locationInNode:
_tapsInProgress
dateFormatWithMilliseconds:
handleTapAtX:Y:color:time:isRemote:
gestureRecognizers
numberOfTouches
unionSet:
_areRecognizersTrackingMultipleFingers
containsObject:
_sendTaps
handlePanAtX:Y:color:time:state:isRemote:
canvasViewDidBeginStroke:
_doodleEndedWithTouches:cancelled:
minusSet:
isComposingHeartbeat
handleDotAtX:Y:color:time:isRemote:
canvasViewDidEndStroke:
insertSubview:belowSubview:
layoutIfNeeded
sendCurrentMessage
preVisualizeInScene:
size
addTapAtPoint:time:color:
canvasDelegate
canvasViewShouldSendWithTimer:
_sendMessageTimerFired
_sendHeartbeat
_sendSketch
convertPointFromView:
_showHeartbeatAtNormalizedPoint:rotation:
isBroken
breakHeart
_hideHeartbeat
startHeartbeat:
_hideHeartbeatTimerFired
canvasView:didBeginPlayingMessage:
canvasViewWillReachComposingSizeLimit:
canvasView:willEndPlayingMessage:
removeObject:
canvasView:didEndPlayingMessage:
_setNeedsUpdate
canvasViewDidStartMediaAppearance:
canvasViewDidEndMediaAppearance:
removeGestureRecognizer:
_angerRecognized:
canvasView:angerUsesForceTouch:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
showPhotoForImage:
hidePhoto
showVideoForPlayer:
hideVideo
isComposingSketch
startDoodleMessageComposition
_sketchesPaused
setAlwaysPaused:
wispVisibleSketchViewsWithCompletion:
setDrawingColor:
updateIgnoredTouchesRectForStatusBarSize:
composedSketchMessage
setCanComposeTap:
setCanComposeKiss:
setCanComposeAnger:
setCanComposeHeartbeat:
updateCurrentMessageWithHeartRate:
playTestStrokeWithColor:duration:
playMessage:
setUsesMediaAppearance:
willMoveToWindow:
traitCollectionDidChange:
setCanvasDelegate:
canComposeHeartbeat
canComposeTap
canComposeKiss
canComposeAnger
usesMediaAppearance
angerUsesForceTouch
setAngerUsesForceTouch:
_currentSketchView
_currentTaps
_currentHeartbeat
_heartbeatDurationTimer
_heartbeatRecognizer
_heartbeatStartCenter
_lastActivityTimestamp
_touchesBeganTimestamp
_sendMessageTimer
_idleTimer
_setAlwaysPaused
_lastPt
_drawingTouch
_drawingTouchStartedStroke
_drawingTouchMovedDistance
_ignoredTouchesRect
_didIgnoreTouchesBegan
_ignoreTouchesUntilAllTouchesEnded
_touchesDown
_messageIdentifierToDoodleView
_tapRecognizer
_fastTapAllowableMovementTimer
_lastFastTapTimestamp
_kissRecognizer
_currentKissMessage
_angerRecognizer
_currentAnger
_angerDurationLimitTimer
_sketchDidReachSizeLimit
_scene
_sceneView
_photoView
_videoView
_videoLayer
_canComposeHeartbeat
_canComposeTap
_canComposeKiss
_canComposeAnger
_isComposing
_usesMediaAppearance
_angerUsesForceTouch
_canvasDelegate
_timeSource
_drawingColor
_parentMessage
doesNotRecognizeSelector:
UUID
UUIDString
setSendTime:
sendTime
spriteNodeWithImageNamed:
setColorBlendFactor:
setScale:
scaleTo:duration:
fadeOutWithDuration:
group:
removeFromParent
runBlock:queue:
sequence:
runAction:
addChild:
dateWithTimeIntervalSinceReferenceDate:
sharedToneManager
currentToneSoundIDForAlertType:
copy
initWithCoder:
encodeWithCoder:
sendTimeIsValid
hapticSoundID
_stopAudioPlayback
_startAudioPlayback
scenePointFromNormalizedPoint:inScene:
wispChildren
childMessageDidCompleteWisp:
hasWispingChildren
messageVersion
setTimeCreated:
missedDuringPlayback
setMissedDuringPlayback:
setRenderingOffscreenOpaque:
mute
_soundCompletionHandler
_childrenDelayingWisp
_supportsPlaybackTimeOffset
_missedDuringPlayback
_renderingOffscreenOpaque
_delayWisp
_mute
_messageVersion
_color
_timeCreated
_sendTime
addDefaultsObserver
defaultsChanged:
unsignedIntValue
setObject:atIndexedSubscript:
mutableCopy
removeObserver:name:object:
synchronize
backupUserDefaultsDomain:keys:
unsignedIntegerValue
numberWithUnsignedInteger:
_selectedColorIndex
_selectedIndexLoaded
_npsManager
arrayForKey:
setHasDoodleCount:
hasDoodleCount
hasDoodleData
hasColorData
hasPointTimeDeltaData
_colorData
_doodleCount
_doodleData
_pointTimeDeltaData
setupFBOs:
setupVAOs
setupShaders
setupTexture
currentContext
isDying
renderbufferStorage:fromDrawable:
loadOneShaderOfType:withCString:length:
linkProgramWithVShader:FShader:
resizeFromCachedLayer
updateVertexBufferWithVertexCount:
_warmupShaders
updateGLWithCurrentTime
presentRenderbuffer:
warmupShaders
currentTimeClock
currentTimeIndex
renderingOffscreen
lineWidthScaleFactor
allVertices
setAllVertices:
vertexBufferCount
setVertexBufferCount:
vertexBufferBegin
setVertexBufferBegin:
vertexCount
setVertexCount:
deathTime
setDeathTime:
lastBirth
setLastBirth:
brushColorForInitialColor
setBrushColorForInitialColor:
brushColorForFinalColor
setBrushColorForFinalColor:
shaderProgram
setShaderProgram:
vboVertLineId
setVboVertLineId:
vaoLineID
setVaoLineID:
viewRenderbuffer
setViewRenderbuffer:
viewFramebuffer
setViewFramebuffer:
backingWidth
setBackingWidth:
backingHeight
setBackingHeight:
cometScaleFactor
setCometScaleFactor:
allocatedWidth
setAllocatedWidth:
allocatedHeight
setAllocatedHeight:
cachedLayer
setCachedLayer:
completionBlock
_useThisRendererOnlyForWarmup
_isDying
_currentTimeClock
_currentTimeIndex
_lineWidthScaleFactor
_allVertices
_vertexBufferCount
_vertexBufferBegin
_vertexCount
_deathTime
_lastBirth
_shaderProgram
_vboVertLineId
_vaoLineID
_viewRenderbuffer
_viewFramebuffer
_backingWidth
_backingHeight
_cometScaleFactor
_allocatedWidth
_allocatedHeight
_cachedLayer
_completionBlock
_brushColorForInitialColor
_brushColorForFinalColor
hasIntroMessageData
hasPlayingMessagesData
setHasMediaType:
mediaTypeAsString:
StringAsMediaType:
_introMessageData
_playingMessagesData
stringFromDate:
pathComponents
removePrefixFromDestination:
rangeOfString:
substringFromIndex:
boolValue
integerValue
destinationFromMessageIdentifier:keepPrefix:
isRetailDemo
shouldArchiveSentMessages
lastInteractiveZoomLevel
setDateFormat:
tapCount
exceptionWithName:reason:userInfo:
_displayInScene:point:color:filled:withWisp:
pointAtIndex:
timeDeltaAtIndex:
waitForDuration:
runBlock:
customActionWithDuration:actionBlock:
noiseFieldWithSmoothness:animationSpeed:
setStrength:
setCategoryBitMask:
parent
runAction:withKey:
node
setPosition:
setZPosition:
resetSimulation
setParticleSpeed:
setDensityBased:
setParticleBirthRate:
setTargetNode:
_animateCircleInner0:inner1:outer0:outer1:duration:
setTimingMode:
fadeInWithDuration:
archiveRootObject:toFile:
_preVisualizeScene
_noiseField
_times
_baseTime
_soundTimer
_soundIndex
doubleTapMessageWithColor:
pathForResource:ofType:
unarchiveObjectWithFile:
numberWithInt:
initWithKeyframeValues:times:
setInterpolationMode:
setRepeatMode:
setParticleScaleSequence:
setParticleSpeedRange:
setYAcceleration:
setXAcceleration:
setParticleLifetime:
setParticleLifetimeRange:
setParticleDensity:
setEmissionAngleRange:
setEmissionDistance:
setEmissionDistanceRange:
setFieldBitMask:
setFieldInfluenceSequence:
particleColorSequence
getKeyframeValueForIndex:
setKeyframeValue:forIndex:
setParticleColorSequence:
setParticleColor:
_displayInScene:useDuration:
_displayInScene:useDuration:fastStart:
setZRotation:
textureWithImageNamed:
textureNoiseWithSmoothness:size:grayscale:
shaderWithFileNamed:
uniformWithName:texture:
uniformWithName:float:
setUniforms:
setShader:
setBlendMode:
playBeatWithDuration:
repeatActionForever:
colorizeWithColor:colorBlendFactor:duration:
floatValue
setFloatValue:
moveByX:y:duration:
startHeartbeat:fastStart:
setTextureValue:
moveHeartNodeByX:y:duration:
normalizedCenter
_heartNode
_heartLines
_heart
_heartWisp
_linesShader
_heartShader
_speedUniform
_warpedTexAtlasUniform
_burTexUniform
_noiseTexUniform
_scaleUniform
_shaderTimeUniform
_heartScale
_hapticLoopPeriod
_heartbreakAtlas
_broken
_scale
_normalizedCenter
value:withObjCType:
spriteNodeWithColor:size:
_updateCenterFromNormalizedPoint:inScene:
_anger
navigationBackButtonView
backActionFrame
alpha
sizeThatFits:
hitTest:withEvent:
setAccessoryView:
visibleBounds
isHitAreaCompact
setHitAreaCompact:
accessoryView
_hitAreaCompact
_accessoryView
currentCalendar
components:fromDate:
setDay:
dateFromComponents:
compare:
leavesMark
setLeavesMark:
_leavesMark
_initAtlas
_leaveMarkAtDelay:
_displayKissAtPoint:angle:leavesMark:inScene:
_hasKissesThatLeaveMark
_notifyDelegateWillStopPlaying
_notifyDelegateDidStopPlaying
_setKissLeavesMark:
_kissColor
_atlas
_atlasUniform
_kissMarkNodes
_lastKissTime
_lastKiss
_didDelegateWillStopPlaying
_didDelegateDidStopPlaying
boldSystemFontOfSize:
setComposingMessageType:
buttonWithType:
replay
setBackgroundImage:forState:
sizeToFit
setCharge:
audioToggleOffImage
_audioToggleButtonTapped
_cancelButtonTapped
_skipButtonTapped
_sendAutosendingComposition
setPlaybackEnabled:
viewDidLoad
colorPicker
insertSubview:above:
viewDidAppear:
_canComposeAfterMediaPlayback
usesCompactKeyboardLayout
startMessagePlaybackLoop
_applicationWillResignActive
viewWillDisappear:
viewDidDisappear:
viewWillLayoutSubviews
canvasView
viewDidLayoutSubviews
_updateVideoPlayerUI
_updatePlaybackControls
_updateAudioOnOffButton
sessionHasMultipleMessages
cornerRadius
_cancelButton
_cornerButtonInset
_shouldShowCancelButton
_shouldShowSkipButton
_updateSkipButtonFrame
_replayButton
canReplay
canShowReplayButton
_setShowingReplayButton:
_rightButtonInset
_updateAudioOnOffButtonImage
isMuted
audioToggleOnImage
sharedInstance
setActive:withOptions:error:
setMuted:
setValue:forKey:
_relinquishAudio
_shouldAutoSend
setPlayingMessage:
_reloadUnplayedMessages
isPlayingMessages
_hideVideoPlayer
_updateColorPickerEnabled
updateVideoUI
_setCachedMessageForReplay:
_playMessage:
_isVisible
setPlayingCompositeMessage:
_startVideoPlayerWithMessage:
_schedulePlaybackOfCompositeMessageContent:
_nonAnimatedMessagePlaybackDuration
messageForReplay
_updateCanvasInteractionEnabled
willBeginSessionPlayback
isViewLoaded
window
isPlayingCompositeMessage
_shouldDimColorPicker
didChangeColorPickerColor
_usingDemoHook
_exportDemoHookMessage
_sendDemoHookMessage
canvasViewController:sendMessage:
_showDemoHookAlertWithTitle:message:
stringByAppendingPathComponent:
writeToFile:options:error:
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
presentViewController:animated:completion:
enumerateObjectsUsingBlock:
removeObjectAtIndex:
rate
willEndSessionPlaybackInterrupted:
_canLoopMessageDuringPlayback:
_continueMessagePlaybackLoopWithDelay:
canExpireMessages
markAsPlayed
didEndSessionPlayback
currentItem
object
initWithURL:
_videoMessageDidFinishPlaying:
valueForKey:
valueWithCMTime:
_playingParentMessage
addBoundaryTimeObserverForTimes:queue:usingBlock:
seekToTime:
play
pause
didBeginComposingMessage
_startComposeSessionEndTimer
didEndComposingMessage
deferMessageSend
_updateSendButton
_tapRecognizerShouldBegin:
_setAngerUsesForceTouch:
playingMessage
_canStartMessagePlaybackLoop
_playNextMessage
createSessionMessages
_stopPlaybackAnimated:
_beginMessagePlaybackBacklightAssertion
_startBacklightAssertionEndTimer
_composeSessionEndTimerFired
hasMessageForReplay
addUnplayedMessage:
setAutoPlayOnAppearanceDisabled:
hasPrefix:
defaultManager
fileExistsAtPath:
fileURLWithPath:
convertRect:toView:
initWithReason:forDisplay:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
tickle
_backlightAssertionEndTimerFired
replayButtonFont
setDataSource:
shouldAutorotate
supportedInterfaceOrientations
_audioToggleButton
setComposingCompositeMessage:
setComposeDisabled:
clearDeferredMessages
_clearComposeSessionEndTimer
_skipButton
_setReplayButton:
dataSource:didReceiveSessionMessage:
dataSourceShouldUseDemoHook:
dataSource:startPlaybackWithCompletion:
dataSource:addDemoHookToMessage:
dataSourceStopPlayback:
dataSourceViewIsMostlyVisible:
dataSource:didUpdateAttachmentURL:forMessageWithIdentifier:
minimumBottomMargin
setBottomMargin:
sendDelegate
setSendDelegate:
composingMessageType
isComposingCompositeMessage
mediaMessagePlayTrackerTime
setMediaMessagePlayTrackerTime:
isComposeDisabled
isAutoPlayOnAppearanceDisabled
ignoreAppearanceCallbacks
setIgnoreAppearanceCallbacks:
setCanvasView:
setColorPicker:
setDeferMessageSend:
deferredMessages
setUsesCompactKeyboardLayout:
overrideAudioDefaultToOff
setOverrideAudioDefaultToOff:
isPlaybackEnabled
bottomMargin
dataSource
balloonPlaybackCompletion
setBalloonPlaybackCompletion:
setMessageForReplay:
_unplayedMessages
_isPlayingMessage
_playbackEnabled
_showingReplayButton
_composeSessionEndTimer
_deferredMessages
_videoPlayer
_backlightAssertion
_backlightAssertionEndTimer
_composingCompositeMessage
_playingCompositeMessage
_composeDisabled
_autoPlayOnAppearanceDisabled
_ignoreAppearanceCallbacks
_deferMessageSend
_usesCompactKeyboardLayout
_overrideAudioDefaultToOff
_composingMessageType
_sendDelegate
_canvasView
_playingMessage
_colorPicker
_bottomMargin
_dataSource
_balloonPlaybackCompletion
_messageForReplay
_mediaMessagePlayTrackerTime
initForWritingWithMutableData:
setRequiresSecureCoding:
encodeObject:forKey:
finishEncoding
_et_secureArchivedDataWithRootObject:
initForReadingWithData:
decodeObjectOfClasses:forKey:
_et_secureUnarchiveObjectOfClasses:withData:
_et_secureUnarchiveObjectOfClass:withData:
DTSColorPicker
ETPHeader
NSCopying
ETColorPickerView
DTSColorWheelDelegate
NSObject
DTSSceneView
ETPHeartbeat
DTSColorWheel
ETGLSketchView
ETGLSketchRendererDelegate
ETImage
ETPTap
ETMessageHeaderReader
ETSketchMessage
HeartRateStore
DTSForceGestureRecognizer
ETColorGradientView
ETColorWheelView
PUICCrownInputSequencerDelegate
ETPKiss
ETPointFIFO
ETBoxcarFilterPointFIFO
ETQuadCurvePointFIFO
ETVideoMessage
ETPaletteCircleView
ETPAnger
ETReadReceiptMessage
ETCanvasView
ETMessageDelegate
UIGestureRecognizerDelegate
b1t%5R
ETMessage
ETColorStore
ETPDoodle
ETGLSketchRenderer
ETPVideo
ETPReadReceipt
ETUtility
ETTapMessage
ETQuickTapMessage
ETHeartbeatMessage
ETAngerMessage
ETContainerViewStatusBar
KissNode
ETKissMessage
DTSCanvasViewController
ETCanvasViewDelegate
DTSColorPickerDelegate
ETAdditions
@24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@8@0:4
f8@0:4
v12@0:4I8
v12@0:4@8
v16@0:4@8@?12
v8@0:4
B8@0:4
v12@0:4B8
I8@0:4
@"NSArray"
@"ETPaletteCircleView"
@"UILongPressGestureRecognizer"
@"<DTSColorPickerDelegate>"
@12@0:4^{_NSZone=}8
i8@0:4
v12@0:4i8
@12@0:4i8
i12@0:4@8
v16@0:4q8
v16@0:4d8
B12@0:4@8
q8@0:4
d8@0:4
@"NSString"
@"NSData"
{?="sendDate"b1"startDelay"b1"baseColor"b1"messageType"b1"supportsPlaybackTimeOffsets"b1}
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@8@12
v16@0:4@"DTSColorWheel"8@"UIColor"12
@40@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8{CGRect={CGPoint=ff}{CGSize=ff}}24
B20@0:4{CGPoint=ff}8@16
v16@0:4B8@?12
v16@0:4f8f12
B12@0:4I8
v12@0:4@?8
v20@0:4@8d12
v16@0:4@8f12
@"UIView"
@"UITapGestureRecognizer"
{CGRect="origin"{CGPoint="x"f"y"f}"size"{CGSize="width"f"height"f}}
@"ETColorWheelView"
@"<ETColorPickerViewDelegate>"
v12@0:4f8
{?="beatsPerMinute"b1"duration"b1"heartbreakTime"b1"normalizedCenterX"b1"normalizedCenterY"b1"rotation"b1}
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
v16@0:4{CGPoint=ff}8
@"<DTSColorWheelDelegate>"
@"UIButton"
v12@0:4@"ETGLSketchRenderer"8
B20@0:4^{?={?=SS}{?=S}}8d12
B12@0:4^{?={?=SS}{?=S}}8
^{CGImage=}8@0:4
^{CGImage=}16@0:4d8
v24@0:4^8L12^16B20
{vector<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >, std::__1::allocator<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > > >=^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}{__compressed_pair<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > *, std::__1::allocator<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > > >=^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}}}8@0:4
v20@0:4{vector<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >, std::__1::allocator<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > > >=^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}{__compressed_pair<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > *, std::__1::allocator<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > > >=^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}}}8
{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^}}8@0:4
v20@0:4{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^^{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >=^}}8
{vector<unsigned long, std::__1::allocator<unsigned long> >=^L^L{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^L}}8@0:4
v20@0:4{vector<unsigned long, std::__1::allocator<unsigned long> >=^L^L{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^L}}8
L8@0:4
v12@0:4L8
@"CADisplayLink"
@"UIColor"
@"ETSketchMessage"
@"EAGLContext"
@"ETGLSketchRenderer"
@"ETQuadCurvePointFIFO"
@"ETBoxcarFilterPointFIFO"
@"ETPointFIFO"
{vector<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >, std::__1::allocator<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > > >="__begin_"^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}"__end_"^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}"__end_cap_"{__compressed_pair<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > *, std::__1::allocator<std::__1::vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> > > >="__first_"^{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >}}}
{vector<float __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >="__begin_"^"__end_"^"__end_cap_"{__compressed_pair<float * __attribute__((ext_vector_type(2))), std::__1::allocator<float __attribute__((ext_vector_type(2)))> >="__first_"^}}
{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^L"__end_"^L"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^L}}
@12@0:4@8
@16@0:4@8@12
S12@0:4@8
v20@0:4^d8^S12@16
d12@0:4@8
S8@0:4
v24@0:4{CGPoint=ff}8d16
@"NSMutableArray"
@"HKHealthStore"
@"HKQuery"
v16@0:4f8@?12
@"UIImageView"
^{CGColor=}8@0:4
v16@0:4@8i12
B16@0:4@8i12
v24@0:4@8d12N^d20
v16@0:4@8B12
v16@0:4@"PUICCrownInputSequencer"8i12
v12@0:4@"PUICCrownInputSequencer"8
B16@0:4@"PUICCrownInputSequencer"8i12
v24@0:4@"PUICCrownInputSequencer"8d12N^d20
v16@0:4@"PUICCrownInputSequencer"8B12
@"ETColorGradientView"
@"PUICCrownInputSequencer"
v16@0:4^8L12
@20@0:4@8I12f16
@?8@0:4
8@0:4
v16@0:48
I12@0:4i8
i12@0:4I8
d16@0:4d8
@"NSURL"
@"UIImage"
v20@0:4B8B12@?16
{?="duration"b1"normalizedCenterX"b1"normalizedCenterY"b1}
v12@0:4@"ETMessage"8
B16@0:4@8@12
B12@0:4@"UIGestureRecognizer"8
B16@0:4@"UIGestureRecognizer"8@"UIGestureRecognizer"12
B16@0:4@"UIGestureRecognizer"8@"UITouch"12
B16@0:4@"UIGestureRecognizer"8@"UIPress"12
v12@0:4S8
v16@0:4{CGSize=ff}8
{CGPoint=ff}12@0:4@8
v24@0:4@8d12@20
v32@0:4f8f12@16d20B28
v36@0:4f8f12@16d20i28B32
f12@0:4@8
{CGPoint=ff}16@0:4{CGPoint=ff}8
v20@0:4{CGPoint=ff}8f16
@"NSMutableSet"
@"ETGLSketchView"
@"ETTapMessage"
@"ETHeartbeatMessage"
@"NSTimer"
{CGPoint="x"f"y"f}
@"UITouch"
@"NSMutableDictionary"
@"ETKissMessage"
@"ETAngerMessage"
@"SKScene"
@"DTSSceneView"
@"AVPlayerLayer"
@"<ETCanvasViewDelegate>"
@"<ETMessageTimeSource>"
@"ETMessage"
{CGPoint=ff}20@0:4{CGPoint=ff}8@16
@"<ETMessageDelegate>"
v16@0:4@8I12
@"NPSManager"
{?="doodleCount"b1}
v12@0:4^8
i20@0:4I8r*12i16
i16@0:4i8i12
v52@0:4^8L1216^24L2832f40L44L48
^{CGImage=}12@0:4B8
^{?=}8@0:4
v12@0:4^{?=}8
v24@0:48
@"<ETGLSketchRendererDelegate>"
^{?=}
@"CAEAGLLayer"
{?="mediaType"b1}
@16@0:4@8B12
{CGPoint=ff}12@0:4I8
d12@0:4I8
v28@0:4{CGPoint=ff}8d16@24
@28@0:4f8f12f16f20f24
v32@0:4@8{CGPoint=ff}12@20B24B28
@"SKFieldNode"
{vector<CGPoint, std::__1::allocator<CGPoint> >="__begin_"^{CGPoint}"__end_"^{CGPoint}"__end_cap_"{__compressed_pair<CGPoint *, std::__1::allocator<CGPoint> >="__first_"^{CGPoint}}}
{vector<double, std::__1::allocator<double> >="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::__1::allocator<double> >="__first_"^d}}
v20@0:4@8B12B16
v24@0:4f8f12d16
{CGPoint=ff}8@0:4
@"SKNode"
@"SKSpriteNode"
@"SKEmitterNode"
@"SKShader"
@"SKUniform"
@"SKTexture"
v20@0:4{CGPoint=ff}8@16
@20@0:4{CGPoint=ff}8@16
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
B16@0:4d8
v32@0:4{CGPoint=ff}8f16d20@28
v28@0:4{CGPoint=ff}8f16B20@24
@"KissNode"
v16@0:4@8S12
v16@0:4@"ETCanvasView"8@"ETMessage"12
v16@0:4@"ETCanvasView"8S12
v12@0:4@"ETCanvasView"8
B12@0:4@"ETCanvasView"8
B16@0:4@"ETCanvasView"8@"UITapGestureRecognizer"12
v16@0:4@"ETCanvasView"8B12
v12@0:4@"DTSColorPicker"8
B16@0:4@8^@12
v20@0:4@8@12@16
@"AVPlayer"
@"CSLSBacklightAssertion"
@"<DTSCanvasViewControllerSendDelegate>"
@"ETCanvasView"
@"DTSColorPicker"
@"ETBalloonPluginDataSource"
@16@0:4#8@12
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
