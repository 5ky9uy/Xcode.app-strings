Handling start audio call intent: %@
Calling completion block with response: %@ user activity: %@
Resolve destination type for start audio call: %@
%@ is an emergency number. Resolving to an emergency call
%@ is not an emergency number. Do not need special resolving.
More than one handle, not resolving destination type
Calling completion block with result: %@
Resolving contacts for start audio call intent: %@
Resolution not required for voicemail destination
Resolution for emergency destination
Intent's contact has no display name. Looking up the list of emergency handles available on this device
There are more than one number that could be dialed. Prompting to disambiguate between them using these people: %@
Only a single (or none) emergency number to call. Resolution is NOT required.
Intent's contact has a display name. Resolution is NOT required.
Resolution for redial
There is a recent call that can be redialed.
Resolving with this person to redial: %@
Nothing found in call history to redial. Resolving as unsupported.
Calling completion block with resolution results: %@
Got a SearchCallHistory intent: %@
No callType specified on intent (%@). Assuming 'Latest'
Start Date  : %@
End Date    : %@
Recipient   : %@
Capabilities: %lx (audio: %d | video: %d)
Types       : %lx
Set call history options: %lu
Type indicates to use 'latest'. Just assuming -recentCalls
RecentCalls (%@) -> callRecordsForRecentCalls (%@)
Type indicates we should be searching for outgoing calls
Type indicates we should be searching for missed calls
Type indicates we should be searching for incoming calls
No type indicated
Calling completion block with response: %@
resolveRecipientForSearchCallHistory: %@
Handle is present. Simply using the recipient to resolve with: %@
Found these matching contacts: %@
Found no matching contacts. Resolution not required
Only one match. Return the single matching contact
Generated the following INPerson from matching contact: %@
Multiple matches. Returning: %@
Resolving with: %@
Performing call history lookup using type: %ld
Using predicate: %@
recentCalls: %@
callRecords: %@
Error retrieving contact for identifier %@: %@
Error retrieving contacts for predicate %@: %@
Determining response with class %@ for dial request: %@
Resolution needs a value for zero contacts
Resolution for this single person: %@
Resolution for only one contact, but handle %@ is MMI or USSD which is unsupported
Resolution for only one contact. Determining if any single-contact resolution is required
There is a handle on the single contact. Nothing to do. Return success with that person.
There is no handle on the single contact.
Looking up contact in the contact store
Found matching contact: %@
No matching contact. Assume success with this person
No contact identifier. Result is unsupported
Resolving for all contacts (count: %lu)
Building resolution result to disambiguate all people for contact %@
Dial Request invalid: %@
Dial Request was for video, but FaceTime Video was not available
Dial Request was for FT Audio, but FaceTime Audio was not available
Dial Request was for Telephony, but supportsTelephonyCalls was not true
Building INPeople from labeled values: %@
Generated person: %@
alloc
initWithFailureResponse
userActivity
destinationType
successWithResolvedCallDestinationType:
contacts
count
firstObject
personHandle
value
resolutionResultNotRequired
arrayWithObjects:count:
length
dataSource
providerManager
emergencyProvider
emergencyLabeledHandles
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
handle
label
initWithValue:type:label:
initWithPersonHandle:nameComponents:displayName:image:contactIdentifier:customIdentifier:
addObject:
resolutionResultDisambiguationWithItemsToDisambiguate:
sharedControllerWithCoalescingStrategy:options:
recentCalls
callerId
handleType
callerIdLabel
callerNameForDisplay
contactIdentifier
successWithResolvedPerson:
unsupported
personResolutionResultsForCallIntent:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handleStartAudioCall:completion:
confirmStartAudioCall:completion:
resolveDestinationTypeForStartAudioCall:withCompletion:
resolveContactsForStartAudioCall:withCompletion:
preferredCallProvider
initWithCode:userActivity:
initWithFailureAppConfigurationRequiredResponse
initWithFailureCallingServiceNotAvailableResponse
initWithContinueInAppResponseWithUserActivity:
init
initWithDataSource:
dateCreated
startDateComponents
endDateComponents
recipient
callCapabilities
callTypes
callHistoryControllerOptionsForCallCapabilities:
setCallHistoryOptions:
callHistoryOptions
callRecordsForRecentCalls:usingType:
date
callRecordsForRecentCallsWithStatus:date:recipient:usingType:
maximumRecordCount
subarrayWithRange:
setCallRecords:
relationship
siriMatches
predicateForContactsWithIdentifiers:
contactKeysToFetch
unifiedContactsMatchingPredicate:keysToFetch:
displayName
predicateForContactsMatchingName:
initWithContact:
copy
disambiguationWithPeopleToDisambiguate:
unifiedContactWithIdentifier:keysToFetch:
callerIdLocation
callStatus
setPersonHandle:
uniqueId
mediaType
duration
numberWithDouble:
read
numberWithInt:
initWithIdentifier:dateCreated:caller:callRecordType:callCapability:callDuration:unseen:
numberWithUnsignedInt:
predicateWithFormat:
andPredicateWithSubpredicates:
recentCallsWithPredicate:
handleSearchCallHistory:completion:
confirmSearchCallHistory:completion:
resolveCallTypeForSearchCallHistory:withCompletion:
resolveDateCreatedForSearchCallHistory:withCompletion:
resolveRecipientForSearchCallHistory:withCompletion:
resolveCallTypesForSearchCallHistory:withCompletion:
resolveUnseenForSearchCallHistory:withCompletion:
.cxx_destruct
_dataSource
callHistoryControllerWithCoalescingStrategy:options:
callHistoryController
options
setOptions:
contactStore
unifiedContactWithIdentifier:keysToFetch:error:
code
unifiedContactsMatchingPredicate:keysToFetch:error:
setCallHistoryController:
_callHistoryController
_contactStore
resolutionResultNeedsValue
sharedInstance
array
phoneNumbers
_inPersonsFromCNLabeledValues:inPerson:withType:
addObjectsFromArray:
emailAddresses
isValid
isVideo
isDirectFaceTimeVideoCallingCurrentlyAvailable
provider
isFaceTimeProvider
isDirectFaceTimeAudioCallingCurrentlyAvailable
isTelephonyProvider
supportsTelephonyCalls
stringValue
nameComponents
image
customIdentifier
responseWithClass:forDialRequest:
canHandleDialRequest:
setDataSource:
signInController
isFaceTimeEnabled
radiosPreferences
airplaneMode
isEqualToString:
supportsPrimaryCalling
canAttemptTelephonyCallsWithoutCellularConnection
logOutgoingCallToHandle:
isAirplaneModeEnabled
isCellularServiceAvailable
_signInController
_providerManager
_radiosPreferences
handlerForIntent:
dealloc
StartAudioCallIntentHandler
INStartAudioCallIntentHandling
NSObject
StartCallIntent
StartCallIntentResponse
SearchCallHistoryIntentHandler
INSearchCallHistoryIntentHandling
SearchCallHistoryIntentHandlerDataSource
StartCallIntentHandler
StartCallIntentHandlerDataSource
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@8@?12
v16@0:4@"INStartAudioCallIntent"8@?<v@?@"INStartAudioCallIntentResponse">12
v16@0:4@"INStartAudioCallIntent"8@?<v@?@"INCallDestinationTypeResolutionResult">12
v16@0:4@"INStartAudioCallIntent"8@?<v@?@"NSArray">12
i8@0:4
@"NSArray"8@0:4
@12@0:4@8
@12@0:4@"NSUserActivity"8
I12@0:4I8
v16@0:4@"INSearchCallHistoryIntent"8@?<v@?@"INSearchCallHistoryIntentResponse">12
v16@0:4@"INSearchCallHistoryIntent"8@?<v@?@"INCallRecordTypeResolutionResult">12
v16@0:4@"INSearchCallHistoryIntent"8@?<v@?@"INDateComponentsRangeResolutionResult">12
v16@0:4@"INSearchCallHistoryIntent"8@?<v@?@"INPersonResolutionResult">12
v16@0:4@"INSearchCallHistoryIntent"8@?<v@?@"INCallRecordTypeOptionsResolutionResult">12
v16@0:4@"INSearchCallHistoryIntent"8@?<v@?@"INBooleanResolutionResult">12
@16@0:4@8i12
@24@0:4I8@12@16i20
v8@0:4
@"<SearchCallHistoryIntentHandlerDataSource>"
@16@0:4@8@12
v12@0:4I8
@"NSArray"12@0:4@"NSPredicate"8
@"CNContact"16@0:4@"NSString"8@"NSArray"12
@"NSArray"16@0:4@"NSPredicate"8@"NSArray"12
v12@0:4@8
@"TUCallHistoryController"
@"CNContactStore"
@16@0:4#8@12
@20@0:4@8@12i16
@"<StartCallIntentHandlerDataSource>"
v12@0:4@"TUHandle"8
@"TUCallProviderManager"8@0:4
@"IDSSignInController"
@"TUCallProviderManager"
@"RadiosPreferences"
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
contacts
T@"NSArray",R,C,N
preferredCallProvider
Ti,R,N
(callStatus & %@) != 0
date > %@
callerId == %@
contactKeysToFetch
T@"NSArray",R,N
maximumRecordCount
TI,R,N
dataSource
T@"<SearchCallHistoryIntentHandlerDataSource>",R,N,V_dataSource
callHistoryOptions
TI,N
recentCalls
callHistoryController
T@"TUCallHistoryController",&,N,V_callHistoryController
contactStore
T@"CNContactStore",R,N,V_contactStore
T@"<StartCallIntentHandlerDataSource>",&,N,V_dataSource
faceTimeEnabled
TB,R,N,GisFaceTimeEnabled
providerManager
T@"TUCallProviderManager",R,N
airplaneModeEnabled
TB,R,N,GisAirplaneModeEnabled
cellularServiceAvailable
TB,R,N,GisCellularServiceAvailable
supportsPrimaryCalling
TB,R,N
supportsTelephonyCalls
directFaceTimeAudioCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeAudioCallingCurrentlyAvailable
directFaceTimeVideoCallingCurrentlyAvailable
TB,R,N,GisDirectFaceTimeVideoCallingCurrentlyAvailable
canAttemptTelephonyCallsWithoutCellularConnection
signInController
T@"IDSSignInController",R,N,V_signInController
radiosPreferences
T@"RadiosPreferences",R,N,V_radiosPreferences
T@"TUCallProviderManager",R,N,V_providerManager
v4@?0
com.apple.calls.intenthandler
Default
_TtC18PhoneIntentHandler12IntentRouter
@12@0:4@8
@8@0:4
PhoneIntentHandler
IntentRouter
So11INExtensionC
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.CallHistory.sync.allow</key>
<true/>
<key>com.apple.CallKit.call-directory</key>
<array>
<string>synchronize-extensions</string>
<string>compact-store</string>
<string>query-identification-entries</string>
</array>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.coreaudio.allow-amr-decode</key>
<true/>
<key>com.apple.private.CallHistory.read-write</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.ess</string>
<string>com.apple.private.ac</string>
</array>
<key>com.apple.private.intents.extension</key>
<true/>
<key>com.apple.private.suggestions.contacts</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.security.app-sandbox</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>/Library/Voicemail/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Voicemail/</string>
<string>/Library/Logs/CallHistory</string>
<string>/Library/CallHistoryDB/</string>
<string>/Media/Recordings/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.voicemail.vmd</string>
<string>com.apple.commcenter.xpc</string>
</array>
<key>com.apple.security.personal-information.addressbook</key>
<true/>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.telephonyutilities.callservicesdaemon.callprovidermanager</string>
<string>com.apple.telephonyutilities.callservicesdaemon.callstatecontroller</string>
<string>com.apple.identityservicesd.desktop.auth</string>
<string>com.apple.CallHistorySyncHelper</string>
<string>com.apple.commcenter.xpc</string>
</array>
<key>com.apple.telephonyutilities.callservicesd</key>
<array>
<string>access-calls</string>
<string>access-call-providers</string>
<string>modify-calls</string>
<string>access-call-capabilities</string>
<string>modify-call-capabilities</string>
</array>
<key>com.apple.visualvoicemail.client</key>
<true/>
</dict>
</plist>
