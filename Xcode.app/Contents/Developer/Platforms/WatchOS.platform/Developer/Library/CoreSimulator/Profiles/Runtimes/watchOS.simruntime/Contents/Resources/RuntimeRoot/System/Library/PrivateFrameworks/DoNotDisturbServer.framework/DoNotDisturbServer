_initWithRecord:
interruptionBehaviorSetting
_initWithInterruptionBehaviorSetting:
init
copy
numberWithInt:
hash
class
isKindOfClass:
isEqual:
stringWithFormat:
alloc
bs_safeObjectForKey:ofType:
dictionary
setObject:forKey:
migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
copyWithZone:
mutableCopyWithZone:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
initWithDictionaryRepresentation:
dictionaryRepresentation
migrateDictionaryRepresentations:fromVersionNumber:toVersionNumber:
.cxx_destruct
_interruptionBehaviorSetting
setInterruptionBehaviorSetting:
distantPast
defaultManager
path
fileExistsAtPath:
dataWithContentsOfURL:options:error:
JSONObjectWithData:options:error:
integerValue
doubleValue
dateWithTimeIntervalSinceReferenceDate:
bs_mapNoNulls:
numberWithUnsignedInteger:
timeIntervalSinceReferenceDate
numberWithDouble:
dictionaryWithObjects:forKeys:count:
dataWithJSONObject:options:error:
URLByDeletingLastPathComponent
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToURL:options:error:
readAllRecordsWithError:lastUpdateDate:
writeAllRecords:withError:
initWithRecordClass:fileURL:versionNumber:
_recordClass
_fileURL
_versionNumber
scheduleEnabledSetting
timePeriod
startTime
dateComponents
endTime
nextDateAfterDate:matchingComponents:options:
compare:
initWithStartDate:endDate:
dnds_dateIntervalForScheduleSettings:date:calendar:
dnds_dateIntervalUntilEndOfScheduleForScheduleSettings:startDate:calendar:
initWithModeAssertion:effectiveLifetime:
modeAssertion
effectiveLifetime
_modeAssertion
_effectiveLifetime
initWithActiveUUIDs:expiredUUIDs:
activeUUIDs
expiredUUIDs
_activeUUIDs
_expiredUUIDs
cStringUsingEncoding:
dealloc
refreshMonitorFromQueueForDate:
dataSource
allModeAssertionsForLifetimeMonitor:
lifetimeMonitor:effectiveLifetimeForModeAssertion:
willMonitorLifetime:
updateForModeAssertionDetails:date:
delegate
count
lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:
activeAssertionsDidChangeForLifetimeMonitor:
activeLifetimeAssertionUUIDs
UUIDString
sysdiagnoseDataForDate:
sysdiagnoseDataIdentifier
refreshMonitorForDate:
setDataSource:
setDelegate:
queue
_queue
_activeLifetimeAssertionUUIDs
_dataSource
_delegate
type
value
arrayWithObjects:count:
predicateForContactsWithIdentifiers:
normalizedDestination
destinationIdIsPhoneNumber
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:prefixHint:
predicateForContactsMatchingEmailAddress:
dnds_predicateForContactsMatchingEventSource:
initWithContactStore:
_queue_resolveBehaviorForEventDetails:clientIdentifier:date:error:
UUID
date
localizedStringFromDate:dateStyle:timeStyle:
clientIdentifier
outcome
reason
currentStateForEventBehaviorResolver:
shouldAlwaysInterrupt
willSuppressInterruptions
source
_queue_resolveOutcomeForEventSource:clientIdentifier:date:reason:
detailsForInactiveDoNotDisturb
activeModeAssertionMetadata
modeIdentifier
arrayByAddingObject:
modeDetailsForIdentifiers:
countByEnumeratingWithState:objects:count:
restrictedDetailsWithDetails:
interruptionSuppression
initWithEventDetails:interruptionSuppression:
resolutionForDate:eventBehavior:clientIdentifier:outcome:reason:
addObject:
dateByAddingTimeInterval:
predicateWithBlock:
filterUsingPredicate:
eventBehaviorResolver:bypassSettingsForClientIdentifier:
immediateBypassEventSourceType
_queue_eventSourceIsFavorite:
_queue_eventSourceIsContact:
immediateBypassCNGroupIdentifier
_queue_eventSourceIsContact:inGroupWithIdentifier:
repeatEventSourceBehaviorEnabledSetting
_queue_eventSourceIsRepeat:clientIdentifier:date:
_queue_eventSourceIsEmergencyContact:
initWithKeysToFetch:
setPredicate:
setUnifyResults:
isUnified
linkedContacts
entriesForContact:
bs_containsObjectPassingTest:
enumerateContactsWithFetchRequest:error:usingBlock:
predicateForContactsInGroupWithIdentifier:
unifiedContactsMatchingPredicate:keysToFetch:error:
bs_flatten
identifier
isEqualToString:
eventBehavior
eventDetails
callAlert
ignoreMute
initWithModeRepository:contactStore:
resolveBehaviorForEventDetails:clientIdentifier:date:error:
_modeRepository
_contactStore
_favorites
_resolutionRecord
initWithAssertion:reason:
assertion
supportsSecureCoding
initWithClientIdentifier:assertion:reason:
replacementObjectForCoder:
_clientIdentifier
unsignedIntegerValue
makeRecord
settingsForRecord:
initWithUnderlyingBackingStore:
_underlyingBackingStore
_cache
_lastUpdateDate
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
bs_setSafeObject:forKey:
_immediateBypassEventSourceType
_immediateBypassCNGroupIdentifier
_repeatEventSourceBehaviorEnabledSetting
setImmediateBypassEventSourceType:
setImmediateBypassCNGroupIdentifier:
setRepeatEventSourceBehaviorEnabledSetting:
requestAccessToEntityType:completion:
defaultCenter
_calendarEventStoreChangedWithNotification:
addObserver:selector:name:object:
eventUniqueID
occurrenceDate
eventWithUniqueId:occurrenceDate:
isOnlyDuringEvent
startDate
endDate
distantFuture
array
activeDateIntervalForCalendarEventLifetime:assertionStartDate:
earlierDate:
isEqualToDate:
fireTime
invalidate
_timerFired:
initWithFireDate:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
setUserVisible:
scheduleInQueue:
userInfo
_eventStore
_lifetimeTimer
details
isUserRequested
lifetime
shouldBePersisted
isManualToggle
dateInterval
assertionDetailsLifetimeType
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
boolValue
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
assertionStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
initWithDateInterval:
lifetimeWithCurrentLocation
assertionDetailsUserRequested
assertionDetailsSyncSuppressionOptions
assertionDetailsIdentifier
assertionDetailsModeIdentifier
initWithIdentifier:modeIdentifier:lifetime:userRequested:syncSuppressionOptions:
assertionUUID
initWithUUIDString:
assertionClientIdentifier
initWithClientIdentifier:UUID:startDate:details:
setAssertionClientIdentifier:
setAssertionUUID:
setAssertionStartDateTimestamp:
setAssertionDetailsIdentifier:
setAssertionDetailsModeIdentifier:
numberWithBool:
setAssertionDetailsUserRequested:
syncSuppressionOptions
setAssertionDetailsSyncSuppressionOptions:
setAssertionDetailsLifetimeType:
setAssertionDetailsCalendarEventLifetimeEventUniqueIdentifier:
setAssertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp:
setAssertionDetailsCalendarEventLifetimeOnlyDuringEvent:
setAssertionDetailsDateIntervalLifetimeStartDateTimestamp:
setAssertionDetailsDateIntervalLifetimeEndDateTimestamp:
modeAssertionForRecord:
dnd_locationBundle
initWithEffectiveBundle:
_queue_refreshMonitor
_queue_stopMonitoringCurrentLocation
_queue_sendExpiryEventForAllLocationAssertions
lastObject
_queue_geofenceLocation:
_allRelevantAssertions
isEqualToArray:
_queue_beginMonitoringCurrentLocation
bs_filter:
requestLocation
stopMonitoringForRegion:
coordinate
initNearbyAllowedWithCenter:radius:identifier:
setNotifyOnExit:
setNotifyOnEntry:
startMonitoringForRegion:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
_locationManager
_currentRegion
_hasActiveLifetimes
lastUpdatedTimestamp
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
bedtimeBehaviorEnabledSetting
_initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:bedtimeBehaviorEnabledSetting:
_lastUpdatedTimestamp
_scheduleEnabledSetting
_timePeriodStartTimeHour
_timePeriodStartTimeMinute
_timePeriodEndTimeHour
_timePeriodEndTimeMinute
_bedtimeBehaviorEnabledSetting
setLastUpdatedTimestamp:
setScheduleEnabledSetting:
setTimePeriodStartTimeHour:
setTimePeriodStartTimeMinute:
setTimePeriodEndTimeHour:
setTimePeriodEndTimeMinute:
setBedtimeBehaviorEnabledSetting:
hashTableWithOptions:
_loadDataFromStore
_queue_allModeAssertionsWithError:
bs_firstObjectPassingTest:
_queue_takeModeAssertionWithDetails:clientIdentifier:source:error:
_queue_invalidateModeAssertionsWithUUIDs:reason:error:
firstObject
_queue_invalidateAllModeAssertionsTakenBeforeDate:forReason:error:
_queue_assertionWithUUID:error:
allModeAssertionsWithError:
lastCompleteInvalidationDate
objectForKey:
_saveDataToStoreWithError:
_sendUpdateToAllObserversForTakenAssertions:source:
allValues
containsObject:
removeObjectForKey:
_sendUpdateToAllObserversForAssertionInvalidations:
modeAssertionProvider:didTakeAssertions:forSource:
modeAssertionProvider:didPerformInvalidations:
storeAssertionRecords
storeLastCompleteInvalidationTimestamp
setStoreLastCompleteInvalidationTimestamp:
setStoreAssertionRecords:
assertionWithUUID:error:
addObserver:
removeObserver:
initWithBackingStore:
assertionWithClientIdentifier:error:
takeModeAssertionWithDetails:clientIdentifier:source:error:
invalidateModeAssertionWithUUID:reason:error:
invalidateModeAssertionWithUUIDs:reason:error:
lastUpdateDate
invalidateAllModeAssertionsTakenBeforeDate:forReason:error:
_observers
_backingStore
_assertionsByUUID
_lastCompleteInvalidationDate
assertionDetailsDateIntervalLifetimeStartDateTimestamp
_initWithAssertionUUID:assertionStartDateTimestamp:assertionClientIdentifier:assertionDetailsIdentifier:assertionDetailsModeIdentifier:assertionDetailsLifetimeType:assertionDetailsUserRequested:assertionDetailsSyncSuppressionOptions:assertionDetailsCalendarEventLifetimeEventUniqueIdentifier:assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp:assertionDetailsCalendarEventLifetimeOnlyDuringEvent:assertionDetailsDateIntervalLifetimeStartDateTimestamp:assertionDetailsDateIntervalLifetimeEndDateTimestamp:
mutableCopy
initWithSyncDictionaryRepresentation:
syncDictionaryRepresentation
_assertionUUID
_assertionStartDateTimestamp
_assertionClientIdentifier
_assertionDetailsIdentifier
_assertionDetailsModeIdentifier
_assertionDetailsLifetimeType
_assertionDetailsUserRequested
_assertionDetailsSyncSuppressionOptions
_assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
_assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
_assertionDetailsCalendarEventLifetimeOnlyDuringEvent
_assertionDetailsDateIntervalLifetimeStartDateTimestamp
_assertionDetailsDateIntervalLifetimeEndDateTimestamp
fileURLWithPathComponents:
URLByAppendingPathComponent:
dnds_localAssertionBackingStoreFileURL
dnds_settingsBackingStoreFileURL
dnds_legacySettingsFileURL
_initWithStoreLastCompleteInvalidationTimestamp:storeAssertionRecords:
_storeLastCompleteInvalidationTimestamp
_storeAssertionRecords
initWithInterruptionSuppression:
_interruptionSuppression
allObjects
_queue_recalculateStateForReason:
removeObject:
currentlyActiveModeAssertionsForStateProvider:
currentLostModeStateForStateProvider:
currentInterruptionBehaviorSettingForStateProvider:
currentUILockStateForStateProvider:
stateProvider:effectiveModeIdentifierForModeAssertion:
stateProvider:effectiveLifetimeForModeAssertion:
stateProvider:activeDateIntervalForModeAssertion:
lifetimeType
initWithModeIdentifier:userRequested:lifetimeType:activeDateInterval:
initWithActive:willSuppressInterruptions:activeModeAssertionMetadata:
initWithPreviousState:state:reason:
stateProvider:didUpdateDoNotDisturbState:
currentStateWithError:
addUpdateListener:
removeUpdateListener:
recalculateStateForReason:
_stateUpdateListeners
_currentState
initRequiringSecureCoding:
setClassName:forClass:
dnds_secureLegacyArchiver
initForReadingFromData:error:
setClass:forClassName:
dnds_secureLegacyUnarchiverForReadingFromData:error:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:creationDate:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:
creationDate
settingsWithClientSettings:creationDate:
_creationDate
_readSettingsReturningError:
behaviorSettings
_saveBehaviorSettings:phoneCallBypassSettings:scheduleSettings:error:
settingsManager:didReceiveUpdatedBehaviorSettings:
phoneCallBypassSettings
settingsManager:didReceiveUpdatedPhoneCallBypassSettings:
scheduleSettings
settingsManager:didReceiveUpdatedScheduleSettings:
syncSettings
setBehaviorSettings:
setPhoneCallBypassSettings:
setScheduleSettings:
settingsManager:didReceiveUpdatedSyncSettings:
syncSettingsProvider:didReceiveUpdatedSyncSettings:
initWithBackingStore:contactStore:
behaviorSettingsWithError:
setBehaviorSettings:withError:
phoneCallBypassSettingsWithError:
setPhoneCallBypassSettings:withError:
scheduleSettingsWithError:
setScheduleSettings:withError:
syncSettingsWithError:
_syncSettingsProvider
backingStoreWithFileURL:
initWithDomain:
synchronize
_endMonitoringForChanges
_beginMonitoringForChanges
updateForReason:
activeLocalModeAssertionsForSyncManager:
lastModeAssertionsUpdateDateForSyncManager:
_queue_updateToggleSyncForLocalAssertions:lastUpdateDate:reason:
_queue_updateGizmoAssertionSync
_queue_invalidateAllModeAssertionsTakenBeforeDate:forReason:
bs_safeAddObject:
_queue_updateCompanionAssertionMirroringForLocalAssertions:
laterDate:
legacyAssertionSyncManager:activeDateIntervalForModeAssertion:
_queue_gizmoUpdateDate
_queue_updateCompanionToggleSyncForLocalAssertions:gizmoUpdateDate:
_queue_updateGizmoToggleSyncForLocalAssertions:companionUpdateDate:reason:
doubleForKey:keyExistsAndHasValidFormat:
dateWithTimeIntervalSinceNow:
boolForKey:
setBool:forKey:
setDouble:forKey:
setWithObjects:
synchronizeNanoDomain:keys:
userRequestedAssertionDetailsWithIdentifier:modeIdentifier:lifetime:
_sendUpdateToAllObserversForTakenAssertions:
syncManager:invalidateAllModeAssertionsTakenBeforeDate:forReason:
setWithObject:
detailsWithIdentifier:modeIdentifier:lifetime:
cleanupState
resume
invalidateAllModeAssertionsTakenBeforeDate:forReason:
_updateGizmoAssertionSync
_npsManager
_accessor
_gizmoToggleAssertion
_gizmoWorkoutAssertion
_lastInvalidationDate
_initWithListen:send:
update
phoneCallBypassSettingsForSyncManager:
scheduleSettingsForSyncManager:
_propagateBypassSettings:
_propagateScheduleSettings:
legacyBehaviorOverride
encodeObject:forKey:
encodedData
decodeObjectOfClasses:forKey:
recordForLegacyBehaviorOverride:lastUpdated:
syncManager:didReceiveUpdatedScheduleSettings:
legacyPrivilegedSenderType
setInteger:forKey:
integerForKey:keyExistsAndHasValidFormat:
recordForLegacyPrivilegedSenderType:legacyAddressBookID:
syncManager:didReceiveUpdatedPhoneCallBypassSettings:
managerForSender
managerForReceiver
_updateScheduleSettings
_updateBypassSettings
_listen
_send
initWithRecordClass:versionNumber:
_queue_sendStateSnapshotToAllRemotes
_queue_invalidateAllLocalModeAssertionsTakenBeforeDate:forReason:
_queue_invalidateAllRemoteModeAssertionsTakenBeforeDate:forReason:
_queue_receivedRemoteSyncRecord:remoteDeviceIdentifier:
setSnapshotUUID:
setSnapshotTimestamp:
setSnapshotAssertionStore:
sendRecordToRemotes:withCompletionHandler:
snapshotAssertionStore
snapshotLastFullAssertionInvalidationReason
dictionaryWithObjects:forKeys:
syncService:didReceiveRecord:sourceIdentifier:
_syncService
_invalidateAllModeAssertionsDate
_invalidateAllModeAssertionsReason
dictionaryWithContentsOfURL:
recordWithEncodedInfo:error:
timeIntervalSinceNow
removeItemAtURL:error:
deviceIdentifier
deviceClass
initWithDeviceIdentifier:deviceClass:
_deviceIdentifier
_deviceClass
dnds_lifetimeForScheduleSettings:date:calendar:
dnds_nextLifetimeForScheduleSettings:calendar:
dnds_lifetimeUntilEndOfScheduleForScheduleSettings:startDate:calendar:
_initWithUUID:date:eventBehavior:clientIdentifier:outcome:reason:
_UUID
_date
_eventBehavior
_outcome
_reason
_queue_refreshWithDate:
scheduleSettingsForScheduleManager:
currentCalendar
containsDate:
isActiveForDate:
dnds_detailsForScheduleSettings:lifetime:
transformedModeIdentifierForModeAssertion:
transformedLifetimeForModeAssertion:
initWithLocalAssertionManager:
refresh
_localAssertionManager
_currentAssertionUUID
_currentScheduleSettings
decodeIntegerForKey:
initWithOverrideType:mode:effectiveIntervals:
overrideType
encodeInteger:forKey:
mode
encodeInt:forKey:
effectiveIntervals
encodeWithCoder:
initWithCoder:
_overrideType
_mode
_effectiveIntervals
pairedDeviceWithError:
_queue_resume
_queue_sendRecordToRemotes:error:
_queue_handleIncomingMessage:sourceIdentifier:
initWithService:
addDelegate:queue:
devices
isLocallyPaired
isActive
sendMessage:toDestinations:priority:options:identifier:error:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_activePairedDevice
_updateListeners
_initWithSnapshot:
snapshotUUID
snapshotTimestamp
_initWithSnapshotUUID:snapshotTimestamp:snapshotLastFullAssertionInvalidationReason:snapshotAssertionStore:
_snapshotUUID
_snapshotTimestamp
_snapshotLastFullAssertionInvalidationReason
_snapshotAssertionStore
setSnapshotLastFullAssertionInvalidationReason:
weakObjectsHashTable
dataWithPropertyList:format:options:error:
length
getBytes:length:
decodeObjectOfClass:forKey:
initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:identifier:
startComponents
endComponents
calendarIdentifier
repeatInterval
_startComponents
_endComponents
_calendarIdentifier
_repeatInterval
_identifier
initWithUUID:startDate:details:
isSyncEnabled
initWithSyncEnabled:
_syncEnabled
_recordWithEncodedInfo:error:
bs_firstObjectOfClass:
hour
numberWithInteger:
minute
setHour:
setMinute:
intValue
predicateForiOSLegacyIdentifier:
requestAccessForEntityType:completionHandler:
groupsMatchingPredicate:error:
_updateSyncPreferences
boolForKey:keyExistsAndHasValidFormat:
_syncSettings
_initWithBehaviorSettings:phoneCallBypassSettings:scheduleSettings:
_behaviorSettings
_phoneCallBypassSettings
_scheduleSettings
setStartTime:
setEndTime:
initWithIdentifier:connection:
connection
wantsStateUpdates
setWantsStateUpdates:
wantsAssertionUpdates
setWantsAssertionUpdates:
wantsSettingsUpdates
setWantsSettingsUpdates:
_wantsStateUpdates
_wantsAssertionUpdates
_wantsSettingsUpdates
_connection
initWithMachServiceName:
setWithArray:
remoteObjectProxy
deliverStateUpdate:
_queue_handleModeAssertionInvalidations:
deliverUpdatedBehaviorSettings:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedScheduleSettings:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
_handleClientConnectionInterrupted:
setInterruptionHandler:
_handleClientConnectionInvalidated:
setInvalidationHandler:
dnds_hasAnyValidEntitlement
currentConnection
dnds_hasBehaviorResolutionEntitlementForClientIdentifier:
remoteServiceProvider:resolveBehaviorForEventDetails:clientIdentifier:date:error:
dnds_hasEntitlementsToRequestAssertionWithDetails:clientIdentifier:
_takeModeAssertionWithDetails:clientConnection:clientIdentifier:error:invalidation:
dnds_hasModeAssertionEntitlementForClientIdentifier:
_invalidateActiveModeAssertionForClientConnection:clientIdentifier:error:
_activeModeAssertionForClientConnection:clientIdentifier:error:
dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:
_invalidateAllActiveModeAssertionsWithReason:error:
_registerWantsAssertionUpdatesForClientConnection:clientIdentifier:error:
dnds_hasStateRequestEntitlementForClientIdentifier:
remoteServiceProvider:currentStateWithError:
dnds_hasStateUpdatesEntitlementForClientIdentifier:
_registerWantsStateUpdatesForClientConnection:clientIdentifier:error:
dnds_hasSettingsRequestEntitlementForClientIdentifier:
remoteServiceProvider:behaviorSettingsWithError:
dnds_hasSettingsModificationEntitlementForClientIdentifier:
remoteServiceProvider:setBehaviorSettings:withError:
remoteServiceProvider:phoneCallBypassSettingsWithError:
remoteServiceProvider:setPhoneCallBypassSettings:withError:
remoteServiceProvider:scheduleSettingsWithError:
remoteServiceProvider:setScheduleSettings:withError:
dnds_hasSettingsUpdatesEntitlementForClientIdentifier:
_registerWantsSettingsUpdatesForClientConnection:clientIdentifier:error:
_unregisterConnectionDetailsForClientConnection:
_queue_registerConnectionDetailsForClientConnection:clientIdentifier:error:
_queue_unregisterConnectionDetailsForClientConnection:
_queue_getConnectionDetailsForClientConnection:clientIdentifier:error:
_queue_activeModeAssertionWithClientConnection:clientIdentifier:error:
_queue_invalidateActiveModeAssertionForClientConnection:clientIdentifier:reason:error:
_queue_registerWantsStateUpdatesForClientConnection:clientIdentifier:error:
_queue_registerWantsSettingsUpdatesForClientConnection:clientIdentifier:error:
_queue_registerWantsAssertionUpdatesForClientConnection:clientIdentifier:error:
_queue_takeModeAssertionWithDetails:clientConnection:clientIdentifier:error:invalidation:
remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:source:error:
remoteServiceProvider:assertionWithClientIdentifer:error:
remoteServiceProvider:invalidateModeAssertionWithUUID:reason:error:
_queue_invalidateAllActiveModeAssertionsWithReason:error:
remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:error:
deliverModeAssertionInvalidation:forClientIdentifier:
listener:shouldAcceptNewConnection:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
takeModeAssertionWithDetails:requestDetails:completionHandler:
invalidateActiveModeAssertionWithRequestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
registerForAssertionUpdatesWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
setBehaviorSettings:withRequestDetails:completionHandler:
getPhoneCallBypassSettingsWithRequestDetails:completionHandler:
setPhoneCallBypassSettings:withRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
setScheduleSettings:withRequestDetails:completionHandler:
registerForSettingsUpdatesWithRequestDetails:completionHandler:
handleStateUpdate:
handleModeAssertionInvalidations:
handleUpdatedBehaviorSettings:
handleUpdatedPhoneCallBypassSettings:
handleUpdatedScheduleSettings:
_registerConnectionDetailsForClientConnection:clientIdentifier:error:
_listener
_clientConnectionQueue
_clientConnectionDetailsByIdentifier
interfaceWithProtocol:
_dnds_safeStringArrayEntitlementForKey:
valueForEntitlement:
filteredArrayUsingPredicate:
sharedInstance
fileURLWithPath:
lastPathComponent
productHardwareModel
productBuildVersion
domain
code
alphanumericCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByReplacingOccurrencesOfString:withString:
URLWithString:
defaultWorkspace
openURL:
lostModeIsActive
_queue_updateLifetimeMonitorsAndStateForReason:
setLockState:
setLostModeState:
arrayByAddingObjectsFromArray:
_effectiveLifetimeForModeAssertion:
_activeModeAssertionsConsideringProviders:
_activeDateIntervalForModeAssertion:
lockState
lostModeState
_queue_handlePairedDeviceAndSyncSettingsChange
addObjectsFromArray:
lastModeAssertionsCompleteInvalidationDateForSyncManager:
pairedDeviceStateMonitor:didChangePairedDevice:
_handleSignificantTimeChange
setUILockState:error:
_setLostModeState:error:
lastModeAssertionsCompleteInvalidationDateForScheduleManager:
_calendarEventLifetimeMonitor
_lifetimeMonitors
_scheduleManager
_assertionTransformers
_stateProvider
_eventBehaviorResolver
_serviceProvider
_assertionSyncManager
_settingsSyncManager
_settingsManager
_pairedDeviceStateMonitor
_lockState
_lostModeState
<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSNumber",R,C,N,V_interruptionBehaviorSetting
T@"NSNumber",C,D,N
unknown
system
user
client
remote
<invalid>
header
version
timestamp
data
@8@?0@4
@"NSDictionary"8@?0@"NSDictionary"4
@8@?0@"<DNDSBackingStoreRecord>"4
modeAssertion
T@"DNDModeAssertion",R,C,N,V_modeAssertion
effectiveLifetime
T@"DNDModeAssertionLifetime",R,C,N,V_effectiveLifetime
activeUUIDs
T@"NSArray",R,C,N,V_activeUUIDs
expiredUUIDs
T@"NSArray",R,C,N,V_expiredUUIDs
com.apple.donotdisturb.lifetime-monitor.%@
v4@?0
@"DNDSLifetimeMonitorModeAssertionDetails"8@?0@"DNDModeAssertion"4
@"NSString"8@?0@"NSUUID"4
active-uuids
sysdiagnoseDataIdentifier
T@"NSString",R,C,N
activeLifetimeAssertionUUIDs
T@"NSArray",R,C,N
dataSource
T@"<DNDSLifetimeMonitorDataSource>",W,N
delegate
T@"<DNDSLifetimeMonitorDelegate>",W,N
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSString",R,C,D,N
T@"NSArray",R,C,N,V_activeLifetimeAssertionUUIDs
T@"<DNDSLifetimeMonitorDataSource>",W,N,V_dataSource
T@"<DNDSLifetimeMonitorDelegate>",W,N,V_delegate
com.apple.donotdisturb.EventBehaviorResolutionService
com.apple.donotdisturb.EventBehaviorResolver
uuid
local-date
client-identifier
outcome
reason
@"NSDictionary"8@?0@"DNDSEventBehaviorResolution"4
resolution-record
@"NSString"8@?0@"DNDStateModeAssertionMetadata"4
B12@?0@"DNDSEventBehaviorResolution"4@8
B8@?0@"CNContact"4
v12@?0@"CNContact"4^B8
@8@?0@"CNContact"4
B8@?0@"DNDSEventBehaviorResolution"4
T@"<DNDSEventBehaviorResolverDataSource>",W,N,V_dataSource
UI locked
UI unlocked
<%@: %p; clientIdentifier: '%@'; assertion: %@; reason: %@>
clientIdentifier
T@"NSString",R,C,N,V_clientIdentifier
com.donotdisturb.server.MemoryCachedBackingStore
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_immediateBypassEventSourceType
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
T@"NSNumber",R,C,N,V_repeatEventSourceBehaviorEnabledSetting
T@"NSString",C,D,N
v12@?0B4@"NSError"8
com.apple.donotdisturb.server.CalendarEventLifetimeMonitor.timer
shouldBePersisted
TB,R,D,N
manualToggle
TB,R,D,N,GisManualToggle
com.apple.donotdisturb.server.DateIntervalLifetimeMonitor.timer
calendar
date-interval
current-location
@"NSUUID"8@?0@"DNDSLifetimeMonitorModeAssertionDetails"4
com.donotdisturb.server.LocationLifetimeMonitor
@"NSUUID"8@?0@"DNDModeAssertion"4
B8@?0@"DNDModeAssertion"4
com.apple.donotdisturb.server.until-i-leave
<%@: %p; lastUpdatedTimestamp: %@; scheduleEnabledSetting: %@; timePeriodStartTimeHour: %@; timePeriodStartTimeMinute: %@; timePeriodEndTimeHour: %@; timePeriodEndTimeMinute: %@; bedtimeBehaviorEnabledSetting: %@>
lastUpdatedTimestamp
scheduleEnabledSetting
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
bedtimeBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_lastUpdatedTimestamp
T@"NSNumber",R,C,N,V_scheduleEnabledSetting
T@"NSNumber",R,C,N,V_timePeriodStartTimeHour
T@"NSNumber",R,C,N,V_timePeriodStartTimeMinute
T@"NSNumber",R,C,N,V_timePeriodEndTimeHour
T@"NSNumber",R,C,N,V_timePeriodEndTimeMinute
T@"NSNumber",R,C,N,V_bedtimeBehaviorEnabledSetting
com.apple.donotdisturb.server.LocalAssertionManager
B8@?0@"DNDSModeAssertion"4
@"DNDSModeAssertionRecord"8@?0@"DNDSModeAssertion"4
@"NSDictionary"8@?0@"DNDSModeAssertionRecord"4
last-invalidation
currently-held-assertions
@"DNDSModeAssertionInvalidation"8@?0@"DNDSModeAssertion"4
@"NSUUID"8@?0@"DNDSModeAssertion"4
@"DNDSModeAssertion"8@?0@"DNDSModeAssertionRecord"4
Bad data in the assertion database
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DoNotDisturb_Sim/DoNotDisturb-1.41/DoNotDisturbServer/DNDSLocalAssertionManager.m
Failed to load assertion database
Failed to write mode assertions
<%@: %p; assertionUUID: %@; assertionStartDateTimestamp: %@; assertionClientIdentifier: '%@'; assertionDetailsIdentifier: %@; assertionDetailsModeIdentifier: %@; assertionDetailsLifetimeType: %@; assertionDetailsUserRequested: %@; assertionDetailsSyncSuppressionOptions: %@; assertionDetailsCalendarEventLifetimeEventUniqueIdentifier: %@; assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp: %@; assertionDetailsCalendarEventLifetimeOnlyDuringEvent: %@; assertionDetailsDateIntervalLifetimeStartDateTimestamp: %@; assertionDetailsDateIntervalLifetimeEndDateTimestamp: %@>
user-requested
assertionDetailsLifetimeType
assertionDetailsUserRequested
assertionDetailsSyncSuppressionOptions
assertionUUID
assertionStartDateTimestamp
assertionClientIdentifier
assertionDetailsIdentifier
assertionDetailsModeIdentifier
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
assertionDetailsDateIntervalLifetimeStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
T@"NSString",R,C,N,V_assertionUUID
T@"NSNumber",R,C,N,V_assertionStartDateTimestamp
T@"NSString",R,C,N,V_assertionClientIdentifier
T@"NSString",R,C,N,V_assertionDetailsIdentifier
T@"NSString",R,C,N,V_assertionDetailsModeIdentifier
T@"NSNumber",R,C,N,V_assertionDetailsUserRequested
T@"NSNumber",R,C,N,V_assertionDetailsSyncSuppressionOptions
T@"NSString",R,C,N,V_assertionDetailsLifetimeType
T@"NSString",R,C,N,V_assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
T@"NSNumber",R,C,N,V_assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
T@"NSNumber",R,C,N,V_assertionDetailsCalendarEventLifetimeOnlyDuringEvent
T@"NSNumber",R,C,N,V_assertionDetailsDateIntervalLifetimeStartDateTimestamp
T@"NSNumber",R,C,N,V_assertionDetailsDateIntervalLifetimeEndDateTimestamp
Inactive
Active
Library
DoNotDisturb
Assertions.json
Settings.json
BulletinBoard
BehaviorOverrides.plist
<%@: %p; storeLastCompleteInvalidationTimestamp: %@; storeAssertionRecords: %@>
@8@?0@"NSDictionary"4
storeLastCompleteInvalidationTimestamp
storeAssertionRecords
@"DNDSModeAssertionRecord"8@?0@"NSDictionary"4
T@"NSNumber",R,C,N,V_storeLastCompleteInvalidationTimestamp
T@"NSArray",R,C,N,V_storeAssertionRecords
T@"NSArray",C,D,N
<%@: %p; interruptionSuppression: %@>
interruptionSuppression
TI,R,N,V_interruptionSuppression
com.apple.donotdisturb.mode.bedtime
com.apple.donotdisturb.mode.driving
com.donotdisturb.server.ModeAssertionStateProvider
@"DNDStateModeAssertionMetadata"8@?0@"DNDModeAssertion"4
T@"<DNDSModeAssertionStateProviderDataSource>",W,N,V_dataSource
BBBehaviorOverride
BBBehaviorOverrideEffectiveInterval
<%@: %p; scheduleEnabledSetting: %@; timePeriod: %@; bedtimeBehaviorEnabledSetting: %@; creationDate: %@>
creationDate
T@"NSDate",R,C,N,V_creationDate
com.apple.donotdisturb.server.SettingsManager
Failed to load settings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DoNotDisturb_Sim/DoNotDisturb-1.41/DoNotDisturbServer/DNDSSettingsManager.m
Error saving settings
T@"<DNDSSettingsManagerDelegate>",W,N,V_delegate
current state
always interrupt flag
always bypass
no bypass
favorite
contact
group contact
repeat event
emergency contact
com.donotdisturb.server.sync.legacy
dndState
dndStateDate
dndCompanionAssertActive
dndGizmoAssertActive
com.donotdisturb.server.LegacyAssertionSyncManager
DNDStateChangedNotification
DNDAssertStateChangedNotification
com.apple.donotdisturb.sync.legacy.toggle-assertion
com.apple.donotdisturb.sync.legacy.mirror-assertion
com.apple.donotdisturb.mode.workout
T@"<DNDSAssertionSyncManagerDataSource>",W,N
T@"<DNDSAssertionSyncManagerDelegate>",W,N
T@"<DNDSLegacyAssertionSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSAssertionSyncManagerDelegate>",W,N,V_delegate
dndEffectiveOverrides
dndPrivilegedSenderTypes
DNDEffectiveOverridesChangedNotification
DNDPrivilegedSenderChangedNotification
T@"<DNDSSettingsSyncManagerDataSource>",W,N
T@"<DNDSSettingsSyncManagerDelegate>",W,N
T@"<DNDSSettingsSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSSettingsSyncManagerDelegate>",W,N,V_delegate
com.apple.nano
com.apple.donotdisturb.server.ModernAssertionSyncManager
B12@?0@"NSUUID"4@"DNDSModeAssertion"8
T@"<DNDSAssertionSyncManagerDataSource>",W,N,V_dataSource
Error writing migrated settings
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DoNotDisturb_Sim/DoNotDisturb-1.41/DoNotDisturbServer/DNDSLegacySettingsMigration.m
Error loading legacy settings
com.apple.donotdisturb.legacy-migration
legacy-toggle
Error writing migrated assertions
Error removing legacy settings
<%@: %p; deviceIdentifier: '%@'; deviceClass: %@>
deviceIdentifier
T@"NSString",R,C,N,V_deviceIdentifier
deviceClass
TI,R,N,V_deviceClass
phone
watch
watch (legacy)
<%@: %p; UUID: %@; date: %@; eventBehavior: %@; clientIdentifier: '%@'; outcome: %@; reason: %@>
UUID
T@"NSUUID",R,C,N,V_UUID
date
T@"NSDate",R,C,N,V_date
eventBehavior
T@"DNDClientEventBehavior",R,C,N,V_eventBehavior
TI,R,N,V_outcome
TI,R,N,V_reason
com.apple.donotdisturb.private.schedule
com.donotdisturb.server.ScheduleManager
B8@?0@"DNDSModeAssertionInvalidation"4
T@"<DNDSScheduleManagerDataSource>",W,N,V_dataSource
overrideType
overrideMode
effectiveIntervals
supportsSecureCoding
TB,R
TI,R,N,V_overrideType
mode
TI,R,N,V_mode
T@"NSArray",R,C,N,V_effectiveIntervals
T@"<DNDSPairedDeviceStateMonitorDelegate>",W,N,V_delegate
com.apple.private.alloy.donotdisturb
com.donotdisturb.server.IdentityServicesSync
B8@?0@"IDSDevice"4
<%@: %p; snapshotUUID: %@; snapshotTimestamp: %@; snapshotLastFullAssertionInvalidationReason: %@; snapshotAssertionStore: %@>
snapshotUUID
T@"NSString",R,C,N,V_snapshotUUID
snapshotTimestamp
T@"NSNumber",R,C,N,V_snapshotTimestamp
snapshotLastFullAssertionInvalidationReason
T@"NSNumber",R,C,N,V_snapshotLastFullAssertionInvalidationReason
snapshotAssertionStore
T@"DNDSModeAssertionStoreRecord",R,C,N,V_snapshotAssertionStore
T@"DNDSModeAssertionStoreRecord",C,D,N
com.apple.donotdisturb.server.sysdiagnose
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}8@?0^{os_state_hints_s=I*II}4
com.apple.donotdisturb
com.apple.donotdisturb.server
General
Resolver
ServiceProvider
StateProvider
LocalAssertionManager
IDSTransport
Schedule
Settings
SystemState
com.apple.donotdisturb.server.sync
LegacyAssertion
LegacySettings
ModernAssertion
PairedDeviceState
com.apple.donotdisturb.server.lifetime-monitor
DateInterval
Location
CalendarEvent
UserRequested
Default
DataMigrator
Sysdiagnose
startComponents
endComponents
repeatInterval
identifier
T@"NSDateComponents",R,C,N,V_startComponents
T@"NSDateComponents",R,C,N,V_endComponents
calendarIdentifier
T@"NSString",R,C,N,V_calendarIdentifier
TI,R,N,V_repeatInterval
T@"NSUUID",R,C,N,V_identifier
<%@: %p; clientIdentifier: '%@'; UUID: %@; startDate: %@; details: %@>
<%@: %p; syncEnabled: %@>
syncEnabled
TB,R,N,GisSyncEnabled,V_syncEnabled
overrideStatus
overrideStatusLastCalculatedTime
overrides
privilegedSenderTypes
privilegedAddressBookGroupRecordID
effectiveWhileUnlocked
mirrorDNDState
MirrorDNDStateChangedNotification
syncSettings
T@"DNDSSyncSettings",R,C,N,V_syncSettings
T@"<DNDSSyncSettingsProviderDelegate>",W,N,V_delegate
<%@: %p; behaviorSettings: %@; phoneCallBypassSettings: %@; scheduleSettings: %@>
behaviorSettings
phoneCallBypassSettings
scheduleSettings
T@"DNDSBehaviorSettingsRecord",R,C,N,V_behaviorSettings
T@"DNDSBypassSettingsRecord",R,C,N,V_phoneCallBypassSettings
T@"DNDSScheduleSettingsRecord",R,C,N,V_scheduleSettings
T@"DNDSBehaviorSettingsRecord",C,D,N
T@"DNDSBypassSettingsRecord",C,D,N
T@"DNDSScheduleSettingsRecord",C,D,N
allowed
suppressed
T@"NSString",R,C,N,V_identifier
connection
T@"NSXPCConnection",R,W,N,V_connection
wantsStateUpdates
TB,N,V_wantsStateUpdates
wantsAssertionUpdates
TB,N,V_wantsAssertionUpdates
wantsSettingsUpdates
TB,N,V_wantsSettingsUpdates
com.apple.donotdisturb.server.RemoteServiceConnection.clientConnection
@"NSXPCConnection"8@?0@"DNDSClientConnectionDetails"4
T@"<DNDSRemoteServiceProviderDelegate>",W,N,V_delegate
com.apple.donotdisturb.service
com.apple.private.donotdisturb.behavior.resolution.client-identifiers
com.apple.private.donotdisturb.mode.assertion.client-identifiers
com.apple.private.donotdisturb.state.request.client-identifiers
com.apple.private.donotdisturb.state.updates.client-identifiers
com.apple.private.donotdisturb.settings.request.client-identifiers
com.apple.private.donotdisturb.settings.modify.client-identifiers
com.apple.private.donotdisturb.settings.updates.client-identifiers
com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers
B12@?0@4@"NSDictionary"8
[AUTO GENERATED] [%@/%@] %@ (%@:%lu%@)
 -- %@:%lu
Please describe what you were doing:
--- Do not edit below this line ---
Error: %@
Original title: %@
%%0A
tap-to-radar://new?ComponentID=960036&ComponentName=Do%%20Not%%20Disturb%%20(iOS)&ComponentVersion=New%%20Bugs&Title=%@&Description=%@
[Intenal] File a Radar (DND)
Do Not Disturb has encoutered an unexpected state. Please file a Radar to help us diagnose this issue!
Yes, I'll help!
/System/Library/Frameworks/CoreServices.framework/CoreServices
### Failed to Soft Linked: /System/Library/Frameworks/CoreServices.framework/CoreServices
LSApplicationWorkspace
schedule
com.donotdisturb.server.Server
SignificantTimeChangeNotification
com.apple.telephonyutilities.callservicesd
@"DNDSModeAssertion"8@?0@"NSUUID"4
lockState
TI,V_lockState
lostModeState
TI,V_lostModeState
DNDSBehaviorSettingsRecord
NSCopying
NSMutableCopying
DNDSBackingStoreRecord
NSObject
DNDSMutableBehaviorSettingsRecord
DNDSJSONBackingStore
DNDSBackingStore
Schedule
DNDSLifetimeMonitorModeAssertionDetails
DNDSLifetimeMonitorResult
DNDSBaseLifetimeMonitor
DNDSSysdiagnoseDataProvider
DNDSLifetimeMonitor
DNDClientEventSource
DNDSEventBehaviorResolver
DNDSModeAssertionInvalidation
Record
DNDSMemoryCachedBackingStore
DNDSBypassSettingsRecord
DNDSMutableBypassSettingsRecord
DNDSCalendarEventLifetimeMonitor
TypeHelpers
DNDSDateIntervalLifetimeMonitor
DNDSDefaultLifetimeMonitor
DNDSLocationLifetimeMonitor
CLLocationManagerDelegate
DNDSScheduleSettingsRecord
DNDSMutableScheduleSettingsRecord
DNDSLocalAssertionManager
DNDSObservableModeAssertionProvider
DNDSModeAssertionProvider
DNDSModeAssertionRecord
DNDSSyncRecord
DNDSMutableModeAssertionRecord
BackingStores
DNDSModeAssertionStoreRecord
DNDSMutableModeAssertionStoreRecord
DNDSModeDetails
DNDSModeRepository
DNDSModeAssertionStateProvider
DNDSStateProvider
LegacySupport
DNDSScheduleSettings
DNDSSettingsManager
DNDSSyncSettingsProviderDelegate
BackingStore
DNDSLegacyAssertionSyncManager
DNDSAssertionSyncManager
DNDSLegacySettingsSyncManager
DNDSSettingsSyncManager
DNDSModernAssertionSyncManager
DNDSSyncServiceUpdateListener
DNDSPairedDevice
DNDSEventBehaviorResolution
DNDSScheduleManager
DNDSModeAssertionProviderObserver
DNDSModeAssertionTransformer
DNDSLegacyBehaviorOverride
NSSecureCoding
NSCoding
DNDSPairedDeviceStateMonitor
DNDSIDSSyncService
IDSServiceDelegate
DNDSSyncService
DNDSAssertionSyncStateSnapshotRecord
DNDSMutableAssertionSyncStateSnapshotRecord
DNDSLegacyBehaviorOverrideEffectiveInterval
DNDSModeAssertion
DNDSSyncSettings
DNDSSyncSettingsProvider
DNDSSettingsRecord
DNDSMutableSettingsRecord
DNDSClientConnectionDetails
DNDSRemoteServiceProvider
NSXPCListenerDelegate
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
DNDRemoteServiceClientProtocol
DNDRemoteServiceClientModeAssertionProtocol
DNDRemoteServiceClientStateProtocol
DNDRemoteServiceClientSettingsProtocol
Entitlements
DNDSServer
DNDSEventBehaviorResolverDataSource
DNDSLifetimeMonitorDataSource
DNDSLifetimeMonitorDelegate
DNDSModeAssertionStateProviderDataSource
DNDSStateProviderUpdateListener
DNDSRemoteServiceProviderDelegate
DNDSRemoteServiceProviderBehaviorResolutionDelegate
DNDSRemoteServiceProviderAssertionDelegate
DNDSRemoteServiceProviderStateDelegate
DNDSRemoteServiceProviderSettingsDelegate
DNDSAssertionSyncManagerDataSource
DNDSAssertionSyncManagerDelegate
DNDSLegacyAssertionSyncManagerDataSource
DNDSSettingsSyncManagerDataSource
DNDSSettingsSyncManagerDelegate
DNDSScheduleManagerDataSource
DNDSSettingsManagerDelegate
DNDSPairedDeviceStateMonitorDelegate
@20@0:4@8I12I16
@12@0:4^{_NSZone=}8
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@12@0:4@8
@12@0:4@"NSDictionary"8
@"NSDictionary"8@0:4
@"NSDictionary"20@0:4@"NSDictionary"8I12I16
@"NSArray"20@0:4@"NSArray"8I12I16
v8@0:4
@"NSNumber"
v12@0:4@8
@16@0:4^@8o^@12
B16@0:4@8^@12
@"NSArray"16@0:4^@8o^@12
B16@0:4@"NSArray"8^@12
@20@0:4#8@12I16
@"NSURL"
@20@0:4@8@12@16
@16@0:4@8@12
@"DNDModeAssertion"
@"DNDModeAssertionLifetime"
@"NSArray"
@"NSDictionary"12@0:4@"NSDate"8
v12@0:4@"NSDate"8
@"NSArray"8@0:4
@"<DNDSLifetimeMonitorDataSource>"8@0:4
v12@0:4@"<DNDSLifetimeMonitorDataSource>"8
@"<DNDSLifetimeMonitorDelegate>"8@0:4
v12@0:4@"<DNDSLifetimeMonitorDelegate>"8
@"NSObject<OS_dispatch_queue>"
@"<DNDSLifetimeMonitorDataSource>"
@"<DNDSLifetimeMonitorDelegate>"
@24@0:4@8@12@16^@20
I24@0:4@8@12@16o^I20
B16@0:4@8@12
B20@0:4@8@12@16
@"<DNDSModeRepository>"
@"CNContactStore"
@"CNFavorites"
@"NSMutableArray"
@"<DNDSEventBehaviorResolverDataSource>"
@20@0:4@8@12I16
@"NSString"
@"<DNDSBackingStore>"
@"NSDate"
@"EKEventStore"
@"PCPersistentTimer"
v20@0:4@8@12@16
v16@0:4@8@12
v20@0:4@8i12@16
v16@0:4@8i12
v20@0:4@"CLLocationManager"8@"CLLocation"12@"CLLocation"16
v16@0:4@"CLLocationManager"8@"NSArray"12
v16@0:4@"CLLocationManager"8@"CLHeading"12
B12@0:4@"CLLocationManager"8
v20@0:4@"CLLocationManager"8i12@"CLRegion"16
v20@0:4@"CLLocationManager"8@"NSArray"12@"CLBeaconRegion"16
v20@0:4@"CLLocationManager"8@"CLBeaconRegion"12@"NSError"16
v16@0:4@"CLLocationManager"8@"CLRegion"12
v16@0:4@"CLLocationManager"8@"NSError"12
v20@0:4@"CLLocationManager"8@"CLRegion"12@"NSError"16
v16@0:4@"CLLocationManager"8i12
v12@0:4@"CLLocationManager"8
v16@0:4@"CLLocationManager"8@"CLVisit"12
@"CLLocationManager"
@"CLRegion"
@36@0:4@8@12@16@20@24@28@32
@16@0:4@8^@12
@12@0:4^@8
@"DNDSModeAssertion"16@0:4@"NSUUID"8^@12
@"NSArray"12@0:4^@8
v12@0:4@"<DNDSModeAssertionProviderObserver>"8
@24@0:4@8@12I16^@20
@20@0:4@8I12^@16
v16@0:4@8I12
B12@0:4^@8
@"NSHashTable"
@"NSMutableDictionary"
@60@0:4@8@12@16@20@24@28@32@36@40@44@48@52@56
@12@0:4I8
@"NSArray"12@0:4@"NSArray"8
@"DNDState"12@0:4^@8
v12@0:4@"<DNDSStateProviderUpdateListener>"8
v12@0:4I8
@"DNDState"
@"<DNDSModeAssertionStateProviderDataSource>"
@24@0:4I8@12I16@20
v16@0:4@"DNDSSyncSettingsProvider"8@"DNDSSyncSettings"12
I24@0:4@8@12@16^@20
@"DNDSSyncSettingsProvider"
@"<DNDSSettingsManagerDelegate>"
v16@0:4@"NSDate"8I12
@"<DNDSAssertionSyncManagerDataSource>"8@0:4
v12@0:4@"<DNDSAssertionSyncManagerDataSource>"8
@"<DNDSAssertionSyncManagerDelegate>"8@0:4
v12@0:4@"<DNDSAssertionSyncManagerDelegate>"8
@16@0:4@8I12
v20@0:4@8@12I16
@"NPSManager"
@"NPSDomainAccessor"
@"DNDSModeAssertion"
@"<DNDSLegacyAssertionSyncManagerDataSource>"
@"<DNDSAssertionSyncManagerDelegate>"
@"<DNDSSettingsSyncManagerDataSource>"8@0:4
v12@0:4@"<DNDSSettingsSyncManagerDataSource>"8
@"<DNDSSettingsSyncManagerDelegate>"8@0:4
v12@0:4@"<DNDSSettingsSyncManagerDelegate>"8
@16@0:4B8B12
@"<DNDSSettingsSyncManagerDataSource>"
@"<DNDSSettingsSyncManagerDelegate>"
v20@0:4@"<DNDSSyncService>"8@"<DNDSSyncRecord>"12@"NSString"16
@"<DNDSSyncService>"
@"NSDictionary"
@"<DNDSAssertionSyncManagerDataSource>"
@28@0:4@8@12@16I20I24
@32@0:4@8@12@16@20I24I28
@"NSUUID"
@"DNDClientEventBehavior"
v20@0:4@"<DNDSModeAssertionProvider>"8@"NSArray"12I16
v16@0:4@"<DNDSModeAssertionProvider>"8@"NSArray"12
@"NSString"12@0:4@"DNDModeAssertion"8
@"DNDModeAssertionLifetime"12@0:4@"DNDModeAssertion"8
@"DNDSLocalAssertionManager"
@"DNDSScheduleSettings"
@"<DNDSScheduleManagerDataSource>"
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@20@0:4I8I12@16
@"<DNDSPairedDeviceStateMonitorDelegate>"
v28@0:4@8@12@16@20@24
v32@0:4@8@12@16@20@24@28
v28@0:4@8@12@16B20@24
v32@0:4@8@12@16B20@24@28
v28@0:4@8@12@16i20i24
v24@0:4@8@12@16@20
v20@0:4@8@12@?16
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16i20i24
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@"NSString"20@24
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v20@0:4@"IDSService"8@"IDSAccount"12@"IDSGroupSessionParticipantUpdate"16
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
@16@0:4#8I12
v16@0:4@8@?12
v16@0:4@"<DNDSSyncRecord>"8@?<v@?B@"NSError">12
v12@0:4@"<DNDSSyncServiceUpdateListener>"8
@"IDSService"
@"IDSDevice"
@24@0:4@8@12@16@20
@"DNDSModeAssertionStoreRecord"
@28@0:4@8@12@16I20@24
@"NSDateComponents"
@12@0:4B8
@16@0:4I8i12
@"DNDSSyncSettings"
@"<DNDSSyncSettingsProviderDelegate>"
@"DNDSBehaviorSettingsRecord"
@"DNDSBypassSettingsRecord"
@"DNDSScheduleSettingsRecord"
v12@0:4B8
@"NSXPCConnection"
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v20@0:4@"DNDClientEventDetails"8@"DNDRequestDetails"12@?<v@?@"DNDClientEventBehavior"@"NSError">16
v20@0:4@"DNDModeAssertionDetails"8@"DNDRequestDetails"12@?<v@?@"DNDModeAssertion"@"DNDModeAssertionInvalidation"@"NSError">16
v16@0:4@"DNDRequestDetails"8@?<v@?@"DNDModeAssertionInvalidation"@"NSError">12
v16@0:4@"DNDRequestDetails"8@?<v@?@"DNDModeAssertion"@"NSError">12
v16@0:4@"DNDRequestDetails"8@?<v@?B@"NSError">12
v16@0:4@"DNDRequestDetails"8@?<v@?@"DNDState"@"NSError">12
v16@0:4@"DNDRequestDetails"8@?<v@?@"DNDBehaviorSettings"@"NSError">12
v20@0:4@"DNDBehaviorSettings"8@"DNDRequestDetails"12@?<v@?B@"NSError">16
v16@0:4@"DNDRequestDetails"8@?<v@?@"DNDBypassSettings"@"NSError">12
v20@0:4@"DNDBypassSettings"8@"DNDRequestDetails"12@?<v@?B@"NSError">16
v16@0:4@"DNDRequestDetails"8@?<v@?@"DNDScheduleSettings"@"NSError">12
v20@0:4@"DNDScheduleSettings"8@"DNDRequestDetails"12@?<v@?B@"NSError">16
@20@0:4@8@12^@16
B20@0:4@8@12^@16
@28@0:4@8@12@16^@20^@24
@16@0:4I8^@12
@"NSXPCListener"
@"<DNDSRemoteServiceProviderDelegate>"
v16@0:4@"DNDModeAssertionInvalidation"8@"NSString"12
v12@0:4@"DNDStateUpdate"8
v12@0:4@"DNDBehaviorSettings"8
v12@0:4@"DNDBypassSettings"8
v12@0:4@"DNDScheduleSettings"8
@"DNDState"12@0:4@"DNDSEventBehaviorResolver"8
@"DNDBypassSettings"16@0:4@"DNDSEventBehaviorResolver"8@"NSString"12
@"NSArray"12@0:4@"<DNDSLifetimeMonitor>"8
@"DNDModeAssertionLifetime"16@0:4@"<DNDSLifetimeMonitor>"8@"DNDModeAssertion"12
v12@0:4@"<DNDSLifetimeMonitor>"8
v16@0:4@"<DNDSLifetimeMonitor>"8@"NSArray"12
I12@0:4@8
@"NSArray"12@0:4@"DNDSModeAssertionStateProvider"8
@"NSString"16@0:4@"DNDSModeAssertionStateProvider"8@"DNDModeAssertion"12
@"DNDModeAssertionLifetime"16@0:4@"DNDSModeAssertionStateProvider"8@"DNDModeAssertion"12
@"NSDateInterval"16@0:4@"DNDSModeAssertionStateProvider"8@"DNDModeAssertion"12
I12@0:4@"DNDSModeAssertionStateProvider"8
v16@0:4@"<DNDSStateProvider>"8@"DNDStateUpdate"12
@28@0:4@8@12@16@20^@24
@"DNDClientEventBehavior"28@0:4@"DNDSRemoteServiceProvider"8@"DNDClientEventDetails"12@"NSString"16@"NSDate"20^@24
@28@0:4@8@12@16I20^@24
@"DNDSModeAssertion"20@0:4@"DNDSRemoteServiceProvider"8@"NSString"12^@16
@"DNDSModeAssertion"28@0:4@"DNDSRemoteServiceProvider"8@"DNDModeAssertionDetails"12@"NSString"16I20^@24
@"DNDSModeAssertionInvalidation"24@0:4@"DNDSRemoteServiceProvider"8@"NSUUID"12I16^@20
@"NSArray"24@0:4@"DNDSRemoteServiceProvider"8@"NSDate"12I16^@20
@"DNDState"16@0:4@"DNDSRemoteServiceProvider"8^@12
@"DNDBehaviorSettings"16@0:4@"DNDSRemoteServiceProvider"8^@12
B20@0:4@"DNDSRemoteServiceProvider"8@"DNDBehaviorSettings"12^@16
@"DNDBypassSettings"16@0:4@"DNDSRemoteServiceProvider"8^@12
B20@0:4@"DNDSRemoteServiceProvider"8@"DNDBypassSettings"12^@16
@"DNDScheduleSettings"16@0:4@"DNDSRemoteServiceProvider"8^@12
B20@0:4@"DNDSRemoteServiceProvider"8@"DNDScheduleSettings"12^@16
@"NSArray"12@0:4@"<DNDSAssertionSyncManager>"8
@"NSDate"12@0:4@"<DNDSAssertionSyncManager>"8
v20@0:4@"<DNDSAssertionSyncManager>"8@"NSDate"12I16
@"NSDateInterval"16@0:4@"<DNDSAssertionSyncManager>"8@"DNDModeAssertion"12
@"DNDBypassSettings"12@0:4@"<DNDSSettingsSyncManager>"8
@"DNDSScheduleSettings"12@0:4@"<DNDSSettingsSyncManager>"8
v16@0:4@"<DNDSSettingsSyncManager>"8@"DNDBypassSettings"12
v16@0:4@"<DNDSSettingsSyncManager>"8@"DNDSScheduleSettings"12
@"DNDSScheduleSettings"12@0:4@"DNDSScheduleManager"8
v16@0:4@"DNDSSettingsManager"8@"DNDBehaviorSettings"12
v16@0:4@"DNDSSettingsManager"8@"DNDBypassSettings"12
v16@0:4@"DNDSSettingsManager"8@"DNDSScheduleSettings"12
v16@0:4@"DNDSSettingsManager"8@"DNDSSyncSettings"12
v16@0:4@"DNDSPairedDeviceStateMonitor"8@"DNDSPairedDevice"12
B16@0:4I8^@12
@"DNDSCalendarEventLifetimeMonitor"
@"DNDSScheduleManager"
@"DNDSModeAssertionStateProvider"
@"DNDSEventBehaviorResolver"
@"DNDSRemoteServiceProvider"
@"<DNDSAssertionSyncManager>"
@"<DNDSSettingsSyncManager>"
@"DNDSSettingsManager"
@"DNDSPairedDeviceStateMonitor"
@(#)PROGRAM:DoNotDisturbServer  PROJECT:DoNotDisturb-1
Event was resolved: resolution=%{public}@
Pruned %lu resolutions from record
Got bypass settings: settings=%{public}@
Checked if event source is a favorite: source=%{public}@, favorite=%{BOOL}d
Error looking up favorite contacts: error=%{public}@
Checked if event source is a contact: source=%{public}@, contact=%{BOOL}d
Error looking up contacts: error=%{public}@
Checked if event source is a group contact: source=%{public}@, contact=%{BOOL}d
Error looking up group contacts: error=%{public}@
Checked if event source is a repeat: source=%{public}@, repeat=%{BOOL}d
Checked if event source is an emergency contact: source=%{public}@, emergencyContact=%{BOOL}d
Error looking up emergency contacts: error=%{public}@
Requested access to events, granted=%{BOOL}d error=%{public}@
Refreshing monitor, date=%{public}@
Invalidating existing timer; fireDate=%{public}@
Scheduling timer; nextUpdateDate=%{public}@
Refreshing monitor
Location monitoring failed for region, will stop monitor and invalidate all assertions; manager=%p, region=%@, error=%{public}@
Location monitoring detected leaving region, will stop monitor and invalidate all assertions; manager=%p, region=%@
Location monitoring found location, will update geofence; manager=%p, locations=%@
Location monitoring failed, will stop monitor and invalidate all assertions; manager=%p, error=%{public}@
Location monitoring stopping for geofence; region=%@
Location monitoring started for geofence; location=%@, region=%@
Added observer %{public}p
Removed observer %{public}p
Replacing existing assertion; oldAssertion=%{public}@, assertion=%{public}@
Taken mode assertion; assertion=%{public}@
Failed to take mode assertion; details=%{public}@, error=%{public}@
Will remove assertion; assertion=%{public}@
Got mode assertion for UUID; UUID=%{public}@, assertion=%{public}@
Failed to get mode assertion for UUID; UUID=%{public}@
Notifying observers of %lu taken assertions
Notifying observers of %lu invalidations
Bad data appears to be in the assertion database, will request a radar; lastCompleteInvalidationDate=%{public}@
Failed to load assertion database, will request a radar; error=%{public}@
Wrote out %lu assertions to file
Failed to write mode assertions, will request radar; error=%{public}@
State recalculation was requested for reason %{public}@
Current DND state was calculated: state=%{public}@
State update will be sent to %lu listeners: stateUpdate=%{public}@
Failed to load settings, will request a radar; error=%{public}@
Saved settings; settingsRecord=%{public}@
Failed to save settings, will request a radar; settingsRecord=%{public}@, error=%{public}@
Cleaning up state
Update toggle sync: companionUpdateDate=%{public}@, gizmoUpdateDate=%{public}@, lastUpdateDate=%{public}@, reason=%{public}@
Gizmo date was not valid, will reset to distantPast
Gizmo date is bogus, will reset to distantPast: gizmoUpdateDate=%{public}@
Gizmo date is in the future, will reset to now: gizmoUpdateDate=%{public}@
Will update toggle sync state to reflect current companion state, companionDNDActive=%{BOOL}d, gizmoDNDActive=%{BOOL}d
Did not update toggle sync state as it was not required: gizmoDNDActive=%{BOOL}u, companionToggleDNDActive=%{BOOL}u, companionDNDActive=%{BOOL}u
Ignoring update to toggle for reason %{public}@ as it was not user initiated
Gizmo has toggled DND, will mirror locally: gizmoDNDActive=%{BOOL}d
Gizmo has invalidated its DND assertion, will mirror locally
Did not update local state as it was not required
Companion assertion active changed, will update gizmo: value=%{BOOL}d
Gizmo has taken a DND assertion, will mirror locally
NPS has sent notification, name=%{public}@
Got new schedule settings: settings=%{public}@
Error encoding behavior overrides
Got new behavior override: override=%{public}@
Error decoding behavior overrides: error=%{public}@
Got new bypass settings: settings=%{public}@
Received new priviledged senders types: %lu
Received remote record from sync service; syncService=%p, record=%{public}@, sourceIdentifier=%{public}@
Will tell remotes to invalidate all assertions: date=%{public}@, reason=%{public}@
Error sending local assertions: error=%{public}@
Received remote sync record from watch: remoteDeviceIdentifier=%{public}@
Will invalidate all local assertions for a fast path: date=%{public}@, reason=%{public}@
Successfully wrote migrated settings
Error writing migrated settings, will request radar: error=%{public}@
Error loading legacy settings, will request radar: error=%{public}@
Error loading legacy settings but there was no error. Will ignore.
Legacy override status present with no pre-existing assertion store, will create
Successfully wrote migrated assertions
Error writing migrated assertions, will request radar: error=%{public}@
Legacy override status' effective time is in the future. Ignoring...
Successfully removed legacy settings
Error removing legacy settings, will request radar: error=%{public}@
Calculated transformed lifetime for assertion: assertion=%{public}@, scheduleSettings=%{public}@, transformedLifetime=%{public}@
Calculated transformed mode identifier for assertion: assertion=%{public}@, scheduleSettings=%{public}@, modeIdentifier=%{public}@
Taking new schedule assertion: details=%{public}@, settings=%{public}@
Invalidating existing schedule assertion: assertionUUID=%{public}@, settings=%{public}@
Existing schedule assertion does not need to change: assertion=%{public}@, settings=%{public}@
Receieved sync data: service=%{public}@, service=%{public}@, message=%{public}@, fromID=%@, context=%{public}@
Discarding data because it did not come from the active device
Switched active device: service=%{public}@, activePairedDevice=%{public}@
Send sync data: GUID=%{public}@
Failed to send sync data: GUID=%{public}@, error=%{public}@
No paired devices, will skip sync.
Invalid record
Invalid record data
Invalid record version number: recordVersion=%lu, versionNumber=%lu
Invalid version number: version=%lu
Capturing sysdiagnose... date=%{public}@
Sysdiagnose captured
Could not capture sysdiagnose due to too much data
Could not capture sysdiagnose due to unable to make Plist: error=%{public}@
Did receive state update, will handle; stateUpdate=%{public}@
Delivering state update: stateUpdate=%{public}@, connection=%{public}@
Did receive %lu invalidations, will handle; invalidations=%{public}@
Did receive updated behavior settings, will handle; settings=%{public}@
Delivering settings update: settings=%{public}@, connection=%{public}@
Did receive updated phone call bypass settings, will handle; settings=%{public}@
Did receive updated schedule settings, will handle; settings=%{public}@
XPC connection successfully accepted: connection=%p
XPC connection without any valid entitlements tried to connect, will reject: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to process event, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to take mode assertion, will invalidate: connection=%p, assertionDetails=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate mode assertion, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to invalidate all mode assertions, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to query state, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to register for state updates, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to get behavior settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to set behavior settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to get phone call bypass settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to set phone call bypass settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to get schedule settings, will invalidate: connection=%p
[%{public}@] XPC connection without any valid entitlements tried to set schedule settings, will invalidate: connection=%p
Client XPC connection was interrupted: connection=%p
Client XPC connection was invalidated: connection=%p
Created new connection details for connection: connection=%p, clientIdentifier=%{public}@
Connection trying to use a client identifier that is already in use: connection=%p, clientIdentifier=%{public}@
Found connection details: connection=%p, clientIdentifier=%{public}@
Connection has no details registered: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection details unregistered: connection=%p, clientIdentifier=%{public}@
Maintaining mode assertion despite XPC disconnection as it was user requested: connection=%p, clientIdentifier=%{public}@
Connection registered for state updates: connection=%p, clientIdentifier=%{public}@
Connection unable to register for state updates: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection registered for settings updates: connection=%p, clientIdentifier=%{public}@
Connection unable to register for settings updates: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection registered for assertion updates: connection=%p, clientIdentifier=%{public}@
Connection unable to register for assertion updates: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection took mode assertion: connection=%p, clientIdentifier=%{public}@
Connection unable to take mode assertion: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection invalidated mode assertion: connection=%p, clientIdentifier=%{public}@
Connection unable to invalidate mode assertion: connection=%p, clientIdentifier=%{public}@, error=%{public}@
Connection does not have an active mode assertion: connection=%p, clientIdentifier=%{public}@
Found mode assertion: connection=%p, clientIdentifier=%{public}@
Delivering mode assertion invalidation: invalidation=%{public}@, connection=%p, clientIdentifier=%{public}@
Access to contacts store: granted=%{BOOL}u, error=%{public}@
Got significant time change; update lifetime monitors
Lifetime monitor says active assertions changed; monitor=%p
Lifetime monitor says UUIDs should expire; monitor=%p, UUIDs=%{public}@
Assertion provider took %lu assertions; provider=%p
Assertion provider invalidated %lu assertions; provider=%p
State provider is requesting active assertions; stateProvider=%p
Got state update; provider=%{public}@, stateUpdate=%{public}@
No behavior settings in settings manager, will return default settings
No phone call bypass settings in settings manager, will return default settings
No schedule settings in settings manager, will return default settings
Sync manager is requesting active assertions; manager=%{public}@
Sync manager is requesting invalidation of all assertions; manager=%{public}@, date=%{public}@, reason=%{public}@
Received updated bypass settings via sync; manager=%{public}@, settings=%{public}@
Received updated schedule settings via sync; manager=%{public}@, settings=%{public}@
DND behavior settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND phone call bypass settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND schedule settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Sync settings updated; manager=%{public}@, settings=%{public}@
Paired devices updated; monitor=%{public}@, device=%{public}@
Current DND sync status: device=%{public}@, settings=%{public}@
Received new lost mode state: state=%@
Starting up...
Received new UI lock state: state=%@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
