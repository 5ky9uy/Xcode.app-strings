AppleKeyboardsEmojiChangedNotification
EmojiKeyboard
KeywordMatch
Adornment
Learning
EMFDefaultsKey
EMFViewedInCategoryKey
EMFPreviouslyUsedCategoryKey
EMFRecentsKey
EMFUsageHistoryKey
EMFTypingNamesKey
EMFSkinToneBaseKeyPreferences
EMFRecentSequenceNumberKey
EMFDidDisplaySkinToneHelpKey
com.apple.EmojiPreferences
com.apple.EmojiCache
DidMigrateToEMF
v20@?0@"EMFEmojiToken"4{_NSRange=II}8^B16
v4@?0
%@_%@
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
maximumRecentsCount
TI,N,V_maximumRecentsCount
allRecents
T@"NSArray",R,N
recentEmojis
previouslyUsedCategory
T@"NSString",R,N
hasDisplayedSkinToneHelp
TB,R,N
machName
T@"NSString",&,N,V_machName
isValid
TB,N,V_isValid
com.apple.TextInput.emoji
preferences
T@"EMFEmojiPreferences",&,N,V_preferences
dispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
com.apple.TextInput.emoji-client
EMFEmojiCategoryRecents
EMFEmojiCategoryPeople
EMFEmojiCategoryNature
EMFEmojiCategoryFoodAndDrink
EMFEmojiCategoryActivity
EMFEmojiCategoryTravelAndPlaces
EMFEmojiCategoryObjects
EMFEmojiCategorySymbols
EMFEmojiCategoryFlags
EMFEmojiCategoryPrepopulated
Frequently Used
People
Nature
Food & Drink
Activity
Travel & Places
Objects
Symbols
Flags
@"NSArray"4@?0
en_US
 Category
 Category Fallback
Recents Description
Skin Tone Emoji Help
identifier
T@"NSString",R,N,V_identifier
localizedName
shortLocalizedName
emojiString
localeIdentifier
apple-internal-install
supportsSecureCoding
TB,R
T@"NSString",&,N,V_localeIdentifier
string
T@"NSString",C,N,V_string
_baseString
_skinToneVariantStrings
T@"NSArray",R,C,N
_shouldHighlightEmoji
emojiTokenRef
Tr^{__EmojiTokenWrapper=},R,N,V_emojiTokenRef
localeData
T@"EMFEmojiLocaleData",R,N
supportsSkinToneVariants
skinTone
Ti,R,N
skinToneVariants
presentationStyle
isCommon
%@%@%@
v16@?0@"NSNumber"4@"NSString"8^B12
%@%@
v20@?0^{__EmojiTokenWrapper=}4{?=ii}8^B16
v20@?0^{__CFArray=}4{?=ii}8^B16
T@"NSString",R,C,N,V_localeIdentifier
emojiLocaleDataRef
Tr^{__EmojiLocaleDataWrapper=},R,N,V_localeDataRef
emojiTokens
init
_emojiCharacterSet
_recentStringsInCharacterSet:
alloc
loadDefaultsIfNecessary
count
arrayWithCapacity:
copy
countByEnumeratingWithState:objects:count:
rangeOfCharacterFromSet:
addObject:
recentsInCharacterSet:
emojiTokenWithString:localeData:
objectForKey:
boolValue
class
defaultsDomain
dictionary
writeEmojiDefaultsAndNotify:
_readPreferencesFromDefaults
integerValue
numberWithInteger:
setObject:forKey:
removeAllObjects
removeObjectForKey:
readEmojiDefaults
_checkForDingbatDuplicates
_cleanUpOldFlagsCaches
_emojiSetForIdentifier:
_preferenceIndexString:
containsObject:
setArray:
arrayWithArray:
shouldCountEmojiStringForUsageHistory:
removeObject:
initWithSuiteName:
dictionaryRepresentation
allKeys
mutableCopy
synchronize
_cacheDomain
isKindOfClass:
arrayWithObject:
dictionaryWithCapacity:
maximumRecentsCount
removeObjectsInRange:
numberWithBool:
scoreForSequence:
didUseEmoji:usageMode:
didUseEmoji:usageMode:typingName:
length
string
supportsSkinToneVariants
copyWithSkinToneVariant:
scoreForEmojiString:
indexOfObject:
removeObjectAtIndex:
lastObject
removeLastObject
objectAtIndex:
insertObject:atIndex:
localeIdentifier
_enumerateEmojiTokensInRange:block:
skinTone
recentEmojis
isEqualIgnoringModifiers:
localeData
unsignedIntegerValue
allValues
firstObject
currentLocale
stringWithFormat:
_recentEmojiStrings
_allRecentStrings
_cachedFlagCategoryEmoji:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
didUseEmoji:
didViewEmojiIndex:forCategory:
didDisplaySkinToneHelp
allRecents
previouslyUsedCategory
hasDisplayedSkinToneHelp
writeEmojiDefaults
resetEmojiDefaults
migrateFromMajorOSVersion:
_pruneInvalidEmojiFromHistory
migrateInRecentEmoji:usages:typingNames:
migrateInSkinTonePreferences:
migrateInPreviouslyUsedCategory:
migrateInPreviouslyUsedCategoryIndexes:
migrateInDidDisplaySkinToneHelp:
hasLastUsedVariantForEmoji:
recentVariantEmojiForEmoji:
lastUsedVariantEmojiForEmoji:
previouslyUsedIndexInCategory:
typingNameForEmoji:
.cxx_destruct
setMaximumRecentsCount:
_defaults
_isDefaultDirty
_usageHistory
_recents
_typingNames
_skinToneBaseKeyPreferences
_categoryIndexes
_currentSequence
_differentialPrivacyQueue
_maximumRecentsCount
_setRecentStrings:
interfaceWithProtocol:
createConnectionIfNecessary
invalidate
dealloc
initWithMachServiceName:options:
serviceInterface
setRemoteObjectInterface:
_setQueue:
setIsValid:
setInterruptionHandler:
setInvalidationHandler:
resume
remoteObjectProxy
initWithMachName:
_initWithoutConnection
_disconnect
machName
setMachName:
isValid
_connection
_isValid
_machName
initWithCapacity:
initWithMachServiceName:
setDelegate:
_createPreferencesIfNecessary
preferences
setExportedObject:
setExportedInterface:
dispatchQueue
sharedServiceWithMachName:
listener:shouldAcceptNewConnection:
setPreferences:
_listener
_dispatchQueue
_preferences
arrayWithObjects:count:
initWithIdentifier:
PrepopulatedEmoji
PeopleEmoji
NatureEmoji
FoodAndDrinkEmoji
ActivityEmoji
TravelAndPlacesEmoji
ObjectsEmoji
SymbolsEmoji
computeEmojiFlagsSortedByLanguage
characterAtIndex:
_stringWithUnichar:
stringByAppendingString:
compare:
sortedArrayUsingSelector:
reverseObjectEnumerator
allObjects
isEqualToString:
displayNameForKey:value:
extraFlagsForCountryCode:
numberWithUnsignedInteger:
flagEmojiCountryCodesCommon
localeWithLocaleIdentifier:
stringToRegionalIndicatorString:
setValue:forKey:
localizedStandardCompare:
insertionFlagsForCountryCodes:inSortedCountryCodes:
objectsForKeys:notFoundMarker:
insertToSortedCountries:withAdditionalFlags:
FlagsEmoji
arrayByAddingObjectsFromArray:
localizedNameForLocale:
shortLocalizedNameForLocale:
identifier
_baseLocalizationKeyForIdentifier:
bundleForClass:
localizedStringForKey:value:table:
localizedRecentsDescriptionForLocale:
localizedSkinToneEmojiDescriptionForLocale:
array
DingbatsVariantEmoji
NoneVariantEmoji
SkinToneEmoji
GenderEmoji
ProfessionEmoji
NewlyAddedEmoji
initWithArray:
categoryIdentifierList
categoryWithIdentifier:
localizedRecentsDescription
localizedSkinToneEmojiDescription
_isDingbatsVariantEmoji:
_isNoneVariantEmoji:
_isSkinToneEmoji:
_isGenderEmoji:
_isProfessionEmoji:
_isFlagEmoji:
_isNewlyAddedEmoji:
localizedName
shortLocalizedName
emojiTokensForLocaleData:
_identifier
CelebrationEmoji
initWithCEMEmojiToken:
emojiTokenWithCEMEmojiToken:
initWithString:localeIdentifier:
emojiLocaleDataRef
setLocaleIdentifier:
_genderEmojiBaseStringNeedVariantSelector:
allocWithZone:
decodeObjectOfClass:forKey:
encodeObject:forKey:
_baseStringForEmojiString:
_createEmojiTokenRefIfNecessary
emojiLocaleDataWithCEMEmojiLocaleData:
emojiLocaleDataWithLocaleIdentifier:
emojiTokenRef
_hasSkinToneVariantsForString:
_skinToneForString:
_skinToneVariantsForString:
_baseString
emojiTokensForCEMEmojiTokens:
supportsSecureCoding
emojiTokenWithLongCharacter:localeData:
copyWithZone:
encodeWithCoder:
initWithCoder:
skinToneVariants
_skinToneVariantStrings
_shouldHighlightEmoji
presentationStyle
supportsPresentationStyle:
copyWithPresentationStyle:
copyWithoutModifiers
isCommon
relatedEmojiTokens:
nameForType:
setString:
_emojiTokenRef
_didFailCEM
_localeIdentifier
_string
stringWithCharacters:length:
_firstLongCharacterOfString:
rangeOfString:options:
_emojiString:containsSubstring:
stringByReplacingOccurrencesOfString:withString:options:range:
professionSkinToneEmojiBaseKey:
_baseFirstCharacterString:
numberWithInt:
dictionaryWithObjects:forKeys:count:
intValue
enumerateKeysAndObjectsUsingBlock:
stringByReplacingCharactersInRange:withString:
_isSingleEmoji
_containsEmoji
initWithCEMEmojiLocaleData:
initWithLocaleIdentifier:
cfCompareFlagsFromNSOptions:
removeObjectsInArray:
emojiTokens
enumerateSearchResultsInText:range:options:searchType:usingBlock:
emojiTokensForText:phoneticReading:options:searchType:includePrefixMatches:
emojiTokensForOptions:presentationStyle:
_localeDataRef
EMFEmojiPreferences
EMFEmojiPreferenceActions
NSObject
Testing
EMFEmojiPreferencesClient
EMFEmojiPreferencesService
NSXPCListenerDelegate
EMFEmojiCategory
Sets
EMFEmojiToken
NSCopying
NSSecureCoding
NSCoding
EMFStringUtilities
EMFEmojiExtras
EMFEmojiLocaleData
@8@0:4
@12@0:4@8
@12@0:4@?8
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4@8
v16@0:4@8@12
v20@0:4@8@12@16
v16@0:4i8@12
v8@0:4
v12@0:4@"EMFEmojiToken"8
v16@0:4@"EMFEmojiToken"8@"NSString"12
v20@0:4@"EMFEmojiToken"8@"NSString"12@"NSString"16
v16@0:4i8@"NSString"12
v12@0:4B8
v12@0:4i8
d12@0:4i8
d12@0:4@8
I12@0:4@8
v12@0:4I8
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"NSString"
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@"NSXPCListener"
@"EMFEmojiPreferences"
@16@0:4@8@12
@12@0:4^{__EmojiTokenWrapper=}8
@12@0:4^{__CFArray=}8
@16@0:4L8@12
@12@0:4^{_NSZone=}8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
^{__EmojiTokenWrapper=}8@0:4
i8@0:4
@12@0:4i8
B12@0:4i8
@12@0:4L8
^{__EmojiTokenWrapper=}
L12@0:4@8
i12@0:4@8
v20@0:4{_NSRange=II}8@?16
@12@0:4^{__EmojiLocaleDataWrapper=}8
L12@0:4I8
v32@0:4@8{_NSRange=II}12I20i24@?28
@28@0:4@8@12I16i20B24
@16@0:4L8i12
^{__EmojiLocaleDataWrapper=}8@0:4
^{__EmojiLocaleDataWrapper=}
zPLR
zPLR
