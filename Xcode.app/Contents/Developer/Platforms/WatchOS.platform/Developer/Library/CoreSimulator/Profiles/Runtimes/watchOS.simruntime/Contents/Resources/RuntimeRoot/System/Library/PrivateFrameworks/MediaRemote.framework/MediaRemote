MbP?
dealloc
stringWithFormat:
exceptionWithName:reason:userInfo:
raise
description
dictionaryRepresentation
dictionary
setObject:forKey:
numberWithFloat:
timeIntervalsCount
clearTimeIntervals
timeIntervalsAtIndex:
addTimeIntervals:
class
allocWithZone:
init
isMemberOfClass:
copyWithZone:
timeIntervals
setTimeIntervals:count:
setThumbnailsWidth:
setHasThumbnailsWidth:
hasThumbnailsWidth
setThumbnailsHeight:
setHasThumbnailsHeight:
hasThumbnailsHeight
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
thumbnailsWidth
thumbnailsHeight
_timeIntervals
_thumbnailsHeight
_thumbnailsWidth
_has
setContext:
setRequestID:
setContentItemIdentifiers:
setPlayerPath:
removeAllObjects
alloc
addObject:
count
objectAtIndex:
numberWithInt:
numberWithBool:
numberWithDouble:
release
retain
addContentItemIdentifiers:
countByEnumeratingWithState:objects:count:
contentItemIdentifiersCount
clearContentItemIdentifiers
contentItemIdentifiersAtIndex:
contentItemIdentifiersType
setLocation:
setHasLocation:
hasLocation
setLength:
setHasLength:
hasLength
setIncludeMetadata:
setHasIncludeMetadata:
hasIncludeMetadata
setArtworkWidth:
setHasArtworkWidth:
hasArtworkWidth
setArtworkHeight:
setHasArtworkHeight:
hasArtworkHeight
setIncludeLyrics:
setHasIncludeLyrics:
hasIncludeLyrics
setIncludeSections:
setHasIncludeSections:
hasIncludeSections
setIncludeInfo:
setHasIncludeInfo:
hasIncludeInfo
setIncludeLanguageOptions:
setHasIncludeLanguageOptions:
hasIncludeLanguageOptions
hasContext
hasRequestID
setReturnContentItemAssetsInUserCompletion:
setHasReturnContentItemAssetsInUserCompletion:
hasReturnContentItemAssetsInUserCompletion
hasPlayerPath
location
length
includeMetadata
artworkWidth
artworkHeight
includeLyrics
includeSections
includeInfo
includeLanguageOptions
context
requestID
contentItemIdentifiers
returnContentItemAssetsInUserCompletion
playerPath
_artworkHeight
_artworkWidth
_contentItemIdentifiers
_context
_length
_location
_playerPath
_requestID
_includeInfo
_includeLanguageOptions
_includeLyrics
_includeMetadata
_includeSections
_returnContentItemAssetsInUserCompletion
setProperties:
numberWithUnsignedLongLong:
setControllerID:
setHasControllerID:
hasControllerID
hasProperties
controllerID
properties
_controllerID
_properties
autorelease
setNowPlayingUpdates:
setArtworkUpdates:
setVolumeUpdates:
setKeyboardUpdates:
setUnderlyingCodableMessage:
underlyingCodableMessage
nowPlayingUpdates
artworkUpdates
volumeUpdates
keyboardUpdates
initWithNowPlayingUpdates:artworkUpdates:volumeUpdates:keyboardUpdates:
type
setToken:
setStartTime:
setHasStartTime:
hasStartTime
setEndTime:
setHasEndTime:
hasEndTime
hasToken
startTime
endTime
token
_endTime
_startTime
_token
setBuffer:
setTime:
hasBuffer
hasTime
setGain:
setHasGain:
hasGain
buffer
time
gain
_gain
_buffer
_time
setPairingFlags:
device
initWithRole:device:
open
removePeer
updatePeer
updateMediaRemotePairedDevice:
pairedPeerDevices
mediaRemotePairedDevices
isEqualToString:
enumerateKeysAndObjectsUsingBlock:
pairingManager
setInvalidationHandler:
setInterruptionHandler:
peerDeviceFromPairedPeer:
getPairedPeersWithOptions:completion:
invalidate
info
objectForKey:
identifier
UUIDString
name
model
initWithUUIDString:
setIdentifier:
setName:
setModel:
peerIdentifier
mutableCopy
setInfo:
savePairedPeer:options:completion:
removePairedPeer:options:completion:
systemPairingAvailable
globalPairingQueue
setDispatchQueue:
initializePairingSession:
shouldRetry
shouldAutoRetryPairingExchange:
addPeer
pairedPeerDevice
pairedPeerFromPeerDevice:
initWithMaxLowPriorityMessagesAllowed:
allValues
initWithUnderlyingCodableMessage:identifier:error:
invoke:
UUID
initWithReply:queue:
weakRefWithObject:
object
_dataForMessage:
initWithMessage:createDataBlock:
push:
peek
data
readPosition
messageQueue:processData:atReadPosition:
setReadPosition:
isFinished
message
messageSentCallbacks
flush
messagePurgedCallbacks
removeObjectForKey:
messageQueue:dataForMessage:
enqueueMessage:reply:queue:
reply:
datasource
setDatasource:
delegate
setDelegate:
_pendingMessageQueue
_pendingReplyQueue
_datasource
_delegate
copy
reply
queue
_reply
_queue
canPurge
_data
_message
_dataBlock
_readPosition
priority
_purge
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
removeObject:
firstObject
removeObjectAtIndex:
_messages
_lowPriorityMessagesCount
_maxLowPriorityMessagesAllowed
initWithContextType:addingDeviceUIDs:removingDeviceUIDs:
setOutputContextType:
setAddingOutputDeviceUIDs:
setRemovingOutputDeviceUIDs:
outputContextType
addingOutputDeviceUIDs
removingOutputDeviceUIDs
addDevicesRequestMessageWithContextType:outputDeviceUIDs:
removeDevicesRequestMessageWithContextType:outputDeviceUIDs:
contextType
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
initWithDictionary:
unsignedLongValue
setRequest:
nowPlayingInfo
setArtworkDataDigest:
artworkDataDigest
supportedCommands
setSupportedCommands:
playbackQueue
setNowPlayingInfo:
setPlaybackState:
playbackState
setDisplayName:
displayName
setDisplayID:
displayID
setPlaybackQueue:
setPlaybackQueueCapabilities:
playbackQueueCapabilities
initWithData:
request
initWithSettings:
initWithFormat:packetCapacity:maximumPacketSize:
initWithFormatSettings:packetCapacity:maximumPacketSize:
formatSettings
_formatSettings
packetCapacity
packetCount
setPacketCount:
packetDescriptions
initWithCapacity:
addSupportedCommand:
supportedCommandsCount
clearSupportedCommands
supportedCommandAtIndex:
supportedCommandType
_supportedCommands
initWithNowPlayingState:
state
setState:
initWithConnectionState:
encryptionType
setHiliteMode:
hiliteMode
initWithHiliteMode:
setClient:
client
initWithClient:
initWithPlayerPath:
numberWithUnsignedInt:
hasNowPlayingInfo
hasSupportedCommands
hasPlaybackQueue
hasDisplayID
hasDisplayName
setHasPlaybackState:
hasPlaybackState
hasPlaybackQueueCapabilities
hasRequest
_displayID
_displayName
_nowPlayingInfo
_playbackQueue
_playbackQueueCapabilities
_playbackState
_request
sharedAVSystemController
setAttribute:forKey:error:
sharedManager
localOriginClient
setCanBeNowPlayingApp:
isOverrideApp
setIsOverrideApp:
originClientForPlayerPath:
setActiveNowPlayingClient:
clientForPlayerPath:
setActivePlayerPath:
date
timeIntervalSinceReferenceDate
originClientForOrigin:
setParentApplication:
parentApplication
setVisibility:
setTintColor:
sharedServiceClient
workerQueue
playerClientForPlayerPath:
notificationClient
registerForNowPlayingNotificationsWithQueue:
unregisterForNowPlayingNotifications
nowPlayingNotifications
allObjects
clientCallbacks
setVideoThumbnailsCallback:
setAudioAmplitudeSamplesCallback:
setLanguageTag:
setCharacteristics:
addCharacteristics:
characteristicsCount
clearCharacteristics
characteristicsAtIndex:
characteristicsType
setType:
setHasType:
hasType
hasLanguageTag
hasIdentifier
languageTag
characteristics
_characteristics
_identifier
_languageTag
_type
setImageData:
imageData
setAlbum:
setArtist:
setTitle:
setRadioStationHash:
setRadioStationName:
numberWithLongLong:
hasAlbum
hasArtist
setDuration:
setHasDuration:
hasDuration
setElapsedTime:
setHasElapsedTime:
hasElapsedTime
setPlaybackRate:
setHasPlaybackRate:
hasPlaybackRate
repeatMode
setRepeatMode:
setHasRepeatMode:
hasRepeatMode
repeatModeAsString:
StringAsRepeatMode:
shuffleMode
setShuffleMode:
setHasShuffleMode:
hasShuffleMode
shuffleModeAsString:
StringAsShuffleMode:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasTitle
setUniqueIdentifier:
setHasUniqueIdentifier:
hasUniqueIdentifier
setIsExplicitTrack:
setHasIsExplicitTrack:
hasIsExplicitTrack
setIsMusicApp:
setHasIsMusicApp:
hasIsMusicApp
setRadioStationIdentifier:
setHasRadioStationIdentifier:
hasRadioStationIdentifier
hasRadioStationHash
hasRadioStationName
hasArtworkDataDigest
setIsAlwaysLive:
setHasIsAlwaysLive:
hasIsAlwaysLive
setIsAdvertisement:
setHasIsAdvertisement:
hasIsAdvertisement
album
artist
duration
elapsedTime
playbackRate
timestamp
title
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationHash
radioStationName
isAlwaysLive
isAdvertisement
_duration
_elapsedTime
_radioStationIdentifier
_timestamp
_uniqueIdentifier
_album
_artist
_artworkDataDigest
_playbackRate
_radioStationHash
_radioStationName
_repeatMode
_shuffleMode
_title
_isAdvertisement
_isAlwaysLive
_isExplicitTrack
_isMusicApp
setSampleRate:
setHasSampleRate:
hasSampleRate
sampleRate
_sampleRate
setOptions:
setSenderAppDisplayID:
setDestinationAppDisplayID:
setRemoteControlInterfaceID:
setAppOptions:
command
setCommand:
setHasCommand:
hasCommand
commandAsString:
StringAsCommand:
hasOptions
setOriginUID:
setHasOriginUID:
hasOriginUID
hasSenderAppDisplayID
hasDestinationAppDisplayID
setDestinationAppProcessID:
setHasDestinationAppProcessID:
hasDestinationAppProcessID
hasRemoteControlInterfaceID
hasAppOptions
options
originUID
senderAppDisplayID
destinationAppDisplayID
destinationAppProcessID
remoteControlInterfaceID
appOptions
_destinationAppProcessID
_appOptions
_command
_destinationAppDisplayID
_options
_originUID
_remoteControlInterfaceID
_senderAppDisplayID
hasButtons
hasMotion
initWithGameControllerEvent:controllerID:
event
shouldLog
_event
_priority
initWithGameControllerProperties:controllerID:
initWithProperties:
initWithControllerID:
setInputModeFlags:
inputModeFlags
initWithInputMode:
inputMode
setMetadata:
setArtworkData:
setAvailableLanguageOptions:
setCurrentLanguageOptions:
setLyrics:
setSections:
setParentIdentifier:
setAncestorIdentifier:
setQueueIdentifier:
setRequestIdentifier:
addAvailableLanguageOptions:
addCurrentLanguageOptions:
addSections:
availableLanguageOptionsCount
clearAvailableLanguageOptions
availableLanguageOptionsAtIndex:
currentLanguageOptionsCount
clearCurrentLanguageOptions
currentLanguageOptionsAtIndex:
sectionsCount
clearSections
sectionsAtIndex:
availableLanguageOptionsType
currentLanguageOptionsType
sectionsType
hasMetadata
hasArtworkData
hasInfo
hasLyrics
hasParentIdentifier
hasAncestorIdentifier
hasQueueIdentifier
hasRequestIdentifier
metadata
artworkData
availableLanguageOptions
currentLanguageOptions
lyrics
sections
parentIdentifier
ancestorIdentifier
queueIdentifier
requestIdentifier
_ancestorIdentifier
_artworkData
_availableLanguageOptions
_currentLanguageOptions
_info
_lyrics
_metadata
_parentIdentifier
_queueIdentifier
_requestIdentifier
_sections
setLaunchApplication:
setHasLaunchApplication:
hasLaunchApplication
launchApplication
_launchApplication
setHasState:
hasState
stateAsString:
StringAsState:
_state
setRouteUID:
hasRouteUID
routeUID
_routeUID
setEvent:
setVirtualDeviceID:
setHasVirtualDeviceID:
hasVirtualDeviceID
hasEvent
virtualDeviceID
_virtualDeviceID
isLocalDevice
groupID
deviceType
deviceSubtype
canAccessRemoteAssets
isRemoteControllable
isGroupable
isGroupLeader
isKindOfClass:
lock
unlock
modelID
identifyingMACAddress
currentSettings
isAirPlay2Enabled
canBeGroupLeader
canBeGrouped
deviceSubType
modelSpecificInformation
batteryLevel
hasBatteryLevel
sharedLocalDevice
deviceFeatures
requiresAuthorization
initWithAVOutputDevice:
MACAddress
modelSpecificInfo
supportsExternalScreen
avOutputDevice
forceRemoteControllability
setForceRemoteControllability:
_lock
_name
_uid
_modelID
_groupID
_MACAddress
_modelSpecificInfo
_forceRemoteControllability
_avOutputDevice
setSubtitle:
setAlbumName:
setTrackArtistName:
setAlbumArtistName:
setDirectorName:
setLocalizedContentRating:
setCollectionIdentifier:
setProfileIdentifier:
setArtworkMIMEType:
setAssetURLString:
setComposer:
setGenre:
setContentIdentifier:
setRadioStationString:
setPurchaseInfoData:
setAppMetricsData:
setSeriesName:
setNowPlayingInfoData:
setUserInfoData:
setArtworkURL:
setLyricsURL:
setDeviceSpecificUserInfoData:
setCollectionInfoData:
setServiceIdentifier:
setCurrentPlaybackDateData:
setArtworkIdentifier:
hasSubtitle
setIsContainer:
setHasIsContainer:
hasIsContainer
setIsPlayable:
setHasIsPlayable:
hasIsPlayable
setPlaybackProgress:
setHasPlaybackProgress:
hasPlaybackProgress
hasAlbumName
hasTrackArtistName
hasAlbumArtistName
hasDirectorName
setSeasonNumber:
setHasSeasonNumber:
hasSeasonNumber
setEpisodeNumber:
setHasEpisodeNumber:
hasEpisodeNumber
setReleaseDate:
setHasReleaseDate:
hasReleaseDate
setPlayCount:
setHasPlayCount:
hasPlayCount
hasLocalizedContentRating
setIsExplicitItem:
setHasIsExplicitItem:
hasIsExplicitItem
setPlaylistType:
setHasPlaylistType:
hasPlaylistType
setRadioStationType:
setHasRadioStationType:
hasRadioStationType
setArtworkAvailable:
setHasArtworkAvailable:
hasArtworkAvailable
setInfoAvailable:
setHasInfoAvailable:
hasInfoAvailable
setLanguageOptionsAvailable:
setHasLanguageOptionsAvailable:
hasLanguageOptionsAvailable
setNumberOfSections:
setHasNumberOfSections:
hasNumberOfSections
setLyricsAvailable:
setHasLyricsAvailable:
hasLyricsAvailable
setEditingStyleFlags:
setHasEditingStyleFlags:
hasEditingStyleFlags
setIsStreamingContent:
setHasIsStreamingContent:
hasIsStreamingContent
setIsCurrentlyPlaying:
setHasIsCurrentlyPlaying:
hasIsCurrentlyPlaying
hasCollectionIdentifier
hasProfileIdentifier
hasArtworkMIMEType
hasAssetURLString
hasComposer
setDiscNumber:
setHasDiscNumber:
hasDiscNumber
hasGenre
setChapterCount:
setHasChapterCount:
hasChapterCount
setTotalDiscCount:
setHasTotalDiscCount:
hasTotalDiscCount
setTotalTrackCount:
setHasTotalTrackCount:
hasTotalTrackCount
setTrackNumber:
setHasTrackNumber:
hasTrackNumber
hasContentIdentifier
setIsSharable:
setHasIsSharable:
hasIsSharable
setIsLiked:
setHasIsLiked:
hasIsLiked
setIsInWishList:
setHasIsInWishList:
hasIsInWishList
hasRadioStationString
setITunesStoreIdentifier:
setHasITunesStoreIdentifier:
hasITunesStoreIdentifier
setITunesStoreSubscriptionIdentifier:
setHasITunesStoreSubscriptionIdentifier:
hasITunesStoreSubscriptionIdentifier
setITunesStoreArtistIdentifier:
setHasITunesStoreArtistIdentifier:
hasITunesStoreArtistIdentifier
setITunesStoreAlbumIdentifier:
setHasITunesStoreAlbumIdentifier:
hasITunesStoreAlbumIdentifier
hasPurchaseInfoData
setDefaultPlaybackRate:
setHasDefaultPlaybackRate:
hasDefaultPlaybackRate
setDownloadState:
setHasDownloadState:
hasDownloadState
setDownloadProgress:
setHasDownloadProgress:
hasDownloadProgress
hasAppMetricsData
hasSeriesName
setMediaType:
setHasMediaType:
hasMediaType
setMediaSubType:
setHasMediaSubType:
hasMediaSubType
hasNowPlayingInfoData
hasUserInfoData
setIsSteerable:
setHasIsSteerable:
hasIsSteerable
hasArtworkURL
hasLyricsURL
hasDeviceSpecificUserInfoData
hasCollectionInfoData
setElapsedTimeTimestamp:
setHasElapsedTimeTimestamp:
hasElapsedTimeTimestamp
setInferredTimestamp:
setHasInferredTimestamp:
hasInferredTimestamp
hasServiceIdentifier
setArtworkDataWidth:
setHasArtworkDataWidth:
hasArtworkDataWidth
setArtworkDataHeight:
setHasArtworkDataHeight:
hasArtworkDataHeight
hasCurrentPlaybackDateData
hasArtworkIdentifier
subtitle
isContainer
isPlayable
playbackProgress
albumName
trackArtistName
albumArtistName
directorName
seasonNumber
episodeNumber
releaseDate
playCount
localizedContentRating
isExplicitItem
playlistType
radioStationType
artworkAvailable
infoAvailable
languageOptionsAvailable
numberOfSections
lyricsAvailable
editingStyleFlags
isStreamingContent
isCurrentlyPlaying
collectionIdentifier
profileIdentifier
artworkMIMEType
assetURLString
composer
discNumber
genre
chapterCount
totalDiscCount
totalTrackCount
trackNumber
contentIdentifier
isSharable
isLiked
isInWishList
radioStationString
iTunesStoreIdentifier
iTunesStoreSubscriptionIdentifier
iTunesStoreArtistIdentifier
iTunesStoreAlbumIdentifier
purchaseInfoData
defaultPlaybackRate
downloadState
downloadProgress
appMetricsData
seriesName
mediaType
mediaSubType
nowPlayingInfoData
userInfoData
isSteerable
artworkURL
lyricsURL
deviceSpecificUserInfoData
collectionInfoData
elapsedTimeTimestamp
inferredTimestamp
serviceIdentifier
artworkDataWidth
artworkDataHeight
currentPlaybackDateData
artworkIdentifier
_elapsedTimeTimestamp
_iTunesStoreAlbumIdentifier
_iTunesStoreArtistIdentifier
_iTunesStoreIdentifier
_iTunesStoreSubscriptionIdentifier
_inferredTimestamp
_releaseDate
_albumArtistName
_albumName
_appMetricsData
_artworkDataHeight
_artworkDataWidth
_artworkIdentifier
_artworkMIMEType
_artworkURL
_assetURLString
_chapterCount
_collectionIdentifier
_collectionInfoData
_composer
_contentIdentifier
_currentPlaybackDateData
_defaultPlaybackRate
_deviceSpecificUserInfoData
_directorName
_discNumber
_downloadProgress
_downloadState
_editingStyleFlags
_episodeNumber
_genre
_localizedContentRating
_lyricsURL
_mediaSubType
_mediaType
_nowPlayingInfoData
_numberOfSections
_playCount
_playbackProgress
_playlistType
_profileIdentifier
_purchaseInfoData
_radioStationString
_radioStationType
_seasonNumber
_seriesName
_serviceIdentifier
_subtitle
_totalDiscCount
_totalTrackCount
_trackArtistName
_trackNumber
_userInfoData
_artworkAvailable
_infoAvailable
_isContainer
_isCurrentlyPlaying
_isExplicitItem
_isInWishList
_isLiked
_isPlayable
_isSharable
_isSteerable
_isStreamingContent
_languageOptionsAvailable
_lyricsAvailable
setDiagnosticInfo:
setDateGenerated:
setHasDateGenerated:
hasDateGenerated
hasDiagnosticInfo
dateGenerated
diagnosticInfo
_dateGenerated
_diagnosticInfo
setLastSupportedMessageType:
lastSupportedMessageType
initWithLastSupportedMessageType:
initWithDeviceInfo:
deviceInfo
supportedProtocolMessages
_supportedProtocolMessages
password
securityType
setPassword:
setSecurityType:
setHandlerReturnStatusDatas:
addHandlerReturnStatusData:
handlerReturnStatusCount
clearHandlerReturnStatus
handlerReturnStatusAtIndex:
addHandlerReturnStatus:
handlerReturnStatusDatasCount
clearHandlerReturnStatusDatas
handlerReturnStatusDataAtIndex:
handlerReturnStatusDataType
setErrorCode:
setHasErrorCode:
hasErrorCode
handlerReturnStatus
setHandlerReturnStatus:count:
errorCode
handlerReturnStatusDatas
_handlerReturnStatus
_errorCode
_handlerReturnStatusDatas
propertyListWithData:options:format:error:
dataWithPropertyList:format:options:error:
mainBundle
bundleIdentifier
infoDictionary
objectForKeyedSubscript:
timeIntervalSinceDate:
bytes
UTF8String
setSupportedFormats:
setDefaultFormat:
addSupportedFormats:
supportedFormatsCount
clearSupportedFormats
supportedFormatsAtIndex:
supportedFormatsType
hasDefaultFormat
supportedFormats
defaultFormat
_defaultFormat
_supportedFormats
setFormatSettings:
setContents:
setPacketDescriptions:
addPacketDescriptions:
packetDescriptionsCount
clearPacketDescriptions
packetDescriptionsAtIndex:
packetDescriptionsType
hasFormatSettings
setPacketCapacity:
setHasPacketCapacity:
hasPacketCapacity
setMaximumPacketSize:
setHasMaximumPacketSize:
hasMaximumPacketSize
setHasPacketCount:
hasPacketCount
hasContents
maximumPacketSize
contents
_maximumPacketSize
_packetCapacity
_packetCount
_contents
_packetDescriptions
substringToIndex:
uppercaseString
stringByReplacingCharactersInRange:withString:
respondsToSelector:
valueForKey:
methodForSelector:
mr_valueForPotentiallyUndefinedKey:
setObject:forKeyedSubscript:
setValue:forKey:
setDictionaryKeyToProtobufKeyMapping:
createDictionaryFromProtobuf:
createProtobufFromDictionary:
.cxx_destruct
dictionaryKeyToProtobufKeyMapping
protobufClass
setProtobufClass:
dictionaryValueToProtobufValueTransformer
setDictionaryValueToProtobufValueTransformer:
protobufValueToDictionaryValueTransformer
setProtobufValueToDictionaryValueTransformer:
_protobufKeyToDictionaryKeyMapping
_dictionaryKeyToProtobufKeyMapping
_protobufClass
_dictionaryValueToProtobufValueTransformer
_protobufValueToDictionaryValueTransformer
setRequestByRange:
setHasRequestByRange:
hasRequestByRange
setRequestByIdentifiers:
setHasRequestByIdentifiers:
hasRequestByIdentifiers
setRequestByRequest:
setHasRequestByRequest:
hasRequestByRequest
requestByRange
requestByIdentifiers
requestByRequest
_requestByIdentifiers
_requestByRange
_requestByRequest
unsignedIntValue
addDeviceIDs:
deviceIDsCount
deviceIDsAtIndex:
initWithDeviceIDs:errorCode:
deviceIDs
protobuf
setDescriptor:
descriptor
initWithProtobuf:
initWithDescriptor:
_descriptor
setDeviceID:
deviceID
initWithDeviceID:errorCode:
initWithRecordingState:
setDataBlock:
_initializeDataIfNecessary
dataBlock
initWithBuffer:time:gain:
initWithURL:
_init
appendData:
initWithFileAtPath:
dataWithContentsOfFile:
hasBytesAvailable
notifyDelegateOfStreamEvent:
getBytes:length:
subdataWithRange:
setData:
mutableBytes
streamStatus
_onRunLoop_notifyDelegateOfStreamEvent:
performBlock:
stream:handleEvent:
close
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
propertyForKey:
setProperty:forKey:
streamError
read:maxLength:
getBuffer:length:
handleDataReceived:
handleStreamDisconnect
_status
_scheduledRunLoop
_serialQueue
initToMemory
initWithURL:append:
initToBuffer:capacity:
initToFileAtPath:append:
hasSpaceAvailable
sharedAudioPresentationOutputContext
initWithAVOutputContext:type:
sharedSystemAudioContext
sharedSystemScreenContext
_reloadOutputDevices
_registerNotifications
_unregisterNotifications
isEqualToArray:
defaultCenter
postNotificationName:object:
callbackWithQueue:block:
replaceModificationWithDevices:callback:
_commitModification:
addModificationWithDevices:callback:
invokeWithError:
removeModificationWithDevices:callback:
outputDevices
_clearAnyCompletedModifications
_outputDevicesDidChangeNotification:
addObserver:selector:name:object:
_outputContextChangeInitiatedNotification:
removeObserver:
setWithArray:
array
objectsPassingTest:
anyObject
setOutputDevices:
modificationType
addObjectsFromArray:
minusSet:
isEqualToSet:
_contextSupportsMultipleDevices
setOutputDevice:options:
callback
_pendingModifications
valid
isSubsetOfSet:
intersectsSet:
removeObjectsInArray:
sharedAudioPresentationContext
setOutputDevices:withCallbackQueue:block:
addOutputDevices:withCallbackQueue:block:
removeOutputDevices:withCallbackQueue:block:
removeAllOutputDevicesWithCallbackQueue:block:
avOutputContext
_outputDevices
_avOutputContext
initWithType:devices:callback:
_timerSource
_valid
_modificationType
_callback
iTunesAudioContext
outputContextForID:
arrayWithObjects:count:
setDeviceIdentifier:
deviceIdentifier
initWithErrorCode:deviceIdentifier:
addPackets:
setPackets:
initWithData:forKey:
packets
initWithName:packets:playerPath:
initWithPlaybackQueue:forPlayerPath:
_packets
initWithBytes:length:
setX:
setY:
setZ:
setW:
hasData
getBytes:range:
gravity
userAcceleration
attitude
rotation
setGravity:
setUserAcceleration:
setAttitude:
setRotation:
setDPadX:
dPadX
setDPadY:
dPadY
setA:
setB:
setLeftShoulder:
leftShoulder
setRightShoulder:
rightShoulder
setLeftThumbstickX:
leftThumbstickX
setLeftThumbstickY:
leftThumbstickY
setRightThumbstickX:
rightThumbstickX
setRightThumbstickY:
rightThumbstickY
setLeftTrigger:
leftTrigger
setRightTrigger:
rightTrigger
setPause:
pause
setTouchDown:
touchDown
setMotion:
setButtons:
setDigitizer:
setPlayerIndex:
playerIndex
setButtonAUpDelay:
buttonAUpDelay
setProfile:
profile
setSupportsExtendedMotion:
supportsExtendedMotion
setVendorName:
vendorName
service
setInputMode:
weakObjectsPointerArray
allDevices
null
addPointer:
setCount:
deviceWithIdentifier:
registerDevice:
clearDevices
_devicesPointerArray
setPairingData:
hasPairingData
setStatus:
setHasStatus:
hasStatus
setIsRetrying:
setHasIsRetrying:
hasIsRetrying
setIsUsingSystemPairing:
setHasIsUsingSystemPairing:
hasIsUsingSystemPairing
pairingData
status
isRetrying
isUsingSystemPairing
_pairingData
_isRetrying
_isUsingSystemPairing
_object
_objectAddress
setKey:
hasKey
_key
setText:
hasText
actionType
setActionType:
setHasActionType:
hasActionType
actionTypeAsString:
StringAsActionType:
text
_actionType
_text
initWithTransport:
_callClientGameControllerInputModeCallback
connection
voiceRecordingState
setVoiceRecordingState:
_callClientRecordingStateCallback
_callCientHiliteModeCallback
setGameControllerInputModeCallback:
setGameControllerInputModeCallbackQueue:
setGameControllerPropertiesCallback:
setGameControllerPropertiesCallbackQueue:
setTextInputCallback:
setTextInputCallbackQueue:
sendClientUpdatesConfigMessage
setRecordingStateCallback:
setRecordingStateCallbackQueue:
setHiliteModeCallback:
setHiliteModeCallbackQueue:
setGameControllerInputMode:
_handleKeyboardMessage:
_callClientGameControllerPropertiesCallback:controller:
_handleHiliteModeMessage:
clientConnection:didReceiveMessage:
textInputCallback
wantsNowPlayingNotifications
wantsNowPlayingArtworkNotifications
wantsVolumeNotifications
errorForCurrentState
initWithDeviceDescriptor:
error
sendMessage:queue:reply:
supportedMessages
isSupported:
initWithTouchEvent:virtualDeviceID:
sendMessage:
initWithButtonEvent:
initWithHIDEvent:
cryptoSession
decryptedTextUsingCryptoSession:
attributes
initWithText:attributes:
_sendTextInputMessageWithActionType:text:
hasDigitizer
digitizer
motion
initWithActionType:text:
setIsCallingClientCallback:
setEditing:
_callClientTextInputCallback:type:
setGameControllerInputModeCallback:withQueue:
setGameControllerPropertiesCallback:withQueue:
setTextEditingCallback:withQueue:
setVoiceRecordingStateCallback:withQueue:
setHiliteModeCallback:withQueue:
currentClientUpdatesConfigMessage
registerTouchDeviceWithDescriptor:replyQueue:completion:
sendTouchEvent:toVirtualDeviceWithID:
sendButtonEvent:
sendHIDEvent:
getTextEditingSessionWithReplyQueue:completion:
insertTextIntoActiveTextEditingSessionWithText:
setTextOnActiveTextEditingSessionWithText:
deleteBackwardInActiveTextEditingSession
clearActiveTextEditingSessionData
registerGameControllerWithProperties:queue:completion:
unregisterGameController:
sendGameControllerEvent:controllerID:
registerVoiceInputDeviceWithDescriptor:replyQueue:completion:
processVoiceInputAudioDataForDeviceID:withBuffer:time:gain:
exitHiliteMode
wake
gameControllerInputModeCallback
gameControllerInputMode
gameControllerInputModeCallbackQueue
gameControllerPropertiesCallback
gameControllerPropertiesCallbackQueue
recordingStateCallback
recordingStateCallbackQueue
textInputCallbackQueue
hiliteModeCallback
hiliteModeCallbackQueue
_hiliteMode
_gameControllerInputModeCallback
_gameControllerInputMode
_gameControllerInputModeCallbackQueue
_gameControllerPropertiesCallback
_gameControllerPropertiesCallbackQueue
_recordingStateCallback
_recordingStateCallbackQueue
_textInputCallback
_textInputCallbackQueue
_hiliteModeCallback
_hiliteModeCallbackQueue
handleFailureInFunction:file:lineNumber:description:
setVolumeControlAvailable:
volumeControlAvailable
initWithAvailableFlag:
setAbsolute:
setHasAbsolute:
hasAbsolute
setIntegratedDisplay:
setHasIntegratedDisplay:
hasIntegratedDisplay
setScreenSizeWidth:
setHasScreenSizeWidth:
hasScreenSizeWidth
setScreenSizeHeight:
setHasScreenSizeHeight:
hasScreenSizeHeight
absolute
integratedDisplay
screenSizeWidth
screenSizeHeight
_screenSizeHeight
_screenSizeWidth
_absolute
_integratedDisplay
playerClientRequestsForPlayerPath:
playbackQueueClient
augmentCommandOptions:forCommand:
removeCommandHandlerBlockForKey:
addCommandHandlerBlock:forKey:
setHardwareRemoteBehavior:
setCommandCallback:
setReceivesSupportedCommandsNotifications:
raise:format:
initWithDomain:code:userInfo:
isPaired
isValid
pairedDevices
handlePairingExchangeData:completion:
handlePairingFailureWithStatus:
encryptData:withError:
decryptData:withError:
deleteIdentityWithError:
role
_device
_role
setHasVolumeControlAvailable:
hasVolumeControlAvailable
_volumeControlAvailable
setReport:
hasReport
report
_report
initWithCommand:options:playerPath:
serializationDate
_serializationDate
setPrompt:
setInputTraits:
hasPrompt
hasInputTraits
prompt
inputTraits
_inputTraits
_prompt
setHasNowPlayingUpdates:
hasNowPlayingUpdates
setHasArtworkUpdates:
hasArtworkUpdates
setHasVolumeUpdates:
hasVolumeUpdates
setHasKeyboardUpdates:
hasKeyboardUpdates
_artworkUpdates
_keyboardUpdates
_nowPlayingUpdates
_volumeUpdates
write
updateWithValue:
defaultManager
createFileAtPath:contents:attributes:
appendString:
writeToFile:atomically:encoding:error:
initWithPath:
addMessage:data:
_path
_entries
numberWithUnsignedInteger:
setAvg:
setMin:
setMax:
total
setTotal:
values
setValues:
_avg
_min
_max
_total
_values
setPhase:
setFinger:
phase
finger
dataWithBytes:length:
longLongValue
setHasName:
hasName
hasPackets
initForReadingWithData:
initWithCoder:
initWithUTF8String:
encodeWithCoder:
conformsToProtocol:
initForWritingWithMutableData:
finishEncoding
restoreNowPlayingClientState
initWithOrigin:
nowPlayingClients
nowPlayingClientRequestsForPlayerPath:
removeClient:
setTransactionCallback:forName:
transactionCallbackForName:
origin
_origin
_nowPlayingClients
_transactionCallbacks
playerClients
nowPlayingPlayerClientRequestsForPlayerPath:
removePlayer:
_client
_playerClients
initWithPlayerPath:queue:
_registerDefaultCallbacks
_onQueue_writeData
_transactionDestintationForName:
_handleTransactionPackets:packets:completion:
packetsFromMessage:completion:
initWithName:playerPath:
originClientRequestsForPlayerPath:
transactionCallbacksForName:
unpacketize:completion:
addTransactionCallback:forName:
addPlaybackQueueCompletion:forRequest:
removePlaybackQueueCompletionForRequest:
receiveTransaction:fromMessage:
_playbackQueueCompletions
_transactions
_playbackQueueClient
_localDeviceInfoDidChangeNotification:
_transportDeviceInfoDidChangeNotification:
_contentItemUpdatedNotification:
_handleDeviceInfoChange:oldDevice:
_tearDownCustomOrigin
hostname
port
inputStream
outputStream
initWithKey:data:
setNowPlayingItem:
_registerOriginCallbacks
_callClientConnectionStateCallback:error:
setPairingCallback:
setPairingCallbackQueue:
setConnectionStateCallback:
setConnectionStateCallbackQueue:
setNameCallback:
setNameCallbackQueue:
setPairingAllowedCallback:
setPairingAllowedCallbackQueue:
setCustomDataCallback:
setCustomDataCallbackQueue:
setConnectionState:error:
_cleanUp
_initializeConnection
_loadDeviceInfo
requiresCustomPairing
_openSecuritySession
_setupCustomOrigin
disconnect:
streamsAreValid
_handleCryptoPairingMessage:
_handleSetStateMessage:
_handleNotificationMessage:
_handleSetArtworkMessage:
_handleSetVolumeControlAvailabilityMessage:
_handleTransactionMessage:
_handleDeviceInfoUpdateMessage:
_handleSetConnectionStateMessage:
_handleGenericMessage:
_handleSetNowPlayingClientMessage:
_handleSetNowPlayingPlayerMessage:
userInfo
getInputStream:outputStream:
mainRunLoop
initWithInputStream:outputStream:runLoop:
setConnection:
setCryptoEnabled:
setCustomOrigin:
externalDeviceTimeoutDuration
setDeviceInfo:
setSupportedMessages:
hasExchangedMessage
initWithPairingData:status:isRetrying:isUsingSystemPairing:state:
setDataExchangeBlock:
_callClientPairingCallback:
setPromptForSetupCodeBlock:
setExchangeCompleteBlock:
setCryptoSession:
_handleRemoteCommand:withOptions:playerPath:completion:
_createPlaybackQueue:
initWithRequest:forPlayerPath:
initWithEvent:
standardCredentials
characterCount
sendError
results
_handleSetStateMessageModern:
_handleSetStateMessageLegacy:
_updateNowPlayingInfoForPlayerPath:
_handleNotificationMessageModern:
_handleNotificationMessageLegacy:
notification
boolValue
setNowPlayingArtwork:
sendTransaction:withPackets:
initWithDevice:
_callClientNameCallback
_callClientAllowsPairingCallback
code
_callCientCustomDataCallback:name:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
retainCount
zone
superclass
debugDescription
clientDidDisconnect:
hostName
setWantsNowPlayingNotifications:
setWantsNowPlayingArtworkNotifications:
setWantsVolumeNotifications:
customOrigin
setPairingCallback:withQueue:
setConnectionStateCallback:withQueue:
setNameCallback:withQueue:
setPairingAllowedCallback:withQueue:
setCustomDataCallback:withQueue:
connect
unpair
sendCustomData:withName:
ping:callback:withQueue:
modifyOutputContextOfType:addingDeviceUIDs:removingDeviceUIDs:withReplyQueue:completion:
transport
isCallingClientCallback
nowPlayingArtwork
nowPlayingItem
pairingCallback
pairingCallbackQueue
connectionStateCallback
connectionState
connectionStateCallbackQueue
nameCallback
nameCallbackQueue
pairingAllowedCallback
pairingAllowedCallbackQueue
customDataCallback
customDataCallbackQueue
_workerQueue
_customOrigin
_cachedServerDisconnectError
_disconnecting
_wantsNowPlayingNotifications
_wantsNowPlayingArtworkNotifications
_wantsVolumeNotifications
_isCallingClientCallback
_transport
_connection
_deviceInfo
_supportedMessages
_nowPlayingArtwork
_nowPlayingItem
_pairingCallback
_pairingCallbackQueue
_connectionStateCallback
_connectionState
_connectionStateCallbackQueue
_nameCallback
_nameCallbackQueue
_pairingAllowedCallback
_pairingAllowedCallbackQueue
_customDataCallback
_customDataCallbackQueue
setHasX:
hasX
setHasY:
hasY
setHasTouchDown:
hasTouchDown
_touchDown
addAddingOutputDeviceUIDs:
addRemovingOutputDeviceUIDs:
addingOutputDeviceUIDsCount
clearAddingOutputDeviceUIDs
addingOutputDeviceUIDsAtIndex:
removingOutputDeviceUIDsCount
clearRemovingOutputDeviceUIDs
removingOutputDeviceUIDsAtIndex:
addingOutputDeviceUIDsType
removingOutputDeviceUIDsType
setHasOutputContextType:
hasOutputContextType
outputContextTypeAsString:
StringAsOutputContextType:
_addingOutputDeviceUIDs
_outputContextType
_removingOutputDeviceUIDs
setHidEventData:
hidEventData
buttonEvent
initWithDeviceFeatures:
strongToWeakObjectsMapTable
devicePresenceDetected
setDiscoveryMode:
availableOutputDevices
setWithCapacity:
initWithOutputDevices:
containsObject:
_availableOutputDevicesDidChangeNotification:
removeObserver:name:object:
initWithEndpointFeatures:
hasAvailableEndpoints
availableEndpoints
addEndpointsChangedCallback:
addOutputDevicesChangedCallback:
removeEndpointsChangedCallback:
removeOutputDevicesChangedCallback:
endpointFeatures
discoveryMode
setAvailableEndpoints:
_avDiscoverySession
_endpointsChangedCallbacks
_outputDevicesChangedCallbacks
_groupIDsToWeakEndpointsTable
_deviceIDsToWeakOutputDevicesTable
_endpointFeatures
_discoveryMode
_availableEndpoints
openInState:
_handlePairingFailureWithError:
setInputKey:
setInputNonce:
setOutputKey:
setOutputNonce:
_onQueuePerformPairingExchangeWithInputData:error:
domain
_onQueueInitializePairingSessionWithState:
pairingSession:didPrepareExchangeData:
shouldAutoRetry
retry
errorWithDomain:code:userInfo:
initWithLength:
appendBytes:length:
extendedPeerInfo
stringWithCString:encoding:
peerDeviceFromPeer:
deviceFromPeer:
passcode
pairingSession:showSetupCode:
pairingSessionHideSetupCode:
pairingSession:promptForSetupCodeWithDelay:completion:
_delegateDidEnterPasscode:
_handlePairingCompleteWithError:
pairingSession:didCompleteExchangeWithError:
dataWithBytesNoCopy:length:
_handleSetupExchangeComplete
_onQueueDeriveEncryptionKeys
_generateSetupCodeWithMaximumLength:
_displaySetupCode:
_hideSetupCode
_promptForSetupCodeWithDelay:
pairingFlags
inputKey
inputNonce
outputKey
outputNonce
_credentials
_pairingSession
_pairingDelegate
_hasExchangedMessage
_pairingFlags
_inputKey
_inputNonce
_outputKey
_outputNonce
getCString:maxLength:encoding:
doubleValue
MR_isEqualToNowPlayingInfo:
floatValue
setContentItems:
resolvedPlayerPath
contentItems
contentItemsCount
setResolvedPlayerPath:
setNotSendingTransaction:
notSendingTransaction
initWithFormat:
setRevision:
revision
appendFormat:
startQueuingContentChanges
dispatchQueuedContentChanges
addRequest:
addPlaybackQueue:forRequest:
capabilities
setCapabilities:
unsetCoalescingInvalidations
setInvalidatationTimestamp:
testAndSetCoalescingInvalidations
hasRequest:
subscribedContentItems:
beginSendingTransactions
updateCache:
initWithObjectsAndKeys:
setUserData:
endSendingTransactions
subscribedContentItems:forRequest:
subscribedContentItemRequests:
item
playbackQueueDispatchQueue
setPlaybackQueueDispatchQueue:
lookup
playerClientRequestsForUnresolvedPlayerPath:completion:
setPlaybackQueueCallback:
setPlaybackQueueTransactionCallback:
addCreatePlaybackQueueForRequestCallback:prepend:
addCreateItemForIdentifierCallback:prepend:
addCreateItemForOffsetCallback:prepend:
addCreateChildItemCallback:prepend:
addMetadataCallback:prepend:
addLanguageOptionsCallback:prepend:
addInfoCallback:prepend:
addLyricsCallback:prepend:
addArtworkCallback:prepend:
removeCallback:
customDictionaryRepresentation
customDescription
dictionaryWithObjectsAndKeys:
initialize
hasPlaybackQueueCallbacks
initWithImageData:mimeType:
addEntriesFromDictionary:
requestForIdentifer:
copyImageData
mimeType
initWithIdentifier:publicKey:privateKey:
publicKey
privateKey
_publicKey
_privateKey
recordingState
setRecordingState:
initWithDeviceID:
_deviceID
_recordingState
setJpegData:
hasJpegData
jpegData
_jpegData
_parseBuffer:
_parseTimestamp:
_parseGain:
setFormatSettingsPlistData:
setStartOffset:
setVariableFramesInPacket:
setDataByteSize:
_copyWithZone:usingConcreteClass:
formatSettingsPlistData
dataByteSize
startOffset
variableFramesInPacket
mutableCopyWithZone:
setPairingSession:
setPairingDelegate:
setShowSetupCodeBlock:
setHideSetupCodeBlock:
_useSystemPairing
_openSecuritySessionInState:useSystemPairing:completion:
useExternalDeviceSystemPairing
pairingSession
pairingDelegate
initWithMediaRemoteService:
postNotificationName:object:userInfo:
initWithNotificationCallback:
fetchPickableRoutesForCategory:completion:
offsetForQueueIdentifier:
createItemForOffsetCallback
integerValue
metadataCallbacks
languageOptionsCallbacks
infoCallbacks
lyricsCallbacks
artworkCallbacks
createChildItemCallback
numberWithLong:
replaceObjectAtIndex:withObject:
invalidatationTimestamp
playbackQueueCallback
playbackQueueTransactionCallback
createItemForIdentifierCallback
createPlaybackQueueForRequestCallback
postNotification:userInfo:object:
removeOrigin:
workerSerialQueue
registeredOrigins
activePlayerPath
registerOrigin:withCompletion:
unregisterOrigin:withCompletion:
unregisterAllOriginsWithCompletion:
fetchPickableRoutesWithCategory:completion:
_playbackQueueDispatchQueue
_registeredOrigins
_routingClientController
_activePlayerPath
_notifyRestoreClientStateForLaunch
_service
_notificationClient
commandCallback
preProcessCommand:options:
commandHandlerBlocks
videoThumbnailsCallback
audioAmplitudeSamplesCallback
endLyricsEventCallback
beginLyricsEventCallback
hasUserData
userData
_userData
setUsagePage:
setUsage:
setButtonDown:
usagePage
usage
buttonDown
initWithQueue:block:
block
_block
setHasHiliteMode:
hasHiliteMode
setLocalizedTitle:
setLocalizedShortTitle:
setSupportedCustomQueueIdentifiers:
addSupportedCustomQueueIdentifier:
preferredIntervalsCount
clearPreferredIntervals
preferredIntervalAtIndex:
addPreferredInterval:
supportedRatesCount
clearSupportedRates
supportedRateAtIndex:
addSupportedRate:
supportedPlaybackQueueTypesCount
clearSupportedPlaybackQueueTypes
supportedPlaybackQueueTypeAtIndex:
addSupportedPlaybackQueueType:
supportedCustomQueueIdentifiersCount
clearSupportedCustomQueueIdentifiers
supportedCustomQueueIdentifierAtIndex:
supportedInsertionPositionsCount
clearSupportedInsertionPositions
supportedInsertionPositionsAtIndex:
addSupportedInsertionPositions:
supportedCustomQueueIdentifierType
setEnabled:
setHasEnabled:
hasEnabled
setActive:
setHasActive:
hasActive
preferredIntervals
setPreferredIntervals:count:
hasLocalizedTitle
hasLocalizedShortTitle
setMinimumRating:
setHasMinimumRating:
hasMinimumRating
setMaximumRating:
setHasMaximumRating:
hasMaximumRating
supportedRates
setSupportedRates:count:
setPresentationStyle:
setHasPresentationStyle:
hasPresentationStyle
setSkipInterval:
setHasSkipInterval:
hasSkipInterval
setNumAvailableSkips:
setHasNumAvailableSkips:
hasNumAvailableSkips
setSkipFrequency:
setHasSkipFrequency:
hasSkipFrequency
setCanScrub:
setHasCanScrub:
hasCanScrub
supportedPlaybackQueueTypes
setSupportedPlaybackQueueTypes:count:
supportedInsertionPositions
setSupportedInsertionPositions:count:
setSupportsSharedQueue:
setHasSupportsSharedQueue:
hasSupportsSharedQueue
enabled
active
localizedTitle
localizedShortTitle
minimumRating
maximumRating
presentationStyle
skipInterval
numAvailableSkips
skipFrequency
canScrub
supportedCustomQueueIdentifiers
supportsSharedQueue
_preferredIntervals
_supportedInsertionPositions
_supportedPlaybackQueueTypes
_supportedRates
_canScrub
_localizedShortTitle
_localizedTitle
_maximumRating
_minimumRating
_numAvailableSkips
_presentationStyle
_skipFrequency
_skipInterval
_supportedCustomQueueIdentifiers
_active
_enabled
_supportsSharedQueue
setHasUsagePage:
hasUsagePage
setHasUsage:
hasUsage
setHasButtonDown:
hasButtonDown
_usage
_usagePage
_buttonDown
bundleWithIdentifier:
localizations
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
objectAtIndexedSubscript:
pathForResource:ofType:inDirectory:forLocalization:
initWithContentsOfFile:
localizedStringForKey:value:table:
typeAsString:
StringAsType:
setHasIdentifier:
hasDeviceInfo
setAttributes:
setEncryptedTextCyphertext:
hasAttributes
hasEncryptedTextCyphertext
encryptedTextCyphertext
_attributes
_encryptedTextCyphertext
setAuthenticationToken:
setSendCommandMessage:
setSendCommandResultMessage:
setGetStateMessage:
setSetStateMessage:
setSetArtworkMessage:
setRegisterHIDDeviceMessage:
setRegisterHIDDeviceResultMessage:
setSendHIDEventMessage:
setSendHIDReportMessage:
setSendVirtualTouchEventMessage:
setNotificationMessage:
setContentItemsChangedNotificationMessage:
setDeviceInfoMessage:
setClientUpdatesConfigMessage:
setVolumeControlAvailabilityMessage:
setGameController:
setRegisterGameController:
setRegisterGameControllerResponse:
setUnregisterGameController:
setRegisterForGameControllerEvents:
setKeyboardMessage:
setGetKeyboardMessage:
setTextInputMessage:
setGetVoiceInputDevicesMessage:
setGetVoiceInputDevicesResponseMessage:
setRegisterVoiceInputDeviceMessage:
setRegisterVoiceInputDeviceResponseMessage:
setSetRecordingStateMessage:
setSendVoiceInputMessage:
setPlaybackQueueRequest:
setTransactionPackets:
setCryptoPairingMessage:
setGameControllerProperties:
setReadyStateMessage:
setConnectionState:
setSendButtonEventMessage:
setSetHiliteModeMessage:
setWakeDeviceMessage:
setGenericMessage:
setSendPackedVirtualTouchEventMessage:
setSendLyricsEventMessage:
setSetNowPlayingClientMessage:
setSetNowPlayingPlayerMessage:
setModifyOutputContextRequestMessage:
hasAuthenticationToken
hasSendCommandMessage
hasSendCommandResultMessage
hasGetStateMessage
hasSetStateMessage
hasSetArtworkMessage
hasRegisterHIDDeviceMessage
hasRegisterHIDDeviceResultMessage
hasSendHIDEventMessage
hasSendHIDReportMessage
hasSendVirtualTouchEventMessage
hasNotificationMessage
hasContentItemsChangedNotificationMessage
hasDeviceInfoMessage
hasClientUpdatesConfigMessage
hasVolumeControlAvailabilityMessage
hasGameController
hasRegisterGameController
hasRegisterGameControllerResponse
hasUnregisterGameController
hasRegisterForGameControllerEvents
hasKeyboardMessage
hasGetKeyboardMessage
hasTextInputMessage
hasGetVoiceInputDevicesMessage
hasGetVoiceInputDevicesResponseMessage
hasRegisterVoiceInputDeviceMessage
hasRegisterVoiceInputDeviceResponseMessage
hasSetRecordingStateMessage
hasSendVoiceInputMessage
hasPlaybackQueueRequest
hasTransactionPackets
hasCryptoPairingMessage
hasGameControllerProperties
hasReadyStateMessage
hasConnectionState
hasSendButtonEventMessage
hasSetHiliteModeMessage
hasWakeDeviceMessage
hasGenericMessage
hasSendPackedVirtualTouchEventMessage
hasSendLyricsEventMessage
hasSetNowPlayingClientMessage
hasSetNowPlayingPlayerMessage
hasModifyOutputContextRequestMessage
authenticationToken
sendCommandMessage
sendCommandResultMessage
getStateMessage
setStateMessage
setArtworkMessage
registerHIDDeviceMessage
registerHIDDeviceResultMessage
sendHIDEventMessage
sendHIDReportMessage
sendVirtualTouchEventMessage
notificationMessage
contentItemsChangedNotificationMessage
deviceInfoMessage
clientUpdatesConfigMessage
volumeControlAvailabilityMessage
gameController
registerGameController
registerGameControllerResponse
unregisterGameController
registerForGameControllerEvents
keyboardMessage
getKeyboardMessage
textInputMessage
getVoiceInputDevicesMessage
getVoiceInputDevicesResponseMessage
registerVoiceInputDeviceMessage
registerVoiceInputDeviceResponseMessage
setRecordingStateMessage
sendVoiceInputMessage
playbackQueueRequest
transactionPackets
cryptoPairingMessage
gameControllerProperties
readyStateMessage
sendButtonEventMessage
setHiliteModeMessage
wakeDeviceMessage
genericMessage
sendPackedVirtualTouchEventMessage
sendLyricsEventMessage
setNowPlayingClientMessage
setNowPlayingPlayerMessage
modifyOutputContextRequestMessage
_authenticationToken
_clientUpdatesConfigMessage
_contentItemsChangedNotificationMessage
_cryptoPairingMessage
_deviceInfoMessage
_gameController
_gameControllerProperties
_genericMessage
_getKeyboardMessage
_getStateMessage
_getVoiceInputDevicesMessage
_getVoiceInputDevicesResponseMessage
_keyboardMessage
_modifyOutputContextRequestMessage
_notificationMessage
_playbackQueueRequest
_readyStateMessage
_registerForGameControllerEvents
_registerGameController
_registerGameControllerResponse
_registerHIDDeviceMessage
_registerHIDDeviceResultMessage
_registerVoiceInputDeviceMessage
_registerVoiceInputDeviceResponseMessage
_sendButtonEventMessage
_sendCommandMessage
_sendCommandResultMessage
_sendHIDEventMessage
_sendHIDReportMessage
_sendLyricsEventMessage
_sendPackedVirtualTouchEventMessage
_sendVirtualTouchEventMessage
_sendVoiceInputMessage
_setArtworkMessage
_setHiliteModeMessage
_setNowPlayingClientMessage
_setNowPlayingPlayerMessage
_setRecordingStateMessage
_setStateMessage
_textInputMessage
_transactionPackets
_unregisterGameController
_volumeControlAvailabilityMessage
_wakeDeviceMessage
hasDescriptor
setHasPhase:
hasPhase
phaseAsString:
StringAsPhase:
setHasFinger:
hasFinger
_finger
_phase
setBundleIdentifier:
setParentApplicationBundleIdentifier:
setProcessIdentifier:
setHasProcessIdentifier:
hasProcessIdentifier
hasBundleIdentifier
hasParentApplicationBundleIdentifier
setProcessUserIdentifier:
setHasProcessUserIdentifier:
hasProcessUserIdentifier
nowPlayingVisibility
setNowPlayingVisibility:
setHasNowPlayingVisibility:
hasNowPlayingVisibility
nowPlayingVisibilityAsString:
StringAsNowPlayingVisibility:
hasTintColor
processIdentifier
parentApplicationBundleIdentifier
processUserIdentifier
tintColor
_bundleIdentifier
_nowPlayingVisibility
_parentApplicationBundleIdentifier
_processIdentifier
_processUserIdentifier
_tintColor
initWithArray:
setNotificationCallback:
notificationCallback
isRegisteredForNowPlayingNotifications
receivesExternalScreenTypeChangedNotifications
setReceivesExternalScreenTypeChangedNotifications:
receivesSupportedCommandsNotifications
receivesRoutesChangedNotifications
setReceivesRoutesChangedNotifications:
receivesVolumeControlNotifications
setReceivesVolumeControlNotifications:
receivesOriginChangedNotifications
setReceivesOriginChangedNotifications:
receivesPlaybackErrorNotifications
setReceivesPlaybackErrorNotifications:
receivesVoiceInputRecordingStateNotifications
setReceivesVoiceInputRecordingStateNotifications:
_registeredNowPlayingObservers
_nowPlayingNotificationsQueue
_nowPlayingNotifications
_routesChangedNotifications
_volumeControlNotifications
_externalScreenNotifications
_originNotifications
_supportedCommandsNotifications
_voiceInputNotifications
_errorNotifications
_notificationCallback
_receivesExternalScreenTypeChangedNotifications
_receivesSupportedCommandsNotifications
_receivesRoutesChangedNotifications
_receivesVolumeControlNotifications
_receivesOriginChangedNotifications
_receivesPlaybackErrorNotifications
_receivesVoiceInputRecordingStateNotifications
initWithNotification:userInfo:queue:
xpcMessage
setXpcMessage:
_notification
_userInfo
_xpcMessage
initWithSuiteName:
_boolValueForKey:usingDefaultValue:
setBool:forKey:
synchronize
integerForKey:
_doubleValueForKey:usingDefaultValue:
_integerValueForKey:usingDefaultValue:
arrayForKey:
boolForKey:
setDouble:forKey:
doubleForKey:
setInteger:forKey:
usePeerToPeerExternalDeviceConnections
useNoDelayOptionForExternalDeviceSockets
useDebugAVRouteWithoutVolumeControl
deviceSupportsExternalRemoteControl
shouldInitializeTelevisionBonjourService
shouldLogPairingSetupCode
hasExternalDeviceSocketQOSLevelSet
externalDeviceSocketQOSLevel
externalDeviceNowPlayingInfoCoalesceDuration
externalDeviceNowPlayingInfoArtworkCoalesceDuration
externalDeviceDisconnectWaitDuration
externalDeviceDisconnectSleepDuration
externalDeviceSleepAssertionOnClientConnectDuration
bluetoothDeviceResumeDuration
broadcastCommandWaitDuration
airPlayOutputContextInitTimeoutDuration
maxTransactionMemorySize
transactionWaitDurationOnOutOfMemory
transactionWaitDurationOnXpcSend
transactionWaitDurationOnNetworkSend
useSystemAudioContextForAirPlayTransport
connectedClientPIDs
setConnectedClientPIDs:
_removeValueForKey:
isExternalDevicePairingAllowed
setExternalDevicePairingAllowed:
_userDefaults
_externalDevicePairingAllowed
hasPassword
setHasSecurityType:
hasSecurityType
securityTypeAsString:
StringAsSecurityType:
_password
_securityType
setHasPlayerIndex:
hasPlayerIndex
hasVendorName
setHasButtonAUpDelay:
hasButtonAUpDelay
setHasProfile:
hasProfile
profileAsString:
StringAsProfile:
setHasSupportsExtendedMotion:
hasSupportsExtendedMotion
_buttonAUpDelay
_playerIndex
_profile
_vendorName
_supportsExtendedMotion
decodeObjectForKey:
encodeObject:forKey:
initWithItem:request:
setItem:
_item
setHasStartOffset:
hasStartOffset
setHasVariableFramesInPacket:
hasVariableFramesInPacket
setHasDataByteSize:
hasDataByteSize
_startOffset
_dataByteSize
_variableFramesInPacket
setIncludesPeerToPeer:
endDiscovery
searchForServicesOfType:inDomain:
stop
startMonitoring
resolveWithTimeout:
externalDeviceController:didRemoveDevice:
stopMonitoring
createDeviceInfoFromNetService:
initWithNetService:
externalDeviceClass
setNetService:
externalDeviceController:didDiscoverDevice:
dictionaryFromTXTRecordData:
createDeviceInfoFromTXTRecord:
updateDeviceInfoWithTXTRecord:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
initWithBonjourServiceType:
beginDiscovery
bonjourServiceType
isDiscovering
_serviceBrowser
_discoveredDevices
_resolvingServices
_monitoringServices
_discovering
_bonjourServiceType
bundleIdentifer
commandHandlerStatuses
allowsKeyedCoding
encodeInt32:forKey:
responseData
decodeInt32ForKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
initWithPID:bundleIdentifier:statuses:
initWithPID:bundleIdentifier:responseData:
_commandHandlerStatuses
_responseData
_pid
_bundleIdentifer
_requiresCustomPairing
TXTRecordData
dataUsingEncoding:
initWithData:encoding:
netService
_netService
componentsJoinedByString:
_initializeOutputContext
initWithOutputContext:
_createRemoteControlContextWithID:
arrayWithCapacity:
mainQueue
addObserverForName:object:queue:usingBlock:
addOutputDevice:
outputContextForControllingOutputDeviceGroupWithID:
_outputContext
_inputStream
_outputStream
setHasDeviceIdentifier:
hasDeviceIdentifier
_deviceIdentifier
setHasZ:
hasZ
setHasW:
hasW
initWithCallbackBlock:queue:
callbackBlock
_callbackBlock
discoveryCallback
setDiscoveryCallback:
removalCallback
setRemovalCallback:
_discoveryCallback
_removalCallback
localizedModelName
systemBuildVersion
applicationBundleIdentifier
applicationBundleVersion
systemMediaApplication
setSystemMediaApplication:
protocolVersion
allowsPairing
supportsSystemPairing
supportsACL
connected
setLocalizedModelName:
setSystemBuildVersion:
setApplicationBundleIdentifier:
setApplicationBundleVersion:
setProtocolVersion:
setAllowsPairing:
setSupportsSystemPairing:
setSupportsACL:
setConnected:
bluetoothAddress
setBluetoothAddress:
archivedDataWithRootObject:
unarchiveObjectWithData:
standardUserDefaults
fileExistsAtPath:
unarchiveObjectWithFile:
removeItemAtPath:error:
currentProtocolVersion
sharedConnection
effectiveBoolValueForSetting:
writeToFile:options:error:
setPacketData:
hasPacketData
setTotalLength:
setHasTotalLength:
hasTotalLength
setTotalWritePosition:
setHasTotalWritePosition:
hasTotalWritePosition
packetData
totalLength
totalWritePosition
_totalLength
_totalWritePosition
_packetData
hasRevision
_revision
_pickableRoutesDidChangeNotification:
_cacheFetchedPickableRoutes:forCategory:
_flushPendingCompletionHandlersWithPickableRoutes:forCategory:
mediaRemoteService
_mediaRemoteService
_pendingCompletionHandlersForCategories
_cachedRoutesForCategories
hasFormatSettingsPlistData
_formatSettingsPlistData
setSourceID:
setContextID:
setSystemAppPlaybackQueueData:
setStationURL:
setContentItemID:
setLanguageOption:
setPlaybackQueueContext:
setInsertAfterContentItemID:
setNowPlayingContentItemID:
hasSourceID
setExternalPlayerCommand:
setHasExternalPlayerCommand:
hasExternalPlayerCommand
setRating:
setHasRating:
hasRating
setNegative:
setHasNegative:
hasNegative
setPlaybackPosition:
setHasPlaybackPosition:
hasPlaybackPosition
hasContextID
setTrackID:
setHasTrackID:
hasTrackID
setRadioStationID:
setHasRadioStationID:
hasRadioStationID
hasSystemAppPlaybackQueueData
setSendOptions:
setHasSendOptions:
hasSendOptions
setRequestDefermentToPlaybackQueuePosition:
setHasRequestDefermentToPlaybackQueuePosition:
hasRequestDefermentToPlaybackQueuePosition
setShouldOverrideManuallyCuratedQueue:
setHasShouldOverrideManuallyCuratedQueue:
hasShouldOverrideManuallyCuratedQueue
hasStationURL
setShouldBeginRadioPlayback:
setHasShouldBeginRadioPlayback:
hasShouldBeginRadioPlayback
setPlaybackQueueInsertionPosition:
setHasPlaybackQueueInsertionPosition:
hasPlaybackQueueInsertionPosition
hasContentItemID
setPlaybackQueueOffset:
setHasPlaybackQueueOffset:
hasPlaybackQueueOffset
setPlaybackQueueDestinationOffset:
setHasPlaybackQueueDestinationOffset:
hasPlaybackQueueDestinationOffset
hasLanguageOption
hasPlaybackQueueContext
hasInsertAfterContentItemID
hasNowPlayingContentItemID
replaceIntent
setReplaceIntent:
setHasReplaceIntent:
hasReplaceIntent
replaceIntentAsString:
StringAsReplaceIntent:
sourceID
externalPlayerCommand
rating
negative
playbackPosition
contextID
trackID
radioStationID
systemAppPlaybackQueueData
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
playbackQueueOffset
playbackQueueDestinationOffset
languageOption
playbackQueueContext
insertAfterContentItemID
nowPlayingContentItemID
_playbackPosition
_radioStationID
_trackID
_contentItemID
_contextID
_insertAfterContentItemID
_languageOption
_nowPlayingContentItemID
_playbackQueueContext
_playbackQueueDestinationOffset
_playbackQueueInsertionPosition
_playbackQueueOffset
_rating
_replaceIntent
_sendOptions
_sourceID
_stationURL
_systemAppPlaybackQueueData
_externalPlayerCommand
_negative
_requestDefermentToPlaybackQueuePosition
_shouldBeginRadioPlayback
_shouldOverrideManuallyCuratedQueue
initWithSendError:results:
_results
pairingSession:promptForSetupCodeWithCompletion:
dataExchangeBlock
showSetupCodeBlock
hideSetupCodeBlock
promptForSetupCodeBlock
exchangeCompleteBlock
_dataExchangeBlock
_showSetupCodeBlock
_hideSetupCodeBlock
_promptForSetupCodeBlock
_exchangeCompleteBlock
unsignedIntegerValue
processInfo
processName
applicationProxyForIdentifier:
entitlements
unsignedLongLongValue
isMainThread
pathWithComponents:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
dataWithBytesNoCopy:length:freeWhenDone:
setNotifications:
setUserInfos:
setPlayerPaths:
addNotification:
addUserInfo:
addPlayerPath:
notificationsCount
clearNotifications
notificationAtIndex:
userInfosCount
clearUserInfos
userInfoAtIndex:
playerPathsCount
clearPlayerPaths
playerPathAtIndex:
notificationType
userInfoType
playerPathType
notifications
userInfos
playerPaths
_notifications
_playerPaths
_userInfos
actualLength
isReadComplete
initWithPackets:
writeComplete
setWriteLength:
isWriteComplete
isComplete
writeLength
writePosition
_writeLength
_writePosition
sortUsingComparator:
mergePacket:
_currentLength
isEmpty
packetize:packageSize:completion:
_outgoingPackets
_incomingPackets
_begin
_processMessage:
transactionDidEnd:
initWithName:playerPath:packets:delegate:
_packetizer
stringByAppendingString:
intValue
dateWithTimeIntervalSinceReferenceDate:
initWithNotification:
initWithArtworkData:
sharedLogger
logMessage:protocolMessage:
callbackWithBlock:queue:
addCallback:
protocolMessageWithProtobufData:
protobufData
setError:
_protobufData
_underlyingCodableMessage
_error
_messageSentCallbacks
_messagePurgedCallbacks
_lastSupportedMessageType
packetsCount
clearPackets
packetsAtIndex:
packetsType
hasLocalizedModelName
hasSystemBuildVersion
hasApplicationBundleIdentifier
hasApplicationBundleVersion
setHasProtocolVersion:
hasProtocolVersion
setHasLastSupportedMessageType:
hasLastSupportedMessageType
setHasSupportsSystemPairing:
hasSupportsSystemPairing
setHasAllowsPairing:
hasAllowsPairing
setHasConnected:
hasConnected
hasSystemMediaApplication
setHasSupportsACL:
hasSupportsACL
hasBluetoothAddress
_protocolVersion
_applicationBundleIdentifier
_applicationBundleVersion
_bluetoothAddress
_localizedModelName
_systemBuildVersion
_systemMediaApplication
_allowsPairing
_connected
_supportsACL
_supportsSystemPairing
isAbsolute
isIntegratedDisplay
screenSize
setDeviceDescriptor:
deviceDescriptor
setScreenSize:
_deviceDescriptor
initWithObjects:
allowEmptySelection
encodeBool:forKey:
defaultLanguageOption
languageOptions
decodeBoolForKey:
setAllowEmptySelection:
setDefaultLanguageOption:
setLanguageOptions:
addLanguageOptions:
hasHidEventData
_hidEventData
pINEntrySeparatorIndexesCount
clearPINEntrySeparatorIndexes
pINEntrySeparatorIndexesAtIndex:
addPINEntrySeparatorIndexes:
autocapitalizationType
setAutocapitalizationType:
setHasAutocapitalizationType:
hasAutocapitalizationType
autocapitalizationTypeAsString:
StringAsAutocapitalizationType:
keyboardType
setKeyboardType:
setHasKeyboardType:
hasKeyboardType
keyboardTypeAsString:
StringAsKeyboardType:
returnKeyType
setReturnKeyType:
setHasReturnKeyType:
hasReturnKeyType
returnKeyTypeAsString:
StringAsReturnKeyType:
setAutocorrection:
setHasAutocorrection:
hasAutocorrection
setSpellchecking:
setHasSpellchecking:
hasSpellchecking
setEnablesReturnKeyAutomatically:
setHasEnablesReturnKeyAutomatically:
hasEnablesReturnKeyAutomatically
setSecureTextEntry:
setHasSecureTextEntry:
hasSecureTextEntry
setValidTextRangeLocation:
setHasValidTextRangeLocation:
hasValidTextRangeLocation
setValidTextRangeLength:
setHasValidTextRangeLength:
hasValidTextRangeLength
pINEntrySeparatorIndexes
setPINEntrySeparatorIndexes:count:
autocorrection
spellchecking
enablesReturnKeyAutomatically
secureTextEntry
validTextRangeLocation
validTextRangeLength
_pINEntrySeparatorIndexes
_validTextRangeLength
_validTextRangeLocation
_autocapitalizationType
_keyboardType
_returnKeyType
_autocorrection
_enablesReturnKeyAutomatically
_secureTextEntry
_spellchecking
_onQueue_capabilities
addCallback:atIndex:
callbacks
_addCallback:toList:prepend:
_callbacksFromList:
remove:
setBeginLyricsEventCallback:
setEndLyricsEventCallback:
_createPlaybackQueueForRequestCallbacks
_createItemForIdentifierCallbacks
_createItemForOffsetCallbacks
_createChildItemCallbacks
_metadataCallbacks
_languageOptionCallbacks
_infoCallbacks
_lyricsCallbacks
_artworkCallbacks
_beginLyricsEventCallback
_endLyricsEventCallback
_videoThumbnailsCallback
_audioAmplitudeSamplesCallback
_commandHandlerBlocks
setBlock:
initWithBlock:
insertObject:atIndex:
_callbacks
componentsSeparatedByString:
lastObject
green
blue
alpha
setRed:
setGreen:
setBlue:
setAlpha:
setPlayer:
setOrigin:
player
bundleProxyForIdentifier:
bundleURL
bundleWithURL:
initWithString:
arrayWithArray:
_initializeExternalDeviceIfPossible
isLocalEndpoint
designatedGroupLeader
setLocalizedName:
_requestSharedAudioPresentationOutputContextModificationWithAddingDevices:removingDevices:replyQueue:completion:
externalDevice
setExternalDevice:
setDesignatedGroupLeader:
valueForKeyPath:
_connectToExternalDeviceWithCompletion:
localizedName
containsOutputDevice:
addOutputDevices:withReplyQueue:completion:
removeOutputDevices:withReplyQueue:completion:
forceEnableRemoteControllability
_externalDevice
_designatedGroupLeader
_localizedName
_OnQueue_setContext:
_invalidate
contentItemForOffset:
offsetsForContentItem:
longValue
invalidateWithContext:
readData:
removeRequest:
offsetForContentItem:
requestForContentItem:
subscribedContentItemsIdentifiers:forRequest:
_cache
_offsets
_requests
initWithQueue:
playbackQueueClients
playbackQueueClientForPlayerPath:
_clients
setHasInputModeFlags:
hasInputModeFlags
inputModeFlagsAsString:
StringAsInputModeFlags:
_inputModeFlags
setHasDPadX:
hasDPadX
setHasDPadY:
hasDPadY
setHasA:
hasA
setHasB:
hasB
setHasLeftShoulder:
hasLeftShoulder
setHasRightShoulder:
hasRightShoulder
setHasLeftThumbstickX:
hasLeftThumbstickX
setHasLeftThumbstickY:
hasLeftThumbstickY
setHasRightThumbstickX:
hasRightThumbstickX
setHasRightThumbstickY:
hasRightThumbstickY
setHasLeftTrigger:
hasLeftTrigger
setHasRightTrigger:
hasRightTrigger
setHasPause:
hasPause
_dPadX
_dPadY
_leftShoulder
_leftThumbstickX
_leftThumbstickY
_leftTrigger
_pause
_rightShoulder
_rightThumbstickX
_rightThumbstickY
_rightTrigger
isEqualToData:
_imageData
_mimeType
_registerMediaServerNotifications
_unregisterMediaServerNotifications
sharedInstance
canBeNowPlayingApp
_avSessionMediaServicesResetNotification:
stringByAppendingFormat:
applicationPickedRoutes
setApplicationPickedRoutes:
setRouteDiscoveryMode:
routeDiscoveryMode
visibility
activeNowPlayingClient
nowPlayingClientForPlayerPath:
notifyChangeOfContentItem:withRequest:
hardwareRemoteBehavior
_canBeNowPlayingApp
_isOverrideApp
_routeDiscoveryMode
_applicationPickedRoutes
_parentApplication
_visibility
_inputMode
_queueContentNotifications
_pendingNotifications
_pendingNotificationQueue
_playbackQueueCallback
_playbackQueueTransactionCallback
_capabilitiesCallback
_commandCallback
_activeNowPlayingClient
_hardwareRemoteBehavior
nowPlayingPlayerClientForPlayerPath:
contentItemsUpdatedNotification:
nowPlayingContentItem
compare:
sortedArrayUsingSelector:
enumerateObjectsUsingBlock:
enumerateObjectsWithOptions:usingBlock:
preProcessChangePlaybackRateCommandWithOptions:
_onQueue_sendTransaction:withPackets:
_capabilities
_coalescingInvalidations
_invalidatationTimestamp
_coelscingTransactionPackets
_transactionSources
_clientCallbacks
stringValue
itemMetadata
currentPlaybackDate
setCurrentPlaybackDate:
assetURL
setAssetURL:
appMetrics
setAppMetrics:
collectionInfo
setCollectionInfo:
_BoolValue
setUserInfo:
deviceSpecificUserInfo
setDeviceSpecificUserInfo:
_initWithData:
absoluteString
initWithTimeIntervalSinceReferenceDate:
_assetURL
_appMetrics
_collectionInfo
_currentPlaybackDate
_deviceSpecificUserInfo
hasCurrentLanguageOptions
hasAvailableLanguageOptions
sharedClient
setRecordingStateCallback:forDeviceID:
_recordingStateChangedNotification:
_deviceIDToCallbackMap
initWithMachServiceName:options:
resume
invokeEventsForController:beacuseElement:
eventForController:element:
sendEventBlock
send
setLastDownEvent:
lastDownEvent
controllerID:setValue:forElement:
setSendEventBlock:
defaultGameControllerDaemonProxy
replyConnectedHosts:
_openConnection
addEmulatedControllerWithProperties:
removeEmulatedController:
controllerID:setValue:forElement:withUpDelay:
controllerID:setDigitizerX:digitizerY:withTimeStamp:touchDown:
controllerID:setArrayValueX:y:z:w:forElement:
_delayEvent:setValue:forElement:withUpDelay:
addController:
removeController:
controllerWithUDID:setData:
controllerWithUDID:setValue:forElement:
microControllerWithDigitizerX:withY:withTimeStamp:touchDown:
microControllerWithUDID:setDigitizerX:digitizerY:withTimeStamp:touchDown:
_delayedEvents
_events
_sendEventBlock
_lastDownEvent
clearDeviceIDs
setDeviceIDs:count:
_deviceIDs
initWithState:encryptedTextCyphertext:attributes:
encryptedMessageWithState:text:attributes:usingCryptoSession:
setController:
controller
gameController:propertiesDidChange:
sendGameControllerEvent:
_handleGameControllerDidChange:
_remote
_controller
setUserProvided:
setHasUserProvided:
hasUserProvided
userProvided
_userProvided
_openStream:
_closeStream:
_sendMessage:queue:reply:
_stream:handleEvent:
_setQOSPropertiesOnStream:
increaseLengthBy:
_parseMessageData:
_flush
_disconnectClient
_preProcessMessage:data:
_notifyDelegateClientDidRecieveMessage:
write:maxLength:
createHeader:
processData:
_adjustTimestamp:
_notifyDelegateClientDidDisconnect
parser:didParseMessage:
registeredToNowPlayingUpdates
setRegisteredToNowPlayingUpdates:
registeredToNowPlayingArtworkUpdates
setRegisteredToNowPlayingArtworkUpdates:
registeredVolumeControlAvailabilityUpdates
setRegisteredVolumeControlAvailabilityUpdates:
registeredKeyboardUpdates
setRegisteredKeyboardUpdates:
cryptoEnabled
_parser
_runLoop
_messageQueue
_firstClientNanoseconds
_firstDeviceTicks
_disconnected
_registeredToNowPlayingUpdates
_registeredToNowPlayingArtworkUpdates
_registeredVolumeControlAvailabilityUpdates
_registeredKeyboardUpdates
_cryptoEnabled
_voiceRecordingState
_cryptoSession
languageOptionsCount
clearLanguageOptions
languageOptionsAtIndex:
languageOptionsType
setHasAllowEmptySelection:
hasAllowEmptySelection
hasDefaultLanguageOption
_defaultLanguageOption
_languageOptions
_allowEmptySelection
setHasDeviceID:
hasDeviceID
setHasRecordingState:
hasRecordingState
recordingStateAsString:
StringAsRecordingState:
clientRequestsForPlayerPath:
originClientRequestsForUnresolvedPlayerPath:completion:
localOriginClientRequests:
clientRequestsForUnresolvedPlayerPath:completion:
_originClients
_originClientRequests
setHasRed:
hasRed
setHasGreen:
hasGreen
setHasBlue:
hasBlue
setHasAlpha:
hasAlpha
_alpha
_blue
_green
_red
hasClient
initWithPairingData:status:
setIsDefaultPlayer:
setHasIsDefaultPlayer:
hasIsDefaultPlayer
isDefaultPlayer
_isDefaultPlayer
_screenSize
initWithTitle:prompt:
isEditing
_editing
_discoverySessionEndpointsChangedCallback:
cancelSearch
setCallback:
_timeoutTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setTimeoutTimer:
_endSearch
setUnanimousEndpoint:
_concludeSearch
timeInterval
timeoutTimer
initWithOutputDeviceUIDs:features:
matchingOutputDeviceUIDs
beginSearchWithTimeout:completion:
matchingOutputDeviceUIDsSet
setMatchingOutputDeviceUIDsSet:
discoverySession
setDiscoverySession:
discoverySessionCallbackToken
setDiscoverySessionCallbackToken:
searchInProgress
setSearchInProgress:
matchingDevicesFound
setMatchingDevicesFound:
unanimousEndpoint
_searchInProgress
_matchingOutputDeviceUIDsSet
_discoverySession
_discoverySessionCallbackToken
_timeoutTimer
_matchingDevicesFound
_unanimousEndpoint
buttons
_buttons
_digitizer
_motion
hasDataBlock
addContentItem:
clearContentItems
contentItemAtIndex:
contentItemType
hasResolvedPlayerPath
setHasNotSendingTransaction:
hasNotSendingTransaction
_contentItems
_resolvedPlayerPath
_notSendingTransaction
hasImageData
setHasTime:
communicationChannelDelegate
setCommunicationChannelDelegate:
outputContextOutgoingCommunicationChannelDidBecomeAvailable:
outputContext:didReceiveData:fromCommunicationChannel:
outputContext:didCloseCommunicationChannel:
outputContext
outgoingCommunicationChannel
sendData:completionHandler:
_communicationChannel
encodeInt:forKey:
decodeIntForKey:
initWithPrimaryAppDisplayID:secondaryAppDisplayID:
primaryApplicationDisplayID
secondaryApplicationDisplayID
shouldPrepareAppPlaybackQueue
creatorProcessID
_primaryApplicationDisplayID
_secondaryApplicationDisplayID
_shouldPrepareAppPlaybackQueue
_creatorProcessID
setPrimaryApplicationDisplayID:
setSecondaryApplicationDisplayID:
setShouldPrepareAppPlaybackQueue:
hasDeviceDescriptor
hasOrigin
hasPlayer
_player
hasGravity
hasUserAcceleration
hasAttitude
hasRotation
_attitude
_gravity
_rotation
_userAcceleration
setCharacterCount:
_randomPasscode
setPasscode:
_characterCount
_passcode
setShouldLog:
_shouldLog
idx (%tu) is out of range (%tu)
%@ %@
timeIntervals
thumbnailsWidth
thumbnailsHeight
timeIntervalsCount
TI,R,N
T^d,R,N
hasThumbnailsWidth
TB,N
Tf,N,V_thumbnailsWidth
hasThumbnailsHeight
Tf,N,V_thumbnailsHeight
location
length
includeMetadata
artworkWidth
artworkHeight
includeLyrics
includeSections
includeInfo
includeLanguageOptions
context
requestID
contentItemIdentifiers
returnContentItemAssetsInUserCompletion
playerPath
hasLocation
Ti,N,V_location
hasLength
Ti,N,V_length
hasIncludeMetadata
TB,N,V_includeMetadata
hasArtworkWidth
Td,N,V_artworkWidth
hasArtworkHeight
Td,N,V_artworkHeight
hasIncludeLyrics
TB,N,V_includeLyrics
hasIncludeSections
TB,N,V_includeSections
hasIncludeInfo
TB,N,V_includeInfo
hasIncludeLanguageOptions
TB,N,V_includeLanguageOptions
hasContext
TB,R,N
T@"_MRPlaybackQueueContextProtobuf",&,N,V_context
hasRequestID
T@"NSString",&,N,V_requestID
T@"NSMutableArray",&,N,V_contentItemIdentifiers
hasReturnContentItemAssetsInUserCompletion
TB,N,V_returnContentItemAssetsInUserCompletion
hasPlayerPath
T@"_MRNowPlayingPlayerPathProtobuf",&,N,V_playerPath
controllerID
properties
hasControllerID
TQ,N,V_controllerID
hasProperties
T@"_MRGameControllerPropertiesProtobuf",&,N,V_properties
nowPlayingUpdates
artworkUpdates
volumeUpdates
keyboardUpdates
startTime
endTime
token
hasStartTime
Td,N,V_startTime
hasEndTime
Td,N,V_endTime
hasToken
T@"_MRLyricsTokenProtobuf",&,N,V_token
buffer
time
gain
hasBuffer
T@"_MRAudioBufferProtobuf",&,N,V_buffer
hasTime
T@"_MRAudioTimeProtobuf",&,N,V_time
hasGain
Td,N,V_gain
Cannot remove peer, No device available
Cannot update peer, No device available
v16@?0@"NSString"4@8^B12
v4@?0
v12@?0@"NSArray"4@"NSError"8
CUPairedPeer
CoreUtils
CUPairingManager Invalidation
CUPairingManager Interuption
v8@?0@"NSError"4
Does not have required entitlements
CUPairingManager
com.apple.MediaRemote.MRCoreUtilsSystemPairingSession.GlobalQueue
@"NSData"8@?0@"MRProtocolMessage"4
datasource
T@"<MRProtocolMessageQueueDataSource>",N,V_datasource
delegate
T@"<MRProtocolMessageQueueDelegate>",N,V_delegate
reply
T@?,R,N,V_reply
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
data
T@"NSData",R,N
message
T@"MRProtocolMessage",R,N
readPosition
Ti,N,V_readPosition
finished
TB,R,N,GisFinished
canPurge
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/ExternalDevice/MRProtocolMessageQueue.m
<Unknown File>
Removing unfinished message. This is bad
B8@?0I4
<%@ %p type=%@, addingDevices=%@, removingDevices=%@>
contextType
addingOutputDeviceUIDs
T@"NSArray",R,N
removingOutputDeviceUIDs
Unknown
SharedAudioPresentation
SharedSystemAudio
SharedSystemScreen
iTunesAudio
Auxiliary
(unknown: %i)
v12@?0^v4l8
v8@?0^v4
v12@?0^{__CFArray=}4^{__CFError=}8
v12@?0^{__CFDictionary=}4^v8
v8@?0I4
v12@?0^v4^{__CFError=}8
AVAudioFormat
AVFoundation
AVAudioCompressedBuffer
T@"AVAudioCompressedBuffer",R,N,V_buffer
formatSettings
T@"NSDictionary",R,N,V_formatSettings
_MRLogForCategory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Utility/MRLog.m
category < MRLoggingCategoryCOUNT
MediaRemote
NowPlaying
RemoteControl
ExternalDevice
Television
AudioInputPlugin
com.apple.amp.mediaremote
supportedCommand
supportedCommands
T@"NSMutableArray",&,N,V_supportedCommands
state
T^v,R,N
hiliteMode
client
nowPlayingInfo
playbackQueue
displayID
displayName
playbackState
playbackQueueCapabilities
request
hasNowPlayingInfo
T@"_MRNowPlayingInfoProtobuf",&,N,V_nowPlayingInfo
hasSupportedCommands
T@"_MRSupportedCommandsProtobuf",&,N,V_supportedCommands
hasPlaybackQueue
T@"_MRPlaybackQueueProtobuf",&,N,V_playbackQueue
hasDisplayID
T@"NSString",&,N,V_displayID
hasDisplayName
T@"NSString",&,N,V_displayName
hasPlaybackState
TI,N,V_playbackState
hasPlaybackQueueCapabilities
T@"_MRPlaybackQueueCapabilitiesProtobuf",&,N,V_playbackQueueCapabilities
hasRequest
T@"_MRPlaybackQueueRequestProtobuf",&,N,V_request
MRMediaRemoteMediaTypeMusic
MRMediaRemoteMediaTypePodcast
MRMediaRemoteMediaTypeAudioBook
MRMediaRemoteMediaTypeITunesU
kMRMediaRemoteMediaTypeITunesRadio
kMRMediaRemoteNowPlayingInfoTypeAudio
kMRMediaRemoteNowPlayingInfoTypeVideo
kMRMediaRemoteNowPlayingInfoDidChangeNotification
kMRMediaRemoteOriginNowPlayingInfoDidChangeNotification
kMRMediaRemoteOriginUserInfoKey
kMRMediaRemoteOriginDataUserInfoKey
kMRMediaRemoteNowPlayingApplicationDidChangeNotification
kMRMediaRemoteNowPlayingApplicationDisplayNameDidChangeNotification
kMRMediaRemoteNowPlayingApplicationDidRegister
kMRMediaRemoteNowPlayingApplicationDidUnregister
kMRMediaRemoteNowPlayingApplicationClientStateDidChange
kMRMediaRemoteNowPlayingPlayerDidChange
kMRMediaRemoteNowPlayingPlayerDidRegister
kMRMediaRemoteNowPlayingPlayerDidUnregister
kMRMediaRemoteNowPlayingAnyPlayerIsPlaying
kMRMediaRemoteNowPlayingApplicationDisplayNameUserInfoKey
kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification
kMRMediaRemoteNowPlayingApplicationIsPlayingUserInfoKey
kMRMediaRemoteNowPlayingApplicationPIDUserInfoKey
kMRMediaRemoteNowPlayingApplicationPlaybackStateDidChangeNotification
kMRMediaRemoteAnyApplicationIsPlayingDidChangeNotification
kMRMediaRemoteAnyApplicationIsPlayingUserInfoKey
kMRMediaRemotePlaybackStateUserInfoKey
kMRMediaRemoteNowPlayingInfoAlbum
kMRMediaRemoteNowPlayingInfoAlbumiTunesStoreAdamIdentifier
kMRMediaRemoteNowPlayingInfoPlaylistGlobalIdentifier
kMRMediaRemoteNowPlayingInfoArtist
kMRMediaRemoteNowPlayingInfoArtistiTunesStoreAdamIdentifier
kMRMediaRemoteNowPlayingInfoArtworkData
kMRMediaRemoteNowPlayingInfoArtworkIdentifier
kMRMediaRemoteNowPlayingInfoArtworkMIMEType
kMRMediaRemoteNowPlayingInfoAssetURL
kMRMediaRemoteNowPlayingInfoAvailableLanguageOptionsData
kMRMediaRemoteNowPlayingInfoChapterNumber
kMRMediaRemoteNowPlayingInfoComposer
kMRMediaRemoteNowPlayingInfoCollectionIdentifier
kMRMediaRemoteNowPlayingInfoCollectionInfo
kMRMediaRemoteNowPlayingInfoCurrentLanguageOptionsData
kMRMediaRemoteNowPlayingInfoDefaultPlaybackRate
kMRMediaRemoteNowPlayingInfoDiscNumber
kMRMediaRemoteNowPlayingInfoDownloadProgress
kMRMediaRemoteNowPlayingInfoDownloadState
kMRMediaRemoteNowPlayingInfoDuration
kMRMediaRemoteNowPlayingInfoElapsedTime
kMRMediaRemoteNowPlayingInfoExternalContentIdentifier
kMRMediaRemoteNowPlayingInfoGenre
kMRMediaRemoteNowPlayingInfoIsAdvertisement
kMRMediaRemoteNowPlayingInfoIsAlwaysLive
kMRMediaRemoteNowPlayingInfoIsBanned
kMRMediaRemoteNowPlayingInfoIsExplicitTrack
kMRMediaRemoteNowPlayingCollectionInfoKeyTitle
kMRMediaRemoteNowPlayingCollectionInfoKeyIdentifiers
kMRMediaRemoteNowPlayingCollectionInfoKeyCollectionType
kMRMediaRemoteNowPlayingCollectionInfoCollectionTypePlaylist
kMRMediaRemoteNowPlayingCollectionInfoCollectionTypeAlbum
kMRMediaRemoteNowPlayingCollectionInfoCollectionTypeRadio
kMRMediaRemoteNowPlayingInfoIsInWishList
kMRMediaRemoteNowPlayingInfoIsLiked
kMRMediaRemoteNowPlayingInfoIsMusicApp
kMRMediaRemoteNowPlayingInfoIsSharable
kMRMediaRemoteNowPlayingInfoIsVideosApp
kMRMediaRemoteNowPlayingInfoMediaType
kMRMediaRemoteNowPlayingInfoPlaybackRate
kMRMediaRemoteNowPlayingInfoProhibitsSkip
kMRMediaRemoteNowPlayingInfoPurchaseInfoData
kMRMediaRemoteNowPlayingInfoQueueIndex
kMRMediaRemoteNowPlayingInfoRadioStationHash
kMRMediaRemoteNowPlayingInfoRadioStationIdentifier
kMRMediaRemoteNowPlayingInfoRadioStationName
kMRMediaRemoteNowPlayingInfoRadioStationStringIdentifier
kMRMediaRemoteNowPlayingInfoRepeatMode
kMRMediaRemoteNowPlayingInfoShuffleMode
kMRMediaRemoteNowPlayingInfoStartTime
kMRMediaRemoteNowPlayingInfoTimestamp
kMRMediaRemoteNowPlayingInfoTitle
kMRMediaRemoteNowPlayingInfoTotalChapterCount
kMRMediaRemoteNowPlayingInfoTotalDiscCount
kMRMediaRemoteNowPlayingInfoTotalQueueCount
kMRMediaRemoteNowPlayingInfoTotalTrackCount
kMRMediaRemoteNowPlayingInfoTrackNumber
kMRMediaRemoteNowPlayingInfoUniqueIdentifier
kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier
kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier
kMRMediaRemoteNowPlayingInfoExternalProfileIdentifier
kMRMediaRemoteNowPlayingInfoServiceIdentifier
kMRMediaRemoteNowPlayingInfoPlaybackProgress
kMRMediaRemoteNowPlayingInfoAppMetrics
kMRMediaRemoteNowPlayingInfoIsSteerable
kMRMediaRemoteNowPlayingInfoContentItemIdentifier
kMRMediaRemoteNowPlayingInfoCurrentPlaybackDate
kMRMediaRemoteNowPlayingPlaybackQueueDidChangeNotification
kMRMediaRemoteNowPlayingExternalTouchBarInvocationNotification
com.apple.MediaRemote.nowPlayingApplicationIsPlayingDidChange
kMRMediaRemoteNowPlayingInfoSupportsIsBanned
kMRMediaRemoteNowPlayingInfoSupportsFastForward15Seconds
kMRMediaRemoteNowPlayingInfoSupportsIsLiked
kMRMediaRemoteNowPlayingInfoSupportsRewind15Seconds
kMRMediaRemoteNowPlayingInfoSupportsWishlisting
kMRMediaRemoteMediaTypeImage
kMRMediaRemoteMediaTypeAudio
kMRMediaRemoteMediaTypeVideo
AVSystemController
Celestial
AVSystemController_CanBeNowPlayingAppAttribute
clientProperties
AlwaysVisible
NeverVisible
VisibleWhenBackgrounded
Undefined
v12@?0I4^{__CFError=}8
v8@?0^{__CFError=}4
Playing
Paused
Seeking
Stopped
Interrupted
type
languageTag
characteristics
identifier
hasType
Ti,N,V_type
hasLanguageTag
T@"NSString",&,N,V_languageTag
T@"NSMutableArray",&,N,V_characteristics
hasIdentifier
T@"NSString",&,N,V_identifier
album
artist
duration
elapsedTime
playbackRate
repeatMode
shuffleMode
timestamp
title
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationHash
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
hasAlbum
T@"NSString",&,N,V_album
hasArtist
T@"NSString",&,N,V_artist
hasDuration
Td,N,V_duration
hasElapsedTime
Td,N,V_elapsedTime
hasPlaybackRate
Tf,N,V_playbackRate
hasRepeatMode
Ti,N,V_repeatMode
hasShuffleMode
Ti,N,V_shuffleMode
hasTimestamp
Td,N,V_timestamp
hasTitle
T@"NSString",&,N,V_title
hasUniqueIdentifier
TQ,N,V_uniqueIdentifier
hasIsExplicitTrack
TB,N,V_isExplicitTrack
hasIsMusicApp
TB,N,V_isMusicApp
hasRadioStationIdentifier
Tq,N,V_radioStationIdentifier
hasRadioStationHash
T@"NSString",&,N,V_radioStationHash
hasRadioStationName
T@"NSString",&,N,V_radioStationName
hasArtworkDataDigest
T@"NSData",&,N,V_artworkDataDigest
hasIsAlwaysLive
TB,N,V_isAlwaysLive
hasIsAdvertisement
TB,N,V_isAdvertisement
None
Albums
Songs
sampleRate
hasSampleRate
Td,N,V_sampleRate
command
options
originUID
senderAppDisplayID
destinationAppDisplayID
destinationAppProcessID
remoteControlInterfaceID
appOptions
hasCommand
Ti,N,V_command
hasOptions
T@"_MRCommandOptionsProtobuf",&,N,V_options
hasOriginUID
Ti,N,V_originUID
hasSenderAppDisplayID
T@"NSString",&,N,V_senderAppDisplayID
hasDestinationAppDisplayID
T@"NSString",&,N,V_destinationAppDisplayID
hasDestinationAppProcessID
Tq,N,V_destinationAppProcessID
hasRemoteControlInterfaceID
T@"NSString",&,N,V_remoteControlInterfaceID
hasAppOptions
T@"_MRReceivedCommandAppOptionsProtobuf",&,N,V_appOptions
Play
Pause
TogglePlayPause
Stop
NextTrack
PreviousTrack
AdvanceShuffleMode
AdvanceRepeatMode
BeginFastForward
EndFastForward
BeginRewind
EndRewind
Rewind15Seconds
FastForward15Seconds
Rewind30Seconds
FastForward30Seconds
SkipForward
SkipBackward
ChangePlaybackRate
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
SeekToPlaybackPosition
ChangeRepeatMode
ChangeShuffleMode
EnableLanguageOption
DisableLanguageOption
NextChapter
PreviousChapter
NextAlbum
PreviousAlbum
NextPlaylist
PreviousPlaylist
BanTrack
AddTrackToWishList
RemoveTrackFromWishList
NextInContext
PreviousInContext
ResetPlaybackTimeout
SetPlaybackQueue
AddNowPlayingItemToLibrary
CreateRadioStation
AddItemToLibrary
InsertIntoPlaybackQueue
ReorderPlaybackQueue
RemoveFromPlaybackQueue
PlayItemInPlaybackQueue
event
TQ,R,N
inputMode
metadata
artworkData
info
availableLanguageOptions
currentLanguageOptions
lyrics
sections
parentIdentifier
ancestorIdentifier
queueIdentifier
requestIdentifier
hasMetadata
T@"_MRContentItemMetadataProtobuf",&,N,V_metadata
hasArtworkData
T@"NSData",&,N,V_artworkData
hasInfo
T@"NSString",&,N,V_info
T@"NSMutableArray",&,N,V_availableLanguageOptions
T@"NSMutableArray",&,N,V_currentLanguageOptions
hasLyrics
T@"_MRLyricsItemProtobuf",&,N,V_lyrics
T@"NSMutableArray",&,N,V_sections
hasParentIdentifier
T@"NSString",&,N,V_parentIdentifier
hasAncestorIdentifier
T@"NSString",&,N,V_ancestorIdentifier
hasQueueIdentifier
T@"NSString",&,N,V_queueIdentifier
hasRequestIdentifier
T@"NSString",&,N,V_requestIdentifier
launchApplication
hasLaunchApplication
TB,N,V_launchApplication
hasState
Ti,N,V_state
Recording
NotRecording
routeUID
hasRouteUID
T@"NSString",&,N,V_routeUID
virtualDeviceID
hasVirtualDeviceID
TQ,N,V_virtualDeviceID
hasEvent
T@"_MRVirtualTouchEventProtobuf",&,N,V_event
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Advanced Routing/MRAVOutputDevice.m
Invalid parameter not satisfying: %@
avOutputDevice
<%@ %p%s "%@" uid="%@" group_id="%@" type=%@ subtype=%@%s%s%s%s>
 (local)
 can-access-remote-assets
 remote-controllable
 groupable
 group-leader
T@"AVOutputDevice",R,N,V_avOutputDevice
name
T@"NSString",R,N
modelID
groupID
MACAddress
canAccessRemoteAssets
remoteControllable
TB,R,N,GisRemoteControllable
groupLeader
TB,R,N,GisGroupLeader
groupable
TB,R,N,GisGroupable
deviceType
deviceSubtype
modelSpecificInfo
T@"NSDictionary",R,N
batteryLevel
Tf,R,N
hasBatteryLevel
localDevice
TB,R,N,GisLocalDevice
supportsExternalScreen
requiresAuthorization
forceRemoteControllability
TB,N,V_forceRemoteControllability
AirPlay
Bluetooth
CarPlay
BuiltIn
Wired
Default
Speaker
Headphones
Headset
Receiver
LineOut
DisplayPort
HDMI
LowEnergy
SPDIF
AVOutputDevice
/System/Library/Frameworks/AVFoundation.framework/AVFoundation
subtitle
isContainer
isPlayable
playbackProgress
albumName
trackArtistName
albumArtistName
directorName
seasonNumber
episodeNumber
releaseDate
playCount
localizedContentRating
isExplicitItem
playlistType
radioStationType
artworkAvailable
infoAvailable
languageOptionsAvailable
numberOfSections
lyricsAvailable
editingStyleFlags
isStreamingContent
isCurrentlyPlaying
collectionIdentifier
profileIdentifier
artworkMIMEType
assetURLString
composer
discNumber
genre
chapterCount
totalDiscCount
totalTrackCount
trackNumber
contentIdentifier
isSharable
isLiked
isInWishList
radioStationString
iTunesStoreIdentifier
iTunesStoreSubscriptionIdentifier
iTunesStoreArtistIdentifier
iTunesStoreAlbumIdentifier
purchaseInfoData
defaultPlaybackRate
downloadState
downloadProgress
appMetricsData
seriesName
mediaType
mediaSubType
nowPlayingInfoData
userInfoData
isSteerable
artworkURL
lyricsURL
deviceSpecificUserInfoData
collectionInfoData
elapsedTimeTimestamp
inferredTimestamp
serviceIdentifier
artworkDataWidth
artworkDataHeight
currentPlaybackDateData
artworkIdentifier
hasSubtitle
T@"NSString",&,N,V_subtitle
hasIsContainer
TB,N,V_isContainer
hasIsPlayable
TB,N,V_isPlayable
hasPlaybackProgress
Tf,N,V_playbackProgress
hasAlbumName
T@"NSString",&,N,V_albumName
hasTrackArtistName
T@"NSString",&,N,V_trackArtistName
hasAlbumArtistName
T@"NSString",&,N,V_albumArtistName
hasDirectorName
T@"NSString",&,N,V_directorName
hasSeasonNumber
Ti,N,V_seasonNumber
hasEpisodeNumber
Ti,N,V_episodeNumber
hasReleaseDate
Td,N,V_releaseDate
hasPlayCount
Ti,N,V_playCount
hasLocalizedContentRating
T@"NSString",&,N,V_localizedContentRating
hasIsExplicitItem
TB,N,V_isExplicitItem
hasPlaylistType
Ti,N,V_playlistType
hasRadioStationType
Ti,N,V_radioStationType
hasArtworkAvailable
TB,N,V_artworkAvailable
hasInfoAvailable
TB,N,V_infoAvailable
hasLanguageOptionsAvailable
TB,N,V_languageOptionsAvailable
hasNumberOfSections
Ti,N,V_numberOfSections
hasLyricsAvailable
TB,N,V_lyricsAvailable
hasEditingStyleFlags
Ti,N,V_editingStyleFlags
hasIsStreamingContent
TB,N,V_isStreamingContent
hasIsCurrentlyPlaying
TB,N,V_isCurrentlyPlaying
hasCollectionIdentifier
T@"NSString",&,N,V_collectionIdentifier
hasProfileIdentifier
T@"NSString",&,N,V_profileIdentifier
hasArtworkMIMEType
T@"NSString",&,N,V_artworkMIMEType
hasAssetURLString
T@"NSString",&,N,V_assetURLString
hasComposer
T@"NSString",&,N,V_composer
hasDiscNumber
Ti,N,V_discNumber
hasGenre
T@"NSString",&,N,V_genre
hasChapterCount
Ti,N,V_chapterCount
hasTotalDiscCount
Ti,N,V_totalDiscCount
hasTotalTrackCount
Ti,N,V_totalTrackCount
hasTrackNumber
Ti,N,V_trackNumber
hasContentIdentifier
T@"NSString",&,N,V_contentIdentifier
hasIsSharable
TB,N,V_isSharable
hasIsLiked
TB,N,V_isLiked
hasIsInWishList
TB,N,V_isInWishList
hasRadioStationString
T@"NSString",&,N,V_radioStationString
hasITunesStoreIdentifier
Tq,N,V_iTunesStoreIdentifier
hasITunesStoreSubscriptionIdentifier
Tq,N,V_iTunesStoreSubscriptionIdentifier
hasITunesStoreArtistIdentifier
Tq,N,V_iTunesStoreArtistIdentifier
hasITunesStoreAlbumIdentifier
Tq,N,V_iTunesStoreAlbumIdentifier
hasPurchaseInfoData
T@"NSData",&,N,V_purchaseInfoData
hasDefaultPlaybackRate
Tf,N,V_defaultPlaybackRate
hasDownloadState
Ti,N,V_downloadState
hasDownloadProgress
Tf,N,V_downloadProgress
hasAppMetricsData
T@"NSData",&,N,V_appMetricsData
hasSeriesName
T@"NSString",&,N,V_seriesName
hasMediaType
Ti,N,V_mediaType
hasMediaSubType
Ti,N,V_mediaSubType
hasNowPlayingInfoData
T@"NSData",&,N,V_nowPlayingInfoData
hasUserInfoData
T@"NSData",&,N,V_userInfoData
hasIsSteerable
TB,N,V_isSteerable
hasArtworkURL
T@"NSString",&,N,V_artworkURL
hasLyricsURL
T@"NSString",&,N,V_lyricsURL
hasDeviceSpecificUserInfoData
T@"NSData",&,N,V_deviceSpecificUserInfoData
hasCollectionInfoData
T@"NSData",&,N,V_collectionInfoData
hasElapsedTimeTimestamp
Td,N,V_elapsedTimeTimestamp
hasInferredTimestamp
Td,N,V_inferredTimestamp
hasServiceIdentifier
T@"NSString",&,N,V_serviceIdentifier
hasArtworkDataWidth
Ti,N,V_artworkDataWidth
hasArtworkDataHeight
Ti,N,V_artworkDataHeight
hasCurrentPlaybackDateData
T@"NSData",&,N,V_currentPlaybackDateData
hasArtworkIdentifier
T@"NSString",&,N,V_artworkIdentifier
dateGenerated
diagnosticInfo
hasDateGenerated
Td,N,V_dateGenerated
hasDiagnosticInfo
T@"NSString",&,N,V_diagnosticInfo
deviceInfo
supportedProtocolMessages
T@"MRSupportedProtocolMessages",R,N
errorCode
handlerReturnStatus
handlerReturnStatusData
hasErrorCode
TI,N,V_errorCode
handlerReturnStatusCount
T^I,R,N
handlerReturnStatusDatas
T@"NSMutableArray",&,N,V_handlerReturnStatusDatas
kMRMediaRemoteFrameworkErrorDomain
com.apple.MediaRemote.connectionQueue
com.apple.MediaRemote.clientCallbackPriorityQueue
com.apple.MediaRemote.clientCallbackQueue
com.apple.MediaRemote.browsableContentQueue
com.apple.MediaRemote.voiceInputQueue
com.apple.mediaremoted.xpc
MRXPC_MESSAGE_ID_KEY
v8@?0@"NSObject<OS_xpc_object>"4
MRXPC_VOICE_RECORDING_ENDPOINT_AVAILABLE_KEY
MRXPC_TELEVISION_ENDPOINT_AVAILABLE_KEY
MRXPC_AGENT_ENDPOINT_AVAILABLE_KEY
MRXPC_COMMAND_SEND_ERROR_KEY
MRXPC_COMMAND_STATUSES_DATA_KEY
MRXPC_NOWPLAYING_APP_ENABLED_KEY
MRXPC_NOWPLAYING_APP_OVERRIDE_ENABLED_KEY
MRXPC_ERROR_CODE_KEY
MRXPC_NOWPLAYING_DISPLAYID_KEY
MRXPC_PLAYBACK_QUEUE_REQUESTS_DATA
MRXPC_LYRICS_EVENT_DATA
MRXPC_NOWPLAYING_DISPLAYNAME_KEY
MRXPC_PLAYBACK_STATE_KEY
MRXPC_APP_IS_PLAYING_KEY
MRXPC_NOWPLAYING_CLIENT_VISIBILITY_KEY
MRXPC_COLOR_DATA_KEY
MRXPC_SOURCE_ID_KEY
MRXPC_AUDIO_AMPLITUDE_SAMPLES_COUNT_KEY
MRXPC_AUDIO_AMPLITUDE_ARRAY_DATA_KEY
MRXPC_HARDWARE_REMOTE_BEHAVIOR_KEY
MRXPC_ROUTE_DISCOVERY_MODE_KEY
MRXPC_ROUTE_CATEGORY_KEY
MRXPC_ROUTES_DATA_KEY
MRXPC_ROUTE_OPTIONS_KEY
MRXPC_ROUTE_PASSWORD_KEY
MRXPC_ROUTE_DESCRIPTION_DATA_KEY
MRXPC_ROUTE_UID_KEY
MRXPC_ROUTE_HAS_VOLUME_CONTROL_KEY
MRXPC_ROUTE_EXTERNAL_SCREEN_TYPE_KEY
MRXPC_ROUTE_NAME_KEY
MRXPC_PAIRING_IDENTITY_STRING_KEY
MRXPC_AIRPLAY_SEC_SETTINGS_DATA_KEY
MRXPC_VOLUME_VALUE_KEY
MRXPC_VOLUME_OPTIONS_KEY
MRXPC_GAMECONTROLLER_INPUT_MODE_KEY
MRXPC_PAIRED_EXTERNAL_DEVICES_DATA
MRXPC_PAIRED_EXTERNAL_DEVICE
MRXPC_EXTERNAL_DEVICE_LOGGING_KEY
MRXPC_CUSTOM_DATA_NAME_KEY
MRXPC_CUSTOM_DATA_KEY
MRXPC_PAIRED_EXTERNAL_DEVICE_ID
MRXPC_OUTPUT_DEVICE_UID_ARRAY_DATA_KEY
MRXPC_APP_INSTALLED_KEY
MRXPC_VOICE_INPUT_DEVICES_DATA_KEY
MRXPC_VOICE_INPUT_DESCRIPTOR_DATA_KEY
MRXPC_VOICE_INPUT_DEVICE_ID_KEY
MRXPC_VOICE_DATA_PROTOBUF_DATA_KEY
MRXPC_VOICE_RECORDING_STATE
MRXPC_AGENT_CALL_ID_KEY
MRXPC_KEEP_ALIVE_KEY
MRXPC_NOTIFICATION_NAME_KEY
MRXPC_NOTIFICATION_USERINFO_DATA_KEY
MRXPC_NOTIFICATION_DELAY
MRXPC_BUNDLE_ID_KEY
MRXPC_INDEXPATH_DATA_KEY
MRXPC_CONTENT_NOW_PLAYING_IDENTIFIERS_KEY
MRXPC_CONTENT_SUPPORTS_PLAYBACK_PROGRESS_KEY
MRXPC_CONTENT_CHILD_ITEMS_COUNT_KEY
MRXPC_RANGE_BEGIN_KEY
MRXPC_RANGE_LENGTH_KEY
MRXPC_CONTENT_API_MASK_KEY
MRXPC_BUNDLE_ID_ARRAY_DATA_KEY
MRXPC_CONTENT_IDENTIFIERS
MRXPC_CONTENT_CHILD_ITEMS_DATA_KEY
v16@?0^v4B8^{__CFError=}12
MRXPC_TRANSACTION_NAME
MRXPC_COMMAND_KEY
MRXPC_COMMAND_OPTIONS_KEY
v8@?0^{__CFArray=}4
MRXPC_AGENT_NUMBER_ACTIVE_CALLS_KEY
MRXPC_APPLICATION_ACTIVITY_DATA_KEY
supportedFormats
defaultFormat
T@"NSMutableArray",&,N,V_supportedFormats
hasDefaultFormat
T@"_MRAudioFormatSettingsProtobuf",&,N,V_defaultFormat
packetCapacity
maximumPacketSize
packetCount
contents
packetDescriptions
hasFormatSettings
T@"_MRAudioFormatSettingsProtobuf",&,N,V_formatSettings
hasPacketCapacity
Tq,N,V_packetCapacity
hasMaximumPacketSize
Tq,N,V_maximumPacketSize
hasPacketCount
Tq,N,V_packetCount
hasContents
T@"NSData",&,N,V_contents
T@"NSMutableArray",&,N,V_packetDescriptions
has%@
@4@?0
v16@?0@"NSString"4@"NSString"8^B12
dictionaryKeyToProtobufKeyMapping
T@"NSDictionary",C,N,V_dictionaryKeyToProtobufKeyMapping
protobufClass
T#,&,N,V_protobufClass
dictionaryValueToProtobufValueTransformer
T@?,C,N,V_dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
T@?,C,N,V_protobufValueToDictionaryValueTransformer
requestByRange
requestByIdentifiers
requestByRequest
hasRequestByRange
TB,N,V_requestByRange
hasRequestByIdentifiers
TB,N,V_requestByIdentifiers
hasRequestByRequest
TB,N,V_requestByRequest
deviceIDs
descriptor
T@"MRVirtualVoiceInputDeviceDescriptor",R,N
deviceID
T@"MRAudioBuffer",R,N
T{?=dd},R,N
kMRAVOutputContextDevicesDidChangeNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Advanced Routing/MRAVOutputContext.m
outputContext
<%@ %p %@ avOutputContext = %@>
B12@?0@"MRAVOutputDevice"4^B8
outputDevices
T@"NSArray",C,N
TI,R,N,V_type
T@"NSString",R,N,V_uniqueIdentifier
avOutputContext
T@"AVOutputContext",R,N,V_avOutputContext
modificationType
TI,R,N,V_modificationType
T@"NSArray",R,N,V_outputDevices
callback
T@"MRStandardCallback",R,N,V_callback
valid
TB,R,N,V_valid
MRAVOutputContextCreateiTunesAudioContext
MRAVOutputContextCreateIndependentRoutingContext
AVOutputContext
AVOutputContextOutputDeviceDidChangeNotification
AVOutputContextOutputDevicesDidChangeNotification
AVOutputContextDestinationChangeInitiatedNotification
deviceIdentifier
packets
MRGameControllerInputModeNone |
MRGameControllerInputModeCaptureMotion |
MRGameControllerInputModeCaptureButtons |
MRGameControllerInputModeCaptureDigitizer
MRGameControllerPlayerIndex1
MRGameControllerPlayerIndex2
MRGameControllerPlayerIndex3
MRGameControllerPlayerIndex4
MRGameControllerPlayerIndexUnset
MRGameControllerEventNone
MRGameControllerEventMotion
MRGameControllerEventButtons
MRGameControllerEventButtonsExtended
MRGameControllerEventDigitizer
Unknown Event: Did you remember to use the event initializers?
Game Controller Event: {
buttonA:%lf
buttonX:%lf
buttonPause:%lf
Buttons: {
dpadX:%lf
dpadY:%lf
buttonB:%lf
buttonY:%lf
leftShoulder:%lf
rightShoulder:%lf
leftThumbstickX:%lf
leftThumbstickY:%lf
rightThumbstickX:%lf
rightThumbstickY:%lf
leftTrigger:%lf
rightTrigger:%lf
Extended Buttons: {
Digitizer: { 
x: %lf 
y: %lf 
touchDown: %@ 
true
false
Motion: {
Gravity: %@ 
UserAcceleration: %@
Acceleration: {
x:%lf y:%lf z:%lf
allDevices
pairingData
status
isRetrying
isUsingSystemPairing
hasPairingData
T@"NSData",&,N,V_pairingData
hasStatus
Ti,N,V_status
hasIsRetrying
TB,N,V_isRetrying
hasIsUsingSystemPairing
TB,N,V_isUsingSystemPairing
object
T@,R,N
hasKey
T@"NSString",&,N,V_key
hasData
T@"NSData",&,N,V_data
text
actionType
hasText
T@"NSString",&,N,V_text
hasActionType
Ti,N,V_actionType
Insert
Delete
Clear
kMRMediaRemoteErrorTelevisionPairingLockOutDelayUserInfoKey
com.apple.MediaRemote.MRTelevisionDevice.SerialQueue
v8@?0@"MRProtocolMessage"4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/ExternalDevice/AppleTV/MRTelevision.m
incorrect reply
gameControllerInputModeCallback
T@?,C,N,V_gameControllerInputModeCallback
gameControllerInputMode
TI,N,V_gameControllerInputMode
gameControllerInputModeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_gameControllerInputModeCallbackQueue
gameControllerPropertiesCallback
T@?,C,N,V_gameControllerPropertiesCallback
gameControllerPropertiesCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_gameControllerPropertiesCallbackQueue
recordingStateCallback
T@?,C,N,V_recordingStateCallback
recordingStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordingStateCallbackQueue
textInputCallback
T@?,C,N,V_textInputCallback
textInputCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_textInputCallbackQueue
hiliteModeCallback
T@?,C,N,V_hiliteModeCallback
hiliteModeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_hiliteModeCallbackQueue
TB,R,N,V_hiliteMode
v12@?0^{__CFString=}4B8
v16@?0{?=II}4@?<v@?^{__CFString=}B>12
void MRTelevisionSetHiliteModeCallback(MRExternalDeviceRef, dispatch_queue_t, MRTelevisionHiliteModeCallback)
<Unknown Function>
device
invalid object passed to %s
void MRTelevisionRequestHiliteModeExit(MRExternalDeviceRef)
_Bool MRTelevisionGetHiliteMode(MRExternalDeviceRef)
void MRTelevisionWake(MRExternalDeviceRef)
void MRTelevisionRegisterVirtualTouchDevice(MRExternalDeviceRef, MRVirtualTouchDeviceDescriptorRef, dispatch_queue_t, MRTelevisionTouchDeviceIDCallback)
replyQ
completion
v16@?0Q4@"NSError"12
void MRTelevisionSendVirtualTouchEvent(MRExternalDeviceRef, MRHIDTouchEvent, MRVirtualTouchDeviceID)
void MRTelevisionSendButtonEvent(MRExternalDeviceRef, MRHIDButtonEvent)
void MRTelevisionSendHIDEvent(MRExternalDeviceRef, IOHIDEventRef)
void MRTelevisionGetCurrentTextEditingSession(MRExternalDeviceRef, dispatch_queue_t, void (^)(MRTextEditingSessionRef, CFErrorRef))
v12@?0@"MRTextEditingSession"4@"NSError"8
void MRTelevisionSetTextEditingCallback(MRExternalDeviceRef, dispatch_queue_t, MRTelevisionTextInputCallback)
void MRTelevisionTextEditingInsert(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)
void MRTelevisionTextEditingSetText(MRExternalDeviceRef, MRTextEditingSessionRef, CFStringRef)
void MRTelevisionTextEditingDeleteBackward(MRExternalDeviceRef, MRTextEditingSessionRef)
void MRTelevisionTextEditingClearText(MRExternalDeviceRef, MRTextEditingSessionRef)
void MRTelevisionRegisterGameController(MRExternalDeviceRef, MRGameControllerProfile, dispatch_queue_t, MRTelevisionGameControllerIDCallback)
void MRTelevisionRegisterGameControllerWithProperties(MRExternalDeviceRef, MRGameControllerPropertiesRef, dispatch_queue_t, MRTelevisionGameControllerIDCallback)
void MRTelevisionUnregisterGameController(MRExternalDeviceRef, MRGameControllerID)
void MRTelevisionSetGameControllerInputModeCallback(MRExternalDeviceRef, dispatch_queue_t, MRTelevisionGameControllerInputModeCallback)
void MRTelevisionSetGameControllerPropertiesCallback(MRExternalDeviceRef, dispatch_queue_t, MRTelevisionGameControllerPropertiesCallback)
void MRTelevisionSendGameControllerEvent(MRExternalDeviceRef, MRGameControllerEvent, MRGameControllerID)
void MRTelevisionSendGameControllerEventV2(MRExternalDeviceRef, MRGameControllerEventRef, MRGameControllerID)
invalid MRExternalDeviceRef object passed to %s
invalid MRGameControllerEventRef object passed to %s
MRGameControllerInputMode MRTelevisionGetGameControllerInputMode(MRExternalDeviceRef)
void MRTelevisionRegisterVirtualVoiceInputDevice(MRExternalDeviceRef, MRVirtualVoiceInputDeviceDescriptorRef, dispatch_queue_t, void (^)(MRVirtualVoiceInputDeviceID, CFErrorRef))
v12@?0I4@"NSError"8
void MRTelevisionSetVoiceRecordingStateCallback(MRExternalDeviceRef, dispatch_queue_t, MRTelevisionRecordingStateCallback)
MRVoiceRecordingState MRTelevisionGetVoiceRecordingState(MRExternalDeviceRef)
void MRTelevisionProcessVirtualVoiceInputAudioData(MRExternalDeviceRef, MRVirtualVoiceInputDeviceID, MRAudioBufferRef, MRAudioTime, float)
volumeControlAvailable
absolute
integratedDisplay
screenSizeWidth
screenSizeHeight
hasAbsolute
TB,N,V_absolute
hasIntegratedDisplay
TB,N,V_integratedDisplay
hasScreenSizeWidth
Tf,N,V_screenSizeWidth
hasScreenSizeHeight
Tf,N,V_screenSizeHeight
kMRMediaRemoteOptionSourceID
kMRMediaRemoteOptionMediaType
kMRMediaRemoteOptionIsExternalPlayerCommand
kMRMediaRemoteOptionSkipInterval
kMRMediaRemoteOptionPlaybackRate
kMRMediaRemoteOptionRating
kMRMediaRemoteOptionIsNegative
kMRMediaRemoteOptionPlaybackPosition
kMRMediaRemoteOptionRepeatMode
kMRMediaRemoteOptionShuffleMode
kMRMediaRemoteOptionSendOptionsNumber
kMRMediaRemoteOptionContextID
kMRMediaRemoteOptionDestinationAppDisplayID
kMRMediaRemoteOptionTrackID
kMRMediaRemoteOptionContentItemID
kMRMediaRemoteOptionPlaybackQueueOffset
kMRMediaRemoteOptionNowPlayingContentItemID
kMRMediaRemoteOptionStationID
kMRMediaRemoteOptionStationHash
kMRMediaRemoteOptionStationURL
kMRMediaRemoteOptionShouldBeginRadioPlayback
kMRMediaRemoteOptionSystemAppPlaybackQueueData
kMRMediaRemoteOptionRequestDefermentToPlaybackQueuePosition
kMRMediaRemoteOptionPlaybackQueueInsertionPosition
kMRMediaRemoteOptionInsertAfterContentItemID
kMRMediaRemoteOptionPlaybackQueueDestinationOffset
kMRMediaRemoteOptionBookmarkiTunesDestination
kMRMediaRemoteOptionAffiliateIdentifier
kMRMediaRemoteOptionLanguageOptionData
kMRMediaRemoteOptionChangeLanguageOptionSetting
kMRMediaRemoteOptionRemoteControlInterfaceIdentifier
kMRMediaRemoteOptionCommandBroadcasted
kMRMediaRemoteOptionInterruptionEvent
kMRMediaRemoteOptionPredefinedPlaybackRate
kMRMediaRemoteOptionPlaybackQueueContextData
kMRMediaRemoteOptionPlaybackProgress
kMRMediaRemoteOptionDisableImplicitAppLaunchBehaviors
kMRMediaRemoteSupportedCommandsDidChangeNotification
kMRMediaRemoteRegisteredCommandHandlersDidChangeNotification
kMRMediaRemoteSystemAppDidSkipTrackNotification
v12@?0I4^{__CFArray=}8
JUST_GOT_SPLASH_BEATS!
v16@?0I4^{__CFDictionary=}8@?<v@?^{__CFArray=}>12
%08x
with %ld command(s)
ToggleRecord
ChangePlaybackRateCommand
SetRepeatMode
SetShuffleMode
Menu
Select
UpArrow
DownArrow
BacklightOff
BuyTrack
BuyAlbum
PreOrderAlbum
CancelDownload
PresentUpNext
SetSleepTimer
PresentSharingOptions
<Unrecognized Command>
Success
NoSuchContent
CommandFailed
NoActionableNowPlayingItem
UIKitLegacy
SkipAdProhibited
QueueIsUserCurated
UserModifiedQueueDisabled
UserQueueModificationNotSupportedForCurrentItem
ApplicationNotFound
ConnectionFailed
CommandIgnored
CouldNotLaunchApplication
TimedOut
<Unknown>
ForegroundReceiver
com.apple.MRMediaRemote.elapsedTimeDidChange
v8@?0i4
com.apple.MRMediaRemote.playbackSpeedDidChange
com.apple.MRMediaRemote.repeatModeDidChange
com.apple.MRMediaRemote.shuffleModeDidChange
use %@ instead
%@ is abstract
T^v,R,N,V_device
role
TI,R,N,V_role
TB,R,N,GisValid
paired
TB,R,N,GisPaired
pairedDevices
T@"<MRCryptoPairingSessionDelegate>",N,V_delegate
T@"_MRLyricsEventProtobuf",&,N,V_event
hasVolumeControlAvailable
TB,N,V_volumeControlAvailable
report
T@"NSString",&,N,V_virtualDeviceID
hasReport
T@"NSData",&,N,V_report
serializationDate
T@"NSDate",R,N,V_serializationDate
prompt
inputTraits
hasPrompt
T@"NSString",&,N,V_prompt
hasInputTraits
T@"_MRTextInputTraitsProtobuf",&,N,V_inputTraits
hasNowPlayingUpdates
TB,N,V_nowPlayingUpdates
hasArtworkUpdates
TB,N,V_artworkUpdates
hasVolumeUpdates
TB,N,V_volumeUpdates
hasKeyboardUpdates
TB,N,V_keyboardUpdates
Type: %@ Entry: %@
v16@?0@"NSString"4@"MRExternalDeviceMessageMetricsEntry"8^B12
Max: %lu
 Min: %lu
 Avg: %lu
 Total: %lu
 Values: %@
TI,N,V_avg
TI,N,V_min
TI,N,V_max
total
TI,N,V_total
values
T@"NSMutableArray",N,V_values
T{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI},R,N
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lul
Priority: %lul
Message: x: %u y: %u phase: %u deviceID: %u finger: %u
mediaremoteuti
%@://%@/%@
%llu
library
multiverse
store
hasName
TQ,N,V_name
hasPackets
T@"_MRTransactionPacketsProtobuf",&,N,V_packets
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_KEY
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_REQUEST_KEY
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_CAPABILITIES_KEY
^{__CFData=}8@?0^v4
MRXPC_CLIENT_ERROR_DATA_KEY
MRXPC_ORIGIN_DATA_KEY
MRXPC_AVAILABLE_ORIGINS_DATA_KEY
MRXPC_NOWPLAYING_CLIENT_DATA_KEY
MRXPC_NOWPLAYING_PLAYER_DATA_KEY
MRXPC_NOWPLAYING_PLAYER_PATH_DATA_KEY
MRXPC_COMMAND_INFO_ARRAY_DATA_KEY
MRXPC_COMMAND_APP_OPTIONS_KEY
MRXPC_VIDEO_THUMBNAILS_REQ_DATA_KEY
MRXPC_VIDEO_THUMBNAILS_ARRAY_DATA_KEY
MRXPC_NOWPLAYING_STATE_DATA_KEY
MRXPC_TRANSACTION_COMING
MRXPC_DIAGNOSTIC_DATA_KEY
^v8@?0^{__CFData=}4
MRXPC_NOWPLAYING_CLIENT_ARRAY_DATA_KEY
MRXPC_NOWPLAYING_PLAYER_ARRAY_DATA_KEY
v16@?0@4@8^B12
origin
T^v,R,N,V_origin
T^v,R,N,V_client
nowPlayingClients
T@"NSArray",R,N,V_nowPlayingClients
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Core/MRNowPlayingOriginClientRequests.m
Trying to instantiate an unresolved MRNowPlayingPlayerClientRequests %@
-[MRNowPlayingPlayerClientRequests receiveTransaction:fromMessage:]
transaction
v12@?0@"NSArray"4@?<v@?I>8
-[MRNowPlayingPlayerClientRequests _handleTransactionPackets:packets:completion:]
originClientState
v8@?0@"NSArray"4
v20@?0@"MRTransactionDestination"4@"NSArray"8^v12@?<v@?I>16
T^v,R,N,V_playerPath
playbackQueueClient
T@"MRPlaybackQueuePlayerClient",R,N,V_playbackQueueClient
kMRCredentialRequirementTypeUserInfoKey
kMRCredentialRequirementCharacterCountUserInfoKey
kMRTelevisionRemoteNowPlayingArtworkChanged
kMRMediaRemoteErrorExternalDevicePairingLockOutDelayUserInfoKey
com.apple.MediaRemote.MRExternalDevice.SerialQueue
com.apple.MediaRemote.MRExternalDevice.WorkerQueue
<%@ %p "%@">
@"NSError"4@?0
v12@?0C4^v8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/ExternalDevice/MRExternalDevice.m
-[MRExternalDevice _openSecuritySession]_block_invoke
Type mismatch: %@ is not a %@
v12@?0@"MRCryptoPairingSession"4@"NSData"8
v20@?0@"MRCryptoPairingSession"4d8@?<v@?@"NSString">16
v12@?0@"MRCryptoPairingSession"4@"NSError"8
v20@?0^v4I8^{__CFDictionary=}12@?<v@?^{__CFArray=}>16
incorrect reply type
v16@?0^v4^v8@?<v@?^vB^{__CFError=}>12
v12@?0^v4^v8
-[MRExternalDevice _handleNotificationMessageLegacy:]
attmpted to invalidate queue without playerpath
-[MRExternalDevice _updateNowPlayingInfoForPlayerPath:]
attmpted to update now playing info without playerpath
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
connection
T@"MRExternalClientConnection",&,N,V_connection
customOrigin
T^v,N
nowPlayingArtwork
T^{__CFData=},N,V_nowPlayingArtwork
T^{__CFDictionary=},N,V_nowPlayingInfo
nowPlayingItem
T^v,N,V_nowPlayingItem
T^v,N,V_playerPath
pairingCallback
T@?,C,N,V_pairingCallback
pairingCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingCallbackQueue
connectionStateCallback
T@?,C,N,V_connectionStateCallback
connectionState
TI,R,N,V_connectionState
connectionStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionStateCallbackQueue
nameCallback
T@?,C,N,V_nameCallback
nameCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_nameCallbackQueue
pairingAllowedCallback
T@?,C,N,V_pairingAllowedCallback
pairingAllowedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingAllowedCallbackQueue
customDataCallback
T@?,C,N,V_customDataCallback
customDataCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_customDataCallbackQueue
transport
T@"MRExternalDeviceTransport",R,N,V_transport
hostName
port
Ti,R,N
T^v,R,N,V_deviceInfo
inputStream
T@"NSInputStream",R,N
outputStream
T@"NSOutputStream",R,N
supportedMessages
T@"MRSupportedProtocolMessages",&,N,V_supportedMessages
wantsNowPlayingNotifications
TB,N,V_wantsNowPlayingNotifications
wantsNowPlayingArtworkNotifications
TB,N,V_wantsNowPlayingArtworkNotifications
wantsVolumeNotifications
TB,N,V_wantsVolumeNotifications
isCallingClientCallback
TB,N,V_isCallingClientCallback
CFStringRef MRExternalDeviceCopyUniqueIdentifier(MRExternalDeviceRef)
CFStringRef MRExternalDeviceCopyName(MRExternalDeviceRef)
CFStringRef MRExternalDeviceCopyHostName(MRExternalDeviceRef)
CFStringRef MRExternalDeviceCopySystemBuildVersion(MRExternalDeviceRef)
int64_t MRExternalDeviceGetNetworkPort(MRExternalDeviceRef)
void MRExternalDeviceSetNameCallback(MRExternalDeviceRef, dispatch_queue_t, MRExternalDeviceNameCallback)
void MRExternalDeviceSetName(MRExternalDeviceRef, CFStringRef)
MROriginRef MRExternalDeviceCopyCustomOrigin(MRExternalDeviceRef)
void MRExternalDeviceSetWantsNowPlayingUpdates(MRExternalDeviceRef, _Bool)
void MRExternalDeviceSetWantsNowPlayingArtworkUpdates(MRExternalDeviceRef, _Bool)
void MRExternalDeviceSetWantsVolumeControlAvailabilityUpdates(MRExternalDeviceRef, _Bool)
_Bool MRExternalDeviceIsConnected(MRExternalDeviceRef)
void MRExternalDeviceConnect(MRExternalDeviceRef)
void MRExternalDeviceDisconnect(MRExternalDeviceRef)
MRExternalDeviceConnectionState MRExternalDeviceGetConnectionState(MRExternalDeviceRef)
void MRExternalDeviceSetConnectionStateCallback(MRExternalDeviceRef, dispatch_queue_t, MRExternalDeviceConnectionStateCallback)
void MRExternalDeviceSetPairingCallback(MRExternalDeviceRef, dispatch_queue_t, MRExternalDevicePairingCallback)
_Bool MRExternalDeviceIsPairingAllowed(MRExternalDeviceRef)
void MRExternalDeviceSetPairingAllowedCallback(MRExternalDeviceRef, dispatch_queue_t, MRExternalDevicePairingAllowedCallback)
_Bool MRExternalDeviceIsPaired(MRExternalDeviceRef)
void MRExternalDeviceUnpair(MRExternalDeviceRef)
void MRExternalDeviceGetPairedDevices(void (^)(CFArrayRef))
void MRExternalDeviceDeletePairedDevice(CFStringRef)
void MRExternalDeviceRequestOutputContextModification(MRExternalDeviceRef, MRAVOutputContextType, CFArrayRef, CFArrayRef, dispatch_queue_t, void (^)(CFErrorRef))
void MRExternalDeviceSetCustomDataCallback(MRExternalDeviceRef, dispatch_queue_t, MRExternalDeviceCustomDataCallback)
void MRExternalDeviceSendCustomData(MRExternalDeviceRef, CFStringRef, CFDataRef)
void MRExternalDevicePing(MRExternalDeviceRef, CFTimeInterval, dispatch_queue_t, MRExternalDevicePingCallback)
touchDown
hasX
Td,N,V_x
hasY
Td,N,V_y
hasTouchDown
TB,N,V_touchDown
TQ,N,V_timestamp
outputContextType
hasOutputContextType
Ti,N,V_outputContextType
T@"NSMutableArray",&,N,V_addingOutputDeviceUIDs
T@"NSMutableArray",&,N,V_removingOutputDeviceUIDs
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/ProtocolMessages/MRLegacySendHIDEventMessage.m
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lu
Priority: %lu
Message: %@
buttonEvent
T{_MRHIDButtonEvent=IIB},R,N
availableEndpoints
T@"NSArray",C,N,V_availableEndpoints
endpointFeatures
TI,R,N,V_endpointFeatures
hasAvailableEndpoints
availableOutputDevices
discoveryMode
TI,N,V_discoveryMode
AVOutputDeviceDiscoverySession
AVOutputDeviceDiscoverySessionAvailableOutputDevicesDidChangeNotification
Crypto Session Shutting down
chacha20_poly1305_encrypt_all_64x64
Session not open
Encrypted data has an invalid length
chacha20_poly1305_decrypt_all_64x64
PairingSessionDeleteIdentity
PairingSessionSetKeychainInfo
com.apple.MediaRemote.pairing
Media Remote Pairing Identity
Paired TV Remote Peer
Cannot add peer, No device available
Cannot update peer, No pairing session available
PairingSessionCopyPeerIdentifier
Cannot add peer, No peer Identifier available
PairingSessionUpdatePeerInfo
PairingSessionDeletePeer
Could not find peer
PairingSessionSetFlags
PairingSessionCopyPeers
Pairing Session Delay
Pairing Session NULL setup code
v8@?0@"NSString"4
PairingSessionCreate
com.apple.RemoteControl
PairingSessionSetACL
No pairing session
PairingSessionExchange
PairingSessionSetSetupCode
Failed to set setup code on pairing session (OSStatus = %d)
Pairing Session is not available
MediaRemote-Read-Encryption-Key
MediaRemote-Write-Encryption-Key
PairingSessionDeriveKey
MediaRemote-Salt
inputKey
T@"NSData",&,N,V_inputKey
inputNonce
T@"NSMutableData",&,N,V_inputNonce
outputKey
T@"NSData",&,N,V_outputKey
outputNonce
T@"NSMutableData",&,N,V_outputNonce
pairedPeerDevice
pairedPeerDevices
mediaRemotePairedDevices
T@"NSMutableDictionary",R,N
peerIdentifier
TI,R,N,V_state
hasExchangedMessage
TB,R,N,V_hasExchangedMessage
pairingFlags
TI,N,V_pairingFlags
OSStatus _MRCUPSShowSetupCodeCallback(PairingFlags, char *, size_t, void *)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Cryptography/MRCoreUtilsPairingSession.m
NULL context
void _MRCUPSHideSetupCodeCallback(void *)
OSStatus _MRCUPSPromptForSetupCodeCallback(PairingFlags, int32_t, void *)
kMRNowPlayingPlaybackQueueChangedNotification
_kMRNowPlayingPlaybackQueueChangedNotification
kMRPlaybackQueueContentItemsChangedNotification
kMRPlaybackQueueContentItemArtworkChangedNotification
kMRPlaybackQueueContextUserInfoKey
_kMRPlaybackQueueContextDataUserInfoKey
kMRPlaybackQueueDataSourceChangedNotification
_kMRPlaybackQueueDataSourceChangedNotification
kMRPlaybackQueueChangedNotification
_kMRPlaybackQueueRequestIDUserInfoKey
kMRPlaybackQueueCapabilitiesChangedNotification
kMRPlaybackQueueCapabilitiesUserInfoKey
_kMRPlaybackQueueCapabilitiesDataUserInfoKey
NULL
contentItem
B12@?0^v4^v8
Async 
/A%lfx%lf
/R[%d:%d]
/IDs: %@ 
void _MRMediaRemoteRequestNowPlayingPlaybackQueue(MRPlaybackQueueRequestRef, MRNowPlayingPlayerClientRequests *, dispatch_queue_t, MRPlaybackQueueRequestCallbackCompletion)_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Core/MRPlaybackQueue.m
Async requests dont have a transaction
void _MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayer(MRPlaybackQueueRequestRef, MRNowPlayingPlayerPathRef, dispatch_queue_t, MRPlaybackQueueRequestCallbackCompletion)
void MRMediaRemoteSendContentItemArtworkUpdatedNotification(CFArrayRef, MRNowPlayingPlayerPathRef)
Attempting to use unresolved Player Path
v12@?0@"MRNowPlayingPlayerClientRequests"4^{__CFError=}8
public.jpeg
image/jpeg
image/png
public.png
playbackQueueRequest
T@"NSString",R,N,V_identifier
publicKey
T@"NSData",R,N,V_publicKey
privateKey
T@"NSData",R,N,V_privateKey
PQso
PQri
MRSystemAppPlaybackQueueDestroy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/RemoteControl/MRRemotePlaybackQueue.m
queryData: %p, shuffleMode: %@, repeatMode: %@
stationID: %lld
stationStringID: %@
shuffleMode: %@, trackIDs: %@
seedTrack: %@
identifier: %@ data: <%ld>
Empty Queue
<MRSystemAppPlaybackQueue %p, type: %@, %@>
MRSystemAppPlaybackQueueGetType
MRSystemAppPlaybackQueueIsRequestingImmediatePlayback
MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback
MRSystemAppPlaybackQueueGetSiriRecommendationIdentifier
MRSystemAppPlaybackQueueSetSiriRecommendationIdentifier
MRSystemAppPlaybackQueueGetReplaceIntent
MRSystemAppPlaybackQueueSetReplaceIntent
MRSystemAppPlaybackQueueGetUserInfo
MRSystemAppPlaybackQueueSetUserInfo
MRSystemAppPlaybackQueueGetLocalQueryData
queue->type == MRSystemAppPlaybackQueueTypeLocalMediaQuery
MRSystemAppPlaybackQueueSetLocalQueryData
MRSystemAppPlaybackQueueGetLocalQueryFirstItemMultiverseIDData
MRSystemAppPlaybackQueueSetLocalQueryFirstItemMultiverseIDData
MRSystemAppPlaybackQueueGetLocalQueryFirstItemPID
MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID
MRSystemAppPlaybackQueueGetLocalQueryShuffleMode
MRSystemAppPlaybackQueueSetLocalQueryShuffleMode
MRSystemAppPlaybackQueueGetLocalQueryRepeatMode
MRSystemAppPlaybackQueueSetLocalQueryRepeatMode
MRSystemAppPlaybackQueueSetRadioStationIDType
queue->type == MRSystemAppPlaybackQueueTypeRadioStation
MRSystemAppPlaybackQueueGetRadioStationIntegerPID
MRSystemAppPlaybackQueueSetRadioStationIntegerPID
queue->radioStationQueue.stationIDType == MRSystemAppRadioStationIDTypeIntegerPID
MRSystemAppPlaybackQueueSetRadioStationStringIdentifier
queue->radioStationQueue.stationIDType == MRSystemAppRadioStationIDTypeStationStringID
MRSystemAppPlaybackQueueCopyGenericTrackIdentifiers
_MRSystemAppPlaybackQueueTypeIsTracklistType(queue->type)
MRSystemAppPlaybackQueueSetGenericTrackIdentifiers
MRSystemAppPlaybackQueueGetFirstItemGenericTrackIdentifier
MRSystemAppPlaybackQueueSetFirstItemGenericTrackIdentifier
MRSystemAppPlaybackQueueGetTracklistShuffleMode
MRSystemAppPlaybackQueueSetTracklistShuffleMode
MRSystemAppPlaybackQueueGetTracklistRepeatMode
MRSystemAppPlaybackQueueSetTracklistRepeatMode
MRSystemAppPlaybackQueueCopyGeniusSeedTrack
queue->type == MRSystemAppPlaybackQueueTypeGenius
MRSystemAppPlaybackQueueSetGeniusSeedTrack
MRSystemAppPlaybackQueueCopyCustomDataIdentifier
queue->type == MRSystemAppPlaybackQueueTypeCustom
MRSystemAppPlaybackQueueSetCustomDataIdentifier
MRSystemAppPlaybackQueueCopyCustomData
MRSystemAppPlaybackQueueSetCustomData
head
tail
last
specified
PQty
PQip
PQui
PQsr
PQqd
PQmv
PQfi
PQsm
PQrm
PQsy
PQsi
PQss
PQst
PQfg
PQts
PQtr
PQgs
PQci
PQcd
bplist
LocalMediaQuery
RadioStation
iTunesStoreTracklist
QuickPlay
GenericTracklist
Genius
CustomData
Empty
<%@ %p %u, recordingState=%@, descriptor=%@>
TI,R,N,V_deviceID
T@"MRVirtualVoiceInputDeviceDescriptor",C,N,V_descriptor
recordingState
TI,N,V_recordingState
jpegData
hasJpegData
T@"NSData",&,N,V_jpegData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/VoiceInput/MRAudioDataBlock.m
invalid buffer size for decoding voice input message (%lu > (%lu * %lu))
packet descriptions exceed maximum packet capacity (%lu > %lu)
T@"MRAudioBuffer",R,N,V_buffer
T{?=dd},R,N,V_time
Tf,R,N,V_gain
protobuf
T@"_MRAudioDataBlockProtobuf",R,N
T@"MRAudioBuffer",&,D,N
T{?=dd},D,N
Tf,D,N
v12@?0@"MRCryptoPairingSession"4@"NSString"8
v8@?0@"MRCryptoPairingSession"4
pairingSession
T@"MRCoreUtilsPairingSession",&,N,V_pairingSession
pairingDelegate
T@"MRCryptoPairingSessionBlockDelegate",&,N,V_pairingDelegate
usingSystemPairing
TB,R,N,GisUsingSystemPairing
com.apple.MediaRemote
com.apple.MediaRemote.MRMediaRemoteServiceClient
v16@?0@"NSString"4@"NSDictionary"8@12
com.apple.MRMediaRemote.didLaunch
v16@?0^{__CFError=}4d8
com.apple.MediaRemote.MRMediaRemoteServiceClient.workerSerialQueue
-[MRMediaRemoteServiceClient setActivePlayerPath:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Service/MRMediaRemoteServiceClient.m
Setting activePlayerPath in daemon
void _MRServiceClientPlaybackQueueCallback(MRNowPlayingPlayerPathRef, MRPlaybackQueueRequestRef, MRPlaybackQueueTransactionRequestCallbackCompletion)
service
T^{MRMediaRemoteService=},R,N,V_service
notificationClient
T@"MRNotificationClient",R,N,V_notificationClient
registeredOrigins
workerQueue
T@"NSObject<OS_dispatch_queue>",R,N
workerSerialQueue
playbackQueueDispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N
activePlayerPath
com.apple.MediaRemote.serviceClientRemoteCommandCallback
void _MRServiceClientTransactionCallback(MRNowPlayingPlayerPathRef, MRTransactionName, xpc_object_t)
playerClient
userData
hasUserData
T@"NSData",&,N,V_userData
block
T@?,R,N,V_block
hasHiliteMode
TB,N,V_hiliteMode
enabled
active
preferredInterval
localizedTitle
localizedShortTitle
minimumRating
maximumRating
supportedRate
presentationStyle
skipInterval
numAvailableSkips
skipFrequency
canScrub
supportedPlaybackQueueType
supportedCustomQueueIdentifier
supportedInsertionPositions
supportsSharedQueue
hasEnabled
TB,N,V_enabled
hasActive
TB,N,V_active
preferredIntervalsCount
preferredIntervals
hasLocalizedTitle
T@"NSString",&,N,V_localizedTitle
hasLocalizedShortTitle
T@"NSString",&,N,V_localizedShortTitle
hasMinimumRating
Tf,N,V_minimumRating
hasMaximumRating
Tf,N,V_maximumRating
supportedRatesCount
supportedRates
T^f,R,N
hasPresentationStyle
Ti,N,V_presentationStyle
hasSkipInterval
Ti,N,V_skipInterval
hasNumAvailableSkips
Ti,N,V_numAvailableSkips
hasSkipFrequency
Ti,N,V_skipFrequency
hasCanScrub
Ti,N,V_canScrub
supportedPlaybackQueueTypesCount
supportedPlaybackQueueTypes
T^i,R,N
supportedCustomQueueIdentifiers
T@"NSMutableArray",&,N,V_supportedCustomQueueIdentifiers
supportedInsertionPositionsCount
hasSupportsSharedQueue
TB,N,V_supportsSharedQueue
usagePage
usage
buttonDown
hasUsagePage
TI,N,V_usagePage
hasUsage
TI,N,V_usage
hasButtonDown
TB,N,V_buttonDown
strings
Ti,N,V_identifier
hasDeviceInfo
T@"_MRDeviceInfoMessageProtobuf",&,N,V_deviceInfo
Local
Custom
attributes
encryptedTextCyphertext
hasAttributes
T@"_MRTextEditingAttributesProtobuf",&,N,V_attributes
hasEncryptedTextCyphertext
T@"NSData",&,N,V_encryptedTextCyphertext
NotEditing
DidBeginEditing
Editing
TextDidChange
DidEndEditing
Response
<MRColor %p red = %f, green = %f, blue = %f, alpha = %f>
authenticationToken
sendCommandMessage
sendCommandResultMessage
getStateMessage
setStateMessage
setArtworkMessage
registerHIDDeviceMessage
registerHIDDeviceResultMessage
sendHIDEventMessage
sendHIDReportMessage
sendVirtualTouchEventMessage
notificationMessage
contentItemsChangedNotificationMessage
deviceInfoMessage
clientUpdatesConfigMessage
volumeControlAvailabilityMessage
gameController
registerGameController
registerGameControllerResponse
unregisterGameController
registerForGameControllerEvents
keyboardMessage
getKeyboardMessage
textInputMessage
getVoiceInputDevicesMessage
getVoiceInputDevicesResponseMessage
registerVoiceInputDeviceMessage
registerVoiceInputDeviceResponseMessage
setRecordingStateMessage
sendVoiceInputMessage
transactionPackets
cryptoPairingMessage
gameControllerProperties
readyStateMessage
sendButtonEventMessage
setHiliteModeMessage
wakeDeviceMessage
genericMessage
sendPackedVirtualTouchEventMessage
sendLyricsEventMessage
setNowPlayingClientMessage
setNowPlayingPlayerMessage
modifyOutputContextRequestMessage
hasAuthenticationToken
T@"NSString",&,N,V_authenticationToken
hasSendCommandMessage
T@"_MRSendCommandMessageProtobuf",&,N,V_sendCommandMessage
hasSendCommandResultMessage
T@"_MRSendCommandResultMessageProtobuf",&,N,V_sendCommandResultMessage
hasGetStateMessage
T@"_MRGetStateMessageProtobuf",&,N,V_getStateMessage
hasSetStateMessage
T@"_MRSetStateMessageProtobuf",&,N,V_setStateMessage
hasSetArtworkMessage
T@"_MRSetArtworkMessageProtobuf",&,N,V_setArtworkMessage
hasRegisterHIDDeviceMessage
T@"_MRRegisterHIDDeviceMessageProtobuf",&,N,V_registerHIDDeviceMessage
hasRegisterHIDDeviceResultMessage
T@"_MRRegisterHIDDeviceResultMessageProtobuf",&,N,V_registerHIDDeviceResultMessage
hasSendHIDEventMessage
T@"_MRSendHIDEventMessageProtobuf",&,N,V_sendHIDEventMessage
hasSendHIDReportMessage
T@"_MRSendHIDReportMessageProtobuf",&,N,V_sendHIDReportMessage
hasSendVirtualTouchEventMessage
T@"_MRSendVirtualTouchEventMessageProtobuf",&,N,V_sendVirtualTouchEventMessage
hasNotificationMessage
T@"_MRNotificationMessageProtobuf",&,N,V_notificationMessage
hasContentItemsChangedNotificationMessage
T@"_MRPlaybackQueueProtobuf",&,N,V_contentItemsChangedNotificationMessage
hasDeviceInfoMessage
T@"_MRDeviceInfoMessageProtobuf",&,N,V_deviceInfoMessage
hasClientUpdatesConfigMessage
T@"_MRClientUpdatesConfigurationProtobuf",&,N,V_clientUpdatesConfigMessage
hasVolumeControlAvailabilityMessage
T@"_MRVolumeControlAvailabilityProtobuf",&,N,V_volumeControlAvailabilityMessage
hasGameController
T@"_MRGameControllerMessageProtobuf",&,N,V_gameController
hasRegisterGameController
T@"_MRRegisterGameControllerMessageProtobuf",&,N,V_registerGameController
hasRegisterGameControllerResponse
T@"_MRRegisterGameControllerResponseMessageProtobuf",&,N,V_registerGameControllerResponse
hasUnregisterGameController
T@"_MRUnregisterGameControllerMessageProtobuf",&,N,V_unregisterGameController
hasRegisterForGameControllerEvents
T@"_MRRegisterForGameControllerEventsMessageProtobuf",&,N,V_registerForGameControllerEvents
hasKeyboardMessage
T@"_MRKeyboardMessageProtobuf",&,N,V_keyboardMessage
hasGetKeyboardMessage
T@"_MRGetKeyboardSessionProtobuf",&,N,V_getKeyboardMessage
hasTextInputMessage
T@"_MRTextInputMessageProtobuf",&,N,V_textInputMessage
hasGetVoiceInputDevicesMessage
T@"_MRGetVoiceInputDevicesMessageProtobuf",&,N,V_getVoiceInputDevicesMessage
hasGetVoiceInputDevicesResponseMessage
T@"_MRGetVoiceInputDevicesResponseMessageProtobuf",&,N,V_getVoiceInputDevicesResponseMessage
hasRegisterVoiceInputDeviceMessage
T@"_MRRegisterVoiceInputDeviceMessageProtobuf",&,N,V_registerVoiceInputDeviceMessage
hasRegisterVoiceInputDeviceResponseMessage
T@"_MRRegisterVoiceInputDeviceResponseMessageProtobuf",&,N,V_registerVoiceInputDeviceResponseMessage
hasSetRecordingStateMessage
T@"_MRSetRecordingStateMessageProtobuf",&,N,V_setRecordingStateMessage
hasSendVoiceInputMessage
T@"_MRSendVoiceInputMessageProtobuf",&,N,V_sendVoiceInputMessage
hasPlaybackQueueRequest
T@"_MRPlaybackQueueRequestProtobuf",&,N,V_playbackQueueRequest
hasTransactionPackets
T@"_MRTransactionMessageProtobuf",&,N,V_transactionPackets
hasCryptoPairingMessage
T@"_MRCryptoPairingMessageProtobuf",&,N,V_cryptoPairingMessage
hasGameControllerProperties
T@"_MRGameControllerPropertiesMessageProtobuf",&,N,V_gameControllerProperties
hasReadyStateMessage
T@"_MRSetReadyStateMessageProtobuf",&,N,V_readyStateMessage
hasConnectionState
T@"_MRSetConnectionStateMessageProtobuf",&,N,V_connectionState
hasSendButtonEventMessage
T@"_MRSendButtonEventMessageProtobuf",&,N,V_sendButtonEventMessage
hasSetHiliteModeMessage
T@"_MRSetHiliteModeMessageProtobuf",&,N,V_setHiliteModeMessage
hasWakeDeviceMessage
T@"_MRWakeDeviceMessageProtobuf",&,N,V_wakeDeviceMessage
hasGenericMessage
T@"_MRGenericMessageProtobuf",&,N,V_genericMessage
hasSendPackedVirtualTouchEventMessage
T@"_MRSendPackedVirtualTouchEventMessageProtobuf",&,N,V_sendPackedVirtualTouchEventMessage
hasSendLyricsEventMessage
T@"_MRSendLyricsEventMessageProtobuf",&,N,V_sendLyricsEventMessage
hasSetNowPlayingClientMessage
T@"_MRSetNowPlayingClientMessageProtobuf",&,N,V_setNowPlayingClientMessage
hasSetNowPlayingPlayerMessage
T@"_MRSetNowPlayingPlayerMessageProtobuf",&,N,V_setNowPlayingPlayerMessage
hasModifyOutputContextRequestMessage
T@"_MRAVModifyOutputContextRequestProtobuf",&,N,V_modifyOutputContextRequestMessage
SendCommand
SendCommandResult
GetState
SetState
SetArtwork
RegisterHIDDevice
RegisterHIDDeviceResult
SendHIDEvent
SendHIDReport
SendVirtualTouchEvent
Notification
ContentItemsChangedNotification
DeviceInfo
ClientUpdatesConfiguration
VolumeControlAvailabilityNotification
GameController
RegisterGameController
RegisterGameControllerResponse
UnregisterGameController
RegisterForGameControllerEvents
Keyboard
GetKeyboardSession
TextInput
GetVoiceInputDevices
GetVoiceInputDevicesResponse
RegisterVoiceInputDevice
RegisterVoiceInputDeviceResponse
SetVoiceInputRecordingState
SendVoiceInput
GetPlaybackQueue
Transaction
CryptoPairing
GameControllerProperties
SetReadyStateMessage
DeviceInfoUpdate
SetDisconnectingStateMessage
SendButtonEvent
SetHiliteMode
WakeDevice
GenericMessage
SendPackedVirtualTouchEvent
SendLyricsEvent
PlaybackQueueCapabilitiesRequest
ModifyOutputContextRequest
hasDescriptor
T@"_MRVoiceInputDeviceDescriptorProtobuf",&,N,V_descriptor
phase
finger
hasPhase
Ti,N,V_phase
hasFinger
Ti,N,V_finger
Began
Moved
Stationary
Ended
Cancelled
processIdentifier
bundleIdentifier
parentApplicationBundleIdentifier
processUserIdentifier
nowPlayingVisibility
tintColor
hasProcessIdentifier
Ti,N,V_processIdentifier
hasBundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
hasParentApplicationBundleIdentifier
T@"NSString",&,N,V_parentApplicationBundleIdentifier
hasProcessUserIdentifier
Ti,N,V_processUserIdentifier
hasNowPlayingVisibility
Ti,N,V_nowPlayingVisibility
hasTintColor
T@"_MRColorProtobuf",&,N,V_tintColor
com.apple.MediaRemote.MRNotificationClient
notificationCallback
T@?,C,N
registeredForNowPlayingNotifications
TB,R,N,GisRegisteredForNowPlayingNotifications
receivesExternalScreenTypeChangedNotifications
TB,N,V_receivesExternalScreenTypeChangedNotifications
receivesSupportedCommandsNotifications
TB,N,V_receivesSupportedCommandsNotifications
receivesRoutesChangedNotifications
TB,N,V_receivesRoutesChangedNotifications
receivesVolumeControlNotifications
TB,N,V_receivesVolumeControlNotifications
receivesOriginChangedNotifications
TB,N,V_receivesOriginChangedNotifications
receivesPlaybackErrorNotifications
TB,N,V_receivesPlaybackErrorNotifications
receivesVoiceInputRecordingStateNotifications
TB,N,V_receivesVoiceInputRecordingStateNotifications
notification
T@"NSString",R,N,V_notification
userInfo
T@"NSDictionary",R,N,V_userInfo
xpcMessage
T@"NSObject<OS_xpc_object>",&,N,V_xpcMessage
com.apple.mediaremote
MRExternalDeviceIncludePeerToPeer
MRExternalDeviceUseNoDelayOptionForExternalDeviceSockets
UseDebugAVRouteWithoutVolumeControl
HasNewDeviceSupportsExternalControlDefaultValue
DeviceSupportsExternalRemoteControl
ShouldInitializeTVBonjourService
LogPairingSetupCode
MRExternalDeviceSocketsQOSLevel
kMRSettingsExternalDeviceTimeoutSecondsDurationDefaultsKey
kMRSettingsExternalDeviceNowPlayingInfoCoalesceDurationDefaultsKey
kMRSettingsExternalDeviceNowPlayingInfoArtworkCoalesceDurationDefaultsKey
kMRSettingsExternalDeviceDisconnectWaitDurationDefaultsKey
kMRSettingsExternalDeviceDisconnectSleepDurationDefaultsKey
kMRSettingsExternalDeviceSleepAssertionOnClientConnectDurationDefaultsKey
kMRSettingsBluetoothDeviceResumeDurationDefaultsKey
kMRSettingsBroadcastCommandWaitDurationDefaultsKey
AirPlayContextInitTimeoutDuration_v2
kMRSettingsExternalDeviceSystemPairingDefaultsKey
kMRSettingsMaxTransactionSizeDefaultsKey
kMRSettingsWaitDurationOnOutOfMemoryDefaultsKey
kMRSettingsWaitDurationOnXpcSendDefaultsKey
kMRSettingsWaitDurationOnNetworkSendDefaultsKey
enableAirPlay2
com.apple.airplay
UseSystemAudioContextForAirPlayTransport
kMRSettingsConnectedClientPIDS
usePeerToPeerExternalDeviceConnections
useNoDelayOptionForExternalDeviceSockets
useDebugAVRouteWithoutVolumeControl
deviceSupportsExternalRemoteControl
shouldInitializeTelevisionBonjourService
shouldLogPairingSetupCode
hasExternalDeviceSocketQOSLevelSet
externalDeviceSocketQOSLevel
externalDevicePairingAllowed
TB,N,GisExternalDevicePairingAllowed,V_externalDevicePairingAllowed
externalDeviceTimeoutDuration
Td,R,N
externalDeviceNowPlayingInfoCoalesceDuration
externalDeviceNowPlayingInfoArtworkCoalesceDuration
externalDeviceDisconnectWaitDuration
externalDeviceDisconnectSleepDuration
externalDeviceSleepAssertionOnClientConnectDuration
bluetoothDeviceResumeDuration
broadcastCommandWaitDuration
airPlayOutputContextInitTimeoutDuration
useExternalDeviceSystemPairing
maxTransactionMemorySize
transactionWaitDurationOnOutOfMemory
transactionWaitDurationOnXpcSend
transactionWaitDurationOnNetworkSend
airPlay2Enabled
TB,R,N,GisAirPlay2Enabled
useSystemAudioContextForAirPlayTransport
connectedClientPIDs
T@"NSArray",N
password
securityType
hasPassword
T@"NSString",&,N,V_password
hasSecurityType
Ti,N,V_securityType
NoneForInfraWiFi
PINFirstTime
PINEveryTime
Password
playerIndex
vendorName
buttonAUpDelay
profile
supportsExtendedMotion
hasPlayerIndex
TI,N,V_playerIndex
hasVendorName
T@"NSString",&,N,V_vendorName
hasButtonAUpDelay
Ti,N,V_buttonAUpDelay
hasProfile
Ti,N,V_profile
hasSupportsExtendedMotion
TB,N,V_supportsExtendedMotion
B239
Extended
-[MRContentItemRequest initWithItem:request:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Core/MRContentItemRequest.m
item
-[MRContentItemRequest initWithCoder:]
itemData
_item
requestData
_request
%@ %p {
  request = %@  item = %@}
T^v,N,V_item
T^v,N,V_request
startOffset
variableFramesInPacket
dataByteSize
hasStartOffset
Tq,N,V_startOffset
hasVariableFramesInPacket
TI,N,V_variableFramesInPacket
hasDataByteSize
TI,N,V_dataByteSize
_mediaremotetv._tcp.
_mediaremote._tcp.
UniqueIdentifier
Name
ModelName
SystemBuildVersion
AllowPairing
BluetoothAddress
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/ExternalDevice/MRExternalDeviceController.m
bonjourServiceType
local
T@"<MRExternalDeviceControllerDelegate>",N,V_delegate
T@"NSString",R,N,V_bonjourServiceType
discovering
TB,R,N,GisDiscovering,V_discovering
MRBroadcastCommandResponse: %@ %d %@
kMRBroadcastCommandPIDKey
kMRBroadcastCommandBundleIdentifierKey
kMRBroadcastCommandHandlerStatusesKey
kMRBroadcastCommandResponseDataKey
coder must support key-value coding
supportsSecureCoding
TB,R
responseData
T@"NSData",R,N,V_responseData
commandHandlerStatuses
Ti,R,N,V_pid
bundleIdentifer
T@"NSString",R,N,V_bundleIdentifer
MRExternalDeviceTransportDeviceInfoDidChangeNotification
OldDeviceInfo
NewDeviceInfo
hostname
requiresCustomPairing
TB,R,N,V_requiresCustomPairing
<%@ %p netService = %@>
netService
T@"NSNetService",&,N,V_netService
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/ExternalDevice/MRExternalDeviceTransport.m
Output context transport must be initialized with one or more output devices
<%@ %p outputContext = %@>
v8@?0@"NSNotification"4
hasDeviceIdentifier
TI,N,V_deviceIdentifier
Tf,N,V_x
Tf,N,V_y
hasZ
Tf,N,V_z
hasW
Tf,N,V_w
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/ExternalDevice/AppleTV/MRTelevisionController.m
callbackBlock
T@?,R,N,V_callbackBlock
Got a non-television device from a television bonjour service.
discoveryCallback
T@"_MRTelevisionControllerBlockCallback",&,N,V_discoveryCallback
removalCallback
T@"_MRTelevisionControllerBlockCallback",&,N,V_removalCallback
kMRTelevisionServicePairedDevicesDidChangeNotification
kMRTelevisionServiceIsPairingAllowedDidChangeNotification
MediaRemote_ExtendedInfo
MediaRemote_PeerIdentifier
MediaRemote_PeerName
com.apple.mediaremote.televisionService
kMRDeviceInfoDidChangeNotification
kMRPairedDeviceUserInfoKey
kMRPairedDeviceUserInfoDataKey
MediaRemote-GeneratedDeviceID
MediaRemoteTelevisionDeviceInfo.plist
%@/%@
MCProfileConnection
/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration
MCFeatureRemoteAppPairingAllowed
packetData
totalLength
totalWritePosition
T@"_MRTransactionKeyProtobuf",&,N,V_key
hasPacketData
T@"NSData",&,N,V_packetData
hasTotalLength
TQ,N,V_totalLength
hasTotalWritePosition
TQ,N,V_totalWritePosition
revision
hasRevision
T@"NSString",&,N,V_revision
Connecting
Connected
Disconnected
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/AirPlay/MRAVRoutingClientController.m
MRAVRoutingActiveCategoryName
mediaRemoteService
T^{MRMediaRemoteService=},R,N,V_mediaRemoteService
formatSettingsPlistData
hasFormatSettingsPlistData
T@"NSData",&,N,V_formatSettingsPlistData
sourceID
externalPlayerCommand
rating
negative
playbackPosition
contextID
trackID
radioStationID
systemAppPlaybackQueueData
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
playbackQueueOffset
playbackQueueDestinationOffset
languageOption
playbackQueueContext
insertAfterContentItemID
nowPlayingContentItemID
replaceIntent
hasSourceID
T@"NSString",&,N,V_sourceID
T@"NSString",&,N,V_mediaType
hasExternalPlayerCommand
TB,N,V_externalPlayerCommand
Tf,N,V_skipInterval
hasRating
Tf,N,V_rating
hasNegative
TB,N,V_negative
hasPlaybackPosition
Td,N,V_playbackPosition
hasContextID
T@"NSString",&,N,V_contextID
hasTrackID
TQ,N,V_trackID
hasRadioStationID
Tq,N,V_radioStationID
hasSystemAppPlaybackQueueData
T@"NSData",&,N,V_systemAppPlaybackQueueData
hasSendOptions
TI,N,V_sendOptions
hasRequestDefermentToPlaybackQueuePosition
TB,N,V_requestDefermentToPlaybackQueuePosition
hasShouldOverrideManuallyCuratedQueue
TB,N,V_shouldOverrideManuallyCuratedQueue
hasStationURL
T@"NSString",&,N,V_stationURL
hasShouldBeginRadioPlayback
TB,N,V_shouldBeginRadioPlayback
hasPlaybackQueueInsertionPosition
Ti,N,V_playbackQueueInsertionPosition
hasContentItemID
T@"NSString",&,N,V_contentItemID
hasPlaybackQueueOffset
Ti,N,V_playbackQueueOffset
hasPlaybackQueueDestinationOffset
Ti,N,V_playbackQueueDestinationOffset
hasLanguageOption
T@"NSData",&,N,V_languageOption
hasPlaybackQueueContext
T@"NSData",&,N,V_playbackQueueContext
hasInsertAfterContentItemID
T@"NSString",&,N,V_insertAfterContentItemID
hasNowPlayingContentItemID
T@"NSString",&,N,V_nowPlayingContentItemID
hasReplaceIntent
Ti,N,V_replaceIntent
NonDestructive
ClearUpNext
KeepUpNext
sendError
results
dataExchangeBlock
T@?,C,N,V_dataExchangeBlock
showSetupCodeBlock
T@?,C,N,V_showSetupCodeBlock
hideSetupCodeBlock
T@?,C,N,V_hideSetupCodeBlock
promptForSetupCodeBlock
T@?,C,N,V_promptForSetupCodeBlock
exchangeCompleteBlock
T@?,C,N,V_exchangeCompleteBlock
kMRMediaRemoteCommandInfoPreferredIntervalsKey
kMRMediaRemoteCommandInfoIsActiveKey
kMRMediaRemoteCommandInfoLocalizedTitleKey
kMRMediaRemoteCommandInfoLocalizedShortTitleKey
kMRMediaRemoteCommandInfoMinimumRatingKey
kMRMediaRemoteCommandInfoMaximumRatingKey
kMRMediaRemoteCommandInfoSupportedPlaybackRates
kMRMediaRemoteCommandInfoPresentationStyleKey
kMRMediaRemoteCommandInfoCanBeControlledByScrubbingKey
kMRMediaRemoteCommandInfoSupportedInsertionPositions
kMRMediaRemoteCommandInfoPreservesShuffleModeKey
kMRMediaRemoteCommandInfoPreservesRepeatModeKey
kMRMediaRemoteCommandInfoSupportedShuffleModes
kMRMediaRemoteCommandInfoSupportedRepeatModes
kMRMediaRemoteCommandInfoPurchaseCommandState
kMRMediaRemoteCommandInfoRepeatMode
kMRMediaRemoteCommandInfoShuffleMode
kMRMediaRemoteCommandInfoNumberOfAvailableSkips
kMRMediaRemoteCommandInfoSkipFrequency
kMRMediaRemoteCommandInfoSkipInterval
kMRMediaRemoteCommandInfoPlaybackQueueType
kMRMediaRemoteCommandInfoSpecializedQueues
kMRMediaRemoteCommandInfoSupportedPlaybackQueueTypes
kMRMediaRemoteCommandInfoSupportedCustomPlaybackQueueIdentifiers
kMRMediaRemoteCommandInfoSupportsSharedQueue
kCommandInfoCommandKey
kCommandInfoEnabledKey
kCommandInfoOptionsKey
MRMediaRemoteCommandInfo
<MRMediaRemoteCommandInfo: %p, %@, enabled = %d, options = %@>
_kMRErrorRepErrorCodeKey
_kMRErrorRepErrorDomainKey
_kMRErrorRepErrorUserInfoKey
com.apple.mobileipod
SiriShouldRouteCommandsToLegacyMusicApplication
mediaremoted
%@, 
<null>
No Error
Invalid Operation
Operation not permitted
Client does not exist
Origin does not exist
Unsupported operation
Failed to set picked route
Failed to register custom origin
Failed to remove custom origin
The application activity does not exist
The app has not setup a browsable content endpoint
The requested browsable content API is not supported by the application.
The notfication has not been whitelisted by the server.
Operation requires a client callback to have been registered.
Operation requires a client data source to have been registered.
Requested data is out of date and should be requested again
The device's enforced volume limit has been exceeded. The system will ignore the volume adjustment until overridden.
Volume value is out of range (must be between 0.0 and 1.0, where 1.0 is the loudest).
Volume is already at the maximum value.
Volume is already muted.
Voice input endpoint does not exist.
The voice input device is not registered or does not exist.
Encryption failure.
Failed to connect to remote device.
Authentication token is invalid.
Recording session is already in progress on this device.
The device is not currently recording.
The client has disconnected.
The server has disconnected.
The connection has been cancelled by the client.
Pairing functionality is locked due to security reasons.
The client's operating system version is too old.
The client's application version is too old.
The device is not paired
The pin pairing dialog was removed by the user before pairing occoured
The pin pairing dialog was removed by a timeout before pairing occoured
The connection timedout
Pairing with this device is blocked
The device is going to sleep
The client's application cancelled the operation.
The operation timed out.
The specified player path object was invalid.
Adding or removing devices from the AV output context has failed.
The specified now playing player does not exist.
The specified content item does not exist.
The specified offset is invalid.
The specified output context is invalid.
One or more specified output devices are not groupable.
The specified output context does not support adding more than one output device.
Unknown Error
<CFDictionary %p {
%@ = %llu
%@ = %@
Library
MediaRemoteTelevisionDeviceInfoIdentifier.plist
%@...%@:%lu bytes
%02d:%02d:%02d (%lf)
notifications
T@"NSMutableArray",&,N,V_notifications
userInfos
T@"NSMutableArray",&,N,V_userInfos
playerPaths
T@"NSMutableArray",&,N,V_playerPaths
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Core/MRTransaction.m
Required Info for Transaction Packet Not Available
Appending packets with different properties
Write Position: %lu greater than data length %lu
Next Write Pos: %lu greater than data length %lu
Key = %@, Identifier = %@, TotalLength = %lu, ActualLength = %lu,
Total Write Position: %lu greater than total length %lu
Write Position %lu + Write Length %lu greater than data length %lu
Length and Postion will cause overflow
T@"NSData",R,&,N,V_data
T@"_MRTransactionKeyProtobuf",R,&,N,V_key
T@"_MRTransactionPacketProtobuf",R,N
writeLength
TI,N,V_writeLength
writePosition
TI,R,N,V_writePosition
actualLength
TI,R,N,V_totalLength
TI,R,N,V_totalWritePosition
readComplete
TB,R,N,GisReadComplete
writeComplete
TB,R,N,GisWriteComplete
Current Length greater than total length
Duplicate total write positions %ld
i12@?0@"MRTransactionPacket"4@"MRTransactionPacket"8
MRXPC_TRANSACTION_DATA_REQUESTED_SIZE
requested size is 0
MRXPC_TRANSACTION_DATA
MRXPC_TRANSACTION_ENDED
v12@?0@"NSArray"4B8
TQ,R,N,V_name
com.apple.MediaRemote.transactionDestinationQueue
-[MRTransactionDestination packetsFromMessage:completion:]
ContentItemMetadataChanged
ContentItemInfoChanged
ContentItemLyricsChanged
ContentItemLanguageOptionsChanged
ContentItemSectionsChanged
ContentItemArtworkChanged
PlaybackQueueRequest
@16@?0@"NSDictionary"4@"NSString"8@12
@16@?0@"PBCodable"4@"NSString"8@12
unimplemented protocol message type
Message Sent
Message Purged
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lul
Priority: %lul
Message: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/ProtocolMessages/MRProtocolMessage.m
Message does not have a valid type. Did you forget to implement the type method?
underlyingCodableMessage
T@"PBCodable",&,N,V_underlyingCodableMessage
T@"NSString",C,N,V_identifier
error
T@"NSError",C,N,V_error
protobufData
encryptionType
priority
shouldLog
messageSentCallbacks
T@"MSVMultiCallback",R,N,V_messageSentCallbacks
messagePurgedCallbacks
T@"MSVMultiCallback",R,N,V_messagePurgedCallbacks
lastSupportedMessageType
TI,R,N,V_lastSupportedMessageType
T@"NSMutableArray",&,N,V_packets
localizedModelName
systemBuildVersion
applicationBundleIdentifier
applicationBundleVersion
protocolVersion
supportsSystemPairing
allowsPairing
connected
systemMediaApplication
supportsACL
bluetoothAddress
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,N,V_name
hasLocalizedModelName
T@"NSString",&,N,V_localizedModelName
hasSystemBuildVersion
T@"NSString",&,N,V_systemBuildVersion
hasApplicationBundleIdentifier
T@"NSString",&,N,V_applicationBundleIdentifier
hasApplicationBundleVersion
T@"NSString",&,N,V_applicationBundleVersion
hasProtocolVersion
TQ,N,V_protocolVersion
hasLastSupportedMessageType
TI,N,V_lastSupportedMessageType
hasSupportsSystemPairing
TB,N,V_supportsSystemPairing
hasAllowsPairing
TB,N,V_allowsPairing
hasConnected
TB,N,V_connected
hasSystemMediaApplication
T@"NSString",&,N,V_systemMediaApplication
hasSupportsACL
TB,N,V_supportsACL
hasBluetoothAddress
T@"NSData",&,N,V_bluetoothAddress
deviceDescriptor
T@"MRVirtualTouchDeviceDescriptor",R,C,N
(System Media Application)
com.apple.NanoMusic
com.apple.TVMusic
com.apple.Music
com.apple.iTunes
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.accessibility.describes-video
public.easy-to-read
public.translation
public.translation.dubbed
public.translation.voice-over
kMRLanguageOptionLanguageTag
kMRLanguageOptionType
KMRLanguageOptionCharacteristics
kMRLanguageOptionDefaultSelection
kMRLanguageOptionAllowEmptySelection
kMRLanguageOptions
kMRLanguageOptionDisplayName
kMRLanguageOptionIdentifier
__AUTO__
MRLanguageOptionTypeAudible
MRLanguageOptionTypeLegible
hidEventData
hasHidEventData
T@"NSData",&,N,V_hidEventData
autocapitalizationType
keyboardType
returnKeyType
autocorrection
spellchecking
enablesReturnKeyAutomatically
secureTextEntry
validTextRangeLocation
validTextRangeLength
PINEntrySeparatorIndexes
hasAutocapitalizationType
Ti,N,V_autocapitalizationType
hasKeyboardType
Ti,N,V_keyboardType
hasReturnKeyType
Ti,N,V_returnKeyType
hasAutocorrection
TB,N,V_autocorrection
hasSpellchecking
TB,N,V_spellchecking
hasEnablesReturnKeyAutomatically
TB,N,V_enablesReturnKeyAutomatically
hasSecureTextEntry
TB,N,V_secureTextEntry
hasValidTextRangeLocation
TQ,N,V_validTextRangeLocation
hasValidTextRangeLength
TQ,N,V_validTextRangeLength
pINEntrySeparatorIndexesCount
pINEntrySeparatorIndexes
T^Q,R,N
Words
Sentences
AllCharacters
ASCIICapable
NumbersAndPunctuation
NumberPad
PhonePad
NamePhonePad
EmailAddress
DecimalPad
Twitter
WebSearch
Alphabet
PasscodePad
Google
Join
Next
Route
Search
Send
Yahoo
Done
EmergencyCall
Continue
-[MRNowPlayingPlayerClientCallbacks initWithPlayerPath:queue:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Core/MRNowPlayingPlayerClientCallbacks.m
^v8@?0^v4
^v8@?0^{__CFString=}4
^v8@?0l4
^v12@?0^{__CFArray=}4^v8
T^v,R,N,V_context
hasPlaybackQueueCallbacks
capabilities
createPlaybackQueueForRequestCallback
T@?,R,N
createItemForIdentifierCallback
createItemForOffsetCallback
createChildItemCallback
metadataCallbacks
languageOptionsCallbacks
infoCallbacks
lyricsCallbacks
artworkCallbacks
beginLyricsEventCallback
endLyricsEventCallback
commandHandlerBlocks
T@"NSArray",R,C,N
videoThumbnailsCallback
audioAmplitudeSamplesCallback
T@,C,N,V_block
count
callbacks
kMRNowPlayingClientDataUserInfoKey
kMRNowPlayingClientUserInfoKey
kMRNowPlayingPlayerUserInfoKey
kMRNowPlayingPlayerDataUserInfoKey
kMRNowPlayingPlayerPathUserInfoKey
kMRNowPlayingPlayerPathDataUserInfoKey
kMRActiveNowPlayingPlayerPathUserInfoKey
kMRActiveNowPlayingPlayerPathDataUserInfoKey
mediaremotetool
v12@?0^v4B8
%@-%d
origin-%d/client-%@/player-%@
MediaRemote-DefaultPlayer
Default Player
resolvePlayerPath
void MRMediaRemoteNowPlayingResolvePlayerPath(MRNowPlayingPlayerPathRef, dispatch_queue_t, void (^)(MRNowPlayingPlayerPathRef, CFErrorRef))
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/NowPlaying/MRNowPlayingPlayerPath.m
Non-resolved activePlayerPath cached
point = {%f, %f}
phase = %@
timestamp = %llu
finger = %u
usagePage = %u
usage = %u
down = %s
kMRMediaRemoteApplicationFinishedLoadingContentNotification
kMRMediaRemoteApplicationInvalidatedBrowsableContentDataSourceNotification
kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
kMRMediaRemoteContentItemsUpdatedNotification
kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
kMRMediaRemoteBrowsableContentErrorLocalizedDescriptionKey
kMRMediaRemoteBrowsableContentErrorCodeKey
kMRMediaRemoteBrowsableContentErrorDomainKey
kMRMediaRemoteIndexPathDataUserInfoKey
kMRMediaRemoteBrowsableContentBundleIdentifierUserInfoKey
kMRMediaRemoteBrowsableContentEndpointChangedNotification
kMRMediaRemoteBrowsableContentAPIChangedNotification
Boolean MRMediaRemoteApplicationSupportsBrowsableContent(CFStringRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/BrowsableContent/MRBrowsableContent.m
bundleID
com.apple.developer.playable-content
UIBrowsableContentSupportsSectionedBrowsing
UIBrowsableContentSupportsImmediatePlayback
v8@?0B4
v12@?0Q4
BeginLoadingContent
PlaybackProgress
ContentFetching
InitiatePlayback
InitializePlaybackQueue
ContextChanges
(%@)
(None)
kMRAVEndpointExternalDeviceInvalidatedNotification
kMRMediaRemoteActiveSystemEndpointDidChangeNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Advanced Routing/MRAVEndpoint.m
Attempted to initialize an endpoint with an empty array of output devices
<%@ %p
 outputDevices = %@>
externalDevice
T@"MRExternalDevice",&,N,V_externalDevice
designatedGroupLeader
T@"MRAVOutputDevice",&,N,V_designatedGroupLeader
localizedName
T@"NSString",&,N,V_localizedName
T@"NSArray",C,N,V_outputDevices
localEndpoint
TB,R,N,GisLocalEndpoint
v16@?0^{__CFArray=}4^v8^{__CFError=}12
v8@?0^{__CFString=}4
v16@?0@"NSNumber"4@"NSString"8^B12
%@ %p {
  playerPath = %@
  revision = %@
  requests = %@
  cache = %@
  offsets = %@
lookup
%@ %p {
playerRequests = %@
playbackQueueClients
inputModeFlags
hasInputModeFlags
Ti,N,V_inputModeFlags
Motion
Buttons
Digitizer
dPadX
dPadY
leftShoulder
rightShoulder
leftThumbstickX
leftThumbstickY
rightThumbstickX
rightThumbstickY
leftTrigger
rightTrigger
pause
hasDPadX
Tf,N,V_dPadX
hasDPadY
Tf,N,V_dPadY
hasA
Tf,N,V_a
hasB
Tf,N,V_b
hasLeftShoulder
Tf,N,V_leftShoulder
hasRightShoulder
Tf,N,V_rightShoulder
hasLeftThumbstickX
Tf,N,V_leftThumbstickX
hasLeftThumbstickY
Tf,N,V_leftThumbstickY
hasRightThumbstickX
Tf,N,V_rightThumbstickX
hasRightThumbstickY
Tf,N,V_rightThumbstickY
hasLeftTrigger
Tf,N,V_leftTrigger
hasRightTrigger
Tf,N,V_rightTrigger
hasPause
Tf,N,V_pause
imageData
T@"NSData",R,C,N,V_imageData
mimeType
T@"NSString",R,C,N,V_mimeType
Origin: %@ Clients: %@
canBeNowPlayingApp
isOverrideApp
hardwareRemoteBehavior
TI,N,V_hardwareRemoteBehavior
routeDiscoveryMode
TI,N
applicationPickedRoutes
parentApplication
T@"NSString",C,N
visibility
T(_MRColor={?=ffff}[4f]),N
playbackQueueCallback
playbackQueueTransactionCallback
commandCallback
activeNowPlayingClient
Client: %@ Players: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Core/MRNowPlayingOriginClient.m
Trying to create client wih unresolved player path
f8@?0i4
@"NSArray"4@?0
v16@?0@"NSNumber"4I8^B12
f12@?0@"NSNumber"4@"NSArray"8
v16@?0@"NSNumber"4@"NSArray"8^B12
PlayerPath: %@ Supported Commands: %@ PlaybackQueue %@
T@"NSDictionary",C,N
T@"MRNowPlayingArtwork",&,N
invalidatationTimestamp
Td,N
nowPlayingContentItem
clientCallbacks
T@"MRNowPlayingPlayerClientCallbacks",R,N,V_clientCallbacks
AVAudioSession
/System/Library/PrivateFrameworks/Celestial.framework/Celestial
AVAudioSessionMediaServicesWereResetNotification
MRGenericMessageSetNameKey
kMRMediaRemoteUpdatedContentItemsUserInfoKey
kMRMediaRemoteUpdatedNowPlayingIdentifiersInfoKey
kMRMediaRemoteUpdatedContentItemsDataUserInfoKey
void MRContentItemSetTitle(MRContentItemRef, CFStringRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/BrowsableContent/MRContentItem.m
Type mismatch, expecting %@ found %@
B12@?0@"_MRContentItemProtobuf"4^v8
void MRContentItemSetSubtitle(MRContentItemRef, CFStringRef)
void MRContentItemSetAlbumName(MRContentItemRef, CFStringRef)
void MRContentItemSetTrackArtistName(MRContentItemRef, CFStringRef)
void MRContentItemSetAlbumArtistName(MRContentItemRef, CFStringRef)
void MRContentItemSetSeriesName(MRContentItemRef, CFStringRef)
void MRContentItemSetDirectorName(MRContentItemRef, CFStringRef)
void MRContentItemSetComposer(MRContentItemRef, CFStringRef)
void MRContentItemSetGenre(MRContentItemRef, CFStringRef)
void MRContentItemSetLocalizedContentRating(MRContentItemRef, CFStringRef)
void MRContentItemSetArtworkIdentifier(MRContentItemRef, CFStringRef)
void MRContentItemSetArtworkMIMEType(MRContentItemRef, CFStringRef)
void MRContentItemSetArtworkURL(MRContentItemRef, CFStringRef)
void MRContentItemSetLyricsURL(MRContentItemRef, CFStringRef)
void MRContentItemSetRadioStationName(MRContentItemRef, CFStringRef)
void MRContentItemSetRadioStationString(MRContentItemRef, CFStringRef)
void MRContentItemSetCollectionIdentifier(MRContentItemRef, CFStringRef)
void MRContentItemSetContentIdentifier(MRContentItemRef, CFStringRef)
void MRContentItemSetServiceIdentifier(MRContentItemRef, CFStringRef)
void MRContentItemSetProfileIdentifier(MRContentItemRef, CFStringRef)
MRContentItemRef MRContentItemCreate(CFAllocatorRef, CFStringRef)
item:<%@/%@>
com.apple.mediaremote.contentItemQueue
appMetrics
collectionInfo
custom: currentPlaybackDate
deviceSpecificUserInfo
custom: delta
custom: remainingTime
custom: calculatedElapsedTime
Can't calculate. Missing %@
assetURL
T@"NSURL",C,N
currentPlaybackDate
T@"NSDate",C,N
itemMetadata
T@"MRContentItemMetadata",R,N
hasCurrentLanguageOptions
hasAvailableLanguageOptions
kMRVirtualVoiceInputDeviceIDUserInfoKey
kMRVirtualVoiceInputRecordingStateUserInfoKey
kMRVirtualVoiceInputRecordingStateDidChangeNotification
com.apple.MRVVIClient
com.apple.GameController.gamecontrollerd
v16@?0@"NSNumber"4@"MRGameControllerDelayedEvent"8^B12
lastDownEvent
TQ,N,V_lastDownEvent
sendEventBlock
T@?,C,N,V_sendEventBlock
kMRGameControllerDaemonProxyInterrupted
kMRGameControllerDaemonProxyGameControllerDidChangeNotification
kMRGameControllerDaemonProxyGameControllerPropertiesUserInfoKey
deviceIDsCount
T@"MRTextEditingAttributes",R,N
controller
T@"NSObject",&,N,V_controller
Ti,R,N,V_profile
Td,N,V_buttonAUpDelay
T@"<MREmulatedGameControllerDelegate>",N,V_delegate
userProvided
T@"NSString",&,N,V_lyrics
hasUserProvided
TB,N,V_userProvided
InputStream
OutputStream
Message Received
SocketSetQoS
T@"NSInputStream",R,N,V_inputStream
T@"NSOutputStream",R,N,V_outputStream
streamsAreValid
registeredToNowPlayingUpdates
TB,N,V_registeredToNowPlayingUpdates
registeredToNowPlayingArtworkUpdates
TB,N,V_registeredToNowPlayingArtworkUpdates
registeredVolumeControlAvailabilityUpdates
TB,N,V_registeredVolumeControlAvailabilityUpdates
registeredKeyboardUpdates
TB,N,V_registeredKeyboardUpdates
voiceRecordingState
TI,N,V_voiceRecordingState
T@"<MRExternalClientConnectionDelegate>",N,V_delegate
cryptoSession
T@"MRCryptoPairingSession",&,N,V_cryptoSession
cryptoEnabled
TB,N,V_cryptoEnabled
allowEmptySelection
defaultLanguageOption
languageOptions
hasAllowEmptySelection
TB,N,V_allowEmptySelection
hasDefaultLanguageOption
T@"_MRLanguageOptionProtobuf",&,N,V_defaultLanguageOption
T@"NSMutableArray",&,N,V_languageOptions
hasDeviceID
TI,N,V_deviceID
hasRecordingState
Ti,N,V_recordingState
com.apple.MediaRemote.MRNowPlayingOriginClientManager
-[MRNowPlayingOriginClientManager removeOrigin:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Core/MRNowPlayingOriginClientManager.m
-[MRNowPlayingOriginClientManager removeClient:]
MRNowPlayingPlayerPathGetClient(playerPath)
MRNowPlayingPlayerPathGetOrigin(playerPath)
-[MRNowPlayingOriginClientManager removePlayer:]
green
blue
alpha
hasRed
Tf,N,V_red
hasGreen
Tf,N,V_green
hasBlue
Tf,N,V_blue
hasAlpha
Tf,N,V_alpha
hasClient
T@"_MRNowPlayingClientProtobuf",&,N,V_client
Tl,R,N
retrying
TB,R,N,GisRetrying
isDefaultPlayer
hasIsDefaultPlayer
TB,N,V_isDefaultPlayer
MRDiagnosticRef MRDiagnosticCreate(CFDateRef, CFStringRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Core/MRDiagnostic.m
date
TB,R,N,GisAbsolute,V_absolute
TB,R,N,GisIntegratedDisplay,V_integratedDisplay
screenSize
T(_MRHIDSize={?=ff}[2f]),R,N,V_screenSize
TB,D,N,GisAbsolute
TB,D,N,GisIntegratedDisplay
T(_MRHIDSize={?=ff}[2f]),D,N
kMRMediaRemoteApplicationDidReportPlaybackErrorNotification
kMRMediaRemotePlaybackErrorApplicationUserInfoKey
kMRMediaRemotePlaybackErrorUserInfoKey
kMRMediaRemotePlaybackErrorReasonUserInfoKey
_kMRMediaRemotePlaybackErrorDataUserInfoKey
com.apple.LegacyMusic
<%@ %p "%@" secure=%@>
T@"NSString",R,N,V_title
T@"NSString",R,N,V_prompt
T{_MRTextInputTraits=IIIII{?=ii}BB[10l]I},R,N,V_inputTraits
T@"NSString",C,D,N
T{_MRTextInputTraits=IIIII{?=ii}BB[10l]I},D,N
<%@ %p text="%@", attribs=%@>
TI,R,N,V_uniqueIdentifier
T@"NSString",R,N,V_text
editing
TB,R,N,GisEditing,V_editing
T@"MRTextEditingAttributes",R,N,V_attributes
TB,D,N,GisEditing
T@"MRTextEditingAttributes",&,D,N
matchingOutputDeviceUIDsSet
T@"NSSet",&,N,V_matchingOutputDeviceUIDsSet
discoverySession
T@"MRAVRoutingDiscoverySession",&,N,V_discoverySession
discoverySessionCallbackToken
T@,&,N,V_discoverySessionCallbackToken
T@?,C,N,V_callback
timeoutTimer
T@"NSTimer",&,N,V_timeoutTimer
searchInProgress
TB,N,V_searchInProgress
matchingDevicesFound
T@"NSMutableSet",&,N,V_matchingDevicesFound
unanimousEndpoint
T@"MRAVEndpoint",&,N,V_unanimousEndpoint
matchingOutputDeviceUIDs
v16@?0@"NSArray"4@"MRAVEndpoint"8@"NSError"12
motion
buttons
digitizer
hasMotion
T@"_MRGameControllerMotionProtobuf",&,N,V_motion
hasButtons
T@"_MRGameControllerButtonsProtobuf",&,N,V_buttons
hasDigitizer
T@"_MRGameControllerDigitizerProtobuf",&,N,V_digitizer
dataBlock
hasDataBlock
T@"_MRAudioDataBlockProtobuf",&,N,V_dataBlock
kMRMediaRemoteExternalScreenTypeDidChangeNotification
kMRMediaRemotePickableRoutesDidChangeNotification
kMRMediaRemoteRouteStatusDidChangeNotification
kMRMediaRemotePickedRouteVolumeControlAvailabilityDidChangeNotification
kMRMediaRemoteWillPresentRouteAuthenticationPromptNotification
kMRMediaRemoteRouteDescriptionUserInfoKey
kMRMediaRemoteExternalScreenTypeUserInfoKey
kMRMediaRemoteRouteStatusUserInfoKey
kMRMediaRemoteRouteIsLocalDeviceRouteKey
kMRMediaRemotePickedRouteVolumeControlAvailabilityUserInfoKey
queue must be non-nil
handler must be non-nil
void MRMediaRemoteGetSavedAVRoutePassword(CFStringRef, dispatch_queue_t, void (^)(CFStringRef))
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/AirPlay/MRAVRouting.m
Disabled
Presence Scan
Detailed Scan
IgnoreIncorrectPassword
v8@?0C4
resolvedPlayerPath
notSendingTransaction
contentItems
T@"NSMutableArray",&,N,V_contentItems
hasResolvedPlayerPath
T@"_MRNowPlayingPlayerPathProtobuf",&,N,V_resolvedPlayerPath
hasNotSendingTransaction
TB,N,V_notSendingTransaction
hasImageData
T@"NSData",&,N,V_imageData
Td,N,V_time
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/Advanced Routing/Internal/MRAVIOStream.m
OutputContext already has a communication channel delegate
%@ is invalid. use %@
T@"AVOutputContext",R,N,V_outputContext
kMRApplicationActivityHasBegunNotification
kMRApplicationActivityHasEndedNotification
kMRApplicationActivityStatusDidChangeNotification
kMRApplicationActivityUserInfoKey
kMRApplicationActivityUserInfoDataKey
<%@ %p id=%@, primary=%@, secondary=%@, status=%@, creatorPID=%d, shouldPrepareAppPlaybackQueue=%@>
primaryApplicationDisplayID
secondaryApplicationDisplayID
shouldPrepareAppPlaybackQueue
creatorProcessID
T@"NSUUID",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_primaryApplicationDisplayID
T@"NSString",R,N,V_secondaryApplicationDisplayID
TB,R,N,V_shouldPrepareAppPlaybackQueue
Ti,R,N,V_status
Ti,R,N,V_creatorProcessID
TB,D,N
Ti,D,N
Initializing
Failed
hasDeviceDescriptor
T@"_MRVirtualTouchDeviceDescriptorProtobuf",&,N,V_deviceDescriptor
player
hasOrigin
T@"_MROriginProtobuf",&,N,V_origin
hasPlayer
T@"_MRNowPlayingPlayerProtobuf",&,N,V_player
gravity
userAcceleration
attitude
rotation
hasGravity
T@"_MRGameControllerAccelerationProtobuf",&,N,V_gravity
hasUserAcceleration
T@"_MRGameControllerAccelerationProtobuf",&,N,V_userAcceleration
hasAttitude
T@"_MRGameControllerAccelerationProtobuf",&,N,V_attitude
hasRotation
T@"_MRGameControllerAccelerationProtobuf",&,N,V_rotation
kMRMediaRemoteAvailableOriginsDidChangeNotification
kMRMediaRemoteActiveOriginDidChangeNotification
kMRMediaRemoteOriginDidRegisterNotification
kMRMediaRemoteOriginDidUnregisterNotification
%.1u
TI,N,V_type
characterCount
TI,N,V_characterCount
passcode
T@"NSString",C,N,V_passcode
MRProtocolMessageLogging
TB,N,V_shouldLog
<%@ %p, supportedFormats = %@, defaultFormat = %@>
T@"NSArray",R,N,V_supportedFormats
T@"NSDictionary",R,N,V_defaultFormat
T@"_MRVoiceInputDeviceDescriptorProtobuf",R,N
T@"NSArray",C,D,N
T@"NSDictionary",C,D,N
void MRVirtualVoiceInputDeviceDescriptorSetSupportedFormats(MRVirtualVoiceInputDeviceDescriptorRef, CFArrayRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-756/MediaRemote/Framework/VoiceInput/MRVirtualVoiceInputDeviceDescriptor.m
unsupported type
void MRVirtualVoiceInputDeviceDescriptorSetDefaultAudioFormat(MRVirtualVoiceInputDeviceDescriptorRef, CFDictionaryRef)
_MRVideoThumbnailRequestProtobuf
NSCopying
_MRPlaybackQueueRequestProtobuf
_MRGameControllerPropertiesMessageProtobuf
MRClientUpdatesConfigMessage
_MRLyricsEventProtobuf
_MRAudioDataBlockProtobuf
MRCoreUtilsSystemPairingSession
MRProtocolMessageQueue
MRMessageCallback
MRMessageData
MRPendingMessageQueue
_MRSetNowPlayingPlayerMessageProtobuf
MRModifyOutputContextRequestMessage
MRAudioBuffer
_MRSupportedCommandsProtobuf
MRSetStateMessage
MRSetReadyStateMessage
MRSetConnectionStateMessage
MRSetHiliteModeMessage
MRWakeDeviceMessage
MRSetNowPlayingClientMessage
MRSetNowPlayingPlayerMessage
_MRSetStateMessageProtobuf
_MRLanguageOptionProtobuf
_MRNowPlayingInfoProtobuf
_MRAudioTimeProtobuf
_MRReceivedCommandProtobuf
MRGameControllerMessage
MRGameControllerPropertiesMessage
MRRegisterGameControllerMessage
MRRegisterGameControllerResponseMessage
MRUnregisterGameControllerMessage
MRRegisterForGameControllerEventsMessage
_MRGetKeyboardSessionProtobuf
_MRContentItemProtobuf
_MRReceivedCommandAppOptionsProtobuf
_MRSetRecordingStateMessageProtobuf
_MRAVRouteQueryProtobuf
_MRSendVirtualTouchEventMessageProtobuf
MRAVOutputDevice
_MRContentItemMetadataProtobuf
_MRDiagnosticProtobuf
MRDeviceInfoMessage
MRDeviceInfoUpdateMessage
_MRSendCommandResultMessageProtobuf
MRGetKeyboardSessionMessage
_MRGetStateMessageProtobuf
_MRVoiceInputDeviceDescriptorProtobuf
_MRAudioBufferProtobuf
MRAdditions
MRProtobufSerialization
_MRPlaybackQueueCapabilitiesProtobuf
MRGetVoiceInputDevicesMessage
MRGetVoiceInputDevicesResponseMessage
MRRegisterVoiceInputDeviceMessage
MRRegisterVoiceInputDeviceResponseMessage
MRSetRecordingStateMessage
MRSendVoiceInputMessage
MRAVBufferedInputStream
MRAVBufferedOutputStream
MRAVOutputContext
MRAVOutputContextModification
MRRegisterHIDDeviceResultMessage
MRTransactionMessage
MRExternalDeviceManager
_MRCryptoPairingMessageProtobuf
MRWeakRef
_MRGenericMessageProtobuf
_MRTextInputMessageProtobuf
MRTelevisionDevice
MRVolumeControlAvailabilityMessage
_MRVirtualTouchDeviceDescriptorProtobuf
MRCryptoPairingSession
_MRSendLyricsEventMessageProtobuf
_MRVolumeControlAvailabilityProtobuf
_MRSendCommandMessageProtobuf
_MRSendHIDReportMessageProtobuf
MRSendCommandMessage
_MRTextEditingAttributesProtobuf
_MRClientUpdatesConfigurationProtobuf
MRExternalDeviceMessageMetrics
MRExternalDeviceMessageMetricsEntry
MRSendVirtualTouchEventMessage
MRSendPackedVirtualTouchEventMessage
_MRTransactionMessageProtobuf
NSCoding
MRNowPlayingOriginClientRequests
MRNowPlayingClientState
MRNowPlayingClientRequests
MRNowPlayingPlayerClientRequests
MRExternalDevice
MRExternalClientConnectionDelegate
NSObject
_MRGameControllerDigitizerProtobuf
_MRAVModifyOutputContextRequestProtobuf
MRLegacySendHIDEventMessage
MRAVRoutingDiscoverySession
MRCoreUtilsPairingSession
MRMediaRemoteAdditions
MRPlaybackQueueRequestAdditions
MRCryptoPairingIdentity
MRVirtualVoiceInputDevice
_MRSetArtworkMessageProtobuf
MRAudioDataBlock
NSMutableCopying
MRMutableAudioDataBlock
MRExternalDevicePairingSession
MRMediaRemoteServiceClient
_MRLyricsTokenProtobuf
MRSendButtonEventMessage
MRStandardCallback
_MRSetHiliteModeMessageProtobuf
_MRCommandInfoProtobuf
_MRSendButtonEventMessageProtobuf
_MROriginProtobuf
_MRKeyboardMessageProtobuf
MRPlaybackQueueRequestMessage
_MRMediaRemoteMessageProtobuf
_MRRegisterVoiceInputDeviceMessageProtobuf
_MRVirtualTouchEventProtobuf
_MRRegisterGameControllerMessageProtobuf
_MRNowPlayingClientProtobuf
MRNotificationClient
MRNotification
MRUserSettings
_MRAVAirPlaySecuritySettingsProtobuf
_MRGameControllerPropertiesProtobuf
MRContentItemRequest
_MRSendPackedVirtualTouchEventMessageProtobuf
_MRAudioStreamPacketDescriptionProtobuf
MRExternalDeviceController
NSNetServiceBrowserDelegate
NSNetServiceDelegate
MRBroadcastCommandResponse
NSSecureCoding
MRExternalDeviceTransport
MRNetServiceTransport
MRAVOutputContextTransport
_MRRegisterHIDDeviceResultMessageProtobuf
_MRGameControllerAccelerationProtobuf
_MRTelevisionControllerBlockCallback
MRTelevisionController
MRExternalDeviceControllerDelegate
_MRSetReadyStateMessageProtobuf
_MRTransactionPacketProtobuf
_MRPlaybackQueueContextProtobuf
_MRSetConnectionStateMessageProtobuf
MRAVRoutingClientController
_MRAudioFormatSettingsProtobuf
_MRCommandOptionsProtobuf
MRSendCommandResultMessage
MRCryptoPairingSessionBlockDelegate
MRCryptoPairingSessionDelegate
_MRNotificationMessageProtobuf
MRTransactionPacket
MRTransactionPacketAccumulator
MRTransactionPacketizer
MRTransactionSource
MRTransactionDestination
MRTransactionPacketAdditions
MRNotificationMessage
MRSetArtworkMessage
MRProtocolMessage
MRSupportedProtocolMessages
_MRTransactionPacketsProtobuf
_MRDeviceInfoMessageProtobuf
MRRegisterHIDDeviceMessage
MRSendLyricsEventMessage
MRLanguageOption
MRLanguageOptionGroup
_MRSendHIDEventMessageProtobuf
_MRTextInputTraitsProtobuf
MRNowPlayingPlayerClientCallbacks
MRPlaybackQueueContentItemCallback
MRPlaybackQueueContentItemCallbacks
MRPlayerPathAdditions
_MRRegisterGameControllerResponseMessageProtobuf
MRAVEndpoint
MRPlaybackQueuePlayerClient
MRPlaybackQueueClient
_MRRegisterForGameControllerEventsMessageProtobuf
_MRGameControllerButtonsProtobuf
MRNowPlayingArtwork
MRNowPlayingArtworkImage
MRNowPlayingOriginClient
MRNowPlayingClient
MRNowPlayingPlayerClient
MRTransactionSourceDelegate
MRGenericMessage
MRContentItemMetadataAdditions
MRContentItemMetadata
MRContentItemAdditions
MRContentItem
MRVVIClient
MRGameControllerDaemonProxy
GameControllerDaemonListener
GameControllerDaemonControllerListener
GameControllerDaemonRequestListener
MRGameControllerDelayedEvents
MRGameControllerDelayedEvent
_MRGetVoiceInputDevicesResponseMessageProtobuf
MRKeyboardMessage
_MRWakeDeviceMessageProtobuf
MREmulatedGameController
_MRLyricsItemProtobuf
MRExternalClientConnection
NSStreamDelegate
MSVMessageParserDelegate
MRProtocolMessageQueueDelegate
MRProtocolMessageQueueDataSource
MRTextInputMessage
_MRLanguageOptionGroupProtobuf
_MRVoiceInputDevice
MRNowPlayingOriginClientManager
_MRColorProtobuf
_MRRegisterVoiceInputDeviceResponseMessageProtobuf
_MRSetNowPlayingClientMessageProtobuf
MRCryptoPairingMessage
_MRGetVoiceInputDevicesMessageProtobuf
_MRNowPlayingPlayerProtobuf
_MRUnregisterGameControllerMessageProtobuf
MRVirtualTouchDeviceDescriptor
MRMutableVirtualTouchDeviceDescriptor
MRTextEditingAttributes
MRMutableTextEditingAttributes
MRTextEditingSession
MRMutableTextEditingSession
MRAVReconnaissanceSession
_MRGameControllerMessageProtobuf
_MRSendVoiceInputMessageProtobuf
_MRPlaybackQueueProtobuf
_MRVideoThumbnailProtobuf
MRAVInputStream
AVOutputContextCommunicationChannelDelegate
MRAVOutputStream
MRApplicationActivity
MRMutableApplicationActivity
_MRRegisterHIDDeviceMessageProtobuf
_MRTransactionKeyProtobuf
_MRNowPlayingPlayerPathProtobuf
_MRGameControllerMotionProtobuf
MRPasscodeCredentials
MRProtocolMessageLogger
MRVirtualVoiceInputDeviceDescriptor
MRMutableVirtualVoiceInputDeviceDescriptor
@12@0:4^{_NSZone=}8
v8@0:4
I8@0:4
^d8@0:4
v16@0:4d8
d12@0:4I8
v16@0:4^d8I12
v12@0:4f8
v12@0:4B8
B8@0:4
@8@0:4
B12@0:4@8
v12@0:4@8
f8@0:4
{?="list"^d"count"I"size"I}
{?="thumbnailsHeight"b1"thumbnailsWidth"b1}
#8@0:4
v12@0:4i8
@12@0:4I8
i8@0:4
d8@0:4
@"NSMutableArray"
@"_MRPlaybackQueueContextProtobuf"
@"_MRNowPlayingPlayerPathProtobuf"
@"NSString"
{?="artworkHeight"b1"artworkWidth"b1"length"b1"location"b1"includeInfo"b1"includeLanguageOptions"b1"includeLyrics"b1"includeMetadata"b1"includeSections"b1"returnContentItemAssetsInUserCompletion"b1}
v16@0:4Q8
Q8@0:4
@"_MRGameControllerPropertiesProtobuf"
{?="controllerID"b1}
@24@0:4B8B12B16B20
@"_MRLyricsTokenProtobuf"
{?="endTime"b1"startTime"b1}
@"_MRAudioBufferProtobuf"
@"_MRAudioTimeProtobuf"
{?="gain"b1}
@12@0:4^{PairingSessionPrivate=}8
^v8@0:4
^{NSMutableDictionary=#}8@0:4
^v12@0:4@8
@12@0:4^v8
v20@0:4@8@?12@16
@12@0:4@8
@"MRPendingMessageQueue"
@"NSMutableDictionary"
@"<MRProtocolMessageQueueDataSource>"
@"<MRProtocolMessageQueueDelegate>"
@16@0:4@?8@12
@?8@0:4
@"NSObject<OS_dispatch_queue>"
@16@0:4@8@?12
@"NSData"
@"MRProtocolMessage"
@16@0:4I8@12
@20@0:4I8@12@16
@20@0:4@8L12L16
@"AVAudioCompressedBuffer"
@"NSDictionary"
@12@0:4B8
v12@0:4I8
@"_MRNowPlayingInfoProtobuf"
@"_MRPlaybackQueueProtobuf"
@"_MRPlaybackQueueCapabilitiesProtobuf"
@"_MRPlaybackQueueRequestProtobuf"
@"_MRSupportedCommandsProtobuf"
{?="playbackState"b1}
{?="type"b1}
@12@0:4i8
i12@0:4@8
v16@0:4q8
q8@0:4
{?="duration"b1"elapsedTime"b1"radioStationIdentifier"b1"timestamp"b1"uniqueIdentifier"b1"playbackRate"b1"repeatMode"b1"shuffleMode"b1"isAdvertisement"b1"isAlwaysLive"b1"isExplicitTrack"b1"isMusicApp"b1}
{?="sampleRate"b1"timestamp"b1}
@"_MRReceivedCommandAppOptionsProtobuf"
@"_MRCommandOptionsProtobuf"
{?="destinationAppProcessID"b1"command"b1"originUID"b1}
@20@0:4^v8Q12
@16@0:4Q8
@"_MRLyricsItemProtobuf"
@"_MRContentItemMetadataProtobuf"
{?="launchApplication"b1}
{?="state"b1}
@"_MRVirtualTouchEventProtobuf"
{?="virtualDeviceID"b1}
@"NSLock"
@"AVOutputDevice"
{?="duration"b1"elapsedTime"b1"elapsedTimeTimestamp"b1"iTunesStoreAlbumIdentifier"b1"iTunesStoreArtistIdentifier"b1"iTunesStoreIdentifier"b1"iTunesStoreSubscriptionIdentifier"b1"inferredTimestamp"b1"radioStationIdentifier"b1"releaseDate"b1"startTime"b1"artworkDataHeight"b1"artworkDataWidth"b1"chapterCount"b1"defaultPlaybackRate"b1"discNumber"b1"downloadProgress"b1"downloadState"b1"editingStyleFlags"b1"episodeNumber"b1"mediaSubType"b1"mediaType"b1"numberOfSections"b1"playCount"b1"playbackProgress"b1"playbackRate"b1"playlistType"b1"radioStationType"b1"seasonNumber"b1"totalDiscCount"b1"totalTrackCount"b1"trackNumber"b1"artworkAvailable"b1"infoAvailable"b1"isAlwaysLive"b1"isContainer"b1"isCurrentlyPlaying"b1"isExplicitItem"b1"isInWishList"b1"isLiked"b1"isPlayable"b1"isSharable"b1"isSteerable"b1"isStreamingContent"b1"languageOptionsAvailable"b1"lyricsAvailable"b1}
{?="dateGenerated"b1}
@"MRSupportedProtocolMessages"
^I8@0:4
I12@0:4I8
v16@0:4^I8I12
{?="list"^I"count"I"size"I}
{?="errorCode"b1}
@"_MRAudioFormatSettingsProtobuf"
{?="maximumPacketSize"b1"packetCapacity"b1"packetCount"b1}
v12@0:4#8
v12@0:4@?8
{?="requestByIdentifiers"b1"requestByRange"b1"requestByRequest"b1}
@16@0:4@8I12
@"MRVirtualVoiceInputDeviceDescriptor"
@16@0:4I8I12
@32@0:4@8{?=dd}12f28
{?=dd}8@0:4
@"MRAudioDataBlock"
v16@0:4@8@12
B16@0:4@8@12
i16@0:4*8I12
B16@0:4^*8^I12
@"<NSStreamDelegate>"
@"NSRunLoop"
@"NSMutableData"
@16@0:4@8B12
@16@0:4*8I12
v20@0:4@8@12@?16
v16@0:4@8@?12
@"NSArray"
@"AVOutputContext"
@16@0:4@8@12
@"NSObject<OS_dispatch_source>"
@"MRStandardCallback"
@20@0:4I8Q12
@24@0:4Q8@16^v20
@16@0:4^v8^v12
@"NSPointerArray"
{?="state"b1"status"b1"isRetrying"b1"isUsingSystemPairing"b1}
{?="timestamp"b1"actionType"b1}
v16@0:4@?8@12
v40@0:4{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}8Q32
v20@0:4{_MRHIDButtonEvent=IIB}8
v12@0:4^{__IOHIDEvent=}8
v20@0:4^v8@12@?16
v20@0:4^v8Q12
v36@0:4I8@12{?=dd}16f32
v16@0:4I8@12
v16@0:4@8I12
{?="screenSizeHeight"b1"screenSizeWidth"b1"absolute"b1"integratedDisplay"b1}
@16@0:4I8^v12
v12@0:4l8
@16@0:4@8^@12
B12@0:4^@8
@"<MRCryptoPairingSessionDelegate>"
@"_MRLyricsEventProtobuf"
{?="volumeControlAvailable"b1}
{?="command"b1}
@20@0:4I8@12^v16
@"NSDate"
@"_MRTextInputTraitsProtobuf"
{?="artworkUpdates"b1"keyboardUpdates"b1"nowPlayingUpdates"b1"volumeUpdates"b1}
@40@0:4{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}8Q32
{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}8@0:4
@"_MRTransactionPacketsProtobuf"
{?="name"b1}
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
v12@0:4^v8
v20@0:4@?8Q12
@?16@0:4Q8
v16@0:4@?8^v12
B16@0:4@8I12
v20@0:4Q8@16
@"MRPlaybackQueuePlayerClient"
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@"MRExternalClientConnection"8@"MRProtocolMessage"12
v12@0:4@"MRExternalClientConnection"8
v12@0:4^{__CFData=}8
v12@0:4^{__CFDictionary=}8
v24@0:4d8@?16@20
v28@0:4I8@12@16@20@?24
v24@0:4I8@12^v16@?20
v16@0:4^v8^v12
^v12@0:4B8
^{__CFData=}8@0:4
^{__CFDictionary=}8@0:4
@"MRExternalDeviceTransport"
@"MRExternalClientConnection"
^{__CFData=}
^{__CFDictionary=}
{?="timestamp"b1"x"b1"y"b1"touchDown"b1}
{?="outputContextType"b1}
@12@0:4^{__IOHIDEvent=}8
{_MRHIDButtonEvent=IIB}8@0:4
^{__IOHIDEvent=}
@12@0:4@?8
@"AVOutputDeviceDiscoverySession"
^{NSMutableDictionary=#}
^{NSMapTable=#}
l12@0:4@8
l16@0:4d8
@"MRPasscodeCredentials"
^{PairingSessionPrivate=}
{?="context"^v"showSetupCode_f"^?"hideSetupCode_f"^?"promptForSetupCode_f"^?"copyIdentity_f"^?"findPeer_f"^?"savePeer_f"^?"resumeRequest_f"^?"resumeResponse_f"^?}
@20@0:4@8@12@16
@16@0:4^{_NSZone=}8#12
@"MRAudioBuffer"
{?="timestamp"d"sampleRate"d}
v24@0:4{?=dd}8
v20@0:4I8B12@?16
@"MRCoreUtilsPairingSession"
@"MRCryptoPairingSessionBlockDelegate"
v16@0:4^v8@?12
^{MRMediaRemoteService=}8@0:4
@"MRAVRoutingClientController"
^{MRMediaRemoteService=}
@"MRNotificationClient"
@20@0:4{_MRHIDButtonEvent=IIB}8
{?="hiliteMode"b1}
^f8@0:4
f12@0:4I8
v16@0:4^f8I12
^i8@0:4
i12@0:4I8
v16@0:4^i8I12
{?="list"^i"count"I"size"I}
{?="list"^f"count"I"size"I}
{?="canScrub"b1"command"b1"maximumRating"b1"minimumRating"b1"numAvailableSkips"b1"presentationStyle"b1"repeatMode"b1"shuffleMode"b1"skipFrequency"b1"skipInterval"b1"active"b1"enabled"b1"supportsSharedQueue"b1}
{?="usage"b1"usagePage"b1"buttonDown"b1}
@"_MRDeviceInfoMessageProtobuf"
{?="identifier"b1"type"b1}
@"_MRTextEditingAttributesProtobuf"
@"_MRClientUpdatesConfigurationProtobuf"
@"_MRSetConnectionStateMessageProtobuf"
@"_MRCryptoPairingMessageProtobuf"
@"_MRGameControllerMessageProtobuf"
@"_MRGameControllerPropertiesMessageProtobuf"
@"_MRGenericMessageProtobuf"
@"_MRGetKeyboardSessionProtobuf"
@"_MRGetStateMessageProtobuf"
@"_MRGetVoiceInputDevicesMessageProtobuf"
@"_MRGetVoiceInputDevicesResponseMessageProtobuf"
@"_MRKeyboardMessageProtobuf"
@"_MRAVModifyOutputContextRequestProtobuf"
@"_MRNotificationMessageProtobuf"
@"_MRSetReadyStateMessageProtobuf"
@"_MRRegisterForGameControllerEventsMessageProtobuf"
@"_MRRegisterGameControllerMessageProtobuf"
@"_MRRegisterGameControllerResponseMessageProtobuf"
@"_MRRegisterHIDDeviceMessageProtobuf"
@"_MRRegisterHIDDeviceResultMessageProtobuf"
@"_MRRegisterVoiceInputDeviceMessageProtobuf"
@"_MRRegisterVoiceInputDeviceResponseMessageProtobuf"
@"_MRSendButtonEventMessageProtobuf"
@"_MRSendCommandMessageProtobuf"
@"_MRSendCommandResultMessageProtobuf"
@"_MRSendHIDEventMessageProtobuf"
@"_MRSendHIDReportMessageProtobuf"
@"_MRSendLyricsEventMessageProtobuf"
@"_MRSendPackedVirtualTouchEventMessageProtobuf"
@"_MRSendVirtualTouchEventMessageProtobuf"
@"_MRSendVoiceInputMessageProtobuf"
@"_MRSetArtworkMessageProtobuf"
@"_MRSetHiliteModeMessageProtobuf"
@"_MRSetNowPlayingClientMessageProtobuf"
@"_MRSetNowPlayingPlayerMessageProtobuf"
@"_MRSetRecordingStateMessageProtobuf"
@"_MRSetStateMessageProtobuf"
@"_MRTextInputMessageProtobuf"
@"_MRTransactionMessageProtobuf"
@"_MRUnregisterGameControllerMessageProtobuf"
@"_MRVolumeControlAvailabilityProtobuf"
@"_MRWakeDeviceMessageProtobuf"
{?="timestamp"b1"errorCode"b1"type"b1}
@"_MRVoiceInputDeviceDescriptorProtobuf"
{?="x"b1"y"b1"finger"b1"phase"b1}
@"_MRColorProtobuf"
{?="nowPlayingVisibility"b1"processIdentifier"b1"processUserIdentifier"b1}
B20@0:4@8@12@16
@"NSOrderedSet"
@"NSObject<OS_xpc_object>"
B16@0:4@8B12
d20@0:4@8d12
i16@0:4@8i12
@"NSUserDefaults"
{?="securityType"b1}
{?="buttonAUpDelay"b1"playerIndex"b1"profile"b1"supportsExtendedMotion"b1}
{?="startOffset"b1"dataByteSize"b1"variableFramesInPacket"b1}
v20@0:4@8@12B16
v12@0:4@"NSNetServiceBrowser"8
v16@0:4@"NSNetServiceBrowser"8@"NSDictionary"12
v20@0:4@"NSNetServiceBrowser"8@"NSString"12B16
v20@0:4@"NSNetServiceBrowser"8@"NSNetService"12B16
v20@0:4@8@12@16
v12@0:4@"NSNetService"8
v16@0:4@"NSNetService"8@"NSDictionary"12
v16@0:4@"NSNetService"8@"NSData"12
v20@0:4@"NSNetService"8@"NSInputStream"12@"NSOutputStream"16
@"NSNetServiceBrowser"
@"NSMutableSet"
@"<MRExternalDeviceControllerDelegate>"
@20@0:4i8@12@16
B16@0:4^@8^@12
@"NSNetService"
@"MRAVInputStream"
@"MRAVOutputStream"
{?="deviceIdentifier"b1"errorCode"b1}
{?="w"b1"x"b1"y"b1"z"b1}
v16@0:4@"MRExternalDeviceController"8@"MRExternalDevice"12
@"_MRTelevisionControllerBlockCallback"
@"_MRTransactionKeyProtobuf"
{?="totalLength"b1"totalWritePosition"b1}
@12@0:4^{MRMediaRemoteService=}8
{?="playbackPosition"b1"radioStationID"b1"trackID"b1"playbackQueueDestinationOffset"b1"playbackQueueInsertionPosition"b1"playbackQueueOffset"b1"playbackRate"b1"rating"b1"repeatMode"b1"replaceIntent"b1"sendOptions"b1"shuffleMode"b1"skipInterval"b1"externalPlayerCommand"b1"negative"b1"requestDefermentToPlaybackQueuePosition"b1"shouldBeginRadioPlayback"b1"shouldOverrideManuallyCuratedQueue"b1}
v24@0:4@8d12@?20
v16@0:4@"MRCryptoPairingSession"8@"NSData"12
v16@0:4@"MRCryptoPairingSession"8@"NSString"12
v12@0:4@"MRCryptoPairingSession"8
v24@0:4@"MRCryptoPairingSession"8d12@?<v@?@"NSString">20
v16@0:4@"MRCryptoPairingSession"8@"NSError"12
@16@0:4@8^{_MRTransactionKeyProtobuf=#@@}12
^{_MRTransactionKeyProtobuf=#@@}8@0:4
^{_MRTransactionKeyProtobuf=#@@}
@"NSMutableOrderedSet"
v20@0:4@8I12@?16
@28@0:4Q8^v16@20@24
@"MRTransactionPacketizer"
@"<MRTransactionSourceDelegate>"
@20@0:4Q8^v16
@"PBCodable"
@"NSError"
@"MSVMultiCallback"
B12@0:4I8
{?="protocolVersion"b1"lastSupportedMessageType"b1"allowsPairing"b1"connected"b1"supportsACL"b1"supportsExtendedMotion"b1"supportsSharedQueue"b1"supportsSystemPairing"b1}
@"MRVirtualTouchDeviceDescriptor"
^Q8@0:4
Q12@0:4I8
v16@0:4^Q8I12
{?="list"^Q"count"I"size"I}
{?="validTextRangeLength"b1"validTextRangeLocation"b1"autocapitalizationType"b1"keyboardType"b1"returnKeyType"b1"autocorrection"b1"enablesReturnKeyAutomatically"b1"secureTextEntry"b1"spellchecking"b1}
@16@0:4^v8@12
^v20@0:4@8^@12B16
^v16@0:4@?8B12
B12@0:4^v8
@"MRPlaybackQueueContentItemCallbacks"
^v16@0:4@8I12
v24@0:4@8@12@16@?20
@"MRExternalDevice"
@"MRAVOutputDevice"
^v12@0:4l8
l12@0:4^v8
^v12@0:4^v8
@16@0:4@8^v12
{?="inputModeFlags"b1}
{?="a"b1"b"b1"dPadX"b1"dPadY"b1"leftShoulder"b1"leftThumbstickX"b1"leftThumbstickY"b1"leftTrigger"b1"pause"b1"rightShoulder"b1"rightThumbstickX"b1"rightThumbstickY"b1"rightTrigger"b1"x"b1"y"b1}
v24@0:4(_MRColor={?=ffff}[4f])8
(_MRColor={?=ffff}[4f])8@0:4
(_MRColor=""{?="red"f"green"f"blue"f"alpha"f}"data"[4f])
v12@0:4@"MRTransactionSource"8
v16@0:4I8^{__CFDictionary=}12
@"MRNowPlayingArtwork"
@"MRNowPlayingPlayerClientCallbacks"
@"NSURL"
v16@0:4@?8I12
v12@0:4@"NSArray"8
^{NSObject=#}12@0:4^v8
v12@0:4^{NSObject=#}8
v28@0:4I8f12i16d20
v20@0:4I8f12i16
v32@0:4I8f12f16Q20B28
v32@0:4I8f12f16f20f24i28
B28@0:4I8f12i16d20
v28@0:4f8f12Q16B24
@"NSXPCConnection"
@"MRGameControllerDelayedEvents"
@20@0:4Q8i16
v20@0:4Q8i16
@24@0:4I8@12@16@20
@"MRTextEditingAttributes"
^{NSObject=#}8@0:4
@"MRGameControllerDaemonProxy"
@"<MREmulatedGameControllerDelegate>"
^{NSObject=#}
{?="userProvided"b1}
v16@0:4@"NSStream"8I12
v16@0:4@"MSVMessageParser"8@"NSData"12
I20@0:4@8@12i16
I20@0:4@"MRProtocolMessageQueue"8@"NSData"12i16
@"NSData"16@0:4@"MRProtocolMessageQueue"8@"MRProtocolMessage"12
@"MSVMessageParser"
@"MRProtocolMessageQueue"
@"NSInputStream"
@"NSOutputStream"
@"<MRExternalClientConnectionDelegate>"
@"MRCryptoPairingSession"
@"_MRLanguageOptionProtobuf"
{?="allowEmptySelection"b1}
{?="deviceID"b1"recordingState"b1}
{?="alpha"b1"blue"b1"green"b1"red"b1}
{?="deviceID"b1"errorCode"b1}
@"_MRNowPlayingClientProtobuf"
@16@0:4@8l12
@28@0:4@8l12B16B20I24
l8@0:4
{?="isDefaultPlayer"b1}
(_MRHIDSize={?=ff}[2f])8@0:4
(_MRHIDSize=""{?="width"f"height"f}"data"[2f])
v16@0:4(_MRHIDSize={?=ff}[2f])8
{_MRTextInputTraits=IIIII{?=ii}BB[10l]I}8@0:4
{_MRTextInputTraits="autocapitalizationType"I"autocorrectionType"I"spellcheckingType"I"keyboardType"I"returnKeyType"I"validTextRange"{?="location"i"length"i}"enablesReturnKeyAutomatically"B"secureTextEntry"B"PINEntrySeparatorIndexes"[10l]"PINEntrySeparatorIndexesCount"I}
v84@0:4{_MRTextInputTraits=IIIII{?=ii}BB[10l]I}8
v20@0:4d8@?16
@"NSSet"
@"MRAVRoutingDiscoverySession"
@"NSTimer"
@"MRAVEndpoint"
@"_MRGameControllerButtonsProtobuf"
@"_MRGameControllerDigitizerProtobuf"
@"_MRGameControllerMotionProtobuf"
@"_MRAudioDataBlockProtobuf"
{?="location"b1"notSendingTransaction"b1}
{?="time"b1}
v12@0:4@"AVOutputContext"8
v20@0:4@"AVOutputContext"8@"NSData"12@"AVOutputContextCommunicationChannel"16
v16@0:4@"AVOutputContext"8@"AVOutputContextCommunicationChannel"12
i16@0:4r*8I12
@"AVOutputContextCommunicationChannel"
@"NSUUID"
@"_MRVirtualTouchDeviceDescriptorProtobuf"
@"_MROriginProtobuf"
@"_MRNowPlayingPlayerProtobuf"
@"_MRGameControllerAccelerationProtobuf"
[CryptoPairingSession(CoreUtils-System)] Pairing Device %@
[CryptoPairingSession(CoreUtils-System)] Unpairing Device %@
[CryptoPairingSession(CoreUtils-System)] Pairing Manager not available due to lacking entitlements
WARNING: Unexpected type for now playing key %{public}@ (is %{public}@, should be %{public}@). Removing from now playing info dictionary.
Request: %{public}@ %{public}@ for %{public}@
Response: %{public}@ %{public}@ returned %{public}@ with error %{public}@ for %{public}@ in %.4lf seconds
MediaRemote server disconnected.
No client-side XPC message destination routed for message with ID %lu.
Warning: Tried to stop a service that isn't running.
Setting television endpoint
Setting %lu supported commands %@
Setting playbackQueueCapabilities %@ for PlayerPath %@
Setting displayName %{public}@ for PlayerPath %@
Setting nowPlayingClient %{public}@
Setting nowPlayingPlayer %{public}@
Removing client %{public}@
Removing nowPlayingPlayer %{public}@ 
Didn't receive any pickable routes from the reply.
Didn't receive an active system route from the reply.
Error while requesting to load browsable content: %@
Client XPC message with ID %lu not handled.
No client module registered to receive message: %@
Client-side browsable content message with ID %lu not handled.
No browsable content endpoint registered to receive message: %@
WARNING: Client endpoint returned nil when requesting now playing identifiers
Client endpoint returned nil when requesting child content items.
Voice recording client message %lu not handled
No voice recording endpoint registered to receive message: %@
Television client message %lu not handled
No television endpoint registered to receive message: %@
No callback for television custom data
Agent client message %lu not handled
No agent endpoint registered to receive message: %@
Reestasblishing recording endpoint.
Reestasblishing television endpoint.
Reestasblishing agent endpoint.
MediaRemote reply error: %s
Encountered unknown protobuf key (%@) while converting to a dictionary; skipping.
[AVOutputContext] WARNING: AVF context unavailable for %@
[AVOutputContext] Requesting to set output device(s) %{public}@ on context: %{public}@
[AVOutputContext] Requesting to add output device(s) %{public}@ to context: %{public}@
[AVOutputContext] Cannot add output devices to context. One or more devices are not groupable.
[AVOutputContext] Requesting to remove output device(s) %{public}@ from context: %{public}@
[AVOutputContext] Requesting to remove all output devices from context: %{public}@
[AVOutputContext] Output devices did change notification received: %{public}@
[AVOutputContext] Output devices: %{public}@
[AVOutputContext] Output context change initiated: %{public}@
[AVOutputContext] Existing devices in context %{public}@ : %{public}@
[AVOutputContext] Setting %llu output devices on context %{public}@
[AVOutputContext] Output context modification failed. Output context doesn't support multiple devices.
[AVOutputContext] Output context modification failed. Attempted to group multiple devices where at least one is not groupable.
[AVOutputContext] WARNING: AVF context unavailable for %s
Unknown MRGameControllerEventType: %d
Received Register HID Device result with error %{public}@ and identifier: %@
Error registering HID device. %{public}@
Error fetching text editing session. %{public}@
Received Register Game Controller response with controllerID: %llu
Error registering Game Controller device. %{public}@
Connection error while sending voice input data. %{public}@
Connection error while sending wake message. %{public}@
Error sending text input message. %{public}@
Calling Client Registered Game Controller Input Mode Callback: %u
Calling Client Registered Game Controller Properties Callback
Calling Client Registered Recording State Callback: %u
Calling Client Registered Text Input Callback: %u
Calling Client Registered hilite mode Callback with %@
Unknown callback event for keyboard message: %{public}@
Sending command %{public}@ with options %{public}@ to playerPath %{public}@
Handling command locally
Client requesting to send command %{public}@ with options %{public}@ to path %{public}@
Command %{public}@ responded with error code %{public}@ and the following statuses: %{public}@
Ignoring request to send command because player path %{public}@ remains unresolved: %{public}@
Request: %{public}@ %{public}@ for %{public}@ is short-circuting
Got elapsed time change.
Registered for elapsed time changes.
Unregistered for elapsed time changes.
Got playback speed change.
Registered for playback speed changes.
Unregistered for playback speed changes.
Got repeat mode change.
Registered for repeat mode changes.
Unregistered for repeat mode changes
Got shuffle mode change.
Registered for shuffle mode changes.
Unregistered for shuffle mode changes
Removing %{public}@ for key %{public}@ for notification user info
Removing NowPlayingClientRequests for %@
Restoring Requests NowPlayingClientState for %@
Removing NowPlayingPlayerRequests for %@
Could not deserialize contentItem in %{public}@ for playerPath %{public}@
Connection requested to device %@...
Attempting to connect to device %@ but we are already in connection state %d. Ignoring connection attempt...
Connecting to device %@...
Failed to initialize IO streams using transport: %{public}@
Error loading device info for device %{public}@. %{public}@
Error opening security session for device %{public}@. %{public}@
Failed to register custom origin for TV %{public}@. %@
Exiting connection attempt due to disconnection request for %@{public}. %{public}@
Connection error while sending custom data message. %{public}@
Connection error while sending ping message. %{public}@
Unknown message attempting to be handled
External device server disconnected: %@
Requesting IO streams from transport %{public}@
Transport successfully created IO streams. input: %{public}@ output:%{public}@
Registering custom origin ID %u "%{public}@"...
Successfully registered custom origin: %@
Failed to register custom origin.
Got current deviceInfo %@
Received device info: %{public}@
Error fetching device info
Error fetching device info. %{public}@
No Connection for data exchange callback.
Session mismatch for data exchange callback %@ %@
No Connection for prompt setup callback
Session mismatch for prompt setup callback %@ %@
Pairing session locked out for %lf
No Connection for exchange complete callback.
Error with pairing session exchange. %@ %{public}@
Opening cryptography session %{public}@...
Connection error while sending playback queue request message. %{public}@
Connection error while sending begin lyrics event message. %{public}@
Calling Client Registered Connection State Callback: %u with error: %@
Calling Client Registered Pairing Callback
Calling Client Registered Name Callback with %@
Calling Client Registered pairing allowed Callback with %@
Calling Client Registered custom data Callback
Received command %{public}@ with options: %{public}@
Received command result with send error %d with results: %{public}@
Error sending remote command to device. %{public}@
Processing %lld bytes of crypto pairing data
Failed to handle crypto pairing data. %@
Handling pairing failure with OSStatus = %d
ERROR: Received crypto pairing message without an active pairing session
Device info changed %@ -> %@
[CryptoPairingSession(CoreUtils)] Failed to handle pairing exchange. %{public}@
[CryptoPairingSession(CoreUtils)] Error while encrypting data: %{public}@
[CryptoPairingSession(CoreUtils)] Error while decrypting data: %{public}@
[CryptoPairingSession(CoreUtils)] Error initializing pairing session during identity deletion. %{public}@
[CryptoPairingSession(CoreUtils)] Error deleting identity. %{public}@
[CryptoPairingSession(CoreUtils)] Error initializing pairing session. %{public}@
[CryptoPairingSession(CoreUtils)] Failed to begin pairing exchange. %{public}@
[CryptoPairingSession(CoreUtils)] Pairing device %@...
Duplicate record found for identifier %s dumping pairing
[CryptoPairingSession(CoreUtils)] Unpairing device %@
[CryptoPairingSession(CoreUtils)] Updating Peer %@
[CryptoPairingSession(CoreUtils)] Error updating peer (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Found empty extended info entry, removing it
[CryptoPairingSession(CoreUtils)] Could not delete empty entry with status %lu
[CryptoPairingSession(CoreUtils)] Requesting delegate to prompt for setup code with delay = %f
[CryptoPairingSession(CoreUtils)] Error initializing pairing session (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Pairing flags are: %u
[CryptoPairingSession(CoreUtils)] Enabling ACL for device: %{public}@
[CryptoPairingSession(CoreUtils)] Failed to resume pairing process after setting setup code. %{public}@
[CryptoPairingSession(CoreUtils)] Exchange complete. Proceeding to verify step.
[CryptoPairingSession(CoreUtils)] Failed to record successfully paired peer
[CryptoPairingSession(CoreUtils)] Error initializing verify session. %{public}@
[CryptoPairingSession(CoreUtils)] Failed to prepare data for verify exchange. %@
[CryptoPairingSession(CoreUtils)] Verify complete. Deriving encryption keys.
[CryptoPairingSession(CoreUtils)] Failed to derive input key (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Failed to derive output key (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Successfully derived encryption keys.
Cache Miss: SharedQueue not supported
Cache Miss: %{public}@ artworkWidth %ld > %ld
Cache Miss: %{public}@ artworkHeight %ld > %ld
Cache Miss: %{public}@ artwork dimensions both -1
Cache Miss: %{public}@ has no info
Cache Miss: %{public}@ has no lyrics
Cache Miss: %{public}@ has no languageOptions
Cache Miss: %{public}@ has no sections
PlaybackQueue request %{public}@ waiting for transaction...
Invalidating playback queue for player path "%{public}@"
%@ Sending contentItem: %@ for player: %@
ContentItemChanged sent with request %{public}@ for item %{public}@ triggering a request %{public}@
Sending playbackQueue transaction %{public}@ for path %{public}@
Sending artwork changed notification for %{public}@ %{public}@
PROFILE: resizing image from %lfx%lf -> %lfx%lf took %lf seconds
Ignoring now playng info update because playback queue callbacks are set
Setting identical now playing info, skipping update.
Clearing now playing info
Got artwork data of length: %lu
[CryptoPairingSession(MRExternalDevicePairingSession)] Unpairing Device %@
[CryptoPairingSession(MRExternalDevicePairingSession)] Opening Security Session in State = %ld usingSystemPairing = %s
[CryptoPairingSession(MRExternalDevicePairingSession)] System pairing success.
[CryptoPairingSession(MRExternalDevicePairingSession)] Legacy pairing success.
Posting Registered Notification %{public}@
UserInfo %{public}@
Ping acknowledged by daemon in %f seconds.
Unable to ping daemon: %{public}@
Setting cached activePlayerPath %{public}@ -> %{public}@
Removing cached activePlayerPath %{public}@
Error code %d while registering custom origin
Error code %d while removing custom origin
Context %@ does not match current context of %@. Removing offsets
Command options do not have requried source position parameters to perform command
'%@':%@ -> '%@':%@
Command options do not have requried destination position parameters to perform command
Sender sepecified %@ = %@ which is no longer the now playing item.
Sender sepecified %@ = %@. Now Playing Item = %@. Ignoring command
Requesting item %{public}@ "%{public}@" with %{public}@ at indexPath %{public}@
Error %{public}@ requesting item %{public}@ "%{public}@" with %{public}@ at indexPath %{public}@
Requesting %{public}@ Assets for item %{public}@ "%{public}@" at indexPath %{public}@
Requesting %{public}@ child  item %{public}@ "%{public}@" at indexPath %{public}@
Requesting playback queue with %{public}@
Requesting items by identifier %{public}@
Requesting items by range with identifiers %{public}@
Request %{public}@ using NowPlayingInfo to populate playback queue request %{public}@
Received Playback Queue Request %{public}@ for PlayerPath %{public}@
Error %{public}@ requesting playback queue
Got %{public}@ command for playerPath %{public}@.
Replacing activePlayer %{public}@ into unresolved playerPath %{public}@
Resolved playerPath to %{public}@ for command
There are no commandHandlers for path %{public}@
Received lyrics event %@ for PlayerPath %@
Client Registering for Now Playing Notifications
%lu clients have now registered for Now Playing Notifications
Client Unregistering for Now Playing Notifications
Receieved Notification %{public}@
No callback for Notification %{public}@ with userInfo %{public}@
Configuring external device net service browser with includesPeerToPeer = %@
Beginning network service search for %{public}@...
Stopping network service search.
Found service %{public}@
Removing service %{public}@
Resolved service %{public}@
TXTRecord data did change for service %{public}@
decoded txtData: %@
[%s] Initializing output context using output devices: %{public}@
[%s] Adding %llu devices to output context %{public}@
[%s]  | Devices already in context: %{public}@
[%s]  | Devices being added to context: %{public}@
[%s] Got output device did change notification: %{public}@
[%s] Warning: timed out while waiting for output context to add device(s). The output context may be invalid.
[%s] Output context already has all the devices we want to use.
Got Legacy DeviceID %@ from userDefaults
Opening Legacy DeviceID file: %@
Got Legacy DeviceID %@ from file %@
Removing Legacy DeviceID file %@
deviceInfo file exists but is empty, creating new deviceID
Failed to create deviceInfo file %@: %@
Failed to create deviceInfo file %@
Created deviceInfo: %@
[MRTransactionSource] Source %@ received interrupted/invalid connection to query
[MRTransactionSource] Source %@ could not extract connection
[MRTransactionSource] Source %@ could not extract reply
[MRTransactionSource] %@ sending end signal with packets %@
[MRTransactionSource] %@ sending packets: %@
[MRTransactionDestination] %@ could not extract connection
[MRTransactionDestination] %@ could not extract reply
[MRTransactionDestination] %@ received interrupted/invalid connection
[MRTransactionDestination] %@ received %@ for playerPath %@
MRLanguageOptionsCreateFromExternalRepresentation: Expecting  CFDataRef but instead found CFArrayRef of CFDataRef. Please fix by using 'MRLanguageOptionsCreateExternalRepresentation' to serialize any CFArrayRef of MRLanguageOptionRefs
MRLanguageOptionsCreateFromExternalRepresentation: After deserializing was expecting an CFArrayRef of MRLanguageOptionRef but instead found CFArrayRef of CFDataRef. Please fix by using 'MRLanguageOptionsCreateExternalRepresentation' to serialize any CFArrayRef of MRLanguageOptionRefs
MRLanguageOptionGroupsCreateFromExternalRepresentation: Expecting  CFDataRef but instead found CFArrayRef of CFDataRef. Please fix by using 'MRLanguageOptionGroupsCreateExternalRepresentation' to serialize any CFArrayRef of MRLanguageOptionGroupRefs
MRLanguageOptionGroupsCreateFromExternalRepresentation: After deserializing was expecting CFDataRef but instead found CFArrayRef of CFDataRef. Please fix by using 'MRLanguageOptionGroupsCreateExternalRepresentation' to serialize any CFArrayRef of MRLanguageOptionGroupRefs
Wrong type in MRNowPlayingPlayerPathCreateExternalRepresentation
[AVEndpoint] Endpoint's reloaded array of output devices no longer contains previously designated group leader. Reloading external device reference.
[AVEndpoint] Endpoint's reloaded array of output devices contains a real group leader, while the previously designated one was arbitrarily chosen by MediaRemote. Reloading external device reference.
[AVEndpoint] AirPlay2 is not enabled. Skipping external device initialization.
[AVEndpoint] Endpoint %{public}@ doesn't have any remote controllable devices
[AVEndpoint] Connecting to external device %@...
[AVEndpoint] Successfully connected to external device.
[AVEndpoint] Failed to connect to external device: %@
[AVEndpoint] Cannot connect to external device. This endpoint doesn't have a usable pipe.
Did not specify '%@' or '%@' for command %@
[MRPlaybackQueueClient] ContentItem %@ in playback queue does not have a queueIdentifier for command <%@>
[MRPlaybackQueueClient] '%@':%@ -> '%@':%@ for command <%@>
[MRPlaybackQueueClient] No ContentItem in playback queue with provided '%@':%@ for command <%@>
Did not specify '%@' or '%@' for command <%@>
Removing NowPlayingClient for %@
AVAudioSessionMediaServicesWereReset notification received -- restoring now playing app eligibility state
Restoring NowPlayingClientState for %@
Client %{public}@ playbackQueue cache: %{public}@
Updating client playbackQueue cache with delta item: %{public}@
Updating client cache with delta item %{public}@
MRContentItemSetAvailableLanguageOptions: Expecting a CFArrayRef of MRLanguageOptionGroupRefs but instead found a CFArrayRef of CFDataRef. Please fix.
MRContentItemSetCurrentLanguageOptions: Expecting a CFArrayRef of MRLanguageOptionRefs but instead found a CFArrayRef of CFDataRef. Please fix.
Attempting to Merge a ContentItem with itself %@
Trying to Merge incompatible ContentItems %@ != %@
[GameControllerDaemonProxy] invalidated connection to com.apple.GameController.gamecontrollerd
[GameControllerDaemonProxy] interrupted connection to com.apple.GameController.gamecontrollerd
[GameControllerDaemonProxy] Premptive Delayed event
[GameControllerDaemonProxy] Delayed event initiated
[GameControllerDaemonProxy] Sending delayed event
[EmulatedGameController] Cannot create GameControllerDaemonProxy
[EmulatedGameController] Cannot create emulated controller
[ProtocolConnection] Dealloc
[ProtocolConnection] Received raw data of length: %lld
[ProtocolConnection] %@ Error: %@
[ProtocolConnection] Stream ended. Disconnecting...
[ProtocolConnection] Crypto Error. Disconnecting...
[ProtocolConnection] Unknown message received
[ProtocolConnection] Wrote %ld bytes to socket
[ProtocolConnection] Trying to send unencrypted message that requires encryptions. Killing message
[ProtocolConnection] Disconneting due to Exception %@ in parser
[ProtocolConnection] Successfully set _kCFStreamSocketSetNoDelay = %@
[ProtocolConnection] Failed to set _kCFStreamSocketSetNoDelay property.
[ProtocolConnection] Failed to set socket QOS (errno = %d)
[ProtocolConnection] Successfully set socket QOS to %d.
[ProtocolConnection] Failed to set QOS properties on stream %@. No native socket was retrievable.
Sending Lyrics Event: %@ for PlayerPath %@
[ReconnaissanceSession] Beginning search with timeout %f
[ReconnaissanceSession] Cancelling search for session %{public}@
[ReconnaissanceSession] Session timed out after %f seconds
[ReconnaissanceSession] Successfully found matching output devices: %{public}@
[AVIOStream] InputStream received %llu bytes from communication channel: %{public}@
[AVIOStream] Output context %{public}@ closed communication channel: %{public}@
[AVIOStream] OutputStream writing %llu bytes to communication channel: %{public}@
[AVIOStream] Error sending data through channel: %{public}@
[AVIOStream] Channel not available for output context %{public}@
Setting active origin: %@
[TelevisionMessageLogger] %@ : %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
