visibilityBlock
isVisible
.cxx_destruct
cellClass
setCellClass:
cellReuseIdentifier
setCellReuseIdentifier:
setVisibilityBlock:
cellConfigurationBlock
setCellConfigurationBlock:
actionBlock
setActionBlock:
visibilityChangedBlock
setVisibilityChangedBlock:
_cellClass
_cellReuseIdentifier
_visibilityBlock
_cellConfigurationBlock
_actionBlock
_visibilityChangedBlock
initWithStyle:
addObserverDelegate:
cancelPreviousPerformRequestsWithTarget:
removeObserverDelegate:
dealloc
contentLoader
setAutomaticContentUpdatingEnabled:
view
setBackgroundColor:
tableView
contentInset
setContentOffset:
actionContentControllerWithContentView:
setShowCancelButton:
nanoMediaUIBundle
localizedStringForKey:value:table:
setCancelButtonText:
setShouldTintCancelButton:
setDelegate:
addChildViewController:
loadViewIfNeeded
didMoveToParentViewController:
_scrollToCurrentItemAnimated:completion:
presentViewController:animated:completion:
dismissAnimated:completion:
setSelectionBlock:
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
dismissViewControllerAnimated:completion:
modelResponses
firstObject
playerResponse
_playerResponse
tracklist
playingItemIndexPath
rectForRowAtIndexPath:
scrollRectToVisible:animated:
arrayWithObjects:count:
propertySetWithProperties:
alloc
dictionaryWithObjects:forKeys:count:
initWithProperties:relationships:
init
playerRequest
setQueueSectionProperties:
setQueueItemProperties:
queueItemProperties
setPlayingItemProperties:
contentLoaderDidFinishLoadingContent:
indexSet
results
type
addIndex:
enumerateSectionsUsingBlock:
_configureHeaderView
section
containsIndex:
isEqualToString:
class
playlistEntry
song
artworkCatalog
title
artist
name
isExplicitSong
localFileAsset
isNonPurgeable
storeAsset
isRedownloadable
trackNumber
podcastEpisode
episodeType
episodeNumber
seasonNumber
duration
nmu_localizedStringForSeasonNumber:episodeNumber:bonus:trailer:duration:
releaseDateComponents
date
nmu_localizedStringForReleaseDate:duration:
isExplicitEpisode
stringByAppendingString:
textLabel
setText:
setLineBreakMode:
setNumberOfLines:
detailTextLabel
playingItem
metadataObject
state
identifiers
hasCommonIdentifierWithIdentifierSet:
localizedStringWithFormat:
trackNumberLabel
setHidden:
listArtworkFormat
size
nmu_transparentImageWithSize:
imageView
setImage:
artworkLoader
artworkImageView
setImageView:artworkCatalog:placeholderName:placeholderBundle:
setNowPlayingIndicatorViewHidden:animating:
colorWithWhite:alpha:
nowPlayingIndicatorView
whiteColor
setTintColor:
trackListCloudImage
initWithImage:
setAccessoryView:
incrementTrackListTrackSelectionCountForOrigin:
deselectRowAtIndexPath:animated:
nmc_applicationPlayerPath
setPlayerPath:
setQualityOfService:
userInfo
changeItemCommand
playerResponseItem
changeToItem:
performRequest:completion:
performWithCompletion:
dataSource
modelObjectForItemAtIndexPath:
totalItemCount
sectionAtIndex:
firstItem
podcast
genericObjectWithModelObject:
author
playlist
tracksTiledArtworkCatalogWithRows:columns:
curator
deviceLibraryPersistentID
globalPlaylistID
sharedDataSource
initWithToken:dataSource:
defaultMediaLibrary
initWithLibrary:identifier:entityType:artworkType:mediaType:
artworkDataSource
areRepresentationsAvailableForCatalog:
playlistWithPersistentID:
artworkCatalogsWithMaximumCount:
setArtworkCatalogsBlock:
setNumberOfRows:
setNumberOfColumns:
setNamespaceIdentifier:
setEntityIdentifier:
album
initWithFrame:
length
trackListHeaderArtworkFormat
initWithFormat:
mainBundle
bundleIdentifier
trackListShuffleImage
setImage:forState:
setBackgroundColor:forState:
setImageTintColor:forState:
sharedPUICApplication
primaryApplicationColor
_handleShuffleButtonTapped:
addTarget:action:forControlEvents:
trackListRepeatImage
_handleRepeatButtonTapped:
_updateShuffleButtonState
_updateRepeatButtonState
initWithArrangedSubviews:
setAxis:
setSpacing:
setLayoutMargins:
setLayoutMarginsRelativeArrangement:
systemLayoutSizeFittingSize:
setBounds:
setTableHeaderView:
nowPlayingStateForOrigin:
isShuffleModeCommandSupported
shuffleMode
_updateShuffleButtonWithMode:supported:
setEnabled:
setSelected:
isRepeatModeCommandSupported
repeatMode
_updateRepeatButtonWithMode:supported:
trackListRepeatOneImage
incrementShuffleModeChangeCountForOrigin:
numberWithInt:
sendMediaRemoteCommand:toOrigin:options:launchApp:
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
incrementRepeatModeChangeCountForOrigin:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
originObserver:didUpdateNowPlayingInfoForOrigin:
originObserver:didUpdateNowPlayingApplicationBundleIdentifierForOrigin:
originObserver:didUpdatePlaybackStateForOrigin:
originObserver:didUpdateSupportedCommandsForOrigin:
originObserver:didUpdateElapsedTimeForOrigin:
originObserver:didUpdateTimestampForOrigin:
originObserver:didUpdatePlaybackQueueForOrigin:
actionContentControllerCancel:
initWithNowPlayingController:origin:
presentFromViewController:animated:completion:
modelRequestsForContentLoader:
cellReuseIdentifierForModelObject:atIndexPath:
classForCellWithReuseIdentifier:
configureCell:withModelObject:atIndexPath:
didSelectModelObject:atIndexPath:
artworkLoader:artworkCatalogForItemAtIndexPath:
selectionBlock
_shuffleButton
_repeatButton
_nowPlayingController
_origin
_albumSections
_selectionBlock
initWithLabel:group:
sharedHelper
createUpdateTransactionWithLabel:
performBlockAfterUpdates:
_group
_label
setBundleID:
setData:
setDigest:
bundleID
decodeObjectForKey:
data
digest
encodeObject:forKey:
iconWithBundleID:data:digest:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_digest
_data
_bundleID
_cachedIconWithBundleID:type:
iconImageForApplication:variant:scale:
sizeOfIconForCurrentDevice
resizeIconImage:newSize:
setCachedIcon:withType:
_cachePathForApplication:withType:
archivedDataWithRootObject:requiringSecureCoding:error:
_setCacheData:atPath:
dataWithContentsOfFile:
unarchivedObjectOfClass:fromData:error:
currentDevice
puic_deviceVariant
stringWithFormat:
stringByAppendingPathComponent:
writeToFile:atomically:
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fetchOrCreateIconWithBundleID:type:
defaultManager
_nowPlayingIndicatorView
initWithFrame:numberOfLevels:animationType:
setInterLevelSpacing:
setLevelWidth:
setMinimumLevelHeight:
setMaximumLevelHeight:
setLevelCornerRadius:
setContentMode:
addSubview:
setAutoresizingMask:
superview
bounds
setFrame:
_setNowPlayingIndicatorView:
setStopped:
nowPlayingIndicatorSize
initWithStyle:reuseIdentifier:
layoutManager
textLabelForCell:
preferredFontForTextStyle:
setFont:
setAdjustsFontForContentSizeCategory:
setTextAlignment:
_vibrantDarkFillDodgeColor
setTextColor:
_wantsTransparentBackground
_trackNumberLabel
currentCalendar
startOfDayForDate:
isEqualToDate:
_nmu_dateWithDeltaDays:
compare:
_nmu_dayOfWeekFromDate:abbreviated:
_nmu_isThisYear
_nmu_dateFormatterNoYearAbbrevMonth
stringFromDate:
_nmu_dateFormatterShortStyleWithYear
autoupdatingCurrentLocale
setLocale:
currentLocale
dateFormatFromTemplate:options:locale:
setDateFormat:
_nmu_inSameYearAs:
components:fromDate:
year
setDateStyle:
setTimeStyle:
setDay:
dateByAddingComponents:toDate:options:
nmu_nanoFriendlyDisplayString
sharedManager
localOrigin
presentRoutePickerIfNecessaryFromViewController:forOrigin:completionHandler:
presentedViewController
presentRoutePickerFromViewController:forOrigin:completionHandler:
shouldPresentRoutePickerForOrigin:audioSession:options:completionHandler:
initWithMachServiceName:options:
presentRoutePickerAlertIfNecessaryAndActivateAudioSessionID:options:completionHandler:
presentRoutePickerAlertWithCompletionHandler:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
remoteObjectProxyWithErrorHandler:
opaqueSessionID
isLocal
hasPickedVirtualAudioRoute
isSpeakerRouteEnabled
hasAvailableW1Route
incrementW1RouteAutoSelectionResult:
attemptToPickW1RouteWithAudioSession:options:completionHandler:
fetchAudioRoutesInfoWithCompletion:
incrementPlaybackRoutePickerPresentationCount
companionOrigin
_initWithOrigin:completionHandler:
_registerRoutePickerController:
copy
controllerWithOrigin:
setAutomaticallySelectsLoneAvailableRoute:
_registeredRoutePickerControllers
addObject:
removeObject:
origin
pickedVirtualAudioRoute
_deregisterRoutePickerController:
presentRoutePickerIfNecessaryFromViewController:withCompletionHandler:
presentRoutePickerAlertIfNecessaryAndActivateAudioSession:options:completionHandler:
actionSheetController:willTapActionAtIndexPath:
actionSheetController:didTapActionAtIndexPath:
actionSheetController:willDismissWithActionAtIndexPath:
actionSheetController:didDismissWithActionAtIndexPath:
_completionHandler
_airPlayActionController
currentPlaybackIntent
defaultCenter
objectForKeyedSubscript:
siriReferenceIdentifier
setCurrentPlaybackIntent:
addObserverForName:object:queue:usingBlock:
postNotificationName:object:
_startPlaybackWithIntent:preventingAutomaticPlayback:fromViewController:completionHandler:
_resumePlaybackWithIntent:fromViewController:completionHandler:
replacePlaybackQueueWhilePreventingAutomaticPlayback:completionHandler:
startPlaybackWithCompletionHandler:
_mediaRemotePlaybackQueue
_appBundleIdentifier
mediaRemoteOrigin
numberWithUnsignedInt:
containsObject:
errorWithDomain:code:userInfo:
_showCuratedQueueReplaceIntentOptionsAlertFromViewController:completionHandler:
_showConnectionFailedMessageForViewController:completionHandler:
getCompanionPlaybackQueueRepresentationWithCompletionHandler:
getRemotePlaybackQueueRepresentationWithCompletionHandler:
resumePlayback
actionWithTitle:style:actionHandler:
alertSheetControllerWithActions:title:message:style:
replacePlaybackQueueWithIntent:preventingAutomaticPlayback:fromViewController:completionHandler:
startPlaybackOfIntent:fromViewController:completionHandler:
viewDidLoad
viewControllerTitle
setTitle:
countByEnumeratingWithState:objects:count:
_setNeedsVisibleTopItemsUpdate
predicateWithBlock:
filteredArrayUsingPredicate:
visibleTopItems
count
indexPathForRow:inSection:
arrayWithCapacity:
dataSourceIndexPathForCollectionIndexPath:
numberOfSections
numberOfItemsInSection:
titleForHeaderInSection:
objectAtIndexedSubscript:
registerClass:forCellReuseIdentifier:
dequeueReusableCellWithIdentifier:forIndexPath:
hashTableWithOptions:
isViewLoaded
reloadData
setTopItems:
dataSourceIndexPathsForCollectionIndexPaths:
numberOfSectionsInTableView:
tableView:numberOfRowsInSection:
tableView:titleForHeaderInSection:
tableView:cellForRowAtIndexPath:
tableView:didSelectRowAtIndexPath:
setDataSource:
delegate
topItems
_registeredCellClasses
_visibleTopItems
_dataSource
_delegate
_topItems
_updateActivityIndicatorViewVisibility
_updateContentUnavailableViewVisibility
viewDidLayoutSubviews
tableHeaderView
frame
automaticallyAdjustsScrollViewInsets
tableFooterView
viewWillAppear:
viewDidAppear:
viewWillDisappear:
viewDidDisappear:
setCenterContentVertically:
hasFinishedLoadingContent
errors
_hideContentUnavailableView
_showActivityIndicatorView
_hideActivityIndicatorView
_showContentUnavailableView
beginUpdates
insertedSections
insertSections:withRowAnimation:
deletedSections
deleteSections:withRowAnimation:
updatedSections
reloadSections:withRowAnimation:
moveSection:toSection:
enumerateSectionMovesWithBlock:
insertedItemIndexPaths
insertRowsAtIndexPaths:withRowAnimation:
deletedItemIndexPaths
deleteRowsAtIndexPaths:withRowAnimation:
updatedItemIndexPaths
reloadRowsAtIndexPaths:withRowAnimation:
moveRowAtIndexPath:toIndexPath:
enumerateItemMovesWithBlock:
endUpdates
itemAtIndexPath:
prefetchItemsAtIndexPaths:
cancelPrefetchingForItemsAtIndexPaths:
reloadContentIfNeeded
activityIndicatorViewAddedToSuperview:
isLoadingContent
contentUnavailableImage
contentUnavailableView
contentUnavailableTitle
contentUnavailableMessage
setMessage:
tableView:prefetchRowsAtIndexPaths:
tableView:cancelPrefetchingForRowsAtIndexPaths:
modelObjectForSection:
contentLoader:didUpdateModelResponseWithChangeDetails:
contentLoaderWillBeginLoadingContent:
prepareForSnapshot
setNeedsContentLoaderUpdate
setContentLoader:
setArtworkLoader:
_activityIndicatorView
_automaticContentUpdatingEnabled
_contentUnavailableView
_contentLoader
_artworkLoader
prepareLayout
collectionView
array
numberWithInteger:
layer
setSublayerTransform:
puic_crownInputSequencer
averageCrownVelocity
puic_crownInputScrollDirection
_indexPathWithGlobalIndex:
_layoutAttributesForItemAtIndexPath:absolutePosition:
_layoutAttributesForBackViewWithAbsolutePosition:
_globalIndexWithIndexPath:
invalidateLayout
contentOffset
layoutIfNeeded
setContentOffset:animated:
integerValue
indexPathForItem:inSection:
item
layoutAttributesClass
layoutAttributesForCellWithIndexPath:
_configureLayoutAttributes:withAbsolutePosition:applyRotation:applyAlpha:
layoutAttributesForSupplementaryViewOfKind:withIndexPath:
setZIndex:
setAbsolutePosition:
setRelativePosition:
setDepthProgress:
setFlipProgress:
flipProgress
setTransform3D:
setAlpha:
shouldInvalidateLayoutForBoundsChange:
collectionViewContentSize
targetContentOffsetForProposedContentOffset:withScrollingVelocity:
layoutAttributesForElementsInRect:
layoutAttributesForItemAtIndexPath:
setHasBackView:
setBackViewRevealHeight:
isShowingBackView
scrollToItemAtIndexPath:animated:
hasBackView
backViewRevealHeight
_numberOfItemsPerSection
_numberOfSections
_numberOfItems
_hasBackView
_numberOfStackItems
_itemSize
_contentSize
_backViewRevealHeight
copyWithZone:
absolutePosition
relativePosition
depthProgress
_absolutePosition
_relativePosition
_depthProgress
_flipProgress
componentsSeparatedByString:
lastObject
_launcherNameForLaunchURLType:
_processName
_incrementScalarValueForKeyComponents:
_setScalarValue:forKeyComponents:
_viewNameForViewType:
_originNameForOrigin:
stringValue
_controlNameForControlType:
_stringForRoutePickingResult:
_feedbackActionNameFromActionType:
sharedMetricsReporter
_pushValue:forDistributionKeyComponents:
deviceInfo
componentsJoinedByString:
incrementLaunchCountForLaunchURLType:
updateTopLevelContainersCount:
updatePinnedPlaylistsCount:
updatePinnedAlbumsCount:
updatePinnedRecommendationsCount:
incrementBrowsingCountForViewType:origin:
incrementPlaybackStartCountFromViewType:origin:
incrementPlaybackStartCountFromViewType:index:origin:
incrementPlaybackShuffleAllCountFromViewType:origin:
incrementPlayButtonTapCountForOrigin:
incrementPauseButtonTapCountForOrigin:
incrementButtonTapCountForControlType:origin:
incrementAirPlayOrbTapCountForOrigin:
incrementCrownBasedVolumeControlCountForOrigin:
incrementTapBasedVolumeControlCountForOrigin:
incrementRouteSelectCountForOrigin:
incrementRouteChangeCountForOrigin:
incrementRouteSelectionResult:forOrigin:
incrementTapCountForFeedbackActionType:origin:
_queue
transportControlWithType:group:
_leftButton
setMarginValue:
_rightButton
isHighlighted
secondaryTransportControlsTrackListImage
secondaryTransportControlsMoreActionsImage
displayedPlaybackRate
transportControlsPlaybackRateImageWithRate:
defaultTransportControls
_imageForLeftTransportControl:
_imageForMiddleTransportControl:
_imageForRightTransportControl:
_updateButtonTouchHighlightProviders
_nmu_stringWithDuration:unitsStyle:
dictionary
setUnitsStyle:
setMaximumUnitCount:
setObject:forKeyedSubscript:
setAllowedUnits:
stringFromTimeInterval:
stringByReplacingOccurrencesOfString:withString:
nmu_prettyShortStringWithDuration:abbreviated:
addErrorHandler:
removeErrorHandler:
invalidate
boolValue
_alertPresentingViewControllerWithShouldPresentOnModalView:
applicationInfoForPID:completion:
_musicDidFailToPlayItem:error:errorType:
_radioDidFailToPlayItem:error:errorType:
_presentFailureWithTitle:message:
sharedApplication
window
rootViewController
topViewController
deviceSupportsMediaStreaming
sharedMonitor
networkType
domain
code
playbackController:didFailToActivateWithError:resolution:
playbackController:didFailToPlayItem:error:errorType:
playbackControllerDidPauseForLeaseEnd:
initWithPlaybackController:type:
playbackController
setPlaybackController:
setType:
_playbackController
_type
menuArtworkFormat
representedRepeatMode
intValue
representedShuffleMode
setRepresentedRepeatMode:
setRepresentedShuffleMode:
reloadActionSheet
selectedActionsDidChange
cancelButtonHeight
cancelButtonTopInset
nmu_headerViewOffsetFromScreenTop
_removeContentViewController
_addContentViewController
prepareForReuse
setContainerViewController:
setContentViewController:
didMoveToWindow
screen
scale
setRasterizationScale:
containerViewController
contentViewController
_containerViewController
_contentViewController
_handleMediaSyncInfoDidUpdateNotification:
addObserver:selector:name:object:
addObserver:
removeObserver:
removeObserver:name:object:
topLevelCollectionSyncInfoController:containerIdentifierForModelObject:
topLevelCollectionSyncInfoController:canPlayContainerWithIdentifier:modelObject:
statusForContainer:
isCharging
topLevelCollectionSyncInfoControllerCanStreamContent:
progressForContainer:
setDownloadState:dimmed:progress:animated:
_updateVisibleCellsIfNeeded
object
indexPathsForVisibleItems
cellForItemAtIndexPath:
configureCell:withModelObject:animated:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeTelephonyStatus:
initWithSyncInfo:
shouldHighlightItemWithModelObject:
canPlayContainerWithModelObject:
viewDidAppear
updateVisibleCellsIfNeeded
syncInfo
topLevelCollectionViewController
setTopLevelCollectionViewController:
_needsVisibleCellsSyncInfoUpdate
_syncInfo
_topLevelCollectionViewController
isCompanion
_displayNameWithDeviceInfo:
originTypeWatchStatusImage
originTypeCompanionStatusImage
originTypeAppleTVStatusImage
originTypeHomePodPairStatusImage
originTypeHomePodStatusImage
originTypeGenericSpeakerStatusImage
routingTypeWatchImage
routingTypeCompanionImage
routingTypeAppleTVImage
routingTypeHomePodPairImage
routingTypeHomePodImage
routingTypeGenericSpeakerImage
displayName
localizedDisplayName
localizedShortDisplayName
statusBarImage
pickerImage
_handleAvailableOriginsDidChangeNotification:
_removeUnavailableOriginViewControllersIfNecessary
viewControllers
availableOrigins
isConnected
mutableCopy
allObjects
removeObjectsInArray:
setViewControllers:animated:
_setAutomaticallyRemoveUnavailableOriginViewControllers:
manager:connectivityDidChange:
initWithOptions:
options
nowPlayingUserInterfaceViewControllerBlock
setNowPlayingUserInterfaceViewControllerBlock:
customPrewarmBlock
setCustomPrewarmBlock:
_options
_nowPlayingUserInterfaceViewControllerBlock
_customPrewarmBlock
_prewarmWithConfiguration:
beginBackgroundTaskWithName:expirationHandler:
preloadCloudMusicLibraryEnabledStatus
preloadAppleMusicSubscriptionStatus
sharedController
setupPlaybackEngine
_viewWillAppear
_viewDidAppear
_viewWillDisappear
_viewDidDisappear
setSharedInstance:
endBackgroundTask:
prewarmWithConfiguration:
setTextMargin:
systemFontOfSize:weight:
setFirstLineFont:
systemFontOfSize:
setSecondLineFont:
setSecondLineColor:
setSecondLineLeading:
_setDrawsAsBackdropOverlayWithBlendMode:
setUserInteractionEnabled:
secondLineLeading
secondLineBaselineTallscriptOffset
layoutSubviews
topLineBaselineOffsetFromBoundsTop
sizeThatFits:
titlesView
_titlesView
_imageNamed:
styleString
_flatImageWithColor:
_cachedObjectForKey:withCreationBlock:
drawAtPoint:
sizeWithAttributes:
_horizontalCorrectionForSkipValue:
drawAtPoint:withAttributes:
imageWithRenderingMode:
resizableImageWithCapInsets:resizingMode:
drawInRect:
_whiteImageNamed:
setStyle:
stringFromSeconds:
blackColor
setFill
drawInRect:blendMode:alpha:
settingsForPrivateStyle:graphicsQuality:
setBlurRadius:
setSaturationDeltaFactor:
setUsesGrayscaleTintView:
setGrayscaleTintLevel:
setGrayscaleTintAlpha:
_applyBackdropViewSettings:includeTints:includeBlur:allowImageResizing:
screenEdgeVignetteImage
setEvictsObjectsWhenApplicationEntersBackground:
objectForKey:
setObject:forKey:
imageNamed:inBundle:
transportControlsPlayImage
transportControlsPauseImage
transportControlsStopImage
transportControlsForwardImage
transportControlsRewindImage
transportControlsLikeBanImageWithPresentationStyle:selection:selectionTintColor:
transportControlsSkipImageWithTimeInterval:
volumeControlsUpImage
volumeControlsGenericImage
volumeControlsMutedImage
volumeControlsDownImage
routingTypeHeadphonesImage
routingTypeAirPodsImage
routingTypePowerbeatsImage
routingTypeBeatsSoloImage
routingTypeBeatsStudioImage
routingTypeBeatsXImage
routingTypeGenericBluetoothImage
connectBluetoothHeadphonesImage
orbAirPlayImage
actionSheetLikeImageWithPresentationStyle:
actionSheetDislikeImage
actionSheetBookmarkImageWithSelection:
actionSheetMoreActionsLoveImage
actionSheetMoreActionsDislikeImage
actionSheetAddToLibraryImage
actionSheetRemoveFromLibraryImage
downloadCloudImage
downloadWaitingSpinnerImage
downloadProgressIndicatorShadowImage
radioLiveWavesImage
nowPlayingNoteImage
artworkViewPlaceholderBackgroundColor
progressStringForElapsedTime:
processedArtworkImageWithSourceImage:destinationSize:unprocessedImageScale:
touchHighlightImageWithSourceImage:
setClipsToBounds:
setContentGap:
setFeatheringPercentageWidth:
backgroundColor
setFeatheringColor:
contentView
boldSystemFontOfSize:
setFirstLineColor:
_updateStyle
originNameLabel
font
ascender
descender
performWithoutAnimation:
liveLabel
nmu_untransformedFrame
_shouldReverseLayoutDirection
_nowPlayingTextForFields:
_contentInsetsFromFonts
topLabelFont
firstLineLeading
setContentSize:
nmu_setUntransformedFrame:
isMarqueeNeededForContentSize
contentSize
_defaultFirstLineFields
_setNeedsLabelUpdate
isAlwaysLive
setColor:
setTranslatesAutoresizingMaskIntoConstraints:
_defaultSecondLineFields
isPaused
setPaused:
pauseAfterCompletingCurrentIteration
hasStartedAnimating
setNeedsLayout
resetMarqueePosition
appendString:
enumerateObjectsUsingBlock:
featheringColor
marqueeViewDidEndMarqueeIteration:finished:
setFirstLineFields:
setFirstLineLeading:
setSecondLineFields:
setAlbumText:
setArtistText:
setExplicit:
setAlwaysLive:
setShowsOriginName:
setOriginNameText:
isMarqueePaused
setMarqueePaused:
pauseMarqueeAfterCompletingCurrentIteration
hasMarqueeStartedAnimating
setStationNameText:
setTitleText:
resetMarqueePositions
setLendingContainerViews:
firstLineContainerView
lastLineContainerView
style
titleText
albumText
artistText
stationNameText
originNameText
shouldShowOriginName
isExplicit
textMargin
textAlignment
firstLineFields
firstLineFont
firstLineColor
secondLineFields
secondLineFont
secondLineColor
_titleMarqueeView
_detailMarqueeView
_liveLabel
_originNameLabel
_titleLabel
_detailLabel
_needsLabelUpdate
_firstLineLeading
_secondLineLeading
_lendingContainerViews
_showsOriginName
_explicit
_alwaysLive
_style
_titleText
_albumText
_artistText
_stationNameText
_originNameText
_textMargin
_textAlignment
_firstLineFields
_firstLineFont
_firstLineColor
_secondLineFields
_secondLineFont
_secondLineColor
artworkImage
setArtworkImage:
setArtworkCatalog:
itemPersistentID
setItemPersistentID:
_artworkImage
_artworkCatalog
_itemPersistentID
processedArtworkImage
setProcessedArtworkImage:
touchHighlightArtworkImage
setTouchHighlightArtworkImage:
_processedArtworkImage
_touchHighlightArtworkImage
_clearCachedBackgroundArtworkIfNecessary
mainScreen
_getProcessedImagesForSourceImage:processedArtworkImage:touchHighlightImage:optionalItemPersistentIDForCaching:
predicateWithValue:forProperty:
setShouldIncludeNonLibraryEntities:
addFilterPredicate:
collections
setFittingSize:
setDestinationScale:
requestImageWithCompletionHandler:
imageWithContentsOfFile:
imageNamed:
systemGrayTextColor
setContentScaleFactor:
defaultFormat
setOpaque:
contentScaleFactor
setScale:
initWithSize:format:
CGContext
renderInContext:
imageWithActions:
numberWithBool:
_processedArtworkCachePath
_touchHighlightCachePath
addObjectsFromArray:
removeItemAtPath:error:
_getCachePathsForItemWithPersistentID:processedArtworkImageCachePath:touchHighlightImageCachePath:
longLongValue
sharedLibrary
initWithPersistentID:inLibrary:
artworkTokenAtPlaybackTime:
processArtworkRequest:completionHandler:
placeholderArtworkWithTemplateImageName:
imageWithCGImage:
sharedInstance
getDevices
valueForProperty:
getActivePairedDevice
_createLevelViews
contentMode
_levelHeightWithPercentage:
_setCornerRadius:
_invalidateCachedLevelHeights
_updateLevelAnimations
tintColorDidChange
tintColor
setAnchorPoint:
presentationLayer
functionWithName:
animationWithKeyPath:
setDuration:
numberWithFloat:
setValues:
numberWithDouble:
setKeyTimes:
setTimingFunctions:
setFrameInterval:
addAnimation:forKey:
removeAnimationForKey:
_barAnimationForBarIndex:
setRemovedOnCompletion:
numberWithUnsignedInteger:
floatValue
arrayWithArray:
doubleValue
setObject:atIndexedSubscript:
removeLastObject
setRepeatCount:
_removeAllAnimations:
setShowsIdealizedLevelPositionsWhenStopped:
interLevelSpacing
levelWidth
levelCornerRadius
maximumLevelHeight
minimumLevelHeight
isStopped
showsIdealizedLevelPositionsWhenStopped
numberOfLevels
animationType
_levelViews
_stopped
_showsIdealizedLevelPositionsWhenStopped
_interLevelSpacing
_levelWidth
_levelCornerRadius
_maximumLevelHeight
_minimumLevelHeight
_numberOfLevels
_animationType
setAlwaysBounceVertical:
becomeFirstResponder
registerClass:forCellWithReuseIdentifier:
dequeueReusableCellWithReuseIdentifier:forIndexPath:
numberOfSectionsInCollectionView:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
collectionView:didSelectItemAtIndexPath:
_applicationWillEnterForegroundNotification:
_applicationDidBecomeActiveNotification:
_marqueeDelayTimerFired
_invalidateMarqueeDelayTimer
setInstanceTransform:
setInstanceCount:
_updateFeatheringMasks
_updateAnimationsForCurrentState
_tearDownMarqueeAnimation
animationForKey:
affineTransform
valueForKey:
setValue:forKey:
nmu_setLayerTreePaused:
applicationState
_isRunningInNowPlayingViewService
functionWithControlPoints::::
setTimingFunction:
_setMarqueeAnimation:
_maskImageWithFeatheredLeftEdge:featheredRightEdge:featheringPercentageWidth:width:color:
CGColor
clearColor
CGImage
removeAllAnimations
null
setActions:
setContents:
addSublayer:
setMask:
removeFromSuperlayer
animationDidStart:
animationDidStop:finished:
intrinsicContentSize
setMarqueeDelay:
setMarqueeScrollRate:
contentGap
marqueeDelay
marqueeScrollRate
featheringPercentageWidth
_currentAnimationID
_lastEnableOptions
_featheringMaskLayer
_paused
_shouldPauseAfterCurrentIteration
_delayTimer
_needsAnimationAfterWaitingForDelay
_delayTimerScheduled
_contentGap
_contentView
_featheringPercentageWidth
_featheringColor
_marqueeDelay
_marqueeScrollRate
layerClass
_updateRowHeightIfNeeded
menuTableViewControllerDidUpdateVisibleItems:
_setNeedsVisibleItemsUpdate
sectionedVisibleItems
valueForKeyPath:
dequeueReusableCellWithIdentifier:
setPreferredImageViewMaxWidth:
text
containsString:
setAllowsDefaultTighteningForTruncation:
setCornerRadius:
setMasksToBounds:
colorWithRed:green:blue:alpha:
numberOfVisibleItems
setRowHeight:
setSectionedItems:
setAutomaticallyAdjustsCellHeight:
tableView:heightForFooterInSection:
tableView:viewForFooterInSection:
sectionedItems
automaticallyAdjustsCellHeight
wantsLargeIconLayout
setWantsLargeIconLayout:
_sectionedVisibleItems
_automaticallyAdjustsCellHeight
_wantsLargeIconLayout
_sectionedItems
setNeedsVisibilityUpdate
_handleMediaRemoteOriginAvailableOriginsDidChangeNotification:
_updateNowPlayingState
hasNowPlayingInfo
nowPlayingCellConfigurationBlock
isPlaying
setNowPlayingCellConfigurationBlock:
_nowPlayingState
_nowPlayingCellConfigurationBlock
insertArrangedSubview:atIndex:
setBaselineRelativeArrangement:
addArrangedSubview:
pillCornerRadius
setBackgroundCornerRadius:
heightAnchor
constraintEqualToConstant:
widthAnchor
constraintEqualToAnchor:constant:
activateConstraints:
setDistribution:
setAlignment:
topAnchor
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
trailingAnchor
actionButton
verticalStackViewContainer
setVerticalStackViewContainer:
horizontalStackViewContainer
setHorizontalStackViewContainer:
setTextLabel:
setImageView:
setActionButton:
verticalStackView
setVerticalStackView:
_verticalStackViewContainer
_horizontalStackViewContainer
_textLabel
_imageView
_actionButton
_verticalStackView
transitionWithView:duration:options:animations:completion:
_artworkImageView
_invalidateTimer
setTransportControlType:highlighted:
_handleTimer
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
isActive
setActive:
controlType
setControlType:
controlsView
setControlsView:
fetchAuthoritativeStateBlock
setFetchAuthoritativeStateBlock:
_timer
_active
_controlType
_controlsView
_fetchAuthoritativeStateBlock
initWithNowPlayingController:viewStyle:transportControlProvider:
initWithNibName:bundle:
setNowPlayingTrackTapDelegate:
puic_applicationStatusBarItem
commitChangesAnimated:
_applicationWillResignActiveNotification:
setTitleFont:
_virtualAudioRoutesDidChangeNotification:
isAddToLibraryActive
isLikedActive
_updateTransportControlProvider
_invalidateOptimisticPlaybackStateExpiryTimer
_invalidatePlaceholderNowPlayingStateTimeoutTimerIfNeeded
preferredPlaybackRate
_updateUIAnimated:
_schedulePlaceholderNowPlayingTimeoutTimerIfNeeded
_updateVolumeController
_handlePlaceholderNowPlayingStateTimeout
transportControlsView
secondaryTransportControlsView
volumeControlsView
_volumeValueDidChange
_artworkViewTapGestureRecognized:
initWithTarget:action:
addGestureRecognizer:
insertSubview:atIndex:
statusBar
appContextView
setTitleClipMode:
setView:
_setUnprocessedArtworkVisible:animated:
_handleOptimisticPlaybackStateExpiryTimer
_updatePlaybackStateDisplay
setOptimisticPlaybackState:
updateNowPlayingStateForOrigin:completion:
_setViewAppearanceState:
shouldVolumeAutomaticallyBecomeFirstResponder
setShouldBecomeFirstResponder:
_setShouldObserveVolumeChanges:
itemCompanionPersistentID
radioStationIdentifier
radioStationHash
_updateNowPlayingInfoDisplay
_updateAvailableAndHighlightedControls
_updateUIForConnectivityState
setOriginName:
_shouldShowOriginName
trackTitlesView
displayTitle
isExplicitTrack
radioStationName
artwork
_refreshArtworkRelatedViewsForArtworkImageUpdate
artworkImageData
initWithData:
_updateArtworkImageWithSourceImage:artworkCatalog:itemPersistentID:
_notifyPerfTestingDidUpdateUI
isArtworkVisuallyIdenticalToCatalog:
_updateArtworkImageWithPlaceholderImage
_aggregateIsPlaying
setPlaying:
setUnprocessedArtworkImage:
defaultTouchHighlightProvider
setTouchHighlightImage:
_updateTrackTitleMarqueeForAppearanceAndPlaybackState
reloadTransportControlsWithNowPlayingState:
nowPlayingViewControllerDidTapTrackListButton:
extendedSecondaryTransportControls
arrayByAddingObject:
setExtendedSecondaryTransportControls:
_shouldUseExtendedTransportControls
isFirstPartyApp
extendedPrimaryTransportControls
standardTransportControls
setAvailableControls:
rewindTimeInterval
setDisplayedSkipBackwardInterval:
fastForwardTimeInterval
setDisplayedSkipForwardInterval:
setLikeCommandPresentationStyle:
_aggregatePreferredPlaybackRate
setDisplayedPlaybackRate:
hasSupportedFeedbackCommands
setShouldUseExtendedTransportControls:animated:
setForFirstPartyMusicApp:
isLikeCommandEnabled
isLikeCommandSupported
localizedLikeTitle
isBanCommandEnabled
isBannedActive
isBanCommandSupported
localizedBanTitle
isBookmarkCommandEnabled
isBookmarkedActive
isBookmarkCommandSupported
localizedBookmarkTitle
actionItemForAction:
setVisible:
setAccessoryViewActiveTintColor:
isBeingPresented
setFeedbackActionSheetControllerDelegate:
_updateNowPlayingFeedbackController
isAddToLibraryCommandEnabled
isAddToLibraryCommandSupported
_updateMoreMenuActionController
elapsedTimeAtLastUpdate
_updateForNowPlayingApplicationInfoChange
_toggleUnprocessedArtworkImageVisibility
isUnprocessedArtworkImageVisible
setUnprocessedArtworkImageVisible:animated:
setHidingAllControls:animated:
nowPlayingViewControllerReceivedTapOnTrackTitles:
currentOrigin
_pauseMarquee
_sendMediaRemoteCommand:options:launchApp:
displayedSkipBackwardInterval
displayedSkipForwardInterval
_presentLikeBanViewController
_presentMoreMenuActionController
_togglePlaybackRate
_currentRadioTrackMediaRemoteOptions
isCloudMusicLibraryEnabled
_sendMediaRemoteCommandForToggledFeedbackAction:
_optimisticallySetAddToLibraryActive:controlsView:
_invalidateVolumeStyleOverrideTimer
_scheduleVolumeStyleOverrideTimer
shouldProvideAirPlayControls
canProvideActionController
_handleAirPlayAction
actionItemWithImage:title:target:action:
initWithActionItems:actionStyle:
initWithActionGroup:
_handleVolumeStyleOverrideTimer
value
volumeValue
setVolumeValue:
setValue:animated:
isMuted
setMuted:
_updateVolumeControlVisibilityAnimated:
_updateEULimit
isVolumeWarningEnabled
EUVolumeLimit
setEUVolumeLimit:
isVolumeControlAvailable
isEnabled
setEnabled:animated:
endObservingVolume
_updateVolumeControllerObservationStatus
demoVolumeControllerWithAudioCategory:
localVolumeControllerWithAudioCategory:
_ignoreHapticObservation
volumeControlTargetWithCategory:
proxyVolumeControllerWithTarget:
uniqueIdentifier
volumeControlTargetWithOriginIdentifier:
beginObservingVolume
nowPlayingView
perfTestingDelegate
nowPlayingViewControllerDidUpdateUI:
_asyncPrewarm
volumeControllerDidUpdateVolumeValue:
volumeControllerDidUpdateVolumeControlAvailibility:
volumeControllerDidUpdateSystemMutedState:
volumeControllerDidUpdateMutedState:
volumeControllerDidUpdateEUVolumeLimit:
volumeControllerDidUpdateVolumeWarningEnabled:
volumeControllerDidUpdateHapticState:
volumeControllerDidUpdateProminentHapticState:
volumeControllerDidUpdateHapticIntensity:
nowPlayingViewReceivedTapOnTrackTitles:
transportControlsView:tapOnControlType:
slider:didTapTouchTarget:
sliderDidBeginCrownInteraction:
sliderDidEndCrownInteraction:
sliderDidRequestFocus:
nowPlayingViewControllerReceivedTapOnApplicationIcon:
feedbackActionSheetControllerDidCancel:
feedbackActionSheetController:willDismissForTappedAction:
initWithNowPlayingController:viewStyle:
setPlaceholderNowPlayingState:
setPlaceholderNowPlayingStateTimeout:
setCurrentOrigin:
loadView
_optimisticallySetLikeBanActive:controlsView:
_updateOptimisticNowPlayingInfo
_sendMediaRemoteCommandForToggledAddToLibraryAction
actionController
_primeAudioRoutingManagerIfNecessary
_startPlayback
_stopPlayback
nowPlayingTrackTapDelegate
placeholderArtworkTemplateImageName
setPlaceholderArtworkTemplateImageName:
placeholderNowPlayingState
waitForMatchingPlaceholderNowPlayingInfo
setWaitForMatchingPlaceholderNowPlayingInfo:
placeholderNowPlayingStateTimeout
currentUserActivity
setCurrentUserActivity:
setPerfTestingDelegate:
_nowPlayingView
_nowPlayingViewStyle
_artworkView
_actionItemsByMediaRemoteFeedbackCommands
_nowPlayingFeedbackActionController
_nowPlayingMoreMenuActionController
_canEnableMarqueeForNowPlayingView
_currentNowPlayingInfoIsOverridingSupportedCommands
_volumeController
_currentArtworkImagePersistentID
_currentArtworkCatalog
_currentArtwork
_pendingArtworkSourceImage
_pendingArtworkCatalog
_pendingArtworkItemPersistentID
_shouldObserveVolumeChanges
_viewAppearanceState
_optimisticPlaybackState
_optimisticPlaybackStateExpiryTimer
_optimisticAddToLibraryState
_optimisticLikeState
_transportControlProvider
_shouldShowStatusBarIndicator
_volumeStyleOverrideTimer
_placeholderPlaybackState
_placeholderPreferredPlaybackRate
_placeholderNowPlayingStateTimeoutTimer
_waitForMatchingPlaceholderNowPlayingInfo
_nowPlayingTrackTapDelegate
_placeholderArtworkTemplateImageName
_placeholderNowPlayingState
_currentOrigin
_currentUserActivity
_perfTestingDelegate
_placeholderNowPlayingStateTimeout
standardUserDefaults
boolForKey:
setWithObjects:
_handleTextChanged
initWithObject:keyPaths:options:handler:
layoutSublayersOfLayer:
marqueeView
superlayer
convertRect:toLayer:
pointInside:withEvent:
insertSubview:above:
downloadProgressView
alpha
setState:
setDimmed:
setProgress:
addKeyframeWithRelativeStartTime:relativeDuration:animations:
animateKeyframesWithDuration:delay:options:animations:completion:
animateWithDuration:animations:completion:
applyLayoutAttributes:
_updateShadowWithLayoutAttributes:
_updateHighlightedAndSelectedAppearance
isSelected
insertSublayer:atIndex:
setDisableActions:
setColors:
setStartPoint:
setEndPoint:
setOpacity:
_resetMarqueeContentAndPosition
_setFirstLineBaselineFrameOriginY:
isHidden
_resetMarqueeContentAndPositionWithTextWidth:
setDownloadState:dimmed:progress:
_preferredContinuousCornerRadius
_setMarqueePaused:
_setSpinnerPaused:
_textObserver
_marqueePaused
_spinnerPaused
_downloadProgressView
_gradientOverlay
_dimmingLayer
_backgroundLayer
_depthGradientOverlay
_marqueeView
string
initWithString:
addAttribute:value:range:
nmu_attributedStringWithText:detailText:
getRed:green:blue:alpha:
linearBurnWithColor:alpha:
initWithActivityType:
dataRepresentation
setUserInfo:
nmu_userActivityContext
nmu_setUserActivityContext:
nmu_setUserActivityContextForViewController:
nmu_userActivity
setOriginatorType:
setOriginatorVersion:
navigationController
containerItems
userActivityContainerItemType
userActivityContainerSelectedEntity
userActivityContainerVisualReferenceEntity
initWithContainerItemType:
addContainerItem:
setVisualReferenceMediaEntity:
setSelectedMediaEntity:
systemVersion
setTransform:
firstBaselineAnchor
centerXAnchor
constraintsWithVisualFormat:options:metrics:views:
setLiveLabel:
leftImage
setLeftImage:
rightImage
setRightImage:
_leftImage
_rightImage
colorWithAlphaComponent:
initWithActivityIndicatorStyle:
setAnimating:
_setContinuousCornerRadius:
setContentCompressionResistancePriority:forAxis:
setContentHuggingPriority:forAxis:
setDirectionalLayoutMargins:
supportsAsynchronousMeasurement
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
containerViewDidInvalidateIntrinsicContentSize:
containerView:systemLayoutSizeFittingSize:forArrangedSubview:
containerView:layoutFrameForArrangedSubview:withProposedFrame:
containerView:willMeasureArrangedSubviewsFittingSize:forReason:
containerView:shouldRestartMeasurementDueToCompressionInAxis:forReason:
containerViewDidLayoutArrangedSubviews:
containerStackView:minimumSpacingAdjecentToArrangedSubview:
containerStackView:minimumDirectionalSpacingAdjecentToArrangedSubview:
containerStackView:alignmentForArrangedSubview:
_contentStackView
_detailTextLabel
_playing
beginObservingOrigins
endObservingOrigins
activeNowPlayingOrigin
nowPlayingState
currentSource
storeAdamID
applicationBundleIdentifier
applicationDisplayName
elapsedTime
timestamp
playbackRate
isEqualToEntry:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
decodeDoubleForKey:
decodeBoolForKey:
decodeIntegerForKey:
decodeFloatForKey:
encodeDouble:forKey:
encodeBool:forKey:
encodeInteger:forKey:
encodeFloat:forKey:
persistentID
appBundleID
appName
projectedEndDate
initWithNowPlayingState:
initWithContentItem:nowPlayingState:
setTimestamp:
setAssetAvailability:
isEmpty
isPlayable
contentItemID
assetAvailability
isLive
_live
_persistentID
_storeAdamID
_contentItemID
_title
_artist
_album
_timestamp
_assetAvailability
_appBundleID
_appName
_playbackRate
_elapsedTime
_duration
initWithSliderStyle:
setCompactAccessoryImage:
setNumberOfSteps:
setShouldFadeAccessoryImages:
setMinimumValueImage:
setMaximumValueImage:
setCrownInputOffsetAdjustmentFactor:
_updateFirstResponderIfNeeded
resignFirstResponder
maximumValue
_maxTrackView
trackRectForBounds:
setStrokeColor:
setFillColor:
lineWidth
setLineWidth:
_minTrackView
insertSubview:belowSubview:
path
setPath:
_createOrUpdateWarningViewIfNecessary
_updateCompactAccessoryImageForValue:
animateWithDuration:animations:
_scheduleAllowPastWarningLimitTimer
_cancelRearmWarningTimer
_scheduleRearmWarningTimer
_fadeWarningView
_cancelAllowPastWarningLimitTimer
_setValue:animated:sendAction:crown:
ignoresValueChangesDuringTracking
setIgnoresValueChangesDuringTracking:
durationForIgnoredValueChangesAfterTracking
setDurationForIgnoredValueChangesAfterTracking:
shouldBecomeFirstResponder
_warningState
_allowPastWarningLimitTimer
_rearmWarningTimer
_warningView
_mutedValue
_muted
_ignoresValueChangesDuringTracking
_shouldBecomeFirstResponder
_EUVolumeLimit
_durationForIgnoredValueChangesAfterTracking
anchorPoint
center
setCenter:
speed
nmu_isLayerTreePaused
convertTime:fromLayer:
setSpeed:
setTimeOffset:
setBeginTime:
timeOffset
_contentFrame
_updateDownloadingRingProgressLayerStrokeEnd
setContentsScale:
setFromValue:
setToValue:
_pauseAnimation
_ringPath
CGPath
setLineCap:
setAffineTransform:
_resumeAnimation
bezierPathWithOvalInRect:
setStrokeEnd:
dimmed
progress
paused
_downloadableIconLayer
_waitingRingLayer
_downloadingRingTrackShadowLayer
_downloadingRingTrackLayer
_downloadingRingProgressLayer
_dimmed
_state
_progress
setArtwork:
initWithCollectionViewLayout:
setContentInsetAdjustmentBehavior:
setDecelerationRate:
registerClass:forSupplementaryViewOfKind:withReuseIdentifier:
_updateMenuViewVisibility
_scrollToFirstVisibleItemIfNeeded
_setMarqueeViewsPaused:
topLevelCollectionViewControllerShouldShowMenu:
syncInfoController
_updateSpinnersForVisibleItemAtIndexPath:
enumerateItemIdentifiersUsingBlock:
collectionViewLayout
_notifyDidLandOnItemIfNeeded
viewControllerForMenu
_updateBackViewRevealHeight
dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:
collectionView:viewForSupplementaryElementOfKind:atIndexPath:
heightForContentUnavailableViewInTopLevelCollectionViewController:
setTableFooterView:
topLayoutGuide
isTracking
isDragging
isDecelerating
_isAnimatingScroll
scrollToItemWithIdentifiers:
visibleCells
sortedArrayUsingSelector:
topLevelCollectionViewController:didLandOnItemAtIndexPath:
identifiersForItemAtIndexPath:
scrollViewWillBeginDragging:
scrollViewDidEndDragging:willDecelerate:
scrollViewDidEndDecelerating:
collectionView:shouldHighlightItemAtIndexPath:
setSyncInfoController:
_menuTableViewController
_hasScrolledToBottom
_lastNotifiedFirstVisibleItemIndexPath
_lastNotifiedFirstVisibleItemIdentifiers
_syncInfoController
_handleContentSizeCategoryDidChangeNotification:
invalidateIntrinsicContentSize
initWithFrame:tintColor:backgroundCornerRadius:
setAdjustsImageWhenDisabled:
setHighlighted:
adjustsImageWhenDisabled
systemPlatterColor
enumerateKeysAndObjectsUsingBlock:
backgroundColorForState:
imageTintColorForState:
_backgroundColors
_imageTintColors
applicationProxyForIdentifier:placeholder:
iconDataForVariant:
appState
isValid
initWithCGImage:scale:orientation:
usesVerticallyCenteredColons
defaultPUICStatusBarFontDescriptor
fontDescriptorByAddingAttributes:
defaultPUICStatusBarFontPointSize
fontWithDescriptor:size:
setUsesVerticallyCenteredColons:
setNowPlayingElapsedTime:
nmu_centeredImageWithSize:
nmu_solidImageWithColor:
startedTest:
finishedTest:
initWithSuiteName:
indexPathsForVisibleRows
nmuPerformBlockAfterLoadingData:
_nmuPerformRealisticScrollTest:options:
_nmuPerformDefaultScrollTest:options:
_nmuPerformRealisticScrollTestHelper:offset:currentIteration:totalIterations:goForwards:
finishedTest:extraResults:
_simulateScrollWithTranslation:duration:willBeginDragging:didEndDragging:willBeginDecelerating:didEndDecelerating:
_performScrollTest:iterations:delta:length:scrollAxis:extraResultsBlock:
nmuPerformScrollTest:options:
areAnimationsEnabled
_imageCrossFadeTransition
_setDimmed:animated:
sendSubviewToBack:
bringSubviewToFront:
animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:
touchesBegan:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
animation
setUnprocessedArtworkImageVisible:
unprocessedArtworkImage
_unprocessedArtworkImageView
_processedArtworkImageView
_dimmingView
_unprocessedArtworkImageVisible
_unprocessedArtworkImage
bundleWithIdentifier:
setSize:
stackArtworkFormat
gridArtworkFormat
_scale
_size
_configureArtworkCatalog:isPrefetching:
setDestination:configurationBlock:
_prerenderedPlaceholderWithName:inBundle:
setCachePurgesWhenEnteringBackground:forCacheIdentifier:requestingContext:
setCacheIdentifier:forRequestingContext:
setRenderHint:
strongToStrongObjectsMapTable
setImageView:artworkCatalog:placeholderName:
_format
_cachedPlaceholderImages
_assetAvailabilityDidChange:
availabilityForTrackPID:
_scheduleAssetAvailabilityUpdate
enumeratePreviousEntriesUsingBlock:
archivePreviousEntries
timeline:didUpdateWithCurrentEntry:
timeline:didUpdateWithUpNextEntries:
timelineEntryPlayabilityDidChange:
timelineDidUpdate:
shouldObserveUpNext
shouldObserveDistributedAssetAvailability
assetAvailabilityForEntry:
_assetAvailabilityQueue
_assetAvailabilityUpdateTimer
_lastAssetAvailabilityUpdate
insertSections:
deleteSections:
reloadSections:
insertItemsAtIndexPaths:
deleteItemsAtIndexPaths:
reloadItemsAtIndexPaths:
moveItemAtIndexPath:toIndexPath:
performBatchUpdates:completion:
collectionView:prefetchItemsAtIndexPaths:
collectionView:cancelPrefetchingForItemsAtIndexPaths:
setLoading:
setUsesCustomHighlightAlpha:
setUsesCustomBackground:
setAllowsGroupBlending:
setOpaqueWithUpdate:
setCompositingFilter:
setAllowsGroupOpacity:
setBackgroundView:
_routeIconPlaceholderImage
_setRouteImage:
setActivityIndicator:
loading
activityIndicator
setRouteIconViewForRouteType:origin:
routeIcon
setRouteIcon:
backgroundColorDodgeView
setBackgroundColorDodgeView:
backgroundSourceOverView
setBackgroundSourceOverView:
_loading
_activityIndicator
_routeIcon
_backgroundColorDodgeView
_backgroundSourceOverView
_configureBackgroundPillColor
_configureImageObserver
backgroundView
_transparentBackgroundPillColor
setBackgroundPillColor:
initWithObject:keyPath:options:handler:
_imageObserver
preferredContentSizeCategory
_scaledValueForValue:
gapSeparatorHeight
wantsTwoLineHeight
setWantsTwoLineHeight:
_wantsTwoLineHeight
routeContext
setRouteContext:
routeType
setRouteType:
_routeContext
_routeType
_initWithOrigin:audioRoutingManager:
_bluetoothDeviceFailedToConnectNotification:
_systemAudioRouteFailedToConnectNotification:
_updateForCurrentOrigin
_pickLoneAvailableLocalRouteIfDesired
_cancelPickRouteTimeout
presentingViewController
_stopObservingNotifications
groups
actions
_localAudioRouteItemSelected:
_companionAudioRouteItemSelected:
_updateItemsForCompanionOrigin
_connectionFailed
isLoading
accessoryView
setLeftAccessoryView:
setAccessoryTitle:
titleAlignment
setAccessoryTitleAlignment:
setBlendContent:
setDestructive:
sampleAirPlayActionCell
heightForRowWithTitle:leftAccessoryView:cellWidth:
_updateItemsForCurrentOrigin
endObservingRoutes
companionRoutingControllerWithAudioCategory:
beginObservingRoutes
_updateItemsForLocalOrigin
isEqualToVirtualAudioRoute:
isPicked
dismiss
_updateRouteSelectingIndicatorForActionItem:
pickVirtualAudioRoute:
_beginPickRouteTimeout
isEqualToAudioRoute:
pickAudioRoute:
virtualAudioRoutes
initWithCapacity:
setShouldRemainSelected:
setShouldDismiss:
_nacRouteFromNMCRoute:
_updateHeaderForNoLocalRoutes
_updateWithItems:timeoutDuration:timeoutCompletion:
_cancelFindRoutesTimer
_updateHeaderForNoConnectivity
_sortedAudioRoutes
routeName
_updateHeaderForNoCompanionRoutes
_chooseWhereToPlayHeaderView
groupWithActions:headerView:
_connectDeviceGroup
setGroups:
_headerViewWithLoadingIndicator
_showConnectionFailedMessage
availableAudioRoutes
_fullScreenHeaderViewWithText:andImage:
setTitle:forState:
_openSettings
_defaultStatusBarHeight
heightForStyle:orientation:
groupWithActions:title:
defaultWorkspace
URLWithString:
openSensitiveURL:withOptions:
automaticallySelectsLoneAvailableRoute
sortUsingComparator:
controllerWithAudioRoutingManager:
routingControllerDidUpdateAvailableRoutes:
routingControllerFailedToPickRoute:
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewWillBeginDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
tableView:willDisplayCell:forRowAtIndexPath:
tableView:willDisplayHeaderView:forSection:
tableView:willDisplayFooterView:forSection:
tableView:didEndDisplayingCell:forRowAtIndexPath:
tableView:didEndDisplayingHeaderView:forSection:
tableView:didEndDisplayingFooterView:forSection:
tableView:heightForRowAtIndexPath:
tableView:heightForHeaderInSection:
tableView:estimatedHeightForRowAtIndexPath:
tableView:estimatedHeightForHeaderInSection:
tableView:estimatedHeightForFooterInSection:
tableView:viewForHeaderInSection:
tableView:accessoryTypeForRowWithIndexPath:
tableView:accessoryButtonTappedForRowWithIndexPath:
tableView:shouldHighlightRowAtIndexPath:
tableView:didHighlightRowAtIndexPath:
tableView:didUnhighlightRowAtIndexPath:
tableView:willSelectRowAtIndexPath:
tableView:willDeselectRowAtIndexPath:
tableView:didDeselectRowAtIndexPath:
tableView:editingStyleForRowAtIndexPath:
tableView:titleForDeleteConfirmationButtonForRowAtIndexPath:
tableView:editActionsForRowAtIndexPath:
tableView:leadingSwipeActionsConfigurationForRowAtIndexPath:
tableView:trailingSwipeActionsConfigurationForRowAtIndexPath:
tableView:shouldIndentWhileEditingRowAtIndexPath:
tableView:willBeginEditingRowAtIndexPath:
tableView:didEndEditingRowAtIndexPath:
tableView:targetIndexPathForMoveFromRowAtIndexPath:toProposedIndexPath:
tableView:indentationLevelForRowAtIndexPath:
tableView:shouldShowMenuForRowAtIndexPath:
tableView:canPerformAction:forRowAtIndexPath:withSender:
tableView:performAction:forRowAtIndexPath:withSender:
tableView:canFocusRowAtIndexPath:
tableView:shouldUpdateFocusInContext:
tableView:didUpdateFocusInContext:withAnimationCoordinator:
indexPathForPreferredFocusedViewInTableView:
tableView:shouldSpringLoadRowAtIndexPath:withContext:
tableView:willPerformCellAction:atIndexPath:
tableView:didPerformCellAction:atIndexPath:
tableView:swipeControlsForRowAtIndexPath:
tableView:titleForFooterInSection:
tableView:canEditRowAtIndexPath:
tableView:canMoveRowAtIndexPath:
sectionIndexTitlesForTableView:
tableView:sectionForSectionIndexTitle:atIndex:
tableView:commitEditingStyle:forRowAtIndexPath:
tableView:moveRowAtIndexPath:toIndexPath:
setOrigin:
_companionRoutingController
_shouldObserveRoutes
_audioRoutingManager
_currentlySelectingLocalRoute
_currentlySelectingCompanionRoute
_externalDelegate
_pickRouteTimer
_findRoutesTimer
_didAutomaticallyAttemptLocalRoute
_loadingIndicatorState
_sampleAirPlayActionCell
_automaticallySelectsLoneAvailableRoute
setPlaybackState:
defaultLoadingPlaceholderNowPlayingState
buttonWithType:
setAdjustsImageWhenHighlighted:
_removeAnimations
contentRectForBounds:
imageRectForContentRect:
_createTouchHighlightViewIfNecessary
animateWithDuration:delay:options:animations:completion:
touchHighlightViewForTransportControlsView:
button
imageScaleForTouchState
setImageScaleForTouchState:
marginValue
touchHighlightProvider
setTouchHighlightProvider:
_touchHighlightCircularMaskView
_imageScaleForTouchState
_marginValue
_touchHighlightProvider
shouldUseExtendedTransportControls
setShouldUseExtendedTransportControls:
animated
setAnimated:
_animated
setAutoresizesSubviews:
_controlDidReceiveTouchDown:
_controlDidReceiveTouchUpInside:
_controlDidReceiveTouchCancel:
setSourceLayerForMatchMoveAnimations:
_updateLabelTextAttributes
_updateTitlesFirstLineLeading
setShowIsPlaying:
_boundsForCompactVolumeControl
_positionForCompactVolumeControlWithBounds:
_boundsForVolumeControl
_positionForVolumeControlWithBounds:
setPosition:
_firstLineBaseLineOffset
_lastLineBaseLineOffset
traitCollection
displayScale
_layoutForWorkoutApp
_frameForSecondaryTransportControlsView
position
animateTransitionToStyle:duration:bounds:completion:
_showsTopLabel
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
setHidingAllControls:
setTransportControlsView:
setTrackTitlesView:
isTrackTitlesInteractionEnabled
setTrackTitlesInteractionEnabled:
setElapsedTime:
originName
isHidingAllControls
applicationIconImageView
setApplicationIconImageView:
_containerView
_playbackIndicatorView
_titlesControl
_cachedTrackTitlesViewRect
_playbackIndicatorViewNeedsLayout
_isAnimatingExtendedTransportControls
_queuedExtendedTransportControlsRequest
_trackTitlesInteractionEnabled
_hidingAllControls
_transportControlsView
_secondaryTransportControlsView
_trackTitlesView
_volumeControlsView
_originName
_applicationIconImageView
pushNowPlayingViewControllerReplacingPlaybackQueueWithIntent:preventingAutomaticPlayback:forOrigin:pushCompletion:queueCompletion:
nowPlayingViewControllerClass
initWithPlaybackIntent:preventingAutomaticPlayback:origin:
instancesRespondToSelector:
initWithPlaybackIntent:origin:
pushViewController:animated:completion:
configurePlayActivityInfoWithViewController:
pushNowPlayingViewControllerReplacingPlaybackQueueWithIntent:preventingAutomaticPlayback:forOrigin:pushCompletion:
pushNowPlayingViewControllerReplacingPlaybackQueueWithIntent:preventingAutomaticPlayback:forOrigin:queueCompletion:
playbackIntentClass
setPlaybackIntentClass:
setNowPlayingViewControllerClass:
setNavigationController:
_playbackIntentClass
_nowPlayingViewControllerClass
_navigationController
_pushNowPlayingViewControllerStartingPlaybackOfIntent:forOrigin:completion:
_pushNowPlayingViewControllerPreparingPlaybackOfIntent:forOrigin:completion:
_createTransportButton
_updateTransportControlButtons
isEqualToArray:
removeAllObjects
group
likeCommandPresentationStyle
_transportControlTap:
_availableControlForGroup:
setTag:
_updateTransportControlHighlightedStates
_transportControlWithType:
_middleButton
setCustomTouchHighlightProvider:
availableControls
showIsPlaying
customTouchHighlightProvider
_availableControlByGroup
_showIsPlaying
_enabled
_availableControls
_displayedPlaybackRate
_likeCommandPresentationStyle
_defaultTouchHighlightProvider
_customTouchHighlightProvider
_displayedSkipForwardInterval
_displayedSkipBackwardInterval
_prepareForDidShowViewControllerWithCompletion:
pushViewController:animated:
popViewControllerAnimated:
popToViewController:animated:
popToRootViewControllerAnimated:
popViewControllerAnimated:completion:
popToViewController:animated:completion:
popToRootViewControllerAnimated:completion:
setRepresentedFeedbackAction:
setController:
_allActionItems
representedFeedbackAction
setAllowsMultipleSelection:
setCancelled:
isForFirstPartyMusicApp
_defaultLocalizedTitleForFeedbackAction:forFirstPartyMusicApp:
_imageForFeedbackAction:isActive:
accessoryViewActiveTintColor
_actionGroup
_updateActionItems
feedbackActionSheetControllerDelegate
isCancelled
objectAtIndex:
_defaultLocalizedTextForFeedbackAction:
_shouldUpdateActionItems
_forFirstPartyMusicApp
_cancelled
_feedbackActionSheetControllerDelegate
controller
_visible
_accessoryViewActiveTintColor
_controller
_representedFeedbackAction
returnToPrimaryUI
currentSnapshotCapableUI
snapshotTimeout
prepareForSnapshotWithReason:userInfo:completion:
prepareForSnapshot:completion:
prepareForSnapshot:userInfo:completion:
setSnapshotTimeout:
_snapshotTimeout
removeObserver:forKeyPath:
_updateMatchMoveAnimation
addObserver:forKeyPath:options:context:
image
setSourceLayer:
valueWithCGPoint:
setSourcePoints:
CGRectValue
observeValueForKeyPath:ofObject:change:context:
sourceLayerForMatchMoveAnimations
_sourceLayerForMatchMoveAnimations
weakObjectsHashTable
touchHighlightImage
_touchHighlightViews
_touchHighlightImage
_handleApplicationDidEnterBackgroundNotification:
_handleApplicationWillEnterForegroundNotification:
_handleModelResponseDidInvalidateNotification:
_reloadContentIfNeededAndAllowed
_getModelResponse:relativeIndexPath:forIndexPath:
_setNeedsReloadContent
_reloadContentIfNeeded
getChangeDetailsFromPreviousResponse:completion:
performWithResponseHandler:
indexPathForGlobalIndex:
setBackgroundContentUpdatingEnabled:
setNeedsReloadContent
isAutomaticContentUpdatingEnabled
isBackgroundContentUpdatingEnabled
_modelResponses
_needsReloadContent
_applicationStateIsBackground
_loadingContent
_finishedLoadingContent
_backgroundContentUpdatingEnabled
_errors
_primaryTransportControlsForCurrentState:usingExtendedControls:
_secondaryTransportControlsForCurrentState:
initWithArray:copyItems:
shouldProvideFeedbackControls
shouldProvidePlaybackRateControls
isPlaybackRateCommandSupported
isPlayingRadio
_likeBanControlForCurrentState:
previousTrackCommandEnabled
isSkipBackwardCommandEnabled
isSkipForwardCommandEnabled
nextTrackCommandEnabled
setStandardTransportControls:
setExtendedPrimaryTransportControls:
_standardTransportControls
_extendedPrimaryTransportControls
_extendedSecondaryTransportControls
timeIntervalSinceDate:
nmu_isBeforeDate:
nmu_isAfterDate:
initWithMode:
_filteringOptionWithMode:
_updateWithCurrentNowPlayingState
previousEntries
_archivePreviousEntries:
_schedulePendingUpdateWithEntry:
_cancelPendingUpdate
removeObjectAtIndex:
_updateCurrentEntryAndNotifyObservers:
_notifyObservers:
playbackQueueForOrigin:
copyMediaRemotePlaybackQueueWithRange:includeMetadata:
setShouldObservePlaybackQueue:
_archivedPreviousEntries
unarchivedObjectOfClasses:fromData:error:
subarrayWithRange:
_updateWithCurrentPlaybackQueue
_playabilityConditionsDidChange
sharedTimeline
nowPlayingOriginsDidUpdateForController:
activeNowPlayingOriginDidUpdateForController:
currentEntry
upNextEntries
activeOrigin
entryForDate:
_beginObservingUpNext
_beginObservingDistributedAssetAvailability
_reloadAssetAvailabilityFromArchive
_cloudAvailabilityDidChangeNotification:
mode
_activeOrigin
_currentEntry
_pendingEntryWithMatchingTimestamp
_previousEntries
_upNextEntries
_observers
_timelineQueue
_archivingQueue
_pendingUpdateTimer
_mode
NMUModelCollectionItem
NMUNowPlayingTrackListTableViewController
NMROriginObserverDelegate
NSObject
PUICActionContentControllerDelegate
NMUSnapshotHelper
NMUSnapshotHelperUpdateTransaction
NMUApplicationIcon
NSSecureCoding
NSCoding
NMUApplicationIconManager
NowPlayingIndicatorView
NMUNowPlayingTrackListAlbumSongTableViewCell
NanoMediaUI
NMUAudioRoutePickerAlertExportedInterface
NMUAudioRoutePickerController
PUICActionSheetControllerDelegate
Playback
NMUModelTableViewController
NMUMPModelTableViewController
UITableViewDataSourcePrefetching
NMUModelCollectionDataSource
NMUModelCollectionDelegate
NMUMPModelRequestContentLoaderDataSource
NMUMPModelRequestContentLoaderDelegate
NMUArtworkLoaderDataSource
NMUSnapshotCapableInterface
NMUStackCollectionViewLayout
NMUStackCollectionViewLayoutAttributes
NMUMetricsReporter
NMUSecondaryTransportControlsView
NMUPlaybackControllerErrorHandler
NMCMediaPlayerErrorHandler
NMUNowPlayingTableViewCell
NMUNowPlayingViewController
NMUAdditions
NMUContainerCollectionReusableView
NMUTopLevelCollectionSyncInfoController
ICEnvironmentMonitorObserver
OriginObserving
NMCConnectivityObserver
NMUPrewarmConfiguration
NMUPrewarmer
NMUFeedbackActionSheetHeaderView
NMUTheme
NMUNowPlayingTitlesView
NMUMarqueeViewDelegate
NMUNowPlayingArtworkRequest
NMUNowPlayingArtwork
NMUNowPlayingArtworkProcessing
NMUNowPlayingTrackListGenericTableViewCell
NMUNowPlayingIndicatorView
SharedInstance
NMUModelCollectionViewController
NMUMarqueeView
CAAnimationDelegate
_NMUMarqueeContentView
NMUMenuTableViewController
NMUMenuItem
NMUOnIPhoneMenuItem
NMUNowPlayingMenuItem
NMUActionSheetHeaderView
NMUDetailedArtworkView
_NMUTransportControlOptimisticState
NACVolumeControllerDelegate
NMUNowPlayingViewDelegate
NMUTransportControlsViewDelegate
PUICSliderDelegate
NMUNowPlayingViewControllerDelegate
NMUNowPlayingFeedbackViewControllerDelegate
NMUTopLevelArtworkCollectionViewCell
NMUUserActivityContainerProvider
NMULiveLabel
NMUActivityIndicatorView
NMUNowPlayingTrackListContainerHeaderView
NUIContainerStackViewDelegate
NUIContainerViewDelegate
NMUNowPlayingState
NMUNowPlayingController
NMUNowPlayingTimelineEntry
_NMUCompactVolumeWarningView
NMUVolumeControlsView
NMUDownloadProgressView
NMUTopLevelCollectionViewController
NMUMenuTableViewControllerDelegate
NMUTopLevelCollectionDelegate
NMUTableHeaderFooterStackView
NMUButton
NMUApplicationIconGenerator
Extras
NMUPerformanceTesting
NMUNowPlayingArtworkView
NMUArtworkFormat
NMUArtworkLoader
NMUNowPlayingTimelineArchiver
NMUNowPlayingTimelineObserver
NMUMPModelCollectionViewController
UICollectionViewDataSourcePrefetching
NMUCollectionViewCell
NMUArtworkCollectionViewCell
NMUAirPlayActionCell
NMUBaseTableViewCell
NMUDefaultStyleTableViewCell
NMUSubtitleStyleTableViewCell
_NMUAirPlayActionItem
NMUAirPlayActionController
NACRoutingControllerDelegate
PUICTableViewDelegate
UITableViewDelegate
UIScrollViewDelegate
UITableViewDataSource
_NMUTransportControlButtonTouchHighlightMaskView
_NMUTransportControlButton
_NMUQueuedExtendedTransportControlsRequest
NMUNowPlayingView
UIGestureRecognizerDelegate
NMUPlaybackIntentPlayActivityReporting
NMUPlaybackAppController
NMUTransportControlsView
CompletionHandlers
NMUNowPlayingFeedbackViewController
_NMUFeedbackActionSheetItem
NMUFeedbackActionItem
NMUSnapshotCoordinator
PUICSnapshotDelegate
_NMUTouchHighlightView
NMUDefaultTouchHighlightProvider
NMUTransportControlsTouchHighlightProvider
NMUMPModelRequestContentLoader
NMUTransportControlProvider
NMUNowPlayingTimelineAdditions
NMUNowPlayingTimeline
NMRNowPlayingControllerDelegate
B8@0:4
v8@0:4
#8@0:4
v12@0:4#8
@8@0:4
v12@0:4@8
@?8@0:4
v12@0:4@?8
@"NSString"
B12@0:4@8
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@8@12
v16@0:4@8@"NMROrigin"12
v12@0:4@"PUICActionContentController"8
@16@0:4@8@12
v20@0:4@8B12@?16
v16@0:4B8@?12
@12@0:4@8
#12@0:4@8
v20@0:4@8@12@16
v16@0:4i8B12
@"NMUButton"
@"NMRNowPlayingController"
@"NMROrigin"
@"NSIndexSet"
@"NSObject<OS_dispatch_group>"
@20@0:4@8@12@16
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@"NSData"
@16@0:4@8I12
v16@0:4@8I12
{CGSize=ff}8@0:4
v16@0:4B8B12
@16@0:4i8@12
@"UILabel"
@12@0:4i8
@16@0:4@8B12
v20@0:4I8I12@?16
v20@0:4I8I12@?<v@?B@"NSError">16
v12@0:4@?<v@?B>8
v16@0:4@8@?12
v20@0:4@8@12@?16
v20@0:4@8I12@?16
v24@0:4@8@12I16@?20
v16@0:4@"PUICActionSheetController"8@"NSIndexPath"12
@16@0:4@8@?12
@"NMUAirPlayActionController"
v24@0:4@8B12@16@?20
i12@0:4@8
i16@0:4@8i12
@16@0:4@8i12
@"NSHashTable"
@"NSArray"
@"<NMUModelCollectionDataSource>"
@"<NMUModelCollectionDelegate>"
v16@0:4@"UITableView"8@"NSArray"12
i12@0:4i8
i8@0:4
@"<NSObject>"12@0:4@"NSIndexPath"8
v20@0:4@"UIView"8@"<NSObject>"12@"NSIndexPath"16
@"NSString"16@0:4@"<NSObject>"8@"NSIndexPath"12
#12@0:4@"NSString"8
@"NSString"12@0:4i8
@"UIImage"8@0:4
v16@0:4@"<NSObject>"8@"NSIndexPath"12
@"NSArray"12@0:4@"NMUMPModelRequestContentLoader"8
v16@0:4@"NMUMPModelRequestContentLoader"8@"MPChangeDetails"12
v12@0:4@"NMUMPModelRequestContentLoader"8
@"MPArtworkCatalog"16@0:4@"NMUArtworkLoader"8@"NSIndexPath"12
v12@0:4B8
@"UIView"
@"PUICContentUnavailableView"
@"NMUMPModelRequestContentLoader"
@"NMUArtworkLoader"
B24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
{CGPoint=ff}24@0:4{CGPoint=ff}8{CGPoint=ff}16
@24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
v12@0:4f8
v16@0:4@8B12
v24@0:4@8i12B16B20
f8@0:4
{CGSize="width"f"height"f}
@12@0:4^{_NSZone=}8
v12@0:4I8
v12@0:4i8
v16@0:4I8@12
v20@0:4I8i12@16
v16@0:4i8@12
v20@0:4q8@16
v20@0:4d8@16
@12@0:4I8
@"NSObject<OS_dispatch_queue>"
@20@0:4d8B16
@20@0:4d8i16
@20@0:4@8d12
@32@0:4i8i12B16B20d24
v24@0:4@8@12@16i20
v20@0:4@"NMCMediaPlayerModelPlaybackController"8@"NSError"12@?<v@?B>16
v24@0:4@"NMCMediaPlayerModelPlaybackController"8@"MPAVItem"12@"NSError"16i20
v12@0:4@"NMCMediaPlayerModelPlaybackController"8
@12@0:4B8
v20@0:4@8@12i16
@"NMCMediaPlayerModelPlaybackController"
@"UIViewController"
v12@0:4@"ICEnvironmentMonitor"8
v20@0:4@8@12B16
@"NMSMediaSyncInfo"
@"NMUTopLevelCollectionViewController"
@"<NMUTopLevelCollectionSyncInfoControllerDataSource>"
@12@0:4^v8
v16@0:4@"NMCConnectivityManager"8B12
{CGSize=ff}16@0:4{CGSize=ff}8
@"NMUNowPlayingTitlesView"
@20@0:4i8B12@16
@16@0:4d8
f16@0:4d8
@12@0:4f8
@24@0:4@8{CGSize=ff}12f20
v16@0:4@"NMUMarqueeView"8B12
@"NMUMarqueeView"
@"NMULiveLabel"
@"UIFont"
@"UIColor"
@"UIImage"
@"MPArtworkCatalog"
@"NSNumber"
v24@0:4@8^@12^@16@20
v20@0:4@8^@12^@16
@32@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8I24I28
f12@0:4f8
@"NSMutableArray"
v12@0:4@"CAAnimation"8
v16@0:4@"CAAnimation"8B12
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
v16@0:4{CGSize=ff}8
v16@0:4d8
^{CGImage=}28@0:4B8B12f16f20@24
d8@0:4
@"NSUUID"
@"CALayer"
@"NSObject<OS_dispatch_source>"
@"<NMUMarqueeViewDelegate>"
f16@0:4@8i12
@"<NMUMenuTableViewControllerDelegate>"
@"NMRNowPlayingState"
@"UIStackView"
@"UIImageView"
@"PUICButton"
@"NSTimer"
@"NMUTransportControlsView"
v12@0:4@"<NACVolumeController>"8
v12@0:4@"NMUNowPlayingView"8
v16@0:4@8i12
v16@0:4@"NMUTransportControlsView"8i12
v16@0:4@"PUICSlider"8i12
v12@0:4@"PUICSlider"8
v12@0:4@"NMUNowPlayingViewController"8
v12@0:4@"NMUNowPlayingFeedbackViewController"8
v16@0:4@"NMUNowPlayingFeedbackViewController"8i12
@20@0:4@8i12@16
v16@0:4B8@12
v20@0:4I8@12B16
@"NMUNowPlayingView"
@"NMUNowPlayingArtworkView"
@"NSMutableDictionary"
@"NMUNowPlayingFeedbackViewController"
@"<NACVolumeController>"
@"NMUNowPlayingArtwork"
@"_NMUTransportControlOptimisticState"
@"NMUTransportControlProvider"
@"<NMUNowPlayingViewControllerDelegate>"
@"NSUserActivity"
@"<NMUNowPlayingViewControllerPerfTestingDelegate>"
B20@0:4{CGPoint=ff}8@16
v20@0:4I8B12f16
v24@0:4I8B12f16B20
@"NMCKeyValueObserver"
@"NMUDownloadProgressView"
@"CAGradientLayer"
@16@0:4@8f12
@"MPMediaEntity"8@0:4
{CGSize=ff}24@0:4@8{CGSize=ff}12@20
{CGRect={CGPoint=ff}{CGSize=ff}}32@0:4@8@12{CGRect={CGPoint=ff}{CGSize=ff}}16
v24@0:4@8{CGSize=ff}12i20
B20@0:4@8i12i16
v12@0:4@"NUIContainerView"8
{CGSize=ff}24@0:4@"NUIContainerView"8{CGSize=ff}12@"UIView"20
{CGRect={CGPoint=ff}{CGSize=ff}}32@0:4@"NUIContainerView"8@"UIView"12{CGRect={CGPoint=ff}{CGSize=ff}}16
v24@0:4@"NUIContainerView"8{CGSize=ff}12i20
B20@0:4@"NUIContainerView"8i12i16
{UIEdgeInsets=ffff}16@0:4@8@12
{NSDirectionalEdgeInsets=ffff}16@0:4@8@12
i16@0:4@8@12
{UIEdgeInsets=ffff}16@0:4@"NUIContainerStackView"8@"UIView"12
{NSDirectionalEdgeInsets=ffff}16@0:4@"NUIContainerStackView"8@"UIView"12
i16@0:4@"NUIContainerStackView"8@"UIView"12
{CGSize=ff}24@0:4{CGSize=ff}8f16f20
@"NUIContainerStackView"
@16@0:4^v8@12
@"NSDate"
v16@0:4f8B12
v24@0:4f8B12B16B20
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
@"CAShapeLayer"
v12@0:4@"NMUMenuTableViewController"8
f12@0:4@8
f12@0:4@"NMUTopLevelCollectionViewController"8
B12@0:4@"NMUTopLevelCollectionViewController"8
@"NMUMenuTableViewController"8@0:4
v16@0:4@"NMUTopLevelCollectionViewController"8@"NSIndexPath"12
B16@0:4@8@12
@"NMUMenuTableViewController"
@"NSIndexPath"
@"MPIdentifierSet"
@"NMUTopLevelCollectionSyncInfoController"
@32@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8@24f28
@20@0:4@8i12f16
@20@0:4@8{CGSize=ff}12
@16@0:4{CGSize=ff}8
v28@0:4@8f12I16I20B24
v24@0:4@8@12@16@20
@"NMUArtworkFormat"
@"NSMapTable"
@"<NMUArtworkLoaderDataSource>"
v16@0:4@"NMUNowPlayingTimeline"8@"NMUNowPlayingTimelineEntry"12
v16@0:4@"NMUNowPlayingTimeline"8@"NSArray"12
v12@0:4@"NMUNowPlayingTimeline"8
v16@0:4@"UICollectionView"8@"NSArray"12
@"PUICActivityIndicatorView"
@"PUICTableViewCellBackgroundView"
v12@0:4@"<NACRoutingController>"8
v24@0:4@8{CGPoint=ff}12N^{CGPoint=ff}20
v20@0:4@8@12f16
v12@0:4@"UIScrollView"8
v24@0:4@"UIScrollView"8{CGPoint=ff}12N^{CGPoint=ff}20
v16@0:4@"UIScrollView"8B12
@"UIView"12@0:4@"UIScrollView"8
v16@0:4@"UIScrollView"8@"UIView"12
v20@0:4@"UIScrollView"8@"UIView"12f16
B12@0:4@"UIScrollView"8
f16@0:4@8@12
B24@0:4@8:12@16@20
v24@0:4@8:12@16@20
B20@0:4@8@12@16
v20@0:4@"UITableView"8@"UITableViewCell"12@"NSIndexPath"16
v20@0:4@"UITableView"8@"UIView"12i16
f16@0:4@"UITableView"8@"NSIndexPath"12
f16@0:4@"UITableView"8i12
@"UIView"16@0:4@"UITableView"8i12
i16@0:4@"UITableView"8@"NSIndexPath"12
v16@0:4@"UITableView"8@"NSIndexPath"12
B16@0:4@"UITableView"8@"NSIndexPath"12
@"NSIndexPath"16@0:4@"UITableView"8@"NSIndexPath"12
@"NSString"16@0:4@"UITableView"8@"NSIndexPath"12
@"NSArray"16@0:4@"UITableView"8@"NSIndexPath"12
@"UISwipeActionsConfiguration"16@0:4@"UITableView"8@"NSIndexPath"12
@"NSIndexPath"20@0:4@"UITableView"8@"NSIndexPath"12@"NSIndexPath"16
B24@0:4@"UITableView"8:12@"NSIndexPath"16@20
v24@0:4@"UITableView"8:12@"NSIndexPath"16@20
B16@0:4@"UITableView"8@"UITableViewFocusUpdateContext"12
v20@0:4@"UITableView"8@"UITableViewFocusUpdateContext"12@"UIFocusAnimationCoordinator"16
@"NSIndexPath"12@0:4@"UITableView"8
B20@0:4@"UITableView"8@"NSIndexPath"12@"<UISpringLoadedInteractionContext>"16
I16@0:4@8@12
v20@0:4@"PUICTableView"8@"UITableViewRowAction"12@"NSIndexPath"16
I16@0:4@"PUICTableView"8@"NSIndexPath"12
i20@0:4@8@12i16
v20@0:4@8i12@16
i16@0:4@"UITableView"8i12
@"UITableViewCell"16@0:4@"UITableView"8@"NSIndexPath"12
i12@0:4@"UITableView"8
@"NSString"16@0:4@"UITableView"8i12
@"NSArray"12@0:4@"UITableView"8
i20@0:4@"UITableView"8@"NSString"12i16
v20@0:4@"UITableView"8i12@"NSIndexPath"16
v20@0:4@"UITableView"8@"NSIndexPath"12@"NSIndexPath"16
v24@0:4@8d12@?20
@"<NACRoutingController>"
@"NMCAudioRoutingManager"
@"NMCVirtualAudioRoute"
@"NACAudioRoute"
@"<PUICActionSheetControllerDelegate>"
@"NMUAirPlayActionCell"
@"PUICActionSheetGroup"
@"_NMUTransportControlButtonTouchHighlightMaskView"
@"<NMUTransportControlsTouchHighlightProvider>"
B12@0:4@"UIGestureRecognizer"8
B16@0:4@"UIGestureRecognizer"8@"UIGestureRecognizer"12
B16@0:4@"UIGestureRecognizer"8@"UITouch"12
B16@0:4@"UIGestureRecognizer"8@"UIPress"12
{CGPoint=ff}24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@"NMUNowPlayingIndicatorView"
@"UIControl"
{CGRect="origin"{CGPoint="x"f"y"f}"size"{CGSize="width"f"height"f}}
@"_NMUQueuedExtendedTransportControlsRequest"
@"<NMUNowPlayingViewDelegate>"
@"NMUSecondaryTransportControlsView"
@"NMUVolumeControlsView"
v12@0:4@"UIViewController"8
@24@0:4@8B12@16@?20
@28@0:4@8B12@16@?20@?24
@"PUICNavigationController"
@20@0:4@8@12@?16
@"_NMUTransportControlButton"
@"<NMUTransportControlsViewDelegate>"
@"NMUDefaultTouchHighlightProvider"
@16@0:4B8@?12
@20@0:4@8B12@?16
@16@0:4i8B12
@"NMUFeedbackActionSheetHeaderView"
@"<NMUNowPlayingFeedbackViewControllerDelegate>"
v12@0:4@"NSString"8
@"UIColor"8@0:4
v12@0:4@"UIColor"8
v20@0:4I8@12@?16
v20@0:4B8@12@?16
v20@0:4I8@"NSDictionary"12@?<v@?@"PUICSnapshotContext">16
v16@0:4B8@?<v@?@"PUICSnapshotContext">12
v20@0:4B8@"NSDictionary"12@?<v@?@"PUICSnapshotContext">16
@"<NMUSnapshotDelegate>"
v24@0:4@8@12@16^v20
@"UIView"12@0:4@"NMUTransportControlsView"8
v20@0:4^@8^@12@16
@"<NMUMPModelRequestContentLoaderDataSource>"
@"<NMUMPModelRequestContentLoaderDelegate>"
I12@0:4I8
v12@0:4@"NMRNowPlayingController"8
@"NMUNowPlayingTimelineEntry"
visibilityChangedBlock
T@?,C,N,V_visibilityChangedBlock
cellClass
T#,&,N,V_cellClass
cellReuseIdentifier
T@"NSString",&,N,V_cellReuseIdentifier
visibilityBlock
T@?,C,N,V_visibilityBlock
cellConfigurationBlock
T@?,C,N,V_cellConfigurationBlock
actionBlock
T@?,C,N,V_actionBlock
visible
TB,R,N,GisVisible
AlbumSongCell
GenericCell
TRACKLIST_DONE_BUTTON_TITLE
Done
v4@?0
v8@?0@"MPModelObject"4
v16@?0@4i8^B12
TrackList-PlaceholderMusicItem
TrackList-PlaceholderPodcastItem
v8@?0@"NSError"4
v12@?0@"MPCPlayerResponse"4@"NSError"8
TrackList-PlaceholderMusicHeader
@"NSArray"8@?0I4
MPModelPlaylist
TrackList-PlaceholderPodcastHeader
com.apple.NanoMusic
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
selectionBlock
T@?,C,N,V_selectionBlock
supportsSecureCoding
TB,R
digest
T@"NSData",C,N,V_digest
data
T@"NSData",C,N,V_data
bundleID
T@"NSString",C,N,V_bundleID
Watch
Phone
NowPlayingAppIcons/%@/%@.icon
nowPlayingIndicatorSize
T{CGSize=ff},R,N
nowPlayingIndicatorView
T@"NMUNowPlayingIndicatorView",R,N
trackNumberLabel
T@"UILabel",R,N
TODAY_TITLE
Today
EEEE
MMM d
com.apple.NanoMediaUI.audioRoutePickerAlert
v8@?0B4
v8@?0@"NMCAudioRoutesInfo"4
NMROriginDidResetPlaybackIntentNotification
NMROriginPlaybackErrorDomain
v8@?0@"NSNotification"4
statuses
v8@?0i4
v12@?0B4@"NSArray"8
v12@?0@"MPRemotePlaybackQueue"4@"NSError"8
v8@?0@"PUICActionSheetItem"4
SET_COMPANION_PLAYBACK_FAILED_DISMISS_BUTTON_TITLE
SET_COMPANION_PLAYBACK_FAILED_TITLE
Cannot Play This Item
SET_COMPANION_PLAYBACK_FAILED_MESSAGE
There was a problem playing this on your iPhone. 
SET_COMPANION_PLAYBACK_CURATED_ALERT_KEEP_UP_NEXT_BUTTON_TITLE
Keep Up Next
SET_COMPANION_PLAYBACK_CURATED_ALERT_CLEAR_UP_NEXT_BUTTON_TITLE
Clear Up Next
SET_COMPANION_PLAYBACK_CURATED_ALERT_CANCEL_BUTTON_TITLE
Cancel
SET_COMPANION_PLAYBACK_CURATED_ALERT_TITLE
com.apple.Music
com.apple.NanoRadio
com.apple.podcasts
currentPlaybackIntent
T@"<NMCPlayerPlaybackIntent>",&,N
B12@?0@"NMUModelCollectionItem"4@"NSDictionary"8
CellReuseIdentifier
TableViewCell
dataSource
T@"<NMUModelCollectionDataSource>",W,N,V_dataSource
delegate
T@"<NMUModelCollectionDelegate>",W,N,V_delegate
topItems
T@"NSArray",&,N,V_topItems
visibleTopItems
T@"NSArray",R,N
v12@?0i4i8
v12@?0@"NSIndexPath"4@"NSIndexPath"8
contentUnavailableView
T@"PUICContentUnavailableView",R,N,V_contentUnavailableView
contentLoader
T@"NMUMPModelRequestContentLoader",&,N,V_contentLoader
artworkLoader
T@"NMUArtworkLoader",&,N,V_artworkLoader
NMUStackCollectionElementKindBackView
hasBackView
TB,N,V_hasBackView
backViewRevealHeight
Tf,N,V_backViewRevealHeight
isShowingBackView
TB,R,N
absolutePosition
Tf,N,V_absolutePosition
relativePosition
Tf,N,V_relativePosition
depthProgress
Tf,N,V_depthProgress
flipProgress
Tf,N,V_flipProgress
com.apple.NanoMediaUI
LaunchURL
PinningSettings
Browsing
Playback
TransportControl
VolumeControl
RoutePicking
TrackList
MoreMenu
com.apple.NanoMediaUI.metrics
TopLevelContainers
PinnedPlaylists
PinnedAlbums
PinnedRecommendations
Select
ShuffleAll
PresentRoutePicker
Play
Pause
AirPlay
Crown
RouteSelect
RouteChange
Result
W1RouteAutoSelect
ChangeShuffleMode
ChangeRepeatMode
SelectTrack
Unknown
NowPlaying
Recommendation
TopLevel
Library
Songs
Albums
Artists
ArtistAlbums
Playlists
OriginList
Beats1
FeaturedStations
Genres
PlayPause
PreviousTrack
NextTrack
IntervalRewind
IntervalForward
FeedbackAction
PlaybackRate
Love
Dislike
AddToLibrary
RemoveFromLibrary
ListLike
ListDislike
ListBookmark
Succeeded
Failed
Cancelled
AppleTV
HomePod
Other
NMU_TRACKLIST_SUBTITLE
NMU_EPISODE_NUMBER_FORMAT
Episode %lu
NMU_EPISODE_NUMBER_TRAILER
E%lu Trailer
NMU_EPISODE_NUMBER_BONUS
E%lu Bonus
NMU_SEASON_NUMBER_FORMAT
Season %lu
NMU_SEASON_NUMBER_TRAILER
S%lu Trailer
NMU_SEASON_NUMBER_BONUS
S%lu Bonus
NMU_SEASON_AND_EPISODE_NUMBER_FORMAT
S%1$lu, E%2$lu
NMU_SEASON_AND_EPISODE_NUMBER_TRAILER
S%1$lu, E%2$lu Trailer
NMU_SEASON_AND_EPISODE_NUMBER_BONUS
S%1$lu, E%2$lu Bonus
NMU_TRAILER
Trailer
NMU_BONUS
Bonus
v8@?0@"NSDictionary"4
SUBSCRIPTION_LEASE_TAKEN_TITLE
SUBSCRIPTION_LEASE_TAKEN_MESSAGE
To resume listening here, just press play.
MUSIC_STREAMING_ERROR_REQUIRES_SUBSCRIPTION_TITLE
Playing this item requires an Apple Music membership
MUSIC_STREAMING_ERROR_REQUIRES_SUBSCRIPTION_MESSAGE
You can sign up in the Music app on your iPhone.
MUSIC_STREAMING_ERROR_TITLE_NO_CONNECTIVITY
No Internet
wapi
MUSIC_STREAMING_ERROR_MESSAGE_NO_CONNECTIVITY_WLAN
To play Music, connect to a WLAN or cellular network.
MUSIC_STREAMING_ERROR_MESSAGE_NO_CONNECTIVITY_WIFI
To play Music, connect to a Wi-Fi or cellular network.
MUSIC_STREAMING_ERROR_TITLE_CELLULAR_TURNED_OFF
MUSIC_STREAMING_ERROR_MESSAGE_CELLULAR_TURNED_OFF
You can turn on cellular data for this app in Settings.
MUSIC_STREAMING_ERROR_TITLE_CELLULAR_STREAMING_TURNED_OFF
Streaming on Cellular Data is Turned Off
MUSIC_STREAMING_ERROR_MESSAGE_CELLULAR_STREAMING_TURNED_OFF_WLAN
MUSIC_STREAMING_ERROR_MESSAGE_CELLULAR_STREAMING_TURNED_OFF_WIFI
NR_DEMO_MODE_ERROR_TITLE
Streaming Not Supported
NR_DEMO_MODE_ERROR_MESSAGE
Streaming is unavailable on demo devices.
RADIO_STREAMING_ERROR_REQUIRES_SUBSCRIPTION_TITLE
Playing this station requires an Apple Music membership
NR_STATION_REQUIRES_SUBSCRIPTION_MESSAGE
RADIO_STREAMING_ERROR_TITLE_NO_CONNECTIVITY
RADIO_STREAMING_ERROR_MESSAGE_NO_CONNECTIVITY_WLAN
To play Radio, connect to a WLAN or cellular network.
RADIO_STREAMING_ERROR_MESSAGE_NO_CONNECTIVITY_WIFI
To play Radio, connect to a Wi-Fi or cellular network.
RADIO_STREAMING_ERROR_TITLE_CELLULAR_TURNED_OFF
RADIO_STREAMING_ERROR_MESSAGE_CELLULAR_TURNED_OFF
RADIO_STREAMING_ERROR_TITLE_CELLULAR_STREAMING_TURNED_OFF
RADIO_STREAMING_ERROR_MESSAGE_CELLULAR_STREAMING_TURNED_OFF_WLAN
RADIO_STREAMING_ERROR_MESSAGE_CELLULAR_STREAMING_TURNED_OFF_WIFI
MUSIC_STREAMING_ERROR_BUTTON_TITLE
playbackController
T@"NMCMediaPlayerModelPlaybackController",W,N,V_playbackController
type
TI,N,V_type
headerViewOffsetFromScreenTop
Tf,R,N,Gnmu_headerViewOffsetFromScreenTop
containerViewController
T@"UIViewController",W,N,V_containerViewController
contentViewController
T@"UIViewController",&,N,V_contentViewController
syncInfo
T@"NMSMediaSyncInfo",R,N,V_syncInfo
topLevelCollectionViewController
T@"NMUTopLevelCollectionViewController",W,N,V_topLevelCollectionViewController
T@"<NMUTopLevelCollectionSyncInfoControllerDataSource>",W,N,V_dataSource
ORIGIN_NAME_WATCH
Apple Watch
ORIGIN_NAME_PHONE
iPhone
ORIGIN_NAME_WATCH_SHORT
ORIGIN_NAME_WITH_MULTIPLE_DEVICES
%1$@ +%2$lu
options
TI,R,N,V_options
nowPlayingUserInterfaceViewControllerBlock
T@?,C,N,V_nowPlayingUserInterfaceViewControllerBlock
customPrewarmBlock
T@?,C,N,V_customPrewarmBlock
NMUPrewarmer
titlesView
T@"NMUNowPlayingTitlesView",R,N,V_titlesView
Control-Play
Control-Pause
Control-Stop
Control-Forward
Control-Rewind
Control-Burger
%@-%@-%ld-%@
Control-LikeBan
Control-Love
@4@?0
Control-ForwardIntervalShort
Control-ForwardIntervalLong
Control-RewindIntervalShort
Control-RewindIntervalLong
%@%0.2f
%.0f
Control-SemiTransparentEmpty
SecondaryControl-MoreActions
SecondaryControl-TrackList
Volume-Up
Volume-Generic
Volume-Muted
Volume-Down
StatusBar-Watch
StatusBar-iPhone
StatusBar-iPhoneX
StatusBar-AppleTV
StatusBar-HomePod
StatusBar-HomePodPair
StatusBar-Speaker
Routing-Watch
Routing-iPhone
Routing-iPhoneX
Routing-Headphones
Routing-AirPods
Routing-AppleTV
Routing-HomePod
Routing-HomePodPair
Routing-BeatsPowerbeats
Routing-BeatsSolo
Routing-BeatsStudio
Routing-BeatsX
Routing-Speaker
Routing-GenericBluetooth
Routing-ConnectBluetooth
Orb-AirPlay
ActionSheet-Love
ActionSheet-Like
ActionSheet-Dislike
ActionSheet-BookmarkOn
ActionSheet-Bookmark
ActionSheet-MoreActions-Love
ActionSheet-MoreActions-Dislike
ActionSheet-MoreActions-Add
ActionSheet-MoreActions-Remove
Download-CloudSmall
Download-WaitingSpinnerSmall
Download-ProgressIndicatorShadowSmall
TrackList-Repeat
TrackList-RepeatOne
TrackList-Shuffle
TrackList-Cloud
NowPlaying-Vignette
NowPlaying-RadioLiveWaves
NowPlaying-Note
UNKNOWN_DURATION
--:--
NMUNowPlayingFieldTitle
NMUNowPlayingFieldArtist
NMUNowPlayingFieldAlbum
NMUNowPlayingFieldIsExplicit
NMUNowPlayingFieldRadioStation
NMUNowPlayingFieldSpaceSeparator
NMUNowPlayingFieldDashSeparator
NOW_PLAYING_FIELD_SEPARATOR
NOW_PLAYING_DASH_FIELD_SEPARATOR
v16@?0@"NSString"4I8^B12
style
Ti,N,V_style
titleText
T@"NSString",C,N,V_titleText
albumText
T@"NSString",C,N,V_albumText
artistText
T@"NSString",C,N,V_artistText
stationNameText
T@"NSString",C,N,V_stationNameText
originNameText
T@"NSString",C,N,V_originNameText
showsOriginName
TB,N,GshouldShowOriginName,V_showsOriginName
explicit
TB,N,GisExplicit,V_explicit
alwaysLive
TB,N,GisAlwaysLive,V_alwaysLive
textMargin
Tf,N,V_textMargin
textAlignment
Ti,N,V_textAlignment
topLineBaselineOffsetFromBoundsTop
Tf,R,N
firstLineFields
T@"NSArray",C,N,V_firstLineFields
firstLineFont
T@"UIFont",C,N,V_firstLineFont
firstLineColor
T@"UIColor",C,N,V_firstLineColor
firstLineLeading
Tf,N
secondLineFields
T@"NSArray",C,N,V_secondLineFields
secondLineFont
T@"UIFont",C,N,V_secondLineFont
secondLineColor
T@"UIColor",C,N,V_secondLineColor
secondLineLeading
marqueePaused
TB,N,GisMarqueePaused
marqueeStartedAnimating
TB,R,N,GhasMarqueeStartedAnimating
artworkImage
T@"UIImage",&,N,V_artworkImage
artworkCatalog
T@"MPArtworkCatalog",&,N,V_artworkCatalog
itemPersistentID
T@"NSNumber",&,N,V_itemPersistentID
processedArtworkImage
T@"UIImage",&,N,V_processedArtworkImage
touchHighlightArtworkImage
T@"UIImage",&,N,V_touchHighlightArtworkImage
NMUNowPlayingArtworkProcessing
v8@?0@"UIImage"4
placeholder-artwork.png
v8@?0@"UIGraphicsImageRendererContext"4
placeholder-artwork-processed.png
placeholder-artwork-touch-highlight.png
HasClearedLegacyArtwork-41527964
com.apple.NanoMusic.artworkBlur
com.apple.NanoMusic.touchHighlights
NanoMusicCore
NanoMediaRemote
NanoAudioControl
NanoMusicSync
NanoMediaUI
NanoMediaTool
com.apple.nanomusic
ProductType
DeviceName
FALLBACK_COMPANION_MODEL_NAME
Companion
v16@?0@"UIView"4I8^B12
_NMUNowPlayingIndicatorAnimationKey
bounds.size.height
numberOfLevels
TI,R,N,V_numberOfLevels
animationType
TI,R,N,V_animationType
interLevelSpacing
Tf,N,V_interLevelSpacing
levelWidth
Tf,N,V_levelWidth
levelCornerRadius
Tf,N,V_levelCornerRadius
maximumLevelHeight
Tf,N,V_maximumLevelHeight
minimumLevelHeight
Tf,N,V_minimumLevelHeight
stopped
TB,N,GisStopped,V_stopped
showsIdealizedLevelPositionsWhenStopped
TB,N,V_showsIdealizedLevelPositionsWhenStopped
sharedInstance
T@"NMUNowPlayingViewController",&,N
CollectionViewCell
_NMUMarqueeViewLayerAnimationKey
_NMUMarqueeViewAnimationIdentifierKey
_NMUMarqueeViewFeatheringMaskLayerAnimationKey
transform.translation.x
contents
NMUMarqueeViewMaskImage leftEdge:%d rightEdge:%d percentageWidth:%.2f width:%.2f color:%@
position
bounds
com.apple.NanoNowPlayingViewService
contentGap
Tf,N,V_contentGap
contentSize
T{CGSize=ff},N,V_contentSize
marqueeNeededForContentSize
TB,R,N,GisMarqueeNeededForContentSize
contentView
T@"UIView",R,N,V_contentView
T@"<NMUMarqueeViewDelegate>",W,N,V_delegate
marqueeDelay
Td,N,V_marqueeDelay
marqueeScrollRate
Td,N,V_marqueeScrollRate
featheringPercentageWidth
Tf,N,V_featheringPercentageWidth
featheringColor
T@"UIColor",&,N,V_featheringColor
paused
TB,N,GisPaused,V_paused
hasStartedAnimating
TB,R,N,GhasStartedAnimating
MenuNowPlayingCell
MenuDefaultCell
B12@?0@"NMUMenuItem"4@"NSDictionary"8
@sum.@count
sectionedItems
T@"NSArray",&,N,V_sectionedItems
sectionedVisibleItems
numberOfVisibleItems
TI,R,N
automaticallyAdjustsCellHeight
TB,N,V_automaticallyAdjustsCellHeight
wantsLargeIconLayout
TB,N,V_wantsLargeIconLayout
T@"<NMUMenuTableViewControllerDelegate>",W,N,V_delegate
B4@?0
v8@?0@"UITableViewCell"4
nowPlayingCellConfigurationBlock
T@?,C,N,V_nowPlayingCellConfigurationBlock
verticalStackViewContainer
T@"UIStackView",&,N,V_verticalStackViewContainer
horizontalStackViewContainer
T@"UIStackView",&,N,V_horizontalStackViewContainer
textLabel
T@"UILabel",&,N,V_textLabel
imageView
T@"UIImageView",&,N,V_imageView
actionButton
T@"PUICButton",&,N,V_actionButton
verticalStackView
T@"UIStackView",&,N,V_verticalStackView
T@"UIImage",C,N
active
TB,N,GisActive
controlType
Ti,N,V_controlType
controlsView
T@"NMUTransportControlsView",W,N,V_controlsView
fetchAuthoritativeStateBlock
T@?,C,N,V_fetchAuthoritativeStateBlock
Now Playing State Updating %@
Now Playing view artwork %@ %@ %@ %@
v8@?0@"NMUNowPlayingArtwork"4
com.apple.NanoMusic-Legacy
ICML_DISABLED_ALERT_DISMISS_BUTTON_TITLE
ICML_DISABLED_ALERT_TITLE
Turn on iCloud Music Library. 
ICML_DISABLED_ALERT_MESSAGE
Go to Settings on your paired iPhone.
REMOVE_FROM_LIBRARY_ALERT_CANCEL
REMOVE_FROM_LIBRARY_ALERT_REMOVE
Delete
REMOVE_FROM_LIBRARY_ALERT_REMOVE_SONG
Delete Song
REMOVE_FROM_LIBRARY_ALERT_DESCRIPTION
Do you want to delete this song from your library?
ORB_ACTION_TITLE_AIRPLAY
Audio/Video
currentUserActivity
T@"NSUserActivity",&,N,V_currentUserActivity
perfTestingDelegate
T@"<NMUNowPlayingViewControllerPerfTestingDelegate>",W,N,V_perfTestingDelegate
nowPlayingTrackTapDelegate
T@"<NMUNowPlayingViewControllerDelegate>",W,N,V_nowPlayingTrackTapDelegate
nowPlayingView
T@"NMUNowPlayingView",R,N
placeholderArtworkTemplateImageName
T@"NSString",&,N,V_placeholderArtworkTemplateImageName
placeholderNowPlayingState
T@"NMRNowPlayingState",&,N,V_placeholderNowPlayingState
waitForMatchingPlaceholderNowPlayingInfo
TB,N,V_waitForMatchingPlaceholderNowPlayingInfo
placeholderNowPlayingStateTimeout
Td,N,V_placeholderNowPlayingStateTimeout
currentOrigin
T@"NMROrigin",W,N,V_currentOrigin
shouldVolumeAutomaticallyBecomeFirstResponder
NowPlayingMarqueeAnimationsDisabled
Rewind
TogglePlayPause
Forward
Like/Ban
MPUTransportControlType(%ld)
text
attributedText
marqueeView
T@"NMUMarqueeView",R,N,V_marqueeView
T@"UILabel",R,N,V_textLabel
downloadProgressView
T@"NMUDownloadProgressView",R,N
com.apple.Music.userActivity
userActivityContainerItemType
Ti,R,N
userActivityContainerSelectedEntity
T@"MPMediaEntity",R,N
userActivityContainerVisualReferenceEntity
LIVE
H:[_leftImage]-(2)-[_liveLabel]-(2)-[_rightImage]
_liveLabel,_rightImage,_leftImage
liveLabel
T@"UILabel",&,N,V_liveLabel
leftImage
T@"UIImageView",&,N,V_leftImage
rightImage
T@"UIImageView",&,N,V_rightImage
artworkImageView
T@"UIImageView",R,N,V_artworkImageView
detailTextLabel
T@"UILabel",R,N,V_detailTextLabel
playing
TB,N,GisPlaying,V_playing
nowPlayingState
T@"NMUNowPlayingState",R,N
currentSource
persistentID
storeAdamID
title
artist
album
appBundleID
appName
elapsedTime
duration
timestamp
live
asset
playbackRate
<%@:%p %@>
%@-%@-%@
T@"NSNumber",R,N,V_persistentID
T@"NSNumber",R,N,V_storeAdamID
contentItemID
T@"NSString",R,N,V_contentItemID
T@"NSString",R,N,V_title
T@"NSString",R,N,V_artist
T@"NSString",R,N,V_album
Td,R,N,V_elapsedTime
Td,R,N,V_duration
T@"NSDate",R,N,V_timestamp
assetAvailability
Ti,R,N,V_assetAvailability
TB,R,N,GisLive,V_live
empty
TB,R,N,GisEmpty
TB,R,N,GisPlaying,V_playing
T@"NSString",R,N,V_appBundleID
T@"NSString",R,N,V_appName
Tf,R,N,V_playbackRate
isPlayable
TB,R,N,GisPlayable
projectedEndDate
T@"NSDate",R,N
muted
TB,N,GisMuted,V_muted
EUVolumeLimit
Tf,N,V_EUVolumeLimit
ignoresValueChangesDuringTracking
TB,N,V_ignoresValueChangesDuringTracking
durationForIgnoredValueChangesAfterTracking
Td,N,V_durationForIgnoredValueChangesAfterTracking
shouldBecomeFirstResponder
TB,N,V_shouldBecomeFirstResponder
untransformedFrame
T{CGRect={CGPoint=ff}{CGSize=ff}},N,Gnmu_untransformedFrame,Snmu_setUntransformedFrame:
layerTreePaused
TB,N,Gnmu_isLayerTreePaused,Snmu_setLayerTreePaused:
transform.rotation.z
waiting
state
TI,N,V_state
dimmed
TB,N,V_dimmed
progress
Tf,N,V_progress
TB,N,V_paused
artwork
T@"NMUNowPlayingArtwork",&,N
MenuView
v16@?0@"NSIndexPath"4@"MPIdentifierSet"8^B12
T@"<NMUTopLevelCollectionDelegate>",W,D,N
syncInfoController
T@"NMUTopLevelCollectionSyncInfoController",&,N,V_syncInfoController
v16@?0@"NSNumber"4@"UIColor"8^B12
usesVerticallyCenteredColons
TB,N
UseFakeModelData
NoArtwork
NoAttributedStrings
UIViewControllerPrefetchDisabled
BackgroundPrefetchDisabled
PPTRealisticScrolling
BackgroundImageRenderingEnabled
offset
iterations
@"NSDictionary"4@?0
unprocessedArtworkImage
T@"UIImage",C,N,V_unprocessedArtworkImage
T@"UIImage",C,N,V_processedArtworkImage
unprocessedArtworkImageVisible
TB,N,GisUnprocessedArtworkImageVisible,V_unprocessedArtworkImageVisible
SnapshotLoggingEnabled
size
T{CGSize=ff},N,V_size
scale
Tf,N,V_scale
Artwork Loader %@
Artwork Loader
v12@?0@4@"UIImage"8
default
T@"<NMUArtworkLoaderDataSource>",W,N,V_dataSource
com.apple.NanoMediaUI.assetAvailability
v8@?0@"NMUNowPlayingTimelineEntry"4
T@"UIImageView",R,N
activityIndicator
T@"PUICActivityIndicatorView",&,N,V_activityIndicator
routeIcon
T@"UIImage",&,N,V_routeIcon
backgroundColorDodgeView
T@"PUICTableViewCellBackgroundView",&,N,V_backgroundColorDodgeView
backgroundSourceOverView
T@"PUICTableViewCellBackgroundView",&,N,V_backgroundSourceOverView
loading
TB,N,V_loading
imageView.image
wantsTwoLineHeight
TB,N,V_wantsTwoLineHeight
routeContext
T@,&,N,V_routeContext
routeType
Ti,N,V_routeType
NMUAirPlayActionCellIdentifier
PUICActionSheetItemCellIdentifier
AIRPLAY_LOCAL_DEVICE_CONNECTION_FAILED_MESSAGE
AIRPLAY_GENERIC_CONNECTION_FAILED_MESSAGE
AIRPLAY_CONNECTION_FAILED_DISMISS_BUTTON_TITLE
AIRPLAY_CONNECTION_FAILED_TITLE
Connection Failed
AIRPLAY_NO_REMOTE_ROUTES_MESSAGE
AIRPLAY_NO_LOCAL_ROUTES_MESSAGE
To play audio, connect Bluetooth headphones to your %@.
AIRPLAY_OPEN_CONNECT_SETTINGS_TITLE
Connect a Device
AIRPLAY_NO_CONNECTIVITY_MESSAGE
AIRPLAY_INSTRUCTIONS
Choose where to play audio:
prefs:root=Bluetooth
i12@?0@"NACAudioRoute"4@"NACAudioRoute"8
origin
T@"NMROrigin",&,N,V_origin
automaticallySelectsLoneAvailableRoute
TB,N,V_automaticallySelectsLoneAvailableRoute
NOW_PLAYING_INFO_LOADING
imageScaleForTouchState
Tf,N,V_imageScaleForTouchState
marginValue
Tf,N,V_marginValue
touchHighlightProvider
T@"<NMUTransportControlsTouchHighlightProvider>",W,N,V_touchHighlightProvider
shouldUseExtendedTransportControls
TB,N,V_shouldUseExtendedTransportControls
animated
TB,N,V_animated
com.apple.SessionTrackerApp
transportControlsView
T@"NMUTransportControlsView",&,N,V_transportControlsView
trackTitlesView
T@"NMUNowPlayingTitlesView",&,N,V_trackTitlesView
applicationIconImageView
T@"UIImageView",&,N,V_applicationIconImageView
T@"<NMUNowPlayingViewDelegate>",W,N,V_delegate
secondaryTransportControlsView
T@"NMUSecondaryTransportControlsView",R,N,V_secondaryTransportControlsView
trackTitlesInteractionEnabled
TB,N,GisTrackTitlesInteractionEnabled,V_trackTitlesInteractionEnabled
volumeControlsView
T@"NMUVolumeControlsView",R,N,V_volumeControlsView
Td,N,V_elapsedTime
originName
T@"NSString",C,N,V_originName
hidingAllControls
TB,N,GisHidingAllControls,V_hidingAllControls
playbackIntentClass
T#,&,N,V_playbackIntentClass
nowPlayingViewControllerClass
T#,&,N,V_nowPlayingViewControllerClass
navigationController
T@"PUICNavigationController",&,N,V_navigationController
T@"<NMUTransportControlsViewDelegate>",W,N,V_delegate
availableControls
T@"NSArray",C,N,V_availableControls
displayedSkipForwardInterval
Td,N,V_displayedSkipForwardInterval
displayedSkipBackwardInterval
Td,N,V_displayedSkipBackwardInterval
displayedPlaybackRate
Tf,N,V_displayedPlaybackRate
showIsPlaying
TB,N,V_showIsPlaying
likeCommandPresentationStyle
Ti,N,V_likeCommandPresentationStyle
enabled
TB,N,GisEnabled,V_enabled
defaultTouchHighlightProvider
T@"NMUDefaultTouchHighlightProvider",R,N,V_defaultTouchHighlightProvider
customTouchHighlightProvider
T@"<NMUTransportControlsTouchHighlightProvider>",W,N,V_customTouchHighlightProvider
UINavigationControllerDidShowViewControllerNotification
LIKE_TRACK_DEFAULT_TITLE
Play More
DISLIKE_TRACK_DEFAULT_TITLE
Play Less
BOOKMARK_TRACK_DEFAULT_TITLE
Wishlist
ADD_TO_LIBRARY_DEFAULT_TITLE
Add to Library
REMOVE_FROM_LIBRARY_DEFAULT_TITLE
Delete from Library
MORE_ACTIONS_LOVE_TRACK_DEFAULT_TITLE
MORE_ACTIONS_DISLIKE_TRACK_DEFAULT_TITLE
LIKE_TRACK_DEFAULT_TITLE_3RD_PARTY
Like
DISLIKE_TRACK_DEFAULT_TITLE_3RD_PARTY
BOOKMARK_TRACK_DEFAULT_TITLE_3RD_PARTY
Bookmark
T@"NMUFeedbackActionSheetHeaderView",R,N,V_trackTitlesView
cancelled
TB,N,GisCancelled,V_cancelled
T@"NSString",C,D,N
forFirstPartyMusicApp
TB,N,GisForFirstPartyMusicApp,V_forFirstPartyMusicApp
feedbackActionSheetControllerDelegate
T@"<NMUNowPlayingFeedbackViewControllerDelegate>",W,N,V_feedbackActionSheetControllerDelegate
TB,N,GisEnabled
TB,N,GisVisible
T@"NSString",C,N
accessoryViewActiveTintColor
T@"UIColor",C,N
controller
T@"NMUNowPlayingFeedbackViewController",W,N,V_controller
representedFeedbackAction
Ti,N,V_representedFeedbackAction
TB,D,N,GisActive
TB,N,GisVisible,V_visible
T@"UIColor",C,N,V_accessoryViewActiveTintColor
T@"<NMUSnapshotDelegate>",W,N,V_delegate
snapshotTimeout
Td,N,V_snapshotTimeout
_NMUTouchHighlightView-MatchMove
sourceLayerForMatchMoveAnimations
T@"CALayer",W,N,V_sourceLayerForMatchMoveAnimations
touchHighlightImage
T@"UIImage",C,N,V_touchHighlightImage
v16@?0@"MPModelResponse"4I8^B12
Content Loader %@
v8@?0@"MPChangeDetails"4
v12@?0@"MPModelResponse"4@"NSError"8
v16@?0@"MPModelRequest"4I8^B12
T@"<NMUMPModelRequestContentLoaderDataSource>",W,N,V_dataSource
T@"<NMUMPModelRequestContentLoaderDelegate>",W,N,V_delegate
loadingContent
TB,R,N,GisLoadingContent,V_loadingContent
finishedLoadingContent
TB,R,N,GhasFinishedLoadingContent,V_finishedLoadingContent
modelResponses
errors
T@"NSArray",R,N,V_errors
automaticContentUpdatingEnabled
TB,N,GisAutomaticContentUpdatingEnabled,V_automaticContentUpdatingEnabled
backgroundContentUpdatingEnabled
TB,N,GisBackgroundContentUpdatingEnabled,V_backgroundContentUpdatingEnabled
standardTransportControls
T@"NSArray",C,N,V_standardTransportControls
extendedPrimaryTransportControls
T@"NSArray",C,N,V_extendedPrimaryTransportControls
extendedSecondaryTransportControls
T@"NSArray",C,N,V_extendedSecondaryTransportControls
NMUTrackAssetAvailabilityDidChangeDistributedNotification
com.apple.NMUNowPlayingTimeline
PreviousEntries
com.apple.NanoMediaUI.timeline
com.apple.NanoMediaUI.timelineArchiving
v8@?0@"<NMUNowPlayingTimelineObserver>"4
currentEntry
T@"NMUNowPlayingTimelineEntry",R,N
previousEntries
upNextEntries
mode
TI,R,N,V_mode
activeOrigin
T@"NMROrigin",R,N
=333?
333333
?333333
?ffffff
%@ failed with error: %@
Failed to change item due to error: %@
Failed to archive icon %@ due to %@
Failed to unarchive icon with bundleID %@ due to %@
Failed to connect to route picker alert with error: %@
There's W1 route available. Letting CM to handle the route picking.
CM successfully picked W1 route.
CM failed to pick W1 route in 3 seconds. Presenting route picker.
There's already a valid picked route; skipping presentation of the route picker.
Route picker dismissed but no route was picked.
Route picker dismissed; %@ was picked.
currentPlaybackIntent is updated to %@
NMROrigin received %@, clearing currentPlaybackIntent.
Fail to get remotePlaybackQueue for %@ due to %@.
Subscription Lease Error: playback paused for lease end
Playback Error: Unable to start playback because user is not a subscriber
Playback Error: Unable to start playback due to no network [%ld]
Playback Error: Unable to start playback due to cellular being disabled
Playback Error: Unable to start playback due to cellular streaming being disabled
Playback Error: Unable to start playback due to %{public}@, type:%ld
Streaming Error: Unable to start playback because user is not a subscriber
Cellular Error: Unable to start playback due to no network [%ld]
Cellular Error: Unable to start playback due to cellular being disabled
Cellular Error: Unable to start playback due to cellular streaming being disabled
Handling pending media sync info update in view did appear.
Received media sync info did update notification.
Ignoring media sync info update due to view not being visible.
Ignoring media sync info update due to view not being loaded.
[Prewarm] Starting prewarm
[Prewarm] Finished prewarm
NMUPrewarmer background task expired.
Will remove cached background images: %@
Failed to remove item: %@, error: %@
[UI] stopped already set to %d
[UI] setting stopped to %d
[MenuItemVisibility] TableView updating visible items
[MenuItemVisibility] MenuItem calling visibilityChangedBlock for %@
[MenuItemVisibility] On iPhone cell will call dealloc
[MenuItemVisibility] Showing On iPhone menu item
[MenuItemVisibility] Not showing On iPhone menu item. companionIsConnected: %d, companionOriginIsRegistered: %d
[MenuItemVisibility] On iPhone cell observed that connectivity did change. Connected:%d
[MenuItemVisibility] On iPhone cell requesting visibility update (Connectivity)
[MenuItemVisibility] On iPhone cell requesting visibility update (RegisteredOrigins)
[NowPlayingVC] [NMUNowPlayingVC] Setting current origin to %@
[NowPlayingVC] Fetch now playing state for snapshot
[NowPlayingVC] Finished fetching now playing state
NowPlayingVC] Returning optimistic playback state %d
NowPlayingVC] Returning placeholder playback state %d
NowPlayingVC] Returning now playing state %d from origin %@
[NowPlayingVC] Pausing the marquee
[NowPlayingVC] Sending media remote command %u
[NowPlayingVC] Optimistically setting playback state for command %u
[NowPlayingVC] %@ transport control tapped.
[NowPlayingVC] Volume control availability changing from %d to %d for origin: %@
[NowPlayingVC] Created demo volume controller
[NowPlayingVC] Created local volume controller
[NowPlayingVC] Created proxy volume controller for companion with category: %@
[NowPlayingVC] Created proxy volume controller for origin %@
Failed to create app icon from cached bitmap for %@.
Failed to generate app icon for %@, isValid: %d, data: %@.
Music library change detected
Scheduling asset availability update
Time since last update: %f
Next update scheduled in %f seconds
Asset update timer fired, querying ML for each previous entry
Asset availability changed for at least one entry, archive and post a darwin notification
[Routing] Could not connect to device: %@. Showing connection failed message.
[Routing] Timed out picking a route.
[Routing] Selecting the lone available local route: %@
[Routing] The lone available local route is W1 route. Skip auto picking.
[UI] playing already set to %d
[UI] setting playing to %d
Pushing now playing view controller %@ for origin %@
%@ does not implement %@.
[UI] setting showIsPlaying to %d
[UI] showIsPlaying already set to %d
[Snapshot] Preparing for snapshot...
[Snapshot] Skip preparing because snapshot reason is backgrounded
[Snapshot] Ready for snapshot!
[Snapshot] Ready for snapshot, but we already aborted.
[Snapshot] Scheduling %f second timeout.
[Snapshot] Allowing snapshot to happen even though we're not ready.
[ContentLoader] Model request will be sent
-[%@ performWithResponseHandler:] failed with error: %@
[ContentLoader] Model response returned with %ld items
Content reload returned errors but we already have content - Errors %@
[Timeline] Failed to unarchive previous entries due to %@
[Timeline] There are %ld previous NMUNowPlayingTimelineEntry items. Shrinking the array to %ld items.
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
