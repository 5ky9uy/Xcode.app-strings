init
alloc
daemon
behavior
isAppleWatch
initWithProfile:isWatch:
setDelegate:
resume
class
endpoint
serverWithClient:activitySharingManager:error:
allFriends
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
exportObjectForListener:client:error:
listenerEndpointForClient:error:
activitySharingManager
initWithProfile:
.cxx_destruct
profile
setActivitySharingManager:
_listener
_profile
_activitySharingManager
UUID
containsObject:
_queue_earnedInstancesForInterval:selectingCompetitionsUsingFilter:
endDate
startDate
hk_isAfterOrEqualToDate:
hk_isBeforeDate:
_allCompetitionsOrderedByEndDate
friends
countByEnumeratingWithState:objects:count:
displayName
completedCompetitions
hk_filter:
count
myTotalScore
opponentTotalScore
currentCalendar
components:fromDate:
date
setTemplateUniqueName:
setEarnedDateComponents:
setCreatedDate:
countUnit
quantityWithUnit:doubleValue:
setValue:
setByAddingObject:
isParticipantWinning:
victoryBadgeStyle
arrayByAddingObjectsFromArray:
earnedInstancesForHistoricalInterval:databaseContext:
uniqueName
initForCreatorDevice:
earnedInstancesForIncrementalInterval:
dataProvider
setDataProvider:
_creatorDevice
_serialQueue
_awardedCompetitionUUIDs
_dataProvider
indexOfObjectPassingTest:
setProfile:
activityDataManager
setActivityDataManager:
cloudKitManager
setCloudKitManager:
competitionManager
setCompetitionManager:
contactsManager
setContactsManager:
fakeFriendWithCompetitionStatus:competition:
_contactWithFakeCompetitionStatus:
_fakeCompetitionHistory
arrayByAddingObject:
initWithActivitySnapshots:friendAchievements:friendWorkouts:contact:competitions:
setUUID:
numberWithInt:
arrayWithObjects:count:
setOpponentScores:
setScores:
setStartDateComponents:
setDurationDateComponents:
firstObject
setPreferredVictoryBadgeStyles:
setMaximumNumberOfPointsPerDay:
numberWithUnsignedInteger:
integerValue
numberWithDouble:
kilocalorieUnit
doubleValue
mileUnit
minuteUnit
numberWithBool:
boolValue
dateByAddingTimeInterval:
fitnessFriendworkoutWithActivityType:friendUUID:startDate:endDate:duration:totalActiveEnergyBurned:totalBasalEnergyBurned:totalDistance:goalType:goal:bundleID:isWatchWorkout:isIndoorWorkout:deviceManufacturer:deviceModel:
_setSourceRevision:
achievementWithTemplateUniqueName:completedDate:value:friendUUID:
unsignedIntValue
achievementStore
achievementWithTemplateUniqueName:
_fakeSnapshotWithCompleteRings:
fakeSnapshot
fakeFriendAchievement
fakeWorkout
arrayWithArray:
recordsFromActivityDataCodables:
updateAllActiveCompetitionsWithScores:completion:
forceSaveRecordsIntoPrivateDatabaseIgnoringServerChanges:recordIDsToDelete:priority:completion:
insertEventWithType:
setShortName:
setWithObject:
setDestinations:
setRelationship:
setRemoteRelationship:
integerForKey:
distantPast
dateByAddingUnit:value:toDate:options:
fakeCompetitionWithStartDate:winningParticipant:
boolForKey:
_setActivitySummaryIndex:
_setStartDate:
_setEndDate:
setActiveEnergyBurned:
setActiveEnergyBurnedGoal:
setAppleExerciseTime:
setAppleExerciseTimeGoal:
setAppleStandHours:
setAppleStandHoursGoal:
meterUnit
setDistanceWalkingRunning:
setStepCount:
_setPushCount:
_setWheelchairUse:
snapshotWithActivitySummary:
sourceManager
localDeviceSourceWithError:
database
sourceUUIDWithHealthDatabase:error:
setSourceUUID:
setFriendUUID:
activitySharingManagerReady:
fakeFriend
fakeAchievement
fakeCompleteSnapshot
pushFakeActivityDataToAllFriendsWithCompletion:
_activityDataManager
_cloudKitManager
_competitionManager
_contactsManager
initWithSuiteName:
synchronize
valueForKey:
UUIDString
initWithUUIDString:
numberWithUnsignedInt:
isAppleInternalInstall
_sourceWithBundleIdentifier:name:productType:options:
initWithSource:version:
objectForKeyedSubscript:
dictionary
setObject:forKeyedSubscript:
numberWithInteger:
initWithDictionary:
dictionaryRepresentation
payload
setPayload:
retryCount
setRetryCount:
type
setType:
senderAddress
setSenderAddress:
ephemeralCompletionBlock
setEphemeralCompletionBlock:
_type
_payload
_retryCount
_senderAddress
_ephemeralCompletionBlock
initWithQueueName:
copy
enumerateKeysAndObjectsUsingBlock:
dealloc
setObject:forKey:
_synchronizePreferences
removeObjectForKey:
messageWithIdentifier:
enumerateQueuedMessagesUsingBlock:
setMessage:identifier:
removeMessageWithIdentifier:
_identifierToMessageDictionary
_domainName
_queueName
initWithToken:
registerBlockWaitingOnSuccess:
token
blocksWaitingOnSuccess
_token
_blocksWaitingOnSuccess
initWithDescription:targetSerialQueue:
initWithServiceIdentifier:
dictionaryWithObjects:forKeys:count:
removeObserver:
defaultCenter
achievementManager
fitnessAppBadgeManager
friendListManager
addObserver:
gatewayManager
companionBulletinBoardManager
isWatch
_processPersistedMessagesIfNeeded
allValues
beginReceivingMessages
_contactStoreDidChangeNotification:
addObserver:selector:name:object:
endReceivingMessages
removeObserver:name:object:
processRetryMessageQueue
insertPlaceholderRelationshipEvent:friendUUID:
removePlaceholderContactWithToken:
contactWithUUID:
relationship
isActivityDataVisible
cloudKitAddress
participants
predicateWithBlock:
filteredArrayUsingPredicate:
setPermission:
_queue_saveRelationship:contact:withExtraRecords:completion:
errorWithDomain:code:userInfo:
fetchShareParticipantWithCloudKitAddress:completion:
fetchOrCreateActivityDataShareWithCompletion:
performTransaction:
_performBlockWaitingForFriendshipBeganForFriendWithUUID:block:
fetchAllChangesWithPriority:completion:
isMuteEnabled
_queue_saveRelationship:contact:completion:
_queue_removeFriendWithUUID:eventType:completion:
isFriendshipActive
contacts
allObjects
relationshipZone
recordWithZoneID:
hk_map:
setWithArray:
relationshipsWithRelationshipAndEventRecords:
saveContact:
saveRecordsIntoPrivateDatabase:priority:completion:
hasReachedMaximumNumberOfFriends
contactWithDestinations:
createContactWithDestinations:
_insertInviteForContact:destination:serviceIdentifier:
savePlaceholderContact:
remoteRelationship
outgoingHandshakeToken
setHandshakeToken:
setInviterCloudKitAddress:
setInviterCallerID:
setInviterBuildNumber:
setInviterVersion:
_currentActivityDataPreview
setActivityDataPreview:
handshakeToken
sendInviteRequest:toDestinations:completion:
_queue_saveRelationshipAndFetchOrCreateShares:contact:completion:
fetchCloudKitAddressWithCompletion:
_queue_insertPlaceholderFriendshipDidBeginForContactWithUUID:
requestBadgeUpdate
_queue_removePlaceholderRelationshipBeganForContactWithUUID:success:
incomingHandshakeToken
setResponseCode:
setInviteeCloudKitAddress:
setInviteeBuildNumber:
setInviteeVersion:
preferredReachableAddress
preferredReachableService
absoluteString
setActivityShareURL:
setRelationshipShareURL:
setInviteeShareLocations:
withdrawInviteRequestFrom:
sendInviteResponse:toDestinations:completion:
_queue_addPersonWithCloudKitAddress:toShares:completion:
_queue_fetchSharesForRelationship:completion:
hasOutgoingInviteRequest
sendWithdrawInviteRequest:toDestinations:completion:
isAwaitingInviteResponse
relationshipEvents
inviterCloudKitAddress
inviterCallerID
inviterBuildNumber
inviterVersion
shouldFilterIncomingMessageFrom:
_contactWithInviteRequest:fromSender:
showInviteAttemptNeedToUpgradeFrom:
isInviteVersionCompatible:
showVersionTooLowForIncomingInviteFrom:
addresses
mutableCopy
addObject:
setIncomingHandshakeToken:
setCloudKitAddress:
setAddresses:
setPreferredReachableAddress:
serviceIdentifier
setPreferredReachableService:
acceptInviteRequestFromFriendWithUUID:completion:
showInviteRequestFrom:
activityDataPreview
_processActivityDataPreview:friendUUID:
showInviteAttemptNeedToSignInFrom:
gatewayStatusWithCompletion:
inviteeCloudKitAddress
inviteeBuildNumber
inviteeVersion
_contactWithOutgoingHandshakeToken:
showVersionTooLowForOutgoingInviteTo:
showVersionTooHighForOutgoingInviteTo:
sendWithdrawInviteRequestToFriendWithUUID:completion:
responseCode
inviteeShareLocations
setInviterShareLocations:
showInviteAcceptResponseFrom:
sendFinalizeHandshake:toDestinations:completion:
_queue_acceptShares:forRelationship:contact:completion:
_contactWithIncomingHandshakeToken:
hasIncomingInviteRequest
inviterShareLocations
systemFieldsOnlyRecord
recordID
dictionaryWithDictionary:
_queue_reconcileCloudKitRelationships:
removeAllObjects
timestampForMostRecentRelationshipEvent
compare:
_queue_processRemoteRelationships:completion:
showMaxNumberOfFriendsError
showErrorAcceptingInviteFrom:
processPersistedMessageQueue
deleteActivityDataForFriendWithUUID:
removeUnusedTemplatesForFriendWithUUID:
removeParticpantWithCloudKitAddress:fromShares:completion:
isEqualToString:
contactMatchingCriteriaBlock:
remoteRelationshipShareID
zoneID
destinations
setOutgoingHandshakeToken:
_contactWithUUIDPreferringPlaceholders:
placeholderContactWithUUID:
relationshipShareID
fetchShareWithShareRecordID:completion:
share
setByAddingObjectsFromArray:
_queue_handleSavedRecords:forContact:
createShareWithRootRecord:otherRecordsToSave:completion:
addParticipantWithCloudKitAddress:toShares:completion:
activityShareURL
URLWithString:
relationshipShareURL
setRemoteActivityDataShareID:
setRemoteRelationshipShareID:
acceptSharesWithURLs:completion:
_queue_allRelationshipsByRecordID
_queue_reconcileAddressBookAgainstRelationships:
_queue_allContactsByRecordID
sortedArrayUsingComparator:
linkedContactStoreIdentifier
setByAddingObjectsFromSet:
setContactsUsingTransaction:
_contactWithRemoteRelationshipRecordZoneID:
hasCompletedFirstFetch
currentRelationshipEventAnchor
traverseRelationshipHistoryStartingAtEventWithAnchor:block:
activitySnapshot
dateWithTimeIntervalSinceReferenceDate:
fitnessFriendActivitySnapshotWithCodableSnapshot:friendUUID:uploadedDate:
workouts
achievements
saveActivitySnapshots:workouts:achievements:
currentActivitySnapshot
codableSnapshot
currentWorkouts
currentAchievements
setActivitySnapshot:
setWorkouts:
setAchievements:
timeIntervalSinceReferenceDate
setDate:
energyBurned
energyBurnedGoal
messageCenter:didReceiveInviteRequest:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveInviteResponse:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveFinalizeHandshake:fromSenderAddress:messageHandledCompletion:
messageCenter:didReceiveWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:
messageCenter:errorSendingInviteRequest:
messageCenter:errorSendingInviteResponse:
messageCenter:errorSendingFinalizeHandshake:
messageCenter:errorSendingWithdrawInviteRequest:
isReadyToProcessChanges
cloudKitManager:didBeginUpdatesForFetchWithType:
cloudKitManager:didEndUpdatesForFetchWithType:
cloudKitManager:didRecieveNewRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewRemoteRelationships:fromRecordZoneWithID:moreComing:changesProcessedHandler:
cloudKitManager:didReceiveNewActivitySnapshotsForSelf:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewActivitySnapshots:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewFriendWorkouts:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewFriendAchievements:moreComing:changesProcessedHandler:
cloudKitManager:didRecieveNewNotificationEvents:moreComing:changesProcessedHandler:
cloudKitManager:didReceiveNewCompetitionListsForSelf:moreComing:changesProcessedHandler:
cloudKitManager:didReceiveNewCompetitionLists:moreComing:changesProcessedHandler:
cloudKitManagerDidUpdateAccountStatus:
gatewayManagerStatusDidChange
bulletinBoardManager:didReceiveActionResponse:fromContactWithUUID:
processRetryMessages
setActivityDataVisible:toFriendWithUUID:completion:
setMuteEnabled:forFriendWithUUID:completion:
removeFriendWithUUID:completion:
updateRelationshipWithCompetitionEvent:friendUUID:completion:
updateRelationshipsForCurrentFeatureSupportWithCompletion:
sendInviteToPersonWithDestination:callerID:serviceIdentifier:completion:
ignoreInviteRequestFromFriendWithUUID:completion:
removePlaceholderRelationshipEventWithToken:
_achievementManager
_badgeManager
_friendListManager
_gatewayManager
_companionBulletinBoardManager
_transactionQueue
_messageCenters
_contactStore
_relationshipRecordsToReconcile
_remoteRelationshipRecordsToProcess
_placeholderFriendshipBeganTokens
_currentFetchType
_hasPendingContactsReconcile
_isWatch
modificationDate
isCompetitionActive
numberOfCompetitionWinsByMe
enumerateObjectsUsingBlock:
_friendForVictoryTemplate:
currentOrMostRecentCompetition
currentCompetition
lastDayOfCompetition
friendWithUUID:
predicate
sourceShouldRunForDate:
templatesForDate:completion:
localizationBundleURLForTemplate:
resourceBundleURLForTemplate:
propertyListBundleURLForTemplate:
stickerBundleURLForTemplate:
identifier
runCadence
customPlaceholderValuesForTemplate:
textureFilenameForTemplate:
delegate
unusedTemplateNamesForFriendWithUUID:
supportsActivitySharing
profileType
protectedDatabase
_createTableSQLStringForCompetitions
executeSQL:error:bindingHandler:enumerationHandler:
_createTableSQLStringForCompetitionLists
addMigrationForSchema:to:foreignKeys:migrationHandler:
_dropTableSQLStringForCompetitions
_dropTableSQLStringForCompetitionLists
stringWithFormat:
extensionForHealthDaemon:
extensionForProfile:
pluginIdentifier
shouldLoadPluginForDaemon:
currentSchemaVersionForProtectionClass:
databaseEntitiesForProtectionClass:
registerMigrationStepsForProtectionClass:migrator:
schemaName
taskServerClasses
fileURLWithPath:
URLByAppendingPathComponent:isDirectory:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dataWithContentsOfURL:options:error:
initWithData:
data
writeToURL:options:error:
stringByAppendingPathComponent:
removeItemAtPath:error:
initWithSerialQueue:
dictionaryForKey:
doubleForKey:
dictionaryWithCapacity:
allocWithZone:
setDouble:forKey:
changeTokenCacheFromUserDefaultsWithSerialQueue:
copyWithZone:
isExpired
setExpired:
persistToUserDefaults
serverChangeTokenForDatabase:
setServerChangeToken:forDatabase:
serverChangeTokenForRecordZoneID:
setServerChangeToken:forRecordZoneID:
_databaseChangeTokensByDatabaseScope
_zoneChangeTokensByZoneID
_timestamp
zoneName
ownerName
databaseScope
stringValue
gizmoBulletinBoardManager
periodicUpdateManager
dataManager
workoutType
addObserver:forDataType:
fitnessFriendActivitySnapshotType
fitnessFriendAchievementType
fitnessFriendWorkoutType
removeObserver:forDataType:
endObserving
_queue_showFriendNotificationsIfRequired
sampleType
_notifyAboutWorkoutsDetectionIfRequired:
requestImmediateUpdateWithCompletion:
_nanoUserDefaultsDomainWithProfile:
_nanoUserDefaultsDomainKeyForFriendWithUUID:keyTypeString:
dateForKey:error:
setDate:forKey:error:
numberForKey:error:
setNumber:forKey:error:
_localUserDefaultsDomainWithProfile:
objectForKey:
_queue_selectWorkoutNotifications
setWorkoutNotifications:
_queue_selectAchievementNotifications
setAchievementNotifications:
_queue_selectGoalCompletionNotifications
setGoalCompletionNotifications:
workoutNotifications
achievementNotifications
goalCompletionNotifications
filterNotificationGroup:
showActivityNotifications:
workoutAnchor
samplesAfterAnchor:profile:error:
setWorkoutAnchor:
friendUUID
_mostRecentWorkoutCompletionDateForFriendWithUUID:
hk_isAfterDate:
_setMostRecentWorkoutCompletionDate:forFriendWithUUID:
setFriend:
hkWorkoutFromFriendWorkout
setSample:
achievementAnchor
setAchievementAnchor:
completedDate
_mostRecentAchievementEarnedDateForFriendWithUUID:
_setMostRecentAchievementEarnedDate:forFriendWithUUID:
templateUniqueName
ephemeralAchievementWithTemplateUniqueName:
goalCompletionAnchor
setGoalCompletionAnchor:
snapshotIndex
snapshotUploadedDate
_mostRecentGoalCompletedSnapshotIndexForFriendWithUUID:
numberWithLongLong:
_setMostRecentGoalCompletedSnapshotIndex:forFriendWithUUID:
isDateInToday:
isDateInYesterday:
samplesAdded:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
beginObserving
notificationRulesEngine
setNotificationRulesEngine:
setFriendListManager:
setGizmoBulletinBoardManager:
setPeriodicUpdateManager:
_queue
_dataManager
_receivedChangesFromCloudKit
_isCloudKitManagerProcessingData
_notificationRulesEngine
_gizmoBulletinBoardManager
_periodicUpdateManager
userIdentity
isEquivalentToUserIdentityOrPublicKey:
objectsTransformationBlock
objectTransformationBlock
objectsTransformedFromRecords:cloudKitManager:
recordTypes
setRecordTypes:
setObjectsTransformationBlock:
setObjectTransformationBlock:
shouldNotifyObserverBlock
setShouldNotifyObserverBlock:
notifyObserverBlock
setNotifyObserverBlock:
_recordTypes
_objectsTransformationBlock
_objectTransformationBlock
_shouldNotifyObserverBlock
_notifyObserverBlock
initWithSubscriptionID:
setRecordType:
setAlertBody:
setShouldSendContentAvailable:
setNotificationInfo:
setReadyForOperations:
weakObjectsHashTable
_createNotificationSteps
_queue_pushDisable
containerWithIdentifier:
setContainer:
reason
container
setSourceApplicationBundleIdentifier:
initWithContainer:
setCloudKitUtility:
_cloudKitAccountStatusChanged:
_fetchCloudKitAccountStatusAndNotifyOfChanges
deviceLocalActivitySharingKeyValueDomain
_queue_pushEnable
initWithZoneName:ownerName:
activityDataRecordZoneID
initWithRecordName:zoneID:
activityDataRootRecordID
cloudKitUtility
_activityDataShareRecordID
createShareAndAssociatedZoneWithShareRecordID:rootRecord:otherRecordsToSave:completion:
readyForOperations
_createActivityDataShareWithCompletion:
cancelAllExecutingFetches
_queue_callFetchCompletionBlocksWithSuccess:error:
fetchChangesInPrivateDatabaseWithServerChangeTokenCache:priority:completion:
fetchChangesInSharedDatabaseWithServerChangeTokenCache:priority:completion:
_handleNewPrivateDatabaseRecordChanges:sharedDatabaseRecordChanges:fetchType:
_fetchAllChangesWithPriority:
_queue_setHasCompletedFirstFetch:
setDateOfLastSuccessfulFetch:
_queue_startFetchAllChangesOperationWithPriority:changeTokenCache:completion:
_performBlockWhenAllObserversBecomeReady:
_queue_cancelAllExecutingFetches
_fetchAllChangesWithPriority:completion:
dateOfLastSuccessfulFetch
saveSubscriptions:andDeleteSubscriptionsWithIdentifiers:inDatabase:completion:
sharedCloudDatabase
_subscribeToChangesInDatabase:subscriptionPrefix:recordTypes:recordTypesToDelete:completion:
privateCloudDatabase
subscriptionID
alertBody
_subscribeToChangesInSharedDatabaseWithCompletion:
_subscribeToChangesInPrivateDatabaseWithCompletion:
stringWithUTF8String:
compare:options:
serverPreferredPushEnvironmentWithCompletionHandler:
userInfo
notificationFromRemoteNotificationDictionary:
topic
_handleIncomingNotification:
clearFriendListWithCompletion:
_verifyOrCreateSubscriptionsWithCompletion:
_cancelNewAccountTasksTimer
_saveCloudKitAddressToKeyValueStore
_performAndRetryNewAccountTasksWithRetryInterval:shouldCreateSubscriptions:shouldFetch:
_performNewAccountTasksCreatingSubscriptions:fetching:completion:
setString:forKey:error:
_fetchCloudKitAddressWithCompletion:
stringForKey:error:
_handleAccountStatusChange:
accountStatusWithCompletionHandler:
_queue_isLastCloudKitAddressDifferentFromNewCloudKitAddress:
_performAndRetryNewAccountTasksIfNecessaryWithShouldCreateSubscriptions:shouldFetch:
_queue_clearChangeTokenCacheAndFriendListWithCompletion:
_queue_notifyObserversOfStatusChanged
aa_primaryAppleAccount
aa_isManagedAppleID
fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:
shareURLForShare:
fetchShareParticipantForEmailAddress:completion:
fitnessFriendActivitySnapshotWithRecord:friendUUID:
_observerQueue_friendUUIDForActivityDataShareRecordZoneID:
fitnessFriendWorkoutWithRecord:friendUUID:
fitnessFriendAchievementWithRecord:friendUUID:
notificationEventWithRecord:friendUUID:
competitionListWithRecord:
removeObject:
objectAtIndex:
recordType
_enumerateRecordsByRecordZoneID:usingBlock:
_observerQueue_notifyObserversOfBeginUpdatesForFetchWithType:
_observerQueue_clearFriendUUIDByZoneIDCache
_observerQueue_performNotificationStep:onRecords:dispatchGroup:
_observerQueue_notifyObserversOfEndUpdatesForFetchWithType:
remoteActivityDataShareID
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
beginHandlingOperations
endHandlingOperations
fetchAllChangesIfTimeSinceLastFetchIsGreaterThan:priority:completion:
setHasCompletedFirstFetch:
expireChangeTokenWithCompletion:
_queue_apsEnvironmentString
fetchCloudKitAccountStatusWithCompletion:
observerDidBecomeReadyToProcessChanges:
_observerQueue
_changeTokenQueue
_apsConnection
_activityDataShare
_observers
_relationshipNotificationStep
_remoteRelationshipNotificationStep
_privateDatabaseActivitySnapshotNotificationStep
_activitySnapshotNotificationStep
_workoutNotificationStep
_achievementNotificationStep
_notificationEventNotificationStep
_privateDatabaseCompetitionNotificationStep
_competitionNotificationStep
_pushNotificationRecieved
_currentFetchPriority
_subscriptionNotificationWasReceivedDuringCurrentFetch
_blocksWaitingOnFetch
_serverChangeTokenCache
_cloudKitAccountStatus
_newAccountTasksTimer
_friendUUIDsByZoneID
_observersNotReady
_observersNotReadyGroup
_hasCompletedFirstFetch
_readyForOperations
_cloudKitUtility
_container
_dateOfLastSuccessfulFetch
requestImmediateUpdateForTemplateSource:
_lookupAchievementsExtensionAndPerformBlock:
requestIncrementalEvaluationForAwardingSource:evaluationBlock:
hasCompetitionHistory
templateStore
_removeUnusedTemplatesForFriendWithUUID:templateStore:
allTemplates
sourceName
removeTemplates:error:
registerTemplateSource:awardingSource:
templateForUniqueName:
competitionManagerDidLoadCachedCompetitions:
competitionManager:didUpdateCompetitionsForFriendsWithUUIDs:
initWithIsWatch:
requestTemplateUpdate
requestEarnedInstanceUpdate
removeAllUnusedTemplates
removeAllTemplates
_competitionAwardingSource
_competitionTemplateSource
protobufClass
setProtobufClass:
handleReceiveMessageAction
setHandleReceiveMessageAction:
handleErrorSendingMessageAction
setHandleErrorSendingMessageAction:
_protobufClass
_handleReceiveMessageAction
_handleErrorSendingMessageAction
removeDelegate:
initWithService:
addDelegate:queue:
_processMessageQueue:preprocessingBlock:
_sendMessage:type:destinations:completion:
_handleInviteRequest:fromSenderAddress:messageHandledCompletion:
_handleErrorSendingInviteRequest:
_handleInviteResponse:fromSenderAddress:messageHandledCompletion:
_handleErrorSendingInviteResponse:
_handleFinalizeHandshake:fromSenderAddress:messageHandledCompletion:
_handleErrorSendingFinalizeHandshake:
_handleWithdrawInviteRequest:fromSenderAddress:messageHandledCompletion:
_handleErrorSendingWithdrawInviteRequest:
_messageHandlerForType:
_dispatchAction:invocationBlock:
context
outgoingResponseIdentifier
_handleMessage:identifier:
_handleMessageSendSuccess:error:identifier:
_handleErrorForMessage:
initWithProtobufData:type:isResponse:
_idsIdentifiersForDestinations:
sendProtobuf:toDestinations:priority:options:identifier:error:
methodForSelector:
containsString:
decimalDigitCharacterSet
rangeOfCharacterFromSet:
setWithCapacity:
_idsIdentifierForDestination:
setWithSet:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_idsService
_outgoingDispatchQueue
_incomingDispatchQueue
_outgoingMessageQueue
_retryMessageQueue
_persistedMessageQueue
_delegate
_serviceIdentifier
bundleWithPath:
initWithServiceName:onQueue:
deregisterBulletins
fakingManager
addDataProvider:
_showFakeGoalCompletionNotification
_showFakeGoalCompletionDuringCompetitionNotification
_showFakeAchievementNotification
_showFakeWorkoutNotification
_showFakeCompetitionRequestNotification
_showFakeCompetitionAcceptedNotification
_showFakeCompetitionEndedWinnerNotification
_showFakeCompetitionEndedLoserNotification
_showFakeNotificationBatch
alertSuppressionService
registerAlertSuppressionObserver:
addProtectedDataObserver:
sectionIdentifier
removeDataProviderWithSectionID:
unregisterAlertSuppressionObserver:
removeProtectedDataObserver:
friend
sample
_codableWorkoutBulletinForFriend:workout:
_codableAchievementBulletinForFriend:achievement:
_codableGoalCompletionBulletinForFriend:snapshot:
addBulletins:
_postQueuedBulletinsIfPossible
_codableCompetitionRequestBulletinForFriend:competition:
_enqueueBulletin:
_codableCompetitionAcceptedBulletinForFriend:competition:
_codableCompetitionEndedBulletinForFriend:competition:
withdrawBulletinsWithRecordID:
removeBulletinsMatchingCriteria:
localizedStringForKey:value:table:
variantWithFormat:imageName:inBundle:
setPrecomposed:
addVariant:
defaultSectionInfoForType:
setSectionID:
setSectionType:
setPushSettings:
setVersion:
version
pushSettings
defaultSectionInfo
updateSectionInfoWithHandler:
sortDescriptorWithKey:ascending:
filteredSetUsingPredicate:
publisherDestination
fetchActivityAlertSuppressionStateWithCompletion:
getWristState:
isProtectedDataAvailable
bulletins
timestamp
_expirationDateForBulletinType:publishDate:
title
_bulletinRequestFromCodableBulletin:
_queue_postBulletinRequests:
removeAllBulletins
lastObject
setContextValue:forKey:
addBulletin:interrupt:
archivedDataWithRootObject:requiringSecureCoding:error:
_codableBulletinForFriend:
localizedStringWithFormat:
setTitle:
setWorkoutData:
setAchievementData:
setSnapshotData:
_codableCompetitionBulletinForFriend:type:title:competition:
isScoreTied
codableFriendIncludingCloudKitFields:
setFriendData:
setTimestamp:
setRecordID:
setPublisherBulletinID:
_threadIdentifierForBulletinType:
setThreadID:
initWithType:
setTopic:
initWithToneAlertConfiguration:
setSound:
friendData
currentActivitySummaryHelper
todayActivitySummary
_wheelchairUse
achievementData
workoutData
snapshotData
setExpirationDate:
setClearable:
_fakeWorkoutBulletin
_postFakeBulletins:
_fakeAchievementBulletin
_fakeGoalCompletionBulletin
_fakeGoalCompletionDuringCompetitionBulletin
_fakeCompetitionRequestBulletin
_fakeCompetitionAcceptedBulletin
_fakeCompetitionEndedWinnerBulletin
_fakeCompetitionEndedLoserBulletin
hk_startOfDateByAddingDays:toDate:
universalSectionIdentifier
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
getDataForAttachmentUUID:recordID:withCompletionHandler:
getPNGDataForAttachmentUUID:recordID:sizeConstraints:withCompletionHandler:
getAspectRatioForAttachmentUUID:recordID:withCompletionHandler:
primaryAttachmentDataForRecordID:
attachmentPNGDataForRecordID:sizeConstraints:
attachmentAspectRatioForRecordID:
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
displayNameForFilterID:
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
onWristMonitor:didUpdateOnWristState:fromState:
alertSuppressionInvalidatedForSuppressionId:reason:
database:protectedDataDidBecomeAvailable:
registerBulletins
showCompetitionRequestNotificationForFriend:competition:
showCompetitionAcceptedNotificationForFriend:competition:
showCompetitionEndedNotificationForFriend:competition:
withdrawCompetitionRequestNotificationForFriendWithUUID:
_fakingManager
_bulletinBoardConnection
_dataProviderProxy
_awaitingSentinelContextKey
_sentinelContextKey
_bulletinQueue
_bulletinRequests
_friendUUIDToCompetitionRequestBulletinRecordMap
notifyGoalCompletionToken
notifyGoalCompletionDuringCompetitionToken
notifyAchievementToken
notifyWorkoutToken
notifyBatchToken
notifyCompetitionRequestToken
notifyCompetitionAcceptToken
notifyCompetitionEndWinnerToken
notifyCompetitionEndLoserToken
_onWristMonitor
_bulletinStore
setIsWatch:
relationshipManager
setRelationshipManager:
setAchievementManager:
UTF8String
_handleHasFriendsChanged
_queue_updateFriendList
registerProvider:
_queue_friendWithUUID:
contact
_allContactsPreferringPlaceholderContacts
setContact:
activitySnapshotsForFriendWithUUID:
achievementsForFriendWithUUID:
workoutsForFriendWithUUID:
competitionsForFriendWithUUID:
_queue_friendListDidUpdate
snapshots
_mostSignificantSnapshotAmongSnapshots:
setSnapshots:
friendAchievements
setFriendAchievements:
friendWorkouts
setFriendWorkouts:
_queue_notifyObserversOfFriendListChanges
triggerUUID
isMyActivityDataCurrentlyHidden
isFriendshipCurrentlyActive
hasInviteRequestFromMe
inviteRequestToMeWasAccepted
synchronizeUserDefaultsDomain:keys:
initWithSet:copyItems:
setContacts:
removeAllPlaceholderContacts
deleteCachedCompetitions
deleteAllActivitySharingData
friendsUpdated:
_queue_hasFriendsToShareWith
setCompetitions:
hasIncomingCompetitionRequest
dateForLatestIncomingCompetitionRequest
placeholderContacts
contactsManagerDidUpdateContacts:
badgeCount
initializeFriendListAndBeginObserving
fetchfriendDataWithRemoteUUID:completion:
updateFriendListWithNewSnapshots:achievements:workouts:
updateFriendListWithDeletedWorkoutEvents:
hasFriendsToShareWith
_friends
_hasFriendsToShareWith
_friendListQueue
_activitySharingHasFriendsChangedToken
_lastReportedFriendsDate
_lastReportedNumberOfFriends
_relationshipManager
addProvider:
_loadCachedCompetitionsAndNotifyObservers
_loadOrCreateCurrentCompetitionListForFriendWithUUID:
hasCompletedCompetition
preferredVictoryBadgeStyles
_archivedCompetitionListByMergingCurrentCompetitionList:
archivedCompetitionListForFriendWithUUID:
competitions
_saveCurrentCompetitionList:archivedCompetitionList:contact:completion:
_queue_setActivityDataVisibleIfNecessaryForContact:completion:
currentRemoteCompetitionForContact:
currentCompetitionListForFriendWithUUID:
startDateComponents
_queue_updateScoresWithTodaySummary:yesterdaySummary:
isAwaitingCompetitionResponse
dateForLatestOutgoingCompetitionRequest
hasOutgoingCompetitionRequest
scores
opponentScores
saveCompetitionLists:
_queue_handleNewRemoteCompetitionList:contact:
showGizmoVersionTooLowForCompetitionRequestFrom:
hk_minus:
_handleCompetitionRequestFromFriendWithUUID:
_handleAcceptedCompetitionFromFriendWithUUID:
_queue_showCompetitionEndedWithFriendWithUUID:
_queue_completeCompetitionIfNecessaryForFriendWithUUID:
_notifyObserversOfCompetitionUpdatesForFriendsWithUUIDs:
_contactsWithActiveCompetitions
_recordForCurrentCompetitionList:contact:
_queue_handleSavedCompetitionListRecords:
currentActivitySummary
yesterdayActivitySummary
hasIgnoredCompetitionRequest
_queue_autoAcceptCompetitionRequestFromContact:completion:
_queue_showCompetitionRequestFromFriendWithUUID:competition:
_localCompetitionForRemoteCompetition:friendUUID:
_queue_showCompetitionAcceptedForFriendWithUUID:competition:
durationDateComponents
maximumNumberOfPointsPerDay
_activitySummaryIndex
currentCacheIndex
setCurrentCacheIndex:
hasCalculatedFinalScore
hasPushedFinalScore
hk_mapToSet:
saveRemoteCompetitionList:
mostRecentlyCompletedCompetition
initWithFriendUUID:type:
loadCachedCompetitions
initWithRecordID:action:
setParent:
endDateCacheIndex
isHidingActivityData
activityDataManager:didUpdateTodaySummary:yesterdaySummary:
recordsToSave
recordIDsToDelete
periodicUpdateManager:didSaveRecords:
periodicUpdateManager:didFailToSaveRecords:
sendCompetitionRequestToFriendWithUUID:completion:
acceptCompetitionRequestFromFriendWithUUID:completion:
ignoreCompetitionRequestFromFriendWithUUID:completion:
completeCompetitionWithFriendWithUUID:completion:
_competitionStore
_existingFriendUUIDsAwaitingMyCompetitionResponse
_existingFriendUUIDsWithAcceptedCompetitionRequestsFromMe
_existingFriendUUIDsWithCompletedCompetitions
_friendUUIDsWithUpdatedCompetitions
_deviceParticipatesInAutomaticCompetitionManagement
_hasFetchedProtectedData
removePersistentDomainForName:
registerForDaemonReady:
nanoSyncManager
_mainQueue_completeSetupIfNeeded
_mainQueue_nanoRegistryInfoChanged
_applicationsInstalled:
_applicationsUninstalled:
_mainQueue_shouldCompleteSetup
_mainQueue_notifySubmanagersOfManagerReady
_mainQueue_startSubmanagerProcessingIfNeeded
performWhenDataProtectedByFirstUnlockIsAvailable:
loadCachedContacts
beginObservingData
beginPeriodicUpdates
endObservingData
endPeriodicUpdates
activityDataNotificationManager
updateState
isDataProtectedByFirstUnlockAvailable
_mainQueue_stopSubmanagerProcessingIfNeeded
_waitUntilSubmanagersReady
fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:
daemonReady:
nanoSyncManager:pairedDevicesChanged:
sendInviteRequestToDestination:callerID:serviceIdentifier:completion:
pushActivityDataToAllFriendsWithCompletion:
fetchAllDataWithCompletion:
fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:
cloudKitAccountStatusWithCompletion:
fetchFriendWithRemoteUUID:completion:
addFriendListObserver:
removeFriendListObserver:
_readWriteQueue
_submanagerBarrierQueue
_submanagerBarrierGroup
_submanagerInitializationComplete
_submanagerProcessingStarted
_isActivityAppVisible
_pairingStatusChangedToken
_activityDataNotificationManager
_deviceLocalActivitySharingKeyValueDomain
hasRequiredEntitlement:error:
initWithClient:activitySharingManager:
connection
invalidate
domain
code
remote_sendInviteRequestToDestination:callerID:serviceIdentifier:completion:
remote_acceptInviteRequestFromFriendWithUUID:completion:
remote_sendWithdrawInviteRequestToFriendWithUUID:completion:
remote_ignoreInviteRequestFromFriendWithUUID:completion:
remote_setActivityDataVisible:toFriendWithUUID:completion:
remote_setMuteEnabled:forFriendWithUUID:completion:
remote_removeFriendWithUUID:completion:
remote_pushActivityDataWithCompletion:
remote_pushFakeActivityDataWithCompletion:
remote_fetchAllDataWithCompletion:
remote_fetchAllDataIfTimeSinceLastFetchIsGreaterThan:completion:
remote_cloudKitAccountStatusWithCompletion:
remote_clearFriendListWithCompletion:
remote_fetchAreMultipleDevicesSharingDataForSnapshotIndex:withCompletion:
remote_sendCompetitionRequestToFriendWithUUID:completion:
remote_acceptCompetitionRequestFromFriendWithUUID:completion:
remote_ignoreCompetitionRequestFromFriendWithUUID:completion:
remote_completeCompetitionWithFriendWithUUID:completion:
remote_expireChangeTokenWithCompletion:
remote_friendWithRemoteUUID:completion:
exportedInterface
remoteInterface
connectionInvalidated
connectionInterrupted
connectionConfigured
_client
filter_friendUUID
filter_date
hk_gregorianCalendar
_persistedAnchorWithKey:
_persistedAnchorTokenWithKey:
_queue_getAndHandleAllActivitySharingData
_filterAchievements:forSnapshotIndex:
_ckQueue_processActivitySnapshotsForSelf:
_ckQueue_handleNewSnapshotsForSelf:moreComing:
_handleNewSnapshots:workouts:achievements:moreComing:
_ckQueue_handleDeletedWorkoutEvents:completion:
sourceUUID
pairedDevicesSnapshot
activeDeviceInfo
sourceBundleIdentifier
sourceUUIDForBundleIdentifier:error:
isEqualToSet:
_workoutsForActivitySnapshot:anchor:completion:
_allAchievements
allAchievements
_unhiddenSamplesInFilterableSamples:friendTimeZones:
_queue_insertSamples:
dataProvenanceManager
defaultLocalDataProvenance
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
_queue_saveFitnessFriendActivitySnapshots:workouts:achievements:
isActivityDataVisibleToMeForDate:
isHidingActivityDataFromMeForDate:
timeZone
setTimeZone:
fullName
deleteDataObjectsOfClass:predicate:limit:deletedSampleCount:notifyObservers:generateDeletedObjects:recursiveDeleteAuthorizationBlock:error:
_queue_deleteAllActivitySharingData
HDDataEntityPredicateForFriendUUID:
_queue_deleteActivityDataForFriendWithUUID:
samplesForFriend:profile:error:
samplesForFriend:anchor:profile:error:
_queue_handleNewSnapshots:workouts:achievements:
startOfDayForDate:
_queue_samplesAdded:
_hasMoveGoal
activeEnergyBurnedGoal
appleExerciseTimeGoal
appleStandHoursGoal
predicateWithProperty:greaterThanOrEqualToValue:
predicateWithProperty:lessThanValue:
truePredicate
negatedPredicate:
predicateMatchingAllPredicates:
_workoutsAfterAnchor:withPredicate:profile:
setIsWatchWorkout:
samplesWithType:profile:encodingOptions:predicate:limit:anchor:error:
fitnessFriendWorkoutFromHKWorkout:
earnedInstances
earnedDateComponents
template
_localSourceUUID
_isAlertSuppressionEnabled
workoutCompletionEventWithWorkout:
achievementCompletionEventWithAchievement:
_findDeletedWorkoutEventsWithAnchor:completion:
activitySummary
goalCompletionEventWithActivitySummary:
_activitySnapshotsToPushWithYesterdaySnapshot:todaySnapshot:
_achievementsToPushWithYesterdaySnapshot:todaySnapshot:currentTodayAchievementAnchorToken:currentYesterdayAchievementAnchorToken:
_workoutsToPushWithYesterdaySnapshot:todaySnapshot:currentWorkoutAnchor:
notificationEventsToPushWithYesterdaySnapshot:todaySnapshot:achievements:workouts:currentDeletedWorkoutAnchor:currentGoalCompletionAnchor:
_queue_setLastPushedWorkoutAnchor:
_queue_setLastPushedDeletedWorkoutAnchor:
_queue_setLastPushedTodayAchievementAnchorToken:
_queue_setLastPushedYesterdayAchievementAnchorToken:
_queue_setLastPushedGoalCompletionAnchor:
entityEnumeratorWithType:profile:
setPredicate:
setAnchor:
longLongValue
deletedWorkoutEventWithUUID:
enumerateIncludingDeletedObjects:error:handler:
isEqualToNumber:
_queue_persistAnchorValue:forKey:
_queue_persistAnchorTokenValue:forKey:
currentActivitySummaryHelper:didUpdateTodayActivitySummary:changedFields:
currentActivitySummaryHelper:didUpdateYesterdayActivitySummary:changedFields:
achievementStore:didAddAchievements:
achievementStore:didUpdateAchievements:
achievementStore:didRemoveAchievements:
achievementStoreDidFinishInitialFetch:
_cloudKitManagerObserverQueue
_newSnapshotsForSelf
_newSnapshots
_newWorkouts
_newAchievements
_newDeletedWorkoutEvents
_currentWorkoutAnchor
_lastPushedWorkoutAnchor
_currentDeletedWorkoutAnchor
_lastPushedDeletedWorkoutAnchor
_currentTodayAchievementAnchorToken
_lastPushedTodayAchievementAnchorToken
_currentYesterdayAchievementAnchorToken
_lastPushedYesterdayAchievementAnchorToken
_currentGoalCompletionAnchor
_lastPushedGoalCompletionAnchor
_healthDataQueue
_activitySummaryQueue
_currentActivitySummary
_currentInProgressPushActivitySummary
_currentLastPushedActivitySummary
_yesterdayActivitySummary
_yesterdayInProgressPushActivitySummary
_yesterdayLastPushedActivitySummary
_calendar
_snapshotSourceUUIDsByIndex
dateActivityDataInitiallyBecameVisibleToMe
string
stringByAppendingString:
activeEnergyBurned
doubleValueForUnit:
appleExerciseTime
appleStandHours
setToken:
_contact
_contactStoreContactWithIdentifier:
setFullName:
_queue_allContacts
_setContacts:waitForTransaction:
_findMatchingContactStoreContactForDestinations:
setLinkedContactStoreIdentifier:
_waitForTransaction
_queue_notifyObservers
_persistContacts:
_beginTransaction
_endTransaction
descriptorForRequiredKeysForStyle:
unifiedContactsMatchingPredicate:keysToFetch:error:
unifiedContactWithIdentifier:keysToFetch:error:
_contactsByUUID
_placeholderContactsByUUID
_contactsQueue
_persistQueue
_contactsTransactionBarrier
phoneNumbers
value
emailAddresses
initWithUUID:configuration:client:profile:delegate:
profileExtensionsConformingToProtocol:
_queue_start
_queue_stop
clientProxy
queryUUID
client_deliverFriendList:queryUUID:
queryClass
_shouldListenForUpdates
_shouldExecuteWhenProtectedDataIsUnavailable
currentlyPairedWatchMeetsMinimumVersion:
_stripFZIDPrefix
_currentlyPairedWatchMeetsMinimumVersion
_registerForFakeBulletins
_deregisterForFakeNotifications
_showFakeInvitationRequest
_showFakeInvitationResponse
_notifyOfFakeInvitationRequest
_showFakeNeedToSignIn
_showFakeNeedToUpgrade
_fakeContact
_showInvitationRequestFromContact:
_showInvitationResponseFromContact:
_notifyOfInvitationFromContact:
actionWithLaunchURL:
setActivationMode:
setDefaultAction:
_queue_bulletinsToOverrideOfType:forContact:
_bulletinForInvitationFromContact:withTitle:formatString:
_bulletinForInvitationFromContactUUID:title:message:
_newPrepopulatedBulletinRequestWithLaunchURL:
setMessage:
_bulletinForInvitationFromContact:
actionWithIdentifier:title:
setAuthenticationRequired:
setSupplementaryActions:
_queue_addBulletinRequest:fromContact:
_queue_removeBulletinRequestsWithType:fromContact:
_showIncompatibleVersionForContact:title:formatString:
setAlertType:
setMessageNumberOfLines:
setUsesVariableLayout:
defaultSubtypeParameters
setPrivacySettings:
_migrateSectionInfo
_queue_removeBulletins:
actionID
bulletinContext
_currentBulletinRequestsByRequestID
notifyInviteRequestToken
notifyInviteResponseToken
notifyOfInviteToken
notifyOfFakeSignInToken
notifyOfFakeUpgradeToken
_queue_performUpdateWithCompletion:
removeProvider:
hasRegisteredForUpdates
_providers
_providerQueue
_isPushInProgress
_hasQueuedPush
_hasRegisteredForUpdates
initWithCategory:domainName:profile:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setConfiguration:
setModifySubscriptionsCompletionBlock:
addOperation:
initWithZoneID:
capabilities
setCapabilities:
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
setQualityOfService:
initWithRecordsToSave:recordIDsToDelete:
setAtomic:
setSavePolicy:
setModifyRecordsCompletionBlock:
_saveRecordsIntoPrivateDatabase:recordIDsToDelete:savePolicy:priority:completion:
_createRecordZonesWithIDs:priority:completion:
_saveRecordsIntoPrivateDatabaseCreatingZones:recordIDsToDelete:savePolicy:priority:completion:
initWithRootRecord:shareID:
setAllowsReadOnlyParticipantsToSeeEachOther:
initWithRecordIDs:
setFetchRecordsCompletionBlock:
_fetchShareWithShareRecordID:completion:
initWithShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
initWithShareURLs:
setPerShareMetadataBlock:
_acceptShareMetadatas:completion:
setFetchShareMetadataCompletionBlock:
lookupInfosWithEmails:
initWithUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
anyObject
setFetchShareParticipantsCompletionBlock:
addParticipant:
removeParticipant:
setRecordZoneWithIDChangedBlock:
setFetchDatabaseChangesCompletionBlock:
setRecordChangedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
cancel
array
setPreviousServerChangeToken:
initWithRecordZoneIDs:configurationsByRecordZoneID:
setFetchAllChanges:
_fetchChangesInZones:inDatabase:serverChangeTokenCache:priority:allowRetry:completion:
initWithPreviousServerChangeToken:
_fetchChangesInDatabase:serverChangeTokenCache:priority:completion:
_queue_executingFetchOperations
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
[%@] Activity Sharing profile extension instantiated.
Responding to earned instances for incremental interval: %@
Responding to earned instances for historical interval: %@
Collecting completed competitions for %{public}@ - %@
Found %lu completed competitions
Building earned instance for competition participation: %{public}@, %lu - %lu
Competition is at index %lu
Building earned instance for competition victory
FakingManager saving activity records
FakingManager saving competition scores
Fake competitions=%@
Error parsing message queue with name %{public}@, serialized data is not a dictionary (%{public}@)
RelationshipManager setting activity data visibility to %{BOOL}d for friend with UUID: %{public}@
Could not find participant with email %@ on share.
Failed to fetch share participant with email %@.
Failed to fetch activity data share.
RelationshipManager not changing activity data visibility - already matches current visibility
RelationshipManager setting muting to %{BOOL}d for friend with UUID: %{public}@
RelationshipManager could not change muting - contact not found.
RelationshipManager not changing muting - already matches current state
RelationshipManager cannot insert competition for friendship that is not active
RelationshipManager checking for contacts that require a supported feature update
Relationship requires supported feature update: %{public}@ - %@
RelationshipManager serializing relationship records and saving to CloudKit
RelationshipManager error processing saved relationship, couldn't find contact with relationship UUID: %{public}@
RelationshipManager didn't find any relationships requiring a supported feature update
RelationshipManager starting invite flow for person with destination: %@, serviceIdentifier: %{public}@
RelationshipManager error: max number of friends reached
RelationshipManager looking up placeholder contact
RelationshipManager didn't find existing contact, creating new placeholder
RelationshipManager fetch complete, looking up contact again
RelationshipManager didn't find existing contact, copying the placeholder to save so the UUIDs match
RelationshipManager contact already exists, just update it with the invite data
RelationshipManager friendship already active, but activity data is not visible
RelationshipManager not sending invite to avoid triggering an unhide on the remote device
RelationshipManager sending invite with token %@ to destination: %@
RelationshipManager preparing to accept invite from friend with UUID: %{public}@
RelationshipManager couldn't find a contact with the given UUID
RelationshipManager error sending invite response: %{public}@
RelationshipManager sending invite response %ld with token %@ to %@
RelationshipManager attepting to withdraw invite request to friend with UUID: %{public}@
RelationshipManager couldn't find a person with the given UUID
RelationshipManager detected friendship is already active
RelationshipManager didn't find a pending outgoing request to this contact
RelationshipManager attempting to ignore incoming invite from friend with UUID: %{public}@
RelationshipManager not able to ignore invite, relationship doesn't have pending incoming request, status: %@
RelationshipManager received invite request from %@, cloudKitAddress=%@, callerID=%@
RelationshipManager invite info: handshakeToken=%@, buildNumber=%{public}@, version=%d
RelationshipManager not processing invite because activity app is not installed, persisting for later delivery
Could not determine gateway status: %{public}@, persisting message
RelationshipManager received an incompatible invite (current version = %d, inviter version = %d)
RelationshipManager not notifying via BB and not auto-accepting
RelationshipManager friendship already active for this person, automatically accepting
RelationshipManager notifying via bulletin board
RelationshipManager received invite response from %@, cloudKitAddress=%@
RelationshipManager response info: handshakeToken=%@, buildNumber=%{public}@, version=%d
RelationshipManager not processing response because activity app is not installed, persisting for later delivery
RelationshipManager couldn't find previously invited friend with token: %@
RelationshipManager received an incompatible response (current version = %d, invitee version = %d)
RelationshipManager rejecting invite response because relationship doesn't have a pending outgoing invite request, current state is: %{public}@
RelationshipManager not inserting a placeholder began - remote side is already active
RelationshipManager accept received and processed, notify via BB
RelationshipManager sending finalize handshake with token: %@
RelationshipManager received final handshake, token: %@
RelationshipManager not finalizing, relationship doesn't has incoming invite request: %@
RelationshipManager remote relationship is already active, remove placeholder
RelationshipManager received withdraw invite, token: %@, person: %@
RelationshipManager didn't find a pending invite to withdraw - this invite may already have been acted upon
RelationshipManager current state is %{public}@
RelationshipManager processing withdraw will continue anyway
RelationshipManager received new relationship records from CloudKit, more coming: %{BOOL}d
RelationshipManager received multiple local relationships on a single record ID: %@, relationship: %@
RelationshipManager received new remote relationship records from CloudKit
RelationshipManager received multiple remote relationship records for a single share from CloudKitManager, taking only the newest
RelationshipManager finished processing remote relationships
RelationshipManager received BB response: %ld in ASActivitySharingManager
Relationship manager couldn't find person with UUID: %{public}@
RelationshipManager not processing persisted messages, device is a watch
RelationshipManager not processing persisted messages, activity app is not installed
RelationshipManager processing persisted invitation messages if available
RelationshipManager could not determine status for processing persisted invitations: %{public}@
RelationshipManager not processing persisted invitation messages at this time
RelationshipManager ending friendship, checking for existing relationship began placeholders
RelationshipManager ending friendship with friend with UUID: %{public}@
RelationshipManager found friendship is not currently active. Still attempting to remove person from shares, just to be safe
RelationshipManager removing contact with cloudKitAddress %@ from activity data share
RelationshipManager error removing friend from activity data share (could not remove particpant): %{public}@
RelationshipManager error removing friend from activity data share (could not fetch share): %{public}@
RelationshipManager contact does not have a cloudKitAddress, not attempting to remove from share
RelationshipManager coudn't find match, creating new contact
RelationshipManager found a match, but the cloudKit address was different
RelationshipManager creating a new contact for this unique cloudKit address
RelationshipManager creating new outgoing handshake token: %@
RelationshipManager outgoing handshake token already exists for this person: %@
RelationshipManager inserting placeholder contact
Removing placeholder relationship began for friend: %{public}@
No existing relationship began placeholder
Friendship began success, executing blocks waiting on success
RelationshipManager found existing placeholder began token for this contact: %@
RelationshipManager removing placeholder contact to avoid orphaning the token
RelationshipManager friendship is still finalizing, holding this action until complete
RelationshipManager fetching activity data share
RelationshipManager error fetching activity data share: %{public}@
RelationshipManager successfully fetched activity data share
RelationshipManager error fetching relationship share: %{public}@
RelationshipManager successfully fetched relationship share
RelationshipManager failed to fetch relationship share because relationship had no archived share ID
RelationshipManager error de-serializing relationships: %@
RelationshipManager successfully saved relationship record in CloudKit
RelationshipManager error fetching/creating activity data share when saving new relationship: %{public}@
RelationshipManager error creating or fetching relationship share: %{public}@
RelationshipManager successfully saved relationship record in CloudKit for UUID %{public}@
RelationshipManager creating new relationship share
RelationshipManager error saving relationship record in CloudKit: %{public}@
RelationshipManager saving relationship that requires a supported feature update, updating now
RelationshipManager adding person with cloudKitAddress %@ to my shares
RelationshipManager error adding person to shares: %{public}@
RelationshipManager succesfully added person to shares
RelationshipManager accepting shares: %@
RelationshipManager error accepting invitee shares %@, error: %{public}@
RelationshipManager success accepting shares
RelationshipManager reconciling new cloudKit relationships
RelationshipManager current fetch is full, overwrite instead of merging
RelationshipManager found %lu existing relationships, merging
RelationshipManager first merging on share ID
RelationshipManager found a conflict (%@/%@ vs %@/%@)
RelationshipManager determined the cloudKit relationship is newer, taking it
RelationshipManager determined cloudKit relationship is older, keeping the existing relationship
RelationshipManager found a new relationship that doesn't exist locally (%@/%@)
RelationshipManager checking for duplicate cloudKit addresses
RelationshipManager found relationship that didn't have a cloudKit address, not checking for duplicates: %@
RelationshipManager found a conflicting relationship - different share ID with the same cloudKit address
RelationshipManager relationship %@
RelationshipManager conflicts with %@
RelationshipManger resolved to the newest relationship: %@
RelationshipManager preparing to reconcile with address book (%lu relationships)
RelationshipManager deleting existing friends list
RelationshipManager starting reconcile pass: %{public}@ (%lu remaining relationships)
RelationshipManager create person without address book match is %d for this pass
RelationshipManager looking for contact with destinations: %@
RelationshipManager contact already has a relationship (possibly from a previous pass): %@
RelationshipManager not matching to avoid clobbering
RelationshipManager contact in address book: %d
RelationshipManager found a match for relationship: %@
RelationshipManager matching contact: %{public}@ - %@
RelationshipManager had previous existing contact for the relationship, putting back the original remote relationship
RelationshipManager saving match to %@
RelationshipManager didn't find a match
RelationshipManager reconcile didn't receive destinations, skipping this pass (%{public}@)
RelationshipManager reconcile complete, result:
%@ -> %@
RelationshipManager processing remote relationships
RelationshipManager unable to find contact with remote relationship zone ID: %@
RelationshipManager orphaned remote relationship: %@
RelationshipManager evaluating new remote relationship for contact: %{public}@ - %@
RelationshipManager new remote relationship: %@
RelationshipManager previous remote relationship: %@
RelationshipManager does not need to process remote relationship events, this is the first CK fetch
RelationshipManager local friendship is active, comparing final remote state with previous remote relationship
RelationshipManager checking if another invite flow is in progress: %d
RelationshipManager determined this relationship was ended remotely
RelationshipManager determined this relationship began remotely
RelationshipManager traversing new events at anchor %lu
RelationshipManager detected a friendship that was ended remotely, local activity data should be deleted
RelationshipManager waiting for asynchronous remote processing
RelationshipManager found a relationship that was missing a record ID: %@
RelationshipManager observed contact store change
RelationshipManager reconcile for new contacts already scheduled
RelationshipManager scheduling new reconcile for contact store change
RelationshipManager firing new reconcile for contact store change
RelationshipManager message didn't include an activity snapshot preview, not processing
RelationshipManager message included a snapshot, processing
RelationshipManager generated activity data preview: %@/%@ calories, %@ workouts, %@ achievements
RelationshipManager wasPreviouslyActive=%d, isCurrentlyActive=%d
CompetitionsTemplateSource collecting templates
Adding participation template
Adding victory template for friend: %{public}@ - %@
Returning templates: %@
Competition template source couldn't find friend: %{public}@
Competition template source building unused template names for friend: %{public}@ - %@
No wins against this friend and competition isn't active, victory template is now unused
FriendUUID missing from template: %@
Couldn't find friend with UUID: %{public}@
Activity Sharing plugin loaded.
Not creating profile extension, Health Daemon does not support Activity Sharing.
Not creating profile extension for non-primary profile.
Health Daemon supports Activity Sharing, creating profile extension.
Running Activity Sharing migration from %ld, creating tables
Running Activity Sharing migration from %ld, dropping competitions table and re-creating with badge styles
Running Activity Sharing migration from %ld, dropping competition lists table and re-creating with owner
Running Activity Sharing migration from %ld, migrating competitions table to fixup unique constraint
Running Activity Sharing migration from %ld, migrating competitions table to add score cap
Error creating cache directory (%@): %@
Error reading from file (%@): %@
Error writing to file (%@): %@
Removing legacy contacts cache
Checking for change token expiration, timestamp=%f, now=%f
Persisting change tokens to disk
Found a change token with an unexpected type: %@
ActivityDataNotificationManager processing %lu new activity snapshots.
ActivityDataNotificationManager processing %lu new workouts.
ActivityDataNotificationManager processing %lu new achievements.
ActivityDataNotificationManager processing %lu new notification events.
ActivityDataNotificationManager received new data from CloudKit, showing notifications if required.
ActivityDataNotificationManager didn't receive any new data from CloudKit, not showing notifications
ActivityDataNotificationManager: samples removed, checking if any are workouts
ActivityDataNotificationManager: at least one sample is a workout, requesting push
Error: %{public}@ retrieving workout completion data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving workout completion data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving achievement earned data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving achievement earned data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving goal completion data from key value domain for friendUUID: %{public}@.
Error: %{public}@ saving goal completion data into key value domain. %{public}@: %{public}@
Error: %{public}@ retrieving workout anchor data from key value domain. anchor: %{public}@
Error:%{public}@ saving workout anchor data into key value domain. anchor: %{public}@
Error: %{public}@ retrieving achievement anchor data from key value domain. anchor: %{public}@
Error: %{public}@ saving achievement anchor data into key value domain. anchor: %{public}@
Error: %{public}@ retrieving goal completion anchor data from key value domain. anchor: %{public}@
Error: %{public}@ saving goal completion anchor data into key value domain. anchor: %{public}@
ActivityDataNotificationManager: Showing friend notifications
Selected notifications:
Workouts: %lu
Achievements: %lu
Goal completions: %lu
Filtered notifications, posting
ActivityDataNotificationManager: Not showing notifications since pref is disabled.
Selecting workouts for notifications
Current workout anchor is %{public}@
Error: %{public}@ fetching workouts
WorkoutAnchor set to: %{public}@
Evaluating workout for friend with UUID %{public}@, end date (on remote device) is %{public}@
Updating last known workout date
Last known workout is newer, skip this one
Selecting achievements for notifications
Current achievement anchor is %{public}@
Error: %{public}@ fetching achievements
AchievementAnchor set to: %{public}@
Evaluating new achievement for friend with UIID %{public}@, completed date is %{public}@
Last known achievement completion date: %@
Updating last known achievement date
Last known achievement is newer, skip this one
Unable to find achievement matching achievement: %@
Selecting goal completion snapshot notifications
Current goal completion anchor is %{public}@
Error: %{public}@ fetching snapshots
GoalCompletionAnchor set to: %{public}@
Evaluating new snapshot with friend UUID %{public}@, index: %lld, date: %{public}@
Snapshot doesn't represent goal completion, skipping
Updating last known snapshot
Last known snapshot is newer, skip this one
ActivityDataNotificationManager: at least one workout is in today or yesterday, request data push
Notification step trying to transform objects with no multi-record or single-record transformation blocks set.
Failed to create container with exception %{public}@
Failed to get CloudKit container with identifier %{public}@
Error initializing hasCompletedFirstFetch from key value domain: %{public}@
hasCompletedFirstFetch initialized to: %d
Cancelling all executing fetches
Fetching changes in private database failed with error: %{public}@
Fetched changes in private database successfully.
Fetching changes in shared database failed with error: %{public}@
Fetched changes in shared database successfully.
Change token cache is expired, doing full fetch
Change token cache is still valid, copying
Fetched changes: %ld private, %ld shared changed records.
Not handling changes because we found zero changed records.
A subscription notification came in during the last fetch, running another fetch now.
Fetched changes successfully, calling completions.
Failed to fetch changes with error %{public}@
Lower priority fetches are executing, cancelling all fetches before running higher priority fetch; current priority: %lu, requested priority: %lu
Running fetch with priority %lu now.
A same or higher priority fetch is executing, adding completion to pending completion block list; current priority: %lu, requested priority: %lu
Fetch requested if no fetch performed within last %lu seconds, last fetch was %lf seconds ago
Fetch requested if no fetch performed within last %lu seconds, no successful fetch performed yet
Last fetch is too recent, not fetching.
Error updating key value domain with completed first fetch: %{public}@
Updated has completed first fetch: %d
Cancelling all fetches and expiring change token immediately
Creating subscription to records with type %{public}@ in database %{public}@
Saved %lu subscriptions into database %{public}@.
Failed to save subscriptions into database %{public}@ with error: %{public}@
Recieved CloudKit push notification for subscription with id: %{public}@
CloudKit push received during coalescing period, ignoring.
Push notification coalescing interval starting, will take %lf seconds.
Push notification coalescing interval finished, fetching changes.
Push notification received during a fetch, fetching again after current fetch completes.
Push notification is low-priority, not fetching.
Error getting server APS preferred push environment: %{public}@
Timeout getting server preferred APS push environment
Using APS push environment: %{public}@
Received public token "%@" on connection %p
Received per-topic push token "%@" for topic "%{public}@" identifier "%@" on connection %p
APS push recieved: %@ %@
Recieved local notification of CloudKit account status changes; fetching 
New CloudKit account is now active, performing setup tasks.
Creating subscriptions.
Fetching changes.
Setup tasks complete, success: %{BOOL}d, error: %@
New account tasks are complete, not scheduling a retry.
New account tasks failed, scheduling a retry for %lf seconds from now
Error setting new CloudKit address in key value domain: %{public}@
Set %@ as CloudKit address in key value domain.
Error reading previous CloudKit address from key value domain: %{public}@
CloudKit address (%@) does not match previous CloudKit address (%@)
Error getting CloudKit account status: %{public}@
Fetched CloudKit account status: "%{public}@"
CloudKit account status changed, handling
Previous account status: "%{public}@"
isSignedOut=%d
isSignedInAfterBeingSignedOut=%d
isSignedInToNewAccount=%d
shouldClearStateAndEraseFriendList=%d
shouldCreateSubscriptions=%d
shouldPerformFetch=%d
Posted notification of CloudKit account status change
Apple ID is a managed account, reverting to unsigned-in behavior
Fetching cloudKit address
Error fetching CloudKit address: %{public}@
Fetched CloudKit address: %@
CloudKitManager added observer not yet ready to process changes: %@
CloudKitManager removing observer not yet ready to process changes: %@
CloudKitManager observer did become ready to process changes: %@
Notifying observers of changes with types: %{public}@
Evaluating shouldNotifyObserverBlock for observer of class %@
Notifying observer of class %@
Finished notifying observer of class %@
CloudKit Manager beginning update transaction.
CloudKit Manager status changed. Notifying observers
CloudKit Manager ending update transaction.
Notifying observers of [non-remote] relationship changes
Notified observers of [non-remote] relationship changes.
Notifying observers of [non-remote] activity data changes
Notified observers of [non-remote] activity data changes.
Notifying observers of [remote] relationship changes
Notified observers of [remote] relationship changes.
Notifying observers of activity data changes
Notified observers of activity data changes.
Notifying observers of notification event changes
Notified observers of notification event changes.
Notifying observers of [non-remote] competition changes
Notified observers of [non-remote] competition changes
Notifying observers of [remote] competition changes
Notified observers of [remote] competition changes
AchievementManager requesting template update
AchievementManager not requesting earned instance update - this device is not a watch
AchievementManager requesting earned instance update
AchievementManager removing all unused templates
Achievement manager found friend with competition history but no wins: %@
AchievementManager removing unused templates for friend: %{public}@
AchievementManager removing all competition templates
AchievementManager found %lu templates to remove
AchievementManager removed templates with result: %{BOOL}d, %{public}@
AchievementManager registering with the achievements subsystem
AchievementManager looking up templates for names: %@
AchievementManager removed unused templates with result: %{BOOL}d, %{public}@
AchievementManager couldn't find achievements extension
IDSMessageCenter [%{public}@] processing retry messages
IDSMessageCenter [%{public}@] processing persisted messages
IDSMessageCenter message handled successfully
IDSMessageCenter persisting message for later use
IDSMessageCenter message needs retry, current count is %ld
IDSMessageCenter message has been retried too many times, discarding
IDSMessageCenter ignoring protobuf with unknown type %{public}@, guid: %{public}@, from: %@
IDSMessageCenter received protobuf of type %{public}@, guid: %{public}@, from: %@
IDSMessageCenter sent protobuf with guid %{public}@ to server with success: %d error: %{public}@
IDSMessageCenter successfully delivered protobuf with guid %{public}@ to remote device
IDSMessageCenter success sending protobuf with type %{public}@, guid %{public}@
IDSMessageCenter error sending protobuf with type %{public}@, guid %{public}@, error: %{public}@
IDSMessageCenter requesting send for protobuf of type %{public}@ to destinations: %@
IDSMessageCenter successfully requested send for protobuf of type %{public}@, guid: %{public}@
IDSMessageCenter error requesting send for protobuf of type %{public}@, error: %{public}@
IDSMessageCenter redelivering protobuf of type %{public}@, guid: %{public}@, from: %@
Found competition request bulletin record to withdraw for friend: %{public}@
Migrating data provider push settings %lu to %lu
Not posting queued bulletins, isSuppressed=%{BOOL}d isOnWrist=%{BOOL}d protectedDataAvailable=%{BOOL}d
Posting queued bulletins
Publish date is %@
Dropping queued bulletin because it's been queued for too long: %lu / %@
Adding bulletin with connection: %p, proxy: %p, awaitingSentinel: %@, sentinel: %@
Creating workout bulletin for friend: %{public}@ - %@ with workout %@
Creating achievement bulletin for friend: %{public}@ - %@ with achievement %@
Creating goal completion bulletin for friend: %{public}@ - %@ with snapshot %@
Creating competition bulletin for friend: %{public}@ - %@, title: %@, competition: %@
Bulletin expiration date is %{public}@
No expiration date for bulletin
Updating local friend list from %lu contacts
Updating list for contact %{public}@ (%@)
Found existing friend %{public}@ - %@, updating contact reference
Protected data is not available, not getting data for contact %{public}@ (%@)
Friend list loaded %{public}@ - %@
Finished updating local friend list from contacts
Updated friend %{public}@ (%@) with new snapshot with index %lld
Failed to update friend list with snapshot with friend UUID %{public}@ because no friend was found with matching UUID
Updated friend %{public}@ (%@) with new achievement with template unique name %@
Failed to update friend list with achievement with friend UUID %{public}@ because no friend was found with matching UUID
Updated friend %{public}@ (%@) with new workout with UUID %{public}@
Failed to update friend list with workout with friend UUID %{public}@ because no friend was found with matching UUID
Updating friend list with %lu deleted workout events
Unable to find friend with UUID: %{public}@, skipping deleted workout with UUID: %{public}@
Removing deleted workout [%{public}@] for friend: %@
Successfully found deleted workout on snapshotIndex: %@
Not counting friend toward hasFriendsToShareWith because data is currently hidden: %{public}@ - %@
Checking current friend list for friends to share with: %{BOOL}d, checking defaults: %{public}@
Device is a watch, falling back to phone value if no friends are active currently
Current value is different than defaults
Current value is false, but defaults value was true and the contact set is empty - maintaining defaults value until contacts exist
Updating and syncing default for friends to share with, setting to: %{BOOL}d
Checked for friends to share with, found friends: %{BOOL}d
Clearing entire friend list!
Notifying observers of friend list changes %lu friends.
Has Friends default change notification received
Friends List did update: %lu friends
FriendListManager updating with initial competitions
FriendListManager updating with new competitions
FriendListManager couldn't find friend with UUID: %{public}@
CompetitionManager attempting to load cached competitions
CompetitionManager deleting all cached competitions
CompetitionManager attempting to send competition request to friend: %{public}@
CompetitionManager fetch complete, proceeding with send competition request
Unable to unhide from friend:%@
CompetitionManager checking friend eligibility
CompetitionManager relationship has completed competition, archiving and copying previous badge style
CompetitionManager relationship has archived competitions, copying previous badge style
CompetitionManager relationship doesn't have a previous competition, generating preferred badge styles
CompetitionManager building competition for friend: %{public}@ - %@
CompetitionManager built new competition: %@
CompetitionManager attempting to accept competition request to friend: %{public}@
CompetitionManager fetch complete, proceeding with accept
CompetitionManager unhiding from friend if hidden
CompetitionManager found friend with incoming request: %@
CompetitionManager couldn't find remote competition for friend
CompetitionManager UUID mismatch between local and remote competition: %@ vs %@
CompetitionManager updating competition start date before accepting
CompetitionManager attempting to ignore competition request from friend: %{public}@
CompetitionManager unable to ignore competition request, no incoming request found, relationship=%@
CompetitionManager preparing for new records
CompetitionManager existing friends awaiting my response: %@
CompetitionManager existing friends that accepted my request: %@
CompetitionManager existing friends with completed competitions: %@
CompetitionManager received new non-remote competitions
CompetitionManager existingCurrentCompetition=%@
CompetitionManager updatedCurrentCompetition=%@
CompetitionManager local view of competition has a higher score, keeping the current local value (%lu vs %lu)
CompetitionManager local view of competition has a higher opponent score, keeping the current local value (%lu vs %lu)
CompetitionManager found competition list missing a friendUUID: %@
CompetitionManager received new remote competitions
CompetitionManager couldn't find a matching friend for this remote competition list: %@
CompetitionManager CK fetch complete
CompetitionManager CK fetch is the first on this device, avoid notifying about already-processed changes
CompetitionManager checking each friend for updated competition state
CompetitionManager [%@] is awaiting response from me, alreadyProcessed=%d alreadyIgnored=%d alreadyNotified=%d
No paired watch supports competitions, showing upgrade notification
CompetitionManager [%@] accepted my request, alreadyProcessed=%d alreadyNotified=%d
CompetitionManager [%@] competition complete, alreadyNotified=%d
CompetitionManager responding to periodic update request for records
Competition has ended, not including in records to push: %{public}@
CompetitionManager found %lu competition records to save
CompetitionManager observed protected data availability: %{BOOL}d
CompetitionManager not handling competition request, device does not participate in competition management
CompetitionManager handling competition request from friend: %{public}@ - %@
CompetitionManager already sent a pending competition request to this friend
CompetitionManager this is likely due to simultaneous requests from each side
CompetitionManager attempting to auto-accept this request
CompetitionManager friend is not in awaiting response state
CompetitionManager probably from another device saving to CK sooner - just notify
CompetitionManager incoming request failed validation, aborting
CompetitionManager couldn't find remote competition list for friend
CompetitionManager found remote competition: %@
CompetitionManager building local view of competition
Successfully handled incoming competition request, notifying via BB
CompetitionManager not handling accepted competition, device does not participate in competition management
CompetitionManager handling accepted competition from friend: %{public}@ - %@
CompetitionManager couldn't find a local competition for accepted competition
CompetitionManager local view has already acknowledged remote acceptance - just notify
CompetitionManager found an accepted request but no corresponding competition
CompetitionManager updating local view of competition
Successfully acknowledged accepted competition request, notifying via BB
CompetitionManager saving competition lists in CloudKit, current: %@ archived: %@
CompetitionManager current competition list doesn't exist yet, creating
CompetitionManager archived competition list doesn't exist yet, creating
CompetitionManager not updating scores, protected data not yet fetched
CompetitionManager updating scores for competitions with %lu friends, summaryIndex=%lld
Current competition for friend %@ is %@
Competition is active with friend, but couldn't find a current competition: %{public}@ - %@
CompetitionManager updating competition score for friend with UUID:%@ with current competition: %@
CompetitionManager calculated new scores: %@(=%lu)
CompetitionManager no change, not persisting or notifying
CompetitionManager competition is ready to push final cache index, pushing immediately
CompetitionManager handling %ld competition list records
CompetitionManager saving remote competition list: %@
CompetitionManager updating local competition to reflect remote opponent score
CompetitionManager competition UUIDs didn't match, not updating score: local=%@ remote=%@
Not posting competition request bulletin for friend UUID %@, previously posted
CompetitionManager posting competition request bulletin for friend: %{public}@ - %@
Not posting bulletin competition accepted bulletin for friend UUID %@, previously posted
CompetitionManager posting competition accepted bulletin for friend: %{public}@ - %@
Not posting bulletin competition completed bulletin for friend UUID %@, previously posted
CompetitionManager posting competition ended with friend: %{public}@ - %@
CompetitionManager couldn't find a remote competition when auto-accepting
CompetitionManager couldn't find a local competition when auto-accepting
CompetitionManager comparing UUIDs to decide if we should accept
CompetitionManager this device should accept, rebuilding local competition in accepting role
CompetitionManager this device should *not* accept
CompetitionManager tried to check if competition is ready to complete, but couldn't find both a local and remote view of the competition: %{public}@ - %@, localCompetition=%@, remoteCompetition=%@
CompetitionManager competition with friend is ready to complete: %{public}@ - %@
CompetitionManager pushing competition one last time with updated opponent score
CompetitionManager failed to complete competition: %@
CompetitionManager successfully completed competition
CompetitionManager remote competition is also complete, we can notify
CompetitionManager building new archived competition list
CompetitionManager didn't find an existing competition to archive
CompetitionManager didn't find an existing archived competition list, creating one for friend: %{public}@
CompetitionManager built new archived competition list: %@
CompetitionManager didn't find an existing current competition list, creating one for friend: %{public}@
CompetitionManager not loading cached competitions, protected data is not available
Completing competition with friend: %{public}@
Unable to complete competition - not currently active
Unable to complete competition - no competition found
CompetitionManager updating competition %@ with scores: %@
CompetitionManager my activity data is hidden, unhiding first
CompetitionManager my activity data is not hidden, proceeding immediately
Received NR pairing status changed notification
Running friend manager setup
This device is a watch, setting up activity data notification manager.
Data protected by first unlock available
ActivitySharingManager setup complete
ActivitySharingManager final setup skipped
Skipping friend manager setup
Attempting to start submanagers
Not starting submanagers, activity app is not installed
Not starting submanagers, processing has already started
Attempting to stop submanagers
Not stopping submanagers, activity app is installed
Not stopping submanagers, processing has not been started
Proceeding with submanager shutdown
Notifying object of class %{public}@ of Activity Sharing Manager ready.
ASActivitySharingManager method called when submanagers will not be initialized, waiting forever is expected.
NanoSyncManager updated status, checking if Activity app is visible: %{BOOL}d
ActivitySharingManager applications installed: %@
ActivitySharingManager Activity app installed
ActivitySharingManager data protected by first unlock not available, not responding to installation
ActivitySharingManager applications uninstalled: %@
ActivitySharingManager Activity app uninstalled
ASServer rejecting client connection missing entitlement
Failed to look up achievement store
Achievements updated, checking for new today achievements to push
Alerts are currently suppressed, not checking for achievements to push
Recieved %lu new notification events
Processing %lu new notification events
Received events for %lu deleted workout(s)
There are %lu new deleted workouts, handling.
Finished handling deleted workouts, calling changesProcessedHandler
No new deleted workouts, calling changesProcessedHandler
More notification events coming, calling changesProcessedHandler
Processing %lu snapshots of self.
Incoming snapshots for self are: %@
Final snapshot dict for self: %@
Error getting source UUID for active device: %{public}@
Could not find paired active device UUID.
Multiple devices sharing status requested for snapshot index: %{public}@, active device UUID: %{public}@
Are multiple devices sharing: %{BOOL}d
Filtered hidden data: %lu/%lu snapshots, %lu/%lu workouts, %lu/%lu achievements.
Saved activity sharing data to database: %lu samples.
Error %{public}@ saving activity sharing data
Provenance is nil when trying to save fetched friend data.
No samples to save.
Not allowing sample for friend %{public}@ - %@
Sample date: %{public}@
Activity data visible: %d
Explicitly hiding: %d
Is on same day as friendship began: %d
Deleting all friend data!
Failed to delete all friend data with error: %{public}@
Deleted friend data successfully, %lu samples.
Failed to remove ASAchievementEntity samples for friend UUUD: %{public}@
Removed %ld ASAchievementEntity samples for friend UUUD: %{public}@
Failed to remove ASActivitySnapshotEntity samples for friend UUUD: %{public}@
Removed %ld ASActivitySnapshotEntity samples for friend UUUD: %{public}@
Failed to remove ASWorkoutEntity samples for friend UUUD: %{public}@
Removed %ld ASWorkoutEntity samples for friend UUUD: %{public}@
Failed to get activity snapshots from entity with error: %{public}@
Failed to get friend achievements from entity with error: %{public}@
Failed to get friend workouts from entity with error: %{public}@
Not fetching friend data, protected data is unavailable
Error fetching snapshots from db: %{public}@
Error fetching workouts from db: %{public}@
Error fetching achievements from db: %{public}@
Protected data availability changed and we haven't fetched friends' data yet
Recieved a sample with invalid type: %{public}@
Friend samples were added to database: %lu snapshots, %lu workouts, %lu achievements.
New today activity summary available, but doesn't have a move goal yet - copying existing known goals
Today summary represents a goal completion, requesting immediate update
Failed to create Apple Watch samples predicate with error: %{public}@
Error: %{public}@ fetching workouts with predicate: %{public}@, anchor: %{public}@
Looking for achievements for snapshot index: %lld, date: %@
Error getting local source UUID to attach to snapshots: %{public}@
Alerts are currently suppressed, not pushing any achievements
Found %lu achievements for today
New today anchor token is: %@
Not pushing yesterday achievements, new token matches current today token (we're likely just crossing the day boundary)
Found %lu achievements for yesterday
New yesterday anchor token is: %@
Looking for today workouts to push with anchor %@
Found %lu workouts
Looking for yesterday workouts to push with anchor %@
Unexpected request to push activity summaries while a push is in progress
Creating records for %lu snapshots, %lu achievements, %lu workouts, %lu notification events.
Updating share: deleting %lu workout records
Looking for deleted workouts with anchor: %{public}@
Found deleted workout, id=%lld, uuid=%{public}@
Finished looking for deleted workouts
Error enumerating deleted workouts: %@
Received an event for deleted workout: %@
Error deleting workouts: %{public}@
Successfully deleted %lu workout(s)
Error reading %{public}@ from key value domain: %{public}@
Loaded %{public}@: %{public}@
Loaded %{public}@: [%{public}@]
Error updating %{public}@ in key value domain: %{public}@
Updated %{public}@ to %{public}@
Updated %{public}@ to [%{public}@]
Synchronously fetching alert suppression state
Timeout fetching alert suppression status, assuming alerts are not suppressed
New achievement not yet pushed: %@
ContactsManager loading cached contacts
ContactsManager has some contacts that already exist in memory! Replacing with contacts from disk cache
ContactsManager found no contacts in cache, deleting legacy contacts
ContactsManager initialized cached contact: %{public}@ - %@
ContactsManager loaded %lu cached contacts
ContactsManager creating new contact with destinations: %@
ContactsManager resulting contact: %@
ContactsManager error saving contact, no UUID: %@
ContactsManager saving contact: %{public}@ - %@
ContactsManager error saving placeholder contact, no UUID: %@
ContactsManager saving placeholder contact (token=%{public}@): %{public}@ - %@
ContactsManager removing placeholder contact with token %{public}@
ContactsManager couldn't find contact with token %{public}@
ContactsManager found placeholder contact to remove %{public}@ - %@
ContactsManager removing all placeholder contacts (%lu placeholder contacts)
ContactsManager error setting contact, no UUID: %@
ContactsManager saving %lu contacts
ContactsManager beginning transaction
ContactsManager ending transaction
ContactsManager error, transaction timed out
ContactsManager persisting %lu contacts to disk
ContactsManager notifying %lu observer(s) of contacts update
ContactsManager error looking for contacts matching predicate: %@
ContactsManager multiple contacts matched destination: %@
ASFriendListQueryServer: Failed to find ASActivitySharingManagerProvider.
ASFriendListQueryServer: Starting.
ASFriendListQueryServer: stopping.
ASFriendListQueryServer calling deliverFriendList with %lu friends
Status for currentlyPairedWatchMeetsMinimumVersion: %{BOOL}d
Gateway status, iCloud signed in: %{BOOL}d, need to upgrade: %{BOOL}d
Should filter incoming message from %@ = %{bool}d
Updating state - status for canProcessInvitation: %{BOOL}d
Gateway Manager status changed. Notifying observers
Adding bulletin with connection %p and proxy %p
Withdrawing bulletin with connection %p and proxy %p
Showing invitation request bulletin from %{public}@ - %@
Notifying about invitation request from %{public}@ - %@
Sharing is setup. Showing invite request with actions.
Sharing is not set up. Showing invite request without actions.
iCloud is not signed in. Showing invite request with prompts to sign in.
Watch(es) not all on latest watchOS. Showing invite request with prompts to upgrade.
Showing invitation response bulletin from %{public}@ - %@
Withdrawing invitation request bulletin from %{public}@ - %@
Showing version incompatible notification for %{public}@ - %@
Showing invite response error for %{public}@ - %@
Showing max number of friends limit
Showing gizmo OS too low notification
CompanionBulletinManager: removeBulletins withdrew clearedBulletins:%@ and currentSet:%@
Migrating data provider push settings %{public}@ to %{public}@
CompanionBulletinManager: Cleared info for clearedBulletins: %@ and lastClearedInfo: %@
CompanionBulletinManager: returning bulletins with request parameters currentSet:%@ and lastClearedInfo:%@
Handling bulletin action response: %{public}@ RESPONSE: %{public}@
PeriodicUpdateManager registering xpc activity
PeriodicUpdateManager xpc activity fired, state=%zd
PeriodicUpdateManager failed to set xpc activity state to continue
PeriodicUpdateManager setting update task as done
PeriodicUpdateManager failed to set xpc activity state to done
Immediate periodic update requested.
Push in progress, queueing another push after this one completes
Not performing periodic update because we have no friends.
PeriodicUpdateManager device is a watch, requesting push
Periodic update save completed with result: %{BOOL}d, %@
Running queued push immediately
PeriodicUpdateManager device is a phone, updating supported features if necessary
PeriodicUpdateManager finished updating supported features
PeriodicUpdateManager initiating fetch changes from CloudKit
PeriodicUpdateManager fetch changes completed
Saved %lu subscriptions, deleted %lu subscriptions.
Failed to create record zones with IDs %@ with error: %{public}@
Created record zones in private database: %@
Failed to save records into private database with error: %{public}@
Saved %lu records into private database.
Zones not found when saving records, creating zones and re-trying save.
Cannot create a share with a root record in a different record zone.
Fetching share with ID: %@
Found share: %@
Failed to fetch share with ID %@, error: %{public}@
Accepted share with URL %@ and share ID %@
Failed to accept share with URL %@ with error: %{public}@
Accepted all shares successfully
Failed to accept shares with error: %{public}@
Fetched share metadata for URL %@ successfully
Error fetching share metadata: %{public}@
Fetching share metadata failed with error %{public}@; not accepting shares
Incorrect number of metadatas fetched; not accepting shares.
Accepting shares after fetching metadata (%lu metadatas)
Adding participant with address %@ to shares: %@
Adding participant %@ failed: saving shares failed with error: %{public}@
Added participant %@ to shares %@ successfully.
Adding participant %@ failed: failed to fetch user identity with error: %{public}@
Removing participant with address %@ from shares with IDs: %@
Removing participant %@ failed: saving shares failed with error: %{public}@
Removed participant %@ from shares with IDs %@ successfully.
Removing participant %@ failed: failed to fetch user identity with error: %{public}@
Fetching changes in %lu record zones (database %{public}@)
Change token expired for zone %@
Failed to fetch changes in zone %@ with error %{public}@
Fetched changes successfully in zone %@
Finished fetching changes in database %{public}@, %lu records
Some change tokens have expired, fetching again.
Calling completion with %lu changed records
Fetching changes in database %{public}@
Ignoring changes in zone with ID: %{public}@
No changes in database %{public}@, not fetching.
Failed to fetch changed record zones in database %{public}@ with error %{public}@
ASActivitySharingProfileExtension
HDXPCListenerDelegate
NSObject
HDProfileExtension
ASActivitySharingManagerProvider
ASActivitySharingPluginInterface
ASCompetitionAwardingSource
ACHEarnedInstanceAwarding
ASFakingManager
ASActivitySharingManagerReadyObserver
ASMessage
ASMessageQueue
ASRelationshipBeganPlaceholder
ASRelationshipManager
ASIDSMessageCenterDelegate
ASCloudKitManagerChangesObserver
ASGatewayManagerChangesObserver
ASCompanionBulletinBoardManagerDelegate
ASCompetitionTemplateSource
ACHTemplateSource
ASActivitySharingPlugin
HDPlugin
HDDatabaseSchemaProvider
HDTaskServerClassProvider
ASCloudKitServerChangeTokenCache
NSCopying
ASActivityDataNotificationManager
HDDataObserver
ASNotificationStep
ASCloudKitManager
APSConnectionDelegate
ASAchievementManager
ASCompetitionTemplateSourceDataProvider
ASCompetitionAwardingSourceDataProvider
ASCompetitionManagerObserver
ASMessageHandler
ASIDSMessageCenter
IDSServiceDelegate
ASGizmoBulletinBoardManager
BBRemoteDataProvider
BBDataProvider
BBSectionIdentity
CSLSOnWristMonitorDelegate
HDNanoAlertSuppressionObserver
HDDatabaseProtectedDataObserver
ASFriendListManager
ASContactsManagerObserver
HDFitnessAppBadgeCountProvider
ASCompetitionManager
ASActivityDataManagerObserver
ASPeriodicUpdateRecordProvider
ASActivitySharingManager
HDHealthDaemonReadyObserver
HDNanoSyncManagerObserver
ASServer
ASServerInterface
_HKXPCExportable
Filterable
ASFilterableSample
ASActivityDataManager
HDCurrentActivitySummaryHelperObserver
ACHAchievementStoreObserving
_ASContactPlaceholder
ASContactsManager
ASFriendListQueryServer
ASFriendListObserver
ASGatewayManager
ASCompanionBulletinBoardManager
ASPeriodicUpdateManager
ASCloudKitUtility
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@40@0:8@16@24^@32
@"<_HKXPCExportable>"40@0:8@"HDXPCListener"16@"HDXPCClient"24^@32
@32@0:8@16^@24
@"NSXPCListenerEndpoint"32@0:8@"HDXPCClient"16^@24
@"ASActivitySharingManager"16@0:8
@"NSSet"16@0:8
@24@0:8@16
v16@0:8
v24@0:8@16
@"HDXPCListener"
@"HDProfile"
@"ASActivitySharingManager"
@32@0:8@16@24
@"NSSet"32@0:8@"NSDateInterval"16@"HDDatabaseTransactionContext"24
@20@0:8C16
@32@0:8@16@?24
@"NSObject<OS_dispatch_queue>"
@"NSSet"
@"<ASCompetitionAwardingSourceDataProvider>"
v24@0:8@"ASActivitySharingManager"16
@32@0:8q16@24
@32@0:8@16q24
^{_HKFitnessFriendWorkout=#}16@0:8
^{_HKFitnessFriendAchievement=#}16@0:8
^{_HKFitnessFriendActivitySnapshot=#}16@0:8
v24@0:8@?16
@24@0:8q16
^{_HKFitnessFriendActivitySnapshot=#}20@0:8B16
@"ASActivityDataManager"
@"ASCloudKitManager"
@"ASCompetitionManager"
@"ASContactsManager"
q16@0:8
v24@0:8q16
i16@0:8
v20@0:8i16
@?16@0:8
@"NSData"
@"NSString"
v32@0:8@16@24
@"NSMutableDictionary"
^{__CFString=}
v48@0:8@16@24@32@?40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableInviteRequest"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableInviteResponse"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableFinalizeHandshake"24@"NSString"32@?<v@?q>40
v48@0:8@"ASIDSMessageCenter"16@"ASCodableWithdrawInviteRequest"24@"NSString"32@?<v@?q>40
v32@0:8@"ASIDSMessageCenter"16@"ASCodableInviteRequest"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableInviteResponse"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableFinalizeHandshake"24
v32@0:8@"ASIDSMessageCenter"16@"ASCodableWithdrawInviteRequest"24
v32@0:8@16q24
v52@0:8@16@24@32B40@?44
v44@0:8@16@24B32@?36
v32@0:8@"ASCloudKitManager"16q24
v52@0:8@"ASCloudKitManager"16@"NSArray"24@"CKRecordZoneID"32B40@?<v@?>44
v44@0:8@"ASCloudKitManager"16@"NSArray"24B32@?<v@?>36
v24@0:8@"ASCloudKitManager"16
v40@0:8@16q24@32
v40@0:8@"ASCompanionBulletinBoardManager"16q24@"NSUUID"32
v36@0:8B16@20@?28
v32@0:8@16@?24
v36@0:8S16@20@?28
v36@0:8@16S24@?28
v40@0:8@16@24@32
@28@0:8S16@20
v28@0:8@16B24
v40@0:8@16@24@?32
@"ASAchievementManager"
@"HDFitnessAppBadgeManager"
@"ASFriendListManager"
@"ASGatewayManager"
@"ASCompanionBulletinBoardManager"
@"ASAsyncTransactionQueue"
@"NSDictionary"
@"CNContactStore"
B24@0:8@"NSDate"16
v32@0:8@"NSDate"16@?<v@?@"NSSet">24
@"NSURL"24@0:8@"ACHTemplate"16
@"NSDictionary"24@0:8@"ACHTemplate"16
@"NSString"24@0:8@"ACHTemplate"16
@"NSObject<ACHTemplateSourceDelegate>"16@0:8
v24@0:8@"NSObject<ACHTemplateSourceDelegate>"16
@"<ASCompetitionTemplateSourceDataProvider>"
@"<HDHealthDaemonExtension>"24@0:8@"<HDHealthDaemon>"16
@"<HDProfileExtension>"24@0:8@"HDProfile"16
B24@0:8@"<HDHealthDaemon>"16
q24@0:8q16
v32@0:8q16@24
@"NSArray"24@0:8q16
v32@0:8q16@"HDDatabaseMigrator"24
@"NSArray"16@0:8
@24@0:8^{_NSZone=}16
v20@0:8B16
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@"NSArray"16@"HKSampleType"24
@"HDDataManager"
@"ASActivityDataNotificationRulesEngine"
@"ASGizmoBulletinBoardManager"
@"ASPeriodicUpdateManager"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v40@0:8q16@24@?32
v28@0:8B16@20
v32@0:8q16@?24
v40@0:8Q16q24@?32
v56@0:8@16@24@32@40@?48
v48@0:8@16@24q32@?40
v40@0:8@16q24@?32
v32@0:8B16B20@?24
v32@0:8d16B24B28
v24@0:8B16B20
v40@0:8@16@24q32
@"APSConnection"
@"CKShare"
@"NSHashTable"
@"ASNotificationStep"
@"NSArray"
@"ASCloudKitServerChangeTokenCache"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_dispatch_group>"
@"ASCloudKitUtility"
@"CKContainer"
@"NSDate"
@"ASFriend"24@0:8@"NSUUID"16
v24@0:8@"ASCompetitionManager"16
v32@0:8@"ASCompetitionManager"16@"NSSet"24
@20@0:8B16
@"ASCompetitionAwardingSource"
@"ASCompetitionTemplateSource"
v24@0:8#16
:16@0:8
v24@0:8:16
v56@0:8@16@24@32@40@48
v64@0:8@16@24@32@40@48@56
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@20@0:8i16
v36@0:8B16@20@28
v44@0:8@16i24@28@?36
v32@0:8:16@?24
@"IDSService"
@"ASMessageQueue"
@"<ASIDSMessageCenterDelegate>"
@"BBSectionInfo"16@0:8
@"BBSectionIcon"16@0:8
@"NSData"16@0:8
@40@0:8@16@24@32
f24@0:8@16
B32@0:8@16@24
@40@0:8Q16Q24@32
@48@0:8Q16@24Q32@40
@"NSSet"32@0:8@"BBBulletinRequestParameters"16@24
@32@0:8@"NSSet"16@24
@40@0:8@"NSDate"16@"NSDate"24@32
@24@0:8@"NSSet"16
@"BBSectionParameters"16@0:8
v40@0:8@"NSUUID"16@"NSString"24@?<v@?@"NSData">32
v48@0:8@"NSUUID"16@"NSString"24@"BBThumbnailSizeConstraints"32@?<v@?@"NSData">40
v40@0:8@"NSUUID"16@"NSString"24@?<v@?f>32
@"NSData"24@0:8@"NSString"16
@"NSData"32@0:8@"NSString"16@"BBThumbnailSizeConstraints"24
f24@0:8@"NSString"16
@"NSString"24@0:8@"NSString"16
B32@0:8@"BBSectionInfo"16@"BBSectionInfo"24
v24@0:8@"BBSectionInfo"16
v32@0:8@"NSString"16@"NSDictionary"24
v24@0:8@"BBActionResponse"16
v32@0:8@"BBActionResponse"16@?<v@?B>24
@"NSSet"40@0:8Q16Q24@32
@"NSSet"48@0:8Q16@"NSSet"24Q32@40
v40@0:8@"CSLSOnWristMonitor"16@"CSLSOnWristState"24@"CSLSOnWristState"32
v32@0:8@"NSString"16q24
v28@0:8@"<HDHealthDatabase>"16B24
@32@0:8@16^{_HKFitnessFriendActivitySnapshot=#}24
@48@0:8@16q24@32@40
@"ASFakingManager"
@"BBDataProviderConnection"
@"BBDataProviderProxy"
@"CSLSOnWristMonitor"
@"ASBulletinStore"
v24@0:8@"ASContactsManager"16
@"ASRelationshipManager"
v40@0:8@"ASActivityDataManager"16@"HKActivitySummary"24@"HKActivitySummary"32
v32@0:8@"ASPeriodicUpdateManager"16@"NSArray"24
@"ASCompetitionStore"
v24@0:8@"<HDHealthDaemon>"16
v32@0:8@"HDNanoSyncManager"16@"HKNanoSyncPairedDevicesSnapshot"24
@28@0:8@16B24
v32@0:8Q16@?24
@"ASActivityDataNotificationManager"
@"HDKeyValueDomain"
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v36@0:8B16@"NSString"20@?<v@?B@"NSError">28
v24@0:8@?<v@?B@"NSError">16
v32@0:8Q16@?<v@?B@"NSError">24
v24@0:8@?<v@?BB@"NSError">16
v32@0:8@"NSNumber"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSData"B@"NSError">24
@"NSXPCInterface"16@0:8
@"HDXPCClient"
@"NSUUID"16@0:8
@"NSDate"16@0:8
v40@0:8@16@24Q32
v40@0:8@"HDCurrentActivitySummaryHelper"16@"HKActivitySummary"24Q32
v32@0:8@"ACHAchievementStore"16@"NSSet"24
v24@0:8@"ACHAchievementStore"16
v44@0:8@16@24@32B40
v40@0:8^{_HKFitnessFriendActivitySnapshot=#}16@24@?32
@40@0:8^@16@24@32
@32@0:8^{_HKFitnessFriendActivitySnapshot=#}16^{_HKFitnessFriendActivitySnapshot=#}24
@48@0:8^{_HKFitnessFriendActivitySnapshot=#}16^{_HKFitnessFriendActivitySnapshot=#}24@32@40
@40@0:8^{_HKFitnessFriendActivitySnapshot=#}16^{_HKFitnessFriendActivitySnapshot=#}24@32
@64@0:8^{_HKFitnessFriendActivitySnapshot=#}16^{_HKFitnessFriendActivitySnapshot=#}24@32@40@48@56
@"NSNumber"
@"HKActivitySummary"
@"NSCalendar"
@"ASContact"
@24@0:8@?16
v24@0:8@"NSSet"16
@56@0:8@16@24@32@40@48
B20@0:8I16
@"<ASCompanionBulletinBoardManagerDelegate>"
v56@0:8@16@24q32q40@?48
v60@0:8@16@24@32q40B48@?52
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
activitySharingManager
T@"ASActivitySharingManager",&,N,V_activitySharingManager
profile
T@"HDProfile",R,W,N,V_profile
Serial
ActivitySharingCompetitionAwardingSource
B16@?0@"ASCompetition"8
v8@?0
uniqueName
T@"NSString",R,N
dataProvider
T@"<ASCompetitionAwardingSourceDataProvider>",W,N,V_dataProvider
B32@?0@"ASCompetition"8Q16^B24
fakeContactName
Allen
fakeContactAddress
2025550184
fakeWorkoutType
fakeWorkoutGoalType
fakeWorkoutEnergyBurned
fakeWorkoutDistance
fakeWorkoutDuration
fakeWorkoutGoal
fakeWorkoutIsIndoor
fakeAchievementTemplateUniqueName
NewExerciseRecord
fakeAchievementWorkoutType
fakeAchievementValue
fakeFriendUUID
fakeCompetitionMyWinCount
fakeCompetitionOpponentWinCount
fakeCompetitionBadgeStyle
fakeCompetitionOpponentWonPreviously
com.apple.SessionTracker
v28@?0B8@"NSError"12@"NSArray"20
v24@?0Q8q16
T@"HDProfile",W,N,V_profile
activityDataManager
T@"ASActivityDataManager",W,N,V_activityDataManager
cloudKitManager
T@"ASCloudKitManager",W,N,V_cloudKitManager
competitionManager
T@"ASCompetitionManager",W,N,V_competitionManager
contactsManager
T@"ASContactsManager",W,N,V_contactsManager
fakeFriend
T@"ASFriend",R,N
fakeWorkout
T@"_HKFitnessFriendWorkout",R,N
fakeAchievement
T@"ACHAchievement",R,N
fakeFriendAchievement
T@"_HKFitnessFriendAchievement",R,N
fakeSnapshot
T@"_HKFitnessFriendActivitySnapshot",R,N
fakeCompleteSnapshot
Watch
iPod6,3
ASMessagePayloadKey
ASMessageTypeKey
ASMessageSenderAddressKey
ASMessageRetryCountKey
payload
T@"NSData",&,N,V_payload
retryCount
Tq,N,V_retryCount
type
Ti,N,V_type
senderAddress
T@"NSString",C,N,V_senderAddress
ephemeralCompletionBlock
T@?,C,N,V_ephemeralCompletionBlock
DefaultMessageQueue
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"ASMessage"16^B24
ASRelationshipTransaction
com.apple.ActivitySharing.RelationshipManager
token
T@,R,N,V_token
blocksWaitingOnSuccess
T@"NSSet",R,N,V_blocksWaitingOnSuccess
RelationshipManagerTransaction
v32@?0@"NSString"8@"ASIDSMessageCenter"16^B24
B24@?0@"CKShareParticipant"8@"NSDictionary"16
v28@?0B8@"NSError"12@"ASRelationship"20
v28@?0B8@"NSError"12@"CKShareParticipant"20
v28@?0B8@"NSError"12@"CKShare"20
v16@?0@?<v@?>8
v20@?0B8@"NSError"12
@"CKRecord"16@?0@"ASRelationship"8
v44@?0B8@"NSError"12@"CKShare"20@"CKShare"28@"ASRelationship"36
v24@?0@"NSString"8@"NSError"16
v36@?0B8@"NSError"12@"CKShare"20@"CKShare"28
v28@?0B8B12B16@"NSError"20
B16@?0@"ASContact"8
v44@?0B8@"NSError"12@"CKShare"20@"CKRecord"28@"NSArray"36
v28@?0B8@"NSError"12@"NSDictionary"20
v32@?0@"CKRecordID"8@"ASRelationship"16^B24
q24@?0@"ASRelationship"8@"ASRelationship"16
v28@?0@"NSString"8B16@?<@"NSArray"@?@"ASRelationship">20
cloudKitAddress
@"NSArray"16@?0@"ASRelationship"8
preferredAddress
knownAddresses
createCloudKitAddress
createPreferredAddress
createKnownAddresses
@"NSSet"8@?0
v16@?0@"ASRelationship"8
isReadyToProcessChanges
TB,R,N
BuildVersion
com.apple.ActivitySharing
ActivityDataZone
RelationshipZone
B16@?0@"ASFriend"8
v32@?0@"ASFriend"8Q16^B24
identifier
runCadence
Tq,R,N
delegate
T@"NSObject<ACHTemplateSourceDelegate>",W,N
T@"<ASCompetitionTemplateSourceDataProvider>",W,N,V_dataProvider
q40@?0@"HDProfile"8@"HDDatabaseMigrationTransaction"16q24^@32
ALTER TABLE protected.activitysharing_competitions RENAME TO activitysharing_competitions_old
INSERT INTO protected.activitysharing_competitions SELECT * FROM protected.activitysharing_competitions_old
DROP TABLE protected.activitysharing_competitions_old
ALTER TABLE protected.activitysharing_competitions ADD COLUMN %@ INTEGER
CREATE TABLE IF NOT EXISTS protected.%@_%@             (%@ INTEGER PRIMARY KEY AUTOINCREMENT,             %@ BLOB,             %@ INTEGER,            %@ BLOB,             %@ INTEGER,             UNIQUE(%@, %@))
CREATE TABLE IF NOT EXISTS protected.%@_%@             (%@ INTEGER PRIMARY KEY AUTOINCREMENT,             %@ BLOB,             %@ BLOB,             %@ INTEGER,             %@ INTEGER,             %@ INTEGER,             %@ BLOB,             %@ BLOB,             %@ BLOB,             %@ BLOB,             %@ BLOB,             %@ INTEGER,             UNIQUE(%@, %@))
DROP TABLE IF EXISTS protected.%@_%@
pluginIdentifier
T@"NSString",R,C,N
schemaName
Contacts
contacts.dat
contacts2.dat
expired
TB,N,GisExpired
%@%@
v32@?0@"NSString"8@16^B24
v32@?0@"NSString"8@"CKServerChangeToken"16^B24
fitnessFriendsWorkoutAnchorKey
fitnessFriendsAchievementAnchorKey
fitnessFriendsGoalCompletionAnchorKey
workoutCompletion
achievementEarned
goalCompletionIndex
%@_%@
notificationRulesEngine
T@"ASActivityDataNotificationRulesEngine",&,N,V_notificationRulesEngine
workoutAnchor
T@"NSNumber",&,N
achievementAnchor
goalCompletionAnchor
friendListManager
T@"ASFriendListManager",W,N,V_friendListManager
gizmoBulletinBoardManager
T@"ASGizmoBulletinBoardManager",W,N,V_gizmoBulletinBoardManager
periodicUpdateManager
T@"ASPeriodicUpdateManager",W,N,V_periodicUpdateManager
ActivitySharingCloudKitAccountKey
ActivitySharingHasCompletedFirstCloudKitFetchKey
ActivitySharingSharedDataSubscription
ActivitySharingPrivateDataSubscription
ASCloudKitFetch
com.apple.ActivityMonitorApp
com.apple.ActivitySharing.CloudKitManager
recordTypes
T@"NSSet",&,N,V_recordTypes
objectsTransformationBlock
T@?,C,N,V_objectsTransformationBlock
objectTransformationBlock
T@?,C,N,V_objectTransformationBlock
shouldNotifyObserverBlock
T@?,C,N,V_shouldNotifyObserverBlock
notifyObserverBlock
T@?,C,N,V_notifyObserverBlock
%@-%@
Observer
ChangeToken
v36@?0B8@"NSError"12@"NSArray"20@"NSArray"28
v28@?0B8@"NSError"12@"NSSet"20
Achievement
ActivitySnapshot
Event
Relationship
Workout
aps-environment
v24@?0q8@"NSError"16
v32@?0@"NSPersonNameComponents"8@"NSString"16@"NSError"24
@"NSArray"24@?0@"ASCloudKitManager"8@"NSArray"16
B16@?0@"<ASCloudKitManagerChangesObserver>"8
v52@?0@"ASCloudKitManager"8@"<ASCloudKitManagerChangesObserver>"16@"CKRecordZoneID"24B32@"NSArray"36@?<v@?>44
^{_HKFitnessFriendActivitySnapshot=#}24@?0@"ASCloudKitManager"8@"CKRecord"16
^{_HKFitnessFriendWorkout=#}24@?0@"ASCloudKitManager"8@"CKRecord"16
^{_HKFitnessFriendAchievement=#}24@?0@"ASCloudKitManager"8@"CKRecord"16
@"ASNotificationEvent"24@?0@"ASCloudKitManager"8@"CKRecord"16
@"ASCompetitionList"24@?0@"ASCloudKitManager"8@"CKRecord"16
B24@?0@"CKRecord"8@"NSDictionary"16
v28@?0@"CKRecordZoneID"8@"NSArray"16B24
cloudKitUtility
T@"ASCloudKitUtility",&,N,V_cloudKitUtility
container
T@"CKContainer",&,N,V_container
dateOfLastSuccessfulFetch
T@"NSDate",&,N,V_dateOfLastSuccessfulFetch
readyForOperations
TB,V_readyForOperations
hasCompletedFirstFetch
TB,R,N,V_hasCompletedFirstFetch
v16@?0@"<ACHAchievementsProfileExtending>"8
@"NSSet"16@?0@"NSDateInterval"8
B16@?0@"ACHTemplate"8
@"ACHTemplate"16@?0@"NSString"8
friends
T@"NSSet",R,N
protobufClass
T#,N,V_protobufClass
handleReceiveMessageAction
T:,N,V_handleReceiveMessageAction
handleErrorSendingMessageAction
T:,N,V_handleErrorSendingMessageAction
outgoing
incoming
%@-outgoing
%@-retry
%@-persisted
v24@?0@"NSString"8@"ASMessage"16
v16@?0q8
v16@?0^?8
tel:
mailto:
T@"<ASIDSMessageCenterDelegate>",W,N,V_delegate
serviceIdentifier
T@"NSString",R,N,V_serviceIdentifier
com.apple.FitnessFriends
com.apple.ActivitySharing.competitions.thread
com.apple.ActivitySharing.default.thread
/System/Library/PrivateFrameworks/FitnessUI.framework
bulletinQueue
fakeFriendGoalCompletion
v12@?0i8
fakeFriendGoalCompletionDuringCompetition
fakeFriendWorkout
fakeFriendCompetitionRequest
fakeFriendCompetitionAccepted
fakeFriendCompetitionEndedWinner
fakeFriendCompetitionLoserWinner
fakeFriendBatch
@"ASCodableBulletin"16@?0@"ASActivityDataNotification"8
B16@?0@"ASCodableBulletin"8
ACTIVITY
ActivitySharing-InviteNotifications
@"BBSectionInfo"16@?0@"BBSectionInfo"8
date
@"NSString"16@?0@"BBBulletinRequest"8
B24@?0@"BBBulletinRequest"8@"NSDictionary"16
v12@?0B8
NOTIFICATION_TITLE_FORMAT_WORKOUT
Localizable
NOTIFICATION_TITLE_FORMAT_ACHIEVEMENT
NOTIFICATION_TITLE_FORMAT_GOAL_COMPLETION
BULLETIN_TITLE_COMPETITION_REQUEST
BULLETIN_TITLE_COMPETITION_ACCEPTED
BULLETIN_TITLE_COMPETITION_ENDED_TIED
BULLETIN_TITLE_COMPETITION_ENDED_WINNER
BULLETIN_TITLE_COMPETITION_ENDED_LOSER
ActivitySharingHasFriendsChangedNotification
FriendList
B24@?0^{_HKFitnessFriendWorkout=#}8@"NSDictionary"16
v32@?0@"NSNumber"8@"NSSet"16^B24
badgeCount
TQ,R,N
relationshipManager
T@"ASRelationshipManager",W,N,V_relationshipManager
achievementManager
T@"ASAchievementManager",W,N,V_achievementManager
isWatch
TB,N,V_isWatch
hasFriendsToShareWith
TB,R
T@"NSSet",R,C,N
CompetitionManagerTransaction
v28@?0B8@"NSError"12@"ASContact"20
B16@?0@"CKRecord"8
@"ASCompetitionList"16@?0@"CKRecord"8
@"NSUUID"16@?0@"ASCompetitionList"8
@"CKRecord"16@?0@"ASContact"8
ASStartSubmanagers
ReadWrite
SubmanagerBarrier
TB,R,N,V_isWatch
T@"ASAchievementManager",R,N,V_achievementManager
T@"ASActivityDataManager",R,N,V_activityDataManager
activityDataNotificationManager
T@"ASActivityDataNotificationManager",R,N,V_activityDataNotificationManager
T@"ASCloudKitManager",R,N,V_cloudKitManager
companionBulletinBoardManager
T@"ASCompanionBulletinBoardManager",R,N,V_companionBulletinBoardManager
T@"ASCompetitionManager",R,N,V_competitionManager
T@"ASContactsManager",R,N,V_contactsManager
fakingManager
T@"ASFakingManager",R,N,V_fakingManager
T@"ASFriendListManager",R,N,V_friendListManager
gatewayManager
T@"ASGatewayManager",R,N,V_gatewayManager
T@"ASGizmoBulletinBoardManager",R,N,V_gizmoBulletinBoardManager
T@"ASRelationshipManager",R,N,V_relationshipManager
T@"ASPeriodicUpdateManager",R,N,V_periodicUpdateManager
deviceLocalActivitySharingKeyValueDomain
T@"HDKeyValueDomain",R,N,V_deviceLocalActivitySharingKeyValueDomain
v24@?0B8B12@"NSError"16
LastPushedWorkoutAnchor
LastPushedDeletedWorkoutAnchor
LastPushedTodayAchievementAnchorToken
LastPushedYesterdayAchievementAnchorToken
LastPushedGoalCompletionAnchor
filter_friendUUID
T@"NSUUID",R,N
filter_date
T@"NSDate",R,N
CloudKitManagerObserver
HealthData
ActivitySummary
B24@?0@"ASNotificationEvent"8@"NSDictionary"16
v24@?0@"NSSet"8@"NSNumber"16
B24@?0@"<ASFilterableSample>"8@"NSDictionary"16
B24@?0@"HKSample"8@"NSDictionary"16
Watch%
^{_HKFitnessFriendAchievement=#}16@?0@"ACHAchievement"8
@"ASNotificationEvent"16@?0^{_HKFitnessFriendWorkout=#}8
@"ASNotificationEvent"16@?0^{_HKFitnessFriendAchievement=#}8
v24@?0@"NSArray"8@"NSNumber"16
B40@?0@"HKWorkout"8@"HKDeletedObject"16q24^@32
T@"ASActivitySharingManager",W,N,V_activitySharingManager
currentActivitySnapshot
currentWorkouts
currentAchievements
currentActivitySummary
T@"HKActivitySummary",R,N
yesterdayActivitySummary
B24@?0^{_HKFitnessFriendActivitySnapshot=#}8@"NSDictionary"16
@"NSString"16@?0^{_HKFitnessFriendAchievement=#}8
q24@?0@"NSString"8@"NSString"16
T@,&,N,V_token
contact
T@"ASContact",&,N,V_contact
observer
persist
v32@?0@"NSUUID"8@"NSArray"16^B24
contacts
T@"NSSet",C,N
placeholderContacts
hasReachedMaximumNumberOfFriends
Accept
Ignore
com.apple.Fitness
ASContextIDContactUUID
ASContextNotificationTypeKey
ASContextNotificationTypeInviteRequest
ASContextNotificationTypeInviteResponse
showInviteRequest
showInviteResponse
notifyOfInvitation
showNeedToSignIn
showNeedToUpgrade
johndoe@icloud.com
ACTIVITY_SHARING_INVITATION_REQUEST_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_BODY
ACCEPT
IGNORE
ACTIVITY_SHARING_INVITATION_REQUEST_SETUP_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_SETUP_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_SIGNIN_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_SIGNIN_BODY
ACTIVITY_SHARING_INVITATION_REQUEST_UPGRADE_TITLE
ACTIVITY_SHARING_INVITATION_REQUEST_UPGRADE_BODY
ACTIVITY_SHARING_INVITATION_RESPONSE_TITLE
ACTIVITY_SHARING_INVITATION_RESPONSE_BODY_WITH_CLOUDKIT_ADDRESS
ACTIVITY_SHARING_INVITATION_RESPONSE_BODY
ACTIVITY_SHARING_VERSION_TOO_LOW_TITLE
ACTIVITY_SHARING_INCOMING_REQUEST_VERSION_TOO_LOW_BODY
ACTIVITY_SHARING_OUTGOING_REQUEST_VERSION_TOO_LOW_BODY
ACTIVITY_SHARING_VERSION_TOO_HIGH_TITLE
ACTIVITY_SHARING_OUTGOING_REQUEST_VERSION_TOO_HIGH_TITLE
ACTIVITY_SHARING_INVITE_ACCEPT_ERROR
ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_BODY
ACTIVITY_SHARING_FRIEND_LIMIT_MESSAGE_TITLE
COMPETITION_UPDATE_WATCHOS_TITLE
COMPETITION_UPDATE_WATCHOS_MESSAGE
T@"<ASCompanionBulletinBoardManagerDelegate>",W,N,V_delegate
ASMessageTypeInviteRequest
ASMessageTypeInviteResponse
ASMessageTypeFinalizeHandshake
ASMessageTypeWithdrawInviteRequest
com.apple.FitnessFriends.PeriodicUpdateActivity
Provider
v16@?0@"NSObject<OS_xpc_object>"8
hasRegisteredForUpdates
TB,R,N,V_hasRegisteredForUpdates
ActivitySharing.Notifications
ActivitySharing.Notifications.Synced
ActivitySharing
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
v16@?0@"NSError"8
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
v16@?0@"CKShareParticipant"8
v16@?0@"CKRecord"8
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
