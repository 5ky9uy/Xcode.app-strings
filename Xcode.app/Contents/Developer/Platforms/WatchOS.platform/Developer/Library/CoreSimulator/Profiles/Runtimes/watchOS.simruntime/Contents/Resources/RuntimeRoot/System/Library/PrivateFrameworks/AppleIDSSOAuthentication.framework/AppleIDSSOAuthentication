accountStore
credentialForAccount:serviceID:
token
credential
tokenExpiryDate
date
compare:
accountPropertyForKey:
class
isKindOfClass:
stringValue
aida_tokenForService:
aida_tokenWithExpiryCheckForService:
aida_tokenWithExpirationCheck
aida_alternateDSID
aida_dsid
aida_deviceProvisioningInfo
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
countByEnumeratingWithState:objects:count:
boolValue
aida_AppleIDAuthenticationAccountType
aida_AppleIDAuthenticationAccounts
isEqualToString:
_primaryiCloudAccount
aida_accountForiCloudAccount:
isEqual:
aida_renewCredentialsForAccount:services:force:completion:
numberWithBool:
dictionaryWithObjects:forKeys:count:
renewCredentialsForAccount:options:completion:
aida_accountForPrimaryiCloudAccount
aida_iCloudAccountMatchingAppleIDAuthAccount:
aida_renewCredentialsForAccount:services:completion:
contextWithContext:
setAuthenticationResults:
setShouldForceOperation:
setViewController:
copyWithZone:
mutableCopyWithZone:
alloc
init
copy
accessInstanceVariablesDirectly
.cxx_destruct
authenticationResults
shouldForceOperation
viewController
_authenticationResults
_shouldForceOperation
_viewController
pluginBundlesAtSubpath:
doesNotRecognizeSelector:
serviceOwnerBundles
principalClass
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
initWithAccountStore:
accountForService:
altDSIDForAccount:service:
DSIDForAccount:service:
nameComponentsForAccount:service:
signInService:withContext:completion:
signOutService:withContext:completion:
supportedServices
count
setObject:forKeyedSubscript:
enumerateObjectsUsingBlock:
addObjectsFromArray:
serviceOwners
objectForKeyedSubscript:
code
aida_errorWithCode:
setServiceOwners:
_accountStore
_serviceOwners
aida_errorWithCode:userInfo:
errorWithDomain:code:userInfo:
AppleIDAuthentication
AIDAMutableServiceContext
AIDAServiceContext
NSMutableCopying
NSCopying
AIDAServiceOwnerProtocol
NSObject
AIDAServiceOwnersManager
@12@0:4@8
@8@0:4
v20@0:4@8@12@?16
v24@0:4@8@12B16@?20
v12@0:4@8
v12@0:4B8
@12@0:4^{_NSZone=}8
B8@0:4
v8@0:4
@"NSDictionary"
@"UIViewController"
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@16@0:4@8@12
@12@0:4@"ACAccountStore"8
@"ACAccount"12@0:4@"NSString"8
@"NSString"16@0:4@"ACAccount"8@"NSString"12
@"NSPersonNameComponents"16@0:4@"ACAccount"8@"NSString"12
v20@0:4@"NSString"8@"AIDAServiceContext"12@?<v@?B@"NSError">16
@"NSArray"8@0:4
@"ACAccountStore"
@12@0:4i8
@16@0:4i8@12
altDSID
dsid
com.apple.AppleID.Service.Cloud
com.apple.AppleID.Service.Store
com.apple.AppleID.Service.FaceTime
com.apple.AppleID.Service.Messages
com.apple.AppleID.Service.GameCenter
com.apple.gs.appleid.auth
com.apple.gs.icloud.auth
com.apple.gs.icloud.family.auth
com.apple.gs.pb.auth
adsid
Services
personID
primaryAccount
authenticationResults
T@"NSDictionary",C,D,N
shouldForceOperation
TB,D,N
viewController
T@"UIViewController",&,D,N
v4@?0
com.apple.appleaccount
authentication
com.apple.appleidauthentication
signpost
T@"NSDictionary",R,C,N,V_authenticationResults
TB,R,N,V_shouldForceOperation
T@"UIViewController",R,N,V_viewController
ServiceOwners
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
supportedServices
T@"NSArray",R,C
v12@?0@"NSBundle"4^B8
v12@?0B4@"NSError"8
serviceOwnerBundles
T@"NSSet",R,C,N
serviceOwners
T@"NSDictionary",C,N,V_serviceOwners
com.apple.AppleID.Error
Non-conformant principal class for bundle: %{public}@
Missing supported services for bundle: %{public}@
Failed to allocate service owner for bundle: %{public}@
Bundle for %{public}@ supports services: %{public}@
 ServiceType=%{public,signpost.telemetry:string1,name=ServiceType}@  enableTelemetry=YES 
SignInService
BEGIN [%lld]: SignInService  ServiceType=%{public,signpost.telemetry:string1,name=ServiceType}@  enableTelemetry=YES 
 Success=%{public,signpost.telemetry:number1,name=Success}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
END [%lld] %fs:SignInService  Success=%{public,signpost.telemetry:number1,name=Success}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
SignOutService
BEGIN [%lld]: SignOutService  ServiceType=%{public,signpost.telemetry:string1,name=ServiceType}@  enableTelemetry=YES 
END [%lld] %fs:SignOutService  Success=%{public,signpost.telemetry:number1,name=Success}d  Error=%{public,signpost.telemetry:number2,name=Error}d 
