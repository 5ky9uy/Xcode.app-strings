distantFuture
initWithQuantityType:startDate:endDate:
canonicalUnit
quantityWithUnit:doubleValue:
initWithQuantityType:startDate:endDate:committedSamples:uncommittedSamples:lastCommitDate:committedTotal:finalized:
init
countByEnumeratingWithState:objects:count:
alloc
initWithStartDate:endDate:
_quantityByAddingQuantity:
timeIntervalSinceDate:
endDate
hk_isAfterDate:
arrayWithObjects:count:
autoCommitDateForSamples:
arrayByAddingObject:
_commitingSamples:toPreviousCommittedTotal:toPreviousCommittedSamples:untilDate:startDate:endDate:
count
arrayWithCapacity:
addObject:
enumerateObjectsUsingBlock:
arrayByAddingObjectsFromArray:
lastObject
earlierDate:
distantPast
committingUntilDate:
hk_isGreaterThanQuantity:
quantityType
compare:
startDate
enumerateObjectsWithOptions:usingBlock:
settingStartDate:
initWithQuantityType:startDate:
committedAndAddedTotal
committedDuration
activeDurationUntilDate:
addingSample:error:
addingSamples:error:
settingEndDate:
settingTotalQuantityLimit:
.cxx_destruct
committedSamples
finalized
committedTotal
_uncommittedSamples
_committedSamples
_lastCommitDate
_finalized
_quantityType
_startDate
_endDate
_committedTotal
hk_isBeforeDate:
_totalByCommittingSample:toPreviousTotal:startDate:endDate:
subarrayWithRange:
class
stringWithFormat:
description
fi_overlapsStartDate:endDate:
fi_isBeforeDate:
fi_isAfterDate:
fi_spansDate:useStrictDateLimits:
intersectionWithDateInterval:
duration
quantity
_unit
doubleValueForUnit:
initWithCapacity:
type
copy
initWithArray:
dateInterval
sortUsingComparator:
isEqual:
dateByAddingTimeInterval:
test
name
validateObject:withError:
validationWithName:test:
performValidations:withObject:error:
_name
_test
addSamples:
_updateSlicesWithSamples:
_determineAndProcessThresholdReached
reverseObjectEnumerator
allObjects
fi_mapUsingBlock:
_addPauseEvent:
_addResumeEvent:
arrayWithArray:
replaceObjectAtIndex:withObject:
_processUncommittedSamples
initWithQuantityType:threshold:startDate:
addSample:
addEvent:withError:
setThreshold:
idleDurationUntilDate:
threshold
thresholdReached
pauseResumeEvents
_slices
_thresholdReached
_threshold
_pauseResumeEvents
secondUnit
meterUnit
intervalDefinitionWithTypeIdentifier:quantity:
objectForKeyedSubscript:
integerValue
doubleValue
initWithTypeIdentifier:quantity:
numberWithInteger:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
definitionFromDictionary:error:
dictionaryRepresentation
byChangingType:quantity:
_type
_quantity
isKindOfClass:
initWithTimeSlices:
timeSliceGroupForQuantityTypes:startDate:
commitAllSlicesToDate:
updateSlicesWithEndDate:
updateSlicesWithSample:
allSlicesFinalized
slices
hk_isAfterOrEqualToDate:
hk_isBeforeOrEqualToDate:
reductionWithObject:
initWithObject:
object
_object
fi_flatMapUsingBlock:
fi_filteredArrayUsingBlock:
fi_reduceWithReduction:block:
fi_arrayByEnumeratingRange:usingBlock:
initWithHealthStore:
_setUncommitedValue:forPropertyKey:
setObject:forKeyedSubscript:
_setHeightCharacteristicQuantity:error:
_setBodyMassCharacteristicQuantity:error:
hk_canonicalDateOfBirthDateComponentsWithDate:
_setDateOfBirthComponents:error:
_setBiologicalSex:error:
_setWheelchairUse:error:
raise:format:
dateOfBirthComponentsWithError:
calendarWithIdentifier:
dateFromComponents:
_logAndNilError:operationDescription:
_heightCharacteristicQuantityWithError:
_bodyMassCharacteristicQuantityWithError:
biologicalSexWithError:
biologicalSex
wheelchairUseWithError:
wheelchairUse
removeAllObjects
setWheelchairUse:
allKeys
_commitValue:forPropertyKey:error:
quantityTypeForIdentifier:
sortDescriptorWithKey:ascending:
initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:
executeQuery:
mutableCopy
copyWithZone:
setDateOfBirth:
setHeight:
setWeight:
setBiologicalSex:
_hasDirtyPropertyForPropertyKey:
populateExistingCharacteristics
commmitWithError:
leanBodyMass
dateOfBirth
height
weight
updateHandler
setUpdateHandler:
_healthStore
_dirtyPropertiesMap
_dateOfBirth
_height
_weight
_biologicalSex
_wheelchairUse
_updateHandler
initWithQuantityType:startDate:endDate:uncommitedSamples:lastCommitDate:committedTotal:finalized:
_commitingSamples:toPreviousCommittedTotal:untilDate:startDate:endDate:
initWithQuantityType:startDate:threshold:
_updateTriggerWithSample:
triggered
triggeredDate
intervalComplete
intervalEndDate
initWithIntervalQuantityType:threshold:startDate:trackedQuantityTypes:
isIntervalEndDate
_quantityTrigger
_sliceGroup
dealloc
descriptionArray
stringByPaddingToLength:withString:startingAtIndex:
stringByAppendingString:
bucketCount
initWithNumberOfBuckets:
valueForBucketAtIndex:
addValue:toBucketAtIndex:
numberOfValuesInBucketAtIndex:
debugDescription
_bucketCount
_buckets
initWithDomain:
synchronize
_checkVersion
loadIntervalWorkoutDefinitions
integerForKey:keyExistsAndHasValidFormat:
_saveDefaultIntervalWorkouts
objectForKey:
_deserializeIntervalWorkoutDefinitions:
setObject:forKey:
setInteger:forKey:
domain
setWithArray:
synchronizeNanoDomain:keys:
_serializeRootIntervalWorkoutDefinitions:
_saveRootIntervalWorkoutDefinitions:
identifier
indexOfObject:
_updateIntervalWorkoutDefinition:activityTypeIdentifier:
_serializeAndSaveRootIntervalWorkoutDefinitions:
removeObjectAtIndex:
_trimRootIntervalWorkoutDefinitions:
array
removeObjectForKey:
_defaultUserIntervalWorkouts
_mockQuarterMileSprints
_mockVariedSpeed
_mockHIIT3010
UUID
UUIDString
numberWithInt:
saveIntervalWorkoutDefinition:activityTypeIdentifier:
removeIntervalWorkoutDefinitionAtIndex:activityTypeIdentifier:
intervalWorkoutDefinitionsForActivityTypeIdentifier:
_domainAccessor
_syncManager
_rootIntervalWorkoutDefinitions
intervalCount
intervalAtIndex:
initWithUUIDString:
initWithName:identifier:sets:
sets
initWithIntervalDefinitions:repeatCount:setType:
insertObject:atIndex:
objectAtIndex:
byAddingIntervalDefinition:
byReplacingSetDefinitionAtIndex:withSetDefinition:
section
byInsertingIntervalDefinition:atIndex:
byReplacingIntervalDefinitionAtIndex:withIntervalDefinition:
byRemovingIntervalDefinitionAtIndex:
intervalWorkoutDefinition
intervalDefinitionForIntervalAtIndex:
byChangingName:
byAddingSetDefinition:
byInsertingSetDefinition:atIndex:
byRemovingSetDefinitionAtIndex:
byAddingIntervalDefinition:toSetIndex:
byInsertingIntervalDefinition:atIndexPath:
byReplacingIntervalDefinitionAtIndexPath:withIntervalDefinition:
byRemovingIntervalDefinitionAtIndexPath:
_identifier
_sets
minuteUnit
countUnit
setDelegate:
_queue_populateHistogramsAndOffWristDateForToday
delegate
currentCalendar
currentDate
startOfDayForDate:
startOfToday
dateByAddingUnit:value:toDate:options:
_bucketIndexForDate:startOfDay:bucketDates:
timeIntervalSinceReferenceDate
_waitUntilActivitySummaryLoaded
activeEnergyBurned
appleExerciseTime
_queue_currentValueForHistogram:
_percentageOfTypicalDayComparedToNowForGoal:
activeEnergyBurnedGoal
appleExerciseTimeGoal
_willCompleteGoalWithType:bufferPercentage:
projectedOffWristDateToday
_standHoursCompletionPercentage
appleStandHoursGoal
appleStandHours
_activeEnergyCompletionPercentage
_exerciseTimeCompletionPercentage
bestMoveStreak
respondsToSelector:
currentMoveStreak
totalMoveGoalsAttempted
bestMoveValue
kilocalorieUnit
endOfToday
percentageOfTypicalDayMoveComparedToNow
percentageOfTypicalDayBriskMinutesEarnedComparedToNow
firstOnWristDateToday
totalActiveDays
briskWalkTimeToCompleteMoveGoalWithAcitivitySettingsController:
hk_startOfDateByAddingDays:toDate:
_queue_briskWalkTimeToCompleteMoveGoalWithDateOfBirth:biologicalSex:height:weight:wheelchairUse:
_hasMoveGoal
smallCalorieUnit
gramUnitWithMetricPrefix:
initWithAge:gender:height:weight:condition:
computeTimeToActiveCalories:user:workoutType:
_isDataLoading
defaultCenter
postNotificationName:object:
_dailyEnergyBurnedStatistics
_dailyBriskMinutesStatistics
_bucketDateForIndex:startOfDay:
quantityValue
predicateWithBlock:
filteredArrayUsingPredicate:
isMainThread
_queue_fetchActivitySummariesOrderedByCacheIndexWithCalendar:
_queue_createHistogramForGoalType:activitySummaries:
_queue_calculateProjectedOffWristDateFromActivitySummaries:
components:fromDate:
activitySummariesFromDateComponents:toDateComponents:
objectAtIndexedSubscript:
containsDate:
initForDateInterval:delegate:
valueOfTypicalDayBriskMinutesEarnedByNow
valueOfTypicalDayMoveEarnedByNow
willCompleteEnergyBurnedGoalWithBufferPercentage:
willCompleteExerciseGoalWithBufferPercentage:
willCompleteStandGoalOrItIsTooLateWithBufferPercentage:
currentMoveGoalPercentage
currentExerciseGoalPercentage
currentStandGoalPercentage
willCompletingMoveRingEarnStreakAchievement
projectedToBeatMoveRecordByEndOfDay
rebuildWithInterval:
shouldSuggestWalkWithActivitySettingsController:
projectedDayDuration
handleUpdatedCurrentActivitySummary:
_interval
_queue_currentActivitySummary
_queue_energyHistogram
_queue_exerciseHistogram
_queue_bucketDates
_activitySummaryLoaded
_activitySummaryBarrierGroup
_queue
_projectedOffWristDateToday
_totalActiveDays
_delegate
component:fromDate:
unsignedIntegerValue
errorWithDomain:code:userInfo:
initWithQuantityTimeslice:threshold:triggeredDate:
hk_isLessThanQuantity:
settingTimeSlice:
_finalizedTriggerByAddingSample:toSlice:withPreviousTotal:threshold:
_slice
_completion
_triggeredDate
intervalDefinitions
repeatCount
setType
byChangingRepeatCount:
byChangingSetType:
_intervalDefinitions
_repeatCount
_setType
date
components:fromDate:toDate:options:
year
_isMetricDistance
meterUnitWithMetricPrefix:
mileUnit
initWithIntervalDefinition:activityType:startDate:
definition
trackedQuantityType
_definition
_trackedQuantityType
v16@?0@"HKQuantitySample"4I8^B12
quantityType
T@"HKQuantityType",R,N,V_quantityType
startDate
T@"NSDate",R,N,V_startDate
endDate
T@"NSDate",R,N,V_endDate
committedSamples
T@"NSArray",R,N,V_committedSamples
finalized
TB,R,N,V_finalized
committedTotal
T@"HKQuantity",R,N,V_committedTotal
committedDuration
Td,R,N
committedAndAddedTotal
T@"HKQuantity",R,N
<%@:%p, finalized:%@, quantityType:%@, startDate:%@,            endDate:%@, numCommittedSamples:%lu, numUncommittedSamples:%lu, lastCommitDate:%@, commitedTotal:%@ committedDuration:%lu>
Sample %@ does not overlap with startDate:%@ endDate: %@
i12@?0@"HKWorkoutEvent"4@"HKWorkoutEvent"8
i12@?0@"HKQuantitySample"4@"HKQuantitySample"8
Failed validation step: %@ for object %@
name
T@"NSString",R,N,V_name
test
T@?,R,N,V_test
v16@?0@"FITrailingQuantityTimeSlice"4I8^B12
@8@?0@"FITrailingQuantityTimeSlice"4
threshold
T@"HKQuantity",&,N,V_threshold
thresholdReached
TB,R,N,V_thresholdReached
quantity
pauseResumeEvents
T@"NSArray",R,N,V_pauseResumeEvents
Event must be pause or resume event.  Event type: %ld
First event must be pause event.  Event type: %ld
New event date must be after previous date. Previous event date: %@. New event date: %@.
New event type must be resume. Previous event type: %ld. New event type: %ld.
Current event type must be pause. Previous event type: %ld. New event type: %ld.
type
FICanonicalQuantityUnitForIntervalType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/FitnessUI_Sim/NanoLifestyle-1144.9.4.1.6/Fitness/FIIntervalDefinition.m
unit != nil
Ti,R,N,V_type
T@"HKQuantity",R,N,V_quantity
Key 'type' exists
B8@?0@"NSDictionary"4
Key 'quantity' exists
'quantity' is number
'type' is number
'type' is a valid identifier
@8@?0@"HKQuantityType"4
@8@?0@"FIQuantityTimeSlice"4
slices
T@"NSArray",R,N,V_slices
allSlicesFinalized
TB,R,D,N
object
T@,R,N,V_object
v16@?0@4I8^B12
dateOfBirth
height
weight
biologicalSexObject
wheelchairUse
v4@?0
No action defined for unknown property key %@
fetch birth date
fetch height
fetch weight
fetch sex
fetch wheelchair use
v16@?0@"HKSampleQuery"4@"NSArray"8@"NSError"12
T@"NSDate",&,N,V_dateOfBirth
T@"HKQuantity",&,N,V_height
T@"HKQuantity",&,N,V_weight
biologicalSex
Ti,N,V_biologicalSex
Ti,N,V_wheelchairUse
leanBodyMass
updateHandler
T@?,C,N,V_updateHandler
<%@:%p, finalized:%@, quantityType:%@, startDate:%@,            endDate:%@, numUncommitedSamples:%lu, lastCommitDate:%@, commitedTotal:%@>
Cannot add sample - segment is finalized
intervalComplete
TB,R,N
intervalEndDate
T@"NSDate",R,N
T@"NSDate",R,D,N
[%02d] %06.2f 
com.apple.nanolifestyle.sessiontrackerapp.intervals
IntervalWorkoutDefinitions
IntervalWorkoutDefinitionsVersion
HIIT 30/10
identifier
sets
repeatCount
setType
intervalDefinitions
Quarter Mile Sprints
Varied Speed
@8@?0@"FIIntervalSetDefinition"4
T@"NSUUID",R,N,V_identifier
T@"NSArray",R,N,V_sets
intervalCount
TI,R,D,N
Key 'name' exists
Key 'identifier' exists
Key 'sets' exists
Sets is an arary
'sets' contains dictionaries only
FITypicalDayActivityModelTodayActivityDidChange
queue
startOfToday
endOfToday
percentageOfTypicalDayMoveComparedToNow
percentageOfTypicalDayBriskMinutesEarnedComparedToNow
projectedOffWristDateToday
firstOnWristDateToday
energyHistogram
exerciseHistogram
totalActiveDays
B12@?0@"_HKActivityStatisticsQuantityInfo"4@"NSDictionary"8
delegate
T@"<FITypicalDayActivityModelDelegate>",W,N,V_delegate
Ti,R,N
CMCalorieUserInfo
Unable to find class %s
/System/Library/PrivateFrameworks/CoreMotion.framework/CoreMotion
CMNatalimeter
FIAchievementTypeMonthlyChallenge
NanoLifestylePreferencesChangedNotification
FIDailyGoalTypeNone
FIDailyGoalTypeMove
FIDailyGoalTypeExercise
FIDailyGoalTypeStand
FIDailyGoalTypeAll
com.apple.fitness.intervals
<%@:%p, triggered:%@, triggeredDate:%@, _threshold:%@, _slice:%@
T@"HKQuantityType",R,D,N
triggered
triggeredDate
T@"NSDate",R,N,V_triggeredDate
@8@?0@"FIIntervalDefinition"4
T@"NSArray",R,N,V_intervalDefinitions
Ti,R,N,V_repeatCount
Ti,R,N,V_setType
Key 'intervalDefinitions' exists
Key 'repeatCount' exists
Key 'setType' exists
'setType' is number
'repeatCount' is number
'intervalDefinitions' is an array
'setType' is a valid identifier
'intervalDefinitions' contains dictionaries only
definition
T@"FIIntervalDefinition",R,N,V_definition
trackedQuantityType
T@"HKQuantityType",R,N,V_trackedQuantityType
T@"HKQuantity",R,N,V_threshold
FITrailingQuantityTimeSlice
SampleProcessing
FIValidation
FITrailingIntervalController
FIIntervalDefinition
FIDictionaryRepresentable
FIMutableTimeSliceGroup
Fitness
FIReduction
FIAdditions
FIActivitySettingsController
NSCopying
FIQuantityTimeSlice
FIQuantityIntervalController
FIIntervalController
FISimpleHistogram
FIIntervalWorkoutDefinitionsManager
FIIntervalWorkoutDefinition
0"0@
FITypicalDayActivityModel
FIIntervalQuantityTrigger
FIIntervalSetDefinition
FIQuantityInterval
@16@0:4@8@12
@20@0:4@8@12@16
@40@0:4@8@12@16@20@24@28@32B36
@8@0:4
d8@0:4
d12@0:4@8
@16@0:4@8^@12
@12@0:4@8
v8@0:4
B8@0:4
@"NSArray"
@"NSDate"
@"HKQuantityType"
@"HKQuantity"
@24@0:4@8@12@16@20
@32@0:4@8@12@16@20@24@28
@16@0:4@8@?12
B20@0:4@8@12^@16
B16@0:4@8^@12
@?8@0:4
@"NSString"
v12@0:4@8
@16@0:4i8@12
@"NSDictionary"8@0:4
@16@0:4@"NSDictionary"8^@12
i8@0:4
B12@0:4@8
B16@0:4@8B12
B16@0:4@8@12
@12@0:4@?8
@20@0:4{_NSRange=II}8@?16
@12@0:4^{_NSZone=}8
v12@0:4i8
v16@0:4@8@12
B16@0:4^@8@12
B12@0:4^@8
v12@0:4@?8
@"HKHealthStore"
@"NSMutableDictionary"
@36@0:4@8@12@16@20@24@28B32
@28@0:4@8@12@16@20@24
@"NSDate"8@0:4
@"FIIntervalQuantityTrigger"
@"FIMutableTimeSliceGroup"
@12@0:4i8
d12@0:4i8
v20@0:4d8i16
i12@0:4i8
^{?=id}
v16@0:4i8@12
@"NPSDomainAccessor"
@"NPSManager"
I8@0:4
@16@0:4@8I12
@16@0:4I8@12
@12@0:4I8
@"NSUUID"
B20@0:4i8d12
B16@0:4d8
d28@0:4@8i12@16@20i24
i20@0:4@8@12@16
@"NSDateInterval"
@"HKActivitySummary"
@"FISimpleHistogram"
@"NSMutableArray"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_queue>"
@"<FITypicalDayActivityModelDelegate>"
@"FIQuantityTimeSlice"
@20@0:4@8i12i16
@20@0:4@8I12@16
@"FIIntervalDefinition"
Adding sample %@ to quantity slice %@ caused error: %@
Storing property %@
[HealthSettings] Failed to store characteristic %@ with error %@
[HealthSettings] Internal error: no error argument passed for operation %@, assuming the worst
[HealthSettings] Failed operation: %@ with error %@
[HealthSettings] Fetching lean body mass timed out
Adding sample %@ to quantity trigger %@ caused error: %@
Unsupported interval definitions version. Default interval workouts have been created with current version. User version:%lx Minimum supported version:%lx Current version:%lx
Error deserializing workout definition. Error: %@
Default interval workout definitions have been saved.
Error deserializing workout definition. error: %@
TypicalDayActivityModel cannot answer achievements question because delegate does not implement necessary achievements methods: 'bestMoveStreak' & 'currentMoveStreak'
Not projected to beat move record by EOD because too few days of Activity history to earn achievement
Projected to earn %f kcal by EOD; current record is %f
TypicalDayActivityModel cannot answer achievements question because delegate does not implement necessary achievements methods: 'totalMoveGoalsAttempted' & 'bestMoveValue'
Computed time to walk: %f
Walk is over 25 minutes, returning rounded to nearest 5 minutes: %f
Walk is under 25 minutes, returning rounded to nearest 1 minute: %f
Not computing brisk walk time because activity summary has no goal set.
Projected off wrist date is nil, using earliest of default day length or midnight: %@
Activity Summary (%@) is still loading.
Waiting for initial activity summary to load
Finished waiting for initial activity summary to load
Cannot build histogram for goal type %lu
Building typical-day histogram (goaltype=%lu) with activity summary for date: %{public}@
Skipping summary with start date %{public}@ for ring type %lu because it has more data then we have buckets (over 24 hour day)
Last active index: %ld, for start date: %{public}@, object date: %{public}@
Last active index is NOT FOUND, for start date: %{public}@, object date: %{public}@
Not enough activity data to predict off wrist time
Setting up date buckets for date: %@
TypicalDayModel: binDate later than nextDate! %{public}@, %{public}@, %{public}@, %ld
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
