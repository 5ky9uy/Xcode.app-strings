sharedInstanceForAccountType:creatingClass:
sharedInstance
setObject:forKeyedSubscript:
addObjectsAndKeys:
uppercaseLetterCharacterSet
rangeOfCharacterFromSet:
capitalizedString
prettyStringForDisplayName
code
domain
isEqualToString:
DA_isFailedDependencyError
objectForKeyedSubscript:
integerValue
maxImageSize
maxResourceSize
numberWithInteger:
propertyListFromData:mutabilityOption:format:errorDescription:
updateSyncDict:forSource:withContainer:
maxImageSizeFromSyncDict:
maxResourceSizeFromSyncDict:
_CardDAVSourcePropertiesForABSource:
initWithBackingAccountInfo:
registerDefaultLoggerWithCoreDAV
filenameWithBasename:
alloc
initWithFilename:
setCurLogger:
cancelTaskGroup
dealloc
arrayWithObjects:
principalPath
da_appendSlashIfNeeded
length
containsObject:
shouldDoInitialAutodiscovery
removeAllObjects
insertObject:atIndex:
host
account:isValid:validationError:
setShouldUseOpportunisticSockets:
taskManager
cdvArrayWithIntegers:
useSSL
wellKnownPaths
initWithAccountInfoProvider:taskManager:httpPorts:httpsPorts:httpServiceString:httpsServiceString:wellKnownPaths:requiredComplianceClass:
setCheckValidityTaskGroup:
checkValidityTaskGroup
setTimeoutInterval:
setDelegate:
setConsumer:forTask:
startTaskGroup
principalURL
setPrincipalURL:
scheme
setUseSSL:
setHost:
port
setPort:
consumerForTask:
removeConsumerForTask:
initWithAccount:
setShouldDoInitialAutodiscovery:
saveAccountProperties
initWithContentsOfURL:options:error:
username
absoluteString
class
bundleForClass:
localizedStringForKey:value:table:
accountDescription
stringWithFormat:
arrayWithObjects:count:
isValidating
dropAssertionsAndRenewCredentialsWithHandler:
handleTrustChallenge:
sharedLogging
addLogDelegate:forAccountInfoProvider:
removeLogDelegate:forAccountInfoProvider:
enabled
curLogger
logSnippet:
addressBookConstraintsPlistPath
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
serverRoot
user
password
identityPersist
accountID
serverComplianceClasses
userAgentHeader
promptUserForNewCoreDAVPasswordWithCompletionBlock:
handleCertificateError:
shouldFailAllTasks
additionalHeaderValues
customConnectionProperties
clientCertificateInfoProvider
oauthInfoProvider
handleTrustChallenge:withConnection:
handleAuthenticateAgainstProtectionSpace:
handleAuthenticateAgainstProtectionSpace:withConnection:
shouldRetryUnauthorizedConnection:
handleShouldUseCredentialStorage
noteHomeSetOnDifferentHost:
shouldHandleHTTPCookiesForURL:
shouldSendClientInfoHeaderForURL:
shouldTurnModalOnBadPassword
shouldTryRenewingCredential
renewCredential
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteFailedNetworkRequestForTask:
noteFailedProtocolRequestForTask:
noteTimeSpentInNetworking:forTask:
noteSuccessfulRequestWithNumDownloadedElements:
noteFailedNetworkRequest
noteFailedProtocolRequest
noteTimeSpentInNetworking:
copyStorageSession
shouldUseOpportunisticSockets
shouldCompressRequests
clientTokenRequestedByServer
clientToken
webLoginRequestedAtURL:reasonString:completionBlock:
getAppleIDSession
newOAuth1CredentialForChallenge:
oauth2Token
oauthVariant
coreDAVLogLevel
coreDAVOutputLevel
coreDAVLogDiagnosticMessage:atLevel:
shouldLogTransmittedData
coreDAVLogTransmittedDataPartial:
coreDAVTransmittedDataFinished
coreDAVLogRequestBody:
coreDAVLogResponseBody:
triggerOSLogFault
taskGroup:didFinishWithError:
discoveryTask:gotAccountInfo:error:
discoverInitialPropertiesWithConsumer:
copyImageContentsAtURL:outError:
isEqualToAccount:
localizedIdenticalAccountFailureMessage
localizedInvalidPasswordMessage
onBehalfOfBundleIdentifier
_massageAddedOrModifiedVCard:
setServerComplianceClasses:
spinnerIdentifiers
addToCoreDAVLoggingDelegates
removeFromCoreDAVLoggingDelegates
.cxx_destruct
cardDAVAccountVersion
_cardDAVAccountVersion
_checkValidityTaskGroup
_curLogger
isCardDAVAccount
CardDAVLocalDBHelper
CardDAVExtensions
CardDAVPropertiesHelper
CardDAVAccount
CoreDAVAccountInfoProvider
NSObject
CoreDAVOAuthInfoProvider
CoreDAVLogDelegate
CoreDAVDiscoveryTaskGroupDelegate
CoreDAVTaskGroupDelegate
CardDAVExtension
@8@0:4
v12@0:4@8
B8@0:4
B20@0:4@8^v12@16
i12@0:4@8
@12@0:4^v8
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
i8@0:4
v12@0:4@?8
B16@0:4@8@12
v16@0:4i8@12
v20@0:4d8@16
v12@0:4i8
v8@0:4
v16@0:4d8
^{__CFURLStorageSession=}8@0:4
v20@0:4@8@12@?16
@"NSData"8@0:4
@"NSURL"8@0:4
@"NSSet"8@0:4
v12@0:4@?<v@?i>8
B12@0:4@"NSError"8
@"NSDictionary"8@0:4
@"<CoreDAVClientCertificateInfoProvider>"8@0:4
@"<CoreDAVOAuthInfoProvider>"8@0:4
B12@0:4@"NSURLAuthenticationChallenge"8
B16@0:4@"NSURLAuthenticationChallenge"8@"NSURLConnection"12
B12@0:4@"NSURLProtectionSpace"8
B16@0:4@"NSURLProtectionSpace"8@"NSURLConnection"12
B12@0:4@"NSURLConnection"8
v12@0:4@"NSURL"8
B12@0:4@"NSURL"8
v16@0:4i8@"CoreDAVTask"12
v12@0:4@"CoreDAVTask"8
v20@0:4d8@"CoreDAVTask"16
v20@0:4@"NSURL"8@"NSString"12@?<v@?i>16
@"AKAppleIDSession"8@0:4
^{_CFURLCredential=}12@0:4@8
^{_CFURLCredential=}12@0:4@"NSURLAuthenticationChallenge"8
v16@0:4@8i12
v16@0:4@"NSString"8i12
v12@0:4@"NSData"8
v16@0:4@8@12
v16@0:4@"CoreDAVTaskGroup"8@"NSError"12
v20@0:4@8@12@16
v20@0:4@"CoreDAVDiscoveryTaskGroup"8@"<CoreDAVAccountInfoProvider>"12@"NSError"16
@12@0:4@8
@16@0:4@8^@12
@"CoreDAVDiscoveryTaskGroup"
@"DACoreDAVLogger"
CardDAVHTTPTraffic
/.well-known/carddav
/principals/
_carddav._tcp.
_carddavs._tcp.
addressbook
http
ACCOUNT_UNIQUE_CONSTRAINT_FAILED_BODY_FORMAT_CARDDAV
DataAccess
INVALID_PASSWORD_BODY_CARDDAV
com.apple.MobileAddressBook
com.apple.mobilephone
v12@?0i4@"NSError"8
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
checkValidityTaskGroup
T@"CoreDAVDiscoveryTaskGroup",&,N,V_checkValidityTaskGroup
curLogger
T@"DACoreDAVLogger",&,N,V_curLogger
cardDAVAccountVersion
Ti,R,N,V_cardDAVAccountVersion
taskManager
T@"DACoreDAVTaskManager",R,N
Autodiscover called on account %@, but that account does not have a host set. Ignoring autodiscovery request
account %@ is checking validity with group %@ on behalf of %@
DiscoveryTaskGroup %@ got account info %@ with error %@
Could not get photo data from url %@.  Error %@
