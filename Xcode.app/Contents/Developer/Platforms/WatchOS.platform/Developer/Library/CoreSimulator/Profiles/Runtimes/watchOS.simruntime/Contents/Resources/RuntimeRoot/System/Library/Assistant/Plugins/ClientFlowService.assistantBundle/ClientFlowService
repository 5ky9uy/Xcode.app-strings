numberWithInteger:
dictionaryWithObjects:forKeys:count:
appVocabularyType
valueForKey:
intValue
stringType
commandFailedWithReason:
dictionary
sharedInstance
appBundleId
query
vocabularyStringsForAppBundleId:vocabularyType:query:
alloc
init
allObjects
setVocabularyStrings:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
performWithCompletion:
performWithCompletion:serviceHelper:
initWithDictionary:
fetchContactVocabularyEntities
length
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
isValidInputString:
serialQueue
appContactVocabularyDictionary
count
personNameComponentsFromString:
familyName
caseInsensitiveCompare:
addObject:
givenName
middleName
enumerateObjectsUsingBlock:
copy
setAppContactVocabularyDictionary:
setValue:forKey:
enumerateVocabularyUsingBlock:
vocabularyEntryWithContactNamed:forApp:
isEqualToString:
containsString:ignoringCase:
.cxx_destruct
siriKitVocabNotificationToken
setSiriKitVocabNotificationToken:
setSerialQueue:
_siriKitVocabNotificationToken
_appContactVocabularyDictionary
_serialQueue
setAppBundleId:
_activeWorkoutApplicationIdentifierWithCompletion:
initWithServiceName:
stringWithFormat:
UTF8String
_setQueue:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
setInterruptionHandler:
setInvalidationHandler:
resume
connectionToScripterWithCommandProcessor:
warmUpWithSignal:completion:
performCommandExecutionForCommand:completion:
updateScriptCacheForFlowScript:completion:
removeScripts:completion:
initWithConnectionName:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
handleOneWayCommand:
handleCommand:reply:
isDeviceLockedWithPasscodeWithCompletion:
scriptIdentifiers
remoteObjectProxyWithErrorHandler:
invalidate
commandSucceeded
openSensitiveURL:
dismissAssistant
assistantLocalizedStringForKey:table:bundle:
isDeviceLockedWithPasscode
isTimeoutSuspended
requiresResponse
handleCommand:isOneWay:completion:
peerInfoForCurrentCommand
handleWithCompletion:
handleRemoteCommand:isOneWay:completion:
handleCommand:completion:
handleOneWayCommand:commandHandler:completion:
handleCommand:commandHandler:completion:
initWithServiceHelper:
initClientLiteHelper
serviceHelper
setServiceHelper:
isClientLiteHelper
setIsClientLiteHelper:
_isClientLiteHelper
_serviceHelper
localizedDescription
code
setErrorCode:
handleAppAuthorizationStatusRequestWithCompletion:
setAppAuthorizationStatusMap:
_siriAuthorizationStatusForAppID:
appBundleIds
dictionaryWithCapacity:
authorizationStatusResponseWithAuthorizationStatusMap:
countByEnumeratingWithState:objects:count:
bundleIdentifier
authorizationStatusForAppWithBundleId:
_intents_findAppsWithAnIntentsServiceExtension:
defaultSessionConfiguration
setNetworkServiceType:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
host
hasSuffix:
scheme
path
urlInformation
downloadUrl
jsScriptIdentifier
isValidURL:
sharedAnalytics
logEventWithType:context:
initWithURL:
_cf_httpMethod
setHTTPMethod:
headerFields
setAllHTTPHeaderFields:
statusCode
encryptionParameters
hmac
hmacKey
initializationVector
_verifyScriptData:hmac:hmacKey:iv:
_decryptData:forScript:
dataTaskWithRequest:completionHandler:
finishTasksAndInvalidate
verifyScriptData:hmac:hmacKey:iv:
type
encryptionKey
decryptData:withKey:iv:salt:
initWithData:encoding:
initWithUTF8String:
jsScriptChecksum
SHA256
isEqualToData:
setJsScript:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
downloadScript:withCallback:
invalidateTasks
_sessionQueue
_session
scripts
_cf_needsDownload
_updateScriptCacheForScript:clientScripter:completion:
commandFailed
_updateScriptsWithClientScripter:completion:
cacheScriptForDomain:script:completion:
isEmpty:
cacheScriptForDomain:script:shouldCacheInMemory:completion:
cachingEnabled
cacheFilePathForDomain:
scriptsMemoryCacheWithDomainAsKey
setObject:forKey:
dictionaryWithObject:forKey:
defaultManager
dataUsingEncoding:
createFileAtPath:contents:attributes:
scriptChecksumDictionary
updatedScriptForFlowScript:
scriptExistsForDomain:
scriptForDomain:scriptLoadType:
removeScriptWithIdentifier:
jsScript
compressedScript
stringWithContentsOfFile:encoding:error:
objectForKey:
removeObjectForKey:
removeItemAtPath:error:
removeAllObjects
cachePath
contentsOfDirectoryAtPath:error:
stringByAppendingPathComponent:
lastPathComponent
firstObject
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
hasPrefix:
scriptCheckSumDictionaryFromFileSystem
enumerateKeysAndObjectsUsingBlock:
createCacheDirectoryIfNeeded
populateChecksumDictionary
sharedStore
cacheScriptForDomain:script:
scriptFromFileSystemForIdentifier:
cachedScriptDomainsAndCheckSums
removeAllScriptsWithCompletion:
logScriptLoadType:forDomain:
cacheFileQueue
setCacheFileQueue:
setScriptsMemoryCacheWithDomainAsKey:
setScriptChecksumDictionary:
_cacheFileQueue
_scriptsMemoryCacheWithDomainAsKey
_scriptChecksumDictionary
aceId
logQueuer
queuedLogs
failureResponseWithAceId:logs:
setStatus:
domain
processInfo
systemUptime
initWithServiceHelper:withConnectionName:
initWithClientLiteWithConnectionName:
handleCommandCompletionWithResponse:forCommand:startOfExecution:
isTimeoutDisabled
initWithTimeoutInterval:timeoutHandler:
start
cancelIfNotAlreadyCanceled
aceObjectWithDictionary:context:
executeCommand:completion:
failureResponseForCommand:status:
setLogQueuer:
_logQueuer
mainBundle
bundleId
errorWithDomain:code:userInfo:
commandFailedWithError:
addLogMessage:
clearLogs
logQueue
setLogQueue:
_logQueue
_dataForOperation:withInputData:key:iv:
randomDataOfLength:
deriveKeyForPassword:withSalt:
bytes
dataWithLength:
mutableBytes
lengthOfBytesUsingEncoding:
dataWithBytesNoCopy:length:
appendData:
encryptData:withKey:iv:
decryptData:withKey:
encryptData:withPassword:iv:salt:
decryptData:withPassword:iv:salt:
deriveKeyForSaltedKey:withSalt:
deriveConsistentKeyForPassword:
setRefId:
backgroundAction
handleBackgroundActionRequest:completion:
sharedPreferences
assistantIsEnabled
setBackgroundAction:
setCachedDomainClassJavascriptChecksumMap:
setBackgroundActionPayload:
arrayWithObjects:count:
handleBackgroundAction:onDispatchGroup:
performMaintenanceWithCompletion:
_queue
%s Unknown app vocabulary type - %@
%s Invalid string type - %@
%s Registering for vocabulary notification
%s Failed to register for vocabulary notification
%s Invalid input - contactName=[%@] appBundleId=[%@]
%s Checking if %@ is in %@'s vocabulary
%s Input name is empty, returning all strings... 
%s App %@ does not have any vocabulary strings for contacts
%s Adding vocabulary for %@
%s Invalid appId: %@
%s HKHealthStore error occurred: %@
%s HKHealthStore success
%s Creating new XPC connection
%s CFScripter XPC interrupted
%s CFScripter XPC invalidated
%s Received RemoveScriptsCommand for %lu scripts
%s XPC connection error %@
%s Handle remove scripts command complete. Tearing down connection to ClientScripter
%s Using AFClientLite One Way for %@
%s Response for One Way Command %@ --> %@
%s Error %@ handling one way command %@
%s Using AFClientLite Two Way for %@
%s Response for Two Way command %@ --> %@
%s Error %@ handling command %@
%s Both _serviceHelper and _isClientLiteHelper are undefined. This isn't supposed to happen
%s Unhandled command %@
%s Invalid host - %@
%s Not using https
%s No path
%s URL: %@
%s Error: Invalid URL
%s URL: %@ %tu bytes
%s NSURLSession error: %@
%s Unexpected response: %@
%s Script failed HMAC verification!
%s Unable to decrypt script
%s Invalidating tasks
%s Decryption failed
%s Unsupported Encryption Type - %@
%s Decrypted checksum does not match original checksum.
%s Decryption failed!
%s URLSession became invalid %@
%s URL Session received challenge %@
%s URL Session finish events delegate method called.
%s Successfully updated script %@ in filesystem
%s Failed to update script %@ in filesystem
%s Update scripts command completed %@ for %@.
%s Update Script completed for all scripts.
%s Beginning update scripts command handling
%s Updating %@
%s CDN Download
%s Script update failed for %@
%s Non-CDN Download
%s Received UpdateScriptsCommand with %lu scripts
%s Script update complete
%s Connection to scripter could not be established
%s Nothing to cache.. 
%s Saving script for domain %@ to memory cache
%s Cached flow script for domain %@
%s Saving script checksum in memory for script %@
%s Unable to cache domain script %@, error %@
%s No valid script found in command for script %@
%s Script is up-to-date in filesystem. Skipping update for script %@
%s Removing script with identifier %@ from cache
%s Uncompressed script not present, checking for compressed script
%s Decompressing script with identifier %@
%s Unable to read script at %@, error %@
%s Unable to read script for empty domain
%s Deleting %@
%s Removing script checksum from memory for script %@
%s Failed to delete %@ error %@
%s Error hit while trying to get contents of cache directory %@ %@
%s Deleting file %@
%s Error hit while removing file %@ %@
%s Deleted [%lu] files
%s Unable to log scriptLoadType for empty domain
%s Script for %@ obtained from memory cache
%s Script for %@ obtained from file
%s Script for %@ sent from server
%s Script for %@ retrieved from server
%s Unable to obtain script for %@
%s Cache directory %@ is a file?
%s Cache directory does not exists, attempting to create now ...
%s Error creating directory %@: %@
%s Successfuly created cache directory %@
%s Unable to get contents of cache directory %@
%s Populating filesystem script checksum dictionary
%s Nil file name!
%s Skipping reading hidden file %@
%s Unable to read cache file for domain %@ - error %@
%s Merging checksums..
%s Updated script checksums
%s CF client command completed response class=%@
%s Not caching script %@ because error %@
%s Execution completed with %@
%s Timeout suspended, ignoring watch dog timeout ...
%s Watch dog timeout. Killing scripter ...
%s %@
%s Key size mismatch %tu != %tu
%s Not all bytes were decrypted correctly!
%s Unable to create CCCryptor, error = %d
%s Response dictionary %@
%s StartBackgroundAction command response is %@
%s Client Flow command handler completed: %@
%s Starting Client Flow command handler
%s Handling UpdateScriptsCommand succeeded
%s Handling UpdateScriptsCommand failed with %@
%s Response for %@ is not of class CFFlowCommand, but %@
%s %@ completed with %@ and error=%@
%s Error requesting background action %@
%s Requesting background action %@
%s Background action %@ Error %@ 
%s Timer already cancelled
%s Assistant is disabled. Not running background actions.
%s Starting background action %lu of %lu  with identifier %@
%s All background actions completed
-[CFAppVocabularySearchRequestHandler stringType]
-[CFAppVocabularySearchRequestHandler performWithCompletion:serviceHelper:]
Invalid app vocabulary type
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Synapse app vocabulary retriever
-[CFSiriKitVocabularyRetriever init]_block_invoke
v8@?0i4
-[CFSiriKitVocabularyRetriever init]
-[CFSiriKitVocabularyRetriever vocabularyEntryWithContactNamed:forApp:]
-[CFSiriKitVocabularyRetriever vocabularyEntryWithContactNamed:forApp:]_block_invoke
v12@?0@"NSString"4^B8
v4@?0
-[CFSiriKitVocabularyRetriever fetchContactVocabularyEntities]_block_invoke_2
v20@?0@"NSString"4i8@"NSSet"12^B16
-[CFSiriKitVocabularyRetriever vocabularyStringsForAppBundleId:vocabularyType:query:]
siriKitVocabNotificationToken
Ti,V_siriKitVocabNotificationToken
appContactVocabularyDictionary
T@"NSDictionary",&,V_appContactVocabularyDictionary
serialQueue
T@"NSObject<OS_dispatch_queue>",&,V_serialQueue
-[CFGetActiveWorkoutApplicationIdentifierHandler performWithCompletion:serviceHelper:]_block_invoke
HKHealthStore error occurred
v12@?0@"NSString"4@"NSError"8
HKHealthStore
initHKHealthStore
/BuildRoot/Library/Caches/com.apple.xbs/Sources/LocalFlowService_Sim/LocalFlowService-212.7.1/ClientFlowService/CFGetActiveWorkoutApplicationIdentifierHandler.m
classHKHealthStore
/System/Library/PrivateFrameworks/HealthKit.framework/HealthKit
HealthKitLibrary
frameworkLibrary
com.apple.siri.ClientFlow.ClientScripter
+[CFServiceConnector connectionToScripterWithCommandProcessor:]
%@.%tu
+[CFServiceConnector connectionToScripterWithCommandProcessor:]_block_invoke
-[CFRemoveScriptCommandHandler performWithCompletion:]_block_invoke
XPC connection error %@
v8@?0@"NSError"4
v8@?0B4
Local ace handler not implemented.
-[CFServiceHelper handleRemoteCommand:isOneWay:completion:]
-[CFServiceHelper handleRemoteCommand:isOneWay:completion:]_block_invoke
v8@?0@"SABaseCommand"4
v12@?0B4@"NSError"8
Both _serviceHelper and _isClientLiteHelper are not set in CFServiceHelper
serviceHelper
T@"<AFServiceHelper>",&,V_serviceHelper
isClientLiteHelper
TB,V_isClientLiteHelper
v12@?0@"SABaseCommand"4@"NSError"8
v12@?0@"NSArray"4@"NSError"8
apple.com
https
CFScriptDownloadManager.Session
-[CFScriptDownloadManager isValidURL:]
-[CFScriptDownloadManager downloadScript:withCallback:]
scriptIdentifier
scriptURL
-[CFScriptDownloadManager downloadScript:withCallback:]_block_invoke
clientError
statusCode
v16@?0@"NSData"4@"NSURLResponse"8@"NSError"12
-[CFScriptDownloadManager invalidateTasks]
-[CFScriptDownloadManager _decryptData:forScript:]
-[CFScriptDownloadManager URLSession:didBecomeInvalidWithError:]
-[CFScriptDownloadManager URLSession:didReceiveChallenge:completionHandler:]
-[CFScriptDownloadManager URLSessionDidFinishEventsForBackgroundURLSession:]
-[CFUpdateScriptsCommandHandler _updateScriptCacheForScript:clientScripter:completion:]_block_invoke
UpdateScriptsCompletion Queue
-[CFUpdateScriptsCommandHandler _updateScriptsWithClientScripter:completion:]_block_invoke_2
successfully
failed
-[CFUpdateScriptsCommandHandler _updateScriptsWithClientScripter:completion:]_block_invoke
v12@?0@"NSString"4B8
-[CFUpdateScriptsCommandHandler _updateScriptsWithClientScripter:completion:]
v12@?0@"SACFClientFlowScript"4B8
v16@?0@"SACFClientFlowScript"4I8^B12
-[CFUpdateScriptsCommandHandler performWithCompletion:]_block_invoke
-[CFUpdateScriptsCommandHandler performWithCompletion:]
XPC connection could not be established to Scripter
com.apple.siri.ClientFlow.ScriptCache
-[CFFileCacheStore cacheScriptForDomain:script:completion:]
-[CFFileCacheStore cacheScriptForDomain:script:shouldCacheInMemory:completion:]_block_invoke
-[CFFileCacheStore updateScriptCacheForFlowScript:completion:]
-[CFFileCacheStore updatedScriptForFlowScript:]
-[CFFileCacheStore scriptFromFileSystemForIdentifier:]_block_invoke
-[CFFileCacheStore scriptForDomain:scriptLoadType:]
-[CFFileCacheStore scriptForDomain:scriptLoadType:]_block_invoke
-[CFFileCacheStore removeScriptWithIdentifier:]_block_invoke
v16@?0@"NSString"4I8^B12
-[CFFileCacheStore removeAllScriptsWithCompletion:]_block_invoke
-[CFFileCacheStore logScriptLoadType:forDomain:]
-[CFFileCacheStore createCacheDirectoryIfNeeded]
+[CFFileCacheStore scriptCheckSumDictionaryFromFileSystem]
+[CFFileCacheStore scriptCheckSumDictionaryFromFileSystem]_block_invoke
-[CFFileCacheStore populateChecksumDictionary]_block_invoke
v16@?0@"NSString"4@"NSData"8^B12
com.apple.siri.ClientFlow.FileCacheStore
cacheFileQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheFileQueue
scriptsMemoryCacheWithDomainAsKey
T@"NSCache",&,N,V_scriptsMemoryCacheWithDomainAsKey
scriptChecksumDictionary
T@"NSMutableDictionary",&,N,V_scriptChecksumDictionary
ClientFlowPlugin
-[CFRequestHandler handleCommandCompletionWithResponse:forCommand:startOfExecution:]
-[CFRequestHandler handleCommandCompletionWithResponse:forCommand:startOfExecution:]_block_invoke
-[CFRequestHandler handleCommand:completion:]_block_invoke
Command timed out!
v8@?0@"NSDictionary"4
T@"CFServiceHelper",&,V_serviceHelper
logQueuer
T@"CFLogQueuer",&,V_logQueuer
localizedDescription
Command not supported
-[CFPEXQueryHandler performWithCompletion:serviceHelper:]
%f- %@
logQueue
T@"NSMutableArray",&,V_logQueue
ClientFlow.SecurityUtils
+[CFSecurityUtils encryptData:withKey:iv:]
+[CFSecurityUtils decryptData:withKey:]
+[CFSecurityUtils _dataForOperation:withInputData:key:iv:]
MinimumWaitInSecondsBeforeNextBackgroundActivity
LastBackgroundActivityDate
com.apple.siri.ClientFlow.CFBackgroundActionService
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]_block_invoke
CFBackgroundActionService.handling
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]_block_invoke_2
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]
-[CFBackgroundActionService handleBackgroundAction:onDispatchGroup:]_block_invoke_2
Watchdog timeout!
-[CFBackgroundActionService handleBackgroundAction:onDispatchGroup:]_block_invoke
-[CFBackgroundActionService performMaintenanceWithCompletion:]
-[CFBackgroundActionService performMaintenanceWithCompletion:]_block_invoke
v16@?0@"SAStartBackgroundActionRequest"4I8^B12
CFAppVocabularySearchRequestHandler
AFServiceCommand
NSObject
CFSiriKitVocabularyRetriever
CFGetActiveWorkoutApplicationIdentifierHandler
CFServiceConnector
CFScripting
CFCommandProcessing
CFRemoveScriptCommandHandler
CFLocalAceHandling
CFServiceHelper
AFServiceHelper
CFAppAuthorizationRequestHandler
CFScriptDownloadManager
NSURLSessionDelegate
CFUpdateScriptsCommandHandler
CFFileCacheStore
CFRequestHandler
CFPEXQueryHandler
CFLogQueuer
CFSecurityUtils
CFBackgroundActionService
AFServiceMaintenance
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4@?8
v16@0:4@?8@12
@12@0:4@8
v12@0:4@?<v@?@"NSDictionary">8
v16@0:4@?<v@?@"NSDictionary">8@"<AFServiceHelper>"12
@12@0:4@"NSDictionary"8
i8@0:4
@16@0:4@8@12
v8@0:4
@20@0:4@8i12@16
v12@0:4i8
v12@0:4@8
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
v16@0:4@8@?12
v16@0:4@"SACFSignal"8@?<v@?B>12
v16@0:4@"SACFAbstractClientCommand"8@?<v@?@"SABaseCommand">12
v16@0:4@"SACFClientFlowScript"8@?<v@?B>12
v16@0:4@"NSArray"8@?<v@?B>12
@12@0:4@"NSString"8
v12@0:4@"SABaseCommand"8
v16@0:4@"SABaseCommand"8@?<v@?@"SABaseCommand">12
v12@0:4@?<v@?B>8
v12@0:4@?<v@?@"SABaseCommand"@"NSError">8
@20@0:4@8@12@16
B12@0:4@"NSURL"8
@"NSString"20@0:4@"NSString"8@"NSString"12@"NSBundle"16
v16@0:4@"SABaseCommand"8@?<v@?@"SABaseCommand"@"NSError">12
@"AFPeerInfo"8@0:4
v20@0:4@8B12@?16
v12@0:4B8
@"<AFServiceHelper>"
v16@0:4@8@12
v20@0:4@8@12@?16
v16@0:4@"NSURLSession"8@"NSError"12
v20@0:4@"NSURLSession"8@"NSURLAuthenticationChallenge"12@?<v@?i@"NSURLCredential">16
v12@0:4@"NSURLSession"8
B24@0:4@8@12@16@20
B16@0:4@8@12
@"NSURLSession"
v24@0:4@8@12B16@?20
@16@0:4@8^i12
v16@0:4i8@12
@"NSCache"
@"NSMutableDictionary"
@16@0:4@8i12
v24@0:4@8@12d16
@"CFServiceHelper"
@"CFLogQueuer"
@"NSMutableArray"
@24@0:4@8@12@16@20
@24@0:4@8@12^@16^@20
@24@0:4I8@12@16@20
@12@0:4L8
v12@0:4@?<v@?>8
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
