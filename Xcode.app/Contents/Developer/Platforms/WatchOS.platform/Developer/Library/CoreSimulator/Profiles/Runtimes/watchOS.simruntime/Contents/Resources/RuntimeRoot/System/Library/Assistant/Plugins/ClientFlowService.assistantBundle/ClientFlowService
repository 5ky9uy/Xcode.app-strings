numberWithInteger:
dictionaryWithObjects:forKeys:count:
appVocabularyType
valueForKey:
intValue
stringType
commandFailedWithReason:
dictionary
sharedInstance
appBundleId
query
vocabularyStringsForAppBundleId:vocabularyType:query:
alloc
init
allObjects
setVocabularyStrings:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
performWithCompletion:
performWithCompletion:serviceHelper:
initWithDictionary:
fetchContactVocabularyEntities
length
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
isValidInputString:
serialQueue
appContactVocabularyDictionary
count
personNameComponentsFromString:
familyName
caseInsensitiveCompare:
addObject:
givenName
middleName
enumerateObjectsUsingBlock:
copy
setAppContactVocabularyDictionary:
setValue:forKey:
enumerateVocabularyUsingBlock:
vocabularyEntryWithContactNamed:forApp:
isEqualToString:
containsString:ignoringCase:
.cxx_destruct
siriKitVocabNotificationToken
setSiriKitVocabNotificationToken:
setSerialQueue:
_siriKitVocabNotificationToken
_appContactVocabularyDictionary
_serialQueue
setAppBundleId:
_activeWorkoutApplicationIdentifierWithCompletion:
initWithServiceName:
stringWithFormat:
UTF8String
_setQueue:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
setInterruptionHandler:
setInvalidationHandler:
resume
connectionToScripterWithCommandProcessor:
performCommandExecutionForCommand:completion:
performWarmupAndEvaluateScriptWithScriptHint:
performWarmup
updateScriptCacheForFlowScript:completion:
initWithConnectionName:
interfaceWithProtocol:
handleOneWayCommand:
handleCommand:reply:
isDeviceLockedWithPasscodeWithCompletion:
sharedStore
scriptIdentifiers
countByEnumeratingWithState:objects:count:
removeScriptWithIdentifier:
commandSucceeded
mainBundle
bundleIdentifier
errorWithDomain:code:userInfo:
localizedDescription
commandFailedWithError:
code
setErrorCode:
handleAppAuthorizationStatusRequestWithCompletion:
setAppAuthorizationStatusMap:
_siriAuthorizationStatusForAppID:
appBundleIds
dictionaryWithCapacity:
authorizationStatusResponseWithAuthorizationStatusMap:
authorizationStatusForAppWithBundleId:
_intents_findAppsWithAnIntentsServiceExtension:
scripts
remoteObjectProxyWithErrorHandler:
jsScriptIdentifier
invalidate
cacheScriptForDomain:script:completion:
isEmpty:
cacheScriptForDomain:script:shouldCacheInMemory:completion:
cacheFilePathForDomain:
scriptsMemoryCacheWithDomainAsKey
setObject:forKey:
dictionaryWithObject:forKey:
defaultManager
dataUsingEncoding:
createFileAtPath:contents:attributes:
scriptChecksumDictionary
SHA256
sharedAnalytics
logEventWithType:context:
updatedScriptForFlowScript:
scriptExistsForDomain:
scriptForDomain:scriptLoadType:
jsScript
compressedScript
initWithData:encoding:
objectForKey:
stringWithContentsOfFile:encoding:error:
removeObjectForKey:
removeItemAtPath:error:
removeAllObjects
cachePath
contentsOfDirectoryAtPath:error:
stringByAppendingPathComponent:
lastPathComponent
firstObject
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
hasPrefix:
enumerateKeysAndObjectsUsingBlock:
createCacheDirectoryIfNeeded
populateChecksumDictionary
cacheScriptForDomain:script:
cachedScriptDomainsAndCheckSums
removeAllScriptsWithCompletion:
logScriptLoadType:forDomain:
cacheFileQueue
setCacheFileQueue:
setScriptsMemoryCacheWithDomainAsKey:
setScriptChecksumDictionary:
_cacheFileQueue
_scriptsMemoryCacheWithDomainAsKey
_scriptChecksumDictionary
aceId
logQueuer
queuedLogs
failureResponseWithAceId:logs:
setStatus:
domain
processInfo
systemUptime
serviceHelper
initWithServiceHelper:withConnectionName:
initWithClientLiteWithConnectionName:
handleCommandCompletionWithResponse:forCommand:startOfExecution:
isTimeoutDisabled
initWithTimeoutInterval:timeoutHandler:
start
cancelIfNotAlreadyCanceled
aceObjectWithDictionary:context:
executeCommand:completion:
isTimeoutSuspended
failureResponseForCommand:status:
handleCommand:completion:
initWithServiceHelper:
initClientLiteHelper
setServiceHelper:
setLogQueuer:
_serviceHelper
_logQueuer
encodedClassName
flowScriptHint
warmUpWithScriptHint:
bundleId
addLogMessage:
clearLogs
logQueue
setLogQueue:
_logQueue
setRefId:
handleOneWayCommand:commandHandler:completion:
backgroundAction
handleCommand:commandHandler:completion:
sharedPreferences
assistantIsEnabled
setBackgroundAction:
arrayWithObjects:count:
objectAtIndex:
handleBackgroundActionRequest:completion:
performMaintenanceWithCompletion:
%s Unknown app vocabulary type - %@
%s Invalid string type - %@
%s Registering for vocabulary notification
%s Failed to register for vocabulary notification
%s Invalid input - contactName=[%@] appBundleId=[%@]
%s Checking if %@ is in %@'s vocabulary
%s Input name is empty, returning all strings... 
%s App %@ does not have any vocabulary strings for contacts
%s Adding vocabulary for %@
%s Invalid appId: %@
%s HKHealthStore error occurred: %@
%s HKHealthStore success
%s Creating new XPC connection
%s CFScripter XPC interrupted
%s CFScripter XPC invalidated
%s Removing script with identifier %@
%s %@
%s Received UpdateScriptsCommand with %lu scripts
%s XPC connection error %@
%s Beginning update scripts command handling
%s Successfully updated script %@ in filesystem
%s Failed to update script %@ in filesystem
%s Handle update scripts command complete. Tearing down connection to ClientScripter
%s Cached flow script for domain %@
%s Unable to cache script for domain %@
%s Nothing to cache.. 
%s Saving script for domain %@ to memory cache
%s Saving script checksum in memory for script %@
%s Unable to cache domain script %@, error %@
%s No valid script found in command for script %@
%s Script is up-to-date in filesystem. Skipping update for script %@
%s Removing script with identifier %@ from cache
%s Uncompressed script not present, checking for compressed script
%s Decompressing script with identifier %@
%s Unable to read script for empty domain
%s Unable to read script at %@, error %@
%s Deleting %@
%s Removing script checksum from memory for script %@
%s Failed to delete %@ error %@
%s Error hit while trying to get contents of cache directory %@ %@
%s Deleting file %@
%s Error hit while removing file %@ %@
%s Deleted [%lu] files
%s Unable to log scriptLoadType for empty domain
%s Script for %@ obtained from memory cache
%s Script for %@ obtained from file
%s Script for %@ sent from server
%s Script for %@ retrieved from server
%s Unable to obtain script for %@
%s Cache directory %@ is a file?
%s Cache directory does not exists, attempting to create now ...
%s Error creating directory %@: %@
%s Successfuly created cache directory %@
%s Unable to get contents of cache directory %@
%s Populating filesystem script checksum dictionary
%s Nil file name!
%s Skipping reading hidden file %@
%s Unable to read cache file for domain %@ - error %@
%s Merging checksums..
%s Updated checksum for %@
%s CF client command completed response class=%@
%s Not caching script %@ because error %@
%s Execution completed with %@
%s Timeout suspended, ignoring watch dog timeout ...
%s Watch dog timeout. Killing scripter ...
%s Response dictionary %@
%s StartBackgroundAction command response is %@
%s Client Flow command handler completed: %@
%s Response for One Way Command %@ --> %@
%s Error %@ handling one way command %@
%s Starting Client Flow command handler
%s Handling UpdateScriptsCommand succeeded
%s Handling UpdateScriptsCommand failed with %@
%s Response for %@ is not of class CFFlowCommand, but %@
%s Error requesting background action %@
%s Requesting background action %@
%s Assistant is disabled. Not running background actions.
%s Starting background action %zd of %zd with identifier %@
%s Background action Error %@ %zd of %zd with identifier %@ 
%s Time out: %@
%s Completing background action %zd of %zd with identifier %@
%s Timer already cancelled
%s Waiting on background action completion ...
%s All background actions completed
-[CFAppVocabularySearchRequestHandler stringType]
-[CFAppVocabularySearchRequestHandler performWithCompletion:serviceHelper:]
Invalid app vocabulary type
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Synapse app vocabulary retriever
-[CFSiriKitVocabularyRetriever init]_block_invoke
v8@?0i4
-[CFSiriKitVocabularyRetriever init]
-[CFSiriKitVocabularyRetriever vocabularyEntryWithContactNamed:forApp:]
-[CFSiriKitVocabularyRetriever vocabularyEntryWithContactNamed:forApp:]_block_invoke
v12@?0@"NSString"4^B8
v4@?0
-[CFSiriKitVocabularyRetriever fetchContactVocabularyEntities]_block_invoke_2
v20@?0@"NSString"4i8@"NSSet"12^B16
-[CFSiriKitVocabularyRetriever vocabularyStringsForAppBundleId:vocabularyType:query:]
siriKitVocabNotificationToken
Ti,V_siriKitVocabNotificationToken
appContactVocabularyDictionary
T@"NSDictionary",&,V_appContactVocabularyDictionary
serialQueue
T@"NSObject<OS_dispatch_queue>",&,V_serialQueue
-[CFGetActiveWorkoutApplicationIdentifierHandler performWithCompletion:serviceHelper:]_block_invoke
HKHealthStore error occurred
v12@?0@"NSString"4@"NSError"8
com.apple.siri.ClientFlow.ClientScripter
+[CFServiceConnector connectionToScripterWithCommandProcessor:]
%@.%tu
+[CFServiceConnector connectionToScripterWithCommandProcessor:]_block_invoke
+[CFServiceConnector connectionToScripterWithCommandProcessor:]_block_invoke_2
-[CFRemoveScriptCommandHandler performWithCompletion:]
com.apple.siri.ClientFlowService
localizedDescription
Command not supported
-[CFSetVolumeLevelHandler performWithCompletion:serviceHelper:]
v12@?0@"SABaseCommand"4@"NSError"8
v12@?0@"NSArray"4@"NSError"8
-[CFUpdateScriptsCommandHandler performWithCompletion:]_block_invoke
-[CFUpdateScriptsCommandHandler performWithCompletion:]_block_invoke_2
v8@?0@"NSError"4
-[CFUpdateScriptsCommandHandler performWithCompletion:]_block_invoke_4
v8@?0B4
v16@?0@"SACFClientFlowScript"4I8^B12
com.apple.siri.ClientFlow.ScriptCache
-[CFFileCacheStore cacheScriptForDomain:script:]_block_invoke
-[CFFileCacheStore cacheScriptForDomain:script:completion:]
-[CFFileCacheStore cacheScriptForDomain:script:shouldCacheInMemory:completion:]_block_invoke
scriptIdentifier
-[CFFileCacheStore updateScriptCacheForFlowScript:completion:]
-[CFFileCacheStore updatedScriptForFlowScript:]
-[CFFileCacheStore scriptForDomain:scriptLoadType:]
-[CFFileCacheStore scriptForDomain:scriptLoadType:]_block_invoke
-[CFFileCacheStore removeScriptWithIdentifier:]_block_invoke
-[CFFileCacheStore removeAllScriptsWithCompletion:]_block_invoke
-[CFFileCacheStore removeAllScriptsWithCompletion:]_block_invoke_2
v16@?0@"NSString"4I8^B12
-[CFFileCacheStore logScriptLoadType:forDomain:]
-[CFFileCacheStore createCacheDirectoryIfNeeded]
-[CFFileCacheStore populateChecksumDictionary]_block_invoke
-[CFFileCacheStore populateChecksumDictionary]_block_invoke_2
-[CFFileCacheStore populateChecksumDictionary]_block_invoke_3
v16@?0@"NSString"4@"NSData"8^B12
com.apple.siri.ClientFlow.FileCacheStore
cacheFileQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheFileQueue
scriptsMemoryCacheWithDomainAsKey
T@"NSCache",&,N,V_scriptsMemoryCacheWithDomainAsKey
scriptChecksumDictionary
T@"NSMutableDictionary",&,N,V_scriptChecksumDictionary
-[CFGetVolumeLevelHandler performWithCompletion:serviceHelper:]
ClientFlowPlugin
-[CFRequestHandler handleCommandCompletionWithResponse:forCommand:startOfExecution:]
-[CFRequestHandler handleCommandCompletionWithResponse:forCommand:startOfExecution:]_block_invoke
-[CFRequestHandler handleCommand:completion:]_block_invoke
v8@?0@"SABaseCommand"4
Command timed out!
v8@?0@"NSDictionary"4
serviceHelper
T@"CFServiceHelper",&,V_serviceHelper
logQueuer
T@"CFLogQueuer",&,V_logQueuer
-[CFPEXQueryHandler performWithCompletion:serviceHelper:]
%f- %@
logQueue
T@"NSMutableArray",&,V_logQueue
MinimumWaitInSecondsBeforeNextBackgroundActivity
LastBackgroundActivityDate
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]_block_invoke
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]_block_invoke_2
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]_block_invoke_4
v12@?0B4@"NSError"8
+[CFBackgroundActionService handleBackgroundActionRequest:completion:]
-[CFBackgroundActionService performMaintenanceWithCompletion:]
-[CFBackgroundActionService performMaintenanceWithCompletion:]_block_invoke
-[CFBackgroundActionService performMaintenanceWithCompletion:]_block_invoke_2
moving to next one
terminating
Watchdog timeout!
CFAppVocabularySearchRequestHandler
AFServiceCommand
NSObject
CFSiriKitVocabularyRetriever
CFGetActiveWorkoutApplicationIdentifierHandler
CFServiceConnector
CFScripting
CFCommandProcessing
CFRemoveScriptCommandHandler
CFSetVolumeLevelHandler
CFAppAuthorizationRequestHandler
CFUpdateScriptsCommandHandler
CFFileCacheStore
CFGetVolumeLevelHandler
CFRequestHandler
CFSignalHandler
CFPEXQueryHandler
CFLogQueuer
CFBackgroundActionService
AFServiceMaintenance
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4@?8
v16@0:4@?8@12
@12@0:4@8
v12@0:4@?<v@?@"NSDictionary">8
v16@0:4@?<v@?@"NSDictionary">8@"<AFServiceHelper>"12
@12@0:4@"NSDictionary"8
i8@0:4
@16@0:4@8@12
v8@0:4
@20@0:4@8i12@16
v12@0:4i8
v12@0:4@8
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
v16@0:4@8@?12
v16@0:4@"SACFAbstractClientCommand"8@?<v@?@"SABaseCommand">12
v12@0:4@"NSString"8
v16@0:4@"SACFClientFlowScript"8@?<v@?B>12
@12@0:4@"NSString"8
v12@0:4@"SABaseCommand"8
v16@0:4@"SABaseCommand"8@?<v@?@"SABaseCommand">12
v12@0:4@?<v@?B>8
v16@0:4@8@12
v20@0:4@8@12@?16
v24@0:4@8@12B16@?20
@16@0:4@8^i12
v16@0:4i8@12
@"NSCache"
@"NSMutableDictionary"
@16@0:4@8i12
v24@0:4@8@12d16
@"CFServiceHelper"
@"CFLogQueuer"
@"NSMutableArray"
v12@0:4@?<v@?>8
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
