initWithFrame:
mainScreen
scale
setContentScaleFactor:
_isSecure
setDefaultValues
setPreventLockover:
rowWithTitle:valueKeyPath:
arrayWithObjects:count:
sectionWithRows:
moduleWithTitle:contents:
settingsControllerModule
preventLockover
_preventLockover
settings
setPreferredLevel:
_isSystemUIService
_systemUIServiceClientSettings
_systemUIServiceIdentifier
init
alloc
_observeDefaults
defaultCenter
_setRootModuleNeedsReload
addObserver:selector:name:object:
initWithMachServiceName:
setDelegate:
resume
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
sharedInstance
activeTestRecipeEatsEvent:
activeTestRecipeIdentifier
sendEvent:forTestRecipeID:
_showOrHidePrototypingUI
isEqualToString:
_updatePreventingLockover
prototypeSettingsEnabled
_notePrototypeSettingsEnabled:
activePrototypingEnabled
_noteActivePrototypingEnabled:
testRecipeIsActive
_noteHasActiveTestRecipe:
stringWithUTF8String:
observeDefault:onQueue:withBlock:
observeTestRecipeDefaultsOnQueue:withBlock:
_endDelayingExitAfterShowingUI
_postPrototypingIsActiveNotification
_hidePrototypingUI
_showPrototypingUI
class
localSettingsOfClass:
prototypingSettings
addKeyObserver:
initWithRootSettings:
initWithBarButtonSystemItem:target:action:
setDismissButton:
view
setAutoresizingMask:
_frameForHidingSettingsWindow
setRootViewController:
setHidden:
isHidden
_reloadRootModule
_frameForShowingSettingsWindow
setFrame:
_animateUsingDefaultTimingWithOptions:animations:completion:
persistChanges
_delayExitAfterShowingUI
invalidate
scheduledTimerWithTimeInterval:repeats:block:
bounds
array
_volumeSection
addObject:
_hardwareEventSection
_testRecipeSection
domainGroupNames
countByEnumeratingWithState:objects:count:
domainIDsInGroup:
displayNameForDomainID:
rootSettingsForDomainID:
stringByAppendingString:
sectionWithRows:title:
submoduleWithModule:childSettingsKeyPath:
_killSection
displayedShowsUIValueForEvent:
numberWithBool:
boolValue
setShowsUI:forEvent:
rowWithTitle:valueGetter:valueSetter:
canEditShowsUIForEvent:
setExternalCondition:
reloadRow
observeShowUISwitchDefaultsOnQueue:withBlock:
setUnregisterBlock:
_setActiveTestRecipeID:
setDataSource:
activeTestRecipeDescription
activeTestRecipeEventDescription
stringWithFormat:
setFooterTextGetter:
reloadSection
setTestRecipeIdentifier:
titleForTestRecipeID:
domainIDForTestRecipeID:
groupNameForDomainID:
setTestRecipeDescription:
testRecipeForID:consumesEvent:
setTestRecipeEatsVolumeUp:
setTestRecipeEatsVolumeDown:
setTestRecipeEatsRingerSwitch:
_sendKillSpringBoard
rowWithTitle:actionHandler:
_enumerateDomainsWithOneOrMoreTestRecipesUsingBlock:
count
_recipeIDForRow:inSection:
testRecipeIDsForDomainID:
objectAtIndex:
remoteObjectProxy
killSpringBoard
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handlePrototypingEvent:
listener:shouldAcceptNewConnection:
settings:changedValueForKey:
numberOfSectionsForChoiceRow:
choiceRow:titleForSection:
choiceRow:numberOfRowsInSection:
choiceRow:valueForRow:inSection:
choiceRow:titleForRow:inSection:
choiceRow:shortTitleForRow:inSection:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
window
setWindow:
_rootModule
.cxx_destruct
_listener
_mainQueue
_domainServer
_client
_showingUI
_window
_settingsController
_rootSettings
_hasActiveTestRecipe
_rootModuleNeedsReload
_shouldDelayExitAfterUI
_delayingExitAfterUI
_delayExitAfterUITimer
setPrototypingSettings:
_prototypingSettings
actionWithHandler:
rowWithTitle:action:
sharedAVSystemController
getActiveCategoryVolume:andName:
numberWithFloat:
floatValue
setActiveCategoryVolumeTo:
removeObserver:
initWithSettings:presentingRow:
actionWithViewControllerCreator:
staticTitle:
action:
PTDWindow
PTDPrototypingSettings
PTDApplication
PTDServer
PTUIServer
NSObject
NSXPCListenerDelegate
PTSettingsKeyObserver
PTChoiceRowDataSource
UIApplicationDelegate
_PTDRootSettings
ActionConvenience
B8@0:4
@24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@8@0:4
v8@0:4
v12@0:4B8
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4i8
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v16@0:4@8@12
v16@0:4@"PTSettings"8@"NSString"12
i12@0:4@8
@16@0:4@8i12
i16@0:4@8i12
@20@0:4@8i12i16
i12@0:4@"PTChoiceRow"8
@"NSString"16@0:4@"PTChoiceRow"8i12
i16@0:4@"PTChoiceRow"8i12
@20@0:4@"PTChoiceRow"8i12i16
@"NSString"20@0:4@"PTChoiceRow"8i12i16
v12@0:4@8
B24@0:4@8@12@16@20
B20@0:4@8@12@16
v24@0:4@8i12d16
v16@0:4@8i12
v28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12
v24@0:4@8@12@16@?20
v28@0:4@8@12@16@20@?24
v20@0:4@8@12@?16
v16@0:4@8@?12
I16@0:4@8@12
@20@0:4@8@12@16
B20@0:4@8@12@?16
v20@0:4@8@12@16
v12@0:4@"UIApplication"8
B16@0:4@"UIApplication"8@"NSDictionary"12
B16@0:4@"UIApplication"8@"NSURL"12
B24@0:4@"UIApplication"8@"NSURL"12@"NSString"16@20
B20@0:4@"UIApplication"8@"NSURL"12@"NSDictionary"16
v24@0:4@"UIApplication"8i12d16
v16@0:4@"UIApplication"8i12
v28@0:4@"UIApplication"8{CGRect={CGPoint=ff}{CGSize=ff}}12
v16@0:4@"UIApplication"8@"UIUserNotificationSettings"12
v16@0:4@"UIApplication"8@"NSData"12
v16@0:4@"UIApplication"8@"NSError"12
v16@0:4@"UIApplication"8@"NSDictionary"12
v16@0:4@"UIApplication"8@"UILocalNotification"12
v24@0:4@"UIApplication"8@"NSString"12@"UILocalNotification"16@?<v@?>20
v28@0:4@"UIApplication"8@"NSString"12@"NSDictionary"16@"NSDictionary"20@?<v@?>24
v24@0:4@"UIApplication"8@"NSString"12@"NSDictionary"16@?<v@?>20
v28@0:4@"UIApplication"8@"NSString"12@"UILocalNotification"16@"NSDictionary"20@?<v@?>24
v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?I>16
v16@0:4@"UIApplication"8@?<v@?I>12
v20@0:4@"UIApplication"8@"UIApplicationShortcutItem"12@?<v@?B>16
v20@0:4@"UIApplication"8@"NSString"12@?<v@?>16
v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?@"NSDictionary">16
v20@0:4@"UIApplication"8@"INIntent"12@?<v@?@"INIntentResponse">16
I16@0:4@"UIApplication"8@"UIWindow"12
B16@0:4@"UIApplication"8@"NSString"12
@"UIViewController"20@0:4@"UIApplication"8@"NSArray"12@"NSCoder"16
B16@0:4@"UIApplication"8@"NSCoder"12
v16@0:4@"UIApplication"8@"NSCoder"12
B20@0:4@"UIApplication"8@"NSUserActivity"12@?<v@?@"NSArray">16
v20@0:4@"UIApplication"8@"NSString"12@"NSError"16
v16@0:4@"UIApplication"8@"NSUserActivity"12
v16@0:4@"UIApplication"8@"CKShareMetadata"12
@"UIWindow"8@0:4
v12@0:4@"UIWindow"8
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
v12@0:4@?8
@16@0:4i8i12
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"PTDomainServer"
@"NSXPCConnection"
@"PTDWindow"
@"PTUISettingsController"
@"_PTDRootSettings"
@"NSTimer"
@"PTDPrototypingSettings"
@16@0:4@8@?12
Prevent Screen Dim
preventLockover
TB,N,V_preventLockover
com.apple.prototyped
PTDApplication
PTDServer
v4@?0
prototypeSettingsEnabled
activePrototypingEnabled
PTDServer showing UI
PTDServer active test recipe
PTDServer delay exit after showing UI
v8@?0B4
v8@?0@"NSTimer"4
@"PTSettings"4@?0
 Settings
prototypingSettings
Prototyping
@4@?0
v8@?0@4
B4@?0
v8@?0@"PTRow"4
v12@?0i4^B8
Show Prototyping UI
PTDServer_NoTestRecipe
Test Recipe
v8@?0@"NSString"4
Active test recipe "%@" is consuming %@.
@"NSString"4@?0
v8@?0@"PTSection"4
Kill SpringBoard
v20@?0@"NSString"4@"NSString"8@"NSArray"12^B16
None
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
window
T@"UIWindow",&,N
T@"PTDPrototypingSettings",&,N,V_prototypingSettings
B12@?0@"PTRow"4@"PTUIModuleController"8
Volume
@"UIViewController"12@?0@"PTRow"4@"PTUIModuleController"8
Prototype daemon did finish launching
PTUIServer expects to only talk to a single client, and it already has one. Refusing additional connection.
handle prototyping event: %@
showing prototyping UI
hiding prototyping UI
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.springboard-ui.client</key>
<true/>
<key>com.apple.springboard.requestScene-daemon</key>
<true/>
</dict>
</plist>
zPLR
