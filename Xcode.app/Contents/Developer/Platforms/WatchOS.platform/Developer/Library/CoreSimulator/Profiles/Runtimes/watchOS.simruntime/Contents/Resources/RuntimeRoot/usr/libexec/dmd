@(#)PROGRAM:dmd  PROJECT:DeviceManagement-20.33
zT4@
dmf_installSynthesizedProfileRequestWithAssetProviders:error:
dmf_removeSynthesizedProfileRequestWithError:
synthesizeProfileOutUUIDs:withOldUUIDs:assetProviders:
setProfile:
filterQueryForScope
dmfKeyFromDeviceInfoKey:
setPropertyKeys:
valuesByPropertyKey
errorsByPropertyKey
deviceInfoKeyFromDMFKey:
payloadQueries
minusSet:
addRMDSpecificResultsToDictionary:errors:
deviceInfoDeviceChannelKeys
deviceInfoUserChannelKeys
intersectSet:
deviceInfoSupervisedKeys
deviceInfoRMDKeys
payloadMessage
payloadPhoneNumber
setPhoneNumber:
fontURL
dataWithContentsOfURL:
init
class
setWithObjects:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
encodeWithCoder:
initWithCoder:
urlRepresentation
dataRepresentation
stringRepresentation
numberRepresentation
.cxx_destruct
setFontURL:
_fontURL
resolver
resolveAssetWithContext:
fontDeclaration
declarationIdentifier
declarationServerHash
stringWithFormat:
payloadDescriptor
payloadReference
isExecuting
endOperationWithError:
dmd_userFontDatabaseDirectoryURL
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
assetIdentifier
UUID
URLByAppendingPathComponent:
copyItemAtURL:toURL:error:
endOperationWithResultObject:
assetResolutionDidSucceedWithAssetURL:
assetResolutionFailedWithError:
assetDescriptor
assetReference
initWithFontDeclaration:resolver:
isAsynchronous
main
setFontDeclaration:
setResolver:
_fontDeclaration
_resolver
installMetadata
path
fileExistsAtPath:
removeItemAtURL:error:
initWithFontDeclaration:installMetadata:
setInstallMetadata:
_installMetadata
alloc
dmf_installAssetOperationWithReferenceResolver:error:
dmf_removeAssetOperationWithInstallMetadata:error:
imageURL
setImageURL:
_imageURL
imageDeclaration
dmd_userImageDatabaseDirectoryURL
initWithImageDeclaration:resolver:
setImageDeclaration:
_imageDeclaration
initWithImageDeclaration:installMetadata:
payloadEcho
payloadReturnStatus
payloadMode
payloadApps
payloadCategories
payloadHostnames
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
countByEnumeratingWithState:objects:count:
accountProperties
objectForKeyedSubscript:
boolValue
primaryAppleID
usageBudget
usageMonitor
doubleValue
checkStatusOfBudgets:completionHandler:
stopMonitoringBudgets:completionHandler:
payloadMonitor
_usageBudgetTypeForString:
payloadIdentifiers
setWithArray:
payloadTimeBudget
payloadDays
payloadSeconds
initWithType:items:schedule:calendarIdentifier:identifier:
setUsageBudget:
startMonitoringBudgets:darwinNotificationName:notificationTimes:completionHandler:
setUsageMonitor:
_usageBudget
_usageMonitor
initWithDelegate:uniqueIdentifier:
_extractComponentsFromPredicate:
_registerPredicateObserver
date
startDay
startHour
startMinute
startSecond
_nextDateAfter:matchingWeekday:hour:minute:second:
endDay
endHour
endMinute
endSecond
compare:
uniqueIdentifier
numberWithBool:
UTF8String
invalidate
payloadCalendarIdentifier
calendarForIdentifier:
setCalendar:
setFormatOptions:
calendar
timeZone
setTimeZone:
payloadStartTime
dateFromString:
components:fromDate:
hour
setStartHour:
minute
setStartMinute:
second
setStartSecond:
payloadEndTime
setEndHour:
setEndMinute:
setEndSecond:
payloadStartDay
integerValue
setStartDay:
payloadEndDay
setEndDay:
maximumRangeOfUnit:
calendarIdentifier
_intervalToNextCurfewBoundary
timeIntervalSinceDate:
setWeekday:
setHour:
setMinute:
setSecond:
nextDateAfterDate:matchingComponents:options:
initWithDelegate:uniqueIdentifier:curfewPredicate:
evaluatePredicateWithError:
updateObserverRegistration
_calendar
_startDay
_startHour
_startMinute
_startSecond
_endDay
_endHour
_endMinute
_endSecond
aa_primaryAppleAccount
aa_personID
DSID
length
isEqualToString:
payloadDSID
setDSID:
initWithDelegate:uniqueIdentifier:iCloudAccountPredicate:
_DSID
endDate
dateByAddingTimeInterval:
setEndDate:
_endDate
predicateObservers
_predicateObservers
predicateObserver
initWithDelegate:uniqueIdentifier:predicateObserver:
setPredicateObserver:
_predicateObserver
calendarWithIdentifier:
reportActivationPredicateObserverDidTrigger
_uniqueIdentifier
_setupNotificationHandlers
_teardownNotificationHandlers
dealloc
activationPredicateObserversByIdentifier
_predicateObserverForPredicate:withUniqueIdentifier:
setObject:forKeyedSubscript:
_reportChangeToObserver:
stringWithUTF8String:
activationPredicateObserverForIdentifier:
_updateAllActivationPredicateObserverRegistrations
delegate
activationPredicateObserverManager:didObserveChangeForPredicateWithIdentifier:
enumerateKeysAndObjectsUsingBlock:
initWithDelegate:uniqueIdentifier:budgetPredicate:
initWithDelegate:uniqueIdentifier:oneTimePredicate:
payloadPredicate
payloadPredicates
_subPredicateObserversForCompoundSubPredicates:withUniqueIdentifier:
initWithDelegate:uniqueIdentifier:predicateObservers:
addObject:
copy
activationPredicateObserverDidTrigger:
initWithDelegate:
addActivationPredicateObserverForPredicate:withUniqueIdentifier:
removeActivationPredicateObserverWithUniqueIdentifier:
notifydMatchingEventStreamBudgetToken
setNotifydMatchingEventStreamBudgetToken:
setActivationPredicateObserversByIdentifier:
_delegate
_notifydMatchingEventStreamBudgetToken
_activationPredicateObserversByIdentifier
cancel
endOperationIfNeeded
performSelectorOnMainThread:withObject:waitUntilDone:
setTransaction:
runConcurrently
runOnMainThread
runWithRequest:
transaction
_transaction
_outputContextForSessionType:
setCurrentlyPickedDestinationName:
setCurrentlyPickedDestinationDeviceID:
currentlyPickedDestinationDeviceID
containsString:
_discoverDeviceWithDestinationDeviceID:scanWaitTime:error:
currentlyPickedDestinationName
_discoverDeviceWithDestinationName:scanWaitTime:sessionType:
_setOutputDevices:forSessionType:password:error:
objectAtIndexedSubscript:
_promptUserToMirrorOnDisplayNamed:withCompletion:
setValue:forKey:
methodForSelector:
setHeader:
setDefaultButtonTitle:
setAlternateButtonTitle:
setMessage:
dataWithBytes:length:
bytes
startAirPlaySessionWithDestinationName:destinationDeviceID:password:scanWaitTime:sessionType:force:error:
mDeviceIDIsMAC
_currentlyPickedDestinationName
_currentlyPickedDestinationDeviceID
initPrivate
metadataPath
dataWithContentsOfFile:
propertyListWithData:options:format:error:
_cleanUpStaleManagementStatesAndStartObservingApps
manifest
initWithQueue:name:stateHandlerBlock:
_metadataByBundleIdentifier
host
_getEnterpriseAppMetadataForManifestURL:completion:
getBundleIdentifierForStoreItemIdentifier:completion:
manifestURL
getBundleIdentifierForManifestURL:completion:
getMetadataForNonEnterpriseAppRequest:completion:
_metadataForBundleIdentifier:
setState:
setOptions:
setRedemptionCode:
setUnusedRedemptionCode:
_newMetadataDictionary
state
options
redemptionCode
unusedRedemptionCode
_setMetadata:forBundleIdentifier:error:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_applyChangeInLifeCycle:stateMap:
setVPNUUIDString:forBundleIdentifier:error:
setConfiguration:forBundleIdentifier:error:
managementInformationForBundleIdentifier:
setManagementInformation:forBundleIdentifier:error:
stringForState:
managedBundleIdentifiers
setState:forBundleIdentifier:error:
filteredArrayUsingPredicate:
stateForBundleIdentifier:
writeManagementInformationToDiskWithError:
dictionaryWithCapacity:
requestWithURL:
ephemeralSessionConfiguration
sessionWithConfiguration:
_getEnterpriseAppMetadataFromData:completion:
dataTaskWithRequest:completionHandler:
sharedController
foregroundBundleIdentifiers
getBundleIdentifierForAppRequest:completion:
getMetadataForAppRequest:completion:
VPNUUIDStringForBundleIdentifier:
configurationForBundleIdentifier:
feedbackForBundleIdentifier:
setFeedback:forBundleIdentifier:error:
handleFetchRequest:completion:
startInstallingEnterpriseAppWithManifestURL:completion:
startInstallingNonEnterpriseAppForRequest:completion:
startRedeemingAppWithCode:completion:
cancelAppInstallationWithBundleIdentifier:completion:
resumeAppInstallationWithBundleIdentifier:completion:
startUpdatingAppForRequest:metadata:completion:
cancelAppUpdateWithBundleIdentifier:completion:
resumeAppUpdateWithBundleIdentifier:completion:
startUninstallingAppWithBundleIdentifier:completion:
setVPNUUIDString:configuration:options:forBundleIdentifier:
advanceTransientStates
stateHandler
_manifest
_stateHandler
_lifeCycleByBundleIdentifier
initWithBundleIdentifier:
weakObjectsPointerArray
initWithTarget:
stringForInstallationState:
addStateWithName:
willStartInstalling
addTransitionToState:triggeringEvent:
didStartInstalling
didCancelInstalling
didPauseInstalling
didFailInstalling
didFinishInstalling
didResumeInstalling
willStartUpdating
willStartUninstalling
didStartUpdating
didCancelUpdating
didPauseUpdating
didFailUpdating
didFinishUpdating
didFailUninstalling
didFinishUninstalling
stateWithName:
setInitialState:
setLogLevel:
start
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
queue
stateMachine
currentState
name
unsignedIntegerValue
eventWithTrigger:context:
transitionWithTriggeringEvent:
observers
willStartInstallingForLifeCycle:
didStartInstallingForLifeCycle:
didPauseInstallingForLifeCycle:
didResumeInstallingForLifeCycle:
didCancelInstallingForLifeCycle:
didFailInstallingForLifeCycle:
didFinishInstallingForLifeCycle:
willStartUpdatingForLifeCycle:
didStartUpdatingForLifeCycle:
didPauseUpdatingForLifeCycle:
didResumeUpdatingForLifeCycle:
didCancelUpdatingForLifeCycle:
didFailUpdatingForLifeCycle:
didFinishUpdatingForLifeCycle:
willStartUninstallingForLifeCycle:
didFailUninstallingForLifeCycle:
didFinishUninstallingForLifeCycle:
addPointer:
count
pointerAtIndex:
removePointerAtIndex:
bundleIdentifier
_removeLifeCycleForBundleIdentifier:
didChangeInstallingProgressForLifeCycle:
didChangeUpdatingProgressForLifeCycle:
lifeCycleForBundleIdentifier:
initWithBundleIdentifier:currentState:
didResumeUpdating
addObserver:
removeObserver:
didChangeInstallingProgress
didChangeUpdatingProgress
progress
setObservers:
setQueue:
setStateMachine:
_bundleIdentifier
_progress
_observers
_queue
_stateMachine
applicationProxyForIdentifier:
appState
isInstalled
installType
installProgress
installState
defaultWorkspace
proxyProgress
_findProxyInProxies:andCallBlock:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
setProxyProgress:
_proxyProgress
lifeCycle
setBundleIdentifier:
storeItemIdentifier
setStoreItemIdentifier:
displayName
setDisplayName:
isStoreApp
setIsStoreApp:
isFree
setIsFree:
isUserLicensed
setIsUserLicensed:
needsRedownload
setNeedsRedownload:
_isStoreApp
_isFree
_isUserLicensed
_needsRedownload
_storeItemIdentifier
_displayName
payloadMetadataObjectID
objectWithID:
payload
payloadDictionary
declarationForPayload:error:
identifier
verboseDescription
endOperationMarkingPayloadMetadata:failedWithError:
unknownPayloadKeys
allObjects
arrayWithObjects:count:
addStatusEntriesFromDictionary:
assetResolver
taskOperationProvider
database
prepareToRunOperation:withContext:withDatabase:
installOperationDidFinish:asset:
addTarget:selector:forOperationEvents:userInfo:
enqueueOperation:
performBackgroundContextBlock:
error
resultObject
setInstalled:
endOperationWithPayloadMetadata:
setAssetResolver:
_assetResolver
installed
removeOperationDidFinish:asset:
initWithUUID:
UUIDsToTransactions
setBlock:
block
blockOperationWithBlock:
_block
setWithObject:
validateRequest:error:
unlockTokenData
secret
whitelistedClassesForRequest
requiredEntitlements
addEntriesFromDictionary:
operationDidFinish:userInfo:
fetchRequestForCommandsFromOrganizationWithIdentifier:matchingPredicate:
fetchRequestForCommandsFromOrganizationWithIdentifier:
commandForPayload:error:
dmf_executeRequestWithContext:error:
dmf_executeOperationWithContext:error:
dmf_requestExecutesWithoutReturning
dmf_statusForResult:context:
classesOf:conformsTo:
registeredIdentifier
caseInsensitiveCompare:
sortedArrayUsingSelector:
supportedConfigurationTypes
addObjectsFromArray:
supportedAssetTypes
supportedActivationTypes
supportedAssetClasses
dmf_installRequestWithContext:error:
dmf_replaceRequestWithContext:error:
dmf_removeRequestWithContext:error:
supportedConfigurationClasses
supportedEventClasses
supportedPredicateClasses
supportedMessageClasses
supportedCommandTypes
supportedDeclarationTypes
supportedEventTypes
supportedPredicateTypes
supportedMessageTypes
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
newBackgroundContext
fetchRequest
execute:
performBlockAndWait:
setType:
setURL:
dmd_systemConfigurationDatabaseURL
descriptionForSQLiteStoreWithDatabaseURL:
setPersistentStoreDescriptions:
dmd_userConfigurationDatabaseURL
managedObjectModel
initWithName:managedObjectModel:
performBackgroundTask:
newSystemDatabase
newUserDatabase
initWithDatabase:
setName:
setMaxConcurrentOperationCount:
setSuspended:
setDatabase:
initWithCapacity:
eventStatusMessageWithPayloadIdentifier:
sendEvents:organizationIdentifier:completionHandler:
setEventsHandler:
databaseInitializationOperationDidFinish
initializationOperationDidFinish:
addTarget:selector:forOperationEvents:
addDependency:
addOperation:
mainQueue
operations
organizationControllerByIdentifier
databaseInitializationOperation
setDeviceStateProvider:
delegateDidResume
enqueueDeclarationProcessingOperationIfNeeded
setQueuePriority:
delegateWillSuspend
initializationError
setRequest:
organizationIdentifier
organizationDisplayName
enqueueDatabaseModificationOperation:completionHandler:
allValues
organization
valueForKey:
initWithObjects:forKeys:
setOrganizationsByIdentifier:
addOperationWithBlock:
eventSubscriptionManager
startDate
eventStatusesByPayloadIdentifierSinceStartDate:organizationIdentifier:
eventIdentifiers
containsObject:
setEventStatuses:
setClientIdentifier:
setDelegate:
setCompletionHandler:
fetchRequestMatchingConfigurationOrganizationWithIdentifier:
firstObject
fetchRequestForFailedDeclarationsFromOrganizationWithIdentifier:
executeFetchRequest:error:
setFailed:
save:
setOrganizationIdentifier:
initWithContext:
subscriptionDeclaration
fetchRequestForActiveDeclarationFromOrganizationWithIdentifier:withIdentifier:serverHash:
setPayloadMetadata:
payloadMetadata
payloadEvents
setEvents:
payloadSchedule
setSchedule:
updateEventSubscriptions
fetchRequestMatchingRegistrationFromOrganizationWithIdentifier:payloadIdentifier:
deleteObject:
setOrganization:
setPayloadIdentifier:
setEventType:
setDate:
setDetails:
defaultCenter
postNotificationName:object:
initializationOperation
setInitializationOperation:
setDatabaseInitializationOperation:
userInfo
mutableCopy
removeObjectForKey:
domain
code
errorWithDomain:code:userInfo:
setInitializationError:
cancelAllOperations
updateOrganizationControllers
_updateOrganizationControllers
addObserver:selector:name:object:
declarationModificationOperationDidFinish:completionHandler:
deviceStateProvider
setTaskOperationProvider:
activationPredicateObserverManager
setActivationPredicateObserverManager:
enqueueOperations:
addOperations:waitUntilFinished:
viewContext
allKeys
initWithOrganization:delegate:
removeObject:
setRelationshipKeyPathsForPrefetching:
setEventSubscriptionRegistrations:error:
fetchRequestForPayloadMetadatasPendingStatusUpdateFromOrganizationWithIdentifier:
stateDictionary
stateChangeTimestamp
objectID
predicateWithFormat:
setPredicate:
setLastStatusReportTimestamp:
fetchRequestMatchingEventsFromOrganizationWithIdentifier:
dictionaryRepresentation
refreshObject:mergeChanges:
configurationSourceWithIdentifier:
registerConfigurationSource:
updateWithConfigurationSource:
configurationEngineDidResume:
configurationEngineWillSuspend:
engineWithDatabase:
configurationSourceController:fetchStatusUpdatesWithCompletionHandler:
configurationSourceController:fetchEventsWithCompletionHandler:
engineProcessingOperation:enqueuedOperationsForOrganizationWithIdentifier:
engineProcessingOperation:assetResolverForOrganizationWithIdentifier:
registerConfigurationSourceOperation:didUpdateRegistrationForConfigurationSource:
resume
suspend
handleCreateConfigurationOrganizationRequest:completionHandler:
handleDeactivateConfigurationOrganizationRequest:completionHandler:
handleFetchConfigurationOrganizationsRequest:completionHandler:
handleFetchStreamEvents:completionHandler:
handleConfigurationSourceRegistrationRequest:clientIdentifier:completionHandler:
handleSetDeclarationsRequest:completionHandler:
handleUpdateDeclarationsRequest:completionHandler:
handleFetchDeclarationsRequest:completionHandler:
processDeclarationsForOrganizationWithIdentifier:completionHandler:
processStatusForOrganizationWithIdentifier:completionHandler:
refreshStatusForOrganizationWithIdentifier:completionHandler:
handleUpdateCommandsRequest:completionHandler:
handleInstallSubscriptionRequest:completionHandler:
handleRemoveSubscriptionRequest:completionHandler:
setOrganizationControllerByIdentifier:
setEventSubscriptionManager:
_deviceStateProvider
_taskOperationProvider
_activationPredicateObserverManager
_database
_initializationError
_databaseInitializationOperation
_initializationOperation
_organizationControllerByIdentifier
_eventSubscriptionManager
outgoingPayloadMetadataReferences
payloadContext
setAssetProvidersByPayloadIdentifier:
operationClassForRequest:error:
initWithRequest:
installationOperationDidFinish:userInfo:
isInserted
isDeleted
didSave
fetchRequestMatchingConfigurationOrganizationsOfType:
updateWithOrganization:
type
persistentConfigurationSources
persistentConfigurationSourceControllersByIdentifier
initWithConfigurationSource:delegate:
setIdentifier:
configurationSourceControllers
configurationSource
setRegisteredConfigurationSources:
ephemeralConfigurationSources
ephemeralConfigurationSourceControllersByIdentifier
unregisterConfigurationSource:
setPersistentConfigurationSourceControllersByIdentifier:
setEphemeralConfigurationSourceControllersByIdentifier:
_identifier
_type
_persistentConfigurationSourceControllersByIdentifier
_ephemeralConfigurationSourceControllersByIdentifier
andPredicateWithSubpredicates:
fetchRequestForAvailableConfigurationsFromOrganizationWithIdentifier:
fetchRequestForAvailableConfigurationsFromOrganizationWithIdentifier:payloadIdentifiers:
fetchRequestForConfigurationsPendingInstallFromOrganizationWithIdentifier:
fetchRequestForConfigurationsPendingRemoveFromOrganizationWithIdentifier:
fetchRequestForConfigurationsPendingInactiveFromOrganizationWithIdentifier:
removalOperationDidFinish:userInfo:
machServiceName
setMachServiceName:
listenerEndpoint
setListenerEndpoint:
reportingRequirements
setReportingRequirements:
context
controller
configurationEngineRequestedAsset:completion:
fetchRemoteProxy:
setContext:
_context
source
initWithConfigurationSource:
setSource:
updateStatusChangeListener
statusForSourceDidChange:
eventsForSourceDidChange:
isMainThread
object
updateCoalescenceInterval
reportStatus
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
reportStatusTimeout
initWithController:
setController:
reportEvents
reportEventsTimeout
_source
configurationEventsDidChange:completion:
_organizationIdentifier
_machServiceName
_listenerEndpoint
_reportingRequirements
configurationStatusDidChange:completion:
initWithListenerEndpoint:
initWithMachServiceName:options:
anonymousConnection
namedConnection
tryConnectingToConnection:completion:
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
probe:
_controller
_anonymousConnection
_namedConnection
serverHash
setServerHash:
descriptiveProperties
arrayByAddingObjectsFromArray:
setStateDictionary:
metadataWithPayloadDictionary:organizationIdentifier:context:error:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:matchingPredicate:
fetchRequestForPayloadMetadatasFromOrganizationWithIdentifier:matchingPredicate:
declarationsWithDictionaries:organizationIdentifier:context:error:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:
fetchRequestForDeclarationsFromOrganizationWithIdentifier:withIdentifiers:
fetchRequestForActiveDeclarationsFromOrganizationWithIdentifier:
fetchRequestForActiveDeclarationsFromOrganizationWithIdentifier:withIdentifiers:
fetchRequestForDeclarationsPendingDeleteFromOrganizationWithIdentifier:
applyPayloadDictionary:
username
currentDevicePropertyKeys
propertyNameForKey:
valueForKey:error:
setErrorsForKeys:
currentDevice
bluetoothAddress
buildVersion
userAssignedDeviceName
deviceType
hasAppleInternalInstallCapability
sharedConfiguration
isAwaitingConfiguration
defaultStore
activeAccount
iTunesAccountHashForUniqueIdentifier:
marketingName
modelNumber
deviceClass
productVersion
productType
serialNumber
wifiAddress
isSupervised
deviceLastCloudBackupDate
uniqueDeviceID
deviceName
isAppleInternal
isInSingleAppMode
iTunesStoreAccountHash
iTunesStoreAccountIsActive
model
modelName
osVersion
productName
lastCloudBackupDate
networkDidChange
keybagLockStateDidChange
setIsKeychainUnlocked:
setHasKeychainUnlockedSinceBoot:
isNetworkTethered
setIsNetworkTethered:
hasKeychainUnlockedSinceBoot
isKeychainUnlocked
startObservingChanges
stopObservingChanges
mKeychainFirstUnlockNotificationToken
mKeychainUnlockNotificationToken
mNetworkChangeNotificationToken
_hasKeychainUnlockedSinceBoot
_isKeychainUnlocked
_isNetworkTethered
echo
resultStatus
setEcho:
setResultStatus:
endOperationWithDMFErrorCode:
organizationType
removeObserver:forKeyPath:context:
destroyLegacyDatabaseIfNeeded
fixupDatabaseWithCompletionHandler:
dmd_legacyUserConfigurationEngineDatabaseURL
checkResourceIsReachableAndReturnError:
fileURLWithPath:isDirectory:
persistentStoreDescriptions
persistentStores
metadataForPersistentStore:
updateMetadataForManagedObjectContext:error:
destroyPersistentStoresWithError:
setMetadata:forPersistentStore:
lastPathComponent
performDatabaseModificationOperationWithManagedObjectContext:
active
payloadMetadatas
preprocessDatabaseInContext:forOrganization:error:
arrayWithArray:
processCommandPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
processDeclarationPayloadsInContext:forOrganization:enqueuedOperations:assetResolver:error:
mutableSetValueForKey:
removeAllObjects
assetReferences
payloadIdentifier
fetchRequestForCommandsPendingExecutionFromOrganizationWithIdentifier:
initWithDatabase:payloadMetadataObjectID:payloadIdentifier:
requiresNetworkTether
setRequiresNetworkTether:
requiresUnlockedKeychain
setRequiresUnlockedKeychain:
fetchRequestForCommandsPendingRemovalFromOrganizationWithIdentifier:
fetchRequestForCommandsPendingDeleteFromOrganizationWithIdentifier:
fetchRequestForActivationsFromOrganizationWithIdentifier:
available
setLastPredicateEvaluationValue:
setOutgoingPayloadMetadataReferences:
updateStateDictionaryIfNeeded
lastPredicateEvaluationValue
payloadStandardConfigurations
initWithArray:
dependencies
request
setActive:
setAvailable:
_request
completionHandler
arrayWithCapacity:
includePayloadContents
includeInternalState
valueForKeyPath:
null
_completionHandler
clientIdentifier
configurationSourceName
delegateUpdatedDeclarationSourceAndEndOperation:
_clientIdentifier
declarations
addCommands
commandsWithPayloadDictionaries:organizationIdentifier:context:error:
removeDeclarations
upsertDeclarations
schedule
payloadFrequency
shared
payloadLocalTime
payloadSpread
numberWithInt:
payloadDay
frequency
localTime
spread
numberWithInteger:
scheduledTimerWithTimeInterval:repeats:block:
setTimer:
initWithScheduleRegistration:
startWithScheduleElapsedHandler:
timer
_frequency
_localTime
_spread
_day
_timer
eventType
timestamp
details
initWithEventType:details:
_eventType
_details
_timestamp
eventSubscriptionsByIdentifier
eventsHandler
initWithSubscriptionRegistration:streamEventsHandler:
updateWithSubscriptionRegistration:
removeObjectsForKeys:
eventStatusesSinceStartDate:
setEventSubscriptionsByIdentifier:
_eventsHandler
_eventSubscriptionsByIdentifier
automaticallyNotifiesObserversOfPayloadMetadata
events
_updateEventStreams:
eventStreamByEventType
payloadType
lowercaseString
updateEvent:
streamEventsHandler
startNotificationStreamWithEventsHandler:
lastDateScheduleElapsed
setLastDateScheduleElapsed:
eventStatusRollupSinceStartDate:
setEventStreamByEventType:
_payloadIdentifier
_schedule
_eventStreamByEventType
_streamEventsHandler
_lastDateScheduleElapsed
initWithAppsByBundleIdentifier:
fetchAppsForRequest:completion:
_fetchAppsForBundleIdentifier:type:completion:
managedAppsOnly
bundleIdentifiers
setInstallationState:
setVPNUUIDString:
setConfiguration:
setFeedback:
setManagementInformation:
managementInformation
deleteFeedback
setBundleIdentifiers:
useDelay
initWithUpdate:
installedProfilesWithFilterFlags:
payloads
certificatePersistentID
copyItemWithPersistentID:useSystemKeychain:
initWithCertificateRef:isIdentity:
initWithCertificates:
setSupportedCommands:
setSupportedAssets:
setSupportedConfigurations:
setSupportedEvents:
setSupportedActivations:
setSupportedPredicates:
setSupportedMessages:
setPayloadDescriptions:
propertyKeys
deviceWithKeys:
dictionaryWithValuesForKeys:
allKeysForObject:
errorsForKeys
initWithValuesByPropertyKey:errorsByPropertyKey:
initWithStateDescription:
_downloadStatusAndPercentComplete:fromStatus:
initWithProductKey:status:downloadPercentComplete:
isInstalling
isDownloadComplete
isDownloading
downloadPercentComplete
filterFlags
_profileListWithFilterFlags:
initWithProfiles:
sharedReader
sharedManager
installedProfileIdentifiersWithFilterFlags:
userProfileRestrictions
systemProfileRestrictions
defaultRestrictions
installedProfileWithIdentifier:
dependentsOfParent:inDomain:
signerCertificates
filterRestrictionDictionary:toIncludeOnlyRestrictionsThatDifferFromRestrictions:
initWithProfile:isManaged:signerCertificates:restrictions:
currentRestrictions
initWithRestrictions:
supportsBlockLevelEncryption
supportsFileLevelEncryption
isPasscodeSet
currentPasscodeIsCompliantWithGlobalRestrictionsOutError:
currentPasscodeIsCompliantWithProfileRestrictionsOutError:
effectiveValueForSetting:
userValueForSetting:
initWithSupportsBlockLevelEncryption:supportsFileLevelEncryption:passcodeIsSet:passcodeIsCompliantWithGlobalRestrictions:passcodeIsCompliantWithProfileRestrictions:passcodeLockGracePeriodEnforced:passcodeLockGracePeriod:
initWithSecurityInformation:
licenseType
_runWithRequest:
_resumeInstallationForRequest:
installAppForRequest:
_installProfile:withRequest:error:
_installRestrictionsPayload:withRequest:error:
_rollbackProfile:withRequest:completion:
installProfileData:options:outError:
removeProfileAsyncWithIdentifier:installationType:completion:
_mapMCRestrictionsFromPayload:error:
_applyHeuristicsToRestrictions:error:
applyRestrictionDictionary:clientType:clientUUID:localizedClientDescription:localizedWarningMessage:outRestrictionChanged:outEffectiveSettingsChanged:outError:
dictionary
objectForKey:
MCMutableDeepCopy
setObject:forKey:
_intersectionFeatureForPayloadRestrictionKey:
restrictionsAfterApplyingRestrictionsDictionary:toRestrictionsDictionary:outChangeDetected:outError:
sharedHacks
_applyHeuristicsToRestrictions:forProfile:outError:
_intersectionAliasToFeatures
setSubscriptionDeclaration:
_subscriptionDeclaration
style
isSetupBuddyDone
_installSilentProfileData:managingProfileIdentifier:
_installInteractiveProfile:
profileWithData:outError:
mustInstallProfileNonInteractively:
queueFileDataForAcceptance:originalFileName:outError:
profileData
installProvisioningProfileData:managingProfileIdentifier:outError:
originator
setDeviceName:outError:
stringFromNumber:
dataUsingEncoding:
dmd_sha1Hash
base64EncodedStringWithOptions:
fileURLWithPath:
getResourceValue:forKey:error:
setSkipBackupAttribute:toItemAtPath:
metadata
setMetadata:
_metadata
floatValue
numberWithDouble:
dataCapacity
dataAvailable
ethernetMacAddress
wifiAddressData
hasTelephonyCapability
hasCellularDataCapability
hasPersonalHotspotCapability
phoneNumber
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
_systemGroupContainerPathWithGroupIdentifier:
configurationProfilesSystemGroupContainer
_userDirectory
_systemProfileStorageDirectory
stringByAppendingPathComponent:
purchasedBooksDirectory
_managedNonStoreBooksSystemGroupContainer
managedNonStoreBooksDirectory
_systemProfileLibraryDirectory
stringWithCString:encoding:
systemGroupContainerPath
homeDirectoryPath
managedAppsManifest
purchasedBooksManifest
managedStoreBooksManifestPath
managedNonStoreBooksManifestPath
systemLostModeRequestPath
isReady
removeObserver:forKeyPath:
addObserver:forKeyPath:options:context:
observeValueForKeyPath:ofObject:change:context:
subOperations
setSubOperations:
sharedDeclarationOperationQueue
incomingPayloadMetadataReferences
managedObjectContext
setPayloadContext:
_requiresNetworkTether
_requiresUnlockedKeychain
_payloadMetadataObjectID
_payloadContext
_subOperations
_stateDictionary
assetProvidersByPayloadIdentifier
_assetProvidersByPayloadIdentifier
hasPrefix:
isSubclassOfClass:
entity
initWithEntity:insertIntoManagedObjectContext:
setPayload:
setPayloadDictionary:
validateProperties:
setPendingStatusUpdate:
primitiveValueForKey:
willChangeValueForKey:
setStateChangeTimestamp:
setPrimitiveValue:forKey:
didChangeValueForKey:
lastStatusReportTimestamp
changedValues
validateForInsert:
validateForUpdate:
validateForDelete:
fetchRequestForActivePayloadMetadatasFromOrganizationWithIdentifier:withIdentifier:
keyPathsForValuesAffectingStatus
automaticallyNotifiesObserversOfStateDictionary
automaticallyNotifiesObserversOfLastStatusReportTimestamp
status
setNeedsRefreshStatus
willSave
dmd_userEffectivePoliciesDatabaseURL
initWithPersistentStoreDescriptions:
setShouldAddStoreAsynchronously:
setOption:forKey:
isPersistentContainerLoaded
persistentStoreCoordinator
isEqualToNumber:
destroyPersistentStoreAtURL:withType:options:error:
setIsPersistentContainerLoaded:
addPersistentStoreWithDescription:completionHandler:
setResourceValue:forKey:error:
loadPersistentStoresWithCompletionHandler:
policyTypes
setPolicyTypes:
setModificationDate:
requestPoliciesForTypes:replyHandler:
_performBackgroundTask:
sortDescriptorWithKey:ascending:
setSortDescriptors:
policy
priority
numberWithLongLong:
initWithType:defaultPolicy:currentPoliciesByIdentifier:defaultPriority:prioritiesByIdentifier:
_upsertPolicy:forType:identifier:priority:organizationIdentifier:declarationIdentifier:policyToUpdate:managedObjectContext:
_notifyClientsRegisteredForPolicyType:
setDeclarationIdentifier:
setPriority:
setPolicy:
componentsJoinedByString:
addRegistration:replyHandler:
setEffectivePolicy:forType:identifiers:priority:organizationIdentifier:declarationIdentifier:completionHandler:
removeEffectivePolicyFromOrganizationIdentifier:declarationIdentifier:completionHandler:
_persistentContainer
_isPersistentContainerLoaded
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
sharedStakeholder
willSwitchUser
inEDUMode
initWithFormat:arguments:
initForOperation:
_retain
_release
isParked
exceptionWithName:reason:userInfo:
setIsParked:
operation
assertionForOperation:
stayAliveThroughHereAtLeast
park
unpark
setOperation:
_isParked
_operation
eSIMServerURL
scheme
setNumberOfUpdates:
clientBundleIdentifier
profile
_removeRestrictionsWithRequest:error:
_removeProfile:withRequest:completion:
persistentID
iTunesStoreID
removeProfileWithIdentifier:installationType:completion:
removeProtectedProfileAsyncWithIdentifier:installationType:completion:
profileIdentifier
managingProfileIdentifier
removeProvisioningProfileWithUUID:outError:
destinationName
destinationDeviceID
password
scanWaitInterval
force
initWithReason:
setRebootType:
sharedService
shutdownWithOptions:
initWithAction:productKey:error:
action
productKey
endOperationWithWrongProductKey:action:
inReplyTo
initWithMachServiceName:
_setQueue:
initWithPolicyPersistence:
taskServerDelegate
policyServerListenerDelegate
taskOperationServiceListener
policyServerListener
currentRunLoop
sharedServer
policyPersistence
taskServerListenerDelegate
_taskServerDelegate
_taskOperationServiceListener
_policyPersistence
_taskServerListenerDelegate
_policyServerListenerDelegate
_policyServerListener
configuration
runWithRequest:bundleIdentifier:
UUIDString
configurationEngine
syncToken
identifiers
decodeObjectOfClass:forKey:
setIdentifiers:
_declarationIdentifier
_policy
_priority
_identifiers
fileHandle
stopAirPlaySessionOfType:error:
removeAppMetadataForBundleIdentifier:error:
removeAppWithBundleIdentifier:completion:
productBuildVersion
defaultProductKey
stringByAppendingString:
productKeyFromStatus:
sharedInstallTask
_dmfStatusErrorFromSUStatusError:
productKeyOrDefaultFromStatus:
removeUpdateWithError:
availableUpdateWithVersion:useDelay:error:
startDownloadWithError:
startInstallWithError:
currentStatusWithError:
operationWillStart
operationWillFinish
operationDidFinish
runAsUser
_runAsUser
_clientBundleIdentifier
_uid
_currentLocaleDidChange:
concurrentOperationQueue
serialOperationQueue
deviceStateObserver
boolValueForEntitlement:
localizedStringForKey:value:table:
setClientBundleIdentifier:
effectiveUserIdentifier
setUid:
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
rangeAtIndex:
substringWithRange:
_specialCasedRequestNamesToOperationNames
setConfigurationEngine:
isPermittedOnCurrentPlatform
clientUserInfo
transport
intValue
processIdentifier
operationForRequest:targetUID:appleID:transport:error:
server:clientSession:operationForRequest:error:
server:clientSession:didInterruptWithError:
server:clientSession:shouldConnectWithTransport:
server:clientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:enqueueOperation:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
serverDidInvalidate:
_concurrentOperationQueue
_serialOperationQueue
_deviceStateObserver
_configurationEngine
setRunAsUser:
isMigrationFinished
sharedConnection
setIsMigrationFinished:
waitForMigrationIncludingPostRestoreMigration:completion:
_isMigrationFinished
valueForEntitlement:
initWithXPCConnection:
taskServer
connectWithClientTransport:
listener:shouldAcceptNewConnection:
initWithTaskServer:
_taskServer
_testEvent
appleID
isFinished
_runWithRequest:metadata:
_endOperationWithBundleIdentifier:
_resumeUpdateForBundleIdentifier:
_promptIfNeededAndUpdateAppForRequest:metadata:
_startUpdateAppForRequest:metadata:
setDidPromptUser:
_setState:forBundleIdentifier:
_showUpdateFailurePromptIfNeededForRequest:metadata:
VPNUUIDString
managementOptions
didPromptUser
localizedStringWithFormat:
initWithBundleIdentifier:state:
_didPromptUser
setOtherButtonTitle:
setDisplayWhenLocked:
setTimeout:
_notificationRef
_displayWhenLocked
_header
_message
_defaultButtonTitle
_alternateButtonTitle
_otherButtonTitle
_timeout
notifications
completionsByIdentifier
_showNextNotification
header
message
defaultButtonTitle
alternateButtonTitle
otherButtonTitle
displayWhenLocked
_dictFromNotification:
timeout
_completeNotification:response:
setNotificationRef:
notificationRef
showNotification:completion:
_notificationRef:wasDismissedWithFlags:
_notifications
_completionsByIdentifier
validateAppBundleIDs:completion:
initWithBundleIdentifier:propertyKeys:
applicationType
localizedName
itemName
itemID
externalVersionIdentifier
setExternalVersionIdentifier:
bundleVersion
setVersion:
shortVersionString
setShortVersion:
diskUsage
staticUsage
setStaticUsage:
dynamicUsage
setDynamicUsage:
sharedUsage
setSharedUsage:
isPlaceholder
setIsPlaceholder:
isRestricted
setIsRestricted:
isBlocked
setIsBlocked:
vppStateFlagsWithProxy:
setIsUserBasedVPP:
setIsLicenseExpired:
setIsLicenseRevoked:
hasMIDBasedSINF
isDeviceBasedVPP
setIsDeviceBasedVPP:
profileValidated
setIsUPP:
_proxyIsValidated:
setIsValidated:
isAppStoreVendable
setIsAppStoreVendable:
isBetaApp
setIsBetaApp:
isAdHocCodeSigned
setIsAdHocCodeSigned:
setHasUpdateAvailable:
initWithApplicationProxy:hasUpdateAvailable:propertyKeys:
initWithCommonName:data:isIdentity:
isEncrypted
version
payloadDescription
initWithType:identifier:payloadVersion:displayName:organization:payloadDescription:
profileDescription
isLocked
removalPasscode
initWithUUID:type:identifier:profileVersion:displayName:organization:profileDescription:isManaged:isLocked:hasRemovalPasscode:isEncrypted:signerCertificates:payloads:restrictions:
fileDescriptor
dmd_dataWithMappedContentsOfFileHandle:error:
localizedDescription
URLByAppendingPathComponent:isDirectory:
dmd_homeDirectoryURL
dmd_systemLibraryURL
dmd_userLibraryURL
dmd_systemDMDLibraryURL
dmd_userDMDLibraryURL
dmd_systemConfigurationEngineLibraryURL
dmd_userConfigurationEngineLibraryURL
Code
ErrorChain
Not Allowed
Not Supported
Failed
QueryResponses
ErrorResponses
fontURL
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
supportsSecureCoding
TB,R
T@"NSURL",C,N,V_fontURL
%@-%@
assetIdentifier
T@"NSString",R,C,N
assetDescriptor
T@"CEMAssetBaseDescriptor",R,C,N
assetReference
T@"CEMAssetBaseReference",R,C,N
fontDeclaration
T@"CEMFontDeclaration",&,N,V_fontDeclaration
resolver
T@"<DMDRemoteAssetResolver>",&,N,V_resolver
installMetadata
T@"CEMFontAssetInstallMetadata",&,N,V_installMetadata
imageURL
T@"NSURL",C,N,V_imageURL
imageDeclaration
T@"CEMImageDeclaration",&,N,V_imageDeclaration
T@"CEMImageAssetInstallMetadata",&,N,V_installMetadata
Installed
Pending
Echo
Executed
appleId
primaryAccount
primaryAppleID
ScreenTime
WebSites
com.apple.dmd.budget.didChange
v12@?0@"NSDictionary"4@"NSError"8
usageBudget
T@"USBudget",&,N,V_usageBudget
usageMonitor
T@"USUsageMonitor",&,N,V_usageMonitor
calendar
T@"NSCalendar",C,N,V_calendar
startDay
Ti,N,V_startDay
startHour
Ti,N,V_startHour
startMinute
Ti,N,V_startMinute
startSecond
Ti,N,V_startSecond
endDay
Ti,N,V_endDay
endHour
Ti,N,V_endHour
endMinute
Ti,N,V_endMinute
endSecond
Ti,N,V_endSecond
DSID
T@"NSString",C,N,V_DSID
endDate
T@"NSDate",&,N,V_endDate
ActivatedConfigurations
PredicateValue
Install
Remove
lastPredicateEvaluationValue
predicateObservers
T@"NSArray",R,C,N,V_predicateObservers
predicateObserver
T@"DMDActivationPredicateObserver",&,N,V_predicateObserver
com.apple.notifyd.matching
com.apple.alarm
Date
buddhist
chinese
coptic
ethiopic-amete-alem
ethiopic-amete-mihret
gregorian
hebrew
indian
islamic
islamic-civil
islamic-tbla
islamic-umalqura
iso8601
japanese
persian
T@"<DMDActivationPredicateObserverDelegate>",W,N,V_delegate
T@"NSString",R,C,N,V_uniqueIdentifier
v8@?0@"NSObject<OS_xpc_object>"4
v8@?0i4
v4@?0
v16@?0@"NSString"4@"DMDActivationPredicateObserver"8^B12
%@-%ld
notifydMatchingEventStreamBudgetToken
Ti,N,V_notifydMatchingEventStreamBudgetToken
activationPredicateObserversByIdentifier
T@"NSMutableDictionary",&,N,V_activationPredicateObserversByIdentifier
delegate
T@"<DMDActivationPredicateObserverManagerDelegate>",R,W,N,V_delegate
request.name
com.apple.dmd-access
transaction
T@"NSObject<OS_os_transaction>",&,N,V_transaction
v8@?0I4
AVOutputContextSetOutputDevicePasswordKey
avOutputContext
applicationProcessID
avOutputDevice
setOutputDevice:options:
AirPlay
DMFNotifications
Display
Cancel
iPod's screen
iPad's screen
iPhone's screen
Apple TV's output
Mac's screen
device
v16@?0^{__CFArray=}4^v8^{__CFError=}12
v8@?0^{__CFArray=}4
shared
T@"DMDAirPlayManager",R,N
currentlyPickedDestinationName
T@"NSString",C,N,V_currentlyPickedDestinationName
currentlyPickedDestinationDeviceID
T@"NSString",C,N,V_currentlyPickedDestinationDeviceID
metadataByBundleID
state
flags
RedemptionCode
UnusedRedemptionCode
Attributes
VPNUUID
com.apple.dmd.%@.%p
Apps
@4@?0
<%@: %p; Apps: %@>
v12@?0@"DMDAppMetadata"4@"NSError"8
self == %@
v16@?0@"NSData"4@"NSURLResponse"8@"NSError"12
items
metadata
kind
software
bundle-identifier
title
sharedController
T@"DMDAppController",R,N
metadataPath
T@"NSString",R,N
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
manifest
T@"NSMutableDictionary",R,N,V_manifest
stateHandler
T@"DMFOSStateHandler",R,N,V_stateHandler
foregroundBundleIdentifiers
T@"NSArray",R,C,N
managedBundleIdentifiers
com.apple.dmd.%@.%p(%@).queue
observers
T@"NSPointerArray",&,N,V_observers
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
stateMachine
T@"CATStateMachine",&,N,V_stateMachine
bundleIdentifier
T@"NSString",R,C,N,V_bundleIdentifier
currentState
TI,R,N
progress
T@"NSProgress",R,N,V_progress
v8@?0@"LSApplicationProxy"4
proxyProgress
T@"NSProgress",&,N,V_proxyProgress
T@"NSString",C,N,V_bundleIdentifier
storeItemIdentifier
T@"NSNumber",C,N,V_storeItemIdentifier
displayName
T@"NSString",C,N,V_displayName
isStoreApp
TB,N,V_isStoreApp
isFree
TB,N,V_isFree
isUserLicensed
TB,N,V_isUserLicensed
needsRedownload
TB,N,V_needsRedownload
lifeCycle
T@"DMDAppLifeCycle",R,N
v8@?0@"NSManagedObjectContext"4
assetResolver
T@"<DMDRemoteAssetResolver>",W,N,V_assetResolver
com.apple.dmd.operation.begin-transaction
block
T@?,C,N,V_block
com.apple.dmd.operation.clear-activation-lock-bypass-code
com.apple.dmd.operation.clear-device-passcode
request.unlockTokenData
request.secret
com.apple.dmd.operation.clear-restrictions-password
com.apple.activations.basic
com.apple.activations.simple
com.apple.predicate.true
com.apple.predicate.false
DMDConfigurationDatabaseModel
momd
<%@: %p
DMDConfigurationOrganizationsDidChangeNotification
DMDConfigurationSourceStatusDidChange
DMDConfigurationSourceEventsDidChange
%@.%p.configuration-engine
v8@?0@"NSError"4
v16@?0@"NSString"4@"NSString"8@"NSArray"12
Database:
Engine operations:
Organizations:
Deactivate organization for %@
identifier
v16@?0@"NSString"4@"NSArray"8^B12
Process Declarations for %@
Send Events for %@
payloadMetadata.organization
self IN %@
database
T@"DMDConfigurationDatabase",&,N,V_database
T@"CATOperationQueue",&,N,V_queue
initializationError
T@"NSError",&,V_initializationError
databaseInitializationOperation
T@"DMDEngineDatabaseInitializationOperation",&,N,V_databaseInitializationOperation
initializationOperation
T@"CATOperation",&,N,V_initializationOperation
organizationControllerByIdentifier
T@"NSMutableDictionary",&,N,V_organizationControllerByIdentifier
eventSubscriptionManager
T@"DMDEventSubscriptionManager",&,N,V_eventSubscriptionManager
T@"<DMDConfigurationEngineDelegate>",W,N,V_delegate
deviceStateProvider
T@"NSObject<DMDDeviceStateProvider>",&,N,V_deviceStateProvider
taskOperationProvider
T@"NSObject<DMDTaskOperationProvider>",&,N,V_taskOperationProvider
activationPredicateObserverManager
T@"DMDActivationPredicateObserverManager",&,N,V_activationPredicateObserverManager
%K = %@
type
T@"NSString",C,D,N
active
TB,D,N
persistentConfigurationSources
T@"NSArray",C,D,N
payloadMetadatas
organization
T@"NSString",C,N,V_type
persistentConfigurationSourceControllersByIdentifier
T@"NSMutableDictionary",&,N,V_persistentConfigurationSourceControllersByIdentifier
ephemeralConfigurationSourceControllersByIdentifier
T@"NSMutableDictionary",&,N,V_ephemeralConfigurationSourceControllersByIdentifier
T@"NSString",R,C,N,V_identifier
configurationSourceControllers
ephemeralConfigurationSources
T@"DMFConfigurationOrganization",R,N
T@"<DMDConfigurationOrganizationControllerDelegate>",W,N,V_delegate
organization.identifier
available
identifier IN %@
installed
failed
SUBQUERY(incomingPayloadMetadataReferences, $ref, ($ref.available == YES) && ($ref.lastPredicateEvaluationValue == YES)).@count > 0
SUBQUERY(incomingPayloadMetadataReferences, $ref, $ref.lastPredicateEvaluationValue == YES).@count == 0
%K != %@
status
SUBQUERY(incomingPayloadMetadataReferences, $ref, $ref.available == YES).@count = 0
organizationIdentifier
machServiceName
reportingRequirements
T@"NSString",C,N
listenerEndpoint
T@"NSXPCListenerEndpoint",&,N
T@"DMFReportingRequirements",&,N
T@"DMDConfigurationOrganization",&,D,N
T@"NSXPCListenerEndpoint",&,D,N
T@"DMFReportingRequirements",&,D,N
v12@?0@"NSURL"4@"NSError"8
v12@?0@"<DMFConfigurationSourceClientInterface>"4@"NSError"8
context
T@"<DMDRemoteAssetResolutionContext>",&,N,V_context
source
T@"CATSerialOperationQueue",&,N,V_queue
T@"DMDConfigurationSourceRepresentation",&,N,V_source
T@"<DMDConfigurationSourceControllerDelegate>",R,W,N,V_delegate
configurationSource
T@"DMFConfigurationSource",R,N
v16@?0@"NSDictionary"4@"NSError"8@?<v@?@"NSError">12
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_organizationIdentifier
T@"NSString",C,N,V_machServiceName
T@"NSXPCListenerEndpoint",&,N,V_listenerEndpoint
T@"DMFReportingRequirements",&,N,V_reportingRequirements
controller
T@"DMDConfigurationSourceController",W,N,V_controller
anonymousConnection
T@"NSXPCConnection",R,N,V_anonymousConnection
namedConnection
T@"NSXPCConnection",R,N,V_namedConnection
com.apple.dmd.operation.create-configuration-organization
request.organizationDisplayName
com.apple.dmd.operation.deactivate-configuration-organization
serverHash
pendingStatusUpdate
uniqueIdentifier
com.apple.dmd.operation.delete-user
request.message
T@"DMDDeviceController",R,N
currentDevice
T@"DMFDevice",R,N
hasKeychainUnlockedSinceBoot
isKeychainUnlocked
isNetworkTethered
com.apple.system.config.network_change
TB,R,N
TB,N,V_hasKeychainUnlockedSinceBoot
TB,N,V_isKeychainUnlocked
TB,N,V_isNetworkTethered
com.apple.dmd.operation.disable-lost-mode
com.apple.dmd.operation.echo
request.echo
request.resultStatus
Tq,D,N
com.apple.dmd.operation.enable-lost-mode
request.UUID
com.apple.dmd.operation.end-transaction
request.organizationType
T@"DMFCreateConfigurationOrganizationRequest",&,N,V_request
DMDEngineDatabaseFixedDigitalHealthUsageEventMetadataKey
-wal
-shm
DMDEngineDatabaseInitializationOperationContext
outgoingPayloadMetadataReferences
T@"<DMDEngineDatabaseProcessingOperationDelegate>",W,N,V_delegate
T@"<DMDTaskOperationProvider>",&,N,V_taskOperationProvider
request
T@"DMFDeactivateConfigurationOrganizationRequest",&,N,V_request
Debug
T@"DMFFetchDeclarationsRequest",&,N,V_request
completionHandler
T@?,C,N,V_completionHandler
T@"NSString",&,N,V_organizationIdentifier
(null)
%@:%@
T@"<DMDEngineRegisterConfigurationSourceOperationDelegate>",W,N,V_delegate
T@"DMFRegisterConfigurationSourceRequest",&,N,V_request
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
T@"DMFSetDeclarationsRequest",&,N,V_request
T@"DMFUpdateEnqueuedCommandsRequest",&,N,V_request
self != %@
T@"DMFUpdateDeclarationsRequest",&,N,V_request
com.apple.dmd.operation.erase-device
Immediate
Minutely
Hourly
Weekly
Daily
00:00
frequency
localTime
spread
v8@?0@"NSTimer"4
timer
T@"NSTimer",&,N,V_timer
Ti,R,N,V_frequency
T@"NSString",R,C,N,V_localTime
T@"NSNumber",R,N,V_spread
T@"NSNumber",R,N,V_day
eventType
timestamp
T@"NSString",R,C,N,V_eventType
details
T@"NSDictionary",R,C,N,V_details
T@"NSDate",R,N,V_timestamp
v8@?0@"NSArray"4
v16@?0@"NSString"4@"DMDEventSubscriptionRegistrationController"8^B12
eventSubscriptionsByIdentifier
T@"NSMutableDictionary",&,N,V_eventSubscriptionsByIdentifier
eventsHandler
T@?,C,N,V_eventsHandler
payloadMetadata
payloadMetadata.organization.identifier = %@ AND payloadMetadata.identifier = %@
events
T@"NSArray",&,D,N
T@"CEMEventSubscriptionDeclaration_Schedule",&,D,N
v16@?0@"NSString"4@"<DMDEventTypeStream>"8^B12
schedule
T@"DMDEventReportingSchedule",&,N,V_schedule
eventStreamByEventType
T@"NSMutableDictionary",&,N,V_eventStreamByEventType
streamEventsHandler
T@?,R,N,V_streamEventsHandler
lastDateScheduleElapsed
T@"NSDate",&,N,V_lastDateScheduleElapsed
T@"NSString",R,C,N,V_organizationIdentifier
payloadIdentifier
T@"NSString",R,C,N,V_payloadIdentifier
com.apple.dmd.operation.fetch-activation-lock-bypass-code
com.apple.dmd.operation.fetch-apps
v12@?0@"NSString"4@"NSError"8
com.apple.dmd.operation.fetch-available-os-updates
default
com.apple.dmd.operation.fetch-certificates
com.apple.dmd.operation.fetch-classroom-instructor-endpoint
com.apple.dmd.operation.fetch-declaration-capabilities
v12@?0@"NSArray"4@"NSError"8
request.configurationSource
com.apple.dmd.operation.fetch-device-properties
request.propertyKeys
com.apple.dmd.operation.fetch-unlock-token
com.apple.dmd.operation.fetch-debug-state
Server:
Apps:
com.apple.dmd.operation.fetch-location
com.apple.dmd.operation.fetch-managed-books
com.apple.dmd.operation.fetch-organizations
v12@?0@"DMFFetchConfigurationOrganizationsResultObject"4@"NSError"8
com.apple.dmd.operation.fetch-os-update-status
com.apple.dmd.operation.fetch-profiles
com.apple.dmd.operation.fetch-provisioning-profiles
com.apple.dmd.operation.fetch-restrictions
com.apple.dmd.operation.fetch-safari-bookmarks
com.apple.dmd.operation.fetch-security-information
com.apple.dmd.operation.fetch-stream-events
v12@?0@"DMFFetchStreamEventsResultObject"4@"NSError"8
request.startDate
com.apple.dmd.operation.fetch-users
request.licenseType
com.apple.dmd.operation.install-app
com.apple.dmd.operation.install-configuration
PayloadContent
PayloadType
com.apple.applicationaccess
PayloadIdentifier
%@-restrictions
com.apple.dmd
whitelistedAppBundleIDs
request.subscriptionDeclaration
subscriptionDeclaration
T@"CEMEventSubscriptionDeclaration",&,N,V_subscriptionDeclaration
com.apple.dmd.operation.install-managed-book
com.apple.dmd.operation.install-profile
com.apple.dmd.operation.install-provisioning-profile
request.profileData
com.apple.dmd.operation.invite-user-to-vpp
request.URL
request.originator
com.apple.dmd.operation.lock-device
deviceLastCloudBackupDate
T@"NSDate",R,C,N
com.apple.dmd.operation.log-out-user
com.apple.dmd.operation.start-managing-app
T@"DMDAppMetadata",&,N,V_metadata
iPhone
iPod
iPad
AppleTV
Watch
AudioAccessory
apple-internal-install
DeviceClass
ProductType
ProductVersion
BuildVersion
marketing-name
SerialNumber
ModelNumber
UniqueDeviceID
UserAssignedDeviceName
DiskUsage
EthernetMacAddress
BluetoothAddress
WifiAddress
WifiAddressData
telephony
cellular-data
personal-hotspot
PhoneNumber
MobileSubscriberCountryCode
MobileSubscriberNetworkCode
deviceType
hasAppleInternalInstallCapability
deviceClass
productType
productVersion
buildVersion
marketingName
serialNumber
modelNumber
uniqueDeviceID
userAssignedDeviceName
dataCapacity
T@"NSNumber",R,C,N
dataAvailable
ethernetMacAddress
bluetoothAddress
wifiAddress
wifiAddressData
T@"NSData",R,C,N
hasTelephonyCapability
hasCellularDataCapability
hasPersonalHotspotCapability
phoneNumber
mobileSubscriberCountryCode
mobileSubscriberNetworkCode
com.apple.dmd.operation.open-app
request.bundleIdentifier
com.apple.dmd.operation.open-url
request.url
systemgroup.com.apple.configurationprofiles
MDMAppManagement.plist
Purchases.plist
/Media/Books/Purchases
ManagedBooks.plist
Library
Managed.plist
LostModeRequest.plist
ConfigurationProfiles
systemgroup.com.apple.media.books.managed
systemGroupContainerPath
homeDirectoryPath
managedAppsManifest
purchasedBooksManifest
purchasedBooksDirectory
managedStoreBooksManifestPath
managedNonStoreBooksDirectory
managedNonStoreBooksManifestPath
systemLostModeRequestPath
Identifier
objectID
payloadDictionary
T@"DMDPayloadMetadata",&,D,N
DMDPayloadActionOperationObservationContext
isReady
payloadContext
T@"DMDPayloadContext",&,N,V_payloadContext
subOperations
T@"NSMutableArray",&,N,V_subOperations
T@"NSMutableDictionary",&,N,V_stateDictionary
TB,N,V_requiresNetworkTether
TB,N,V_requiresUnlockedKeychain
T@"DMDConfigurationDatabase",R,N,V_database
payloadMetadataObjectID
T@"NSManagedObjectID",R,C,N,V_payloadMetadataObjectID
assetProvidersByPayloadIdentifier
T@"NSDictionary",C,N,V_assetProvidersByPayloadIdentifier
com.apple.command
com.apple.activation
com.apple.asset
com.apple.configuration
requiresNetworkTether
requiresUnlockedKeychain
lastStatusReportTimestamp
stateChangeTimestamp
stateDictionary
payload
T@"DMDPayload",&,D,N
T@"NSDate",&,D,N
T@"NSDictionary",C,D,N
T@"NSDate",C,D,N
T@"NSSet",C,D,N
incomingPayloadMetadataReferences
T@,&,D,N
com.apple.dmd.operation.play-lost-mode-sound
DMDEffectivePolicies
EffectivePolicies
v12@?0@"NSPersistentStoreDescription"4@"NSError"8
identifier == %@
v12@?0@"NSManagedObjectContext"4@"NSError"8
type == %@
priority
(identifier IN %@) AND (organizationIdentifier == %@) AND (declarationIdentifier == %@)
(identifier == nil) AND (organizationIdentifier == %@) AND (declarationIdentifier == %@)
(organizationIdentifier == %@) AND (declarationIdentifier == %@)
isPersistentContainerLoaded
TB,N,V_isPersistentContainerLoaded
modificationDate
policyTypes
com.apple.private.dmd.policy
DMDPowerAssertion Queue
unknown
Trying to park a power assertion that's already parked.
Trying to unpark a power assertion that's not parked.
isParked
TB,N,V_isParked
operation
T@"NSString",&,N,V_operation
com.apple.dmd.operation.refresh-cellular-plans
http
https
request.eSIMServerURL
v12@?0@"NSNumber"4@"NSError"8
request.configurationSourceName
com.apple.dmd.operation.register-user-agent
request.listenerEndpoint
com.apple.dmd.operation.remove-app
com.apple.dmd.operation.remove-configuration
request.profile
com.apple.dmd.operation.remove-managed-book
com.apple.dmd.operation.remove-os-update
com.apple.dmd.operation.remove-profile
com.apple.dmd.operation.remove-protected-profile
com.apple.dmd.operation.remove-provisioning-profile
request.profileIdentifier
request.managingProfileIdentifier
com.apple.dmd.operation.request-airplay-mirroring
com.apple.dmd.operation.restart-device
dmd restart device
com.apple.dmd.operation.schedule-os-update
com.apple.dmd.operation.send-event
request.inRepyTo
request.eventType
Task Server: %@
Policy Server: %@
sharedServer
T@"DMDServer",R,N
taskServerListenerDelegate
T@"DMDTaskServerListenerDelegate",R,N,V_taskServerListenerDelegate
policyServerListenerDelegate
T@"DMDPolicyServerListenerDelegate",R,N,V_policyServerListenerDelegate
policyServerListener
T@"NSXPCListener",R,N,V_policyServerListener
taskServerDelegate
T@"DMDTaskServerDelegate",R,N,V_taskServerDelegate
taskOperationServiceListener
T@"NSXPCListener",R,N,V_taskOperationServiceListener
policyPersistence
T@"DMDPolicyPersistence",R,N,V_policyPersistence
com.apple.dmd.operation.set-app-analytics-enabled
com.apple.dmd.operation.set-app-configuration
com.apple.dmd.operation.set-app-vpn-uuid
com.apple.dmd.operation.set-bluetooth-enabled
com.apple.dmd.operation.set-data-roaming-enabled
com.apple.dmd.operation.set-declarations
request.organizationIdentifier
request.syncToken
com.apple.dmd.operation.set-device-name
com.apple.dmd.operation.set-diagnostic-submission-enabled
request.declarationIdentifier
request.type
declarationIdentifier
policy
identifiers
T@"NSString",C,N,V_declarationIdentifier
Ti,N,V_policy
TI,N,V_priority
T@"NSArray",C,N,V_identifiers
com.apple.dmd.operation.set-maximum-resident-users
com.apple.dmd.operation.set-passcode-lock-grace-period
com.apple.dmd.operation.set-personal-hotspot-enabled
com.apple.dmd.operation.set-voice-roaming-enabled
com.apple.dmd.operation.set-wallpaper
request.imageURL
com.apple.dmd.operation.shut-down-device
dmd shut down device
com.apple.dmd.operation.stop-airplay-mirroring
com.apple.dmd.operation.stop-managing-app
com.apple.dmd.operation.stop-managing-books
organization.identifier = %@
date
OSUpdate
defaultProductKey
sharedInstallTask
T@"DMDSUManagerInstallTask",R,N
T@"DMDTaskOperationContext",&,N,V_context
T@"DMDConfigurationEngine",&,N,V_configurationEngine
clientBundleIdentifier
T@"NSString",C,N,V_clientBundleIdentifier
TI,N,V_uid
runAsUser
TB,N,V_runAsUser
%@.%p.concurrent
%@.%p.serial
Device state:
DMD serial operations:
DMD concurrent operations:
Configuration engine:
Process is missing entitlement "%@"
DMFServerErrors
application-identifier
^DM[DF](\w+)Request$
DMD%@Operation
runConcurrently
runOnMainThread
T@"DMDTaskOperationContext",&,N
configurationEngine
T@"DMDConfigurationEngine",&,N
whitelistedClassesForRequest
T@"NSSet",R,N
requiredEntitlements
T@"NSArray",R,N
FetchConfigurationOrganizations
FetchOrganizations
FetchGlobalRestrictions
FetchRestrictions
FetchInstalledCertificates
FetchCertificates
FetchInstalledProfiles
FetchProfiles
FetchInstalledProvisioningProfiles
FetchProvisioningProfiles
LogoutUser
LogOutUser
MDMv1UpdateApp
UpdateApp
concurrentOperationQueue
T@"CATOperationQueue",R,N,V_concurrentOperationQueue
serialOperationQueue
T@"CATOperationQueue",R,N,V_serialOperationQueue
deviceStateObserver
T@"DMDDeviceStateObserver",R,N,V_deviceStateObserver
T@"DMDConfigurationEngine",R,N,V_configurationEngine
isMigrationFinished
TB,N,V_isMigrationFinished
taskServer
T@"CATTaskServer",R,N,V_taskServer
com.apple.event.management.test
com.apple.dmd.operation.trigger-diagnostics
com.apple.dmd.operation.unregister-user-agent
request.appleID
com.apple.dmd.operation.update-app
App Update
Update
Dismiss
didPromptUser
TB,N,V_didPromptUser
com.apple.dmd.operation.enqueue-commands
T@"NSUUID",R,C,N,V_identifier
header
T@"NSString",C,N,V_header
message
T@"NSString",C,N,V_message
defaultButtonTitle
T@"NSString",C,N,V_defaultButtonTitle
alternateButtonTitle
T@"NSString",C,N,V_alternateButtonTitle
otherButtonTitle
T@"NSString",C,N,V_otherButtonTitle
displayWhenLocked
TB,N,V_displayWhenLocked
timeout
Td,N,V_timeout
T@"DMDUserNotificationController",R,N
T@"CATOperationQueue",R,N,V_queue
notifications
T@"NSMutableArray",R,N,V_notifications
completionsByIdentifier
T@"NSMutableDictionary",R,N,V_completionsByIdentifier
com.apple.dmd.operation.validate-applications
installationState
VPNUUIDString
configuration
feedback
managementInformation
externalVersionIdentifier
version
shortVersion
staticUsage
dynamicUsage
onDemandResourcesUsage
sharedUsage
isPlaceholder
isRestricted
isBlocked
isUserBasedVPP
isLicenseExpired
isLicenseRevoked
isDeviceBasedVPP
isUPP
isValidated
isAppStoreVendable
isBetaApp
isAdHocCodeSigned
hasUpdateAvailable
dmd_sha1Hash
ConfigurationEngine
Database
Policies
Images
Font
Configurations
CEMFontAssetInstallMetadata
CEMAssetProvider
NSObject
NSSecureCoding
NSCoding
CEMFontInstallOperation
DMDRemoteAssetResolutionContext
CEMFontRemoveOperation
DMDAdditions
DMDOperationProvidingAsset
CEMImageAssetInstallMetadata
CEMImageInstallOperation
CEMImageRemoveOperation
DMDAccountUtilities
DMDActivationBudgetObserver
DMDActivationCurfewObserver
DMDActivationiCloudAccountObserver
DMDActivationOneTimeObserver
DMDActivationPayloadMetadata
DMDActivationPredicateAll
DMDActivationPredicateAny
DMDActivationPredicateCompound
DMDActivationPredicateFalse
DMDActivationPredicateNot
DMDActivationPredicateObserver
DMDActivationPredicateObserverManager
DMDActivationPredicateObserverDelegate
DMDActivationPredicateTrue
DMDActivityTransactionOperation
DMDAirPlayManager
DMDAppController
DMDAppLifeCycleObserving
DMDAppLifeCycle
DMDiphoneOSAppLifeCycle
LSApplicationWorkspaceObserverProtocol
DMDAppMetadata
DMDAppOperation
DMDAssetActionOperation
DMDAssetInstallOperation
DMDAssetPayloadMetadata
DMDAssetRemoveOperation
DMDBeginTransactionOperation
DMDBlockOperation
DMDClearActivationLockBypassCodeOperation
DMDClearDevicePasscodeOperation
DMDClearRestrictionsPasswordOperation
DMDCommandActionOperation
DMDCommandExecuteOperation
DMDCommandPayloadMetadata
DMDCommandRemoveOperation
DMDConfigurationActionOperation
DMDRequestProvidingCommand
DMDRequestProvidingConfiguration
DMDConfigurationCapabilities
DMDConfigurationDatabase
DMDConfigurationEngine
DMDActivationPredicateObserverManagerDelegate
DMDConfigurationOrganizationControllerDelegate
DMDConfigurationSourceControllerDelegate
DMDEngineDatabaseProcessingOperationDelegate
DMDEngineRegisterConfigurationSourceOperationDelegate
DMDConfigurationInstallOperation
DMDConfigurationOrganization
DMDConfigurationOrganizationController
DMDRemoteAssetResolver
DMDConfigurationPayloadMetadata
DMDConfigurationRemoveOperation
DMDConfigurationReplaceOperation
DMDConfigurationSource
DMDConfigurationSourceAssetResolveOperation
DMDConfigurationSourceController
DMDConfigurationSourceEventsOperation
DMDConfigurationSourceRepresentation
DMDConfigurationSourceStatusUpdateOperation
DMDConfigurationSourceTaskOperation
DMDCreateConfigurationOrganizationOperation
DMDDeactivateConfigurationOrganizationOperation
DMDDeclarationActionOperation
DMDDeclarationPayloadMetadata
DMDDeleteUserOperation
DMDDeviceController
DMDiphoneOSDeviceController
DMDDeviceStateObserver
DMDDeviceStateProvider
DMDDisableLostModeOperation
DMDEchoOperation
DMDEffectivePolicy
DMDEnableLostModeOperation
DMDEndTransactionOperation
DMDEngineCreateConfigurationOrganizationOperation
DMDEngineDatabaseInitializationOperation
DMDEngineDatabaseOperation
DMDEngineDatabaseProcessingOperation
DMDEngineDeactivateConfigurationOrganizationOperation
DMDEngineFetchDeclarationsOperation
DMDEngineProcessStatusOperation
DMDEngineRefreshStatusOperation
DMDEngineRegisterConfigurationSourceOperation
DMDEngineSetDeclarationsOperation
DMDEngineUpdateCommandsOperation
DMDEngineUpdateDeclarationsOperation
DMDEraseDeviceOperation
DMDEventReportingSchedule
DMDEventStreamEvent
DMDEventSubscriptionManager
DMDEventSubscriptionRegistration
DMDEventSubscriptionRegistrationController
DMDFetchActivationLockBypassCodeOperation
DMDFetchAppsOperation
DMDFetchAvailableOSUpdatesOperation
DMDFetchCertificatesOperation
iphoneOS
DMDFetchClassroomInstructorEndpointOperation
DMDFetchConfigurationSourceSyncTokenOperation
DMDFetchDeclarationCapabilitiesOperation
DMDFetchDeclarationsOperation
DMDFetchDevicePropertiesOperation
DMDFetchDeviceUnlockTokenOperation
DMDFetchDMDStateOperation
DMDFetchLocationOperation
DMDFetchManagedBooksOperation
DMDFetchOrganizationsOperation
DMDFetchOSUpdateStatusOperation
DMDFetchProfilesOperation
DMDFetchProvisioningProfilesOperation
DMDFetchRestrictionsOperation
DMDFetchSafariBookmarksOperation
DMDFetchSecurityInformationOperation
DMDFetchStreamEventsOperation
DMDFetchUsersOperation
DMDInstallAppOperation
DMDInstallConfigurationOperation
DMDInstallEventSubscriptionOperation
DMDInstallEventSubscriptionRequest
DMDInstallManagedBookOperation
DMDInstallProfileOperation
DMDInstallProvisioningProfileOperation
DMDInviteUserToVPPOperation
DMDLockDeviceOperation
DMDLockdownUtilities
DMDLogOutUserOperation
DMDMDMUtilities
DMDMDMv1InstallAppOperation
DMDMDMv1StartManagingAppOperation
DMDMobileGestalt
DMDNetworkTetherUtilities
DMDOpenAppOperation
DMDOpenURLOperation
DMDPaths
DMDPayload
DMDPayloadActionOperation
DMDPayloadContext
DMDPayloadMetadata
DMDPlayLostModeSoundOperation
DMDPolicyPersistence
DMFPolicyRemoteInterface
DMDPolicyRegistration
DMDPolicyServerListenerDelegate
DMDUserSwitchStakeholder
DMDPowerAssertion
DMDProcessDeclarationsOperation
DMDProcessStatusOperation
DMDRefreshCellularPlansOperation
DMDRefreshStatusOperation
DMDRegisterConfigurationSourceOperation
DMDRegisterUserAgentOperation
DMDRemoveAppOperation
DMDRemoveConfigurationOperation
DMDRemoveEffectivePolicyOperation
DMDRemoveEffectivePolicyRequest
DMDRemoveEventSubscriptionOperation
DMDRemoveEventSubscriptionRequest
DMDRemoveManagedBookOperation
DMDRemoveOSUpdateOperation
DMDRemoveProfileOperation
DMDRemoveProtectedProfileOperation
DMDRemoveProvisioningProfileOperation
DMDRequestAirPlayMirroringOperation
DMDRestartDeviceOperation
DMDScheduleOSUpdateOperation
DMDSendEventOperation
DMDServer
DMDSetAppAnalyticsEnabledOperation
DMDSetAppConfigurationOperation
DMDSetAppVPNUUIDOperation
DMDSetBluetoothEnabledOperation
DMDSetDataRoamingEnabledOperation
DMDSetDeclarationsOperation
DMDSetDeviceNameOperation
DMDSetDiagnosticSubmissionEnabledOperation
DMDSetEffectivePolicyOperation
DMDSetEffectivePolicyRequest
DMDSetMaximumResidentUsersOperation
DMDSetPasscodeLockGracePeriodOperation
DMDSetPersonalHotspotEnabledOperation
DMDSetVoiceRoamingEnabledOperation
DMDSetWallpaperOperation
DMDShutDownDeviceOperation
DMDStopAirPlayMirroringOperation
DMDStopManagingAppOperation
DMDStopManagingBooksOperation
DMDSubscriptionEvent
DMDSUManagerInstallTask
DMDTaskOperation
DMDTaskOperationContext
DMDTaskOperationProtocol
DMDTaskServerDelegate
DMDConfigurationEngineDelegate
CATTaskServerDelegate
DMDTaskOperationProvider
DMDiPhoneOSTaskServerDelegate
DMDTaskServerListenerDelegate
NSXPCListenerDelegate
DMDTestEventStream
DMDEventTypeStream
DMDTriggerDiagnosticsOperation
DMDUnregisterUserAgentOperation
DMDUpdateAppOperation
DMDUpdateDeclarationsOperation
DMDUpdateEnqueuedCommandsOperation
DMDUserNotification
DMDUserNotificationController
DMDValidateApplicationsOperation
BundleIdentifier
LSApplicationProxy
SecCertificateRef
MCProfile
MISProfileRef
DMDMappedMemory
DMDUtilities
DMDLegacy
B8@0:4
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4@8
@12@0:4@8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@"NSURL"8@0:4
@"NSData"8@0:4
@"NSNumber"8@0:4
v8@0:4
@"NSURL"
v12@0:4@"NSURL"8
v12@0:4@"NSError"8
@"CEMAssetBaseDescriptor"8@0:4
@"CEMAssetBaseReference"8@0:4
@16@0:4@8@12
@"CEMFontDeclaration"
@"<DMDRemoteAssetResolver>"
@"CEMFontAssetInstallMetadata"
@16@0:4@8^@12
@"CATOperation"16@0:4@"<DMDRemoteAssetResolver>"8^@12
@"CATOperation"16@0:4@"NSDictionary"8^@12
@"CEMImageDeclaration"
@"CEMImageAssetInstallMetadata"
q12@0:4@8
@"USBudget"
@"USUsageMonitor"
@20@0:4@8@12@16
@12@0:4^@8
d8@0:4
@28@0:4@8i12i16i20i24
i8@0:4
v12@0:4i8
@"NSCalendar"
@"NSString"
@"NSArray"
@"DMDActivationPredicateObserver"
@"<DMDActivationPredicateObserverDelegate>"
v12@0:4@"DMDActivationPredicateObserver"8
@"<DMDActivationPredicateObserverManagerDelegate>"
@"NSMutableDictionary"
@"NSObject<OS_os_transaction>"
B40@0:4@8@12@16d20I28B32^@36
B16@0:4I8^@12
^v12@0:4I8
B24@0:4@8I12@16^@20
@24@0:4@8d12^@20
@24@0:4@8d12I20
v12@0:4@"DMDAppLifeCycle"8
B20@0:4@8@12^@16
B12@0:4^@8
v24@0:4@8@12I16@20
I12@0:4@8
B20@0:4I8@12^@16
@"DMFOSStateHandler"
@16@0:4@8I12
@"NSProgress"
@"NSPointerArray"
@"NSObject<OS_dispatch_queue>"
@"CATStateMachine"
v16@0:4@8@12
v12@0:4B8
v12@0:4@"NSArray"8
v16@0:4@"NSArray"8@"NSArray"12
v16@0:4@8@?12
@"NSNumber"
@12@0:4@?8
@?8@0:4
v12@0:4@?8
B16@0:4@8^@12
@"CATTaskRequest"16@0:4@"DMDPayloadContext"8^@12
@"CATOperation"16@0:4@"DMDPayloadContext"8^@12
@"NSDictionary"16@0:4@"CATTaskResultObject"8@"DMDPayloadContext"12
@16@0:4#8@12
v16@0:4@"DMDActivationPredicateObserverManager"8@"NSString"12
v16@0:4@"DMDConfigurationSourceController"8@?<v@?@"NSDictionary"@"NSError"@?<v@?@"NSError">>12
@"NSArray"16@0:4@"DMDEngineDatabaseProcessingOperation"8@"NSString"12
@"<DMDRemoteAssetResolver>"16@0:4@"DMDEngineDatabaseProcessingOperation"8@"NSString"12
v16@0:4@"DMDEngineRegisterConfigurationSourceOperation"8@"<DMDConfigurationSource>"12
v20@0:4@8@12@?16
@"<DMDConfigurationEngineDelegate>"
@"NSObject<DMDDeviceStateProvider>"
@"NSObject<DMDTaskOperationProvider>"
@"DMDActivationPredicateObserverManager"
@"DMDConfigurationDatabase"
@"CATOperationQueue"
@"NSError"
@"DMDEngineDatabaseInitializationOperation"
@"CATOperation"
@"DMDEventSubscriptionManager"
v12@0:4@"<DMDRemoteAssetResolutionContext>"8
@"<DMDConfigurationOrganizationControllerDelegate>"
v12@0:4@"NSString"8
@"NSXPCListenerEndpoint"8@0:4
v12@0:4@"NSXPCListenerEndpoint"8
@"DMFReportingRequirements"8@0:4
v12@0:4@"DMFReportingRequirements"8
@"<DMDRemoteAssetResolutionContext>"
@"<DMDConfigurationSourceControllerDelegate>"
@"CATSerialOperationQueue"
@"DMDConfigurationSourceRepresentation"
@"NSXPCListenerEndpoint"
@"DMFReportingRequirements"
@"DMDConfigurationSourceController"
@"NSXPCConnection"
@24@0:4@8@12@16^@20
@"DMFCreateConfigurationOrganizationRequest"
@28@0:4@8@12@16@20^@24
@"<DMDEngineDatabaseProcessingOperationDelegate>"
@"<DMDTaskOperationProvider>"
@"DMFDeactivateConfigurationOrganizationRequest"
@"DMFFetchDeclarationsRequest"
@"<DMDEngineRegisterConfigurationSourceOperationDelegate>"
@"DMFRegisterConfigurationSourceRequest"
@"DMFSetDeclarationsRequest"
@"DMFUpdateEnqueuedCommandsRequest"
@"DMFUpdateDeclarationsRequest"
@"NSTimer"
@"NSDictionary"
@16@0:4@8@?12
@"DMDEventReportingSchedule"
@"NSDate"
v20@0:4@8I12@?16
I16@0:4^d8@12
@12@0:4i8
@"CEMEventSubscriptionDeclaration"
B16@0:4B8@12
@"DMDAppMetadata"
v24@0:4@8@12@16^v20
@"NSManagedObjectID"
@"DMDPayloadContext"
v16@0:4@"DMFPolicyRegistration"8@?<v@?@"NSDictionary"@"NSError">12
v16@0:4@"NSArray"8@?<v@?@"NSDictionary"@"NSError">12
v36@0:4i8@12@16I20@24@28@?32
B40@0:4i8@12@16I20@24@28@32@36
@"NSPersistentContainer"
v20@0:4@8i12@?16
@"DMDTaskServerDelegate"
@"NSXPCListener"
@"DMDPolicyPersistence"
@"DMDTaskServerListenerDelegate"
@"DMDPolicyServerListenerDelegate"
v12@0:4I8
@20@0:4@8B12^@16
@"DMDTaskOperationContext"
@"DMDTaskOperationContext"8@0:4
v12@0:4@"DMDTaskOperationContext"8
@"DMDConfigurationEngine"8@0:4
v12@0:4@"DMDConfigurationEngine"8
@"NSSet"8@0:4
@"NSArray"8@0:4
v20@0:4@8@12@16
B20@0:4@8@12@16
v24@0:4@8@12@16@20
@"CATTaskOperation"24@0:4@"CATTaskServer"8@"CATTaskSession"12@"CATTaskRequest"16^@20
v20@0:4@"CATTaskServer"8@"CATTaskSession"12@"NSError"16
B20@0:4@"CATTaskServer"8@"CATTaskSession"12@"CATTransport"16
v24@0:4@"CATTaskServer"8@"CATTaskSession"12@"NSString"16@"NSDictionary"20
v20@0:4@"CATTaskServer"8@"CATTaskSession"12@"NSOperation"16
v16@0:4@"CATTaskServer"8@"CATTaskSession"12
v12@0:4@"CATTaskServer"8
#16@0:4@8^@12
#16@0:4@"CATTaskRequest"8^@12
v20@0:4@"CATOperation"8@"DMDTaskOperationContext"12@"DMDConfigurationDatabase"16
@28@0:4@8I12@16@20^@24
@"DMDDeviceStateObserver"
@"DMDConfigurationEngine"
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@"CATTaskServer"
v12@0:4@"CEMEventBase"8
v12@0:4@?<v@?@"NSArray">8
@"DMDEventStreamEvent"12@0:4@"NSDate"8
v16@0:4I8@12
^{__CFUserNotification=}8@0:4
v12@0:4^{__CFUserNotification=}8
v16@0:4d8
^{__CFUserNotification=}
@"NSUUID"
v16@0:4@8I12
v16@0:4^{__CFUserNotification=}8L12
@"NSMutableArray"
@20@0:4@8B12@16
@16@0:4^{__SecCertificate=}8B12
@24@0:4@8B12@16@20
Request validation failed for installing profile: %{public}@
Request validation failed for removing profile: %{public}@
font asset data is nil
image asset data is nil
Request validation failed for setting policy: %{public}@
Request validation failed for removing policy: %{public}@
Failed checking status of usage monitor with budget identifier: %{public}@, error: %{public}@
Succeeded checking status of usage monitor with budget identifier: %{public}@
Timed out checking the status of budget with identifier: %{public}@
Budget with identifier: %{public}@ evaluated predicate: %{public}@
Failed stopping usage monitor with budget identifier: %{public}@, error: %{public}@
Succeeded stopping usage monitor with budget identifier: %{public}@
Budget with identifier: %{public}@ extracted calendar identifier: %{public}@, budget type: %ld, budgeted identifiers: %{public}@, budget schedule %{public}@
Failed starting usage monitor with budget identifier: %{public}@, error: %{public}@
Succeeded starting usage monitor with budget identifier: %{public}@
Curfew with identifier: %{public}@ evaluated predicate: %d, next start date: %{public}@, next end date: %{public}@, now: %{public}@
Curfew with identifier: %{public}@ failed to extract predicate
Curfew with identifier: %{public}@ extracted calendar identifier: %{public}@, start day: %ld, start hour: %ld, start minute: %ld, start second: %ld, end day: %ld, end hour: %ld, end minute: %ld, end second: %ld
Curfew with identifier: %{public}@ failed to calculate the interval to next curfew boundary because the next start and end dates are the same
Curfew with identifier: %{public}@ calculated time interval to next curfew boundary: %ld
iCloud account predicate observer with unique identifier: %{public}@ evaluated predicate: %d, DSID %{public}@, primary account DSID %{public}@
iCloud account predicate observer with unique identifier: %{public}@ extracted DSID: %{public}@
OneTime with identifier: %{public}@ evaluated predicate: %d, end date: %{public}@, now: %{public}@
OneTime with identifier: %{public}@ extracted duration: %f, end date: %{public}@, now: %{public}@
Compound predicate observer (all) with identifier: %{public}@ evaluated predicate: %d
Compound predicate observer (any) with identifier: %{public}@ evaluated predicate: %d
Not predicate observer with unique identifier: %{public}@ evaluated predicate: %d
Received xpc event stream notification (notify matching) with name: %{public}s
Received notifyd budget notification
Failed to register for notifyd budget notifications
Received xpc event stream notification (alarm) with name: %{public}s
Received iCloud account did change notification
Could not read app management plist at path: %{public}@, error: %{public}@
Get bundle identifier for manifest URL from: %{public}@
Get bundle identifier for request: %{public}@
Get bundle identifier for store item identifier: %{public}@
Get metadata for non-enterprise app request: %{public}@
Could not write app management plist, error: %{public}@
Could not write app management plist, unknown error
Set VPN UUID for bundle identifier: %{public}@
Set VPN UUID, configuration, and management information for bundle identifier: %{public}@
Could not set VPN UUID for app: %{public}@, error: %{public}@
Could not set configuration for app: %{public}@, error: %{public}@
Could not set management options for bundle identifier: %{public}@, error: %{public}@
Set state: %{public}@, for bundle identifier: %{public}@
Advance transient app states
Could not remove management information for bundle identifier: %{public}@, error: %{public}@
Could not set state to %{public}@ for bundle identifier: %{public}@, error: %{public}@
Could not set management information for bundle identifier: %{public}@, error: %{public}@
Clean up stale app states
Observed change in life cycle of bundle identifier: %{public}@
Could not set new state: %{public}@, for bundle identifier: %{public}@, error: %{public}@
Set metadata for bundle identifier: %{public}@
Could not write management info to disk for bundle identifier: %{public}@
Get metadata for manifest URL from: %{public}@
App requests must have only one of bundle identifier, store item identifier, or manifest URL
%{public}@: Failed to initialize configuration payload for asset: %{public}@
%{public}@: Asset class (%{public}@) does not implement %{public}@
%{public}@: Failed to initialize install operation for asset payload: %{public}@
%{public}@: Asset will install
%{public}@: Asset install operation failed: %{public}@
%{public}@: Installed asset successfully
%{public}@: Uninstalled asset did remove successfully
%{public}@: Failed to initialize remove operation for installed asset payload: %{public}@
%{public}@: Installed asset will be removed
%{public}@: Failed to remove asset: %{public}@
%{public}@: Removed asset successfully
DMFBeginTransactionRequest is deprecated please use DMDActivityTransactionOperation instead
%{public}@: Failed to initialize configuration payload for command: %{public}@
%{public}@: Failed to create operation from request for command execution: %{public}@
%{public}@: Failed to create request for command execution: %{public}@
%{public}@: Execute command will start
%{public}@: Execute command failed: %{public}@
%{public}@: Executed command successfully
Failed to initialize command payload for command removal %{public}@: %{public}@
Command did remove successfully %{public}@
Failed to send %lu events from subscription manager
Successfully sent %lu events from subscription manager
Engine did resume
Engine will suspend
Engine enqueuing operation to set declarations from %{public}@
Engine enqueuing operation to update declarations from %{public}@
Engine enqueuing operation to fetch declarations for %{public}@
Failed to clear failed state for existing declarations: %{public}@
process status operation failed with error: %{public}@
Failed to fetch payload metadata corresponding to %{public}@
Failed to save subscription to database %{public}@
Failed to fetch registration corresponding to %{public}@
Failed to delete subscription from database %{public}@
Could not fetch organizations from database: %{public}@
Could not find organization with identifier: %{public}@
Failed to save event in database: %{public}@
Engine will suspend due to error: %{public}@
Engine enqueuing operation to process pending declarations in database
Database processing operation failed with error: %{public}@
Failed to load organizations from database: %{public}@
Failed to update subscription registrations: %{public}@
failed to fetch declarations pending status update %{public}@
failed to update status %{public}@
failed to fetch declarations to update their lastStatusUpdateTimestamp %{public}@
failed to save last updated timestamp in database %{public}@
declaration update operation failed with error: %{public}@
status update operation failed with error: %{public}@
Failed to fetch queued events for organization '%{public}@': %{public}@
failed to send event %{public}@
failed to delete events from database: %{public}@
Registering new configuration source %{public}@
Re-registering configuration source %{public}@
%{public}@: Failed to initialize configuration payload for configuration install: %{public}@
%{public}@: %{public}@ does not conform to %{public}@
%{public}@: Failed to create request for configuration install: %{public}@
%{public}@: Failed to create operation from request for configuration install for %{public}@
%{public}@: Configuration will install
%{public}@: Configuration failed install: %{public}@
%{public}@: Configuration did install successfully 
%{public}@ does not respond to %{public}@
%{public}@: Failed to initialize configuration payload for configuration remove: %{public}@
%{public}@: Uninstalled configuration did remove successfully
%{public}@: Failed to create request for installed configuration remove: %{public}@
%{public}@: Installed configuration did remove successfully
%{public}@: Failed to create operation from request for installed configuration removal: %{public}@
%{public}@: Installed configuration will remove
%{public}@: Configuration failed remove: %{public}@
%{public}@: Configuration did remove successfully
%{public}@: Failed to initialize configuration payload for configuration replace: %{public}@
%{public}@: Failed to create request for configuration replace: %{public}@
%{public}@: Failed to create configuration replace operation for request: %{public}@
%{public}@: Configuration will replace
%{public}@: Configuration failed replace: %{public}@
%{public}@: Configuration did replace successfully
%{public}@ failed to initate connection to resolve asset %{public}@: %{public}@
%{public}@ failed to resolve asset %{public}@: %{public}@
%{public}@ successfully resolved asset %{public}@
Reporting status to %{public}@
Reporting events to %{public}@
delegate does not conform to %{public}@
%{public}@ failed to fetch events %{public}@
%{public}@ skipping events because there are no updates to report
%{public}@ failed to send events remote proxy could not be created: %{public}@
%{public}@ failed to send events: %{public}@
%{public}@ successfully sent events
%{public}@ failed to fetch status update %{public}@
%{public}@ skipping status update because there are no updates to report
%{public}@ failed to send status updates remote proxy coun't be created: %{public}@
%{public}@ failed to send status updates: %{public}@
%{public}@ successfully sent status updates
Connected successfully to anonymous connection
Connected successfully to named connection
DMFEndTransactionRequest is deprecated please use DMDActivityTransactionOperation instead
failed to fetch organizations of type 
%{public}@
: %{public}@
organization of type %{public}@ already exists: %{public}@
failed to fetch existing organizations with identifier 
%{public}@
: %{public}@
organization with identifier 
%{public}@
 already exists
failed to load persistent stores: %{public}@
successfully loaded configuration database
removing legacy database...
failed to remove legacy database: %{public}@
deleted legacy database
unable to load persistent store %{public}@: %{public}@
successfully loaded persistent store: %{public}@
failed exclude persistent store from backup %{public}@: %{public}@
persistent store %{public}@ has not been fixed up yet
checking database for deprecated class
configuration database has been deprecated, destroying persistent stores and reloading
unable to remove persistent store %{public}@: %{public}@
%{public}@ failed to fetch configuration organizations: %{public}@
Deleting deactivated organization %@
%{public}@ preprocessing failed: %{public}@
Processing operation failed to commit changes: %{public}@
Failed to preproccess database while fetching all payloads: %{public}@
%{public}@: Failed to deserialize configuration engine model: %{public}@
Failed to fetch asset with identifier (%{public}@): %{public}@
Processing: Failed to fetch commands to execute %{public}@
%{public}@: Cancelling enqueued %{public}@ so we can enqueue an execute command operation
Processing: Failed to fetch commands to remove %{public}@
%{public}@: Cancelling enqueued %{public}@ so we can enqueue an remove command operation
Processing: Failed to fetch commands to delete %{public}@
--- Commands pending execution ---
--- Commands pending removal ---
--- Commands pending deletion ---
--- Enqueued command action operations ---
%{public}@
Failed to process activations: %{public}@
Failed to parse activation payload (%{public}@): %{public}@
Failed to evaluate activation predicate with unique identifier %{public}@ for organization (%{public}@): %{public}@
Failed to create activation predicate observer with unique identifier %{public}@ for organization (%{public}@)
Failed to fetch available configurations for organization (%{public}@): %{public}@
Unknown activation type: %{public}@
Processing: Failed to fetch declarations pending removal %{public}@
Remove %{public}@: Declaration remove operation already enqueued, skipping
Remove %{public}@: Cancelling enqueued %{public}@ so we can enqueue a remove operation
Enqueued remove operation: %{public}@
Install %{public}@: Declaration install operation already enqueued, skipping
Install %{public}@: Cancelling enqueued %{public}@ so we can enqueue an install operation
Enqueued configuration install operation: %{public}@
Install %{public}@: Cancelling enqueued %{public}@ so we can enqueue an asset install operation
Enqueued asset install operation: %{public}@
Processing: Failed to fetch declarations pending install %{public}@
Processing: Failed to fetch declarations pending delete %{public}@
--- Declarations pending install ---
--- Declarations pending removal ---
--- Declarations pending deletion ---
--- Enqueued declaration action operations ---
Failed to fetch payload metadata for organization %{public}@
Refreshed %lu status items for organization %{public}@
Failed to fetch existing declarations: %{public}@
Failed to initialize declarations: %{public}@
Start set declarations for %{public}@
Declaration already present, skipping: %{public}@
Failed to instantiate payload metadata from payload dictionary: %{public}@
Failed to save changes: %{public}@
Failed to fetch existing declarations for removal: %{public}@
Marking configuration for removal: %{public}@
Failed to fetch existing declarations for update: %{public}@
Failed to initialize declarations for update: %{public}@
Declaration already installed, skipping: %{public}@
Unknown event stream frequency %{public}@, defaulting to Daily
Unknown event stream type %{public}@, skipping
Could not delete feedback for bundle identifier: %{public}@
fetch-available-os-updates starting
fetch-available-os-updates: product version = %@, use delay = %@
fetch-available-os-updates done
fetch-os-update-status starting
fetch-os-update-status done
Start installing enterprise app with manifest URL from: %{public}@
Start installing non-enterprise app for request: %{public}@
Could not serialize profile: %{public}@
Could not retrieve restrictions dictionary from payload: %{public}@
Could not process restriction heuristics for payload: %{public}@
Could not apply restrictions: %{public}@
Error excluding %{public}@ from backup. Path does not exist.
Error excluding %{public}@ from backup %{public}@
Unknown device type %{private}@
Failed to get profiles system group container
Failed to get managed books system group container
System group container for %{public}@ path is %{public}s
Error getting system group container for %{public}@: %llu
Payload has invalid type prefix (%{public}@) defaulting to generic payload metadata
Failed to fetch organization matching identifier (%{public}@): %{public}@
Could not load effective policy persistent store, the device is locked, unlock it and this should never happen again.
Could not load effective policy persistent store, will destroy and try a clean store: %{public}@
Failed to load persistent store %{public}@: %{public}@
Failed to destroy persistent store %{public}@: %{public}@
Could not exclude persistent store from backup: %{public}@
Error fetching existing policy registration: %{public}@
Updating existing registration %{public}@ with identifier %{public}@
Adding new registration %{public}@ with identifier %{public}@
Error saving policy registration %{public}@: %{public}@
Error fetching existing policy value: %{public}@
Error fetching existing policies: %{public}@
Error saving policies: %{public}@
Updating existing policy %{public}@ of type %{public}@ identifier %{public}@
Adding new policy %{public}@ of type %{public}@
Successfully removed policy types %{public}@ for declaration %{public}@
Could not remove policies types %{public}@ for declaration %{public}@: %{public}@
Posting notification for registration %{public}@
Error fetching registrations to notify: %{public}@
Client %@ does not have required com.apple.private.dmd.policy entitlement
Beginning power assertion, operation: %{public}@
Ending power assertion, operation: %{public}@
unable to register configuration source because client doesn't have a valid entitlement for application-identifier
Could not remove VPN UUID for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove configuration for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Could not remove management information for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Remove app with bundle identifier: %{public}@
Cancel app installation with bundle identifier: %{public}@
Start uninstalling app with bundle identifier: %{public}@
Cancel app update with bundle identifier: %{public}@
Could not remove restrictions: %{public}@
remove-os-update starting
remove-os-update done
schedule-os-update starting
schedule-os-update requesting an update with a specific PMV: %@
schedule-os-update requesting an update with any PMV
schedule-os-update done
Shut down.
Operation will start: %{public}@
Operation will finish: %{public}@
Operation did finish: %{public}@
Starting
Could not get operation class for request: %{public}@
Received request: %{public}@, from client: %{public}@
Connected %{public}@
Disconnected %{public}@
Invalidated %{public}@
Interrupted %{public}@: %{public}@
Notification %{public}@: %{public}@ %{public}@
Add operation: %{public}@
Declaration engine did resume
Declaration engine did suspend
Notified of locale change. Exiting when clean.
Resume update for bundle identifier: %{public}@
Start updating app for request: %{public}@
Show user update failure prompt
Could not mark app state as %{public}@ for bundle identifier: %{public}@
Not displaying notification in limited app mode
Start user notification: %{public}@
Adding user notification: %{public}@
Could not get notification ref for user notification.
Could not get run loop source for user notification: %{public}@
User notification started: %{public}@
Removing user notification: %{public}@
User notification ended: %{public}@
Could not get file information
Memory mapping failed
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>17A405001</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>dmd</string>
<key>CFBundleExecutable</key>
<string>dmd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.dmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>20.33</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>5.0</string>
<key>DTSDKBuild</key>
<string>16R5283d</string>
<key>DTSDKName</key>
<string>watchsimulator5.0</string>
<key>DTXcode</key>
<string>1000</string>
<key>DTXcodeBuild</key>
<string>10N162a</string>
<key>MinimumOSVersion</key>
<string>5.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
<integer>3</integer>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>application-identifier</key>
<string>com.apple.dmd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.BTServer.allowRestrictedServices</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
<string>vinyl-standalone</string>
</array>
<key>com.apple.Contacts.database-allow</key>
<true/>
<key>com.apple.GAX.SPI</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.appstored.private</key>
<true/>
<key>com.apple.appstored.xpc.updates</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.avfoundation.allows-set-output-device</key>
<true/>
<key>com.apple.bulletinboard.settings</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.frontboard.wipedevice</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.ibooks.BLService.private</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.managedconfiguration.teslad-access</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>DeviceClass</string>
<string>ProductType</string>
<string>ProductVersion</string>
<string>BuildVersion</string>
<string>SerialNumber</string>
<string>ModelNumber</string>
<string>UniqueDeviceID</string>
<string>UserAssignedDeviceName</string>
<string>DiskUsage</string>
<string>TelephonyCapability</string>
<string>CellularDataCapability</string>
<string>PersonalHotspotCapability</string>
<string>PhoneNumber</string>
<string>EthernetMacAddress</string>
<string>BluetoothAddress</string>
<string>WifiAddress</string>
<string>WifiAddressData</string>
<string>MobileSubscriberCountryCode</string>
<string>MobileSubscriberNetworkCode</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.donotdisturb.state.request.client-identifiers</key>
<string>com.apple.dmd</string>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/ActivationPrivateKey</string>
<string>NULL/DevicePrivateKey</string>
<string>NULL/DeviceCertificate</string>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.usage-tracking</key>
<true/>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.wipedevice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
