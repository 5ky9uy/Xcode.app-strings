init
executeUpdateBlock
initWithQueue:updateBlock:
.cxx_destruct
_updateState
_updateBlock
_queue
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
alloc
setIdentifier:
setMetadata:
class
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasIdentifier
hasMetadata
readFrom:
writeTo:
copyTo:
identifier
metadata
_identifier
_metadata
playbackRate
numberWithFloat:
floatValue
playbackState
date
timeIntervalSinceDate:
title
_updateItemPersistentIDIfNecessary:
copy
_updateItemCompanionPersistentIDIfNecessary:
_updateItemAlbumPersistentIDIfNecessary:
_updateStoreAdamIDIfNecessary:
_updateTitleIfNecessary:
isEqualToString:
_updateArtistIfNecessary:
_updateAlbumIfNecessary:
_updateExplicitTrackIfNecessary:
_updateRadioStationNameIfNecessary:
_updateRadioStationIdentifierIfNecessary:
_updateRadioStationHashIfNecessary:
_updateAdvertisementIfNecessary:
_updateAlwaysLiveIfNecessary:
_updateArtworkImageDataIfNecessary:
_updateApplicationIconImageDataIfNecessary:
_updateFirstPartyMusicAppIfNecessary:
_updateLikeCommandSupportedIfNecessary:
_updateLikeCommandEnabledIfNecessary:
_updateLikedActiveIfNecessary:
_updateBanCommandSupportedIfNecessary:
_updateBanCommandEnabledIfNecessary:
_updateBannedActiveIfNecessary:
_updateBookmarkCommandSupportedIfNecessary:
_updateBookmarkCommandEnabledIfNecessary:
_updateBookmarkedActiveIfNecessary:
_updateFastForwardTimeIntervalIfNecessary:
_updateRewindTimeIntervalIfNecessary:
_updateAddToLibraryCommandSupportedIfNecessary:
_updateAddToLibraryCommandEnabledIfNecessary:
_updateAddToLibraryActiveIfNecessary:
elapsedTime
objectForKeyedSubscript:
isEqualToDate:
setTimestamp:
doubleValue
setDuration:
setElapsedTimeAtLastUpdate:
isPlaying
boolValue
_nowPlayingInfoIncludesLegacySupportedCommandsInfo:
applyMediaRemoteNowPlayingInfo:artwork:generalInfoChanged:elapsedTimeChanged:playbackStateChanged:applicationInfoChanged:supportedCommandsChanged:timestampChanged:
mpKeyForMRKey:
countByEnumeratingWithState:objects:count:
length
numberWithBool:
firstObject
unsignedIntegerValue
likeCommand
isSupported
isEnabled
isActive
dislikeCommand
bookmarkCommand
addNowPlayingItemToLibraryCommand
skipForwardCommand
skipBackwardCommand
preferredIntervals
nextTrackCommand
previousTrackCommand
changeShuffleModeCommand
currentShuffleType
changeRepeatModeCommand
currentRepeatType
changePlaybackRateCommand
localizedTitle
setPlaybackRate:
isFirstPartyApp
hasNowPlayingInfo
setItemPersistentID:
setItemCompanionPersistentID:
setItemAlbumPersistentID:
setStoreAdamID:
setTitle:
setArtist:
setAlbum:
setExplicitTrack:
setRadioStationName:
setRadioStationIdentifier:
setRadioStationHash:
setAdvertisement:
setAlwaysLive:
setArtworkImageData:
setApplicationIconImageData:
setFirstPartyMusicApp:
nextTrackCommandEnabled
previousTrackCommandEnabled
setLikeCommandSupported:
setLikeCommandEnabled:
setLikedActive:
setBanCommandSupported:
setBanCommandEnabled:
setBannedActive:
setBookmarkCommandSupported:
setBookmarkCommandEnabled:
setBookmarkedActive:
setFastForwardTimeInterval:
setRewindTimeInterval:
setAddToLibraryCommandSupported:
setAddToLibraryCommandEnabled:
setAddToLibraryActive:
applyMediaRemoteNowPlayingInfo:
applyMediaPlayerNowPlayingInfo:generalInfoChanged:elapsedTimeChanged:playbackStateChanged:
applyMediaRemoteSupportedCommands:
applyMediaPlayerSupportedCommandsWithCommandCenter:
timestamp
duration
setPlaybackState:
elapsedTimeAtLastUpdate
itemPersistentID
itemCompanionPersistentID
itemAlbumPersistentID
storeAdamID
artist
album
isExplicitTrack
radioStationName
radioStationIdentifier
radioStationHash
isAdvertisement
isAlwaysLive
artworkImageData
applicationDisplayName
setApplicationDisplayName:
applicationBundleIdentifier
setApplicationBundleIdentifier:
applicationIconImageData
isRepeatModeCommandSupported
setRepeatModeCommandSupported:
repeatMode
setRepeatMode:
isShuffleModeCommandSupported
setShuffleModeCommandSupported:
shuffleMode
setShuffleMode:
isPlaybackRateCommandSupported
setPlaybackRateCommandSupported:
isLikeCommandSupported
isLikeCommandEnabled
isLikedActive
localizedLikeTitle
setLocalizedLikeTitle:
isBanCommandSupported
isBanCommandEnabled
isBannedActive
localizedBanTitle
setLocalizedBanTitle:
isBookmarkCommandSupported
isBookmarkCommandEnabled
isBookmarkedActive
localizedBookmarkTitle
setLocalizedBookmarkTitle:
isAddToLibraryCommandSupported
isAddToLibraryCommandEnabled
isAddToLibraryActive
setNextTrackCommandEnabled:
setPreviousTrackCommandEnabled:
isSkipForwardCommandEnabled
setSkipForwardCommandEnabled:
isSkipBackwardCommandEnabled
setSkipBackwardCommandEnabled:
fastForwardTimeInterval
rewindTimeInterval
isUsingLegacySupportedCommandsFallback
setUsingLegacySupportedCommandsFallback:
_firstPartyMusicApp
_nextTrackCommandEnabled
_previousTrackCommandEnabled
_actualPlaybackRate
_explicitTrack
_advertisement
_alwaysLive
_repeatModeCommandSupported
_shuffleModeCommandSupported
_playbackRateCommandSupported
_likeCommandSupported
_likeCommandEnabled
_likedActive
_banCommandSupported
_banCommandEnabled
_bannedActive
_bookmarkCommandSupported
_bookmarkCommandEnabled
_bookmarkedActive
_addToLibraryCommandSupported
_addToLibraryCommandEnabled
_addToLibraryActive
_skipForwardCommandEnabled
_skipBackwardCommandEnabled
_usingLegacySupportedCommandsFallback
_timestamp
_playbackState
_itemPersistentID
_itemCompanionPersistentID
_itemAlbumPersistentID
_storeAdamID
_title
_artist
_album
_radioStationName
_radioStationIdentifier
_radioStationHash
_artworkImageData
_applicationDisplayName
_applicationBundleIdentifier
_applicationIconImageData
_repeatMode
_shuffleMode
_localizedLikeTitle
_localizedBanTitle
_localizedBookmarkTitle
_duration
_elapsedTimeAtLastUpdate
_fastForwardTimeInterval
_rewindTimeInterval
numberWithDouble:
setHasTimestamp:
hasTimestamp
_has
initWithOrigin:player:
commandCenter
sharedCommandCenter
_updateNowPlayingState
_updatePlaybackState
_updateSupportedCommands
endObserving
dealloc
displayName
defaultCenter
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
removeObserver:forKeyPath:context:
removeObserver:
nowPlayingInfo
_notifyObserverOfUpdatedNowPlayingInfo
_notifyObserverOfUpdatedElapsedTime
_notifyObserverOfUpdatedPlaybackState
state
_notifyObserverOfUpdatedSupportedCommands
originObserver:didUpdateNowPlayingInfoForOrigin:
respondsToSelector:
originObserver:didUpdatePlaybackStateForOrigin:
originObserver:didUpdateSupportedCommandsForOrigin:
originObserver:didUpdateElapsedTimeForOrigin:
beginObserving
updateNowPlayingStateWithCompletion:
origin
nowPlayingState
playbackQueue
delegate
setDelegate:
shouldObservePlaybackQueue
setShouldObservePlaybackQueue:
shouldObserveArtwork
setShouldObserveArtwork:
initWithOrigin:
observeValueForKeyPath:ofObject:change:context:
_player
_commandCenter
_nowPlayingState
_delegate
_origin
numberWithInt:
setPayload:
setDigest:
setNowPlayingInfo:
setApplicationInfo:
setSupportedCommands:
setPlaybackQueue:
setState:
setHasState:
hasState
hasPayload
hasDigest
hasApplicationInfo
hasSupportedCommands
hasPlaybackQueue
payload
digest
applicationInfo
supportedCommands
_applicationInfo
_digest
_nowPlayingInfo
_payload
_playbackQueue
_state
_supportedCommands
_mediaLibraryDidChangeNotification:
defaultMediaLibrary
beginGeneratingLibraryChangeNotifications
endGeneratingLibraryChangeNotifications
longLongValue
objectForKey:
integerValue
songsQuery
predicateWithValue:forProperty:
addFilterPredicate:
items
valueForProperty:
numberWithInteger:
removeAllObjects
postNotificationName:object:
sharedManager
availabilityForTrackPID:
_assetAvailabilityCache
exceptionWithName:reason:userInfo:
raise
preferredIntervalsCount
clearPreferredIntervals
preferredIntervalAtIndex:
addPreferredInterval:
setLocalizedTitle:
supportedRatesCount
clearSupportedRates
supportedRateAtIndex:
addSupportedRate:
setLocalizedShortTitle:
command
setCommand:
setHasCommand:
hasCommand
commandAsString:
StringAsCommand:
setEnabled:
setHasEnabled:
hasEnabled
setActive:
setHasActive:
hasActive
setPreferredIntervals:count:
hasLocalizedTitle
hasLocalizedShortTitle
setMinimumRating:
setHasMinimumRating:
hasMinimumRating
setMaximumRating:
setHasMaximumRating:
hasMaximumRating
supportedRates
setSupportedRates:count:
setHasRepeatMode:
hasRepeatMode
repeatModeAsString:
StringAsRepeatMode:
setHasShuffleMode:
hasShuffleMode
shuffleModeAsString:
StringAsShuffleMode:
setPresentationStyle:
setHasPresentationStyle:
hasPresentationStyle
enabled
active
localizedShortTitle
minimumRating
maximumRating
presentationStyle
_preferredIntervals
_supportedRates
_command
_localizedShortTitle
_localizedTitle
_maximumRating
_minimumRating
_presentationStyle
_active
_enabled
setJpegData:
setOriginalDigest:
hasJpegData
hasOriginalDigest
jpegData
originalDigest
_jpegData
_originalDigest
_updateApplicationBundleIdentifier
mainBundle
bundleIdentifier
mediaRemoteOrigin
componentsJoinedByString:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
sendMediaRemoteCommand:options:launchApp:
companionBundleIdentifier
setCompanionBundleIdentifier:
watchBundleIdentifier
setWatchBundleIdentifier:
localizedDisplayName
setLocalizedDisplayName:
iconDigest
setIconDigest:
initWithData:
data
initWithProtobufData:
protobufData
_protobuf
initWithMachServiceName:options:
refreshMediaRemoteStateIfNecessary
sendMediaRemoteCommand:withCommandOptions:commandResultHandler:
prewarmCompanionSystemMusicApp
fetchCompanionCloudAvailabilityWithCompletionHandler:
fetchCompanionSpecializedQueueInfoWithCompletionHandler:
fetchTrackAssetAvailabilityForTrackPID:completionHandler:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
resume
_proxy
localizedDescription
remoteObjectProxyWithErrorHandler:
sharedClient
_serverConnection
_serverConnectionQueue
mutableCopy
setObject:forKeyedSubscript:
numberWithUnsignedInt:
unsignedIntValue
dictionaryWithObjects:forKeys:count:
addObject:
count
objectAtIndex:
initWithCapacity:
addSupportedCommand:
supportedCommandsCount
clearSupportedCommands
supportedCommandAtIndex:
supportedCommandType
intValue
arrayWithCapacity:
protobufFromDictionary:
dictionaryFromProtobuf:
externalPlayerCommand
negative
mediaType
playbackPosition
skipInterval
sourceID
radioStationID
systemAppPlaybackQueueData
shouldOverrideManuallyCuratedQueue
trackID
contentItemID
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
rating
contextID
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
setDictionaryKeyToProtobufKeyMapping:
setProtobufClass:
setDictionaryValueToProtobufValueTransformer:
setProtobufValueToDictionaryValueTransformer:
setIconData:
setBundleID:
hasIconData
hasBundleID
iconData
bundleID
_bundleID
_iconData
protobufDataFromDictionary:
dictionaryFromProtobufData:
allKeys
uniqueIdentifier
isMusicApp
artworkDataDigest
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
unsignedLongLongValue
validateUniqueIdentifier:error:
weakObjectsHashTable
_setupOriginControllers
_updateOriginControllers:
_evaluateNowPlayingOrigins
_originControllerForOrigin:
keyEnumerator
allObjects
updateNowPlayingStateForOrigin:completion:
removeObject:
objectEnumerator
setOriginObserver:
setOriginCommandHandler:
_enumerateObserverDelegates:
originObserver:didUpdateNowPlayingApplicationBundleIdentifierForOrigin:
originObserver:didUpdateTimestampForOrigin:
originObserver:didUpdatePlaybackQueueForOrigin:
weakToStrongObjectsMapTable
availableOrigins
_addOriginControllerWithOrigin:
setWithArray:
deltaFromOrigins:
addedOrigins
removedOrigins
_removeOriginControllerWithOrigin:
initWithOrigin:options:
removeObjectForKey:
_evaluateNowPlayingOriginsFromOrigins:
nowPlayingOriginsDidUpdateForController:
_evaluateActiveNowPlayingOriginForOrderedOrigins:
activeNowPlayingOriginDidUpdateForController:
activeOrigin
distantPast
nowPlayingStateForOrigin:
compare:
localOrigin
companionOrigin
initWithOptions:
activeNowPlayingOrigin
nowPlayingOrigins
playbackQueueForOrigin:
updateNowPlayingStateForAllOriginsWithCompletion:
sendMediaRemoteCommand:toOrigin:options:launchApp:
addObserverDelegate:
removeObserverDelegate:
beginObservingOrigins
endObservingOrigins
setOriginObserver:forOrigin:
setOriginCommandHandler:forOrigin:
filteringOptions
_registeredObserversCount
_originControllers
_observerDelegates
_activeNowPlayingOrigin
_nowPlayingOrigins
_shouldObservePlaybackQueue
_shouldObserveArtwork
_filteringOptions
hasTitle
hasArtist
hasAlbum
setHasDuration:
hasDuration
pauseCommand
playCommand
stopCommand
togglePlayPauseCommand
seekForwardCommand
seekBackwardCommand
ratingCommand
createRadioStationCommand
setPlaybackQueueCommand
mpCommandForMRCommand:
_initWithErrorCode:handlerReturnStatuses:
setErrorCode:
addHandlerReturnStatus:
errorCode
array
handlerReturnStatusCount
handlerReturnStatusAtIndex:
messageWithErrorCode:handlerReturnStatuses:
handlerReturnStatuses
serializationDate
setHasProperNetworkConditionsToPlayMedia:
setHasHasProperNetworkConditionsToPlayMedia:
hasHasProperNetworkConditionsToPlayMedia
setCanShowCloudMusic:
setHasCanShowCloudMusic:
hasCanShowCloudMusic
hasProperNetworkConditionsToPlayMedia
canShowCloudMusic
_canShowCloudMusic
_hasProperNetworkConditionsToPlayMedia
setWidth:
setHasWidth:
hasWidth
setHeight:
setHasHeight:
hasHeight
width
height
_height
_width
setQueueType:
setRadioStationID:
addSpecializedQueues:
enumerateKeysAndObjectsUsingBlock:
specializedQueues
queueType
hasRadioStationID
setHasQueueType:
hasQueueType
_queueType
_radioStationID
originType
initWithMROriginRef:
isLocal
updateWithMROrigin:
_mediaRemoteOrigin
initWithAddedOrigins:removedOrigins:
_addedOrigins
_removedOrigins
_updateActiveOrigin
_updateAvailableOrigins
_originWithMROriginRef:
orderedSetWithObjects:
enumerateObjectsUsingBlock:
allValues
minusSet:
dictionaryWithCapacity:
orderedSetWithCapacity:
_serialQueue
_origins
_originIdentifiers
_activeOriginIdentifier
_localOriginIdentifier
_companionOriginIdentifier
initWithCommand:options:
setOptions:
options
messageWithCommand:options:
numberWithUnsignedLongLong:
numberWithLongLong:
setSourceID:
setMediaType:
setSystemAppPlaybackQueueData:
setDestinationAppDisplayID:
setContextID:
setStationURL:
setContentItemID:
hasSourceID
hasMediaType
setExternalPlayerCommand:
setHasExternalPlayerCommand:
hasExternalPlayerCommand
setSkipInterval:
setHasSkipInterval:
hasSkipInterval
setHasPlaybackRate:
hasPlaybackRate
setRating:
setHasRating:
hasRating
setNegative:
setHasNegative:
hasNegative
setPlaybackPosition:
setHasPlaybackPosition:
hasPlaybackPosition
hasContextID
setTrackID:
setHasTrackID:
hasTrackID
setHasRadioStationID:
hasRadioStationHash
hasSystemAppPlaybackQueueData
hasDestinationAppDisplayID
setSendOptions:
setHasSendOptions:
hasSendOptions
setRequestDefermentToPlaybackQueuePosition:
setHasRequestDefermentToPlaybackQueuePosition:
hasRequestDefermentToPlaybackQueuePosition
setShouldOverrideManuallyCuratedQueue:
setHasShouldOverrideManuallyCuratedQueue:
hasShouldOverrideManuallyCuratedQueue
hasStationURL
setShouldBeginRadioPlayback:
setHasShouldBeginRadioPlayback:
hasShouldBeginRadioPlayback
setPlaybackQueueInsertionPosition:
setHasPlaybackQueueInsertionPosition:
hasPlaybackQueueInsertionPosition
hasContentItemID
_playbackPosition
_trackID
_contentItemID
_contextID
_destinationAppDisplayID
_mediaType
_playbackQueueInsertionPosition
_playbackRate
_rating
_sendOptions
_skipInterval
_sourceID
_stationURL
_systemAppPlaybackQueueData
_externalPlayerCommand
_negative
_requestDefermentToPlaybackQueuePosition
_shouldBeginRadioPlayback
_shouldOverrideManuallyCuratedQueue
addContentItem:
contentItemsCount
clearContentItems
contentItemAtIndex:
contentItemType
setLocation:
setHasLocation:
hasLocation
location
contentItems
setContentItems:
_contentItems
_location
setArtworkDataDigest:
setElapsedTime:
setHasElapsedTime:
hasElapsedTime
setUniqueIdentifier:
setHasUniqueIdentifier:
hasUniqueIdentifier
setIsExplicitTrack:
setHasIsExplicitTrack:
hasIsExplicitTrack
setIsMusicApp:
setHasIsMusicApp:
hasIsMusicApp
setHasRadioStationIdentifier:
hasRadioStationIdentifier
hasRadioStationName
hasArtworkDataDigest
setIsAlwaysLive:
setHasIsAlwaysLive:
hasIsAlwaysLive
setIsAdvertisement:
setHasIsAdvertisement:
hasIsAdvertisement
setHasStoreAdamID:
hasStoreAdamID
_elapsedTime
_uniqueIdentifier
_artworkDataDigest
_isAdvertisement
_isAlwaysLive
_isExplicitTrack
_isMusicApp
substringToIndex:
uppercaseString
stringByReplacingCharactersInRange:withString:
valueForKey:
methodForSelector:
nmr_valueForPotentiallyUndefinedKey:
validateValue:forKey:error:
setValue:forKey:
dictionaryKeyToProtobufKeyMapping
protobufClass
dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
_protobufKeyToDictionaryKeyMapping
_dictionaryKeyToProtobufKeyMapping
_protobufClass
_dictionaryValueToProtobufValueTransformer
_protobufValueToDictionaryValueTransformer
_initWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:
messageWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:
nowPlayingInfoData
applicationInfoData
supportedCommandsData
playbackQueueData
_initWithJPEGArtwork:originalDigest:
messageWithJPEGArtwork:originalDigest:
jpegArtwork
_initWithIcon:originalDigest:bundleID:
messageWithIcon:originalDigest:bundleID:
icon
_initWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:
setNowPlayingInfoDigest:
setApplicationInfoDigest:
setSupportedCommandsDigest:
setPlaybackQueueDigest:
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
messageWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:
_initWithIconWidth:height:bundleID:
messageWithIconWidth:height:bundleID:
specializedQueuesCount
clearSpecializedQueues
specializedQueuesAtIndex:
specializedQueuesType
setSpecializedQueues:
_specializedQueues
mediaRemoteNowPlayingClient
initWithMRNowPlayingClient:
_mediaRemoteNowPlayingClient
_bundleIdentifier
_displayName
_configureMediaRemoteUpdaters
_updateEverything
_registerForMediaRemoteNotifications
_unregisterForMediaRemoteNotifications
beginObservingMediaRemotePlaybackQueueForOrigin:
_updateNowPlayingInfoWithCompletion:
_updateSupportedCommandsWithCompletion:
_updatePlaybackStateWithCompletion:
_updateNowPlayingApplicationInfoWithOptions:withCompletion:
_bundleIdentifierForOption:
_handleNowPlayingInfoDidChangeNotification:
_handleNowPlayingApplicationDidChangeNotification:
_handleNowPlayingApplicationPlaybackStateDidChangeNotification:
_handleSupportedCommandsDidChangeNotification:
removeObserver:name:object:
shouldHandleNotification:
name
initFromNotification:
_notifyObserversOfUpdatedTimestamp
_updateIsEnforcingApplicationFilter
_notifyObserverOfUpdatedNowPlayingApplicationBundleID
_updateNowPlayingClientWithCompletion:
_notifyObserversOfUpdatedPlaybackQueue
playbackQueueDidChange:
playbackQueue:contentItemsDidChange:
_isRegisteredForMediaRemoteNotifications
_isEnforcingApplicationFilter
_nowPlayingClient
_nowPlayingInfoUpdater
_bundleIDUpdater
_supportedCommandsUpdater
_playbackStateUpdater
userInfo
_nowPlayingClientFromNotification:
_originFromNotification:
_refreshCurrentPlaybackQueueFromMediaRemoteWithCompletion:
_mediaRemotePlaybackQueueWithRange:includeMetadata:
objectAtIndexedSubscript:
containsObject:
_metadataForItemWithIdentifier:
observedRange
_contentItemIdentifiers
_updateWithMediaRemoteQueue:
_itemWithIdentifier:
_needsMetadataForMediaRemoteItem:
fullPlaybackQueueData
copyFullMediaRemotePlaybackQueueIncludingMetadata:
copyMediaRemotePlaybackQueueWithRange:includeMetadata:
deltaPlaybackQueueDataFromPreviousData:invalidatedMetadataIdentifiers:
updateWithData:
_updateMetadataWithMediaRemoteItems:
_rangeOfItemsNeedingMetadataForMediaRemoteQueue:
_needsUpdateForMediaRemoteQueue:
setObservedRange:
setOrigin:
_upNextPlaybackQueue
_observingMediaRemote
_playbackQueueUpdater
_observedRange
appendString:
hasOptions
_options
setKnownDigest:
hasKnownDigest
hasNowPlayingInfoDigest
hasApplicationInfoDigest
hasSupportedCommandsDigest
hasPlaybackQueueDigest
knownDigest
_applicationInfoDigest
_knownDigest
_nowPlayingInfoDigest
_playbackQueueDigest
_supportedCommandsDigest
bytes
dataWithBytes:length:
isEqualToData:
_notifyObserverOfUpdatedNowPlayingApplicationBundleIdentifier
_notifyObserverOfUpdatedTimestamp
_notifyObserverOfUpdatedPlaybackQueue
originObserver
originCommandHandler
_isObserving
_hasPendingNowPlayingInfoChange
_hasPendingElapsedTimeChange
_hasPendingPlaybackStateChange
_hasPendingSupportedCommandsChange
_hasPendingNowPlayingApplicationBundleIdentifierChange
_hasPendingTimestampChange
_hasPendingPlaybackQueueChange
_originObserver
_originCommandHandler
hasCompanionBundleIdentifier
hasLocalizedDisplayName
setHasPlaybackState:
hasPlaybackState
hasWatchBundleIdentifier
hasIconDigest
_companionBundleIdentifier
_iconDigest
_localizedDisplayName
_watchBundleIdentifier
setTarget:
setAction:
setMessageType:
numberWithUnsignedShort:
UTF8String
initWithService:
addDelegate:queue:
_sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:isResponse:additionalOptions:resultingMessageIdentifier:error:
context
outgoingResponseIdentifier
initWithProtobufData:type:isResponse:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
type
target
action
messageCenter:messageWithIdentifier:didSendWithSuccess:error:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setMessageHandlerTarget:action:forIncomingMessagesOfType:
startHandlingMessages
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:expectReply:queueOneIdentifier:resultingMessageIdentifier:error:
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:inReplyTo:resultingMessageIdentifier:error:
_idsQueue
_idsService
_messageHandlers
messageType
_messageType
_target
_action
clearHandlerReturnStatus
setHasErrorCode:
hasErrorCode
handlerReturnStatus
setHandlerReturnStatus:count:
_handlerReturnStatus
_errorCode
[%@] executeUpdateBlock
[%@] setting state to pending and bailing
[%@] setting state to updating
[%@] calling block
[%@] finished block
[%@] state is pending, will retry
[%@] setting state to idle, 
[NMROriginObserver] (Player) begin observing for %@
[NMROriginObserver] (Player) end observing for %@
[NMROriginObserver] (Player) Updated nowPlayingState %@ for %@
[NMROriginObserver] (Player) Updated playbackState %ld for %@
Command sent to app %@ failed with error %d (handlerReturnStatuses: [%@]).
Failed to get remote object proxy (%@).
[NMROriginObserver] Now playing origins are updated: %@
[NMROriginObserver] Active now playing origin is updated: %@
[Origin] Fetching available MROrigins.
[Origin] Failed to fetch any available origins
[Origin] Updated available origins: %@
[Origin] Fetching active MROrigin.
[Origin] Failed to get active origin from MR.
[Origin] Update active origin: %@
Encountered unknown protobuf key (%@) while converting to a dictionary; skipping.
[NMROriginObserver] NMRNowPlayingClient is nil
[NMROriginObserver] initializing...
[NMROriginObserver] Updating now playing client
[NMROriginObserver] (MR) Failed to fetch now playing client with error: %@
[NMROriginObserver] Updated now playing client %@
[NMROriginObserver] (MR) begin observing for %@
[NMROriginObserver] (MR) end observing for %@
[NMROriginObserver] (MR) shouldObserveArtwork %@ for %@
[NMROriginObserver] (MR) setShouldObservePlaybackQueue %@ for %@
[NMROriginObserver] (MR) updateNowPlayingStateWithCompletion for %@
[NMROriginObserver] updating everything...
[NMROriginObserver] (MR) registering notifications for %@
[NMROriginObserver] (MR) unregistering notifications for %@
[NMROriginObserver] (MR) received %@ for %@.
[NMROriginObserver] (MR) updated nowPlayingClient %@
[NMROriginObserver] (MR) ignoring %@
[NMROriginObserver] (MR) received %@ for %@ for %@
[NMROriginObserver] (MR) configuring MR updaters...
[NMROriginObserver] (MR) configured nowPlayingInfoUpdater %@
[NMROriginObserver] (MR) configured bundleIDUpdater %@
[NMROriginObserver] (MR) configured supportedCommandsUpdater %@
[NMROriginObserver] (MR) configured playbackStateUpdater %@
[NMROriginObserver] (MR) Updating nowPlayingState for client %@
[NMROriginObserver] (MR) Failed to fetch now playing playback queue with error: %@
[NMROriginObserver] (MR) Updated nowPlayingState with artwork (%d) %@ for %@
[NMROriginObserver] (MR) Dropping nowPlayingState for previous client: %@
[NMROriginObserver] (MR) Updating applicationBundleID for client %@
[NMROriginObserver] (MR) Updated applicationBundleID %@ for %@
[NMROriginObserver] (MR) Dropping applicationBundleID for unchanged client
[NMROriginObserver] (MR) Updating supportedCommands for client %@
[NMROriginObserver] (MR) Updated supportedCommands %@ for %@
[NMROriginObserver] (MR) Dropping supportedCommands for previous client: %@
[NMROriginObserver] (MR) Updating playbackState for client %@
[NMROriginObserver] (MR) Updated playbackState %ld for %@
[NMROriginObserver] (MR) Dropping playbackState for previous client: %@
Building delta queue from previous data
Previous data empty, serialize the full queue with all metadata
Location different, include new items in delta
Count different, include new items in delta
Found an item that didn't match up (index %zd), include new items in delta
Found an item missing metadata (index %zd)
Found an item with invalidated metadata (index %zd)
Nothing changed, delta queue is empty
Built delta queue: %@
Got a new queue item that didn't include metadata, and we don't have any cached metadata for this item, identifier: %@
Updated with new data, queue is now: %@
Requesting playback queue information for range: %ld -> %ld
Created queue: %@
Updated with new mediaRemote info, queue is now %@
No need to update content item (identifier: %@), not currently in queue
_PlaybackQueueDidChangeNotification for origin %@
_PlaybackQueueContentItemsDidChange for origin %@
[NMROriginObserver] Notifying nowPlayingInfo for %@
[NMROriginObserver] Notifying playbackState for %@
[NMROriginObserver] Notifying supportedCommands for %@
[NMROriginObserver] Notifying elapsedTime for %@
[NMROriginObserver] Notifying applicationBundleID for %@
[NMROriginObserver] Notifying timestamp for %@
[NMROriginObserver] Notifying playbackQueue for %@
Successfully requested delivery of %@ message (%@).
Failed to request delivery of %@ message (%@) with error "%@".
Received %@ %@ message (ID: %@, %zd byte payload).
Successfully sent message (ID: %@).
Failed to send message (ID: %@) with error "%@".
v4@?0
%@ %@
identifier
metadata
hasIdentifier
TB,R,N
T@"NSString",&,N,V_identifier
hasMetadata
T@"_NMRContentItemMetadata",&,N,V_metadata
<%@:%p playbackState: %d, playbackRate: %f, title: %@, artist: %@, appDisplayName: %@, appBundleID: %@>
B4@?0
@"NSString"4@?0
timestamp
T@"NSDate",C,N,V_timestamp
duration
Td,N,V_duration
playbackRate
Tf,D,N
playbackState
TI,N,V_playbackState
elapsedTimeAtLastUpdate
Td,N,V_elapsedTimeAtLastUpdate
playing
TB,R,N,GisPlaying
elapsedTime
Td,R,N
hasNowPlayingInfo
itemPersistentID
T@"NSNumber",C,N,V_itemPersistentID
itemCompanionPersistentID
T@"NSNumber",C,N,V_itemCompanionPersistentID
itemAlbumPersistentID
T@"NSNumber",C,N,V_itemAlbumPersistentID
storeAdamID
T@"NSNumber",C,N,V_storeAdamID
title
T@"NSString",C,N,V_title
artist
T@"NSString",C,N,V_artist
album
T@"NSString",C,N,V_album
explicitTrack
TB,N,GisExplicitTrack,V_explicitTrack
radioStationName
T@"NSString",C,N,V_radioStationName
radioStationIdentifier
T@"NSNumber",C,N,V_radioStationIdentifier
radioStationHash
T@"NSString",C,N,V_radioStationHash
advertisement
TB,N,GisAdvertisement,V_advertisement
alwaysLive
TB,N,GisAlwaysLive,V_alwaysLive
artworkImageData
T@"NSData",&,N,V_artworkImageData
firstPartyApp
TB,R,N,GisFirstPartyApp
applicationDisplayName
T@"NSString",C,N,V_applicationDisplayName
applicationBundleIdentifier
T@"NSString",C,N,V_applicationBundleIdentifier
applicationIconImageData
T@"NSData",&,N,V_applicationIconImageData
repeatModeCommandSupported
TB,N,GisRepeatModeCommandSupported,V_repeatModeCommandSupported
repeatMode
Ti,N,V_repeatMode
shuffleModeCommandSupported
TB,N,GisShuffleModeCommandSupported,V_shuffleModeCommandSupported
shuffleMode
Ti,N,V_shuffleMode
playbackRateCommandSupported
TB,N,GisPlaybackRateCommandSupported,V_playbackRateCommandSupported
likeCommandSupported
TB,N,GisLikeCommandSupported,V_likeCommandSupported
likeCommandEnabled
TB,N,GisLikeCommandEnabled,V_likeCommandEnabled
likedActive
TB,N,GisLikedActive,V_likedActive
localizedLikeTitle
T@"NSString",C,N,V_localizedLikeTitle
banCommandSupported
TB,N,GisBanCommandSupported,V_banCommandSupported
banCommandEnabled
TB,N,GisBanCommandEnabled,V_banCommandEnabled
bannedActive
TB,N,GisBannedActive,V_bannedActive
localizedBanTitle
T@"NSString",C,N,V_localizedBanTitle
bookmarkCommandSupported
TB,N,GisBookmarkCommandSupported,V_bookmarkCommandSupported
bookmarkCommandEnabled
TB,N,GisBookmarkCommandEnabled,V_bookmarkCommandEnabled
bookmarkedActive
TB,N,GisBookmarkedActive,V_bookmarkedActive
localizedBookmarkTitle
T@"NSString",C,N,V_localizedBookmarkTitle
addToLibraryCommandSupported
TB,N,GisAddToLibraryCommandSupported,V_addToLibraryCommandSupported
addToLibraryCommandEnabled
TB,N,GisAddToLibraryCommandEnabled,V_addToLibraryCommandEnabled
addToLibraryActive
TB,N,GisAddToLibraryActive,V_addToLibraryActive
nextTrackCommandEnabled
T@"NSNumber",&,N,V_nextTrackCommandEnabled
previousTrackCommandEnabled
T@"NSNumber",&,N,V_previousTrackCommandEnabled
skipForwardCommandEnabled
TB,N,GisSkipForwardCommandEnabled,V_skipForwardCommandEnabled
skipBackwardCommandEnabled
TB,N,GisSkipBackwardCommandEnabled,V_skipBackwardCommandEnabled
fastForwardTimeInterval
Td,N,V_fastForwardTimeInterval
rewindTimeInterval
Td,N,V_rewindTimeInterval
usingLegacySupportedCommandsFallback
TB,N,GisUsingLegacySupportedCommandsFallback,V_usingLegacySupportedCommandsFallback
hasTimestamp
TB,N
Td,N,V_timestamp
nowPlayingInfo
state
origin
T@"NMROrigin",R,N
nowPlayingState
T@"NMRNowPlayingState",R,N
playbackQueue
T@"NMRPlaybackQueue",R,N
delegate
T@"<NMROriginObserverDelegate>",W,N
shouldObservePlaybackQueue
shouldObserveArtwork
T@"NMROrigin",R,N,V_origin
T@"NMRPlaybackQueue",R,N,VplaybackQueue
T@"<NMROriginObserverDelegate>",W,N,V_delegate
TB,N,VshouldObservePlaybackQueue
TB,N,VshouldObserveArtwork
payload
digest
applicationInfo
supportedCommands
hasState
Ti,N,V_state
hasPayload
T@"NSData",&,N,V_payload
hasDigest
T@"NSData",&,N,V_digest
T@"NSData",&,N,V_nowPlayingInfo
hasApplicationInfo
T@"NSData",&,N,V_applicationInfo
hasSupportedCommands
T@"NSData",&,N,V_supportedCommands
hasPlaybackQueue
T@"NSData",&,N,V_playbackQueue
com.apple.NanoMediaRemote
com.apple.private.nanomediaremote
NMRCompanionCloudAvailabilityDidChangeNotification
NMRCompanionSpecializedQueueInfoDidChangeNotification
NMRCompanionNowPlayingApplicationIconDidChangeNotification
NMCTrackAssetAvailabilityDidChange
idx (%tu) is out of range (%tu)
command
enabled
active
preferredInterval
localizedTitle
localizedShortTitle
minimumRating
maximumRating
supportedRate
presentationStyle
hasCommand
Ti,N,V_command
hasEnabled
TB,N,V_enabled
hasActive
TB,N,V_active
preferredIntervalsCount
TI,R,N
preferredIntervals
T^d,R,N
hasLocalizedTitle
T@"NSString",&,N,V_localizedTitle
hasLocalizedShortTitle
T@"NSString",&,N,V_localizedShortTitle
hasMinimumRating
Tf,N,V_minimumRating
hasMaximumRating
Tf,N,V_maximumRating
supportedRatesCount
supportedRates
T^f,R,N
hasRepeatMode
hasShuffleMode
hasPresentationStyle
Ti,N,V_presentationStyle
Unknown
Play
Pause
TogglePlayPause
Stop
NextTrack
PreviousTrack
AdvanceShuffleMode
AdvanceRepeatMode
BeginFastForward
EndFastForward
BeginRewind
EndRewind
Rewind15Seconds
FastForward15Seconds
Rewind30Seconds
FastForward30Seconds
SkipForward
SkipBackward
ChangePlaybackRate
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
SeekToPlaybackPosition
ChangeRepeatMode
ChangeShuffleMode
NextChapter
PreviousChapter
NextAlbum
PreviousAlbum
NextPlaylist
PreviousPlaylist
BanTrack
AddTrackToWishList
RemoveTrackFromWishList
NextInContext
PreviousInContext
ResetPlaybackTimeout
SetPlaybackQueue
AddNowPlayingItemToLibrary
CreateRadioStation
AddItemToLibrary
InsertIntoPlaybackQueue
(unknown: %i)
None
Albums
Songs
jpegData
originalDigest
hasJpegData
T@"NSData",&,N,V_jpegData
hasOriginalDigest
T@"NSData",&,N,V_originalDigest
com.apple.NanoNowPlaying
com.apple.SessionTrackerApp
v12@?0I4^{__CFArray=}8
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
companionBundleIdentifier
T@"NSString",C,N
watchBundleIdentifier
localizedDisplayName
TI,N
iconDigest
T@"NSData",C,N
com.apple.NanoMediaRemote.XPCQueue
v8@?0@"NSError"4
v8@?0@"NSDictionary"4
v8@?0@"NSData"4
supportedCommand
T@"NSMutableArray",&,N,V_supportedCommands
NanoMusicCore
NanoMediaRemote
NanoAudioControl
NanoMusicSync
NanoMediaUI
com.apple.nanomusic
@16@?0@"NSDictionary"4@"NSString"8@12
@16@?0@"PBCodable"4@"NSString"8@12
iconData
bundleID
hasIconData
T@"NSData",&,N,V_iconData
hasBundleID
T@"NSString",&,N,V_bundleID
v8@?0@"<NMROriginObserverDelegate>"4
T@"<NMRNowPlayingControllerDelegate>",W,N,V_delegate
TB,N,V_shouldObservePlaybackQueue
TB,N,V_shouldObserveArtwork
activeNowPlayingOrigin
nowPlayingOrigins
T@"NSArray",R,N
filteringOptions
TI,R,N,V_filteringOptions
hasTitle
T@"NSString",&,N,V_title
hasArtist
T@"NSString",&,N,V_artist
hasAlbum
T@"NSString",&,N,V_album
hasDuration
errorCode
handlerReturnStatuses
serializationDate
T@"NSDate",R,N
hasProperNetworkConditionsToPlayMedia
canShowCloudMusic
hasHasProperNetworkConditionsToPlayMedia
TB,N,V_hasProperNetworkConditionsToPlayMedia
hasCanShowCloudMusic
TB,N,V_canShowCloudMusic
width
height
hasWidth
Td,N,V_width
hasHeight
Td,N,V_height
v16@?0@4@8^B12
com.apple.NanoMediaRemote.sendCommand.UIRoundTripDelay
com.apple.NanoMediaRemote.sendCommand.failedWithTimeout
com.apple.NanoMediaRemote.sendCommand.failedToSend
queueType
radioStationID
hasQueueType
TI,N,V_queueType
hasRadioStationID
T@"NSString",&,N,V_radioStationID
NMRMediaRemoteOriginAvailableOriginsDidChangeNotification
NMRMediaRemoteOriginActiveOriginDidChangeNotification
com.apple.NanoMediaRemote.Origin
<%@:%p displayName: %@, identifier: %d, type: %lu>
mediaRemoteOrigin
T^v,R,N
displayName
T@"NSString",R,N
originType
Ti,R,N
uniqueIdentifier
T@"NSNumber",R,N
isLocal
addedOrigins
T@"NSSet",R,N,V_addedOrigins
removedOrigins
T@"NSSet",R,N,V_removedOrigins
com.apple.NanoMediaRemote.OriginManager
v16@?0@"NSNumber"4I8^B12
v8@?0^{__CFArray=}4
v12@?0C4^v8
availableOrigins
activeOrigin
localOrigin
companionOrigin
options
T@"NSDictionary",R,N
sourceID
mediaType
externalPlayerCommand
skipInterval
rating
negative
playbackPosition
contextID
trackID
systemAppPlaybackQueueData
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
hasSourceID
T@"NSString",&,N,V_sourceID
hasMediaType
T@"NSString",&,N,V_mediaType
hasExternalPlayerCommand
TB,N,V_externalPlayerCommand
hasSkipInterval
Tf,N,V_skipInterval
hasPlaybackRate
Tf,N,V_playbackRate
hasRating
Tf,N,V_rating
hasNegative
TB,N,V_negative
hasPlaybackPosition
Td,N,V_playbackPosition
hasContextID
T@"NSString",&,N,V_contextID
hasTrackID
TQ,N,V_trackID
Tq,N,V_radioStationID
hasRadioStationHash
T@"NSString",&,N,V_radioStationHash
hasSystemAppPlaybackQueueData
T@"NSData",&,N,V_systemAppPlaybackQueueData
hasDestinationAppDisplayID
T@"NSString",&,N,V_destinationAppDisplayID
hasSendOptions
TI,N,V_sendOptions
hasRequestDefermentToPlaybackQueuePosition
TB,N,V_requestDefermentToPlaybackQueuePosition
hasShouldOverrideManuallyCuratedQueue
TB,N,V_shouldOverrideManuallyCuratedQueue
hasStationURL
T@"NSString",&,N,V_stationURL
hasShouldBeginRadioPlayback
TB,N,V_shouldBeginRadioPlayback
hasPlaybackQueueInsertionPosition
Ti,N,V_playbackQueueInsertionPosition
hasContentItemID
T@"NSString",&,N,V_contentItemID
location
contentItem
hasLocation
Ti,N,V_location
contentItems
T@"NSMutableArray",&,N,V_contentItems
isExplicitTrack
isMusicApp
artworkDataDigest
isAlwaysLive
isAdvertisement
hasElapsedTime
Td,N,V_elapsedTime
hasUniqueIdentifier
TQ,N,V_uniqueIdentifier
hasIsExplicitTrack
TB,N,V_isExplicitTrack
hasIsMusicApp
TB,N,V_isMusicApp
hasRadioStationIdentifier
Tq,N,V_radioStationIdentifier
hasRadioStationName
T@"NSString",&,N,V_radioStationName
hasArtworkDataDigest
T@"NSData",&,N,V_artworkDataDigest
hasIsAlwaysLive
TB,N,V_isAlwaysLive
hasIsAdvertisement
TB,N,V_isAdvertisement
hasStoreAdamID
Tq,N,V_storeAdamID
has%@
@4@?0
v16@?0@"NSString"4@"NSString"8^B12
v16@?0@"NSString"4@8^B12
dictionaryKeyToProtobufKeyMapping
T@"NSDictionary",C,N,V_dictionaryKeyToProtobufKeyMapping
protobufClass
T#,&,N,V_protobufClass
dictionaryValueToProtobufValueTransformer
T@?,C,N,V_dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
T@?,C,N,V_protobufValueToDictionaryValueTransformer
nowPlayingInfoData
T@"NSData",R,N
applicationInfoData
supportedCommandsData
playbackQueueData
jpegArtwork
icon
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
specializedQueues
T@"NSMutableArray",&,N,V_specializedQueues
mediaRemoteNowPlayingClient
T^v,R,N,V_mediaRemoteNowPlayingClient
bundleIdentifier
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_displayName
com.apple.NanoMediaRemote.NowPlayingStateObserver
v12@?0^v4^{__CFError=}8
com.apple.NanoMusic
com.apple.Music
v8@?0@?<v@?>4
v8@?0I4
T@"NMRNowPlayingState",R,N,V_nowPlayingState
T@"NMRPlaybackQueue",R,N,V_playbackQueue
com.apple.NanoMediaRemote.PlaybackQueue
v16@?0@"_NMRContentItem"4I8^B12
v16@?0@4I8^B12
T@"NMROrigin",&,N,V_origin
T@"<NMRPlaybackQueueDelegate>",W,N,V_delegate
observedRange
T{?=ii},N,V_observedRange
fullPlaybackQueueData
Playback queue with range %d -> %zd
  ContentItem identifier=%@, hasMetadata=%d, title=%@
hasOptions
T@"_NMRCommandOptionsProtobuf",&,N,V_options
knownDigest
hasKnownDigest
T@"NSData",&,N,V_knownDigest
hasNowPlayingInfoDigest
T@"NSData",&,N,V_nowPlayingInfoDigest
hasApplicationInfoDigest
T@"NSData",&,N,V_applicationInfoDigest
hasSupportedCommandsDigest
T@"NSData",&,N,V_supportedCommandsDigest
hasPlaybackQueueDigest
T@"NSData",&,N,V_playbackQueueDigest
originObserver
T@"<NMROriginObserver>",&,N,V_originObserver
originCommandHandler
T@"<NMROriginCommandHandler>",&,N,V_originCommandHandler
hasCompanionBundleIdentifier
T@"NSString",&,N,V_companionBundleIdentifier
hasLocalizedDisplayName
T@"NSString",&,N,V_localizedDisplayName
hasPlaybackState
hasWatchBundleIdentifier
T@"NSString",&,N,V_watchBundleIdentifier
hasIconDigest
T@"NSData",&,N,V_iconDigest
%@.%@.idsQueue
com.apple.private.alloy.mediaremote
@"NSString"8@?0B4
ID: %@, QueueOne: %@, BypassDuet: %@, FireAndForget: %@, ForceLocal: YES, %zd byte payload
an UNHANDLED
T@"<NMRIDSMessageCenterDelegate>",W,N,V_delegate
messageType
TS,N,V_messageType
target
T@,W,N,V_target
action
T:,N,V_action
NMRIDSMessageTypeUnknown
NMRIDSMessageTypeMediaRemoteCommandRequest
NMRIDSMessageTypeMediaRemoteCommandResponse
NMRIDSMessageTypeMediaRemoteGetState
NMRIDSMessageTypeMediaRemoteSetState
NMRIDSMessageTypeMediaRemoteGetArtwork
NMRIDSMessageTypeMediaRemoteSetArtwork
NMRIDSMessageTypeGetCloudAvailability
NMRIDSMessageTypeSetCloudAvailability
NMRIDSMessageTypeGetSpecializedQueueInfo
NMRIDSMessageTypeSetSpecializedQueueInfo
NMRIDSMessageType(%zd)
handlerReturnStatus
hasErrorCode
TI,N,V_errorCode
handlerReturnStatusCount
T^I,R,N
NMRAugmentedNowPlayingInfoArtworkDataDigest
NMRAugmentedNowPlayingInfoCompanionItemPersistentID
NMRAugmentedNowPlayingInfoAlbumPersistentID
NMRMediaRemoteUpdater
_NMRContentItem
NSCopying
NMRNowPlayingState
_NMRMediaRemoteGetArtworkMessage
NMROriginLocalObserver
NMROriginObserver
_NMRMediaRemoteSetStateMessageProfobuf
NMRTrackAssetAvailabilityManager
_NMRCommandInfoProtobuf
_NMRMediaRemoteSetArtworkMessage
NMROriginMediaRemoteCommandHandler
NMROriginCommandHandler
NSObject
NMRNowPlayingApplicationInfo
NMRMediaRemoteProtobufCodable
NMRServiceInterface
_NMRClient
_NMRSupportedCommandsProtobuf
_NMRMediaRemoteSetIconMessage
Validation
NMRNowPlayingController
NMROriginObserverDelegate
_NMRContentItemMetadata
NanoMediaRemote
NMRSendCommandResultMessage
_NMRCloudAvailabilityProtobuf
_NMRMediaRemoteGetIconMessage
_NMRSpecializedQueueProtobuf
NMROrigin
NMROriginUpdateDelta
NMROriginManager
NMRCloudAvailabilityMessage
NMRSendCommandMessage
_NMRCommandOptionsProtobuf
_NMRPlaybackQueue
_NMRNowPlayingInfoProtobuf
NMRAdditions
NMRProtobufSerialization
NMRMediaRemoteSetStateMessage
NMRMediaRemoteSetArtworkMessage
NMRMediaRemoteSetIconMessage
NMRMediaRemoteGetStateMessage
NMRMediaRemoteGetArtworkMessage
NMRMediaRemoteGetIconMessage
_NMRSpecializedQueueInfoProtobuf
NMRNowPlayingClient
NMROriginMediaRemoteObserver
NMRPlaybackQueueDelegate
NMROriginMediaRemoteObserverNotificationHandler
NMRPlaybackQueue
_NMRSendCommandMessageProtobuf
_NMRMediaRemoteGetStateMessageProfobuf
NMROriginController
_NMRNowPlayingApplicationStateProtobuf
NMRIDSMessageCenter
IDSServiceDelegate
_NMRIDSMessageHandler
_NMRSendCommandResultMessageProtobuf
@16@0:4@8@?12
v8@0:4
@"NSObject<OS_dispatch_queue>"
@12@0:4^{_NSZone=}8
B8@0:4
@8@0:4
B12@0:4@8
v12@0:4@8
I8@0:4
@"NSString"
@"_NMRContentItemMetadata"
v12@0:4f8
f8@0:4
d8@0:4
v12@0:4B8
B12@0:4B8
v16@0:4d8
B16@0:4d8
v40@0:4@8@12^B16^B20^B24^B28^B32^B36
v24@0:4@8^B12^B16^B20
@12@0:4^{__CFString=}8
v12@0:4I8
i8@0:4
v12@0:4i8
@"NSNumber"
@"NSDate"
@"NSData"
{?="timestamp"b1}
v12@0:4@?8
v12@0:4@?<v@?>8
@"NMROrigin"8@0:4
@"NMRNowPlayingState"8@0:4
@"NMRPlaybackQueue"8@0:4
@"<NMROriginObserverDelegate>"8@0:4
v12@0:4@"<NMROriginObserverDelegate>"8
@12@0:4@8
@16@0:4@8@12
v24@0:4@8@12@16^v20
@"MPCPlayer"
@"MPRemoteCommandCenter"
@"NMRNowPlayingState"
@"<NMROriginObserverDelegate>"
@"NMROrigin"
@"NMRPlaybackQueue"
{?="timestamp"b1"state"b1}
i12@0:4@8
@"NSCache"
@12@0:4i8
^d8@0:4
d12@0:4I8
v16@0:4^d8I12
^f8@0:4
f12@0:4I8
v16@0:4^f8I12
{?="list"^d"count"I"size"I}
{?="list"^f"count"I"size"I}
{?="command"b1"maximumRating"b1"minimumRating"b1"presentationStyle"b1"repeatMode"b1"shuffleMode"b1"active"b1"enabled"b1}
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v20@0:4I8@12B16
v20@0:4I8@"NSDictionary"12B16
@12@0:4@"NSData"8
@"NSData"8@0:4
@"_NMRNowPlayingApplicationStateProtobuf"
v20@0:4I8@12@?16
v16@0:4@8@?12
v20@0:4I8@"NSDictionary"12@?<v@?@"NSDictionary">16
v12@0:4@?<v@?@"NSData">8
v16@0:4@"NSNumber"8@?<v@?i>12
@"NSXPCConnection"
@12@0:4I8
@"NSMutableArray"
B16@0:4^@8^@12
v16@0:4@8@12
v16@0:4@8@"NMROrigin"12
v24@0:4I8@12@16B20
@"NSMapTable"
@"NSHashTable"
@"NSArray"
@"<NMRNowPlayingControllerDelegate>"
{?="duration"b1}
@16@0:4I8@12
@"_NMRSendCommandResultMessageProtobuf"
{?="canShowCloudMusic"b1"hasProperNetworkConditionsToPlayMedia"b1}
{?="height"b1"timestamp"b1"width"b1}
{?="queueType"b1}
@12@0:4^v8
^v8@0:4
v12@0:4^v8
@"NSSet"
@"NSMutableDictionary"
@"NSOrderedSet"
@"_NMRCloudAvailabilityProtobuf"
@"_NMRSendCommandMessageProtobuf"
v16@0:4Q8
v16@0:4q8
Q8@0:4
q8@0:4
{?="playbackPosition"b1"radioStationID"b1"trackID"b1"playbackQueueInsertionPosition"b1"playbackRate"b1"rating"b1"repeatMode"b1"sendOptions"b1"shuffleMode"b1"skipInterval"b1"externalPlayerCommand"b1"negative"b1"requestDefermentToPlaybackQueuePosition"b1"shouldBeginRadioPlayback"b1"shouldOverrideManuallyCuratedQueue"b1}
{?="location"b1}
{?="duration"b1"elapsedTime"b1"radioStationIdentifier"b1"storeAdamID"b1"timestamp"b1"uniqueIdentifier"b1"playbackRate"b1"repeatMode"b1"shuffleMode"b1"isAdvertisement"b1"isAlwaysLive"b1"isExplicitTrack"b1"isMusicApp"b1}
v12@0:4#8
@?8@0:4
@"NSDictionary"
@24@0:4@8@12@16@20
@"_NMRMediaRemoteSetStateMessageProfobuf"
@"_NMRMediaRemoteSetArtworkMessage"
@20@0:4@8@12@16
@"_NMRMediaRemoteSetIconMessage"
@"_NMRMediaRemoteGetStateMessageProfobuf"
@"_NMRMediaRemoteGetArtworkMessage"
@28@0:4d8d16@24
@"_NMRMediaRemoteGetIconMessage"
v12@0:4@"NMRPlaybackQueue"8
v16@0:4@"NMRPlaybackQueue"8@"NSArray"12
@16@0:4@8I12
v16@0:4I8@?12
@"NMRNowPlayingClient"
@"NMRMediaRemoteUpdater"
^v12@0:4@8
B12@0:4@"NSNotification"8
^v12@0:4B8
^v20@0:4{?=ii}8B16
{?=ii}12@0:4^v8
B12@0:4^v8
{?=ii}8@0:4
v16@0:4{?=ii}8
@"_NMRPlaybackQueue"
@"<NMRPlaybackQueueDelegate>"
{?="location"i"length"i}
@"_NMRCommandOptionsProtobuf"
{?="timestamp"b1"command"b1}
@"<NMROriginObserver>"
@"<NMROriginCommandHandler>"
{?="playbackState"b1}
v28@0:4@8@12@16@20@24
v32@0:4@8@12@16@20@24@28
v28@0:4@8@12@16B20@24
v32@0:4@8@12@16B20@24@28
v24@0:4@8@12@16@20
v20@0:4@8@12@?16
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
v20@0:4@8:12S16
B52@0:4@8S12I16d20B28B32B36@40^@44^@48
B48@0:4@8S12I16d20B28B32@36^@40^@44
@"IDSService"
@"<NMRIDSMessageCenterDelegate>"
S8@0:4
v12@0:4S8
:8@0:4
v12@0:4:8
^I8@0:4
I12@0:4I8
v16@0:4^I8I12
{?="list"^I"count"I"size"I}
{?="timestamp"b1"errorCode"b1}
zPLR
zPLR
zPLR
zPLR
zPLR
