init
executeUpdateBlock
initWithQueue:updateBlock:
.cxx_destruct
_updateState
_updateBlock
_queue
objectForKeyedSubscript:
isEqualToString:
localOrigin
companionOrigin
availableOrigins
deviceInfo
predicateWithBlock:
filteredArrayUsingPredicate:
firstObject
_originFromTestOptions:
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
alloc
setIdentifier:
setMetadata:
class
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasIdentifier
hasMetadata
readFrom:
writeTo:
copyTo:
identifier
metadata
_identifier
_metadata
playbackState
playbackRate
title
artist
applicationDisplayName
applicationBundleIdentifier
album
isExplicitTrack
isAlwaysLive
itemPersistentID
storeAdamID
itemCompanionPersistentID
itemAlbumPersistentID
artworkImageData
artworkCatalog
radioStationName
radioStationIdentifier
radioStationHash
isAdvertisement
elapsedTime
isPlaying
preferredPlaybackRate
applicationIconImageData
isRepeatModeCommandSupported
repeatMode
isShuffleModeCommandSupported
shuffleMode
isPlaybackRateCommandSupported
isLikeCommandSupported
isLikeCommandEnabled
isLikedActive
localizedLikeTitle
likeCommandPresentationStyle
isBanCommandSupported
isBanCommandEnabled
isBannedActive
localizedBanTitle
banCommandPresentationStyle
isBookmarkCommandSupported
isBookmarkCommandEnabled
isBookmarkedActive
localizedBookmarkTitle
isAddToLibraryCommandSupported
isAddToLibraryCommandEnabled
isAddToLibraryActive
nextTrackCommandEnabled
previousTrackCommandEnabled
isSkipForwardCommandEnabled
isSkipBackwardCommandEnabled
fastForwardTimeInterval
rewindTimeInterval
timestamp
date
timeIntervalSinceDate:
elapsedTimeAtLastUpdate
duration
longLongValue
length
mainBundle
bundleIdentifier
nanoMediaRemoteBundle
localizedStringForKey:value:table:
emptyNowPlayingState
compareWithNowPlayingState:
hasNowPlayingInfo
isPlayingRadio
isFirstPartyApp
hasSupportedFeedbackCommands
identifiers
displayTitle
_preferredPlaybackRate
numberWithDouble:
numberWithInt:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOriginIdentifier:
setHasOriginIdentifier:
hasOriginIdentifier
originIdentifier
_timestamp
_originIdentifier
_has
bundleWithIdentifier:
setPayload:
setDigest:
setNowPlayingInfo:
setApplicationInfo:
setSupportedCommands:
setPlaybackQueue:
setState:
setHasState:
hasState
hasPayload
hasDigest
hasApplicationInfo
hasSupportedCommands
hasPlaybackQueue
state
payload
digest
nowPlayingInfo
applicationInfo
supportedCommands
playbackQueue
_applicationInfo
_digest
_nowPlayingInfo
_payload
_playbackQueue
_state
_supportedCommands
defaultCenter
_mediaLibraryDidChangeNotification:
addObserver:selector:name:object:
defaultMediaLibrary
beginGeneratingLibraryChangeNotifications
removeObserver:
endGeneratingLibraryChangeNotifications
dealloc
objectForKey:
integerValue
songsQuery
predicateWithValue:forProperty:
addFilterPredicate:
items
valueForProperty:
boolValue
numberWithInteger:
removeAllObjects
postNotificationName:object:
sharedManager
availabilityForTrackPID:
_assetAvailabilityCache
exceptionWithName:reason:userInfo:
raise
numberWithBool:
numberWithFloat:
preferredIntervalsCount
clearPreferredIntervals
preferredIntervalAtIndex:
addPreferredInterval:
setLocalizedTitle:
supportedRatesCount
clearSupportedRates
supportedRateAtIndex:
addSupportedRate:
setLocalizedShortTitle:
command
setCommand:
setHasCommand:
hasCommand
commandAsString:
StringAsCommand:
setEnabled:
setHasEnabled:
hasEnabled
setActive:
setHasActive:
hasActive
preferredIntervals
setPreferredIntervals:count:
hasLocalizedTitle
hasLocalizedShortTitle
setMinimumRating:
setHasMinimumRating:
hasMinimumRating
setMaximumRating:
setHasMaximumRating:
hasMaximumRating
supportedRates
setSupportedRates:count:
setRepeatMode:
setHasRepeatMode:
hasRepeatMode
repeatModeAsString:
StringAsRepeatMode:
setShuffleMode:
setHasShuffleMode:
hasShuffleMode
shuffleModeAsString:
StringAsShuffleMode:
setPresentationStyle:
setHasPresentationStyle:
hasPresentationStyle
enabled
active
localizedTitle
localizedShortTitle
minimumRating
maximumRating
presentationStyle
_preferredIntervals
_supportedRates
_command
_localizedShortTitle
_localizedTitle
_maximumRating
_minimumRating
_presentationStyle
_repeatMode
_shuffleMode
_active
_enabled
setJpegData:
setOriginalDigest:
hasJpegData
hasOriginalDigest
jpegData
originalDigest
_jpegData
_originalDigest
_updateApplicationBundleIdentifier
isLocal
dictionaryWithObjects:forKeys:count:
mediaRemoteOrigin
componentsJoinedByString:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
sendMediaRemoteCommand:options:launchApp:
origin
initWithOrigin:
_applicationBundleIdentifier
_origin
copy
initWithPlayerResponse:libraryAddStatus:
tracklist
playingItem
dateWithTimeIntervalSinceReferenceDate:
playbackRateCommand
_nowPlayingSong
deviceLibraryPersistentID
numberWithLongLong:
syncID
name
isExplicitSong
_nowPlayingRadioStation
radioStationID
playerPath
representedBundleDisplayName
representedBundleID
repeatCommand
repeatType
shuffleCommand
shuffleType
likeCommand
value
dislikeCommand
wishlistCommand
_isAddToLibraryCommandEnabledFromAddStatus:
_isAddToLibraryCommandActiveFromAddStatus:
changeItemCommand
nextItem
previousItem
seekCommand
jumpByInterval:
preferredForwardJumpIntervals
doubleValue
preferredBackwardJumpIntervals
metadataObject
type
song
playingItemIndexPath
section
sectionAtIndex:
radioStation
isAddToLibraryCommandEqualBetweenAddStatus:andAddStatus:
_response
_addStatus
companionBundleIdentifier
setCompanionBundleIdentifier:
watchBundleIdentifier
setWatchBundleIdentifier:
localizedDisplayName
setLocalizedDisplayName:
setPlaybackState:
iconDigest
setIconDigest:
setProcessID:
initWithData:
hasProcessID
processID
_getNextPlaceholderProcessID
data
initWithProtobufData:
protobufData
_protobuf
_processID
initWithMachServiceName:options:
refreshMediaRemoteStateIfNecessary
sendMediaRemoteCommand:withCommandOptions:toOriginWithUniqueIdentifier:commandResultHandler:
prewarmCompanionSystemMusicApp
fetchCompanionCloudAvailabilityWithCompletionHandler:
discoverAndConnectEndpoints
fetchTrackAssetAvailabilityForTrackPID:completionHandler:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
resume
_proxy
localizedDescription
remoteObjectProxyWithErrorHandler:
sharedClient
_serverConnection
_serverConnectionQueue
mutableCopy
setObject:forKeyedSubscript:
numberWithUnsignedInt:
unsignedIntValue
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
addObject:
count
objectAtIndex:
initWithCapacity:
addSupportedCommand:
supportedCommandsCount
clearSupportedCommands
supportedCommandAtIndex:
supportedCommandType
_configurePlayerRequest
displayName
request
setTracklistRange:
_handleAddToLibraryMediaRemoteCommandWithOptions:
response
nmc_commandRequestWithMediaRemoteCommand:options:
userInfo
performRequest:completion:
flattenedGenericObject
anyObject
currentStatus
setModelObject:
performWithResponseHandler:
appendSection:
appendItem:
setShouldLibraryAdd:
setModelObjects:
beginAutomaticResponseLoading
endAutomaticResponseLoading
performWithCompletion:
_updateAddToLibraryStatusWithModelObject:
_notifyObserverOfUpdatedNowPlayingInfo
_updateIsEnforcingApplicationFilterWithNowPlayingState:
_notifyObserverOfUpdatedNowPlayingApplicationBundleID
_notifyObserverOfUpdatedPlaybackState
_notifyObserverOfUpdatedSupportedCommands
_notifyObserverOfUpdatedElapsedTime
_notifyObserversOfUpdatedTimestamp
originObserver:didUpdateNowPlayingInfoForOrigin:
originObserver:didUpdateNowPlayingApplicationBundleIdentifierForOrigin:
originObserver:didUpdatePlaybackStateForOrigin:
originObserver:didUpdateSupportedCommandsForOrigin:
originObserver:didUpdateElapsedTimeForOrigin:
originObserver:didUpdateTimestampForOrigin:
originObserver:didUpdatePlaybackQueueForOrigin:
arrayWithObjects:count:
propertySetWithProperties:
initWithProperties:relationships:
requiredLibraryAddStatusObservationProperties
propertySetByCombiningWithPropertySet:
setQualityOfService:
setPlayerPath:
setPlayingItemProperties:
setQueueSectionProperties:
setRequest:
setDelegate:
setStatusBlock:
configureWithModelObject:
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
beginObserving
endObserving
updateNowPlayingStateWithCompletion:
nowPlayingState
delegate
shouldObservePlaybackQueue
setShouldObservePlaybackQueue:
shouldObserveArtwork
setShouldObserveArtwork:
preparePlayerRequestForNewPlaybackIntent
initWithPlayerPath:options:
_notifyObserversOfUpdatedPlaybackQueue
_serialQueue
_accessQueue
_isEnforcingApplicationFilter
_shouldFetchNextTrack
_playerPath
_filteringOptions
_requestResponseController
_nowPlayingState
_libraryAddStatusObserver
_delegate
floatValue
_updateItemPersistentIDIfNecessary:
_updateItemCompanionPersistentIDIfNecessary:
_updateItemAlbumPersistentIDIfNecessary:
_updateStoreAdamIDIfNecessary:
_updateTitleIfNecessary:
mediaPlayerBundle
_updateArtistIfNecessary:
_updateAlbumIfNecessary:
_updateExplicitTrackIfNecessary:
_updateArtworkCatalogIfNecesary:
_updateRadioStationNameIfNecessary:
_updateRadioStationIdentifierIfNecessary:
_updateRadioStationHashIfNecessary:
_updateAdvertisementIfNecessary:
_updateAlwaysLiveIfNecessary:
_updateArtworkImageDataIfNecessary:
_updateApplicationIconImageDataIfNecessary:
_updateFirstPartyMusicAppIfNecessary:
_updateLikeCommandSupportedIfNecessary:
_updateLikeCommandEnabledIfNecessary:
_updateLikedActiveIfNecessary:
_updateLikeCommandPresentationStyleIfNecessary:
_updateBanCommandSupportedIfNecessary:
_updateBanCommandEnabledIfNecessary:
_updateBannedActiveIfNecessary:
_updateBanCommandPresentationStyleIfNecessary:
_updateBookmarkCommandSupportedIfNecessary:
_updateBookmarkCommandEnabledIfNecessary:
_updateBookmarkedActiveIfNecessary:
_updateFastForwardTimeIntervalIfNecessary:
_updateRewindTimeIntervalIfNecessary:
_updateAddToLibraryCommandSupportedIfNecessary:
_updateAddToLibraryCommandEnabledIfNecessary:
_updateAddToLibraryActiveIfNecessary:
isEqualToDate:
setDuration:
setElapsedTimeAtLastUpdate:
_nowPlayingInfoIncludesLegacySupportedCommandsInfo:
applyMediaRemoteNowPlayingInfo:artwork:generalInfoChanged:elapsedTimeChanged:playbackStateChanged:applicationInfoChanged:supportedCommandsChanged:timestampChanged:
intValue
setPlaybackRate:
setPreferredPlaybackRate:
setItemPersistentID:
setItemCompanionPersistentID:
setItemAlbumPersistentID:
setStoreAdamID:
setTitle:
setArtist:
setAlbum:
setExplicitTrack:
setArtworkCatalog:
setRadioStationName:
setRadioStationIdentifier:
setRadioStationHash:
setAdvertisement:
setAlwaysLive:
setArtworkImageData:
setApplicationIconImageData:
setFirstPartyMusicApp:
setLikeCommandSupported:
setLikeCommandEnabled:
setLikedActive:
setLikeCommandPresentationStyle:
setBanCommandSupported:
setBanCommandEnabled:
setBannedActive:
setBanCommandPresentationStyle:
setBookmarkCommandSupported:
setBookmarkCommandEnabled:
setBookmarkedActive:
setFastForwardTimeInterval:
setRewindTimeInterval:
setAddToLibraryCommandSupported:
setAddToLibraryCommandEnabled:
setAddToLibraryActive:
applyMediaRemoteNowPlayingInfo:
applyMediaRemoteSupportedCommands:
setApplicationDisplayName:
setApplicationBundleIdentifier:
setRepeatModeCommandSupported:
setShuffleModeCommandSupported:
setPlaybackRateCommandSupported:
setLocalizedLikeTitle:
setLocalizedBanTitle:
setLocalizedBookmarkTitle:
setNextTrackCommandEnabled:
setPreviousTrackCommandEnabled:
setSkipForwardCommandEnabled:
setSkipBackwardCommandEnabled:
_usingLegacySupportedCommandsFallback
_firstPartyMusicApp
_nextTrackCommandEnabled
_previousTrackCommandEnabled
_actualPlaybackRate
_explicitTrack
_advertisement
_alwaysLive
_repeatModeCommandSupported
_shuffleModeCommandSupported
_playbackRateCommandSupported
_likeCommandSupported
_likeCommandEnabled
_likedActive
_banCommandSupported
_banCommandEnabled
_bannedActive
_bookmarkCommandSupported
_bookmarkCommandEnabled
_bookmarkedActive
_addToLibraryCommandSupported
_addToLibraryCommandEnabled
_addToLibraryActive
_skipForwardCommandEnabled
_skipBackwardCommandEnabled
_playbackState
_itemPersistentID
_itemCompanionPersistentID
_itemAlbumPersistentID
_storeAdamID
_title
_artist
_album
_radioStationName
_radioStationIdentifier
_radioStationHash
_artworkImageData
_artworkCatalog
_applicationDisplayName
_applicationIconImageData
_likeCommandPresentationStyle
_localizedLikeTitle
_banCommandPresentationStyle
_localizedBanTitle
_localizedBookmarkTitle
_duration
_elapsedTimeAtLastUpdate
_fastForwardTimeInterval
_rewindTimeInterval
arrayWithCapacity:
protobufFromDictionary:
dictionaryFromProtobuf:
externalPlayerCommand
negative
mediaType
playbackPosition
skipInterval
sourceID
systemAppPlaybackQueueData
shouldOverrideManuallyCuratedQueue
trackID
contentItemID
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
rating
contextID
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
setDictionaryKeyToProtobufKeyMapping:
setProtobufClass:
setDictionaryValueToProtobufValueTransformer:
setProtobufValueToDictionaryValueTransformer:
setIconData:
setBundleID:
hasIconData
hasBundleID
iconData
bundleID
_bundleID
_iconData
protobufDataFromDictionary:
dictionaryFromProtobufData:
allKeys
uniqueIdentifier
isMusicApp
artworkDataDigest
timeIntervalSinceReferenceDate
unsignedLongLongValue
validateUniqueIdentifier:error:
weakObjectsHashTable
weakToStrongObjectsMapTable
_setupOriginControllers
_nowPlayingStateForOrigin:
_originControllerForOrigin:
_updateNowPlayingStateForOrigin:completion:
keyEnumerator
allObjects
_evaluateNowPlayingOrigins
nowPlayingStateForOrigin:
setScheme:
setHost:
stringValue
setPath:
removeObject:
objectEnumerator
setOriginObserver:
setOriginCommandHandler:
originObserver
_enumerateObserverDelegates:
_addOriginControllerWithOrigin:
_updateOriginControllers:
setWithArray:
deltaFromOrigins:
addedOrigins
removedOrigins
_removeOriginControllerWithOrigin:
initWithOrigin:options:
removeObjectForKey:
_evaluateNowPlayingOriginsFromOrigins:
nowPlayingOriginsDidUpdateForController:
_evaluateActiveNowPlayingOriginForOrderedOrigins:
activeNowPlayingOriginDidUpdateForController:
distantPast
compare:
initWithOptions:
activeNowPlayingOrigin
nowPlayingOrigins
playbackQueueForOrigin:
updateNowPlayingStateForOrigin:completion:
updateNowPlayingStateForAllOriginsWithCompletion:
launchNowPlayingURLForOrigin:
sendMediaRemoteCommand:toOrigin:options:launchApp:
addObserverDelegate:
removeObserverDelegate:
beginObservingOrigins
endObservingOrigins
setOriginObserver:forOrigin:
setOriginCommandHandler:forOrigin:
prepareLocalOriginObserverForNewPlaybackIntent
filteringOptions
_registeredObserversCount
_originControllers
_observerDelegates
_activeNowPlayingOrigin
_activeNowPlayingOriginExplanationLog
_nowPlayingOrigins
_shouldObserveArtwork
_shouldObservePlaybackQueue
_observerLock
hasTitle
hasArtist
hasAlbum
setHasDuration:
hasDuration
pauseCommand
playCommand
stopCommand
togglePlayPauseCommand
nextTrackCommand
previousTrackCommand
skipForwardCommand
skipBackwardCommand
seekForwardCommand
seekBackwardCommand
ratingCommand
changePlaybackRateCommand
bookmarkCommand
changeRepeatModeCommand
changeShuffleModeCommand
createRadioStationCommand
addNowPlayingItemToLibraryCommand
setPlaybackQueueCommand
mpCommandForMRCommand:
_initWithErrorCode:handlerReturnStatuses:originIdentifier:
setErrorCode:
addHandlerReturnStatus:
errorCode
array
handlerReturnStatusCount
handlerReturnStatusAtIndex:
messageWithErrorCode:handlerReturnStatuses:originIdentifier:
handlerReturnStatuses
serializationDate
setHasProperNetworkConditionsToPlayMedia:
setHasHasProperNetworkConditionsToPlayMedia:
hasHasProperNetworkConditionsToPlayMedia
setCanShowCloudMusic:
setHasCanShowCloudMusic:
hasCanShowCloudMusic
hasProperNetworkConditionsToPlayMedia
canShowCloudMusic
_canShowCloudMusic
_hasProperNetworkConditionsToPlayMedia
setWidth:
setHasWidth:
hasWidth
setHeight:
setHasHeight:
hasHeight
width
height
_height
_width
addOrigins:
originsCount
clearOrigins
originsAtIndex:
originsType
origins
setOrigins:
_origins
isEqualToNumber:
originType
initWithMROriginRef:
logicalDeviceCount
updateWithMROrigin:
updateDeviceInfo:
_mediaRemoteOrigin
_deviceInfo
_cachedDisplayName
initWithAddedOrigins:removedOrigins:
_addedOrigins
_removedOrigins
_updateActiveOrigin
_updateAvailableOrigins
_handleDeviceInfoDidChangeNotification:
_updateLocalOrigin
enumerateObjectsUsingBlock:
allValues
minusSet:
_originWithMROriginRef:
orderedSetWithObjects:
dictionaryWithCapacity:
orderedSetWithCapacity:
_orderForOriginIdentifier:
sortUsingComparator:
postNotificationName:object:userInfo:
activeOrigin
originWithUniqueIdentifier:
_originIdentifiers
_activeOriginIdentifier
_localOriginIdentifier
_companionOriginIdentifier
initWithCommand:bundleID:options:originIdentifier:
setOptions:
options
messageWithCommand:bundleID:options:originIdentifier:
numberWithUnsignedLongLong:
setSourceID:
setMediaType:
setSystemAppPlaybackQueueData:
setDestinationAppDisplayID:
setContextID:
setStationURL:
setContentItemID:
hasSourceID
hasMediaType
setExternalPlayerCommand:
setHasExternalPlayerCommand:
hasExternalPlayerCommand
setSkipInterval:
setHasSkipInterval:
hasSkipInterval
setHasPlaybackRate:
hasPlaybackRate
setRating:
setHasRating:
hasRating
setNegative:
setHasNegative:
hasNegative
setPlaybackPosition:
setHasPlaybackPosition:
hasPlaybackPosition
hasContextID
setTrackID:
setHasTrackID:
hasTrackID
setRadioStationID:
setHasRadioStationID:
hasRadioStationID
hasRadioStationHash
hasSystemAppPlaybackQueueData
hasDestinationAppDisplayID
setSendOptions:
setHasSendOptions:
hasSendOptions
setRequestDefermentToPlaybackQueuePosition:
setHasRequestDefermentToPlaybackQueuePosition:
hasRequestDefermentToPlaybackQueuePosition
setShouldOverrideManuallyCuratedQueue:
setHasShouldOverrideManuallyCuratedQueue:
hasShouldOverrideManuallyCuratedQueue
hasStationURL
setShouldBeginRadioPlayback:
setHasShouldBeginRadioPlayback:
hasShouldBeginRadioPlayback
setPlaybackQueueInsertionPosition:
setHasPlaybackQueueInsertionPosition:
hasPlaybackQueueInsertionPosition
hasContentItemID
_playbackPosition
_radioStationID
_trackID
_contentItemID
_contextID
_destinationAppDisplayID
_mediaType
_playbackQueueInsertionPosition
_playbackRate
_rating
_sendOptions
_skipInterval
_sourceID
_stationURL
_systemAppPlaybackQueueData
_externalPlayerCommand
_negative
_requestDefermentToPlaybackQueuePosition
_shouldBeginRadioPlayback
_shouldOverrideManuallyCuratedQueue
addContentItem:
contentItemsCount
clearContentItems
contentItemAtIndex:
contentItemType
setLocation:
setHasLocation:
hasLocation
location
contentItems
setContentItems:
_contentItems
_location
setArtworkDataDigest:
setElapsedTime:
setHasElapsedTime:
hasElapsedTime
setUniqueIdentifier:
setHasUniqueIdentifier:
hasUniqueIdentifier
setIsExplicitTrack:
setHasIsExplicitTrack:
hasIsExplicitTrack
setIsMusicApp:
setHasIsMusicApp:
hasIsMusicApp
setHasRadioStationIdentifier:
hasRadioStationIdentifier
hasRadioStationName
hasArtworkDataDigest
setIsAlwaysLive:
setHasIsAlwaysLive:
hasIsAlwaysLive
setIsAdvertisement:
setHasIsAdvertisement:
hasIsAdvertisement
setHasStoreAdamID:
hasStoreAdamID
setHasPreferredPlaybackRate:
hasPreferredPlaybackRate
_elapsedTime
_uniqueIdentifier
_artworkDataDigest
_isAdvertisement
_isAlwaysLive
_isExplicitTrack
_isMusicApp
substringToIndex:
uppercaseString
stringByReplacingCharactersInRange:withString:
valueForKey:
methodForSelector:
nmr_valueForPotentiallyUndefinedKey:
enumerateKeysAndObjectsUsingBlock:
validateValue:forKey:error:
setValue:forKey:
dictionaryKeyToProtobufKeyMapping
protobufClass
dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
_protobufKeyToDictionaryKeyMapping
_dictionaryKeyToProtobufKeyMapping
_protobufClass
_dictionaryValueToProtobufValueTransformer
_protobufValueToDictionaryValueTransformer
_initWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:originIdentifier:
messageWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:originIdentifier:
nowPlayingInfoData
applicationInfoData
supportedCommandsData
playbackQueueData
_initWithJPEGArtwork:originalDigest:originIdentifier:
messageWithJPEGArtwork:originalDigest:originIdentifier:
jpegArtwork
_initWithIcon:originalDigest:bundleID:originIdentifier:
messageWithIcon:originalDigest:bundleID:originIdentifier:
icon
_initWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:originIdentifier:
setNowPlayingInfoDigest:
setApplicationInfoDigest:
setSupportedCommandsDigest:
setPlaybackQueueDigest:
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
messageWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:originIdentifier:
initWithOriginIdentifier:
messageWithOriginIdentifier:
_initWithIconWidth:height:bundleID:originIdentifier:
messageWithIconWidth:height:bundleID:originIdentifier:
mediaRemoteNowPlayingClient
initWithMRNowPlayingClient:
_mediaRemoteNowPlayingClient
_bundleIdentifier
_displayName
_configureMediaRemoteUpdaters
_updateEverything
_registerForMediaRemoteNotifications
_unregisterForMediaRemoteNotifications
beginObservingMediaRemotePlaybackQueueForOrigin:
_updateNowPlayingInfoWithCompletion:
_updateSupportedCommandsWithCompletion:
_updatePlaybackStateWithCompletion:
_updateNowPlayingApplicationInfoWithOptions:withCompletion:
_handlePlaybackQueueDidChangeNotification:
_handleContentItemsDidChangeNotification:
_handleContentItemArtworkDidChangeNotification:
_handleNowPlayingApplicationDidChangeNotification:
_handleNowPlayingApplicationPlaybackStateDidChangeNotification:
_handleSupportedCommandsDidChangeNotification:
removeObserver:name:object:
shouldHandleNotification:
initFromNotification:
_hasEqualIdentifierWithContentItem:
_updateNowPlayingContentItem:
_updateArtworkWithCompletion:
_updateIsEnforcingApplicationFilter
_updateNowPlayingClientWithCompletion:
playbackQueueDidChange:
playbackQueue:contentItemsDidChange:
_isRegisteredForMediaRemoteNotifications
_nowPlayingClient
_nowPlayingContentItemRef
_nowPlayingInfoUpdater
_artworkUpdater
_bundleIDUpdater
_supportedCommandsUpdater
_playbackStateUpdater
_mutableNowPlayingState
_nowPlayingClientFromNotification:
_originFromNotification:
_refreshCurrentPlaybackQueueFromMediaRemoteWithCompletion:
_mediaRemotePlaybackQueueWithRange:includeMetadata:
objectAtIndexedSubscript:
containsObject:
_metadataForItemWithIdentifier:
observedRange
_contentItemIdentifiers
_updateWithMediaRemoteQueue:
_itemWithIdentifier:
_needsMetadataForMediaRemoteItem:
fullPlaybackQueueData
copyFullMediaRemotePlaybackQueueIncludingMetadata:
copyMediaRemotePlaybackQueueWithRange:includeMetadata:
deltaPlaybackQueueDataFromPreviousData:invalidatedMetadataIdentifiers:
updateWithData:
_updateMetadataWithMediaRemoteItems:
_rangeOfItemsNeedingMetadataForMediaRemoteQueue:
_needsUpdateForMediaRemoteQueue:
setObservedRange:
setOrigin:
_upNextPlaybackQueue
_observingMediaRemote
_playbackQueueUpdater
_observedRange
appendString:
hasOptions
_options
setKnownDigest:
hasKnownDigest
hasNowPlayingInfoDigest
hasApplicationInfoDigest
hasSupportedCommandsDigest
hasPlaybackQueueDigest
knownDigest
_applicationInfoDigest
_knownDigest
_nowPlayingInfoDigest
_playbackQueueDigest
_supportedCommandsDigest
bytes
dataWithBytes:length:
isEqualToData:
_notifyObserverOfUpdatedNowPlayingApplicationBundleIdentifier
_notifyObserverOfUpdatedTimestamp
_notifyObserverOfUpdatedPlaybackQueue
originCommandHandler
_isObserving
_hasPendingNowPlayingInfoChange
_hasPendingElapsedTimeChange
_hasPendingPlaybackStateChange
_hasPendingSupportedCommandsChange
_hasPendingNowPlayingApplicationBundleIdentifierChange
_hasPendingTimestampChange
_hasPendingPlaybackQueueChange
_originCommandHandler
_commandHandlerAccessQueue
_originObserver
setDisplayName:
deviceInfoData
setDeviceInfoData:
initWithProtobuf:
protobuf
hasCompanionBundleIdentifier
hasLocalizedDisplayName
setHasPlaybackState:
hasPlaybackState
hasWatchBundleIdentifier
hasIconDigest
setHasProcessID:
_companionBundleIdentifier
_iconDigest
_localizedDisplayName
_watchBundleIdentifier
setTarget:
setAction:
setMessageType:
numberWithUnsignedShort:
UTF8String
initWithService:
addDelegate:queue:
_sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:isResponse:additionalOptions:resultingMessageIdentifier:error:
context
outgoingResponseIdentifier
initWithProtobufData:type:isResponse:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
target
action
messageCenter:messageWithIdentifier:didSendWithSuccess:error:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setMessageHandlerTarget:action:forIncomingMessagesOfType:
startHandlingMessages
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:expectReply:queueOneIdentifier:resultingMessageIdentifier:error:
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:inReplyTo:resultingMessageIdentifier:error:
_idsQueue
_idsService
_messageHandlers
messageType
_messageType
_target
_action
clearHandlerReturnStatus
setHasErrorCode:
hasErrorCode
handlerReturnStatus
setHandlerReturnStatus:count:
_handlerReturnStatus
_errorCode
hasDisplayName
hasDeviceInfoData
_deviceInfoData
explicitTrack
playbackRateCommandSupported
skipForwardCommandEnabled
skipBackwardCommandEnabled
[%@] executeUpdateBlock
[%@] setting state to pending and bailing
[%@] setting state to updating
[%@] calling block
[%@] finished block
[%@] state is pending, will retry
[%@] setting state to idle, 
[PerformanceTesting] Selected origin: %@
Command sent to app %@ failed with error %d (handlerReturnStatuses: [%@]).
Failed to get remote object proxy (%@).
Short-Circuited media remote command (%u) sent successfully 
Short-Circuited media remote command (%u) failed to be sent due to error: (%u), statuses: (%{public}@)
%s command request %@ failed with error: %@
%{public}@ failed to remove %@ from library due to %@
%{public}@ failed to add %@ to library due to %@
%{public}@ Begin observing
%{public}@ End observing
%{public}@ UpdateNowPlayingStateWithCompletion
%{public}@ Will update nowPlayingState...
%{public}@ Updated nowPlayingState: %@
%{public}@ Add to library status changed. Updated nowPlayingState: %@
[NMROriginObserver] Now playing origins are updated: %@
[NMROriginObserver] Active now playing origin is updated: %@. %@
[Origin] Fetching available MROrigins.
[Origin] Failed to fetch any available origins
[Origin] Updated available origins: %@
[Origin] Updated deviceInfo for origins: %@
[Origin] Fetching active MROrigin.
[Origin] Failed to get active origin from MR.
[Origin] Update active origin: %@
Encountered unknown protobuf key (%@) while converting to a dictionary; skipping.
[NMROriginObserver] NMRNowPlayingClient is nil
%{public}@ initializing...
%{public}@ Updating now playing client
%{public}@ Failed to fetch now playing client with error: %@
%{public}@ Updated now playing client %@
%{public}@ begin observing
%{public}@ end observing
%{public}@ shouldObserveArtwork %@
%{public}@ setShouldObservePlaybackQueue %@
%{public}@ updateNowPlayingStateWithCompletion
%{public}@ updating everything...
%{public}@ registering for MR notifications
%{public}@ unregistering for MR notifications
%{public}@ received %@
%{public}@ updated nowPlayingClient %@
%{public}@ ignoring %@
%{public}@ received %@ for %@
%{public}@ configuring MR updaters...
%{public}@ configured nowPlayingInfoUpdater %@
%{public}@ configured artworkUpdater %@
%{public}@ configured bundleIDUpdater %@
%{public}@ configured supportedCommandsUpdater %@
%{public}@ configured playbackStateUpdater %@
%{public}@ Updating nowPlayingState for client %@
%{public}@ Failed to fetch now playing playback queue with error: %@
%{public}@ Dropping nowPlayingState for previous client: %@
%{public}@ Updating artwork for client %@
%{public}@ Failed to fetch artwork with error: %@
%{public}@ Updated nowPlayingState with artwork (observe: %d, artworkData: %d) %@
%{public}@ Updating applicationBundleID for client %@ (%@)
%{public}@ Updated applicationBundleID %@
%{public}@ Dropping applicationBundleID for unchanged client
%{public}@ Updating supportedCommands for client %@
%{public}@ Updated supportedCommands %@
%{public}@ Updated supportedCommands (%ld commands)
%{public}@ Dropping supportedCommands for previous client: %@
%{public}@ Updating playbackState for client %@
%{public}@ Updated playbackState %ld
%{public}@ Dropping playbackState for previous client: %@
Building delta queue from previous data
Previous data empty, serialize the full queue with all metadata
Location different, include new items in delta
Count different, include new items in delta
Found an item that didn't match up (index %lu), include new items in delta
Found an item missing metadata (index %lu)
Found an item with invalidated metadata (index %lu)
Nothing changed, delta queue is empty
Built delta queue: %@
Got a new queue item that didn't include metadata, and we don't have any cached metadata for this item, identifier: %@
Updated with new data, queue is now: %@
Requesting playback queue information for range: %ld -> %ld
Created queue: %@
Updated with new mediaRemote info, queue is now %@
No need to update content item (identifier: %@), not currently in queue
_PlaybackQueueDidChangeNotification for origin %@
_PlaybackQueueContentItemsDidChange for origin %@
[NMROriginObserver] Notifying nowPlayingInfo for %@
[NMROriginObserver] Notifying playbackState for %@
[NMROriginObserver] Notifying supportedCommands for %@
[NMROriginObserver] Notifying elapsedTime for %@
[NMROriginObserver] Notifying applicationBundleID for %@
[NMROriginObserver] Notifying timestamp for %@
[NMROriginObserver] Notifying playbackQueue for %@
Successfully requested delivery of %@ message (%@).
Failed to request delivery of %@ message (%@) with error "%@".
Received %@ %@ message (ID: %@, %lu byte payload).
Successfully sent message (ID: %@).
Failed to send message (ID: %@) with error "%@".
v4@?0
origin
watch
phone
homepod
B12@?0@"NMROrigin"4@"NSDictionary"8
%@ %@
identifier
metadata
hasIdentifier
TB,R,N
T@"NSString",&,N,V_identifier
hasMetadata
T@"_NMRContentItemMetadata",&,N,V_metadata
<%@:%p playbackState: %d, playbackRate: %f, title: %@, artist: %@, appDisplayName: %@, appBundleID: %@>
com.apple.podcasts
com.apple.NanoRadio
com.apple.SessionTrackerApp
NOT_PLAYING_TITLE
Not Playing
timestamp
T@"NSDate",R,N
duration
Td,R,N
playbackRate
Tf,R,N
preferredPlaybackRate
Tf,R,N,V_preferredPlaybackRate
playbackState
TI,R,N
elapsedTimeAtLastUpdate
playing
TB,R,N,GisPlaying
elapsedTime
hasNowPlayingInfo
identifiers
T@"MPIdentifierSet",R,N
itemPersistentID
T@"NSNumber",R,N
itemCompanionPersistentID
itemAlbumPersistentID
storeAdamID
title
T@"NSString",R,N
displayTitle
artist
album
explicitTrack
TB,R,N,GisExplicitTrack
artworkCatalog
T@"MPArtworkCatalog",R,N
radioStationName
radioStationIdentifier
radioStationHash
advertisement
TB,R,N,GisAdvertisement
alwaysLive
TB,R,N,GisAlwaysLive
isPlayingRadio
artworkImageData
T@"NSData",R,N
firstPartyApp
TB,R,N,GisFirstPartyApp
applicationDisplayName
applicationBundleIdentifier
applicationIconImageData
repeatModeCommandSupported
TB,R,N,GisRepeatModeCommandSupported
repeatMode
Ti,R,N
shuffleModeCommandSupported
TB,R,N,GisShuffleModeCommandSupported
shuffleMode
playbackRateCommandSupported
TB,R,N,GisPlaybackRateCommandSupported
likeCommandSupported
TB,R,N,GisLikeCommandSupported
likeCommandEnabled
TB,R,N,GisLikeCommandEnabled
likedActive
TB,R,N,GisLikedActive
localizedLikeTitle
likeCommandPresentationStyle
banCommandSupported
TB,R,N,GisBanCommandSupported
banCommandEnabled
TB,R,N,GisBanCommandEnabled
bannedActive
TB,R,N,GisBannedActive
localizedBanTitle
banCommandPresentationStyle
bookmarkCommandSupported
TB,R,N,GisBookmarkCommandSupported
bookmarkCommandEnabled
TB,R,N,GisBookmarkCommandEnabled
bookmarkedActive
TB,R,N,GisBookmarkedActive
localizedBookmarkTitle
addToLibraryCommandSupported
TB,R,N,GisAddToLibraryCommandSupported
addToLibraryCommandEnabled
TB,R,N,GisAddToLibraryCommandEnabled
addToLibraryActive
TB,R,N,GisAddToLibraryActive
hasSupportedFeedbackCommands
nextTrackCommandEnabled
previousTrackCommandEnabled
skipForwardCommandEnabled
TB,R,N,GisSkipForwardCommandEnabled
skipBackwardCommandEnabled
TB,R,N,GisSkipBackwardCommandEnabled
fastForwardTimeInterval
rewindTimeInterval
originIdentifier
hasTimestamp
TB,N
Td,N,V_timestamp
hasOriginIdentifier
Ti,N,V_originIdentifier
com.apple.NanoMediaRemote
state
payload
digest
nowPlayingInfo
applicationInfo
supportedCommands
playbackQueue
hasState
Ti,N,V_state
hasPayload
T@"NSData",&,N,V_payload
hasDigest
T@"NSData",&,N,V_digest
T@"NSData",&,N,V_nowPlayingInfo
hasApplicationInfo
T@"NSData",&,N,V_applicationInfo
hasSupportedCommands
T@"NSData",&,N,V_supportedCommands
hasPlaybackQueue
T@"NSData",&,N,V_playbackQueue
com.apple.private.nanomediaremote
NMRCompanionCloudAvailabilityDidChangeNotification
NMRCompanionNowPlayingApplicationIconDidChangeNotification
NMCTrackAssetAvailabilityDidChange
idx (%tu) is out of range (%tu)
command
enabled
active
preferredInterval
localizedTitle
localizedShortTitle
minimumRating
maximumRating
supportedRate
presentationStyle
hasCommand
Ti,N,V_command
hasEnabled
TB,N,V_enabled
hasActive
TB,N,V_active
preferredIntervalsCount
preferredIntervals
T^d,R,N
hasLocalizedTitle
T@"NSString",&,N,V_localizedTitle
hasLocalizedShortTitle
T@"NSString",&,N,V_localizedShortTitle
hasMinimumRating
Tf,N,V_minimumRating
hasMaximumRating
Tf,N,V_maximumRating
supportedRatesCount
supportedRates
T^f,R,N
hasRepeatMode
Ti,N,V_repeatMode
hasShuffleMode
Ti,N,V_shuffleMode
hasPresentationStyle
Ti,N,V_presentationStyle
Unknown
Play
Pause
TogglePlayPause
Stop
NextTrack
PreviousTrack
AdvanceShuffleMode
AdvanceRepeatMode
BeginFastForward
EndFastForward
BeginRewind
EndRewind
Rewind15Seconds
FastForward15Seconds
Rewind30Seconds
FastForward30Seconds
SkipForward
SkipBackward
ChangePlaybackRate
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
SeekToPlaybackPosition
ChangeRepeatMode
ChangeShuffleMode
NextChapter
PreviousChapter
NextAlbum
PreviousAlbum
NextPlaylist
PreviousPlaylist
BanTrack
AddTrackToWishList
RemoveTrackFromWishList
NextInContext
PreviousInContext
ResetPlaybackTimeout
SetPlaybackQueue
AddNowPlayingItemToLibrary
CreateRadioStation
AddItemToLibrary
InsertIntoPlaybackQueue
(unknown: %i)
None
Albums
Songs
jpegData
originalDigest
hasJpegData
T@"NSData",&,N,V_jpegData
hasOriginalDigest
T@"NSData",&,N,V_originalDigest
com.apple.NanoMusic
com.apple.Music
com.apple.NanoNowPlaying
com.apple.NanoNowPlayingViewService
v12@?0I4^{__CFArray=}8
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NMROrigin",R,N
T@"NMROrigin",R,N,V_origin
companionBundleIdentifier
T@"NSString",C,N
watchBundleIdentifier
localizedDisplayName
TI,N
iconDigest
T@"NSData",C,N
processID
Ti,N
com.apple.NanoMediaRemote.XPCQueue
v8@?0@"NSError"4
v8@?0@"NSDictionary"4
v12@?0B4@"NSArray"8
v8@?0@"NSData"4
supportedCommand
T@"NSMutableArray",&,N,V_supportedCommands
com.apple.NanoMediaRemote.MPRequestResponseController
com.apple.NanoMediaRemote.NowPlayingState
<%@:%p (%@)>
-[NMROriginMediaPlaybackCoreController sendMediaRemoteCommand:options:launchApp:]_block_invoke
v12@?0@"NSArray"4@"NSError"8
v12@?0@4@"NSError"8
v8@?0I4
nowPlayingState
T@"NMRNowPlayingState",R,N
T@"NMRPlaybackQueue",R,N
delegate
T@"<NMROriginObserverDelegate>",W,N
shouldObservePlaybackQueue
shouldObserveArtwork
T@"NMRPlaybackQueue",R,N,VplaybackQueue
T@"<NMROriginObserverDelegate>",W,N,V_delegate
TB,N,VshouldObservePlaybackQueue
TB,N,VshouldObserveArtwork
LOADING_AUDIO_LABEL
MediaPlayer
B4@?0
@"NSString"4@?0
T@"NSDate",C,N,V_timestamp
Td,N,V_duration
Tf,D,N
Tf,N,V_preferredPlaybackRate
TI,N,V_playbackState
Td,N,V_elapsedTimeAtLastUpdate
T@"NSNumber",C,N,V_itemPersistentID
T@"NSNumber",C,N,V_itemCompanionPersistentID
T@"NSNumber",C,N,V_itemAlbumPersistentID
T@"NSNumber",C,N,V_storeAdamID
T@"NSString",C,N,V_title
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_album
TB,N,GisExplicitTrack,V_explicitTrack
T@"NSString",C,N,V_radioStationName
T@"NSNumber",C,N,V_radioStationIdentifier
T@"NSString",C,N,V_radioStationHash
TB,N,GisAdvertisement,V_advertisement
TB,N,GisAlwaysLive,V_alwaysLive
T@"NSData",&,N,V_artworkImageData
T@"NSString",C,N,V_applicationDisplayName
T@"NSString",C,N,V_applicationBundleIdentifier
T@"NSData",&,N,V_applicationIconImageData
TB,N,GisRepeatModeCommandSupported,V_repeatModeCommandSupported
TB,N,GisShuffleModeCommandSupported,V_shuffleModeCommandSupported
TB,N,GisPlaybackRateCommandSupported,V_playbackRateCommandSupported
TB,N,GisLikeCommandSupported,V_likeCommandSupported
TB,N,GisLikeCommandEnabled,V_likeCommandEnabled
TB,N,GisLikedActive,V_likedActive
T@"NSString",C,N,V_localizedLikeTitle
Ti,N,V_likeCommandPresentationStyle
TB,N,GisBanCommandSupported,V_banCommandSupported
TB,N,GisBanCommandEnabled,V_banCommandEnabled
TB,N,GisBannedActive,V_bannedActive
T@"NSString",C,N,V_localizedBanTitle
Ti,N,V_banCommandPresentationStyle
TB,N,GisBookmarkCommandSupported,V_bookmarkCommandSupported
TB,N,GisBookmarkCommandEnabled,V_bookmarkCommandEnabled
TB,N,GisBookmarkedActive,V_bookmarkedActive
T@"NSString",C,N,V_localizedBookmarkTitle
TB,N,GisAddToLibraryCommandSupported,V_addToLibraryCommandSupported
TB,N,GisAddToLibraryCommandEnabled,V_addToLibraryCommandEnabled
TB,N,GisAddToLibraryActive,V_addToLibraryActive
T@"NSNumber",&,N,V_nextTrackCommandEnabled
T@"NSNumber",&,N,V_previousTrackCommandEnabled
TB,N,GisSkipForwardCommandEnabled,V_skipForwardCommandEnabled
TB,N,GisSkipBackwardCommandEnabled,V_skipBackwardCommandEnabled
Td,N,V_fastForwardTimeInterval
Td,N,V_rewindTimeInterval
NanoMusicCore
NanoMediaRemote
NanoAudioControl
NanoMusicSync
NanoMediaUI
NanoMediaTool
com.apple.nanomusic
@16@?0@"NSDictionary"4@"NSString"8@12
@16@?0@"PBCodable"4@"NSString"8@12
iconData
bundleID
hasIconData
T@"NSData",&,N,V_iconData
hasBundleID
T@"NSString",&,N,V_bundleID
com.apple.NanoMediaRemote.NowPlayingController
music
radio
podcasts
now-playing
v8@?0@"<NMROriginObserverDelegate>"4
Active now playing origin defaulted to the local origin
Active now playing origin was decided by timestamp
Active now playing origin was decided by isPlaying
T@"<NMRNowPlayingControllerDelegate>",W,N
activeNowPlayingOrigin
nowPlayingOrigins
T@"NSArray",R,N
filteringOptions
TI,R,N,V_filteringOptions
hasTitle
T@"NSString",&,N,V_title
hasArtist
T@"NSString",&,N,V_artist
hasAlbum
T@"NSString",&,N,V_album
hasDuration
errorCode
handlerReturnStatuses
serializationDate
hasProperNetworkConditionsToPlayMedia
canShowCloudMusic
hasHasProperNetworkConditionsToPlayMedia
TB,N,V_hasProperNetworkConditionsToPlayMedia
hasCanShowCloudMusic
TB,N,V_canShowCloudMusic
width
height
hasWidth
Td,N,V_width
hasHeight
Td,N,V_height
origins
T@"NSMutableArray",&,N,V_origins
com.apple.NanoMediaRemote.sendCommand.UIRoundTripDelay
com.apple.NanoMediaRemote.sendCommand.failedWithTimeout
com.apple.NanoMediaRemote.sendCommand.failedToSend
NMRMediaRemoteOriginAvailableOriginsDidChangeNotification
NMRMediaRemoteOriginActiveOriginDidChangeNotification
NMRMediaRemoteDeviceInfoDidChangeNotification
NMROriginsUserInfoKey
com.apple.NanoMediaRemote.Origin
<%@:%p displayName: %@, identifier: %d, type: %lu>
mediaRemoteOrigin
T^v,R,N
displayName
originType
uniqueIdentifier
isLocal
deviceInfo
logicalDeviceCount
addedOrigins
T@"NSSet",R,N,V_addedOrigins
removedOrigins
T@"NSSet",R,N,V_removedOrigins
com.apple.NanoMediaRemote.OriginManager
v16@?0@"NSNumber"4I8^B12
i12@?0@"NSNumber"4@"NSNumber"8
v12@?0^v4^{__CFError=}8
v8@?0^{__CFArray=}4
v12@?0C4^v8
sharedManager
T@"NMROriginManager",R
availableOrigins
activeOrigin
localOrigin
companionOrigin
options
T@"NSDictionary",R,N
sourceID
mediaType
externalPlayerCommand
skipInterval
rating
negative
playbackPosition
contextID
trackID
radioStationID
systemAppPlaybackQueueData
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
hasSourceID
T@"NSString",&,N,V_sourceID
hasMediaType
T@"NSString",&,N,V_mediaType
hasExternalPlayerCommand
TB,N,V_externalPlayerCommand
hasSkipInterval
Tf,N,V_skipInterval
hasPlaybackRate
Tf,N,V_playbackRate
hasRating
Tf,N,V_rating
hasNegative
TB,N,V_negative
hasPlaybackPosition
Td,N,V_playbackPosition
hasContextID
T@"NSString",&,N,V_contextID
hasTrackID
TQ,N,V_trackID
hasRadioStationID
Tq,N,V_radioStationID
hasRadioStationHash
T@"NSString",&,N,V_radioStationHash
hasSystemAppPlaybackQueueData
T@"NSData",&,N,V_systemAppPlaybackQueueData
hasDestinationAppDisplayID
T@"NSString",&,N,V_destinationAppDisplayID
hasSendOptions
TI,N,V_sendOptions
hasRequestDefermentToPlaybackQueuePosition
TB,N,V_requestDefermentToPlaybackQueuePosition
hasShouldOverrideManuallyCuratedQueue
TB,N,V_shouldOverrideManuallyCuratedQueue
hasStationURL
T@"NSString",&,N,V_stationURL
hasShouldBeginRadioPlayback
TB,N,V_shouldBeginRadioPlayback
hasPlaybackQueueInsertionPosition
Ti,N,V_playbackQueueInsertionPosition
hasContentItemID
T@"NSString",&,N,V_contentItemID
location
contentItem
hasLocation
Ti,N,V_location
contentItems
T@"NSMutableArray",&,N,V_contentItems
isExplicitTrack
isMusicApp
artworkDataDigest
isAlwaysLive
isAdvertisement
hasElapsedTime
Td,N,V_elapsedTime
hasUniqueIdentifier
TQ,N,V_uniqueIdentifier
hasIsExplicitTrack
TB,N,V_isExplicitTrack
hasIsMusicApp
TB,N,V_isMusicApp
hasRadioStationIdentifier
Tq,N,V_radioStationIdentifier
hasRadioStationName
T@"NSString",&,N,V_radioStationName
hasArtworkDataDigest
T@"NSData",&,N,V_artworkDataDigest
hasIsAlwaysLive
TB,N,V_isAlwaysLive
hasIsAdvertisement
TB,N,V_isAdvertisement
hasStoreAdamID
Tq,N,V_storeAdamID
hasPreferredPlaybackRate
has%@
@4@?0
v16@?0@"NSString"4@"NSString"8^B12
v16@?0@"NSString"4@8^B12
dictionaryKeyToProtobufKeyMapping
T@"NSDictionary",C,N,V_dictionaryKeyToProtobufKeyMapping
protobufClass
T#,&,N,V_protobufClass
dictionaryValueToProtobufValueTransformer
T@?,C,N,V_dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
T@?,C,N,V_protobufValueToDictionaryValueTransformer
nowPlayingInfoData
applicationInfoData
supportedCommandsData
playbackQueueData
jpegArtwork
icon
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
mediaRemoteNowPlayingClient
T^v,R,N,V_mediaRemoteNowPlayingClient
bundleIdentifier
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_displayName
com.apple.NanoMediaRemote.NowPlayingStateObserver
v8@?0@?<v@?>4
T@"NMRPlaybackQueue",R,N,V_playbackQueue
TB,N,V_shouldObservePlaybackQueue
TB,N,V_shouldObserveArtwork
com.apple.NanoMediaRemote.PlaybackQueue
v16@?0@"_NMRContentItem"4I8^B12
v16@?0@4I8^B12
T@"NMROrigin",&,N,V_origin
T@"<NMRPlaybackQueueDelegate>",W,N,V_delegate
observedRange
T{?=ii},N,V_observedRange
fullPlaybackQueueData
Playback queue with range %d -> %lu
  ContentItem identifier=%@, hasMetadata=%d, title=%@
hasOptions
T@"_NMRCommandOptionsProtobuf",&,N,V_options
knownDigest
hasKnownDigest
T@"NSData",&,N,V_knownDigest
hasNowPlayingInfoDigest
T@"NSData",&,N,V_nowPlayingInfoDigest
hasApplicationInfoDigest
T@"NSData",&,N,V_applicationInfoDigest
hasSupportedCommandsDigest
T@"NSData",&,N,V_supportedCommandsDigest
hasPlaybackQueueDigest
T@"NSData",&,N,V_playbackQueueDigest
com.apple.NanoMediaRemote.NMROriginController
originObserver
T@"<NMROriginObserver>",&,N,V_originObserver
originCommandHandler
T@"<NMROriginCommandHandler>",&,N
<%@:%p identifier: %d, displayName: %@>
T@"NSString",&,N
deviceInfoData
T@"NSData",&,N
hasCompanionBundleIdentifier
T@"NSString",&,N,V_companionBundleIdentifier
hasLocalizedDisplayName
T@"NSString",&,N,V_localizedDisplayName
hasPlaybackState
hasWatchBundleIdentifier
T@"NSString",&,N,V_watchBundleIdentifier
hasIconDigest
T@"NSData",&,N,V_iconDigest
hasProcessID
Ti,N,V_processID
%@.%@.idsQueue
com.apple.private.alloy.mediaremote
@"NSString"8@?0B4
ID: %@, QueueOne: %@, BypassDuet: %@, FireAndForget: %@, ForceLocal: YES, %lu byte payload
an UNHANDLED
T@"<NMRIDSMessageCenterDelegate>",W,N,V_delegate
messageType
TS,N,V_messageType
target
T@,W,N,V_target
action
T:,N,V_action
NMRIDSMessageTypeUnknown
NMRIDSMessageTypeMediaRemoteCommandRequest
NMRIDSMessageTypeMediaRemoteCommandResponse
NMRIDSMessageTypeMediaRemoteGetState
NMRIDSMessageTypeMediaRemoteSetState
NMRIDSMessageTypeMediaRemoteGetArtwork
NMRIDSMessageTypeMediaRemoteSetArtwork
NMRIDSMessageTypeGetCloudAvailability
NMRIDSMessageTypeSetCloudAvailability
NMRIDSMessageTypeGetSpecializedQueueInfo
NMRIDSMessageTypeSetSpecializedQueueInfo
NMRIDSMessageTypeMediaRemoteGetProxiedOrigins
NMRIDSMessageTypeMediaRemoteSetProxiedOrigins
NMRIDSMessageTypeMediaRemoteUpdateProxiedOrigins
NMRIDSMessageTypeDiscoverAndConnectEndpoints
NMRIDSMessageType(%hu)
handlerReturnStatus
hasErrorCode
TI,N,V_errorCode
handlerReturnStatusCount
T^I,R,N
NMRAugmentedNowPlayingInfoArtworkDataDigest
NMRAugmentedNowPlayingInfoCompanionItemPersistentID
NMRAugmentedNowPlayingInfoAlbumPersistentID
Ti,N,V_uniqueIdentifier
hasDisplayName
T@"NSString",&,N,V_displayName
hasDeviceInfoData
T@"NSData",&,N,V_deviceInfoData
T@"NSNumber",C,N,VitemPersistentID
T@"NSString",C,N,Vtitle
T@"NSString",C,N,Vartist
T@"NSString",C,N,Valbum
Tf,N,VplaybackRate
Tf,N,VpreferredPlaybackRate
TI,N,VplaybackState
TB,N,GisExplicitTrack,VexplicitTrack
TB,N,GisPlaybackRateCommandSupported,VplaybackRateCommandSupported
T@"NSNumber",&,N,VnextTrackCommandEnabled
T@"NSNumber",&,N,VpreviousTrackCommandEnabled
TB,N,GisSkipForwardCommandEnabled,VskipForwardCommandEnabled
TB,N,GisSkipBackwardCommandEnabled,VskipBackwardCommandEnabled
Td,N,VfastForwardTimeInterval
Td,N,VrewindTimeInterval
NMRMediaRemoteUpdater
PerformanceTesting
_NMRContentItem
NSCopying
NMRNowPlayingState
_NMRMediaRemoteGetArtworkMessage
NanoMediaRemote
_NMRMediaRemoteSetStateMessageProfobuf
NMRTrackAssetAvailabilityManager
_NMRCommandInfoProtobuf
_NMRMediaRemoteSetArtworkMessage
NMROriginMediaRemoteCommandHandler
NMROriginCommandHandler
NSObject
NMRPlayerResponseNowPlayingState
NMRNowPlayingApplicationInfo
NMRMediaRemoteProtobufCodable
NMRServiceInterface
_NMRClient
_NMRSupportedCommandsProtobuf
NMROriginMediaPlaybackCoreController
MPRequestResponseControllerDelegate
NMROriginObserver
NMRMediaRemoteNowPlayingState
_NMRMediaRemoteSetIconMessage
Validation
NMRNowPlayingController
NMROriginObserverDelegate
_NMRContentItemMetadata
NMRSendCommandResultMessage
_NMRCloudAvailabilityProtobuf
_NMRMediaRemoteGetIconMessage
_NMRProxiedOriginsProtobuf
NMROrigin
NMROriginUpdateDelta
NMROriginManager
NMRCloudAvailabilityMessage
NMRSendCommandMessage
_NMRCommandOptionsProtobuf
_NMRPlaybackQueue
_NMRNowPlayingInfoProtobuf
NMRAdditions
NMRProtobufSerialization
NMRMediaRemoteSetStateMessage
NMRMediaRemoteSetArtworkMessage
NMRMediaRemoteSetIconMessage
NMRMediaRemoteGetStateMessage
NMRMediaRemoteGetArtworkMessage
NMRMediaRemoteGetIconMessage
NMRNowPlayingClient
NMROriginMediaRemoteObserver
NMRPlaybackQueueDelegate
NMROriginMediaRemoteObserverNotificationHandler
NMRPlaybackQueue
_NMRSendCommandMessageProtobuf
_NMRMediaRemoteGetStateMessageProfobuf
NMROriginController
NMROriginInfo
_NMRNowPlayingApplicationStateProtobuf
NMRIDSMessageCenter
IDSServiceDelegate
_NMRIDSMessageHandler
_NMRSendCommandResultMessageProtobuf
_NMROriginProtobuf
NMRPlaceholderNowPlayingState
@16@0:4@8@?12
v8@0:4
@"NSObject<OS_dispatch_queue>"
@12@0:4@8
@12@0:4^{_NSZone=}8
B8@0:4
@8@0:4
B12@0:4@8
v12@0:4@8
I8@0:4
@"NSString"
@"_NMRContentItemMetadata"
I12@0:4@8
d8@0:4
f8@0:4
i8@0:4
v16@0:4d8
v12@0:4B8
v12@0:4i8
{?="timestamp"b1"originIdentifier"b1}
@"NSData"
{?="timestamp"b1"originIdentifier"b1"state"b1}
i12@0:4@8
@"NSCache"
@12@0:4i8
^d8@0:4
d12@0:4I8
v16@0:4^d8I12
v12@0:4f8
^f8@0:4
f12@0:4I8
v16@0:4^f8I12
{?="list"^d"count"I"size"I}
{?="list"^f"count"I"size"I}
{?="command"b1"maximumRating"b1"minimumRating"b1"presentationStyle"b1"repeatMode"b1"shuffleMode"b1"active"b1"enabled"b1}
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v20@0:4I8@12B16
v20@0:4I8@"NSDictionary"12B16
@"NMROrigin"8@0:4
@"NMROrigin"
B12@0:4I8
B16@0:4I8I12
@16@0:4@8I12
@"MPCPlayerResponse"
@12@0:4@"NSData"8
@"NSData"8@0:4
v12@0:4I8
@"_NMRNowPlayingApplicationStateProtobuf"
v24@0:4I8@12i16@?20
v12@0:4@?8
v16@0:4@8@?12
v24@0:4I8@"NSDictionary"12i16@?<v@?@"NSDictionary">20
v12@0:4@?<v@?@"NSData">8
v16@0:4@"NSNumber"8@?<v@?i>12
@"NSXPCConnection"
@12@0:4I8
@"NSMutableArray"
B16@0:4@8@12
v16@0:4@"MPRequestResponseController"8@?<v@?>12
B16@0:4@"MPRequestResponseController"8@"NSError"12
v12@0:4@"MPRequestResponseController"8
v12@0:4@?<v@?>8
@"NMRNowPlayingState"8@0:4
@"NMRPlaybackQueue"8@0:4
@"<NMROriginObserverDelegate>"8@0:4
v12@0:4@"<NMROriginObserverDelegate>"8
@"MPCPlayerPath"
@"MPRequestResponseController"
@"NMRPlayerResponseNowPlayingState"
@"MPLibraryAddStatusObserver"
@"<NMROriginObserverDelegate>"
@"NMRPlaybackQueue"
B12@0:4B8
B12@0:4i8
B16@0:4d8
v40@0:4@8@12^B16^B20^B24^B28^B32^B36
@"NSNumber"
@"NSDate"
@"MPArtworkCatalog"
B16@0:4^@8^@12
v16@0:4@8@12
v16@0:4@8@"NMROrigin"12
v24@0:4I8@12@16B20
@"NSMapTable"
@"NSHashTable"
@"NSArray"
@"<NMRNowPlayingControllerDelegate>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{?="duration"b1}
@20@0:4I8@12@16
@"_NMRSendCommandResultMessageProtobuf"
{?="canShowCloudMusic"b1"hasProperNetworkConditionsToPlayMedia"b1}
{?="height"b1"timestamp"b1"width"b1"originIdentifier"b1}
@12@0:4^v8
^v8@0:4
v12@0:4^v8
B12@0:4^v8
@16@0:4@8@12
@"NSSet"
@"NSMutableDictionary"
@"NSOrderedSet"
@"_NMRCloudAvailabilityProtobuf"
@24@0:4I8@12@16@20
@"_NMRSendCommandMessageProtobuf"
v16@0:4Q8
v16@0:4q8
Q8@0:4
q8@0:4
{?="playbackPosition"b1"radioStationID"b1"trackID"b1"playbackQueueInsertionPosition"b1"playbackRate"b1"rating"b1"repeatMode"b1"sendOptions"b1"shuffleMode"b1"skipInterval"b1"externalPlayerCommand"b1"negative"b1"requestDefermentToPlaybackQueuePosition"b1"shouldBeginRadioPlayback"b1"shouldOverrideManuallyCuratedQueue"b1}
{?="location"b1}
{?="duration"b1"elapsedTime"b1"radioStationIdentifier"b1"storeAdamID"b1"timestamp"b1"uniqueIdentifier"b1"playbackRate"b1"preferredPlaybackRate"b1"repeatMode"b1"shuffleMode"b1"isAdvertisement"b1"isAlwaysLive"b1"isExplicitTrack"b1"isMusicApp"b1}
v12@0:4#8
@?8@0:4
@"NSDictionary"
@28@0:4@8@12@16@20@24
@"_NMRMediaRemoteSetStateMessageProfobuf"
@20@0:4@8@12@16
@"_NMRMediaRemoteSetArtworkMessage"
@24@0:4@8@12@16@20
@"_NMRMediaRemoteSetIconMessage"
@"_NMRMediaRemoteGetStateMessageProfobuf"
@"_NMRMediaRemoteGetArtworkMessage"
@32@0:4d8d16@24@28
@"_NMRMediaRemoteGetIconMessage"
v12@0:4@"NMRPlaybackQueue"8
v16@0:4@"NMRPlaybackQueue"8@"NSArray"12
v16@0:4I8@?12
@"NMRNowPlayingClient"
@"NMRMediaRemoteUpdater"
@"NMRMediaRemoteNowPlayingState"
^v12@0:4@8
B12@0:4@"NSNotification"8
^v12@0:4B8
^v20@0:4{?=ii}8B16
{?=ii}12@0:4^v8
{?=ii}8@0:4
v16@0:4{?=ii}8
@"_NMRPlaybackQueue"
@"<NMRPlaybackQueueDelegate>"
{?="location"i"length"i}
@"_NMRCommandOptionsProtobuf"
{?="timestamp"b1"command"b1"originIdentifier"b1}
@"<NMROriginCommandHandler>"
@"<NMROriginObserver>"
@"_NMROriginProtobuf"
{?="playbackState"b1"processID"b1}
v28@0:4@8@12@16@20@24
v32@0:4@8@12@16@20@24@28
v28@0:4@8@12@16B20@24
v32@0:4@8@12@16B20@24@28
v28@0:4@8@12@16i20i24
v24@0:4@8@12@16@20
v20@0:4@8@12@16
v20@0:4@8@12@?16
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16i20i24
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@"NSString"20@24
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v20@0:4@"IDSService"8@"IDSAccount"12@"IDSGroupSessionParticipantUpdate"16
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
v20@0:4@8:12S16
B52@0:4@8S12I16d20B28B32B36@40^@44^@48
B48@0:4@8S12I16d20B28B32@36^@40^@44
@"IDSService"
@"<NMRIDSMessageCenterDelegate>"
S8@0:4
v12@0:4S8
:8@0:4
v12@0:4:8
^I8@0:4
I12@0:4I8
v16@0:4^I8I12
{?="list"^I"count"I"size"I}
{?="timestamp"b1"errorCode"b1"originIdentifier"b1}
{?="uniqueIdentifier"b1}
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
