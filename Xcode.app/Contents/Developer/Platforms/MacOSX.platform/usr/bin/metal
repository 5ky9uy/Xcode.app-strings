N4llvm3opt7ArgListE
N4llvm3opt12InputArgListE
N4llvm3opt14DerivedArgListE
N12_GLOBAL__N_110ObjCARCOptE
N12_GLOBAL__N_113ObjCARCExpandE
N12_GLOBAL__N_113ObjCARCAPElimE
N4llvm7objcarc20ObjCARCAliasAnalysisE
N12_GLOBAL__N_115ObjCARCContractE
N4llvm13AliasAnalysisE
N12_GLOBAL__N_114CapturesBeforeE
N12_GLOBAL__N_120AliasAnalysisCounterE
N12_GLOBAL__N_16AAEvalE
N12_GLOBAL__N_113AliasDebuggerE
N4llvm15AliasSetTracker13ASTCallbackVHE
N12_GLOBAL__N_115AliasSetPrinterE
N12_GLOBAL__N_118BasicAliasAnalysisE
N4llvm21BranchProbabilityInfoE
N12_GLOBAL__N_19CFGViewerE
N12_GLOBAL__N_113CFGOnlyViewerE
N12_GLOBAL__N_110CFGPrinterE
N12_GLOBAL__N_114CFGOnlyPrinterE
N4llvm14CaptureTrackerE
N12_GLOBAL__N_120SimpleCaptureTrackerE
Cost Model Analysis
N12_GLOBAL__N_117CostModelAnalysisE
N4llvm10DependenceE
N4llvm14FullDependenceE
N4llvm18DependenceAnalysisE
N12_GLOBAL__N_110DomPrinterE
N4llvm21DOTGraphTraitsPrinterINS_24DominatorTreeWrapperPassELb0EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_114DomOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_24DominatorTreeWrapperPassELb1EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_19DomViewerE
N4llvm20DOTGraphTraitsViewerINS_24DominatorTreeWrapperPassELb0EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_113DomOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_24DominatorTreeWrapperPassELb1EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_114PostDomPrinterE
N4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_118PostDomOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_113PostDomViewerE
N4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_117PostDomOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N4llvm21DominanceFrontierBaseE
N4llvm17DominanceFrontierE
N4llvm11IVStrideUseE
N4llvm10ilist_nodeINS_11IVStrideUseEEE
N4llvm15ilist_half_nodeINS_11IVStrideUseEEE
N4llvm7IVUsersE
N12_GLOBAL__N_19InstCountE
N4llvm11InstVisitorIN12_GLOBAL__N_19InstCountEvEE
N4llvm17IntervalPartitionE
N4llvm13LazyValueInfoE
N12_GLOBAL__N_114LVIValueHandleE
N4llvm20LibCallAliasAnalysisE
N4llvm11LibCallInfoE
N12_GLOBAL__N_14LintE
N4llvm11InstVisitorIN12_GLOBAL__N_14LintEvEE
N4llvm8LoopInfoE
N4llvm8LoopPassE
N4llvm13LPPassManagerE
N12_GLOBAL__N_113PrintLoopPassE
N12_GLOBAL__N_113MemDepPrinterE
N4llvm24MemoryDependenceAnalysisE
N12_GLOBAL__N_122ModuleDebugInfoPrinterE
N12_GLOBAL__N_14NoAAE
N4llvm17PostDominatorTreeE
N4llvm10RegionInfoE
N4llvm2cl3optINS_6Region10PrintStyleELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_6Region10PrintStyleELb0ELb0EEE
N4llvm2cl6parserINS_6Region10PrintStyleEEE
N4llvm2cl11OptionValueINS_6Region10PrintStyleEEE
N4llvm2cl15OptionValueBaseINS_6Region10PrintStyleELb0EEE
N4llvm2cl15OptionValueCopyINS_6Region10PrintStyleEEE
N4llvm2cl3optIbLb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIbLb1ELb0EEE
N4llvm10RegionPassE
N4llvm13RGPassManagerE
N12_GLOBAL__N_115PrintRegionPassE
N12_GLOBAL__N_112RegionViewerE
N4llvm20DOTGraphTraitsViewerINS_10RegionInfoELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_116RegionOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_10RegionInfoELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_113RegionPrinterE
N4llvm21DOTGraphTraitsPrinterINS_10RegionInfoELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_117RegionOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_10RegionInfoELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N4llvm11SCEVUnknownE
N4llvm4SCEVE
N4llvm14FoldingSetImpl4NodeE
N4llvm15ScalarEvolution14SCEVCallbackVHE
N4llvm15ScalarEvolutionE
N4llvm10FoldingSetINS_4SCEVEEE
N12_GLOBAL__N_128ScalarEvolutionAliasAnalysisE
N4llvm19TargetTransformInfoE
N12_GLOBAL__N_15NoTTIE
N12_GLOBAL__N_122TypeBasedAliasAnalysisE
N4llvm12ARMExceptionE
N4llvm10AsmPrinterE
N4llvm17AsmPrinterHandlerE
N4llvm14format_object1IyEE
N4llvm8DIEValueE
N4llvm10DIEIntegerE
N4llvm7DIEExprE
N4llvm8DIELabelE
N4llvm8DIEDeltaE
N4llvm9DIEStringE
N4llvm8DIEEntryE
N4llvm16DIETypeSignatureE
N4llvm8DIEBlockE
N4llvm3DIEE
N4llvm17DwarfCFIExceptionE
N4llvm10DwarfDebugE
N4llvm2cl3optIN12_GLOBAL__N_112DefaultOnOffELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_112DefaultOnOffELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_112DefaultOnOffELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm10FoldingSetINS_9DIEAbbrevEEE
N4llvm14DwarfExceptionE
N4llvm9DwarfUnitE
N4llvm16DwarfCompileUnitE
N4llvm13DwarfTypeUnitE
N4llvm14Win64ExceptionE
N4llvm13BitcodeReaderE
N4llvm12_GLOBAL__N_119ConstantPlaceHolderE
N12_GLOBAL__N_124BitcodeErrorCategoryTypeE
N12_GLOBAL__N_116WriteBitcodePassE
N4llvm24AggressiveAntiDepBreakerE
N12_GLOBAL__N_18BasicTTIE
N12_GLOBAL__N_116BranchFolderPassE
N12_GLOBAL__N_114CodeGenPrepareE
N4llvm18ValueMapCallbackVHIPNS_5ValueES2_NS_14ValueMapConfigIS2_EEEE
N12_GLOBAL__N_124TypePromotionTransaction13OperandSetterE
N12_GLOBAL__N_124TypePromotionTransaction19TypePromotionActionE
N12_GLOBAL__N_124TypePromotionTransaction18InstructionRemoverE
N12_GLOBAL__N_124TypePromotionTransaction13OperandsHiderE
N12_GLOBAL__N_124TypePromotionTransaction12UsesReplacerE
N12_GLOBAL__N_124TypePromotionTransaction12TruncBuilderE
N12_GLOBAL__N_124TypePromotionTransaction11TypeMutatorE
N12_GLOBAL__N_124TypePromotionTransaction11SExtBuilderE
N12_GLOBAL__N_124TypePromotionTransaction21InstructionMoveBeforeE
N12_GLOBAL__N_131CodeGenPrepareFortifiedLibCallsE
N4llvm22CriticalAntiDepBreakerE
N4llvm20DefaultVLIWSchedulerE
N4llvm18VLIWPacketizerListE
N12_GLOBAL__N_126DeadMachineInstructionElimE
N12_GLOBAL__N_114DwarfEHPrepareE
N12_GLOBAL__N_116EarlyIfConverterE
N4llvm11EdgeBundlesE
N12_GLOBAL__N_110ExeDepsFixE
N12_GLOBAL__N_117ExpandISelPseudosE
N12_GLOBAL__N_112ExpandPostRAE
N4llvm12GCModuleInfoE
N12_GLOBAL__N_17PrinterE
N4llvm10GCStrategyE
N12_GLOBAL__N_115LowerIntrinsicsE
N12_GLOBAL__N_121GCMachineCodeAnalysisE
N12_GLOBAL__N_111IfConverterE
N12_GLOBAL__N_113InlineSpillerE
UUUUUUUU33333333
N4llvm17LLVMTargetMachineE
N4llvm20LatencyPriorityQueueE
N4llvm18LiveDebugVariablesE
N4llvm13LiveIntervalsE
N4llvm13LiveRangeEdit8DelegateE
N4llvm13LiveRangeEditE
N4llvm13LiveRegMatrixE
N4llvm10LiveStacksE
N4llvm13LiveVariablesE
N12_GLOBAL__N_118LocalStackSlotPassE
N4llvm25MachineBlockFrequencyInfoE
N12_GLOBAL__N_121MachineBlockPlacementE
N12_GLOBAL__N_126MachineBlockPlacementStatsE
N4llvm28MachineBranchProbabilityInfoE
N12_GLOBAL__N_110MachineCSEE
N12_GLOBAL__N_122MachineCopyPropagationE
N4llvm17DominatorTreeBaseINS_17MachineBasicBlockEEE
N4llvm13DominatorBaseINS_17MachineBasicBlockEEE
N4llvm20MachineDominatorTreeE
N4llvm24MachineConstantPoolValueE
N4llvm19MachineFunctionInfoE
N4llvm23MachineFunctionAnalysisE
N4llvm19MachineFunctionPassE
N12_GLOBAL__N_126MachineFunctionPrinterPassE
N12_GLOBAL__N_120UnpackMachineBundlesE
N12_GLOBAL__N_122FinalizeMachineBundlesE
N12_GLOBAL__N_111MachineLICME
N4llvm15MachineLoopInfoE
N4llvm21MachineModuleInfoImplE
N4llvm26MMIAddrLabelMapCallbackPtrE
N4llvm17MachineModuleInfoE
N4llvm22MachineModuleInfoMachOE
N4llvm20MachineModuleInfoELFE
N4llvm27MachinePassRegistryListenerE
N4llvm24MachinePostDominatorTreeE
N4llvm19MachineRegisterInfo8DelegateE
N4llvm20MachineSchedStrategyE
N4llvm19ScheduleDAGMutationE
N4llvm13ScheduleDAGMIE
N4llvm17ScheduleDAGMILiveE
N4llvm19MachineSchedContextE
N12_GLOBAL__N_116MachineSchedulerE
N12_GLOBAL__N_120MachineSchedulerBaseE
N12_GLOBAL__N_120PostMachineSchedulerE
N12_GLOBAL__N_120PostGenericSchedulerE
N12_GLOBAL__N_120GenericSchedulerBaseE
N4llvm2cl3optIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ENS_18RegisterPassParserINS_20MachineSchedRegistryEEEEE
N4llvm2cl11opt_storageIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ELb0EEE
N4llvm18RegisterPassParserINS_20MachineSchedRegistryEEE
N4llvm2cl6parserIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N4llvm2cl11OptionValueIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N4llvm2cl15OptionValueBaseIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N12_GLOBAL__N_116GenericSchedulerE
N12_GLOBAL__N_113CopyConstrainE
N12_GLOBAL__N_119LoadClusterMutationE
N12_GLOBAL__N_111MacroFusionE
N12_GLOBAL__N_112ILPSchedulerE
N12_GLOBAL__N_114MachineSinkingE
N4llvm19MachineTraceMetricsE
N4llvm19MachineTraceMetrics8EnsembleE
N12_GLOBAL__N_121MinInstrCountEnsembleE
N12_GLOBAL__N_119MachineVerifierPassE
N12_GLOBAL__N_112OptimizePHIsE
N12_GLOBAL__N_114PHIEliminationE
N4llvm16TargetPassConfigE
N4llvm2cl3optIPFPNS_12FunctionPassEvELb0ENS_18RegisterPassParserINS_16RegisterRegAllocEEEEE
N4llvm2cl11opt_storageIPFPNS_12FunctionPassEvELb0ELb0EEE
N4llvm18RegisterPassParserINS_16RegisterRegAllocEEE
N4llvm2cl6parserIPFPNS_12FunctionPassEvEEE
N4llvm2cl11OptionValueIPFPNS_12FunctionPassEvEEE
N4llvm2cl15OptionValueBaseIPFPNS_12FunctionPassEvELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_12FunctionPassEvEEE
N4llvm2cl3optINS0_13boolOrDefaultELb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageINS0_13boolOrDefaultELb0ELb0EEE
N12_GLOBAL__N_117PeepholeOptimizerE
N4llvm14AntiDepBreakerE
N12_GLOBAL__N_115PostRASchedulerE
N12_GLOBAL__N_120SchedulePostRATDListE
N12_GLOBAL__N_119ProcessImplicitDefsE
N4llvm3PEIE
N4llvm17PseudoSourceValueE
N4llvm27FixedStackPseudoSourceValueE
Register Allocation
N4llvm12RegAllocBaseE
N12_GLOBAL__N_16RAFastE
N4llvm2cl3optINS_11SplitEditor19ComplementSpillModeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_11SplitEditor19ComplementSpillModeELb0ELb0EEE
N4llvm2cl6parserINS_11SplitEditor19ComplementSpillModeEEE
N4llvm2cl11OptionValueINS_11SplitEditor19ComplementSpillModeEEE
N4llvm2cl15OptionValueBaseINS_11SplitEditor19ComplementSpillModeELb0EEE
N4llvm2cl15OptionValueCopyINS_11SplitEditor19ComplementSpillModeEEE
N12_GLOBAL__N_18RAGreedyE
N12_GLOBAL__N_117RegisterCoalescerE
N4llvm23SchedulingPriorityQueueE
N4llvm24ScheduleHazardRecognizerE
N4llvm11ScheduleDAGE
N4llvm17ScheduleDAGInstrsE
N4llvm26ScoreboardHazardRecognizerE
N12_GLOBAL__N_113SjLjEHPrepareE
N4llvm11SlotIndexesE
N4llvm14SpillPlacementE
N4llvm7SpillerE
N4llvm2cl3optIN12_GLOBAL__N_111SpillerNameELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_111SpillerNameELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_111SpillerNameEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_111SpillerNameEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111SpillerNameELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_111SpillerNameEEE
N12_GLOBAL__N_114TrivialSpillerE
N12_GLOBAL__N_111SpillerBaseE
N12_GLOBAL__N_113StackColoringE
N4llvm14StackProtectorE
N4llvm18ValueMapCallbackVHIPKNS_10AllocaInstENS_14StackProtector13SSPLayoutKindENS_14ValueMapConfigIS3_EEEE
N12_GLOBAL__N_117StackSlotColoringE
N4llvm16StackMapLivenessE
N12_GLOBAL__N_117TailDuplicatePassE
N4llvm19TargetFrameLoweringE
N4llvm15TargetInstrInfoE
N4llvm11MCInstrInfoE
N4llvm18TargetLoweringBaseE
N4llvm27TargetLoweringObjectFileELFE
N4llvm29TargetLoweringObjectFileMachOE
N4llvm28TargetLoweringObjectFileCOFFE
N4llvm18TargetRegisterInfoE
N4llvm14MCRegisterInfoE
N12_GLOBAL__N_125TwoAddressInstructionPassE
N12_GLOBAL__N_120UnreachableBlockElimE
N12_GLOBAL__N_127UnreachableMachineBlockElimE
N4llvm10VirtRegMapE
N12_GLOBAL__N_115VirtRegRewriterE
N4llvm24AssemblyAnnotationWriterE
N4llvm14AssemblyWriterE
N4llvm5ValueE
N4llvm13AttributeImplE
N4llvm17EnumAttributeImplE
N4llvm18AlignAttributeImplE
N4llvm19StringAttributeImplE
NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N4llvm10BasicBlockE
N4llvm10ilist_nodeINS_10BasicBlockEEE
N4llvm15ilist_half_nodeINS_10BasicBlockEEE
N4llvm8ConstantE
N4llvm21ConstantAggregateZeroE
N4llvm19ConstantPointerNullE
N4llvm22ConstantDataSequentialE
N4llvm17ConstantDataArrayE
N4llvm18ConstantDataVectorE
N4llvm12ConstantExprE
N4llvm10UndefValueE
N4llvm11ConstantIntE
N4llvm10ConstantFPE
N4llvm13ConstantArrayE
N4llvm14ConstantStructE
N4llvm14ConstantVectorE
N4llvm12BlockAddressE
N4llvm23DiagnosticInfoInlineAsmE
N4llvm14DiagnosticInfoE
N4llvm23DiagnosticInfoStackSizeE
N4llvm34DiagnosticInfoDebugMetadataVersionE
N4llvm27DiagnosticPrinterRawOStreamE
N4llvm17DiagnosticPrinterE
N4llvm10DataLayoutE
N12_GLOBAL__N_115StructLayoutMapE
N4llvm10DebugRecVHE
N4llvm24DominatorTreeWrapperPassE
N4llvm17DominatorTreeBaseINS_10BasicBlockEEE
N4llvm13DominatorBaseINS_10BasicBlockEEE
/oo/z
//o/m
JJJJJJJ
JJJJJJJJJJJ
JJJJ3
/,,/W
//,/b
//////
///////////////
///////////
///////
//////
////
++++"
++++"
...D
,,,,YYYY;;;;JJJJ,,,
,,,,YYYY;;;;JJJJ,,,
,,,,,,,
,,,,,,,
,,,,,,,
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
zzzz
zzzz
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU99
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU
,,,,YYYY;;;;JJJJ@
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33P4
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33PD4
PD33PDDDPD33P4
PD33PDDDPD33PD4
zzzzzzz
;;;;;;;;zzz
;;;;J,,JJ;;JJ;;JJ,,JJ;;JJ;;J;,,
zzzzJJJ,;JJ
JJJJJJJ
----<<<
GCLLL
|L|CK
KBL|LCL|LCK
KBL|LCL|LC
|L|C
B|||C
B|||C
{{{{
zzzz{{{{||||
zzzz
zzzz{{{{||||
zzzz{{{{||||
zzzz
zzzz{{{{||||
zzzz{{{{||||
zzzz
zzzz{{{{||||
zzzz 
JJJJ
zzzz
,,,,;;;
YYY"
YYYYZZZZ,,,
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,
N4llvm8ArgumentE
N4llvm10ilist_nodeINS_8ArgumentEEE
N4llvm15ilist_half_nodeINS_8ArgumentEEE
N4llvm8FunctionE
N4llvm10ilist_nodeINS_8FunctionEEE
N4llvm15ilist_half_nodeINS_8FunctionEEE
N4llvm14GVMaterializerE
N4llvm11GlobalValueE
N4llvm14GlobalVariableE
N4llvm10ilist_nodeINS_14GlobalVariableEEE
N4llvm15ilist_half_nodeINS_14GlobalVariableEEE
N4llvm11GlobalAliasE
N4llvm10ilist_nodeINS_11GlobalAliasEEE
N4llvm15ilist_half_nodeINS_11GlobalAliasEEE
N12_GLOBAL__N_122PrintModulePassWrapperE
N12_GLOBAL__N_124PrintFunctionPassWrapperE
N12_GLOBAL__N_119PrintBasicBlockPassE
N4llvm9InlineAsmE
N4llvm11InstructionE
N4llvm10ilist_nodeINS_11InstructionEEE
N4llvm15ilist_half_nodeINS_11InstructionEEE
ccccccccc
N4llvm14TerminatorInstE
N4llvm16UnaryInstructionE
N4llvm8CastInstE
N4llvm17GetElementPtrInstE
N4llvm7CmpInstE
N4llvm8ICmpInstE
N4llvm8FCmpInstE
N4llvm8CallInstE
N4llvm10SelectInstE
N4llvm9VAArgInstE
N4llvm16ExtractValueInstE
N4llvm15InsertValueInstE
N4llvm7PHINodeE
N4llvm10InvokeInstE
N4llvm14LandingPadInstE
N4llvm10ReturnInstE
N4llvm10ResumeInstE
N4llvm15UnreachableInstE
N4llvm10BranchInstE
N4llvm10AllocaInstE
N4llvm8LoadInstE
N4llvm9StoreInstE
N4llvm17AtomicCmpXchgInstE
N4llvm13AtomicRMWInstE
N4llvm9FenceInstE
N4llvm18ExtractElementInstE
N4llvm17InsertElementInstE
N4llvm17ShuffleVectorInstE
N4llvm14BinaryOperatorE
N4llvm9TruncInstE
N4llvm8ZExtInstE
N4llvm8SExtInstE
N4llvm11FPTruncInstE
N4llvm9FPExtInstE
N4llvm10UIToFPInstE
N4llvm10SIToFPInstE
N4llvm10FPToUIInstE
N4llvm10FPToSIInstE
N4llvm12PtrToIntInstE
N4llvm12IntToPtrInstE
N4llvm11BitCastInstE
N4llvm17AddrSpaceCastInstE
N4llvm10SwitchInstE
N4llvm14IndirectBrInstE
N4llvm17UnaryConstantExprE
N4llvm18BinaryConstantExprE
N4llvm18SelectConstantExprE
N4llvm26ExtractElementConstantExprE
N4llvm25InsertElementConstantExprE
N4llvm25ShuffleVectorConstantExprE
N4llvm24ExtractValueConstantExprE
N4llvm23InsertValueConstantExprE
N4llvm19CompareConstantExprE
N4llvm25GetElementPtrConstantExprE
N4llvm10FoldingSetINS_13AttributeImplEEE
N4llvm10FoldingSetINS_16AttributeSetImplEEE
N4llvm10FoldingSetINS_16AttributeSetNodeEEE
N4llvm10FoldingSetINS_6MDNodeEEE
N4llvm27PassManagerPrettyStackEntryE
N4llvm13PMDataManagerE
N4llvm13FPPassManagerE
N4llvm6legacy23FunctionPassManagerImplE
N4llvm17PMTopLevelManagerE
N4llvm6legacy15PassManagerImplE
N4llvm6legacy15PassManagerBaseE
N4llvm6legacy19FunctionPassManagerE
N4llvm6legacy11PassManagerE
N4llvm2cl3optIN12_GLOBAL__N_114PassDebugLevelELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114PassDebugLevelELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114PassDebugLevelELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl4listIPKNS_8PassInfoEbNS_14PassNameParserEEE
N4llvm2cl12list_storageIPKNS_8PassInfoEbEE
NSt3__16vectorIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE
NSt3__113__vector_baseIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE
N12_GLOBAL__N_113MPPassManagerE
N12_GLOBAL__N_113BBPassManagerE
N4llvm8MDStringE
N4llvm13MDNodeOperandE
N4llvm6MDNodeE
N4llvm4PassE
N4llvm10ModulePassE
N4llvm13ImmutablePassE
N4llvm12FunctionPassE
N4llvm14BasicBlockPassE
N4llvm14PassNameParserE
N4llvm24PassRegistrationListenerE
N4llvm2cl6parserIPKNS_8PassInfoEEE
N12_GLOBAL__N_116GetCFGOnlyPassesE
N4llvm2cl11OptionValueIPKNS_8PassInfoEEE
N4llvm2cl15OptionValueBaseIPKNS_8PassInfoELb0EEE
N4llvm2cl15OptionValueCopyIPKNS_8PassInfoEEE
N4llvm4UserE
N4llvm8OperatorE
N4llvm10CallbackVHE
N4llvm15ValueHandleBaseE
N12_GLOBAL__N_118VerifierLegacyPassE
N12_GLOBAL__N_127DebugInfoVerifierLegacyPassE
N4llvm12InstCombinerE
N4llvm11InstVisitorINS_12InstCombinerEPNS_11InstructionEEE
N12_GLOBAL__N_129InstCombinerLibCallSimplifierE
N12_GLOBAL__N_114BoundsCheckingE
N12_GLOBAL__N_117DataFlowSanitizerE
N12_GLOBAL__N_112GCOVProfilerE
N4llvm20CallGraphWrapperPassE
N4llvm16CallGraphSCCPassE
N12_GLOBAL__N_113CGPassManagerE
N12_GLOBAL__N_118PrintCallGraphPassE
N12_GLOBAL__N_115CallGraphViewerE
N4llvm26DOTGraphTraitsModuleViewerINS_20CallGraphWrapperPassELb1EPNS_9CallGraphENS_34AnalysisCallGraphWrapperPassTraitsEEE
N12_GLOBAL__N_116CallGraphPrinterE
N4llvm27DOTGraphTraitsModulePrinterINS_20CallGraphWrapperPassELb1EPNS_9CallGraphENS_34AnalysisCallGraphWrapperPassTraitsEEE
N4llvm13FindUsedTypesE
N12_GLOBAL__N_113GlobalsModRefE
N4llvm18InlineCostAnalysisE
N12_GLOBAL__N_112ArgPromotionE
N12_GLOBAL__N_111BarrierNoopE
N12_GLOBAL__N_113ConstantMergeE
N12_GLOBAL__N_13DAEE
N12_GLOBAL__N_13DAHE
N12_GLOBAL__N_113FunctionAttrsE
N12_GLOBAL__N_119ArgumentUsesTrackerE
N12_GLOBAL__N_19GlobalDCEE
N12_GLOBAL__N_19GlobalOptE
N12_GLOBAL__N_14IPCPE
N12_GLOBAL__N_113AlwaysInlinerE
N12_GLOBAL__N_113SimpleInlinerE
N4llvm7InlinerE
N4llvm2cl4listINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbNS0_6parserIS8_EEEE
N4llvm2cl12list_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbEE
NSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__120__vector_base_commonILb1EEE
N12_GLOBAL__N_115InternalizePassE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
N12_GLOBAL__N_113LoopExtractorE
N12_GLOBAL__N_119SingleLoopExtractorE
N12_GLOBAL__N_118BlockExtractorPassE
N12_GLOBAL__N_114MergeFunctionsE
N12_GLOBAL__N_114PartialInlinerE
N4llvm13DominatorTreeE
N12_GLOBAL__N_17PruneEHE
N12_GLOBAL__N_123StripDeadPrototypesPassE
N12_GLOBAL__N_112StripSymbolsE
N12_GLOBAL__N_120StripNonDebugSymbolsE
N12_GLOBAL__N_117StripDebugDeclareE
N12_GLOBAL__N_118StripDeadDebugInfoE
N12_GLOBAL__N_19TypeMapTyE
N12_GLOBAL__N_119ValueMaterializerTyE
N12_GLOBAL__N_115ELFObjectWriterE
N4llvm12MCAsmBackendE
N4llvm9MCAsmInfoE
N4llvm13MCAsmInfoCOFFE
N4llvm18MCAsmInfoMicrosoftE
N4llvm16MCAsmInfoGNUCOFFE
N4llvm15MCAsmInfoDarwinE
N4llvm12MCAsmInfoELFE
N12_GLOBAL__N_113MCAsmStreamerE
N4llvm14format_object1IhEE
N4llvm17MCEncodedFragmentE
N4llvm10MCFragmentE
N4llvm10ilist_nodeINS_10MCFragmentEEE
N4llvm15ilist_half_nodeINS_10MCFragmentEEE
N4llvm27MCEncodedFragmentWithFixupsE
N4llvm14MCDataFragmentE
N4llvm28MCCompactEncodedInstFragmentE
N4llvm19MCRelaxableFragmentE
N4llvm15MCAlignFragmentE
N4llvm14MCFillFragmentE
N4llvm13MCOrgFragmentE
N4llvm13MCLEBFragmentE
N4llvm23MCDwarfLineAddrFragmentE
N4llvm24MCDwarfCallFrameFragmentE
N4llvm13MCCodeEmitterE
N4llvm23MCELFObjectTargetWriterE
N4llvm13MCELFStreamerE
N4llvm12MCTargetExprE
N4llvm6MCExprE
N4llvm13MCInstPrinterE
N4llvm15MCInstrAnalysisE
N12_GLOBAL__N_115MCMachOStreamerE
N4llvm24MCMachObjectTargetWriterE
N12_GLOBAL__N_114MCNullStreamerE
N4llvm16MCObjectStreamerE
N4llvm14MCObjectWriterE
N4llvm16MCRelocationInfoE
N4llvm9MCSectionE
N4llvm13MCSectionCOFFE
N4llvm12MCSectionELFE
N4llvm14MCSectionMachOE
N4llvm16MCTargetStreamerE
N4llvm10MCStreamerE
N4llvm16MachObjectWriterE
N4llvm14format_object3IjPKcS2_EE
N4llvm27MCWinCOFFObjectTargetWriterE
N12_GLOBAL__N_119WinCOFFObjectWriterE
N12_GLOBAL__N_115WinCOFFStreamerE
N4llvm8AsmLexerE
N4llvm23MCAsmParserSemaCallbackE
N12_GLOBAL__N_19AsmParserE
N12_GLOBAL__N_113COFFAsmParserE
N12_GLOBAL__N_115DarwinAsmParserE
N12_GLOBAL__N_112ELFAsmParserE
N4llvm10MCAsmLexerE
N4llvm18MCParsedAsmOperandE
N4llvm11MCAsmParserE
N4llvm20MCAsmParserExtensionE
N4llvm17MCTargetAsmParserE
N4llvm6object7ArchiveE
N4llvm6object6BinaryE
N4llvm6object14COFFObjectFileE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm2ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm2ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm2ELb1EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm2ELb1EEEEE
N12_GLOBAL__N_122_object_error_categoryE
N4llvm6object15MachOObjectFileE
N4llvm14format_object1IjEE
N4llvm6object20MachOUniversalBinaryE
N4llvm6object10ObjectFileE
N12_GLOBAL__N_14ADCEE
N12_GLOBAL__N_116ConstantHoistingE
N12_GLOBAL__N_119ConstantPropagationE
N12_GLOBAL__N_126CorrelatedValuePropagationE
N12_GLOBAL__N_119DeadInstEliminationE
N12_GLOBAL__N_13DCEE
N12_GLOBAL__N_13DSEE
N12_GLOBAL__N_110ScalarizerE
N4llvm11InstVisitorIN12_GLOBAL__N_110ScalarizerEbEE
N12_GLOBAL__N_18EarlyCSEE
N12_GLOBAL__N_13GVNE
N4llvm2cl11OptionValueIjEE
N4llvm2cl15OptionValueBaseIjLb0EEE
N4llvm2cl15OptionValueCopyIjEE
N12_GLOBAL__N_114IndVarSimplifyE
N12_GLOBAL__N_121IndVarSimplifyVisitorE
N12_GLOBAL__N_113JumpThreadingE
N12_GLOBAL__N_14LICME
N12_GLOBAL__N_112LoopPromoterE
N12_GLOBAL__N_112LoopDeletionE
N12_GLOBAL__N_118LoopIdiomRecognizeE
N12_GLOBAL__N_110LoopRotateE
N4llvm18ValueMapCallbackVHIPKNS_5ValueENS_6WeakVHENS_14ValueMapConfigIS3_EEEE
N12_GLOBAL__N_118LoopStrengthReduceE
N12_GLOBAL__N_110LoopRerollE
N12_GLOBAL__N_110LoopUnrollE
N12_GLOBAL__N_112LoopUnswitchE
N12_GLOBAL__N_111LowerAtomicE
N12_GLOBAL__N_19MemCpyOptE
N12_GLOBAL__N_123PartiallyInlineLibCallsE
N12_GLOBAL__N_111ReassociateE
N12_GLOBAL__N_18RegToMemE
N12_GLOBAL__N_119SampleProfileLoaderE
N12_GLOBAL__N_14SCCPE
N12_GLOBAL__N_16IPSCCPE
N12_GLOBAL__N_14SROAE
N12_GLOBAL__N_114AllocaPromoterE
N12_GLOBAL__N_17SROA_DTE
N12_GLOBAL__N_14SROAE
N12_GLOBAL__N_114AllocaPromoterE
N12_GLOBAL__N_110SROA_SSAUpE
N12_GLOBAL__N_115CFGSimplifyPassE
N12_GLOBAL__N_17SinkingE
N12_GLOBAL__N_114StructurizeCFGE
N12_GLOBAL__N_112TailCallElimE
N12_GLOBAL__N_120AllocaCaptureTrackerE
N12_GLOBAL__N_115WorkListRemoverE
N4llvm8FastISelE
0CN12_GLOBAL__N_120SelectionDAGLegalizeE
N12_GLOBAL__N_118NodeUpdateListenerE
N4llvm21ResourcePriorityQueueE
N12_GLOBAL__N_117ScheduleDAGRRListE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_13bu_ls_rr_sortEEE
N12_GLOBAL__N_118RegReductionPQBaseE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_14src_ls_rr_sortEEE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_17hybrid_ls_rr_sortEEE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_14ilp_ls_rr_sortEEE
N4llvm18ScheduleDAGSDNodesE
N4llvm12SelectionDAG17DAGUpdateListenerE
N12_GLOBAL__N_118RAUWUpdateListenerE
N4llvm10FoldingSetINS_6SDNodeEEE
N4llvm10FoldingSetINS_12SDVTListNodeEEE
N4llvm2cl3optIjLb1ENS0_6parserIjEEEE
N4llvm2cl11opt_storageIjLb1ELb0EEE
N4llvm16SelectionDAGISelE
N4llvm2cl3optIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ENS_18RegisterPassParserINS_17RegisterSchedulerEEEEE
N4llvm2cl11opt_storageIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ELb0EEE
N4llvm18RegisterPassParserINS_17RegisterSchedulerEEE
N4llvm2cl6parserIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N4llvm2cl11OptionValueIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N4llvm2cl15OptionValueBaseIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N12_GLOBAL__N_111ISelUpdaterE
N12_GLOBAL__N_115ScheduleDAGVLIWE
N4llvm14TargetLoweringE
N4llvm22TargetSelectionDAGInfoE
0123456789ABCDEF0
0123456789abcdef0
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
N4llvm13SlabAllocatorE
N4llvm19MallocSlabAllocatorE
N4llvm2cl6OptionE
N4llvm2cl18GenericOptionValueE
N4llvm2cl11OptionValueINS0_13boolOrDefaultEEE
N4llvm2cl15OptionValueCopyINS0_13boolOrDefaultEEE
N4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl19generic_parser_baseE
N4llvm2cl17basic_parser_implE
N4llvm2cl11StringSaverE
N4llvm2cl12basic_parserIbEE
N4llvm2cl12basic_parserINS0_13boolOrDefaultEEE
N4llvm2cl12basic_parserIiEE
N4llvm2cl12basic_parserIjEE
N4llvm2cl12basic_parserIyEE
N4llvm2cl12basic_parserIdEE
N4llvm2cl12basic_parserIfEE
N4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl12basic_parserIcEE
N4llvm2cl3optIjLb0ENS0_6parserIjEEEE
N4llvm2cl11opt_storageIjLb0ELb0EEE
N4llvm2cl3optIiLb0ENS0_6parserIiEEEE
N4llvm2cl11opt_storageIiLb0ELb0EEE
N4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEEE
N4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ELb1EEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
N4llvm2cl3optIcLb0ENS0_6parserIcEEEE
N4llvm2cl11opt_storageIcLb0ELb0EEE
N4llvm2cl3optIbLb0ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIbLb0ELb0EEE
N4llvm2cl6parserIbEE
N4llvm2cl6parserINS0_13boolOrDefaultEEE
N4llvm2cl6parserIiEE
N4llvm2cl6parserIjEE
N4llvm2cl6parserIyEE
N4llvm2cl6parserIdEE
N4llvm2cl6parserIfEE
N4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl6parserIcEE
N4llvm2cl5aliasE
N12_GLOBAL__N_111StrDupSaverE
N12_GLOBAL__N_111HelpPrinterE
N12_GLOBAL__N_122CategorizedHelpPrinterE
N4llvm2cl11OptionValueIcEE
N4llvm2cl15OptionValueBaseIcLb0EEE
N4llvm2cl15OptionValueCopyIcEE
N4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_111HelpPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_111HelpPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111HelpPrinterELb1EEE
N4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_118HelpPrinterWrapperELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_118HelpPrinterWrapperEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_118HelpPrinterWrapperELb1EEE
N4llvm2cl3optIN12_GLOBAL__N_114VersionPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114VersionPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114VersionPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114VersionPrinterELb1EEE
N4llvm27CrashRecoveryContextCleanupE
N4llvm3sys11ThreadLocalIKN12_GLOBAL__N_124CrashRecoveryContextImplEEE
N4llvm3sys11ThreadLocalIKNS_27CrashRecoveryContextCleanupEEE
N4llvm14FoldingSetImplE
N4llvm21formatted_raw_ostreamE
N4llvm12MemoryBufferE
N12_GLOBAL__N_115MemoryBufferMemE
N12_GLOBAL__N_120MemoryBufferMMapFileE
N4llvm12MemoryObjectE
N4llvm22PrettyStackTraceStringE
N4llvm21PrettyStackTraceEntryE
N4llvm23PrettyStackTraceProgramE
N4llvm3sys11ThreadLocalIKNS_21PrettyStackTraceEntryEEE
()^$|*+?.[]\{}
N4llvm14format_object5IjjjPKcS2_EE
N4llvm22StreamableMemoryObjectE
N4llvm21StreamingMemoryObjectE
N12_GLOBAL__N_115RawMemoryObjectE
N4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ENS0_6parserIS8_EEEE
N4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ELb1EEE
N4llvm14format_object2IddEE
N4llvm14format_object1IxEE
                                                                                
N4llvm11raw_ostreamE
N4llvm18raw_string_ostreamE
N4llvm16raw_null_ostreamE
N4llvm18format_object_baseE
N4llvm14raw_fd_ostreamE
N4llvm19raw_svector_ostreamE
N4llvm14format_object1IdEE
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
N4llvm3sys7processE
N4llvm3sys12self_processE
N4llvm14error_categoryE
N4llvm11_do_messageE
N4llvm23_generic_error_categoryE
N4llvm22_system_error_categoryE
N4llvm3sys15ThreadLocalImplE
N4llvm13TargetJITInfoE
N4llvm17TargetLibraryInfoE
N4llvm24TargetLoweringObjectFileE
N4llvm16MCObjectFileInfoE
N4llvm13TargetMachineE
N4llvm19TargetSubtargetInfoE
N4llvm15MCSubtargetInfoE
N12_GLOBAL__N_118BreakCriticalEdgesE
N4llvm25SimplifyFortifiedLibCallsE
N12_GLOBAL__N_19InstNamerE
N12_GLOBAL__N_15LCSSAE
N12_GLOBAL__N_112LoopSimplifyE
N12_GLOBAL__N_120LowerExpectIntrinsicE
N12_GLOBAL__N_111LowerInvokeE
N12_GLOBAL__N_111LowerSwitchE
N12_GLOBAL__N_111PromotePassE
N12_GLOBAL__N_111MetaRenamerE
N4llvm20LoadAndStorePromoterE
N4llvm9IVVisitorE
N12_GLOBAL__N_114InstSimplifierE
N4llvm17LibCallSimplifierE
N12_GLOBAL__N_112MemCpyChkOptE
N12_GLOBAL__N_132InstFortifiedLibCallOptimizationE
N12_GLOBAL__N_128FortifiedLibCallOptimizationE
N12_GLOBAL__N_119LibCallOptimizationE
N12_GLOBAL__N_113MemMoveChkOptE
N12_GLOBAL__N_112MemSetChkOptE
N12_GLOBAL__N_112StrCpyChkOptE
N12_GLOBAL__N_112StpCpyChkOptE
N12_GLOBAL__N_113StrNCpyChkOptE
N12_GLOBAL__N_19StrCatOptE
N12_GLOBAL__N_110StrNCatOptE
N12_GLOBAL__N_19StrChrOptE
N12_GLOBAL__N_110StrRChrOptE
N12_GLOBAL__N_19StrCmpOptE
N12_GLOBAL__N_110StrNCmpOptE
N12_GLOBAL__N_19StrCpyOptE
N12_GLOBAL__N_19StpCpyOptE
N12_GLOBAL__N_110StrNCpyOptE
N12_GLOBAL__N_19StrLenOptE
N12_GLOBAL__N_110StrPBrkOptE
N12_GLOBAL__N_18StrToOptE
N12_GLOBAL__N_19StrSpnOptE
N12_GLOBAL__N_110StrCSpnOptE
N12_GLOBAL__N_19StrStrOptE
N12_GLOBAL__N_19MemCmpOptE
N12_GLOBAL__N_19MemCpyOptE
N12_GLOBAL__N_110MemMoveOptE
N12_GLOBAL__N_19MemSetOptE
N12_GLOBAL__N_116UnaryDoubleFPOptE
N12_GLOBAL__N_117BinaryDoubleFPOptE
N12_GLOBAL__N_111SinCosPiOptE
N12_GLOBAL__N_16FFSOptE
N12_GLOBAL__N_16AbsOptE
N12_GLOBAL__N_110IsDigitOptE
N12_GLOBAL__N_110IsAsciiOptE
N12_GLOBAL__N_110ToAsciiOptE
N12_GLOBAL__N_117ErrorReportingOptE
N12_GLOBAL__N_19PrintFOptE
N12_GLOBAL__N_110SPrintFOptE
N12_GLOBAL__N_110FPrintFOptE
N12_GLOBAL__N_19FWriteOptE
N12_GLOBAL__N_18FPutsOptE
N12_GLOBAL__N_17PutsOptE
N12_GLOBAL__N_16CosOptE
N12_GLOBAL__N_127UnsafeFPLibCallOptimizationE
N12_GLOBAL__N_16PowOptE
N12_GLOBAL__N_17Exp2OptE
N4llvm22UnifyFunctionExitNodesE
N4llvm20ValueMapTypeRemapperE
N4llvm17ValueMaterializerE
Basic-Block Vectorization
N12_GLOBAL__N_111BBVectorizeE
Loop Vectorization
N12_GLOBAL__N_113LoopVectorizeE
N12_GLOBAL__N_117InnerLoopUnrollerE
N12_GLOBAL__N_119InnerLoopVectorizerE
SLP Vectorizer
N12_GLOBAL__N_113SLPVectorizerE
N4llvm2cl11OptionValueIiEE
N4llvm2cl15OptionValueBaseIiLb0EEE
N4llvm2cl15OptionValueCopyIiEE
N12_GLOBAL__N_112X86AsmParserE
N12_GLOBAL__N_110X86OperandE
bbHH
pMM
bMMM
bgMM
bMMM
bgMM
aHHH
aJJJ
aeHH
afJJ
aHHH
aJJJ
aeHH
afJJ
HHHH
HeHH
JJJJ
JfJJ
HHHH
HeHH
JJJJ
JfJJ
bHHH
bJJJ
bMMM
beHH
bfJJ
bgMM
bgMO
bHHH
bJJJ
bMMM
beHH
bfJJ
bgMM
bgMO
bHHH
bIIO
bpHH
bpIO
bHHH
bIIO
bnHH
bnIO
pMM
aHHH
aeHH
aHHH
aJJJ
aeHH
afJJ
pMM
pMM
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HpHH
pHHH
HHHH
HnHH
nHHH
pMM
pMM
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
pMM
pMM
pMM
pMM
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HpHH
pHHH
HHHH
HnHH
nHHH
pMM
pMM
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HpHH
pHHH
HHHH
HnHH
nHHH
pMM
pMM
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
HHHH
HpHH
pHHH
HHHH
HnHH
nHHH
bHJJ
beJJ
bIMM
beMM
bKMM
bfMM
bHJJ
beJJ
bIMM
beMM
bKMM
bfMM
aHHH
aIII
anHH
anII
pMM
pMM
aHHH
aJJJ
aeHH
afJJ
pMM
pMM
bHHH
bJJJ
beHH
bfJJ
pMM
pMM
aHHH
aJJJ
aeHH
afJJ
HHHH
HeHH
JJJJ
JfJJ
aHHH
aJJJ
aeHH
afJJ
bHHH
beHH
HHHH
HeHH
JJJJ
JfJJ
eHHH
fJJJ
bMMO
bgMO
bMMO
bgMO
bMMO
bgMO
bMMO
bgMO
bHHH
beHH
bHHH
beHH
bHHH
beHH
bHHH
beHH
bHHH
beHH
bHHH
beHH
bHHH
beHH
bHHH
beHH
bJJJ
bfJJ
bJJJ
bfJJ
bHHHH
bHeHH
bJJJJ
bJfJJ
beHHH
bfJJJ
bHHHH
bHeHH
bJJJJ
bJfJJ
beHHH
bfJJJ
_dHH
_iHH
_*HH
_nHH
_DHH
_pHH
_dHH
_lHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
HHHH
HeHH
pMM
pMM
pMM
pMM
pMM
HHHH
HeHH
eHHH
pMM
pMM
_HHH
_pHH
_HHH
_nHH
bHHH
bJJJ
bMMM
beHH
bfJJ
bgMM
bHHH
bJJJ
bMMM
beHH
bfJJ
bgMM
pMM
bVHH
bVHn
HHbb
MMp
MMMb
MMgb
MMMb
MMgb
HHHa
HHea
JJJa
JJfa
HHHa
HHea
JJJa
JJfa
HHHH
HHeH
JJJJ
JJfJ
HHHH
HHeH
JJJJ
JJfJ
bVHHH
bVHHn
bVOII
bVOIn
HHHb
HHeb
JJJb
JJfb
MMMb
MMgb
OMgb
HHHb
HHeb
JJJb
JJfb
MMMb
MMgb
OMgb
HHHb
HHpb
OIIb
OIpb
HHHb
HHnb
OIIb
OInb
MMp
HHHa
HHea
HHHa
HHea
JJJa
JJfa
MMp
MMp
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHp
HHpH
HHHH
HHHn
HHnH
MMp
MMp
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
MMp
MMp
MMp
MMp
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHp
HHpH
HHHH
HHHn
HHnH
MMp
MMp
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHp
HHpH
HHHH
HHHn
HHnH
MMp
MMp
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
HHHH
HHHp
HHpH
HHHH
HHHn
HHnH
JJHb
JJeb
MMIb
MMeb
MMKb
MMfb
JJHb
JJeb
MMIb
MMeb
MMKb
MMfb
HHHa
HHna
IIIa
IIna
MMp
MMp
HHHa
HHea
JJJa
JJfa
MMp
MMp
HHHb
HHeb
JJJb
JJfb
MMp
MMp
HHHa
HHea
JJJa
JJfa
HHHH
HHeH
JJJJ
JJfJ
HHHa
HHea
JJJa
JJfa
HHHb
HHeb
HHHH
HHHe
HHeH
JJJJ
JJJf
JJfJ
OMMb
OMgb
OMMb
OMgb
OMMb
OMgb
OMMb
OMgb
HHHb
HHeb
HHHb
HHeb
HHHb
HHeb
HHHb
HHeb
HHHb
HHeb
HHHb
HHeb
HHHb
HHeb
HHHb
HHeb
JJJb
JJfb
JJJb
JJfb
HHHHb
HHHeb
HHeHb
JJJJb
JJJfb
JJfJb
HHHHb
HHHeb
HHeHb
JJJJb
JJJfb
JJfJb
HHd_
HHi_
HH*_
HHn_
HHD_
HHp_
HHd_
HHl_
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
HHHH
HHeH
MMp
MMp
MMp
MMp
MMp
HHHH
HHHe
HHeH
MMp
MMp
HHH_
HHp_
HHH_
HHn_
HHHb
HHeb
JJJb
JJfb
MMMb
MMgb
HHHb
HHeb
JJJb
JJfb
MMMb
MMgb
MMp
0G"KH
pG*K
0IzJH%
pI*J
pI*J
0I"JH
pI*J
xAex
4`e4
ITeI
OEeO
Xe
UbeU
"Pe"
!!!!
!!!!
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
vmovdqa32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vmovdqa64
vmovdqu64
sha1rnds4
vextractf32x4
vinsertf32x4
vextracti32x4
vinserti32x4
vextractf64x4
vinsertf64x4
vextracti64x4
vinserti64x4
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovntdqa
vmovdqa
seta
prefetchnta
crc32b
cmpxchg16b
cmpxchg8b
vpshab
sbbb
vpsubb
adcb
decb
incb
vpaddb
xaddb
andb
vpmovusdb
vpmovsdb
vpmovdb
vpshufb
negb
cmpxchgb
vpavgb
vpmovmskb
rclb
vpshlb
rolb
imulb
vpcomb
vpsignb
fcmovnb
cmpb
vpcmpeqb
vpmovusqb
vpmovsqb
vpmovqb
sarb
rcrb
shrb
rorb
xorb
vpinsrb
vpextrb
vpabsb
movabsb
vpsubsb
vpaddsb
vpminsb
vpsubusb
vpaddusb
pavgusb
vpmaxsb
setb
vpcmpgtb
notb
vprotb
vpbroadcastb
testb
vpcomub
vpminub
pfsub
vpmaxub
vpblendvb
idivb
fcmovb
vpacksswb
vpackuswb
pfacc
pfnacc
pfpnacc
vaesdec
blcic
blsic
t1mskc
vaesimc
vaesenc
vpermi2d
vpbroadcastmw2d
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
vphaddd
vpaddd
vpandd
vpblendd
vpgatherdd
vpscatterdd
vpmacsdd
vpmacssdd
pi2fd
vpshufd
pf2id
invpcid
invvpid
fbld
vpshld
vpslld
vpmulld
vpsrld
vmptrld
vpblendmd
vpcomd
vpermd
vptestmd
vpand
vpandnd
valignd
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
vpermi2pd
cvtpi2pd
vpermil2pd
vcvtdq2pd
vcvtudq2pd
vcvtps2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vrcp14pd
vrsqrt14pd
vrcp28pd
vrsqrt28pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vandpd
vblendpd
vroundpd
vgatherdpd
vscatterdpd
vrndscalepd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vblendmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgatherqpd
vscatterqpd
vorpd
vxorpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpscatterqd
vpmovusqd
vpmovsqd
vpmovqd
vpord
vpxord
vpinsrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vrcp14sd
vrsqrt14sd
vrcp28sd
vrsqrt28sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vrndscalesd
vucomisd
vcomisd
vmulsd
vpminsd
vminsd
vcmpsd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpconflictd
vpcmpgtd
vprotd
vpbroadcastd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpsllvd
vpsrlvd
vpmaskmovd
vmovd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
setae
fcmovnbe
setbe
fcmovbe
ffree
pfcmpge
setge
setle
loopne
setne
fcmovne
loope
sete
sha1nexte
fnsave
fxsave
fcmove
invlpg
setg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
blci
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
vcvttsd2usi
vcvtsd2usi
vcvttss2usi
vcvtss2usi
blcmsk
tzmsk
crc32l
leal
cmoval
sbbl
movsbl
fsubl
fisubl
cmovbl
movzbl
adcl
decl
incl
btcl
vmreadl
faddl
fiaddl
xaddl
rdseedl
fldl
shldl
fildl
rdrandl
shrdl
vcvtsi2sdl
vcvtusi2sdl
cmovael
cmovbel
cmovgel
cmovlel
cmovnel
rdfsbasel
wrfsbasel
rdgsbasel
wrgsbasel
vmwritel
cmovel
bsfl
negl
cmpxchgl
cmovgl
pushl
bzhil
blsil
movntil
blsmskl
rcll
fildll
shll
blcfill
blsfill
lcalll
roll
fistpll
fisttpll
lsll
fmull
fimull
cmovll
fcoml
ficoml
andnl
cmovnol
cmovol
bswapl
pdepl
cmpl
ljmpl
fcompl
ficompl
cmovnpl
nopl
popl
arpl
fstpl
fistpl
fisttpl
cmovpl
vpmacsdql
vpmacssdql
larl
sarl
fsubrl
fisubrl
rcrl
shrl
rorl
xorl
bsrl
blsrl
btrl
strl
bextrl
fdivrl
fidivrl
movabsl
ldsl
lesl
lfsl
lgsl
cmovnsl
vcvtsi2ssl
vcvtusi2ssl
lssl
btsl
cmovsl
lgdtl
sgdtl
lidtl
sidtl
sldtl
lretl
setl
popcntl
lzcntl
tzcntl
notl
testl
fstl
fistl
pextl
pfmul
fdivl
fidivl
movl
smswl
movswl
movzwl
adcxl
shlxl
mulxl
adoxl
sarxl
shrxl
rorxl
fcom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
xbegin
pfmin
vmxon
setno
seto
fsubp
pfrcp
faddp
fmulp
fcomp
fucomp
setnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
crc32q
vpbroadcastmb2q
vpermi2q
movdq2q
leaq
vpshaq
vpsraq
cmovaq
sbbq
vphaddbq
movsbq
vphaddubq
vpsubq
cmovbq
vpmovsxbq
vpmovzxbq
movzbq
adcq
decq
incq
btcq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vmreadq
vphsubdq
vpaddq
xaddq
vphadddq
rdseedq
vpunpckhdq
shldq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
vpandq
rdrandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vpscatterdq
shrdq
vcvtsi2sdq
vcvtusi2sdq
vmovntdq
vcvttpd2udq
vcvtpd2udq
vcvttps2udq
vcvtps2udq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
cmovaeq
cmovbeq
cmovgeq
cmovleq
cmovneq
pfcmpeq
rdfsbaseq
wrfsbaseq
rdgsbaseq
wrgsbaseq
vmwriteq
fxsaveq
cmoveq
bsfq
negq
cmpxchgq
cmovgq
pushq
bzhiq
blsiq
movntiq
blsmskq
rclq
vpshlq
callq
vpsllq
rolq
vpsrlq
lslq
movslq
imulq
cmovlq
vpblendmq
vpcomq
vpermq
vptestmq
vpandnq
valignq
cmovnoq
cmovoq
bswapq
pdepq
vpcmpq
cmovnpq
popq
cmovpq
vpcmpeqq
vpgatherqq
vpscatterqq
larq
sarq
rcrq
shrq
vporq
rorq
fxrstorq
vpxorq
bsrq
blsrq
vpinsrq
btrq
strq
bextrq
vpextrq
vpabsq
movabsq
lfsq
lgsq
vpminsq
cmovnsq
vcvtsi2ssq
vcvtusi2ssq
lssq
btsq
cmovsq
vpmaxsq
vpconflictq
lgdtq
sgdtq
lidtq
sidtq
sldtq
lretq
vpcmpgtq
popcntq
lzcntq
tzcntq
movntq
notq
vprotq
xsaveoptq
insertq
vpbroadcastq
testq
pextq
vpcomuq
vpminuq
vpcmpuq
vpmaxuq
vpsravq
idivq
vpsllvq
vpsrlvq
vpmaskmovq
vmovq
vphaddwq
smswq
movswq
vphadduwq
vpmovsxwq
vpmovzxwq
movzwq
adcxq
shlxq
mulxq
adoxq
sarxq
shrxq
rorxq
vmclear
pfsubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
bextr
fdivr
fsubs
fisubs
blcs
fadds
fiadds
flds
filds
fmuls
fimuls
fcoms
ficoms
setns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
vpermi2ps
cvtpi2ps
vpermil2ps
vcvtdq2ps
vcvtudq2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vrcp14ps
vrsqrt14ps
vrcp28ps
vrsqrt28ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vandps
vblendps
vroundps
vgatherdps
vscatterdps
vrndscaleps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vblendmps
fcomps
ficomps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgatherqps
vscatterqps
vorps
vxorps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
fstps
fistps
fisttps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
fsubrs
fisubrs
fdivrs
fidivrs
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vrcp14ss
vrsqrt14ss
vrcp28ss
vrsqrt28ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vrndscaless
vucomiss
vcomiss
vmulss
vminss
vrcpss
vcmpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
fsts
fists
fdivs
fidivs
fldt
pfcmpgt
invept
xsaveopt
fstpt
xabort
pfrsqrt
vsqrt
vaesdeclast
vaesenclast
vptest
vaeskeygenassist
vmptrst
fcmovnu
vlddqu
vmaskmovdqu
vmovdqu
fcmovu
fdiv
fldenv
fnstenv
vpcmov
crc32w
leaw
vpshaw
vpsraw
cmovaw
sbbw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
kunpckbw
vpunpcklbw
movsbw
vphaddubw
vphsubw
vpsubw
cmovbw
vpmovsxbw
vpmovzxbw
movzbw
adcw
fldcw
decw
incw
btcw
fnstcw
vphaddw
vpaddw
xaddw
rdseedw
shldw
kandw
rdrandw
vpblendw
shrdw
vpackssdw
vpackusdw
vpmovusdw
vpmovsdw
vpmovdw
cmovaew
cmovbew
cmovgew
cmovlew
cmovnew
cmovew
pi2fw
bsfw
pshufw
negw
cmpxchgw
vpavgw
cmovgw
prefetchw
vpshufhw
vpmulhw
pushw
pf2iw
rclw
vpshuflw
vpshlw
lcallw
vpsllw
vpmullw
rolw
vpsrlw
lslw
kshiftlw
imulw
cmovlw
vpcomw
kandnw
vpsignw
cmovnow
cmovow
cmpw
ljmpw
cmovnpw
nopw
popw
cmovpw
vpcmpeqw
vpmovusqw
vpmovsqw
vpmovqw
larw
sarw
rcrw
verw
pmulhrw
shrw
korw
kxnorw
rorw
kxorw
bsrw
vpinsrw
btrw
kshiftrw
ltrw
strw
vpextrw
vpabsw
movabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
ldsw
lesw
lfsw
lgsw
vpminsw
cmovnsw
vpmulhrsw
lssw
btsw
fnstsw
vpsubusw
vpaddusw
cmovsw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
lldtw
sldtw
lretw
vpcmpgtw
popcntw
lzcntw
tzcntw
knotw
vprotw
vpbroadcastw
kortestw
vpmulhuw
vpcomuw
vpminuw
vphminposuw
vpmaxuw
idivw
kmovw
vpmacsww
lmsww
smsww
vpmacssww
pfmax
vcvttpd2dqx
vcvtpd2dqx
vcvtpd2psx
vcvttpd2dqy
vcvtpd2dqy
vcvtpd2psy
jecxz
jcxz
jrcxz
fsub
%st(0), 
fadd
%st(0), 
fmul
%st(0), 
fsubr
%st(0), 
fdivr
%st(0), 
fdiv
%st(0), 
movabsb
%al, 
outb
%al, 
movb
%al, 
rclb
%cl, 
shlb
%cl, 
rolb
%cl, 
sarb
%cl, 
rcrb
%cl, 
shrb
%cl, 
rorb
%cl, 
shldl
%cl, 
shrdl
%cl, 
rcll
%cl, 
shll
%cl, 
roll
%cl, 
sarl
%cl, 
rcrl
%cl, 
shrl
%cl, 
rorl
%cl, 
shldq
%cl, 
shrdq
%cl, 
rclq
%cl, 
shlq
%cl, 
rolq
%cl, 
sarq
%cl, 
rcrq
%cl, 
shrq
%cl, 
rorq
%cl, 
shldw
%cl, 
shrdw
%cl, 
rclw
%cl, 
shlw
%cl, 
rolw
%cl, 
sarw
%cl, 
rcrw
%cl, 
shrw
%cl, 
rorw
%cl, 
movabsw
%ax, 
outw
%ax, 
movw
%ax, 
movabsl
%eax, 
outl
%eax, 
movl
%eax, 
movabsq
%rax, 
vrcp28pd
{sae}, 
vrsqrt28pd
{sae}, 
vrcp28sd
{sae}, 
vrsqrt28sd
{sae}, 
vrcp28ps
{sae}, 
vrsqrt28ps
{sae}, 
vrcp28ss
{sae}, 
vrsqrt28ss
{sae}, 
#VAARG_64 
#eh_return, addr: 
#VASTART_SAVE_XMM_REGS 
#CMOV_GR32* PSEUDO!
#CMOV_GR16* PSEUDO!
#CMOV_RFP80 PSEUDO!
#ATOMSUB6432 PSEUDO!
#ATOMADD6432 PSEUDO!
#ATOMAND6432 PSEUDO!
#ATOMNAND6432 PSEUDO!
#ATOMMIN6432 PSEUDO!
#ATOMUMIN6432 PSEUDO!
#ATOMSWAP6432 PSEUDO!
#ATOMOR6432 PSEUDO!
#ATOMXOR6432 PSEUDO!
#ATOMMAX6432 PSEUDO!
#ATOMUMAX6432 PSEUDO!
#ATOMAND32 PSEUDO!
#ATOMNAND32 PSEUDO!
#CMOV_V4F32 PSEUDO!
#CMOV_V16F32 PSEUDO!
#CMOV_V8F32 PSEUDO!
#ATOMMIN32 PSEUDO!
#ATOMUMIN32 PSEUDO!
#CMOV_RFP32 PSEUDO!
#CMOV_FR32 PSEUDO!
#ATOMOR32 PSEUDO!
#ATOMXOR32 PSEUDO!
#ATOMMAX32 PSEUDO!
#ATOMUMAX32 PSEUDO!
#ATOMAND64 PSEUDO!
#ATOMNAND64 PSEUDO!
#CMOV_V2F64 PSEUDO!
#CMOV_V4F64 PSEUDO!
#CMOV_V8F64 PSEUDO!
#CMOV_V2I64 PSEUDO!
#CMOV_V4I64 PSEUDO!
#CMOV_V8I64 PSEUDO!
#ATOMMIN64 PSEUDO!
#ATOMUMIN64 PSEUDO!
#CMOV_RFP64 PSEUDO!
#CMOV_FR64 PSEUDO!
#ATOMOR64 PSEUDO!
#ATOMXOR64 PSEUDO!
#ATOMMAX64 PSEUDO!
#ATOMUMAX64 PSEUDO!
#ATOMAND16 PSEUDO!
#ATOMNAND16 PSEUDO!
#ATOMMIN16 PSEUDO!
#ATOMUMIN16 PSEUDO!
#ATOMOR16 PSEUDO!
#ATOMXOR16 PSEUDO!
#ATOMMAX16 PSEUDO!
#ATOMUMAX16 PSEUDO!
#ATOMAND8 PSEUDO!
#ATOMNAND8 PSEUDO!
#ATOMMIN8 PSEUDO!
#ATOMUMIN8 PSEUDO!
#CMOV_GR8 PSEUDO!
#ATOMOR8 PSEUDO!
#ATOMXOR8 PSEUDO!
#ATOMMAX8 PSEUDO!
#ATOMUMAX8 PSEUDO!
#ACQUIRE_MOV PSEUDO!
#RELEASE_MOV PSEUDO!
lcalll
ljmpl
lcallq
ljmpq
lcallw
ljmpw
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
scasb
lodsb
insb
rep;stosb
cmpsb
outsb
rep;movsb
xlatb
clac
stac
xcryptcbc
rdpmc
vmfunc
rdtsc
cpuid
xend
cltd
cwtd
wbinvd
fldl2e
lfence
mfence
sfence
fscale
vmresume
repne
xacquire
xstore
xrelease
pause
leave
vmxoff
lahf
sahf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
%dx, %al
pushal
popal
pushfl
popfl
vmmcall
vmcall
syscall
vzeroall
scasl
lodsl
insl
rep;stosl
cmpsl
outsl
rep;movsl
iretl
lretl
sysretl
sysexitl
cwtl
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
into
cqto
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
scasq
lodsq
rep;stosq
cmpsq
rep;movsq
iretq
lretq
sysretq
sysexitq
cltq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
pushl
pushw
pushl
popl
pushw
popw
pushl
popl
pushw
popw
pushl
popl
pushq
popq
pushw
popw
pushl
popl
pushq
popq
pushw
popw
swapgs
fchs
# variable sized alloca for segmented stacks
femms
fcos
fsincos
pushl
popl
pushw
popw
clts
fldl2t
fxtract
mwait
fninit
frndint
fsqrt
xtest
ftst
xgetbv
xsetbv
pushaw
popaw
pushfw
popfw
scasw
lodsw
insw
rep;stosw
cmpsw
outsw
rep;movsw
cbtw
iretw
lretw
fyl2x
fnstsw
%dx, %ax
vmload
%eax
vmsave
%eax
vmrun
%eax
skinit
%eax
invlpga
%ecx, %eax
%dx, %eax
vmload
%rax
vmsave
%rax
vmrun
%rax
invlpga
%ecx, %rax
outb
%al, %dx
outw
%ax, %dx
outl
%eax, %dx
fnclex
fldz
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
xmm22
ymm22
zmm22
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
xmm23
ymm23
zmm23
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm17X86ATTInstPrinterE
6{G y{G
6,H y,H
2lU 
.U@ 
2pH 
2,W 
JPR 
:|D 
H=B 
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
vmovdqa32
crc32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vmovdqa64
fxsave64
fxrstor64
xsaveopt64
vmovdqu64
sha1rnds4
vextractf32x4
vinsertf32x4
vextracti32x4
vinserti32x4
vextractf64x4
vinsertf64x4
vextracti64x4
vinserti64x4
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovntdqa
vmovdqa
seta
prefetchnta
cmova
cmpxchg16b
cmpxchg8b
vpshab
vpsubb
vpaddb
vpmovusdb
vpmovsdb
vpmovdb
vpshufb
vpavgb
vpmovmskb
vpshlb
vpcomb
vpsignb
vpcmpeqb
vpmovusqb
vpmovsqb
vpmovqb
vpinsrb
vpextrb
vpabsb
vpsubsb
vpaddsb
vpminsb
vpsubusb
vpaddusb
pavgusb
vpmaxsb
setb
vpcmpgtb
vprotb
vpbroadcastb
vpcomub
vpminub
pfsub
fisub
vpmaxub
vpblendvb
cmovb
vpacksswb
vpackuswb
pfacc
pfnacc
pfpnacc
vaesdec
blcic
blsic
t1mskc
vaesimc
vaesenc
vpermi2d
vpbroadcastmw2d
vmread
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
fiadd
xadd
vphaddd
vpaddd
vpandd
vpblendd
vpgatherdd
vpscatterdd
vpmacsdd
vpmacssdd
rdseed
pi2fd
vpshufd
pf2id
invpcid
invvpid
fbld
vpshld
fild
vpslld
vpmulld
vpsrld
vmptrld
vpblendmd
vpcomd
vpermd
vptestmd
vpand
rdrand
vpandnd
valignd
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
vpermi2pd
cvtpi2pd
vpermil2pd
vcvtdq2pd
vcvtudq2pd
vcvtps2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vrcp14pd
vrsqrt14pd
vrcp28pd
vrsqrt28pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vandpd
vblendpd
vroundpd
vgatherdpd
vscatterdpd
vrndscalepd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vblendmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgatherqpd
vscatterqpd
vorpd
vxorpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpscatterqd
vpmovusqd
vpmovsqd
vpmovqd
shrd
vpord
vpxord
vpinsrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtsi2sd
vcvtusi2sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vrcp14sd
vrsqrt14sd
vrcp28sd
vrsqrt28sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vrndscalesd
vucomisd
vcomisd
vmulsd
vpminsd
vminsd
vcmpsd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpconflictd
vpcmpgtd
vprotd
vpbroadcastd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpsllvd
vpsrlvd
vpmaskmovd
vmovd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
movsxd
setae
cmovae
setbe
cmovbe
ffree
pfcmpge
setge
cmovge
setle
cmovle
loopne
setne
cmovne
loope
rdfsbase
wrfsbase
rdgsbase
wrgsbase
sete
vmwrite
sha1nexte
fnsave
fxsave
cmove
retf
cmpxchg
invlpg
setg
cmovg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
push
blci
bzhi
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
blsi
vcvttsd2usi
vcvtsd2usi
vcvttss2usi
vcvtss2usi
movnti
blcmsk
blsmsk
tzmsk
lcall
blcfill
blsfill
arpl
vpmacsdql
vpmacssdql
setl
pfmul
fimul
cmovl
fcom
ficom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
xbegin
pfmin
vmxon
setno
cmovno
seto
cmovo
bswap
fsubp
pfrcp
faddp
pdep
fmulp
ljmp
fcomp
ficomp
fucomp
setnp
cmovnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
fistp
fisttp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
cmovp
vpbroadcastmb2q
vpermi2q
movdq2q
vpshaq
vpsraq
vphaddbq
vphaddubq
vpsubq
vpmovsxbq
vpmovzxbq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vphsubdq
vpaddq
vphadddq
vpunpckhdq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
vpandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vpscatterdq
vmovntdq
vcvttpd2udq
vcvtpd2udq
vcvttps2udq
vcvtps2udq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
pfcmpeq
retfq
vpshlq
vpsllq
vpsrlq
vpblendmq
vpcomq
vpermq
vptestmq
vpandnq
valignq
vpcmpq
vpcmpeqq
vpgatherqq
vpscatterqq
vporq
vpxorq
vpinsrq
vpextrq
vpabsq
vpminsq
vpmaxsq
vpconflictq
vpcmpgtq
movntq
vprotq
insertq
vpbroadcastq
vpcomuq
vpminuq
vpcmpuq
vpmaxuq
vpsravq
vpsllvq
vpsrlvq
vpmaskmovq
vmovq
vphaddwq
vphadduwq
vpmovsxwq
vpmovzxwq
vmclear
pfsubr
fisubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
blsr
bextr
fdivr
fidivr
movabs
blcs
setns
cmovns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
vpermi2ps
cvtpi2ps
vpermil2ps
vcvtdq2ps
vcvtudq2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vrcp14ps
vrsqrt14ps
vrcp28ps
vrsqrt28ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vandps
vblendps
vroundps
vgatherdps
vscatterdps
vrndscaleps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vblendmps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgatherqps
vscatterqps
vorps
vxorps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vcvtsi2ss
vcvtusi2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vrcp14ss
vrsqrt14ss
vrcp28ss
vrsqrt28ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vrndscaless
vucomiss
vcomiss
vmulss
vminss
vrcpss
vcmpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
cmovs
lgdt
sgdt
lidt
sidt
lldt
sldt
pfcmpgt
popcnt
lzcnt
tzcnt
invept
xsaveopt
xabort
pfrsqrt
vsqrt
vaesdeclast
vaesenclast
vptest
fist
vaeskeygenassist
vmptrst
pext
vlddqu
vmaskmovdqu
vmovdqu
fdiv
fidiv
fldenv
fnstenv
vpcmov
vpshaw
vpsraw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
kunpckbw
vpunpcklbw
vphaddubw
vphsubw
vpsubw
vpmovsxbw
vpmovzxbw
fldcw
fnstcw
vphaddw
vpaddw
kandw
vpblendw
vpackssdw
vpackusdw
vpmovusdw
vpmovsdw
vpmovdw
pi2fw
pshufw
vpavgw
prefetchw
vpshufhw
vpmulhw
pf2iw
vpshuflw
vpshlw
vpsllw
vpmullw
vpsrlw
kshiftlw
vpcomw
kandnw
vpsignw
vpcmpeqw
vpmovusqw
vpmovsqw
vpmovqw
verw
pmulhrw
korw
kxnorw
kxorw
vpinsrw
kshiftrw
vpextrw
vpabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
lmsw
smsw
vpminsw
vpmulhrsw
fnstsw
vpsubusw
vpaddusw
vpmaxsw
vpcmpgtw
knotw
vprotw
vpbroadcastw
kortestw
vpmulhuw
vpcomuw
vpminuw
vphminposuw
vpmaxuw
kmovw
vpmacsww
vpmacssww
pfmax
adcx
shlx
mulx
adox
vcvttpd2dqx
vcvtpd2dqx
sarx
shrx
rorx
vcvtpd2psx
movsx
movzx
jecxz
jcxz
jrcxz
fcmovnb
st(0), 
fcmovb
st(0), 
fcmovnbe
st(0), 
fcmovbe
st(0), 
fcmovne
st(0), 
fcmove
st(0), 
fcmovnu
st(0), 
fcmovu
st(0), 
al, 
al, 
al, 
al, 
al, 
al, 
al, 
al, 
movabs
al, 
test
al, 
al, 
ax, 
ax, 
ax, 
ax, 
ax, 
xchg
ax, 
ax, 
ax, 
ax, 
movabs
ax, 
test
ax, 
ax, 
eax, 
eax, 
eax, 
eax, 
eax, 
xchg
eax, 
eax, 
eax, 
eax, 
movabs
eax, 
test
eax, 
eax, 
rax, 
rax, 
rax, 
rax, 
rax, 
xchg
rax, 
rax, 
rax, 
movabs
rax, 
test
rax, 
#VAARG_64 
#eh_return, addr: 
#VASTART_SAVE_XMM_REGS 
#CMOV_GR32* PSEUDO!
#CMOV_GR16* PSEUDO!
#CMOV_RFP80 PSEUDO!
#ATOMSUB6432 PSEUDO!
#ATOMADD6432 PSEUDO!
#ATOMAND6432 PSEUDO!
#ATOMNAND6432 PSEUDO!
#ATOMMIN6432 PSEUDO!
#ATOMUMIN6432 PSEUDO!
#ATOMSWAP6432 PSEUDO!
#ATOMOR6432 PSEUDO!
#ATOMXOR6432 PSEUDO!
#ATOMMAX6432 PSEUDO!
#ATOMUMAX6432 PSEUDO!
#ATOMAND32 PSEUDO!
#ATOMNAND32 PSEUDO!
#CMOV_V4F32 PSEUDO!
#CMOV_V16F32 PSEUDO!
#CMOV_V8F32 PSEUDO!
#ATOMMIN32 PSEUDO!
#ATOMUMIN32 PSEUDO!
#CMOV_RFP32 PSEUDO!
#CMOV_FR32 PSEUDO!
#ATOMOR32 PSEUDO!
#ATOMXOR32 PSEUDO!
#ATOMMAX32 PSEUDO!
#ATOMUMAX32 PSEUDO!
#ATOMAND64 PSEUDO!
#ATOMNAND64 PSEUDO!
#CMOV_V2F64 PSEUDO!
#CMOV_V4F64 PSEUDO!
#CMOV_V8F64 PSEUDO!
#CMOV_V2I64 PSEUDO!
#CMOV_V4I64 PSEUDO!
#CMOV_V8I64 PSEUDO!
#ATOMMIN64 PSEUDO!
#ATOMUMIN64 PSEUDO!
#CMOV_RFP64 PSEUDO!
#CMOV_FR64 PSEUDO!
#ATOMOR64 PSEUDO!
#ATOMXOR64 PSEUDO!
#ATOMMAX64 PSEUDO!
#ATOMUMAX64 PSEUDO!
#ATOMAND16 PSEUDO!
#ATOMNAND16 PSEUDO!
#ATOMMIN16 PSEUDO!
#ATOMUMIN16 PSEUDO!
#ATOMOR16 PSEUDO!
#ATOMXOR16 PSEUDO!
#ATOMMAX16 PSEUDO!
#ATOMUMAX16 PSEUDO!
#ATOMAND8 PSEUDO!
#ATOMNAND8 PSEUDO!
#ATOMMIN8 PSEUDO!
#ATOMUMIN8 PSEUDO!
#CMOV_GR8 PSEUDO!
#ATOMOR8 PSEUDO!
#ATOMXOR8 PSEUDO!
#ATOMMAX8 PSEUDO!
#ATOMUMAX8 PSEUDO!
#ACQUIRE_MOV PSEUDO!
#RELEASE_MOV PSEUDO!
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
scasb
lodsb
rep stosb
cmpsb
outsb
rep movsb
xlatb
clac
stac
xcryptcbc
rdpmc
vmfunc
rdtsc
pushfd
popfd
cpuid
xend
scasd
lodsd
rep stosd
cmpsd
outsd
rep movsd
iretd
wbinvd
fldl2e
lfence
mfence
sfence
cwde
fscale
vmresume
repne
cdqe
xacquire
xstore
xrelease
pause
leave
vmxoff
lahf
sahf
pushf
popf
retf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
dx, al
pushal
popal
vmmcall
vmcall
syscall
vzeroall
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
into
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
retfq
scasq
lodsq
rep stosq
cmpsq
rep movsq
iretq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
push
push
push
push
push
swapgs
fchs
# variable sized alloca for segmented stacks
femms
fcos
fsincos
push
clts
fldl2t
fxtract
iret
sysret
mwait
fninit
sysexit
frndint
fsqrt
xtest
ftst
xgetbv
xsetbv
pushaw
popaw
scasw
lodsw
rep stosw
cmpsw
outsw
rep movsw
fyl2x
fnstsw
dx, ax
vmload
vmsave
vmrun
skinit
dx, eax
vmload
vmsave
vmrun
invlpga
eax, ecx
invlpga
rax, ecx
al, dx
ax, dx
eax, dx
fnclex
fldz
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
xmm22
ymm22
zmm22
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
xmm23
ymm23
zmm23
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm19X86IntelInstPrinterE
N4llvm13X86AsmPrinterE
N4llvm24X86COFFMachineModuleInfoE
N12_GLOBAL__N_17EmitterIN4llvm14JITCodeEmitterEEE
N12_GLOBAL__N_111X86FastISelE
N12_GLOBAL__N_13FPSE
N4llvm16X86FrameLoweringE
N12_GLOBAL__N_115X86DAGToDAGISelE
-2H
-2D
-2<
-2=
-2^
-2\
-2Z
-2X
-2R
-2P
-2N
-2L
-2H
-2D
-2=
-2F
-2?
-2b
-2`
-2V
-2T
-2J
-2B
?-2v
.2{
.2t
.2}
.2v
.2x
.2q
.2z
.2s
-2d
-2f
N4llvm17X86TargetLoweringE
ON
SR
[Z
_^
32
76
! 
#"
'&
/.
A<
IH
wv
~}
rq
yx
|z
us
N4llvm15X86GenInstrInfoE
N4llvm12X86InstrInfoE
N12_GLOBAL__N_14CGBRE
N12_GLOBAL__N_112LDTLSCleanupE
N4llvm10X86JITInfoE
N4llvm22X86MachineFunctionInfoE
N12_GLOBAL__N_112PadShortFuncE
(9%%
(9((
)9))
*;**
+;++
/9,,
.<--
.<..
/9//
1911
2>22
3;33
7<44
5<55
6;66
7<77
8>88
9999
:>::
;;;;
<<<<
====
>>>>
????
N4llvm18X86GenRegisterInfoE
N4llvm15X86RegisterInfoE
N4llvm19X86SelectionDAGInfoE
N4llvm19X86GenSubtargetInfoE
N4llvm12X86SubtargetE
N4llvm16X86TargetMachineE
N12_GLOBAL__N_113X86PassConfigE
N4llvm2cl11OptionValueIbEE
N4llvm2cl15OptionValueBaseIbLb0EEE
N4llvm2cl15OptionValueCopyIbEE
N4llvm27X86_64MachoTargetObjectFileE
N4llvm24X86LinuxTargetObjectFileE
N4llvm26X86WindowsTargetObjectFileE
N12_GLOBAL__N_16X86TTIE
N12_GLOBAL__N_118VZeroUpperInserterE
N12_GLOBAL__N_112FixupLEAPassE
N12_GLOBAL__N_122DarwinX86_32AsmBackendE
N12_GLOBAL__N_119DarwinX86AsmBackendE
N12_GLOBAL__N_113X86AsmBackendE
N12_GLOBAL__N_120WindowsX86AsmBackendE
N12_GLOBAL__N_119ELFX86_32AsmBackendE
N12_GLOBAL__N_116ELFX86AsmBackendE
N12_GLOBAL__N_122DarwinX86_64AsmBackendE
N12_GLOBAL__N_119ELFX86_64AsmBackendE
XMM10
YMM10
ZMM10
CR10
XMM20
YMM20
ZMM20
XMM30
YMM30
ZMM30
XMM0
YMM0
ZMM0
XMM11
YMM11
ZMM11
CR11
XMM21
YMM21
ZMM21
XMM31
YMM31
ZMM31
XMM1
YMM1
ZMM1
XMM12
YMM12
ZMM12
CR12
XMM22
YMM22
ZMM22
XMM2
YMM2
ZMM2
XMM13
YMM13
ZMM13
CR13
XMM23
YMM23
ZMM23
XMM3
YMM3
ZMM3
XMM14
YMM14
ZMM14
CR14
XMM24
YMM24
ZMM24
XMM4
YMM4
ZMM4
XMM15
YMM15
ZMM15
CR15
XMM25
YMM25
ZMM25
XMM5
YMM5
ZMM5
XMM16
YMM16
ZMM16
XMM26
YMM26
ZMM26
XMM6
YMM6
ZMM6
XMM17
YMM17
ZMM17
XMM27
YMM27
ZMM27
XMM7
YMM7
ZMM7
XMM18
YMM18
ZMM18
XMM28
YMM28
ZMM28
XMM8
YMM8
ZMM8
XMM19
YMM19
ZMM19
XMM29
YMM29
ZMM29
XMM9
YMM9
ZMM9
R10B
R11B
R12B
R13B
R14B
R15B
R10D
R11D
R12D
R13D
R14D
R15D
EFLAGS
R10W
R11W
R12W
R13W
R14W
R15W
FPSW
MORESTACK_RET_RESTORE_R10
LD_Fp080
LD_Fp180
CMOV_RFP80
SUB_FpI32m80
ADD_FpI32m80
MUL_FpI32m80
SUBR_FpI32m80
DIVR_FpI32m80
DIV_FpI32m80
ILD_Fp32m80
IST_Fp32m80
ISTT_Fp32m80
ILD_Fp64m80
IST_Fp64m80
ISTT_Fp64m80
SUB_FpI16m80
ADD_FpI16m80
MUL_FpI16m80
SUBR_FpI16m80
DIVR_FpI16m80
DIV_FpI16m80
ILD_Fp16m80
IST_Fp16m80
ISTT_Fp16m80
CMOVNB_Fp80
SUB_Fp80
CMOVB_Fp80
ADD_Fp80
CMOVNBE_Fp80
CMOVBE_Fp80
CMOVNE_Fp80
CMOVE_Fp80
MUL_Fp80
SIN_Fp80
CMOVNP_Fp80
CMOVP_Fp80
ABS_Fp80
CHS_Fp80
COS_Fp80
SQRT_Fp80
TST_Fp80
DIV_Fp80
UCOM_FpIr80
UCOM_Fpr80
LD_F0
AVX512_512_SET0
V_SET0
AVX_SET0
PREFETCHT0
SUB_FrST0
ADD_FrST0
MUL_FrST0
SUBR_FrST0
DIVR_FrST0
DIV_FrST0
SUB_FPrST0
ADD_FPrST0
MUL_FPrST0
SUBR_FPrST0
DIVR_FPrST0
DIV_FPrST0
PBLENDVBrm0
BLENDVPDrm0
BLENDVPSrm0
MOV32r0
PBLENDVBrr0
BLENDVPDrr0
BLENDVPSrr0
XSHA1
LD_F1
FPREM1
F2XM1
FYL2XP1
PREFETCHT1
JA_1
JB_1
JAE_1
JBE_1
JGE_1
JE_1
JLE_1
JNE_1
JG_1
JL_1
JO_1
JNO_1
JP_1
JMP_1
JNP_1
JS_1
JNS_1
RCL32m1
SHL32m1
ROL32m1
SAR32m1
RCR32m1
SHR32m1
ROR32m1
RCL64m1
SHL64m1
ROL64m1
SAR64m1
RCR64m1
SHR64m1
ROR64m1
RCL16m1
SHL16m1
ROL16m1
SAR16m1
RCR16m1
SHR16m1
ROR16m1
RCL8m1
SHL8m1
ROL8m1
SAR8m1
RCR8m1
SHR8m1
ROR8m1
RCL32r1
SHL32r1
ROL32r1
SAR32r1
RCR32r1
SHR32r1
ROR32r1
RCL64r1
SHL64r1
ROL64r1
SAR64r1
RCR64r1
SHR64r1
ROR64r1
RCL16r1
SHL16r1
ROL16r1
SAR16r1
RCR16r1
SHR16r1
ROR16r1
RCL8r1
SHL8r1
ROL8r1
SAR8r1
RCR8r1
SHR8r1
ROR8r1
LD_Fp032
LD_Fp132
ATOMSUB6432
ATOMADD6432
ATOMAND6432
ATOMNAND6432
ATOMMIN6432
ATOMUMIN6432
ATOMSWAP6432
ATOMOR6432
ATOMXOR6432
ATOMMAX6432
ATOMUMAX6432
INVLPGA32
PUSHA32
POPA32
VMLOAD32
LXADD32
INVPCID32
INVVPID32
ATOMAND32
ATOMNAND32
VMSAVE32
CMOV_V4F32
CMOV_V16F32
CMOV_V8F32
PUSHF32
POPF32
LCMPXCHG32
ATOMMIN32
ATOMUMIN32
VMRUN32
ADJCALLSTACKDOWN32
CMOV_RFP32
ADJCALLSTACKUP32
CMOV_FR32
CMOV_GR32
ATOMOR32
ATOMXOR32
SCAS32
PUSHCS32
PUSHDS32
POPDS32
PUSHES32
POPES32
PUSHFS32
POPFS32
PUSHGS32
POPGS32
CMPS32
PUSHSS32
POPSS32
IRET32
INVEPT32
ATOMMAX32
ATOMUMAX32
SEG_ALLOCA_32
REP_STOSB_32
REP_MOVSB_32
REP_STOSD_32
REP_MOVSD_32
WIN_FTOL_32
REP_STOSW_32
REP_MOVSW_32
JECXZ_32
TLSCall_32
SBB32i32
SUB32i32
ADC32i32
ADD32i32
AND32i32
CMP32i32
XOR32i32
TEST32i32
SBB64i32
SUB64i32
ADC64i32
ADD64i32
AND64i32
PUSH64i32
CMP64i32
XOR64i32
TEST64i32
PUSHi32
SBB64mi32
LOCK_SUB64mi32
ADC64mi32
LOCK_ADD64mi32
LOCK_AND64mi32
CMP64mi32
LOCK_XOR64mi32
LOCK_OR64mi32
TEST64mi32
MOV64mi32
IMUL64rmi32
SBB64ri32
SUB64ri32
ADC64ri32
ADD64ri32
AND64ri32
CMP64ri32
XOR64ri32
TEST64ri32
MOV64ri32
IMUL64rri32
CALL64pcrel32
CALLpcrel32
ST_FpP80m32
SUB_Fp80m32
ADD_Fp80m32
MUL_Fp80m32
SUBR_Fp80m32
DIVR_Fp80m32
ST_Fp80m32
DIV_Fp80m32
SUB_FpI32m32
ADD_FpI32m32
MUL_FpI32m32
SUBR_FpI32m32
DIVR_FpI32m32
DIV_FpI32m32
ILD_Fp32m32
IST_Fp32m32
ISTT_Fp32m32
CRC32r32m32
ST_FpP64m32
SUB_Fp64m32
ADD_Fp64m32
ILD_Fp64m32
MUL_Fp64m32
SUBR_Fp64m32
DIVR_Fp64m32
IST_Fp64m32
ISTT_Fp64m32
DIV_Fp64m32
SUB_FpI16m32
ADD_FpI16m32
MUL_FpI16m32
SUBR_FpI16m32
DIVR_FpI16m32
DIV_FpI16m32
ILD_Fp16m32
IST_Fp16m32
ISTT_Fp16m32
MOVSX64rm32
MOV32ao32
MOV64ao32
CMOVNB_Fp32
SUB_Fp32
CMOVB_Fp32
ADD_Fp32
CMOVNBE_Fp32
CMOVBE_Fp32
CMOVNE_Fp32
CMOVE_Fp32
MUL_Fp32
SIN_Fp32
CMOVNP_Fp32
CMOVP_Fp32
ABS_Fp32
CHS_Fp32
COS_Fp32
SQRT_Fp32
TST_Fp32
DIV_Fp32
EH_SjLj_LongJmp32
EH_SjLj_SetJmp32
CRC32r32r32
UCOM_FpIr32
TLS_addr32
TLS_base_addr32
UCOM_Fpr32
MOVSX64rr32
FLDLG2
FLDLN2
PREFETCHT2
JA_2
JB_2
JAE_2
JBE_2
JGE_2
JE_2
JLE_2
JNE_2
JG_2
JL_2
JO_2
JNO_2
JP_2
JMP_2
JNP_2
JS_2
JNS_2
INT3
LD_Fp064
LD_Fp164
INVLPGA64
VMLOAD64
LXADD64
INVPCID64
INVVPID64
ATOMAND64
ATOMNAND64
RDFSBASE64
WRFSBASE64
RDGSBASE64
WRGSBASE64
LEAVE64
VMSAVE64
FXSAVE64
CMOV_V2F64
CMOV_V4F64
CMOV_V8F64
PUSHF64
POPF64
LCMPXCHG64
CMOV_V2I64
CMOV_V4I64
CMOV_V8I64
FARCALL64
ATOMMIN64
ATOMUMIN64
EH_RETURN64
VMRUN64
ADJCALLSTACKDOWN64
CMOV_RFP64
FARJMP64
ADJCALLSTACKUP64
MMX_MASKMOVQ64
CMOV_FR64
ATOMOR64
FXRSTOR64
ATOMXOR64
SCAS64
PUSHFS64
POPFS64
PUSHGS64
POPGS64
CMPS64
IRET64
SYSRET64
SYSEXIT64
INVEPT64
XSAVEOPT64
VMASKMOVDQU64
ATOMMAX64
ATOMUMAX64
SEG_ALLOCA_64
REP_STOSB_64
REP_MOVSB_64
REP_STOSD_64
REP_MOVSD_64
VAARG_64
WIN_FTOL_64
REP_STOSQ_64
REP_MOVSQ_64
REP_STOSW_64
REP_MOVSW_64
JECXZ_64
TLSCall_64
TAILJMPd64
TCRETURNdi64
TCRETURNmi64
MOV32ri64
TCRETURNri64
ST_FpP80m64
SUB_Fp80m64
ADD_Fp80m64
MUL_Fp80m64
SUBR_Fp80m64
DIVR_Fp80m64
ST_Fp80m64
DIV_Fp80m64
SUB_FpI32m64
ADD_FpI32m64
MUL_FpI32m64
SUBR_FpI32m64
DIVR_FpI32m64
DIV_FpI32m64
ILD_Fp32m64
IST_Fp32m64
ISTT_Fp32m64
ILD_Fp64m64
IST_Fp64m64
ISTT_Fp64m64
CRC32r64m64
SUB_FpI16m64
ADD_FpI16m64
MUL_FpI16m64
SUBR_FpI16m64
DIVR_FpI16m64
DIV_FpI16m64
ILD_Fp16m64
IST_Fp16m64
ISTT_Fp16m64
TAILJMPm64
MMX_PSHUFBrm64
MMX_PSIGNBrm64
MMX_PABSBrm64
MMX_PHSUBDrm64
MMX_PHADDrm64
MMX_PSIGNDrm64
MMX_PABSDrm64
MMX_PHSUBWrm64
MMX_PHADDWrm64
MMX_PSIGNWrm64
MMX_PABSWrm64
MMX_PMADDUBSWrm64
MMX_PHSUBSWrm64
MMX_PHADDSWrm64
MMX_PMULHRSWrm64
MOV64ao64
CMOVNB_Fp64
SUB_Fp64
CMOVB_Fp64
ADD_Fp64
CMOVNBE_Fp64
CMOVBE_Fp64
CMOVNE_Fp64
CMOVE_Fp64
MUL_Fp64
SIN_Fp64
CMOVNP_Fp64
CMOVP_Fp64
ABS_Fp64
CHS_Fp64
COS_Fp64
SQRT_Fp64
TST_Fp64
DIV_Fp64
EH_SjLj_LongJmp64
EH_SjLj_SetJmp64
CRC32r64r64
UCOM_FpIr64
TAILJMPr64
XCHG32ar64
TLS_addr64
TLS_base_addr64
UCOM_Fpr64
MMX_PSHUFBrr64
MMX_PSIGNBrr64
MMX_PABSBrr64
MMX_PHSUBDrr64
MMX_PHADDrr64
MMX_PSIGNDrr64
MMX_PABSDrr64
MMX_PHSUBWrr64
MMX_PHADDWrr64
MMX_PSIGNWrr64
MMX_PABSWrr64
MMX_PMADDUBSWrr64
MMX_PHSUBSWrr64
MMX_PHADDSWrr64
MMX_PMULHRSWrr64
JA_4
JB_4
JAE_4
JBE_4
JGE_4
JE_4
JLE_4
JNE_4
JG_4
JL_4
XBEGIN_4
JO_4
JNO_4
JP_4
JMP_4
JNP_4
JS_4
JNS_4
PUSHA16
POPA16
LXADD16
ATOMAND16
ATOMNAND16
PUSHF16
POPF16
LCMPXCHG16
ATOMMIN16
ATOMUMIN16
CMOV_GR16
ATOMOR16
ATOMXOR16
SCAS16
PUSHCS16
PUSHDS16
POPDS16
PUSHES16
POPES16
PUSHFS16
POPFS16
PUSHGS16
POPGS16
CMPS16
PUSHSS16
POPSS16
IRET16
ATOMMAX16
ATOMUMAX16
MOV32ao32_16
MOV16ao16_16
MOV8ao8_16
MOV32o32a_16
MOV16o16a_16
MOV8o8a_16
PUSH64i16
SBB16i16
SUB16i16
ADC16i16
ADD16i16
AND16i16
CMP16i16
XOR16i16
TEST16i16
PUSHi16
CALLpcrel16
CRC32r32m16
MOVSX32rm16
MOVZX32rm16
MOVSX64rm16
MOV64ao16
MOV16ao16
CRC32r32r16
MOVSX32rr16
MOVZX32rr16
MOVSX64rr16
XSHA256
VPABSBrm256
VPABSDrm256
VPABSWrm256
VPMADDUBSWrm256
VPHSUBSWrm256
VPHADDSWrm256
VPMULHRSWrm256
VPABSBrr256
VPABSDrr256
VPABSWrr256
VPMADDUBSWrr256
VPHSUBSWrr256
VPHADDSWrr256
VPMULHRSWrr256
VBROADCASTF128
VBROADCASTI128
VPABSBrm128
VPABSDrm128
VPABSWrm128
VPMADDUBSWrm128
VPHSUBSWrm128
VPHADDSWrm128
VPMULHRSWrm128
VPHMINPOSUWrm128
VPABSBrr128
VPABSDrr128
VPABSWrr128
VPMADDUBSWrr128
VPHSUBSWrr128
VPHADDSWrr128
VPMULHRSWrr128
VPHMINPOSUWrr128
LXADD8
ATOMAND8
ATOMNAND8
LCMPXCHG8
ATOMMIN8
ATOMUMIN8
CMOV_GR8
ATOMOR8
ATOMXOR8
SCAS8
CMPS8
ATOMMAX8
ATOMUMAX8
PUSH32i8
PUSH64i8
PUSH16i8
SBB8i8
SUB8i8
ADC8i8
AAD8i8
ADD8i8
AND8i8
AAM8i8
CMP8i8
XOR8i8
TEST8i8
SBB32mi8
LOCK_SUB32mi8
ADC32mi8
BTC32mi8
LOCK_ADD32mi8
LOCK_AND32mi8
CMP32mi8
LOCK_XOR32mi8
LOCK_OR32mi8
BTR32mi8
BTS32mi8
BT32mi8
SBB64mi8
LOCK_SUB64mi8
ADC64mi8
BTC64mi8
LOCK_ADD64mi8
LOCK_AND64mi8
CMP64mi8
LOCK_XOR64mi8
LOCK_OR64mi8
BTR64mi8
BTS64mi8
BT64mi8
SBB16mi8
LOCK_SUB16mi8
ADC16mi8
BTC16mi8
LOCK_ADD16mi8
LOCK_AND16mi8
CMP16mi8
LOCK_XOR16mi8
LOCK_OR16mi8
BTR16mi8
BTS16mi8
BT16mi8
IMUL32rmi8
IMUL64rmi8
IMUL16rmi8
SBB32ri8
SUB32ri8
ADC32ri8
BTC32ri8
ADD32ri8
AND32ri8
CMP32ri8
XOR32ri8
BTR32ri8
BTS32ri8
BT32ri8
SBB64ri8
SUB64ri8
ADC64ri8
BTC64ri8
ADD64ri8
AND64ri8
CMP64ri8
XOR64ri8
BTR64ri8
BTS64ri8
BT64ri8
SBB16ri8
SUB16ri8
ADC16ri8
BTC16ri8
ADD16ri8
AND16ri8
CMP16ri8
XOR16ri8
BTR16ri8
BTS16ri8
BT16ri8
SHLD32mri8
SHRD32mri8
SHLD64mri8
SHRD64mri8
SHLD16mri8
SHRD16mri8
SHLD32rri8
SHRD32rri8
IMUL32rri8
SHLD64rri8
SHRD64rri8
IMUL64rri8
SHLD16rri8
SHRD16rri8
IMUL16rri8
CRC32r32m8
CRC32r64m8
MOVSX32rm8
MOVZX32rm8
MOVSX64rm8
MOVSX16rm8
MOVZX16rm8
MOVZX32_NOREXrm8
MOV64ao8
MOV8ao8
CRC32r32r8
CRC32r64r8
MOVSX32rr8
MOVZX32rr8
MOVSX64rr8
MOVSX16rr8
MOVZX16rr8
MOVZX32_NOREXrr8
W64ALLOCA
WIN_ALLOCA
PREFETCHNTA
KSET0B
KSET1B
UD2B
LCMPXCHG16B
LCMPXCHG8B
XCRYPTECB
ADD64ri32_DB
ADD32ri8_DB
ADD64ri8_DB
ADD16ri8_DB
ADD32ri_DB
ADD16ri_DB
ADD32rr_DB
ADD64rr_DB
ADD16rr_DB
XCRYPTCFB
XCRYPTOFB
LODSB
STOSB
OUTSB
MOVSB
CLAC
STAC
XCRYPTCBC
RDPMC
VMFUNC
RDTSC
CPUID
XEND
LIFETIME_END
FsFLD0SD
MOVNTSD
WBINVD
FLDL2E
LFENCE
MFENCE
SFENCE
REG_SEQUENCE
CWDE
FFREE
FSCALE
BUNDLE
VMRESUME
LOOPNE
LOOPE
CDQE
XSTORE
RDFSBASE
WRFSBASE
RDGSBASE
WRGSBASE
PAUSE
DBG_VALUE
LEAVE
FXSAVE
IMPLICIT_DEF
VMXOFF
LAHF
SAHF
CMOVNB_F
CMOVB_F
CMOVNBE_F
CMOVBE_F
CMOVNE_F
CMOVE_F
XCH_F
SIN_F
CMOVNP_F
CMOVP_F
ABS_F
CHS_F
COS_F
SQRT_F
TST_F
VPCMPESTRM128REG
VPCMPISTRM128REG
EXTRACT_SUBREG
INSERT_SUBREG
VPCMPESTRIREG
VPCMPISTRIREG
SUBREG_TO_REG
INVLPG
VMLAUNCH
PREFETCH
CLFLUSH
CLGI
STGI
FLDPI
EXTRQI
INSERTQI
FpPOP_RETVAL
RCL32mCL
SHL32mCL
ROL32mCL
SAR32mCL
RCR32mCL
SHR32mCL
ROR32mCL
RCL64mCL
SHL64mCL
ROL64mCL
SAR64mCL
RCR64mCL
SHR64mCL
ROR64mCL
RCL16mCL
SHL16mCL
ROL16mCL
SAR16mCL
RCR16mCL
SHR16mCL
ROR16mCL
RCL8mCL
SHL8mCL
ROL8mCL
SAR8mCL
RCR8mCL
SHR8mCL
ROR8mCL
RCL32rCL
SHL32rCL
ROL32rCL
SAR32rCL
RCR32rCL
SHR32rCL
ROR32rCL
RCL64rCL
SHL64rCL
ROL64rCL
SAR64rCL
RCR64rCL
SHR64rCL
ROR64rCL
RCL16rCL
SHL16rCL
ROL16rCL
SAR16rCL
RCR16rCL
SHR16rCL
ROR16rCL
RCL8rCL
SHL8rCL
ROL8rCL
SAR8rCL
RCR8rCL
SHR8rCL
ROR8rCL
SHLD32mrCL
SHRD32mrCL
SHLD64mrCL
SHRD64mrCL
SHLD16mrCL
SHRD16mrCL
SHLD32rrCL
SHRD32rrCL
SHLD64rrCL
SHRD64rrCL
SHLD16rrCL
SHRD16rrCL
GC_LABEL
PROLOG_LABEL
EH_LABEL
LRETIL
VMMCALL
VMCALL
SYSCALL
VZEROALL
KILL
NOOPL
LODSL
STOSL
OUTSL
MOVSL
LRETL
MONTMUL
FXAM
VPCMPESTRM128MEM
VPCMPISTRM128MEM
VPCMPESTRIMEM
VPCMPISTRIMEM
FP80_TO_INT32_IN_MEM
FP32_TO_INT32_IN_MEM
FP64_TO_INT32_IN_MEM
FP80_TO_INT64_IN_MEM
FP32_TO_INT64_IN_MEM
FP64_TO_INT64_IN_MEM
FP80_TO_INT16_IN_MEM
FP32_TO_INT16_IN_MEM
FP64_TO_INT16_IN_MEM
FPREM
INLINEASM
FPATAN
FPTAN
XBEGIN
VMXON
EH_RETURN
INTO
STACKMAP
TRAP
RDTSCP
FNOP
LOOP
NOOP
FCOMPP
FDECSTP
FINCSTP
LRETIQ
EXTRQ
LODSQ
STOSQ
MOVSQ
LRETQ
INSERTQ
MMX_MASKMOVQ
MOVZX64rm16_Q
MOVZX64rr16_Q
MOVZX64rm8_Q
MOVZX64rr8_Q
VZEROUPPER
SYSENTER
MONITOR
FXRSTOR
VLDMXCSR
VSTMXCSR
RDMSR
WRMSR
XCRYPTCTR
AVX2_SETALLONES
V_SETALLONES
VASTART_SAVE_XMM_REGS
SWAPGS
FEMMS
MMX_EMMS
FSINCOS
FsFLD0SS
COPY_TO_REGCLASS
MOVNTSS
CLTS
FLDL2T
XLAT
FXTRACT
SYSRET
MORESTACK_RET
WAIT
SKINIT
FNINIT
SYSEXIT
FRNDINT
PATCHPOINT
XSAVEOPT
LIFETIME_START
XABORT
XTEST
VMASKMOVDQU
XGETBV
XSETBV
VFMADDSUBPD4rrY_REV
VFMSUBPD4rrY_REV
VFNMSUBPD4rrY_REV
VFMSUBADDPD4rrY_REV
VFMADDPD4rrY_REV
VFNMADDPD4rrY_REV
VFMADDSUBPS4rrY_REV
VFMSUBPS4rrY_REV
VFNMSUBPS4rrY_REV
VFMSUBADDPS4rrY_REV
VFMADDPS4rrY_REV
VFNMADDPS4rrY_REV
SBB32rr_REV
SUB32rr_REV
ADC32rr_REV
ADD32rr_REV
AND32rr_REV
CMP32rr_REV
XOR32rr_REV
MOV32rr_REV
SBB64rr_REV
SUB64rr_REV
ADC64rr_REV
ADD64rr_REV
AND64rr_REV
CMP64rr_REV
XOR64rr_REV
MOV64rr_REV
VFMADDSUBPD4rr_REV
VFMSUBPD4rr_REV
VFNMSUBPD4rr_REV
VFMSUBADDPD4rr_REV
VFMADDPD4rr_REV
VFNMADDPD4rr_REV
VFMSUBSD4rr_REV
VFNMSUBSD4rr_REV
VFMADDSD4rr_REV
VFNMADDSD4rr_REV
VFMADDSUBPS4rr_REV
VFMSUBPS4rr_REV
VFNMSUBPS4rr_REV
VFMSUBADDPS4rr_REV
VFMADDPS4rr_REV
VFNMADDPS4rr_REV
VFMSUBSS4rr_REV
VFNMSUBSS4rr_REV
VFMADDSS4rr_REV
VFNMADDSS4rr_REV
SBB16rr_REV
SUB16rr_REV
ADC16rr_REV
ADD16rr_REV
AND16rr_REV
CMP16rr_REV
XOR16rr_REV
MOV16rr_REV
SBB8rr_REV
SUB8rr_REV
ADC8rr_REV
ADD8rr_REV
AND8rr_REV
CMP8rr_REV
XOR8rr_REV
MOV8rr_REV
VMOVDQArr_REV
VMOVAPDrr_REV
VMOVUPDrr_REV
VMOVSDrr_REV
VMOVAPSrr_REV
VMOVUPSrr_REV
VMOVSSrr_REV
VMOVDQUrr_REV
VPEXTRWrr_REV
VMOVDQAYrr_REV
VMOVAPDYrr_REV
VMOVUPDYrr_REV
VMOVAPSYrr_REV
VMOVUPSYrr_REV
VMOVDQUYrr_REV
VMOVSDZrr_REV
VMOVSSZrr_REV
KSET0W
KSET1W
PREFETCHW
LRETIW
NOOPW
LODSW
STOSW
OUTSW
MOVSW
LRETW
FYL2X
FNCLEX
TEST8ri_NOREX
MOV8rm_NOREX
MOV8mr_NOREX
MOV8rr_NOREX
REX64_PREFIX
DATA16_PREFIX
REPNE_PREFIX
XACQUIRE_PREFIX
XRELEASE_PREFIX
LOCK_PREFIX
REP_PREFIX
CS_PREFIX
DS_PREFIX
ES_PREFIX
FS_PREFIX
GS_PREFIX
SS_PREFIX
COPY
VFMADDSUBPDr231mY
VFMSUBPDr231mY
VFNMSUBPDr231mY
VFMSUBADDPDr231mY
VFMADDPDr231mY
VFNMADDPDr231mY
VFMADDSUBPSr231mY
VFMSUBPSr231mY
VFNMSUBPSr231mY
VFMSUBADDPSr231mY
VFMADDPSr231mY
VFNMADDPSr231mY
VFMADDSUBPDr132mY
VFMSUBPDr132mY
VFNMSUBPDr132mY
VFMSUBADDPDr132mY
VFMADDPDr132mY
VFNMADDPDr132mY
VFMADDSUBPSr132mY
VFMSUBPSr132mY
VFNMSUBPSr132mY
VFMSUBADDPSr132mY
VFMADDPSr132mY
VFNMADDPSr132mY
VFMADDSUBPDr213mY
VFMSUBPDr213mY
VFNMSUBPDr213mY
VFMSUBADDPDr213mY
VFMADDPDr213mY
VFNMADDPDr213mY
VFMADDSUBPSr213mY
VFMSUBPSr213mY
VFNMSUBPSr213mY
VFMSUBADDPSr213mY
VFMADDPSr213mY
VFNMADDPSr213mY
VFMADDSUBPD4rmY
VFMSUBPD4rmY
VFNMSUBPD4rmY
VFMSUBADDPD4rmY
VFMADDPD4rmY
VFNMADDPD4rmY
VFMADDSUBPS4rmY
VFMSUBPS4rmY
VFNMSUBPS4rmY
VFMSUBADDPS4rmY
VFMADDPS4rmY
VFNMADDPS4rmY
VPERMIL2PDrmY
VFRCZPDrmY
VPERMIL2PSrmY
VFRCZPSrmY
VPCMOVrmY
VFMADDSUBPDr231rY
VFMSUBPDr231rY
VFNMSUBPDr231rY
VFMSUBADDPDr231rY
VFMADDPDr231rY
VFNMADDPDr231rY
VFMADDSUBPSr231rY
VFMSUBPSr231rY
VFNMSUBPSr231rY
VFMSUBADDPSr231rY
VFMADDPSr231rY
VFNMADDPSr231rY
VFMADDSUBPDr132rY
VFMSUBPDr132rY
VFNMSUBPDr132rY
VFMSUBADDPDr132rY
VFMADDPDr132rY
VFNMADDPDr132rY
VFMADDSUBPSr132rY
VFMSUBPSr132rY
VFNMSUBPSr132rY
VFMSUBADDPSr132rY
VFMADDPSr132rY
VFNMADDPSr132rY
VFMADDSUBPDr213rY
VFMSUBPDr213rY
VFNMSUBPDr213rY
VFMSUBADDPDr213rY
VFMADDPDr213rY
VFNMADDPDr213rY
VFMADDSUBPSr213rY
VFMSUBPSr213rY
VFNMSUBPSr213rY
VFMSUBADDPSr213rY
VFMADDPSr213rY
VFNMADDPSr213rY
VFMADDSUBPD4mrY
VFMSUBPD4mrY
VFNMSUBPD4mrY
VFMSUBADDPD4mrY
VFMADDPD4mrY
VFNMADDPD4mrY
VFMADDSUBPS4mrY
VFMSUBPS4mrY
VFNMSUBPS4mrY
VFMSUBADDPS4mrY
VFMADDPS4mrY
VFNMADDPS4mrY
VPERMIL2PDmrY
VPERMIL2PSmrY
VPCMOVmrY
VFMADDSUBPD4rrY
VFMSUBPD4rrY
VFNMSUBPD4rrY
VFMSUBADDPD4rrY
VFMADDPD4rrY
VFNMADDPD4rrY
VFMADDSUBPS4rrY
VFMSUBPS4rrY
VFNMSUBPS4rrY
VFMSUBADDPS4rrY
VFMADDPS4rrY
VFNMADDPS4rrY
VPERMIL2PDrrY
VFRCZPDrrY
VPERMIL2PSrrY
VFRCZPSrrY
VPCMOVrrY
JCXZ
JRCXZ
MOV32o32a
MOV64o32a
MOV64o64a
MOV64o16a
MOV16o16a
MOV64o8a
MOV8o8a
VCMPPDZrrib
VCMPPSZrrib
VFMADDSUB132PDZmb
VFMSUB132PDZmb
VFNMSUB132PDZmb
VFMSUBADD132PDZmb
VFMADD132PDZmb
VFNMADD132PDZmb
VFMADDSUB213PDZmb
VFMSUB213PDZmb
VFNMSUB213PDZmb
VFMSUBADD213PDZmb
VFMADD213PDZmb
VFNMADD213PDZmb
VFMADDSUB132PSZmb
VFMSUB132PSZmb
VFNMSUB132PSZmb
VFMSUBADD132PSZmb
VFMADD132PSZmb
VFNMADD132PSZmb
VFMADDSUB213PSZmb
VFMSUB213PSZmb
VFNMSUB213PSZmb
VFMSUBADD213PSZmb
VFMADD213PSZmb
VFNMADD213PSZmb
VPCONFLICTDrmb
VPCONFLICTQrmb
VPSUBDZrmb
VPADDDZrmb
VPANDDZrmb
VPMULLDZrmb
VPANDNDZrmb
VSUBPDZrmb
VADDPDZrmb
VMULPDZrmb
VMINPDZrmb
VDIVPDZrmb
VMAXPDZrmb
VPORDZrmb
VPXORDZrmb
VPMINSDZrmb
VPMAXSDZrmb
VPMINUDZrmb
VPMAXUDZrmb
VPSUBQZrmb
VPADDQZrmb
VPANDQZrmb
VPANDNQZrmb
VPORQZrmb
VPXORQZrmb
VPMINSQZrmb
VPMAXSQZrmb
VPMINUQZrmb
VPMAXUQZrmb
VSUBPSZrmb
VADDPSZrmb
VMULPSZrmb
VMINPSZrmb
VDIVPSZrmb
VMAXPSZrmb
VRCP28PDZrb
VRSQRT28PDZrb
VRCP28PSZrb
VRSQRT28PSZrb
VRCP28SDrrb
VRSQRT28SDrrb
VRCP28SSrrb
VRSQRT28SSrrb
VCVTPD2DQZrrb
VCVTPS2DQZrrb
VCVTPD2UDQZrrb
VCVTPS2UDQZrrb
VCVTPD2PSZrrb
VCVTDQ2PSZrrb
VCVTUDQ2PSZrrb
MOV32rc
MOV64rc
TAILJMPd
OR32mrLocked
MOV32rd
MOV64rd
FARCALL32i
FARJMP32i
FARCALL16i
FARJMP16i
TCRETURNdi
SBB32mi
LOCK_SUB32mi
ADC32mi
LOCK_ADD32mi
LOCK_AND32mi
BEXTRI32mi
RCL32mi
SHL32mi
ROL32mi
CMP32mi
SAR32mi
RCR32mi
SHR32mi
ROR32mi
LOCK_XOR32mi
LOCK_OR32mi
TEST32mi
MOV32mi
RORX32mi
BEXTRI64mi
RCL64mi
SHL64mi
ROL64mi
SAR64mi
RCR64mi
SHR64mi
ROR64mi
RORX64mi
SBB16mi
LOCK_SUB16mi
ADC16mi
LOCK_ADD16mi
LOCK_AND16mi
RCL16mi
SHL16mi
ROL16mi
CMP16mi
SAR16mi
RCR16mi
SHR16mi
ROR16mi
LOCK_XOR16mi
LOCK_OR16mi
TEST16mi
MOV16mi
SBB8mi
LOCK_SUB8mi
ADC8mi
LOCK_ADD8mi
LOCK_AND8mi
RCL8mi
SHL8mi
ROL8mi
CMP8mi
SAR8mi
RCR8mi
SHR8mi
ROR8mi
LOCK_XOR8mi
LOCK_OR8mi
TEST8mi
MOV8mi
VPCOMBmi
VPROTBmi
VPCOMUBmi
VPSHUFDmi
VPCOMDmi
VPERMILPDmi
VPROTDmi
VPCOMUDmi
TCRETURNmi
VPCOMQmi
VPROTQmi
VPCOMUQmi
VPERMILPSmi
MMX_PSHUFWmi
VPSHUFHWmi
VPSHUFLWmi
VPCOMWmi
VPROTWmi
VPCOMUWmi
VPSHUFDYmi
VPERMILPDYmi
VPERMPDYmi
VPERMQYmi
VPERMILPSYmi
VPSHUFHWYmi
VPSHUFLWYmi
VPSRADZmi
VPSHUFDZmi
VPSLLDZmi
VPSRLDZmi
VPERMILPDZmi
VPERMPDZmi
VPSRAQZmi
VPSLLQZmi
VPSRLQZmi
VPERMQZmi
VPERMILPSZmi
IMUL32rmi
SHA1RNDS4rmi
IMUL16rmi
VPBLENDDrmi
VALIGNDrmi
VBLENDPDrmi
VSHUFPDrmi
VDPPDrmi
VCMPPDrmi
VALIGNQrmi
VBLENDPSrmi
VSHUFPSrmi
VDPPSrmi
VCMPPSrmi
VMPSADBWrmi
VPBLENDWrmi
VPINSRWrmi
VPBLENDDYrmi
VBLENDPDYrmi
VSHUFPDYrmi
VCMPPDYrmi
VBLENDPSYrmi
VSHUFPSYrmi
VDPPSYrmi
VCMPPSYrmi
VMPSADBWYrmi
VPBLENDWYrmi
VSHUFPDZrmi
VPCMPDZrmi
VCMPPDZrmi
VPCMPUDZrmi
VPCMPQZrmi
VPCMPUQZrmi
VSHUFPSZrmi
VCMPPSZrmi
MMX_PINSRWirmi
SBB32ri
SUB32ri
ADC32ri
ADD32ri
AND32ri
BEXTRI32ri
RCL32ri
SHL32ri
ROL32ri
IN32ri
CMP32ri
SAR32ri
RCR32ri
SHR32ri
ROR32ri
XOR32ri
TEST32ri
MOV32ri
RORX32ri
BEXTRI64ri
RCL64ri
SHL64ri
ROL64ri
SAR64ri
RCR64ri
SHR64ri
ROR64ri
MOV64ri
RORX64ri
SBB16ri
SUB16ri
ADC16ri
ADD16ri
AND16ri
RCL16ri
SHL16ri
ROL16ri
IN16ri
CMP16ri
SAR16ri
RCR16ri
SHR16ri
ROR16ri
XOR16ri
TEST16ri
MOV16ri
SBB8ri
SUB8ri
ADC8ri
ADD8ri
AND8ri
RCL8ri
SHL8ri
ROL8ri
IN8ri
CMP8ri
SAR8ri
RCR8ri
SHR8ri
ROR8ri
XOR8ri
TEST8ri
MOV8ri
VPCOMBri
VPROTBri
VPCOMUBri
VPSRADri
MMX_PSRADri
VPSHUFDri
VPSLLDri
MMX_PSLLDri
VPSRLDri
MMX_PSRLDri
VPCOMDri
VPERMILPDri
VPROTDri
VPCOMUDri
TCRETURNri
VPSLLDQri
VPSRLDQri
VPSLLQri
MMX_PSLLQri
VPSRLQri
MMX_PSRLQri
VPCOMQri
VPROTQri
VPCOMUQri
VPERMILPSri
VPSRAWri
MMX_PSRAWri
MMX_PSHUFWri
VPSHUFHWri
VPSHUFLWri
VPSLLWri
MMX_PSLLWri
VPSRLWri
MMX_PSRLWri
KSHIFTLWri
VPCOMWri
KSHIFTRWri
VPEXTRWri
VPROTWri
VPCOMUWri
VPSRADYri
VPSHUFDYri
VPSLLDYri
VPSRLDYri
VPERMILPDYri
VPERMPDYri
VPSLLDQYri
VPSRLDQYri
VPSLLQYri
VPSRLQYri
VPERMQYri
VPERMILPSYri
VPSRAWYri
VPSHUFHWYri
VPSHUFLWYri
VPSLLWYri
VPSRLWYri
VPSRADZri
VPSHUFDZri
VPSLLDZri
VPSRLDZri
VPERMILPDZri
VPERMPDZri
VPSRAQZri
VPSLLQZri
VPSRLQZri
VPERMQZri
VPERMILPSZri
IMUL32rri
SHA1RNDS4rri
IMUL16rri
VPBLENDDrri
VALIGNDrri
VBLENDPDrri
VSHUFPDrri
VDPPDrri
VCMPPDrri
VALIGNQrri
VBLENDPSrri
VSHUFPSrri
VDPPSrri
VCMPPSrri
VMPSADBWrri
VPBLENDWrri
VPINSRWrri
VPBLENDDYrri
VBLENDPDYrri
VSHUFPDYrri
VCMPPDYrri
VBLENDPSYrri
VSHUFPSYrri
VDPPSYrri
VCMPPSYrri
VMPSADBWYrri
VPBLENDWYrri
VSHUFPDZrri
VPCMPDZrri
VCMPPDZrri
VPCMPUDZrri
VPCMPQZrri
VPCMPUQZrri
VSHUFPSZrri
VCMPPSZrri
MMX_PINSRWirri
MMX_PEXTRWirri
VPCONFLICTDrmbk
VPCONFLICTQrmbk
VPSRADZmik
VPSLLDZmik
VPSRLDZmik
VPSRAQZmik
VPSLLQZmik
VPSRLQZmik
VPSRADZrik
VPSLLDZrik
VPSRLDZrik
VPSRAQZrik
VPSLLQZrik
VPSRLQZrik
KMOVWkk
KMOVWmk
VMOVDQU32rmk
VMOVDQU64rmk
VPCONFLICTDrmk
VPCONFLICTQrmk
VPSRADZrmk
VPSLLDZrmk
VPSRLDZrmk
VMOVAPDZrmk
VMOVUPDZrmk
VPSRAQZrmk
VPSLLQZrmk
VPSRLQZrmk
VMOVAPSZrmk
VMOVUPSZrmk
KMOVWrk
VMOVDQU32rrk
VMOVDQU64rrk
VPCONFLICTDrrk
VPCONFLICTQrrk
VPSRADZrrk
VPSLLDZrrk
VPSRLDZrrk
VMOVAPDZrrk
VMOVUPDZrrk
VMOVSDZrrk
VPSRAQZrrk
VPSLLQZrrk
VPSRLQZrrk
VMOVAPSZrrk
VMOVUPSZrrk
VMOVSSZrrk
LD_F80m
ST_FP80m
ST_FpP80m
LD_Fp80m
VFMADDSUBPDr231m
VFMSUBPDr231m
VFNMSUBPDr231m
VFMSUBADDPDr231m
VFMADDPDr231m
VFNMADDPDr231m
VFMSUBSDr231m
VFNMSUBSDr231m
VFMADDSDr231m
VFNMADDSDr231m
VFMADDSUBPSr231m
VFMSUBPSr231m
VFNMSUBPSr231m
VFMSUBADDPSr231m
VFMADDPSr231m
VFNMADDPSr231m
VFMSUBSSr231m
VFNMSUBSSr231m
VFMADDSSr231m
VFNMADDSSr231m
VFMADDSUBPDr132m
VFMSUBPDr132m
VFNMSUBPDr132m
VFMSUBADDPDr132m
VFMADDPDr132m
VFNMADDPDr132m
VFMSUBSDr132m
VFNMSUBSDr132m
VFMADDSDr132m
VFNMADDSDr132m
VFMADDSUBPSr132m
VFMSUBPSr132m
VFNMSUBPSr132m
VFMSUBADDPSr132m
VFMADDPSr132m
VFNMADDPSr132m
VFMSUBSSr132m
VFNMSUBSSr132m
VFMADDSSr132m
VFNMADDSSr132m
LOCK_DEC32m
LOCK_INC32m
SUB_F32m
ADD_F32m
ILD_F32m
MUL_F32m
SUBR_F32m
DIVR_F32m
IST_F32m
DIV_F32m
NEG32m
SUB_FI32m
ADD_FI32m
MUL_FI32m
SUBR_FI32m
DIVR_FI32m
DIV_FI32m
FARCALL32m
IMUL32m
FCOM32m
FICOM32m
IST_FP32m
ISTT_FP32m
FARJMP32m
FCOMP32m
FICOMP32m
ST_FpP32m
LGDT32m
SGDT32m
LIDT32m
SIDT32m
NOT32m
IDIV32m
DEC64_32m
INC64_32m
SUB_Fp32m
ADD_Fp32m
LD_Fp32m
MUL_Fp32m
SUBR_Fp32m
DIVR_Fp32m
ST_Fp32m
DIV_Fp32m
VFMADDSUBPDr213m
VFMSUBPDr213m
VFNMSUBPDr213m
VFMSUBADDPDr213m
VFMADDPDr213m
VFNMADDPDr213m
VFMSUBSDr213m
VFNMSUBSDr213m
VFMADDSDr213m
VFNMADDSDr213m
VFMADDSUBPSr213m
VFMSUBPSr213m
VFNMSUBPSr213m
VFMSUBADDPSr213m
VFMADDPSr213m
VFNMADDPSr213m
VFMSUBSSr213m
VFNMSUBSSr213m
VFMADDSSr213m
VFNMADDSSr213m
LOCK_DEC64m
LOCK_INC64m
SUB_F64m
ADD_F64m
ILD_F64m
MUL_F64m
SUBR_F64m
DIVR_F64m
ST_F64m
DIV_F64m
NEG64m
CALL64m
IMUL64m
FCOM64m
IST_FP64m
ISTT_FP64m
JMP64m
FCOMP64m
ST_FpP64m
LGDT64m
SGDT64m
LIDT64m
SIDT64m
SLDT64m
NOT64m
IDIV64m
SUB_Fp64m
ADD_Fp64m
LD_Fp64m
MUL_Fp64m
SUBR_Fp64m
DIVR_Fp64m
ST_Fp64m
DIV_Fp64m
LOCK_DEC16m
LOCK_INC16m
ILD_F16m
IST_F16m
NEG16m
SUB_FI16m
ADD_FI16m
MUL_FI16m
SUBR_FI16m
DIVR_FI16m
DIV_FI16m
FARCALL16m
IMUL16m
FICOM16m
IST_FP16m
ISTT_FP16m
FARJMP16m
FICOMP16m
LGDT16m
SGDT16m
LIDT16m
SIDT16m
LLDT16m
SLDT16m
NOT16m
IDIV16m
FLDCW16m
FNSTCW16m
LMSW16m
SMSW16m
DEC64_16m
INC64_16m
LOCK_DEC8m
LOCK_INC8m
NEG8m
IMUL8m
NOT8m
IDIV8m
SETAm
SETBm
FBLDm
VMPTRLDm
VROUNDPDm
VSQRTPDm
VROUNDYPDm
VROUNDSDm
VRNDSCALESDm
VSQRTSDm
SETAEm
SETBEm
SETGEm
SETLEm
SETNEm
SETEm
FSAVEm
SETGm
SETLm
SETNOm
SETOm
TAILJMPm
SETNPm
SETPm
FBSTPm
VMCLEARm
FRSTORm
VERRm
LTRm
STRm
SETNSm
VROUNDPSm
VRCPPSm
VRSQRTPSm
VSQRTPSm
VROUNDYPSm
VROUNDSSm
VRNDSCALESSm
VRCPSSm
VRSQRTSSm
VSQRTSSm
SETSm
VMPTRSTm
FLDENVm
FSTENVm
VERWm
FNSTSWm
VSQRTPDYm
VRCPPSYm
VRSQRTPSYm
VSQRTPSYm
VFMADDSUB132PDZm
VFMSUB132PDZm
VFNMSUB132PDZm
VFMSUBADD132PDZm
VFMADD132PDZm
VFNMADD132PDZm
VFMADDSUB213PDZm
VFMSUB213PDZm
VFNMSUB213PDZm
VFMSUBADD213PDZm
VFMADD213PDZm
VFNMADD213PDZm
VRCP14PDZm
VRSQRT14PDZm
VRCP28PDZm
VRSQRT28PDZm
VRNDSCALEPDZm
VFMSUBSDZm
VFNMSUBSDZm
VFMADDSDZm
VFNMADDSDZm
VSQRTSDZm
VFMADDSUB132PSZm
VFMSUB132PSZm
VFNMSUB132PSZm
VFMSUBADD132PSZm
VFMADD132PSZm
VFNMADD132PSZm
VFMADDSUB213PSZm
VFMSUB213PSZm
VFNMSUB213PSZm
VFMSUBADD213PSZm
VFMADD213PSZm
VFNMADD213PSZm
VRCP14PSZm
VRSQRT14PSZm
VRCP28PSZm
VRSQRT28PSZm
VRNDSCALEPSZm
VFMSUBSSZm
VFNMSUBSSZm
VFMADDSSZm
VFNMADDSSZm
VSQRTSSZm
KMOVWkm
PUSH32rmm
POP32rmm
PUSH64rmm
POP64rmm
PUSH16rmm
POP16rmm
SHA1MSG1rm
SHA256MSG1rm
PFRCPIT1rm
PFRSQIT1rm
VMOVDQA32rm
CMOVA32rm
SBB32rm
SUB32rm
CMOVB32rm
ADC32rm
BLCIC32rm
BLSIC32rm
T1MSKC32rm
VMREAD32rm
XADD32rm
AND32rm
CMOVAE32rm
CMOVBE32rm
CMOVGE32rm
CMOVLE32rm
CMOVNE32rm
VMWRITE32rm
CMOVE32rm
BSF32rm
CMPXCHG32rm
CMOVG32rm
BLCI32rm
BZHI32rm
BLSI32rm
BLCMSK32rm
BLSMSK32rm
TZMSK32rm
BLCFILL32rm
BLSFILL32rm
LSL32rm
IMUL32rm
CMOVL32rm
ANDN32rm
CMOVNO32rm
CMOVO32rm
PDEP32rm
CMP32rm
CMOVNP32rm
CMOVP32rm
LAR32rm
XOR32rm
BSR32rm
BLSR32rm
BEXTR32rm
BLCS32rm
LDS32rm
BOUNDS32rm
LES32rm
LFS32rm
LGS32rm
CMOVNS32rm
LSS32rm
CMOVS32rm
POPCNT32rm
LZCNT32rm
TZCNT32rm
TEST32rm
PEXT32rm
VMOVDQU32rm
ACQUIRE_MOV32rm
ADCX32rm
SHLX32rm
MULX32rm
ADOX32rm
SARX32rm
SHRX32rm
SHA1MSG2rm
SHA256MSG2rm
SHA256RNDS2rm
PFRCPIT2rm
VMOVDQA64rm
CMOVA64rm
SBB64rm
SUB64rm
CMOVB64rm
ADC64rm
BLCIC64rm
BLSIC64rm
T1MSKC64rm
VMREAD64rm
XADD64rm
AND64rm
Int_VCVTSI2SD64rm
Int_CVTSI2SD64rm
MMX_MOVD64rm
CMOVAE64rm
CMOVBE64rm
CMOVGE64rm
CMOVLE64rm
CMOVNE64rm
VMWRITE64rm
CMOVE64rm
BSF64rm
CMPXCHG64rm
CMOVG64rm
BLCI64rm
BZHI64rm
Int_VCVTTSD2SI64rm
Int_CVTTSD2SI64rm
VCVTSD2SI64rm
Int_VCVTTSS2SI64rm
Int_CVTTSS2SI64rm
VCVTSS2SI64rm
BLSI64rm
BLCMSK64rm
BLSMSK64rm
TZMSK64rm
BLCFILL64rm
BLSFILL64rm
LSL64rm
IMUL64rm
CMOVL64rm
ANDN64rm
CMOVNO64rm
CMOVO64rm
PDEP64rm
CMP64rm
CMOVNP64rm
CMOVP64rm
MMX_MOVQ64rm
LAR64rm
XOR64rm
BSR64rm
BLSR64rm
BEXTR64rm
BLCS64rm
LFS64rm
LGS64rm
CMOVNS64rm
Int_VCVTSI2SS64rm
Int_CVTSI2SS64rm
LSS64rm
CMOVS64rm
POPCNT64rm
LZCNT64rm
TZCNT64rm
TEST64rm
PEXT64rm
VMOVDQU64rm
ACQUIRE_MOV64rm
ADCX64rm
SHLX64rm
MULX64rm
ADOX64rm
SARX64rm
SHRX64rm
VFMADDSUBPD4rm
VFMSUBPD4rm
VFNMSUBPD4rm
VFMSUBADDPD4rm
VFMADDPD4rm
VFNMADDPD4rm
VFMSUBSD4rm
VFNMSUBSD4rm
VFMADDSD4rm
VFNMADDSD4rm
VFMADDSUBPS4rm
VFMSUBPS4rm
VFNMSUBPS4rm
VFMSUBADDPS4rm
VFMADDPS4rm
VFNMADDPS4rm
VFMSUBSS4rm
VFNMSUBSS4rm
VFMADDSS4rm
VFNMADDSS4rm
VINSERTF32x4rm
VINSERTI32x4rm
VINSERTF64x4rm
VINSERTI64x4rm
CMOVA16rm
SBB16rm
SUB16rm
CMOVB16rm
ADC16rm
XADD16rm
AND16rm
CMOVAE16rm
CMOVBE16rm
CMOVGE16rm
CMOVLE16rm
CMOVNE16rm
CMOVE16rm
BSF16rm
CMPXCHG16rm
CMOVG16rm
LSL16rm
IMUL16rm
CMOVL16rm
CMOVNO16rm
CMOVO16rm
CMP16rm
CMOVNP16rm
CMOVP16rm
LAR16rm
XOR16rm
BSR16rm
LDS16rm
BOUNDS16rm
LES16rm
LFS16rm
LGS16rm
CMOVNS16rm
LSS16rm
CMOVS16rm
POPCNT16rm
LZCNT16rm
TZCNT16rm
TEST16rm
ACQUIRE_MOV16rm
VPALIGNR256rm
VPERM2F128rm
VINSERTF128rm
VPERM2I128rm
VINSERTI128rm
VPCMPESTRM128rm
VPCMPISTRM128rm
VPALIGNR128rm
VAESKEYGENASSIST128rm
SBB8rm
SUB8rm
ADC8rm
XADD8rm
AND8rm
CMPXCHG8rm
CMP8rm
XOR8rm
TEST8rm
ACQUIRE_MOV8rm
VMOVNTDQArm
VMOVDQArm
VPSHABrm
VPSUBBrm
VPADDBrm
VPSHUFBrm
VPAVGBrm
VPSHLBrm
VPSIGNBrm
VPCMPEQBrm
VPINSRBrm
VPSUBSBrm
VPADDSBrm
VPMINSBrm
VPSUBUSBrm
VPADDUSBrm
PAVGUSBrm
VPMAXSBrm
VPCMPGTBrm
VPROTBrm
VPBROADCASTBrm
VPMINUBrm
PFSUBrm
VPMAXUBrm
VPBLENDVBrm
VPACKSSWBrm
VPACKUSWBrm
PFACCrm
PFNACCrm
PFPNACCrm
VAESDECrm
VAESIMCrm
VAESENCrm
VPERMI2Drm
VPSHADrm
VPSRADrm
MMX_PSRADrm
VPHADDBDrm
VPHADDUBDrm
VPHSUBDrm
VPSUBDrm
VPMOVSXBDrm
VPMOVZXBDrm
PFADDrm
VPHADDDrm
VPADDDrm
VPGATHERDDrm
VPMACSDDrm
VPMACSSDDrm
PI2FDrm
PF2IDrm
VPSHLDrm
VPSLLDrm
MMX_PSLLDrm
VPMULLDrm
VPSRLDrm
MMX_PSRLDrm
VPANDrm
VPSIGNDrm
VPERMI2PDrm
VPERMIL2PDrm
VCVTDQ2PDrm
VCVTPS2PDrm
FsVMOVAPDrm
FsMOVAPDrm
PSWAPDrm
VADDSUBPDrm
VHSUBPDrm
VSUBPDrm
VMINCPDrm
VMAXCPDrm
VHADDPDrm
VADDPDrm
VANDPDrm
VFsANDPDrm
VGATHERDPDrm
VUNPCKHPDrm
VMOVHPDrm
VPERMILPDrm
VUNPCKLPDrm
VMULPDrm
VMOVLPDrm
VANDNPDrm
VFsANDNPDrm
VMINPDrm
VGATHERQPDrm
VORPDrm
VXORPDrm
VFsXORPDrm
VFsORPDrm
VTESTPDrm
VMOVUPDrm
VBLENDVPDrm
VDIVPDrm
VMASKMOVPDrm
VMAXPDrm
VFRCZPDrm
VPCMPEQDrm
VPGATHERQDrm
VPINSRDrm
Int_VCVTSI2SDrm
Int_CVTSI2SDrm
Int_VCVTSS2SDrm
Int_CVTSS2SDrm
VRCP14SDrm
VRSQRT14SDrm
VRCP28SDrm
VRSQRT28SDrm
VPABSDrm
VSUBSDrm
VMINCSDrm
VMAXCSDrm
VADDSDrm
Int_VUCOMISDrm
Int_UCOMISDrm
Int_VCOMISDrm
Int_COMISDrm
VMULSDrm
VPMINSDrm
VMINSDrm
Int_VCMPSDrm
Int_CMPSDrm
VDIVSDrm
VMOVSDrm
VPMAXSDrm
VMAXSDrm
VFRCZSDrm
VMOV64toSDrm
VPCONFLICTDrm
VPCMPGTDrm
VPROTDrm
VPBROADCASTDrm
VPMINUDrm
VPMAXUDrm
VPSRAVDrm
VPSLLVDrm
VPSRLVDrm
VPMASKMOVDrm
VPHSUBWDrm
VPHADDWDrm
VPMADDWDrm
VPUNPCKHWDrm
VPUNPCKLWDrm
VPMACSWDrm
VPMADCSWDrm
VPMACSSWDrm
VPMADCSSWDrm
VPHADDUWDrm
VPMOVSXWDrm
VPMOVZXWDrm
PFCMPGErm
SHA1NEXTErm
VPMACSDQHrm
VPMACSSDQHrm
VMOVDI2PDIrm
VMOVQI2PQIrm
VMOVZQI2PQIrm
VMOVZPQILo2PQIrm
VPCMPESTRIrm
VPCMPISTRIrm
Int_VCVTTSD2SIrm
Int_CVTTSD2SIrm
VCVTSD2SIrm
Int_VCVTTSS2SIrm
Int_CVTTSS2SIrm
VCVTSS2SIrm
VPMACSDQLrm
VPMACSSDQLrm
PFMULrm
VPPERMrm
VPANDNrm
PFMINrm
PFRCPrm
VMOVDDUPrm
VMOVSHDUPrm
VMOVSLDUPrm
VPERMI2Qrm
VPSHAQrm
VPHADDBQrm
VPHADDUBQrm
VPSUBQrm
VPMOVSXBQrm
VPMOVZXBQrm
CVTTPD2DQrm
CVTPD2DQrm
VCVTTPS2DQrm
VCVTPS2DQrm
VPHSUBDQrm
VPADDQrm
VPHADDDQrm
VPUNPCKHDQrm
VPUNPCKLDQrm
VPMULDQrm
VPUNPCKHQDQrm
VPUNPCKLQDQrm
VPCLMULQDQrm
VPGATHERDQrm
VPHADDUDQrm
VPMULUDQrm
VPMOVSXDQrm
VPMOVZXDQrm
PFCMPEQrm
VPSHLQrm
VPSLLQrm
MMX_PSLLQrm
VPSRLQrm
MMX_PSRLQrm
VPCMPEQQrm
VPGATHERQQrm
VPINSRQrm
VPABSQrm
VPCONFLICTQrm
VPCMPGTQrm
VPROTQrm
VPBROADCASTQrm
VPSLLVQrm
VPSRLVQrm
VPMASKMOVQrm
VPHADDWQrm
VPHADDUWQrm
VPMOVSXWQrm
VPMOVZXWQrm
PFSUBRrm
VPORrm
VPXORrm
CVTPD2PSrm
VCVTPH2PSrm
VPERMI2PSrm
VPERMIL2PSrm
VCVTDQ2PSrm
FsVMOVAPSrm
FsMOVAPSrm
VADDSUBPSrm
VHSUBPSrm
VSUBPSrm
VMINCPSrm
VMAXCPSrm
VHADDPSrm
VADDPSrm
VANDPSrm
VFsANDPSrm
VGATHERDPSrm
VUNPCKHPSrm
VMOVHPSrm
VPERMILPSrm
VUNPCKLPSrm
VMULPSrm
VMOVLPSrm
VANDNPSrm
VFsANDNPSrm
VMINPSrm
VGATHERQPSrm
VORPSrm
VXORPSrm
VFsXORPSrm
VFsORPSrm
VINSERTPSrm
VTESTPSrm
VMOVUPSrm
VBLENDVPSrm
VDIVPSrm
VMASKMOVPSrm
VMAXPSrm
VFRCZPSrm
Int_VCVTSD2SSrm
Int_CVTSD2SSrm
VMOVDI2SSrm
Int_VCVTSI2SSrm
Int_CVTSI2SSrm
VRCP14SSrm
VRSQRT14SSrm
VRCP28SSrm
VRSQRT28SSrm
VSUBSSrm
VMINCSSrm
VMAXCSSrm
VADDSSrm
Int_VUCOMISSrm
Int_UCOMISSrm
Int_VCOMISSrm
Int_COMISSrm
VMULSSrm
VMINSSrm
Int_VCMPSSrm
Int_CMPSSrm
VBROADCASTSSrm
VDIVSSrm
VMOVSSrm
VMAXSSrm
VFRCZSSrm
PFCMPGTrm
PFRSQRTrm
VAESDECLASTrm
VAESENCLASTrm
VPTESTrm
VLDDQUrm
VMOVDQUrm
VPCMOVrm
VPSHAWrm
VPSRAWrm
MMX_PSRAWrm
VPHSUBBWrm
VPSADBWrm
VPHADDBWrm
VPUNPCKHBWrm
VPUNPCKLBWrm
VPHADDUBWrm
VPHSUBWrm
VPSUBWrm
VPMOVSXBWrm
VPMOVZXBWrm
VPHADDWrm
VPADDWrm
VPACKSSDWrm
VPACKUSDWrm
PI2FWrm
VPAVGWrm
VPMULHWrm
PF2IWrm
VPSHLWrm
VPSLLWrm
MMX_PSLLWrm
VPMULLWrm
VPSRLWrm
MMX_PSRLWrm
VPSIGNWrm
VPCMPEQWrm
PMULHRWrm
VPSUBSWrm
VPADDSWrm
VPMINSWrm
VPSUBUSWrm
VPADDUSWrm
VPMAXSWrm
VPCMPGTWrm
VPROTWrm
VPBROADCASTWrm
VPMULHUWrm
VPMINUWrm
VPMAXUWrm
VPMACSWWrm
VPMACSSWWrm
PFMAXrm
VCVTTPD2DQXrm
VCVTPD2DQXrm
VCVTPD2PSXrm
VMOVNTDQAYrm
VMOVDQAYrm
VPSUBBYrm
VPADDBYrm
VPSHUFBYrm
VPAVGBYrm
VPSIGNBYrm
VPCMPEQBYrm
VPSUBSBYrm
VPADDSBYrm
VPMINSBYrm
VPSUBUSBYrm
VPADDUSBYrm
VPMAXSBYrm
VPCMPGTBYrm
VPBROADCASTBYrm
VPMINUBYrm
VPMAXUBYrm
VPBLENDVBYrm
VPACKSSWBYrm
VPACKUSWBYrm
VPSRADYrm
VPHSUBDYrm
VPSUBDYrm
VPMOVSXBDYrm
VPMOVZXBDYrm
VPHADDDYrm
VPADDDYrm
VPGATHERDDYrm
VPSLLDYrm
VPMULLDYrm
VPSRLDYrm
VPERMDYrm
VPANDYrm
VPSIGNDYrm
VCVTDQ2PDYrm
VCVTPS2PDYrm
VMOVAPDYrm
VADDSUBPDYrm
VHSUBPDYrm
VSUBPDYrm
VMINCPDYrm
VMAXCPDYrm
VHADDPDYrm
VADDPDYrm
VANDPDYrm
VGATHERDPDYrm
VUNPCKHPDYrm
VPERMILPDYrm
VUNPCKLPDYrm
VMULPDYrm
VANDNPDYrm
VMINPDYrm
VGATHERQPDYrm
VORPDYrm
VXORPDYrm
VTESTPDYrm
VMOVUPDYrm
VBLENDVPDYrm
VDIVPDYrm
VMASKMOVPDYrm
VMAXPDYrm
VPCMPEQDYrm
VPGATHERQDYrm
VPMINSDYrm
VBROADCASTSDYrm
VPMAXSDYrm
VPCMPGTDYrm
VPBROADCASTDYrm
VPMINUDYrm
VPMAXUDYrm
VPSRAVDYrm
VPSLLVDYrm
VPSRLVDYrm
VPMASKMOVDYrm
VPMADDWDYrm
VPUNPCKHWDYrm
VPUNPCKLWDYrm
VPMOVSXWDYrm
VPMOVZXWDYrm
VPANDNYrm
VMOVDDUPYrm
VMOVSHDUPYrm
VMOVSLDUPYrm
VPSUBQYrm
VPMOVSXBQYrm
VPMOVZXBQYrm
VCVTTPD2DQYrm
VCVTPD2DQYrm
VCVTTPS2DQYrm
VCVTPS2DQYrm
VPADDQYrm
VPUNPCKHDQYrm
VPUNPCKLDQYrm
VPMULDQYrm
VPUNPCKHQDQYrm
VPUNPCKLQDQYrm
VPGATHERDQYrm
VPMULUDQYrm
VPMOVSXDQYrm
VPMOVZXDQYrm
VPSLLQYrm
VPSRLQYrm
VPCMPEQQYrm
VPGATHERQQYrm
VPCMPGTQYrm
VPBROADCASTQYrm
VPSLLVQYrm
VPSRLVQYrm
VPMASKMOVQYrm
VPMOVSXWQYrm
VPMOVZXWQYrm
VPORYrm
VPXORYrm
VCVTPD2PSYrm
VCVTPH2PSYrm
VCVTDQ2PSYrm
VMOVAPSYrm
VADDSUBPSYrm
VHSUBPSYrm
VSUBPSYrm
VMINCPSYrm
VMAXCPSYrm
VHADDPSYrm
VADDPSYrm
VANDPSYrm
VGATHERDPSYrm
VUNPCKHPSYrm
VPERMILPSYrm
VUNPCKLPSYrm
VMULPSYrm
VPERMPSYrm
VANDNPSYrm
VMINPSYrm
VGATHERQPSYrm
VORPSYrm
VXORPSYrm
VTESTPSYrm
VMOVUPSYrm
VBLENDVPSYrm
VDIVPSYrm
VMASKMOVPSYrm
VMAXPSYrm
VBROADCASTSSYrm
VPTESTYrm
VLDDQUYrm
VMOVDQUYrm
VPSRAWYrm
VPSADBWYrm
VPUNPCKHBWYrm
VPUNPCKLBWYrm
VPHSUBWYrm
VPSUBWYrm
VPMOVSXBWYrm
VPMOVZXBWYrm
VPHADDWYrm
VPADDWYrm
VPACKSSDWYrm
VPACKUSDWYrm
VPAVGWYrm
VPMULHWYrm
VPSLLWYrm
VPMULLWYrm
VPSRLWYrm
VPSIGNWYrm
VPCMPEQWYrm
VPSUBSWYrm
VPADDSWYrm
VPMINSWYrm
VPSUBUSWYrm
VPADDUSWYrm
VPMAXSWYrm
VPCMPGTWYrm
VPBROADCASTWYrm
VPMULHUWYrm
VPMINUWYrm
VPMAXUWYrm
Int_VCVTSI2SD64Zrm
Int_VCVTUSI2SD64Zrm
Int_VCVTTSD2SI64Zrm
VCVTSD2SI64Zrm
Int_VCVTTSS2SI64Zrm
VCVTSS2SI64Zrm
Int_VCVTTSD2USI64Zrm
VCVTSD2USI64Zrm
Int_VCVTTSS2USI64Zrm
VCVTSS2USI64Zrm
Int_VCVTSI2SS64Zrm
Int_VCVTUSI2SS64Zrm
VPSRADZrm
VPSUBDZrm
VPMOVSXBDZrm
VPMOVZXBDZrm
VPADDDZrm
VPANDDZrm
VPGATHERDDZrm
VPSLLDZrm
VPMULLDZrm
VPSRLDZrm
VPBLENDMDZrm
VPERMDZrm
VPTESTMDZrm
VPANDNDZrm
VCVTDQ2PDZrm
VCVTUDQ2PDZrm
VCVTPS2PDZrm
VMOVAPDZrm
VSUBPDZrm
VADDPDZrm
VGATHERDPDZrm
VUNPCKHPDZrm
VUNPCKLPDZrm
VMULPDZrm
VBLENDMPDZrm
VPERMPDZrm
VMINPDZrm
VGATHERQPDZrm
VSQRTPDZrm
VMOVUPDZrm
VDIVPDZrm
VMAXPDZrm
VPCMPEQDZrm
VPGATHERQDZrm
VPORDZrm
VPXORDZrm
VCVTSI642SDZrm
VCVTUSI642SDZrm
Int_VCVTSI2SDZrm
Int_VCVTUSI2SDZrm
VCVTSS2SDZrm
VSUBSDZrm
VADDSDZrm
Int_VUCOMISDZrm
Int_VCOMISDZrm
VMULSDZrm
VPMINSDZrm
VMINSDZrm
VCMPSDZrm
VBROADCASTSDZrm
VDIVSDZrm
VMOVSDZrm
VPMAXSDZrm
VMAXSDZrm
VPCMPGTDZrm
VPBROADCASTDZrm
VPMINUDZrm
VPMAXUDZrm
VPSRAVDZrm
VPSLLVDZrm
VPSRLVDZrm
VPMOVSXWDZrm
VPMOVZXWDZrm
VMOVDI2PDIZrm
VMOVQI2PQIZrm
VMOVZPQILo2PQIZrm
Int_VCVTTSD2SIZrm
VCVTSD2SIZrm
Int_VCVTTSS2SIZrm
VCVTSS2SIZrm
Int_VCVTTSD2USIZrm
VCVTSD2USIZrm
Int_VCVTTSS2USIZrm
VCVTSS2USIZrm
VMOVDDUPZrm
VMOVSHDUPZrm
VMOVSLDUPZrm
VPSRAQZrm
VPSUBQZrm
VPMOVSXBQZrm
VPMOVZXBQZrm
VCVTTPD2DQZrm
VCVTPD2DQZrm
VCVTTPS2DQZrm
VCVTPS2DQZrm
VPADDQZrm
VPUNPCKHDQZrm
VPUNPCKLDQZrm
VPMULDQZrm
VPANDQZrm
VPUNPCKHQDQZrm
VPUNPCKLQDQZrm
VPGATHERDQZrm
VCVTTPD2UDQZrm
VCVTPD2UDQZrm
VCVTTPS2UDQZrm
VCVTPS2UDQZrm
VPMULUDQZrm
VPMOVSXDQZrm
VPMOVZXDQZrm
VPSLLQZrm
VPSRLQZrm
VPBLENDMQZrm
VPERMQZrm
VPTESTMQZrm
VPANDNQZrm
VPCMPEQQZrm
VPGATHERQQZrm
VPORQZrm
VPXORQZrm
VPMINSQZrm
VPMAXSQZrm
VPCMPGTQZrm
VPBROADCASTQZrm
VPMINUQZrm
VPMAXUQZrm
VPSRAVQZrm
VPSLLVQZrm
VPSRLVQZrm
VPMOVSXWQZrm
VPMOVZXWQZrm
VCVTPD2PSZrm
VCVTPH2PSZrm
VCVTDQ2PSZrm
VCVTUDQ2PSZrm
VMOVAPSZrm
VSUBPSZrm
VADDPSZrm
VGATHERDPSZrm
VUNPCKHPSZrm
VUNPCKLPSZrm
VMULPSZrm
VBLENDMPSZrm
VPERMPSZrm
VMINPSZrm
VGATHERQPSZrm
VSQRTPSZrm
VMOVUPSZrm
VDIVPSZrm
VMAXPSZrm
VCVTSI642SSZrm
VCVTUSI642SSZrm
VCVTSD2SSZrm
VMOVDI2SSZrm
Int_VCVTSI2SSZrm
Int_VCVTUSI2SSZrm
VSUBSSZrm
VADDSSZrm
Int_VUCOMISSZrm
Int_VCOMISSZrm
VMULSSZrm
VMINSSZrm
VCMPSSZrm
VBROADCASTSSZrm
VDIVSSZrm
VMOVSSZrm
VMAXSSZrm
MMX_PALIGNR64irm
MMX_PSUBBirm
MMX_PADDBirm
MMX_PAVGBirm
MMX_PCMPEQBirm
MMX_PSUBSBirm
MMX_PADDSBirm
MMX_PSUBUSBirm
MMX_PADDUSBirm
MMX_PCMPGTBirm
MMX_PMINUBirm
MMX_PMAXUBirm
MMX_PACKSSWBirm
MMX_PACKUSWBirm
MMX_PSUBDirm
MMX_PADDDirm
MMX_PANDirm
MMX_CVTPI2PDirm
MMX_PCMPEQDirm
MMX_PCMPGTDirm
MMX_PMADDWDirm
MMX_PUNPCKHWDirm
MMX_PUNPCKLWDirm
MMX_CVTTPD2PIirm
MMX_CVTPD2PIirm
MMX_CVTTPS2PIirm
MMX_CVTPS2PIirm
MMX_PANDNirm
MMX_PSUBQirm
MMX_PADDQirm
MMX_PUNPCKHDQirm
MMX_PUNPCKLDQirm
MMX_PMULUDQirm
MMX_PORirm
MMX_PXORirm
MMX_CVTPI2PSirm
MMX_PSADBWirm
MMX_PUNPCKHBWirm
MMX_PUNPCKLBWirm
MMX_PSUBWirm
MMX_PADDWirm
MMX_PACKSSDWirm
MMX_PAVGWirm
MMX_PMULHWirm
MMX_PMULLWirm
MMX_PCMPEQWirm
MMX_PSUBSWirm
MMX_PADDSWirm
MMX_PMINSWirm
MMX_PSUBUSWirm
MMX_PADDUSWirm
MMX_PMAXSWirm
MMX_PCMPGTWirm
MMX_PMULHUWirm
VPBROADCASTDZkrm
VPBROADCASTQZkrm
VINSERTPSzrm
MOV32sm
MOV64sm
MOV16sm
EH_SjLj_Setup
SUB_FST0r
ADD_FST0r
MUL_FST0r
COM_FST0r
COMP_FST0r
SUBR_FST0r
DIVR_FST0r
DIV_FST0r
VFMADDSUBPDr231r
VFMSUBPDr231r
VFNMSUBPDr231r
VFMSUBADDPDr231r
VFMADDPDr231r
VFNMADDPDr231r
VFMSUBSDr231r
VFNMSUBSDr231r
VFMADDSDr231r
VFNMADDSDr231r
VFMADDSUBPSr231r
VFMSUBPSr231r
VFNMSUBPSr231r
VFMSUBADDPSr231r
VFMADDPSr231r
VFNMADDPSr231r
VFMSUBSSr231r
VFNMSUBSSr231r
VFMADDSSr231r
VFNMADDSSr231r
VFMADDSUBPDr132r
VFMSUBPDr132r
VFNMSUBPDr132r
VFMSUBADDPDr132r
VFMADDPDr132r
VFNMADDPDr132r
VFMSUBSDr132r
VFNMSUBSDr132r
VFMADDSDr132r
VFNMADDSDr132r
VFMADDSUBPSr132r
VFMSUBPSr132r
VFNMSUBPSr132r
VFMSUBADDPSr132r
VFMADDPSr132r
VFNMADDPSr132r
VFMSUBSSr132r
VFNMSUBSSr132r
VFMADDSSr132r
VFNMADDSSr132r
LEA32r
DEC32r
INC32r
MOVPC32r
SETB_C32r
RDSEED32r
RDRAND32r
NEG32r
PUSH32r
CALL32r
IMUL32r
BSWAP32r
JMP32r
POP32r
STR32r
SLDT32r
NOT32r
IDIV32r
SMSW32r
DEC32_32r
INC32_32r
LEA64_32r
DEC64_32r
INC64_32r
VFMADDSUBPDr213r
VFMSUBPDr213r
VFNMSUBPDr213r
VFMSUBADDPDr213r
VFMADDPDr213r
VFNMADDPDr213r
VFMSUBSDr213r
VFNMSUBSDr213r
VFMADDSDr213r
VFNMADDSDr213r
VFMADDSUBPSr213r
VFMSUBPSr213r
VFNMSUBPSr213r
VFMSUBADDPSr213r
VFMADDPSr213r
VFNMADDPSr213r
VFMSUBSSr213r
VFNMSUBSSr213r
VFMADDSSr213r
VFNMADDSSr213r
LEA64r
DEC64r
INC64r
SETB_C64r
RDSEED64r
RDRAND64r
NEG64r
PUSH64r
CALL64r
IMUL64r
BSWAP64r
JMP64r
POP64r
STR64r
SLDT64r
NOT64r
IDIV64r
SMSW64r
LEA16r
DEC16r
INC16r
SETB_C16r
RDSEED16r
RDRAND16r
NEG16r
PUSH16r
CALL16r
IMUL16r
JMP16r
POP16r
STR16r
LLDT16r
SLDT16r
NOT16r
IDIV16r
LMSW16r
SMSW16r
FNSTSW16r
DEC32_16r
INC32_16r
DEC64_16r
INC64_16r
DEC8r
INC8r
SETB_C8r
NEG8r
IMUL8r
NOT8r
IDIV8r
SETAr
SETBr
VROUNDPDr
VSQRTPDr
VROUNDYPDr
VROUNDSDr
VRNDSCALESDr
VSQRTSDr
SETAEr
SETBEr
SETGEr
SETLEr
SETNEr
SETEr
UCOM_Fr
SETGr
UCOM_FIr
SETLr
SETNOr
SETOr
UCOM_FPr
UCOM_FIPr
TAILJMPr
SETNPr
UCOM_FPPr
SETPr
VERRr
LTRr
SETNSr
VROUNDPSr
VRCPPSr
VRSQRTPSr
VSQRTPSr
VROUNDYPSr
VROUNDSSr
VRNDSCALESSr
VRCPSSr
VRSQRTSSr
VSQRTSSr
SETSr
VERWr
VSQRTPDYr
VRCPPSYr
VRSQRTPSYr
VSQRTPSYr
VFMADDSUB213PDZr
VFMSUB213PDZr
VFNMSUB213PDZr
VFMSUBADD213PDZr
VFMADD213PDZr
VFNMADD213PDZr
VRCP14PDZr
VRSQRT14PDZr
VRCP28PDZr
VRSQRT28PDZr
VRNDSCALEPDZr
VFMSUBSDZr
VFNMSUBSDZr
VFMADDSDZr
VFNMADDSDZr
VSQRTSDZr
VFMADDSUB213PSZr
VFMSUB213PSZr
VFNMSUB213PSZr
VFMSUBADD213PSZr
VFMADD213PSZr
VFNMADD213PSZr
VRCP14PSZr
VRSQRT14PSZr
VRCP28PSZr
VRSQRT28PSZr
VRNDSCALEPSZr
VFMSUBSSZr
VFNMSUBSSZr
VFMADDSSZr
VFNMADDSSZr
VSQRTSSZr
XCHG32ar
XCHG64ar
XCHG16ar
MOV32cr
MOV64cr
MOV32dr
MOV64dr
Int_MemBarrier
OUT32ir
OUT16ir
OUT8ir
KMOVWkr
VMOVDQA32mr
SBB32mr
LOCK_SUB32mr
ADC32mr
BTC32mr
LOCK_ADD32mr
LOCK_AND32mr
MOVBE32mr
CMP32mr
LOCK_XOR32mr
LOCK_OR32mr
BTR32mr
BTS32mr
BT32mr
VMOVDQU32mr
RELEASE_MOV32mr
VMOVDQA64mr
SBB64mr
LOCK_SUB64mr
ADC64mr
BTC64mr
LOCK_ADD64mr
LOCK_AND64mr
MMX_MOVD64mr
MOVBE64mr
CMP64mr
MMX_MOVQ64mr
LOCK_XOR64mr
LOCK_OR64mr
BTR64mr
BTS64mr
BT64mr
VMOVDQU64mr
RELEASE_MOV64mr
MOVNTI_64mr
VMOVSDto64mr
VFMADDSUBPD4mr
VFMSUBPD4mr
VFNMSUBPD4mr
VFMSUBADDPD4mr
VFMADDPD4mr
VFNMADDPD4mr
VFMSUBSD4mr
VFNMSUBSD4mr
VFMADDSD4mr
VFNMADDSD4mr
VFMADDSUBPS4mr
VFMSUBPS4mr
VFNMSUBPS4mr
VFMSUBADDPS4mr
VFMADDPS4mr
VFNMADDPS4mr
VFMSUBSS4mr
VFNMSUBSS4mr
VFMADDSS4mr
VFNMADDSS4mr
VEXTRACTF32x4mr
VEXTRACTI32x4mr
VEXTRACTF64x4mr
VEXTRACTI64x4mr
SBB16mr
LOCK_SUB16mr
ADC16mr
BTC16mr
LOCK_ADD16mr
LOCK_AND16mr
MOVBE16mr
ARPL16mr
CMP16mr
LOCK_XOR16mr
LOCK_OR16mr
BTR16mr
BTS16mr
BT16mr
RELEASE_MOV16mr
VEXTRACTF128mr
VEXTRACTI128mr
SBB8mr
LOCK_SUB8mr
ADC8mr
LOCK_ADD8mr
LOCK_AND8mr
CMP8mr
LOCK_XOR8mr
LOCK_OR8mr
RELEASE_MOV8mr
VMOVDQAmr
VPSHABmr
VPMOVUSDBmr
VPMOVSDBmr
VPMOVDBmr
VPSHLBmr
VPMOVUSQBmr
VPMOVSQBmr
VPMOVQBmr
VPEXTRBmr
VPROTBmr
VPSHADmr
VPSHLDmr
VPERMIL2PDmr
VMOVAPDmr
VMOVHPDmr
VMOVLPDmr
VMOVNTPDmr
VMOVUPDmr
VMASKMOVPDmr
VPMOVUSQDmr
VPMOVSQDmr
VPMOVQDmr
VPEXTRDmr
VMOVSDmr
VPROTDmr
VPMASKMOVDmr
VCVTPS2PHmr
VMOVPDI2DImr
VMOVSS2DImr
VMOVPQI2QImr
MOVNTImr
VPPERMmr
VPSHAQmr
VMOVNTDQmr
VPSHLQmr
VPEXTRQmr
MMX_MOVNTQmr
VPROTQmr
VPMASKMOVQmr
VPERMIL2PSmr
VMOVAPSmr
VMOVHPSmr
VMOVLPSmr
VEXTRACTPSmr
VMOVNTPSmr
VMOVUPSmr
VMASKMOVPSmr
VMOVSSmr
VMOVDQUmr
VPCMOVmr
VPSHAWmr
VPMOVUSDWmr
VPMOVSDWmr
VPMOVDWmr
VPSHLWmr
VPMOVUSQWmr
VPMOVSQWmr
VPMOVQWmr
VPEXTRWmr
VPROTWmr
VMOVDQAYmr
VMOVAPDYmr
VMOVNTPDYmr
VMOVUPDYmr
VMASKMOVPDYmr
VPMASKMOVDYmr
VCVTPS2PHYmr
VMOVNTDQYmr
VPMASKMOVQYmr
VMOVAPSYmr
VMOVNTPSYmr
VMOVUPSYmr
VMASKMOVPSYmr
VMOVDQUYmr
VMOVSDto64Zmr
VMOVPQIto64Zmr
VPSCATTERDDZmr
VMOVAPDZmr
VSCATTERDPDZmr
VSCATTERQPDZmr
VMOVUPDZmr
VPSCATTERQDZmr
VMOVSDZmr
VCVTPS2PHZmr
VMOVPDI2DIZmr
VMOVSS2DIZmr
VPSCATTERDQZmr
VPSCATTERQQZmr
VMOVAPSZmr
VSCATTERDPSZmr
VSCATTERQPSZmr
VMOVUPSZmr
VMOVSSZmr
PUSH32rmr
POP32rmr
PUSH64rmr
POP64rmr
PUSH16rmr
POP16rmr
VEXTRACTPSzmr
SHA1MSG1rr
SHA256MSG1rr
PFRCPIT1rr
PFRSQIT1rr
VMOVDQA32rr
CMOVA32rr
SBB32rr
SUB32rr
CMOVB32rr
ADC32rr
BLCIC32rr
BLSIC32rr
T1MSKC32rr
BTC32rr
VMREAD32rr
XADD32rr
AND32rr
CMOVAE32rr
CMOVBE32rr
CMOVGE32rr
CMOVLE32rr
CMOVNE32rr
VMWRITE32rr
CMOVE32rr
BSF32rr
CMPXCHG32rr
CMOVG32rr
BLCI32rr
BZHI32rr
BLSI32rr
BLCMSK32rr
BLSMSK32rr
TZMSK32rr
BLCFILL32rr
BLSFILL32rr
LSL32rr
IMUL32rr
CMOVL32rr
ANDN32rr
IN32rr
CMOVNO32rr
CMOVO32rr
PDEP32rr
CMP32rr
CMOVNP32rr
CMOVP32rr
LAR32rr
XOR32rr
BSR32rr
BLSR32rr
BTR32rr
BEXTR32rr
BLCS32rr
CMOVNS32rr
BTS32rr
CMOVS32rr
BT32rr
POPCNT32rr
LZCNT32rr
TZCNT32rr
TEST32rr
OUT32rr
PEXT32rr
VMOVDQU32rr
MOV32rr
ADCX32rr
SHLX32rr
MULX32rr
ADOX32rr
SARX32rr
SHRX32rr
SHA1MSG2rr
SHA256MSG2rr
SHA256RNDS2rr
PFRCPIT2rr
VMOVDQA64rr
CMOVA64rr
SBB64rr
SUB64rr
CMOVB64rr
ADC64rr
BLCIC64rr
BLSIC64rr
T1MSKC64rr
BTC64rr
VMREAD64rr
XADD64rr
AND64rr
Int_VCVTSI2SD64rr
Int_CVTSI2SD64rr
MMX_MOVD64rr
CMOVAE64rr
CMOVBE64rr
CMOVGE64rr
CMOVLE64rr
CMOVNE64rr
VMWRITE64rr
CMOVE64rr
BSF64rr
CMPXCHG64rr
CMOVG64rr
BLCI64rr
BZHI64rr
Int_VCVTTSD2SI64rr
Int_CVTTSD2SI64rr
VCVTSD2SI64rr
Int_VCVTTSS2SI64rr
Int_CVTTSS2SI64rr
VCVTSS2SI64rr
BLSI64rr
BLCMSK64rr
BLSMSK64rr
TZMSK64rr
BLCFILL64rr
BLSFILL64rr
LSL64rr
IMUL64rr
CMOVL64rr
ANDN64rr
CMOVNO64rr
CMOVO64rr
PDEP64rr
CMP64rr
CMOVNP64rr
CMOVP64rr
MMX_MOVQ64rr
LAR64rr
MMX_MOVQ2FR64rr
XOR64rr
BSR64rr
BLSR64rr
BTR64rr
BEXTR64rr
BLCS64rr
CMOVNS64rr
Int_VCVTSI2SS64rr
Int_CVTSI2SS64rr
BTS64rr
CMOVS64rr
BT64rr
POPCNT64rr
LZCNT64rr
TZCNT64rr
TEST64rr
PEXT64rr
VMOVDQU64rr
MOV64rr
ADCX64rr
SHLX64rr
MULX64rr
ADOX64rr
SARX64rr
SHRX64rr
MMX_MOVD64from64rr
MMX_MOVD64to64rr
VMOVSDto64rr
VMOVPQIto64rr
VFMADDSUBPD4rr
VFMSUBPD4rr
VFNMSUBPD4rr
VFMSUBADDPD4rr
VFMADDPD4rr
VFNMADDPD4rr
VFMSUBSD4rr
VFNMSUBSD4rr
VFMADDSD4rr
VFNMADDSD4rr
VFMADDSUBPS4rr
VFMSUBPS4rr
VFNMSUBPS4rr
VFMSUBADDPS4rr
VFMADDPS4rr
VFNMADDPS4rr
VFMSUBSS4rr
VFNMSUBSS4rr
VFMADDSS4rr
VFNMADDSS4rr
VEXTRACTF32x4rr
VINSERTF32x4rr
VEXTRACTI32x4rr
VINSERTI32x4rr
VEXTRACTF64x4rr
VINSERTF64x4rr
VEXTRACTI64x4rr
VINSERTI64x4rr
CMOVA16rr
SBB16rr
SUB16rr
CMOVB16rr
ADC16rr
BTC16rr
XADD16rr
AND16rr
CMOVAE16rr
CMOVBE16rr
CMOVGE16rr
CMOVLE16rr
CMOVNE16rr
CMOVE16rr
BSF16rr
CMPXCHG16rr
CMOVG16rr
ARPL16rr
LSL16rr
IMUL16rr
CMOVL16rr
IN16rr
CMOVNO16rr
CMOVO16rr
CMP16rr
CMOVNP16rr
CMOVP16rr
LAR16rr
XOR16rr
BSR16rr
BTR16rr
CMOVNS16rr
BTS16rr
CMOVS16rr
BT16rr
POPCNT16rr
LZCNT16rr
TZCNT16rr
TEST16rr
OUT16rr
MOV16rr
VPALIGNR256rr
VPERM2F128rr
VEXTRACTF128rr
VINSERTF128rr
VPERM2I128rr
VEXTRACTI128rr
VINSERTI128rr
VPCMPESTRM128rr
VPCMPISTRM128rr
VPALIGNR128rr
VAESKEYGENASSIST128rr
SBB8rr
SUB8rr
ADC8rr
XADD8rr
AND8rr
CMPXCHG8rr
IN8rr
CMP8rr
XOR8rr
TEST8rr
OUT8rr
MOV8rr
VMOVDQArr
VPSHABrr
VPSUBBrr
VPADDBrr
VPMOVUSDBrr
VPMOVSDBrr
VPMOVDBrr
VPSHUFBrr
VPAVGBrr
VPMOVMSKBrr
MMX_PMOVMSKBrr
VPSHLBrr
VPSIGNBrr
VPCMPEQBrr
VPMOVUSQBrr
VPMOVSQBrr
VPMOVQBrr
VPINSRBrr
VPEXTRBrr
VPSUBSBrr
VPADDSBrr
VPMINSBrr
VPSUBUSBrr
VPADDUSBrr
PAVGUSBrr
VPMAXSBrr
VPCMPGTBrr
VPROTBrr
VPBROADCASTBrr
VPMINUBrr
PFSUBrr
VPMAXUBrr
VPBLENDVBrr
VPACKSSWBrr
VPACKUSWBrr
PFACCrr
PFNACCrr
PFPNACCrr
VAESDECrr
VAESIMCrr
VAESENCrr
VPERMI2Drr
VPBROADCASTMW2Drr
VPSHADrr
VPSRADrr
MMX_PSRADrr
VPHADDBDrr
VPHADDUBDrr
VPHSUBDrr
VPSUBDrr
VPMOVSXBDrr
VPMOVZXBDrr
PFADDrr
VPHADDDrr
VPADDDrr
VPMACSDDrr
VPMACSSDDrr
PI2FDrr
PF2IDrr
VPSHLDrr
VPSLLDrr
MMX_PSLLDrr
VPMULLDrr
VPSRLDrr
MMX_PSRLDrr
VPANDrr
VPSIGNDrr
VPERMI2PDrr
VPERMIL2PDrr
VCVTDQ2PDrr
VCVTPS2PDrr
VMOVAPDrr
PSWAPDrr
VADDSUBPDrr
VHSUBPDrr
VSUBPDrr
VMINCPDrr
VMAXCPDrr
VHADDPDrr
VADDPDrr
VANDPDrr
VFsANDPDrr
VUNPCKHPDrr
VMOVMSKPDrr
VPERMILPDrr
VUNPCKLPDrr
VMULPDrr
VANDNPDrr
VFsANDNPDrr
VMINPDrr
VORPDrr
VXORPDrr
VFsXORPDrr
VFsORPDrr
VTESTPDrr
VMOVUPDrr
VBLENDVPDrr
VDIVPDrr
VMAXPDrr
VFRCZPDrr
VPCMPEQDrr
VPMOVUSQDrr
VPMOVSQDrr
VPMOVQDrr
VPINSRDrr
VPEXTRDrr
Int_VCVTSI2SDrr
Int_CVTSI2SDrr
Int_VCVTSS2SDrr
Int_CVTSS2SDrr
VRCP14SDrr
VRSQRT14SDrr
VRCP28SDrr
VRSQRT28SDrr
VPABSDrr
VSUBSDrr
VMINCSDrr
VMAXCSDrr
VADDSDrr
Int_VUCOMISDrr
Int_UCOMISDrr
Int_VCOMISDrr
Int_COMISDrr
VMULSDrr
VPMINSDrr
VMINSDrr
Int_VCMPSDrr
Int_CMPSDrr
VDIVSDrr
VMOVSDrr
VPMAXSDrr
VMAXSDrr
VFRCZSDrr
VMOV64toSDrr
VPCONFLICTDrr
VPCMPGTDrr
VPROTDrr
VPBROADCASTDrr
VPMINUDrr
VPMAXUDrr
VPSRAVDrr
VPSLLVDrr
VPSRLVDrr
VPHSUBWDrr
VPHADDWDrr
VPMADDWDrr
VPUNPCKHWDrr
VPUNPCKLWDrr
VPMACSWDrr
VPMADCSWDrr
VPMACSSWDrr
VPMADCSSWDrr
VPHADDUWDrr
VPMOVSXWDrr
VPMOVZXWDrr
PFCMPGErr
SHA1NEXTErr
LD_Frr
ST_Frr
VCVTPS2PHrr
VPMACSDQHrr
VPMACSSDQHrr
VMOVPDI2DIrr
VMOVSS2DIrr
VMOVDI2PDIrr
VMOVPQI2QIrr
VMOVZQI2PQIrr
VMOVZPQILo2PQIrr
VMOV64toPQIrr
VPCMPESTRIrr
VPCMPISTRIrr
Int_VCVTTSD2SIrr
Int_CVTTSD2SIrr
VCVTSD2SIrr
Int_VCVTTSS2SIrr
Int_CVTTSS2SIrr
VCVTSS2SIrr
VPMACSDQLrr
VPMACSSDQLrr
PFMULrr
VPPERMrr
VPANDNrr
PFMINrr
PFRCPrr
ST_FPrr
VMOVDDUPrr
VMOVSHDUPrr
VMOVSLDUPrr
MMX_MOVFR642Qrr
VPBROADCASTMB2Qrr
VPERMI2Qrr
MMX_MOVDQ2Qrr
VPSHAQrr
VPHADDBQrr
VPHADDUBQrr
VPSUBQrr
VPMOVSXBQrr
VPMOVZXBQrr
VCVTTPD2DQrr
VCVTPD2DQrr
MMX_MOVQ2DQrr
VCVTTPS2DQrr
VCVTPS2DQrr
VPHSUBDQrr
VPADDQrr
VPHADDDQrr
VPUNPCKHDQrr
VPUNPCKLDQrr
VPMULDQrr
VPUNPCKHQDQrr
VPUNPCKLQDQrr
VPCLMULQDQrr
VPHADDUDQrr
VPMULUDQrr
VPMOVSXDQrr
VPMOVZXDQrr
PFCMPEQrr
VPSHLQrr
VPSLLQrr
MMX_PSLLQrr
VPSRLQrr
MMX_PSRLQrr
VPCMPEQQrr
VPINSRQrr
VPEXTRQrr
VPABSQrr
VPCONFLICTQrr
VPCMPGTQrr
VPROTQrr
VPBROADCASTQrr
VPSLLVQrr
VPSRLVQrr
VPHADDWQrr
VPHADDUWQrr
VPMOVSXWQrr
VPMOVZXWQrr
PFSUBRrr
VPORrr
VPXORrr
VCVTPD2PSrr
VCVTPH2PSrr
VPERMI2PSrr
VPERMIL2PSrr
VCVTDQ2PSrr
VMOVAPSrr
VADDSUBPSrr
VHSUBPSrr
VSUBPSrr
VMINCPSrr
VMAXCPSrr
VHADDPSrr
VADDPSrr
VANDPSrr
VFsANDPSrr
VUNPCKHPSrr
VMOVLHPSrr
VMOVMSKPSrr
VMOVHLPSrr
VPERMILPSrr
VUNPCKLPSrr
VMULPSrr
VANDNPSrr
VFsANDNPSrr
VMINPSrr
VORPSrr
VXORPSrr
VFsXORPSrr
VFsORPSrr
VEXTRACTPSrr
VINSERTPSrr
VTESTPSrr
VMOVUPSrr
VBLENDVPSrr
VDIVPSrr
VMAXPSrr
VFRCZPSrr
Int_VCVTSD2SSrr
Int_CVTSD2SSrr
VMOVDI2SSrr
Int_VCVTSI2SSrr
Int_CVTSI2SSrr
VRCP14SSrr
VRSQRT14SSrr
VRCP28SSrr
VRSQRT28SSrr
VSUBSSrr
VMINCSSrr
VMAXCSSrr
VADDSSrr
Int_VUCOMISSrr
Int_UCOMISSrr
Int_VCOMISSrr
Int_COMISSrr
VMULSSrr
VMINSSrr
Int_VCMPSSrr
Int_CMPSSrr
VBROADCASTSSrr
VDIVSSrr
VMOVSSrr
VMAXSSrr
VFRCZSSrr
PFCMPGTrr
MWAITrr
PFRSQRTrr
VAESDECLASTrr
VAESENCLASTrr
VPTESTrr
VMOVDQUrr
VPCMOVrr
VPSHAWrr
VPSRAWrr
MMX_PSRAWrr
VPHSUBBWrr
VPSADBWrr
VPHADDBWrr
VPUNPCKHBWrr
KUNPCKBWrr
VPUNPCKLBWrr
VPHADDUBWrr
VPHSUBWrr
VPSUBWrr
VPMOVSXBWrr
VPMOVZXBWrr
VPHADDWrr
VPADDWrr
KANDWrr
VPACKSSDWrr
VPACKUSDWrr
VPMOVUSDWrr
VPMOVSDWrr
VPMOVDWrr
PI2FWrr
VPAVGWrr
VPMULHWrr
PF2IWrr
VPSHLWrr
VPSLLWrr
MMX_PSLLWrr
VPMULLWrr
VPSRLWrr
MMX_PSRLWrr
KANDNWrr
VPSIGNWrr
VPCMPEQWrr
VPMOVUSQWrr
VPMOVSQWrr
VPMOVQWrr
PMULHRWrr
KORWrr
KXNORWrr
KXORWrr
VPSUBSWrr
VPADDSWrr
VPMINSWrr
VPSUBUSWrr
VPADDUSWrr
VPMAXSWrr
VPCMPGTWrr
KNOTWrr
VPROTWrr
VPBROADCASTWrr
KORTESTWrr
VPMULHUWrr
VPMINUWrr
VPMAXUWrr
VPMACSWWrr
VPMACSSWWrr
PFMAXrr
VMOVDQAYrr
VPSUBBYrr
VPADDBYrr
VPSHUFBYrr
VPAVGBYrr
VPMOVMSKBYrr
VPSIGNBYrr
VPCMPEQBYrr
VPSUBSBYrr
VPADDSBYrr
VPMINSBYrr
VPSUBUSBYrr
VPADDUSBYrr
VPMAXSBYrr
VPCMPGTBYrr
VPBROADCASTBYrr
VPMINUBYrr
VPMAXUBYrr
VPBLENDVBYrr
VPACKSSWBYrr
VPACKUSWBYrr
VPSRADYrr
VPHSUBDYrr
VPSUBDYrr
VPMOVSXBDYrr
VPMOVZXBDYrr
VPHADDDYrr
VPADDDYrr
VPSLLDYrr
VPMULLDYrr
VPSRLDYrr
VPERMDYrr
VPANDYrr
VPSIGNDYrr
VCVTDQ2PDYrr
VCVTPS2PDYrr
VMOVAPDYrr
VADDSUBPDYrr
VHSUBPDYrr
VSUBPDYrr
VMINCPDYrr
VMAXCPDYrr
VHADDPDYrr
VADDPDYrr
VANDPDYrr
VUNPCKHPDYrr
VMOVMSKPDYrr
VPERMILPDYrr
VUNPCKLPDYrr
VMULPDYrr
VANDNPDYrr
VMINPDYrr
VORPDYrr
VXORPDYrr
VTESTPDYrr
VMOVUPDYrr
VBLENDVPDYrr
VDIVPDYrr
VMAXPDYrr
VPCMPEQDYrr
VPMINSDYrr
VBROADCASTSDYrr
VPMAXSDYrr
VPCMPGTDYrr
VPBROADCASTDYrr
VPMINUDYrr
VPMAXUDYrr
VPSRAVDYrr
VPSLLVDYrr
VPSRLVDYrr
VPMADDWDYrr
VPUNPCKHWDYrr
VPUNPCKLWDYrr
VPMOVSXWDYrr
VPMOVZXWDYrr
VCVTPS2PHYrr
VPANDNYrr
VMOVDDUPYrr
VMOVSHDUPYrr
VMOVSLDUPYrr
VPSUBQYrr
VPMOVSXBQYrr
VPMOVZXBQYrr
VCVTTPD2DQYrr
VCVTPD2DQYrr
VCVTTPS2DQYrr
VCVTPS2DQYrr
VPADDQYrr
VPUNPCKHDQYrr
VPUNPCKLDQYrr
VPMULDQYrr
VPUNPCKHQDQYrr
VPUNPCKLQDQYrr
VPMULUDQYrr
VPMOVSXDQYrr
VPMOVZXDQYrr
VPSLLQYrr
VPSRLQYrr
VPCMPEQQYrr
VPCMPGTQYrr
VPBROADCASTQYrr
VPSLLVQYrr
VPSRLVQYrr
VPMOVSXWQYrr
VPMOVZXWQYrr
VPORYrr
VPXORYrr
VCVTPD2PSYrr
VCVTPH2PSYrr
VCVTDQ2PSYrr
VMOVAPSYrr
VADDSUBPSYrr
VHSUBPSYrr
VSUBPSYrr
VMINCPSYrr
VMAXCPSYrr
VHADDPSYrr
VADDPSYrr
VANDPSYrr
VUNPCKHPSYrr
VMOVMSKPSYrr
VPERMILPSYrr
VUNPCKLPSYrr
VMULPSYrr
VPERMPSYrr
VANDNPSYrr
VMINPSYrr
VORPSYrr
VXORPSYrr
VTESTPSYrr
VMOVUPSYrr
VBLENDVPSYrr
VDIVPSYrr
VMAXPSYrr
VBROADCASTSSYrr
VPTESTYrr
VMOVDQUYrr
VPSRAWYrr
VPSADBWYrr
VPUNPCKHBWYrr
VPUNPCKLBWYrr
VPHSUBWYrr
VPSUBWYrr
VPMOVSXBWYrr
VPMOVZXBWYrr
VPHADDWYrr
VPADDWYrr
VPACKSSDWYrr
VPACKUSDWYrr
VPAVGWYrr
VPMULHWYrr
VPSLLWYrr
VPMULLWYrr
VPSRLWYrr
VPSIGNWYrr
VPCMPEQWYrr
VPSUBSWYrr
VPADDSWYrr
VPMINSWYrr
VPSUBUSWYrr
VPADDUSWYrr
VPMAXSWYrr
VPCMPGTWYrr
VPBROADCASTWYrr
VPMULHUWYrr
VPMINUWYrr
VPMAXUWYrr
Int_VCVTSI2SD64Zrr
Int_VCVTUSI2SD64Zrr
Int_VCVTTSD2SI64Zrr
VCVTSD2SI64Zrr
Int_VCVTTSS2SI64Zrr
VCVTSS2SI64Zrr
Int_VCVTTSD2USI64Zrr
VCVTSD2USI64Zrr
Int_VCVTTSS2USI64Zrr
VCVTSS2USI64Zrr
Int_VCVTSI2SS64Zrr
Int_VCVTUSI2SS64Zrr
VMOVSDto64Zrr
VMOVPQIto64Zrr
VPSRADZrr
VPSUBDZrr
VPMOVSXBDZrr
VPMOVZXBDZrr
VPADDDZrr
VPANDDZrr
VPSLLDZrr
VPMULLDZrr
VPSRLDZrr
VPBLENDMDZrr
VPERMDZrr
VPTESTMDZrr
VPANDNDZrr
VCVTDQ2PDZrr
VCVTUDQ2PDZrr
VCVTPS2PDZrr
VMOVAPDZrr
VSUBPDZrr
VADDPDZrr
VUNPCKHPDZrr
VUNPCKLPDZrr
VMULPDZrr
VBLENDMPDZrr
VPERMPDZrr
VMINPDZrr
VSQRTPDZrr
VMOVUPDZrr
VDIVPDZrr
VMAXPDZrr
VPCMPEQDZrr
VPORDZrr
VPXORDZrr
VCVTSI642SDZrr
VCVTUSI642SDZrr
Int_VCVTSI2SDZrr
Int_VCVTUSI2SDZrr
VCVTSS2SDZrr
VSUBSDZrr
VADDSDZrr
Int_VUCOMISDZrr
Int_VCOMISDZrr
VMULSDZrr
VPMINSDZrr
VMINSDZrr
VCMPSDZrr
VBROADCASTSDZrr
VDIVSDZrr
VMOVSDZrr
VPMAXSDZrr
VMAXSDZrr
VMOV64toSDZrr
VPCMPGTDZrr
VPBROADCASTDZrr
VPMINUDZrr
VPMAXUDZrr
VPSRAVDZrr
VPSLLVDZrr
VPSRLVDZrr
VPMOVSXWDZrr
VPMOVZXWDZrr
VCVTPS2PHZrr
VMOVPDI2DIZrr
VMOVSS2DIZrr
VMOVDI2PDIZrr
VMOVZPQILo2PQIZrr
VMOV64toPQIZrr
Int_VCVTTSD2SIZrr
VCVTSD2SIZrr
Int_VCVTTSS2SIZrr
VCVTSS2SIZrr
Int_VCVTTSD2USIZrr
VCVTSD2USIZrr
Int_VCVTTSS2USIZrr
VCVTSS2USIZrr
VMOVDDUPZrr
VMOVSHDUPZrr
VMOVSLDUPZrr
VPSRAQZrr
VPSUBQZrr
VPMOVSXBQZrr
VPMOVZXBQZrr
VCVTTPD2DQZrr
VCVTPD2DQZrr
VCVTTPS2DQZrr
VCVTPS2DQZrr
VPADDQZrr
VPUNPCKHDQZrr
VPUNPCKLDQZrr
VPMULDQZrr
VPANDQZrr
VPUNPCKHQDQZrr
VPUNPCKLQDQZrr
VCVTTPD2UDQZrr
VCVTPD2UDQZrr
VCVTTPS2UDQZrr
VCVTPS2UDQZrr
VPMULUDQZrr
VPMOVSXDQZrr
VPMOVZXDQZrr
VPSLLQZrr
VPSRLQZrr
VPBLENDMQZrr
VPERMQZrr
VPTESTMQZrr
VPANDNQZrr
VPCMPEQQZrr
VPORQZrr
VPXORQZrr
VPMINSQZrr
VPMAXSQZrr
VPCMPGTQZrr
VPBROADCASTQZrr
VPMINUQZrr
VPMAXUQZrr
VPSRAVQZrr
VPSLLVQZrr
VPSRLVQZrr
VPMOVSXWQZrr
VPMOVZXWQZrr
VCVTPD2PSZrr
VCVTPH2PSZrr
VCVTDQ2PSZrr
VCVTUDQ2PSZrr
VMOVAPSZrr
VSUBPSZrr
VADDPSZrr
VUNPCKHPSZrr
VMOVLHPSZrr
VMOVHLPSZrr
VUNPCKLPSZrr
VMULPSZrr
VBLENDMPSZrr
VPERMPSZrr
VMINPSZrr
VSQRTPSZrr
VMOVUPSZrr
VDIVPSZrr
VMAXPSZrr
VCVTSI642SSZrr
VCVTUSI642SSZrr
VCVTSD2SSZrr
VMOVDI2SSZrr
Int_VCVTSI2SSZrr
Int_VCVTUSI2SSZrr
VSUBSSZrr
VADDSSZrr
Int_VUCOMISSZrr
Int_VCOMISSZrr
VMULSSZrr
VMINSSZrr
VCMPSSZrr
VBROADCASTSSZrr
VDIVSSZrr
VMOVSSZrr
VMAXSSZrr
VPBROADCASTDrZrr
VPBROADCASTQrZrr
MMX_MOVD64grr
MMX_PALIGNR64irr
MMX_PSUBBirr
MMX_PADDBirr
MMX_PAVGBirr
MMX_PCMPEQBirr
MMX_PSUBSBirr
MMX_PADDSBirr
MMX_PSUBUSBirr
MMX_PADDUSBirr
MMX_PCMPGTBirr
MMX_PMINUBirr
MMX_PMAXUBirr
MMX_PACKSSWBirr
MMX_PACKUSWBirr
MMX_PSUBDirr
MMX_PADDDirr
MMX_PANDirr
MMX_CVTPI2PDirr
MMX_PCMPEQDirr
MMX_PCMPGTDirr
MMX_PMADDWDirr
MMX_PUNPCKHWDirr
MMX_PUNPCKLWDirr
MMX_CVTTPD2PIirr
MMX_CVTPD2PIirr
MMX_CVTTPS2PIirr
MMX_CVTPS2PIirr
MMX_PANDNirr
MMX_PSUBQirr
MMX_PADDQirr
MMX_PUNPCKHDQirr
MMX_PUNPCKLDQirr
MMX_PMULUDQirr
MMX_PORirr
MMX_PXORirr
MMX_CVTPI2PSirr
MMX_PSADBWirr
MMX_PUNPCKHBWirr
MMX_PUNPCKLBWirr
MMX_PSUBWirr
MMX_PADDWirr
MMX_PACKSSDWirr
MMX_PAVGWirr
MMX_PMULHWirr
MMX_PMULLWirr
MMX_PCMPEQWirr
MMX_PSUBSWirr
MMX_PADDSWirr
MMX_PMINSWirr
MMX_PSUBUSWirr
MMX_PADDUSWirr
MMX_PMAXSWirr
MMX_PCMPGTWirr
MMX_PMULHUWirr
VPMOVUSDBkrr
VPMOVSDBkrr
VPMOVDBkrr
VPMOVUSQBkrr
VPMOVSQBkrr
VPMOVQBkrr
VPMOVUSQDkrr
VPMOVSQDkrr
VPMOVQDkrr
VPMOVUSDWkrr
VPMOVSDWkrr
VPMOVDWkrr
VPMOVUSQWkrr
VPMOVSQWkrr
VPMOVQWkrr
VPBROADCASTDZkrr
VPBROADCASTQZkrr
VPBROADCASTDrZkrr
VPBROADCASTQrZkrr
MONITORrrr
VEXTRACTPSzrr
VINSERTPSzrr
MOV32sr
MOV64sr
MOV16sr
MOV32ms
MOV64ms
MOV16ms
MOV32rs
MOV64rs
MOV16rs
VCMPPDrmi_alt
VCMPPSrmi_alt
VCMPPDYrmi_alt
VCMPPSYrmi_alt
VPCMPDZrmi_alt
VCMPPDZrmi_alt
VCMPSDZrmi_alt
VPCMPUDZrmi_alt
VPCMPQZrmi_alt
VPCMPUQZrmi_alt
VCMPPSZrmi_alt
VCMPSSZrmi_alt
VCMPPDrri_alt
VCMPPSrri_alt
VCMPPDYrri_alt
VCMPPSYrri_alt
VPCMPDZrri_alt
VCMPPDZrri_alt
VCMPSDZrri_alt
VPCMPUDZrri_alt
VPCMPQZrri_alt
VPCMPUQZrri_alt
VCMPPSZrri_alt
VCMPSSZrri_alt
VCMPSDrm_alt
VCMPSSrm_alt
VCMPSDrr_alt
VCMPSSrr_alt
VSQRTSDm_Int
VRCPPSm_Int
VRSQRTPSm_Int
VRCPSSm_Int
VRSQRTSSm_Int
VSQRTSSm_Int
VRCPPSYm_Int
VRSQRTPSYm_Int
VSQRTPDZm_Int
VSQRTSDZm_Int
VSQRTPSZm_Int
VSQRTSSZm_Int
VFMSUBSD4rm_Int
VFNMSUBSD4rm_Int
VFMADDSD4rm_Int
VFNMADDSD4rm_Int
VFMSUBSS4rm_Int
VFNMSUBSS4rm_Int
VFMADDSS4rm_Int
VFNMADDSS4rm_Int
VSUBSDrm_Int
VADDSDrm_Int
VMULSDrm_Int
VMINSDrm_Int
VDIVSDrm_Int
VMAXSDrm_Int
VSUBSSrm_Int
VADDSSrm_Int
VMULSSrm_Int
VMINSSrm_Int
VDIVSSrm_Int
VMAXSSrm_Int
VROUNDSDr_Int
SQRTSDr_Int
VRCPPSr_Int
VRSQRTPSr_Int
VROUNDSSr_Int
RCPSSr_Int
RSQRTSSr_Int
VRCPPSYr_Int
VRSQRTPSYr_Int
VSQRTPDZr_Int
VSQRTSDZr_Int
VSQRTPSZr_Int
VSQRTSSZr_Int
VFMSUBSD4mr_Int
VFNMSUBSD4mr_Int
VFMADDSD4mr_Int
VFNMADDSD4mr_Int
VFMSUBSS4mr_Int
VFNMSUBSS4mr_Int
VFMADDSS4mr_Int
VFNMADDSS4mr_Int
VFMSUBSD4rr_Int
VFNMSUBSD4rr_Int
VFMADDSD4rr_Int
VFNMADDSD4rr_Int
VFMSUBSS4rr_Int
VFNMSUBSS4rr_Int
VFMADDSS4rr_Int
VFNMADDSS4rr_Int
VSUBSDrr_Int
VADDSDrr_Int
VMULSDrr_Int
VMINSDrr_Int
VDIVSDrr_Int
VMAXSDrr_Int
VSUBSSrr_Int
VADDSSrr_Int
VMULSSrr_Int
VMINSSrr_Int
VDIVSSrr_Int
VMAXSSrr_Int
VPCONFLICTDrmbkz
VPCONFLICTQrmbkz
VPCONFLICTDrmkz
VPCONFLICTQrmkz
VPCONFLICTDrrkz
VPCONFLICTQrrkz
N4llvm18X86MCAsmInfoDarwinE
N4llvm21X86_64MCAsmInfoDarwinE
N4llvm15X86ELFMCAsmInfoE
N4llvm21X86MCAsmInfoMicrosoftE
N4llvm19X86MCAsmInfoGNUCOFFE
N4llvm2cl3optI17AsmWriterFlavorTyLb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageI17AsmWriterFlavorTyLb0ELb0EEE
N4llvm2cl6parserI17AsmWriterFlavorTyEE
N4llvm2cl11OptionValueI17AsmWriterFlavorTyEE
N4llvm2cl15OptionValueBaseI17AsmWriterFlavorTyLb0EEE
N4llvm2cl15OptionValueCopyI17AsmWriterFlavorTyEE
N12_GLOBAL__N_116X86MCCodeEmitterE
N12_GLOBAL__N_119X86MachObjectWriterE
N12_GLOBAL__N_118X86ELFObjectWriterE
N12_GLOBAL__N_122X86WinCOFFObjectWriterE
N12_GLOBAL__N_125X86_64MachORelocationInfoE
N12_GLOBAL__N_123X86_64ELFRelocationInfoE
0123456789abcdef
#pragma-messages
#warnings
CFString-literal
NSObject-attribute
abstract-final-class
abstract-vbase-init
address
address-of-array-temporary
address-of-temporary
aggregate-return
ambiguous-macro
ambiguous-member-template
analyzer-incompatible-plugin
anonymous-pack-parens
arc-abi%arc-bridge-casts-disallowed-in-nonarc
arc-maybe-repeated-use-of-weak
arc-non-pod-memaccess
arc-performSelector-leaks
arc-repeated-use-of-weak
arc-retain-cycles
arc-unsafe-retained-assignarray-bounds
array-bounds-pointer-arithmetic
asm-operand-widths
assign-enum
atomic-properties*atomic-property-with-user-defined-accessor
attributes
auto-import
auto-storage-class
auto-var-idavailability
backslash-newline-escape
bad-array-new-length
bad-function-cast
bind-to-temporary-copy
bitfield-constant-conversion
bitwise-op-parentheses
bool-conversion
bool-conversions
bridge-cast
builtin-macro-redefined
builtin-requires-header
c++-compatc++0x-compat
c++0x-extensions
c++0x-narrowingc++11-compat(c++11-compat-deprecated-writable-strings
c++11-compat-pedantic*c++11-compat-reserved-user-defined-literal
c++11-extensions
c++11-extra-semi
c++11-long-long
c++11-narrowing
c++1y-extensions
c++98-c++11-compat
c++98-c++11-compat-pedanticc++98-compat#c++98-compat-bind-to-temporary-copy%c++98-compat-local-type-template-args
c++98-compat-pedantic'c++98-compat-unnamed-type-template-args
c11-extensions
c99-compat
c99-extensions
cast-align
cast-of-sel-type
cast-qual
char-align
char-subscripts
comment
comments
compare-distinct-pointer-types
complex-component-init
conditional-type-mismatch
conditional-uninitialized
config-macros
constant-conversion
constant-logical-operand
constexpr-not-const
consumed
conversion
conversion-null
covered-switch-default
ctor-dtor-privacy
custom-atomic-properties
dangling-else
dangling-field
dangling-initializer-list
dealloc-in-category
declaration-after-statement
delegating-ctor-cycles
delete-incomplete
delete-non-virtual-dtor
deprecated
deprecated-declarations
deprecated-implementations
deprecated-increment-bool
deprecated-objc-isa-usage%deprecated-objc-pointer-introspection5deprecated-objc-pointer-introspection-performSelector
deprecated-register
deprecated-writable-strings
direct-ivar-access
disabled-macro-expansion
disabled-optimizationdiscard-qual
distributed-object-modifiers
div-by-zero
division-by-zero
documentation
documentation-deprecated-sync
documentation-html
documentation-pedantic
documentation-unknown-command
dollar-in-identifier-extension
duplicate-decl-specifier
duplicate-enum
duplicate-method-arg
duplicate-method-match
dynamic-class-memaccess
effc++
embedded-directive
empty-body
empty-translation-unitendif-labelsenum-compare
enum-conversion
exit-time-destructors
explicit-ownership-type
extended-offsetof
extern-c-compat
extern-initializer
extra
extra-qualification
extra-semiextra-tokens
flexible-array-extensions
float-equal
format
format-extra-args
format-invalid-specifier
format-non-iso
format-nonliteral
format-security
format-y2k
format-zero-length
format=2
four-char-constants
gcc-compat
global-constructors
gnu-alignof-expression
gnu-anonymous-struct
gnu-array-member-paren-init
gnu-binary-literal
gnu-case-range
gnu-complex-integer gnu-compound-literal-initializer
gnu-conditional-omitted-operand
gnu-designator
gnu-empty-initializer
gnu-empty-struct
gnu-flexible-array-initializer
gnu-flexible-array-union-member
gnu-folding-constant
gnu-imaginary-constant
gnu-label-as-value
gnu-redeclared-enum
gnu-statement-expression
gnu-static-float-init$gnu-string-literal-operator-template
gnu-union-cast"gnu-variable-sized-type-not-at-end
gnu-zero-line-directive!gnu-zero-variadic-macro-argumentsheader-guard
header-hygiene
idiomatic-parentheses
ignored-attributes
ignored-qualifiers
implicit
implicit-atomic-properties*implicit-conversion-floating-point-to-bool implicit-exception-spec-mismatch
implicit-fallthrough!implicit-fallthrough-per-function
implicit-function-declarationimplicit-int
implicit-retain-self
import&import-preprocessor-directive-pedantic"incompatible-library-redeclaration
incompatible-pointer-types.incompatible-pointer-types-discards-qualifiers
incomplete-implementation
incomplete-module
incomplete-umbrella
infinite-recursion
inherited-variadic-ctor
init-self
initializer-overrides
inline
inline-new-delete
int-conversion
int-conversions
int-to-pointer-cast
int-to-void-pointer-cast
integer-overflow
invalid-command-line-argument
invalid-constexpr
invalid-iboutlet
invalid-noreturn
invalid-offsetof
invalid-pch
invalid-pp-token
invalid-source-encoding
invalid-token-paste
keyword-compat
knr-promoted-parameter
language-extension-token
large-by-value-copy
literal-conversion
literal-range
local-type-template-args
logical-not-parentheses
logical-op-parentheses
long-long
loop-analysis
main
main-return-type
malformed-warning-check
memsize-comparison
method-signatures
microsoft
microsoft-exists
mismatched-parameter-types
mismatched-return-types
mismatched-tags
missing-braces
missing-debug-compression
missing-declarations
missing-field-initializers
missing-format-attribute
missing-include-dirs
missing-method-return-type
missing-noreturn
missing-prototypes
missing-selector-name
missing-sysroot
missing-variable-declarations
module-conflict
mostmsvc-include
mtl-shader-return-type
multichar
multiple-move-vbase
narrowing
nested-anon-types
nested-externs
new-returns-null
newline-eof
non-gcc
non-literal-null-conversion
non-pod-varargs
non-virtual-dtor
nonnull
nonportable-cfstrings
null-arithmetic
null-character
null-conversion
null-dereference+objc-autosynthesis-property-ivar-name-match
objc-cocoa-api
objc-designated-initializers
objc-forward-class-redefinition
objc-interface-ivars
objc-literal-compare
objc-method-access
objc-missing-property-synthesis
objc-missing-super-calls"objc-noncopy-retain-block-property
objc-nonunified-exceptions
objc-property-implementation
objc-property-implicit-mismatch*objc-property-matches-cocoa-ownership-rule
objc-property-no-attribute
objc-property-synthesis#objc-protocol-method-implementation objc-protocol-property-synthesis"objc-readonly-with-setter-property
objc-redundant-api-use
objc-redundant-literal-use
objc-root-class
objc-string-compare
objc-string-concatenation
old-style-cast
old-style-definition
out-of-line-declarationover-aligned
overflow
overlength-strings
overloaded-shift-op-parentheses
overloaded-virtual
overriding-method-mismatch
overriding-t-option
packed
padded
parentheses
parentheses-equality
pedantic
pointer-arithpointer-sign
pointer-to-int-cast
pointer-type-mismatch&predefined-identifier-outside-function
private-extern
protocol%protocol-property-synthesis-ambiguity
readonly-iboutlet-property
receiver-expr
receiver-forward-class
receiver-is-weak
redeclared-class-member
redundant-decls
reinterpret-base-class
reorder
requires-super-attribute
reserved-user-defined-literal
retained-language-linkage
return-stack-address
return-type
return-type-c-linkage
section
selector
selector-type-mismatch
self-assign
self-assign-field
semicolon-before-method-body
sentinel
sequence-point
serialized-diagnostics
shadow
shadow-ivar
shift-count-negative
shift-count-overflow
shift-op-parentheses
shift-overflow
shift-sign-overflow
shorten-64-to-32sign-compare
sign-conversion
sign-promo
sizeof-array-argument
sizeof-array-decay
sizeof-pointer-memaccess
sometimes-uninitialized
source-uses-openmp
stack-protector
static-float-init
static-in-inline$static-inline-explicit-instantiation
static-local-in-inline
static-self-init
strict-aliasing
strict-aliasing=0
strict-aliasing=1
strict-aliasing=2
strict-overflow
strict-overflow=0
strict-overflow=1
strict-overflow=2
strict-overflow=3
strict-overflow=4
strict-overflow=5
strict-prototypes
strict-selector-match
string-compare
string-conversion
string-plus-char
string-plus-int
strlcpy-strlcat-sizestrncat-size
super-class-method-mismatch
switch
switch-default
switch-enum
synth
tautological-compare*tautological-constant-out-of-range-compare$tentative-definition-incomplete-type
thread-safety
thread-safety-analysis
thread-safety-attributes
thread-safety-beta
thread-safety-precise
trigraphs
type-limits
type-safety
typedef-redefinition
typename-missing
unavailable-declarations
undeclared-selector
undef
undefined-inline
undefined-internal
undefined-reinterpret-cast
unicode
unicode-whitespace
uninitialized
unknown-pragmas
unknown-warning-option
unnamed-type-template-args
unneeded-internal-declaration
unneeded-member-function
unreachable-code
unsequenced
unsupported-friend
unsupported-visibility
unused
unused-argument
unused-command-line-argument
unused-comparison
unused-const-variable
unused-exception-parameter
unused-functionunused-label
unused-macros
unused-member-function
unused-parameter
unused-private-field
unused-property-ivar
unused-result
unused-sanitize-argumentunused-value
unused-variable
unused-volatile-lvalue
unused-volatile-lvalue-hack
used-but-marked-unused
user-defined-literals
varargs
variadic-macros
vector-conversion
vector-conversionsvexing-parse
visibility
vla-extension
volatile-register-var
weak-template-vtablesweak-vtables
write-strings
zero-length-array
 "#$=>"
*+
45
&(,069
 t@ D
333333
llvm.metadata
mips32r2
mips64r2
no-error
error
mips32
mips64
-fmodules-cache-path=
////////////////
clang -cc1as
Clang Integrated Assembler
clang (LLVM option parsing)
null
gpu_32
gpu_64
applecl
uninitialized
unused-variable
unused-value
unused-function
sign-compare
return-type
missing-braces
missing-prototypes
error: couldn't get arguments: 
-cc1
error: unknown integrated tool '
-no-canonical-prefixes
CCC_OVERRIDE_OPTIONS
QA_OVERRIDE_GCC3_OPTIONS
cl.exe
clang-cl.exe
a.out
CC_PRINT_OPTIONS
CC_PRINT_OPTIONS_FILE
CC_PRINT_HEADERS
CC_PRINT_HEADERS_FILE
CC_LOG_DIAGNOSTICS
CC_LOG_DIAGNOSTICS_FILE
FORCE_CLANG_DIAGNOSTICS_CRASH
### CCC_OVERRIDE_OPTIONS: 
### Adding argument 
 at beginning
 at end
### Replacing '
' with '
### Deleting argument 
### Invalid X edit, end of command line!
### Unrecognized edit: 
clang
clang++
--driver-mode=g++
clang-c++
clang-cc
clang-cpp
--driver-mode=cpp
clang-g++
clang-gcc
clang-cl
--driver-mode=cl
-target
 Opt:
 Index:
 Values: [
GroupClass
InputClass
UnknownClass
FlagClass
JoinedClass
SeparateClass
CommaJoinedClass
MultiArgClass
JoinedOrSeparateClass
JoinedAndSeparateClass
RemainingArgsClass
 Prefixes:[
 Name:"
 Group:
 Alias:
 NumArgs:
 [options] <inputs>
OPTIONS
<value>
Could not open input file: 
Parse IR
LLVM IR Parsing
enable-objc-arc-opts
enable/disable all ARC Optimizations
ObjC ARC optimization
objc-arc
clang.imprecise_release
clang.arc.copy_on_escape
clang.arc.no_objc_arc_exceptions
objc_retain
objc_release
objc_autorelease
objc_retainAutoreleasedReturnValue
objc_retainBlock
objc_autoreleaseReturnValue
objc_autoreleasePoolPush
objc_loadWeakRetained
objc_loadWeak
objc_destroyWeak
objc_storeWeak
objc_initWeak
objc_moveWeak
objc_copyWeak
objc_retainedObject
objc_unretainedObject
objc_unretainedPointer
clang.arc.use
L_OBJC_SELECTOR_REFERENCES_
L_OBJC_CLASSLIST_REFERENCES_
L_OBJC_CLASSLIST_SUP_REFS_$_
L_OBJC_METH_VAR_NAME_
l_objc_msgSend_fixup_
ObjC ARC expansion
objc-arc-expand
ObjC ARC autorelease pool elimination
objc-arc-apelim
ObjC-ARC-Based Alias Analysis
objc-arc-aa
IC_Retain
IC_RetainRV
IC_RetainBlock
IC_Release
IC_Autorelease
IC_AutoreleaseRV
IC_AutoreleasepoolPush
IC_AutoreleasepoolPop
IC_NoopCast
IC_FusedRetainAutorelease
IC_FusedRetainAutoreleaseRV
IC_LoadWeakRetained
IC_StoreWeak
IC_InitWeak
IC_LoadWeak
IC_MoveWeak
IC_CopyWeak
IC_DestroyWeak
IC_StoreStrong
IC_CallOrUser
IC_Call
IC_User
IC_IntrinsicUser
IC_None
objc_autoreleasePoolPop
objc_retain_autorelease
objc_sync_enter
objc_sync_exit
llvm.arc.annotation.topdown.bbstart
llvm.arc.annotation.topdown.bbend
llvm.arc.annotation.bottomup.bbstart
llvm.arc.annotation.bottomup.bbend
ObjC ARC contraction
objc-arc-contract
clang.arc.retainAutoreleasedReturnValueMarker
objc_storeStrong
objc_retainAutorelease
objc_retainAutoreleaseReturnValue
Alias Analysis
count-aa-print-all-queries
count-aa-print-all-failed-queries
Count Alias Analysis Query Responses
count-aa
===== Alias Analysis Counter Report =====
  Analysis counted:
no alias
may alias
partial alias
must alias
  Alias Analysis Counter Summary: 
 Total Mod/Ref Queries Performed
no mod/ref
mod/ref
  Mod/Ref Analysis Counter Summary: 
 responses (
No alias
May alias
Partial alias
Must alias
JustRef
JustMod
ModRef
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-mod
print-ref
print-modref
evaluate-tbaa
Exhaustive Alias Analysis Precision Evaluator
aa-eval
===== Alias Analysis Evaluator Report =====
  Alias Analysis Evaluator Summary: No pointers!
 Total Alias Queries Performed
 no alias responses 
 may alias responses 
 partial alias responses 
 must alias responses 
  Alias Analysis Evaluator Pointer Alias Summary: 
  Alias Analysis Mod/Ref Evaluator Summary: no mod/ref!
 Total ModRef Queries Performed
 no mod/ref responses 
 mod responses 
 ref responses 
 mod & ref responses 
  Alias Analysis Evaluator Mod/Ref Summary: 
Function: 
 pointers, 
 call sites
NoAlias
MayAlias
PartialAlias
MustAlias
NoModRef
Just Mod
Just Ref
Both ModRef
 <-> 
:  Ptr: 
AA use debugger
debug-aa
  AliasSet[
must
 alias, 
No access 
Ref       
Mod       
Mod/Ref   
[volatile] 
 forwarding to 
Pointers: 
    
 Unknown instructions: 
Alias Set Tracker: 
 alias sets for 
 pointer values.
Alias Set Printer
print-alias-sets
Basic Alias Analysis (stateless AA impl)
basicaa
---- Branch Probabilities ----
edge 
Branch Probability Analysis
branch-prob
View CFG of function
view-cfg
View CFG of function (with no function bodies)
view-cfg-only
Print CFG of function to 'dot' file
dot-cfg
Print CFG of function to 'dot' file (with no function bodies)
dot-cfg-only
cfg.
CFG for '
costmodel-reduxcost
Recognize reduction patterns.
cost-model
Cost Model: Found an estimated cost of 
Cost Model: Unknown cost
 for instruction: 
air.convert
acos
asin
atan
atan2
ceil
cosf
cosh
exp2
fmod
floor
log10
sinh
sinf
tanh
da-delinearize
Try to delinearize array references.
 Empty
 Any
 Point is <
 Distance is 
*X + 
*Y = 
 Line is 
confused
consistent 
flow
output
anti
input
 splitable
Dependence Analysis
da analyze - 
da analyze - split level = 
, iteration = 
none!
View dominance tree of function
view-dom
View dominance tree of function (with no function bodies)
view-dom-only
View postdominance tree of function
view-postdom
View postdominance tree of function (with no function bodies)
view-postdom-only
Print dominance tree of function to 'dot' file
dot-dom
Print dominance tree of function to 'dot' file (with no function bodies)
dot-dom-only
Print postdominance tree of function to 'dot' file
dot-postdom
Print postdominance tree of function to 'dot' file (with no function bodies)
dot-postdom-only
.dot
Writing '
'...
 for '
' function
  error opening file for writing!
Dominator tree
digraph "
digraph unnamed {
label="
Node
 [shape=record,
label="{
}"];
Post dominance root node
\l...
|<s64>truncated...
 -> Node
domonly
error opening file '
' for writing!
 done. 
postdom
Post dominator tree
postdomonly
  DomFrontier for BB 
 <<exit node>>
 is:
<<exit node>>
Dominance Frontier Construction
domfrontier
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
 in  
Induction Variable Users
iv-users
Counts the various types of Instructions
instcount
Number of GetElementPtr insts
Number of Load insts
Number of Store insts
Number of Call insts
Number of Invoke insts
Number of Alloca insts
-------------------------------------------------------------
Interval Contents:
Interval Predecessors:
Interval Successors:
Interval Partition Construction
intervals
undefined
overdefined
notconstant<
constantrange<
constant<
Lazy Value Information Analysis
lazy-value-info
LibCall Alias Analysis
libcall-aa
Statically lint-checks LLVM IR
lint
Unusual: Unnamed function with non-local linkage
Unusual: Return statement in function with noreturn attribute
Unusual: Returning alloca value
Undefined behavior: indirectbr with no destinations
Undefined behavior: Null pointer dereference
Undefined behavior: Undef pointer dereference
Unusual: All-ones pointer dereference
Unusual: Address one pointer dereference
Undefined behavior: Write to read-only memory
Undefined behavior: Write to text section
Unusual: Load from function body
Undefined behavior: Load from block address
Undefined behavior: Call to block address
Undefined behavior: Branch to non-blockaddress
Undefined behavior: Buffer overflow
Undefined behavior: Memory reference address is misaligned
Undefined behavior: Caller and callee calling convention differ
Undefined behavior: Call argument count mismatches callee argument count
Undefined behavior: Call return type mismatches callee return type
Undefined behavior: Call argument type mismatches callee parameter type
Unusual: noalias argument aliases another argument
Undefined behavior: Call with "tail" keyword references alloca
Undefined behavior: memcpy source and destination overlap
Undefined behavior: va_start called in a non-varargs function
Unusual: unreachable immediately preceded by instruction without side effects
Undefined result: sub(undef, undef)
Undefined behavior: Division by zero
Undefined result: Shift count out of range
Undefined result: xor(undef, undef)
Pessimization: Static alloca outside of entry block
Undefined result: extractelement index out of range
Undefined result: insertelement index out of range
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
verify-loop-info
Verify loop info (time consuming)
Natural Loop Information
loops
llvm.loop
Loop Pass Manager
Loop Pass Manager
Print MemDeps of function
print-memdeps
 in block 
 from: 
Clobber
NonFuncLocal
Unknown
Memory Dependence Analysis
Decodes module-level debug info
module-debuginfo
Compile Unit: 
Subprogram: 
GlobalVariable: 
Type: 
No Alias Analysis (always returns 'may' alias)
no-aa
PHITransAddr contains extra instructions:
  InstInput #
 is 
.phi.trans.insert
Instruction in PHITransAddr is not phi-translatable:
Post-Dominator Tree Construction
postdomtree
verify-region-info
Verify region info (time consuming)
print-region-style
style of printing regions
none
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
<Function Return>
 => 
Region tree:
End region tree
Cannot find option named '
Detect single entry single exit regions
regions
<deleted>
Region Pass Manager
Region Pass Manager
only-simple-regions
Show only simple regions in the graphviz viewer
Print regions of function to 'dot' file
dot-regions
View regions of function
view-regions
View regions of function (with no function bodies)
view-regions-only
Print regions of function to 'dot' file (with no function bodies)
dot-regions-only
Region Graph
Not implemented
constraint=false
colorscheme = "paired12"
subgraph cluster_
label = "";
style = filled;
color = 
style = solid;
Node
regonly
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
(trunc 
 to 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Classifying expressions for: 
  -->  
Exits: 
<<Unknown>>
Determining loop execution counts for: 
undef
SCEVValidator: SCEV for loop '
' changed from '
' to '
Scalar Evolution Analysis
Loop 
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count. 
Loop 
max backedge-taken count is 
Unpredictable max backedge-taken count. 
<nw>
ScalarEvolution-based Alias Analysis
scev-aa
uglygep
scevgep
.iv.next
indvar
indvar.next
smax
umax
Target Information
No target information
notti
enable-tbaa
vtable pointer
Type-Based Alias Analysis
tbaa
fabs
fabsf
fabsl
sqrt
sqrtl
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in global variable name
Null bytes are not allowed in names
invalid value number (too large)!
end of file in string constant
bitwidth for integer type out of range!
declare
linker_private
linker_private_weak
available_externally
linkonce
linkonce_odr
weak_odr
appending
unnamed_addr
externally_initialized
extern_weak
external
localdynamic
initialexec
localexec
tail
deplibs
unordered
monotonic
acquire
acq_rel
seq_cst
singlethread
nnan
ninf
arcp
exact
inbounds
addrspace
sideeffect
inteldialect
attributes
xchg
nand
umin
blockaddress
personality
filter
use of undefined metadata '!
unknown function referenced by blockaddress
use of undefined type '%
use of undefined type named '
use of undefined value '@
cannot take address of numeric label after the function is defined
referenced value is not a basic block
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
Expected '!' here
Expected '{' here
expected end of metadata node
Metadata id is already used
invalid linkage type for alias
invalid aliasee
alias must have pointer type
redefinition of global named '@
forward reference and definition of alias have different types
invalid type for global variable
redefinition of global '@
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
global variable reference must have pointer type
' defined with type '
expected string constant
expected integer
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
expected metadata after comma
expected '!' here
alignment is not a power of two
huge alignments are not supported yet
expected metadata or 'align'
Expected ordering on atomic instruction
expected '('
stack alignment is not a power of two
expected ',' as start of index list
expected type
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
argument can not have void type
invalid type for function argument
expected ')' at end of argument list
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected number in address space
expected 'x' after element count
expected end of sequential type
zero element vector is illegal
size too large for vector
invalid vector element type
invalid array element type
use of undefined value '%
' is not a basic block
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected string
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected function name in blockaddress
expected basic block name in blockaddress
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
nuw only applies to integer operations
nsw only applies to integer operations
constexpr requires integer operands
constexpr requires fp operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected ')' in constantexpr
getelementptr requires pointer operand
invalid indices for getelementptr
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
metadata value must have metadata type
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type!
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
expected ',' in arithmetic operation
invalid operand type for instruction
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
expected 'personality'
expected 'catch' or 'filter' clause type
'catch' clause has an invalid type
'filter' clause has an invalid type
expected 'tail call'
element count must have integer type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be an integer
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
atomicrmw operand must be an integer
fence cannot be unordered
fence cannot be monotonic
base of getelementptr must be a pointer
getelementptr index must be an integer
getelementptr index type missmatch
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
expected comma after insertvalue operand
expected index
<string>
arm-enable-ehabi-descriptors
Generate ARM EHABI tables with unwinding descriptors
eh_func_begin
eh_func_end
>> Catch TypeInfos <<
TypeInfo 
>> Filter TypeInfos <<
FilterInfo 
Start of file scope inline assembly
End of file scope inline assembly
$tlv$init
_tlv_bootstrap
Address taken block that was later removed
' label emitted multiple times to assembly file
implicit-def: 
avoids zero-length function
Address of block that was removed by CodeGen
nop (invalid dwarf register number)
DW_OP_bregx
DW_OP_regx
DW_OP_bit_piece
DW_OP_piece
: Target doesn't support aliases to declarations
llvm.init.trampoline
.constructors_used
.destructors_used
llvm.ident
_set_
Block address taken
 BB#
no GCMetadataPrinter registered for GC: 
DWARF Debug Writer
DWARF Emission
DWARF Exception Writer
-byte Reload
-byte Folded Reload
-byte Spill
-byte Folded Spill
 Reload Reuse
DEBUG_VALUE: 
 [piece offset=
 size=
 <- 
(long double) 
kill:
<def>
<kill>
Unsupported expression in static initializer: 
0x%llx
float 
double 
  in Loop: Header=BB
 Depth=
This 
Inner 
Loop Header: Depth=
Parent Loop BB
Child Loop BB
 Depth 
DW_CFA_offset + Reg (
 Encoding = 
Encoding = 
super-register
sub-register
nop (could not find a dwarf register number)
pcrel sdata8
<inline asm>
Inline asm not supported by this streamer because we don't have an asm parser for this target
Error parsing inline asm
private
comment
Unknown special formatter '
' for machine instr: 
Nested variants found in inline asm string: '
Unterminated ${:foo} operand in inline asm string: '
Bad $ operand number in inline asm string: '
Bad ${:} expression in inline asm string: '
Bad ${} expression in inline asm string: '
Invalid $ operand number in inline asm string: '
invalid operand in inline asm: '
.intel_syntax
.att_syntax
EOM(1)
EOM(2)
Header Magic
Header Version
Header Hash Function
Header Bucket Count
Header Hash Count
Header Data Length
HeaderData Die Offset Base
HeaderData Atom Count
Bucket 
Hash in Bucket 
Offset in Bucket 
Num DIEs
exception
disable-debug-info-print
Disable debug info printing
use-unknown-locations
Make an absence of debug location information explicit.
generate-cu-hash
Add the CU hash as the dwo_id.
generate-gnu-dwarf-pub-sections
Generate GNU-style pubnames and pubtypes
dwarf-accel-tables
Output prototype dwarf accelerator tables.
Default
Default for platform
Enable
Enabled
Disable
Output DWARF5 split debug info.
generate-dwarf-pub-sections
Generate DWARF pubnames and pubtypes sections
dwarf-version
Generate DWARF for dwarf version.
generate-dwarf-cu-ranges
Generate DW_AT_ranges for compile units
info_string
skel_string
debug_ranges
gnu_pubnames
gnu_pubtypes
line_table_start
section_line
cu_ranges
debug_end
func_begin
func_end
section_info
section_info_dwo
section_abbrev
section_abbrev_dwo
addr_sec
debug_range
section_debug_loc
Abbrev [
] 0x
End Of Children Mark
Length of Unit
Abbreviation Code
EOM(3)
Extended Op
Op size
DW_LNE_set_address
Section end label
section_end
DW_LNE_end_sequence
Names
names_begin
objc_begin
namespac
namespac_begin
types
types_begin
Length of Public Names Info
pubnames_begin
pubnames_end
DWARF Version
Offset of Compilation Unit Info
Compilation Unit Length
DIE offset
Kind: 
External Name
End Mark
Length of Public Types Info
pubtypes_begin
pubtypes_end
DW_OP_consts
DW_OP_constu
DW_OP_deref
DW_OP_plus_uconst
debug_loc
Loc expr size
Length of ARange Set
DWARF Arange version number
Offset Into Debug Info Section
Address Size (in bytes)
Segment Size (in bytes)
ARange terminator
Dwarf Version
gnu_ranges
GCC_except_table
_LSDA_
@LPStart
@TType
@TType base offset
Call site
Call site table length
>> Call Site 
  On exception at call site 
  Action: cleanup
  Action: 
  Call between 
    has no landing pad
    jumps to 
  On action: cleanup
  On action: 
>> Action Record 
  Catch TypeInfo 
  Filter TypeInfo 
  Cleanup
  No further actions
  Continue to action 
generate-type-units
Generate DWARF4 type units.
__forwarding
(anonymous namespace)
DWARF version number
Offset Into Abbrev. Section
Type Signature
Type DIE Offset
_GCC_specific_handler
llvm.bitcode
Bitcode stream length should be >= 16 bytes and a multiple of 4
Conflicting METADATA_KIND records
Could not find function in stream
Expected a constant
Insufficient function protos
Invalid bitcode signature
Invalid bitcode wrapper header
Invalid ronstant reference
Invalid ID
Invalid instruction with no BB
Invalid record
Invalid type for value
Invalid TYPE table
Invalid type
Malformed block
Malformed global initializer set
Invalid multiple blocks
Never resolved value found in function
Invalid value
enable-bc-uselist-preserve
Turn on experimental support for use-list order preservation.
Bitcode Writer
MetaData
Map Name: 
Size: 
Value: 
Value: [null]
 Uses(
 [null]
agg-antidep-debugdiv
Debug control for aggressive anti-dep breaker
agg-antidep-debugmod
llvm.eh.catch.all.value
Target independent code generator's TTI
basictti
enable-tail-merge
tail-merge-threshold
Max number of predecessors to consider tail merging
tail-merge-size
Min number of instructions to consider tail merging
Control Flow Optimizer
branch-folder
calc-spill-weights-uses-loop-depth
The calculation of spill weights uses loop depth heuristic
disable-cgp-branch-opts
Disable branch optimizations in CodeGenPrepare
disable-cgp-select2branch
Disable select to branch conversion.
enable-andcmp-sinking
Enable sinkinig and/cmp into branches.
Optimize for code generation
codegenprepare
CodeGen Prepare
sunkaddr
promoted
select.end
select.mid
Remove dead machine instructions
dead-mi-elimination
Exception handling preparation
unwind_resume
exn.obj
early-ifcvt-limit
Maximum number of instructions per speculated block.
stress-early-ifcvt
Turn all knobs to 11
Early If Converter
early-ifcvt
Early If-Conversion
view-edge-bundles
Pop up a window to show edge bundle graphs
EdgeBundles
digraph {
"BB#
" [ shape=box ]
 -> "BB#
" -> "BB#
" [ color=lightgray ]
Bundle Machine CFG Edges
edge-bundles
Execution dependency fix
Expand ISel Pseudo-instructions
expand-isel-pseudos
Post-RA pseudo instruction expansion pass
postrapseudos
unsupported GC: 
Create Garbage Collector Module Metadata
collector-metadata
Print Garbage Collector Information
GC roots for 
[sp]
GC safe points for 
, live = {
loop
pre-call
post-call
 must override performCustomLowering.
 must override findCustomSafePoints.
GC Lowering
gc-lowering
Lower Garbage Collection Instructions
Analyze Machine Code For Garbage Collection
gc-analysis
ifcvt-fn-start
ifcvt-fn-stop
ifcvt-limit
disable-ifcvt-simple
disable-ifcvt-simple-false
disable-ifcvt-triangle
disable-ifcvt-triangle-rev
disable-ifcvt-triangle-false
disable-ifcvt-triangle-false-rev
disable-ifcvt-diamond
ifcvt-branch-fold
If Converter
if-converter
ifcvt
Number of simple if-conversions performed
Number of simple (F) if-conversions performed
Number of triangle if-conversions performed
Number of triangle (R) if-conversions performed
Number of triangle (F) if-conversions performed
Number of triangle (F/R) if-conversions performed
Number of diamond if-conversions performed
disable-spill-hoist
Disable inline spill hoisting
setjmp
longjmp
Cannot lower a call to a non-intrinsic function '
Code generator does not support intrinsic function '
WARNING: this target does not support the llvm.stack
save
restore
 intrinsic.
WARNING: this target does not support the llvm.
address intrinsic.
WARNING: this target does not support the llvm.readcyclecoun
ter intrinsic.  It is being lowered to a constant 0
cppop.and1
ctpop.sh
cppop.and2
ctpop.step
ctpop.part
ctpop.part.sh
bswap.2
bswap.1
bswap.i16
bswap.4
bswap.3
bswap.and3
bswap.and2
bswap.or1
bswap.or2
bswap.i32
bswap.8
bswap.7
bswap.6
bswap.5
bswap.and7
bswap.and6
bswap.and5
bswap.and4
bswap.or3
bswap.or4
bswap.or5
bswap.or6
bswap.i64
ctlz.sh
ctlz.step
fast-isel
Enable the "fast" instruction selector
show-mc-encoding
Show encoding in .s output
show-mc-inst
Show instruction structure in .s output
asm-verbose
Add comments to directives.
live-debug-variables
Enable the live debug variables pass
Debug Variable Analysis
livedebugvars
EMPTY
-phi
Clean updater: 
Null updater.
 updater with gap = 
, last start = 
  Area 1:
  Spills:
  Area 2:
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
Live Interval Analysis
liveintervals
 empty
Live Register Matrix
liveregmatrix
Live Registers:
 (uninitialized)
 (empty)
 [Unknown]
Live Stack Slot Analysis
livestacks
regalloc=... not currently supported with -O0
Live Variable Analysis
livevars
Local Stack Slot Allocation
localstackalloc
Can't print out MachineBasicBlock because parent MachineFunction
 is null
derived from LLVM BB 
EH LANDING PAD
ADDRESS TAKEN
Align 
 bytes)
    Live Ins:
    Predecessors according to CFG:
  * 
    Successors according to CFG:
MachineBlockFrequencyInfo::view is only available in debug builds on systems with Graphviz or gv!
Machine Block Frequency Analysis
machine-block-freq
align-all-blocks
Force the alignment of all blocks in the function.
block-placement-exit-block-bias
Block frequency percentage a loop exit block needs over the original exit to be considered the new exit.
Branch Probability Basic Block Placement
block-placement2
Basic Block Placement Stats
block-placement-stats
edge MBB#
 -> MBB#
 probability is 
 [HOT edge]
Machine Branch Probability Analysis
machine-branch-prob
Machine Common Subexpression Elimination
machine-cse
Machine Copy Propagation Pass
machine-cp
MachineCopyPropagation should be run after register allocation!
MachineDominator Tree Construction
machinedomtree
# Machine code for function 
Post SSA
, not tracking liveness
Function Live Ins: 
# End machine code for function 
MachineFunction::viewCFG is only available in debug builds on 
systems with Graphviz or gv!
MachineFunction::viewCFGOnly is only available in debug builds on 
Frame Objects:
  fi#
dead
variable sized
size=
, align=
, fixed
, at location [SP
Jump Tables:
  jt#
Constant Pool:
  cp#
Machine Function Analysis
memdep
live-values
Machine Function Printer
MachineFunction Printer
earlyclobber,
imp-
,read-undef
imp-use
kill
dead
internal
tied
<BB#
<fi#
<cp#
<ti#
<jt#
<ga:
<es:
<regmask>
<regliveout>
<MCSym=
[TF=
Volatile 
(addrspace=
(align=
(tbaa=
(nontemporal)
UNKNOWN
 [sideeffect]
 [mayload]
 [maystore]
 [alignstack]
 [attdialect]
 [inteldialect]
pred:
opt:
:[reguse
:[regdef
:[regdef-ec
:[clobber
:[imm
:[mem
:[??
 tiedto:$
 ...
 flags: 
FrameSetup
 mem:
 line no:
 inlined @[ 
 dbg:
Unpack machine instruction bundles
unpack-mi-bundles
Finalize machine instruction bundles
finalize-mi-bundles
avoid-speculation
MachineLICM should avoid speculation
Machine Loop Invariant Code Motion
machinelicm
Machine Natural Loop Construction
machine-loops
Machine Module Information
machinemoduleinfo
MachinePostDominator Tree Construction
machinepostdomtree
misched-topdown
Force top-down list scheduling
misched-bottomup
Force bottom-up list scheduling
misched-regpressure
Enable register pressure scheduling.
misched-cyclicpath
Enable cyclic critical path analysis.
misched-cluster
Enable load clustering.
misched-fusion
Enable scheduling for macro fusion.
verify-misched
Verify machine instrs before and after machine scheduling
Machine instruction scheduler to use
Use the target's default scheduler choice.
converge
Standard converging scheduler.
ilpmax
Schedule bottom-up for max ILP
ilpmin
Schedule bottom-up for min ILP
ScheduleDAGMI::viewGraph is only available in debug builds on 
Scheduling-Units Graph for 
Machine Instruction Scheduler
Before machine scheduling.
After machine scheduling.
PostRA Machine Instruction Scheduler
postmisched
Before post machine scheduling.
After post machine scheduling.
TopQ
BotQ
machine-sink-split
Split critical edges during machine sinking
Machine code sinking
machine-sink
 ensemble:
  BB#
depth=
 pred=BB#
 pred=null
 head=BB#
 +instrs
depth invalid
height=
 succ=BB#
 succ=null
 tail=BB#
height invalid
, crit=
 trace BB#
 --> BB#
 instrs.
 cycles.
 <- BB#
 -> BB#
Machine Trace Metrics
machine-trace-metrics
MinInstr
machineverifier
Error opening '
Bad instruction parent pointer
Instruction: 
Missing BundledPred flag, BundledSucc was set on predecessor
BundledPred flag is set, but BundledSucc not set on predecessor
No bundle header
BundledSucc flag set on last instruction in block
Found 
 machine code errors.
MBB has duplicate entries in its predecessor list.
MBB has duplicate entries in its successor list.
FrameSetup is after another FrameSetup
FrameDestroy is not after a FrameSetup
FrameDestroy <n> is after FrameSetup <m>
FrameDestroy <
> is after FrameSetup <
The exit stack state of a predecessor is inconsistent.
Predecessor BB#
 has exit state (
), while BB#
 has entry state (
The entry stack state of a successor is inconsistent.
Successor BB#
A return block ends with a FrameSetup.
A return block ends with a nonzero stack adjustment.
MBB has allocable live-in, but isn't entry or landing-pad.
MBB has successor that isn't part of the function.
Inconsistent CFG
MBB is not in the predecessor list of the successor BB#
MBB has predecessor that isn't part of the function.
MBB is not in the successor list of the predecessor BB#
MBB has more than one landing pad successor
MBB exits via unconditional fall-through but doesn't have exactly one CFG successor!
MBB exits via unconditional fall-through but its successor differs from its CFG successor!
MBB exits via unconditional fall-through but ends with a barrier instruction!
MBB exits via unconditional fall-through but has a condition!
MBB exits via unconditional branch but doesn't have exactly one CFG successor!
MBB exits via unconditional branch but the CFG successor doesn't match the actual successor!
MBB exits via unconditional branch but doesn't contain any instructions!
MBB exits via unconditional branch but doesn't end with a barrier instruction!
MBB exits via unconditional branch but the branch isn't a terminator instruction!
MBB conditionally falls through out of function!
MBB exits via conditional branch/fall-through but only has one CFG successor!
MBB exits via conditional branch/fall-through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/fall-through but doesn't have exactly two CFG successors!
MBB exits via conditional branch/fall-through but the CFG successors don't match the actual successors!
MBB exits via conditional branch/fall-through but doesn't contain any instructions!
MBB exits via conditional branch/fall-through but ends with a barrier instruction!
MBB exits via conditional branch/fall-through but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch through but only has one CFG successor!
MBB exits via conditional branch/branch through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/branch but doesn't have exactly two CFG successors!
MBB exits via conditional branch/branch but the CFG successors don't match the actual successors!
MBB exits via conditional branch/branch but doesn't contain any instructions!
MBB exits via conditional branch/branch but doesn't end with a barrier instruction!
MBB exits via conditional branch/branch but the branch isn't a terminator instruction!
MBB exits via conditinal branch/branch but there's no condition!
AnalyzeBranch returned invalid data!
MBB live-in list contains non-physical register
- basic block: BB#
*** Bad machine code: 
 ***
- function:    
- instruction: 
Instruction index out of order
Last instruction was at 
Non-terminator instruction after the first terminator
First terminator was:
Too few operands
 operands expected, but 
 given.
Missing mayLoad flag
Missing mayStore flag
Debug instruction has a slot index
Instruction inside bundle has a slot index
Missing slot index
Too few operands on inline asm
Asm string must be an external symbol
Asm flags must be an immediate
Unknown asm flags
Missing operands in last group
Expected implicit register after groups
- operand 
:   
Explicit definition must be a register
Explicit definition marked as use
Explicit definition marked as implicit
Explicit operand marked as def
Explicit operand marked as implicit
Tied use must be a register
Operand should be tied
Tied def doesn't match MCInstrDesc
Explicit operand should not be tied
Extra explicit operand on non-variadic instruction
Must be tied to a register
Missing tie flags on tied operand
Inconsistent tie links
Explicit def tied to explicit use without tie constraint
Explicit def should be tied to implicit use
Two-address instruction operands must be identical
Illegal subregister index for physical register
Illegal physical register for instruction
 is not a 
 register.
Invalid subregister index for virtual register
Register class 
 does not support subreg index 
Invalid register class for subregister index
 does not fully support subreg index 
No largest legal super class exists.
No matching super-reg register class.
Illegal virtual register for instruction
Expected a 
 register, but got a 
 register
PHI operand is not in the CFG
Instruction loads from dead spill slot
Live stack: 
Instruction stores to dead spill slot
Kill missing from LiveVariables
No live segment at use
 is not live in 
Live range continues after kill flag
Live range: 
Virtual register has no live interval
Using an undefined physical register
Reading virtual register without a def
Using a killed virtual register
Multiple virtual register defs in SSA form
Inconsistent valno->def
Valno 
 is not defined at 
No live segment at def
Live range continues after dead def flag
Virtual register has no Live interval
Block ends before last instruction index
Block ends at 
 last instruction was at 
Virtual register killed in block, but needed live out.
Virtual register 
 is used after the block.
Virtual register def doesn't dominate all uses.
PHI operand is not live-out from predecessor
Missing PHI operand
 is a predecessor according to the CFG.
LiveVariables: Block missing from AliveBlocks
 must be live through the block.
LiveVariables: Block should not be in AliveBlocks
 is not needed live through the block.
Missing live interval for virtual register
 still has defs or uses
Multiple connected components in live interval
: valnos
- interval:    
Valno not live at def and not marked unused
Valno #
Live segment at def has different valno
 is defined at 
 where valno #
 is live
Invalid definition index
PHIDef value is not defined at MBB start
, not at the beginning of BB#
No instruction at def index
Defining instruction does not modify register
Early clobber def must be at an early-clobber slot
Non-PHI, non-early clobber def must be at a register slot
- liverange:    
Foreign valno in live segment
 has a bad valno
Live segment valno is marked unused
Bad start of live segment, no basic block
Live segment must begin at MBB entry or valno def
Bad end of live segment, no basic block
Live segment doesn't end at a valid instruction
Live segment ends at B slot of an instruction
Live segment ending at dead slot spans instructions
Live segment ending at early clobber slot must be redefined by an EC def in the same instruction
Instruction ending live segment doesn't read the register
Register not marked live out of predecessor
 live into BB#
, not live before 
Different value live out of predecessor
 live out of BB#
Valno #
Optimize machine instruction PHIs
opt-phis
disable-phi-elim-edge-splitting
Disable critical edge splitting during PHI elimination
phi-elim-split-all-critical-edges
Split all critical edges during PHI elimination
Eliminate PHI nodes for register allocation
phi-node-elimination
disable-post-ra
Disable Post Regalloc
disable-branch-fold
Disable branch folding
disable-tail-duplicate
Disable tail duplication
disable-early-taildup
Disable pre-register allocation tail duplication
disable-block-placement
Disable probability-driven block placement
enable-block-placement-stats
Collect probability-driven block placement stats
disable-ssc
Disable Stack Slot Coloring
disable-machine-dce
Disable Machine Dead Code Elimination
disable-early-ifcvt
Disable Early If-conversion
disable-machine-licm
Disable Machine LICM
disable-machine-cse
Disable Machine Common Subexpression Elimination
optimize-regalloc
Enable optimized register allocation compilation path.
enable-misched
Enable the machine instruction scheduling pass.
disable-postra-machine-licm
disable-machine-sink
Disable Machine Sinking
disable-lsr
Disable Loop Strength Reduction Pass
disable-constant-hoisting
Disable ConstantHoisting
disable-cgp
Disable Codegen Prepare
disable-copyprop
Disable Copy Propagation pass
print-lsr-output
Print LLVM IR produced by the loop-reduce pass
print-isel-input
Print LLVM IR input to isel pass
print-gc
Dump garbage collector data
verify-machineinstrs
Verify generated machine code
LLVM_VERIFY_MACHINEINSTRS
print-machineinstrs
Print machine instrs
pass-name
option-unspecified
misched-postra
Run MachineScheduler post regalloc (independent of preRA sched)
early-live-intervals
Run live interval analysis earlier in the pipeline
Cannot stop compilation after pass that is not run
*** Code after LSR ***
*** Final LLVM Code input to ISel ***
After Instruction Selection
After ExpandISelPseudos
After PreRegAlloc passes
After PostRegAlloc passes
After PrologEpilogCodeInserter
After ExpandPostRAPseudos
After PreSched2 passes
After PostRAScheduler
After PreEmit passes
After Pre-RegAlloc TailDuplicate
After codegen DCE pass
After ILP optimizations
After Machine LICM, CSE and Sinking passes
After codegen peephole optimization pass
pick register allocator based on -O option
regalloc
Register allocator to use
After Register Allocation
After Machine Scheduling
After Register Allocation, before rewriter
After pre-rewrite passes
After Virtual Register Rewriter
After StackSlotColoring and postra Machine LICM
After BranchFolding
After TailDuplicate
After copy propagation pass
After machine block placement.
Target Pass Configuration
targetpassconfig
Target cannot enable pass
aggressive-ext-opt
Aggressive extension optimization
disable-peephole
Disable the peephole optimizer
Peephole Optimizations
peephole-opts
post-RA-scheduler
Enable scheduling after register allocation
break-anti-dependencies
Break post-RA scheduling anti-dependencies: "critical", "all", or "none"
postra-sched-debugdiv
Debug control MBBs that are scheduled
postra-sched-debugmod
Post RA top-down list latency scheduler
critical
Process Implicit Definitions
processimpdefs
warn-stack-size
Warn for stack size bigger than the given number
Prologue/Epilogue Insertion & Frame Finalization
prologepilog
FixedStack
Stack
JumpTable
ConstantPool
verify-regalloc
Verify during register allocation
Seed Live Regs
fast register allocator
Fast Register Allocator
inline assembly requires more registers than available
ran out of registers during register allocation
split-spill-mode
Spill mode for splitting live ranges
speed
lcr-max-depth
Last chance recoloring max depth
lcr-max-interf
Last chance recoloring maximum number of considered interference at a time
regalloc-csr-first-time-cost
Cost for first time use of callee-saved register.
greedy
greedy register allocator
Greedy Register Allocator
Before greedy register allocator
Spiller
After spilling
After splitting live range around region
Evict
Local Splitting
Global Splitting
After splitting live range around basic blocks
stress-regalloc
Limit all regclasses to N registers
join-liveintervals
Coalesce copies (default=true)
join-splitedges
Coalesce copies on split edges (default=subtarget)
join-globalcopies
Coalesce copies that span blocks (default=subtarget)
verify-coalescing
Verify machine instrs before and after register coalescing
Simple Register Coalescing
simple-register-coalescing
Before register coalescing
After register coalescing
enable-aa-sched-mi
Enable use of AA during MI GAD construction
<entry>
<exit>
dag.
ScheduleDAG::viewGraph is only available in debug builds on 
SJLJ Exception Handling preparation
_Unwind_SjLj_Register
_Unwind_SjLj_Unregister
jbuf_gep
jbuf_fp_gep
jbuf_sp_gep
fn_context
exception_gep
exn_val
exn_selector_gep
exn_selector_val
pers_fn_gep
lsda_addr
lsda_gep
lpad.val
call_site
Berd
Slot index numbering
slotindexes
spill-uses-loop-depth
Spill uses loop depth heuristic
Spill Code Placement Analysis
spill-code-placement
spiller
Spiller to use: (default: standard)
trivial
trivial spiller
inline spiller
no-stack-coloring
Disable stack coloring
protect-from-escaped-allocas
Do not optimize lifetime zones that are broken
Merge disjoint stack slots
stack-coloring
enable-selectiondag-sp
SP_return
CallStackCheckFailBlk
__stack_smash_handler
Insert stack protectors
__guard_local
StackGuardSlot
StackGuard
no-stack-slot-sharing
Suppress slot sharing during stack coloring
ssc-dce-limit
Stack Slot Coloring
stack-slot-coloring
stackslotcoloring
Number of trivially dead stack accesses eliminated
enable-stackmap-liveness
Enable StackMap Liveness Analysis Pass
enable-patchpoint-liveness
Enable PatchPoint Liveness Analysis Pass
StackMap Liveness Analysis
stackmap-liveness
__LLVM_StackMaps
tail-dup-size
Maximum instructions to consider tail duplicating
tail-dup-verify
Verify sanity of PHI instructions during taildup
tail-dup-limit
Tail Duplication
tailduplication
Malformed PHI in BB#
  missing input from predecessor BB#
Warning: malformed PHI in BB#
  extra input from predecessor BB#
  non-existing BB#
Number of tails duplicated
disable-sched-hazard
Disable hazard detection during preRA scheduling
Don't know how to commute: 
misched
post-RA-sched
cannot spill patchpoint subregister operand
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
fmaf
fmal
__powisf2
__powidf2
__powixf2
__powitf2
__extenddftf2
__extendsftf2
__extendsfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfsf2
__truncxfsf2
__trunctfsf2
__truncxfdf2
__trunctfdf2
__fixsfqi
__fixsfhi
__fixsfsi
__fixsfdi
__fixsfti
__fixdfqi
__fixdfhi
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__fixunssfqi
__fixunssfhi
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfqi
__fixunsdfhi
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__nesf2
__nedf2
__netf2
__gesf2
__gedf2
__getf2
__ltsf2
__ltdf2
__lttf2
__lesf2
__ledf2
__letf2
__gtsf2
__gtdf2
__gttf2
__unordsf2
__unorddf2
__unordtf2
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
sincosl
DW.ref.
.data.
.DW.stub
.rodata.str1.
.rodata.str2.
.rodata.str4.
.init_array.
.ctors.
.fini_array.
.dtors.
Objective-C Image Info Version
Objective-C Garbage Collection
Objective-C GC Only
Objective-C Is Simulated
Objective-C Image Info Section
Linker Options
Invalid section specifier '
L_OBJC_IMAGE_INFO
Global variable '
' has an invalid section specifier '
' section type or attributes does not match previous section specifier
__cfstring
/DEFAULTLIB:
.bss.
.gnu.linkonce.b.
.llvm.linkonce.b.
.sbss
.sbss.
.gnu.linkonce.sb.
.llvm.linkonce.sb.
.tdata.
.gnu.linkonce.td.
.llvm.linkonce.td.
.tbss.
.gnu.linkonce.tb.
.llvm.linkonce.tb.
.text.
.rodata.
.data.rel.local.
.data.rel.
.data.rel.ro.local.
.data.rel.ro.
no-frame-pointer-elim-non-leaf
%noreg
%vreg
%physreg
:sub(
Unit~
BadUnit~
schedmodel
Use TargetSchedModel for latency lookup
scheditins
Use InstrItineraryData for latency lookup
twoaddr-reschedule
Coalesce copies by rescheduling (default=true)
Two-Address instruction pass
twoaddressinstruction
After two-address instruction pass
Remove unreachable blocks from the CFG
unreachableblockelim
Remove unreachable machine basic blocks
unreachable-mbb-elimination
********** REGISTER MAP **********
 -> fi#
Virtual Register Map
virtregmap
Virtual Register Rewriter
virtregrewriter
x86_fp80
fp128
ppc_fp128
label
metadata
x86_mmx
%"type 
 addrspace(
<null operand!>
 singlethread
 <bad ordering 
 unordered
 monotonic
 acquire
 release
 acq_rel
 seq_cst
; ModuleID = '
target datalayout = "
target triple = "
module asm "
<empty name> 
 = !{
<badref>
; Materializable
external 
addrspace(
unnamed_addr 
externally_initialized 
constant 
global 
, section "
<<nameless>> = 
alias 
 <<NULL ALIASEE>>
 = type 
; Function Attrs: 
declare 
define 
 unnamed_addr
 section "
 align 
 gc "
 prefix 
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
<badref> = 
tail 
 atomic
 personality 
          cleanup
          catch 
          filter 
 void
          to 
 unwind 
, inalloca
, !<unknown kind #
 = metadata 
attributes #
 = { 
<null Type>
printing a <null> value
asm 
sideeffect 
alignstack 
inteldialect 
", "
private 
linker_private 
linker_private_weak 
internal 
linkonce 
linkonce_odr 
weak 
weak_odr 
common 
appending 
extern_weak 
available_externally 
hidden 
protected 
dllimport 
dllexport 
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
fastcc
coldcc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
x86_cdeclmethodcc
intel_ocl_bicc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
ptx_kernel
ptx_device
x86_64_sysvcc
x86_64_win64cc
spir_func
spir_kernel
 fast
 nnan
 ninf
 nsz
 arcp
 nuw
 nsw
 exact
 inbounds
 <unknown operation 
 xchg
 add
 sub
 and
 nand
 xor
 max
 min
 umax
 umin
; [ DW_TAG_user_base ]
zeroinitializer
blockaddress(
<placeholder or erroneous Constant>
sanitize_address
alwaysinline
builtin
byval
inalloca
inlinehint
inreg
minsize
naked
nest
noalias
nobuiltin
nocapture
noduplicate
noimplicitfloat
noinline
nonlazybind
noredzone
noreturn
nounwind
optnone
optsize
readnone
readonly
returned
returns_twice
signext
sspreq
sspstrong
sret
sanitize_thread
sanitize_memory
uwtable
zeroext
cold
alignstack
PAL[
  { 
llvm.x86.sse2.pcmpeq.
llvm.x86.avx2.pcmpeq.
pcmpeq
llvm.x86.sse2.pcmpgt.
llvm.x86.avx2.pcmpgt.
pcmpgt
llvm.x86.avx.movnt.dq.256
llvm.x86.avx.movnt.ps.256
llvm.x86.avx.movnt.pd.256
cast
llvm.x86.xop.vpcom
llvm.x86.sse42.crc32.64.8
llvm.x86.avx.vpermil.pd.256
llvm.x86.avx.vpermil.pd
llvm.x86.avx.vpermil.ps
llvm.ctlz.
LLVM_DEBUG_METADATA_VERSION_OFFSET
Could not parse the environment variable LLVM_DEBUG_METADATA_VERSION_OFFSET="%s" as a 32-bit integer.
arm.neon.vclz
arm.neon.vcnt
ctlz.
cttz.
objectsize.
x86.sse2.pcmpeq.
x86.sse2.pcmpgt.
x86.avx2.pcmpeq.
x86.avx2.pcmpgt.
x86.avx.vpermil.
x86.avx.movnt.dq.256
x86.avx.movnt.pd.256
x86.avx.movnt.ps.256
x86.sse42.crc32.64.8
x86.xop.vpcom
x86.sse41.ptest
x86.sse41.ptestc
x86.sse41.ptestz
x86.sse41.ptestnzc
x86.xop.vfrcz.ss
x86.xop.vfrcz.sd
x86.fma4.
llvm.x86.fma
 at line 
stack size limit exceeded (
ignoring debug info with an invalid version (
decltype(nullptr)
-m:o
-m:e
-m:w
Bad DataLayout ctor used.  Tool did not specify a DataLayout to use?
-m:m
Data Layout
datalayout
not a number, or does not fit in an unsigned int
 [unbounded]
lang 0x
 :: 
 [line 
, size 
, align 
, offset 
, enc 
 [private]
 [protected]
 [artificial]
 [decl]
 [def]
 [vector]
 [static]
 [reference]
 [rvalue reference]
 [from 
 elements]
 [local]
 [scope 
 [piece, size 
, properties 
llvm.dbg.value
llvm.dbg.
Debug Info Version
 @[ 
verify-dom-info
Verify dominator info (time consuming)
=============================--------------------------------
Inorder PostDominator Tree: 
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
DominatorTree is not up to date!
Computed:
Actual:
Dominator Tree Construction
domtree
rm64.udiv.
rm64.stxr.
rm64.sisd.recp.
rm64.sisd.fmulx.
rm64.sisd.fabd.
rm64.sdiv.
rm64.neon.vsri.
rm64.neon.vsli.
rm64.neon.vcvtfxu2fp.
rm64.neon.vcvtfxs2fp.
rm64.neon.vcvtfp2fxu.
rm64.neon.vcvtfp2fxs.
rm64.neon.vcopy.lane.
rm64.neon.usqadd.
rm64.neon.ushll.
rm64.neon.ushl.
rm64.neon.ursqrte.
rm64.neon.urshr.
rm64.neon.urshl.
rm64.neon.urhadd.
rm64.neon.urecpe.
rm64.neon.uqxtn.
rm64.neon.uqsub.
rm64.neon.uqshrn.
rm64.neon.uqshli.
rm64.neon.uqshl.
rm64.neon.uqrshrn.
rm64.neon.uqrshl.
rm64.neon.uqadd.
rm64.neon.umull.
rm64.neon.uminv.
rm64.neon.uminp.
rm64.neon.umin.
rm64.neon.umaxv.
rm64.neon.umaxp.
rm64.neon.umax.
rm64.neon.uhsub.
rm64.neon.uhadd.
rm64.neon.uaddv.
rm64.neon.uaddlv.
rm64.neon.uaddlp.
rm64.neon.uabdl.
rm64.neon.uabd.
rm64.neon.tbx4.
rm64.neon.tbx3.
rm64.neon.tbx2.
rm64.neon.tbx1.
rm64.neon.tbl4.
rm64.neon.tbl3.
rm64.neon.tbl2.
rm64.neon.tbl1.
rm64.neon.subhn.
rm64.neon.st4lane.
rm64.neon.st4.
rm64.neon.st3lane.
rm64.neon.st3.
rm64.neon.st2lane.
rm64.neon.st2.
rm64.neon.sshll.
rm64.neon.sshl.
rm64.neon.srshr.
rm64.neon.srshl.
rm64.neon.srhadd.
rm64.neon.sqxtun.
rm64.neon.sqxtn.
rm64.neon.sqsub.
rm64.neon.sqshrun.
rm64.neon.sqshrn.
rm64.neon.sqshlu.
rm64.neon.sqshli.
rm64.neon.sqshl.
rm64.neon.sqrshrun.
rm64.neon.sqrshrn.
rm64.neon.sqrshl.
rm64.neon.sqrdmulh.
rm64.neon.sqneg.
rm64.neon.sqdmull.
rm64.neon.sqdmulh.
rm64.neon.sqadd.
rm64.neon.sqabs.
rm64.neon.smull.
rm64.neon.sminv.
rm64.neon.sminp.
rm64.neon.smin.
rm64.neon.smaxv.
rm64.neon.smaxp.
rm64.neon.smax.
rm64.neon.shsub.
rm64.neon.shrn.
rm64.neon.shll.
rm64.neon.shadd.
rm64.neon.scalar.uqxtn.
rm64.neon.scalar.sqxtun.
rm64.neon.scalar.sqxtn.
rm64.neon.saddv.
rm64.neon.saddlv.
rm64.neon.saddlp.
rm64.neon.sabdl.
rm64.neon.sabd.
rm64.neon.rsubhn.
rm64.neon.rshrn.
rm64.neon.rbit.
rm64.neon.raddhn.
rm64.neon.pmull.
rm64.neon.pmul.
rm64.neon.ld4r.
rm64.neon.ld4lane.
rm64.neon.ld4.
rm64.neon.ld3r.
rm64.neon.ld3lane.
rm64.neon.ld3.
rm64.neon.ld2r.
rm64.neon.ld2lane.
rm64.neon.ld2.
rm64.neon.frsqrts.
rm64.neon.frsqrte.
rm64.neon.frintz.
rm64.neon.frintx.
rm64.neon.frintp.
rm64.neon.frintn.
rm64.neon.frintm.
rm64.neon.frinti.
rm64.neon.frinta.
rm64.neon.frecps.
rm64.neon.frecpe.
rm64.neon.fmulx.
rm64.neon.fminv.
rm64.neon.fminp.
rm64.neon.fminnmv.
rm64.neon.fminnmp.
rm64.neon.fminnm.
rm64.neon.fmin.
rm64.neon.fmaxv.
rm64.neon.fmaxp.
rm64.neon.fmaxnmv.
rm64.neon.fmaxnmp.
rm64.neon.fmaxnm.
rm64.neon.fmax.
rm64.neon.fcvtzu.
rm64.neon.fcvtzs.
rm64.neon.fcvtxn.
rm64.neon.fcvtpu.
rm64.neon.fcvtps.
rm64.neon.fcvtnu.
rm64.neon.fcvtns.
rm64.neon.fcvtmu.
rm64.neon.fcvtms.
rm64.neon.fcvtau.
rm64.neon.fcvtas.
rm64.neon.faddp.
rm64.neon.facgt.
rm64.neon.facge.
rm64.neon.fabd.
rm64.neon.cmtst.
rm64.neon.cls.
rm64.neon.addp.
rm64.neon.addhn.
rm64.neon.abs.
rm64.ldxr.
rm.vcvtru.
rm.vcvtr.
rm.strex.
rm.neon.vst4lane.
rm.neon.vst4.
rm.neon.vst3lane.
rm.neon.vst3.
rm.neon.vst2lane.
rm.neon.vst2.
rm.neon.vst1.
rm.neon.vshiftu.
rm.neon.vshifts.
rm.neon.vshiftn.
rm.neon.vshiftlu.
rm.neon.vshiftls.
rm.neon.vshiftins.
rm.neon.vrsubhn.
rm.neon.vrsqrts.
rm.neon.vrsqrte.
rm.neon.vrshiftu.
rm.neon.vrshifts.
rm.neon.vrshiftn.
rm.neon.vrintz.
rm.neon.vrintx.
rm.neon.vrintp.
rm.neon.vrintn.
rm.neon.vrintm.
rm.neon.vrinta.
rm.neon.vrhaddu.
rm.neon.vrhadds.
rm.neon.vrecps.
rm.neon.vrecpe.
rm.neon.vraddhn.
rm.neon.vqsubu.
rm.neon.vqsubs.
rm.neon.vqshiftu.
rm.neon.vqshiftsu.
rm.neon.vqshifts.
rm.neon.vqshiftnu.
rm.neon.vqshiftnsu.
rm.neon.vqshiftns.
rm.neon.vqrshiftu.
rm.neon.vqrshifts.
rm.neon.vqrshiftnu.
rm.neon.vqrshiftnsu.
rm.neon.vqrshiftns.
rm.neon.vqrdmulh.
rm.neon.vqneg.
rm.neon.vqmovnu.
rm.neon.vqmovnsu.
rm.neon.vqmovns.
rm.neon.vqdmull.
rm.neon.vqdmulh.
rm.neon.vqaddu.
rm.neon.vqadds.
rm.neon.vqabs.
rm.neon.vpminu.
rm.neon.vpmins.
rm.neon.vpmaxu.
rm.neon.vpmaxs.
rm.neon.vpaddlu.
rm.neon.vpaddls.
rm.neon.vpadd.
rm.neon.vpadalu.
rm.neon.vpadals.
rm.neon.vmulp.
rm.neon.vmullu.
rm.neon.vmulls.
rm.neon.vmullp.
rm.neon.vminu.
rm.neon.vmins.
rm.neon.vminnm.
rm.neon.vmaxu.
rm.neon.vmaxs.
rm.neon.vmaxnm.
rm.neon.vld4lane.
rm.neon.vld4.
rm.neon.vld3lane.
rm.neon.vld3.
rm.neon.vld2lane.
rm.neon.vld2.
rm.neon.vld1.
rm.neon.vhsubu.
rm.neon.vhsubs.
rm.neon.vhaddu.
rm.neon.vhadds.
rm.neon.vcvtpu.
rm.neon.vcvtps.
rm.neon.vcvtnu.
rm.neon.vcvtns.
rm.neon.vcvtmu.
rm.neon.vcvtms.
rm.neon.vcvtfxu2fp.
rm.neon.vcvtfxs2fp.
rm.neon.vcvtfp2fxu.
rm.neon.vcvtfp2fxs.
rm.neon.vcvtau.
rm.neon.vcvtas.
rm.neon.vcnt.
rm.neon.vclz.
rm.neon.vcls.
rm.neon.vbsl.
rm.neon.vabs.
rm.neon.vabdu.
rm.neon.vabds.
rm.neon.sha256su1.
rm.neon.sha256su0.
rm.neon.sha256h2.
rm.neon.sha256h.
rm.neon.sha1su1.
rm.neon.sha1su0.
rm.neon.sha1p.
rm.neon.sha1m.
rm.neon.sha1h.
rm.neon.sha1c.
rm.neon.aesmc.
rm.neon.aesimc.
rm.neon.aese.
rm.neon.aesd.
rm.ldrex.
nnotation.
arch64.neon.xtn.
arch64.neon.vurshr.
arch64.neon.vuqshrn.
arch64.neon.vuqrshrn.
arch64.neon.vuqadd.
arch64.neon.vtstd.
arch64.neon.vtbx4.
arch64.neon.vtbx3.
arch64.neon.vtbx2.
arch64.neon.vtbx1.
arch64.neon.vtbl4.
arch64.neon.vtbl3.
arch64.neon.vtbl2.
arch64.neon.vtbl1.
arch64.neon.vst1x4.
arch64.neon.vst1x3.
arch64.neon.vst1x2.
arch64.neon.vsrshr.
arch64.neon.vsri.
arch64.neon.vsqshrun.
arch64.neon.vsqshrn.
arch64.neon.vsqshlu.
arch64.neon.vsqrshrun.
arch64.neon.vsqrshrn.
arch64.neon.vsqadd.
arch64.neon.vsli.
arch64.neon.vrsqrts.
arch64.neon.vrsqrte.
arch64.neon.vrshrn.
arch64.neon.vrecpx.
arch64.neon.vrecps.
arch64.neon.vrecpe.
arch64.neon.vqshlus.n.
arch64.neon.vqshlu.n.
arch64.neon.vqshlu.
arch64.neon.vqshls.n.
arch64.neon.vqshls.
arch64.neon.vqrshlu.
arch64.neon.vqrshls.
arch64.neon.vqdmlsl.
arch64.neon.vqdmlal.
arch64.neon.vpminnm.
arch64.neon.vpmin.
arch64.neon.vpmaxnm.
arch64.neon.vpmax.
arch64.neon.vpfminnm.
arch64.neon.vpfmaxnm.
arch64.neon.vpfadd.
arch64.neon.vmulx.
arch64.neon.vminnm.
arch64.neon.vmaxnm.
arch64.neon.vld1x4.
arch64.neon.vld1x3.
arch64.neon.vld1x2.
arch64.neon.vcvtzu.
arch64.neon.vcvtzs.
arch64.neon.vcvtxn.
arch64.neon.vcvtint2fpu.
arch64.neon.vcvtint2fps.
arch64.neon.vcvtfxu2fp.n.
arch64.neon.vcvtfxs2fp.n.
arch64.neon.vcvtfp2fxu.n.
arch64.neon.vcvtfp2fxs.n.
arch64.neon.vcltz.
arch64.neon.vclez.
arch64.neon.vchs.
arch64.neon.vchi.
arch64.neon.vcgt.
arch64.neon.vcge.
arch64.neon.vceq.
arch64.neon.vcagt.
arch64.neon.vcage.
arch64.neon.vaddv.
arch64.neon.vabd.
arch64.neon.usqadd.
arch64.neon.uminv.
arch64.neon.umaxv.
arch64.neon.uaddlv.
arch64.neon.suqadd.
arch64.neon.sminv.
arch64.neon.smaxv.
arch64.neon.saddlv.
arch64.neon.rbit.
arch64.neon.fsqrt.
arch64.neon.frintn.
arch64.neon.fcvtzu.
arch64.neon.fcvtzs.
arch64.neon.fcvtpu.
arch64.neon.fcvtps.
arch64.neon.fcvtnu.
arch64.neon.fcvtns.
arch64.neon.fcvtmu.
arch64.neon.fcvtms.
arch64.neon.fcvtau.
arch64.neon.fcvtas.
arch64.neon.fcltz.
arch64.neon.fclez.
arch64.neon.fchs.
arch64.neon.fchi.
arch64.neon.fcgt.
arch64.neon.fcge.
arch64.neon.fceq.
arch64.neon.fcagt.
arch64.neon.fcage.
lrex
crr2
rc32
drexd
trexd
crc32c
4.clrex
rm64.crc32
et.fpscr
4.crc32c
rm.neon.vtb
rm.neon.vacg
rch64.neon.v
just.trampoline
m64.
rypto.aes
isd.fcvtxn
rch64.neon.
eon.vcvt
p2hf
f2fp
hread.pointer
4.crypto.
esmc
cvtxn
m64.crypto.aesimc
xnmv
nnmv
shld
hld.n
rypto.sha
rch64.neon.vs
m64.crypto.sha256h2
ull.p64
srad
m64.crypto.sha256su
rm64.neon.sqdmulls.scalar
swap.
ttz.
tpop.
tlz.
opysign.
onvertuu.
onvertus.
onvertuif.
onvertsu.
onvertss.
onvertsif.
onvertfui.
onvertfsi.
onvertff.
eil.
onvert.to.fp16
uda.syncthreads
onvert.from.fp16
g.value
bugtrap
nothing
bg.declare
xpect.
xp2.
warf.cfa
jlj.lsda
eturn.i
ypeid.for
jlj.setjmp
nwind.init
h.sjlj.longjmp
h.sjlj.callsite
xperimental.stackmap
h.sjlj.functioncontext
xperimental.patchpoint.i64
xperimental.patchpoint.void
muladd.
loor.
abs.
lt.rounds
rameaddress
cwrite
exagon.
2.or
.orn
.lsli
.andnp
.or.or
ccii
pyui
acci
mac2
r.or
mpyw
2.brevp
irc.ldd
ssat
dsat
egsat
bsat
cmpeq
nd.or
accii
ubacc
raddh
pmpyh
or.or
nsert
ackhl
negh
r.ori
arity
ddpsat
avgh
ubhs
ddub
adub
mpbgt
itpack
r.andn
pyu.up
ac2es
adduh
or.and
lbnorm
nsertp
arityp
sathb
cnegh
ddaddi
lbaddi
xtract
r.andi
ubaddi
ombinew
oundsat
dduhs
ubuhs
itsplit
gtui
odwrapu
mpneqi
und.r
lbmatch
.vaddhubs
.bitsclri
nd.andn
mplteui
bits
a.sc
acs.s
ysu.up
c.s0
y.s0
or.xacc
cbsu
ybsu
lrbit.
xtractu
.r.v
tbit.
sathub
stbit.
lign
rotate
platr
xtractp
r.andix
ombineii
ddb.map
ubb.map
itspliti
mbine
ound.r
.pxfer.map
.nbitsclri
onv.
.lib
csc.s
acsc.s
mmpy
p.s1
bsdiff
cs.s
ys.s
c2s.s
y2s.s
.whc
mpyw.acc
xtractup
nsert.rp
splice
tstbit.
crotate
ddsub
ubadd
.popcountp
2.combine.
2.conv.
mpyrsc.s
pmpy
s.s0
u.s0
.rs1
s.rs
mpyrs.s
.add
mpyh.acc
ertp.rp
erleave
rndpackwh
xtract.rp
sl.ri
sr.ri
ddsubhr
ubaddhr
.asrhub.sat
ddh.
ubh.
ddub.acc
adub.acc
oundscheck
cmpbeq.any
4.fastcorner9
yud.
.s0c
dasl.rrri
xtractu.rp
ogglebit.
rndpackwhs
xtractp.rp
ubi.
4.round.r
.sat
2.vrcmpys.s1rp
sl.i.
.xacc
einterleave
xtractup.rp
sr.i.
p.s1.sat
mpy2s.s
pack
c.up.s1.sat
yri.addr.u2
ac.up.s1.sat
.vsat
b.nopack
h.nopack
.vrcrotate.acc
.to.SXTHI.asrh
.chop
cc.s0
ac.s0
nd.s0
c.s0.sat.
.sat.
cmpys.acc.s1
.vrmpy
h.acc.s
.svw.trun
ub.nopack
uh.nopack
16.sat.
4.fastcorner9.not
2.mpyud.
exagon.M2.mpy.
cc.sat.
ac.sat.
at.rnd.
exagon.S5.vasrhrnd.goodsyntax
exagon.S2.tableidx
.goodsyntax
exagon.S2.asr.i.
.rnd.goodsyntax
exagon.S5.asrhub.rnd.sat.goodsyntax
nvariant.end
t.trampoline
ariant.start
og2.
og10.
ongjmp
ifetime.end
ifetime.start
emset.
emmove.
emcpy.
ips.l
ips.
or.v
ri.b
ddsp
rdsp
di.b
pend
trev
cmsa
hlip
cnt.
shf.
ori.b
lri.
nzi.b
egi.
int.
sve.
ubv.
l.q.
epend
epl.
lat.
sq.s.w
h.qb
osge32
.w.ph
xtr.
lass.
x.a.
n.a.
sqrt.
nsert.
d.q.
ub.q.
s.ph
.s.w
l.s.w
a.r.w
lati.
sq.s.
.r.w
q.ph
xtr.rs.w
ddr.q.
ubr.q.
ackrl.ph
l.s.ph
a.r.
h.r.ph
h.r.qb
mpu.
q.qb
u.h.qb
trunc.
.rs.ph
a.w.ph
addu.w.qb
mpgu.
w.ph
.l.w
aq.s.w.ph
recr
qb.ph
.ph.w
mpgdu.
qx.s.w.ph
aq.sa.w.ph
q.w.ph
q.qb.ph
qx.sa.w.ph
q.s.w.ph
receu.ph.qb
uleu.s.ph.qb
u.ph.qb
.ph.qb
sra.ph.w
.rs.ph.w
ips.prec
qu.ph.qb
qu.s.qb.ph
ips.precr.sra.r.ph.w
vvm.texsurf.handle.internal.
vvm.texsurf.handle.
vvm.reflect.
vvm.ptr.shared.to.gen.
vvm.ptr.local.to.gen.
vvm.ptr.global.to.gen.
vvm.ptr.gen.to.shared.
vvm.ptr.gen.to.param.
vvm.ptr.gen.to.local.
vvm.ptr.gen.to.global.
vvm.ptr.gen.to.constant.
vvm.ptr.constant.to.gen.
vvm.move.ptr.
vvm.ldu.global.p.
vvm.ldu.global.i.
vvm.ldu.global.f.
vvm.ldg.global.p.
vvm.ldg.global.i.
vvm.ldg.global.f.
vvm.compiler.warn.
vvm.compiler.error.
vvm.atomic.load.inc.32.
vvm.atomic.load.dec.32.
vvm.atomic.load.add.f32.
earbyint.
vvm.h2f
vvm.prmt
vvm.
bs.i
lz.i
ad.i
bs.ll
z.ll
opc.i
d.ui
rt.f
oor.
x.ull
n.ull
opc.ll
ound.
runc.
dd.r
arrier0
ull.r
ohi.i2d
ve.i
4.ui
cp.r
mbar.gl
lhi.ull
rt.r
epth
idth
eil.ftz.f
2f.r
.ftz
.rn.ftz
bs.ftz.f
x.ftz.f
n.ftz.f
mbar.
ve.float
otate.b
turate.
q.height
xq.height
rrier0.or
tcast.
oor.ftz.f
ove.double
ound.ftz.f
runc.ftz.f
.ftz.f
rrier0.and
os.approx.f
pprox.f
x2.approx.
g2.approx.
ul.r
in.approx.f
arrier0.popc
qrt.
sspacep.
onst
ocal
sqrt.approx.
turate.ftz.f
q.array.size
ap.lo.hi.b64
xq.array.size
pacep.
lobal
hared
ypep.
mpler
rface
exture
uld.
d.i8.
xq.num.samples
os.approx.ftz.f
iv.approx.ftz.f
x2.approx.ftz.f
g2.approx.ftz.f
p.approx.ftz.d
tate.right.b64
n.approx.ftz.f
.clamp
d.v4
rt.approx.ftz.f
6.clamp
2.clamp
4.clamp
.channel.order
d.i8.trap
xq.channel.order
sqrt.approx.ftz.f
6.trap
2.trap
ex.cube.v4
32.f32
ead.ptx.sreg.tid.
i8.trap
ld4.
.2d.v4
ead.ptx.sreg.ntid.
ust.
ead.ptx.sreg.
taid.
nvreg
d.array.i8.
.channel.data.type
t.b.
d.grad.v4
hannel.data.type
um.mipmap.levels
ctaid.
arpsize
d.array.i
rray.v4
evel.v4
d.level.v4
vvm.su
d.array.
d.array.i8.trap
d.array.v
ube.
nified.
ex.unified.cube.v4
ust.b.
d.array.grad.v4
d4.unified.
vvm.tex.
d.array.level.v4
vvm.tex.unified.
ube.array.level.v4
vvm.tex.unified.cube.
vvm.tex.unified.cube.array.level.v4
bjectsize.
tr.annotation.
pc.mtctr.
owi.
marker
efetch
pc.dcb
pc.dcbtst
ar.sync
ead.pm
tx.read.smid
tx.read.
smid
c.altivec.
x.read.
ridid
aneid
tid.
arpid
ock64
aid.
warpid
stst
tvxl
x.read.nctaid.
pc.altivec.
vscr
pc.altivec.v
mpbfp
ogefp
ddfp
c.altivec.v
xptefp
msubfp
x.read.lanemask.
mpbfp.p
addshs
adduhm
sqrtefp
fp.p
hraddshs
pc.is.decremented.ctr.nonzero
eturnaddress
00.read.tgid.
adcyclecounter
600.read.tidig.
600.read.ngroups.
600.read.local.size.
600.read.global.size.
sub.with.overflow.
mul.with.overflow.
add.with.overflow.
etjmp
gsetjmp
acksave
iglongjmp
tackrestore
tackprotector
tackprotectorcheck
a_end
a_copy
a_start
ar.annotation
core.testwct.
core.testct.
core.syncr.
core.setv.
core.settw.
core.setrdy.
core.setpt.
core.setpsc.
core.setev.
core.setd.
core.setclk.
core.setc.
core.peek.
core.outt.
core.outshr.
core.outct.
core.out.
core.msync.
core.mjoin.
core.int.
core.inshr.
core.initsp.
core.initpc.
core.initlr.
core.initdp.
core.initcp.
core.inct.
core.in.
core.getts.
core.getst.
core.getr.
core.freer.
core.endin.
core.eeu.
core.chkct.
86.int
86.xend
86.xtest
bort
egin
ore.
6.mmx.por
ha1msg
ore.bitrev
emms
andn
clmulqdq
and.
eed.
exte
nds4
vx2.permd
mx.p
a256msg
dd.ss
iv.ss
l.ss
ence
b.ss
.pause
.mwait
1.dpp
op.vp
dnow.p
vx2.p
rmps
zhi.
dds.
xtr.w
nsr.w
d.bw
sbase.
a256rnds2
dmxcsr
shuf.w
mxcsr
dd.sd
iv.sd
l.sd
ub.sd
.ldu.dq
a.extrq
ore.waitevent
dnow
pfsubr
sni.aes
vzeroall
psadbw
lendw
uf.b
12.kor.w
mi.bextr.
skmovq
vnt.dq
dus.
dd.wd
vmskb
ubus.
lflush
lh.w
dd.p
ub.p
onitor
.extrqi
e3.pabs.
op.v
rcz.
ore.checkevent
vgusb
ulhrw
nacc
wapd
p.ps.256
test
ovntdqa
lendvb
dd.sw
ub.sw
12.k
nd.w
ot.w
or.w
ma.vfm
lignr.b
npck
q.ss
s2si
ovmsk.ps
toreu.ps
ddus.
lendp
blendw
.insertq
e3.p
cvtp
2ps.
2ph.
addu
cswd
qit1
.pfpnacc
mp.p
.256
du.dq.256
cp.ps.256
zeroupper
ndn.w
nor.w
l.dq
qrt.s
ma.vfnm
mineq.ss
642ss
2si64
comi
q.sd
d2si
ovmsk.pd
tore
.addsub.p
lendvp
nsertps
ckusdw
estnzc
nsertqi
ovnt.s
e3.ph
bm.bextri.u
mov.256
rmil2p
ssdq
csswd
askload.p
qrt.p
testnzc.p
ather.
askload.
ul.hr.sw
l.dq.bs
perm2i128
movzx
vttss2si64
comineq.ss
mineq.sd
642sd
1.extractps
eclast
nclast
lend.p
askstore.p
testnzc.256
und.p
qrt.ps.256
askstore.
lendd.
add.ub.sw
v.d.256
inserti128
2usi
si2s
unpck.bw
ddsub.p
ubadd.p
vttsd2si64
askmov.dqu
comineq.sd
.phminposuw
.crc32.32.8
.128
op.vfrcz.p
lendv.p
2dq.256
q2.p
ovmsk.p
toreu.
q.256
roadcast.ss
ermilvar.p
.vextracti128
vtts
ortest
w.128
b.128
swb.128
ovmskb.128
2.crc32.
4.64
uf.b.128
2.ps.256
2.pd.256
2usi64
si642s
ndscale.s
.512
42.pcmp
dd.sw.128
ub.sw.128
op.vpermil2p
broadcasti128
cp14.p
se42.pcmp
stri
maskstore.p
12.vcvtp
2ps.512
2ph.512
sse3.pmul.hr.sw.128
sni.aeskeygenassist
roadcast.s
f128.
i.256
lvar.p
.vbroadcast.ss.ps
sqrt14.p
sse3.pmadd.ub.sw.128
86.avx
vinsertf128.
ask.
catter.
vextractf128.
12.mask.
lend.
l.dq.512
86.avx512.
q.512
s.512
2dq.512
mpeq.
ulu.dq.512
estm.
broadcast.s
vbroadcastf128.p
.vbroadcast.s
.pd.256
.ps.256
12.mask.cvt
2udq.512
dq2p
.mask.512
ask.c
nflict.
.i32.512
.i64.512
ask.rndscale.p
.pd.512
.ps.512
86.avx512.mask.pbroadcast.
.gpr.512
pr.512
em.512
not_intrinsic
llvm.aarch64.neon.fcage
llvm.aarch64.neon.fcagt
llvm.aarch64.neon.fceq
llvm.aarch64.neon.fcge
llvm.aarch64.neon.fcgt
llvm.aarch64.neon.fchi
llvm.aarch64.neon.fchs
llvm.aarch64.neon.fclez
llvm.aarch64.neon.fcltz
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.frintn
llvm.aarch64.neon.fsqrt
llvm.aarch64.neon.rbit
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.sha1c
llvm.aarch64.neon.sha1m
llvm.aarch64.neon.sha1p
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.sminv
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.uminv
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vabd
llvm.aarch64.neon.vabs
llvm.aarch64.neon.vacgeq
llvm.aarch64.neon.vacgtq
llvm.aarch64.neon.vaddds
llvm.aarch64.neon.vadddu
llvm.aarch64.neon.vaddv
llvm.aarch64.neon.vcage
llvm.aarch64.neon.vcagt
llvm.aarch64.neon.vceq
llvm.aarch64.neon.vcge
llvm.aarch64.neon.vcgt
llvm.aarch64.neon.vchi
llvm.aarch64.neon.vchs
llvm.aarch64.neon.vclez
llvm.aarch64.neon.vcltz
llvm.aarch64.neon.vcvtfp2fxs.n
llvm.aarch64.neon.vcvtfp2fxu.n
llvm.aarch64.neon.vcvtfxs2fp.n
llvm.aarch64.neon.vcvtfxu2fp.n
llvm.aarch64.neon.vcvtint2fps
llvm.aarch64.neon.vcvtint2fpu
llvm.aarch64.neon.vcvtxn
llvm.aarch64.neon.vcvtzs
llvm.aarch64.neon.vcvtzu
llvm.aarch64.neon.vld1x2
llvm.aarch64.neon.vld1x3
llvm.aarch64.neon.vld1x4
llvm.aarch64.neon.vmaxnm
llvm.aarch64.neon.vmaxnmv
llvm.aarch64.neon.vmaxv
llvm.aarch64.neon.vminnm
llvm.aarch64.neon.vminnmv
llvm.aarch64.neon.vminv
llvm.aarch64.neon.vmull.p64
llvm.aarch64.neon.vmulx
llvm.aarch64.neon.vneg
llvm.aarch64.neon.vpadd
llvm.aarch64.neon.vpfadd
llvm.aarch64.neon.vpfmaxnm
llvm.aarch64.neon.vpfminnm
llvm.aarch64.neon.vpmax
llvm.aarch64.neon.vpmaxnm
llvm.aarch64.neon.vpmin
llvm.aarch64.neon.vpminnm
llvm.aarch64.neon.vqdmlal
llvm.aarch64.neon.vqdmlsl
llvm.aarch64.neon.vqrshls
llvm.aarch64.neon.vqrshlu
llvm.aarch64.neon.vqshls
llvm.aarch64.neon.vqshls.n
llvm.aarch64.neon.vqshlu
llvm.aarch64.neon.vqshlu.n
llvm.aarch64.neon.vqshlus.n
llvm.aarch64.neon.vrecpe
llvm.aarch64.neon.vrecps
llvm.aarch64.neon.vrecpx
llvm.aarch64.neon.vrshlds
llvm.aarch64.neon.vrshldu
llvm.aarch64.neon.vrshrn
llvm.aarch64.neon.vrsqrte
llvm.aarch64.neon.vrsqrts
llvm.aarch64.neon.vrsrads.n
llvm.aarch64.neon.vrsradu.n
llvm.aarch64.neon.vshld.n
llvm.aarch64.neon.vshlds
llvm.aarch64.neon.vshldu
llvm.aarch64.neon.vshrds.n
llvm.aarch64.neon.vshrdu.n
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsqadd
llvm.aarch64.neon.vsqrshrn
llvm.aarch64.neon.vsqrshrun
llvm.aarch64.neon.vsqshlu
llvm.aarch64.neon.vsqshrn
llvm.aarch64.neon.vsqshrun
llvm.aarch64.neon.vsrads.n
llvm.aarch64.neon.vsradu.n
llvm.aarch64.neon.vsri
llvm.aarch64.neon.vsrshr
llvm.aarch64.neon.vst1x2
llvm.aarch64.neon.vst1x3
llvm.aarch64.neon.vst1x4
llvm.aarch64.neon.vsubds
llvm.aarch64.neon.vsubdu
llvm.aarch64.neon.vtbl1
llvm.aarch64.neon.vtbl2
llvm.aarch64.neon.vtbl3
llvm.aarch64.neon.vtbl4
llvm.aarch64.neon.vtbx1
llvm.aarch64.neon.vtbx2
llvm.aarch64.neon.vtbx3
llvm.aarch64.neon.vtbx4
llvm.aarch64.neon.vtstd
llvm.aarch64.neon.vuqadd
llvm.aarch64.neon.vuqrshrn
llvm.aarch64.neon.vuqshrn
llvm.aarch64.neon.vurshr
llvm.aarch64.neon.xtn
llvm.adjust.trampoline
llvm.annotation
llvm.arm64.clrex
llvm.arm64.crc32b
llvm.arm64.crc32cb
llvm.arm64.crc32ch
llvm.arm64.crc32cw
llvm.arm64.crc32cx
llvm.arm64.crc32h
llvm.arm64.crc32w
llvm.arm64.crc32x
llvm.arm64.crypto.aesd
llvm.arm64.crypto.aese
llvm.arm64.crypto.aesimc
llvm.arm64.crypto.aesmc
llvm.arm64.crypto.sha1c
llvm.arm64.crypto.sha1h
llvm.arm64.crypto.sha1m
llvm.arm64.crypto.sha1p
llvm.arm64.crypto.sha1su0
llvm.arm64.crypto.sha1su1
llvm.arm64.crypto.sha256h
llvm.arm64.crypto.sha256h2
llvm.arm64.crypto.sha256su0
llvm.arm64.crypto.sha256su1
llvm.arm64.ldxp
llvm.arm64.ldxr
llvm.arm64.neon.abs
llvm.arm64.neon.addhn
llvm.arm64.neon.addp
llvm.arm64.neon.cls
llvm.arm64.neon.cmtst
llvm.arm64.neon.fabd
llvm.arm64.neon.facge
llvm.arm64.neon.facgt
llvm.arm64.neon.faddp
llvm.arm64.neon.fcvtas
llvm.arm64.neon.fcvtau
llvm.arm64.neon.fcvtms
llvm.arm64.neon.fcvtmu
llvm.arm64.neon.fcvtns
llvm.arm64.neon.fcvtnu
llvm.arm64.neon.fcvtps
llvm.arm64.neon.fcvtpu
llvm.arm64.neon.fcvtxn
llvm.arm64.neon.fcvtzs
llvm.arm64.neon.fcvtzu
llvm.arm64.neon.fmax
llvm.arm64.neon.fmaxnm
llvm.arm64.neon.fmaxnmp
llvm.arm64.neon.fmaxnmv
llvm.arm64.neon.fmaxp
llvm.arm64.neon.fmaxv
llvm.arm64.neon.fmin
llvm.arm64.neon.fminnm
llvm.arm64.neon.fminnmp
llvm.arm64.neon.fminnmv
llvm.arm64.neon.fminp
llvm.arm64.neon.fminv
llvm.arm64.neon.fmulx
llvm.arm64.neon.frecpe
llvm.arm64.neon.frecps
llvm.arm64.neon.frinta
llvm.arm64.neon.frinti
llvm.arm64.neon.frintm
llvm.arm64.neon.frintn
llvm.arm64.neon.frintp
llvm.arm64.neon.frintx
llvm.arm64.neon.frintz
llvm.arm64.neon.frsqrte
llvm.arm64.neon.frsqrts
llvm.arm64.neon.ld2
llvm.arm64.neon.ld2lane
llvm.arm64.neon.ld2r
llvm.arm64.neon.ld3
llvm.arm64.neon.ld3lane
llvm.arm64.neon.ld3r
llvm.arm64.neon.ld4
llvm.arm64.neon.ld4lane
llvm.arm64.neon.ld4r
llvm.arm64.neon.pmul
llvm.arm64.neon.pmull
llvm.arm64.neon.raddhn
llvm.arm64.neon.rbit
llvm.arm64.neon.rshrn
llvm.arm64.neon.rsubhn
llvm.arm64.neon.sabd
llvm.arm64.neon.sabdl
llvm.arm64.neon.saddlp
llvm.arm64.neon.saddlv
llvm.arm64.neon.saddv
llvm.arm64.neon.scalar.sqxtn
llvm.arm64.neon.scalar.sqxtun
llvm.arm64.neon.scalar.uqxtn
llvm.arm64.neon.shadd
llvm.arm64.neon.shll
llvm.arm64.neon.shrn
llvm.arm64.neon.shsub
llvm.arm64.neon.smax
llvm.arm64.neon.smaxp
llvm.arm64.neon.smaxv
llvm.arm64.neon.smin
llvm.arm64.neon.sminp
llvm.arm64.neon.sminv
llvm.arm64.neon.smull
llvm.arm64.neon.sqabs
llvm.arm64.neon.sqadd
llvm.arm64.neon.sqdmulh
llvm.arm64.neon.sqdmull
llvm.arm64.neon.sqdmulls.scalar
llvm.arm64.neon.sqneg
llvm.arm64.neon.sqrdmulh
llvm.arm64.neon.sqrshl
llvm.arm64.neon.sqrshrn
llvm.arm64.neon.sqrshrun
llvm.arm64.neon.sqshl
llvm.arm64.neon.sqshli
llvm.arm64.neon.sqshlu
llvm.arm64.neon.sqshrn
llvm.arm64.neon.sqshrun
llvm.arm64.neon.sqsub
llvm.arm64.neon.sqxtn
llvm.arm64.neon.sqxtun
llvm.arm64.neon.srhadd
llvm.arm64.neon.srshl
llvm.arm64.neon.srshr
llvm.arm64.neon.sshl
llvm.arm64.neon.sshll
llvm.arm64.neon.st2
llvm.arm64.neon.st2lane
llvm.arm64.neon.st3
llvm.arm64.neon.st3lane
llvm.arm64.neon.st4
llvm.arm64.neon.st4lane
llvm.arm64.neon.subhn
llvm.arm64.neon.tbl1
llvm.arm64.neon.tbl2
llvm.arm64.neon.tbl3
llvm.arm64.neon.tbl4
llvm.arm64.neon.tbx1
llvm.arm64.neon.tbx2
llvm.arm64.neon.tbx3
llvm.arm64.neon.tbx4
llvm.arm64.neon.uabd
llvm.arm64.neon.uabdl
llvm.arm64.neon.uaddlp
llvm.arm64.neon.uaddlv
llvm.arm64.neon.uaddv
llvm.arm64.neon.uhadd
llvm.arm64.neon.uhsub
llvm.arm64.neon.umax
llvm.arm64.neon.umaxp
llvm.arm64.neon.umaxv
llvm.arm64.neon.umin
llvm.arm64.neon.uminp
llvm.arm64.neon.uminv
llvm.arm64.neon.umull
llvm.arm64.neon.uqadd
llvm.arm64.neon.uqrshl
llvm.arm64.neon.uqrshrn
llvm.arm64.neon.uqshl
llvm.arm64.neon.uqshli
llvm.arm64.neon.uqshrn
llvm.arm64.neon.uqsub
llvm.arm64.neon.uqxtn
llvm.arm64.neon.urecpe
llvm.arm64.neon.urhadd
llvm.arm64.neon.urshl
llvm.arm64.neon.urshr
llvm.arm64.neon.ursqrte
llvm.arm64.neon.ushl
llvm.arm64.neon.ushll
llvm.arm64.neon.usqadd
llvm.arm64.neon.vcopy.lane
llvm.arm64.neon.vcvtfp2fxs
llvm.arm64.neon.vcvtfp2fxu
llvm.arm64.neon.vcvtfp2hf
llvm.arm64.neon.vcvtfxs2fp
llvm.arm64.neon.vcvtfxu2fp
llvm.arm64.neon.vcvthf2fp
llvm.arm64.neon.vsli
llvm.arm64.neon.vsri
llvm.arm64.sdiv
llvm.arm64.sisd.fabd
llvm.arm64.sisd.fcvtxn
llvm.arm64.sisd.fmulx
llvm.arm64.sisd.recp
llvm.arm64.stxp
llvm.arm64.stxr
llvm.arm64.udiv
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacged
llvm.arm.neon.vacgeq
llvm.arm.neon.vacgtd
llvm.arm.neon.vacgtq
llvm.arm.neon.vbsl
llvm.arm.neon.vcls
llvm.arm.neon.vclz
llvm.arm.neon.vcnt
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld2
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqadds
llvm.arm.neon.vqaddu
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vqsubs
llvm.arm.neon.vqsubu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshiftls
llvm.arm.neon.vshiftlu
llvm.arm.neon.vshiftn
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qsub
llvm.arm.set.fpscr
llvm.arm.sevl
llvm.arm.ssat
llvm.arm.strex
llvm.arm.strexd
llvm.arm.thread.pointer
llvm.arm.usat
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.bswap
llvm.ceil
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.convertff
llvm.convertfsi
llvm.convertfui
llvm.convertsif
llvm.convertss
llvm.convertsu
llvm.convertuif
llvm.convertus
llvm.convertuu
llvm.copysign
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.cuda.syncthreads
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dffixupd
llvm.hexagon.F2.dffixupn
llvm.hexagon.F2.dffixupr
llvm.hexagon.F2.dffma
llvm.hexagon.F2.dffma.lib
llvm.hexagon.F2.dffma.sc
llvm.hexagon.F2.dffms
llvm.hexagon.F2.dffms.lib
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfmax
llvm.hexagon.F2.dfmin
llvm.hexagon.F2.dfmpy
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.SI.to.SXTHI.asrh
llvm.hexagon.circ.ldd
llvm.invariant.end
llvm.invariant.start
llvm.lifetime.end
llvm.lifetime.start
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.memcpy
llvm.memmove
llvm.memset
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nearbyint
llvm.nvvm.abs.i
llvm.nvvm.abs.ll
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.load.add.f32
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.brev32
llvm.nvvm.brev64
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.clz.i
llvm.nvvm.clz.ll
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.h2f
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.isspacep.const
llvm.nvvm.isspacep.global
llvm.nvvm.isspacep.local
llvm.nvvm.isspacep.shared
llvm.nvvm.istypep.sampler
llvm.nvvm.istypep.surface
llvm.nvvm.istypep.texture
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.max.i
llvm.nvvm.max.ll
llvm.nvvm.max.ui
llvm.nvvm.max.ull
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.min.i
llvm.nvvm.min.ll
llvm.nvvm.min.ui
llvm.nvvm.min.ull
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.popc.i
llvm.nvvm.popc.ll
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.envreg0
llvm.nvvm.read.ptx.sreg.envreg1
llvm.nvvm.read.ptx.sreg.envreg10
llvm.nvvm.read.ptx.sreg.envreg11
llvm.nvvm.read.ptx.sreg.envreg12
llvm.nvvm.read.ptx.sreg.envreg13
llvm.nvvm.read.ptx.sreg.envreg14
llvm.nvvm.read.ptx.sreg.envreg15
llvm.nvvm.read.ptx.sreg.envreg16
llvm.nvvm.read.ptx.sreg.envreg17
llvm.nvvm.read.ptx.sreg.envreg18
llvm.nvvm.read.ptx.sreg.envreg19
llvm.nvvm.read.ptx.sreg.envreg2
llvm.nvvm.read.ptx.sreg.envreg20
llvm.nvvm.read.ptx.sreg.envreg21
llvm.nvvm.read.ptx.sreg.envreg22
llvm.nvvm.read.ptx.sreg.envreg23
llvm.nvvm.read.ptx.sreg.envreg24
llvm.nvvm.read.ptx.sreg.envreg25
llvm.nvvm.read.ptx.sreg.envreg26
llvm.nvvm.read.ptx.sreg.envreg27
llvm.nvvm.read.ptx.sreg.envreg28
llvm.nvvm.read.ptx.sreg.envreg29
llvm.nvvm.read.ptx.sreg.envreg3
llvm.nvvm.read.ptx.sreg.envreg30
llvm.nvvm.read.ptx.sreg.envreg31
llvm.nvvm.read.ptx.sreg.envreg4
llvm.nvvm.read.ptx.sreg.envreg5
llvm.nvvm.read.ptx.sreg.envreg6
llvm.nvvm.read.ptx.sreg.envreg7
llvm.nvvm.read.ptx.sreg.envreg8
llvm.nvvm.read.ptx.sreg.envreg9
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.reflect
llvm.nvvm.rotate.b32
llvm.nvvm.rotate.b64
llvm.nvvm.rotate.right.b64
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.suld.1d.array.i16.clamp
llvm.nvvm.suld.1d.array.i16.trap
llvm.nvvm.suld.1d.array.i16.zero
llvm.nvvm.suld.1d.array.i32.clamp
llvm.nvvm.suld.1d.array.i32.trap
llvm.nvvm.suld.1d.array.i32.zero
llvm.nvvm.suld.1d.array.i64.clamp
llvm.nvvm.suld.1d.array.i64.trap
llvm.nvvm.suld.1d.array.i64.zero
llvm.nvvm.suld.1d.array.i8.clamp
llvm.nvvm.suld.1d.array.i8.trap
llvm.nvvm.suld.1d.array.i8.zero
llvm.nvvm.suld.1d.array.v2i16.clamp
llvm.nvvm.suld.1d.array.v2i16.trap
llvm.nvvm.suld.1d.array.v2i16.zero
llvm.nvvm.suld.1d.array.v2i32.clamp
llvm.nvvm.suld.1d.array.v2i32.trap
llvm.nvvm.suld.1d.array.v2i32.zero
llvm.nvvm.suld.1d.array.v2i64.clamp
llvm.nvvm.suld.1d.array.v2i64.trap
llvm.nvvm.suld.1d.array.v2i64.zero
llvm.nvvm.suld.1d.array.v2i8.clamp
llvm.nvvm.suld.1d.array.v2i8.trap
llvm.nvvm.suld.1d.array.v2i8.zero
llvm.nvvm.suld.1d.array.v4i16.clamp
llvm.nvvm.suld.1d.array.v4i16.trap
llvm.nvvm.suld.1d.array.v4i16.zero
llvm.nvvm.suld.1d.array.v4i32.clamp
llvm.nvvm.suld.1d.array.v4i32.trap
llvm.nvvm.suld.1d.array.v4i32.zero
llvm.nvvm.suld.1d.array.v4i8.clamp
llvm.nvvm.suld.1d.array.v4i8.trap
llvm.nvvm.suld.1d.array.v4i8.zero
llvm.nvvm.suld.1d.i16.clamp
llvm.nvvm.suld.1d.i16.trap
llvm.nvvm.suld.1d.i16.zero
llvm.nvvm.suld.1d.i32.clamp
llvm.nvvm.suld.1d.i32.trap
llvm.nvvm.suld.1d.i32.zero
llvm.nvvm.suld.1d.i64.clamp
llvm.nvvm.suld.1d.i64.trap
llvm.nvvm.suld.1d.i64.zero
llvm.nvvm.suld.1d.i8.clamp
llvm.nvvm.suld.1d.i8.trap
llvm.nvvm.suld.1d.i8.zero
llvm.nvvm.suld.1d.v2i16.clamp
llvm.nvvm.suld.1d.v2i16.trap
llvm.nvvm.suld.1d.v2i16.zero
llvm.nvvm.suld.1d.v2i32.clamp
llvm.nvvm.suld.1d.v2i32.trap
llvm.nvvm.suld.1d.v2i32.zero
llvm.nvvm.suld.1d.v2i64.clamp
llvm.nvvm.suld.1d.v2i64.trap
llvm.nvvm.suld.1d.v2i64.zero
llvm.nvvm.suld.1d.v2i8.clamp
llvm.nvvm.suld.1d.v2i8.trap
llvm.nvvm.suld.1d.v2i8.zero
llvm.nvvm.suld.1d.v4i16.clamp
llvm.nvvm.suld.1d.v4i16.trap
llvm.nvvm.suld.1d.v4i16.zero
llvm.nvvm.suld.1d.v4i32.clamp
llvm.nvvm.suld.1d.v4i32.trap
llvm.nvvm.suld.1d.v4i32.zero
llvm.nvvm.suld.1d.v4i8.clamp
llvm.nvvm.suld.1d.v4i8.trap
llvm.nvvm.suld.1d.v4i8.zero
llvm.nvvm.suld.2d.array.i16.clamp
llvm.nvvm.suld.2d.array.i16.trap
llvm.nvvm.suld.2d.array.i16.zero
llvm.nvvm.suld.2d.array.i32.clamp
llvm.nvvm.suld.2d.array.i32.trap
llvm.nvvm.suld.2d.array.i32.zero
llvm.nvvm.suld.2d.array.i64.clamp
llvm.nvvm.suld.2d.array.i64.trap
llvm.nvvm.suld.2d.array.i64.zero
llvm.nvvm.suld.2d.array.i8.clamp
llvm.nvvm.suld.2d.array.i8.trap
llvm.nvvm.suld.2d.array.i8.zero
llvm.nvvm.suld.2d.array.v2i16.clamp
llvm.nvvm.suld.2d.array.v2i16.trap
llvm.nvvm.suld.2d.array.v2i16.zero
llvm.nvvm.suld.2d.array.v2i32.clamp
llvm.nvvm.suld.2d.array.v2i32.trap
llvm.nvvm.suld.2d.array.v2i32.zero
llvm.nvvm.suld.2d.array.v2i64.clamp
llvm.nvvm.suld.2d.array.v2i64.trap
llvm.nvvm.suld.2d.array.v2i64.zero
llvm.nvvm.suld.2d.array.v2i8.clamp
llvm.nvvm.suld.2d.array.v2i8.trap
llvm.nvvm.suld.2d.array.v2i8.zero
llvm.nvvm.suld.2d.array.v4i16.clamp
llvm.nvvm.suld.2d.array.v4i16.trap
llvm.nvvm.suld.2d.array.v4i16.zero
llvm.nvvm.suld.2d.array.v4i32.clamp
llvm.nvvm.suld.2d.array.v4i32.trap
llvm.nvvm.suld.2d.array.v4i32.zero
llvm.nvvm.suld.2d.array.v4i8.clamp
llvm.nvvm.suld.2d.array.v4i8.trap
llvm.nvvm.suld.2d.array.v4i8.zero
llvm.nvvm.suld.2d.i16.clamp
llvm.nvvm.suld.2d.i16.trap
llvm.nvvm.suld.2d.i16.zero
llvm.nvvm.suld.2d.i32.clamp
llvm.nvvm.suld.2d.i32.trap
llvm.nvvm.suld.2d.i32.zero
llvm.nvvm.suld.2d.i64.clamp
llvm.nvvm.suld.2d.i64.trap
llvm.nvvm.suld.2d.i64.zero
llvm.nvvm.suld.2d.i8.clamp
llvm.nvvm.suld.2d.i8.trap
llvm.nvvm.suld.2d.i8.zero
llvm.nvvm.suld.2d.v2i16.clamp
llvm.nvvm.suld.2d.v2i16.trap
llvm.nvvm.suld.2d.v2i16.zero
llvm.nvvm.suld.2d.v2i32.clamp
llvm.nvvm.suld.2d.v2i32.trap
llvm.nvvm.suld.2d.v2i32.zero
llvm.nvvm.suld.2d.v2i64.clamp
llvm.nvvm.suld.2d.v2i64.trap
llvm.nvvm.suld.2d.v2i64.zero
llvm.nvvm.suld.2d.v2i8.clamp
llvm.nvvm.suld.2d.v2i8.trap
llvm.nvvm.suld.2d.v2i8.zero
llvm.nvvm.suld.2d.v4i16.clamp
llvm.nvvm.suld.2d.v4i16.trap
llvm.nvvm.suld.2d.v4i16.zero
llvm.nvvm.suld.2d.v4i32.clamp
llvm.nvvm.suld.2d.v4i32.trap
llvm.nvvm.suld.2d.v4i32.zero
llvm.nvvm.suld.2d.v4i8.clamp
llvm.nvvm.suld.2d.v4i8.trap
llvm.nvvm.suld.2d.v4i8.zero
llvm.nvvm.suld.3d.i16.clamp
llvm.nvvm.suld.3d.i16.trap
llvm.nvvm.suld.3d.i16.zero
llvm.nvvm.suld.3d.i32.clamp
llvm.nvvm.suld.3d.i32.trap
llvm.nvvm.suld.3d.i32.zero
llvm.nvvm.suld.3d.i64.clamp
llvm.nvvm.suld.3d.i64.trap
llvm.nvvm.suld.3d.i64.zero
llvm.nvvm.suld.3d.i8.clamp
llvm.nvvm.suld.3d.i8.trap
llvm.nvvm.suld.3d.i8.zero
llvm.nvvm.suld.3d.v2i16.clamp
llvm.nvvm.suld.3d.v2i16.trap
llvm.nvvm.suld.3d.v2i16.zero
llvm.nvvm.suld.3d.v2i32.clamp
llvm.nvvm.suld.3d.v2i32.trap
llvm.nvvm.suld.3d.v2i32.zero
llvm.nvvm.suld.3d.v2i64.clamp
llvm.nvvm.suld.3d.v2i64.trap
llvm.nvvm.suld.3d.v2i64.zero
llvm.nvvm.suld.3d.v2i8.clamp
llvm.nvvm.suld.3d.v2i8.trap
llvm.nvvm.suld.3d.v2i8.zero
llvm.nvvm.suld.3d.v4i16.clamp
llvm.nvvm.suld.3d.v4i16.trap
llvm.nvvm.suld.3d.v4i16.zero
llvm.nvvm.suld.3d.v4i32.clamp
llvm.nvvm.suld.3d.v4i32.trap
llvm.nvvm.suld.3d.v4i32.zero
llvm.nvvm.suld.3d.v4i8.clamp
llvm.nvvm.suld.3d.v4i8.trap
llvm.nvvm.suld.3d.v4i8.zero
llvm.nvvm.suq.array.size
llvm.nvvm.suq.channel.data.type
llvm.nvvm.suq.channel.order
llvm.nvvm.suq.depth
llvm.nvvm.suq.height
llvm.nvvm.suq.width
llvm.nvvm.sust.b.1d.array.i16.clamp
llvm.nvvm.sust.b.1d.array.i16.trap
llvm.nvvm.sust.b.1d.array.i16.zero
llvm.nvvm.sust.b.1d.array.i32.clamp
llvm.nvvm.sust.b.1d.array.i32.trap
llvm.nvvm.sust.b.1d.array.i32.zero
llvm.nvvm.sust.b.1d.array.i64.clamp
llvm.nvvm.sust.b.1d.array.i64.trap
llvm.nvvm.sust.b.1d.array.i64.zero
llvm.nvvm.sust.b.1d.array.i8.clamp
llvm.nvvm.sust.b.1d.array.i8.trap
llvm.nvvm.sust.b.1d.array.i8.zero
llvm.nvvm.sust.b.1d.array.v2i16.clamp
llvm.nvvm.sust.b.1d.array.v2i16.trap
llvm.nvvm.sust.b.1d.array.v2i16.zero
llvm.nvvm.sust.b.1d.array.v2i32.clamp
llvm.nvvm.sust.b.1d.array.v2i32.trap
llvm.nvvm.sust.b.1d.array.v2i32.zero
llvm.nvvm.sust.b.1d.array.v2i64.clamp
llvm.nvvm.sust.b.1d.array.v2i64.trap
llvm.nvvm.sust.b.1d.array.v2i64.zero
llvm.nvvm.sust.b.1d.array.v2i8.clamp
llvm.nvvm.sust.b.1d.array.v2i8.trap
llvm.nvvm.sust.b.1d.array.v2i8.zero
llvm.nvvm.sust.b.1d.array.v4i16.clamp
llvm.nvvm.sust.b.1d.array.v4i16.trap
llvm.nvvm.sust.b.1d.array.v4i16.zero
llvm.nvvm.sust.b.1d.array.v4i32.clamp
llvm.nvvm.sust.b.1d.array.v4i32.trap
llvm.nvvm.sust.b.1d.array.v4i32.zero
llvm.nvvm.sust.b.1d.array.v4i8.clamp
llvm.nvvm.sust.b.1d.array.v4i8.trap
llvm.nvvm.sust.b.1d.array.v4i8.zero
llvm.nvvm.sust.b.1d.i16.clamp
llvm.nvvm.sust.b.1d.i16.trap
llvm.nvvm.sust.b.1d.i16.zero
llvm.nvvm.sust.b.1d.i32.clamp
llvm.nvvm.sust.b.1d.i32.trap
llvm.nvvm.sust.b.1d.i32.zero
llvm.nvvm.sust.b.1d.i64.clamp
llvm.nvvm.sust.b.1d.i64.trap
llvm.nvvm.sust.b.1d.i64.zero
llvm.nvvm.sust.b.1d.i8.clamp
llvm.nvvm.sust.b.1d.i8.trap
llvm.nvvm.sust.b.1d.i8.zero
llvm.nvvm.sust.b.1d.v2i16.clamp
llvm.nvvm.sust.b.1d.v2i16.trap
llvm.nvvm.sust.b.1d.v2i16.zero
llvm.nvvm.sust.b.1d.v2i32.clamp
llvm.nvvm.sust.b.1d.v2i32.trap
llvm.nvvm.sust.b.1d.v2i32.zero
llvm.nvvm.sust.b.1d.v2i64.clamp
llvm.nvvm.sust.b.1d.v2i64.trap
llvm.nvvm.sust.b.1d.v2i64.zero
llvm.nvvm.sust.b.1d.v2i8.clamp
llvm.nvvm.sust.b.1d.v2i8.trap
llvm.nvvm.sust.b.1d.v2i8.zero
llvm.nvvm.sust.b.1d.v4i16.clamp
llvm.nvvm.sust.b.1d.v4i16.trap
llvm.nvvm.sust.b.1d.v4i16.zero
llvm.nvvm.sust.b.1d.v4i32.clamp
llvm.nvvm.sust.b.1d.v4i32.trap
llvm.nvvm.sust.b.1d.v4i32.zero
llvm.nvvm.sust.b.1d.v4i8.clamp
llvm.nvvm.sust.b.1d.v4i8.trap
llvm.nvvm.sust.b.1d.v4i8.zero
llvm.nvvm.sust.b.2d.array.i16.clamp
llvm.nvvm.sust.b.2d.array.i16.trap
llvm.nvvm.sust.b.2d.array.i16.zero
llvm.nvvm.sust.b.2d.array.i32.clamp
llvm.nvvm.sust.b.2d.array.i32.trap
llvm.nvvm.sust.b.2d.array.i32.zero
llvm.nvvm.sust.b.2d.array.i64.clamp
llvm.nvvm.sust.b.2d.array.i64.trap
llvm.nvvm.sust.b.2d.array.i64.zero
llvm.nvvm.sust.b.2d.array.i8.clamp
llvm.nvvm.sust.b.2d.array.i8.trap
llvm.nvvm.sust.b.2d.array.i8.zero
llvm.nvvm.sust.b.2d.array.v2i16.clamp
llvm.nvvm.sust.b.2d.array.v2i16.trap
llvm.nvvm.sust.b.2d.array.v2i16.zero
llvm.nvvm.sust.b.2d.array.v2i32.clamp
llvm.nvvm.sust.b.2d.array.v2i32.trap
llvm.nvvm.sust.b.2d.array.v2i32.zero
llvm.nvvm.sust.b.2d.array.v2i64.clamp
llvm.nvvm.sust.b.2d.array.v2i64.trap
llvm.nvvm.sust.b.2d.array.v2i64.zero
llvm.nvvm.sust.b.2d.array.v2i8.clamp
llvm.nvvm.sust.b.2d.array.v2i8.trap
llvm.nvvm.sust.b.2d.array.v2i8.zero
llvm.nvvm.sust.b.2d.array.v4i16.clamp
llvm.nvvm.sust.b.2d.array.v4i16.trap
llvm.nvvm.sust.b.2d.array.v4i16.zero
llvm.nvvm.sust.b.2d.array.v4i32.clamp
llvm.nvvm.sust.b.2d.array.v4i32.trap
llvm.nvvm.sust.b.2d.array.v4i32.zero
llvm.nvvm.sust.b.2d.array.v4i8.clamp
llvm.nvvm.sust.b.2d.array.v4i8.trap
llvm.nvvm.sust.b.2d.array.v4i8.zero
llvm.nvvm.sust.b.2d.i16.clamp
llvm.nvvm.sust.b.2d.i16.trap
llvm.nvvm.sust.b.2d.i16.zero
llvm.nvvm.sust.b.2d.i32.clamp
llvm.nvvm.sust.b.2d.i32.trap
llvm.nvvm.sust.b.2d.i32.zero
llvm.nvvm.sust.b.2d.i64.clamp
llvm.nvvm.sust.b.2d.i64.trap
llvm.nvvm.sust.b.2d.i64.zero
llvm.nvvm.sust.b.2d.i8.clamp
llvm.nvvm.sust.b.2d.i8.trap
llvm.nvvm.sust.b.2d.i8.zero
llvm.nvvm.sust.b.2d.v2i16.clamp
llvm.nvvm.sust.b.2d.v2i16.trap
llvm.nvvm.sust.b.2d.v2i16.zero
llvm.nvvm.sust.b.2d.v2i32.clamp
llvm.nvvm.sust.b.2d.v2i32.trap
llvm.nvvm.sust.b.2d.v2i32.zero
llvm.nvvm.sust.b.2d.v2i64.clamp
llvm.nvvm.sust.b.2d.v2i64.trap
llvm.nvvm.sust.b.2d.v2i64.zero
llvm.nvvm.sust.b.2d.v2i8.clamp
llvm.nvvm.sust.b.2d.v2i8.trap
llvm.nvvm.sust.b.2d.v2i8.zero
llvm.nvvm.sust.b.2d.v4i16.clamp
llvm.nvvm.sust.b.2d.v4i16.trap
llvm.nvvm.sust.b.2d.v4i16.zero
llvm.nvvm.sust.b.2d.v4i32.clamp
llvm.nvvm.sust.b.2d.v4i32.trap
llvm.nvvm.sust.b.2d.v4i32.zero
llvm.nvvm.sust.b.2d.v4i8.clamp
llvm.nvvm.sust.b.2d.v4i8.trap
llvm.nvvm.sust.b.2d.v4i8.zero
llvm.nvvm.sust.b.3d.i16.clamp
llvm.nvvm.sust.b.3d.i16.trap
llvm.nvvm.sust.b.3d.i16.zero
llvm.nvvm.sust.b.3d.i32.clamp
llvm.nvvm.sust.b.3d.i32.trap
llvm.nvvm.sust.b.3d.i32.zero
llvm.nvvm.sust.b.3d.i64.clamp
llvm.nvvm.sust.b.3d.i64.trap
llvm.nvvm.sust.b.3d.i64.zero
llvm.nvvm.sust.b.3d.i8.clamp
llvm.nvvm.sust.b.3d.i8.trap
llvm.nvvm.sust.b.3d.i8.zero
llvm.nvvm.sust.b.3d.v2i16.clamp
llvm.nvvm.sust.b.3d.v2i16.trap
llvm.nvvm.sust.b.3d.v2i16.zero
llvm.nvvm.sust.b.3d.v2i32.clamp
llvm.nvvm.sust.b.3d.v2i32.trap
llvm.nvvm.sust.b.3d.v2i32.zero
llvm.nvvm.sust.b.3d.v2i64.clamp
llvm.nvvm.sust.b.3d.v2i64.trap
llvm.nvvm.sust.b.3d.v2i64.zero
llvm.nvvm.sust.b.3d.v2i8.clamp
llvm.nvvm.sust.b.3d.v2i8.trap
llvm.nvvm.sust.b.3d.v2i8.zero
llvm.nvvm.sust.b.3d.v4i16.clamp
llvm.nvvm.sust.b.3d.v4i16.trap
llvm.nvvm.sust.b.3d.v4i16.zero
llvm.nvvm.sust.b.3d.v4i32.clamp
llvm.nvvm.sust.b.3d.v4i32.trap
llvm.nvvm.sust.b.3d.v4i32.zero
llvm.nvvm.sust.b.3d.v4i8.clamp
llvm.nvvm.sust.b.3d.v4i8.trap
llvm.nvvm.sust.b.3d.v4i8.zero
llvm.nvvm.sust.p.1d.array.i16.trap
llvm.nvvm.sust.p.1d.array.i32.trap
llvm.nvvm.sust.p.1d.array.i8.trap
llvm.nvvm.sust.p.1d.array.v2i16.trap
llvm.nvvm.sust.p.1d.array.v2i32.trap
llvm.nvvm.sust.p.1d.array.v2i8.trap
llvm.nvvm.sust.p.1d.array.v4i16.trap
llvm.nvvm.sust.p.1d.array.v4i32.trap
llvm.nvvm.sust.p.1d.array.v4i8.trap
llvm.nvvm.sust.p.1d.i16.trap
llvm.nvvm.sust.p.1d.i32.trap
llvm.nvvm.sust.p.1d.i8.trap
llvm.nvvm.sust.p.1d.v2i16.trap
llvm.nvvm.sust.p.1d.v2i32.trap
llvm.nvvm.sust.p.1d.v2i8.trap
llvm.nvvm.sust.p.1d.v4i16.trap
llvm.nvvm.sust.p.1d.v4i32.trap
llvm.nvvm.sust.p.1d.v4i8.trap
llvm.nvvm.sust.p.2d.array.i16.trap
llvm.nvvm.sust.p.2d.array.i32.trap
llvm.nvvm.sust.p.2d.array.i8.trap
llvm.nvvm.sust.p.2d.array.v2i16.trap
llvm.nvvm.sust.p.2d.array.v2i32.trap
llvm.nvvm.sust.p.2d.array.v2i8.trap
llvm.nvvm.sust.p.2d.array.v4i16.trap
llvm.nvvm.sust.p.2d.array.v4i32.trap
llvm.nvvm.sust.p.2d.array.v4i8.trap
llvm.nvvm.sust.p.2d.i16.trap
llvm.nvvm.sust.p.2d.i32.trap
llvm.nvvm.sust.p.2d.i8.trap
llvm.nvvm.sust.p.2d.v2i16.trap
llvm.nvvm.sust.p.2d.v2i32.trap
llvm.nvvm.sust.p.2d.v2i8.trap
llvm.nvvm.sust.p.2d.v4i16.trap
llvm.nvvm.sust.p.2d.v4i32.trap
llvm.nvvm.sust.p.2d.v4i8.trap
llvm.nvvm.sust.p.3d.i16.trap
llvm.nvvm.sust.p.3d.i32.trap
llvm.nvvm.sust.p.3d.i8.trap
llvm.nvvm.sust.p.3d.v2i16.trap
llvm.nvvm.sust.p.3d.v2i32.trap
llvm.nvvm.sust.p.3d.v2i8.trap
llvm.nvvm.sust.p.3d.v4i16.trap
llvm.nvvm.sust.p.3d.v4i32.trap
llvm.nvvm.sust.p.3d.v4i8.trap
llvm.nvvm.swap.lo.hi.b64
llvm.nvvm.tex.1d.array.grad.v4f32.f32
llvm.nvvm.tex.1d.array.grad.v4s32.f32
llvm.nvvm.tex.1d.array.grad.v4u32.f32
llvm.nvvm.tex.1d.array.level.v4f32.f32
llvm.nvvm.tex.1d.array.level.v4s32.f32
llvm.nvvm.tex.1d.array.level.v4u32.f32
llvm.nvvm.tex.1d.array.v4f32.f32
llvm.nvvm.tex.1d.array.v4f32.s32
llvm.nvvm.tex.1d.array.v4s32.f32
llvm.nvvm.tex.1d.array.v4s32.s32
llvm.nvvm.tex.1d.array.v4u32.f32
llvm.nvvm.tex.1d.array.v4u32.s32
llvm.nvvm.tex.1d.grad.v4f32.f32
llvm.nvvm.tex.1d.grad.v4s32.f32
llvm.nvvm.tex.1d.grad.v4u32.f32
llvm.nvvm.tex.1d.level.v4f32.f32
llvm.nvvm.tex.1d.level.v4s32.f32
llvm.nvvm.tex.1d.level.v4u32.f32
llvm.nvvm.tex.1d.v4f32.f32
llvm.nvvm.tex.1d.v4f32.s32
llvm.nvvm.tex.1d.v4s32.f32
llvm.nvvm.tex.1d.v4s32.s32
llvm.nvvm.tex.1d.v4u32.f32
llvm.nvvm.tex.1d.v4u32.s32
llvm.nvvm.tex.2d.array.grad.v4f32.f32
llvm.nvvm.tex.2d.array.grad.v4s32.f32
llvm.nvvm.tex.2d.array.grad.v4u32.f32
llvm.nvvm.tex.2d.array.level.v4f32.f32
llvm.nvvm.tex.2d.array.level.v4s32.f32
llvm.nvvm.tex.2d.array.level.v4u32.f32
llvm.nvvm.tex.2d.array.v4f32.f32
llvm.nvvm.tex.2d.array.v4f32.s32
llvm.nvvm.tex.2d.array.v4s32.f32
llvm.nvvm.tex.2d.array.v4s32.s32
llvm.nvvm.tex.2d.array.v4u32.f32
llvm.nvvm.tex.2d.array.v4u32.s32
llvm.nvvm.tex.2d.grad.v4f32.f32
llvm.nvvm.tex.2d.grad.v4s32.f32
llvm.nvvm.tex.2d.grad.v4u32.f32
llvm.nvvm.tex.2d.level.v4f32.f32
llvm.nvvm.tex.2d.level.v4s32.f32
llvm.nvvm.tex.2d.level.v4u32.f32
llvm.nvvm.tex.2d.v4f32.f32
llvm.nvvm.tex.2d.v4f32.s32
llvm.nvvm.tex.2d.v4s32.f32
llvm.nvvm.tex.2d.v4s32.s32
llvm.nvvm.tex.2d.v4u32.f32
llvm.nvvm.tex.2d.v4u32.s32
llvm.nvvm.tex.3d.grad.v4f32.f32
llvm.nvvm.tex.3d.grad.v4s32.f32
llvm.nvvm.tex.3d.grad.v4u32.f32
llvm.nvvm.tex.3d.level.v4f32.f32
llvm.nvvm.tex.3d.level.v4s32.f32
llvm.nvvm.tex.3d.level.v4u32.f32
llvm.nvvm.tex.3d.v4f32.f32
llvm.nvvm.tex.3d.v4f32.s32
llvm.nvvm.tex.3d.v4s32.f32
llvm.nvvm.tex.3d.v4s32.s32
llvm.nvvm.tex.3d.v4u32.f32
llvm.nvvm.tex.3d.v4u32.s32
llvm.nvvm.tex.cube.array.level.v4f32.f32
llvm.nvvm.tex.cube.array.level.v4s32.f32
llvm.nvvm.tex.cube.array.level.v4u32.f32
llvm.nvvm.tex.cube.array.v4f32.f32
llvm.nvvm.tex.cube.array.v4s32.f32
llvm.nvvm.tex.cube.array.v4u32.f32
llvm.nvvm.tex.cube.level.v4f32.f32
llvm.nvvm.tex.cube.level.v4s32.f32
llvm.nvvm.tex.cube.level.v4u32.f32
llvm.nvvm.tex.cube.v4f32.f32
llvm.nvvm.tex.cube.v4s32.f32
llvm.nvvm.tex.cube.v4u32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.array.level.v4f32.f32
llvm.nvvm.tex.unified.1d.array.level.v4s32.f32
llvm.nvvm.tex.unified.1d.array.level.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.s32
llvm.nvvm.tex.unified.1d.array.v4s32.f32
llvm.nvvm.tex.unified.1d.array.v4s32.s32
llvm.nvvm.tex.unified.1d.array.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4u32.s32
llvm.nvvm.tex.unified.1d.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.level.v4f32.f32
llvm.nvvm.tex.unified.1d.level.v4s32.f32
llvm.nvvm.tex.unified.1d.level.v4u32.f32
llvm.nvvm.tex.unified.1d.v4f32.f32
llvm.nvvm.tex.unified.1d.v4f32.s32
llvm.nvvm.tex.unified.1d.v4s32.f32
llvm.nvvm.tex.unified.1d.v4s32.s32
llvm.nvvm.tex.unified.1d.v4u32.f32
llvm.nvvm.tex.unified.1d.v4u32.s32
llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.array.level.v4f32.f32
llvm.nvvm.tex.unified.2d.array.level.v4s32.f32
llvm.nvvm.tex.unified.2d.array.level.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.s32
llvm.nvvm.tex.unified.2d.array.v4s32.f32
llvm.nvvm.tex.unified.2d.array.v4s32.s32
llvm.nvvm.tex.unified.2d.array.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4u32.s32
llvm.nvvm.tex.unified.2d.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.level.v4f32.f32
llvm.nvvm.tex.unified.2d.level.v4s32.f32
llvm.nvvm.tex.unified.2d.level.v4u32.f32
llvm.nvvm.tex.unified.2d.v4f32.f32
llvm.nvvm.tex.unified.2d.v4f32.s32
llvm.nvvm.tex.unified.2d.v4s32.f32
llvm.nvvm.tex.unified.2d.v4s32.s32
llvm.nvvm.tex.unified.2d.v4u32.f32
llvm.nvvm.tex.unified.2d.v4u32.s32
llvm.nvvm.tex.unified.3d.grad.v4f32.f32
llvm.nvvm.tex.unified.3d.grad.v4s32.f32
llvm.nvvm.tex.unified.3d.grad.v4u32.f32
llvm.nvvm.tex.unified.3d.level.v4f32.f32
llvm.nvvm.tex.unified.3d.level.v4s32.f32
llvm.nvvm.tex.unified.3d.level.v4u32.f32
llvm.nvvm.tex.unified.3d.v4f32.f32
llvm.nvvm.tex.unified.3d.v4f32.s32
llvm.nvvm.tex.unified.3d.v4s32.f32
llvm.nvvm.tex.unified.3d.v4s32.s32
llvm.nvvm.tex.unified.3d.v4u32.f32
llvm.nvvm.tex.unified.3d.v4u32.s32
llvm.nvvm.tex.unified.cube.array.level.v4f32.f32
llvm.nvvm.tex.unified.cube.array.level.v4s32.f32
llvm.nvvm.tex.unified.cube.array.level.v4u32.f32
llvm.nvvm.tex.unified.cube.array.v4f32.f32
llvm.nvvm.tex.unified.cube.array.v4s32.f32
llvm.nvvm.tex.unified.cube.array.v4u32.f32
llvm.nvvm.tex.unified.cube.level.v4f32.f32
llvm.nvvm.tex.unified.cube.level.v4s32.f32
llvm.nvvm.tex.unified.cube.level.v4u32.f32
llvm.nvvm.tex.unified.cube.v4f32.f32
llvm.nvvm.tex.unified.cube.v4s32.f32
llvm.nvvm.tex.unified.cube.v4u32.f32
llvm.nvvm.texsurf.handle
llvm.nvvm.texsurf.handle.internal
llvm.nvvm.tld4.a.2d.v4f32.f32
llvm.nvvm.tld4.a.2d.v4s32.f32
llvm.nvvm.tld4.a.2d.v4u32.f32
llvm.nvvm.tld4.b.2d.v4f32.f32
llvm.nvvm.tld4.b.2d.v4s32.f32
llvm.nvvm.tld4.b.2d.v4u32.f32
llvm.nvvm.tld4.g.2d.v4f32.f32
llvm.nvvm.tld4.g.2d.v4s32.f32
llvm.nvvm.tld4.g.2d.v4u32.f32
llvm.nvvm.tld4.r.2d.v4f32.f32
llvm.nvvm.tld4.r.2d.v4s32.f32
llvm.nvvm.tld4.r.2d.v4u32.f32
llvm.nvvm.tld4.unified.a.2d.v4f32.f32
llvm.nvvm.tld4.unified.a.2d.v4s32.f32
llvm.nvvm.tld4.unified.a.2d.v4u32.f32
llvm.nvvm.tld4.unified.b.2d.v4f32.f32
llvm.nvvm.tld4.unified.b.2d.v4s32.f32
llvm.nvvm.tld4.unified.b.2d.v4u32.f32
llvm.nvvm.tld4.unified.g.2d.v4f32.f32
llvm.nvvm.tld4.unified.g.2d.v4s32.f32
llvm.nvvm.tld4.unified.g.2d.v4u32.f32
llvm.nvvm.tld4.unified.r.2d.v4f32.f32
llvm.nvvm.tld4.unified.r.2d.v4s32.f32
llvm.nvvm.tld4.unified.r.2d.v4u32.f32
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.txq.array.size
llvm.nvvm.txq.channel.data.type
llvm.nvvm.txq.channel.order
llvm.nvvm.txq.depth
llvm.nvvm.txq.height
llvm.nvvm.txq.num.mipmap.levels
llvm.nvvm.txq.num.samples
llvm.nvvm.txq.width
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbt
llvm.ppc.dcbtst
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.is.decremented.ctr.nonzero
llvm.ppc.mtctr
llvm.ppc.sync
llvm.prefetch
llvm.ptr.annotation
llvm.ptx.bar.sync
llvm.ptx.read.clock
llvm.ptx.read.clock64
llvm.ptx.read.ctaid.w
llvm.ptx.read.ctaid.x
llvm.ptx.read.ctaid.y
llvm.ptx.read.ctaid.z
llvm.ptx.read.gridid
llvm.ptx.read.laneid
llvm.ptx.read.lanemask.eq
llvm.ptx.read.lanemask.ge
llvm.ptx.read.lanemask.gt
llvm.ptx.read.lanemask.le
llvm.ptx.read.lanemask.lt
llvm.ptx.read.nctaid.w
llvm.ptx.read.nctaid.x
llvm.ptx.read.nctaid.y
llvm.ptx.read.nctaid.z
llvm.ptx.read.nsmid
llvm.ptx.read.ntid.w
llvm.ptx.read.ntid.x
llvm.ptx.read.ntid.y
llvm.ptx.read.ntid.z
llvm.ptx.read.nwarpid
llvm.ptx.read.pm0
llvm.ptx.read.pm1
llvm.ptx.read.pm2
llvm.ptx.read.pm3
llvm.ptx.read.smid
llvm.ptx.read.tid.w
llvm.ptx.read.tid.x
llvm.ptx.read.tid.y
llvm.ptx.read.tid.z
llvm.ptx.read.warpid
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.sadd.with.overflow
llvm.setjmp
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssub.with.overflow
llvm.stackprotector
llvm.stackprotectorcheck
llvm.stackrestore
llvm.stacksave
llvm.trap
llvm.trunc
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.var.annotation
llvm.va_start
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.movntdqa
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.pabs.b
llvm.x86.avx2.pabs.d
llvm.x86.avx2.pabs.w
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.padds.b
llvm.x86.avx2.padds.w
llvm.x86.avx2.paddus.b
llvm.x86.avx2.paddus.w
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendd.128
llvm.x86.avx2.pblendd.256
llvm.x86.avx2.pblendvb
llvm.x86.avx2.pblendw
llvm.x86.avx2.pbroadcastb.128
llvm.x86.avx2.pbroadcastb.256
llvm.x86.avx2.pbroadcastd.128
llvm.x86.avx2.pbroadcastd.256
llvm.x86.avx2.pbroadcastq.128
llvm.x86.avx2.pbroadcastq.256
llvm.x86.avx2.pbroadcastw.128
llvm.x86.avx2.pbroadcastw.256
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmaxs.b
llvm.x86.avx2.pmaxs.d
llvm.x86.avx2.pmaxs.w
llvm.x86.avx2.pmaxu.b
llvm.x86.avx2.pmaxu.d
llvm.x86.avx2.pmaxu.w
llvm.x86.avx2.pmins.b
llvm.x86.avx2.pmins.d
llvm.x86.avx2.pmins.w
llvm.x86.avx2.pminu.b
llvm.x86.avx2.pminu.d
llvm.x86.avx2.pminu.w
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmovsxbd
llvm.x86.avx2.pmovsxbq
llvm.x86.avx2.pmovsxbw
llvm.x86.avx2.pmovsxdq
llvm.x86.avx2.pmovsxwd
llvm.x86.avx2.pmovsxwq
llvm.x86.avx2.pmovzxbd
llvm.x86.avx2.pmovzxbq
llvm.x86.avx2.pmovzxbw
llvm.x86.avx2.pmovzxdq
llvm.x86.avx2.pmovzxwd
llvm.x86.avx2.pmovzxwq
llvm.x86.avx2.pmul.dq
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.pmulu.dq
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.dq
llvm.x86.avx2.psll.dq.bs
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.dq
llvm.x86.avx2.psrl.dq.bs
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx2.psubs.b
llvm.x86.avx2.psubs.w
llvm.x86.avx2.psubus.b
llvm.x86.avx2.psubus.w
llvm.x86.avx2.vbroadcast.sd.pd.256
llvm.x86.avx2.vbroadcast.ss.ps
llvm.x86.avx2.vbroadcast.ss.ps.256
llvm.x86.avx2.vbroadcasti128
llvm.x86.avx2.vextracti128
llvm.x86.avx2.vinserti128
llvm.x86.avx2.vperm2i128
llvm.x86.avx512.cvtsd2usi
llvm.x86.avx512.cvtsd2usi64
llvm.x86.avx512.cvtss2usi
llvm.x86.avx512.cvtss2usi64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2sd
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpd.mask.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpi.mask.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dpq.mask.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.dps.mask.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpd.mask.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpi.mask.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qpq.mask.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gather.qps.mask.512
llvm.x86.avx512.kand.w
llvm.x86.avx512.kandn.w
llvm.x86.avx512.knot.w
llvm.x86.avx512.kor.w
llvm.x86.avx512.kortestc.w
llvm.x86.avx512.kortestz.w
llvm.x86.avx512.kunpck.bw
llvm.x86.avx512.kxnor.w
llvm.x86.avx512.kxor.w
llvm.x86.avx512.mask.blend.d.512
llvm.x86.avx512.mask.blend.pd.512
llvm.x86.avx512.mask.blend.ps.512
llvm.x86.avx512.mask.blend.q.512
llvm.x86.avx512.mask.cmp.pd.512
llvm.x86.avx512.mask.cmp.ps.512
llvm.x86.avx512.mask.conflict.d.512
llvm.x86.avx512.mask.conflict.q.512
llvm.x86.avx512.mask.cvtdq2pd.512
llvm.x86.avx512.mask.cvtdq2ps.512
llvm.x86.avx512.mask.cvtpd2dq.512
llvm.x86.avx512.mask.cvtpd2ps.512
llvm.x86.avx512.mask.cvtpd2udq.512
llvm.x86.avx512.mask.cvtps2dq.512
llvm.x86.avx512.mask.cvtps2udq.512
llvm.x86.avx512.mask.cvttpd2dq.512
llvm.x86.avx512.mask.cvttpd2udq.512
llvm.x86.avx512.mask.cvttps2dq.512
llvm.x86.avx512.mask.cvttps2udq.512
llvm.x86.avx512.mask.cvtudq2pd.512
llvm.x86.avx512.mask.cvtudq2ps.512
llvm.x86.avx512.mask.max.pd.512
llvm.x86.avx512.mask.max.ps.512
llvm.x86.avx512.mask.min.pd.512
llvm.x86.avx512.mask.min.ps.512
llvm.x86.avx512.mask.pabs.d.512
llvm.x86.avx512.mask.pabs.q.512
llvm.x86.avx512.mask.pand.d.512
llvm.x86.avx512.mask.pand.q.512
llvm.x86.avx512.mask.pbroadcast.d.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.mem.512
llvm.x86.avx512.mask.pcmpeq.d.512
llvm.x86.avx512.mask.pcmpeq.q.512
llvm.x86.avx512.mask.pmaxs.d.512
llvm.x86.avx512.mask.pmaxs.q.512
llvm.x86.avx512.mask.pmaxu.d.512
llvm.x86.avx512.mask.pmaxu.q.512
llvm.x86.avx512.mask.pmins.d.512
llvm.x86.avx512.mask.pmins.q.512
llvm.x86.avx512.mask.pminu.d.512
llvm.x86.avx512.mask.pminu.q.512
llvm.x86.avx512.mask.pmul.dq.512
llvm.x86.avx512.mask.pmulu.dq.512
llvm.x86.avx512.mask.ptestm.d.512
llvm.x86.avx512.mask.ptestm.q.512
llvm.x86.avx512.mask.rndscale.pd.512
llvm.x86.avx512.mask.rndscale.ps.512
llvm.x86.avx512.pbroadcastd.512
llvm.x86.avx512.pbroadcastd.i32.512
llvm.x86.avx512.pbroadcastq.512
llvm.x86.avx512.pbroadcastq.i64.512
llvm.x86.avx512.pmovzxbd
llvm.x86.avx512.pmovzxbq
llvm.x86.avx512.pmovzxdq
llvm.x86.avx512.pmovzxwd
llvm.x86.avx512.pmovzxwq
llvm.x86.avx512.psll.dq
llvm.x86.avx512.psll.dq.bs
llvm.x86.avx512.psrl.dq
llvm.x86.avx512.psrl.dq.bs
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd
llvm.x86.avx512.rcp28.ps
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rndscale.sd
llvm.x86.avx512.rndscale.ss
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd
llvm.x86.avx512.rsqrt28.ps
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpd.mask.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpi.mask.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dpq.mask.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.dps.mask.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpd.mask.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpi.mask.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qpq.mask.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatter.qps.mask.512
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sqrt.sd
llvm.x86.avx512.sqrt.ss
llvm.x86.avx512.vbroadcast.sd.512
llvm.x86.avx512.vbroadcast.sd.pd.512
llvm.x86.avx512.vbroadcast.ss.512
llvm.x86.avx512.vbroadcast.ss.ps.512
llvm.x86.avx512.vcvtph2ps.512
llvm.x86.avx512.vcvtps2ph.512
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blend.pd.256
llvm.x86.avx.blend.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2.pd.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtdq2.pd.256
llvm.x86.avx.cvtdq2.ps.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.sqrt.pd.256
llvm.x86.avx.sqrt.ps.256
llvm.x86.avx.storeu.dq.256
llvm.x86.avx.storeu.pd.256
llvm.x86.avx.storeu.ps.256
llvm.x86.avx.vbroadcast.sd.256
llvm.x86.avx.vbroadcast.ss
llvm.x86.avx.vbroadcast.ss.256
llvm.x86.avx.vbroadcastf128.pd.256
llvm.x86.avx.vbroadcastf128.ps.256
llvm.x86.avx.vextractf128.pd.256
llvm.x86.avx.vextractf128.ps.256
llvm.x86.avx.vextractf128.si.256
llvm.x86.avx.vinsertf128.pd.256
llvm.x86.avx.vinsertf128.ps.256
llvm.x86.avx.vinsertf128.si.256
llvm.x86.avx.vperm2f128.pd.256
llvm.x86.avx.vperm2f128.ps.256
llvm.x86.avx.vperm2f128.si.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.fma.vfmadd.pd
llvm.x86.fma.vfmadd.pd.256
llvm.x86.fma.vfmadd.pd.512
llvm.x86.fma.vfmadd.ps
llvm.x86.fma.vfmadd.ps.256
llvm.x86.fma.vfmadd.ps.512
llvm.x86.fma.vfmadd.sd
llvm.x86.fma.vfmadd.ss
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.pd.512
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fma.vfmaddsub.ps.512
llvm.x86.fma.vfmsub.pd
llvm.x86.fma.vfmsub.pd.256
llvm.x86.fma.vfmsub.pd.512
llvm.x86.fma.vfmsub.ps
llvm.x86.fma.vfmsub.ps.256
llvm.x86.fma.vfmsub.ps.512
llvm.x86.fma.vfmsub.sd
llvm.x86.fma.vfmsub.ss
llvm.x86.fma.vfmsubadd.pd
llvm.x86.fma.vfmsubadd.pd.256
llvm.x86.fma.vfmsubadd.pd.512
llvm.x86.fma.vfmsubadd.ps
llvm.x86.fma.vfmsubadd.ps.256
llvm.x86.fma.vfmsubadd.ps.512
llvm.x86.fma.vfnmadd.pd
llvm.x86.fma.vfnmadd.pd.256
llvm.x86.fma.vfnmadd.pd.512
llvm.x86.fma.vfnmadd.ps
llvm.x86.fma.vfnmadd.ps.256
llvm.x86.fma.vfnmadd.ps.512
llvm.x86.fma.vfnmadd.sd
llvm.x86.fma.vfnmadd.ss
llvm.x86.fma.vfnmsub.pd
llvm.x86.fma.vfnmsub.pd.256
llvm.x86.fma.vfnmsub.pd.512
llvm.x86.fma.vfnmsub.ps
llvm.x86.fma.vfnmsub.ps.256
llvm.x86.fma.vfnmsub.ps.512
llvm.x86.fma.vfnmsub.sd
llvm.x86.fma.vfnmsub.ss
llvm.x86.int
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.pclmulqdq
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.sse2.add.sd
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtdq2pd
llvm.x86.sse2.cvtdq2ps
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtps2pd
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvtsi2sd
llvm.x86.sse2.cvtsi642sd
llvm.x86.sse2.cvtss2sd
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.div.sd
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.mul.sd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.padds.b
llvm.x86.sse2.padds.w
llvm.x86.sse2.paddus.b
llvm.x86.sse2.paddus.w
llvm.x86.sse2.pause
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmaxs.w
llvm.x86.sse2.pmaxu.b
llvm.x86.sse2.pmins.w
llvm.x86.sse2.pminu.b
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.pmulu.dq
llvm.x86.sse2.psad.bw
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.dq
llvm.x86.sse2.psll.dq.bs
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.dq
llvm.x86.sse2.psrl.dq.bs
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.psubs.b
llvm.x86.sse2.psubs.w
llvm.x86.sse2.psubus.b
llvm.x86.sse2.psubus.w
llvm.x86.sse2.sqrt.pd
llvm.x86.sse2.sqrt.sd
llvm.x86.sse2.storel.dq
llvm.x86.sse2.storeu.dq
llvm.x86.sse2.storeu.pd
llvm.x86.sse2.sub.sd
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendpd
llvm.x86.sse41.blendps
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.extractps
llvm.x86.sse41.insertps
llvm.x86.sse41.movntdqa
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.pblendw
llvm.x86.sse41.pextrb
llvm.x86.sse41.pextrd
llvm.x86.sse41.pextrq
llvm.x86.sse41.phminposuw
llvm.x86.sse41.pmaxsb
llvm.x86.sse41.pmaxsd
llvm.x86.sse41.pmaxud
llvm.x86.sse41.pmaxuw
llvm.x86.sse41.pminsb
llvm.x86.sse41.pminsd
llvm.x86.sse41.pminud
llvm.x86.sse41.pminuw
llvm.x86.sse41.pmovsxbd
llvm.x86.sse41.pmovsxbq
llvm.x86.sse41.pmovsxbw
llvm.x86.sse41.pmovsxdq
llvm.x86.sse41.pmovsxwd
llvm.x86.sse41.pmovsxwq
llvm.x86.sse41.pmovzxbd
llvm.x86.sse41.pmovzxbq
llvm.x86.sse41.pmovzxbw
llvm.x86.sse41.pmovzxdq
llvm.x86.sse41.pmovzxwd
llvm.x86.sse41.pmovzxwq
llvm.x86.sse41.pmuldq
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.sse4a.movnt.sd
llvm.x86.sse4a.movnt.ss
llvm.x86.sse.add.ss
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtsi2ss
llvm.x86.sse.cvtsi642ss
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.div.ss
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.mul.ss
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.sqrt.ps
llvm.x86.sse.sqrt.ss
llvm.x86.sse.stmxcsr
llvm.x86.sse.storeu.ps
llvm.x86.sse.sub.ss
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.b.128
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.d.128
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.pabs.w.128
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.vcvtph2ps.128
llvm.x86.vcvtph2ps.256
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpcmov
llvm.x86.xop.vpcmov.256
llvm.x86.xop.vpcomb
llvm.x86.xop.vpcomd
llvm.x86.xop.vpcomq
llvm.x86.xop.vpcomub
llvm.x86.xop.vpcomud
llvm.x86.xop.vpcomuq
llvm.x86.xop.vpcomuw
llvm.x86.xop.vpcomw
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vprotb
llvm.x86.xop.vprotbi
llvm.x86.xop.vprotd
llvm.x86.xop.vprotdi
llvm.x86.xop.vprotq
llvm.x86.xop.vprotqi
llvm.x86.xop.vprotw
llvm.x86.xop.vprotwi
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
__nvvm_h2f
__nvvm_
bs_i
lz_i
ad_i
vvm_
bs_ll
z_ll
opc_i
d_ui
rt_f
yncthreads
uiltin_trap
2h_ieee
2f_ieee
ar0_or
oor_
x_ull
n_ull
opc_ll
ound_
runc_
dd_r
ar0_and
ull_r
ohi_i2d
4_ui
cp_r
ar0_popc
mbar_gl
lhi_ull
rt_r
eil_ftz_f
2f_r
_ftz
_rn_ftz
bs_ftz_f
x_ftz_f
n_ftz_f
embar_
otate_b
turate_
q_height
xq_height
itcast_
oor_ftz_f
ound_ftz_f
runc_ftz_f
uiltin_debugtrap
_ftz_f
os_approx_f
pprox_f
x2_approx_
g2_approx_
ul_r
in_approx_f
uiltin_
lt_rounds
tack_save
vvm_sqrt_
a32_vp
bject_size
nwind_init
sspacep_
sqrt_approx_
turate_ftz_f
q_array_size
ap_lo_hi_b64
xq_array_size
a32_v
ar_sync
ead_pm
pacep_
ypep_
xq_num_samples
tx_read_smid
tack_restore
os_approx_ftz_f
iv_approx_ftz_f
x2_approx_ftz_f
g2_approx_ftz_f
p_approx_ftz_d
tate_right_b64
in_approx_ftz_f
tx_read_
rt_approx_ftz_f
_channel_order
d_i8_
d_i8_trap
xq_channel_order
32_v
rczp
mov_256
it_trampoline
tid_
sqrt_approx_ftz_f
ust_
_clamp
6_trap
2_trap
uiltin_ptx_read_
aid_
ead_ptx_sreg_tid_
6_clamp
2_clamp
4_clamp
i8_trap
djust_trampoline
tx_read_nctaid_
ead_ptx_sreg_ntid_
uiltin_ia32_vpermil2p
ead_ptx_sreg_
taid_
_channel_data_type
t_b_
hannel_data_type
um_mipmap_levels
__nvvm_read_ptx_sreg_
ctaid_
uiltin_ptx_read_lanemask_
vvm_sust_
d_array_i8_
d_array_i8_trap
__nvvm_sust_
d_array_i
d_array_
d_array_v
__nvvm_sust_b_
__builtin_arm_
__builtin_arm_mcrr2
et_fpscr
__builtin_thread_pointer
__builtin_circ_ldd
__builtin_HEXAGON_
2_or
_orn
_lsli
__builtin_
EXAGON_
_andnp
_or_or
r_or
2_brevp
I_to_SXTHI_asrh
_cmp
nd_or
or_or
r_ori
r_andn
pyu_up
or_and
r_andi
und_r
_vaddhubs
_bitsclri
nd_andn
a_sc
acs_s
ysu_up
c_s0
y_s0
or_xacc
lrbit_
_r_v
tbit_
stbit_
r_andix
ddb_map
ubb_map
ound_r
_pxfer_map
_nbitsclri
onv_
_lib
csc_s
acsc_s
p_s1
cs_s
ys_s
c2s_s
y2s_s
_whc
mpyw_acc
nsert_rp
tstbit_
_popcountp
2_combine_
2_conv_
mpyrsc_s
s_s0
u_s0
_rs1
s_rs
mpyrs_s
_add
mpyh_acc
ertp_rp
xtract_rp
sl_ri
sr_ri
_asrhub_sat
ddh_
ubh_
ddub_acc
adub_acc
cmpbeq_any
4_fastcorner9
yud_
_s0c
dasl_rrri
xtractu_rp
ogglebit_
xtractp_rp
ubi_
4_round_r
_sat
2_vrcmpys_s1rp
sl_i_
_xacc
xtractup_rp
sr_i_
p_s1_sat
mpy2s_s
c_up_s1_sat
yri_addr_u2
ac_up_s1_sat
_vsat
b_nopack
h_nopack
_vrcrotate_acc
_chop
cc_s0
ac_s0
nd_s0
c_s0_sat_
_sat_
cmpys_acc_s1
_vrmpy
h_acc_s
_svw_trun
ub_nopack
uh_nopack
16_sat_
4_fastcorner9_not
2_mpyud_
__builtin_HEXAGON_M2_mpy_
cc_sat_
ac_sat_
at_rnd_
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S2_tableidx
_goodsyntax
__builtin_HEXAGON_S2_asr_i_
_rnd_goodsyntax
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
__builtin_m
ps_l
nd_v
or_v
ri_b
hilo
di_b
ve_v
cnt_
shf_
ori_b
ppend
dsub
l_ph
lri_
nzi_b
egi_
og2_
int_
sve_
ubv_
l_q_
lat_
bvi_
epl_
otp_
lass_
x_a_
n_a_
sqrt_
nsert_
d_q_
ub_q_
lr_q_
lati_
sq_s_w
h_qb
posge32
_w_ph
xtr_
s_ph
_s_w
l_s_w
a_r_w
ddr_q_
ubr_q_
sq_s_
_r_w
q_ph
x_w_ph
xtr_rs_w
ulq_
ackrl_ph
l_s_ph
a_r_
trunc_
ubsu
__builtin_mips_
h_r_ph
h_r_qb
mpu_
q_qb
u_h_qb
_rs_ph
a_w_ph
addu_w_qb
mpgu_
w_ph
_l_w
aq_s_w_ph
qb_ph
_ph_w
mpgdu_
qx_s_w_ph
aq_sa_w_ph
q_w_ph
q_qb_ph
qx_sa_w_ph
q_s_w_ph
receu_ph_qb
uleu_s_ph_qb
u_ph_qb
_ph_qb
sra_ph_w
_rs_ph_w
__builtin_mips_prec
qu_ph_qb
qu_s_qb_ph
__builtin_mips_precr_sra_r_ph_w
__builtin_altivec_
__builtin_altivec_v
l_4si
mpbfp_p
erm_4si
fp_p
__builtin_r600_read_tgid_
__builtin_r600_read_tidig_
__builtin_r600_read_ngroups_
__builtin_r600_read_local_size_
__builtin_r600_read_global_size_
__builtin_ia32_por
__builtin_ia32_
xtrq
orhi
ddqu
xtrqi
ndhi
othi
vntq
endp
flush
mineq
pps256
nsertq
ndnhi
norhi
itor
ignr
gusb
ddsw
ubsw
ddwd
ubus
ddsubp
misd
unpckhi
ddqu256
kmovq
tdqa
lhrsw
cpps256
a1msg
comineq
eroall
ec128
nc128
mc128
extr_u
misdneq
ather
askload
rmti256
dubsw
comisd
xtri_u
642s
oadp
ovdqu
sadbw
ddus
lend
ldqi
estm
sbase
dscales
undp
qrtps256
orelv4si
comisdneq
estnzcp
eroupper
q256
s256
d256
nsertps128
skstorep
tdqa256
qu256
2dq256
xtractps128
mulqdq128
rmvars
addubsw
_mask
roadcastss
xt_v4hi
et_v4hi
ermilvarp
eclast128
nclast128
512_mask
nsert128i256
minposuw128
catter
testnzcp
xtract128i256
askstorep
roadcast
ldq512_mask
ubaddp
mpeq
uludq512_mask
p14p
dscalep
roadcasts
lendm
_512_mask
q512_mask
s512_mask
2dq512_mask
perm2f128_
i256
lendmp
2udq512_mask
ask_gather
sqrt14p
insertf128_
eskeygenassist128
vttp
ask_scatter
xtractf128_
28_byteshift
56_byteshift
12_byteshift
broadcastf128_p
__builtin_ia32_vpconflict
i_512_mask
__builtin_ia32_pbroadcast
512_gpr_mask
512_
pr_mask
em_mask
etps
__builtin_bitrev
Print module to stderr
print-module
Print function to stderr
print-function
Print BB to stderr
print-bb
switch
indirectbr
invoke
resume
fadd
fsub
fmul
udiv
sdiv
fdiv
urem
srem
frem
alloca
store
cmpxchg
atomicrmw
fence
getelementptr
zext
sext
fptrunc
fpext
fptoui
fptosi
uitofp
sitofp
ptrtoint
addrspacecast
icmp
fcmp
call
lshr
ashr
va_arg
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
<Invalid operator> 
both values to select must have same type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
mallocsize
malloc
malloccall
free
prof
fpmath
tbaa.struct
srcloc
debug-pass
Print PassManager debugging information
Disabled
disable debug output
Arguments
print pass arguments to pass to 'opt'
Structure
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
Releasing pass '
Running pass '
 on module '
 on 
basic block
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
 ***
*** IR Dump After 
Pass Arguments: 
 -- '
' is not preserving '
 -*- '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on BasicBlock '
'...
' on Function '
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
 Analyses:
 Uninitialized Pass
Error reading bitcode file: 
FunctionPass Manager
time-passes
Time each pass, printing elapsed time for each on exit
Module Pass Manager
ModulePass Manager
... Pass execution timing report ...
BasicBlock Pass Manager
BasicBlockPass Manager
Function Pass Manager
__unnamed_
llvm.module.flags
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
Two passes with the same argument (-
) attempted to be registered!
i128
f128
ppcf128
isVoid
glue
x86mmx
v2i1
v4i1
v8i1
v16i1
v32i1
v64i1
v1i8
v2i8
v4i8
v8i8
v16i8
v32i8
v64i8
v1i16
v2i16
v4i16
v8i16
v16i16
v32i16
v1i32
v2i32
v4i32
v8i32
v16i32
v1i64
v2i64
v4i64
v8i64
v16i64
v1f32
v2f32
v2f16
v4f16
v8f16
v4f32
v8f32
v16f32
v1f64
v2f64
v4f64
v8f64
Metadata
Untyped
disable-debug-info-verifier
Broken module found, compilation aborted!
Broken function found, compilation aborted!
Function '
' does not contain an entry block!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Varargs functions must have C calling conventions!
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
invalid linkage type for function declaration
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
Invalid user of intrinsic instruction!
Function is marked as dllimport, but not external.
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Attribute sret is not on first parameter!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', and 'returned' do not apply to return values!
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'byval' only applies to parameters with pointer type!
Attribute '
' only applies to functions!
' does not apply to function returns
' does not apply to functions!
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsinc other than donothing
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads!
Instruction does not dominate all uses!
Bitcast requires both operands to be pointer or neither
Bitcast requires types of same width
Bitcast operand must not be aggregate
Bitcast type must not be aggregate
Bitcasts between pointers of different address spaces is not legal.Use AddrSpaceCast instead.
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have a landingpad instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the generic address space!
Cannot allocate unsized type
Alloca array size must have integer type
Load operand must be a pointer.
Load result type does not match pointer operand type!
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic store operand must have integer type!
atomic store operand must be power-of-two byte-sized integer
Non-atomic load cannot have SynchronizationScope specified
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match load type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
Store operand must be a pointer.
Stored value type does not match pointer operand type!
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
Vector GEP must return a vector value
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Vector GEP must have vector indices!
Invalid GEP index vector width
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer type!
cmpxchg operand must be power-of-two byte-sized integer
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw operand must have integer type!
atomicrmw operand must be power-of-two byte-sized integer
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI node operands are not the same type as the result!
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic has too few arguments!
Intrinsic name not mangled correctly for type arguments!
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid llvm.dbg.declare intrinsic call 1
invalid llvm.dbg.declare intrinsic call 2
alignment argument of memory intrinsics must be a constant int
isvolatile argument of memory intrinsics must be a constant int
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
Global metadata operand cannot be function local!
Invalid operand for global metadata!
function-local metadata used in wrong function
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
LandingPadInst not the first non-PHI instruction in the block.
Personality function doesn't match others in function
Personality function is not constant!
Clause is not constant!
Catch operand does not have pointer type!
Filter operand is not an array of constants!
Global is external, but doesn't have external or weak linkage!
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
invalid linkage type for global declaration
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
Global is marked as dllimport, but not external
Alias name cannot be empty!
Alias should have external or external weak linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Alias cannot have unnamed_addr!
Aliasee should be either GlobalValue, bitcast or addrspacecast of GlobalValue
Alias bitcasts cannot be between different address spaces
Aliasing chain should end with function or global variable
Named metadata operand cannot be function local!
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid ID operand in module flag (expected metadata string)
invalid behavior operand in module flag (unexpected constant)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
DICompileUnit does not Verify!
DISubprogram does not Verify!
DIGlobalVariable does not Verify!
DIType does not Verify!
DIScope does not Verify!
Module Verifier
Debug Info Verifier
verify-di
Broken debug info found, compilation aborted!
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
phitmp
.sum
Combine redundant instructions
instcombine
.cmp
__gnat_eh_personality
__gxx_personality_v0
__objc_personality_v0
.offs
addconv
diff.neg
fold
.masked
and.shrunk
.demorgan
bitfield
notlhs
notrhs
umul_with_overflow
.lobit
.mask
sqrtf
sqrtfcall
.unshifted
.trunc
sadd
sadd.result
sadd.overflow
uadd
uadd.overflow
.sub
storemerge
suba
subc
extract
extract.t
not.
.Elt
.lhs
.rhs
.elt
bounds-checking-single-trap
Use one trap block per function
Run-time bounds checking
bounds-checking
trap
dfsan-preserve-alignment
respect alignment requirements provided by input IR
dfsan-abilist
File listing native ABI functions and how the pass treats them
dfsan-args-abi
Use the argument ABI rather than the TLS ABI
dfsan-combine-pointer-labels-on-load
Combine the label of the pointer with the label of the data when loading from memory.
dfsan-combine-pointer-labels-on-store
Combine the label of the pointer with the label of the data when storing in memory.
dfsan-debug-nonzero-labels
Insert calls to __dfsan_nonzero_label on observing a parameter, load or return with a nonzero label
DataFlowSanitizer: dynamic data flow analysis.
skip
__dfsan_arg_tls
__dfsan_retval_tls
__dfsan_union
__dfsan_union_load
__dfsan_unimplemented
__dfsan_set_label
__dfsan_nonzero_label
dfsw$
uninstrumented
dfs$
.symver 
functional
custom
__dfsw_
dfst
labelreturn
default-gcov-version
402*
Invalid -default-gcov-version: 
Insert instrumentation for GCOV profiling
insert-gcov-profiling
GCOV Profiler
llvm.dbg.cu
gcno
oncg
llvm.gcov
llvm.
__llvm_gcov_ctr
__llvm_gcov_init
entry
llvm_gcov_init
__llvm_gcda_edge_table
__llvm_gcov_global_state_pred
__llvm_gcov_indirect_counter_increment
__llvm_gcov_writeout
gcda
llvm_gcda_start_file
llvm_gcda_emit_function
llvm_gcda_emit_arcs
llvm_gcda_summary_info
llvm_gcda_end_file
__llvm_gcov_flush
invalid return type for __llvm_gcov_flush
exit
predecessor
pred
counters
counter
CallGraph Root is: 
<<null function: 0x
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
external node
No call graph has been built!
CallGraph Construction
basiccg
max-cg-scc-iterations
CallGraph Pass Manager
Call Graph SCC Pass Manager
cgscc-passmgr
Maximum CGSCCPassMgr iterations on one SCC
View call graph
view-callgraph
Print call graph to 'dot' file
dot-callgraph
callgraph
Call graph
external node
Types in use by this module:
Find Used Types
print-used-types
Simple mod/ref analysis for globals
globalsmodref-aa
Inline Cost Analysis
inline-cost
Promote 'by reference' arguments to scalars
argpromotion
.idx
A No-Op Barrier Pass
barrier
Merge Duplicate Global Constants
constmerge
Dead Argument Elimination
deadargelim
Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)
deadarghaX0r
newret
oldret
Deduce function attributes
functionattrs
Dead Global Elimination
globaldce
Global Variable Optimizer
globalopt
main
.body
newgv
.init
.val
notinit
isneg
isnull
malloc_cont
malloc_ret_null
free_it
next
llvm.metadata
Interprocedural constant propagation
ipconstprop
Inliner for always_inline functions
always-inline
Function Integration/Inlining
inline
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inlinecold-threshold
Threshold for inlining functions with cold attribute
internalize-public-api-file
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
Internalize Global Symbols
internalize
WARNING: Internalize couldn't load file '
'! Continuing as if it's empty.
llvm.used
llvm.compiler.used
llvm.global_ctors
llvm.global_dtors
llvm.global.annotations
__stack_chk_fail
__stack_chk_guard
extract-blocks-file
A file containing list of basic blocks to not extract
Extract loops into new functions
loop-extract
Extract at most one loop into a new function
loop-extract-single
Extract Basic Blocks From Module (for bugpoint use)
extract-blocks
WARNING: BlockExtractor couldn't load file '
Merge Functions
mergefunc
Partial Inliner
partial-inliner
use-gvn-after-vectorization
Run GVN instead of Early CSE after vectorization passes
use-new-sroa
Enable the new, experimental SROA pass
reroll-loops
Run the loop rerolling pass
Remove unused exception handling info
prune-eh
Strip Unused Function Prototypes
strip-dead-prototypes
Strip all symbols from a module
strip
llvm.dbg
Strip all symbols, except dbg symbols, from a module
strip-nondebug
Strip all llvm.dbg.declare intrinsics
strip-debug-declare
llvm.dbg.declare
Strip debug info for unused symbols
strip-dead-debug-info
WARNING: Linking two modules of different data layouts!
WARNING: Linking two modules of different target triples: 
' and '
Linking globals named '
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
': symbol multiply defined!
linking module flags '
': IDs have conflicting override values
': IDs have conflicting behaviors
': IDs have conflicting values
WARNING: linking module flags '
': does not have the required value
A @@ version cannot be undefined
.rela
.rel
.shstrtab
.symtab
.symtab_shndx
.strtab
Size expression must be absolute.
.ARM.exidx
FK_Data_1
FK_Data_2
FK_Data_4
FK_Data_8
FK_PCRel_1
FK_PCRel_2
FK_PCRel_4
FK_PCRel_8
FK_GPRel_1
FK_GPRel_2
FK_GPRel_4
FK_GPRel_8
FK_SecRel_1
FK_SecRel_2
FK_SecRel_4
FK_SecRel_8
NO_APP
.zero
.ascii
.asciz
.byte
.short
.long
.quad
.align
.globl
 InlineAsm Start
 InlineAsm End
.weak_reference 
.space
.cfi_startproc
.cfi_endproc
.syntax unified
.subsections_via_symbols
.linker_option "
.data_region
.data_region jt8
.data_region jt16
.data_region jt32
.end_data_region
.thumb_func
.weakref 
.type
function
gnu_indirect_function
object
tls_object
common
no_type
gnu_unique_object
.hidden
.indirect_symbol
.internal
.lazy_reference
.local
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.protected
.reference
.weak
.weak_definition
.weak_def_can_be_hidden
.desc
.def
.scl
.endef
.secidx
.secrel32
.size
AdrpAdrp
AdrpLdr
AdrpAddLdr
AdrpLdrGotLdr
AdrpAddStr
AdrpLdrGotStr
AdrpAdd
AdrpLdrGot
.loh
.comm
.lcomm
.zerofill 
.tbss 
Don't know how to emit this value.
.uleb128 
.sleb128 
.p2alignw 
.p2alignl 
, 0x
.balign
.balignw
.balignl
.org 
.file
.ident
.loc
 basic_block
 prologue_end
 epilogue_begin
 is_stmt 
isa 
discriminator 
.cfi_sections 
, .debug_frame
.cfi_def_cfa 
.cfi_def_cfa_offset 
.cfi_def_cfa_register 
.cfi_offset 
.cfi_personality 
.cfi_lsda 
.cfi_remember_state
.cfi_restore_state
.cfi_same_value 
.cfi_rel_offset 
.cfi_adjust_cfa_offset 
.cfi_signal_frame
.cfi_undefined 
.cfi_register 
.cfi_window_save
.seh_proc 
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler 
, @unwind
, @except
.seh_handlerdata
.seh_pushreg 
.seh_setframe 
.seh_stackalloc 
.seh_savereg 
.seh_savexmm 
.seh_pushframe
 @code
.seh_endprologue
.bundle_align_mode 
.bundle_lock
 align_to_end
.bundle_unlock
encoding: [
0x%02x
  fixup 
offset: 
, value: 
, kind: 
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
expected relocatable expression
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
<MCFixup
 Offset:
 Value:
 Kind:
unable to write NOP sequence of 
 bytes
undefined .align directive, value size '
' is not a divisor of padding size '
unable to write nop sequence of 
AS_SECURE_LOG_FILE
.group
llvm-mc (based on LLVM 
Range Start
Range Length
Compact Unwind Encoding: 0x
Personality Function
LSDA
EH_frame
CIE Length
CIE ID Tag
DW_CIE_VERSION
CIE Augmentation
CIE Code Alignment Factor
CIE Data Alignment Factor
CIE Return Address Column
Augmentation Size
Personality Encoding
Personality
LSDA Encoding
FDE Encoding
<unknown encoding>
absptr
omit
pcrel
udata4
udata8
sdata4
sdata8
pcrel udata4
pcrel sdata4
pcrel udata8
screl sdata8
indirect pcrel udata4
indirect pcrel sdata4
indirect pcrel udata8
indirect pcrel sdata8
DW_CFA_advance_loc4
DW_CFA_register
Reg1 
Reg2 
DW_CFA_undefined
Reg 
DW_CFA_def_cfa_offset
Offset 
DW_CFA_def_cfa
DW_CFA_def_cfa_register
DW_CFA_offset_extended_sf
DW_CFA_offset + Reg(
DW_CFA_offset_extended
DW_CFA_remember_state
DW_CFA_restore_state
DW_CFA_same_value
DW_CFA_restore
Escape bytes
FDE Length
FDE CIE Offset
FDE initial location
FDE address range
Augmentation size
Language Specific Data Area
Unterminated .bundle_lock when changing a section
Emitting values inside a locked bundle is forbidden
.comment
.bundle_align_mode should be only set once per file
.bundle_lock forbidden when bundling is disabled
Nesting of .bundle_lock is forbidden
.bundle_unlock forbidden when bundling is disabled
.bundle_unlock without matching lock
Empty bundle-locked group is forbidden
<<invalid>>
<<none>>
GOTOFF
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
DTPOFF
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
target1
target2
prel31
tlsldo
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel
tprel@l
tprel@h
tprel@ha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel
dtprel@l
dtprel@h
dtprel@ha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
tlsgd
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
tlsld
GPREL
GOT_CALL
GOT16
ABS_HI
ABS_LO
DTPREL_HI
DTPREL_LO
GOTTPREL
TPREL_HI
TPREL_LO
GPOFF_HI
GPOFF_LO
GOT_DISP
GOT_PAGE
GOT_OFST
HIGHER
HIGHEST
GOT_HI16
GOT_LO16
CALL_HI16
CALL_LO16
IMGREL32
gotoff
gotpcrel
gottpoff
indntpoff
ntpoff
gotntpoff
tlsldm
tpoff
dtpoff
tlvp
tlvppage
tlvppageoff
page
pageoff
gotpage
gotpageoff
IMGREL
imgrel
secrel32
HIGHERA
HIGHESTA
GOT@L
GOT@H
GOT@HA
TOCBASE
TOC@L
TOC@H
TOC@HA
DTPMOD
TPREL
TPREL@L
TPREL@H
TPREL@HA
TPREL@HIGHER
TPREL@HIGHERA
TPREL@HIGHEST
TPREL@HIGHESTA
DTPREL
DTPREL@L
DTPREL@H
DTPREL@HA
DTPREL@HIGHER
DTPREL@HIGHERA
DTPREL@HIGHEST
DTPREL@HIGHESTA
GOT@TPREL
GOT@TPREL@L
GOT@TPREL@H
GOT@TPREL@HA
GOT@DTPREL
GOT@DTPREL@L
GOT@DTPREL@H
GOT@DTPREL@HA
GOT@TLSGD
GOT@TLSGD@L
GOT@TLSGD@H
GOT@TLSGD@HA
GOT@TLSLD
GOT@TLSLD@L
GOT@TLSLD@H
GOT@TLSLD@HA
NONE
TARGET1
TARGET2
PREL31
TLSLDO
<MCOperand 
INVALID
Reg:
Imm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
%lld
-0x%llx
0x%llx
-0%llxh
-%llxh
0%llxh
%llxh
__TEXT
__text
__DATA
__data
__thread_data
__thread_bss
__thread_vars
__thread_init
__cstring
__ustring
__literal4
__literal8
__literal16
__const
__textcoal_nt
__const_coal
__datacoal_nt
__common
__bss
__la_symbol_ptr
__nl_symbol_ptr
__constructor
__destructor
__mod_init_func
__mod_term_func
__gcc_except_tab
__LD
__compact_unwind
__DWARF
__apple_names
__apple_objc
__apple_namespac
__apple_types
__debug_abbrev
__debug_info
__debug_line
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
__debug_loc
__debug_aranges
__debug_ranges
__debug_macinfo
__debug_inlined
__LLVM_STACKMAPS
__llvm_stackmaps
.bss
.text
.data
.rodata
.tdata
.tbss
.data.rel
.data.rel.local
.data.rel.ro
.data.rel.ro.local
.rodata.cst4
.rodata.cst8
.rodata.cst16
.ctors
.dtors
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_frame
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_info.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_addr
.rdata
.CRT$XCU
.CRT$XTX
.drectve
.pdata
.xdata
.tls$
.debug_types
.debug_types.dwo
__eh_frame
.eh_frame
This file format doesn't support weak aliases.
Cannot evaluate subsection number
Subsection number out of range
one_only,
discard,
same_size,
same_contents,
associative 
largest,
newest,
.section
,#alloc
,#execinstr
,#write
,#exclude
,#tls
init_array
fini_array
preinit_array
nobits
note
progbits
,comdat
.subsection
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
_begin
_end
,none,
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
No open frame
Starting a frame before finishing the previous one!
No symbol to start a frame
No open Win64 EH frame function!
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
Frame register and offset already specified!
Misaligned frame pointer offset!
Misaligned stack allocation!
Misaligned saved register offset!
Misaligned saved vector register offset!
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it,  something must not be fully mc'ized
Unfinished frame!
Not supported!
' is not a recognized processor for this target
 (ignoring processor)
invalid 'common' alignment '
' for '
indirect symbol '
' not in a symbol pointer or stub section
' is not a recognized feature for this target
 (ignoring feature)
+help
Available CPUs for this target:
  %-*s - %s.
Available features for this target:
Use +feature to enable a feature, or -feature to disable it.
For example, llc -mcpu=mycpu -mattr=+feature1,-feature2
Weak externals may only alias symbols
.weak.
.default
Missing associated COMDAT section 
 for section 
COFF string table is greater than 9,999,999 bytes.
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid decimal number
invalid hexdecimal number
invalid binary number
invalid hexadecimal number
invalid octal number
unterminated single quote
single quote way too long
unterminated string constant
invalid character in input
fatal-assembler-warnings
Consider warnings as error
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.int
.4byte
.quad
.8byte
.single
.float
.double
.align
.align32
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.comm
.common
.lcomm
.abort
.include
.incbin
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifb
.ifnb
.ifc
.ifnc
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.file
.line
.loc
.stabs
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.endm
.endmacro
.purgem
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
invalid symbol redefinition
 not supported yet
unknown directive
_emit
__emit
_EMIT
__EMIT
align
ALIGN
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected identifier after '.ifdef'
Encountered a .elseif that doesn't follow a .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow a .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow a .if or .else
unexpected token in assignment
assignment to pseudo-symbol '.' is unsupported (use '.space' or '.org').)
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
macros cannot be nested more than 20 levels deep
.endmacro
<instantiation>
macro argument '
' is missing
Too many arguments
unexpected token in macro instantiation
expected ' ' for macro argument separator
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier after '
unexpected token in '
expected string in '
' directive
literal value out of range for directive
infinity
invalid floating point literal
invalid alignment value
alignment must be a power of 2
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
unexpected token in '.org' directive
expected assembly-time absolute expression
unexpected token in '.fill' directive
invalid '.fill' size, expected 1, 2, 4, or 8
unexpected token in '.zero' directive
expected identifier in directive
non-local symbol required in directive
unable to emit symbol attribute
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
Could not find incbin file '
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
align_to_end
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
invalid number of bytes in '
file number less than one
unexpected token in '.file' directive
explicit path specified, but no file number
input can't have .file dwarf directives when -g is used to generate dwarf debug info for assembly code
file number already allocated
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
basic_block
prologue_end
epilogue_begin
is_stmt
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
discriminator
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
Expected an identifier
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
no matching '.endmacro' in definition
macro '
' is already defined
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.align 
while in macro instantiation
unexpected backslash at end of string
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
unexpected token in variant, expected ')'
unexpected modifier on variable reference
brackets expression not supported on this target
expected ')' in parentheses expression
expected ']' in brackets expression
expected absolute expression
expected section directive before assembly directive
.def
.scl
.endef
.secrel32
.secidx
.linkonce
.seh_proc
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_pushreg
.seh_setframe
.seh_stackalloc
.seh_savereg
.seh_savexmm
.seh_pushframe
.seh_endprologue
unexpected token in section switching directive
expected comma in directive
conflicting section flags 'b' and 'd'.
one_only
discard
same_size
same_contents
associative
largest
newest
unrecognized COMDAT type '
expected associated section name
cannot associate unknown section '
associated section must be a COMDAT section
associated section cannot be itself associative
cannot associate a section with itself
section '
' is already linkonce
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
except
register can't be represented in SEH unwind info
register number is too high
you must specify a stack pointer offset
offset is not a multiple of 16
size is not a multiple of 8
you must specify an offset on the stack
code
expected @code
.indirect_symbol
.lsym
.dump
.load
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
jt16
jt32
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__dyld
__fvmlib_init0
__fvmlib_init1
__OBJC
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
.section
.pushsection
.popsection
.size
.previous
.type
.ident
.symver
.version
.weakref
.weak
.local
.protected
.internal
.hidden
.subsection
.fini
expected string in directive
unknown flag
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
expected '@<type>', '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
comdat
Linkage must be 'comdat'
.note
.init_array
.fini_array
.preinit_array
unknown section type
.popsection without corresponding .pushsection
.previous without corresponding .section
unexpected token in '.type' directive
expected symbol type in directive
STT_FUNC
STT_OBJECT
STT_TLS
STT_COMMON
STT_NOTYPE
STT_GNU_IFUNC
notype
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
unsupported attribute in '.type' directive
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
__.SYMDEF
__.SYMDEF SORTED
getSymbolValue unimplemented in COFFObjectFile
Libraries needed unimplemented in COFFObjectFile
COFF-i386
COFF-x86-64
COFF-<unknown arch>
getRelocationAddress not implemented in COFFObjectFile
IMAGE_REL_AMD64_ABSOLUTE
IMAGE_REL_AMD64_ADDR64
IMAGE_REL_AMD64_ADDR32
IMAGE_REL_AMD64_ADDR32NB
IMAGE_REL_AMD64_REL32
IMAGE_REL_AMD64_REL32_1
IMAGE_REL_AMD64_REL32_2
IMAGE_REL_AMD64_REL32_3
IMAGE_REL_AMD64_REL32_4
IMAGE_REL_AMD64_REL32_5
IMAGE_REL_AMD64_SECTION
IMAGE_REL_AMD64_SECREL
IMAGE_REL_AMD64_SECREL7
IMAGE_REL_AMD64_TOKEN
IMAGE_REL_AMD64_SREL32
IMAGE_REL_AMD64_PAIR
IMAGE_REL_AMD64_SSPAN32
IMAGE_REL_I386_ABSOLUTE
IMAGE_REL_I386_DIR16
IMAGE_REL_I386_REL16
IMAGE_REL_I386_DIR32
IMAGE_REL_I386_DIR32NB
IMAGE_REL_I386_SEG12
IMAGE_REL_I386_SECTION
IMAGE_REL_I386_SECREL
IMAGE_REL_I386_TOKEN
IMAGE_REL_I386_SECREL7
IMAGE_REL_I386_REL32
getLibraryNext not implemented in COFFObjectFile
getLibraryPath not implemented in COFFObjectFile
R_X86_64_NONE
R_X86_64_64
R_X86_64_PC32
R_X86_64_GOT32
R_X86_64_PLT32
R_X86_64_COPY
R_X86_64_GLOB_DAT
R_X86_64_JUMP_SLOT
R_X86_64_RELATIVE
R_X86_64_GOTPCREL
R_X86_64_32
R_X86_64_32S
R_X86_64_16
R_X86_64_PC16
R_X86_64_8
R_X86_64_PC8
R_X86_64_DTPMOD64
R_X86_64_DTPOFF64
R_X86_64_TPOFF64
R_X86_64_TLSGD
R_X86_64_TLSLD
R_X86_64_DTPOFF32
R_X86_64_GOTTPOFF
R_X86_64_TPOFF32
R_X86_64_PC64
R_X86_64_GOTOFF64
R_X86_64_GOTPC32
R_X86_64_GOT64
R_X86_64_GOTPCREL64
R_X86_64_GOTPC64
R_X86_64_GOTPLT64
R_X86_64_PLTOFF64
R_X86_64_SIZE32
R_X86_64_SIZE64
R_X86_64_GOTPC32_TLSDESC
R_X86_64_TLSDESC_CALL
R_X86_64_TLSDESC
R_X86_64_IRELATIVE
R_386_NONE
R_386_32
R_386_PC32
R_386_GOT32
R_386_PLT32
R_386_COPY
R_386_GLOB_DAT
R_386_JUMP_SLOT
R_386_RELATIVE
R_386_GOTOFF
R_386_GOTPC
R_386_32PLT
R_386_TLS_TPOFF
R_386_TLS_IE
R_386_TLS_GOTIE
R_386_TLS_LE
R_386_TLS_GD
R_386_TLS_LDM
R_386_16
R_386_PC16
R_386_8
R_386_PC8
R_386_TLS_GD_32
R_386_TLS_GD_PUSH
R_386_TLS_GD_CALL
R_386_TLS_GD_POP
R_386_TLS_LDM_32
R_386_TLS_LDM_PUSH
R_386_TLS_LDM_CALL
R_386_TLS_LDM_POP
R_386_TLS_LDO_32
R_386_TLS_IE_32
R_386_TLS_LE_32
R_386_TLS_DTPMOD32
R_386_TLS_DTPOFF32
R_386_TLS_TPOFF32
R_386_TLS_GOTDESC
R_386_TLS_DESC_CALL
R_386_TLS_DESC
R_386_IRELATIVE
R_MIPS_NONE
R_MIPS_16
R_MIPS_32
R_MIPS_REL32
R_MIPS_26
R_MIPS_HI16
R_MIPS_LO16
R_MIPS_GPREL16
R_MIPS_LITERAL
R_MIPS_GOT16
R_MIPS_PC16
R_MIPS_CALL16
R_MIPS_GPREL32
R_MIPS_SHIFT5
R_MIPS_SHIFT6
R_MIPS_64
R_MIPS_GOT_DISP
R_MIPS_GOT_PAGE
R_MIPS_GOT_OFST
R_MIPS_GOT_HI16
R_MIPS_GOT_LO16
R_MIPS_SUB
R_MIPS_INSERT_A
R_MIPS_INSERT_B
R_MIPS_DELETE
R_MIPS_HIGHER
R_MIPS_HIGHEST
R_MIPS_CALL_HI16
R_MIPS_CALL_LO16
R_MIPS_SCN_DISP
R_MIPS_REL16
R_MIPS_ADD_IMMEDIATE
R_MIPS_PJUMP
R_MIPS_RELGOT
R_MIPS_JALR
R_MIPS_TLS_DTPMOD32
R_MIPS_TLS_DTPREL32
R_MIPS_TLS_DTPMOD64
R_MIPS_TLS_DTPREL64
R_MIPS_TLS_GD
R_MIPS_TLS_LDM
R_MIPS_TLS_DTPREL_HI16
R_MIPS_TLS_DTPREL_LO16
R_MIPS_TLS_GOTTPREL
R_MIPS_TLS_TPREL32
R_MIPS_TLS_TPREL64
R_MIPS_TLS_TPREL_HI16
R_MIPS_TLS_TPREL_LO16
R_MIPS_GLOB_DAT
R_MIPS_COPY
R_MIPS_JUMP_SLOT
R_MICROMIPS_26_S1
R_MICROMIPS_HI16
R_MICROMIPS_LO16
R_MICROMIPS_GOT16
R_MICROMIPS_PC16_S1
R_MICROMIPS_CALL16
R_MICROMIPS_GOT_DISP
R_MICROMIPS_GOT_PAGE
R_MICROMIPS_GOT_OFST
R_MICROMIPS_TLS_GD
R_MICROMIPS_TLS_LDM
R_MICROMIPS_TLS_DTPREL_HI16
R_MICROMIPS_TLS_DTPREL_LO16
R_MICROMIPS_TLS_TPREL_HI16
R_MICROMIPS_TLS_TPREL_LO16
R_MIPS_NUM
R_AARCH64_NONE
R_AARCH64_ABS64
R_AARCH64_ABS32
R_AARCH64_ABS16
R_AARCH64_PREL64
R_AARCH64_PREL32
R_AARCH64_PREL16
R_AARCH64_MOVW_UABS_G0
R_AARCH64_MOVW_UABS_G0_NC
R_AARCH64_MOVW_UABS_G1
R_AARCH64_MOVW_UABS_G1_NC
R_AARCH64_MOVW_UABS_G2
R_AARCH64_MOVW_UABS_G2_NC
R_AARCH64_MOVW_UABS_G3
R_AARCH64_MOVW_SABS_G0
R_AARCH64_MOVW_SABS_G1
R_AARCH64_MOVW_SABS_G2
R_AARCH64_LD_PREL_LO19
R_AARCH64_ADR_PREL_LO21
R_AARCH64_ADR_PREL_PG_HI21
R_AARCH64_ADD_ABS_LO12_NC
R_AARCH64_LDST8_ABS_LO12_NC
R_AARCH64_TSTBR14
R_AARCH64_CONDBR19
R_AARCH64_JUMP26
R_AARCH64_CALL26
R_AARCH64_LDST16_ABS_LO12_NC
R_AARCH64_LDST32_ABS_LO12_NC
R_AARCH64_LDST64_ABS_LO12_NC
R_AARCH64_LDST128_ABS_LO12_NC
R_AARCH64_ADR_GOT_PAGE
R_AARCH64_LD64_GOT_LO12_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G2
R_AARCH64_TLSLD_MOVW_DTPREL_G1
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G0
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_TLSLD_ADD_DTPREL_HI12
R_AARCH64_TLSLD_ADD_DTPREL_LO12
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_TLSLE_MOVW_TPREL_G2
R_AARCH64_TLSLE_MOVW_TPREL_G1
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
R_AARCH64_TLSLE_MOVW_TPREL_G0
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_TLSLE_ADD_TPREL_HI12
R_AARCH64_TLSLE_ADD_TPREL_LO12
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST8_TPREL_LO12
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST16_TPREL_LO12
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST32_TPREL_LO12
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST64_TPREL_LO12
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_TLSDESC_ADR_PAGE
R_AARCH64_TLSDESC_LD64_LO12_NC
R_AARCH64_TLSDESC_ADD_LO12_NC
R_AARCH64_TLSDESC_CALL
R_ARM_NONE
R_ARM_PC24
R_ARM_ABS32
R_ARM_REL32
R_ARM_LDR_PC_G0
R_ARM_ABS16
R_ARM_ABS12
R_ARM_THM_ABS5
R_ARM_ABS8
R_ARM_SBREL32
R_ARM_THM_CALL
R_ARM_THM_PC8
R_ARM_BREL_ADJ
R_ARM_TLS_DESC
R_ARM_THM_SWI8
R_ARM_XPC25
R_ARM_THM_XPC22
R_ARM_TLS_DTPMOD32
R_ARM_TLS_DTPOFF32
R_ARM_TLS_TPOFF32
R_ARM_COPY
R_ARM_GLOB_DAT
R_ARM_JUMP_SLOT
R_ARM_RELATIVE
R_ARM_GOTOFF32
R_ARM_BASE_PREL
R_ARM_GOT_BREL
R_ARM_PLT32
R_ARM_CALL
R_ARM_JUMP24
R_ARM_THM_JUMP24
R_ARM_BASE_ABS
R_ARM_ALU_PCREL_7_0
R_ARM_ALU_PCREL_15_8
R_ARM_ALU_PCREL_23_15
R_ARM_LDR_SBREL_11_0_NC
R_ARM_ALU_SBREL_19_12_NC
R_ARM_ALU_SBREL_27_20_CK
R_ARM_TARGET1
R_ARM_SBREL31
R_ARM_V4BX
R_ARM_TARGET2
R_ARM_PREL31
R_ARM_MOVW_ABS_NC
R_ARM_MOVT_ABS
R_ARM_MOVW_PREL_NC
R_ARM_MOVT_PREL
R_ARM_THM_MOVW_ABS_NC
R_ARM_THM_MOVT_ABS
R_ARM_THM_MOVW_PREL_NC
R_ARM_THM_MOVT_PREL
R_ARM_THM_JUMP19
R_ARM_THM_JUMP6
R_ARM_THM_ALU_PREL_11_0
R_ARM_THM_PC12
R_ARM_ABS32_NOI
R_ARM_REL32_NOI
R_ARM_ALU_PC_G0_NC
R_ARM_ALU_PC_G0
R_ARM_ALU_PC_G1_NC
R_ARM_ALU_PC_G1
R_ARM_ALU_PC_G2
R_ARM_LDR_PC_G1
R_ARM_LDR_PC_G2
R_ARM_LDRS_PC_G0
R_ARM_LDRS_PC_G1
R_ARM_LDRS_PC_G2
R_ARM_LDC_PC_G0
R_ARM_LDC_PC_G1
R_ARM_LDC_PC_G2
R_ARM_ALU_SB_G0_NC
R_ARM_ALU_SB_G0
R_ARM_ALU_SB_G1_NC
R_ARM_ALU_SB_G1
R_ARM_ALU_SB_G2
R_ARM_LDR_SB_G0
R_ARM_LDR_SB_G1
R_ARM_LDR_SB_G2
R_ARM_LDRS_SB_G0
R_ARM_LDRS_SB_G1
R_ARM_LDRS_SB_G2
R_ARM_LDC_SB_G0
R_ARM_LDC_SB_G1
R_ARM_LDC_SB_G2
R_ARM_MOVW_BREL_NC
R_ARM_MOVT_BREL
R_ARM_MOVW_BREL
R_ARM_THM_MOVW_BREL_NC
R_ARM_THM_MOVT_BREL
R_ARM_THM_MOVW_BREL
R_ARM_TLS_GOTDESC
R_ARM_TLS_CALL
R_ARM_TLS_DESCSEQ
R_ARM_THM_TLS_CALL
R_ARM_PLT32_ABS
R_ARM_GOT_ABS
R_ARM_GOT_PREL
R_ARM_GOT_BREL12
R_ARM_GOTOFF12
R_ARM_GOTRELAX
R_ARM_GNU_VTENTRY
R_ARM_GNU_VTINHERIT
R_ARM_THM_JUMP11
R_ARM_THM_JUMP8
R_ARM_TLS_GD32
R_ARM_TLS_LDM32
R_ARM_TLS_LDO32
R_ARM_TLS_IE32
R_ARM_TLS_LE32
R_ARM_TLS_LDO12
R_ARM_TLS_LE12
R_ARM_TLS_IE12GP
R_ARM_PRIVATE_0
R_ARM_PRIVATE_1
R_ARM_PRIVATE_2
R_ARM_PRIVATE_3
R_ARM_PRIVATE_4
R_ARM_PRIVATE_5
R_ARM_PRIVATE_6
R_ARM_PRIVATE_7
R_ARM_PRIVATE_8
R_ARM_PRIVATE_9
R_ARM_PRIVATE_10
R_ARM_PRIVATE_11
R_ARM_PRIVATE_12
R_ARM_PRIVATE_13
R_ARM_PRIVATE_14
R_ARM_PRIVATE_15
R_ARM_ME_TOO
R_ARM_THM_TLS_DESCSEQ16
R_ARM_THM_TLS_DESCSEQ32
R_HEX_NONE
R_HEX_B22_PCREL
R_HEX_B15_PCREL
R_HEX_B7_PCREL
R_HEX_LO16
R_HEX_HI16
R_HEX_32
R_HEX_16
R_HEX_8
R_HEX_GPREL16_0
R_HEX_GPREL16_1
R_HEX_GPREL16_2
R_HEX_GPREL16_3
R_HEX_HL16
R_HEX_B13_PCREL
R_HEX_B9_PCREL
R_HEX_B32_PCREL_X
R_HEX_32_6_X
R_HEX_B22_PCREL_X
R_HEX_B15_PCREL_X
R_HEX_B13_PCREL_X
R_HEX_B9_PCREL_X
R_HEX_B7_PCREL_X
R_HEX_16_X
R_HEX_12_X
R_HEX_11_X
R_HEX_10_X
R_HEX_9_X
R_HEX_8_X
R_HEX_7_X
R_HEX_6_X
R_HEX_32_PCREL
R_HEX_COPY
R_HEX_GLOB_DAT
R_HEX_JMP_SLOT
R_HEX_RELATIVE
R_HEX_PLT_B22_PCREL
R_HEX_GOTREL_LO16
R_HEX_GOTREL_HI16
R_HEX_GOTREL_32
R_HEX_GOT_LO16
R_HEX_GOT_HI16
R_HEX_GOT_32
R_HEX_GOT_16
R_HEX_DTPMOD_32
R_HEX_DTPREL_LO16
R_HEX_DTPREL_HI16
R_HEX_DTPREL_32
R_HEX_DTPREL_16
R_HEX_GD_PLT_B22_PCREL
R_HEX_GD_GOT_LO16
R_HEX_GD_GOT_HI16
R_HEX_GD_GOT_32
R_HEX_GD_GOT_16
R_HEX_IE_LO16
R_HEX_IE_HI16
R_HEX_IE_32
R_HEX_IE_GOT_LO16
R_HEX_IE_GOT_HI16
R_HEX_IE_GOT_32
R_HEX_IE_GOT_16
R_HEX_TPREL_LO16
R_HEX_TPREL_HI16
R_HEX_TPREL_32
R_HEX_TPREL_16
R_HEX_6_PCREL_X
R_HEX_GOTREL_32_6_X
R_HEX_GOTREL_16_X
R_HEX_GOTREL_11_X
R_HEX_GOT_32_6_X
R_HEX_GOT_16_X
R_HEX_GOT_11_X
R_HEX_DTPREL_32_6_X
R_HEX_DTPREL_16_X
R_HEX_DTPREL_11_X
R_HEX_GD_GOT_32_6_X
R_HEX_GD_GOT_16_X
R_HEX_GD_GOT_11_X
R_HEX_IE_32_6_X
R_HEX_IE_16_X
R_HEX_IE_GOT_32_6_X
R_HEX_IE_GOT_16_X
R_HEX_IE_GOT_11_X
R_HEX_TPREL_32_6_X
R_HEX_TPREL_16_X
R_HEX_TPREL_11_X
R_PPC_NONE
R_PPC_ADDR32
R_PPC_ADDR24
R_PPC_ADDR16
R_PPC_ADDR16_LO
R_PPC_ADDR16_HI
R_PPC_ADDR16_HA
R_PPC_ADDR14
R_PPC_ADDR14_BRTAKEN
R_PPC_ADDR14_BRNTAKEN
R_PPC_REL24
R_PPC_REL14
R_PPC_REL14_BRTAKEN
R_PPC_REL14_BRNTAKEN
R_PPC_GOT16
R_PPC_GOT16_LO
R_PPC_GOT16_HI
R_PPC_GOT16_HA
R_PPC_REL32
R_PPC_TLS
R_PPC_DTPMOD32
R_PPC_TPREL16
R_PPC_TPREL16_LO
R_PPC_TPREL16_HI
R_PPC_TPREL16_HA
R_PPC_TPREL32
R_PPC_DTPREL16
R_PPC_DTPREL16_LO
R_PPC_DTPREL16_HI
R_PPC_DTPREL16_HA
R_PPC_DTPREL32
R_PPC_GOT_TLSGD16
R_PPC_GOT_TLSGD16_LO
R_PPC_GOT_TLSGD16_HI
R_PPC_GOT_TLSGD16_HA
R_PPC_GOT_TLSLD16
R_PPC_GOT_TLSLD16_LO
R_PPC_GOT_TLSLD16_HI
R_PPC_GOT_TLSLD16_HA
R_PPC_GOT_TPREL16
R_PPC_GOT_TPREL16_LO
R_PPC_GOT_TPREL16_HI
R_PPC_GOT_TPREL16_HA
R_PPC_GOT_DTPREL16
R_PPC_GOT_DTPREL16_LO
R_PPC_GOT_DTPREL16_HI
R_PPC_GOT_DTPREL16_HA
R_PPC_TLSGD
R_PPC_TLSLD
R_PPC_REL16
R_PPC_REL16_LO
R_PPC_REL16_HI
R_PPC_REL16_HA
R_PPC64_NONE
R_PPC64_ADDR32
R_PPC64_ADDR24
R_PPC64_ADDR16
R_PPC64_ADDR16_LO
R_PPC64_ADDR16_HI
R_PPC64_ADDR16_HA
R_PPC64_ADDR14
R_PPC64_ADDR14_BRTAKEN
R_PPC64_ADDR14_BRNTAKEN
R_PPC64_REL24
R_PPC64_REL14
R_PPC64_REL14_BRTAKEN
R_PPC64_REL14_BRNTAKEN
R_PPC64_GOT16
R_PPC64_GOT16_LO
R_PPC64_GOT16_HI
R_PPC64_GOT16_HA
R_PPC64_REL32
R_PPC64_ADDR64
R_PPC64_ADDR16_HIGHER
R_PPC64_ADDR16_HIGHERA
R_PPC64_ADDR16_HIGHEST
R_PPC64_ADDR16_HIGHESTA
R_PPC64_REL64
R_PPC64_TOC16
R_PPC64_TOC16_LO
R_PPC64_TOC16_HI
R_PPC64_TOC16_HA
R_PPC64_TOC
R_PPC64_ADDR16_DS
R_PPC64_ADDR16_LO_DS
R_PPC64_GOT16_DS
R_PPC64_GOT16_LO_DS
R_PPC64_TOC16_DS
R_PPC64_TOC16_LO_DS
R_PPC64_TLS
R_PPC64_DTPMOD64
R_PPC64_TPREL16
R_PPC64_TPREL16_LO
R_PPC64_TPREL16_HI
R_PPC64_TPREL16_HA
R_PPC64_TPREL64
R_PPC64_DTPREL16
R_PPC64_DTPREL16_LO
R_PPC64_DTPREL16_HI
R_PPC64_DTPREL16_HA
R_PPC64_DTPREL64
R_PPC64_GOT_TLSGD16
R_PPC64_GOT_TLSGD16_LO
R_PPC64_GOT_TLSGD16_HI
R_PPC64_GOT_TLSGD16_HA
R_PPC64_GOT_TLSLD16
R_PPC64_GOT_TLSLD16_LO
R_PPC64_GOT_TLSLD16_HI
R_PPC64_GOT_TLSLD16_HA
R_PPC64_GOT_TPREL16_DS
R_PPC64_GOT_TPREL16_LO_DS
R_PPC64_GOT_TPREL16_HI
R_PPC64_GOT_TPREL16_HA
R_PPC64_GOT_DTPREL16_DS
R_PPC64_GOT_DTPREL16_LO_DS
R_PPC64_GOT_DTPREL16_HI
R_PPC64_GOT_DTPREL16_HA
R_PPC64_TPREL16_DS
R_PPC64_TPREL16_LO_DS
R_PPC64_TPREL16_HIGHER
R_PPC64_TPREL16_HIGHERA
R_PPC64_TPREL16_HIGHEST
R_PPC64_TPREL16_HIGHESTA
R_PPC64_DTPREL16_DS
R_PPC64_DTPREL16_LO_DS
R_PPC64_DTPREL16_HIGHER
R_PPC64_DTPREL16_HIGHERA
R_PPC64_DTPREL16_HIGHEST
R_PPC64_DTPREL16_HIGHESTA
R_PPC64_TLSGD
R_PPC64_TLSLD
R_PPC64_REL16
R_PPC64_REL16_LO
R_PPC64_REL16_HI
R_PPC64_REL16_HA
R_390_NONE
R_390_8
R_390_12
R_390_16
R_390_32
R_390_PC32
R_390_GOT12
R_390_GOT32
R_390_PLT32
R_390_COPY
R_390_GLOB_DAT
R_390_JMP_SLOT
R_390_RELATIVE
R_390_GOTOFF
R_390_GOTPC
R_390_GOT16
R_390_PC16
R_390_PC16DBL
R_390_PLT16DBL
R_390_PC32DBL
R_390_PLT32DBL
R_390_GOTPCDBL
R_390_64
R_390_PC64
R_390_GOT64
R_390_PLT64
R_390_GOTENT
R_390_GOTOFF16
R_390_GOTOFF64
R_390_GOTPLT12
R_390_GOTPLT16
R_390_GOTPLT32
R_390_GOTPLT64
R_390_GOTPLTENT
R_390_PLTOFF16
R_390_PLTOFF32
R_390_PLTOFF64
R_390_TLS_LOAD
R_390_TLS_GDCALL
R_390_TLS_LDCALL
R_390_TLS_GD32
R_390_TLS_GD64
R_390_TLS_GOTIE12
R_390_TLS_GOTIE32
R_390_TLS_GOTIE64
R_390_TLS_LDM32
R_390_TLS_LDM64
R_390_TLS_IE32
R_390_TLS_IE64
R_390_TLS_IEENT
R_390_TLS_LE32
R_390_TLS_LE64
R_390_TLS_LDO32
R_390_TLS_LDO64
R_390_TLS_DTPMOD
R_390_TLS_DTPOFF
R_390_TLS_TPOFF
R_390_20
R_390_GOT20
R_390_GOTPLT20
R_390_TLS_GOTIE20
R_390_IRELATIVE
Buffer is not an ELF object file!
File too short!
Section header table goes past end of file!
Section table goes past end of file!
More than one .symtab_shndx!
More than one .symtab!
More than one .dynsym!
More than one .dynamic!
More than one .gnu.version section!
More than one .gnu.version_d section!
More than one .gnu.version_r section!
String table must end with a null terminator!
Invalid symbol table section type!
ELF32-i386
ELF32-x86-64
ELF32-arm
ELF32-hexagon
ELF32-mips
ELF32-ppc
ELF32-unknown
ELF64-i386
ELF64-x86-64
ELF64-aarch64
ELF64-ppc64
ELF64-s390
ELF64-unknown
Invalid ELFCLASS!
llvm.object
Success
No object file for requested architecture
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
getSymbolValue unimplemented in MachOObjectFile
getRelocationAddress not implemented in MachOObjectFile
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
PCREL
@TLV
Expected GENERIC_RELOC_PAIR after GENERIC_RELOC_SECTDIFF.
Expected GENERIC_RELOC_PAIR after GENERIC_RELOC_LOCAL_SECTDIFF.
:upper16:(
:lower16:(
Expected ARM_RELOC_PAIR after ARM_RELOC_HALF
Needed libraries unimplemented in MachOObjectFile
Mach-O 32-bit i386
Mach-O arm
Mach-O 32-bit ppc
Mach-O 32-bit unknown
Mach-O 64-bit x86-64
Mach-O arm64
Mach-O 64-bit ppc64
Mach-O 64-bit unknown
get_load_name() unimplemented in MachOObjectFile
Aggressive Dead Code Elimination
adce
Constant Hoisting
consthoist
const
const_mat
Simple constant propagation
constprop
Value Propagation
correlated-propagation
Dead Instruction Elimination
Dead Code Elimination
Dead Store Elimination
scalarize-load-store
Allow the scalarizer pass to scalarize loads and store
Scalarize vector operations
scalarizer
llvm.mem.parallel_loop_access
.cast
.upto
early-cse
Early CSE
enable-pre
enable-load-pre
max-recurse-depth
Max recurse depth (default = 1000)
.pre
trunc
inttoptr
bitcast
.pre-phi
Global Value Numbering
verify-indvars
Verify the ScalarEvolution result after running indvars
liv-reduce
Reduce live induction variables.
Induction Variable Simplification
indvars
indvar.conv
.wide
lftr.wideiv
lftr.limit
jump-threading-threshold
Max block size to duplicate for jump threading
Jump Threading
jump-threading
.thr_comm
.thread
select.unfold
thread-pre-split
disable-licm-promotion
Disable memory promotion in LICM pass
Loop Invariant Code Motion
licm
scalar-evolution
invariant.load
.promoted
Delete dead loops
loop-deletion
Recognize loop idioms
loop-idiom
memset
memcpy
memset_pattern16
.memset_pattern
tcphi
tcdec
Rotate Loops
loop-rotate
.lr.ph
enable-lsr-phielim
Enable LSR phi elimination
Loop Strength Reduction
loop-reduce
IV.S.
IV.S.next.
.termcond
scmp
lsr.chain
max-reroll-increment
The maximum increment for loop rerolling
Reroll loops
loop-reroll
reroll
exitcond
unroll-threshold
The cut-off point for automatic loop unrolling
unroll-count
Use this unroll count for all loops, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-runtime
Unroll loops with run-time trip counts
Unroll loops
loop-unroll
loop-unswitch-threshold
Max loop size to unswitch
Unswitch loops
loop-unswitch
us-unreachable
.us-lcssa
Lower atomic intrinsics to non-atomic form
loweratomic
memcpyopt
tmpcast
MemCpy Optimization
Partially inline calls to library functions
partially-inline-libcalls
call.sqrt
Reassociate expressions
reassociate
.neg
and.ra
factor
Demote all values to stack slots
reg2mem
reg2mem alloca point
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
Sample Profile loader
sample-profile
Sample profile pass
Could not open file 
^([^:]+):([0-9]+):([0-9]+)$
^([0-9]+)(\.[0-9]+)?: ([0-9]+)(.*)$
Expected 'mangled_name:NUM:NUM', found 
Expected 'NUM[.NUM]: NUM[ mangled_name:NUM]*', found 
No debug information found in function 
Sparse Conditional Constant Propagation
sccp
SCCP: Don't know how to handle: 
Interprocedural Sparse Conditional Constant Propagation
ipsccp
force-ssa-updater
SROA
sroa
.fca
.sroa.
Maximum number of uses of a partition
Maximum number of partitions per alloca
Scalar Replacement Of Aggregates
Scalar Replacement of Aggregates (DT)
scalarrepl
Scalar Replacement of Aggregates (SSAUp)
scalarrepl-ssa
load
insert
sroa.load.elt
sroa.store.elt
srcval
dyn.offset
mask
Simplify the CFG
simplifycfg
merge
Code sinking
sink
Structurize the CFG
structurizecfg
Structurize control flow
.inv
entry.orig
Flow
Tail Call Elimination
tailcallelim
tailrecurse
accumulator.tr
combiner-alias-analysis
Turn on alias analysis during testing
combiner-global-alias-analysis
Include global information in alias analysis
combiner-stress-load-slicing
Bypass the profitability model of load slicing
enable-legalize-types-checking
Unprocessed value in a map!
Value with legal type was transformed!
Processed value not in any map!
Value in multiple maps!
 ReplacedValues
 PromotedIntegers
 SoftenedFloats
 ScalarizedVectors
 ExpandedIntegers
 ExpandedFloats
 SplitVectors
 WidenedVectors
Do not know how to scalarize the result of this operator!
Do not know how to split the result of this operator!
Do not know how to split this operator's operand!
disable-dfa-sched
Disable use of DFA during scheduling
dfa-sched-reg-pressure-threshold
Track reg pressure and switch priority to in-depth
list-burr
Bottom-up register reduction list scheduling
source
Similar to list-burr but schedules in source order when possible
list-hybrid
Bottom-up register pressure aware list scheduling which tries to balance latency and register pressure
list-ilp
Bottom-up register pressure aware list scheduling which tries to balance ILP and register pressure
disable-sched-cycles
Disable cycle-level precision during preRA scheduling
disable-sched-reg-pressure
Disable regpressure priority in sched=list-ilp
disable-sched-live-uses
Disable live use priority in sched=list-ilp
disable-sched-vrcycle
Disable virtual register cycle interference checks
disable-sched-physreg-join
Disable physreg def-use affinity
disable-sched-stalls
Disable no-stall priority in sched=list-ilp
disable-sched-critical-path
Disable critical path priority in sched=list-ilp
disable-sched-height
Disable scheduled-height priority in sched=list-ilp
disable-2addr-hack
Disable scheduler's two-address hack
max-sched-reorder
Number of instructions to allow ahead of the critical path in sched=list-ilp
sched-avg-ipc
Average inst/cycle whan no target itinerary exists.
Can't handle live physical register dependency!
sched-high-latency-cycles
Roughly estimate the number of cycles that 'long latency'instructions take for targets with no itinerary
sunit-dag.
limit-float-precision
Generate low-precision inline sequences for some float libcalls
nontemporal
Cannot generate unaligned atomic load
Cannot generate unaligned atomic store
couldn't allocate output register for constraint '
inline asm not supported yet: don't know how to handle tied indirect register inputs
inline asm error: This value type register class is not natively supported!
invalid operand for inline asm constraint '
Don't know how to handle indirect register inputs yet for constraint '
couldn't allocate input reg for constraint '
scalar-to-vector conversion failed
, possible invalid constraint for vector type
non-trivial scalar-to-vector conversion
<<Unknown DAG Node>>
<<Unknown Machine Node #
<<Unknown Target Node #
<<Unknown Node #
Prefetch
AtomicFence
AtomicCmpSwap
AtomicSwap
AtomicLoadAdd
AtomicLoadSub
AtomicLoadAnd
AtomicLoadOr
AtomicLoadXor
AtomicLoadNand
AtomicLoadMin
AtomicLoadMax
AtomicLoadUMin
AtomicLoadUMax
AtomicLoad
AtomicStore
PCMarker
ReadCycleCounter
SrcValue
MDNode
EntryToken
TokenFactor
AssertSext
AssertZext
BasicBlock
ValueType
Register
RegisterMask
OpaqueConstant
Constant
ConstantFP
GlobalAddress
GlobalTLSAddress
FrameIndex
GLOBAL_OFFSET_TABLE
RETURNADDR
FRAMEADDR
FRAME_TO_ARGS_OFFSET
EH_RETURN
EH_SJLJ_SETJMP
EH_SJLJ_LONGJMP
TargetIndex
ExternalSymbol
BlockAddress
BUILD_VECTOR
OpaqueTargetConstant
TargetConstant
TargetConstantFP
TargetGlobalAddress
TargetGlobalTLSAddress
TargetFrameIndex
TargetJumpTable
TargetConstantPool
TargetExternalSymbol
TargetBlockAddress
CopyToReg
CopyFromReg
merge_values
inlineasm
eh_label
handlenode
fneg
fsqrt
fsin
fcos
fsincos
ftrunc
ffloor
fceil
frint
fnearbyint
fround
fexp
fexp2
flog
flog2
flog10
mulhu
mulhs
smul_lohi
umul_lohi
sdivrem
udivrem
rotl
rotr
fcopysign
fgetsign
fpow
fpowi
setcc
vselect
select_cc
insert_vector_elt
extract_vector_elt
concat_vectors
insert_subvector
extract_subvector
scalar_to_vector
vector_shuffle
carry_false
addc
adde
saddo
uaddo
ssubo
usubo
smulo
umulo
sube
shl_parts
sra_parts
srl_parts
sign_extend
zero_extend
any_extend
sign_extend_inreg
truncate
fp_round
flt_rounds
fp_round_inreg
fp_extend
sint_to_fp
uint_to_fp
fp_to_sint
fp_to_uint
fp16_to_fp32
fp32_to_fp16
cvt_ff
cvt_fs
cvt_fu
cvt_sf
cvt_uf
cvt_ss
cvt_su
cvt_us
cvt_uu
brind
br_jt
brcond
br_cc
callseq_start
callseq_end
vaarg
vacopy
vaend
vastart
dynamic_stackalloc
extract_element
build_pair
stacksave
stackrestore
debugtrap
lifetime.start
lifetime.end
ctpop
cttz_zero_undef
ctlz
ctlz_zero_undef
init_trampoline
adjust_trampoline
setoeq
setogt
setoge
setolt
setole
setone
seto
setuo
setue
setugt
setuge
setult
setule
setune
seteq
setgt
setlt
settrue
settrue2
setfalse
setfalse2
<pre-inc>
<pre-dec>
<post-inc>
<post-dec>
Mem:
<APFloat(
 [TF=
<null>
, anyext
, sext
, zext
 from 
, trunc to 
 [ORD=
 [ID=
SelectionDAG has 
 nodes:
: <multiple use>
fast-isel-verbose
Enable verbose messages in the "fast" instruction selector
fast-isel-abort
Enable abort calls when "fast" instruction selection fails to lower an instruction
fast-isel-abort-args
Enable abort calls when "fast" instruction selection fails to lower a formal argument
use-mbpi
use Machine Branch Probability Info
pre-RA-sched
Instruction schedulers available (before register allocation):
Best scheduler for the target
Instruction Selection and Scheduling
DAG Combining 1
Type Legalization
DAG Combining after legalize types
Vector Legalization
Type Legalization 2
DAG Combining after legalize vectors
DAG Legalization
DAG Combining 2
Instruction Selection
Instruction Scheduling
Instruction Creation
Instruction Scheduling Cleanup
FastISel missed call: 
FastISel missed terminator: 
FastISel miss: 
Could not match memory address.  Inline asm failure!
Cannot select: 
In function: 
intrinsic %
target intrinsic %
unknown intrinsic #
SelectionDAG::viewGraph is only available in debug builds on 
SelectionDAG::clearGraphAttrs is only available in debug builds
 on systems with Graphviz or gv!
SelectionDAG::setGraphAttrs is only available in debug builds
SelectionDAG::getGraphAttrs is only available in debug builds
SelectionDAG::setGraphColor is only available in debug builds
SelectionDAG::setSubgraphColor is only available in debug builds
CROSS RC COPY
plaintext=circle
GraphRoot
color=blue,style=dashed
 label ="
vliw-td
VLIW scheduler
Indirect operand for inline asm not a pointer!
Unsupported asm: input constraint with a matching output constraint of incompatible type!
argument to '__builtin_return_address' must be a constant integer
INFINITY
-inf
-INFINITY
-nan
-NaN
APInt(
Number of memory regions: 
Bytes used: 
Bytes allocated: 
Bytes wasted: 
 (includes alignment, etc)
Recycler element size: 
Recycler element alignment: 
Number of elements free for recycling: 
%g%%
General options
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
: Unknown command line argument '
'.  Try: '
 -help'
: Did you mean '-
: Not enough positional command line arguments specified!
Must specify at least 
 positional arguments: See: 
 -help
: Too many positional arguments specified!
Can specify at most 
must be specified at least once!
: for the -
 option: 
may only occur zero or one times!
must occur exactly one time!
TRUE
True
FALSE
False
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
    =
 -   
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
help-list
Display list of available options (-help-list-hidden for more)
help-list-hidden
Display list of all available options
help
Display available options (-help-hidden for more)
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
\"' 
: CommandLine Error: Argument '
' defined more than once!
Cannot specify more than one option with cl::ConsumeAfter!
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
' value invalid for floating point argument!
  This option category has no options.
OVERVIEW: 
USAGE: 
 [options]
OPTIONS:
LLVM (http://llvm.org/):
LLVM
 version 
3.5svn
Optimized build
  Built 
Oct  5 2016
14:54:40
  Default target: 
  Host CPU: 
value
uint
number
string
char
full-set
empty-set
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_lo_user
DW_TAG_hi_user
DW_TAG_auto_variable
DW_TAG_arg_variable
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_MIPS_loop
DW_TAG_type_unit
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_APPLE_property
DW_CHILDREN_no
DW_CHILDREN_yes
DW_AT_sibling
DW_AT_location
DW_AT_name
DW_AT_ordering
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_bit_size
DW_AT_stmt_list
DW_AT_low_pc
DW_AT_high_pc
DW_AT_language
DW_AT_discr
DW_AT_discr_value
DW_AT_visibility
DW_AT_import
DW_AT_string_length
DW_AT_common_reference
DW_AT_comp_dir
DW_AT_const_value
DW_AT_containing_type
DW_AT_default_value
DW_AT_inline
DW_AT_is_optional
DW_AT_lower_bound
DW_AT_producer
DW_AT_prototyped
DW_AT_return_addr
DW_AT_start_scope
DW_AT_bit_stride
DW_AT_upper_bound
DW_AT_abstract_origin
DW_AT_accessibility
DW_AT_address_class
DW_AT_artificial
DW_AT_base_types
DW_AT_calling_convention
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_column
DW_AT_decl_file
DW_AT_decl_line
DW_AT_declaration
DW_AT_discr_list
DW_AT_encoding
DW_AT_external
DW_AT_frame_base
DW_AT_friend
DW_AT_identifier_case
DW_AT_macro_info
DW_AT_namelist_item
DW_AT_priority
DW_AT_segment
DW_AT_specification
DW_AT_static_link
DW_AT_type
DW_AT_use_location
DW_AT_variable_parameter
DW_AT_virtuality
DW_AT_vtable_elem_location
DW_AT_allocated
DW_AT_associated
DW_AT_data_location
DW_AT_byte_stride
DW_AT_entry_pc
DW_AT_use_UTF8
DW_AT_extension
DW_AT_ranges
DW_AT_trampoline
DW_AT_call_column
DW_AT_call_file
DW_AT_call_line
DW_AT_description
DW_AT_binary_scale
DW_AT_decimal_scale
DW_AT_small
DW_AT_decimal_sign
DW_AT_digit_count
DW_AT_picture_string
DW_AT_mutable
DW_AT_threads_scaled
DW_AT_explicit
DW_AT_object_pointer
DW_AT_endianity
DW_AT_elemental
DW_AT_pure
DW_AT_recursive
DW_AT_signature
DW_AT_main_subprogram
DW_AT_data_bit_offset
DW_AT_const_expr
DW_AT_enum_class
DW_AT_linkage_name
DW_AT_string_length_bit_size
DW_AT_string_length_byte_size
DW_AT_rank
DW_AT_str_offsets_base
DW_AT_addr_base
DW_AT_ranges_base
DW_AT_dwo_id
DW_AT_dwo_name
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_software_pipeline_depth
DW_AT_MIPS_linkage_name
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_clone_origin
DW_AT_MIPS_has_inlines
DW_AT_MIPS_stride_byte
DW_AT_MIPS_stride_elem
DW_AT_MIPS_ptr_dopetype
DW_AT_MIPS_allocatable_dopetype
DW_AT_MIPS_assumed_shape_dopetype
DW_AT_sf_names
DW_AT_src_info
DW_AT_mac_info
DW_AT_src_coords
DW_AT_body_begin
DW_AT_body_end
DW_AT_GNU_vector
DW_AT_GNU_template_name
DW_AT_GNU_odr_signature
DW_AT_MIPS_assumed_size
DW_AT_lo_user
DW_AT_hi_user
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DW_AT_APPLE_isa
DW_AT_APPLE_block
DW_AT_APPLE_major_runtime_vers
DW_AT_APPLE_runtime_class
DW_AT_APPLE_omit_frame_ptr
DW_AT_APPLE_property_name
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property_attribute
DW_AT_APPLE_property
DW_AT_APPLE_objc_complete_type
DW_AT_GNU_dwo_name
DW_AT_GNU_dwo_id
DW_AT_GNU_ranges_base
DW_AT_GNU_addr_base
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
DW_FORM_addr
DW_FORM_block2
DW_FORM_block4
DW_FORM_data2
DW_FORM_data4
DW_FORM_data8
DW_FORM_string
DW_FORM_block
DW_FORM_block1
DW_FORM_data1
DW_FORM_flag
DW_FORM_sdata
DW_FORM_strp
DW_FORM_udata
DW_FORM_ref_addr
DW_FORM_ref1
DW_FORM_ref2
DW_FORM_ref4
DW_FORM_ref8
DW_FORM_ref_udata
DW_FORM_indirect
DW_FORM_sec_offset
DW_FORM_exprloc
DW_FORM_flag_present
DW_FORM_ref_sig8
DW_FORM_GNU_addr_index
DW_FORM_GNU_str_index
DW_OP_addr
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_shl
DW_OP_shr
DW_OP_shra
DW_OP_xor
DW_OP_skip
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_fbreg
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_GNU_push_tls_address
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_UTF
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_lo_user
DW_ATE_hi_user
DW_DS_unsigned
DW_DS_leading_overpunch
DW_DS_trailing_overpunch
DW_DS_leading_separate
DW_DS_trailing_separate
DW_END_default
DW_END_big
DW_END_little
DW_END_lo_user
DW_END_hi_user
DW_ACCESS_public
DW_ACCESS_protected
DW_ACCESS_private
DW_VIS_local
DW_VIS_exported
DW_VIS_qualified
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_lo_user
DW_LANG_Swift
DW_LANG_hi_user
DW_ID_case_sensitive
DW_ID_up_case
DW_ID_down_case
DW_ID_case_insensitive
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_lo_user
DW_CC_hi_user
DW_INL_not_inlined
DW_INL_inlined
DW_INL_declared_not_inlined
DW_INL_declared_inlined
DW_ORD_row_major
DW_ORD_col_major
DW_DSC_label
DW_DSC_range
DW_LNS_copy
DW_LNS_advance_pc
DW_LNS_advance_line
DW_LNS_set_file
DW_LNS_set_column
DW_LNS_negate_stmt
DW_LNS_set_basic_block
DW_LNS_const_add_pc
DW_LNS_fixed_advance_pc
DW_LNS_set_prologue_end
DW_LNS_set_epilogue_begin
DW_LNS_set_isa
DW_LNE_define_file
DW_LNE_set_discriminator
DW_LNE_lo_user
DW_LNE_hi_user
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_CFA_nop
DW_CFA_advance_loc
DW_CFA_offset
DW_CFA_set_loc
DW_CFA_advance_loc1
DW_CFA_advance_loc2
DW_CFA_restore_extended
DW_CFA_def_cfa_expression
DW_CFA_expression
DW_CFA_def_cfa_sf
DW_CFA_def_cfa_offset_sf
DW_CFA_val_offset
DW_CFA_val_offset_sf
DW_CFA_val_expression
DW_CFA_MIPS_advance_loc8
DW_CFA_GNU_window_save
DW_CFA_GNU_args_size
DW_CFA_lo_user
DW_CFA_hi_user
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_cu_offset
DW_ATOM_die_tag
DW_ATOM_type_flags
VARIABLE
FUNCTION
OTHER
UNUSED5
UNUSED6
UNUSED7
EXTERNAL
STATIC
LLVM ERROR: 
UNREACHABLE executed
 at 
view-background
Execute graph viewer in the background. Creates tmp file litter.
aaaaaa
aa0000
00aa00
aa5500
0055ff
aa00aa
00aaaa
555555
ff5555
55ff55
ffff55
5555ff
ff55ff
55ffff
ffaaaa
aaffaa
ffffaa
aaaaff
ffaaff
aaffff
Error: 
'... 
<stdin>
Unknown buffer
%.2x
Program arguments: 
Stack dump:
replacement string contained trailing backslash
0123456789
invalid backreference string '
Included from 
<unknown>
error: 
warning: 
note: 
stats
Enable statistics output from program (available with Asserts)
                          ... Statistics Collected ...
%*u %-*s - %s
Statistics are disabled.  
Build with asserts or with -DLLVM_ENABLE_STATS
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
filename
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
unknown
aarch64
arm64
hexagon
mips
mipsel
mips64
mips64el
msp430
powerpc64
powerpc64le
powerpc
r600
sparc
sparcv9
s390x
thumb
x86_64
xcore
nvptx
nvptx64
igil32
igil64
air64
amdil64
le32
amdil
spir
spir64
systemz
igil
apple
scei
nvidia
auroraux
cygwin
darwin
dragonfly
freebsd
kfreebsd
linux
macosx
mingw32
netbsd
openbsd
solaris
win32
haiku
minix
rtems
nacl
bitrig
cuda
nvcl
gnueabihf
gnueabi
gnux32
code16
eabi
eabihf
macho
android
ppc64
ppc32
ppc64le
armv4t
thumbv4t
armv5
armv5e
thumbv5
thumbv5e
armv6
thumbv6
armv7
thumbv7
i786
i886
i986
amd64
x86_64h
xscale
armv
thumbv
mipseb
mipsallegrex
mipsallegrexel
mips64eb
sparc64
empty
rope:
cstring:"
std::string:"
stringref:"
char:"
decUI:"
decI:"
decUL:"
decL:"
decULL:"
decLL:"
uhex:"
(Twine 
Error opening output file '
IO failure on output stream.
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
graph
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
hyphen
hyphen-minus
full-stop
solidus
zero
three
four
five
seven
eight
nine
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin15.0.0
-darwin
GenuineIntel
AuthenticAMD
TMPDIR
/tmp
/var/tmp
-%%%%%%
!<arch>
-%%%%%%.
0123456789abcdef
TEMP
TEMPDIR
/var/tmp/
COLUMNS
PATH
Child timed out but wouldn't die
Child timed out
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
Couldn't fork
/dev/null
Cannot dup2
Cannot open file '
' for 
%-2d
 %-*s
 %#0*lx
 + %u
unspecified generic_category error
system
error: invalid target '
: error: unable to get target for '
', see --version and --triple.
Unable to find target for this triple (no targets are registered)
Cannot choose between targets "
" and "
No available targets are compatible with this triple, see -version for the available targets.
No JIT compatible target available for this host
  Registered Targets:
    
    (none)
%b %e %H:%M %Y
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdlPv
_ZdlPvRKSt9nothrow_t
_Znaj
_ZnajRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__isoc99_scanf
__isoc99_sscanf
__memcpy_chk
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__strdup
__strndup
__strtok_r
access
acosf
acosh
acoshf
acoshl
acosl
asinf
asinh
asinhf
asinhl
asinl
atan2f
atan2l
atanf
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
bzero
calloc
cbrt
cbrtf
cbrtl
ceilf
ceill
chmod
chown
clearerr
closedir
copysign
copysignf
copysignl
coshf
coshl
cosl
ctermid
exp10
exp10f
exp10l
exp2f
exp2l
expf
expl
expm1
expm1f
expm1l
fclose
fdopen
feof
ferror
fflush
ffsl
ffsll
fgetc
fgetpos
fgets
fileno
flockfile
floorf
floorl
fmax
fmaxf
fmaxl
fmin
fminf
fminl
fmodf
fmodl
fopen
fopen64
fputc
fputs
fread
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
getc
getc_unlocked
getchar
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
labs
lchown
llabs
log10f
log10l
log1p
log1pf
log1pl
log2
log2f
log2l
logb
logbf
logbl
logf
logl
lstat
lstat64
memalign
memccpy
memchr
memcmp
memmove
memrchr
mkdir
mktime
modf
modff
modfl
nearbyint
nearbyintf
nearbyintl
ntohl
ntohs
open
open64
opendir
pclose
perror
popen
posix_memalign
powf
powl
pread
printf
putc
putchar
puts
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remove
rename
rewind
rint
rintf
rintl
rmdir
round
roundf
roundl
scanf
setbuf
setitimer
setvbuf
sinhf
sinhl
sinl
snprintf
sprintf
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strcmp
strcoll
strcpy
strcspn
strdup
strlen
strncasecmp
strncat
strncmp
strncpy
strndup
strnlen
strspn
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
tanf
tanhf
tanhl
tanl
times
tmpfile
tmpfile64
toascii
truncf
truncl
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
write
Target Library Information
targetlibinfo
fwrite$UNIX2003
fputs$UNIX2003
_copysign
__exp10
__exp10f
We do not support this DWARF encoding yet!
Emit data into separate sections
Emit functions into separate sections
no-frame-pointer-elim
less-precise-fpmad
unsafe-fp-math
no-infs-fp-math
use-soft-float
disable-tail-calls
misched-bench
Migrate from the target's default SD scheduler to MI scheduler
.split
lpad
lpad.phi
_crit_edge
split
.split1
.split2
Break critical edges in CFG
break-crit-edges
cstr
chari
__mempcpy_chk
aggregate-extracted-args
Aggregate arguments to code-extracted functions
.ret
gep_
loadgep_
.out
structArg
targetBlock
gep_reload_
.reload
.exitStub
codeRepl
newFuncRoot
.reg2mem
savedstack
.exit
.noexc
.lpad-body
eh.lpad-body
Assign names to anonymous instructions
instnamer
Loop-Closed SSA Form Pass
lcssa
.lcssa
cond
.preheader
.split-lp
Canonicalize natural loops
loop-simplify
.loopexit
.nonloopexit
.outer
.backedge
xtraiter
lcmp
unr.cmp
un.tmp
.unr
.unr-lcssa
.unr1-lcssa
.unr2-lcssa
likely-branch-weight
Weight of the branch likely to be taken (default = 64)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 4)
Lower 'expect' Intrinsics
lower-expect
branch_weights
enable-correct-eh-support
Make the -lowerinvoke pass insert expensive, but correct, EH code
Lower invoke and unwind, for unwindless code generators
lowerinvoke
llvm.sjljeh.jmpbufty
llvm.sjljeh.jblist
abort
mem2reg
jblink
OldBuf
oldjmpbufptr
setjmp.catch
stackptr
invokenum
unwindbb
invoke.num
setjmp.cont
TheJmpBuf
sjret
notunwind
dounwind
unwind
unwinderror
ehlist
notnull
JmpBuf
.tmp
ssret
stackptr.restore
Lower SwitchInst's to branches
lowerswitch
NewDefault
NodeBlock
Pivot
LeafBlock
SwitchLeaf
.off
Promote Memory to Register
Assign new names to everything
metarenamer
quux
barney
snork
blam
hoge
wibble
wobble
widget
wombat
eggs
pluto
spam
alias
global
struct.
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 1)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store preceeds
.not
.old
or.cond
not.cond
and.cond
.sink
switch.edge
magicptr
infloop
switch.early.test
.critedge
brmerge
.mux
retval
switch.lookup
switch.tableidx
switch.table
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.gep
switch.load
Remove redundant instructions
instsimplify
error-reporting-is-cold
Treat error-reporting calls as cold
endptr
strchr
strrchr
strcmpload
strlenfirst
strpbrk
strstr
lhsc
lhsv
rhsc
rhsv
chardiff
__sincospif_stret
__sincospi_stret
sincospi
sinpi
cospi
cttz
ispos
isdigittmp
isdigit
isascii
stderr
iprintf
siprintf
leninc
fiprintf
_chk
__memmove_chk
__memset_chk
__strcpy_chk
__stpcpy_chk
__strncpy_chk
__stpncpy_chk
pow2
powrecip
ldexpf
ldexp
ldexpl
Can't open file '
Malformed line 
global-init
global-init-type
global-init-src
Malformed regex in line 
UnifiedUnreachableBlock
UnifiedReturnBlock
UnifiedRetVal
Unify function exit nodes
mergereturn
bb-vectorize-ignore-target-info
Ignore target information
bb-vectorize-req-chain-depth
The required chain depth for vectorization
bb-vectorize-use-chain-depth
Use the chain depth requirement with target information
bb-vectorize-search-limit
The maximum search distance for instruction pairs
bb-vectorize-splat-breaks-chain
Replicating one element to a pair breaks the chain
bb-vectorize-vector-bits
The size of the native vector registers
bb-vectorize-max-iter
The maximum number of pairing iterations
bb-vectorize-pow2-len-only
Don't try to form non-2^n-length vectors
bb-vectorize-max-instr-per-group
The maximum number of pairable instructions per group
bb-vectorize-max-pairs-per-group
The maximum number of candidate instruction pairs per group
bb-vectorize-max-cycle-check-pairs
The maximum number of candidate pairs with which to use a full cycle check
bb-vectorize-no-bools
Don't try to vectorize boolean (i1) values
bb-vectorize-no-ints
Don't try to vectorize integer values
bb-vectorize-no-floats
Don't try to vectorize floating-point values
bb-vectorize-no-pointers
Don't try to vectorize pointer values
bb-vectorize-no-casts
Don't try to vectorize casting (conversion) operations
bb-vectorize-no-math
Don't try to vectorize floating-point math intrinsics
bb-vectorize-no-fma
Don't try to vectorize the fused-multiply-add intrinsic
bb-vectorize-no-select
Don't try to vectorize select instructions
bb-vectorize-no-cmp
Don't try to vectorize comparison instructions
bb-vectorize-no-gep
Don't try to vectorize getelementptr instructions
bb-vectorize-no-mem-ops
Don't try to vectorize loads and stores
bb-vectorize-aligned-only
Only generate aligned loads and stores
bb-vectorize-no-mem-op-boost
Don't boost the chain-depth contribution of loads and stores
bb-vectorize-fast-dep
Use a fast instruction dependency analysis
bb-vectorize
.v.i
.v.r
force-vector-width
Sets the SIMD width. Zero is autoselect.
force-vector-unroll
Sets the vectorization unroll count. Zero is autoselect.
enable-if-conversion
Enable if-conversion during vectorization.
vectorizer-min-trip-count
Don't vectorize loops with a constant trip count that is smaller than this value.
enable-mem-access-versioning
Enable symblic stride memory access versioning
loop-vectorize
llvm.vectorizer.
width
unroll
enable
no-nans-fp-math
.cloned
gep.indvar.base
gep.indvar.idx
wide.load
broadcast
.splatinsert
.splat
induction
reverse
minmax.ident
rdx.vec.exit.phi
bin.rdx
rdx.shuf
vec.phi
predphi
normalized.idx
offset.idx
resize.norm.idx
reverse.idx
gep.ridx
gep.idx
next.gep
insert.gep
rdx.minmax.cmp
rdx.minmax.select
vector.ph
vector.body
middle.block
scalar.ph
index
ptrcnt.to.int
cnt.cast
end.idx
n.mod.vf
n.vec
end.idx.rnd.down
cmp.zero
vector.stridecheck
vector.memcheck
resume.val
trunc.resume.val
cast.crd
ind.end
rev.ind.end
ptr.ind.end
rev.ptr.ind.end
new.indc.resume.val
cmp.n
index.next
stride.chk
stride.not.one
bound0
bound1
found.conflict
conflict.rdx
memcheck.conflict
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-vectorizer
rdx.shuf.l
rdx.shuf.r
invalid register name
register %
 is only available in 64-bit mode
expected stack index
invalid stack index
expected ')'
lags
setb
setnb
vcmp
unord
eq_uq
false
neq_oq
true
eq_os
lt_oq
le_oq
unord_s
neq_us
nlt_uq
nle_uq
ord_s
eq_us
nge_uq
ngt_uq
false_os
neq_os
ge_oq
gt_oq
true_us
vcmpss
cmpss
vcmpsd
cmpsd
vcmpps
cmpps
vcmppd
cmppd
lock
repe
repz
repne
repnz
rex64
data16
Expected } at this point
Expected z at this point
unexpected token in argument list
outb
outw
outl
insb
insw
insl
outs
outsb
outsw
outsl
movs
movsb
movsw
movsl
movsq
lods
lodsb
lodsw
lodsl
lodsq
stos
stosb
stosw
stosl
stosq
int3
offset
OFFSET
length
LENGTH
size
SIZE
type
TYPE
Expected 'PTR' or 'ptr' token!
expected a positive immediate displacement before bracketed expr.
unable to lookup expression
BYTE
byte
WORD
word
DWORD
dword
QWORD
qword
XWORD
xword
XMMWORD
xmmword
YMMWORD
ymmword
ZMMWORD
zmmword
OPAQUE
opaque
unknown token in expression
Unexpected identifier!
invalid reference to undefined symbol
scale factor in address must be 1, 2, 4 or 8
Unexpected operator!
Expected '[' token!
Non-constant offsets are not supported!
Unable to lookup field reference!
Unexpected token type!
base register is 64-bit, but index register is not
base register is 32-bit, but index register is not
base register is 16-bit, but index register is not
invalid 16-bit base/index register combination
Expected ':' token!
%eiz and %riz can only be used as index registers
eiz and riz can only be used as index registers
expected comma in scale expression
expected scale expression
scale factor in 16-bit address must be 1
scale factor without index register is ignored
unexpected token in memory operand
invalid 16-bit base register
16-bit memory operand may not include only index register
.word
.code
.att_syntax
.intel_syntax
noprefix
unexpected token in directive
.code16
.code32
.code64
unknown directive 
adcb
adcl
adcq
adcw
adcx
adcxl
adcxq
addb
addl
addpd
addps
addq
addsd
addss
addsubpd
addsubps
addw
adox
adoxl
adoxq
aesdec
aesdeclast
aesenc
aesenclast
aesimc
aeskeygenassist
andb
andl
andn
andnl
andnpd
andnps
andnq
andpd
andps
andq
andw
arpl
bextr
bextrl
bextrq
blcfill
blci
blcic
blcmsk
blcs
blendpd
blendps
blendvpd
blendvps
blsfill
blsi
blsic
blsil
blsiq
blsmsk
blsmskl
blsmskq
blsr
blsrl
blsrq
bound
bsfl
bsfq
bsfw
bsrl
bsrq
bsrw
bswap
bswapl
bswapq
btcl
btcq
btcw
btrl
btrq
btrw
btsl
btsq
btsw
bzhi
bzhil
bzhiq
call
calll
callq
callw
cbtw
cdqe
clac
clflush
clgi
clrb
clrl
clrq
clrw
cltd
cltq
clts
cmova
cmovae
cmovael
cmovaeq
cmovaew
cmoval
cmovaq
cmovaw
cmovb
cmovbe
cmovbel
cmovbeq
cmovbew
cmovbl
cmovbq
cmovbw
cmove
cmovel
cmoveq
cmovew
cmovg
cmovge
cmovgel
cmovgeq
cmovgew
cmovgl
cmovgq
cmovgw
cmovl
cmovle
cmovlel
cmovleq
cmovlew
cmovll
cmovlq
cmovlw
cmovne
cmovnel
cmovneq
cmovnew
cmovno
cmovnol
cmovnoq
cmovnow
cmovnp
cmovnpl
cmovnpq
cmovnpw
cmovns
cmovnsl
cmovnsq
cmovnsw
cmovo
cmovol
cmovoq
cmovow
cmovp
cmovpl
cmovpq
cmovpw
cmovs
cmovsl
cmovsq
cmovsw
cmpb
cmpl
cmppd
cmpps
cmpq
cmpsb
cmpsd
cmpsl
cmpsq
cmpss
cmpsw
cmpw
cmpxchg
cmpxchg16b
cmpxchg8b
cmpxchgb
cmpxchgl
cmpxchgq
cmpxchgw
comisd
comiss
cpuid
cqto
crc32
crc32b
crc32l
crc32q
crc32w
cvtdq2pd
cvtdq2ps
cvtpd2dq
cvtpd2pi
cvtpd2ps
cvtpi2pd
cvtpi2ps
cvtps2dq
cvtps2pd
cvtps2pi
cvtsd2si
cvtsd2sil
cvtsd2siq
cvtsd2ss
cvtsi2sd
cvtsi2sdl
cvtsi2sdq
cvtsi2ss
cvtsi2ssl
cvtsi2ssq
cvtss2sd
cvtss2si
cvtss2sil
cvtss2siq
cvttpd2dq
cvttpd2pi
cvttps2dq
cvttps2pi
cvttsd2si
cvttsd2sil
cvttsd2siq
cvttss2si
cvttss2sil
cvttss2siq
cwde
cwtd
cwtl
data16
decb
decl
decq
decw
divb
divl
divpd
divps
divq
divsd
divss
divw
dppd
dpps
emms
enter
extractps
extrq
f2xm1
fabs
fadd
faddl
faddp
fadds
fbld
fbstp
fchs
fcmovb
fcmovbe
fcmove
fcmovnb
fcmovnbe
fcmovne
fcmovnu
fcmovu
fcom
fcomi
fcoml
fcomp
fcompi
fcompl
fcompp
fcomps
fcoms
fcos
fdecstp
fdiv
fdivl
fdivp
fdivr
fdivrl
fdivrp
fdivrs
fdivs
femms
ffree
fiadd
fiaddl
fiadds
ficom
ficoml
ficomp
ficompl
ficomps
ficoms
fidiv
fidivl
fidivr
fidivrl
fidivrs
fidivs
fild
fildl
fildll
filds
fimul
fimull
fimuls
fincstp
fist
fistl
fistp
fistpl
fistpll
fistps
fists
fisttp
fisttpl
fisttpll
fisttps
fisub
fisubl
fisubr
fisubrl
fisubrs
fisubs
fld1
fldcw
fldenv
fldl
fldl2e
fldl2t
fldlg2
fldln2
fldpi
flds
fldt
fldz
fmul
fmull
fmulp
fmuls
fnclex
fninit
fnop
fnsave
fnstcw
fnstenv
fnstsw
fpatan
fprem
fprem1
fptan
frndint
frstor
fscale
fsin
fsincos
fsqrt
fstl
fstp
fstpl
fstps
fstpt
fsts
fsub
fsubl
fsubp
fsubr
fsubrl
fsubrp
fsubrs
fsubs
ftst
fucom
fucomi
fucomp
fucompi
fucompp
fxam
fxch
fxrstor
fxrstor64
fxrstorq
fxsave
fxsave64
fxsaveq
fxtract
fyl2x
fyl2xp1
haddpd
haddps
hsubpd
hsubps
idiv
idivb
idivl
idivq
idivw
imul
imulb
imull
imulq
imulw
incb
incl
incq
incw
insb
insertps
insertq
insl
insw
int3
into
invd
invept
invlpg
invlpga
invpcid
invvpid
iret
iretd
iretl
iretq
iretw
jcxz
jecxz
jmpl
jmpq
jmpw
jrcxz
kandnw
kandw
kmovw
knotw
kortestw
korw
kshiftlw
kshiftrw
kunpckbw
kxnorw
kxorw
lahf
larl
larq
larw
lcall
lcalll
lcallq
lcallw
lddqu
ldmxcsr
ldsl
ldsw
leal
leaq
leave
leaw
lesl
lesw
lfence
lfsl
lfsq
lfsw
lgdt
lgdtl
lgdtq
lgdtw
lgsl
lgsq
lgsw
lidt
lidtl
lidtq
lidtw
ljmp
ljmpl
ljmpq
ljmpw
lldt
lldtw
lmsw
lmsww
lock
lodsb
lodsd
lodsl
lodsq
lodsw
loop
loope
loopne
lretl
lretq
lretw
lsll
lslq
lslw
lssl
lssq
lssw
ltrw
lzcnt
lzcntl
lzcntq
lzcntw
maskmovdqu
maskmovq
maxpd
maxps
maxsd
maxss
mfence
minpd
minps
minsd
minss
monitor
montmul
movabs
movabsb
movabsl
movabsq
movabsw
movapd
movaps
movb
movbe
movbel
movbeq
movbew
movd
movddup
movdq2q
movdqa
movdqu
movhlps
movhpd
movhps
movl
movlhps
movlpd
movlps
movmskpd
movmskps
movntdq
movntdqa
movnti
movntil
movntiq
movntpd
movntps
movntq
movntsd
movntss
movq
movq2dq
movsb
movsbl
movsbq
movsbw
movsd
movshdup
movsl
movsldup
movslq
movsq
movss
movsw
movswl
movswq
movsx
movsxd
movupd
movups
movw
movzbl
movzbq
movzbw
movzwl
movzwq
movzx
mpsadbw
mulb
mull
mulpd
mulps
mulq
mulsd
mulss
mulw
mulx
mulxl
mulxq
mwait
negb
negl
negq
negw
nopl
nopw
notb
notl
notq
notw
orpd
orps
outb
outl
outsb
outsd
outsl
outsw
outw
pabsb
pabsd
pabsw
packssdw
packsswb
packusdw
packuswb
paddb
paddd
paddq
paddsb
paddsw
paddusb
paddusw
paddw
palignr
pand
pandn
pause
pavgb
pavgusb
pavgw
pblendvb
pblendwpclmulhqhqdqpclmulhqlqdqpclmullqhqdqpclmullqlqdq
pclmulqdq
pcmpeqb
pcmpeqd
pcmpeqq
pcmpeqw
pcmpestri
pcmpestrm
pcmpgtb
pcmpgtd
pcmpgtq
pcmpgtw
pcmpistri
pcmpistrm
pdep
pdepl
pdepq
pext
pextl
pextq
pextrb
pextrd
pextrq
pextrw
pf2id
pf2iw
pfacc
pfadd
pfcmpeq
pfcmpge
pfcmpgt
pfmax
pfmin
pfmul
pfnacc
pfpnacc
pfrcp
pfrcpit1
pfrcpit2
pfrsqit1
pfrsqrt
pfsub
pfsubr
phaddd
phaddsw
phaddw
phminposuw
phsubd
phsubsw
phsubw
pi2fd
pi2fw
pinsrb
pinsrd
pinsrq
pinsrw
pmaddubsw
pmaddwd
pmaxsb
pmaxsd
pmaxsw
pmaxub
pmaxud
pmaxuw
pminsb
pminsd
pminsw
pminub
pminud
pminuw
pmovmskb
pmovsxbd
pmovsxbq
pmovsxbw
pmovsxdq
pmovsxwd
pmovsxwq
pmovzxbd
pmovzxbq
pmovzxbw
pmovzxdq
pmovzxwd
pmovzxwq
pmuldq
pmulhrsw
pmulhrw
pmulhuw
pmulhw
pmulld
pmullw
pmuludq
popal
popaw
popcnt
popcntl
popcntq
popcntw
popf
popfd
popfl
popfq
popfw
popl
popq
popw
prefetch
prefetchnta
prefetcht0
prefetcht1
prefetcht2
prefetchw
psadbw
pshufb
pshufd
pshufhw
pshuflw
pshufw
psignb
psignd
psignw
pslld
pslldq
psllq
psllw
psrad
psraw
psrld
psrldq
psrlq
psrlw
psubb
psubd
psubq
psubsb
psubsw
psubusb
psubusw
psubw
pswapd
ptest
punpckhbw
punpckhdq
punpckhqdq
punpckhwd
punpcklbw
punpckldq
punpcklqdq
punpcklwd
push
pushal
pushaw
pushf
pushfd
pushfl
pushfq
pushfw
pushl
pushq
pushw
pxor
rclb
rcll
rclq
rclw
rcpps
rcpss
rcrb
rcrl
rcrq
rcrw
rdfsbase
rdfsbasel
rdfsbaseq
rdgsbase
rdgsbasel
rdgsbaseq
rdmsr
rdpmc
rdrand
rdrandl
rdrandq
rdrandw
rdseed
rdseedl
rdseedq
rdseedw
rdtsc
rdtscp
repne
retf
retfq
retl
retq
retw
rex64
rolb
roll
rolq
rolw
rorb
rorl
rorq
rorw
rorx
rorxl
rorxq
roundpd
roundps
roundsd
roundss
rsqrtps
rsqrtss
sahf
sarb
sarl
sarq
sarw
sarx
sarxl
sarxq
sbbb
sbbl
sbbq
sbbw
scasb
scasd
scasl
scasq
scasw
seta
setae
setb
setbe
sete
setg
setge
setl
setle
setne
setno
setnp
setns
seto
setp
sets
sfence
sgdt
sgdtl
sgdtq
sgdtw
sha1msg1
sha1msg2
sha1nexte
sha1rnds4
sha256msg1
sha256msg2
sha256rnds2
shlb
shld
shldl
shldq
shldw
shll
shlq
shlw
shlx
shlxl
shlxq
shrb
shrd
shrdl
shrdq
shrdw
shrl
shrq
shrw
shrx
shrxl
shrxq
shufpd
shufps
sidt
sidtl
sidtq
sidtw
skinit
sldt
sldtl
sldtq
sldtw
smsw
smswl
smswq
smsww
sqrtpd
sqrtps
sqrtsd
sqrtss
stac
stgi
stmxcsr
stosb
stosd
stosl
stosq
stosw
strl
strq
strw
subb
subl
subpd
subps
subq
subsd
subss
subw
swapgs
syscall
sysenter
sysexit
sysexitl
sysexitq
sysret
sysretl
sysretq
t1mskc
test
testb
testl
testq
testw
tzcnt
tzcntl
tzcntq
tzcntw
tzmsk
ucomisd
ucomiss
ud2b
unpckhpd
unpckhps
unpcklpd
unpcklps
vaddpd
vaddps
vaddsd
vaddss
vaddsubpd
vaddsubps
vaesdec
vaesdeclast
vaesenc
vaesenclast
vaesimc
vaeskeygenassist
valignd
valignq
vandnpd
vandnps
vandpd
vandps
vblendmpd
vblendmps
vblendpd
vblendps
vblendvpd
vblendvps
vbroadcastf128
vbroadcasti128vbroadcastsdvbroadcastss
vcmp
vcmppd
vcmpps
vcmpsd
vcmpss
vcomisd
vcomiss
vcvtdq2pd
vcvtdq2ps
vcvtpd2dq
vcvtpd2dqx
vcvtpd2dqy
vcvtpd2ps
vcvtpd2psx
vcvtpd2psy
vcvtpd2udq
vcvtph2ps
vcvtps2dq
vcvtps2pd
vcvtps2ph
vcvtps2udq
vcvtsd2si
vcvtsd2sil
vcvtsd2siq
vcvtsd2ss
vcvtsd2usi
vcvtsi2sd
vcvtsi2sdl
vcvtsi2sdq
vcvtsi2ss
vcvtsi2ssl
vcvtsi2ssq
vcvtss2sd
vcvtss2si
vcvtss2sil
vcvtss2siq
vcvtss2usi
vcvttpd2dq
vcvttpd2dqx
vcvttpd2dqy
vcvttpd2udq
vcvttps2dq
vcvttps2udq
vcvttsd2si
vcvttsd2sil
vcvttsd2siq
vcvttsd2usi
vcvttss2si
vcvttss2sil
vcvttss2siq
vcvttss2usi
vcvtudq2pd
vcvtudq2ps
vcvtusi2sd
vcvtusi2sdl
vcvtusi2sdq
vcvtusi2ss
vcvtusi2ssl
vcvtusi2ssq
vdivpd
vdivps
vdivsd
vdivss
vdppd
vdpps
verr
verwvextractf128
vextractf32x4
vextractf64x4vextracti128
vextracti32x4
vextracti64x4
vextractps
vfmadd132pd
vfmadd132ps
vfmadd132sd
vfmadd132ss
vfmadd213pd
vfmadd213ps
vfmadd213sd
vfmadd213ss
vfmadd231pd
vfmadd231ps
vfmadd231sd
vfmadd231ss
vfmaddpd
vfmaddps
vfmaddsd
vfmaddss
vfmaddsub132pd
vfmaddsub132ps
vfmaddsub213pd
vfmaddsub213ps
vfmaddsub231pd
vfmaddsub231ps
vfmaddsubpd
vfmaddsubps
vfmsub132pd
vfmsub132ps
vfmsub132sd
vfmsub132ss
vfmsub213pd
vfmsub213ps
vfmsub213sd
vfmsub213ss
vfmsub231pd
vfmsub231ps
vfmsub231sd
vfmsub231ss
vfmsubadd132pd
vfmsubadd132ps
vfmsubadd213pd
vfmsubadd213ps
vfmsubadd231pd
vfmsubadd231ps
vfmsubaddpd
vfmsubaddps
vfmsubpd
vfmsubps
vfmsubsd
vfmsubssvfnmadd132pdvfnmadd132psvfnmadd132sdvfnmadd132ssvfnmadd213pdvfnmadd213psvfnmadd213sdvfnmadd213ssvfnmadd231pdvfnmadd231psvfnmadd231sdvfnmadd231ss
vfnmaddpd
vfnmaddps
vfnmaddsd
vfnmaddssvfnmsub132pdvfnmsub132psvfnmsub132sdvfnmsub132ssvfnmsub213pdvfnmsub213psvfnmsub213sdvfnmsub213ssvfnmsub231pdvfnmsub231psvfnmsub231sdvfnmsub231ss
vfnmsubpd
vfnmsubps
vfnmsubsd
vfnmsubss
vfrczpd
vfrczps
vfrczsd
vfrczss
vgatherdpd
vgatherdps
vgatherqpd
vgatherqps
vhaddpd
vhaddps
vhsubpd
vhsubps
vinsertf128vinsertf32x4vinsertf64x4
vinserti128vinserti32x4vinserti64x4
vinsertps
vlddqu
vldmxcsr
vmaskmovdqu
vmaskmovpd
vmaskmovps
vmaxpd
vmaxps
vmaxsd
vmaxss
vmcall
vmclear
vmfunc
vminpd
vminps
vminsd
vminss
vmlaunch
vmload
vmmcall
vmovapd
vmovaps
vmovd
vmovddup
vmovdqa
vmovdqa32
vmovdqa64
vmovdqu
vmovdqu32
vmovdqu64
vmovhlps
vmovhpd
vmovhps
vmovlhps
vmovlpd
vmovlps
vmovmskpd
vmovmskps
vmovntdq
vmovntdqa
vmovntpd
vmovntps
vmovq
vmovsd
vmovshdup
vmovsldup
vmovss
vmovupd
vmovups
vmpsadbw
vmptrld
vmptrst
vmread
vmreadl
vmreadq
vmresume
vmrun
vmsave
vmulpd
vmulps
vmulsd
vmulss
vmwrite
vmwritel
vmwriteq
vmxoff
vmxon
vorpd
vorps
vpabsb
vpabsd
vpabsq
vpabsw
vpackssdw
vpacksswb
vpackusdw
vpackuswb
vpaddb
vpaddd
vpaddq
vpaddsb
vpaddsw
vpaddusb
vpaddusw
vpaddw
vpalignr
vpand
vpandd
vpandn
vpandnd
vpandnq
vpandq
vpavgb
vpavgw
vpblendd
vpblendmd
vpblendmq
vpblendvb
vpblendwvpbroadcastbvpbroadcastd
vpbroadcastmb2q
vpbroadcastmw2dvpbroadcastqvpbroadcastw
vpclmulhqhqdq
vpclmulhqlqdq
vpclmullqhqdq
vpclmullqlqdq
vpclmulqdq
vpcmov
vpcmp
vpcmpd
vpcmpeqb
vpcmpeqd
vpcmpeqq
vpcmpeqw
vpcmpestri
vpcmpestrm
vpcmpgtb
vpcmpgtd
vpcmpgtq
vpcmpgtw
vpcmpistri
vpcmpistrm
vpcmpq
vpcmpud
vpcmpuq
vpcomb
vpcomd
vpcomq
vpcomub
vpcomud
vpcomuq
vpcomuw
vpcomw
vpconflictd
vpconflictq
vperm2f128
vperm2i128
vpermd
vpermi2d
vpermi2pd
vpermi2ps
vpermi2q
vpermil2pd
vpermil2ps
vpermilpd
vpermilps
vpermpd
vpermps
vpermq
vpextrb
vpextrd
vpextrq
vpextrw
vpgatherdd
vpgatherdq
vpgatherqd
vpgatherqq
vphaddbd
vphaddbq
vphaddbw
vphaddd
vphadddq
vphaddsw
vphaddubd
vphaddubq
vphaddubw
vphaddudq
vphadduwd
vphadduwq
vphaddw
vphaddwd
vphaddwq
vphminposuw
vphsubbw
vphsubd
vphsubdq
vphsubsw
vphsubw
vphsubwd
vpinsrb
vpinsrd
vpinsrq
vpinsrw
vpmacsdd
vpmacsdqh
vpmacsdql
vpmacssdd
vpmacssdqh
vpmacssdql
vpmacsswd
vpmacssww
vpmacswd
vpmacsww
vpmadcsswd
vpmadcswd
vpmaddubsw
vpmaddwd
vpmaskmovd
vpmaskmovq
vpmaxsb
vpmaxsd
vpmaxsq
vpmaxsw
vpmaxub
vpmaxud
vpmaxuq
vpmaxuw
vpminsb
vpminsd
vpminsq
vpminsw
vpminub
vpminud
vpminuq
vpminuw
vpmovdb
vpmovdw
vpmovmskb
vpmovqb
vpmovqd
vpmovqw
vpmovsdb
vpmovsdw
vpmovsqb
vpmovsqd
vpmovsqw
vpmovsxbd
vpmovsxbq
vpmovsxbw
vpmovsxdq
vpmovsxwd
vpmovsxwq
vpmovusdb
vpmovusdw
vpmovusqb
vpmovusqd
vpmovusqw
vpmovzxbd
vpmovzxbq
vpmovzxbw
vpmovzxdq
vpmovzxwd
vpmovzxwq
vpmuldq
vpmulhrsw
vpmulhuw
vpmulhw
vpmulld
vpmullw
vpmuludq
vpor
vpord
vporq
vpperm
vprotb
vprotd
vprotq
vprotw
vpsadbw
vpscatterdd
vpscatterdq
vpscatterqd
vpscatterqq
vpshab
vpshad
vpshaq
vpshaw
vpshlb
vpshld
vpshlq
vpshlw
vpshufb
vpshufd
vpshufhw
vpshuflw
vpsignb
vpsignd
vpsignw
vpslld
vpslldq
vpsllq
vpsllvd
vpsllvq
vpsllw
vpsrad
vpsraq
vpsravd
vpsravq
vpsraw
vpsrld
vpsrldq
vpsrlq
vpsrlvd
vpsrlvq
vpsrlw
vpsubb
vpsubd
vpsubq
vpsubsb
vpsubsw
vpsubusb
vpsubusw
vpsubw
vptest
vptestmd
vptestmq
vpunpckhbw
vpunpckhdq
vpunpckhqdq
vpunpckhwd
vpunpcklbw
vpunpckldq
vpunpcklqdq
vpunpcklwd
vpxor
vpxord
vpxorq
vrcp14pd
vrcp14ps
vrcp14sd
vrcp14ss
vrcp28pd
vrcp28ps
vrcp28sd
vrcp28ss
vrcpps
vrcpss
vrndscalepd
vrndscaleps
vrndscalesd
vrndscaless
vroundpd
vroundps
vroundsd
vroundss
vrsqrt14pd
vrsqrt14ps
vrsqrt14sd
vrsqrt14ss
vrsqrt28pd
vrsqrt28ps
vrsqrt28sd
vrsqrt28ss
vrsqrtps
vrsqrtss
vscatterdpd
vscatterdps
vscatterqpd
vscatterqps
vshufpd
vshufps
vsqrt
vsqrtpd
vsqrtps
vsqrtsd
vsqrtss
vstmxcsr
vsubpd
vsubps
vsubsd
vsubss
vtestpd
vtestps
vucomisd
vucomiss
vunpckhpd
vunpckhps
vunpcklpd
vunpcklps
vxorpd
vxorps
vzeroall
vzeroupper
wait
wbinvd
wrfsbase
wrfsbasel
wrfsbaseq
wrgsbase
wrgsbasel
wrgsbaseq
wrmsr
xabort
xacquire
xadd
xaddb
xaddl
xaddq
xaddw
xbegin
xchg
xchgb
xchgl
xchgq
xchgw
xcryptcbc
xcryptcfb
xcryptctr
xcryptecb
xcryptofb
xend
xgetbv
xlatb
xorb
xorl
xorpd
xorps
xorq
xorw
xrelease
xrstor
xrstor64
xrstorq
xsave
xsave64
xsaveopt
xsaveopt64
xsaveoptq
xsaveq
xsetbv
xsha1
xsha256
xstore
xstorerng
xtest
fstsw
fstcw
fstsww
fstcww
finit
fsave
fstenv
fclex
fninit
fnsave
fnstcw
fnstenv
fnstsw
fnclex
instruction requires:
bwlq
ambiguous instructions require an explicit suffix (could be 
invalid instruction mnemonic '
too few operands for instruction
invalid operand for instruction
unknown use of instruction mnemonic without a size suffix
cbtw
cltd
cqto
cwtd
popw
popl
popq
retw
retl
retq
callw
calll
callq
cltq
cwtl
iretw
iretl
lgdtw
lgdtl
lgdtq
lidtw
lidtl
lidtq
lretw
lretl
popaw
popal
popfw
popfl
popfq
pushw
pushl
pushq
shlb
shll
shlq
shlw
sgdtw
sgdtl
sgdtq
sidtw
sidtl
sidtq
fildll
wait
oopz
loope
pushaw
pushal
pushfw
pushfl
pushfq
epnz
errw
verr
cmovbl
cmovbq
cmovbw
cmovel
cmoveq
cmovew
fcmovnbe
fcmove
fcompi
stpq
fistpll
dcww
fldcw
leave
opnz
loopne
ushfd
ysret
sysretl
cmovbel
cmovbeq
cmovbew
cmovael
cmovaeq
cmovaew
cmovlel
cmovleq
cmovlew
cmovgel
cmovgeq
cmovgew
cmovnel
cmovneq
cmovnew
cmovpl
cmovpq
cmovpw
cmovnpl
cmovnpq
cmovnpw
fcmovnb
fcmovbe
sttpq
fisttpll
comip
fucompi
ysexit
sysexitl
movn
cmoval
cmovaq
cmovaw
cmovll
cmovlq
cmovlw
cmovgl
cmovgq
cmovgw
cmovnae
fcmovb
popa
cmovb
cmove
cmovbe
cmovae
cmovle
cmovge
cmovne
cmovp
cmovnp
ushad
cmovn
cmova
cmovl
cmovg
sete
setbe
setae
setle
setge
setne
setp
setnp
setn
seta
setl
setg
{sae}
{1to8}
{1to16}
AVX-512 ISA
Not 64-bit mode
64-bit mode
16-bit mode
Not 16-bit mode
32-bit mode
(unknown)
{1to16}, 
{1to8}, 
, %ax
, %eax
, %rax
, %al
, %st(0)
  # NOREX
  # TAILCALL
{sae}, 
{sae}, 
} {z}
xstorerng
<reg:
lock
{rn-sae}
{rd-sae}
{ru-sae}
{rz-sae}
<imm:
imm = 0x%llX
<mem:
, st(0)
, ax
, eax
, rax
, al
, cl
} {z}, 
, {sae}
opaque ptr 
zmmword ptr 
(%rip)
no-rip
@feat.00
__IMPORT
__jump_table
__pointers
_fltused
__fltused
$stub
$non_lazy_ptr
__imp_
 + [.-
@TLSGD
@TLSLD
@TLSLDM
@GOTTPOFF
@INDNTPOFF
@TPOFF
@DTPOFF
@NTPOFF
@GOTNTPOFF
@GOTPCREL
@GOT
@GOTOFF
@PLT
@TLVP
@SECREL32
subreg
X86 Assembly / Object Emitter
X86 Machine Code Emitter
JIT does not support inline asm!
X86 FP Stackifier
Stack overflow!
Access past stack top!
Cannot pop empty stack!
Stack empty??
Stack cannot be empty!
fixed input regs must be last on the x87 stack
output regs must be last on the x87 stack
clobbers must be last on the x87 stack
implicitly popped regs must be last on the x87 stack
illegal "f" output constraint
_ftol2
___chkstk_ms
Segmented stacks do not support vararg functions.
Segmented stacks not supported on this platform.
Segmented stacks not supported on FreeBSD i386.
__morestack
erlang.
bif_
inc_stack_0
Segmented stacks does not support fastcall with nested function.
X86 DAG->DAG Instruction Selection
__main
_alldiv
_aulldiv
_allrem
_aullrem
_allmul
sincosf
sincos
SSE register return with SSE disabled
SSE2 register return with SSE2 disabled
_tls_array
_tls_index
Cannot use segmented stacks with functions that have nested arguments.
Nest register in use - reduce number of inreg parameters!
X86ISD::BSF
X86ISD::BSR
X86ISD::SHLD
X86ISD::SHRD
X86ISD::FAND
X86ISD::FANDN
X86ISD::FOR
X86ISD::FXOR
X86ISD::FSRL
X86ISD::FILD
X86ISD::FILD_FLAG
X86ISD::FP_TO_INT16_IN_MEM
X86ISD::FP_TO_INT32_IN_MEM
X86ISD::FP_TO_INT64_IN_MEM
X86ISD::FLD
X86ISD::FST
X86ISD::CALL
X86ISD::RDTSC_DAG
X86ISD::BT
X86ISD::CMP
X86ISD::COMI
X86ISD::UCOMI
X86ISD::CMPM
X86ISD::CMPMU
X86ISD::SETCC
X86ISD::SETCC_CARRY
X86ISD::FSETCC
X86ISD::CMOV
X86ISD::BRCOND
X86ISD::RET_FLAG
X86ISD::REP_STOS
X86ISD::REP_MOVS
X86ISD::GlobalBaseReg
X86ISD::Wrapper
X86ISD::WrapperRIP
X86ISD::PEXTRB
X86ISD::PEXTRW
X86ISD::INSERTPS
X86ISD::PINSRB
X86ISD::PINSRW
X86ISD::PSHUFB
X86ISD::ANDNP
X86ISD::PSIGN
X86ISD::BLENDV
X86ISD::BLENDI
X86ISD::SUBUS
X86ISD::HADD
X86ISD::HSUB
X86ISD::FHADD
X86ISD::FHSUB
X86ISD::UMAX
X86ISD::UMIN
X86ISD::SMAX
X86ISD::SMIN
X86ISD::FMAX
X86ISD::FMIN
X86ISD::FMAXC
X86ISD::FMINC
X86ISD::FRSQRT
X86ISD::FRCP
X86ISD::TLSADDR
X86ISD::TLSBASEADDR
X86ISD::TLSCALL
X86ISD::EH_SJLJ_SETJMP
X86ISD::EH_SJLJ_LONGJMP
X86ISD::EH_RETURN
X86ISD::TC_RETURN
X86ISD::FNSTCW16m
X86ISD::FNSTSW16r
X86ISD::LCMPXCHG_DAG
X86ISD::LCMPXCHG8_DAG
X86ISD::ATOMADD64_DAG
X86ISD::ATOMSUB64_DAG
X86ISD::ATOMOR64_DAG
X86ISD::ATOMXOR64_DAG
X86ISD::ATOMAND64_DAG
X86ISD::ATOMNAND64_DAG
X86ISD::VZEXT_MOVL
X86ISD::VSEXT_MOVL
X86ISD::VZEXT_LOAD
X86ISD::VZEXT
X86ISD::VSEXT
X86ISD::VTRUNC
X86ISD::VTRUNCM
X86ISD::VINSERT
X86ISD::VFPEXT
X86ISD::VFPROUND
X86ISD::VSHLDQ
X86ISD::VSRLDQ
X86ISD::VSHL
X86ISD::VSRL
X86ISD::VSRA
X86ISD::VSHLI
X86ISD::VSRLI
X86ISD::VSRAI
X86ISD::CMPP
X86ISD::PCMPEQ
X86ISD::PCMPGT
X86ISD::PCMPEQM
X86ISD::PCMPGTM
X86ISD::ADD
X86ISD::SUB
X86ISD::ADC
X86ISD::SBB
X86ISD::SMUL
X86ISD::UMUL
X86ISD::INC
X86ISD::DEC
X86ISD::OR
X86ISD::XOR
X86ISD::AND
X86ISD::BLSI
X86ISD::BLSMSK
X86ISD::BLSR
X86ISD::BEXTR
X86ISD::MUL_IMM
X86ISD::PTEST
X86ISD::TESTP
X86ISD::TESTM
X86ISD::KORTEST
X86ISD::PALIGNR
X86ISD::PSHUFD
X86ISD::PSHUFHW
X86ISD::PSHUFLW
X86ISD::SHUFP
X86ISD::MOVLHPS
X86ISD::MOVLHPD
X86ISD::MOVHLPS
X86ISD::MOVLPS
X86ISD::MOVLPD
X86ISD::MOVDDUP
X86ISD::MOVSHDUP
X86ISD::MOVSLDUP
X86ISD::MOVSD
X86ISD::MOVSS
X86ISD::UNPCKL
X86ISD::UNPCKH
X86ISD::VBROADCAST
X86ISD::VBROADCASTM
X86ISD::VPERMILP
X86ISD::VPERM2X128
X86ISD::VPERMV
X86ISD::VPERMV3
X86ISD::VPERMI
X86ISD::PMULUDQ
X86ISD::VASTART_SAVE_XMM_REGS
X86ISD::VAARG_64
X86ISD::WIN_ALLOCA
X86ISD::MEMBARRIER
X86ISD::SEG_ALLOCA
X86ISD::WIN_FTOL
X86ISD::SAHF
X86ISD::RDRAND
X86ISD::RDSEED
X86ISD::FMADD
X86ISD::FMSUB
X86ISD::FNMADD
X86ISD::FNMSUB
X86ISD::FMADDSUB
X86ISD::FMSUBADD
X86ISD::PCMPESTRI
X86ISD::PCMPISTRI
X86ISD::XTEST
__morestack_allocate_stack_space
___chkstk
__chkstk
_chkstk
_alloca
bswap
bswapl
bswapq
${0:q}
=r,0,
rorw
$$8,
${0:w}
rolw
rorl
$$16,
%eax
%edx
xchgl
%eax,
{st}
{flags}
__sincos_stret
__sincosf_stret
~{cc}
~{flags}
~{fpsr}
~{dirflag}
disable-spill-fusing
Disable fusing of spill code into instructions
print-failed-fuse-candidates
Print instructions that the allocator wants to fuse, but the X86 backend currently can't
remat-pic-stub-load
Re-materialize load from stub in PIC mode
We failed to fuse operand 
 in 
X86 PIC Global Base Reg Initialization
_GLOBAL_OFFSET_TABLE_
Local Dynamic TLS Access Clean-up
MEMBARRIER
eh_return, addr: %
TAILCALL
__tls_get_addr
___tls_get_addr
X86 Atom pad short functions
GR8_NOREX+GR64_NOREX_and_GR64_TC
GR8_NOREX+GR64_TCW64
GR8_NOREX+GR64_TC
GR8+GR64_TCW64
GR64_NOREX+GR64_TC
GR8+GR64_NOREX
GR8+GR64_TC
force-align-stack
Force align the stack to the minimum alignment needed for the function.
x86-use-base-pointer
Enable use of a base pointer for complex stack frames
Stack realignment in presence of dynamic allocas is not supported withthis calling convention.
no-realign-stack
sub_8bit
sub_8bit_hi
sub_16bit
sub_32bit
sub_xmm
sub_ymm
Expected a variant SchedClass
__bzero
target-features
+64bit,+sse2,
+64bit,+sse2
x86-use-vzeroupper
Minimize AVX to SSE transition penalty
x86-early-ifcvt
Enable early if-conversion on X86
-p:32:32
-i64:64
-f64:32:64
-f80:128
-f80:32
-n8:16:32:64
-n8:16:32
-S32
-S128
__ImageBase
X86 Target Transform Info
x86tti
X86 vzeroupper inserter
X86 Atom LEA Fixup
mc-x86-disable-arith-relaxation
Disable relaxation of arithmetic instruction for X86
reloc_riprel_4byte
reloc_riprel_4byte_movq_load
reloc_signed_4byte
reloc_global_offset_table
unexpected instruction to relax: 
VK1WM
GR8_NOREX
VK8WM
GR8_ABCD_H
GR8_ABCD_L
GR16
GR16_NOREX
VK16
VK16WM
SEGMENT_REG
GR16_ABCD
FPCCR
FR32X
FR32
GR32
GR32_NOAX
GR32_NOSP
GR32_NOAX_and_GR32_NOSP
DEBUG_REG
GR32_NOREX
GR32_NOAX_and_GR32_NOREX
GR32_NOREX_NOSP
RFP32
GR32_NOAX_and_GR32_NOREX_NOSP
GR32_ABCD
GR32_ABCD_and_GR32_NOAX
GR32_TC
GR32_AD
GR32_NOAX_and_GR32_TC
GR32_AD_and_GR32_NOAX
RFP64
FR64X
GR64
CONTROL_REG
FR64
GR64_with_sub_8bit
GR64_NOSP
GR64_with_sub_32bit_in_GR32_NOAX
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP
GR64_NOREX
GR64_TC
GR64_NOSP_and_GR64_TC
GR64_with_sub_16bit_in_GR16_NOREX
VR64
GR64_NOREX_NOSP
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX
GR64_NOREX_and_GR64_TC
GR64_TCW64
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP
GR64_NOREX_NOSP_and_GR64_TC
GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_ABCD
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX
GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX
GR64_with_sub_32bit_in_GR32_TC
GR64_with_sub_32bit_in_GR32_AD
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC
GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX
RFP80
VR128X
VR128
VR256X
VR256
VR512
VR512_with_sub_xmm_in_FR32
16bit-mode
16-bit mode (i8086)
32bit-mode
32-bit mode (80386)
3dnow
Enable 3DNow! instructions
3dnowa
Enable 3DNow! Athlon instructions
64bit
Support 64-bit instructions
64bit-mode
64-bit mode (x86_64)
Support ADX instructions
Enable AES instructions
atom
Intel Atom processors
Enable AVX instructions
avx2
Enable AVX2 instructions
avx512cd
Enable AVX-512 Conflict Detection Instructions
avx512er
Enable AVX-512 Exponential and Reciprocal Instructions
avx512f
Enable AVX-512 instructions
avx512pf
Enable AVX-512 PreFetch Instructions
Support BMI instructions
bmi2
Support BMI2 instructions
call-reg-indirect
Call register indirect
cmov
Enable conditional move instructions
cx16
64-bit with cmpxchg16b
f16c
Support 16-bit floating point conversion instructions
fast-unaligned-mem
Fast unaligned memory access
Enable three-operand fused multiple-add
fma4
Enable four-operand fused multiple-add
fsgsbase
Support FS/GS Base instructions
Support HLE
idiv-to-divb
Use small divide for positive values less than 256
lea-sp
Use LEA for adjusting the stack pointer
lea-uses-ag
LEA instruction needs inputs at AG stage
lzcnt
Support LZCNT instruction
Enable MMX instructions
movbe
Support MOVBE instruction
pad-short-functions
Pad short functions
pclmul
Enable packed carry-less multiplication instructions
popcnt
Support POPCNT instruction
prfchw
Support PRFCHW instructions
rdrnd
Support RDRAND instruction
rdseed
Support RDSEED instruction
Support RTM instructions
Enable SHA instructions
Intel Silvermont processors
slow-bt-mem
Bit testing of memory is slow
slow-shld
SHLD instruction is slow
Enable SSE instructions
sse2
Enable SSE2 instructions
sse3
Enable SSE3 instructions
sse4.1
Enable SSE 4.1 instructions
sse4.2
Enable SSE 4.2 instructions
sse4a
Support SSE 4a instructions
ssse3
Enable SSSE3 instructions
Enable TBM instructions
vector-unaligned-mem
Allow unaligned memory operands on vector/SIMD instructions
Enable XOP instructions
amdfam10
Select the amdfam10 processor
athlon
Select the athlon processor
athlon-4
Select the athlon-4 processor
athlon-fx
Select the athlon-fx processor
athlon-mp
Select the athlon-mp processor
athlon-tbird
Select the athlon-tbird processor
athlon-xp
Select the athlon-xp processor
athlon64
Select the athlon64 processor
athlon64-sse3
Select the athlon64-sse3 processor
Select the atom processor
bdver1
Select the bdver1 processor
bdver2
Select the bdver2 processor
bdver3
Select the bdver3 processor
btver1
Select the btver1 processor
btver2
Select the btver2 processor
Select the c3 processor
c3-2
Select the c3-2 processor
core-avx-i
Select the core-avx-i processor
core-avx2
Select the core-avx2 processor
core2
Select the core2 processor
corei7
Select the corei7 processor
corei7-avx
Select the corei7-avx processor
generic
Select the generic processor
geode
Select the geode processor
i386
Select the i386 processor
i486
Select the i486 processor
i586
Select the i586 processor
i686
Select the i686 processor
Select the k6 processor
k6-2
Select the k6-2 processor
k6-3
Select the k6-3 processor
Select the k8 processor
k8-sse3
Select the k8-sse3 processor
Select the knl processor
nehalem
Select the nehalem processor
nocona
Select the nocona processor
opteron
Select the opteron processor
opteron-sse3
Select the opteron-sse3 processor
penryn
Select the penryn processor
pentium
Select the pentium processor
pentium-m
Select the pentium-m processor
pentium-mmx
Select the pentium-mmx processor
pentium2
Select the pentium2 processor
pentium3
Select the pentium3 processor
pentium3m
Select the pentium3m processor
pentium4
Select the pentium4 processor
pentium4m
Select the pentium4m processor
pentiumpro
Select the pentiumpro processor
prescott
Select the prescott processor
Select the slm processor
westmere
Select the westmere processor
winchip-c6
Select the winchip-c6 processor
winchip2
Select the winchip2 processor
Select the x86-64 processor
yonah
Select the yonah processor
+64bit-mode,-32bit-mode,-16bit-mode
-64bit-mode,+32bit-mode,-16bit-mode
-64bit-mode,-32bit-mode,+16bit-mode
x86-asm-syntax
Choose style of code to emit from X86 backend:
Emit AT&T-style assembly
intel
Emit Intel-style assembly
mark-data-regions
Mark code section jump table data regions.
.note.GNU-stack
FORM: 
unsupported relocation of modified symbol
unsupported pc-relative relocation of difference
unsupported relocation with identical base
unsupported relocation with subtraction expression
unsupported relocation of variable '
unsupported relocation of undefined symbol '
unsupported symbol modifier in relocation
unsupported symbol modifier in branch relocation
TLVP symbol modifier should have been rip-rel
32-bit absolute addressing is not supported in 64-bit mode
symbol '
' can not be undefined in a subtraction expression
0x%x
Section too large, can't encode r_address (
) into 24 bits of scattered relocation entry.
Expected X86_64_RELOC_UNSIGNED after X86_64_RELOC_SUBTRACTOR.
Invalid section type in Rel!
Invalid section index!
32-bit X86: Pentium-Pro and above
x86-64
64-bit X86: EM64T and AMD64
move
    (scope)
    (block context: 
OSAtomicCompareAndSwap
objc_atomicCompareAndSwap
dispatch_sync
dispatch_once
 (ENTRY)]
 (EXIT)]
 (INDIRECT GOTO DISPATCH)]
case 
 ... 
catch (
   T: 
   Preds 
     
   Succs 
 NULL
({ ... ; 
... , 
 (OperatorCall)
 (BindTemporary)
 (CXXConstructExpr, 
 (Base initializer)
 (Delegating initializer)
 (Member initializer)
 (Implicit destructor)
CFGNewAllocator(
 (Base object destructor)
 (Member object destructor)
() (Temporary object destructor)
try ...
static init 
do ... while 
 ? ... : ...
 || ...
 && ...
__builtin_choose_expr( 
for (
goto *
switch 
while 
xpc_
DADisk
DADissenter
DASessionRef
reate
ssize_t
raise
NSException
wint_t
unsigned __int32
const unichar *
intmax_t
ptrdiff_t
unsigned __int64
uintmax_t
wchar_t *
<None>
CXXCtorInitializer
TemplateArgument
NestedNameSpecifier
NestedNameSpecifierLoc
QualType
TypeLoc
Decl
AccessSpecDecl
BlockDecl
CapturedDecl
ClassScopeFunctionSpecializationDecl
EmptyDecl
FileScopeAsmDecl
FriendDecl
FriendTemplateDecl
ImportDecl
LinkageSpecDecl
NamedDecl
LabelDecl
NamespaceDecl
NamespaceAliasDecl
ObjCCompatibleAliasDecl
ObjCContainerDecl
ObjCCategoryDecl
ObjCImplDecl
ObjCCategoryImplDecl
ObjCImplementationDecl
ObjCInterfaceDecl
ObjCProtocolDecl
ObjCMethodDecl
ObjCPropertyDecl
TemplateDecl
RedeclarableTemplateDecl
ClassTemplateDecl
FunctionTemplateDecl
TypeAliasTemplateDecl
VarTemplateDecl
TemplateTemplateParmDecl
TypeDecl
TagDecl
EnumDecl
RecordDecl
CXXRecordDecl
ClassTemplateSpecializationDecl
ClassTemplatePartialSpecializationDecl
TemplateTypeParmDecl
TypedefNameDecl
TypeAliasDecl
TypedefDecl
UnresolvedUsingTypenameDecl
UsingDecl
UsingDirectiveDecl
UsingShadowDecl
ValueDecl
DeclaratorDecl
FieldDecl
ObjCAtDefsFieldDecl
ObjCIvarDecl
FunctionDecl
CXXMethodDecl
CXXConstructorDecl
CXXConversionDecl
CXXDestructorDecl
MSPropertyDecl
NonTypeTemplateParmDecl
VarDecl
ImplicitParamDecl
ParmVarDecl
VarTemplateSpecializationDecl
VarTemplatePartialSpecializationDecl
EnumConstantDecl
IndirectFieldDecl
UnresolvedUsingValueDecl
OMPThreadPrivateDecl
ObjCPropertyImplDecl
StaticAssertDecl
TranslationUnitDecl
Stmt
AsmStmt
Expr
AbstractConditionalOperator
CastExpr
ExplicitCastExpr
CXXNamedCastExpr
OverloadExpr
OMPExecutableDirective
SwitchCase
Type
BuiltinType
ComplexType
PointerType
BlockPointerType
ReferenceType
LValueReferenceType
RValueReferenceType
MemberPointerType
ArrayType
ConstantArrayType
IncompleteArrayType
VariableArrayType
DependentSizedArrayType
DependentSizedExtVectorType
VectorType
ExtVectorType
FunctionType
FunctionProtoType
FunctionNoProtoType
UnresolvedUsingType
ParenType
TypedefType
AdjustedType
DecayedType
TypeOfExprType
TypeOfType
DecltypeType
UnaryTransformType
TagType
RecordType
EnumType
ElaboratedType
AttributedType
TemplateTypeParmType
SubstTemplateTypeParmType
SubstTemplateTypeParmPackType
TemplateSpecializationType
AutoType
InjectedClassNameType
DependentNameType
DependentTemplateSpecializationType
PackExpansionType
ObjCObjectType
ObjCInterfaceType
ObjCObjectPointerType
AtomicType
Unable to print values of type 
Unable to dump values of type 
Uninitialized
Int: 
Float: 
Vector: 
ComplexInt: 
ComplexFloat: 
LValue: <todo>
Array: 
Struct 
 bases: 
 fields: 
Union: 
MemberPointer: <todo>
AddrLabelDiff: <todo>
<uninitialized>
(char*)
 + 1
;{}#@
*** AST Context Stats:
 types total.
Builtin
 types
Complex
Pointer
BlockPointer
LValueReference
RValueReference
MemberPointer
ConstantArray
IncompleteArray
VariableArray
DependentSizedArray
DependentSizedExtVector
Vector
ExtVector
FunctionProto
FunctionNoProto
UnresolvedUsing
Paren
Typedef
Adjusted
Decayed
TypeOfExpr
TypeOf
Decltype
UnaryTransform
Record
Enum
Elaborated
Attributed
TemplateTypeParm
SubstTemplateTypeParm
SubstTemplateTypeParmPack
TemplateSpecialization
Auto
InjectedClassName
DependentName
DependentTemplateSpecialization
PackExpansion
ObjCObject
ObjCInterface
ObjCObjectPointer
Atomic
Total bytes = 
 implicit default constructors created
 implicit copy constructors created
 implicit move constructors created
 implicit copy assignment operators created
 implicit move assignment operators created
 implicit destructors created
__int128_t
__uint128_t
__float128
_sampler_t
NSConstantString
objc_super
__block_descriptor
reserved
Size
__block_descriptor_withcopydispose
CopyFuncPtr
DestroyFuncPtr
instancetype
objc_class
objc_object
{objc_object=}
{objc_class=}
"_vptr$
Class
Protocol
BOOL
__builtin_va_list
__va_list
__stack
__gr_top
__vr_top
__gr_offs
__vr_offs
__va_list_tag
overflow_arg_area
reg_save_area
gp_offset
fp_offset
__ap
__gpr
__fpr
__overflow_arg_area
__reg_save_area
objcclass
objcinstance
the global namespace
the global scope
namespace 
method 
function 
' (aka '
(no argument)
(default) 
 != 
[(default) 
(default) template 
[(default) template 
[template 
 aka 
(no qualifiers) 
(no qualifiers)
[...]
 * ...]
<<<NULL>>>
 parent 
 hidden
 invalid
 prev 
 first 
<invalid sloc>
capture this
capture
 byref
 nested
 null
 type
 decl
 nullptr
 integral 
 template 
 template expansion
 expr
 pack
 C++
 inline
original
 required
 optional
 readonly
 assign
 readwrite
 retain
 copy
 nonatomic
 weak
 strong
 unsafe_unretained
 class
 struct
 __module_private__
 definition
 typename
 mutable
 synthesize
 none
 private
 protected
 public
 package
 virtual
 pure
 delete
 noexcept-unevaluated 
 noexcept-uninstantiated 
 tls
 tls_dynamic
 nrvo
 dynamic
Annotate
CFConsumed
CarriesDependency
MetalBlendSourceIndex
MetalBufferIndex
MetalClipDistance
MetalColor
MetalDepth
MetalFrontFacing
MetalLocalIndex
MetalPointCoord
MetalPointSize
MetalPosition
MetalRenderTargetArrayIndex
MetalSampleID
MetalSampleMask
MetalSamplerIndex
MetalStageIn
MetalTextureIndex
NSConsumed
ARMInterrupt
AcquiredAfter
AcquiredBefore
AlignMac68k
Aligned
AlwaysInline
AnalyzerNoReturn
ArcWeakrefUnavailable
ArgumentWithTypeTag
AsmLabel
AssertExclusiveLock
AssertSharedLock
Availability
Blocks
C11NoReturn
CDecl
CFAuditedTransfer
CFReturnsNotRetained
CFReturnsRetained
CFUnknownTransfer
CUDAConstant
CUDADevice
CUDAGlobal
CUDAHost
CUDALaunchBounds
CUDAShared
CXX11NoReturn
CallableWhen
Cleanup
Cold
Common
Const
Constructor
Consumable
ConsumableAutoCast
ConsumableSetOnRead
DLLExport
DLLImport
Deprecated
Destructor
EnableIf
ExclusiveLockFunction
ExclusiveLocksRequired
ExclusiveTrylockFunction
FastCall
Final
ForceInline
Format
FormatArg
GNUInline
GuardedBy
GuardedVar
IBOutletCollection
InitPriority
IntelOclBicc
LockReturned
Lockable
LocksExcluded
MSABI
MSInheritance
MSP430Interrupt
Malloc
MaxFieldAlignment
MetalCLKernel
MetalFunctionConstant
MetalFunctionConstantPredicate
MetalFunctionConstantVariable
MetalStageInGridOrigin
MetalStageInGridSize
MinSize
Mips16
MsStruct
NSConsumesSelf
NSReturnsAutoreleased
NSReturnsNotRetained
NSReturnsRetained
Naked
NoCommon
NoDebug
NoDuplicate
NoInline
NoInstrumentFunction
NoMips16
NoReturn
NoSanitizeAddress
NoSanitizeMemory
NoSanitizeThread
NoThreadSafetyAnalysis
NoThrow
NonNull
ObjCBridge
ObjCBridgeMutable
ObjCBridgeRelated
ObjCException
ObjCExplicitProtocolImpl
ObjCMethodFamily
ObjCNSObject
ObjCPreciseLifetime
ObjCRequiresPropertyDefs
ObjCRequiresSuper
ObjCReturnsInnerPointer
ObjCRootClass
OpenCLKernel
Override
Ownership
Packed
ParamTypestate
Pascal
PnaclCall
PtGuardedBy
PtGuardedVar
Pure
ReqdWorkGroupSize
ReturnTypestate
ReturnsNonNull
ReturnsTwice
ScopedLockable
Section
SelectAny
Sentinel
SetTypestate
SharedLockFunction
SharedLocksRequired
SharedTrylockFunction
StdCall
SysVABI
TLSModel
TestTypestate
ThisCall
TransparentUnion
TypeTagForDatatype
TypeVisibility
Unavailable
UnlockFunction
Unused
Used
Uuid
VecReturn
VecTypeHint
Visibility
WarnUnused
WarnUnusedResult
Weak
WeakImport
WeakRef
WorkGroupSizeHint
X86ForceAlignArgPointer
Alias
FallThrough
MetalArrayLength
MetalBaseInstance
MetalBaseVertex
MetalBuiltinInput
MetalCenter
MetalCenterNoPerspective
MetalCenterPerspective
MetalCentroid
MetalCentroidNoPerspective
MetalCentroidPerspective
MetalEarlyFragmentTests
MetalFlat
MetalFragment
MetalInstanceId
MetalNoPerspective
MetalPatch
MetalPatchId
MetalPerspective
MetalPositionInPatch
MetalSample
MetalSampleNoPerspective
MetalSamplePerspective
MetalStageInputOutput
MetalThreadGroupPosGrid
MetalThreadGroupsPerGrid
MetalThreadIndexGroup
MetalThreadPosGrid
MetalThreadPosGroup
MetalThreadsPerGrid
MetalThreadsPerGroup
MetalUserDefined
MetalVertex
MetalVertexFetch
MetalVertexId
Mode
ObjCDesignatedInitializer
OpenCLImageAccess
Overloadable
ThreadExecWidth
Attr
 ABORT
 FIQ
 Generic
 IRQ
 SWI
 UNDEF
 IsPointer
 Unavailable
 ByRef
 Consumed
 Unconsumed
 Unknown
 Any
 Greater
 Less
 OMF_None
 OMF_alloc
 OMF_copy
 OMF_init
 OMF_mutableCopy
 OMF_new
 AAPCS
 AAPCS_VFP
 LayoutCompatible
 MustBeNull
 Default
 Hidden
 Protected
 Implicit
<undeserialized declarations>
StoredDeclsMap 
 primary
DeclarationName 
<undeserialized lookups>
 lvalue
 xvalue
 bitfield
 objcproperty
 vectorcomponent
' ComputeLHSTy=
 ComputeResultTy=
(CXXTemporary
 elidable
 zeroing
 this
 functional cast to 
 extended by 
 selector=
 isFreeIvar
 class=
 super (instance)
 super (class)
 Kind=MethodRef Getter="
" Setter="
 Kind=PropertyRef Property="
 super
 Messaging=
Getter&Setter
Getter
Setter
 Kind=ArraySubscript GetterForArray="
 Kind=DictionarySubscript GetterForDictionary="
" SetterForArray="
" SetterForDictionary="
ADL) = '
 empty
 __func__
 __FUNCTION__
 __FUNCDNAME__
 L__FUNCTION__
 __PRETTY_FUNCTION__
 sizeof
 alignof
 vec_step
postfix
 catch all
 Name="
 Arg[
<not a builtin command>
 explicitly
 implicitly
 Param="
 ParamIndex=
 Position=<
" CloseName="
 Text="
 Attrs: 
 SelfClosing
 RenderNormal
 RenderBold
 RenderMonospaced
 RenderEmphasized
 __attribute__((interrupt(
 __attribute__((acquired_after(
 __attribute__((acquired_before(
 __attribute__((alias("
")))
 [[gnu::alias("
")]]
(No spelling)
 __attribute__((aligned(
 __declspec(align(
 [[gnu::aligned(
 alignas(
 _Alignas(
 __attribute__((always_inline))
 [[gnu::always_inline]]
 __attribute__((analyzer_noreturn))
 __attribute__((annotate("
 __attribute__((objc_arc_weak_reference_unavailable))
 __attribute__((argument_with_type_tag(
 __attribute__((pointer_with_type_tag(
 asm("
 __asm__("
 __attribute__((assert_exclusive_lock(
 __attribute__((assert_shared_lock(
 __attribute__((availability(
, introduced=
, deprecated=
, obsoleted=
, unavailable
 __attribute__((blocks(
 _Noreturn
 __attribute__((cdecl))
 [[gnu::cdecl]]
 __cdecl
 _cdecl
 __attribute__((cf_audited_transfer))
 __attribute__((cf_consumed))
 __attribute__((cf_returns_not_retained))
 __attribute__((cf_returns_retained))
 __attribute__((cf_unknown_transfer))
 __attribute__((constant))
 __attribute__((device))
 __attribute__((global))
 __attribute__((host))
 __attribute__((launch_bounds(
 __attribute__((shared))
 [[noreturn]]
 [[std::noreturn]]
 __attribute__((callable_when(
 __attribute__((carries_dependency))
 [[carries_dependency]]
 [[std::carries_dependency]]
 __attribute__((cleanup(
 [[gnu::cleanup(
 __attribute__((cold))
 [[gnu::cold]]
 __attribute__((common))
 [[gnu::common]]
 __attribute__((const))
 __attribute__((__const))
 [[gnu::const]]
 [[gnu::__const]]
 __attribute__((constructor(
 [[gnu::constructor(
 __attribute__((consumable(
 __attribute__((consumable_auto_cast_state))
 __attribute__((consumable_set_state_on_read))
 __declspec(dllexport)
 __attribute__((dllexport))
 [[gnu::dllexport]]
 __declspec(dllimport)
 __attribute__((dllimport))
 [[gnu::dllimport]]
 __attribute__((deprecated("
 __declspec(deprecated("
 [[gnu::deprecated("
 [[deprecated("
 __attribute__((destructor(
 [[gnu::destructor(
 __attribute__((enable_if(
 __attribute__((exclusive_lock_function(
 __attribute__((exclusive_locks_required(
 __attribute__((exclusive_trylock_function(
 [[clang::fallthrough]]
 [[gnu::fastcall]]
 __fastcall
 _fastcall
 final
 sealed
 __forceinline
 __attribute__((format(
 [[gnu::format(
 __attribute__((format_arg(
 [[gnu::format_arg(
 __attribute__((gnu_inline))
 [[gnu::gnu_inline]]
 __attribute__((guarded_by(
 __attribute__((guarded_var))
 __attribute__((hot))
 [[gnu::hot]]
 __attribute__((ibaction))
 __attribute__((iboutlet))
 __attribute__((iboutletcollection(
 __attribute__((init_priority(
 __attribute__((lock_returned(
 __attribute__((lockable))
 __attribute__((locks_excluded(
 [[gnu::ms_abi]]
 __single_inheritance
 __multiple_inheritance
 __virtual_inheritance
 __unspecified_inheritance
 __attribute__((malloc))
 [[gnu::malloc]]
 __attribute__((may_alias))
 [[gnu::may_alias]]
 [[base_instance]]
 [[base_vertex]]
 [[index(
 [[buffer(
 kernel
 [[center_no_perspective]]
 [[center_perspective]]
 [[centroid_no_perspective]]
 [[centroid_perspective]]
 [[clip_distance]]
 [[color(
 [[depth(
 [[early_fragment_tests]]
 [[flat]]
 fragment
 [[front_facing]]
 [[function_constant(
 [[instance_id]]
 [[threadgroup(
 [[patch(
 [[patch_id]]
 [[point_coord]]
 [[point_size]]
 [[position]]
 [[position_in_patch]]
 [[render_target_array_index]]
 [[sample_id]]
 [[sample_mask]]
 [[sample_no_perspective]]
 [[sample_perspective]]
 [[sampler(
 [[stage_in]]
 [[grid_origin]]
 [[grid_size]]
 [[attribute(
 [[texture(
 [[threadgroup_position_in_grid]]
 [[threadgroups_per_grid]]
 [[thread_index_in_threadgroup]]
 [[thread_position_in_grid]]
 [[thread_position_in_threadgroup]]
 [[threads_per_grid]]
 [[threads_per_threadgroup]]
 [[user(
 vertex
 [[vertex_id]]
 __attribute__((minsize))
 __attribute__((mips16))
 [[gnu::mips16]]
 __attribute__((mode(
 [[gnu::mode(
 __attribute__((ms_struct))
 [[gnu::ms_struct]]
 __attribute__((ns_consumed))
 __attribute__((ns_consumes_self))
 __attribute__((ns_returns_autoreleased))
 __attribute__((ns_returns_not_retained))
 __attribute__((ns_returns_retained))
 __attribute__((naked))
 [[gnu::naked]]
 __declspec(naked)
 __attribute__((nocommon))
 [[gnu::nocommon]]
 __attribute__((nodebug))
 __attribute__((no_duplicate))
 [[no_duplicate]]
 __attribute__((noinline))
 [[gnu::noinline]]
 __declspec(noinline)
 __attribute__((no_instrument_function))
 [[gnu::no_instrument_function]]
 __attribute__((nomips16))
 [[gnu::nomips16]]
 [[gnu::noreturn]]
 __declspec(noreturn)
 __attribute__((no_address_safety_analysis))
 __attribute__((no_sanitize_address))
 [[gnu::no_address_safety_analysis]]
 [[gnu::no_sanitize_address]]
 __attribute__((no_sanitize_memory))
 __attribute__((no_sanitize_thread))
 __attribute__((no_thread_safety_analysis))
 __attribute__((nothrow))
 [[gnu::nothrow]]
 __declspec(nothrow)
 __attribute__((nonnull(
 [[gnu::nonnull(
 __attribute__((objc_bridge(
 __attribute__((objc_bridge_mutable(
 __attribute__((objc_bridge_related(
 __attribute__((objc_designated_initializer))
 __attribute__((objc_exception))
 __attribute__((objc_protocol_requires_explicit_implementation))
 __attribute__((objc_method_family(
 __attribute__((NSObject))
 __attribute__((objc_precise_lifetime))
 __attribute__((objc_requires_property_definitions))
 __attribute__((objc_requires_super))
 __attribute__((objc_returns_inner_pointer))
 __attribute__((objc_root_class))
 __read_only
 read_only
 __write_only
 write_only
 __read_write
 read_write
 __kernel
 __attribute__((overloadable))
 override
 __attribute__((ownership_holds(
 __attribute__((ownership_returns(
 __attribute__((ownership_takes(
 __attribute__((packed))
 [[gnu::packed]]
 __attribute__((param_typestate(
 __pascal
 _pascal
 __attribute__((pcs(
 [[gnu::pcs(
 __attribute__((pt_guarded_by(
 __attribute__((pt_guarded_var))
 __attribute__((pure))
 [[gnu::pure]]
 __attribute__((reqd_work_group_size(
 __attribute__((return_typestate(
 __attribute__((returns_nonnull))
 [[gnu::returns_nonnull]]
 __attribute__((returns_twice))
 [[gnu::returns_twice]]
 __attribute__((scoped_lockable))
 __attribute__((section("
 [[gnu::section("
 __declspec(selectany)
 __attribute__((sentinel(
 [[gnu::sentinel(
 __attribute__((set_typestate(
 __attribute__((shared_lock_function(
 __attribute__((shared_locks_required(
 __attribute__((shared_trylock_function(
 [[gnu::stdcall]]
 __stdcall
 _stdcall
 [[gnu::sysv_abi]]
 __attribute__((tls_model("
 [[gnu::tls_model("
 __attribute__((test_typestate(
 [[gnu::thiscall]]
 __thiscall
 _thiscall
 [[thread_execution_width]]
 __attribute__((transparent_union))
 [[gnu::transparent_union]]
 __attribute__((type_tag_for_datatype(
 __attribute__((type_visibility(
 [[clang::type_visibility(
 __attribute__((unavailable("
 __attribute__((unlock_function(
 __attribute__((unused))
 [[gnu::unused]]
 __attribute__((used))
 [[gnu::used]]
 __declspec(uuid("
 __attribute__((vecreturn))
 __attribute__((vec_type_hint(
 __attribute__((visibility(
 [[gnu::visibility(
 __attribute__((warn_unused))
 __attribute__((warn_unused_result))
 [[clang::warn_unused_result]]
 [[gnu::warn_unused_result]]
 __attribute__((weak))
 [[gnu::weak]]
 __attribute__((weak_import))
 __attribute__((weakref("
 [[gnu::weakref("
 __attribute__((work_group_size_hint(
 __attribute__((force_align_arg_pointer))
NoCommentKind
BlockCommandComment
ParamCommandComment
TParamCommandComment
VerbatimBlockComment
VerbatimLineComment
ParagraphComment
FullComment
HTMLEndTagComment
HTMLStartTagComment
InlineCommandComment
TextComment
VerbatimBlockLineComment
[in]
[out]
[in,out]
Returns 
rief
elps
aram
hrow
nion
uthor
elper
ethod
truct
rows
uthors
oclass
etails
ndcode
ngroup
anonly
arks
urns
fonly
tion
also
bpage
ypedef
ersion
arning
mlonly
bstract
lback
egory
nstant
efgroup
unction
tmlonly
ainpage
verload
erty
ocol
ecurity
emplate
erbatim
ttention
opyright
xception
erface
ariant
atexonly
amespace
wnership
aragraph
extblock
eakgroup
textblock
ddtogroup
ndency
ecated
scussion
tfonly
eaderfile
erclass
lassdesign
elperclass
ethodgroup
erformance
elate
ndlatexonly
nstancesize
unctiongroup
ubsubsection
emplatefield
abstract
addtogroup
attention
author
authors
brief
callback
category
classdesign
coclass
endcode
copyright
date
defgroup
details
discussion
enddot
functiongroup
headerfile
helper
helperclass
helps
htmlonly
endhtmlonly
ingroup
instancesize
invariant
latexonly
endlatexonly
/link
mainpage
manonly
endmanonly
methodgroup
endmsc
overload
ownership
paragraph
performance
post
related
relatedalso
relates
relatesalso
remark
remarks
result
returns
rtfonly
endrtfonly
security
seealso
since
subpage
subsection
subsubsection
templatefield
/textblock
throws
todo
tparam
verbatim
endverbatim
weakgroup
xmlonly
endxmlonly
comments::Token Kind=
quot
apos
\@&<
elta
circ
amma
rime
igma
appa
cute
rave
ilde
cedil
ambda
acute
mbda
loor
lusmn
igmaf
psilon
mall
caption
blockquote
__attribute__((deprecated))
[out,in]
colgroup
<anonymous namespace>
<anonymous 
<anonymous>
auto
extern
<<work-group-local>>
__private_extern__
register
wmain
WinMain
wWinMain
DllMain
nothrow_t
operator "" 
operator 
<using-directive>
AccessSpec
Block
Captured
ClassScopeFunctionSpecialization
Empty
FileScopeAsm
Friend
FriendTemplate
Import
LinkageSpec
Label
Namespace
NamespaceAlias
ObjCCompatibleAlias
ObjCCategory
ObjCCategoryImpl
ObjCImplementation
ObjCProtocol
ObjCMethod
ObjCProperty
ClassTemplate
FunctionTemplate
TypeAliasTemplate
VarTemplate
TemplateTemplateParm
CXXRecord
ClassTemplateSpecialization
ClassTemplatePartialSpecialization
TypeAlias
UnresolvedUsingTypename
Using
UsingDirective
UsingShadow
Field
ObjCAtDefsField
ObjCIvar
Function
CXXMethod
CXXConstructor
CXXConversion
CXXDestructor
MSProperty
NonTypeTemplateParm
ImplicitParam
ParmVar
VarTemplateSpecialization
VarTemplatePartialSpecialization
EnumConstant
IndirectField
UnresolvedUsingValue
OMPThreadPrivate
ObjCPropertyImpl
StaticAssert
TranslationUnit
*** Decl Stats:
 decls total.
 AccessSpec decls, 
 each (
 bytes)
 Block decls, 
 Captured decls, 
 ClassScopeFunctionSpecialization decls, 
 Empty decls, 
 FileScopeAsm decls, 
 Friend decls, 
 FriendTemplate decls, 
 Import decls, 
 LinkageSpec decls, 
 Label decls, 
 Namespace decls, 
 NamespaceAlias decls, 
 ObjCCompatibleAlias decls, 
 ObjCCategory decls, 
 ObjCCategoryImpl decls, 
 ObjCImplementation decls, 
 ObjCInterface decls, 
 ObjCProtocol decls, 
 ObjCMethod decls, 
 ObjCProperty decls, 
 ClassTemplate decls, 
 FunctionTemplate decls, 
 TypeAliasTemplate decls, 
 VarTemplate decls, 
 TemplateTemplateParm decls, 
 Enum decls, 
 Record decls, 
 CXXRecord decls, 
 ClassTemplateSpecialization decls, 
 ClassTemplatePartialSpecialization decls, 
 TemplateTypeParm decls, 
 TypeAlias decls, 
 Typedef decls, 
 UnresolvedUsingTypename decls, 
 Using decls, 
 UsingDirective decls, 
 UsingShadow decls, 
 Field decls, 
 ObjCAtDefsField decls, 
 ObjCIvar decls, 
 Function decls, 
 CXXMethod decls, 
 CXXConstructor decls, 
 CXXConversion decls, 
 CXXDestructor decls, 
 MSProperty decls, 
 NonTypeTemplateParm decls, 
 Var decls, 
 ImplicitParam decls, 
 ParmVar decls, 
 VarTemplateSpecialization decls, 
 VarTemplatePartialSpecialization decls, 
 EnumConstant decls, 
 IndirectField decls, 
 UnresolvedUsingValue decls, 
 OMPThreadPrivate decls, 
 ObjCPropertyImpl decls, 
 StaticAssert decls, 
 TranslationUnit decls, 
not available on 
introduced in 
obsoleted in 
first deprecated in 
OS X
__invoke
_cmd
__asm (
friend 
template <
... 
extern "
@compatibility_alias 
@interface 
@implementation 
@class 
@protocol 
@required
@optional
getter = 
setter = 
__module_private__ 
using typename 
using namespace 
mutable 
extern 
__private_extern__ 
 thread
 device
 threadgroup
 constant
 __attribute__((address_space(
 = 0
 = delete
 = default
__thread 
_Thread_local 
#pragma omp threadprivate
@synthesize 
@dynamic 
static_assert(
virtual 
static 
 const
 volatile
auto 
top level
0123456789ABCDEF
\U00
__imag
Dependent
BitCast
LValueBitCast
LValueToRValue
NoOp
BaseToDerived
DerivedToBase
UncheckedDerivedToBase
Dynamic
ToUnion
ArrayToPointerDecay
FunctionToPointerDecay
NullToMemberPointer
NullToPointer
BaseToDerivedMemberPointer
DerivedToBaseMemberPointer
ReinterpretMemberPointer
UserDefinedConversion
ConstructorConversion
IntegralToPointer
PointerToIntegral
PointerToBoolean
ToVoid
VectorSplat
IntegralCast
IntegralToBoolean
IntegralToFloating
FloatingToIntegral
FloatingCast
FloatingToBoolean
MemberPointerToBoolean
CPointerToObjCPointerCast
BlockPointerToObjCPointerCast
AnyPointerToBlockPointerCast
ObjCObjectLValueCast
FloatingRealToComplex
FloatingComplexToReal
FloatingComplexToBoolean
FloatingComplexCast
FloatingComplexToIntegralComplex
IntegralRealToComplex
IntegralComplexToReal
IntegralComplexToBoolean
IntegralComplexCast
IntegralComplexToFloatingComplex
ARCConsumeObject
ARCProduceObject
ARCReclaimReturnedObject
ARCCExtendBlockObject
AtomicToNonAtomic
NonAtomicToAtomic
CopyAndAutoreleaseBlockObject
BuiltinFnToFnPtr
ZeroToOCLEvent
AddressSpaceConversion
even
__bridge_transfer
__bridge_retained
'strlen'
00000000-0000-0000-0000-000000000000
<invalid cast>
Mangling declaration
allocator
basic_string
char_traits
basic_istream
basic_ostream
basic_iostream
CLglobal
CLlocal
CLconstant
CUdevice
CUconstant
CUshared
MTLdevice
MTLthreadgroup
MTLconstant
11objc_object
10objc_class
13objc_selector
11ocl_image1d
16ocl_image1darray
17ocl_image1dbuffer
11ocl_image2d
16ocl_image2darray
11ocl_image3d
uSampler
9ocl_event
U13block_pointer
cannot yet mangle expression type %0
?: operator with omitted middle operand cannot be mangled
cannot yet mangle vec_step expression
_SUBSTPACK_
v110_SUBSTPACK
LDnE
dtdefpT
12_GLOBAL__N_1
Poly8
Poly16
Poly64
Int8
Int16
Int32
Int64
Uint8
Uint16
Uint32
Uint64
Float16
Float32
Float64
poly8_t
poly16_t
int8_t
uint8_t
int16_t
uint16_t
int32_t
uint32_t
int64_t
uint64_t
float64_t
float32_t
float16_t
__simd64_
__simd128_
u6typeof
3eut
objcproto
U7_Atomic
_ZGR
_ZTI
_ZTS
_ZGV
__cxx_global_var_init
__dtor_
_ZTV
_ZTT
_ZTC
_ZTH
_ZTW
_block_invoke
_block_invoke_
cannot mangle this declaration yet
<unnamed-type-
<unnamed-tag>
cannot mangle this literal operator yet
$0A@
cannot mangle this variable-length array yet
cannot mangle this dependent-length array yet
PEAXI@Z
PAXI@Z
PAUobjc_object@@
PAUobjc_class@@
PAUobjc_selector@@
PAUocl_image1d@@
PAUocl_image1darray@@
PAUocl_image1dbuffer@@
PAUocl_image2d@@
PAUocl_image2darray@@
PAUocl_image3d@@
PAUocl_sampler@@
PAUocl_event@@
cannot mangle this built-in %0 type yet
cannot mangle this complex number type yet
cannot mangle this dependent-sized extended vector type yet
T__m64
T__m
U__m
T__clang_vec
cannot mangle this extended vector type yet
$$A6
cannot mangle this unresolved dependent type yet
cannot mangle this typeof(expression) yet
cannot mangle this typeof(type) yet
cannot mangle this decltype() yet
cannot mangle this unary transform type yet
cannot mangle this template type parameter type yet
cannot mangle this substituted parameter pack yet
cannot mangle this template specialization type yet
cannot mangle this 'auto' type yet
cannot mangle this dependent name type yet
cannot mangle this dependent template specialization type yet
cannot mangle this pack expansion yet
cannot mangle this C11 atomic type yet
_GUID_
@@3U__s_GUID@@B
cannot mangle this conditional operator yet
cannot mangle a local inside this block yet
__block_invoke
??_E
cannot mangle this reference temporary yet
cannot mangle RTTI descriptors for type %0 yet
cannot mangle the name of type %0 into RTTI descriptors yet
??_B
?$S1@
@4IA
??__
YAXXZ
??_7
??_8
??_9
template 
NSDictionary
NSMutableDictionary
NSNumber
stringWithString
stringWithUTF8String
stringWithCString
initWithString
arrayWithArray
arrayWithObject
arrayWithObjects
count
initWithArray
initWithObjects
objectAtIndex
replaceObjectAtIndex
dictionaryWithDictionary
dictionaryWithObject
forKey
dictionaryWithObjects
forKeys
dictionaryWithObjectsAndKeys
initWithDictionary
initWithObjectsAndKeys
objectForKey
setObject
numberWithChar
numberWithUnsignedChar
numberWithShort
numberWithUnsignedShort
numberWithInt
numberWithUnsignedInt
numberWithLong
numberWithUnsignedLong
numberWithLongLong
numberWithUnsignedLongLong
numberWithFloat
numberWithDouble
numberWithBool
numberWithInteger
numberWithUnsignedInteger
initWithChar
initWithUnsignedChar
initWithShort
initWithUnsignedShort
initWithInt
initWithUnsignedInt
initWithLong
initWithUnsignedLong
initWithLongLong
initWithUnsignedLongLong
initWithFloat
initWithDouble
initWithBool
initWithInteger
initWithUnsignedInteger
NSInteger
*** Dumping AST Record Layout
Record: 
Layout: 
<ASTRecordLayout
  Size:
  DataSize:
  Alignment:
  FieldOffsets: [
 (empty)
 vtable pointer)
 vftable pointer)
(primary base)
(base)
 vbtable pointer)
(vtordisp for vbase 
(primary virtual base)
(virtual base)
[sizeof=
, dsize=
 nvsize=
, nvalign=
%4lld | 
     | 
*** Stmt/Expr Stats:
 stmts/exprs total.
${:uid}
GCCAsmStmt
MSAsmStmt
AttributedStmt
BreakStmt
CXXCatchStmt
CXXForRangeStmt
CXXTryStmt
CapturedStmt
CompoundStmt
ContinueStmt
DeclStmt
DoStmt
BinaryConditionalOperator
ConditionalOperator
AddrLabelExpr
ArraySubscriptExpr
ArrayTypeTraitExpr
AsTypeExpr
AtomicExpr
BinaryOperator
CompoundAssignOperator
BlockExpr
CXXBindTemporaryExpr
CXXBoolLiteralExpr
CXXConstructExpr
CXXTemporaryObjectExpr
CXXDefaultArgExpr
CXXDefaultInitExpr
CXXDeleteExpr
CXXDependentScopeMemberExpr
CXXNewExpr
CXXNoexceptExpr
CXXNullPtrLiteralExpr
CXXPseudoDestructorExpr
CXXScalarValueInitExpr
CXXStdInitializerListExpr
CXXThisExpr
CXXThrowExpr
CXXTypeidExpr
CXXUnresolvedConstructExpr
CXXUuidofExpr
CallExpr
CUDAKernelCallExpr
CXXMemberCallExpr
CXXOperatorCallExpr
UserDefinedLiteral
CStyleCastExpr
CXXFunctionalCastExpr
CXXConstCastExpr
CXXDynamicCastExpr
CXXReinterpretCastExpr
CXXStaticCastExpr
MetalAsTypeCastExpr
ObjCBridgedCastExpr
ImplicitCastExpr
CharacterLiteral
ChooseExpr
CompoundLiteralExpr
ConvertExpr
ConvertVectorExpr
DeclRefExpr
DependentScopeDeclRefExpr
DesignatedInitExpr
ExprWithCleanups
ExpressionTraitExpr
ExtVectorElementExpr
FloatingLiteral
FunctionParmPackExpr
GNUNullExpr
GenericSelectionExpr
ImaginaryLiteral
ImplicitValueInitExpr
InitListExpr
IntegerLiteral
LambdaExpr
MSPropertyRefExpr
MaterializeTemporaryExpr
MemberExpr
ObjCArrayLiteral
ObjCBoolLiteralExpr
ObjCBoxedExpr
ObjCDictionaryLiteral
ObjCEncodeExpr
ObjCIndirectCopyRestoreExpr
ObjCIsaExpr
ObjCIvarRefExpr
ObjCMessageExpr
ObjCPropertyRefExpr
ObjCProtocolExpr
ObjCSelectorExpr
ObjCStringLiteral
ObjCSubscriptRefExpr
OffsetOfExpr
OpaqueValueExpr
UnresolvedLookupExpr
UnresolvedMemberExpr
PackExpansionExpr
ParenExpr
ParenListExpr
PredefinedExpr
PseudoObjectExpr
ShuffleVectorExpr
SizeOfPackExpr
StmtExpr
StringLiteral
SubstNonTypeTemplateParmExpr
SubstNonTypeTemplateParmPackExpr
TypeTraitExpr
UnaryExprOrTypeTraitExpr
UnaryOperator
VAArgExpr
ForStmt
GotoStmt
IfStmt
IndirectGotoStmt
LabelStmt
MSDependentExistsStmt
NullStmt
OMPParallelDirective
ObjCAtCatchStmt
ObjCAtFinallyStmt
ObjCAtSynchronizedStmt
ObjCAtThrowStmt
ObjCAtTryStmt
ObjCAutoreleasePoolStmt
ObjCForCollectionStmt
ReturnStmt
SEHExceptStmt
SEHFinallyStmt
SEHTryStmt
CaseStmt
DefaultStmt
SwitchStmt
WhileStmt
<NULL>
volatile 
__asm 
<<<NULL STATEMENT>>>
break;
<null expr>
try 
continue;
while (
 ?: 
__builtin_astype(
__c11_atomic_init(
__c11_atomic_load(
__c11_atomic_store(
__c11_atomic_exchange(
__c11_atomic_compare_exchange_strong(
__c11_atomic_compare_exchange_weak(
__c11_atomic_fetch_add(
__c11_atomic_fetch_sub(
__c11_atomic_fetch_and(
__c11_atomic_fetch_or(
__c11_atomic_fetch_xor(
__atomic_load(
__atomic_load_n(
__atomic_store(
__atomic_store_n(
__atomic_exchange(
__atomic_exchange_n(
__atomic_compare_exchange(
__atomic_compare_exchange_n(
__atomic_fetch_add(
__atomic_fetch_sub(
__atomic_fetch_and(
__atomic_fetch_or(
__atomic_fetch_xor(
__atomic_fetch_nand(
__atomic_add_fetch(
__atomic_sub_fetch(
__atomic_and_fetch(
__atomic_or_fetch(
__atomic_xor_fetch(
__atomic_nand_fetch(
delete 
new 
throw 
typeid(
__uuidof(
>>>(
-0123456789
'\\'
'\''
'\a'
'\b'
'\f'
'\n'
'\r'
'\t'
'\v'
%02x
%04x
%08x
__builtin_choose_expr(
__builtin_convert(
__builtin_convertvector(
_Generic(
/*implicit*/
/*implicit*/(
Ui128
@encode(
->isa
.isa
Super
super.
@protocol(
@selector(
__builtin_offsetof(
__builtin_shufflevector(
sizeof...(
__builtin_va_arg(
goto 
if (
__if_exists (
__if_not_exists (
#pragma omp parallel 
default(
@catch (...) { /* todo */ } 
@synchronized (
@catch(
@autoreleasepool
__except (
<<unknown expr type>>
__finally 
__try 
default:
switch (
Stmt::viewAST is only available in debug builds on 
<no value>
(null template argument)
image1d_t
image2d_t
image3d_t
image1d_array_t
image2d_array_t
image1d_buffer_t
image2d_depth_t
image2d_array_depth_t
image2d_msaa_t
image2d_array_msaa_t
image2d_msaa_depth_t
image2d_array_msaa_depth_t
enum metal::coord
enum metal::filter
enum metal::s_address
enum metal::t_address
enum metal::r_address
enum metal::address
enum metal::mip_filter
enum metal::compare_func
enum metal::mag_filter
enum metal::min_filter
enum metal::border_color
class metal::matrix
struct metal::packed_vec
struct metal::atomic_
texture1d
texture1d_array
texture2d
texture2d_array
texture3d
texturecube
texturecube_array
texture2d_ms
depth2d
depth2d_array
depthcube
depthcube_array
depth2d_ms
control_point_function
patch_control_point
long long
unsigned long
unsigned long long
unsigned __int128
long double
nullptr_t
<overloaded function type>
<bound member function type>
<pseudo-object type>
<dependent type>
<unknown type>
<ARC unbridged cast type>
<builtin fn type>
event_t
metal_shader_cc
 throw(
 noexcept
__attribute__((address_space(
NULL TYPE
_Complex 
__vector __pixel 
__vector __bool 
__vector 
__attribute__((neon_vector_type(
))) 
__attribute__((neon_polyvector_type(
__attribute__((__vector_size__(
 * sizeof(
)))) 
typeof 
typeof(
decltype(
__underlying_type(
<lambda
<anonymous
<anonymous>::
 __ptr32
 __ptr64
 __sptr
 __uptr
type-parameter-
decltype(auto)
_Atomic(
 __attribute__((ext_vector_type(
 __attribute__((stdcall))
 __attribute__((fastcall))
 __attribute__((thiscall))
 __attribute__((pascal))
 __attribute__((pcs("aapcs")))
 __attribute__((pcs("aapcs-vfp")))
 __attribute__((pnaclcall))
 __attribute__((intel_ocl_bicc))
 __attribute__((ms_abi))
 __attribute__((sysv_abi))
 __attribute__((noreturn))
 __attribute__((regparm (
 __attribute__((
address_space(
__vector_size__(
neon_vector_type(
neon_polyvector_type(
regparm(
objc_gc(
objc_ownership(
autoreleasing
pcs(
"aapcs"
"aapcs-vfp"
inteloclbicc
metal_fragment
metal_vertex
metalcl_kernel
 [scalar deleting]
VFTable indices for 
 entries).
 -- accessible via 
vbtable index 
vfptr at offset 
%4llu | 
Construction vtable for ('
) in '
Vtable for '
%4d | 
vcall_offset (
vbase_offset (
offset_to_top (
 RTTI
 [pure]
 [deleted]
       [return adjustment: 
 non-virtual
 vbase offset offset
       [this adjustment: 
 vcall offset offset
() [complete]
() [deleting]
[unused] 
       -- (
) vtable address --
Virtual base offset offsets for '
 entry
 entries
Thunks for '
return adjustment: 
       
this adjustment: 
 [complete]
 [deleting]
VTable indices for '
VFTable for 
deleted methods
() [scalar deleting]
Unexpected vftable component type %0 for component number %1
' in 
v-table layout for %0 is not supported yet
        
[return adjustment: 
vbptr at offset 
vbase #
 non-virtual]
[this adjustment: 
vtordisp at 
vbptr at 
 to the left, 
 vboffset at 
 in the vbtable, 
math.h
not a builtin function
__builtin_atan2
__builtin_atan2f
__builtin_atan2l
LdLdLd
__builtin_abs
__builtin_copysign
__builtin_copysignf
__builtin_copysignl
__builtin_fabs
__builtin_fabsf
__builtin_fabsl
LdLd
__builtin_fmod
__builtin_fmodf
__builtin_fmodl
__builtin_frexp
ddi*
__builtin_frexpf
ffi*
__builtin_frexpl
LdLdi*
__builtin_huge_val
__builtin_huge_valf
__builtin_huge_vall
__builtin_inf
__builtin_inff
__builtin_infl
__builtin_labs
LiLi
__builtin_llabs
__builtin_ldexp
__builtin_ldexpf
__builtin_ldexpl
LdLdi
__builtin_modf
ddd*
__builtin_modff
fff*
__builtin_modfl
LdLdLd*
__builtin_nan
dcC*
__builtin_nanf
fcC*
__builtin_nanl
LdcC*
__builtin_nans
__builtin_nansf
__builtin_nansl
__builtin_powi
__builtin_powif
__builtin_powil
__builtin_pow
__builtin_powf
__builtin_powl
__builtin_acos
__builtin_acosf
__builtin_acosl
__builtin_acosh
__builtin_acoshf
__builtin_acoshl
__builtin_asin
__builtin_asinf
__builtin_asinl
__builtin_asinh
__builtin_asinhf
__builtin_asinhl
__builtin_atan
__builtin_atanf
__builtin_atanl
__builtin_atanh
__builtin_atanhf
__builtin_atanhl
__builtin_cbrt
__builtin_cbrtf
__builtin_cbrtl
__builtin_ceil
__builtin_ceilf
__builtin_ceill
__builtin_cos
__builtin_cosf
__builtin_cosh
__builtin_coshf
__builtin_coshl
__builtin_cosl
__builtin_erf
__builtin_erff
__builtin_erfl
__builtin_erfc
__builtin_erfcf
__builtin_erfcl
__builtin_exp
__builtin_expf
__builtin_expl
__builtin_exp2
__builtin_exp2f
__builtin_exp2l
__builtin_expm1
__builtin_expm1f
__builtin_expm1l
__builtin_fdim
__builtin_fdimf
__builtin_fdiml
__builtin_floor
__builtin_floorf
__builtin_floorl
__builtin_fma
__builtin_fmaf
__builtin_fmal
LdLdLdLd
__builtin_fmax
__builtin_fmaxf
__builtin_fmaxl
__builtin_fmin
__builtin_fminf
__builtin_fminl
__builtin_hypot
__builtin_hypotf
__builtin_hypotl
__builtin_ilogb
__builtin_ilogbf
__builtin_ilogbl
__builtin_lgamma
__builtin_lgammaf
__builtin_lgammal
__builtin_llrint
__builtin_llrintf
__builtin_llrintl
LLiLd
__builtin_llround
__builtin_llroundf
__builtin_llroundl
__builtin_log
__builtin_log10
__builtin_log10f
__builtin_log10l
__builtin_log1p
__builtin_log1pf
__builtin_log1pl
__builtin_log2
__builtin_log2f
__builtin_log2l
__builtin_logb
__builtin_logbf
__builtin_logbl
__builtin_logf
__builtin_logl
__builtin_lrint
__builtin_lrintf
__builtin_lrintl
LiLd
__builtin_lround
__builtin_lroundf
__builtin_lroundl
__builtin_nearbyint
__builtin_nearbyintf
__builtin_nearbyintl
__builtin_nextafter
__builtin_nextafterf
__builtin_nextafterl
__builtin_nexttoward
ddLd
__builtin_nexttowardf
ffLd
__builtin_nexttowardl
__builtin_remainder
__builtin_remainderf
__builtin_remainderl
__builtin_remquo
dddi*
__builtin_remquof
fffi*
__builtin_remquol
LdLdLdi*
__builtin_rint
__builtin_rintf
__builtin_rintl
__builtin_round
__builtin_roundf
__builtin_roundl
__builtin_scalbln
ddLi
__builtin_scalblnf
ffLi
__builtin_scalblnl
LdLdLi
__builtin_scalbn
__builtin_scalbnf
__builtin_scalbnl
__builtin_sin
__builtin_sinf
__builtin_sinh
__builtin_sinhf
__builtin_sinhl
__builtin_sinl
__builtin_sqrt
__builtin_sqrtf
__builtin_sqrtl
__builtin_tan
__builtin_tanf
__builtin_tanh
__builtin_tanhf
__builtin_tanhl
__builtin_tanl
__builtin_tgamma
__builtin_tgammaf
__builtin_tgammal
__builtin_trunc
__builtin_truncf
__builtin_truncl
__builtin_cabs
__builtin_cabsf
__builtin_cabsl
LdXLd
__builtin_cacos
XdXd
__builtin_cacosf
XfXf
__builtin_cacosh
__builtin_cacoshf
__builtin_cacoshl
XLdXLd
__builtin_cacosl
__builtin_carg
__builtin_cargf
__builtin_cargl
__builtin_casin
__builtin_casinf
__builtin_casinh
__builtin_casinhf
__builtin_casinhl
__builtin_casinl
__builtin_catan
__builtin_catanf
__builtin_catanh
__builtin_catanhf
__builtin_catanhl
__builtin_catanl
__builtin_ccos
__builtin_ccosf
__builtin_ccosl
__builtin_ccosh
__builtin_ccoshf
__builtin_ccoshl
__builtin_cexp
__builtin_cexpf
__builtin_cexpl
__builtin_cimag
__builtin_cimagf
__builtin_cimagl
__builtin_conj
__builtin_conjf
__builtin_conjl
__builtin_clog
__builtin_clogf
__builtin_clogl
__builtin_cproj
__builtin_cprojf
__builtin_cprojl
__builtin_cpow
XdXdXd
__builtin_cpowf
XfXfXf
__builtin_cpowl
XLdXLdXLd
__builtin_creal
__builtin_crealf
__builtin_creall
__builtin_csin
__builtin_csinf
__builtin_csinl
__builtin_csinh
__builtin_csinhf
__builtin_csinhl
__builtin_csqrt
__builtin_csqrtf
__builtin_csqrtl
__builtin_ctan
__builtin_ctanf
__builtin_ctanl
__builtin_ctanh
__builtin_ctanhf
__builtin_ctanhl
__builtin_isgreater
__builtin_isgreaterequal
__builtin_isless
__builtin_islessequal
__builtin_islessgreater
__builtin_isunordered
__builtin_fpclassify
iiiii.
__builtin_isfinite
__builtin_isinf
__builtin_isinf_sign
__builtin_isnan
__builtin_isnormal
__builtin_signbit
__builtin_signbitf
__builtin_signbitl
__builtin_clzs
__builtin_clz
__builtin_clzl
iULi
__builtin_clzll
iULLi
__builtin_ctzs
__builtin_ctz
__builtin_ctzl
__builtin_ctzll
__builtin_ffs
__builtin_ffsl
__builtin_ffsll
__builtin_parity
__builtin_parityl
__builtin_parityll
__builtin_popcount
__builtin_popcountl
__builtin_popcountll
__builtin_bswap16
__builtin_bswap32
__builtin_bswap64
__builtin_constant_p
nctu
__builtin_classify_type
__builtin___CFStringMakeConstantString
FC*cC*
__builtin___NSStringMakeConstantString
__builtin_va_start
__builtin_va_end
__builtin_va_copy
__builtin_stdarg_start
__builtin_bcmp
iv*v*z
__builtin_bcopy
vv*v*z
__builtin_bzero
vv*z
__builtin_fprintf
iP*cC*.
Fp:1:
__builtin_memchr
v*vC*iz
__builtin_memcmp
ivC*vC*z
v*v*vC*z
__builtin_memmove
__builtin_mempcpy
__builtin_memset
v*v*iz
__builtin_printf
icC*.
Fp:0:
__builtin_stpcpy
c*c*cC*
__builtin_stpncpy
c*c*cC*z
__builtin_strcasecmp
icC*cC*
__builtin_strcat
__builtin_strchr
c*cC*i
__builtin_strcmp
__builtin_strcpy
__builtin_strcspn
zcC*cC*
__builtin_strdup
c*cC*
__builtin_strlen
zcC*
__builtin_strncasecmp
icC*cC*z
__builtin_strncat
__builtin_strncmp
__builtin_strncpy
__builtin_strndup
c*cC*z
__builtin_strpbrk
c*cC*cC*
__builtin_strrchr
__builtin_strspn
__builtin_strstr
__builtin_return_address
v*IUi
__builtin_extract_return_addr
v*v*
__builtin_frame_address
__builtin_flt_rounds
__builtin_setjmp
iv**
__builtin_longjmp
vv**i
__builtin_unwind_init
__builtin_eh_return_data_regno
__builtin_snprintf
ic*zcC*.
nFp:2:
__builtin_vsprintf
ic*cC*a
nFP:1:
__builtin_vsnprintf
ic*zcC*a
nFP:2:
__builtin_eh_return
vzv*
__builtin_frob_return_addr
__builtin_dwarf_cfa
__builtin_init_dwarf_reg_size_table
__builtin_dwarf_sp_column
__builtin_extend_pointer
ULLiv*
__builtin_object_size
zvC*i
__builtin___memcpy_chk
v*v*vC*zz
__builtin___memccpy_chk
v*v*vC*izz
__builtin___memmove_chk
__builtin___mempcpy_chk
__builtin___memset_chk
v*v*izz
__builtin___stpcpy_chk
__builtin___strcat_chk
__builtin___strcpy_chk
__builtin___strlcat_chk
zc*cC*zz
__builtin___strlcpy_chk
__builtin___strncat_chk
c*c*cC*zz
__builtin___strncpy_chk
__builtin___stpncpy_chk
__builtin___snprintf_chk
ic*zizcC*.
Fp:4:
__builtin___sprintf_chk
ic*izcC*.
Fp:3:
__builtin___vsnprintf_chk
ic*zizcC*a
FP:4:
__builtin___vsprintf_chk
ic*izcC*a
FP:3:
__builtin___fprintf_chk
iP*icC*.
Fp:2:
__builtin___printf_chk
iicC*.
__builtin___vfprintf_chk
iP*icC*a
FP:2:
__builtin___vprintf_chk
iicC*a
FP:1:
__builtin_expect
__builtin_prefetch
vvC*.
__builtin_readcyclecounter
ULLi
__builtin_debugtrap
__builtin_unreachable
__builtin_alloca
__sync_fetch_and_add
ccD*c.
ssD*s.
iiD*i.
LLiLLiD*LLi.
LLLiLLLiD*LLLi.
__sync_fetch_and_sub
__sync_fetch_and_or
__sync_fetch_and_and
__sync_fetch_and_xor
__sync_add_and_fetch
__sync_add_and_fetch_1
__sync_add_and_fetch_2
__sync_add_and_fetch_4
__sync_add_and_fetch_8
__sync_add_and_fetch_16
__sync_sub_and_fetch
__sync_sub_and_fetch_1
__sync_sub_and_fetch_2
__sync_sub_and_fetch_4
__sync_sub_and_fetch_8
__sync_sub_and_fetch_16
__sync_or_and_fetch
__sync_or_and_fetch_1
__sync_or_and_fetch_2
__sync_or_and_fetch_4
__sync_or_and_fetch_8
__sync_or_and_fetch_16
__sync_and_and_fetch
__sync_and_and_fetch_1
__sync_and_and_fetch_2
__sync_and_and_fetch_4
__sync_and_and_fetch_8
__sync_and_and_fetch_16
__sync_xor_and_fetch
__sync_xor_and_fetch_1
__sync_xor_and_fetch_2
__sync_xor_and_fetch_4
__sync_xor_and_fetch_8
__sync_xor_and_fetch_16
__sync_bool_compare_and_swap
__sync_bool_compare_and_swap_1
bcD*cc.
__sync_bool_compare_and_swap_2
bsD*ss.
__sync_bool_compare_and_swap_4
biD*ii.
__sync_bool_compare_and_swap_8
bLLiD*LLiLLi.
__sync_bool_compare_and_swap_16
bLLLiD*LLLiLLLi.
__sync_val_compare_and_swap
ccD*cc.
ssD*ss.
iiD*ii.
LLiLLiD*LLiLLi.
LLLiLLLiD*LLLiLLLi.
__sync_lock_test_and_set
__sync_lock_release
__sync_lock_release_1
vcD*.
__sync_lock_release_2
vsD*.
__sync_lock_release_4
viD*.
__sync_lock_release_8
vLLiD*.
__sync_lock_release_16
vLLLiD*.
__sync_swap
__sync_swap_1
__sync_swap_2
__sync_swap_4
__sync_swap_8
__sync_swap_16
__c11_atomic_init
__c11_atomic_load
__c11_atomic_store
__c11_atomic_exchange
__c11_atomic_compare_exchange_strong
__c11_atomic_compare_exchange_weak
__c11_atomic_fetch_add
__c11_atomic_fetch_sub
__c11_atomic_fetch_and
__c11_atomic_fetch_or
__c11_atomic_fetch_xor
__c11_atomic_thread_fence
__c11_atomic_signal_fence
__c11_atomic_is_lock_free
__atomic_load
__atomic_load_n
__atomic_store
__atomic_store_n
__atomic_exchange
__atomic_exchange_n
__atomic_compare_exchange
__atomic_compare_exchange_n
__atomic_fetch_add
__atomic_fetch_sub
__atomic_fetch_and
__atomic_fetch_or
__atomic_fetch_xor
__atomic_fetch_nand
__atomic_add_fetch
__atomic_sub_fetch
__atomic_and_fetch
__atomic_or_fetch
__atomic_xor_fetch
__atomic_nand_fetch
__atomic_test_and_set
bvD*i
__atomic_clear
vvD*i
__atomic_thread_fence
__atomic_signal_fence
__atomic_always_lock_free
izvCD*
__atomic_is_lock_free
__sync_synchronize
__sync_fetch_and_min
__sync_fetch_and_max
__sync_fetch_and_umin
__sync_fetch_and_umax
__builtin_abort
__builtin_index
__builtin_rindex
__assume
__noop
__debugbreak
stdlib.h
v*zz
_Exit
v*v*z
string.h
zc*cC*z
strerror
fp:0:
stdio.h
fp:1:
fp:2:
ic*cC*.
icC*a
fP:0:
fP:1:
fP:2:
icC*R.
fs:0:
iP*RcC*R.
fs:1:
icC*RcC*R.
icC*Ra
fS:0:
iP*RcC*Ra
fS:1:
icC*RcC*Ra
setjmp.h
strings.h
rindex
_exit
unistd.h
vfork
_setjmp
__sigsetjmp
iSJi
sigsetjmp
setjmp_syscall
savectx
qsetjmp
getcontext
_longjmp
siglongjmp
vSJi
strlcpy
strlcat
objc_msgSend
GGH.
objc/message.h
objc_msgSend_fpret
LdGH.
objc_msgSend_fp2ret
XLdGH.
objc_msgSend_stret
vGH.
GM*H.
objc_msgSendSuper_stret
vM*H.
objc_getClass
GcC*
objc/runtime.h
objc_getMetaClass
objc_enumerationMutation
objc_read_weak
objc/objc-auto.h
objc_assign_weak
GGG*
objc_assign_ivar
GGGY
objc_assign_global
objc_assign_strongCast
objc_exception_extract
objc/objc-exception.h
objc_exception_try_enter
objc_exception_try_exit
objc_exception_match
objc_exception_throw
objc/objc-sync.h
NSLog
Foundation/NSObjCRuntime.h
NSLogv
nanf
nanl
erff
erfl
erfc
erfcf
erfcl
fdim
fdimf
fdiml
hypot
hypotf
hypotl
ilogb
ilogbf
ilogbl
lgamma
lgammaf
lgammal
llrint
llrintf
llrintl
llround
llroundf
llroundl
lrint
lrintf
lrintl
lround
lroundf
lroundl
nextafter
nextafterf
nextafterl
nexttoward
nexttowardf
nexttowardl
remainder
remainderf
remainderl
scalbln
scalblnf
scalblnl
scalbn
scalbnf
scalbnl
tgamma
tgammaf
tgammal
cabs
complex.h
cabsf
cabsl
cacos
cacosf
cacosl
cacosh
cacoshf
cacoshl
carg
cargf
cargl
casin
casinf
casinl
casinh
casinhf
casinhl
catan
catanf
catanl
catanh
catanhf
catanhl
ccos
ccosf
ccosl
ccosh
ccoshf
ccoshl
cexp
cexpf
cexpl
cimag
cimagf
cimagl
conj
conjf
conjl
clog
clogf
clogl
cproj
cprojf
cprojl
cpow
cpowf
cpowl
creal
crealf
creall
csin
csinf
csinl
csinh
csinhf
csinhl
csqrt
csqrtf
csqrtl
ctan
ctanf
ctanl
ctanh
ctanhf
ctanhl
__tanpi
__tanpif
_Block_object_assign
vv*vC*iC
Blocks.h
_Block_object_dispose
vvC*iC
__builtin_address_space_cast_private
__builtin_address_space_cast_global
__builtin_address_space_cast_local
__builtin_address_space_cast_constant
cc*c.
ss*s.
ii*i.
LLiLLi*LLi.
LLLiLLLi*LLLi.
UcUc*Uc.
UsUs*Us.
UiUi*Ui.
ULLiULLi*ULLi.
ULLLiULLLi*ULLLi.
__ci_gamma_scalar_SPI
E3fE3ff
__vertical_cross3f2
vE2fE2fE2fE2fE2fE2fE2f*E2f*E2f*
__vertical_cross3f4
vE4fE4fE4fE4fE4fE4fE4f*E4f*E4f*
__vertical_cross3f8
vE8fE8fE8fE8fE8fE8fE8f*E8f*E8f*
__vertical_cross3f16
vE16fE16fE16fE16fE16fE16fE16f*E16f*E16f*
__vertical_cross4f2
vE2fE2fE2fE2fE2fE2fE2fE2fE2f*E2f*E2f*E2f*
__vertical_cross4f4
vE4fE4fE4fE4fE4fE4fE4fE4fE4f*E4f*E4f*E4f*
__vertical_cross4f8
vE8fE8fE8fE8fE8fE8fE8fE8fE8f*E8f*E8f*E8f*
__vertical_cross4f16
vE16fE16fE16fE16fE16fE16fE16fE16fE16f*E16f*E16f*E16f*
__vertical_distance1f2
E2fE2fE2f
__vertical_distance1f4
E4fE4fE4f
__vertical_distance1f8
E8fE8fE8f
__vertical_distance1f16
E16fE16fE16f
__vertical_distance2f2
E2fE2fE2fE2fE2f
__vertical_distance2f4
E4fE4fE4fE4fE4f
__vertical_distance2f8
E8fE8fE8fE8fE8f
__vertical_distance2f16
E16fE16fE16fE16fE16f
__vertical_distance3f2
E2fE2fE2fE2fE2fE2fE2f
__vertical_distance3f4
E4fE4fE4fE4fE4fE4fE4f
__vertical_distance3f8
E8fE8fE8fE8fE8fE8fE8f
__vertical_distance3f16
E16fE16fE16fE16fE16fE16fE16f
__vertical_distance4f2
E2fE2fE2fE2fE2fE2fE2fE2fE2f
__vertical_distance4f4
E4fE4fE4fE4fE4fE4fE4fE4fE4f
__vertical_distance4f8
E8fE8fE8fE8fE8fE8fE8fE8fE8f
__vertical_distance4f16
E16fE16fE16fE16fE16fE16fE16fE16fE16f
__vertical_dot1f2
__vertical_dot1f4
__vertical_dot1f8
__vertical_dot1f16
__vertical_dot2f2
__vertical_dot2f4
__vertical_dot2f8
__vertical_dot2f16
__vertical_dot3f2
__vertical_dot3f4
__vertical_dot3f8
__vertical_dot3f16
__vertical_dot4f2
__vertical_dot4f4
__vertical_dot4f8
__vertical_dot4f16
__vertical_fast_distance1f2
__vertical_fast_distance1f4
__vertical_fast_distance1f8
__vertical_fast_distance1f16
__vertical_fast_distance2f2
__vertical_fast_distance2f4
__vertical_fast_distance2f8
__vertical_fast_distance2f16
__vertical_fast_distance3f2
__vertical_fast_distance3f4
__vertical_fast_distance3f8
__vertical_fast_distance3f16
__vertical_fast_distance4f2
__vertical_fast_distance4f4
__vertical_fast_distance4f8
__vertical_fast_distance4f16
__vertical_fast_length1f2
E2fE2f
__vertical_fast_length1f4
E4fE4f
__vertical_fast_length1f8
E8fE8f
__vertical_fast_length1f16
E16fE16f
__vertical_fast_length2f2
__vertical_fast_length2f4
__vertical_fast_length2f8
__vertical_fast_length2f16
__vertical_fast_length3f2
E2fE2fE2fE2f
__vertical_fast_length3f4
E4fE4fE4fE4f
__vertical_fast_length3f8
E8fE8fE8fE8f
__vertical_fast_length3f16
E16fE16fE16fE16f
__vertical_fast_length4f2
__vertical_fast_length4f4
__vertical_fast_length4f8
__vertical_fast_length4f16
__vertical_length1f2
__vertical_length1f4
__vertical_length1f8
__vertical_length1f16
__vertical_length2f2
__vertical_length2f4
__vertical_length2f8
__vertical_length2f16
__vertical_length3f2
__vertical_length3f4
__vertical_length3f8
__vertical_length3f16
__vertical_length4f2
__vertical_length4f4
__vertical_length4f8
__vertical_length4f16
__vertical_normalize1f2
vE2fE2f*
__vertical_normalize1f4
vE4fE4f*
__vertical_normalize1f8
vE8fE8f*
__vertical_normalize1f16
vE16fE16f*
__vertical_normalize2f2
vE2fE2fE2f*E2f*
__vertical_normalize2f4
vE4fE4fE4f*E4f*
__vertical_normalize2f8
vE8fE8fE8f*E8f*
__vertical_normalize2f16
vE16fE16fE16f*E16f*
__vertical_normalize3f2
vE2fE2fE2fE2f*E2f*E2f*
__vertical_normalize3f4
vE4fE4fE4fE4f*E4f*E4f*
__vertical_normalize3f8
vE8fE8fE8fE8f*E8f*E8f*
__vertical_normalize3f16
vE16fE16fE16fE16f*E16f*E16f*
__vertical_normalize4f2
vE2fE2fE2fE2fE2f*E2f*E2f*E2f*
__vertical_normalize4f4
vE4fE4fE4fE4fE4f*E4f*E4f*E4f*
__vertical_normalize4f8
vE8fE8fE8fE8fE8f*E8f*E8f*E8f*
__vertical_normalize4f16
vE16fE16fE16fE16fE16f*E16f*E16f*E16f*
__vertical_fast_normalize1f2
__vertical_fast_normalize1f4
__vertical_fast_normalize1f8
__vertical_fast_normalize1f16
__vertical_fast_normalize2f2
__vertical_fast_normalize2f4
__vertical_fast_normalize2f8
__vertical_fast_normalize2f16
__vertical_fast_normalize3f2
__vertical_fast_normalize3f4
__vertical_fast_normalize3f8
__vertical_fast_normalize3f16
__vertical_fast_normalize4f2
__vertical_fast_normalize4f4
__vertical_fast_normalize4f8
__vertical_fast_normalize4f16
__builtin_annotation
__builtin_addcb
UcUcCUcCUcCUc*
__builtin_addcs
UsUsCUsCUsCUs*
__builtin_addc
UiUiCUiCUiCUi*
__builtin_addcl
ULiULiCULiCULiCULi*
__builtin_addcll
ULLiULLiCULLiCULLiCULLi*
__builtin_subcb
__builtin_subcs
__builtin_subc
__builtin_subcl
__builtin_subcll
__builtin_uadd_overflow
bUiCUiCUi*
__builtin_uaddl_overflow
bULiCULiCULi*
__builtin_uaddll_overflow
bULLiCULLiCULLi*
__builtin_usub_overflow
__builtin_usubl_overflow
__builtin_usubll_overflow
__builtin_umul_overflow
__builtin_umull_overflow
__builtin_umulll_overflow
__builtin_sadd_overflow
bSiCSiCSi*
__builtin_saddl_overflow
bSLiCSLiCSLi*
__builtin_saddll_overflow
bSLLiCSLLiCSLLi*
__builtin_ssub_overflow
__builtin_ssubl_overflow
__builtin_ssubll_overflow
__builtin_smul_overflow
__builtin_smull_overflow
__builtin_smulll_overflow
__builtin_addressof
v*v&
__metal_sampler_t_decode
zQ*16776968
__metal_sampler_t_encode
Q*16776968z
diff
(null)
select
plural
ordinal
<can't format argument>
identifier
ARC 
%0 attribute cannot be applied to types
cannot open file '%0': %1
only special member functions may be defaulted
only functions can have deleted definitions
enumeration cannot be a template
expected %0
expected %1 after %0
method name referenced in property setter attribute must end with ':'
expected %0 or %1
expected namespace name
expected string literal %select{in %1|for diagnostic message in static_assert|for optional message in 'availability' attribute}0
file '%0' modified since it was first processed
integer constant is larger than the largest unsigned integer type
character literal with user-defined suffix cannot be used here
numeric literal with user-defined suffix cannot be used here
invalid storage class specifier in function declarator
string literal with user-defined suffix cannot be used here
cyclic dependency in module '%0': %1
module '%0' found in both '%1' and '%2'
could not build module '%0'
module '%0' not found
redefinition of parameter %0
target does not support depth and MSAA textures '%0'
unknown target ABI '%0'
unknown target CPU '%0'
unknown FP unit '%0'
unknown target triple '%0', please use -triple or -arch
the '%0' unit is not supported with this instruction set
unable to make temporary file: %0
unable to rename temporary '%0' to output file '%1': '%2'
%0 byte order mark detected in '%1', but encoding is not supported
'long long' is an extension when C99 mode is not enabled
'long long' is a C++11 extension
variadic templates are a C++11 extension
too many errors emitted, stopping now
also found
%1 %0 is hidden by a non-type declaration of %0 here
declared here
previous case defined here
forward declaration of %0
subexpression not valid in a constant expression
to match this %0
one possibility
#pragma entered here
previous declaration is here
previous definition is here
previous implicit declaration is here
previous use is here
definition of %0 is not complete until the closing '}'
using
'long long' is incompatible with C++98
variadic templates are incompatible with C++98
integer constant is larger than the largest signed integer type
redeclaration of method parameter %0
redefinition of method parameter %0
analyzer-config option '%0' should contain only one '='
analyzer-config option '%0' has a key but no value
-fobjc-arc is not supported on platforms using the legacy runtime
-fobjc-arc is not supported on versions of OS X prior to 10.6
'%0' not supported, please use -iquote instead
invalid argument '%0' not allowed with '%1'
invalid argument '%0' only allowed with '%1'
-fembed-bitcode is not supported on versions of iOS prior to 6.0
unable to open CC_PRINT_OPTIONS file: %0
the clang compiler does not support '%0'
the clang compiler does not support '%0' for C++ on Darwin/i386
the clang compiler does not support '%0' on this platform
%0 command failed with exit code %1 (use -v to see invocation)
unable to execute command: %0
%0 command failed due to signal (use -v to see invocation)
conflicting deployment targets, both '%0' and '%1' are present in environment
-emit-llvm cannot be used when linking
failing because environment variable '%0' is set
invalid Xarch argument: '%0', cannot change driver behavior inside Xarch argument
invalid Xarch argument: '%0', options requiring arguments are unsupported
invalid architecture '%0' for deployment target '%1'
invalid arch name '%0'
invalid Darwin version number: %0
invalid output type '%0' for use with gcc tool
invalid integral value '%1' in '%0'
invalid deployment target for -stdlib=libc++ (requires %0 or later)
invalid float ABI '%0'
cannot use '%0' output with multiple -arch options
invalid option '%0' not of the form <from-file>;<to-file>
invalid runtime library name in argument '%0'
invalid library name in argument '%0'
invalid value '%1' in '%0'
invalid version number in '%0'
malformed sanitizer blacklist: '%0'
'-gline-tables-only' is the only supported debug option
option '-MG' requires '-M' or '-MM'
argument to '%0' is missing (expected %1 value%s1)
'%0': unable to use AST files with this tool
no input files
'%0': unable to pass LLVM bit-code files to linker
'%0': unable to use module files with this tool
no such file or directory: '%0'
cannot specify both '-fobjc-arc' and '%0'
cannot specify '%0%1' when compiling multiple source files
cannot specify -o when generating multiple output files
incorrect format for -preamble-bytes=N,END
unable to remove file: %0
unknown argument: '%0'
language not recognized: '%0'
unknown or ill-formed Objective-C runtime '%0'
-E or -x required when input is from standard input
%0 is not supported with -fembed-bitcode
unsupported option '%0'
unsupported option '%0' for target '%1'
unsupported argument '%1' to option '%0'
unsupported runtime library '%0' for platform '%1'
unsupported use of internal gcc -Z option '%0'
there is no external assembler that can be used on this platform
diagnostic msg: %0
The last /TC or /TP option takes precedence over earlier instances
-O4 is equivalent to -O3
ignoring -fapple-kext which is valid for C++ and Objective-C++ only
unknown platform, assuming -mfloat-abi=%0
argument '%0' is deprecated, use '%1' instead
joined argument expects additional value: '%0'
%0: '%1' input unused%select{ when '%3' is present|}2
%0: '%1' input unused in cpp mode
Objective-C garbage collection is not supported on this platform, ignoring '%0'
optimization level '%0' is unsupported; using '%1%2' instead
overriding '%0' option with '%1'
precompiled header '%0' was ignored because '%1' is not first '-include'
%0: previously preprocessed input%select{ unused when '%2' is present|}1
treating '%0' input as '%1' when in C++ mode, this behavior is deprecated
argument unused during compilation: '%0'
'%0' is ignored in absence of '%1'
ignoring invalid -ftabstop value '%0', using default value %1
DWARF compression is not implemented
no such sysroot directory: '%0'
action %0 not compiled in
cannot link module '%0': %1
-dependency-file requires at least one -MT or -MQ option
error in backend: %0
error opening '%0': %1
error reading '%0'
error reading stdin: %0
expected a clang compiler command
unable to handle compilation, expected exactly one compiler job in '%0'
cannot locate code-completion file %0
unable to find plugin '%0'
no suitable precompiled header file found in directory '%0'
garbage collection is no longer supported
PTH file '%0' does not designate an original source header file for -include-pth
%select{vertex|fragment|kernel}0 function %1 calls recursive code
could not remap from missing file '%0'
could not remap file '%0' to the contents of file '%1'
unable to change standard output to binary
%select{vertex|fragment|kernel}0 function %1 uses too many samplers (%2)
unable to create target: '%0'
unable to interface with target machine
unable to load PCH file
unable to load plugin '%0': '%1'
unable to open output file '%0': '%1'
%select{vertex|fragment|kernel}0 function %1 uses unsupported builtin functions
illegal write to device memory for non-void vertex function %0
no valid metal language standard for triple '%0'
no module named '%0' declared in module map file '%1'
no module name provided; specify one with -fmodule-name=
%select{|umbrella }0header '%1' not found
module map file '%0' not found
module '%0' %select{is incompatible with|requires}1 feature '%2'
no submodule named %0 in module '%1'
no submodule named %0 in module '%1'; did you mean '%2'?
must specify system root with -isysroot when building a relocatable PCH file
no analyzer checkers are associated with '%0'
'%0' diagnostics %select{expected|seen}1 but not %select{seen|expected}1: %2
invalid expected %0: %1
%select{expected|'expected-no-diagnostics'}0 directive cannot follow %select{'expected-no-diagnostics' directive|other expected directives}0
invalid range following '-' in expected %0
cannot find end ('}}') of expected %0
file '%0' could not be located in expected %1
missing or invalid line number following '@' in expected %0
cannot find start of regex ('{{') in %0
cannot find start ('{{') of expected %0
no expected directives found: consider use of 'expected-no-diagnostics'
instantiated into assembly here
recursive function %0 called
function %0 using constant samplers called
function %0 is not allowed within a %select{vertex|fragment|kernel}1 function
function %0 writes to device memory
FIX-IT applied suggested code changes
FIX-IT unable to apply suggested code changes
FIX-IT unable to apply suggested code changes in a macro
FIX-IT detected an error it cannot fix
current API version is '%0', but plugin was compiled with version '%1'
macro was %select{defined|#undef'd}0 here
unable to open CC_LOG_DIAGNOSTICS file: %0 (using stderr)
unable to open CC_PRINT_HEADERS file: %0 (using stderr)
macro '%0' contains embedded newline; text after the newline is ignored
unable to open file %0 for serializing diagnostics (%1)
FIX-IT detected errors it could not fix; no output will be generated
checker plugin '%0' is not compatible with this version of the analyzer
'-std=osx-metal1.0' is equivalent to '-std=osx-metal1.1'
missing submodule '%0'
%select{definition|#undef}0 of configuration macro '%1' has no effect on the import of '%2'; pass '%select{-D%1=...|-U%1}0' on the command line to configure the module
unknown warning option '%0'
unknown warning option '%0'; did you mean '%1'?
unknown %0 warning specifier: '%1'
input is not a PCH file: '%0'
file '%0' has been modified since the precompiled header '%1' was built
file '%0' from the precompiled header has been overridden
malformed or corrupted AST file: '%0'
malformed block record in PCH file: '%0'
unable to read PCH file %0: '%1'
%q0 from module '%1' is not present in definition of %q2%select{ in module '%4'| provided earlier}3
'%0' does not appear to be a precompiled header file
%0 was %select{disabled|enabled}1 in PCH file but is currently %select{disabled|enabled}2
%0 differs in PCH file vs. current file
definition of macro '%0' differs between the precompiled header ('%1') and the command line ('%2')
macro '%0' was %select{defined|undef'd}1 in the precompiled header but %select{undef'd|defined}1 on the command line
%select{command line contains|precompiled header was built with}0 '-detailed-preprocessing-record' but %select{precompiled header was not built with it|it is not present on the command line}0
%select{AST file|current translation unit}0 was compiled with the target feature'%1' but the %select{current translation unit is|AST file was}0 not
PCH file was compiled for the %0 '%1' but the current translation unit is being compiled for target '%2'
%select{command line contains|precompiled header was built with}0 '-undef' but %select{precompiled header was not built with it|it is not present on the command line}0
PCH file contains compiler errors
after modifying system headers, please delete the module cache at '%0'
definition has no member %0
declaration of %0 does not match
please rebuild precompiled header '%0'
'%0' required by '%1'
module '%0' conflicts with already-imported module '%1': %2
PCH file built from a different branch (%0) than the compiler (%1)
PCH file uses a newer PCH format that cannot be read
PCH file uses an older PCH format that is no longer supported
backslash and newline separated by space
_Pragma takes a parenthesized string literal
illegal character encoding in character literal
illegal character encoding in string literal
character too large for enclosing character literal type
version control conflict marker in file
'defined' cannot be used as a macro name
digit separator cannot appear at %select{start|end}0 of digit sequence
embedding a #%0 directive within macro arguments is not supported
expected a module name in '__building_module' expression
exponent has no digits
builtin feature check macro requires a parenthesized identifier
\%0 used with no following hex digits
hex escape sequence out of range
hexadecimal floating constants require a significand
hexadecimal floating constants require an exponent
invalid digit '%0' in binary constant
invalid character '%0' character in raw string delimiter; use PREFIX( )PREFIX to delimit raw string
invalid argument to convert to character
invalid digit '%0' in decimal constant
invalid digit '%0' in octal constant
invalid or corrupt PTH file '%0'
invalid suffix '%0' on floating constant
invalid suffix '%0' on integer constant
source file is not valid UTF-8
failure when lexing a string
configuration macros are only allowed on top-level modules
expected an attribute name
expected configuration macro name after ','
expected ',' after conflicting module name
expected a message describing the conflict with '%0'
only '*' can be exported from an inferred submodule
expected a feature name
expected a header name after '%0'
expected %select{module exclusion with 'exclude'|'export *'}0
expected '{' to start module '%0'
expected '{' to start inferred submodule
expected %select{library|framework}0 name as a string
expected umbrella, header, submodule, or module export
expected a module map file name
expected module declaration
expected module name
expected '}'
expected ']' to close attribute
inferred framework modules cannot be 'explicit'
'explicit' is not permitted on top-level modules
inferred submodule cannot be a framework submodule
inferred submodules require a module with an umbrella
redefinition of inferred submodule
expected excluded module name
no module named '%0' in '%1'
no module named '%0' visible from '%1'
expected a module name or '*'
redefinition of module '%0'
qualified module name can only be used to define modules at the top level
only submodules and framework modules may be inferred with wildcard syntax
umbrella for module '%0' already covers this directory
umbrella directory '%0' not found
skipping stray token
Unicode character literals may not contain multiple characters
non-ASCII characters are not allowed outside of literals and identifiers
octal escape sequence out of range
Pascal string is too long
'##' cannot appear at end of macro expansion
'##' cannot appear at start of macro expansion
expected 'begin' or 'end'
pasting formed '%0', an invalid preprocessing token
':' without preceding '?'
operator 'defined' requires an identifier
%0 must be used within a preprocessing directive
division by zero in preprocessor expression
already inside '#pragma clang arc_cf_code_audited'
duplicate macro parameter name %0
empty filename
#endif without #if
'#pragma clang arc_cf_code_audited' was not ended within this file
error opening file '%0': %1
missing %1 after %0
expected comma in macro parameter list
expected end of line in preprocessor expression
expected identifier in macro parameter list
expected ')' in preprocessor expression
expected value in expression
expected "FILENAME" or <FILENAME>
token is not a valid binary operator in a preprocessor subexpression
invalid token at start of a preprocessor expression
'%0' file not found
'%0' file not found with <angled> include; use "quotes" instead
floating point literal in preprocessor expression
#import of type library is an unsupported Microsoft feature
cannot #include files inside '#pragma clang arc_cf_code_audited'
#include nested too deeply
invalid preprocessing directive
can only poison identifier tokens
invalid token in macro parameter list
%select{character|integer}0 literal with user-defined suffix cannot be used in preprocessor constant expression
%select{#line|GNU line marker}0 directive requires a simple digit sequence
invalid filename for #line directive
#line directive requires a positive integer argument
invalid filename for line marker directive
invalid flag line marker directive
invalid line marker flag '2': cannot pop empty include stack
line marker directive requires a positive integer argument
macro names must be identifiers
invalid #ident directive
macro name missing
missing ')' in macro parameter list
variadic macros not supported in OpenCL
C++ operator '%0' cannot be used as a macro name
remainder by zero in preprocessor expression
'#' is not followed by a macro parameter
not currently inside '#pragma clang arc_cf_code_audited'
unterminated conditional directive
attempt to use a poisoned identifier
no macro named %0
pragma %select{message|warning|error}0 requires parenthesized string
pragma %0 requires a parenthesized string
raw string delimiter longer than 16 characters; use PREFIX( )PREFIX to delimit raw string
differing user-defined suffixes ('%0' and '%1') in string literal concatenation
too few arguments provided to function-like macro invocation
too many arguments provided to function-like macro invocation
universal character name refers to a control character
character '%0' cannot be specified by a universal character name
incomplete universal character name
invalid universal character
unsupported non-standard concatenation of string literals
unterminated function-like macro invocation
missing terminating ')' character
unterminated /* comment
raw string missing terminating delimiter )%0"
builtin warning check macro requires a parenthesized string
module %0 does not depend on a module exporting '%1'
use of private header from outside its module: '%0'
escaped newline between */ characters at block comment end
binary integer literals are a GNU extension
binary integer literals are a C++1y extension
ISO C99 requires whitespace after the macro name
charizing operator #@ is a Microsoft extension
'$' in identifier
embedding a directive within macro arguments has undefined behavior
empty character constant
empty macro arguments are a C99 feature
multi-character character constant
hexadecimal floating constants are a C99 feature
imaginary constants are a GNU extension
// comments are not allowed in this language
must specify at least one argument for '...' parameter of variadic macro
whitespace required after macro name
invalid suffix on literal; C++11 requires a space between literal and identifier
multi-line // comment
named variadic macros are a GNU extension
no newline at end of file
use of non-standard escape character '\%0'
expected 'ON' or 'OFF' or 'DEFAULT' in pragma
token pasting of ',' and __VA_ARGS__ is a GNU extension
__VA_ARGS__ can only appear in the expansion of a C99 variadic macro
comma operator in operand of #if
extra tokens at end of #%0 directive
#ident is a language extension
#import is a language extension
#include_next is a language extension
#include resolved using non-portable MSVC search rules as: %0
C requires #line number to be less than %0, allowed as extension
#line directive with zero argument is a GNU extension
%0 macro redefined
redefining builtin macro
undefining builtin macro
#warning is a language extension
expected end of directive in pragma
unknown pragma in STDC namespace
string literal of length %0 exceeds maximum length %1 that %select{C90|ISO C99|C++}2 compilers are required to support
extension used
treating Unicode character as whitespace
unknown escape sequence '\%0'
missing terminating ' character
missing terminating '"' character
variadic macros are a C99 feature
%0 is defined here; did you mean %1?
cannot use initializer list at the beginning of a macro argument
macro %0 defined here
to match this '{'
to match this ']'
previously defined here
expanding this definition of %0
other definition of %0
parentheses are required around macro argument containing braced initializer list
did you mean to use '\u'?
null character(s) preserved in character literal
null character ignored
null character(s) preserved in string literal
disabled expansion of recursive macro
#elif after #else
#elif without #if
#else after #else
#else without #if
the #__include_macros directive is only for internal use by -imacros
#include_next with absolute path
#include_next in primary source file
invalid string literal, ignoring final '\'
macro is not used
current file is older than dependency %0
poisoning existing macro
#pragma once in main file
#pragma system_header ignored in main file
trigraph converted to '%0' character
trigraph ends block comment
trigraph ignored
ignored trigraph would end block comment
treating #%select{include|import|include_next|__include_macros}0 as an import of module '%1'
%select{using this character in an identifier|starting an identifier with this character}0 is incompatible with C99
unicode literals are incompatible with C99
character constant too long for its type
binary integer literals are incompatible with C++ standards before C++1y
digit separators are incompatible with C++ standards before C++1y
identifier after literal will be treated as a reserved user-defined literal suffix in C++11
identifier after literal will be treated as a user-defined literal suffix in C++11
'%0' is a keyword in C++11
empty macro arguments are incompatible with C++98
'<::' is treated as digraph '<:' (aka '[') followed by ':' in C++98
universal character name referring to a control character is incompatible with C++98
specifying character '%0' with a universal character name is incompatible with C++98
C++98 requires newline at end of file
#line number greater than 32767 is incompatible with C++98
raw string literals are incompatible with C++98
using this character in an identifier is incompatible with C++98
unicode literals are incompatible with C++98
variadic macros are incompatible with C++98
extraneous characters in character constant ignored
header '%0' is included in module '%1' but not listed in module map
__has_warning expected option name (e.g. "-Wundef")
%0 is used as a header guard here, followed by #define of a different macro
whitespace recommended after macro name
unknown attribute '%0'
'/*' within block comment
ambiguous expansion of macro %0
left side of operator converted from negative value to unsigned: %0
right side of operator converted from negative value to unsigned: %0
integer overflow in preprocessor expression
%select{#line|GNU line marker}0 directive interprets number as decimal, not octal
%0 is not defined, evaluates to 0
unexpected debug command '%0'
pragma diagnostic pop could not pop, no matching push
pragma diagnostic expected 'error', 'warning', 'ignored', 'fatal', 'push', or 'pop'
pragma diagnostic expected option name (e.g. "-Wundef")
unexpected token in pragma diagnostic
unknown warning group '%0', ignored
unknown pragma ignored
pragma include_alias expected '%0'
pragma include_alias expected include filename
angle-bracketed include <%0> cannot be aliased to double-quoted include "%1"
double-quoted include "%0" cannot be aliased to angle-bracketed include <%1>
pragma pop_macro could not pop '%0', no matching push_macro
#pragma warning expected '%0'
#pragma warning expected a warning number
#pragma warning(push, level) requires a level between 0 and 4
#pragma warning expected 'push', 'pop', 'default', 'disable', 'error', 'once', 'suppress', 1, 2, 3, or 4
pragma STDC FENV_ACCESS ON is not supported, ignoring pragma
incomplete universal character name; treating as '\' followed by identifier
\%0 used with no following hex digits; treating as '\' followed by identifier
universal character name refers to a surrogate character
universal character names are only valid in C99 or C++; treating as '\' followed by identifier
universal character names are only valid in C99 or C++
umbrella header for module '%0' does not include header '%1'
interface types cannot specify '%select{private|protected}0' access
use of address-of-label extension outside of a function body
name defined in alias declaration must be an identifier
%select{partial specialization|explicit specialization|explicit instantiation}0 of alias templates is not permitted
declaration of anonymous %0 must be a definition
unknown cast annotation __bridge_retain; did you mean __bridge_retained?
argument required after attribute
__asm used with no assembly instructions
cannot use %select{unicode|wide}0 string literal in 'asm'
@defs is not supported in Objective-C++
unexpected '@' in member specification
an attribute list cannot appear here
expected 'introduced', 'deprecated', or 'obsoleted'
expected a platform name, e.g., 'macosx'
redundant %0 availability change; only the last specified change will be used
%0 is not an availability stage; use 'introduced', 'deprecated', or 'obsoleted'
bitfield member cannot have an in-class initializer
redeclaration of C++ built-in type 'bool'
bracket nesting level exceeded maximum of %0
template template parameter requires 'class' after the parameter list
missing return type for function %0; did you mean the constructor name %1?
missing ',' between base or member initializers
attribute '%0' cannot have an argument list
attribute '%0' cannot be used as an attribute pack
attribute %0 cannot appear multiple times in an attribute specifier
declaration does not declare a parameter
unexpected end of default argument expression
'= %select{default|delete}0' is a function definition and must occur in a standalone declaration
default template argument for a template template parameter must be a class template
destructor name %0 does not refer to a template
expected a class name after '~' to name a destructor
duplicate 'virtual' in base specifier
duplicate default generic association
class member already marked '%0'
cannot have both throw() and noexcept() clause on the same function
missing ',' between enumerators
unnamed enumeration must be a definition
expected variable name or 'this' in lambda capture list
expected 'case' keyword before expression
expected catch
expected class name
'typename' is redundant; base classes are implicitly types
expected ',' or '>' in template-parameter-list
expected ',' or ']' in lambda capture list
expected '= constant-expression' or end of enumerator definition
expected '=' or another designator
expected expression
expected external declaration
expected a field designator, such as '.field = 4'
expected function body after function declarator
variable declaration in condition must have an initializer
variable declaration in condition cannot have a parenthesized initializer
expected body of lambda expression
expected '{' after base class list
expected '{' in compound literal
expected '<' after '%0'
expected '(' after '%0'
expected '(' for function-style cast or type construction
expected member name or ';' after declaration specifiers
expected class member or base class name
expected method body
method type specifier must start with '-' or '+'
'@end' must appear in an Objective-C context
expected the name of a parameter pack
expected parentheses around type name in %0 expression
expected property name
expected a qualified name after 'typename'
expected selector for Objective-C method
expected ';' after attribute list
expected ';' after expression
expected ';' after method prototype
expected ';' after namespace name
expected ';' after static_assert
expected ';' after %0 statement
expected ';' at end of declaration list
expected ';' at end of declaration
expected ';' in 'for' statement specifier
expected statement
expected template
expected template parameter
expected a type
expected an identifier or template-id after '::'
expected %select{identifier|unqualified-id}0
expected a version of the form 'major[.minor[.subminor]]'
expected 'while' in do/while loop
enumerations cannot be explicitly instantiated
explicit template instantiation cannot have a definition; if this definition is meant to be an explicit specialization, add '<>' after the 'template' keyword
explicit %select{specialization|instantiation}0 of non-template %1 %2
extraneous closing brace ('}')
extraneous ')' after condition, expected a statement
extraneous '%0' before ';'
for range declaration must declare a variable
cannot define a type in a friend declaration
friend cannot be declared in an explicit instantiation; if this declaration is meant to be a friend declaration, remove the 'template' keyword
'friend' used outside of class
'%0' is invalid in friend declarations
function definition does not declare parameters
function definition declared 'typedef'
function definition is not allowed here
unexpected %0 in function call; perhaps remove the %0?
expected template name after 'template' keyword in nested name specifier
%0 declared as a reference to a reference
cannot cast 'super' (it isn't an expression)
array bound cannot be deduced from an in-class initializer
initializer list cannot be used on the %select{left|right}0 hand side of operator '%1'
namespace alias cannot be inline
'_Complex %0' is invalid
cannot combine with previous '%0' declaration specifier
'long %0' is invalid
'long long %0' is invalid
cannot use %select{dot|arrow}0 operator on a type
'__pixel' must be preceded by '__vector'.  '%0' declaration specifier not allowed here
'%0' qualifier may not be applied to a reference
'short %0' is invalid
'%0' cannot be signed or unsigned
invalid %0 at end of declaration; did you mean '='?
expected ';' after top level declarator
cannot use '%0' with '__vector bool'
cannot use '%0' with '__vector'
cannot combine with previous '%0' declaration specifier. '__vector' must be first
C++11 only allows consecutive left square brackets when introducing an attribute
label at end of compound statement: expected statement
lambda requires '()' before %select{'mutable'|return type}0
string literal after 'operator' must be '""'
string literal after 'operator' cannot have an encoding prefix
address space is negative
address space attribute requires an integer constant
address space is larger than the maximum supported (%0)
address space attribute takes one argument
position attribute can only be used with center_no_perspective
%select{'delete' is|derived classes are|'dynamic_cast' is|'goto' is|labeled statements are|lambda expressions are|'new' is|'noexcept' is|'__thread' is|'thread_local' is|'_Thread_local' is|'throw' is|'try' is|type 'long' is|'typeid' is|unions are|virtual inheritance is|virtual member functions are}0 not supported in Metal
'...' must %select{immediately precede declared identifier|be innermost component of anonymous pack declaration}0
@try statement without a @catch and @finally clause
C requires a comma prior to the ellipsis in a variadic function type
use 'template' keyword to treat '%0' as a dependent template name
missing '}' at end of definition of %q0
expected parameter declarator
found '<::' after a %select{template name|const_cast|dynamic_cast|reinterpret_cast|static_cast}0 which forms the digraph '<:' (aka '[') and a ':', did you mean '< ::'?
expected a module name after module import
expected ';' after module name
__declspec attributes must be an identifier or string literal
property declaration specifies '%0' accessor twice
expected name of accessor method
expected ',' or ')' at end of property accessor list
expected '=' after '%0'
putter for property must be specified as 'put', not 'set'
missing 'get=' or 'put='
property does not specify a getter or a putter
expected 'get' or 'put' in property declaration
MS-style inline assembly is not available: %0
Unsupported architecture '%0' for MS-style inline assembly
%select{|a template declaration|an explicit template specialization|an explicit template instantiation}0 can only %select{|declare|declare|instantiate}0 a single entity
namespaces can only be defined in global or namespace scope
nested namespace definition must define each namespace separately
parameter named %0 is missing
Metal does not support the '%0' storage class specifier
OpenCL does not support the '%0' storage class specifier
@%0 must be followed by a number to form an NSNumber object
unexpected token after Objective-C string
directive may only be specified in protocols only
expected '=' for Objective-C getter
expected '=' for Objective-C setter
unknown property attribute %0
expected selector for Objective-C %select{setter|getter}0
illegal interface qualifier
illegal visibility specification
missing '@end'
attributes may not be specified on a category
postfix attributes are not allowed on Objective-C directives
postfix attributes are not allowed on Objective-C directives, place them in front of '%select{@interface|@protocol}0'
properties are an Objective-C 2 feature
property name cannot be a bitfield
property requires fields to be named
'@end' appears where closing brace '}' is expected
prefix attribute must be followed by an interface or protocol
expected an Objective-C directive after '@'
expected a related ObjectiveC class name, e.g., 'NSColor'
expected a class method selector with single argument, e.g., 'colorWithCGColor:'
expected ',' or ')' in %select{'#pragma omp %1'|'%1' clause}0
directive '#pragma omp %0' cannot contain more than one '%1' clause
unexpected OpenMP clause '%0' in directive '#pragma omp %1'
unexpected OpenMP directive '#pragma omp %0'
expected an OpenMP directive
out-of-line constructor for %0 cannot have template arguments
qualified reference to %0 is a constructor name rather than a template name wherever a constructor can be declared
qualified reference to %0 is a constructor name rather than a type wherever a constructor can be declared
'%0' keyword not permitted with interface types
unexpected parenthesis after '::'
missing parentheses around the size of parameter pack %0
pragma comment requires parenthesized identifier and optional string
unknown kind of pragma comment
pragma detect_mismatch is malformed; it requires two comma-separated string literals
'#pragma fp_contract' can only appear at file scope or at the start of a compound statement
a space is required between a right angle bracket and an equals sign (use '> =')
scoped enumeration requires a name
%0 only allowed in __except block
%0 only allowed in __except filter expression
%0 only allowed in __finally block
expected '__except' or '__finally' block
expected parenthesized parameter pack name in 'sizeof...' expression
expected a property name in @synthesize
%select{function|class|variable}0 cannot be defined in an explicit instantiation; if this declaration is meant to be a %select{function|class|variable}0 definition, remove the 'template' keyword
identifier followed by '<' indicates a class template specialization but %0 %select{does not refer to a template|refers to a function template|<unused>|refers to a variable template|<unused>}1
cannot template a using declaration
cannot template a using directive
'this' cannot be captured by reference
a space is required between consecutive right angle brackets (use '> >')
invalid comparison flag %0; use 'layout_compatible' or 'must_be_null'
type trait requires %0%select{| or more}1 argument%select{|s}2; have %3 argument%s3
typename is allowed for identifiers only
type name does not allow constexpr specifier to be specified
type name does not allow function specifier to be specified
type name does not allow storage class to be specified
typename specifier refers to a non-type template
type name requires a specifier or qualifier
unexpected ':' in nested name specifier; did you mean '::'?
unexpected '@' in program
attributes can not be specified on namespace alias
@implementation declaration can not be protocol qualified
unexpected namespace scope prior to decltype
unexpected type name %0: expected identifier
type-id cannot have a name
unknown template name %0
unknown type name %0
'static' may not be used with an unspecified variable length array size
must use '%1' tag to refer to type %0%select{| in this scope}2
'using namespace' is not allowed in classes
version number must have non-zero major, minor, or sub-minor version
use of empty enum
property synthesize requires specification of an ivar
ISO C++11 requires a parenthesized pack declaration to have a name
alias declarations are a C++11 extension
%0 applied to an expression is a GNU extension
'auto' storage class specifier is not permitted in C++11, and will not be supported in future releases
'auto' type specifier is a C++11 extension
%0 is a C11-specific feature
generic selections are a C11-specific feature
_Noreturn functions are a C11-specific feature
_Static_assert is a C11-specific feature
compound literals are a C99-specific feature
variable declaration in for loop is a C99-specific feature
enumeration types with a fixed underlying type are a Microsoft extension
enumeration types with a fixed underlying type are a C++11 extension
'decltype(auto)' type specifier is a C++1y extension
defaulted function definitions are a C++11 extension
deleted function definitions are a C++11 extension
duplicate '%0' declaration specifier
exception specification of '...' is a Microsoft extension
ISO C requires a translation unit to contain at least one declaration
commas at the end of enumerator lists are a C99-specific feature
commas at the end of enumerator lists are a C++11 extension
extern templates are a C++11 extension
extra ';' %select{outside of a function|inside a %1|inside instance variable list|after member function definition}0
extra ';' outside of a function is a C++11 extension
range-based for loop is a C++11 extension
generalized initializer lists are a C++11 extension
use of GNU address-of-label extension
use of GNU array range extension
use of GNU case range extension
use of GNU ?: conditional expression extension, omitting middle operand
use of GNU empty initializer extension
use of GNU indirect-goto extension
use of GNU 'missing =' extension in designator
use of GNU old-style field designator extension
use of GNU statement expression extension
type-less parameter names in function declaration
inline namespaces are a C++11 feature
complex integer types are a GNU extension
keyword '%0' will be made available as an identifier %select{here|for the remainder of the translation unit}1
'sealed' keyword is a Microsoft extension
in-class initialization of non-static data member is a C++11 extension
'%0' keyword is a C++11 extension
plain '_Complex' requires a type specifier; assuming '_Complex double'
reference qualifiers on functions are a C++11 extension
rvalue references are a C++11 extension
scoped enumerations are a C++11 extension
'__thread' before '%0'
use -fbracket-depth=N to increase maximum nesting level
comma separating Objective-C messaging arguments
or insert whitespace before ':' to use %0 as parameter name and have an empty entry in the selector
still within definition of %q0 here
introduce a parameter name to make %0 part of the selector
%select{class|protocol|category|class extension|implementation|category implementation}0 started here
previous default generic association is here
ignored %0 qualifier on asm
'%0' casts have no effect when not using ARC
attribute %0 ignored, because it is not attached to a declaration
GCC does not allow %0 attribute in this position on a function definition
'auto' storage class specifier is redundant and incompatible with C++11
'unavailable' availability overrides all other availability information
use of C-style parameters in Objective-C method declarations is deprecated
'decltype(auto)' type specifier is incompatible with C++ standards before C++1y
use of right-shift operator ('>>') in template argument will require parentheses in C++11
alias declarations are incompatible with C++98
'alignas' is incompatible with C++98
alignof expressions are incompatible with C++98
C++11 attribute syntax is incompatible with C++98
'decltype' type specifier is incompatible with C++98
defaulted function definitions are incompatible with C++98
deleted function definitions are incompatible with C++98
enumeration types with a fixed underlying type are incompatible with C++98
commas at the end of enumerator lists are incompatible with C++98
extern templates are incompatible with C++98
range-based for loop is incompatible with C++98
generalized initializer lists are incompatible with C++98
inline namespaces are incompatible with C++98
lambda expressions are incompatible with C++98
literal operators are incompatible with C++98
noexcept specifications are incompatible with C++98
noexcept expressions are incompatible with C++98
in-class initialization of non-static data members is incompatible with C++98
'nullptr' is incompatible with C++98
'%0' keyword is incompatible with C++98
reference qualifiers on functions are incompatible with C++98
rvalue references are incompatible with C++98
scoped enumerations are incompatible with C++98
static_assert declarations are incompatible with C++98
extra ';' outside of a function is incompatible with C++98
trailing return types are incompatible with C++98
consecutive right angle brackets are incompatible with C++98 (use '> >')
add explicit braces to avoid dangling else
'register' storage class specifier is deprecated
extra ';' after member function definition
meaningless 'volatile' on asm outside function
dependent %select{__if_not_exists|__if_exists}0 declarations are ignored
%0 used as the name of the previous parameter rather than as part of the selector
unknown __declspec attribute %0 ignored
protocol has no object type specified; defaults to qualified 'id'
extra tokens at the end of '#pragma omp %0' are ignored
expected '=' following '#pragma %select{align|options align}0' - ignored
invalid alignment option in '#pragma %select{align|options align}0' - ignored
missing ':' after %0 - ignoring
expected 'enable' or 'disable' - ignoring
expected identifier in '#pragma %0' - ignored
missing '(' after '#pragma %0' - ignoring
missing ')' after '#pragma %0' - ignoring
extra tokens at end of '#pragma %0' - ignored
incorrect use of '#pragma ms_struct on|off' - ignored
unexpected '#pragma omp ...' in program
expected 'align' following '#pragma options' - ignored
unknown action for '#pragma pack' - ignored
expected integer or identifier in '#pragma pack' - ignored
unknown OpenCL extension %0 - ignoring
expected ')' or ',' in '#pragma unused'
expected '#pragma unused' argument to be a variable name
semicolon before method body is ignored
ignoring '%select{static|inline}0' keyword on explicit template instantiation
Use of 'long' with '__vector' is deprecated
empty symbolic operand name in inline assembly string
invalid %% escape in inline assembly string
invalid operand number in inline asm string
unknown symbolic operand name in inline assembly string
unterminated symbolic operand name in inline assembly string
template parameter lists have a different number of parameters (%0 vs %1)
template parameter has different kinds in different translation units
field %0 declared with incompatible types in different translation units (%1 vs. %2)
external function %0 declared with incompatible types in different translation units (%1 vs. %2)
instance variable %0 declared with incompatible types in different translation units (%1 vs. %2)
non-type template parameter declared with incompatible types in different translation units (%0 vs. %1)
%select{class|instance}0 method %1 has a different number of parameters in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has a parameter with a different types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 has incompatible result types in different translation units (%2 vs. %3)
%select{class|instance}0 method %1 is variadic in one translation unit and not variadic in another
property %0 is implemented with %select{@synthesize|@dynamic}1 in one translation but %select{@dynamic|@synthesize}1 in another translation unit
property %0 declared with incompatible types in different translation units (%1 vs. %2)
class %0 has incompatible superclasses
property %0 is synthesized to different ivars in different translation units (%1 vs. %2)
parameter kind mismatch; parameter is %select{not a|a}0 parameter pack
external variable %0 defined in multiple translation units
external variable %0 declared with incompatible types in different translation units (%1 vs. %2)
cannot import unsupported AST node %0
%select{read of|assignment to|increment of|decrement of}0 member %1 of union with %select{active member %3|no active member}2 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced null pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 dereferenced one-past-the-end pointer is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 temporary is not allowed in a constant expression outside the expression that created the temporary
%select{read of|assignment to|increment of|decrement of}0 object outside its lifetime is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile %select{temporary|object %2|member %2}1 is not allowed in a constant expression
%select{read of|assignment to|increment of|decrement of}0 volatile-qualified type %1 is not allowed in a constant expression
cannot refer to element %0 of %select{array of %2 elements|non-array object}1 in a constant expression
in call to '%0'
constexpr evaluation hit maximum call limit
(skipping %0 call%s0 in backtrace; use -fconstexpr-backtrace-limit=0 to see all)
comparison of pointer to virtual member function %0 has unspecified value
both arms of conditional operator are unable to produce a constant expression
constexpr evaluation exceeded maximum depth of %0 calls
floating point arithmetic produces %select{an infinity|a NaN}0
%select{reinterpret_cast|dynamic_cast|cast that performs the conversions of a reinterpret_cast|cast from %1}0 is not allowed in a constant expression
cannot cast object of dynamic type %0 to type %1
%select{non-constexpr|undefined}0 %select{function|constructor}1 %2 cannot be used in a constant expression
shift count %0 >= width of type %1 (%2 bit%s2)
%select{read of|assignment to|increment of|decrement of}0 %select{temporary|variable}1 whose lifetime has ended
signed left shift discards bits
left shift of negative value %0
read of mutable member %0 is not allowed in a constant expression
read of non-const variable %0 is not allowed in a constant expression
read of non-constexpr variable %0 is not allowed in a constant expression
modification of object of const-qualified type %0 is not allowed in a constant expression
a constant expression cannot modify an object that is visible outside that expression
negative shift count %0
control reached end of constexpr function
%select{pointer|reference}0 to %select{|subobject of }1%select{temporary|%3}2 is not a constant expression
non-literal type %0 cannot be used in a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|perform pointer arithmetic on|call member function on|access real component of|access imaginary component of}0 null pointer
value %0 is outside the range of representable values of type %1
dereferenced pointer past the end of %select{|subobject of }0%select{temporary|%2}1 is not a constant expression
cannot %select{access base class of|access derived class of|access field of|access array element of|ERROR|call member function on|access real component of|access imaginary component of}0 pointer past the end of object
comparison of addresses of subobjects of different base classes has unspecified value
comparison of address of base class subobject %0 of class %1 to field %2 has unspecified value
comparison of address of fields %0 and %2 of %4 with differing access specifiers (%1 vs %3) has unspecified value
subtracted pointers are not elements of the same array
subtraction of pointers to type %0 of zero size
constexpr evaluation hit maximum step limit; possible infinite loop?
this use of statement expressions is not supported in a constant expression
temporary created here
typeid applied to expression of polymorphic type %0 is not allowed in a constant expression
%select{|sub}0object of type %1 is not initialized
use of reference outside its lifetime is not allowed in a constant expression
initializer of %0 is not a constant expression
cannot construct object of type %0 with virtual base class in a constant expression
cannot evaluate virtual function call in a constant expression
comparison between unequal pointers to void has unspecified result
division by zero
class has base type %0
bit-field %0 with type %1 and length %2 here
also defined here
enumerator %0 with value %1 here
field %0 has type %1 here
no corresponding base class here
no corresponding enumerator here
no corresponding field here
field %0 is not a bit-field
class has %0 base %plural{1:class|:classes}0
%select{class|instance}0 method %1 also declared here
no corresponding superclass here
property %0 is implemented with %select{@synthesize|@dynamic}1 here
inherits from superclass %0 here
property is synthesized to ivar %0 here
%select{parameter|parameter pack}0 declared here
%0 is a %select{struct|interface|union|class|enum}1 here
template parameter declared here
template parameter list also declared here
declared here with type %0
%select{non-virtual|virtual}0 derivation here
overflow in expression; result is %0 with type %1
type %0 has incompatible definitions in different translation units
add a deprecation attribute to the declaration to silence this warning
previous command '%select{\|@}0%1' here
previous command '%select{\|@}0%1' (an alias of '\%2') here
end tag
HTML tag started here
did you mean '%0'?
previous documentation
unknown command tag name '%0'; did you mean '%1'?
'%select{\|@}0%select{class|interface|protocol|struct|union}1' command should not be used in a comment attached to a non-%select{class|interface|protocol|struct|union}2 declaration
duplicated command '%select{\|@}0%1'
empty paragraph passed to '%select{\|@}0%1' command
'%select{\|@}0%select{classdesign|coclass|dependency|helper|helperclass|helps|instancesize|ownership|performance|security|superclass}1' command should not be used in a comment attached to a non-container declaration
declaration is marked with '\deprecated' command but does not have a deprecation attribute
'%select{\|@}0%select{function|functiongroup|method|methodgroup|callback}1' command should be used in a comment attached to %select{a function|a function|an Objective-C method|an Objective-C method|a pointer to function}2 declaration
HTML end tag '%0' is forbidden
HTML end tag does not match any start tag
HTML start tag '%0' closed by '%1'
HTML start tag prematurely ended, expected attribute name or '>'
expected quoted string after equals sign
parameter '%0' is already documented
unrecognized parameter passing direction, valid directions are '[in]', '[out]' and '[in,out]'
'%select{\|@}0param' command used in a comment that is not attached to a function declaration
parameter '%0' not found in the function declaration
whitespace is not allowed in parameter passing direction
'%select{\|@}0%1' command used in a comment that is attached to a %select{function returning void|constructor|destructor|method returning void}2
'%select{\|@}0%1' command used in a comment that is not attached to a function or method declaration
template parameter '%0' is already documented
'%select{\|@}0tparam' command used in a comment that is not attached to a template declaration
template parameter '%0' not found in the template declaration
unknown command tag name
'%select{\|@}0%1' command does not terminate a verbatim text block
%select{return|parameter|variable|field|instance variable|synthesized instance variable}0 type %1 is an abstract class
%1 is a %select{private|protected}0 member of %3
%select{base class|inherited virtual base class}0 %1 has %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR*|}2constructor
calling a %select{private|protected}0 constructor of class %2
ISO C++11 does not allow access declarations; use using declarations instead
calling a %select{private|protected}1 destructor of class %0
base class %0 has %select{private|protected}1 destructor
exception object of type %0 has %select{private|protected}1 destructor
field of type %1 has %select{private|protected}2 destructor
instance variable of type %0 has %select{private|protected}1 destructor
temporary of type %0 has %select{private|protected}1 destructor
variable of type %1 has %select{private|protected}2 destructor
inherited virtual base class %1 has %select{private|protected}2 destructor
field of type %0 has %select{private|protected}2 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}1constructor
friend function %1 is a %select{private|protected}0 member of %3
capture of variable '%0' as type %1 calls %select{private|protected}3 %select{default |copy |move |*ERROR* |*ERROR* |*ERROR* |}2constructor
address of overloaded function %0 is ambiguous
can't form member pointer of type %0 without '&' and class name
address of overloaded function %0 does not match required type %1
address of overloaded function %0 cannot be converted to type %1
__builtin_address_space_cast casts from %0 which is not a pointer type
__builtin_address_space_cast from %0 to incompatible type %1
'delete' cannot delete objects of type %0 in address space '%1'
'new' cannot allocate objects of type %0 in address space '%1'
alias definition of %0 after tentative definition
only weak aliases are supported on darwin
pack expansion used as argument for non-pack parameter of alias template
extraneous template parameter list in alias template declaration
alias must point to a defined variable or function
%0 attribute cannot be applied to a %select{function parameter|variable with 'register' storage class|'catch' variable|bit-field}1
redeclaration has different alignment requirement (%1 vs %0)
%0 must be specified on definition if it is specified on any declaration
requested alignment is less than minimum alignment of %1 for type %0
invalid application of 'alignof' to a field of a class still being defined
allocating an object of abstract class type %0
expected initializer
ambiguous cast from base %0 to derived %1:%2
ambiguous conversion of delete expression of type %0 to a pointer
ambiguous conversion from derived class %0 to base class %1:%2
member %0 found in multiple base classes of different types
non-static member %0 found in multiple base-class subobjects of type %1:%2
ambiguous conversion from pointer to member of %select{base|derived}0 class %1 to pointer to member of %select{derived|base}0 class %2:%3
reference to %0 is ambiguous
multiple suitable %0 functions in %1
a type named %0 is hidden by a declaration in a different namespace
anonymous bit-field has negative width (%0)
size of anonymous bit-field (%0 bits) exceeds size of its type (%1 bits)
anonymous property is not supported
anonymous %select{struct|union}0 can only contain non-static data members
anonymous %select{struct|union}0 cannot contain a %select{private|protected}1 data member
functions cannot be declared in an anonymous %select{struct|union}0
static members cannot be declared in an anonymous %select{struct|union}0
types cannot be declared in an anonymous %select{struct|union}0
member of anonymous struct redeclares %0
anonymous %select{structs|structs and classes}0 must be %select{struct or union|class}0 members
member of anonymous union redeclares %0
anonymous unions at namespace or global scope must be declared 'static'
anonymous union at class scope must not have a storage specifier
must explicitly describe intended ownership of an object array parameter
existing instance variable %1 for property %0 with %select{unsafe_unretained| assign}2 attribute must be __unsafe_unretained
cannot perform atomic operation on a pointer to type %0: type has non-trivial ownership
cannot capture __autoreleasing variable in a %select{block|lambda by copy}0
%select{__block variables|global variables|fields|instance variables}0 cannot have __autoreleasing ownership
incompatible types casting %0 to %1 with a %select{__bridge|__bridge_transfer|__bridge_retained}2 cast
cast of %select{Objective-C|block|C}0 pointer type %1 to %select{Objective-C|block|C}2 pointer type %3 cannot use %select{__bridge|__bridge_transfer|__bridge_retained}4
%select{cast|implicit conversion}0 of %select{Objective-C|block|C}1 pointer type %2 to %select{Objective-C|block|C}3 pointer type %4 requires a bridged cast
collection expression type %0 is a forward declaration
%select{implicit conversion|cast}0 of weak-unavailable object of type %1 to a __weak object of type %2
method implementation does not match its declaration
ARC forbids explicit message send of %0
ARC forbids %select{implementation|synthesis}0 of %1
ARC forbids use of %0 in a @selector
%select{|unsafe_unretained|strong|weak}1 property %0 may not also be declared %select{|__unsafe_unretained|__strong|__weak|__autoreleasing}2
%select{pointer|reference}1 to non-const type %0 with no explicit ownership
init methods must return a type related to the receiver type
method was declared as %select{an 'alloc'|a 'copy'|an 'init'|a 'new'}0 method, but its implementation doesn't match because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
no visible @interface for %0 declares the selector %1
no known %select{instance|class}1 method for selector %0
%select{implicit conversion|cast}0 of %select{%2|a non-Objective-C pointer type %2|a block pointer|an Objective-C pointer|an indirect pointer to an Objective-C pointer}1 to %3 is disallowed with ARC
multiple methods named %0 found with mismatched result, parameter type or attributes
'new' cannot allocate an array of %0 with no explicit ownership
explicit ownership qualifier on cast result has no effect
passing address of %select{non-local|non-scalar}0 object to __autoreleasing parameter for write-back
ARC forbids %select{Objective-C objects|blocks}0 in %select{struct|interface|union|<<ERROR>>|enum}1
ARC forbids synthesizing a property of an Objective-C object with unspecified ownership or storage attribute
performSelector names a selector which retains the object
pseudo-destructor destroys object of type %0 with inconsistently-qualified type %1
receiver %0 for class message is a forward declaration
receiver type %0 for instance message is a forward declaration
existing instance variable %1 for strong property %0 may not be %select{|__unsafe_unretained||__weak}2
thread-local variable has non-trivial ownership: type is %0
incompatible pointer types passing retainable parameter of type %0to a CF function expecting %1 type
class is incompatible with __weak references
the result of a delegate init call must be immediately returned or assigned to 'self'
the current deployment target does not support automated __weak references
assignment of a weak-unavailable object to a __weak object
synthesizing __weak instance variable of type %0, which does not support weak references
parameter may not be qualified with an address space
argument should be a value from %0 to %1
argument to %select{attribute|function call}0 must be a function constant
argument to attribute must be a program scope constant variable
argument to attribute must have a definition
arithmetic on pointer to interface %0, which is not a constant size for this architecture and platform
array designator range [%0, %1] is empty
array designator value '%0' is negative
array designator cannot initialize non-array type %0
array designator index (%0) exceeds array bounds (%1)
cannot initialize array %diff{of type $ with array of type $|with different type of array}0,1
initializing wide char array with incompatible wide string literal
initializing wide char array with non-wide string literal
cannot initialize array %diff{of type $ with non-constant array of type $|with different type of array}0,1
array initializer must be an initializer list%select{| or string literal| or wide string literal}0
initializing char array with wide string literal
array size must be specified in new expressions
array of abstract class type %0
ambiguous conversion of array size expression of type %0 to an integral or enumeration type
array size expression of type %0 requires explicit conversion to type %1
array size expression has incomplete class type %0
size of array has non-integer type %0
array size expression must have integral or %select{|unscoped }0enumeration type, not %1
variable length array must be bound in function definition
star modifier used outside of function prototype
%0 used in non-outermost array type derivation
%0 used in array declarator outside of function prototype
array is too large (%0 elements)
automatic variable qualified with an address space
asm operand has incomplete type %0
invalid input constraint '%0' in asm
invalid input size for constraint '%0'
invalid lvalue in asm input for constraint '%0'
invalid lvalue in asm output
invalid output constraint '%0' in asm
invalid type %0 in asm input for constraint '%1'
unsupported inline asm: input with type %diff{$ matching output with type $|}0,1
unknown register name '%0' in asm
wide string is invalid in 'asm'
type %0 in generic association compatible with previously specified type %1
type %0 in generic association incomplete
type %0 in generic association not an object type
type %0 in generic association is a variably modified type
use of @defs is not supported on this architecture and platform
address argument to atomic builtin must be a pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer, floating-point or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to integer or pointer (%0 invalid)
address argument to atomic builtin must be a pointer to 1,2,4,8 or 16 byte type (%0 invalid)
address argument to load or store exclusive builtin must be a pointer to 1,2,4 or 8 byte type (%0 invalid)
atomic %select{load|store}0 requires runtime support that is not available for this target
address argument to bitwise atomic operation must be a pointer to %select{|atomic }0integer (%1 invalid)
address argument to atomic operation must be a pointer to _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to %select{|atomic }0integer or pointer (%1 invalid)
address argument to atomic operation must be a pointer to non-const _Atomic type (%0 invalid)
address argument to atomic operation must be a pointer to a trivially-copyable type (%0 invalid)
atomic property of reference type %0 cannot have non-trivial assignment operator
_Atomic cannot be applied to %select{incomplete |array |function |reference |atomic |qualified |}0type %1 %select{||||||which is not trivially copyable}0
the type %0 is already explicitly ownership-qualified
tls_model must be "global-dynamic", "local-dynamic", "initial-exec" or "local-exec"
%0 attribute invalid on this declaration, requires typedef or value
function type may not be qualified with an address space
multiple address spaces specified for type
requested alignment must be 8192 bytes or smaller
requested alignment is not a power of 2
%0 attribute requires parameter %1 to be %select{int or bool|an integer constant|a string|an identifier}2
attribute requires integer constant
%0 attribute parameter %1 is out of bounds
%0 attribute parameter %1 is out of bounds: %plural{0:no parameters to index into|1:can only be 1, since there is one parameter|:must be between 1 and %2}2
init_priority attribute requires integer constant between 101 and 65535 inclusive
%0 attribute requires %select{int or bool|an integer constant|a string|an identifier}1
invalid attribute argument %0 - expecting a vector or vectorizable scalar type
Neon vector size must be 64 or 128 bits
%0 attribute can be applied only to symbol declaration
'cleanup' argument %select{|%1 |%1 }0is not a %select{||single }0function
'cleanup' function %0 parameter has %diff{type $ which is incompatible with type $|incompatible type}1,2
'cleanup' function %0 must take 1 parameter
%0 attribute is invalid for the implicit this argument
%0 attribute cannot be applied to a statement
vector size not an integral multiple of component size
invalid vector element type %0
multiple garbage collection attributes specified for type
%0 attribute cannot be used with pointers to members
%0 attribute is not supported in %select{C|C++|Objective-C}1
%select{overloaded function|redeclaration of}0 %1 must have the 'overloadable' attribute
'overloadable' function %0 must have a prototype
%0 attribute only applies to pointer arguments
'regparm' parameter must be between 0 and %0 inclusive
'regparm' is not valid on this platform
argument to 'section' attribute is not valid for this target: %0
'selectany' can only be applied to data items with external linkage
'sentinel' parameter 1 less than zero
'sentinel' parameter 2 not 0 or 1
vector size too large
%0 attribute takes at least %1 argument%s1
%0 attribute takes no more than %1 argument%s1
%0 attribute is not supported for this target
uuid attribute contains a malformed GUID
the vecreturn attribute can only be used on a POD (plain old data) class or structure (i.e. no virtual functions)
the vecreturn attribute can only be used on a class or structure with one member, which must be a vector
weak declaration cannot have internal linkage
weakref declaration of %0 must be in a global context
weakref declaration must have internal linkage
weakref declaration of %0 must also have an alias attribute
%0 attribute only applies to %select{functions|unions|variables and functions|functions and methods|parameters|parameters and fields|fields|global constant variables or shader parameters|functions, methods and blocks|functions, methods, and classes|functions, methods, and parameters|classes|variables|methods|variables, functions and labels|fields and global variables|structs|variables, functions and tag types|thread-local variables|variables and fields|variables, data members and tag types|types and namespaces|Objective-C interfaces|methods and properties|struct or union|struct, union or class|types|Objective-C instance methods|init methods of interface declarations|variables, functions and classes|Objective-C protocols|functions and global variables}1
%0 attribute %plural{0:takes no arguments|1:takes one argument|:requires exactly %1 arguments}1
zero vector size
%0 and %1 attributes are not compatible
'%select{auto|decltype(auto)}0' deduced as %1 in declaration of %2 and deduced as %3 in declaration of %4
cannot deduce return type %0 from returned value of type %1
'%select{auto|decltype(auto)}0' in return type deduced as %1 here but deduced as %2 in earlier return statement
cannot deduce return type %0 for function with no return statements
cannot deduce return type from initializer list
cannot deduce return type %0 from omitted return expression
function %0 with deduced return type cannot be used before it is defined
function with deduced return type cannot be virtual
'auto' return without trailing return type
new expression for type %0 contains multiple constructor arguments
new expression for type %0 has incompatible constructor argument of type %1
new expression for type %0 requires a constructor argument
new expression for type %0 cannot use list-initialization
%select{'auto'|'decltype(auto)'}0 not allowed %select{in function prototype|in non-static struct member|in non-static union member|in non-static class member|in interface member|in exception declaration|in template parameter|in block literal|in template argument|in typedef|in type alias|in function return type|in conversion function type|here|in lambda parameter}1
'auto' variable template instantiation is not allowed
variable %0 with type %1 has incompatible initializer of type %2
cannot deduce actual type for variable %0 with type %1 from initializer list
initializer for variable %0 with type %1 contains multiple expressions
initializer for variable %0 with type %1 is empty
declaration of variable %0 with type %1 requires an initializer
variable %0 declared with 'auto' type cannot appear in its own initializer
as_type cast %select{to|from}0 %1 which is not a scalar or vector type
cannot use as_type to cast %select{to|from}0 boolean type
cannot use as_type to cast from %0 to %1, types of different size
%select{const_cast||||C-style cast|functional-style cast}0 to %2, which is not a reference, pointer-to-object, or pointer-to-data-member
address of overloaded function %0 cannot be cast to type %1
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from bit-field lvalue to reference type %2
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 is not allowed
cannot %select{||reinterpret_cast||C-style cast|}0 from member pointer type %1 to member pointer type %2 of different size
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 casts away qualifiers
%select{const_cast|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from rvalue to reference type %2
%select{||reinterpret_cast||C-style cast|}0 from scalar %1 to vector %2 of different size
%select{||reinterpret_cast||C-style cast|}0 from vector %1 to scalar %2 of different size
%select{||reinterpret_cast||C-style cast|}0 from vector %1 to vector %2 of different size
%0 is an incomplete type
%0 is not a class
%0 is not polymorphic
%0 is not a pointer
%0 is not a reference or pointer
%0 cannot be used as the type of a kernel parameter
unknown linkage language
cannot cast from lvalue of type %1 to rvalue reference type %2; types are not compatible
left hand operand to %0 must be a %select{|pointer to }1class compatible with the right hand operand, but is %2
right hand operand to %0 has non-pointer-to-member type %1
cannot allocate %select{function|reference}1 type %0 with new
%0 cannot be the name of a parameter
bad receiver type %0
reinterpret_cast cannot resolve overloaded function %0 to type %1
reinterpret_cast of a %0 to %1 needs its address which is not allowed
cast from pointer to smaller type %2 loses information
cannot cast from type %1 to member pointer type %2
address of overloaded function %0 cannot be static_cast to type %1
cannot cast from type %1 to pointer type %2
%0 cannot be the name of a variable or data member
base class %0 has a flexible array member
unions cannot have base classes
base class initializer %0 names both a direct base class and an inherited virtual base class
constructor initializer %0 does not name a class
base specifier must name a class
%0 attribute cannot be applied to a base specifier
bit-field %0 has negative width (%1)
named bit-field %0 has zero width
size of bit-field %0 (%1 bits) exceeds size of its type (%2 bits)
variable is not assignable (missing __block type specifier)
'extern' variable cannot have an initializer
__block attribute not allowed, only allowed on local variables
__block attribute not allowed on declaration with a variably modified type
non-void block should return a value
block cannot return %select{array|function}0 type %1
blocks support disabled - compile with -fblocks or pick a deployment target that supports them
use of vector type with 'bool' requires cl_APPLE_bool_vec extension to be enabled
reference to non-static member function must be called%select{|; did you mean to call it with no arguments?}0
%select{string|character|boolean|numeric}0 literal must be prefixed by '@' in a collection
'break' statement not in loop or switch statement
first argument to __builtin_annotation must be an integer
second argument to __builtin_annotation must be a non-wide string constant
definition of builtin function %0
builtin functions must be directly called
function-style cast to a builtin type can only take one argument
argument to __builtin_longjmp must be a constant 1
'%0' is only available in %1
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature, not permitted in C++
calling %0 with incomplete return type %1
argument type %0 is incomplete
calling function with incomplete return type %0
cannot form a pointer-to-member to member %0 of reference type %1
cannot pass object with interface type %0 by value through variadic %select{function|block|method|constructor}1
cannot pass object with interface type %1 by value to variadic %select{function|block|method|constructor}2; expected type from format string was %3
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2
cannot pass %select{expression of type %1|initializer list}0 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
__block variable %0 cannot be captured in a %select{lambda expression|captured statement}1
%0 in capture list does not name a variable
%0 can appear only once in a capture list
%0 cannot be captured because it does not have automatic storage duration
by-copy capture of value of abstract type %0
by-copy capture of variable %0 with incomplete type %1
%select{function|parameter}0 declared '[[carries_dependency]]' after its first declaration
'[[carries_dependency]]' attribute only allowed on parameter in a function declaration or lambda
'case' statement not in switch statement
operand of type %0 cannot be cast to a pointer type
pointer cannot be cast to type %0
cannot type cast @selector expression
cannot catch incomplete type %0
cannot catch pointer to incomplete type %0
cannot catch reference to incomplete type %0
@catch parameter is not a pointer to an interface type
cannot catch exceptions by rvalue reference
cannot define %select{category|class extension}0 for undefined class %1
function declared '%0' here was previously declared %select{'%2'|without calling convention}1
function with no prototype cannot use %0 calling convention
variadic function cannot use %0 calling convention
CFString literal is not a string constant
circular inheritance between %0 and %1
cannot declare class extension for %0 after class implementation
base %0 is marked '%select{final|sealed}1'
%0 redeclared with '%1' access
property follows Cocoa naming convention for returning 'owned' objects
the type %0 is not a pointer to a fast-enumerable object
fragment shader parameter with attribute 'color' is supported only on iOS (requires -std=ios-metal1.[0|1])
'color' attachment has different types on input (%0) and output (%1)
%select{block pointer|pointer|reference}0 to function type %select{%2 |}1cannot have '%3' qualifier
operands to conditional of types%diff{ $ and $|}0,1 are incompatible in ARC mode
conditional expression is ambiguous; %diff{$ can be converted to $ and vice versa|types can be convert to each other}0,1
conditional expression is ambiguous; %diff{$ and $|types}0,1 can be converted to several common types
%select{left|right}1 operand to ? is void, but %select{right|left}1 operand is of type %0
CUDA special function 'cudaConfigureCall' must have scalar return type
conflicting types for alias %0
conflicting attribute is here
instance variable %0 has conflicting bit-field width
conflicting instance variable names: %0 vs %1
instance variable %0 has conflicting type%diff{: $ vs $|}1,2
virtual function %0 has different calling convention attributes %diff{($) than the function it overrides (which has calling convention $)|than the function it overrides}1,2
conflicting super class name %0
conflicting types for %0
argument to %0 must be a constant integer
statement not allowed in constexpr %select{function|constructor}0
no return statement in constexpr function
constexpr constructor must initialize all members
destructor cannot be marked constexpr
function try block not allowed in constexpr %select{function|constructor}0
variables defined in a constexpr %select{function|constructor}0 must be initialized
variable of non-literal type %1 cannot be defined in a constexpr %select{function|constructor}0
%select{static|thread_local}1 variable not permitted in a constexpr %select{function|constructor}0
'main' is not allowed to be declared constexpr
non-literal type %0 cannot have constexpr members
constexpr can only be used in variable and function declarations
constexpr %select{function|constructor}1's %ordinal0 parameter type %2 is not a literal type
constexpr function's return type %0 is not a literal type
%select{non-constexpr declaration of %0 follows constexpr declaration|constexpr declaration of %0 follows non-constexpr declaration}1
declaration of constexpr static data member %0 requires an initializer
%select{class|struct|interface|union|enum}0 cannot be marked constexpr
constexpr union constructor does not initialize any member
constexpr variable cannot have non-literal type %0
constexpr variable %0 must be initialized by a constant expression
virtual function cannot be constexpr
constexpr %select{member function|constructor}0 not allowed in %select{struct|interface|class}1 with virtual base %plural{1:class|:classes}2
variably-modified type %0 cannot be used in a constexpr %select{function|constructor}1
copy constructor must pass its first argument by reference
constructor cannot be declared '%0'
constructor cannot be redeclared
constructor cannot have a return type
class extension has no primary class
'continue' statement not in loop statement
conversion function must be a non-static member function
conversion function cannot be redeclared
conversion function cannot have a return type
conversion function cannot convert to an array type
conversion function cannot convert to a function type
conversion function cannot be variadic
must use a typedef to declare a conversion to %0
conversion function cannot have any parameters
first two arguments to __builtin_convertvector must have the same number of elements
first argument to __builtin_convertvector must be a vector
second argument to __builtin_convertvector must be a vector type
'&' must precede a capture when the capture default is '='
return type of virtual function %3 is not covariant with the return type of the function it overrides (ambiguous conversion from derived class %0 to base class %1:%2)
invalid covariant return for virtual function: %1 is a %select{private|protected}2 base class of %0
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is incomplete)
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 is not derived from %2)
return type of virtual function %0 is not covariant with the return type of the function it overrides (class type %1 is more qualified than class type %2
return type of virtual function %0 is not covariant with the return type of the function it overrides (%1 has different qualifiers than %2)
%select{constructor|destructor}1 %0 must not return void expression
__builtin_convert requires constant 3rd and 4th argument
did not find dest type for __builtin_convert
__builtin_convert cannot saturate with fp dest type
unknown rounding mode to __builtin_convert
vector dest and src type must have same length for __builtin_convert
alias definition is part of a cycle
GNU decimal type extension not supported
'%0' declared as an array with a negative size
declarator requires an identifier
'decltype(auto)' cannot be combined with other type specifiers
cannot form %select{pointer to|reference to|array of}0 'decltype(auto)'
'decltype(auto)' can only be used as a return type in a function declaration
cannot deduce 'decltype(auto)' from initializer list
'decltype' cannot be used to name a declaration
cannot decrement expression of type bool
deduced non-type template argument does not have the same type as the its corresponding template parameter%diff{ ($ vs $)|}0,1
exception specifications of %select{return|argument}0 types differ
default template argument in a class template partial specialization
addition of default argument on redeclaration makes this constructor a %select{default|copy|move}0 constructor
default initialization of an object of const type %0%select{| requires a user-provided default constructor}1
'default' statement not in switch statement
the parameter for an explicitly-defaulted copy assignment operator must be an lvalue reference type
the parameter for this explicitly-defaulted copy %select{constructor|assignment operator}0 is const, but a member or base requires it to be non-const
the parameter for an explicitly-defaulted move %select{constructor|assignment operator}0 may not be const
an explicitly-defaulted %select{|copy |move }0constructor cannot have default arguments
an explicitly-defaulted %select{copy|move}0 assignment operator may not have 'const'%select{, 'constexpr'|}1 or 'volatile' qualifiers
explicitly-defaulted %select{copy|move}0 assignment operator must return %1
an explicitly-defaulted %select{|copy |move }0constructor cannot be variadic
the parameter for an explicitly-defaulted %select{<<ERROR>>|copy constructor|move constructor|copy assignment operator|move assignment operator|<<ERROR>>}0 may not be volatile
definition of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0
definition of implicitly declared %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}1
delegating constructors are permitted only in C++11
an initializer for a delegating constructor must appear alone
converting delete expression from type %0 to type %1 invokes an explicit conversion function
deleting incomplete class type %0; no conversions to pointer type
cannot delete expression of type %0
deleted definition must be first declaration
attempt to use a deleted function
'main' is not allowed to be deleted
deleted function %0 cannot override a non-deleted function
nested name specifier for a declaration cannot depend on a template parameter
non-type template argument depends on a template parameter of the partial specialization
%select{declaration|definition}0 of %select{struct|interface|union|class|enum}1 in a dependent scope
non-type template argument specializes a template parameter with dependent type %0
dereference of pointer to incomplete type %0
designator in initializer for scalar type %0
designator into flexible array member subobject
destructor cannot be declared '%0'
expected the class name after '~' to name a destructor
destructor type %0 in object destruction expression does not match the type %1 of the object being destroyed
expected the class name after '~' to name the enclosing class
destructor must be a non-static member function
destructor cannot be redeclared
destructor cannot have a return type
destructor cannot be declared as a template
destructor cannot be declared using a %select{typedef|type alias}1 %0 of the class name
destructor cannot be variadic
destructor cannot have any parameters
declaration of %0 has a different language linkage
virtual function %0 has a different return type %diff{($) than the function it overrides (which has return type $)|than the function it overrides}1,2
dimension expression does not evaluate to a constant unsigned int
exception specifications are not allowed beyond a single level of indirection
use of type 'double' requires the -fnative-double option to be enabled
use of type 'double' requires cl_khr_fp64 extension to be enabled
cannot cast %select{private|protected}2 base class %1 to %0
Cannot downconvert and widen scalar type %0 to vector type %1
%select{destructor reference|pseudo-destructor expression}0 must be called immediately with '()'
reimplementation of category %1 for class %0
reimplementation of class %0
base class %0 specified more than once as a direct base class
duplicate case value '%0'
duplicate case value: '%0' and '%1' both equal '%2'
duplicate interface definition for class %0
instance variable is already declared
definition with same mangled name as another definition
duplicate member %0
duplicate declaration of method %0
property has a previous declaration
catch-all handler must come last
ISO C requires a named argument before '...'
only function and template parameters can be parameter packs
scalar initializer cannot be empty
'enable_if' attribute expression never produces a constant expression
reference to %select{|scoped }0enumeration must use 'enum' not 'enum class'
non-integral type %0 is an invalid underlying type
enumeration previously declared with %select{non|}0fixed underlying type
enumeration previously declared as %select{un|}0scoped
enumeration redeclared with different underlying type %0 (was %1)
enumerator %0 does not exist in instantiation of %1
enumerator value is not representable in the underlying type %0
enumerator value %0 is not representable in the underlying type %1
the event_t type can only be used with __private address space qualifier
the event_t type cannot be used to declare a program scope variable
the event_t type cannot be used to declare a structure or union field
exception specifications are not allowed in %select{typedefs|type aliases}0
cannot use '%0' with exceptions disabled
excess elements in %select{array|vector|scalar|union|struct}0 initializer
excess elements in char array initializer
%0 is not a class%select{ or namespace|, namespace, or scoped enumeration}1
expected a class or namespace
kernel must have void return type
partial ordering for explicit instantiation of %0 is ambiguous
explicit instantiation cannot be 'constexpr'
explicit instantiation refers to static data member %q0 that is not an instantiation
explicit instantiation declaration (with 'extern') follows explicit instantiation definition (without 'extern')
duplicate explicit instantiation of %0
explicit instantiation of %0 in class scope
explicit instantiation cannot be 'inline'
explicit instantiation refers to member function %q0 that is not an instantiation
explicit instantiation of %0 must occur at global scope
explicit instantiation of non-templated type %0
explicit instantiation of %0 does not refer to a function template, variable template, member function, member class, or static data member
explicit instantiation of typedef %0
explicit instantiation of %0 not in a namespace enclosing %1
explicit instantiation declaration requires a name
explicit instantiation cannot have a storage class
explicit instantiation of undefined function template %0
explicit instantiation of undefined %select{member class|member function|static data member}0 %1 of class template %2
explicit instantiation of undefined variable template %q0
explicit instantiation of %q0 must occur in namespace %1
explicit instantiation of %q0 must specify a template argument list
'explicit' can only be applied to a constructor or conversion function
'explicit' can only appear on non-static member functions
'explicit' can only be specified inside the class definition
explicit specialization has extraneous, inconsistent storage class '%select{none|extern|static|__private_extern__|auto|register}0'
%select{case value|enumerator value|non-type template argument|array size}0 is not a constant expression
expression is not an %select{integer|integral}0 constant expression
vector component access exceeds type %0
illegal vector component name '%0'
declaration of %1 %select{with C language linkage|in global scope}0 conflicts with declaration %select{in global scope|with C language linkage}0
extern declaration of %0 follows non-extern declaration
control reaches end of non-void block
fallthrough annotation is outside switch statement
clang::fallthrough attribute is only allowed on empty statements
field %0 declared as a function
field designator cannot initialize a %select{non-struct, non-union|non-class}0 type %1
field designator %0 does not refer to a non-static data member
field designator %0 does not refer to any field in type %1
field designator %0 does not refer to any field in type %1; did you mean %2?
field has incomplete type %0
data member instantiated with function type %0
field may not be qualified with an address space
filter expression type should be an integral value not %0
declaration of %0 overrides a '%select{final|sealed}1' function
first argument to 'va_arg' is of type %0 and not 'va_list'
flexible array member %0 not allowed in otherwise empty %select{struct|interface|union|class|enum}1
flexible array member %0 of type %1 with non-trivial destruction
initialization of flexible array member is not allowed
flexible array requires brace-enclosed initializer
flexible array member %0 in a union is not allowed
flexible array member %0 not allowed in %select{struct|interface|union|class|enum}1 which has a virtual base class
'begin' and 'end' must return the same type (got %0 and %1)
cannot use type %0 as a range
invalid range expression of type %0; did you mean to dereference it with '*'?
cannot use incomplete type %0 as a range
invalid range expression of type %0; no viable '%select{begin|end}1' function available
cannot use type %0 as an iterator
range type %0 has '%select{begin|end}1' member but no '%select{end|begin}1' member
loop variable %0 may not be declared %select{'extern'|'static'|'__private_extern__'|'auto'|'register'|'constexpr'}1
format attribute cannot specify the implicit this argument as the format string
format argument not %0
format attribute requires variadic function
function does not return %0
strftime format attribute requires 3rd parameter to be 0
ISO C++ forbids forward references to 'enum' types
attempting to use the forward class %0 as superclass of %1
friend declaration of %0 does not match any declaration in %1
friend declaration specifying a default argument must be a definition
friend declaration specifying a default argument must be the only declaration
friend function cannot be defined in a local class
friends cannot be members of the declaring class
'friend' must appear first in a non-function declaration
incomplete result type %0 in function definition
function cannot return %select{array|function}0 type %1
%0 marked 'override' but does not override any member functions
type %0 of function parameter pack does not contain any unexpanded parameter packs
cannot specialize a function %0 within class scope
function template partial specialization is not allowed
function template specialization %0 ambiguously refers to more than one function template; explicitly specify%select{| additional}1 template arguments to identify a particular function template
no function template matches function template specialization %0
weak attribute declared on a __strong type property in GC mode
controlling expression type %0 compatible with %1 generic association types
controlling expression type %0 not compatible with any generic association type
no getter method for read from property
call to global function %0 not configured
goto into protected scope
type argument of iboutletcollection attribute cannot be a builtin type
invalid type %0 as argument of iboutletcollection attribute
ambiguous conversion from type %0 to an integral or unscoped enumeration type
integral constant expression requires explicit conversion from %0 to %1
integral constant expression has incomplete class type %0
integral constant expression must have integral or unscoped enumeration type, not %0
integer constant expression evaluates to value %0 that cannot be represented in a %1-bit %select{signed|unsigned}2 integer type
identifier %0 in object destruction expression does not name a type
a parameter list without types is only allowed in a function definition
illegal operation on Objective-C container subscripting
array has incomplete element type %0
'%0' declared as array of %1
'%0' declared as array of functions of type %1
'%0' declared as array of references of type %1
'%0' does not point into a class
'%0' declared as a member pointer to a reference of type %1
'%0' declared as a member pointer to void
'%0' declared as a pointer to a reference of type %1
illegal initializer (only variables can be initialized)
illegal initializer type %0
Objective-C message has incomplete result type %0
illegal qualifiers on @catch parameter
%select{anonymous struct|union}0 member %1 has a non-trivial %select{constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
imaginary types are not supported
initializer for aggregate with no elements requires explicit braces
implicit instantiation of undefined member %0
cannot initialize object parameter of type %0 with an expression of type %1
cannot deduce type of initializer list because std::initializer_list was not found; include <initializer_list>
static data member of type %0 must be initialized out of line
in-class initializer for static data member of type %0 requires 'constexpr' specifier
non-const static data member must be initialized out of line
in-class initializer for static data member is not a constant expression
defaulted default constructor of %0 cannot be used by non-static data member initializer which appears before end of class definition
static const volatile data member must be initialized out of line
target exception specification is not superset of source
base class has incomplete type
%select{|pointer to |reference to }0incomplete type %1 is not allowed in exception specification
member access into incomplete type %0
incomplete type %0 named in nested name specifier
incomplete type in call to object of type %0
incomplete receiver type %0
cannot synthesize property %0 with incomplete type %1
incomplete type %0 where a complete type is required
'@encode' of incomplete type %0
incomplete type %0 used in type trait expression
'typeid' of incomplete type %0
inconsistent number of instance variables specified
defaulted definition of %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator}0 is not constexpr
exception specification of explicitly defaulted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 does not match the calculated one
number of elements must be either one or match the size of the vector
cannot increment expression of type bool
cannot %select{decrement|increment}0 expression of enum type %1
indirect goto might cross protected scopes
indirect goto in function with no address-of-label expressions
cannot deduce type for lambda capture %0 from initializer of type %2
cannot deduce type for lambda capture %0 from initializer list
initializer for lambda capture %0 contains multiple expressions
initializer missing for lambda capture %0
cannot initialize %select{a variable|a parameter|return object|an exception object|a member subobject|an array element|a new value|a value|a base class|a constructor delegation|a vector element|a block element|a complex element|a lambda capture|a compound literal initializer|a related result|a parameter of CF audited function}0 %diff{of type $ with an %select{rvalue|lvalue}2 of type $|with an %select{rvalue|lvalue}2 of incompatible type}1,3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)}4
initializer element is not a compile-time constant
initialization of incomplete type %0
%select{|non-aggregate }0type %1 cannot be initialized with an initializer list
init methods must return an object pointer type, not %0
initialization of non-aggregate type %0 with an initializer list
cannot initialize Objective-C class type %0
can only use 'init_priority' attribute on file-scope definitions of objects of class type
reference member of type %0 uninitialized
initializer-string for char array is too long
inline declaration of %0 not allowed in block scope
'main' is not allowed to be declared inline
%select{|non-}0inline namespace cannot be reopened as %select{non-|}0inline
'inline' can only appear on functions
__int128 is not supported on this target
invalid block pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
must use a qualified name when declaring a %select{constructor|destructor|conversion operator}0 as a friend
invalid use of a cast in a inline asm context requiring an l-value: remove the cast or build with -fheinous-gnu-extensions
invalid reinterpretation: sizes of %0 and %1 must match
invalid astype %0 type '%1'
invalid literal as argument of %0 attribute
argument not in range %0 - %1 for attribute %2
invalid type as argument of %0 attribute
interface type cannot inherit from %select{'struct|non-public 'interface|'class}0 %1'
collection element of type %0 is not an Objective-C object
%select{function parameter|typedef|non-static data member}0 cannot be constexpr
non-static data member cannot be constexpr%select{; did you intend to make it %select{const|static}0?|}1
constexpr variable declaration must be a definition
invalid conversion between ext-vector type %0 and %1
invalid conversion between vector type %0 and integer type %1 of different size
invalid conversion between vector type %0 and scalar type %1
invalid conversion between vector type%diff{ $ and $|}0,1 of different size
definition or redeclaration of %0 cannot name the global scope
definition or redeclaration of %0 not allowed inside a block
definition or redeclaration of %0 not allowed inside a function
cannot define or redeclare %0 here because namespace %1 does not enclose namespace %2
cannot create a non-constant pointer to member function
invalid use of incomplete type %0
%select{data member |non-public member function |static member function |user-declared constructor|user-declared destructor|operator |nested class }0%1 is not permitted within an interface type
invalid use of member %0 in static member function
'%0' depth qualifier invalid
invalid metal::patch_control_point template type '%0'; must be '%1'
%0 attribute number of control point must be known on osx
%0 attribute's patch_type '%1' is invalid; must be 'quad' or 'triangle' 
'%0' attribute's type '%1' is invalid; '%2' patches must be '%3'
incompatible constant for this __builtin_neon function
invalid use of non-static data member %0
%0 is not a valid literal type for NSNumber
invalid PCS type
%0 is not a valid property name (accessing an object of type %1)
invalid protocol qualifiers on non-ObjC type
'%0' qualifier is not allowed on a constructor
'%0' qualifier is not allowed on a destructor
%select{static |non-}0member function %select{of type %2 |}1cannot have '%3' qualifier
receiver type %0 is not an Objective-C class
'super' is only valid in a method body
invalid use of 'this' outside of a non-static member function
'%0' is only allowed on variable declarations
an array type is not allowed here
a function type is not allowed here
type %2 of %select{explicit instantiation|explicit specialization|partial specialization|redeclaration}0 of %1 does not match expected type %3
all vector initializers must be of vector type or scalar, but not mixed
property %0 not found on object of type %1; did you mean to access instance variable %2?
instance variables cannot be of reference type
kernel call to non-global function %0
kernel function type %0 must have void return type
kernel pointer arguments must have a global, local, or constant address space qualifier
unnamed variable cannot be implicitly captured in a lambda expression
lambda expression in default argument cannot capture any entity
variable %0 with flexible array member cannot be captured in a lambda expression
variable %0 with variably modified type cannot be captured in a lambda expression
cannot assign to a variable captured by copy in a non-mutable lambda
variable %0 cannot be implicitly captured in a lambda with no capture-default specified
a lambda expression may not appear inside of a constant expression
incomplete result type %0 in lambda expression
cannot deduce lambda return type from initializer list
lambda expression in an unevaluated operand
literal operator cannot have a default argument
literal operator must have C++ linkage
non-namespace scope '%0' cannot have a literal operator member
literal operator %0 must be in a namespace or global scope
parameter declaration for literal operator %0 is not valid
'__local' variable cannot have an initializer
%select{non-const|volatile}0 lvalue reference to type %1 cannot bind to an initializer list temporary
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a temporary of type $|cannot bind to incompatible temporary}1,2
%select{non-const|volatile}0 lvalue reference %diff{to type $ cannot bind to a value of unrelated type $|cannot bind to a value of unrelated type}1,2
rvalue reference %diff{to type $ cannot bind to lvalue of type $|cannot bind to incompatible lvalue}0,1
%select{unknown|unsupported}0 machine mode %1
%select{first|second|third|fourth}0 parameter of 'main' (%select{argument count|argument array|environment|platform-specific data}0) must be of type %1
'main' must return 'int'
too many parameters (%0) for 'main': must be 0, 2, or 3
%0 cannot be a template
std::initializer_list must be a class template with a single type parameter
control may reach end of non-void block
member initializer %0 does not name a non-static data member or base class
initializer %0 does not name a non-static data member or base class; did you mean the %select{base class|member}1 %2?
call to non-static member function without an object argument
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1
out-of-line %select{declaration|definition}2 of %0 does not match any declaration in %1; did you mean %3?
return type of out-of-line definition of %q0 differs from that in the declaration
out-of-line definition of %0 from class %1 without definition
extra qualification on member %0
member function %0 not viable: 'this' argument has type %1, but function is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}2
initializer on function does not look like a pure-specifier
member %0 has the same name as its class
no member %0 in %1; it has not yet been instantiated
non-friend class member %0 cannot have a qualified name
class member cannot be redeclared
multiple overloads of %0 instantiate to the same signature %1
base of member reference is a function; perhaps you meant to call it%select{| with no arguments}0?
member pointer refers into non-class type %0
conversion from pointer to member of class %0 to pointer to member of class %1 via virtual base %2 is not allowed
%0 attribute valid only on %1 functions
%0 attribute already specified
%0 attribute must be between 0 to %1
%0 attribute is only valid on parameter in device or constant address space
%0 attribute must be of type %1
type %0 is not valid for attribute %1 because field '%2' has invalid type %3
%0 attribute is only valid on %select{buffer|texture|sampler|threadgroup}1 parameter
%0 attribute must be of type ushort or uint
%0 attribute must be of type ushort, ushort2, ushort3, uint, uint2, or uint3
type %0 is not valid for attribute %1
%0 attribute must be of type ushort%1 or uint%1
%0 attribute must be of type uint
attribute '%0' is supported only on %1
parameter with attribute %0 must be of type ushort if %1 is of type ushort
invalid type %0 for buffer
%0 attribute requires metal language to be %1.%2 or higher
%0 attribute can not be defined on a parameter with %1 attribute
parameters with attributes %0 and %1 must have matching types
parameters with attributes %0 and %1 must have the same number of vector components
metal %select{kernel|vertex_fetch|vertex|fragment}0 function %1 cannot be called
%0 attribute must be used with a depth-qualifier parameter
%select{pointer|reference}0 argument to fragment function must be const
'%0' attribute must be specified with '%1' attribute
inconsistent types for color attachment %0
%0 attribute not allowed for integer and double types, the only valid interpolation qualifier is flat
invalid metal address space for argument '%0' to %select{kernel|vertex_fetch|vertex|fragment}1 function
vertex_fetch shader may not have %0 attribute
blend source index %0 cannot be specified for color attachment %1
constant sampler must be declared constexpr
constant sampler initializer has an invalid parameter
invalid values combination in sampler initialization
%select{kernel|vertex_fetch|vertex|fragment|shader}0 function has invalid argument type %1
%select{kernel|vertex_fetch|vertex|fragment|shader}0 function has invalid return type %1
invalid field type %0 for struct argument
number of constant buffers exceeds maximum supported (%0)
size of constant buffer cannot exceed %0
number of patch-data attributes exceeds maximum supported (%0)
%select{pointer|reference}0 type must include device, threadgroup, constant, or thread address space qualifier
depth attribute cannot be used in a fragment shader with early_fragment_tests
cannot use the %0 attribute on more than one parameter
stage_in input '%0' must be marked with 'attribute(index)'
stage_in attribute valid only on input parameters on fragment and vertex shader
texture with write access is invalid as a parameter to a %select{vertex|fragment}0 function
parameter with attribute 'thread_index_in_threadgroup' must be of type uint if 'thread_position_in_threadgroup' is of type uint, uint2, or uint3
vertex_fetch shader may not return void
variable length arrays are not supported in Metal
exception specification in declaration does not match previous declaration
visibility does not match previous declaration
instance variables may not be placed in %select{categories|class extension}0
string literal must be prefixed by '@' 
%select{|implicit default |inheriting }0constructor for %1 must explicitly initialize the %select{base class|member}2 %3 which does not have a default constructor
%0 parameter must have %select{buffer|texture|sampler|threadgroup}1 attribute
missing '[' at start of message send expression
C++ requires a type specifier for all declarations
mode attribute only supported for integer and floating-point types
type of machine mode does not match type of base type
declaration of %0 must be imported from module '%1' before it is required
definition of %0 must be imported from module '%1' before it is required
%select{local variable|parameter|typedef}0 %1 cannot be declared __module_private__
local %select{struct|interface|union|class|enum}0 cannot be declared __module_private__
%select{template|partial|member}0 specialization cannot be declared __module_private__
argument %0 must have a read_only access qualifier
multiple initializations given for base %0
multiple default labels in one switch
virtual function %q0 has more than one final overrider in %1
multiple initializations given for non-static member %0
initializing multiple members of union
'mutable' and 'const' cannot be mixed
'mutable' cannot be applied to functions
'mutable' can only be applied to member variables
'mutable' cannot be applied to references
you need to include <guiddef.h> before using the '__uuidof' operator
you need to include <typeinfo> before using the 'typeid' operator
lookup of %0 in member access expression is ambiguous
type %0 cannot be used prior to '::' because it has no members
%select{call to non-static member function|use of non-static data member}0 %2 of %1 from nested type %3
nested redefinition of %0
array 'new' cannot have initialization arguments
only the first dimension of an allocated array may have dynamic size
cannot allocate array of 'auto'
allocation of incomplete type %0
no %select{getter|setter}0 defined for property %1
'no '%0' resource location available for '%1'
cannot use dynamic_cast with -fno-rtti
no matching function found in local scope
no matching function %0 found in local scope; did you mean %3?
no member named %0 in %1
no member named %0 in %1; did you mean to use '->' instead of '.'?
no member named %0 in %1; did you mean %select{|simply }2%3?
no template named %0 in %1; did you mean %select{|simply }2%3?
cannot find interface declaration for %0
no suitable member %0 in %1
no template named %0; did you mean %1?
cannot use typeid with -fno-rtti
argument to noexcept specifier must be a constant expression
a getter method is needed to perform a compound assignment on a property
no getter method %1 for %select{increment|decrement}0 of property
non-deleted function %0 cannot override a deleted function
non-extern declaration of %0 follows extern declaration
declaration of non-local variable in 'for' loop
non-static declaration of %0 follows static declaration
non-thread-local declaration of %0 follows thread-local declaration
qualified name refers into a specialization of %select{function|variable}0 template %1
non-variable declaration in 'for' loop
%0 is not virtual and cannot be declared pure
block pointer to non-function type is invalid
non-static data member defined out-of-line
block declared 'noreturn' should not return
lambda declared 'noreturn' should not return
function declared '[[noreturn]]' after its first declaration
'_Noreturn' can only appear on functions
%select{assignment to readonly property|no setter method %1 for assignment to property}0
%select{%select{increment|decrement}1 of readonly property|no setter method %2 for %select{increment|decrement}1 of property}0
cannot specialize a %select{dependent template|template template parameter}0
type %0 is not a direct or virtual base of %1
call to function %0 that is neither visible in the template definition nor found by argument-dependent lookup
anonymous bit-field has non-integral type %0
bit-field %0 has non-integral type %1
no %select{struct|interface|union|class|enum}0 named %1 in %2
overriding method has mismatched ns_consumed attribute on its parameter
'NSObject' attribute is for pointer types only
overriding method has mismatched ns_returns_%select{not_retained|retained}0 attributes
array of interface %0 is invalid (probably should be an array of pointers)
parameter of %0 attribute must be a single name of an Objective-C %select{class|protocol}1
could not find Objective-C class %0 to convert %1 to %2
%0 must be name of an Objective-C class to be able to convert %1 to %2
%0 must be explicitly converted to %1; use %select{%objcclass2|%objcinstance2}3 method for this conversion
CF object of type %0 is bridged to %1, which is not an Objective-C class
Objective-C declarations may only appear in global scope
cannot use '%0' with Objective-C exceptions disabled
illegal type %0 used in a boxed expression
incomplete type %0 used in a boxed expression
Objective-C index expression has incomplete class type %0
method for accessing %select{dictionary|array}1 element must have Objective-C object return type instead of %0
literal construction method %0 has incompatible signature
indexing expression is invalid because subscript type %0 has multiple type conversion functions
ObjectiveC object of type %0 is bridged to %1, which is not valid CF object
cannot assign to class object (%0 invalid)
can't catch an Objective-C object by value
objc_precise_lifetime only applies to retainable types; type here is %0
property attributes '%0' and '%1' are mutually exclusive
property with '%0' attribute must be of object type
objc_root_class attribute may only be specified on a root class declaration
%select{dictionary|array}1 subscript base type %0 is not an Objective-C object
method object parameter type %0 is not object type
method index parameter type %0 is not integral type
method key parameter type %0 is not object type
expected method to %select{read|write}1 %select{dictionary|array}2 element not found on object of type %0
cannot assign to this %select{dictionary|array}1 because assigning method's 2nd parameter of type %0 is not an Objective-C pointer type
indexing expression is invalid because subscript type %0 is not an Objective-C pointer
indexing expression is invalid because subscript type %0 is not an integral or Objective-C pointer type
cannot declare variable inside @interface or @protocol
interface type %1 cannot be %select{returned|passed}0 by value; did you forget * in %1?
offsetof requires array type, %0 invalid
cannot compute offset of bit-field %0
invalid application of 'offsetof' to a field of a virtual base
offsetof of incomplete type %0
offsetof requires struct, union, or class type, %0 invalid
arguments of OpenMP clause '%0' cannot be of reference type %1
%0 is not a global variable, static local variable or static data member
%0 is not a global variable, static local variable or static data member; did you mean %1
expected variable name
a firstprivate variable with incomplete type %0
arguments of '#pragma omp %0' must have %select{global storage|static storage duration}1
variable %0 must have explicitly specified data sharing attributes
a private variable with incomplete type %0
arguments of '#pragma omp %0' cannot be of reference type %1
%0 variable must have an accessible, unambiguous %select{default constructor|copy constructor|copy assignment operator|'%2'|destructor}1
threadprivate variable with incomplete type %0
expected %0 in OpenMP clause '%1'
'#pragma omp %0' must appear in the scope of the %q1 variable declaration
variable %0 cannot be threadprivate because it is thread-local
'#pragma omp %0' must precede all references to variable %q1
%0 variable cannot be %1
access specifier can only have annotation attributes
only constructors take base initializers
only enumeration types have underlying types
bitfields are not supported in OpenCL
casting to type %0 is not allowed
variable in constant address space must be initialized
pointers to functions are not allowed
global variables must have a constant address space qualifier
declaring function argument of type %0 is not allowed; did you forget * ?
declaring variable of type %0 is not allowed
%select{loading directly from|assigning directly to}0 pointer to type %1 is not allowed
declaring function return value of type %0 is not allowed; did you forget * ?
attribute %0 can only be applied to a kernel function
%select{function|kernel}0 cannot be called 'main'
kernel parameter cannot be declared as a pointer to the __private address space
kernel parameter cannot be declared as a pointer to a pointer
return value cannot be qualified with address space
invalid application of '%select{sizeof|alignof|vec_step}0' to a void type
taking address of function is not allowed
variable length arrays are not supported in OpenCL
circular pointer delegation detected
use of 'operator->' on type %0 would invoke a sequence of more than %1 'operator->' calls
%0 cannot take a dependent type as first parameter; use %1 instead
first parameter of %0 must have type %1
parameter of %0 cannot have a default argument
%0 cannot be declared inside a namespace
%0 cannot be declared static in global scope
%0 cannot have a dependent return type; use %1 instead
%0 must return type %1
%0 template must have at least two parameters
%0 must have at least one parameter
%0 cannot take a dependent type as first parameter; use size_t (%1) instead
%0 takes type size_t (%1) as first parameter
parameter of overloaded %0 cannot have a default argument
overloaded %0 must be a %select{unary|binary|unary or binary}2 operator (has %1 parameter%s1)
overloaded %0 must be a non-static member function
overloaded %0 must have at least one parameter of class or enumeration type
parameter of overloaded post-%select{increment|decrement}1 operator must have type 'int' (not %0)
overloaded %0 cannot be a static member function
overloaded %0 cannot be variadic
defaulting this %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 would delete it after its first declaration
exception specification of overriding function is more lax than base version
call to %0 is ambiguous
ambiguous conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
call to constructor of %0 is ambiguous
call to member function %0 is ambiguous
call to object of type %0 is ambiguous
use of overloaded operator '%0' is ambiguous (with operand types %1 and %2)
use of overloaded operator '%0' is ambiguous (operand type %1)
call to %select{unavailable|deleted}0 function %1%2
%select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2 uses deleted function
call to %select{unavailable|deleted}0 constructor of %1
call to %select{unavailable|deleted}0 member function %1%2
call to %select{unavailable|deleted}0 function call operator in type %1%2
overload resolution selected %select{unavailable|deleted}0 operator '%1'%2
call to implicitly-deleted %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor|function}0 of %1
object of type %0 cannot be %select{constructed|copied|moved|assigned|assigned|destroyed}1 because its %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}1 is implicitly deleted
functions that differ only in their return type cannot be overloaded
cannot convert %1 to %2 without a conversion operator
type %0 does not provide a %select{subscript|call}1 operator
no matching conversion for %select{|static_cast|reinterpret_cast|dynamic_cast|C-style cast|functional-style cast}0 from %1 to %2
no matching function for call to %0
no matching constructor for initialization of %0
no matching literal operator for call to %0%select{| with argument of type %2| with arguments of types %2 and %3}1%select{| or 'const char *'}4%select{|, and no matching literal operator template}5
no matching member function for call to %0
no matching function for call to object of type %0
no viable overloaded '%0'
no viable overloaded operator[] for type %0
static and non-static member functions with the same parameter types cannot be overloaded
reference to overloaded function could not be resolved; did you mean to call it%select{| with no arguments}0?
%0 attribute only applies to %select{pointer|integer}1 arguments
pack expansion contains parameter packs %0 and %1 that have different lengths (%2 vs. %3)
pack expansion contains parameter pack %0 that has a different length (%1 vs. %2) from outer parameter packs
pack expansion for initialization of member %0
pack expansion does not contain any unexpanded parameter packs
C does not support default arguments
default arguments cannot be added to an out-of-line definition of a member of a %select{class template|class template partial specialization|nested class in a template}0
missing default argument on parameter
missing default argument on parameter %0
default arguments can only be specified for parameters in a function declaration
redefinition of default argument
default argument references local variable %0 of enclosing function
default argument references parameter %0
default argument references 'this'
default arguments cannot be added to a function template that has already been declared
empty parameter list defined with a %select{typedef|type alias}0 of 'void' not allowed%select{ in C++|}0
argument may not have 'void' type
parameter name omitted
%select{parameters|function return value}0 cannot have __fp16 type; did you forget * ?
cannot parenthesize the name of a method when forming a member pointer
%select{class|variable}0 template partial specialization does not specialize any template argument; to %select{declare|define}1 the primary template, remove the template argument list
partial specialization of %0 does not use any of its template parameters
ambiguous partial specializations of %0
class template partial specialization %0 cannot be redeclared
partial specialization cannot be declared as a friend
'new' expression with placement arguments refers to non-placement 'operator delete'
call to pointer to member function of type %0 drops '%1' qualifier%s2
pointer-to-member function type %0 can only be called on an %select{rvalue|lvalue}1
invalid use of pointer to member type after %select{.*|->*}0
mac68k alignment pragma is not supported on this target
#pragma visibility pop with no matching #pragma visibility push
#pragma visibility push with no matching #pragma visibility pop
property %0 found on object of type %1; did you mean to access it with the "." operator?
property %0 has a variably modified type
property %0 refers to an incomplete Objective-C class %1 (with no @interface available)
property %0 not found on object of type %1
property %0 cannot be found in forward class object %1
property %0 not found on object of type %1; did you mean %2?
property cannot have array or function type %0
protocol has circular dependency
object expression of non-scalar type %0 cannot be used in a pseudo-destructor expression
call to pseudo-destructor cannot have any arguments
%0 does not refer to a type name in pseudo-destructor expression; expected the name of type %1
the type of object expression %diff{($) does not match the type being destroyed ($)|does not match the type being destroyed}0,1 in pseudo-destructor expression
exception declarator cannot be qualified
friend function definition cannot be qualified with '%0'
no function named %0 with type %1 was found in the specified scope
qualified member access refers to a member in %0
%q0 is not a member of class %1
%select{property|instance variable}0 access cannot be qualified with '%1'
@catch parameter declarator cannot be qualified
parameter declarator cannot be qualified
typedef declarator cannot be qualified
cannot build range expression with array function parameter %0 since parameter with array type %1 is treated as pointer type %2
argument %0 must have either a read_only or read_write access qualifier
invalid type %0 to %1 operator
%select{struct|union}0 kernel parameters may not contain pointers
trying to recursively use %0 as superclass of %1
redefinition of %0
redefinition of %0 as different kind of symbol
redefinition of %0 with a different type%diff{: $ vs $|}1,2
%select{typedef|type alias|type alias template}0 redefinition with different types%diff{ ($ vs $)|}1,2
redefinition of a 'extern inline' function %0 is not supported in %select{C99 mode|C++}1
redefinition of enumerator %0
redefinition of label %0
redefinition of %select{typedef|type alias}0 for variably-modified type %1
cannot refer to declaration with an array type inside block
reference to %select{__device__|__global__|__host__|__host__ __device__}0 function %1 in %select{__device__|__global__|__host__|__host__ __device__}2 function
cannot refer to declaration of structure variable with flexible array member inside block
reference initialization of type %0 with initializer of type %1 is ambiguous
%0 does not refer to a value
ref-qualifier '%select{&&|&}0' is not allowed on a constructor
ref-qualifier '%select{&&|&}0' is not allowed on a destructor
cannot overload a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}0 with a member function %select{without a ref-qualifier|with ref-qualifier '&'|with ref-qualifier '&&'}1
cannot refer to declaration with a variably modified type inside block
binding of reference %diff{to type $ to a value of type $ drops qualifiers|drops qualifiers}0,1
reference %diff{to type $ could not bind to an %select{rvalue|lvalue}1 of type $|could not bind to %select{rvalue|lvalue}1 of incompatible type}0,2
reference to type %0 cannot bind to an initializer list
%select{non-const|volatile}0 reference cannot bind to bit-field%select{| %1}2
%select{non-const|volatile}0 reference cannot bind to vector element
'&' cannot precede a capture when the capture default is '&'
reference cannot be initialized with multiple values
reference to local variable %0 declared in enclosing block literal
reference to local variable %0 declared in enclosing context
reference to local variable %0 declared in enclosing function %1
reference to local variable %0 declared in enclosing lambda expression
cannot form a reference to 'void'
declaration of reference variable %0 requires an initializer
reference to type %0 requires an initializer
function declared with regparm(%0) attribute was previously declared %plural{0:without the regparm|:with the regparm(%1)}1 attribute
%0 attribute cannot be repeated
'%0' has a duplicate index '%1'
returning block that lives on the local stack
void block should not return a value
cannot return from %0
return in the catch of a function try block of a constructor is illegal
%select{void function|void method|constructor|destructor}1 %0 must not return a value
function declared with the ns_returns_retained attribute was previously declared without the ns_returns_retained attribute
rvalue reference type %0 is not allowed in exception specification
sampler_t variable required - got %0
second argument to 'va_arg' is of abstract type %0
second argument to 'va_arg' is of incomplete type %0
chosen constructor is explicit in copy-initialization
selector element of type %0 cannot be a constant l-value expression
selector element is not a valid lvalue
selector element type %0 is not a valid object
type of setter must be void
index for __builtin_shufflevector must be less than the total number of vector elements
first two arguments to __builtin_shufflevector must have the same type
first two arguments to __builtin_shufflevector must be vectors
index for __builtin_shufflevector must be a constant integer
invalid application of '%select{sizeof|alignof}0' to bit-field
invalid application of '%select{sizeof|alignof|vec_step}0' to a function type
invalid application of '%select{sizeof|alignof|vec_step}0' to an incomplete type %1
application of '%select{alignof|sizeof}1' to interface %0 is not supported on this architecture and platform
%0 does not refer to the name of a parameter pack
%0 does not refer to the name of a parameter pack; did you mean %1?
specialization of member %q0 does not specialize an instantiated member
explicit specialization of %0 after instantiation
cannot specialize (with 'template<>') a member of an unspecialized template
forward declaration of %select{class|struct|interface|union|enum}0 cannot have a nested name specifier
static_assert expression is not an integral constant expression
static_assert failed %0
function declared in block scope cannot have 'static' storage class
static data member %0 not allowed in anonymous struct
static data member %0 not allowed in local class %1
static data member %0 already has an initializer
cannot cast %0 to %1 via virtual base %2
fragment functions cannot be declared static
variables in function scope cannot be declared static
the 'static' modifier for the array size is not legal in new expressions
kernel functions cannot be declared static
'main' is not allowed to be declared static
static declaration of %0 follows non-static declaration
static member %0 cannot be a bit-field
'static' can only be specified inside the class definition
'static' member function %0 overrides a virtual function in a base class
vertex functions cannot be declared static
interface type cannot be statically allocated
statement expression not allowed at file scope
static data member definition cannot specify a storage class
@catch parameter cannot have storage specifier '%0'
storage class specified for a member declaration
subscript of pointer to function type %0
subscript of pointer to incomplete type %0
subscript requires size of interface %0, which is not constant for this architecture and platform
switch condition type %0 requires explicit conversion to %1
switch condition has incomplete class type %0
switch case is in protected scope
multiple conversions from switch condition type %0 to an integral or enumeration type
definition of type %0 conflicts with %select{typedef|type alias}1 of the same name
implicit declaration introduced by elaborated type conflicts with %select{a declaration|a typedef|a type alias|a template}0 of the same name
elaborated type refers to %select{a non-tag type|a typedef|a type alias|a template|a type alias template}0
friend type templates must use an elaborated type
ambiguous constructor call when %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
%select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1 invokes deleted constructor
copying a temporary object of incomplete type %0
no viable constructor %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1
address taken in non-type template argument for template parameter of reference type %0
non-type template argument refers to non-static data member %0
%select{too few|too many}0 template arguments for %select{class template|function template|template template parameter|template}1 %2
non-type template argument refers to non-static member function %0
template argument for non-type template parameter must be an expression
template argument for template template parameter must be a class template%select{| or type alias template}0
template argument for template type parameter must be a type
template argument for template type parameter must be a type; did you forget 'typename'?
non-type template parameter of reference type %diff{$ cannot bind to template argument of type $|cannot bind to template of incompatible argument type}0,1
template argument for non-type template parameter is treated as function type %0
non-type template argument of type %0 is not a constant expression
non-type template argument for template parameter of pointer type %0 must have its address taken
template argument does not refer to a class template or template template parameter
non-type template argument of type %0 cannot be converted to a value of type %1
non-type template argument does not refer to any declaration
non-type template argument of type %0 is not an integral constant expression
non-type template argument of type %0 must have an integral or enumeration type
non-type template argument does not refer to an object or function
non-type template argument is not a pointer to member constant
non-type template argument refers to %select{function|object}0 %1 that does not have linkage
template argument is the type of an unresolved overloaded function
reference binding of non-type template parameter %diff{of type $ to template argument of type $|to template argument}0,1 ignores qualifiers
non-type template argument of reference type %0 is not an object
template template argument has different template parameters than its corresponding template template parameter
non-type template argument refers to thread-local object
null non-type template argument must be cast to template parameter type %0
null non-type template argument of type %0 does not match template parameter of type %1
cannot refer to %select{class|variable}0 template %1 without a template argument list
template name refers to non-type template %0
templates cannot be declared inside of a local class
%select{implicit|explicit}0 instantiation of undefined template %1
%select{implicit|explicit}0 instantiation of template %1 within its own definition
missing 'template' keyword prior to dependent template name '%0%1'
'%0%1' instantiated to a class template, not a function template
%0 following the 'template' keyword does not refer to a template
templates must have C++ linkage
member %0 declared as a template
extraneous 'template<>' in declaration of member %0
use of class template %0 requires template arguments
a non-type template parameter cannot have type %0
template non-type parameter has a different type %0 in template %select{|template parameter }1redeclaration
templates can only be declared in namespace or class scope
template parameter missing a default argument
template parameter redefines default argument
template parameter has a different kind in template %select{|template parameter }0redeclaration
%select{too few|too many}0 template parameters in template %select{|template parameter }1redeclaration
template parameter list matching the non-templated nested type %0 should be empty ('template<>')
template parameter pack cannot have a default argument
template parameter pack must be the last template parameter
declaration of %0 shadows template parameter
default template argument not permitted on a friend template
cannot add a default template argument to the definition of a member of a class template
%select{template type|non-type template|template template}0 parameter%select{| pack}1 conflicts with previous %select{template type|non-type template|template template}0 parameter%select{ pack|}1
nested name specifier '%0' for declaration does not refer into a class, class template or class template partial specialization
recursive template instantiation exceeded maximum depth of %0
explicit specialization of %0 in class scope
cannot declare an explicit specialization in a friend
explicit specialization of %0 in function scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must originally be declared in namespace %2
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must originally be declared in the global scope
default argument not permitted on an explicit %select{instantiation|specialization}0 of function %1
extraneous template parameter list in template specialization or out-of-line template definition
template specialization declaration cannot be a friend
template specialization requires 'template<>'
template specialization or definition requires a template parameter list corresponding to the nested type %0
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 must occur at global scope
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 not in a namespace enclosing %2
can only provide an explicit specialization for a class template, function template, variable template, or a member function, static data member, %select{or member class|member class, or member enumeration}0 of a class template
extraneous 'template<>' in declaration of %0 %1
template template parameter must have its own template parameters
a typedef cannot be a template
cannot declare a class template with no name
extraneous 'template<>' in declaration of variable %0
tentative definition of %0 after alias definition
tentative definition has type %0 that is never completed
'this' cannot be %select{implicitly |}0captured in this context
'this' cannot be explicitly captured when the capture default is '='
'this' cannot be%select{| implicitly}0 used in a static member function declaration
initializer for thread-local variable must be a constant expression
'%0' variables must have global storage
thread-local declaration of %0 follows non-thread-local declaration
type of thread-local variable has non-trivial destruction
thread-local declaration of %0 with %select{static|dynamic}1 initialization follows declaration with %select{dynamic|static}1 initialization
thread-local storage is unsupported for the current target
cannot throw an object of abstract type %0
cannot throw object of incomplete type %0
cannot throw pointer to object of incomplete type %0
only one element declaration is allowed
trailing return type may not be nested within parentheses
function with trailing return type must specify return type 'auto', not %0
%0 can not be defined in a type alias template
types may not be defined in conditions
types may not be defined in a for range declaration
%0 can not be defined in a parameter type
%0 can not be defined in the result type of a function
%0 can not be defined in a type specifier
type of property %0 in class extension does not match property type in primary class
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression
'type_tag_for_datatype' attribute requires the initializer to be an %select{integer|integral}0 constant expression that can be represented by a 64 bit integer
address of %select{bit-field|vector element|property expression|register variable}0 requested
taking the address of a destructor
taking the address of a temporary object of type %0
conversion %diff{from $ to $|between types}0,1 is ambiguous
cannot assign to 'self' outside of a method in the init family
cannot assign to 'self' in a class method
arithmetic on a pointer to an incomplete type %0
fast enumeration variables can't be modified in ARC by default; declare the variable __strong to allow this
array type %0 is not assignable
read-only variable is not assignable
value of type %0 is not contextually convertible to 'bool'
ordered compare requires two args of floating point type%diff{ ($ and $)|}0,1
floating point classification requires argument of floating point type (passed in %0)
called object type %0 is not a function or function pointer
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, at least argument %1 must be specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at least %1, have %2; did you mean %3?
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, single argument %1 was not specified
too few %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected at most %1, have %2; did you mean %3?
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected single argument %1, have %2 arguments
too many %select{|||execution configuration }0arguments to %select{function|block|method|kernel function}0 call, expected %1, have %2; did you mean %3?
cast to incomplete type %0
cast to union type from type %0 not present in union
'__builtin_choose_expr' requires a constant expression
comparison of distinct block types%diff{ ($ and $)|}0,1
comparison of distinct pointer types%diff{ ($ and $)|}0,1
equality comparison between function pointer and void pointer (%0 and %1)
comparison between pointer and integer (%0 and %1)
used type %0 where arithmetic or pointer type is required
used type %0 where arithmetic, pointer, or vector type is required
incompatible operand types%diff{ ($ and $)|}0,1
non-pointer operand type %0 incompatible with %select{NULL|nullptr}1
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3%select{|: different classes%diff{ ($ vs $)|}5,6|: different number of parameters (%5 vs %6)|: type mismatch at %ordinal5 parameter%diff{ ($ vs $)|}6,7|: different return type%diff{ ($ vs $)|}5,6|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}5 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}6)}4
incompatible block pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
value of type %0 is not implicitly convertible to %1
conversion from %0 to %1 is not allowed in a converted constant expression
variable has incomplete type %0
support for type '__float128' is not yet implemented
conversion function %diff{from $ to $|between types}0,1 invokes a deleted function
vector is not assignable (contains duplicate components)
operand of type %0 where arithmetic or pointer type is required
expression is not assignable
fields must have a constant size: 'variable length array in structure' extension will never be supported
cannot %select{decrement|increment}1 value of type %0
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes address space of pointer
%select{%diff{assigning $ to $|assigning to different types}1,0|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 changes retain/release properties of pointer
definition of variable with array type needs an explicit size or an initializer
incomplete definition of type %0
incomplete type %0 is not assignable
indirection requires pointer operand (%0 invalid)
cannot take the address of an rvalue of type %0
extra '&' taking address of overloaded function
invalid operands to binary expression (%0 and %1)
pointer to function type %0 may not be 'restrict' qualified
restrict requires a pointer or reference (%0 is invalid)
restrict requires a pointer or reference
instance variables must have a constant size
assignment to cast is illegal, lvalue casts are not supported
member reference type %0 is not a pointer
%0 does not have a member named %1
%0 does not have a member named %1; did you mean %2?
member reference base type %0 is not a structure or union
member reference type %0 is %select{a|not a}1 pointer; maybe you meant to use '%select{->|.}1'?
cannot refer to type member %0 in %1 with '%select{.|->}2'
cannot refer to member %0 in %1 with '%select{.|->}2'
%diff{return type $ must match previous return type $|return type must match previous return type}0,1 when %select{block literal|lambda expression}2 has unspecified explicit return type
array size is negative
non-object type %0 is not assignable
no viable conversion%diff{ from $ to $|}0,1
no viable conversion%diff{ from $ to incomplete type $|}0,1
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2
arithmetic on%select{ a|}0 pointer%select{|s}0 to void
illegal storage class on file-scoped variable
illegal storage class on function
statement requires expression of integer type (%0 invalid)
statement requires expression of scalar type (%0 invalid)
%diff{$ and $ are not pointers to compatible types|pointers to incompatible types}0,1
array subscript is not an integer
subscripted value is not an array, pointer, or vector
invalid argument type %0 to unary expression
can't convert between vector values of different size (%0 and %1)
can't convert between vector and non-scalar values (%0 and %1)
zero-length arrays are not permitted in C++
unsupported: typedef changes linkage of anonymous type, but linkage was already computed
typedef member %0 cannot be a bit-field
typedef name must be an identifier
missing 'typename' prior to dependent type name '%0%1'
no type named %0 in %1
no type named 'type' in %0; 'enable_if' cannot be used to disable this declaration
typename specifier refers to non-type member %0 in %1
typename specifier refers to a dependent using declaration for a value %0 in %1
%0 is unavailable
%0 is unavailable: %1
%0 has unknown return type; cast the call to its declared return type
no known method %select{%objcinstance1|%objcclass1}0; cast the message send to the method's return type
%0 has unknown type; cast it to its declared type to use it
declaration of %0 is missing in %1 class
use of undeclared label %0
NSArray must be available to use Objective-C array literals
NSDictionary must be available to use Objective-C dictionary literals
NSNumber must be available to use Objective-C literals
cannot box a string value because NSString has not been declared
cannot find protocol declaration for %0
cannot find protocol declaration for %0; did you mean %1?
use of undeclared %0
use of undeclared %0; did you mean %1?
use of undeclared identifier %0
use of undeclared identifier %0; did you mean %1?
cannot find interface declaration for %0; did you mean %1?
cannot find interface declaration for %0, superclass of %1
cannot find interface declaration for %0, superclass of %1; did you mean %2?
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains an unexpanded parameter pack
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains unexpanded parameter pack %1
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains unexpanded parameter packs %1 and %2
%select{expression|base type|declaration type|data member type|bit-field size|static assertion|fixed underlying type|enumerator value|using declaration|friend declaration|qualifier|initializer|default argument|non-type template parameter type|exception type|partial specialization|__if_exists name|__if_not_exists name|lambda|block}0 contains unexpanded parameter packs %1, %2, ...
friends can only be classes or functions
unexpected interface name %0: expected expression
unexpected namespace name %0: expected expression
unexpected type name %0: expected expression
cannot define the implicit copy assignment operator for %0, because non-static %select{reference|const}1 member %2 can't use copy assignment operator
%select{|implicit default |inheriting }0constructor for %1 must explicitly initialize the %select{reference|const}2 member %3
unions cannot be base classes
union member %0 has reference type %1
the address of a declaration with unknown type can only be cast to a pointer type
function %0 with unknown type must be given a function type
variable %0 with unknown type cannot be given a function type
unknown %0 attribute
no type named %0 in %1; did you mean %select{|simply }2%3?
unknown receiver %0; did you mean %1?
unknown %select{type|class}1 name %0; did you mean %2?
unknown type name %0; did you mean %1?
must explicitly qualify name of member function when taking its address
global register variables are not supported
call to unsupported expression with unknown type
%0 has unknown type, which is unsupported for this kind of declaration
unsupported expression with unknown type
cannot cast %0 to its %select{private|protected}2 base class %1
illegal redeclaration of property in class extension %0 (attribute must be 'readwrite', while its primary must be 'readonly')
illegal redeclaration of 'readwrite' property in class extension %0 (perhaps you intended this to be a 'readwrite' redeclaration of a 'readonly' public property?)
use of default argument to function %0 that is declared later in class %1
use of %0 with tag type that does not match previous declaration
using declaration can not refer to class member
using declaration can not refer to namespace
target of using declaration conflicts with declaration already in scope
declaration conflicts with target of using declaration already in scope
using declaration can not refer to a constructor
can not inherit constructor, already inherited constructor with the same signature
%0 is not a direct base of %1, can not inherit constructors
using declaration can not refer to a destructor
cannot befriend target of using declaration
using declaration refers to its own class
using declaration refers into '%0', which is not a base class of %1
using declaration in class refers into '%0', which is not a class
redeclaration of using decl
using declaration can not refer to a template specialization
dependent using declaration resolved to type without 'typename'
no namespace named %0 in %1; did you mean %select{|simply }2%3?
no namespace named %0; did you mean %1?
using declaration requires a qualified name
'typename' keyword used on a non-type
cannot call operator __uuidof on a type with multiple GUIDs
cannot call operator __uuidof on a type with no GUID
'va_start' used in function with fixed args
array types cannot be value-initialized
variable template partial specialization %0 cannot be redefined
no variable template matches%select{| partial}0 specialization
%select{variable|static data member}0 instantiated with function type %1
variable-sized object may not be initialized
variable with '%0' attribute cannot have an initializer
'new' cannot allocate object of variably modified type %0
non-type template parameter of variably modified type %0
variably modified type %0 cannot be used as a template argument
all vector initializers must be of type %0
cannot initialize a vector with vectors
invalid application of 'vec_step' to bitfield
invalid application of 'vec_step' to a function type
invalid application of 'vec_step' to an incomplete type %0
'vec_step' requires built-in scalar or vector type, %0 invalid
%select{too many|too few}0 elements in vector initialization (expected %1 elements, have %2)
'%0' index '%1' is used more than once
'virtual' can not be specified on member function templates
'virtual' can only appear on non-static member functions
'virtual' can only be specified inside the class definition
variable length array declaration can not have 'extern' linkage
variable length array declaration can not have 'static' storage duration
variable length array declaration not allowed at file scope
variable length array cannot be formed during template argument deduction
variable length array of non-POD element type %0
variably modified type declaration can not have 'extern' linkage
variably modified type declaration not allowed at file scope
function declaration cannot have variably modified type
'void' must be the first and only parameter if specified
'void' as parameter must not have type qualifiers
argument %0 must have either a write_only or read_write access qualifier
sampler type cannot be used with the __local and __global address space qualifiers
variables defined in the threadgroup address space can only be declared in kernel functions
dereferencing a __weak pointer is not allowed due to possible null value caused by race condition, assign it to strong variable first
property implementation must have its declaration in the category %0
property implementation must be in a class or category implementation
property implementation must have its declaration in interface %0
cannot find suitable %select{getter|setter}0 for property %1
property declared in category %0 cannot be implemented in class implementation
dealloc return type must be correctly specified as 'void' under ARC, instead of %0
synthesized properties %0 and %1 both claim instance variable %2
dynamic property can not have instance variable specification
instance variable %0 cannot be accessed because 'self' has been redeclared
property %0 attempting to use instance variable %1 declared in super class %2
instance variable %0 accessed in class method
%select{instance|class}1 method %0 not found ; did you mean %2?
missing context for method declaration
missing context for property implementation declaration
property implementation in a category with no category declaration
synthesized property %0 must either be named the same as a compatible instance variable or must explicitly name an instance variable
no @interface declaration found in class messaging of %0
@synchronized requires an Objective-C object type (%0 invalid)
@throw requires an Objective-C object type (%0 invalid)
instance variable %0 is private
type of property %0 (%1) does not match type of accessor %2 (%3)
property %0 is already implemented
type of property %0 (%1) does not match type of instance variable %2 (%3)
synthesized properties %0 and %1 both claim setter %2 - use of this setter will cause unexpected behavior
instance variable %0 is protected
assigning to 'readonly' return result of an Objective-C message not allowed
property of reference type is not supported
@throw (rethrow) used outside of a @catch block
%0 cannot use 'super' because it is a root class
existing instance variable %1 for strong property %0 may not be __weak
@synthesize not allowed in a category's implementation
@synthesize of 'weak' property is only allowed in ARC or GC mode
existing instance variable %1 for __weak property %0 must be __weak
initializer for aggregate is not a compile-time constant
anonymous types declared in an anonymous %select{struct|union}0 are an extension
types declared in an anonymous %select{struct|union}0 are a Microsoft extension
anonymous %select{struct|union}0 cannot be '%1'
anonymous unions are a C11 extension
initialization of an array %diff{of type $ from a compound literal of type $|from a compound literal}0,1 is a GNU extension
parenthesized initialization of a member array is a GNU extension
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is a C++11 extension
anonymous structs are a C11 extension
%select{qualifier in |static |}0array size %select{||'[*] '}0is a C99 feature
flexible array members are a C99 feature
cast between pointer-to-function and pointer-to-object is an extension
%select{case value|enumerator value|non-type template argument|array size}0 %select{cannot be narrowed from type %2 to %3|evaluates to %2, which cannot be narrowed to type %3}1
complex initialization specifying real and imaginary components is an extension
use of this statement in a constexpr %select{function|constructor}0 is a C++1y extension
multiple return statements in constexpr function is a C++1y extension
constexpr %select{function|constructor}0 never produces a constant expression
variable declaration in a constexpr %select{function|constructor}0 is a C++1y extension
type definition in a constexpr %select{function|constructor}0 is a C++1y extension
cannot delete expression with pointer-to-'void' type %0
ISO C++11 does not allow conversion from string literal to %0
designated initializers are a C99 feature
empty %select{struct|union}0 is a GNU extension
befriending enumeration type %0 is a C++11 extension
ISO C restricts enumerator values to range of 'int' (%0 is too %select{small|large}1)
explicit conversion functions are a C++11 extension
explicit instantiation of %0 that occurs after an explicit specialization will be ignored (C++11 extension)
qualifier in explicit instantiation of %q0 requires a template-id (a typedef is not permitted)
explicit specialization cannot have a storage class
expression is not an %select{integer|integral}0 constant expression; folding it to a constant is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a GNU extension
flexible array member %0 in otherwise empty %select{struct|interface|union|class|enum}1 is a Microsoft extension
%0 may not be used as an array element due to flexible array member
%0 may not be nested in a struct due to flexible array member
flexible array initialization is a GNU extension
flexible array member %0 in a union is a GNU extension
flexible array member %0 in a union is a Microsoft extension
ISO C forbids forward references to 'enum' types
redeclaration of already-defined enum %0 is a GNU extension
complex numbers are an extension in a freestanding C99 implementation
explicit specialization of %0 within class scope is a Microsoft extension
anonymous structs are a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to%select{ the|}2 function type%select{|s}2 %1%select{| and %3}2 is a GNU extension
subscript of a pointer to void is a GNU extension
arithmetic on%select{ a|}0 pointer%select{|s}0 to void is a GNU extension
function previously declared with an %select{explicit|implicit}0 exception specification redeclared with an %select{implicit|explicit}0 exception specification
implicit declaration of function %0 is invalid in C99
implicitly declaring library function '%0' with type %1
in-class initializer for static data member of type %0 is a GNU extension
in-class initializer for static data member is not a constant expression; folding it to a constant is a GNU extension
initialized lambda captures are a C++1y extension
constant expression evaluates to %0 which cannot be narrowed to type %1
type %0 cannot be narrowed to %1 in initializer list
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list
ISO C does not support '~' for complex conjugation of %0
ISO C does not support '++'/'--' on complex integer type %0
static %select{function|variable}0 %1 is used in an inline function with external linkage
return type of 'main' is not 'int'
ISO C++ does not allow 'main' to be used by a program
too many braces around scalar initializer
declaration specifier missing, defaulting to 'int'
type specifier missing, defaults to 'int'
ISO C90 forbids mixing declarations and code
anonymous structs are a Microsoft extension
non-type template argument containing a dereference operation is a Microsoft extension
explicit constructor calls are a Microsoft extension
forward references to 'enum' types are a Microsoft extension
using declaration referring to inaccessible member '%0' (which refers to accessible member '%1') is a Microsoft compatibility extension
lookup of %0 in member access expression is ambiguous; using member of %1
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers in nested pointer types
when type is in parentheses, array cannot have dynamic size
declaration does not declare anything
%select{struct|union}0 without named members is a GNU extension
non-class friend type %0 is a C++11 extension
'main' is not allowed to be declared _Noreturn
using extended field designator is an extension
replacement function %0 cannot be declared 'inline'
out-of-line declaration of a member must be a definition
parameter %0 was not declared, defaulting to type 'int'
%diff{promoted type $ of K&R function parameter is not compatible with the parameter type $|promoted type of K&R function parameter is not compatible with parameter type}0,1 declared in a previous prototype
predefined identifier is only valid inside function
pseudo-destructors on type void are a Microsoft extension
friend function %0 retaining previous language linkage is an extension
%select{void function|void method|constructor|destructor}1 %0 should not return a value
void %select{function|method|block}1 %0 should not return void expression
non-void %select{function|method}1 %0 should return a value
C++98 requires an accessible copy constructor for class %2 when binding a reference to a temporary; was %select{private|protected}0
no viable constructor %select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element|capturing value}0 of type %1; C++98 requires a copy constructor when binding a reference to a temporary
'%0' is not permitted on a declaration of a type
static data member %0 in union is a C++11 extension
string literal operator templates are a GNU extension
ISO C90 does not allow subscripting non-lvalue array
address non-type template argument cannot be surrounded by parentheses
template argument uses local type %0
non-type template argument referring to %select{function|object}0 %1 with internal linkage is a C++11 extension
template argument uses unnamed type
'template' keyword outside of a template
default template arguments for a function template are a C++11 extension
first declaration of %select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace %2 is a C++11 extension
ISO C forbids taking the address of an expression of type 'void'
method parameter type %diff{$ does not match super class method parameter type $|does not match super class method parameter type}0,1
C99 forbids casting nonscalar type %0 to the same type
cast to union type is a GNU extension
comparison of distinct pointer types (%0 and %1) uses non-standard composite pointer type %2
incompatible operand types (%0 and %1)
incompatible operand types%diff{ ($ and $)|}0,1 use non-standard composite pointer type %2
C99 forbids conditional expressions with only one void side
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 discards qualifiers
incompatible pointer types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between pointers to integer types with different sign
incompatible integer to pointer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
incompatible pointer to integer conversion %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2%select{|; dereference with *|; take the address with &|; remove *|; remove &}3
%select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2 converts between void pointer and function pointer
tentative definition of variable with internal linkage has incomplete non-array type %0
ordered comparison of function pointers (%0 and %1)
ordered comparison between pointer and zero (%0 and %1) is an extension
ordered comparison between pointer and integer (%0 and %1)
zero size arrays are an extension
typedef requires a name
'typename' occurs outside of a template
unelaborated friend declaration is a C++11 extension; specify '%select{struct|interface|union|class|enum}0' to befriend %1
union member %0 has reference type %1, which is a Microsoft extension
using directive refers to implicitly-defined namespace 'std'
field %0 with variable sized type %1 not at the end of a struct or class is a GNU extension
variable templates are a C++1y extension
variable length arrays are a C99 feature
variable length array folded to constant array as an extension
field with illegal attribute %0 declared here
type conversion function declared here
constrained by %select{|implicitly }1%select{private|protected}0 inheritance here
%select{|implicitly }1declared %select{private|protected}0 here
protected %select{constructor|destructor}0 can only be used to %select{construct|destroy}0 a base class subobject
must name member using the type of the current context %0
can only access this member on an object of type %0
add a pair of parentheses to declare a variable
declared with %0 attribute here
lookup in the object type %0 refers here
lookup from the current scope refers here
candidate found by name lookup is %q0
member found by ambiguous name lookup
because of ambiguity in conversion %diff{of $ to $|between types}0,1
assign the value to a strong variable to keep the object alive during use
use __bridge to convert directly (no change in ownership)
use %select{__bridge_retained|CFBridgingRetain call}1 to make an ARC object available as a +1 %0
use %select{__bridge_transfer|CFBridgingRelease call}1 to transfer ownership of a +1 %0 into ARC
use __bridge with C-style cast to convert directly (no change in ownership)
use __bridge_retained with C-style cast to make an ARC object available as a +1 %0
use __bridge_transfer with C-style cast to transfer ownership of a +1 %0 into ARC
declaration in interface is not in the '%select{alloc|copy|init|new}0' family because %select{its result type is not an object pointer|its result type is unrelated to its receiver type}1
declaration in interface
block will be retained by %select{the captured object|an object strongly retained by the captured object}0
also accessed here
array %0 declared here
conversion to %select{integral|enumeration}0 type %1 declared here
type %0 is incomplete
setter and getter must both be synthesized, or both be user defined,or the property must be nonatomic
previous overload of function is here
property should be changed to be readwrite
%0 has been explicitly marked %select{unavailable|deleted|deprecated}1 here
explicitly cast the pointer to silence this warning
base class %0 specified here
bit-field is declared here
maybe you meant to use __block %0
%0 declared here
callee declares array parameter as static here
constructor cannot be inherited
declaration missing '[[carries_dependency]]' attribute is here
class is declared here
attribute 'color' field '%0' is declared here
compatible type %0 specified here
place parentheses around the assignment to silence this warning
use '==' to turn this assignment into an equality comparison
use '!=' to turn this compound assignment into an inequality comparison
previous return statement is here
member not initialized by constructor
virtual base class declared here
constructor declared here
use 'static' to give inline function %0 internal linkage
this declaration is not a prototype; add 'void' to make it a prototype for a zero-parameter function
in instantiation of default argument for '%0' required here
default argument declared here
in instantiation of default function argument expression for '%0' required here
%0 defined here
conversion to pointer type %0
%select{copy|move}0 assignment operator of %1 is implicitly deleted because field %2 is of %select{reference|const-qualified}4 type %3
copy constructor of %0 is implicitly deleted because field %1 is of rvalue reference type %2
copy %select{constructor|assignment operator}0 is implicitly deleted because %1 has a user-declared move %select{constructor|assignment operator}2
default constructor of %0 is implicitly deleted because all %select{data members|data members of an anonymous union member}1 are const-qualified
default constructor of %0 is implicitly deleted because field %1 of %select{reference|const-qualified}3 type %2 would not be initialized
virtual destructor requires an unambiguous, accessible 'operator delete'
%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 of %1 is implicitly deleted because %select{base class %3|%select{||||variant }4field %3}2 has %select{no|a deleted|multiple|an inaccessible|a non-trivial}4 %select{%select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0|destructor}5%select{||s||}4
must qualify identifier to find this declaration in dependent base class
type %0 is declared here
element %0 also has value %1
put the semicolon on a separate line to silence this warning
remove parentheses to declare a variable
change this ',' to a ';' to call %0
replace parentheses with an initializer to declare a variable
jump enters lifetime of block which captures a destructible C++ object
jump enters lifetime of block which strongly captures a variable
jump enters lifetime of block which weakly captures a variable
enum %0 was explicitly specialized here
remove extraneous parentheses around the comparison to silence this warning
use '=' to turn this equality comparison into an assignment
place parentheses around comparison expression to evaluate it first
use '%0' instead
jump exits scope of __block variable
jump exits lifetime of block which captures a destructible C++ object
jump exits lifetime of block which strongly captures a variable
jump exits lifetime of block which weakly captures a variable
jump exits scope of variable with __attribute__((cleanup))
jump exits catch block
jump exits try block
jump exits scope of variable with non-trivial destructor
jump exits autoreleasepool block
jump exits @catch block
jump exits @finally block
jump exits scope of retaining variable
jump exits @synchronized block
jump exits @try block
jump exits scope of lifetime-extended temporary with non-trivial destructor
explicit instantiation candidate function template here %0
explicit instantiation definition is here
explicit instantiation refers here
while substituting explicitly-specified template arguments into function template %0 %1
'template<>' header not required for explicitly-specialized class %0 declared here
declared %select{in global scope|with C language linkage}0 here
did you forget ';'?
member is declared here
field designator refers here
final overrider of %q0 in %1
initialized flexible array member %0 is here
selected '%select{begin|end}0' %select{function|template }1%2 with iterator type %3
in implicit call to 'operator%select{!=|*|++}0' for iterator of type %1
did you mean to use '%0'?
format string is defined here
forward declaration of class here
found near match '%0'
did you mean %0?
while substituting deduced template arguments into function template %0 %1
in instantiation of function template specialization %q0 requested here
function template matches specialization %0
suffix with parentheses to turn this into a function call
prefix with the address-of operator to silence this warning
or because setter is declared here, but no getter method %0 is found
hidden overloaded virtual function %q0 declared here%select{|: different classes%diff{ ($ vs $)|}2,3|: different number of parameters (%2 vs %3)|: type mismatch at %ordinal2 parameter%diff{ ($ vs $)|}3,4|: different return type%diff{ ($ vs $)|}2,3|: different qualifiers (%select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}2 vs %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3)}1
type declaration hidden
declaration hides type
field of illegal %select{type|pointer type}0 %1 declared here
class implementation is declared here
when implemented by class %0
%0 is an implicit parameter
explicitly defaulted function was implicitly deleted here
add 'constexpr'
when looking up '%select{begin|end}0' function for range expression of type %1
possible target of indirect goto
consider using __builtin_trap() or qualifying pointer with 'volatile'
use '|=' to turn this inequality comparison into an or-assignment
inheriting constructor for %0 first required here
deleted constructor was inherited here
override this message by inserting an explicit cast
insert 'break;' to avoid fall-through
insert '%0;' to silence this warning
(skipping %0 context%s0 in backtrace; use -ftemplate-backtrace-limit=0 to see all)
%select{implicit|explicit}0 instantiation first required here
it delegates to
instance variable is declared here
lambda expression begins here
implicit capture of lambda object due to conversion to block pointer here
local declaration nearly matches
type of %ordinal0 parameter of local declaration does not match definition%diff{ ($ vs $)|}1,2
the other lock of mutex '%0' is here
mutex acquired here
use '%0' for a bitwise operation
remove constant to silence this warning
add parentheses after the '!' to evaluate the comparison first
add parentheses around left hand side expression to silence this warning
%select{decremented|incremented}0 here
change return type to 'int'
remove '_Noreturn'
member %0 declared here
member declaration does not match because it %select{is|is not}0 const qualified
member declaration nearly matches
type of %ordinal0 parameter of member declaration does not match definition%diff{ ($ vs $)|}1,2
'->' applied to return value of the operator->() declared here
implicit %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}0 for %1 first required here
field '%0' of type %1 declared here
cannot use 'clamp_to_zero' address mode with a border_color different than 'transparent_black'
if 'coord::pixel' is specified the min_filter and mag_filter values must be the same, the mip_filter and compare_func values must be 'none', and address modes must be either 'clamp_to_zero', %select{or 'clamp_to_edge'|'clamp_to_edge', or 'clamp_to_border'}0
'%0' attribute must be made explicit
return struct of a '%0' 'function must have explicit '%1' attribute
method %0 declared here
compiler has implicitly changed method %0 return type
method %0 is used for the forward class
namespace %0 defined here
not-yet-instantiated member is declared here
%0 is not literal because it has base class %1 of non-literal type
%0 is not literal because it has data member %1 of %select{non-literal|volatile}3 type %2
incomplete type %0 is not a literal type
%0 is not literal because it is not an aggregate and has no constexpr constructors other than copy or move constructors
%0 is not literal because it has a non-trivial destructor
%0 is not literal because it has a user-provided destructor
%select{struct|interface|class}0 with virtual base %plural{1:class|:classes}1 is not a literal type
non-templated declaration is here
because it has a default argument
because type %0 has a virtual %select{member function|base class}1
because field %0 has an initializer
because no %select{<<ERROR>>|constructor|constructor|assignment operator|assignment operator|<<ERROR>>}2 can be used to %select{<<ERROR>>|copy|move|copy|move|<<ERROR>>}2 %select{base class|field|an object}0 of type %3
because %select{base class of |field of |}0type %1 has no default constructor
because type %0 has a member with %select{no|no|__strong|__weak|__autoreleasing}1 ownership
because its parameter is %diff{of type $, not $|of the wrong type}2,3
because the function selected to %select{construct|copy|move|copy|move|destroy}2 %select{base class|field}0 of type %1 is not trivial
because %select{base class of |field of |}0type %1 has a user-provided %select{default constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2
because it is a variadic function
destructor for %0 is not trivial because it is virtual
declaration missing '[[noreturn]]' attribute is here
%0 should be declared prior to the call site%select{| or in %2| or in an associated namespace of one of its arguments}1
method marked as designated initializer of the class here
use 'isEqual:' instead
%select{first|second|third}0 parameter has unexpected type %1 (should be %2)
method returns unexpected type %0 (should be an object type)
add a super class to fix this problem
defined as %0
predetermined as %0
use -foperator-arrow-depth=N to increase 'operator->' limit
'operator->' declared here produces an object of type %0
(skipping %0 'operator->'%s0 in backtrace)
overridden method is here
overridden virtual function is here
built-in candidate %0
candidate %select{function|function|constructor|function |function |constructor |is the implicit default constructor|is the implicit copy constructor|is the implicit move constructor|is the implicit copy assignment operator|is the implicit move assignment operator|is an inherited constructor}0%1%select{| has different class%diff{ (expected $ but has $)|}3,4| has different number of parameters (expected %3 but has %4)| has type mismatch at %ordinal3 parameter%diff{ (expected $ but has $)|}4,5| has different return type%diff{ ($ expected but has $)|}3,4| has different qualifiers (expected %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3 but found %select{none|const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}4)}2
candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0 %select{|template }1not viable: requires%select{ at least| at most|}2 %3 argument%s3, but %4 %plural{1:was|:were}4 provided
candidate %select{function|function|constructor|function|function|constructor|constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0 %select{|template }1not viable: %select{requires at least|allows at most single|requires single}2 argument %3, but %plural{0:no|:%4}4 arguments were provided
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) is in address space %3, but parameter must be in address space %4
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: cannot implicitly convert argument %diff{of type $ to $|type to parameter type}2,3 for %select{%ordinal5 argument|object argument}4 under ARC
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: cannot %select{convert from|convert from|bind}2 %select{base class pointer|superclass|base class object of type}2 %3 to %select{derived class pointer|subclass|derived class reference}2 %4 for %ordinal5 argument
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: no known conversion %diff{from $ to $|from argument type to parameter type}2,3 for %select{%ordinal5 argument|object argument}4%select{|; dereference the argument with *|; take the address of the argument with &|; remove *|; remove &}6
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: cannot convert argument of incomplete type %diff{$ to $|to parameter type}2,3
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: %ordinal4 argument (%2) would lose %select{const|restrict|const and restrict|volatile|const and volatile|volatile and restrict|const, volatile, and restrict}3 qualifier%select{||s||s|s|s}3
candidate %select{|function|||function|||||function (the implicit copy assignment operator)|function (the implicit move assignment operator)|}0 not viable: 'this' argument has type %2, but method is not marked %select{const|restrict|const or restrict|volatile|const or volatile|volatile or restrict|const, volatile, or restrict}3
candidate template ignored: failed template argument deduction
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) has %select{no|__weak|__strong}3 ownership, but parameter has %select{no|__weak|__strong}4 ownership
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: cannot convert initializer list argument to %3
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: expects an l-value for %select{%ordinal3 argument|object argument}2
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: no overload of %3 matching %2 for %ordinal4 argument
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 not viable: %select{%ordinal6|'this'}5 argument (%2) has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}3 ownership, but parameter has %select{no|__unsafe_unretained|__strong|__weak|__autoreleasing}4 ownership
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0 not viable: call to %select{__device__|__global__|__host__|__host__ __device__}1 function from %select{__device__|__global__|__host__|__host__ __device__}2 function
candidate %select{function|function|constructor|function |function |constructor |constructor (the implicit default constructor)|constructor (the implicit copy constructor)|constructor (the implicit move constructor)|function (the implicit copy assignment operator)|function (the implicit move assignment operator)|constructor (inherited)}0%1 has been %select{explicitly made unavailable|explicitly deleted|implicitly deleted}2
candidate template ignored: disabled by %0%1
candidate disabled: %0
candidate template ignored: invalid explicitly-specified argument for template parameter %0
candidate template ignored: invalid explicitly-specified argument for %ordinal0 template parameter
candidate template ignored: couldn't resolve reference to overloaded function %0
candidate template ignored: couldn't infer template argument %0
candidate template ignored: deduced conflicting %select{types|values|templates}0 for parameter %1%diff{ ($ vs. $)|}2,3
inherited from here
candidate template ignored: substitution exceeded maximum template instantiation depth
candidate template ignored: could not match %diff{$ against $|types}0,1
candidate template ignored: could not match %q0 against %q1
candidate template ignored: substitution failure%0%1
candidate template ignored: can't deduce a type for %0 which would make %2 equal %1
conversion candidate of type %0
remaining %0 candidate%s0 omitted; pass -fshow-overloads=all to show them
passing argument to parameter here
passing argument to parameter %0 here
parameter pack %0 declared here
parameter of type %0 is declared here
during template argument deduction for class template partial specialization %0 %1
partial specialization matches %0
non-deducible template parameter %0
please include the header <%0> or explicitly provide a declaration for '%1'
possible target for call
place parentheses around the %0 expression to evaluate it first
place parentheses around the '?:' expression to evaluate it first
place parentheses around the '%0' expression to silence this warning
previous declaration of class template partial specialization %0 is here
previously declared '%1' here
previous attribute is here
%0 is a builtin with type %1
for type %0
previous explicit instantiation is here
previous initialization %select{|with side effects }0is here%select{| (side effects may not occur at run time)}0
previous template specialization is here
did you mean to call the %0 method?
while substituting prior template arguments into %select{non-type|template}0 template parameter%1 %2
use __attribute__((visibility("hidden"))) attribute instead
property %0 is declared %select{deprecated|unavailable}1 here
property declared here
property synthesized here
jump bypasses setup of __block variable
jump bypasses initialization of variable with __attribute__((cleanup))
jump bypasses initialization of catch block
jump bypasses initialization of try block
jump bypasses auto release push of @autoreleasepool block
jump bypasses initialization of @catch block
jump bypasses initialization of @finally block
jump bypasses initialization of retaining variable
jump bypasses initialization of @synchronized block
jump bypasses initialization of @try block
jump bypasses variable initialization
jump bypasses initialization of non-POD variable
jump bypasses variable with a non-trivial destructor
jump bypasses initialization of variable length array
jump bypasses initialization of VLA type alias
jump bypasses initialization of VLA typedef
protocol is declared here
it could also be property of type %0 declared here
unimplemented pure virtual method %0 in %1
receiver is instance of class declared here
receiver is treated with 'id' type for purpose of method lookup
%select{reference|pointer}0 member declared here
member with reference subobject declared here
binding reference variable %0 here
%select{const|reference}0 member %1 will never be initialized
class template declared here
use 'static_cast' to adjust the pointer correctly while %select{upcasting|downcasting}0
%select{overridden|current}0 method is explicitly declared 'instancetype'%select{| and is expected to return an instance of its class type}0
%select{overridden|current}0 method is part of the '%select{|alloc|copy|init|mutableCopy|new|autorelease|dealloc|finalize|release|retain|retainCount|self}1' method family%select{| and is expected to return an instance of its class type}0
%select{class|instance}0 method %1 is assumed to return an instance of its receiver type (%2)
overridden method returns an instance of its class type
duplicate '%0' index '%1' here
%select{function|method|block}0 has been explicitly marked sentinel here
attempt to specialize declaration here
explicitly specialized declaration is here
use array indexing to silence this warning
change size argument to be the size of the destination
change the argument to be the free space in the destination buffer minus the terminating null byte
did you mean %select{struct|interface|class}0 here?
class with specified objc_requires_property_definitions attribute is declared here
surrounding namespace with visibility attribute ends here
surrounding namespace with visibility attribute starts here
conversion to %select{integral|enumeration}0 type %1
non-type template argument refers to %select{function|object}0 here
non-type template argument refers here
template argument refers to function template %0, here
in instantiation of template class %0 requested here
template is declared here
%select{function template|class template|variable template|type alias template|template template parameter}0 %1 declared here
while checking a default template argument used here
in instantiation of enumeration %q0 requested here
in instantiation of exception specification for %0 requested here
in instantiation of member class %0 requested here
in instantiation of member function %q0 requested here
template non-type parameter has a different type %0 in template argument
previous non-type template parameter with type %0 is here
template parameter has a different kind in template argument
template parameter is declared here
%select{too few|too many}0 template parameters in template template argument
previous default template argument defined here
previous %select{template type|non-type template|template template}0 parameter%select{| pack}1 declared here
%select{template type|non-type template|template template}0 parameter%select{| pack}1 does not match %select{template type|non-type template|template template}0 parameter%select{ pack|}1 in template argument
previous template %select{declaration|template parameter}0 is here
use -ftemplate-depth=N to increase recursive template instantiation depth
in instantiation of static data member %q0 requested here
in instantiation of template type alias %0 requested here
unnamed type used in template argument was declared here
in instantiation of variable template specialization %q0 requested here
%select{alignment|size}0 of first field is %1 bits
did you mean to use '.' instead?
use a tag name here to establish linkage prior to definition
referenced member %0 is declared here
remove the %select{'%1' if its condition|condition if it}0 is always %select{false|true}2
during field initialization in %select{this|the implicit default}0 constructor
uninitialized reference member is here
variable %0 is declared here
%select{uninitialized use occurs|variable is captured by block}0 here
use 'thread_local' to allow this
used here
implicit default constructor suppressed by user-declared constructor
%select{|previous }0using declaration
conflicting declaration
conflicting constructor
previous constructor
previously inherited here
constructor declared with ellipsis here
target of using declaration
add 'typename' to treat this using declaration as a type
in value-initialization of type %0 here
initialize the variable %0 to silence this warning
previous declaration of variable template partial specialization is here
%select{%1 is a virtual base class of base class %2 declared here|virtual base class %1 declared here}0
prior use here
which delegates to
detected while default synthesizing properties in class implementation
within field of type %0 declared here
non-virtual member function marked '%0' hides virtual member %select{function|functions}1
only virtual member functions can be marked '%0'
abstract class is marked '%select{final|sealed}0'
initializer for virtual base class %0 of abstract class %1 will never be used
access declarations are deprecated; use using declarations instead
type of property %0 does not match type of accessor %1
operator '%0' has lower precedence than '%1'; '%1' will be evaluated first
size of anonymous bit-field (%0 bits) exceeds size of its type; value will be truncated to %1 bits
ARC %select{unused|__unsafe_unretained|__strong|__weak|__autoreleasing}0 lifetime qualifier on return type is ignored
assigning %select{array literal|dictionary literal|numeric literal|boxed expression|<should not happen>|block literal}0 to a weak %select{property|variable}1; object will be released after assignment
%select{destination for|source of}0 this %1 call is a pointer to ownership-qualified type %2
performSelector may cause a leak because its selector is unknown
weak %select{variable|property|implicit property|instance variable}0 %1 may be accessed multiple times in this %select{function|method|block|lambda}2 and may be unpredictably set to nil; assign to a strong variable to keep the object alive
weak %select{variable|property|implicit property|instance variable}0 %1 is accessed multiple times in this %select{function|method|block|lambda}2 but may be unpredictably set to nil; assign to a strong variable to keep the object alive
capturing %0 strongly in this block is likely to lead to a retain cycle
assigning retained object to %select{weak|unsafe_unretained}0 %select{property|variable}1; object will be released after assignment
assigning retained object to unsafe property; object will be released after assignment
method parameter of type %0 with no explicit ownership
array index %0 is past the end of the array (which contains %1 element%s2)
array index %0 is before the beginning of the array
ignored asm label '%0' on automatic variable
value size does not match register size specified by the constraint and modifier
writable atomic property %0 cannot pair a synthesized %select{getter|setter}1 with a user defined %select{getter|setter}2
consumed analysis attribute is attached to member of class '%0' which isn't marked as consumable
attribute %0 after definition is ignored
%0 attribute can only be applied to instance variables or properties
%0 attribute ignored
%0 attribute ignored for field of type %1
'%0' attribute cannot be specified on a definition
'malloc' attribute only applies to functions returning a pointer type
'nonnull' attribute applied to function with no pointer arguments
'nonnull' attribute when used on parameters takes no arguments
%0 attribute ignored when parsing type
attribute declaration must precede definition
target does not support 'protected' visibility; using 'default'
%0 only applies to variables with static storage duration and functions
%0 attribute only applies to return values that are pointers
'sentinel' attribute requires named arguments
'sentinel' attribute only supported for variadic %select{functions|blocks}0
%0 attribute argument not supported: %1
unknown visibility %0
attribute %0 cannot be applied to %select{functions|Objective-C method}1 without return value
__weak attribute cannot be specified on a field declaration
__weak attribute cannot be specified on an automatic variable when ARC is not enabled
property is assumed atomic when auto-synthesizing the property
readonly IBOutlet property %0 when auto-synthesized may not work correctly with 'nib' loader
auto property synthesis will not synthesize property %0 declared in protocol %1
'auto' deduced as 'id' in declaration of %0
autosynthesized property %0 will use %select{|synthesized}1 instance variable %2, not existing instance variable %3
unknown platform %0 in availability macro
feature cannot be %select{introduced|deprecated|obsoleted}0 in %1 version %2 before it was %select{introduced|deprecated|obsoleted}3 in version %4; attribute ignored
cast from function call of type %0 to non-matching type %1
receiver type %0 is not 'id' or interface pointer, consider casting it to 'id'
binding reference member %0 to stack allocated parameter %1
binding reference %select{|subobject of }1member %0 to a temporary value
size of bit-field %0 (%1 bits) exceeds the size of its type; value will be truncated to %2 bits
'&' within '|'
switch condition has boolean value
braces around scalar initializer
'break' is bound to loop, GCC binds it to switch
use of unknown builtin %0
call to pure virtual member function %0; overrides of %0 in subclasses are not available in the %select{constructor|destructor}1 of %2
too %select{few|many}0 arguments in call to %1
cannot pass object of %select{non-POD|non-trivial}0 type %1 through variadic %select{function|block|method|constructor}2; call will abort at runtime
cannot resolve lock expression
empty case range specified
overflow converting case value to switch condition type (%0 to %1)
cast from %0 to %1 increases required alignment from %2 to %3
cast of type %0 to %1 is deprecated; use sel_getName instead
category is implementing a method which will also be implemented by its primary class
calling convention %0 ignored for this target
%0 calling convention ignored on variadic function
input conversion stopped due to an input byte that does not belong to the input codeset UTF-8
class method %objcclass0 not found (return type defaults to 'id')
class method %objcclass0 not found (return type defaults to 'id'); did you mean %objcclass2?
GCC does not allow the 'cleanup' attribute argument to be anything other than a simple identifier
collection expression type %0 may not respond to %1
%select{self-|array }0comparison always evaluates to %select{false|true|a constant}1
comparison of two values with different enumeration types%diff{ ($ and $)|}0,1
concatenated NSString literal for an NSArray expression - possibly missing a comma
using the result of an assignment as a condition without parentheses
conflicting distributed object modifiers on parameter type in declaration of %0
conflicting parameter types in declaration of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in declaration of %0
conflicting return type in declaration of %0%diff{: $ vs $|}1,2
conflicting variadic declaration of method and its implementation
conflicting distributed object modifiers on parameter type in implementation of %0
conflicting parameter types in implementation of %0%diff{: $ vs $|}1,2
conflicting distributed object modifiers on return type in implementation of %0
conflicting return type in implementation of %0%diff{: $ vs $|}1,2
conversion function converting %0 to its base class %1 will never be used
conversion function converting %0 to itself will never be used
conversion function converting %0 to %1 will never be used
use of this statement in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++1y
multiple return statements in constexpr function is incompatible with C++ standards before C++1y
constexpr function with no return statements is incompatible with C++ standards before C++1y
variable declaration in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++1y
type definition in a constexpr %select{function|constructor}0 is incompatible with C++ standards before C++1y
initialized lambda captures are incompatible with C++ standards before C++1y
variable templates are incompatible with C++ standards before C++1y
attribute %0 ignored, because it cannot be applied to a type
'constexpr' non-static member function will not be implicitly 'const' in C++1y; add 'const' to avoid a change in behavior
implicit conversion from array size expression of type %0 to %select{integral|enumeration}1 type %2 is incompatible with C++98
'auto' type specifier is incompatible with C++98
cast between pointer-to-function and pointer-to-object is incompatible with C++98
'constexpr' specifier is incompatible with C++98
constructor call from initializer list is incompatible with C++98
delegating constructors are incompatible with C++98
scalar initialized from empty initializer list is incompatible with C++98
befriending enumeration type %0 is incompatible with C++98
enumeration type in nested name specifier is incompatible with C++98
explicit conversion functions are incompatible with C++98
explicit instantiation of %0 that occurs after an explicit specialization is incompatible with C++98
friend declaration naming a member of the declaring class is incompatible with C++98
friend function %0 would be implicitly redefined in C++98
goto would jump into protected scope in C++98
indirect goto might cross protected scopes in C++98
initialization of initializer_list object is incompatible with C++98
use of non-static data member %0 in an unevaluated context is incompatible with C++98
non-class friend type %0 is incompatible with C++98
%select{anonymous struct|union}0 member %1 with a non-trivial %select{constructor|copy constructor|move constructor|copy assignment operator|move assignment operator|destructor}2 is incompatible with C++98
passing object of trivial but non-POD type %0 through variadic %select{function|block|method|constructor}1 is incompatible with C++98
reference initialized from initializer list is incompatible with C++98
substitution failure due to access control is incompatible with C++98
static data member %0 in union is incompatible with C++98
switch case would be in a protected scope in C++98
%select{copying variable|copying parameter|returning object|throwing object|copying member subobject|copying array element|allocating object|copying temporary|initializing base subobject|initializing vector element}1 of type %2 when binding a reference to a temporary would %select{invoke an inaccessible constructor|find no viable constructor|find ambiguous constructors|invoke a deleted constructor}0 in C++98
redundant parentheses surrounding address non-type template argument are incompatible with C++98
local type %0 as template argument is incompatible with C++98
use of null pointer as non-type template argument is incompatible with C++98
non-type template argument referring to %select{function|object}0 %1 with internal linkage is incompatible with C++98
unnamed type as template argument is incompatible with C++98
use of 'template' keyword outside of a template is incompatible with C++98
default template arguments for a function template are incompatible with C++98
%select{class template|class template partial|variable template|variable template partial|function template|member function|static data member|member class|member enumeration}0 specialization of %1 outside namespace %2 is incompatible with C++98
use of 'typename' outside of a template is incompatible with C++98
befriending %1 without '%select{struct|interface|union|class|enum}0' keyword is incompatible with C++98
'%0' type specifier is incompatible with C++98
inheriting constructors are incompatible with C++98
array backing the initializer list will be destroyed at the end of %select{the full-expression|the constructor}0
-dealloc is being overridden in a category
declaration of %0 will not be visible outside of this function
declaration shadows a %select{local variable|variable in %2|static data member of %2|field of %2}1
attribute %0 is ignored, place it after "%select{class|struct|union|interface|enum}1" to apply attribute to type declaration
enumeration value %0 not explicitly handled in switch
enumeration values %0 and %1 not explicitly handled in switch
enumeration values %0, %1, and %2 not explicitly handled in switch
%0 enumeration values not explicitly handled in switch: %1, %2, %3...
atomic by default property %0 has a user defined %select{getter|setter}1 (property should be marked 'atomic' if this is intended)
constructor for %0 creates a delegation cycle
delete called on %0 that is abstract but has non-virtual destructor
'delete' applied to a pointer-to-array type %0 treated as delete[]
deleting pointer to incomplete type %0 may cause undefined behavior
delete called on %0 that has virtual functions but non-virtual destructor
%0 is deprecated
definition of implicit copy %select{constructor|assignment operator}1 for %0 is deprecated because it has a user-declared %select{copy %select{assignment operator|constructor}1|destructor}2
Implementing deprecated %select{method|class|category}0
%0 may be deprecated because the receiver type is unknown
%0 is deprecated: %1
conversion from string literal to %0 is deprecated
instance variable %0 is being directly accessed
division by zero is undefined
double precision constant requires cl_khr_fp64, casting to single precision
locking '%0' that is already locked
duplicate definition of category %1 on interface %0
attribute %0 is already applied with different parameters
attribute %0 is already applied
element %0 has been implicitly assigned %1 which another element has been assigned
multiple declarations of method %0 found and ignored
duplicate protocol definition of %0 is ignored
%select{destination for|source of|first operand of|second operand of}0 this %1 call is a pointer to dynamic class %2; vtable pointer will be %select{overwritten|copied|moved|compared}3
for loop has empty body
format string is empty
if statement has empty body
empty parentheses interpreted as a function declaration
range-based for loop has empty body
switch statement has empty body
while loop has empty body
enumeration values exceed range of largest integer
overflow in enumeration value
enumerator value %0 is not representable in the largest integer type
equality comparison with extraneous parentheses
exception of type %0 will be caught by earlier handler
dynamic exception specifications are deprecated
declaration requires an exit-time destructor
expecting mutex '%0' to be locked at start of each loop
expecting mutex '%0' to be locked at the end of function
'extern' variable has an initializer
control reaches end of non-void fragment function
control reaches end of non-void function
control reaches end of non-void lambda
control reaches end of non-void vertex function
function declared 'noreturn' should not return
fallthrough annotation does not directly precede switch label
fallthrough annotation in unreachable code
field %0 is uninitialized when used here
magnitude of floating-point constant too large for type %0; maximum is %1
magnitude of floating-point constant too small for type %0; minimum is %1
comparing floating point with == or != is unsafe
values of type '%0' should not be used as format arguments; add an explicit cast to %1 instead
invalid conversion specifier '%0'
invalid position specified for %select{field width|field precision}0
cannot mix positional and non-positional arguments in format string
'%0' %select{length modifier|conversion specifier}1 is not supported by ISO C
using length modifier '%0' with conversion specifier '%1' is not supported by ISO C
positional arguments are not supported by ISO C
format string is not a string literal
format string is not a string literal (potentially insecure)
length modifier '%0' results in undefined behavior or no effect with '%1' conversion specifier
format string should not be a wide string
position arguments in format strings start counting at 1 (not 0)
redefinition of forward class %0 of a typedef name of an object type is ignored
use of identifier %0 found via unqualified lookup into dependent bases of class templates is a Microsoft extension
cannot call function '%0' while mutex '%1' is locked
calling function '%0' requires %select{shared|exclusive}2 lock on '%1'
Objective-C GC does not allow weak variables on the stack
declaration requires a global constructor
declaration requires a global destructor
'gnu_inline' attribute requires function to be marked 'inline', attribute ignored
%select{instance variable|property}2 with %0 attribute must be an object type (invalid %1)
IBOutletCollection properties should be copy/strong and not assign
assigning %select{field|instance variable}0 to itself
size of static array must be an integer constant expression
implicit truncation from %2 to bitfield changes value from %0 to %1
initialization of pointer of type %0 to null from a constant boolean expression
implicit conversion discards imaginary component: %0 to %1
implicit conversion from enumeration type %0 to different enumeration type %1
implicit conversion turns floating-point number into integer: %0 to %1
implicit conversion loses floating-point precision: %0 to %1
implicit conversion turns floating-point number into bool: %0 to %1
address of function %q0 will always evaluate to 'true'
implicit conversion loses integer precision: %0 to %1
implicit conversion from %2 to %3 changes value from %0 to %1
implicit conversion changes signedness: %0 to %1
operand of ? changes signedness: %0 to %1
implicit conversion from %0 to %1 changes value from %2 to %3
implicit conversion of NULL constant to %0
implicit conversion turns string literal into bool: %0 to %1
implicit conversion turns vector to scalar: %0 to %1
default assign attribute on property %0 which implements NSCopying protocol is not appropriate with -fobjc-gc[-only]
property is assumed atomic by default
declaration of built-in function '%0' requires inclusion of the header <setjmp.h>
declaration of built-in function '%0' requires inclusion of the header <stdio.h>
declaration of built-in function '%0' requires inclusion of the header <ucontext.h>
implicit declaration of function %0
block implicitly retains 'self'; explicitly mention 'self' to indicate this is intended behavior
%select{%diff{assigning to $ from incompatible type $|assigning to type from incompatible type}0,1|%diff{passing $ to parameter of incompatible type $|passing type to parameter of incompatible type}0,1|%diff{returning $ from a function with incompatible result type $|returning type from a function with incompatible result type}0,1|%diff{converting $ to incompatible type $|converting type to incompatible type}0,1|%diff{initializing $ with an expression of incompatible type $|initializing type with an expression of incompatible type}0,1|%diff{sending $ to parameter of incompatible type $|sending type to parameter of incompatible type}0,1|%diff{casting $ to incompatible type $|casting type to incompatible type}0,1}2
incompatible vector types %select{%diff{assigning to $ from $|assigning to different types}0,1|%diff{passing $ to parameter of type $|passing to parameter of different type}0,1|%diff{returning $ from a function with result type $|returning from function with different return type}0,1|%diff{converting $ to type $|converting between types}0,1|%diff{initializing $ with an expression of type $|initializing with expression of different type}0,1|%diff{sending $ to parameter of type $|sending to parameter of different type}0,1|%diff{casting $ to type $|casting between types}0,1}2
incrementing expression of type bool is deprecated
indirection of non-volatile null pointer will be deleted, not trap
all paths through this function will call itself
constant expression evaluates to %0 which cannot be narrowed to type %1 in C++11
type %0 cannot be narrowed to %1 in initializer list in C++11
non-constant-expression cannot be narrowed from type %0 to %1 in initializer list in C++11
initializing pointer member %0 with the stack address of parameter %1
%select{field|base class}0 %1 will be initialized after %select{field|base}2 %3
initializer overrides prior initialization of this subobject
inline namespace cannot be reopened as a non-inline namespace
instance method %objcinstance0 not found (return type defaults to 'id')
instance method %objcinstance0 not found (return type defaults to 'id'); did you mean %objcinstance2?
instance method %0 found instead of class method %1
cast to %1 from smaller integer type %0
invalid use of a cast in an inline asm context requiring an l-value: accepted due to -fheinous-gnu-extensions, but clang may remove support for this in the future
local declaration of %0 hides instance variable
declaration of instance variables in the interface is deprecated
mutex '%0' is locked exclusively and shared in the same scope
mutex '%0' is not locked on every path through here
'&&' within '||'
use of logical '%0' with constant operand
logical not is only applied to the left hand side of this comparison
'%0' is bound to current loop, GCC binds it to the enclosing loop
state of variable '%0' must match at the entry and exit of loop
comparison of unsigned%select{| enum}2 expression %0 is always %1
only one parameter on 'main' declaration
control may reach end of non-void fragment function
control may reach end of non-void function
control may reach end of non-void lambda
control may reach end of non-void vertex function
variable %0 may be uninitialized when %select{used here|captured by block}1
%0 may not respond to %1
size argument in %0 call is a comparison
explicitly cast the argument to size_t to silence this warning
did you mean to compare the result of %0 instead?
availability does not match previous declaration
overriding method %select{introduced after|deprecated before|obsoleted before}0 overridden method on %1 (%2 vs. %3)
overriding method cannot be unavailable on %0 when its overridden method is available
section does not match previous declaration
suggest braces around initialization of subobject
enumeration value %0 not handled in switch
enumeration values %0 and %1 not handled in switch
enumeration values %0, %1, and %2 not handled in switch
no case matching constant switch condition '%0'
%0 enumeration values not handled in switch: %1, %2, %3...
%0 is missing exception specification '%1'
auto property synthesis is synthesizing property not explicitly synthesized
missing field %0 initializer
format string missing
method has no return type specified; defaults to 'id'
no previous prototype for function %0
missing sentinel in %select{function call|method dispatch|block call}0
no previous extern declaration for non-static variable %0
comma separated list used as vector initializer, but missing vector cast (%0) before parens; last value will initialize all elements
comparison of integers of different signs: %0 and %1
multiple methods named %0 found
auto property synthesis will not synthesize property %0 because it is 'readwrite' but it will be synthesized 'readonly' via another property
auto property synthesis will not synthesize property %0 because it cannot share an ivar with another synthesized property
%select{struct|interface|union|class|enum}0 %1 does not declare any constructor to initialize its non-modifiable members
mutex '%0' is still locked at the end of function
conflicting parameter types in declaration of %0: %1 vs %2
conflicting parameter types in implementation of %0: %1 vs %2
conflicting return type in declaration of %0: %1 vs %2
conflicting return type in implementation of %0: %1 vs %2
expression which evaluates to zero treated as a null pointer constant of type %0
cannot pass %select{non-POD|non-trivial}0 object of type %1 to variadic %select{function|block|method|constructor}2; expected type from format string was %3
%0 has virtual functions but non-virtual destructor
function %0 declared 'noreturn' should not return
not a Doxygen trailing comment
use of unary operator that may be intended as compound assignment (%0=)
not enough variable arguments in %0 declaration to fit a sentinel
case value not in enumerated type %0
integer constant not in range of enumerated type %0
%0 attribute only applies to %select{Objective-C object|pointer}1 parameters
%0 attribute only applies to %select{functions|methods|properties}1 that return %select{an Objective-C object|a pointer|a non-retainable pointer}2
'NSObject' attribute may be put on a typedef only; attribute is ignored
null passed to a callee which requires a non-null argument
use of NULL in arithmetic operation
comparison between NULL and non-pointer %select{(%1 and NULL)|(NULL and %1)}0
null returned from %select{function|method}0 that requires a non-null return value
designated initializer missing a 'super' call to a designated initializer of the super class
designated initializer invoked a non-designated initializer
designated initializer should only invoke a designated initializer on 'super'
method override for the designated initializer of the superclass %objcinstance0 not found
%0 bridges to %1, not %2
%0 cannot bridge to %1
assignment to Objective-C's isa is deprecated in favor of object_setClass()
direct access to Objective-C's isa is deprecated in favor of object_getClass()
direct comparison of %select{an array literal|a dictionary literal|a numeric literal|a boxed expression|}0 has undefined behavior
method possibly missing a [super %0] call
can not catch an exception thrown with @throw in C++ in the non-unified exception model
bitmasking for introspection of Objective-C object pointers is strongly discouraged
objc_precise_lifetime is not meaningful for %select{__unsafe_unretained|__autoreleasing}0 objects
'copy' attribute must be specified for the block property when -fobjc-gc-only is specified
default property attribute 'assign' not appropriate for non-GC object
no 'assign', 'retain', or 'copy' attribute is specified - 'assign' is assumed
retain'ed block property does not copy the block - use copy attribute instead
setter cannot be specified for a readonly property
using %0 with a literal is redundant
%0 attribute cannot be applied to %select{methods in protocols|dealloc}1
class %0 defined without specifying a base class
secondary initializer missing a 'self' call to another initializer
secondary initializer should not invoke an initializer on 'super'
direct comparison of a string literal has undefined behavior
offset of on non-POD type %0
offset of on non-standard-layout type %0
use of old-style cast
class implementation may not have super class
%0 should not return a null pointer unless it is declared 'throw()'%select{| or 'noexcept'}1
comparison of constant %0 with expression of type %1 is always %select{false|true}2
type %0 requires %1 bytes of alignment and the default allocator only guarantees %2 bytes
overloaded operator %select{>>|<<}0 has lower precedence than comparison operator
%q0 hides overloaded virtual %select{function|functions}1
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%select{|s}4 to align anonymous bit-field
padding %select{struct|interface|class}0 %1 with %2 %select{byte|bit}3%select{|s}4 to align %5
padding size of %0 with %1 %select{byte|bit}2%select{|s}3 to alignment boundary
parameter '%0' not in expected state when the function returns: expected '%1', observed '%2'
argument not in expected state; expected '%0', observed '%1'
%0 is a large (%1 bytes) pass-by-value argument; pass it by reference instead ?
parentheses were disambiguated as a function declaration
%select{class|variable}0 template partial specialization contains %select{a template parameter|template parameters}1 that can not be deduced; this partial specialization will never be used
dereference of type %1 that was reinterpret_cast from type %0 has undefined behavior
#pramga ms_struct can not be used with dynamic classes or structures
#pragma options align=reset failed: %0
expected #pragma pack parameter to be '1', '2', '4', '8', or '16'
#pragma pack(pop, ...) failed: %0
specifying both a name and alignment to 'pop' is undefined
value of #pragma pack(show) == %0
only variables can be arguments to '#pragma unused'
undeclared variable %0 used as an argument for '#pragma unused'
%0 has lower precedence than %1; %1 will be evaluated first
operator '?:' has lower precedence than '%0'; '%0' will be evaluated first
'%select{*|.*}0' specified field %select{width|precision}0 is missing a matching 'int' argument
field %select{width|precision}0 should have type %1, but argument has type %2
format specifies type %0 but the argument has type %1
data argument not used by format string
format string contains '\0' within the string body
flag '%0' is ignored when flag '%1' is present
incomplete format specifier
more '%%' conversions than data arguments
flag '%0' results in undefined behavior with '%1' conversion specifier
%select{field width|precision}0 used with '%1' conversion specifier, resulting in undefined behavior
data argument position '%0' exceeds the number of data arguments (%1)
use of __private_extern__ on a declaration may not produce external symbol private to the linkage unit and is deprecated
property attribute in class extension does not match the primary class
'%1' attribute on property %0 does not match the property inherited from %2
property declared as returning non-retained objects; getter returning retained objects
primary property declaration is implicitly strong while redeclaration in class extension is weak
property type %0 is incompatible with type %1 inherited from %2
property of type %0 was selected for synthesis
the pointer incremented by %0 refers past the end of the array (that contains %1 element%s2)
the pointer decremented by %0 refers before the beginning of the array
function definition with pure-specifier is a Microsoft extension
'%0' type qualifier%s1 on return type %plural{1:has|:have}1 no effect
attribute 'readonly' of property %0 restricts attribute 'readwrite' of property inherited from %1
receiver %0 is a forward class and corresponding @interface may not exist
weak %select{receiver|property|implicit property}0 may be unpredictably set to nil
incompatible redeclaration of library function %0
%0 redeclared without %1 attribute: previous %1 ignored
redefinition of %0 will not be visible outside of this function
redefinition of typedef %0 is a C11 feature
variable %0 is %select{decremented|incremented}1 both in the loop header and in the loop body
reference %0 is not yet bound to a value when used here
'register' storage specifier on @catch parameter will be ignored
'reinterpret_cast' %select{from|to}3 class %0 %select{to|from}3 its %select{virtual base|base at non-zero offset}2 %1 behaves differently from 'static_cast'
method is expected to return an instance of its class type %diff{$, but is declared to return $|, but is declared to return different type}0,1
protocol method is expected to return an instance of the implementing class, but is declared to return %0
remainder by zero is undefined
returning address of label, which is local
returning address of local temporary object
returning reference to local temporary object
address of stack memory associated with local variable %0 returned
reference to stack memory associated with local variable %0 returned
return state set for an unconsumable type '%0'
return value not in expected state; expected '%0', observed '%1'
return value of %0 is a large (%1 bytes) pass-by-value object; pass it by reference instead ?
%0 has C-linkage specified, but returns user-defined type %1 which is incompatible with C
%0 has C-linkage specified, but returns incomplete type %1 which could be incompatible with C
instance method %0 is being used on 'Class' which is not in the root class
comparison of %0 unsigned%select{| enum}2 expression is always %1
zero field width in scanf format string is unused
no closing ']' for '%%[' in scanf format string
second parameter of 'va_start' not last named argument
second argument to 'va_arg' is of promotable type %0; this va_arg has undefined behavior because arguments will be promoted to %1
second argument to 'va_arg' is of non-POD type %0
second argument to 'va_arg' is of ARC ownership-qualified type %0
explicitly assigning a variable of type %0 to itself
property %0 requires method %1 to be defined - use @synthesize, @dynamic or provide a method implementation in this class implementation
property %0 requires method %1 to be defined - use @dynamic or provide a method implementation in this category
shift count >= width of type
shift count is negative
signed shift result (%0) requires %1 bits to represent, but %2 only has %3 bits
signed shift result (%0) sets the sign bit of the shift expression's type (%1) and becomes negative
sizeof on pointer operation will return size of %0 instead of %1
sizeof on array function parameter will return size of %0 instead of %1
'%0' call operates on objects of type %1 while the size is based on a different type %2
did you mean to %select{dereference the argument to 'sizeof' (and multiply it by the number of elements)|remove the addressof in the argument to 'sizeof' (and multiply it by the number of elements)|provide an explicit length}0?
argument to 'sizeof' in %0 call is the same pointer type %1 as the %select{destination|source}2; expected %3 or an explicit length
variable %0 is %select{used|captured}1 uninitialized whenever %select{'%3' condition is %select{true|false}4|'%3' loop %select{is entered|exits because its condition is false}4|'%3' loop %select{condition is true|exits because its condition is false}4|switch %3 is taken|its declaration is reached|%3 is called}2
'%0' ignored on this declaration
array argument is too small; contains %0 elements, callee requires at least %1
non-constant static local variable in inline function may be different in different files
'main' should not be declared static
static variable %0 is suspiciously used within its own initialization
adding %0 to a string pointer does not append to the string
adding %0 to a string does not append to the string
result of comparison against %select{a string literal|@encode}0 is unspecified (use strncmp instead)
size argument in %0 call appears to be size of the source; expected the size of the destination
the value of the size argument in 'strncat' is too large, might lead to a buffer overflow
size argument in 'strncat' call appears to be size of the source
the value of the size argument to 'strncat' is wrong
%2 defined as %select{a struct|an interface|a class}0%select{| template}1 here but previously declared as %select{a struct|an interface|a class}3%select{| template}1
%select{struct|interface|class}0%select{| template}1 %2 was previously declared as a %select{struct|interface|class}3%select{| template}1
subtraction of pointers to type %0 of zero size has undefined behavior
subobject initialization overrides initialization of other fields within its enclosing subobject
array subscript is of type 'char'
block could be declared with attribute 'noreturn'
%select{function|method}0 %1 could be declared with attribute 'noreturn'
non-type template argument with value '%0' converted to '%1' for unsigned template parameter of type %2
non-type template argument value '%0' truncated to '%1' for template parameter of type %2
exported templates are unsupported
dependent nested name specifier '%0' for friend template declaration is not supported; ignoring this friend declaration
dependent nested name specifier '%0' for friend class declaration is not supported; turning off access control for %1
extraneous template parameter list in template specialization
pointer is initialized by a temporary array, which will be destroyed at the end of the full-expression
tentative array definition assumed to have one element
%0 attribute requires arguments that are class type or point to class type; type here is %1
%0 attribute requires arguments whose type is annotated with 'lockable' attribute; type here is %1
%0 attribute can only be applied in a context annotated with 'lockable' attribute
%0 only applies to pointer types; type here is %1
ignoring %0 attribute because its argument is invalid
Thread safety beta warning.
%select{alignment|size}0 of field %1 (%2 bits) does not match the %select{alignment|size}0 of the first field in transparent union; transparent_union attribute ignored
first field of a transparent union cannot have %select{floating point|vector}0 type %1; transparent_union attribute ignored
transparent_union attribute can only be applied to a union definition; attribute ignored
transparent union definition must contain at least one field; transparent_union attribute ignored
'%0' only applies to %select{function|pointer|Objective-C object or block pointer}1 types; type here is %2
specified %0 type tag requires a null pointer
argument type %0 doesn't match specified %1 type tag %select{that requires %3|}2
this type tag was not designed to be used with this function
pointer type mismatch%diff{ ($ and $)|}0,1
pointer/integer type mismatch in conditional expression%diff{ ($ and $)|}0,1
qualifier on function type %0 has unspecified behavior
'static' has no effect on zero-length arrays
unannotated fall-through between switch labels
unannotated fall-through between switch labels in partly-annotated function
%0 may be unavailable because the receiver type is unknown
undeclared selector %0
undeclared selector %0; did you mean %1?
method definition for %0 not found
cannot find protocol definition for %0
inline function %q0 is not defined
%select{function|variable}0 %q1 has internal linkage but is not defined
reinterpret_cast from %0 to %1 has undefined behavior
__declspec attribute %0 is not supported
method %0 in protocol %1 not implemented
no method with selector %0 is implemented in this translation unit
block pointer variable %0 is uninitialized when captured by block
variable %0 is uninitialized when used within its own initialization
reference %0 is not yet bound to a value when used within its own initialization
variable %0 is uninitialized when %select{used here|captured by block}1
unknown attribute %0 ignored
unlocking '%0' that was not locked
packed attribute is unnecessary for %0
%select{function|variable}0 %1 is not needed and will not be emitted
member function %0 is not needed and will not be emitted
'static' function %0 declared in header file should be declared 'static inline'
will never be executed
default label in switch which covers all enumeration values
multiple unsequenced modifications to %0
unsequenced modification and access to %0
ignoring return value of function declared with %0 attribute
%select{equality|inequality}0 comparison result unused
unused variable %0
container access result unused - container access should not be used for side effects
unused exception parameter %0
expression result unused
unused function %0
unused label %0
unused member function %0
unused parameter %0
private field %0 is not used
ivar %0 which backs the property is not referenced in this property's accessor
property access result unused - getters should not be used for side effects
ignoring return value of function declared with warn_unused_result attribute
expression result unused; should this cast be to 'void'?
expression result unused; assign into a variable to force a volatile load
expression result would be unused in standard C++98; please switch to C++11 mode or assign into a variable to force a volatile load
invalid invocation of method '%0' on object '%1' while it is in the '%2' state
invalid invocation of method '%0' on a temporary object while it is in the '%1' state
use of out-of-scope declaration of %0
%0 was marked unused but was used
user-defined literal suffixes not starting with '_' are reserved%select{; no literal will invoke this operator|}0
inheriting constructor does not inherit ellipsis
using namespace directive in global context in header
'va_start' has undefined behavior with reference types
%select{reading|writing}1 the value pointed to by '%0' requires locking %select{any mutex|any mutex exclusively}1
%select{reading|writing}2 the value pointed to by '%0' requires locking %select{'%1'|'%1' exclusively}2
%select{reading|writing}1 variable '%0' requires locking %select{any mutex|any mutex exclusively}1
%select{reading|writing}2 variable '%0' requires locking %select{'%1'|'%1' exclusively}2
variable%select{s| %1|s %1 and %2|s %1, %2, and %3|s %1, %2, %3, and %4}0 used in loop condition not modified in loop body
defaulted move assignment operator of %0 will move assign virtual base class %1 multiple times
variable length array used
weak identifier %0 never declared
an already-declared variable is made a weak_import declaration %0
explicit template instantiation %0 will emit a vtable in every translation unit
%0 has no out-of-line virtual method definitions; its vtable will be emitted in every translation unit
%select{|empty }0%select{struct|union}1 has size 0 in C, %select{size 1|non-zero size}2 in C++
Lexical or Preprocessor Issue
Semantic Issue
Lambda Issue
Parse Issue
ARC Semantic Issue
ARC and @properties
ARC Casting Rules
ARC Parse Issue
ARC Weak References
ARC Restrictions
Inline Assembly Issue
Modules Issue
OpenMP Issue
User Defined Issues
Value Conversion Issue
Documentation Issue
ARC Retain Cycle
Related Result Type Issue
#warning Directive
Deprecations
Format String Issue
Cocoa API Issue
#pragma message Directive
Unused Entity Issue
*** File Manager Stats:
 real files found, 
 real dirs found.
 virtual files found, 
 virtual dirs found.
 dir lookups, 
 dir cache misses.
 file lookups, 
 file cache misses.
import
break
case
continue
else
float
goto
long
restrict
short
signed
sizeof
struct
typedef
union
unsigned
void
while
_Alignas
_Alignof
_Atomic
_Bool
_Complex
_Generic
_Imaginary
_Noreturn
_Static_assert
_Thread_local
__func__
__objc_yes
__objc_no
catch
class
const_cast
delete
dynamic_cast
explicit
export
friend
mutable
namespace
operator
public
reinterpret_cast
static_cast
template
this
throw
typename
typeid
virtual
wchar_t
and_eq
bitand
bitor
compl
not_eq
or_eq
xor_eq
alignas
alignof
char16_t
char32_t
constexpr
decltype
noexcept
nullptr
static_assert
thread_local
_Decimal32
_Decimal64
_Decimal128
__null
__alignof
__attribute
__builtin_choose_expr
__builtin_offsetof
__builtin_types_compatible_p
__builtin_va_arg
__extension__
__int128
__label__
__real
__thread
__FUNCTION__
__PRETTY_FUNCTION__
typeof
__FUNCDNAME__
L__FUNCTION__
__is_interface_class
__is_sealed
__is_destructible
__is_nothrow_destructible
__is_nothrow_assignable
__is_constructible
__is_nothrow_constructible
__has_nothrow_assign
__has_nothrow_move_assign
__has_nothrow_copy
__has_nothrow_constructor
__has_trivial_assign
__has_trivial_move_assign
__has_trivial_copy
__has_trivial_constructor
__has_trivial_move_constructor
__has_trivial_destructor
__has_virtual_destructor
__is_abstract
__is_base_of
__is_class
__is_convertible_to
__is_empty
__is_enum
__is_final
__is_literal
__is_literal_type
__is_pod
__is_polymorphic
__is_trivial
__is_union
__is_trivially_constructible
__is_trivially_copyable
__is_trivially_assignable
__underlying_type
__is_lvalue_expr
__is_rvalue_expr
__is_arithmetic
__is_floating_point
__is_integral
__is_complete_type
__is_void
__is_array
__is_function
__is_reference
__is_lvalue_reference
__is_rvalue_reference
__is_fundamental
__is_object
__is_scalar
__is_compound
__is_pointer
__is_member_object_pointer
__is_member_function_pointer
__is_member_pointer
__is_const
__is_volatile
__is_standard_layout
__is_signed
__is_unsigned
__is_same
__is_convertible
__array_rank
__array_extent
__module_private__
__builtin_convert
__cdecl
__stdcall
__fastcall
__thiscall
__forceinline
__unaligned
__global
__local
__constant
__private
constant
__kernel
device
threadgroup
__read_only
__write_only
__read_write
read_only
write_only
read_write
__builtin_astype
vec_step
vertex
vertex_fetch
fragment
as_type
__metal_internal_int64_t
__pascal
__vector
__pixel
__fp16
half
__bridge
__bridge_retain
__alignof__
__asm
__asm__
__attribute__
__complex
__complex__
__const__
__decltype
__imag__
__inline
__inline__
__nullptr
__real__
__restrict
__restrict__
__signed
__signed__
__typeof
__typeof__
__volatile
__volatile__
__ptr64
__ptr32
__sptr
__uptr
__w64
__uuidof
__try
__finally
__leave
__int64
__if_exists
__if_not_exists
__single_inheritance
__multiple_inheritance
__virtual_inheritance
__interface
__int8
__int16
__int32
__wchar_t
_asm
_alignof
__builtin_alignof
_cdecl
_fastcall
_stdcall
_thiscall
_uuidof
_inline
_declspec
_pascal
__builtin_convertvector
__char16_t
__char32_t
not_keyword
compatibility_alias
defs
encode
implementation
interface
protocol
selector
finally
synchronized
autoreleasepool
property
package
required
optional
synthesize
__unknown_anytype
elif
line
sccs
endif
ident
ifdef
define
ifndef
pragma
defined
warning
unassert
include_next
__public_macro
__private_macro
__include_macros
*** Identifier Table Stats:
# Identifiers:   %d
# Empty Buckets: %d
Hash density (#identifiers per bucket): %f
Ave identifier length: %f
Max identifier length: %d
<null selector>
autorelease
dealloc
finalize
release
retain
retainCount
self
performSelector
alloc
copy
mutableCopy
array
dictionary
standard
new[]
delete[]
framework 
explicit 
module 
 [system]
requires 
umbrella header "
umbrella "
config_macros 
[exhaustive]
header "
exclude header "
private header "
export 
use 
link 
conflict 
module * {
export *
cplusplus
cplusplus11
objc
opencl
macosx-fragile
gnustep
objfw
threadprivate
parallel
task
firstprivate
threadprivate or thread local
 <Spelling=
<<<MISSING SOURCE FILE>>>
<invalid>
UTF-16 (BE)
UTF-16 (LE)
UTF-32 (BE)
UTF-32 (LE)
UTF-7
UTF-1
UTF-EBCDIC
SDSU
BOCU-1
GB-18030
<<<INVALID BUFFER>>
<<<<<INVALID SOURCE LOCATION>>>>>
<<<<INVALID BUFFER>>>>
<invalid loc>
*** Source Manager Stats:
 files mapped, 
 mem buffers mapped.
 local SLocEntry's allocated (
 bytes of capacity), 
B of Sloc address space used.
 loaded SLocEntries allocated, 
 bytes of files mapped, 
 files with line #'s computed, 
 files with macro args computed.
FileID scans: 
 linear, 
 binary.
mcount
unsigned char
unsigned short
unsigned int
long int
long unsigned int
long long int
long long unsigned int
itanium
microsoft
__builtin_ptx_ndims
__builtin_ptx_gid
__builtin_ptx_lid
__builtin_ptx_gdim
__builtin_ptx_ldim
__builtin_ptx_tgdim
__builtin_ptx_tgid
__builtin_ptx_off
__builtin_ptx_abs
__builtin_ptx_barrier
__builtin_ptx_mem_barrier_gl
__builtin_ptx_mem_barrier_loc
__builtin_ptx_ceild
__builtin_ptx_ceilf
__builtin_ptx_cosf
__builtin_ptx_divf_approx
__builtin_ptx_ex2f
__builtin_ptx_fabsd
__builtin_ptx_fabsf
__builtin_ptx_floord
__builtin_ptx_floorf
__builtin_ptx_lg2f
__builtin_ptx_maxd
__builtin_ptx_maxf
__builtin_ptx_mind
__builtin_ptx_minf
__builtin_ptx_rcpd
__builtin_ptx_rcpf_approx
__builtin_ptx_roundd
__builtin_ptx_roundf
__builtin_ptx_rsqrtd
__builtin_ptx_rsqrtf
__builtin_ptx_sinf
__builtin_ptx_sqrtd
__builtin_ptx_sqrtf
__builtin_ptx_truncd
__builtin_ptx_truncf
__builtin_ptx_mulf_rz
__builtin_ptx_mulf_rn
__builtin_ptx_muld_rn
__builtin_ptx_addf_rz
__builtin_ptx_addd_rn
__builtin_ptx_fma
dddd
__builtin_ptx_fmaf
ffff
__builtin_ptx_madf
__builtin_ptx_madu24
iiii
__builtin_ptx_mads24
__builtin_ptx_mulu24
__builtin_ptx_muls24
__builtin_ptx_mads_lo
__builtin_ptx_madu_lo
UiUiUiUi
__builtin_ptx_mads64_lo
LiLiLiLi
__builtin_ptx_madu64_lo
ULiULiULiULi
__builtin_ptx_mads_hi
__builtin_ptx_madu_hi
__builtin_ptx_mads64_hi
__builtin_ptx_madu64_hi
__builtin_ptx_add_sat
__builtin_ptx_sub_sat
__builtin_ptx_muls_hi
__builtin_ptx_mulu_hi
UiUiUi
__builtin_ptx_muls64_hi
LiLiLi
__builtin_ptx_mulu64_hi
ULiULiULi
__builtin_ptx_mads_wide
LiiiLi
__builtin_ptx_madu_wide
ULiUiUiULi
__builtin_ptx_muls24_hi
__builtin_ptx_mulu24_hi
__builtin_ptx_mads24_hi
__builtin_ptx_madu24_hi
__builtin_ptx_sads
__builtin_ptx_sadu
__builtin_ptx_maxs
__builtin_ptx_maxu
__builtin_ptx_mins
__builtin_ptx_minu
__builtin_ptx_ssat8
__builtin_ptx_ssat16
__builtin_ptx_ssat32
__builtin_ptx_usat8
UiUi
__builtin_ptx_usat16
__builtin_ptx_usat32
UiULi
__builtin_ptx_read_image1D_int
iiiif
__builtin_ptx_read_image2D_int
iiiiff
__builtin_ptx_read_image3D_int
iiiifff
__builtin_ptx_read_image1D_flt
fiiif
__builtin_ptx_read_image2D_flt
fiiiff
__builtin_ptx_read_image3D_flt
fiiifff
__builtin_ptx_read_image1D_array_int
iiiiif
__builtin_ptx_read_image2D_array_int
iiiiiff
__builtin_ptx_read_image1D_array_flt
fiiiif
__builtin_ptx_read_image2D_array_flt
fiiiiff
__builtin_ptx_read_image1D_buffer_int
iiiii
__builtin_ptx_read_image1D_buffer_flt
fiiii
__builtin_ptx_read_image2D_msaa_int
iiiiiii
__builtin_ptx_read_image2D_msaa_flt
fiiiiii
__builtin_ptx_read_image2D_array_msaa_int
iiiiiiii
__builtin_ptx_read_image2D_array_msaa_flt
fiiiiiii
__builtin_ptx_write_image1Di8
viii
__builtin_ptx_write_image1Di16
__builtin_ptx_write_image1Di32
__builtin_ptx_write_image1Df32
viif
__builtin_ptx_write_image1Dv2i8
viiii
__builtin_ptx_write_image1Dv2i16
__builtin_ptx_write_image1Dv2i32
__builtin_ptx_write_image1Dv2f32
viiff
__builtin_ptx_write_image1Dv4i8
viiiiii
__builtin_ptx_write_image1Dv4i16
__builtin_ptx_write_image1Dv4i32
__builtin_ptx_write_image1Dv4f32
viiffff
__builtin_ptx_write_image2Di8
__builtin_ptx_write_image2Di16
__builtin_ptx_write_image2Di32
__builtin_ptx_write_image2Df32
viiif
__builtin_ptx_write_image2Dv2i8
viiiii
__builtin_ptx_write_image2Dv2i16
__builtin_ptx_write_image2Dv2i32
__builtin_ptx_write_image2Dv2f32
viiiff
__builtin_ptx_write_image2Dv4i8
viiiiiii
__builtin_ptx_write_image2Dv4i16
__builtin_ptx_write_image2Dv4i32
__builtin_ptx_write_image2Dv4f32
viiiffff
__builtin_ptx_write_image1Dv4Fmti32
__builtin_ptx_write_image1Dv4Fmtf32
__builtin_ptx_write_image2Dv4Fmti32
__builtin_ptx_write_image2Dv4Fmtf32
__builtin_ptx_write_image3Dv4Fmti32
viiiiiiii
__builtin_ptx_write_image3Dv4Fmtf32
viiiiffff
__builtin_ptx_write_image3Di8
__builtin_ptx_write_image3Di16
__builtin_ptx_write_image3Di32
__builtin_ptx_write_image3Df32
viiiif
__builtin_ptx_write_image3Dv2i8
__builtin_ptx_write_image3Dv2i16
__builtin_ptx_write_image3Dv2i32
__builtin_ptx_write_image3Dv2f32
viiiiff
__builtin_ptx_write_image3Dv4i8
__builtin_ptx_write_image3Dv4i16
__builtin_ptx_write_image3Dv4i32
__builtin_ptx_write_image3Dv4f32
__builtin_ptx_write_image1D_array_i8
__builtin_ptx_write_image1D_array_i16
__builtin_ptx_write_image1D_array_i32
__builtin_ptx_write_image1D_array_f32
__builtin_ptx_write_image1D_array_v2i8
__builtin_ptx_write_image1D_array_v2i16
__builtin_ptx_write_image1D_array_v2i32
__builtin_ptx_write_image1D_array_v2f32
__builtin_ptx_write_image1D_array_v4i8
__builtin_ptx_write_image1D_array_v4i16
__builtin_ptx_write_image1D_array_v4i32
__builtin_ptx_write_image1D_array_v4f32
__builtin_ptx_write_image2D_array_i8
__builtin_ptx_write_image2D_array_i16
__builtin_ptx_write_image2D_array_i32
__builtin_ptx_write_image2D_array_f32
__builtin_ptx_write_image2D_array_v2i8
__builtin_ptx_write_image2D_array_v2i16
__builtin_ptx_write_image2D_array_v2i32
__builtin_ptx_write_image2D_array_v2f32
__builtin_ptx_write_image2D_array_v4i8
__builtin_ptx_write_image2D_array_v4i16
__builtin_ptx_write_image2D_array_v4i32
__builtin_ptx_write_image2D_array_v4f32
__builtin_ptx_get_surf_array
__builtin_ptx_get_info_base
__builtin_ptx_read_const_buf
__builtin_ptx_v2load_ua
__builtin_ptx_v2load_ua_b8
UiUc*i
__builtin_ptx_v2load_ua_b16
UiUs*i
__builtin_ptx_v2load_ua_b32
UiUi*i
__builtin_ptx_v2load_ua_b64
ULiULi*i
__builtin_ptx_v4load_ua
__builtin_ptx_v4load_ua_b8
__builtin_ptx_v4load_ua_b16
__builtin_ptx_v4load_ua_b32
__builtin_ptx_v2store
__builtin_ptx_v2store_b8
vUc*UiUi
__builtin_ptx_v2store_b16
vUs*UiUi
__builtin_ptx_v2store_b32
vUi*UiUi
__builtin_ptx_v2store_b64
vULi*ULiULi
__builtin_ptx_v4store
__builtin_ptx_v4store_b8
vUc*UiUiUiUi
__builtin_ptx_v4store_b16
vUs*UiUiUiUi
__builtin_ptx_v4store_b32
vUi*UiUiUiUi
__builtin_ptx_v2store_ua
__builtin_ptx_v2store_ua_b8
__builtin_ptx_v2store_ua_b16
__builtin_ptx_v2store_ua_b32
__builtin_ptx_v2store_ua_b64
__builtin_ptx_v4store_ua
__builtin_ptx_v4store_ua_b8
__builtin_ptx_v4store_ua_b16
__builtin_ptx_v4store_ua_b32
__builtin_ptx_half_to_float
__builtin_ptx_float_to_half_rte
__builtin_ptx_float_to_half_rtz
__builtin_ptx_float_to_half_rtp
__builtin_ptx_float_to_half_rtn
__builtin_ptx_half_to_double
__builtin_ptx_double_to_half_rte
__builtin_ptx_double_to_half_rtz
__builtin_ptx_double_to_half_rtp
__builtin_ptx_double_to_half_rtn
__builtin_ptx_float_to_sat_s8
__builtin_ptx_float_to_sat_s16
__builtin_ptx_float_to_sat_u8
__builtin_ptx_float_to_sat_u16
__builtin_ptx_int_to_sat_s8
__builtin_ptx_int_to_sat_s16
__builtin_ptx_uint_to_sat_u8
__builtin_ptx_uint_to_sat_u16
__builtin_ptx_popc32
__builtin_ptx_popc64
ptx12
ptx13
ptx30
e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:128:128-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-a64:64:64-f80:128:128-n8:16:32
mcount
compute10
compute11
compute12
compute13
compute20
double
no-fma
ptx20
ptx21
ptx22
ptx23
sm10
sm11
sm12
sm13
sm20
sm21
sm22
sm23
_PTX
__PTX__
__ENDIAN_LITTLE__
#define 
__OPENCL_C__
__ROUNDING_MODE__
__TEXT,__StaticInit,regular,pure_instructions
__APPLE_CC__
6000
__APPLE__
OBJC_NEW_PROPERTIES
_FORTIFY_SOURCE
clang-
__apple_build_version__
__weak
__attribute__((objc_gc(weak)))
__strong
__attribute__((objc_gc(strong)))
__unsafe_unretained
__STATIC__
__DYNAMIC__
_REENTRANT
__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
__MACH__
e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:128:128-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-a64:64:64-f80:128:128-n8:16:32
__AMD64__
_AMDil64
__AMDil64__
__AMD__
_AMDil
__AMDil__
e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:128:128-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-f80:128:128-n8:16:32
cl_APPLE_fp16_basic_ops
__builtin_ia32_femms
__builtin_ia32_pavgusb
V8cV8cV8c
__builtin_ia32_pf2id
V2iV2f
__builtin_ia32_pfacc
V2fV2fV2f
__builtin_ia32_pfadd
__builtin_ia32_pfcmpeq
V2iV2fV2f
__builtin_ia32_pfcmpge
__builtin_ia32_pfcmpgt
__builtin_ia32_pfmax
__builtin_ia32_pfmin
__builtin_ia32_pfmul
__builtin_ia32_pfrcp
V2fV2f
__builtin_ia32_pfrcpit1
__builtin_ia32_pfrcpit2
__builtin_ia32_pfrsqrt
__builtin_ia32_pfrsqit1
__builtin_ia32_pfsub
__builtin_ia32_pfsubr
__builtin_ia32_pi2fd
V2fV2i
__builtin_ia32_pmulhrw
V4sV4sV4s
__builtin_ia32_pf2iw
__builtin_ia32_pfnacc
__builtin_ia32_pfpnacc
__builtin_ia32_pi2fw
__builtin_ia32_pswapdsf
__builtin_ia32_pswapdsi
V2iV2i
__builtin_ia32_emms
__builtin_ia32_paddb
__builtin_ia32_paddw
__builtin_ia32_paddd
V2iV2iV2i
__builtin_ia32_paddsb
__builtin_ia32_paddsw
__builtin_ia32_paddusb
__builtin_ia32_paddusw
__builtin_ia32_psubb
__builtin_ia32_psubw
__builtin_ia32_psubd
__builtin_ia32_psubsb
__builtin_ia32_psubsw
__builtin_ia32_psubusb
__builtin_ia32_psubusw
__builtin_ia32_pmulhw
__builtin_ia32_pmullw
__builtin_ia32_pmaddwd
V2iV4sV4s
__builtin_ia32_pand
V1LLiV1LLiV1LLi
__builtin_ia32_pandn
__builtin_ia32_pxor
__builtin_ia32_psllw
V4sV4sV1LLi
__builtin_ia32_pslld
V2iV2iV1LLi
__builtin_ia32_psllq
__builtin_ia32_psrlw
__builtin_ia32_psrld
__builtin_ia32_psrlq
__builtin_ia32_psraw
__builtin_ia32_psrad
__builtin_ia32_psllwi
V4sV4si
__builtin_ia32_pslldi
V2iV2ii
__builtin_ia32_psllqi
V1LLiV1LLii
__builtin_ia32_psrlwi
__builtin_ia32_psrldi
__builtin_ia32_psrlqi
__builtin_ia32_psrawi
__builtin_ia32_psradi
__builtin_ia32_packsswb
V8cV4sV4s
__builtin_ia32_packssdw
V4sV2iV2i
__builtin_ia32_packuswb
__builtin_ia32_punpckhbw
__builtin_ia32_punpckhwd
__builtin_ia32_punpckhdq
__builtin_ia32_punpcklbw
__builtin_ia32_punpcklwd
__builtin_ia32_punpckldq
__builtin_ia32_pcmpeqb
__builtin_ia32_pcmpeqw
__builtin_ia32_pcmpeqd
__builtin_ia32_pcmpgtb
__builtin_ia32_pcmpgtw
__builtin_ia32_pcmpgtd
__builtin_ia32_maskmovq
vV8cV8cc*
__builtin_ia32_movntq
vV1LLi*V1LLi
__builtin_ia32_vec_init_v2si
V2iii
__builtin_ia32_vec_init_v4hi
V4sssss
__builtin_ia32_vec_init_v8qi
V8ccccccccc
__builtin_ia32_vec_ext_v2si
iV2ii
__builtin_ia32_cvtpi2ps
V4fV4fV2i
__builtin_ia32_cvtps2pi
V2iV4f
__builtin_ia32_cvttps2pi
__builtin_ia32_pavgb
__builtin_ia32_pavgw
__builtin_ia32_pmaxsw
__builtin_ia32_pmaxub
__builtin_ia32_pminsw
__builtin_ia32_pminub
__builtin_ia32_pmovmskb
iV8c
__builtin_ia32_pmulhuw
__builtin_ia32_psadbw
V4sV8cV8c
__builtin_ia32_pshufw
V4sV4sIc
__builtin_ia32_cvtpd2pi
V2iV2d
__builtin_ia32_cvtpi2pd
V2dV2i
__builtin_ia32_cvttpd2pi
__builtin_ia32_paddq
__builtin_ia32_pmuludq
V1LLiV2iV2i
__builtin_ia32_psubq
__builtin_ia32_pabsb
V8cV8c
__builtin_ia32_pabsd
__builtin_ia32_pabsw
V4sV4s
__builtin_ia32_palignr
V8cV8cV8cIc
__builtin_ia32_phaddd
__builtin_ia32_phaddsw
__builtin_ia32_phaddw
__builtin_ia32_phsubd
__builtin_ia32_phsubsw
__builtin_ia32_phsubw
__builtin_ia32_pmaddubsw
__builtin_ia32_pmulhrsw
__builtin_ia32_pshufb
__builtin_ia32_psignw
__builtin_ia32_psignb
__builtin_ia32_psignd
__builtin_ia32_comieq
iV4fV4f
__builtin_ia32_comilt
__builtin_ia32_comile
__builtin_ia32_comigt
__builtin_ia32_comige
__builtin_ia32_comineq
__builtin_ia32_ucomieq
__builtin_ia32_ucomilt
__builtin_ia32_ucomile
__builtin_ia32_ucomigt
__builtin_ia32_ucomige
__builtin_ia32_ucomineq
__builtin_ia32_comisdeq
iV2dV2d
__builtin_ia32_comisdlt
__builtin_ia32_comisdle
__builtin_ia32_comisdgt
__builtin_ia32_comisdge
__builtin_ia32_comisdneq
__builtin_ia32_ucomisdeq
__builtin_ia32_ucomisdlt
__builtin_ia32_ucomisdle
__builtin_ia32_ucomisdgt
__builtin_ia32_ucomisdge
__builtin_ia32_ucomisdneq
__builtin_ia32_cmpps
V4fV4fV4fIc
__builtin_ia32_cmpss
__builtin_ia32_minps
V4fV4fV4f
__builtin_ia32_maxps
__builtin_ia32_minss
__builtin_ia32_maxss
__builtin_ia32_cmppd
V2dV2dV2dIc
__builtin_ia32_cmpsd
__builtin_ia32_minpd
V2dV2dV2d
__builtin_ia32_maxpd
__builtin_ia32_minsd
__builtin_ia32_maxsd
__builtin_ia32_paddsb128
V16cV16cV16c
__builtin_ia32_paddsw128
V8sV8sV8s
__builtin_ia32_psubsb128
__builtin_ia32_psubsw128
__builtin_ia32_paddusb128
__builtin_ia32_paddusw128
__builtin_ia32_psubusb128
__builtin_ia32_psubusw128
__builtin_ia32_pmulhw128
__builtin_ia32_pavgb128
__builtin_ia32_pavgw128
__builtin_ia32_pmaxub128
__builtin_ia32_pmaxsw128
__builtin_ia32_pminub128
__builtin_ia32_pminsw128
__builtin_ia32_packsswb128
V16cV8sV8s
__builtin_ia32_packssdw128
V8sV4iV4i
__builtin_ia32_packuswb128
__builtin_ia32_pmulhuw128
__builtin_ia32_addsubps
__builtin_ia32_addsubpd
__builtin_ia32_haddps
__builtin_ia32_haddpd
__builtin_ia32_hsubps
__builtin_ia32_hsubpd
__builtin_ia32_phaddw128
__builtin_ia32_phaddd128
V4iV4iV4i
__builtin_ia32_phaddsw128
__builtin_ia32_phsubw128
__builtin_ia32_phsubd128
__builtin_ia32_phsubsw128
__builtin_ia32_pmaddubsw128
V8sV16cV16c
__builtin_ia32_pmulhrsw128
__builtin_ia32_pshufb128
__builtin_ia32_psignb128
__builtin_ia32_psignw128
__builtin_ia32_psignd128
__builtin_ia32_pabsb128
V16cV16c
__builtin_ia32_pabsw128
V8sV8s
__builtin_ia32_pabsd128
V4iV4i
__builtin_ia32_ldmxcsr
__builtin_ia32_stmxcsr
__builtin_ia32_cvtss2si
iV4f
__builtin_ia32_cvtss2si64
LLiV4f
__builtin_ia32_loadups
V4ffC*
__builtin_ia32_loadupd
V2ddC*
__builtin_ia32_loaddqu
V16ccC*
__builtin_ia32_storeups
vf*V4f
__builtin_ia32_storehps
vV2i*V4f
__builtin_ia32_storelps
__builtin_ia32_movmskps
__builtin_ia32_movntps
__builtin_ia32_sfence
__builtin_ia32_rcpps
V4fV4f
__builtin_ia32_rcpss
__builtin_ia32_rsqrtps
__builtin_ia32_rsqrtss
__builtin_ia32_sqrtps
__builtin_ia32_sqrtss
__builtin_ia32_maskmovdqu
vV16cV16cc*
__builtin_ia32_storeupd
vd*V2d
__builtin_ia32_movmskpd
iV2d
__builtin_ia32_pmovmskb128
iV16c
__builtin_ia32_movnti
vi*i
__builtin_ia32_movnti64
vLLi*LLi
__builtin_ia32_movntpd
__builtin_ia32_movntdq
vV2LLi*V2LLi
__builtin_ia32_psadbw128
V2LLiV16cV16c
__builtin_ia32_sqrtpd
V2dV2d
__builtin_ia32_sqrtsd
__builtin_ia32_cvtdq2pd
V2dV4i
__builtin_ia32_cvtdq2ps
V4fV4i
__builtin_ia32_cvtpd2dq
V2LLiV2d
__builtin_ia32_cvtpd2ps
V4fV2d
__builtin_ia32_cvttpd2dq
V4iV2d
__builtin_ia32_cvtsd2si
__builtin_ia32_cvtsd2si64
LLiV2d
__builtin_ia32_cvtps2dq
V4iV4f
__builtin_ia32_cvtps2pd
V2dV4f
__builtin_ia32_cvttps2dq
__builtin_ia32_clflush
vvC*
__builtin_ia32_lfence
__builtin_ia32_mfence
__builtin_ia32_storedqu
vc*V16c
__builtin_ia32_pmuludq128
V2LLiV4iV4i
__builtin_ia32_psraw128
__builtin_ia32_psrad128
__builtin_ia32_psrlw128
__builtin_ia32_psrld128
__builtin_ia32_pslldqi128
V2LLiV2LLiIi
__builtin_ia32_psrldqi128
__builtin_ia32_psrlq128
V2LLiV2LLiV2LLi
__builtin_ia32_psllq128
__builtin_ia32_psllw128
__builtin_ia32_pslld128
__builtin_ia32_psllqi128
V2LLiV2LLii
__builtin_ia32_psllwi128
V8sV8si
__builtin_ia32_pslldi128
V4iV4ii
__builtin_ia32_psrlwi128
__builtin_ia32_psrldi128
__builtin_ia32_psrlqi128
__builtin_ia32_psrawi128
__builtin_ia32_psradi128
__builtin_ia32_pmaddwd128
V4iV8sV8s
__builtin_ia32_monitor
vv*UiUi
__builtin_ia32_mwait
vUiUi
__builtin_ia32_lddqu
__builtin_ia32_palignr128
V16cV16cV16cIc
__builtin_ia32_insertps128
V4fV4fV4fi
__builtin_ia32_storelv4si
vV2i*V2LLi
__builtin_ia32_pblendvb128
V16cV16cV16cV16c
__builtin_ia32_pblendw128
V8sV8sV8sIi
__builtin_ia32_blendpd
V2dV2dV2dIi
__builtin_ia32_blendps
V4fV4fV4fIi
__builtin_ia32_blendvpd
V2dV2dV2dV2d
__builtin_ia32_blendvps
V4fV4fV4fV4f
__builtin_ia32_packusdw128
__builtin_ia32_pmaxsb128
__builtin_ia32_pmaxsd128
__builtin_ia32_pmaxud128
__builtin_ia32_pmaxuw128
__builtin_ia32_pminsb128
__builtin_ia32_pminsd128
__builtin_ia32_pminud128
__builtin_ia32_pminuw128
__builtin_ia32_pmovsxbd128
V4iV16c
__builtin_ia32_pmovsxbq128
V2LLiV16c
__builtin_ia32_pmovsxbw128
V8sV16c
__builtin_ia32_pmovsxdq128
V2LLiV4i
__builtin_ia32_pmovsxwd128
V4iV8s
__builtin_ia32_pmovsxwq128
V2LLiV8s
__builtin_ia32_pmovzxbd128
__builtin_ia32_pmovzxbq128
__builtin_ia32_pmovzxbw128
__builtin_ia32_pmovzxdq128
__builtin_ia32_pmovzxwd128
__builtin_ia32_pmovzxwq128
__builtin_ia32_pmuldq128
__builtin_ia32_pmulld128
__builtin_ia32_roundps
V4fV4fi
__builtin_ia32_roundss
__builtin_ia32_roundsd
V2dV2dV2di
__builtin_ia32_roundpd
V2dV2di
__builtin_ia32_dpps
__builtin_ia32_dppd
__builtin_ia32_movntdqa
V2LLiV2LLi*
__builtin_ia32_ptestz128
iV2LLiV2LLi
__builtin_ia32_ptestc128
__builtin_ia32_ptestnzc128
__builtin_ia32_mpsadbw128
V16cV16cV16ci
__builtin_ia32_phminposuw128
__builtin_ia32_pcmpistrm128
__builtin_ia32_pcmpistri128
iV16cV16cIc
__builtin_ia32_pcmpestrm128
V16cV16ciV16ciIc
__builtin_ia32_pcmpestri128
iV16ciV16ciIc
__builtin_ia32_pcmpistria128
__builtin_ia32_pcmpistric128
__builtin_ia32_pcmpistrio128
__builtin_ia32_pcmpistris128
__builtin_ia32_pcmpistriz128
__builtin_ia32_pcmpestria128
__builtin_ia32_pcmpestric128
__builtin_ia32_pcmpestrio128
__builtin_ia32_pcmpestris128
__builtin_ia32_pcmpestriz128
__builtin_ia32_crc32qi
UiUiUc
__builtin_ia32_crc32hi
UiUiUs
__builtin_ia32_crc32si
__builtin_ia32_crc32di
ULLiULLiULLi
__builtin_ia32_extrqi
V2LLiV2LLiIcIc
__builtin_ia32_extrq
V2LLiV2LLiV16c
__builtin_ia32_insertqi
V2LLiV2LLiV2LLiIcIc
__builtin_ia32_insertq
__builtin_ia32_movntsd
__builtin_ia32_movntss
__builtin_ia32_aesenc128
__builtin_ia32_aesenclast128
__builtin_ia32_aesdec128
__builtin_ia32_aesdeclast128
__builtin_ia32_aesimc128
V2LLiV2LLi
__builtin_ia32_aeskeygenassist128
V2LLiV2LLiIc
__builtin_ia32_pclmulqdq128
V2LLiV2LLiV2LLiIc
__builtin_ia32_addsubpd256
V4dV4dV4d
__builtin_ia32_addsubps256
V8fV8fV8f
__builtin_ia32_haddpd256
__builtin_ia32_hsubps256
__builtin_ia32_hsubpd256
__builtin_ia32_haddps256
__builtin_ia32_maxpd256
__builtin_ia32_maxps256
__builtin_ia32_minpd256
__builtin_ia32_minps256
__builtin_ia32_vpermilvarpd
V2dV2dV2LLi
__builtin_ia32_vpermilvarps
V4fV4fV4i
__builtin_ia32_vpermilvarpd256
V4dV4dV4LLi
__builtin_ia32_vpermilvarps256
V8fV8fV8i
__builtin_ia32_blendpd256
V4dV4dV4dIi
__builtin_ia32_blendps256
V8fV8fV8fIi
__builtin_ia32_blendvpd256
V4dV4dV4dV4d
__builtin_ia32_blendvps256
V8fV8fV8fV8f
__builtin_ia32_dpps256
__builtin_ia32_cmppd256
V4dV4dV4dc
__builtin_ia32_cmpps256
V8fV8fV8fc
__builtin_ia32_vextractf128_pd256
V2dV4dIc
__builtin_ia32_vextractf128_ps256
V4fV8fIc
__builtin_ia32_vextractf128_si256
V4iV8iIc
__builtin_ia32_cvtdq2pd256
V4dV4i
__builtin_ia32_cvtdq2ps256
V8fV8i
__builtin_ia32_cvtpd2ps256
V4fV4d
__builtin_ia32_cvtps2dq256
V8iV8f
__builtin_ia32_cvtps2pd256
V4dV4f
__builtin_ia32_cvttpd2dq256
V4iV4d
__builtin_ia32_cvtpd2dq256
__builtin_ia32_cvttps2dq256
__builtin_ia32_vperm2f128_pd256
V4dV4dV4dIc
__builtin_ia32_vperm2f128_ps256
V8fV8fV8fIc
__builtin_ia32_vperm2f128_si256
V8iV8iV8iIc
__builtin_ia32_vinsertf128_pd256
V4dV4dV2dIc
__builtin_ia32_vinsertf128_ps256
V8fV8fV4fIc
__builtin_ia32_vinsertf128_si256
V8iV8iV4iIc
__builtin_ia32_sqrtpd256
V4dV4d
__builtin_ia32_sqrtps256
V8fV8f
__builtin_ia32_rsqrtps256
__builtin_ia32_rcpps256
__builtin_ia32_roundpd256
V4dV4dIi
__builtin_ia32_roundps256
V8fV8fIi
__builtin_ia32_vtestzpd
__builtin_ia32_vtestcpd
__builtin_ia32_vtestnzcpd
__builtin_ia32_vtestzps
__builtin_ia32_vtestcps
__builtin_ia32_vtestnzcps
__builtin_ia32_vtestzpd256
iV4dV4d
__builtin_ia32_vtestcpd256
__builtin_ia32_vtestnzcpd256
__builtin_ia32_vtestzps256
iV8fV8f
__builtin_ia32_vtestcps256
__builtin_ia32_vtestnzcps256
__builtin_ia32_ptestz256
iV4LLiV4LLi
__builtin_ia32_ptestc256
__builtin_ia32_ptestnzc256
__builtin_ia32_movmskpd256
iV4d
__builtin_ia32_movmskps256
iV8f
__builtin_ia32_vzeroall
__builtin_ia32_vzeroupper
__builtin_ia32_vbroadcastss
__builtin_ia32_vbroadcastsd256
V4ddC*
__builtin_ia32_vbroadcastss256
V8ffC*
__builtin_ia32_vbroadcastf128_pd256
V4dV2dC*
__builtin_ia32_vbroadcastf128_ps256
V8fV4fC*
__builtin_ia32_storeupd256
vd*V4d
__builtin_ia32_storeups256
vf*V8f
__builtin_ia32_storedqu256
vc*V32c
__builtin_ia32_lddqu256
V32ccC*
__builtin_ia32_movntdq256
vV4LLi*V4LLi
__builtin_ia32_movntpd256
__builtin_ia32_movntps256
__builtin_ia32_maskloadpd
V2dV2dC*V2d
__builtin_ia32_maskloadps
V4fV4fC*V4f
__builtin_ia32_maskloadpd256
V4dV4dC*V4d
__builtin_ia32_maskloadps256
V8fV8fC*V8f
__builtin_ia32_maskstorepd
vV2d*V2dV2d
__builtin_ia32_maskstoreps
vV4f*V4fV4f
__builtin_ia32_maskstorepd256
vV4d*V4dV4d
__builtin_ia32_maskstoreps256
vV8f*V8fV8f
__builtin_ia32_mpsadbw256
V32cV32cV32ci
__builtin_ia32_pabsb256
V32cV32c
__builtin_ia32_pabsw256
V16sV16s
__builtin_ia32_pabsd256
V8iV8i
__builtin_ia32_packsswb256
V32cV16sV16s
__builtin_ia32_packssdw256
V16sV8iV8i
__builtin_ia32_packuswb256
__builtin_ia32_packusdw256
__builtin_ia32_paddsb256
V32cV32cV32c
__builtin_ia32_paddsw256
V16sV16sV16s
__builtin_ia32_psubsb256
__builtin_ia32_psubsw256
__builtin_ia32_paddusb256
__builtin_ia32_paddusw256
__builtin_ia32_psubusb256
__builtin_ia32_psubusw256
__builtin_ia32_palignr256
V32cV32cV32cIc
__builtin_ia32_pavgb256
__builtin_ia32_pavgw256
__builtin_ia32_pblendvb256
V32cV32cV32cV32c
__builtin_ia32_pblendw256
V16sV16sV16sIi
__builtin_ia32_phaddw256
__builtin_ia32_phaddd256
V8iV8iV8i
__builtin_ia32_phaddsw256
__builtin_ia32_phsubw256
__builtin_ia32_phsubd256
__builtin_ia32_phsubsw256
__builtin_ia32_pmaddubsw256
V16sV32cV32c
__builtin_ia32_pmaddwd256
V8iV16sV16s
__builtin_ia32_pmaxub256
__builtin_ia32_pmaxuw256
__builtin_ia32_pmaxud256
__builtin_ia32_pmaxsb256
__builtin_ia32_pmaxsw256
__builtin_ia32_pmaxsd256
__builtin_ia32_pminub256
__builtin_ia32_pminuw256
__builtin_ia32_pminud256
__builtin_ia32_pminsb256
__builtin_ia32_pminsw256
__builtin_ia32_pminsd256
__builtin_ia32_pmovmskb256
iV32c
__builtin_ia32_pmovsxbw256
V16sV16c
__builtin_ia32_pmovsxbd256
V8iV16c
__builtin_ia32_pmovsxbq256
V4LLiV16c
__builtin_ia32_pmovsxwd256
V8iV8s
__builtin_ia32_pmovsxwq256
V4LLiV8s
__builtin_ia32_pmovsxdq256
V4LLiV4i
__builtin_ia32_pmovzxbw256
__builtin_ia32_pmovzxbd256
__builtin_ia32_pmovzxbq256
__builtin_ia32_pmovzxwd256
__builtin_ia32_pmovzxwq256
__builtin_ia32_pmovzxdq256
__builtin_ia32_pmuldq256
V4LLiV8iV8i
__builtin_ia32_pmulhrsw256
__builtin_ia32_pmulhuw256
__builtin_ia32_pmulhw256
__builtin_ia32_pmuludq256
__builtin_ia32_psadbw256
V4LLiV32cV32c
__builtin_ia32_pshufb256
__builtin_ia32_psignb256
__builtin_ia32_psignw256
__builtin_ia32_psignd256
__builtin_ia32_pslldqi256
V4LLiV4LLiIi
__builtin_ia32_psllwi256
V16sV16si
__builtin_ia32_psllw256
V16sV16sV8s
__builtin_ia32_pslldi256
V8iV8ii
__builtin_ia32_pslld256
V8iV8iV4i
__builtin_ia32_psllqi256
V4LLiV4LLii
__builtin_ia32_psllq256
V4LLiV4LLiV2LLi
__builtin_ia32_psrawi256
__builtin_ia32_psraw256
__builtin_ia32_psradi256
__builtin_ia32_psrad256
__builtin_ia32_psrldqi256
__builtin_ia32_psrlwi256
__builtin_ia32_psrlw256
__builtin_ia32_psrldi256
__builtin_ia32_psrld256
__builtin_ia32_psrlqi256
__builtin_ia32_psrlq256
__builtin_ia32_movntdqa256
V4LLiV4LLi*
__builtin_ia32_vbroadcastss_ps
__builtin_ia32_vbroadcastss_ps256
V8fV4f
__builtin_ia32_vbroadcastsd_pd256
V4dV2d
__builtin_ia32_vbroadcastsi256
V4LLiV2LLi
__builtin_ia32_pblendd128
V4iV4iV4iIi
__builtin_ia32_pblendd256
V8iV8iV8iIi
__builtin_ia32_pbroadcastb256
V32cV16c
__builtin_ia32_pbroadcastw256
V16sV8s
__builtin_ia32_pbroadcastd256
V8iV4i
__builtin_ia32_pbroadcastq256
__builtin_ia32_pbroadcastb128
__builtin_ia32_pbroadcastw128
__builtin_ia32_pbroadcastd128
__builtin_ia32_pbroadcastq128
__builtin_ia32_permvarsi256
__builtin_ia32_permvarsf256
__builtin_ia32_permti256
V4LLiV4LLiV4LLiIc
__builtin_ia32_extract128i256
V2LLiV4LLiIc
__builtin_ia32_insert128i256
V4LLiV4LLiV2LLiIc
__builtin_ia32_maskloadd256
V8iV8iC*V8i
__builtin_ia32_maskloadq256
V4LLiV4LLiC*V4LLi
__builtin_ia32_maskloadd
V4iV4iC*V4i
__builtin_ia32_maskloadq
V2LLiV2LLiC*V2LLi
__builtin_ia32_maskstored256
vV8i*V8iV8i
__builtin_ia32_maskstoreq256
vV4LLi*V4LLiV4LLi
__builtin_ia32_maskstored
vV4i*V4iV4i
__builtin_ia32_maskstoreq
vV2LLi*V2LLiV2LLi
__builtin_ia32_psllv8si
__builtin_ia32_psllv4si
__builtin_ia32_psllv4di
V4LLiV4LLiV4LLi
__builtin_ia32_psllv2di
__builtin_ia32_psrav8si
__builtin_ia32_psrav4si
__builtin_ia32_psrlv8si
__builtin_ia32_psrlv4si
__builtin_ia32_psrlv4di
__builtin_ia32_psrlv2di
__builtin_ia32_gatherd_pd
V2dV2dV2dC*V4iV2dIc
__builtin_ia32_gatherd_pd256
V4dV4dV4dC*V4iV4dIc
__builtin_ia32_gatherq_pd
V2dV2dV2dC*V2LLiV2dIc
__builtin_ia32_gatherq_pd256
V4dV4dV4dC*V4LLiV4dIc
__builtin_ia32_gatherd_ps
V4fV4fV4fC*V4iV4fIc
__builtin_ia32_gatherd_ps256
V8fV8fV8fC*V8iV8fIc
__builtin_ia32_gatherq_ps
V4fV4fV4fC*V2LLiV4fIc
__builtin_ia32_gatherq_ps256
V4fV4fV4fC*V4LLiV4fIc
__builtin_ia32_gatherd_q
V2LLiV2LLiV2LLiC*V4iV2LLiIc
__builtin_ia32_gatherd_q256
V4LLiV4LLiV4LLiC*V4iV4LLiIc
__builtin_ia32_gatherq_q
V2LLiV2LLiV2LLiC*V2LLiV2LLiIc
__builtin_ia32_gatherq_q256
V4LLiV4LLiV4LLiC*V4LLiV4LLiIc
__builtin_ia32_gatherd_d
V4iV4iV4iC*V4iV4iIc
__builtin_ia32_gatherd_d256
V8iV8iV8iC*V8iV8iIc
__builtin_ia32_gatherq_d
V4iV4iV4iC*V2LLiV4iIc
__builtin_ia32_gatherq_d256
V4iV4iV4iC*V4LLiV4iIc
__builtin_ia32_vcvtps2ph
V8sV4fIi
__builtin_ia32_vcvtps2ph256
V8sV8fIi
__builtin_ia32_vcvtph2ps
V4fV8s
__builtin_ia32_vcvtph2ps256
V8fV8s
__builtin_ia32_rdrand16_step
UiUs*
__builtin_ia32_rdrand32_step
UiUi*
__builtin_ia32_rdrand64_step
UiULLi*
__builtin_ia32_rdseed16_step
__builtin_ia32_rdseed32_step
__builtin_ia32_rdseed64_step
__builtin_ia32_bextr_u32
__builtin_ia32_bextr_u64
__builtin_ia32_bzhi_si
__builtin_ia32_bzhi_di
__builtin_ia32_pdep_si
__builtin_ia32_pdep_di
__builtin_ia32_pext_si
__builtin_ia32_pext_di
__builtin_ia32_bextri_u32
UiUiIUi
__builtin_ia32_bextri_u64
ULLiULLiIULLi
__builtin_ia32_sha1rnds4
V4iV4iV4iIc
__builtin_ia32_sha1nexte
__builtin_ia32_sha1msg1
__builtin_ia32_sha1msg2
__builtin_ia32_sha256rnds2
V4iV4iV4iV4i
__builtin_ia32_sha256msg1
__builtin_ia32_sha256msg2
__builtin_ia32_vfmaddps
__builtin_ia32_vfmaddpd
__builtin_ia32_vfmaddss
__builtin_ia32_vfmaddsd
__builtin_ia32_vfmsubps
__builtin_ia32_vfmsubpd
__builtin_ia32_vfmsubss
__builtin_ia32_vfmsubsd
__builtin_ia32_vfnmaddps
__builtin_ia32_vfnmaddpd
__builtin_ia32_vfnmaddss
__builtin_ia32_vfnmaddsd
__builtin_ia32_vfnmsubps
__builtin_ia32_vfnmsubpd
__builtin_ia32_vfnmsubss
__builtin_ia32_vfnmsubsd
__builtin_ia32_vfmaddsubps
__builtin_ia32_vfmaddsubpd
__builtin_ia32_vfmsubaddps
__builtin_ia32_vfmsubaddpd
__builtin_ia32_vfmaddps256
__builtin_ia32_vfmaddpd256
__builtin_ia32_vfmsubps256
__builtin_ia32_vfmsubpd256
__builtin_ia32_vfnmaddps256
__builtin_ia32_vfnmaddpd256
__builtin_ia32_vfnmsubps256
__builtin_ia32_vfnmsubpd256
__builtin_ia32_vfmaddsubps256
__builtin_ia32_vfmaddsubpd256
__builtin_ia32_vfmsubaddps256
__builtin_ia32_vfmsubaddpd256
__builtin_ia32_vpmacssww
V8sV8sV8sV8s
__builtin_ia32_vpmacsww
__builtin_ia32_vpmacsswd
V4iV8sV8sV4i
__builtin_ia32_vpmacswd
__builtin_ia32_vpmacssdd
__builtin_ia32_vpmacsdd
__builtin_ia32_vpmacssdql
V2LLiV4iV4iV2LLi
__builtin_ia32_vpmacsdql
__builtin_ia32_vpmacssdqh
__builtin_ia32_vpmacsdqh
__builtin_ia32_vpmadcsswd
__builtin_ia32_vpmadcswd
__builtin_ia32_vphaddbw
__builtin_ia32_vphaddbd
__builtin_ia32_vphaddbq
__builtin_ia32_vphaddwd
__builtin_ia32_vphaddwq
__builtin_ia32_vphadddq
__builtin_ia32_vphaddubw
__builtin_ia32_vphaddubd
__builtin_ia32_vphaddubq
__builtin_ia32_vphadduwd
__builtin_ia32_vphadduwq
__builtin_ia32_vphaddudq
__builtin_ia32_vphsubbw
__builtin_ia32_vphsubwd
__builtin_ia32_vphsubdq
__builtin_ia32_vpcmov
V2LLiV2LLiV2LLiV2LLi
__builtin_ia32_vpcmov_256
V4LLiV4LLiV4LLiV4LLi
__builtin_ia32_vpperm
__builtin_ia32_vprotb
__builtin_ia32_vprotw
__builtin_ia32_vprotd
__builtin_ia32_vprotq
__builtin_ia32_vprotbi
V16cV16cIc
__builtin_ia32_vprotwi
V8sV8sIc
__builtin_ia32_vprotdi
V4iV4iIc
__builtin_ia32_vprotqi
__builtin_ia32_vpshlb
__builtin_ia32_vpshlw
__builtin_ia32_vpshld
__builtin_ia32_vpshlq
__builtin_ia32_vpshab
__builtin_ia32_vpshaw
__builtin_ia32_vpshad
__builtin_ia32_vpshaq
__builtin_ia32_vpcomub
__builtin_ia32_vpcomuw
V8sV8sV8sIc
__builtin_ia32_vpcomud
__builtin_ia32_vpcomuq
__builtin_ia32_vpcomb
__builtin_ia32_vpcomw
__builtin_ia32_vpcomd
__builtin_ia32_vpcomq
__builtin_ia32_vpermil2pd
V2dV2dV2dV2LLiIc
__builtin_ia32_vpermil2pd256
V4dV4dV4dV4LLiIc
__builtin_ia32_vpermil2ps
V4fV4fV4fV4iIc
__builtin_ia32_vpermil2ps256
V8fV8fV8fV8iIc
__builtin_ia32_vfrczss
__builtin_ia32_vfrczsd
__builtin_ia32_vfrczps
__builtin_ia32_vfrczpd
__builtin_ia32_vfrczps256
__builtin_ia32_vfrczpd256
__builtin_ia32_xbegin
__builtin_ia32_xend
__builtin_ia32_xabort
__builtin_ia32_xtest
fp16
+fp16
e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:128:128-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-f80:128:128-n8:16:32
%u%02u%02u
__AIR64__
__AIR_VERSION__
__builtin_air64_is_fc_defined
bv*16776968
__builtin_air64_patch_control_point_size
typedef char* __builtin_va_list;
__builtin_igil_Unsupported_Functions
__builtin_igil_barrier_Local
__builtin_igil_barrier_Global
__builtin_igil_barrier_All
__builtin_igil_mem_fence_Local
__builtin_igil_mem_fence_Global
__builtin_igil_mem_fence_All
__builtin_igil_get_global_id
__builtin_igil_get_group_id
__builtin_igil_get_local_id
__builtin_igil_get_work_dim
__builtin_igil_get_num_groups
__builtin_igil_get_global_size
__builtin_igil_get_local_size
__builtin_igil_get_global_offset
__builtin_igil_atom_addi32_global
ii*i
__builtin_igil_atom_addi32_local
__builtin_igil_atom_subi32_global
__builtin_igil_atom_subi32_local
__builtin_igil_atom_andi32_global
__builtin_igil_atom_andi32_local
__builtin_igil_atom_ori32_global
__builtin_igil_atom_ori32_local
__builtin_igil_atom_xori32_global
__builtin_igil_atom_xori32_local
__builtin_igil_atom_xchgi32_global
__builtin_igil_atom_xchgi32_local
__builtin_igil_atom_xchgf32_global
ff*f
__builtin_igil_atom_xchgf32_local
__builtin_igil_atom_cmpxchgi32_global
ii*ii
__builtin_igil_atom_cmpxchgi32_local
__builtin_igil_atom_mini32_global
__builtin_igil_atom_mini32_local
__builtin_igil_atom_maxi32_global
__builtin_igil_atom_maxi32_local
__builtin_igil_atom_minu32_global
UiUi*Ui
__builtin_igil_atom_minu32_local
__builtin_igil_atom_maxu32_global
__builtin_igil_atom_maxu32_local
__builtin_igil_atom_inci32_global
__builtin_igil_atom_inci32_local
__builtin_igil_atom_deci32_global
__builtin_igil_atom_deci32_local
__builtin_igil_read_1d_fi
V4fiiiii
__builtin_igil_read_1d_ff
V4fiiiif
__builtin_igil_read_1darr_fi
V4fiiiiV2i
__builtin_igil_read_1darr_ff
V4fiiiiV2f
__builtin_igil_read_1d_ii
V4iiiiii
__builtin_igil_read_1d_if
V4iiiiif
__builtin_igil_read_1d_uii
V4Uiiiiii
__builtin_igil_read_1d_uif
V4Uiiiiif
__builtin_igil_read_1darr_ii
V4iiiiiV2i
__builtin_igil_read_1darr_if
V4iiiiiV2f
__builtin_igil_read_1darr_uii
V4UiiiiiV2i
__builtin_igil_read_1darr_uif
V4UiiiiiV2f
__builtin_igil_read_1d_smp_less_fi
V4fiiii
__builtin_igil_read_1d_smp_less_ii
V4iiiii
__builtin_igil_read_1d_smp_less_uii
V4Uiiiii
__builtin_igil_read_1darr_smp_less_fi
V4fiiiV2i
__builtin_igil_read_1darr_smp_less_ii
V4iiiiV2i
__builtin_igil_read_1darr_smp_less_uii
V4UiiiiV2i
__builtin_igil_read_2d_fi
__builtin_igil_read_2d_ff
__builtin_igil_read_2darr_fi
V4fiiiiV4i
__builtin_igil_read_2darr_ff
V4fiiiiV4f
__builtin_igil_read_2d_ii
__builtin_igil_read_2d_if
__builtin_igil_read_2d_uii
__builtin_igil_read_2d_uif
__builtin_igil_read_2darr_ii
V4iiiiiV4i
__builtin_igil_read_2darr_if
V4iiiiiV4f
__builtin_igil_read_2darr_uii
V4UiiiiiV4i
__builtin_igil_read_2darr_uif
V4UiiiiiV4f
__builtin_igil_read_2d_smp_less_fi
__builtin_igil_read_2d_smp_less_ii
__builtin_igil_read_2d_smp_less_uii
__builtin_igil_read_2darr_smp_less_fi
V4fiiiV4i
__builtin_igil_read_2darr_smp_less_ii
V4iiiiV4i
__builtin_igil_read_2darr_smp_less_uii
V4UiiiiV4i
__builtin_igil_read_3d_fi
__builtin_igil_read_3d_ff
__builtin_igil_read_3d_ii
__builtin_igil_read_3d_if
__builtin_igil_read_3d_uii
__builtin_igil_read_3d_uif
__builtin_igil_read_3d_smp_less_fi
__builtin_igil_read_3d_smp_less_ii
__builtin_igil_read_3d_smp_less_uii
__builtin_igil_write_1d_f
viiiiV4f
__builtin_igil_write_1d_i
viiiiV4i
__builtin_igil_write_1d_ui
viiiiV4Ui
__builtin_igil_write_1darr_f
viiiV2iV4f
__builtin_igil_write_1darr_i
viiiV2iV4i
__builtin_igil_write_1darr_ui
viiiV2iV4Ui
__builtin_igil_write_2d_f
__builtin_igil_write_2d_i
__builtin_igil_write_2d_ui
__builtin_igil_write_2darr_f
viiiV4iV4f
__builtin_igil_write_2darr_i
viiiV4iV4i
__builtin_igil_write_2darr_ui
viiiV4iV4Ui
__builtin_igil_write_3d_f
__builtin_igil_write_3d_i
__builtin_igil_write_3d_ui
__builtin_igil_get_array_size
__builtin_igil_get_image_width
__builtin_igil_get_image_height
__builtin_igil_get_image_depth
__builtin_igil_get_image_channel_data_type
__builtin_igil_get_image_channel_order
__builtin_igil_f16tof32
__builtin_igil_f32tof16_rte
__builtin_igil_f32tof16_rtp
__builtin_igil_f32tof16_rtn
__builtin_igil_f32tof16_rtz
__builtin_igil_stoc_sat
__builtin_igil_itoc_sat
__builtin_igil_itos_sat
__builtin_igil_uctoc_sat
__builtin_igil_ustoc_sat
__builtin_igil_uitoc_sat
__builtin_igil_ustos_sat
__builtin_igil_uitos_sat
__builtin_igil_uitoi_sat
__builtin_igil_ctouc_sat
__builtin_igil_stouc_sat
__builtin_igil_itouc_sat
__builtin_igil_ctous_sat
__builtin_igil_stous_sat
__builtin_igil_itous_sat
__builtin_igil_ctoui_sat
__builtin_igil_stoui_sat
__builtin_igil_itoui_sat
__builtin_igil_ustouc_sat
UcUs
__builtin_igil_uitouc_sat
UcUi
__builtin_igil_uitous_sat
UsUi
__builtin_igil_ftoc_sat
__builtin_igil_ftos_sat
__builtin_igil_ftoi_sat
__builtin_igil_ftouc_sat
__builtin_igil_ftous_sat
__builtin_igil_ftoui_sat
__builtin_igil_itof_ni
__builtin_igil_itof_pi
__builtin_igil_itof_z
__builtin_igil_uitof_ni
__builtin_igil_uitof_pi
__builtin_igil_uitof_z
__builtin_igil_frnd_ne
__builtin_igil_frnd_pi
__builtin_igil_frnd_ni
__builtin_igil_clampf
__builtin_igil_maxf
__builtin_igil_minf
__builtin_igil_crossf4
__builtin_igil_madf
__builtin_igil_ceilf
__builtin_igil_fabsf
__builtin_igil_floorf
__builtin_igil_fractf
__builtin_igil_rintf
__builtin_igil_roundf
__builtin_igil_truncf
__builtin_igil_acosf
__builtin_igil_asinf
__builtin_igil_atanf
__builtin_igil_native_cosf
__builtin_igil_native_expf
__builtin_igil_native_exp2f
__builtin_igil_native_logf
__builtin_igil_native_log2f
__builtin_igil_native_powrf
__builtin_igil_native_rsqrtf
__builtin_igil_native_sinf
__builtin_igil_native_sqrtf
__builtin_igil_native_tanf
__builtin_igil_native_recipf
__builtin_igil_abs_1i8
__builtin_igil_abs_1i16
__builtin_igil_abs_1i32
__builtin_igil_add_sat_1i8
__builtin_igil_add_sat_1i16
__builtin_igil_add_sat_1i32
__builtin_igil_add_sat_1u8
UcUcUc
__builtin_igil_add_sat_1u16
UsUsUs
__builtin_igil_add_sat_1u32
__builtin_igil_clz_1i8
__builtin_igil_clz_1i16
__builtin_igil_clz_1i32
__builtin_igil_clz_1u8
UcUc
__builtin_igil_clz_1u16
UsUs
__builtin_igil_clz_1u32
__builtin_igil_mad_sat_1i8
cccc
__builtin_igil_mad_sat_1i16
ssss
__builtin_igil_mad_sat_1i32
__builtin_igil_mad_sat_1u8
UcUcUcUc
__builtin_igil_mad_sat_1u16
UsUsUsUs
__builtin_igil_mad_sat_1u32
__builtin_igil_max_1i8
__builtin_igil_max_1i16
__builtin_igil_max_1i32
__builtin_igil_max_1u8
__builtin_igil_max_1u16
__builtin_igil_max_1u32
__builtin_igil_min_1i8
__builtin_igil_min_1i16
__builtin_igil_min_1i32
__builtin_igil_min_1u8
__builtin_igil_min_1u16
__builtin_igil_min_1u32
__builtin_igil_mul_hi_1i8
__builtin_igil_mul_hi_1i16
__builtin_igil_mul_hi_1i32
__builtin_igil_mul_hi_1u8
__builtin_igil_mul_hi_1u16
__builtin_igil_mul_hi_1u32
__builtin_igil_sub_sat_1i8
__builtin_igil_sub_sat_1i16
__builtin_igil_sub_sat_1i32
__builtin_igil_sub_sat_1u8
__builtin_igil_sub_sat_1u16
__builtin_igil_sub_sat_1u32
__builtin_igil_mad24_1i8
__builtin_igil_mad24_1i16
__builtin_igil_mad24_1i32
__builtin_igil_mad24_1u8
__builtin_igil_mad24_1u16
__builtin_igil_mad24_1u32
__builtin_igil_uaddc_1i32
__builtin_igil_usubb_1i32
__builtin_igil_popcnt_1i8
__builtin_igil_popcnt_1i16
__builtin_igil_popcnt_1i32
__builtin_igil_popcnt_1u8
__builtin_igil_popcnt_1u16
__builtin_igil_popcnt_1u32
__builtin_igil_bunpack_i32
V4ci
__builtin_igil_sunpack_i32
V2si
__builtin_igil_bpack_i32
iV4c
__builtin_igil_spack_i32
iV2s
__builtin_igil_write_2d_depth_f
viiiV2if
__builtin_igil_write_2d_array_depth_f
viiiV4if
__builtin_igil_read_2d_msaa_f
V4fiV2ii
__builtin_igil_read_2d_msaa_i
V4iiV2ii
__builtin_igil_read_2d_msaa_ui
V4UiiV2ii
__builtin_igil_read_2d_array_msaa_f
V4fiV4ii
__builtin_igil_read_2d_array_msaa_i
V4iiV4ii
__builtin_igil_read_2d_array_msaa_ui
V4UiiV4ii
__builtin_igil_get_image_num_samples
__builtin_igil_ctz_1i8
__builtin_igil_ctz_1i16
__builtin_igil_ctz_1i32
__builtin_igil_ctz_1u8
__builtin_igil_ctz_1u16
__builtin_igil_ctz_1u32
__builtin_igil_atom_cmpxchgf32_global
ff*ff
__builtin_igil_atom_cmpxchgf32_local
__builtin_igil_atom_minf32_global
__builtin_igil_atom_minf32_local
__builtin_igil_atom_maxf32_global
__builtin_igil_atom_maxf32_local
__builtin_igil_frnd_z
__builtin_igil_workgroup_all
__builtin_igil_workgroup_any
__builtin_igil_ceild
__builtin_igil_fabsd
__builtin_igil_floord
__builtin_igil_fractd
__builtin_igil_rintd
__builtin_igil_roundd
__builtin_igil_truncd
__builtin_igil_fmaxd
__builtin_igil_fmind
__builtin_igil_fmad
__builtin_igil_sqrtd
__builtin_igil_dtoc_sat
__builtin_igil_dtos_sat
__builtin_igil_dtoi_sat
__builtin_igil_dtouc_sat
__builtin_igil_dtous_sat
__builtin_igil_dtoui_sat
__builtin_igil_itod_ni
__builtin_igil_itod_pi
__builtin_igil_itod_z
__builtin_igil_uitod_ni
__builtin_igil_uitod_pi
__builtin_igil_uitod_z
__builtin_igil_drnd_ne
__builtin_igil_drnd_pi
__builtin_igil_drnd_ni
__builtin_igil_drnd_z
__builtin_igil_ftod_ni
__builtin_igil_ftod_pi
__builtin_igil_ftod_z
__builtin_igil_dtof_ni
__builtin_igil_dtof_pi
__builtin_igil_dtof_z
aapcs
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i64:64-i128:128-n32:64-S128
__arm64
__arm64__
__aarch64__
__ARM64_ARCH_8__
__AARCH64_SIMD__
__ARM_NEON__
_LP64
__LP64__
__LITTLE_ENDIAN__
__REGISTER_PREFIX__
__AARCH64EL__
__ARM_ACLE
__ARM_ARCH
__ARM_ARCH_PROFILE
__ARM_64BIT_STATE
__ARM_PCS_AAPCS64
__ARM_ARCH_ISA_A64
__ARM_FEATURE_UNALIGNED
__ARM_FEATURE_CLZ
__ARM_FEATURE_FMA
__ARM_FEATURE_DIV
__ARM_ALIGN_MAX_STACK_PWR
__ARM_FP
__ARM_FP16_FORMAT_IEEE
__ARM_FP_FAST
__ARM_FP_FENV_ROUNDING
__ARM_SIZEOF_WCHAR_T
__ARM_SIZEOF_MINIMAL_ENUM
__ARM_BIG_ENDIAN
__ARM_NEON
__ARM_NEON_FP
__ARM_FEATURE_CRYPTO
__clear_cache
vv*v*
__builtin_arm_ldrex
__builtin_arm_strex
__builtin_arm_clrex
__builtin_arm_crc32b
__builtin_arm_crc32cb
__builtin_arm_crc32h
__builtin_arm_crc32ch
__builtin_arm_crc32w
__builtin_arm_crc32cw
__builtin_arm_crc32d
UiUiLUi
__builtin_arm_crc32cd
__builtin_arm64_vaddlv_s8
sV8Sc
__builtin_arm64_vaddlv_s16
iV4s
__builtin_arm64_vaddlv_s32
LLiV2i
__builtin_arm64_vaddlv_u8
UsV8Sc
__builtin_arm64_vaddlv_u16
UiV4s
__builtin_arm64_vaddlv_u32
ULLiV2i
__builtin_arm64_vaddlvq_s8
sV16Sc
__builtin_arm64_vaddlvq_s16
iV8s
__builtin_arm64_vaddlvq_s32
LLiV4i
__builtin_arm64_vaddlvq_u8
UsV16Sc
__builtin_arm64_vaddlvq_u16
UiV8s
__builtin_arm64_vaddlvq_u32
ULLiV4i
__builtin_arm64_vaddv_s8
ScV8Sc
__builtin_arm64_vaddv_s16
sV4s
__builtin_arm64_vaddv_s32
iV2i
__builtin_arm64_vaddv_u8
UcV8Sc
__builtin_arm64_vaddv_u16
UsV4s
__builtin_arm64_vaddv_u32
UiV2i
__builtin_arm64_vaddvq_s8
ScV16Sc
__builtin_arm64_vaddvq_s16
sV8s
__builtin_arm64_vaddvq_s32
iV4i
__builtin_arm64_vaddvq_u8
UcV16Sc
__builtin_arm64_vaddvq_u16
UsV8s
__builtin_arm64_vaddvq_u32
UiV4i
__builtin_arm64_vmaxnmv_f32
fV2f
__builtin_arm64_vmaxnmvq_f32
fV4f
__builtin_arm64_vmaxv_s8
__builtin_arm64_vmaxv_s16
__builtin_arm64_vmaxv_s32
__builtin_arm64_vmaxv_f32
__builtin_arm64_vmaxv_u8
__builtin_arm64_vmaxv_u16
__builtin_arm64_vmaxv_u32
__builtin_arm64_vmaxvq_s8
__builtin_arm64_vmaxvq_s16
__builtin_arm64_vmaxvq_s32
__builtin_arm64_vmaxvq_u8
__builtin_arm64_vmaxvq_u16
__builtin_arm64_vmaxvq_u32
__builtin_arm64_vmaxvq_f32
__builtin_arm64_vmaxvq_f64
dV16Sc
__builtin_arm64_vminnmv_f32
__builtin_arm64_vminnmvq_f32
__builtin_arm64_vminv_s8
__builtin_arm64_vminv_s16
__builtin_arm64_vminv_s32
__builtin_arm64_vminv_f32
__builtin_arm64_vminv_u8
__builtin_arm64_vminv_u16
__builtin_arm64_vminv_u32
__builtin_arm64_vminvq_s8
__builtin_arm64_vminvq_s16
__builtin_arm64_vminvq_s32
__builtin_arm64_vminvq_u8
__builtin_arm64_vminvq_u16
__builtin_arm64_vminvq_u32
__builtin_arm64_vminvq_f32
__builtin_arm64_vminvq_f64
__builtin_arm64_vabal_v
V16ScV16ScV8ScV8Sci
__builtin_arm64_vabal_high_v
V16ScV16ScV16ScV16Sci
__builtin_arm64_vabd_v
V8ScV8ScV8Sci
__builtin_arm64_vabdq_v
V16ScV16ScV16Sci
__builtin_arm64_vabdd_f64
__builtin_arm64_vabdl_v
V16ScV8ScV8Sci
__builtin_arm64_vabdl_high_v
__builtin_arm64_vabds_f32
__builtin_arm64_vabs_v
V8ScV8Sci
__builtin_arm64_vabsq_v
V16ScV16Sci
__builtin_arm64_vaddhn_v
V8ScV16ScV16Sci
__builtin_arm64_vaddhn_high_v
V16ScV8ScV16ScV16Sci
__builtin_arm64_vaddw_high_v
__builtin_arm64_vaesdq_v
__builtin_arm64_vaeseq_v
__builtin_arm64_vaesimcq_v
__builtin_arm64_vaesmcq_v
__builtin_arm64_vcage_v
__builtin_arm64_vcageq_v
__builtin_arm64_vcagt_v
__builtin_arm64_vcagtq_v
__builtin_arm64_vcale_v
__builtin_arm64_vcaleq_v
__builtin_arm64_vcalt_v
__builtin_arm64_vcaltq_v
__builtin_arm64_vceqzd_s64
LLiLLi
__builtin_arm64_vceqzd_u64
ULLiULLi
__builtin_arm64_vcgezd_s64
__builtin_arm64_vcgezd_u64
__builtin_arm64_vcgtzd_s64
__builtin_arm64_vclezd_s64
__builtin_arm64_vclezd_u64
__builtin_arm64_vcls_v
__builtin_arm64_vclsq_v
__builtin_arm64_vcltzd_s64
__builtin_arm64_vclz_v
__builtin_arm64_vclzq_v
__builtin_arm64_vcnt_v
__builtin_arm64_vcntq_v
__builtin_arm64_vcopyq_lane_v
V16ScV16SciV16Scii
__builtin_arm64_vcvtad_s64_f64
LLid
__builtin_arm64_vcvtad_u64_f64
ULLid
__builtin_arm64_vcvtas_s32_f32
__builtin_arm64_vcvtas_u32_f32
__builtin_arm64_vcvta_s32_v
__builtin_arm64_vcvtaq_s32_v
__builtin_arm64_vcvtaq_s64_v
__builtin_arm64_vcvta_u32_v
__builtin_arm64_vcvtaq_u32_v
__builtin_arm64_vcvtaq_u64_v
__builtin_arm64_vcvtd_f64_s64
dLLi
__builtin_arm64_vcvtd_f64_u64
dULLi
__builtin_arm64_vcvtd_n_f64_s64
dLLii
__builtin_arm64_vcvtd_n_f64_u64
dULLii
__builtin_arm64_vcvtd_n_s64_f64
LLidi
__builtin_arm64_vcvtd_n_u64_f64
ULLidi
__builtin_arm64_vcvtd_s64_f64
__builtin_arm64_vcvtd_u64_f64
__builtin_arm64_vcvtmd_s64_f64
__builtin_arm64_vcvtmd_u64_f64
__builtin_arm64_vcvtms_s32_f32
__builtin_arm64_vcvtms_u32_f32
__builtin_arm64_vcvtm_s32_v
__builtin_arm64_vcvtmq_s32_v
__builtin_arm64_vcvtmq_s64_v
__builtin_arm64_vcvtm_u32_v
__builtin_arm64_vcvtmq_u32_v
__builtin_arm64_vcvtmq_u64_v
__builtin_arm64_vcvtnd_s64_f64
__builtin_arm64_vcvtnd_u64_f64
__builtin_arm64_vcvtns_s32_f32
__builtin_arm64_vcvtns_u32_f32
__builtin_arm64_vcvtn_s32_v
__builtin_arm64_vcvtnq_s32_v
__builtin_arm64_vcvtnq_s64_v
__builtin_arm64_vcvtn_u32_v
__builtin_arm64_vcvtnq_u32_v
__builtin_arm64_vcvtnq_u64_v
__builtin_arm64_vcvtpd_s64_f64
__builtin_arm64_vcvtpd_u64_f64
__builtin_arm64_vcvtps_s32_f32
__builtin_arm64_vcvtps_u32_f32
__builtin_arm64_vcvtp_s32_v
__builtin_arm64_vcvtpq_s32_v
__builtin_arm64_vcvtpq_s64_v
__builtin_arm64_vcvtp_u32_v
__builtin_arm64_vcvtpq_u32_v
__builtin_arm64_vcvtpq_u64_v
__builtin_arm64_vcvts_f32_s32
__builtin_arm64_vcvts_f32_u32
__builtin_arm64_vcvts_n_f32_s32
__builtin_arm64_vcvts_n_f32_u32
fUii
__builtin_arm64_vcvts_n_s32_f32
__builtin_arm64_vcvts_n_u32_f32
Uifi
__builtin_arm64_vcvts_s32_f32
__builtin_arm64_vcvts_u32_f32
__builtin_arm64_vcvtxd_f32_f64
__builtin_arm64_vcvtx_f32_f64
V8ScV16Sci
__builtin_arm64_vcvtx_high_f32_f64
V16ScV8ScV16Sci
__builtin_arm64_vcvtzd_s64_f64
__builtin_arm64_vcvtzd_u64_f64
__builtin_arm64_vcvtzs_s32_f32
__builtin_arm64_vcvtzs_u32_f32
__builtin_arm64_vcvtz_s32_v
__builtin_arm64_vcvtzq_s32_v
__builtin_arm64_vcvtzq_s64_v
__builtin_arm64_vcvtz_u32_v
__builtin_arm64_vcvtzq_u32_v
__builtin_arm64_vcvtzq_u64_v
__builtin_arm64_vcvt_f16_v
__builtin_arm64_vcvt_f32_v
V2fV8Sci
__builtin_arm64_vcvtq_f32_v
V4fV16Sci
__builtin_arm64_vcvt_f32_f16
V4fV8Sci
__builtin_arm64_vcvt_f32_f64
__builtin_arm64_vcvtq_f64_v
__builtin_arm64_vcvt_f64_f32
V16ScV8Sci
__builtin_arm64_vcvt_high_f32_f64
__builtin_arm64_vcvt_high_f64_f32
__builtin_arm64_vcvt_n_f32_v
V2fV8Scii
__builtin_arm64_vcvtq_n_f32_v
V4fV16Scii
__builtin_arm64_vcvtq_n_f64_v
__builtin_arm64_vcvt_n_s32_v
V8ScV8Scii
__builtin_arm64_vcvtq_n_s32_v
V16ScV16Scii
__builtin_arm64_vcvtq_n_s64_v
__builtin_arm64_vcvt_n_u32_v
__builtin_arm64_vcvtq_n_u32_v
__builtin_arm64_vcvtq_n_u64_v
__builtin_arm64_vcvt_s32_v
__builtin_arm64_vcvtq_s32_v
__builtin_arm64_vcvtq_s64_v
__builtin_arm64_vcvt_u32_v
__builtin_arm64_vcvtq_u32_v
__builtin_arm64_vcvtq_u64_v
__builtin_arm64_vdiv_v
__builtin_arm64_vdivq_v
__builtin_arm64_vdupb_lane_s8
ScV16Sci
__builtin_arm64_vdupb_lane_u8
UcV16Sci
__builtin_arm64_vdupd_lane_s64
LLiV2LLii
__builtin_arm64_vdupd_lane_u64
ULLiV2LLii
__builtin_arm64_vdupd_lane_f64
dV16Sci
__builtin_arm64_vduph_lane_s16
sV8si
__builtin_arm64_vduph_lane_u16
UsV8si
__builtin_arm64_vdups_lane_s32
iV4ii
__builtin_arm64_vdups_lane_u32
UiV4ii
__builtin_arm64_vdups_lane_f32
fV4fi
__builtin_arm64_vdup_lane_f64
__builtin_arm64_vext_v
V8ScV8ScV8Scii
__builtin_arm64_vextq_v
V16ScV16ScV16Scii
__builtin_arm64_vfma_v
V8ScV8ScV8ScV8Sci
__builtin_arm64_vfmaq_v
__builtin_arm64_vfma_lane_v
V8ScV8ScV8ScV8Scii
__builtin_arm64_vfmaq_lane_v
V16ScV16ScV16ScV16Scii
__builtin_arm64_vfms_v
__builtin_arm64_vfmsq_v
__builtin_arm64_vfms_lane_v
__builtin_arm64_vfmsq_lane_v
__builtin_arm64_vget_lane_s8
ScV8Sci
__builtin_arm64_vget_lane_s16
sV4si
__builtin_arm64_vget_lane_s32
__builtin_arm64_vget_lane_s64
LLiV1LLii
__builtin_arm64_vget_lane_u8
UcV8Sci
__builtin_arm64_vget_lane_u16
UsV4si
__builtin_arm64_vget_lane_u32
UiV2ii
__builtin_arm64_vget_lane_u64
ULLiV1LLii
__builtin_arm64_vget_lane_f32
fV2fi
__builtin_arm64_vget_lane_f64
dV8Sci
__builtin_arm64_vget_lane_p8
__builtin_arm64_vget_lane_p16
__builtin_arm64_vgetq_lane_s8
__builtin_arm64_vgetq_lane_s16
__builtin_arm64_vgetq_lane_s32
__builtin_arm64_vgetq_lane_s64
__builtin_arm64_vgetq_lane_u8
__builtin_arm64_vgetq_lane_u16
__builtin_arm64_vgetq_lane_u32
__builtin_arm64_vgetq_lane_u64
__builtin_arm64_vgetq_lane_f32
__builtin_arm64_vgetq_lane_f64
__builtin_arm64_vgetq_lane_p8
__builtin_arm64_vgetq_lane_p16
__builtin_arm64_vhadd_v
__builtin_arm64_vhaddq_v
__builtin_arm64_vhsub_v
__builtin_arm64_vhsubq_v
__builtin_arm64_vld1q_v
V16ScvC*i
__builtin_arm64_vld1_v
V8ScvC*i
__builtin_arm64_vld1q_dup_v
__builtin_arm64_vld1_dup_v
__builtin_arm64_vld1q_lane_v
V16ScvC*V16Scii
__builtin_arm64_vld1_lane_v
V8ScvC*V8Scii
__builtin_arm64_vld2q_v
vv*vC*i
__builtin_arm64_vld2_v
__builtin_arm64_vld2_dup_v
__builtin_arm64_vld2q_lane_v
vv*vC*V16ScV16Scii
__builtin_arm64_vld2_lane_v
vv*vC*V8ScV8Scii
__builtin_arm64_vld3q_v
__builtin_arm64_vld3_v
__builtin_arm64_vld3_dup_v
__builtin_arm64_vld3q_lane_v
vv*vC*V16ScV16ScV16Scii
__builtin_arm64_vld3_lane_v
vv*vC*V8ScV8ScV8Scii
__builtin_arm64_vld4q_v
__builtin_arm64_vld4_v
__builtin_arm64_vld4_dup_v
__builtin_arm64_vld4q_lane_v
vv*vC*V16ScV16ScV16ScV16Scii
__builtin_arm64_vld4_lane_v
vv*vC*V8ScV8ScV8ScV8Scii
__builtin_arm64_vmax_v
__builtin_arm64_vmaxq_v
__builtin_arm64_vmaxnm_v
__builtin_arm64_vmaxnmq_v
__builtin_arm64_vpmaxnm_v
__builtin_arm64_vpmaxnmq_v
__builtin_arm64_vmin_v
__builtin_arm64_vminq_v
__builtin_arm64_vminnm_v
__builtin_arm64_vminnmq_v
__builtin_arm64_vpminnm_v
__builtin_arm64_vpminnmq_v
__builtin_arm64_vmovl_v
__builtin_arm64_vmovn_v
__builtin_arm64_vmovn_high_v
__builtin_arm64_vmull_v
__builtin_arm64_vmul_v
__builtin_arm64_vmulq_v
__builtin_arm64_vmulx_v
__builtin_arm64_vmulxq_v
__builtin_arm64_vmulxd_f64
__builtin_arm64_vmulxs_f32
__builtin_arm64_vmulx_lane_v
__builtin_arm64_vmulxq_lane_v
__builtin_arm64_vpadal_v
__builtin_arm64_vpadalq_v
__builtin_arm64_vpadd_v
__builtin_arm64_vpaddq_v
__builtin_arm64_vpaddd_s64
LLiV2LLi
__builtin_arm64_vpaddd_f64
__builtin_arm64_vpaddl_v
__builtin_arm64_vpaddlq_v
__builtin_arm64_vpadds_f32
__builtin_arm64_vpmax_v
__builtin_arm64_vpmaxq_v
__builtin_arm64_vpmin_v
__builtin_arm64_vpminq_v
__builtin_arm64_vqabs_v
__builtin_arm64_vqabsq_v
__builtin_arm64_vqabsb_s8
ScSc
__builtin_arm64_vqabsd_s64
__builtin_arm64_vqabsh_s16
__builtin_arm64_vqabss_s32
__builtin_arm64_vqadd_v
__builtin_arm64_vqaddq_v
__builtin_arm64_vqaddb_s8
ScScSc
__builtin_arm64_vqaddb_u8
__builtin_arm64_vqaddd_s64
LLiLLiLLi
__builtin_arm64_vqaddd_u64
__builtin_arm64_vqaddh_s16
__builtin_arm64_vqaddh_u16
__builtin_arm64_vqadds_s32
__builtin_arm64_vqadds_u32
__builtin_arm64_vqdmlal_high_v
__builtin_arm64_vqdmlsl_high_v
__builtin_arm64_vqdmulh_v
__builtin_arm64_vqdmulhq_v
__builtin_arm64_vqdmull_v
__builtin_arm64_vqdmullh_s16
__builtin_arm64_vqdmullh_lane_s16
isV8si
__builtin_arm64_vqdmulls_s32
LLiii
__builtin_arm64_vqdmulls_lane_s32
LLiiV4ii
__builtin_arm64_vqdmull_high_v
__builtin_arm64_vqmovn_v
__builtin_arm64_vqmovnd_s64
iLLi
__builtin_arm64_vqmovnd_u64
UiULLi
__builtin_arm64_vqmovnh_s16
__builtin_arm64_vqmovnh_u16
__builtin_arm64_vqmovns_s32
__builtin_arm64_vqmovns_u32
__builtin_arm64_vqmovn_high_v
__builtin_arm64_vqmovun_v
__builtin_arm64_vqmovund_s64
__builtin_arm64_vqmovunh_s16
__builtin_arm64_vqmovuns_s32
__builtin_arm64_vqmovun_high_v
__builtin_arm64_vqneg_v
__builtin_arm64_vqnegq_v
__builtin_arm64_vqnegb_s8
__builtin_arm64_vqnegd_s64
__builtin_arm64_vqnegh_s16
__builtin_arm64_vqnegs_s32
__builtin_arm64_vqrdmulh_v
__builtin_arm64_vqrdmulhq_v
__builtin_arm64_vqrshl_v
__builtin_arm64_vqrshlq_v
__builtin_arm64_vqrshlb_s8
__builtin_arm64_vqrshlb_u8
__builtin_arm64_vqrshld_s64
__builtin_arm64_vqrshld_u64
__builtin_arm64_vqrshlh_s16
__builtin_arm64_vqrshlh_u16
__builtin_arm64_vqrshls_s32
__builtin_arm64_vqrshls_u32
__builtin_arm64_vqrshl_s64
__builtin_arm64_vqrshl_u64
__builtin_arm64_vqrshrn_high_n_v
V16ScV8ScV16Scii
__builtin_arm64_vqrshrn_n_v
V8ScV16Scii
__builtin_arm64_vqrshrun_high_n_v
__builtin_arm64_vqrshrun_n_v
__builtin_arm64_vqshl_v
__builtin_arm64_vqshlq_v
__builtin_arm64_vqshlb_s8
__builtin_arm64_vqshlb_u8
__builtin_arm64_vqshld_s64
__builtin_arm64_vqshld_u64
__builtin_arm64_vqshlh_s16
__builtin_arm64_vqshlh_u16
__builtin_arm64_vqshls_s32
__builtin_arm64_vqshls_u32
__builtin_arm64_vqshlu_n_v
__builtin_arm64_vqshluq_n_v
__builtin_arm64_vqshl_s64
__builtin_arm64_vqshl_u64
__builtin_arm64_vqshl_n_v
__builtin_arm64_vqshlq_n_v
__builtin_arm64_vqshrn_high_n_v
__builtin_arm64_vqshrn_n_v
__builtin_arm64_vqshrun_high_n_v
__builtin_arm64_vqshrun_n_v
__builtin_arm64_vqsub_v
__builtin_arm64_vqsubq_v
__builtin_arm64_vqsubb_s8
__builtin_arm64_vqsubb_u8
__builtin_arm64_vqsubd_s64
__builtin_arm64_vqsubd_u64
__builtin_arm64_vqsubh_s16
__builtin_arm64_vqsubh_u16
__builtin_arm64_vqsubs_s32
__builtin_arm64_vqsubs_u32
__builtin_arm64_vqtbl1q_v
__builtin_arm64_vqtbl2q_v
__builtin_arm64_vqtbl3q_v
V16ScV16ScV16ScV16ScV16Sci
__builtin_arm64_vqtbl4q_v
V16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_arm64_vqtbx1q_v
__builtin_arm64_vqtbx2q_v
__builtin_arm64_vqtbx3q_v
__builtin_arm64_vqtbx4q_v
V16ScV16ScV16ScV16ScV16ScV16ScV16Sci
__builtin_arm64_vraddhn_v
__builtin_arm64_vraddhn_high_v
__builtin_arm64_vrbit_v
__builtin_arm64_vrbitq_v
__builtin_arm64_vrecpe_v
__builtin_arm64_vrecpeq_v
__builtin_arm64_vrecps_v
__builtin_arm64_vrecpsq_v
__builtin_arm64_vrecpsd_f64
__builtin_arm64_vrecpss_f32
__builtin_arm64_vrhadd_v
__builtin_arm64_vrhaddq_v
__builtin_arm64_vrnd_v
__builtin_arm64_vrndq_v
__builtin_arm64_vrnda_v
__builtin_arm64_vrndaq_v
__builtin_arm64_vrndm_v
__builtin_arm64_vrndmq_v
__builtin_arm64_vrndn_v
__builtin_arm64_vrndnq_v
__builtin_arm64_vrndp_v
__builtin_arm64_vrndpq_v
__builtin_arm64_vrndx_v
__builtin_arm64_vrndxq_v
__builtin_arm64_vrndz_v
__builtin_arm64_vrndzq_v
__builtin_arm64_vrshl_v
__builtin_arm64_vrshlq_v
__builtin_arm64_vrshld_s64
__builtin_arm64_vrshld_u64
__builtin_arm64_vrshl_s64
__builtin_arm64_vrshl_u64
__builtin_arm64_vrshrn_high_n_v
__builtin_arm64_vrshrn_n_v
__builtin_arm64_vrshr_n_v
__builtin_arm64_vrshrq_n_v
__builtin_arm64_vrsqrte_v
__builtin_arm64_vrsqrteq_v
__builtin_arm64_vrsqrts_v
__builtin_arm64_vrsqrtsq_v
__builtin_arm64_vrsqrtsd_f64
__builtin_arm64_vrsqrtss_f32
__builtin_arm64_vrsra_n_v
__builtin_arm64_vrsraq_n_v
__builtin_arm64_vrsubhn_v
__builtin_arm64_vrsubhn_high_v
__builtin_arm64_vset_lane_i8
V8ScUcV8Sci
__builtin_arm64_vset_lane_i16
V4sUsV4si
__builtin_arm64_vset_lane_i32
V2iUiV2ii
__builtin_arm64_vset_lane_f16
__builtin_arm64_vset_lane_f32
V2ffV2fi
__builtin_arm64_vset_lane_f64
V8ScdV8Sci
__builtin_arm64_vsetq_lane_i8
V16ScUcV16Sci
__builtin_arm64_vsetq_lane_i16
V8sUsV8si
__builtin_arm64_vsetq_lane_i32
V4iUiV4ii
__builtin_arm64_vsetq_lane_f16
__builtin_arm64_vsetq_lane_f32
V4ffV4fi
__builtin_arm64_vsetq_lane_f64
V16ScdV16Sci
__builtin_arm64_vset_lane_i64
V1LLiULLiV1LLii
__builtin_arm64_vsetq_lane_i64
V2LLiULLiV2LLii
__builtin_arm64_vsha1cq_u32
V4iV4iUiV4i
__builtin_arm64_vsha1h_u32
__builtin_arm64_vsha1mq_u32
__builtin_arm64_vsha1pq_u32
__builtin_arm64_vsha1su0q_v
__builtin_arm64_vsha1su1q_v
__builtin_arm64_vsha256hq_v
__builtin_arm64_vsha256h2q_v
__builtin_arm64_vsha256su0q_v
__builtin_arm64_vsha256su1q_v
__builtin_arm64_vshl_v
__builtin_arm64_vshlq_v
__builtin_arm64_vshld_s64
__builtin_arm64_vshld_u64
__builtin_arm64_vshll_high_n_v
__builtin_arm64_vshll_n_v
V16ScV8Scii
__builtin_arm64_vshl_s64
__builtin_arm64_vshl_u64
__builtin_arm64_vshl_n_v
__builtin_arm64_vshlq_n_v
__builtin_arm64_vshrn_high_n_v
__builtin_arm64_vshrn_n_v
__builtin_arm64_vshr_n_v
__builtin_arm64_vshrq_n_v
__builtin_arm64_vsli_n_v
__builtin_arm64_vsliq_n_v
__builtin_arm64_vsqrt_v
__builtin_arm64_vsqrtq_v
__builtin_arm64_vsra_n_v
__builtin_arm64_vsraq_n_v
__builtin_arm64_vsri_n_v
__builtin_arm64_vsriq_n_v
__builtin_arm64_vst1q_v
vv*V16Sci
__builtin_arm64_vst1_v
vv*V8Sci
__builtin_arm64_vst1q_lane_v
vv*V16Scii
__builtin_arm64_vst1_lane_v
vv*V8Scii
__builtin_arm64_vst2q_v
vv*V16ScV16Sci
__builtin_arm64_vst2_v
vv*V8ScV8Sci
__builtin_arm64_vst2q_lane_v
vv*V16ScV16Scii
__builtin_arm64_vst2_lane_v
vv*V8ScV8Scii
__builtin_arm64_vst3q_v
vv*V16ScV16ScV16Sci
__builtin_arm64_vst3_v
vv*V8ScV8ScV8Sci
__builtin_arm64_vst3q_lane_v
vv*V16ScV16ScV16Scii
__builtin_arm64_vst3_lane_v
vv*V8ScV8ScV8Scii
__builtin_arm64_vst4q_v
vv*V16ScV16ScV16ScV16Sci
__builtin_arm64_vst4_v
vv*V8ScV8ScV8ScV8Sci
__builtin_arm64_vst4q_lane_v
vv*V16ScV16ScV16ScV16Scii
__builtin_arm64_vst4_lane_v
vv*V8ScV8ScV8ScV8Scii
__builtin_arm64_vsubhn_v
__builtin_arm64_vsubhn_high_v
__builtin_arm64_vsubl_high_v
__builtin_arm64_vsubw_high_v
__builtin_arm64_vtbl1q_v
V8ScV16ScV8Sci
__builtin_arm64_vtbl2q_v
V8ScV16ScV16ScV8Sci
__builtin_arm64_vtbl3q_v
V8ScV16ScV16ScV16ScV8Sci
__builtin_arm64_vtbl4q_v
V8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_arm64_vtbx1q_v
V8ScV8ScV16ScV8Sci
__builtin_arm64_vtbx2q_v
V8ScV8ScV16ScV16ScV8Sci
__builtin_arm64_vtbx3q_v
V8ScV8ScV16ScV16ScV16ScV8Sci
__builtin_arm64_vtbx4q_v
V8ScV8ScV16ScV16ScV16ScV16ScV8Sci
__builtin_arm64_vtrn_v
__builtin_arm64_vtrnq_v
__builtin_arm64_vtrn1_v
__builtin_arm64_vtrn1q_v
__builtin_arm64_vtrn2_v
__builtin_arm64_vtrn2q_v
__builtin_arm64_vtst_v
__builtin_arm64_vtstq_v
__builtin_arm64_vtstd_s64
__builtin_arm64_vtstd_u64
__builtin_arm64_vusqadd_v
__builtin_arm64_vusqaddq_v
__builtin_arm64_vuzp_v
__builtin_arm64_vuzpq_v
__builtin_arm64_vuzp1_v
__builtin_arm64_vuzp1q_v
__builtin_arm64_vuzp2_v
__builtin_arm64_vuzp2q_v
__builtin_arm64_vzip_v
__builtin_arm64_vzipq_v
__builtin_arm64_vzip1_v
__builtin_arm64_vzip1q_v
__builtin_arm64_vzip2_v
__builtin_arm64_vzip2q_v
arm64-generic
cyclone
darwinpcs
neon
.text.startup
unix
__gnu_linux__
__ELF__
__ANDROID__
_GNU_SOURCE
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:32-f64:32-a:0:32-n32
__XS1B__
__builtin_getid
__builtin_getps
__builtin_setps
e-m:e-p:32:32-i1:32-i64:64-a:0-n32
qdsp6
__qdsp6
__qdsp6__
__hexagon
__hexagon__
hexagonv1
__HEXAGON_V1__
__HEXAGON_ARCH__
__QDSP6_V1__
__QDSP6_ARCH__
hexagonv2
__HEXAGON_V2__
__QDSP6_V2__
hexagonv3
__HEXAGON_V3__
__QDSP6_V3__
hexagonv4
__HEXAGON_V4__
__QDSP6_V4__
hexagonv5
__HEXAGON_V5__
__QDSP6_V5__
__builtin_SI_to_SXTHI_asrh
LLi*LLi*LLi*ii
__builtin_HEXAGON_C2_cmpeq
__builtin_HEXAGON_C2_cmpgt
__builtin_HEXAGON_C2_cmpgtu
__builtin_HEXAGON_C2_cmpeqp
bLLiLLi
__builtin_HEXAGON_C2_cmpgtp
__builtin_HEXAGON_C2_cmpgtup
__builtin_HEXAGON_A4_rcmpeqi
__builtin_HEXAGON_A4_rcmpneqi
__builtin_HEXAGON_A4_rcmpeq
__builtin_HEXAGON_A4_rcmpneq
__builtin_HEXAGON_C2_bitsset
__builtin_HEXAGON_C2_bitsclr
__builtin_HEXAGON_C4_nbitsset
__builtin_HEXAGON_C4_nbitsclr
__builtin_HEXAGON_C2_cmpeqi
__builtin_HEXAGON_C2_cmpgti
__builtin_HEXAGON_C2_cmpgtui
__builtin_HEXAGON_C2_cmpgei
__builtin_HEXAGON_C2_cmpgeui
__builtin_HEXAGON_C2_cmplt
__builtin_HEXAGON_C2_cmpltu
__builtin_HEXAGON_C2_bitsclri
__builtin_HEXAGON_C4_nbitsclri
__builtin_HEXAGON_C4_cmpneqi
__builtin_HEXAGON_C4_cmpltei
__builtin_HEXAGON_C4_cmplteui
__builtin_HEXAGON_C4_cmpneq
__builtin_HEXAGON_C4_cmplte
__builtin_HEXAGON_C4_cmplteu
__builtin_HEXAGON_C2_and
__builtin_HEXAGON_C2_or
__builtin_HEXAGON_C2_xor
__builtin_HEXAGON_C2_andn
__builtin_HEXAGON_C2_not
__builtin_HEXAGON_C2_orn
__builtin_HEXAGON_C4_and_and
biii
__builtin_HEXAGON_C4_and_or
__builtin_HEXAGON_C4_or_and
__builtin_HEXAGON_C4_or_or
__builtin_HEXAGON_C4_and_andn
__builtin_HEXAGON_C4_and_orn
__builtin_HEXAGON_C4_or_andn
__builtin_HEXAGON_C4_or_orn
__builtin_HEXAGON_C2_pxfer_map
__builtin_HEXAGON_C2_any8
__builtin_HEXAGON_C2_all8
__builtin_HEXAGON_C2_vitpack
__builtin_HEXAGON_C2_mux
__builtin_HEXAGON_C2_muxii
__builtin_HEXAGON_C2_muxir
__builtin_HEXAGON_C2_muxri
__builtin_HEXAGON_C2_vmux
LLiiLLiLLi
__builtin_HEXAGON_C2_mask
LLii
__builtin_HEXAGON_A2_vcmpbeq
__builtin_HEXAGON_A4_vcmpbeqi
bLLii
__builtin_HEXAGON_A4_vcmpbeq_any
__builtin_HEXAGON_A2_vcmpbgtu
__builtin_HEXAGON_A4_vcmpbgtui
__builtin_HEXAGON_A4_vcmpbgt
__builtin_HEXAGON_A4_vcmpbgti
__builtin_HEXAGON_A4_cmpbeq
__builtin_HEXAGON_A4_cmpbeqi
__builtin_HEXAGON_A4_cmpbgtu
__builtin_HEXAGON_A4_cmpbgtui
__builtin_HEXAGON_A4_cmpbgt
__builtin_HEXAGON_A4_cmpbgti
__builtin_HEXAGON_A2_vcmpheq
__builtin_HEXAGON_A2_vcmphgt
__builtin_HEXAGON_A2_vcmphgtu
__builtin_HEXAGON_A4_vcmpheqi
__builtin_HEXAGON_A4_vcmphgti
__builtin_HEXAGON_A4_vcmphgtui
__builtin_HEXAGON_A4_cmpheq
__builtin_HEXAGON_A4_cmphgt
__builtin_HEXAGON_A4_cmphgtu
__builtin_HEXAGON_A4_cmpheqi
__builtin_HEXAGON_A4_cmphgti
__builtin_HEXAGON_A4_cmphgtui
__builtin_HEXAGON_A2_vcmpweq
__builtin_HEXAGON_A2_vcmpwgt
__builtin_HEXAGON_A2_vcmpwgtu
__builtin_HEXAGON_A4_vcmpweqi
__builtin_HEXAGON_A4_vcmpwgti
__builtin_HEXAGON_A4_vcmpwgtui
__builtin_HEXAGON_A4_boundscheck
biLLi
__builtin_HEXAGON_A4_tlbmatch
__builtin_HEXAGON_C2_tfrpr
__builtin_HEXAGON_C2_tfrrp
__builtin_HEXAGON_C4_fastcorner9
__builtin_HEXAGON_C4_fastcorner9_not
__builtin_HEXAGON_M2_mpy_acc_hh_s0
__builtin_HEXAGON_M2_mpy_acc_hh_s1
__builtin_HEXAGON_M2_mpy_acc_hl_s0
__builtin_HEXAGON_M2_mpy_acc_hl_s1
__builtin_HEXAGON_M2_mpy_acc_lh_s0
__builtin_HEXAGON_M2_mpy_acc_lh_s1
__builtin_HEXAGON_M2_mpy_acc_ll_s0
__builtin_HEXAGON_M2_mpy_acc_ll_s1
__builtin_HEXAGON_M2_mpy_nac_hh_s0
__builtin_HEXAGON_M2_mpy_nac_hh_s1
__builtin_HEXAGON_M2_mpy_nac_hl_s0
__builtin_HEXAGON_M2_mpy_nac_hl_s1
__builtin_HEXAGON_M2_mpy_nac_lh_s0
__builtin_HEXAGON_M2_mpy_nac_lh_s1
__builtin_HEXAGON_M2_mpy_nac_ll_s0
__builtin_HEXAGON_M2_mpy_nac_ll_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s0
__builtin_HEXAGON_M2_mpy_acc_sat_hl_s1
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s0
__builtin_HEXAGON_M2_mpy_acc_sat_lh_s1
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s0
__builtin_HEXAGON_M2_mpy_acc_sat_ll_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s0
__builtin_HEXAGON_M2_mpy_nac_sat_hl_s1
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s0
__builtin_HEXAGON_M2_mpy_nac_sat_lh_s1
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s0
__builtin_HEXAGON_M2_mpy_nac_sat_ll_s1
__builtin_HEXAGON_M2_mpy_hh_s0
__builtin_HEXAGON_M2_mpy_hh_s1
__builtin_HEXAGON_M2_mpy_hl_s0
__builtin_HEXAGON_M2_mpy_hl_s1
__builtin_HEXAGON_M2_mpy_lh_s0
__builtin_HEXAGON_M2_mpy_lh_s1
__builtin_HEXAGON_M2_mpy_ll_s0
__builtin_HEXAGON_M2_mpy_ll_s1
__builtin_HEXAGON_M2_mpy_sat_hh_s0
__builtin_HEXAGON_M2_mpy_sat_hh_s1
__builtin_HEXAGON_M2_mpy_sat_hl_s0
__builtin_HEXAGON_M2_mpy_sat_hl_s1
__builtin_HEXAGON_M2_mpy_sat_lh_s0
__builtin_HEXAGON_M2_mpy_sat_lh_s1
__builtin_HEXAGON_M2_mpy_sat_ll_s0
__builtin_HEXAGON_M2_mpy_sat_ll_s1
__builtin_HEXAGON_M2_mpy_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_rnd_ll_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_hl_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_lh_s1
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s0
__builtin_HEXAGON_M2_mpy_sat_rnd_ll_s1
__builtin_HEXAGON_M2_mpyd_acc_hh_s0
LLiLLiii
__builtin_HEXAGON_M2_mpyd_acc_hh_s1
__builtin_HEXAGON_M2_mpyd_acc_hl_s0
__builtin_HEXAGON_M2_mpyd_acc_hl_s1
__builtin_HEXAGON_M2_mpyd_acc_lh_s0
__builtin_HEXAGON_M2_mpyd_acc_lh_s1
__builtin_HEXAGON_M2_mpyd_acc_ll_s0
__builtin_HEXAGON_M2_mpyd_acc_ll_s1
__builtin_HEXAGON_M2_mpyd_nac_hh_s0
__builtin_HEXAGON_M2_mpyd_nac_hh_s1
__builtin_HEXAGON_M2_mpyd_nac_hl_s0
__builtin_HEXAGON_M2_mpyd_nac_hl_s1
__builtin_HEXAGON_M2_mpyd_nac_lh_s0
__builtin_HEXAGON_M2_mpyd_nac_lh_s1
__builtin_HEXAGON_M2_mpyd_nac_ll_s0
__builtin_HEXAGON_M2_mpyd_nac_ll_s1
__builtin_HEXAGON_M2_mpyd_hh_s0
__builtin_HEXAGON_M2_mpyd_hh_s1
__builtin_HEXAGON_M2_mpyd_hl_s0
__builtin_HEXAGON_M2_mpyd_hl_s1
__builtin_HEXAGON_M2_mpyd_lh_s0
__builtin_HEXAGON_M2_mpyd_lh_s1
__builtin_HEXAGON_M2_mpyd_ll_s0
__builtin_HEXAGON_M2_mpyd_ll_s1
__builtin_HEXAGON_M2_mpyd_rnd_hh_s0
__builtin_HEXAGON_M2_mpyd_rnd_hh_s1
__builtin_HEXAGON_M2_mpyd_rnd_hl_s0
__builtin_HEXAGON_M2_mpyd_rnd_hl_s1
__builtin_HEXAGON_M2_mpyd_rnd_lh_s0
__builtin_HEXAGON_M2_mpyd_rnd_lh_s1
__builtin_HEXAGON_M2_mpyd_rnd_ll_s0
__builtin_HEXAGON_M2_mpyd_rnd_ll_s1
__builtin_HEXAGON_M2_mpyu_acc_hh_s0
__builtin_HEXAGON_M2_mpyu_acc_hh_s1
__builtin_HEXAGON_M2_mpyu_acc_hl_s0
__builtin_HEXAGON_M2_mpyu_acc_hl_s1
__builtin_HEXAGON_M2_mpyu_acc_lh_s0
__builtin_HEXAGON_M2_mpyu_acc_lh_s1
__builtin_HEXAGON_M2_mpyu_acc_ll_s0
__builtin_HEXAGON_M2_mpyu_acc_ll_s1
__builtin_HEXAGON_M2_mpyu_nac_hh_s0
__builtin_HEXAGON_M2_mpyu_nac_hh_s1
__builtin_HEXAGON_M2_mpyu_nac_hl_s0
__builtin_HEXAGON_M2_mpyu_nac_hl_s1
__builtin_HEXAGON_M2_mpyu_nac_lh_s0
__builtin_HEXAGON_M2_mpyu_nac_lh_s1
__builtin_HEXAGON_M2_mpyu_nac_ll_s0
__builtin_HEXAGON_M2_mpyu_nac_ll_s1
__builtin_HEXAGON_M2_mpyu_hh_s0
Uiii
__builtin_HEXAGON_M2_mpyu_hh_s1
__builtin_HEXAGON_M2_mpyu_hl_s0
__builtin_HEXAGON_M2_mpyu_hl_s1
__builtin_HEXAGON_M2_mpyu_lh_s0
__builtin_HEXAGON_M2_mpyu_lh_s1
__builtin_HEXAGON_M2_mpyu_ll_s0
__builtin_HEXAGON_M2_mpyu_ll_s1
__builtin_HEXAGON_M2_mpyud_acc_hh_s0
__builtin_HEXAGON_M2_mpyud_acc_hh_s1
__builtin_HEXAGON_M2_mpyud_acc_hl_s0
__builtin_HEXAGON_M2_mpyud_acc_hl_s1
__builtin_HEXAGON_M2_mpyud_acc_lh_s0
__builtin_HEXAGON_M2_mpyud_acc_lh_s1
__builtin_HEXAGON_M2_mpyud_acc_ll_s0
__builtin_HEXAGON_M2_mpyud_acc_ll_s1
__builtin_HEXAGON_M2_mpyud_nac_hh_s0
__builtin_HEXAGON_M2_mpyud_nac_hh_s1
__builtin_HEXAGON_M2_mpyud_nac_hl_s0
__builtin_HEXAGON_M2_mpyud_nac_hl_s1
__builtin_HEXAGON_M2_mpyud_nac_lh_s0
__builtin_HEXAGON_M2_mpyud_nac_lh_s1
__builtin_HEXAGON_M2_mpyud_nac_ll_s0
__builtin_HEXAGON_M2_mpyud_nac_ll_s1
__builtin_HEXAGON_M2_mpyud_hh_s0
ULLiii
__builtin_HEXAGON_M2_mpyud_hh_s1
__builtin_HEXAGON_M2_mpyud_hl_s0
__builtin_HEXAGON_M2_mpyud_hl_s1
__builtin_HEXAGON_M2_mpyud_lh_s0
__builtin_HEXAGON_M2_mpyud_lh_s1
__builtin_HEXAGON_M2_mpyud_ll_s0
__builtin_HEXAGON_M2_mpyud_ll_s1
__builtin_HEXAGON_M2_mpysmi
__builtin_HEXAGON_M2_macsip
__builtin_HEXAGON_M2_macsin
__builtin_HEXAGON_M2_dpmpyss_s0
__builtin_HEXAGON_M2_dpmpyss_acc_s0
__builtin_HEXAGON_M2_dpmpyss_nac_s0
__builtin_HEXAGON_M2_dpmpyuu_s0
__builtin_HEXAGON_M2_dpmpyuu_acc_s0
__builtin_HEXAGON_M2_dpmpyuu_nac_s0
__builtin_HEXAGON_M2_mpy_up
__builtin_HEXAGON_M2_mpy_up_s1
__builtin_HEXAGON_M2_mpy_up_s1_sat
__builtin_HEXAGON_M2_mpyu_up
__builtin_HEXAGON_M2_mpysu_up
__builtin_HEXAGON_M2_dpmpyss_rnd_s0
__builtin_HEXAGON_M4_mac_up_s1_sat
__builtin_HEXAGON_M4_nac_up_s1_sat
__builtin_HEXAGON_M2_mpyi
__builtin_HEXAGON_M2_mpyui
__builtin_HEXAGON_M2_maci
__builtin_HEXAGON_M2_acci
__builtin_HEXAGON_M2_accii
__builtin_HEXAGON_M2_nacci
__builtin_HEXAGON_M2_naccii
__builtin_HEXAGON_M2_subacc
__builtin_HEXAGON_M4_mpyrr_addr
__builtin_HEXAGON_M4_mpyri_addr_u2
__builtin_HEXAGON_M4_mpyri_addr
__builtin_HEXAGON_M4_mpyri_addi
__builtin_HEXAGON_M4_mpyrr_addi
__builtin_HEXAGON_M2_vmpy2s_s0
__builtin_HEXAGON_M2_vmpy2s_s1
__builtin_HEXAGON_M2_vmac2s_s0
__builtin_HEXAGON_M2_vmac2s_s1
__builtin_HEXAGON_M2_vmpy2su_s0
__builtin_HEXAGON_M2_vmpy2su_s1
__builtin_HEXAGON_M2_vmac2su_s0
__builtin_HEXAGON_M2_vmac2su_s1
__builtin_HEXAGON_M2_vmpy2s_s0pack
__builtin_HEXAGON_M2_vmpy2s_s1pack
__builtin_HEXAGON_M2_vmac2
__builtin_HEXAGON_M2_vmpy2es_s0
__builtin_HEXAGON_M2_vmpy2es_s1
__builtin_HEXAGON_M2_vmac2es_s0
LLiLLiLLiLLi
__builtin_HEXAGON_M2_vmac2es_s1
__builtin_HEXAGON_M2_vmac2es
__builtin_HEXAGON_M2_vrmac_s0
__builtin_HEXAGON_M2_vrmpy_s0
__builtin_HEXAGON_M2_vdmpyrs_s0
iLLiLLi
__builtin_HEXAGON_M2_vdmpyrs_s1
__builtin_HEXAGON_M5_vrmpybuu
__builtin_HEXAGON_M5_vrmacbuu
__builtin_HEXAGON_M5_vrmpybsu
__builtin_HEXAGON_M5_vrmacbsu
__builtin_HEXAGON_M5_vmpybuu
__builtin_HEXAGON_M5_vmpybsu
__builtin_HEXAGON_M5_vmacbuu
__builtin_HEXAGON_M5_vmacbsu
__builtin_HEXAGON_M5_vdmpybsu
__builtin_HEXAGON_M5_vdmacbsu
__builtin_HEXAGON_M2_vdmacs_s0
__builtin_HEXAGON_M2_vdmacs_s1
__builtin_HEXAGON_M2_vdmpys_s0
__builtin_HEXAGON_M2_vdmpys_s1
__builtin_HEXAGON_M2_cmpyrs_s0
__builtin_HEXAGON_M2_cmpyrs_s1
__builtin_HEXAGON_M2_cmpyrsc_s0
__builtin_HEXAGON_M2_cmpyrsc_s1
__builtin_HEXAGON_M2_cmacs_s0
__builtin_HEXAGON_M2_cmacs_s1
__builtin_HEXAGON_M2_cmacsc_s0
__builtin_HEXAGON_M2_cmacsc_s1
__builtin_HEXAGON_M2_cmpys_s0
__builtin_HEXAGON_M2_cmpys_s1
__builtin_HEXAGON_M2_cmpysc_s0
__builtin_HEXAGON_M2_cmpysc_s1
__builtin_HEXAGON_M2_cnacs_s0
__builtin_HEXAGON_M2_cnacs_s1
__builtin_HEXAGON_M2_cnacsc_s0
__builtin_HEXAGON_M2_cnacsc_s1
__builtin_HEXAGON_M2_vrcmpys_s1
LLiLLii
__builtin_HEXAGON_M2_vrcmpys_acc_s1
LLiLLiLLii
__builtin_HEXAGON_M2_vrcmpys_s1rp
iLLii
__builtin_HEXAGON_M2_mmacls_s0
__builtin_HEXAGON_M2_mmacls_s1
__builtin_HEXAGON_M2_mmachs_s0
__builtin_HEXAGON_M2_mmachs_s1
__builtin_HEXAGON_M2_mmpyl_s0
__builtin_HEXAGON_M2_mmpyl_s1
__builtin_HEXAGON_M2_mmpyh_s0
__builtin_HEXAGON_M2_mmpyh_s1
__builtin_HEXAGON_M2_mmacls_rs0
__builtin_HEXAGON_M2_mmacls_rs1
__builtin_HEXAGON_M2_mmachs_rs0
__builtin_HEXAGON_M2_mmachs_rs1
__builtin_HEXAGON_M2_mmpyl_rs0
__builtin_HEXAGON_M2_mmpyl_rs1
__builtin_HEXAGON_M2_mmpyh_rs0
__builtin_HEXAGON_M2_mmpyh_rs1
__builtin_HEXAGON_M4_vrmpyeh_s0
__builtin_HEXAGON_M4_vrmpyeh_s1
__builtin_HEXAGON_M4_vrmpyeh_acc_s0
__builtin_HEXAGON_M4_vrmpyeh_acc_s1
__builtin_HEXAGON_M4_vrmpyoh_s0
__builtin_HEXAGON_M4_vrmpyoh_s1
__builtin_HEXAGON_M4_vrmpyoh_acc_s0
__builtin_HEXAGON_M4_vrmpyoh_acc_s1
__builtin_HEXAGON_M2_hmmpyl_rs1
__builtin_HEXAGON_M2_hmmpyh_rs1
__builtin_HEXAGON_M2_hmmpyl_s1
__builtin_HEXAGON_M2_hmmpyh_s1
__builtin_HEXAGON_M2_mmaculs_s0
__builtin_HEXAGON_M2_mmaculs_s1
__builtin_HEXAGON_M2_mmacuhs_s0
__builtin_HEXAGON_M2_mmacuhs_s1
__builtin_HEXAGON_M2_mmpyul_s0
__builtin_HEXAGON_M2_mmpyul_s1
__builtin_HEXAGON_M2_mmpyuh_s0
__builtin_HEXAGON_M2_mmpyuh_s1
__builtin_HEXAGON_M2_mmaculs_rs0
__builtin_HEXAGON_M2_mmaculs_rs1
__builtin_HEXAGON_M2_mmacuhs_rs0
__builtin_HEXAGON_M2_mmacuhs_rs1
__builtin_HEXAGON_M2_mmpyul_rs0
__builtin_HEXAGON_M2_mmpyul_rs1
__builtin_HEXAGON_M2_mmpyuh_rs0
__builtin_HEXAGON_M2_mmpyuh_rs1
__builtin_HEXAGON_M2_vrcmaci_s0
__builtin_HEXAGON_M2_vrcmacr_s0
__builtin_HEXAGON_M2_vrcmaci_s0c
__builtin_HEXAGON_M2_vrcmacr_s0c
__builtin_HEXAGON_M2_cmaci_s0
__builtin_HEXAGON_M2_cmacr_s0
__builtin_HEXAGON_M2_vrcmpyi_s0
__builtin_HEXAGON_M2_vrcmpyr_s0
__builtin_HEXAGON_M2_vrcmpyi_s0c
__builtin_HEXAGON_M2_vrcmpyr_s0c
__builtin_HEXAGON_M2_cmpyi_s0
__builtin_HEXAGON_M2_cmpyr_s0
__builtin_HEXAGON_M4_cmpyi_wh
__builtin_HEXAGON_M4_cmpyr_wh
__builtin_HEXAGON_M4_cmpyi_whc
__builtin_HEXAGON_M4_cmpyr_whc
__builtin_HEXAGON_M2_vcmpy_s0_sat_i
__builtin_HEXAGON_M2_vcmpy_s0_sat_r
__builtin_HEXAGON_M2_vcmpy_s1_sat_i
__builtin_HEXAGON_M2_vcmpy_s1_sat_r
__builtin_HEXAGON_M2_vcmac_s0_sat_i
__builtin_HEXAGON_M2_vcmac_s0_sat_r
__builtin_HEXAGON_S2_vcrotate
__builtin_HEXAGON_S4_vrcrotate_acc
LLiLLiLLiii
__builtin_HEXAGON_S4_vrcrotate
__builtin_HEXAGON_S2_vcnegh
__builtin_HEXAGON_S2_vrcnegh
__builtin_HEXAGON_M4_pmpyw
__builtin_HEXAGON_M4_vpmpyh
__builtin_HEXAGON_M4_pmpyw_acc
__builtin_HEXAGON_M4_vpmpyh_acc
__builtin_HEXAGON_A2_add
__builtin_HEXAGON_A2_sub
__builtin_HEXAGON_A2_addsat
__builtin_HEXAGON_A2_subsat
__builtin_HEXAGON_A2_addi
__builtin_HEXAGON_A2_addh_l16_ll
__builtin_HEXAGON_A2_addh_l16_hl
__builtin_HEXAGON_A2_addh_l16_sat_ll
__builtin_HEXAGON_A2_addh_l16_sat_hl
__builtin_HEXAGON_A2_subh_l16_ll
__builtin_HEXAGON_A2_subh_l16_hl
__builtin_HEXAGON_A2_subh_l16_sat_ll
__builtin_HEXAGON_A2_subh_l16_sat_hl
__builtin_HEXAGON_A2_addh_h16_ll
__builtin_HEXAGON_A2_addh_h16_lh
__builtin_HEXAGON_A2_addh_h16_hl
__builtin_HEXAGON_A2_addh_h16_hh
__builtin_HEXAGON_A2_addh_h16_sat_ll
__builtin_HEXAGON_A2_addh_h16_sat_lh
__builtin_HEXAGON_A2_addh_h16_sat_hl
__builtin_HEXAGON_A2_addh_h16_sat_hh
__builtin_HEXAGON_A2_subh_h16_ll
__builtin_HEXAGON_A2_subh_h16_lh
__builtin_HEXAGON_A2_subh_h16_hl
__builtin_HEXAGON_A2_subh_h16_hh
__builtin_HEXAGON_A2_subh_h16_sat_ll
__builtin_HEXAGON_A2_subh_h16_sat_lh
__builtin_HEXAGON_A2_subh_h16_sat_hl
__builtin_HEXAGON_A2_subh_h16_sat_hh
__builtin_HEXAGON_A2_aslh
__builtin_HEXAGON_A2_asrh
__builtin_HEXAGON_A2_addp
__builtin_HEXAGON_A2_addpsat
__builtin_HEXAGON_A2_addsp
LLiiLLi
__builtin_HEXAGON_A2_subp
__builtin_HEXAGON_A2_neg
__builtin_HEXAGON_A2_negsat
__builtin_HEXAGON_A2_abs
__builtin_HEXAGON_A2_abssat
__builtin_HEXAGON_A2_vconj
__builtin_HEXAGON_A2_negp
__builtin_HEXAGON_A2_absp
__builtin_HEXAGON_A2_max
__builtin_HEXAGON_A2_maxu
__builtin_HEXAGON_A2_min
__builtin_HEXAGON_A2_minu
__builtin_HEXAGON_A2_maxp
__builtin_HEXAGON_A2_maxup
ULLiLLiLLi
__builtin_HEXAGON_A2_minp
__builtin_HEXAGON_A2_minup
__builtin_HEXAGON_A2_tfr
__builtin_HEXAGON_A2_tfrsi
__builtin_HEXAGON_A2_tfrp
__builtin_HEXAGON_A2_tfrpi
__builtin_HEXAGON_A2_zxtb
__builtin_HEXAGON_A2_sxtb
__builtin_HEXAGON_A2_zxth
__builtin_HEXAGON_A2_sxth
__builtin_HEXAGON_A2_combinew
__builtin_HEXAGON_A4_combineri
__builtin_HEXAGON_A4_combineir
__builtin_HEXAGON_A2_combineii
__builtin_HEXAGON_A2_combine_hh
__builtin_HEXAGON_A2_combine_hl
__builtin_HEXAGON_A2_combine_lh
__builtin_HEXAGON_A2_combine_ll
__builtin_HEXAGON_A2_tfril
__builtin_HEXAGON_A2_tfrih
__builtin_HEXAGON_A2_and
__builtin_HEXAGON_A2_or
__builtin_HEXAGON_A2_xor
__builtin_HEXAGON_A2_not
__builtin_HEXAGON_M2_xor_xacc
__builtin_HEXAGON_M4_xor_xacc
__builtin_HEXAGON_A4_andn
__builtin_HEXAGON_A4_orn
__builtin_HEXAGON_A4_andnp
__builtin_HEXAGON_A4_ornp
__builtin_HEXAGON_S4_addaddi
__builtin_HEXAGON_S4_subaddi
__builtin_HEXAGON_M4_and_and
__builtin_HEXAGON_M4_and_andn
__builtin_HEXAGON_M4_and_or
__builtin_HEXAGON_M4_and_xor
__builtin_HEXAGON_M4_or_and
__builtin_HEXAGON_M4_or_andn
__builtin_HEXAGON_M4_or_or
__builtin_HEXAGON_M4_or_xor
__builtin_HEXAGON_S4_or_andix
__builtin_HEXAGON_S4_or_andi
__builtin_HEXAGON_S4_or_ori
__builtin_HEXAGON_M4_xor_and
__builtin_HEXAGON_M4_xor_or
__builtin_HEXAGON_M4_xor_andn
__builtin_HEXAGON_A2_subri
__builtin_HEXAGON_A2_andir
__builtin_HEXAGON_A2_orir
__builtin_HEXAGON_A2_andp
__builtin_HEXAGON_A2_orp
__builtin_HEXAGON_A2_xorp
__builtin_HEXAGON_A2_notp
__builtin_HEXAGON_A2_sxtw
__builtin_HEXAGON_A2_sat
__builtin_HEXAGON_A2_roundsat
__builtin_HEXAGON_A2_sath
__builtin_HEXAGON_A2_satuh
__builtin_HEXAGON_A2_satub
__builtin_HEXAGON_A2_satb
__builtin_HEXAGON_A2_vaddub
__builtin_HEXAGON_A2_vaddb_map
__builtin_HEXAGON_A2_vaddubs
__builtin_HEXAGON_A2_vaddh
__builtin_HEXAGON_A2_vaddhs
__builtin_HEXAGON_A2_vadduhs
__builtin_HEXAGON_A5_vaddhubs
__builtin_HEXAGON_A2_vaddw
__builtin_HEXAGON_A2_vaddws
__builtin_HEXAGON_S4_vxaddsubw
__builtin_HEXAGON_S4_vxsubaddw
__builtin_HEXAGON_S4_vxaddsubh
__builtin_HEXAGON_S4_vxsubaddh
__builtin_HEXAGON_S4_vxaddsubhr
__builtin_HEXAGON_S4_vxsubaddhr
__builtin_HEXAGON_A2_svavgh
__builtin_HEXAGON_A2_svavghs
__builtin_HEXAGON_A2_svnavgh
__builtin_HEXAGON_A2_svaddh
__builtin_HEXAGON_A2_svaddhs
__builtin_HEXAGON_A2_svadduhs
__builtin_HEXAGON_A2_svsubh
__builtin_HEXAGON_A2_svsubhs
__builtin_HEXAGON_A2_svsubuhs
__builtin_HEXAGON_A2_vraddub
__builtin_HEXAGON_A2_vraddub_acc
__builtin_HEXAGON_M2_vraddh
__builtin_HEXAGON_M2_vradduh
__builtin_HEXAGON_A2_vsubub
__builtin_HEXAGON_A2_vsubb_map
__builtin_HEXAGON_A2_vsububs
__builtin_HEXAGON_A2_vsubh
__builtin_HEXAGON_A2_vsubhs
__builtin_HEXAGON_A2_vsubuhs
__builtin_HEXAGON_A2_vsubw
__builtin_HEXAGON_A2_vsubws
__builtin_HEXAGON_A2_vabsh
__builtin_HEXAGON_A2_vabshsat
__builtin_HEXAGON_A2_vabsw
__builtin_HEXAGON_A2_vabswsat
__builtin_HEXAGON_M2_vabsdiffw
__builtin_HEXAGON_M2_vabsdiffh
__builtin_HEXAGON_A2_vrsadub
__builtin_HEXAGON_A2_vrsadub_acc
__builtin_HEXAGON_A2_vavgub
__builtin_HEXAGON_A2_vavguh
__builtin_HEXAGON_A2_vavgh
__builtin_HEXAGON_A2_vnavgh
__builtin_HEXAGON_A2_vavgw
__builtin_HEXAGON_A2_vnavgw
__builtin_HEXAGON_A2_vavgwr
__builtin_HEXAGON_A2_vnavgwr
__builtin_HEXAGON_A2_vavgwcr
__builtin_HEXAGON_A2_vnavgwcr
__builtin_HEXAGON_A2_vavghcr
__builtin_HEXAGON_A2_vnavghcr
__builtin_HEXAGON_A2_vavguw
__builtin_HEXAGON_A2_vavguwr
__builtin_HEXAGON_A2_vavgubr
__builtin_HEXAGON_A2_vavguhr
__builtin_HEXAGON_A2_vavghr
__builtin_HEXAGON_A2_vnavghr
__builtin_HEXAGON_A4_round_ri
__builtin_HEXAGON_A4_round_rr
__builtin_HEXAGON_A4_round_ri_sat
__builtin_HEXAGON_A4_round_rr_sat
__builtin_HEXAGON_A4_cround_ri
__builtin_HEXAGON_A4_cround_rr
__builtin_HEXAGON_A4_vrminh
__builtin_HEXAGON_A4_vrmaxh
__builtin_HEXAGON_A4_vrminuh
__builtin_HEXAGON_A4_vrmaxuh
__builtin_HEXAGON_A4_vrminw
__builtin_HEXAGON_A4_vrmaxw
__builtin_HEXAGON_A4_vrminuw
__builtin_HEXAGON_A4_vrmaxuw
__builtin_HEXAGON_A2_vminb
__builtin_HEXAGON_A2_vmaxb
__builtin_HEXAGON_A2_vminub
__builtin_HEXAGON_A2_vmaxub
__builtin_HEXAGON_A2_vminh
__builtin_HEXAGON_A2_vmaxh
__builtin_HEXAGON_A2_vminuh
__builtin_HEXAGON_A2_vmaxuh
__builtin_HEXAGON_A2_vminw
__builtin_HEXAGON_A2_vmaxw
__builtin_HEXAGON_A2_vminuw
__builtin_HEXAGON_A2_vmaxuw
__builtin_HEXAGON_A4_modwrapu
__builtin_HEXAGON_F2_sfadd
__builtin_HEXAGON_F2_sfsub
__builtin_HEXAGON_F2_sfmpy
__builtin_HEXAGON_F2_sffma
__builtin_HEXAGON_F2_sffma_sc
ffffi
__builtin_HEXAGON_F2_sffms
__builtin_HEXAGON_F2_sffma_lib
__builtin_HEXAGON_F2_sffms_lib
__builtin_HEXAGON_F2_sfcmpeq
__builtin_HEXAGON_F2_sfcmpgt
__builtin_HEXAGON_F2_sfcmpge
__builtin_HEXAGON_F2_sfcmpuo
__builtin_HEXAGON_F2_sfmax
__builtin_HEXAGON_F2_sfmin
__builtin_HEXAGON_F2_sfclass
__builtin_HEXAGON_F2_sfimm_p
__builtin_HEXAGON_F2_sfimm_n
__builtin_HEXAGON_F2_sffixupn
__builtin_HEXAGON_F2_sffixupd
__builtin_HEXAGON_F2_sffixupr
__builtin_HEXAGON_F2_dfadd
__builtin_HEXAGON_F2_dfsub
__builtin_HEXAGON_F2_dfmpy
__builtin_HEXAGON_F2_dffma
__builtin_HEXAGON_F2_dffms
__builtin_HEXAGON_F2_dffma_lib
__builtin_HEXAGON_F2_dffms_lib
__builtin_HEXAGON_F2_dffma_sc
ddddi
__builtin_HEXAGON_F2_dfmax
__builtin_HEXAGON_F2_dfmin
__builtin_HEXAGON_F2_dfcmpeq
__builtin_HEXAGON_F2_dfcmpgt
__builtin_HEXAGON_F2_dfcmpge
__builtin_HEXAGON_F2_dfcmpuo
__builtin_HEXAGON_F2_dfclass
__builtin_HEXAGON_F2_dfimm_p
__builtin_HEXAGON_F2_dfimm_n
__builtin_HEXAGON_F2_dffixupn
__builtin_HEXAGON_F2_dffixupd
__builtin_HEXAGON_F2_dffixupr
__builtin_HEXAGON_F2_conv_sf2df
__builtin_HEXAGON_F2_conv_df2sf
__builtin_HEXAGON_F2_conv_uw2sf
__builtin_HEXAGON_F2_conv_uw2df
__builtin_HEXAGON_F2_conv_w2sf
__builtin_HEXAGON_F2_conv_w2df
__builtin_HEXAGON_F2_conv_ud2sf
fLLi
__builtin_HEXAGON_F2_conv_ud2df
__builtin_HEXAGON_F2_conv_d2sf
__builtin_HEXAGON_F2_conv_d2df
__builtin_HEXAGON_F2_conv_sf2uw
__builtin_HEXAGON_F2_conv_sf2w
__builtin_HEXAGON_F2_conv_sf2ud
LLif
__builtin_HEXAGON_F2_conv_sf2d
__builtin_HEXAGON_F2_conv_df2uw
__builtin_HEXAGON_F2_conv_df2w
__builtin_HEXAGON_F2_conv_df2ud
__builtin_HEXAGON_F2_conv_df2d
__builtin_HEXAGON_F2_conv_sf2uw_chop
__builtin_HEXAGON_F2_conv_sf2w_chop
__builtin_HEXAGON_F2_conv_sf2ud_chop
__builtin_HEXAGON_F2_conv_sf2d_chop
__builtin_HEXAGON_F2_conv_df2uw_chop
__builtin_HEXAGON_F2_conv_df2w_chop
__builtin_HEXAGON_F2_conv_df2ud_chop
__builtin_HEXAGON_F2_conv_df2d_chop
__builtin_HEXAGON_S2_asr_r_r
__builtin_HEXAGON_S2_asl_r_r
__builtin_HEXAGON_S2_lsr_r_r
__builtin_HEXAGON_S2_lsl_r_r
__builtin_HEXAGON_S2_asr_r_p
__builtin_HEXAGON_S2_asl_r_p
__builtin_HEXAGON_S2_lsr_r_p
__builtin_HEXAGON_S2_lsl_r_p
__builtin_HEXAGON_S2_asr_r_r_acc
__builtin_HEXAGON_S2_asl_r_r_acc
__builtin_HEXAGON_S2_lsr_r_r_acc
__builtin_HEXAGON_S2_lsl_r_r_acc
__builtin_HEXAGON_S2_asr_r_p_acc
__builtin_HEXAGON_S2_asl_r_p_acc
__builtin_HEXAGON_S2_lsr_r_p_acc
__builtin_HEXAGON_S2_lsl_r_p_acc
__builtin_HEXAGON_S2_asr_r_r_nac
__builtin_HEXAGON_S2_asl_r_r_nac
__builtin_HEXAGON_S2_lsr_r_r_nac
__builtin_HEXAGON_S2_lsl_r_r_nac
__builtin_HEXAGON_S2_asr_r_p_nac
__builtin_HEXAGON_S2_asl_r_p_nac
__builtin_HEXAGON_S2_lsr_r_p_nac
__builtin_HEXAGON_S2_lsl_r_p_nac
__builtin_HEXAGON_S2_asr_r_r_and
__builtin_HEXAGON_S2_asl_r_r_and
__builtin_HEXAGON_S2_lsr_r_r_and
__builtin_HEXAGON_S2_lsl_r_r_and
__builtin_HEXAGON_S2_asr_r_r_or
__builtin_HEXAGON_S2_asl_r_r_or
__builtin_HEXAGON_S2_lsr_r_r_or
__builtin_HEXAGON_S2_lsl_r_r_or
__builtin_HEXAGON_S2_asr_r_p_and
__builtin_HEXAGON_S2_asl_r_p_and
__builtin_HEXAGON_S2_lsr_r_p_and
__builtin_HEXAGON_S2_lsl_r_p_and
__builtin_HEXAGON_S2_asr_r_p_or
__builtin_HEXAGON_S2_asl_r_p_or
__builtin_HEXAGON_S2_lsr_r_p_or
__builtin_HEXAGON_S2_lsl_r_p_or
__builtin_HEXAGON_S2_asr_r_p_xor
__builtin_HEXAGON_S2_asl_r_p_xor
__builtin_HEXAGON_S2_lsr_r_p_xor
__builtin_HEXAGON_S2_lsl_r_p_xor
__builtin_HEXAGON_S2_asr_r_r_sat
__builtin_HEXAGON_S2_asl_r_r_sat
__builtin_HEXAGON_S2_asr_i_r
__builtin_HEXAGON_S2_lsr_i_r
__builtin_HEXAGON_S2_asl_i_r
__builtin_HEXAGON_S2_asr_i_p
__builtin_HEXAGON_S2_lsr_i_p
__builtin_HEXAGON_S2_asl_i_p
__builtin_HEXAGON_S2_asr_i_r_acc
__builtin_HEXAGON_S2_lsr_i_r_acc
__builtin_HEXAGON_S2_asl_i_r_acc
__builtin_HEXAGON_S2_asr_i_p_acc
__builtin_HEXAGON_S2_lsr_i_p_acc
__builtin_HEXAGON_S2_asl_i_p_acc
__builtin_HEXAGON_S2_asr_i_r_nac
__builtin_HEXAGON_S2_lsr_i_r_nac
__builtin_HEXAGON_S2_asl_i_r_nac
__builtin_HEXAGON_S2_asr_i_p_nac
__builtin_HEXAGON_S2_lsr_i_p_nac
__builtin_HEXAGON_S2_asl_i_p_nac
__builtin_HEXAGON_S2_lsr_i_r_xacc
__builtin_HEXAGON_S2_asl_i_r_xacc
__builtin_HEXAGON_S2_lsr_i_p_xacc
__builtin_HEXAGON_S2_asl_i_p_xacc
__builtin_HEXAGON_S2_asr_i_r_and
__builtin_HEXAGON_S2_lsr_i_r_and
__builtin_HEXAGON_S2_asl_i_r_and
__builtin_HEXAGON_S2_asr_i_r_or
__builtin_HEXAGON_S2_lsr_i_r_or
__builtin_HEXAGON_S2_asl_i_r_or
__builtin_HEXAGON_S2_asr_i_p_and
__builtin_HEXAGON_S2_lsr_i_p_and
__builtin_HEXAGON_S2_asl_i_p_and
__builtin_HEXAGON_S2_asr_i_p_or
__builtin_HEXAGON_S2_lsr_i_p_or
__builtin_HEXAGON_S2_asl_i_p_or
__builtin_HEXAGON_S2_asl_i_r_sat
__builtin_HEXAGON_S2_asr_i_r_rnd
__builtin_HEXAGON_S2_asr_i_r_rnd_goodsyntax
__builtin_HEXAGON_S2_asr_i_p_rnd
__builtin_HEXAGON_S2_asr_i_p_rnd_goodsyntax
__builtin_HEXAGON_S4_lsli
__builtin_HEXAGON_S2_addasl_rrri
__builtin_HEXAGON_S4_andi_asl_ri
__builtin_HEXAGON_S4_ori_asl_ri
__builtin_HEXAGON_S4_addi_asl_ri
__builtin_HEXAGON_S4_subi_asl_ri
__builtin_HEXAGON_S4_andi_lsr_ri
__builtin_HEXAGON_S4_ori_lsr_ri
__builtin_HEXAGON_S4_addi_lsr_ri
__builtin_HEXAGON_S4_subi_lsr_ri
__builtin_HEXAGON_S2_valignib
__builtin_HEXAGON_S2_valignrb
__builtin_HEXAGON_S2_vspliceib
__builtin_HEXAGON_S2_vsplicerb
__builtin_HEXAGON_S2_vsplatrh
__builtin_HEXAGON_S2_vsplatrb
__builtin_HEXAGON_S2_insert
__builtin_HEXAGON_S2_tableidxb_goodsyntax
__builtin_HEXAGON_S2_tableidxh_goodsyntax
__builtin_HEXAGON_S2_tableidxw_goodsyntax
__builtin_HEXAGON_S2_tableidxd_goodsyntax
__builtin_HEXAGON_A4_bitspliti
__builtin_HEXAGON_A4_bitsplit
__builtin_HEXAGON_S4_extract
__builtin_HEXAGON_S2_extractu
__builtin_HEXAGON_S2_insertp
__builtin_HEXAGON_S4_extractp
__builtin_HEXAGON_S2_extractup
__builtin_HEXAGON_S2_insert_rp
iiiLLi
__builtin_HEXAGON_S4_extract_rp
iiLLi
__builtin_HEXAGON_S2_extractu_rp
__builtin_HEXAGON_S2_insertp_rp
__builtin_HEXAGON_S4_extractp_rp
__builtin_HEXAGON_S2_extractup_rp
__builtin_HEXAGON_S2_tstbit_i
__builtin_HEXAGON_S4_ntstbit_i
__builtin_HEXAGON_S2_setbit_i
__builtin_HEXAGON_S2_togglebit_i
__builtin_HEXAGON_S2_clrbit_i
__builtin_HEXAGON_S2_tstbit_r
__builtin_HEXAGON_S4_ntstbit_r
__builtin_HEXAGON_S2_setbit_r
__builtin_HEXAGON_S2_togglebit_r
__builtin_HEXAGON_S2_clrbit_r
__builtin_HEXAGON_S2_asr_i_vh
__builtin_HEXAGON_S2_lsr_i_vh
__builtin_HEXAGON_S2_asl_i_vh
__builtin_HEXAGON_S2_asr_r_vh
__builtin_HEXAGON_S5_asrhub_sat
__builtin_HEXAGON_S2_asl_r_vh
__builtin_HEXAGON_S2_lsr_r_vh
__builtin_HEXAGON_S2_lsl_r_vh
__builtin_HEXAGON_S2_asr_i_vw
__builtin_HEXAGON_S2_asr_i_svw_trun
__builtin_HEXAGON_S2_asr_r_svw_trun
__builtin_HEXAGON_S2_lsr_i_vw
__builtin_HEXAGON_S2_asl_i_vw
__builtin_HEXAGON_S2_asr_r_vw
__builtin_HEXAGON_S2_asl_r_vw
__builtin_HEXAGON_S2_lsr_r_vw
__builtin_HEXAGON_S2_lsl_r_vw
__builtin_HEXAGON_S2_vrndpackwh
__builtin_HEXAGON_S2_vrndpackwhs
__builtin_HEXAGON_S2_vsxtbh
__builtin_HEXAGON_S2_vzxtbh
__builtin_HEXAGON_S2_vsathub
__builtin_HEXAGON_S2_svsathub
__builtin_HEXAGON_S2_svsathb
__builtin_HEXAGON_S2_vsathb
__builtin_HEXAGON_S2_vtrunohb
__builtin_HEXAGON_S2_vtrunewh
__builtin_HEXAGON_S2_vtrunowh
__builtin_HEXAGON_S2_vtrunehb
__builtin_HEXAGON_S2_vsxthw
__builtin_HEXAGON_S2_vzxthw
__builtin_HEXAGON_S2_vsatwh
__builtin_HEXAGON_S2_vsatwuh
__builtin_HEXAGON_S2_packhl
__builtin_HEXAGON_A2_swiz
__builtin_HEXAGON_S2_vsathub_nopack
__builtin_HEXAGON_S2_vsathb_nopack
__builtin_HEXAGON_S2_vsatwh_nopack
__builtin_HEXAGON_S2_vsatwuh_nopack
__builtin_HEXAGON_S2_shuffob
__builtin_HEXAGON_S2_shuffeb
__builtin_HEXAGON_S2_shuffoh
__builtin_HEXAGON_S2_shuffeh
__builtin_HEXAGON_S5_popcountp
__builtin_HEXAGON_S4_parity
__builtin_HEXAGON_S2_parityp
__builtin_HEXAGON_S2_lfsp
__builtin_HEXAGON_S2_clbnorm
__builtin_HEXAGON_S4_clbaddi
__builtin_HEXAGON_S4_clbpnorm
__builtin_HEXAGON_S4_clbpaddi
__builtin_HEXAGON_S2_clb
__builtin_HEXAGON_S2_cl0
__builtin_HEXAGON_S2_cl1
__builtin_HEXAGON_S2_clbp
__builtin_HEXAGON_S2_cl0p
__builtin_HEXAGON_S2_cl1p
__builtin_HEXAGON_S2_brev
__builtin_HEXAGON_S2_brevp
__builtin_HEXAGON_S2_ct0
__builtin_HEXAGON_S2_ct1
__builtin_HEXAGON_S2_ct0p
__builtin_HEXAGON_S2_ct1p
__builtin_HEXAGON_S2_interleave
__builtin_HEXAGON_S2_deinterleave
__AARCH_BIG_ENDIAN
__builtin_neon_vabd_v
__builtin_neon_vabdq_v
__builtin_neon_vabs_v
__builtin_neon_vabsq_v
__builtin_neon_vpadd_v
__builtin_neon_vpaddq_v
__builtin_neon_vaesdq_v
__builtin_neon_vaeseq_v
__builtin_neon_vaesimcq_v
__builtin_neon_vaesmcq_v
__builtin_neon_vbsl_v
__builtin_neon_vbslq_v
__builtin_neon_vceqz_v
__builtin_neon_vceqzq_v
__builtin_neon_vcgez_v
__builtin_neon_vcgezq_v
__builtin_neon_vcgtz_v
__builtin_neon_vcgtzq_v
__builtin_neon_vclez_v
__builtin_neon_vclezq_v
__builtin_neon_vcltz_v
__builtin_neon_vcltzq_v
__builtin_neon_vtst_v
__builtin_neon_vtstq_v
__builtin_neon_vcvt_n_f64_v
V1dV8Scii
__builtin_neon_vcvtq_n_f64_v
V2dV16Scii
__builtin_neon_vcage_v
__builtin_neon_vcageq_v
__builtin_neon_vcagt_v
__builtin_neon_vcagtq_v
__builtin_neon_vcale_v
__builtin_neon_vcaleq_v
__builtin_neon_vcalt_v
__builtin_neon_vcaltq_v
__builtin_neon_vcvta_s32_v
__builtin_neon_vcvtaq_s32_v
__builtin_neon_vcvta_s64_v
__builtin_neon_vcvtaq_s64_v
__builtin_neon_vcvta_u32_v
__builtin_neon_vcvtaq_u32_v
__builtin_neon_vcvta_u64_v
__builtin_neon_vcvtaq_u64_v
__builtin_neon_vcvtm_s32_v
__builtin_neon_vcvtmq_s32_v
__builtin_neon_vcvtm_s64_v
__builtin_neon_vcvtmq_s64_v
__builtin_neon_vcvtm_u32_v
__builtin_neon_vcvtmq_u32_v
__builtin_neon_vcvtm_u64_v
__builtin_neon_vcvtmq_u64_v
__builtin_neon_vcvtn_s32_v
__builtin_neon_vcvtnq_s32_v
__builtin_neon_vcvtn_s64_v
__builtin_neon_vcvtnq_s64_v
__builtin_neon_vcvtn_u32_v
__builtin_neon_vcvtnq_u32_v
__builtin_neon_vcvtn_u64_v
__builtin_neon_vcvtnq_u64_v
__builtin_neon_vcvtp_s32_v
__builtin_neon_vcvtpq_s32_v
__builtin_neon_vcvtp_s64_v
__builtin_neon_vcvtpq_s64_v
__builtin_neon_vcvtp_u32_v
__builtin_neon_vcvtpq_u32_v
__builtin_neon_vcvtp_u64_v
__builtin_neon_vcvtpq_u64_v
__builtin_neon_vcvt_n_s64_v
__builtin_neon_vcvtq_n_s64_v
__builtin_neon_vcvt_n_u64_v
__builtin_neon_vcvtq_n_u64_v
__builtin_neon_vmaxnm_v
__builtin_neon_vmaxnmq_v
__builtin_neon_vpmaxnm_v
__builtin_neon_vpmaxnmq_v
__builtin_neon_vmaxnmv_f32
__builtin_neon_vmaxnmvq_f32
__builtin_neon_vmaxnmvq_f64
dV2d
__builtin_neon_vminnm_v
__builtin_neon_vminnmq_v
__builtin_neon_vpminnm_v
__builtin_neon_vpminnmq_v
__builtin_neon_vminnmv_f32
__builtin_neon_vminnmvq_f32
__builtin_neon_vminnmvq_f64
__builtin_neon_vfma_v
__builtin_neon_vfmaq_v
__builtin_neon_vfms_v
__builtin_neon_vfmsq_v
__builtin_neon_vrecpe_v
__builtin_neon_vrecpeq_v
__builtin_neon_vrecps_v
__builtin_neon_vrecpsq_v
__builtin_neon_vrnda_v
__builtin_neon_vrndaq_v
__builtin_neon_vrndi_v
__builtin_neon_vrndiq_v
__builtin_neon_vrndm_v
__builtin_neon_vrndmq_v
__builtin_neon_vrndn_v
__builtin_neon_vrndnq_v
__builtin_neon_vrndp_v
__builtin_neon_vrndpq_v
__builtin_neon_vrndx_v
__builtin_neon_vrndxq_v
__builtin_neon_vrnd_v
__builtin_neon_vrndq_v
__builtin_neon_vrsqrte_v
__builtin_neon_vrsqrteq_v
__builtin_neon_vrsqrts_v
__builtin_neon_vrsqrtsq_v
__builtin_neon_vsqrt_v
__builtin_neon_vsqrtq_v
__builtin_neon_vget_lane_i8
__builtin_neon_vget_lane_i16
__builtin_neon_vget_lane_i32
__builtin_neon_vget_lane_i64
__builtin_neon_vgetq_lane_i8
__builtin_neon_vgetq_lane_i16
__builtin_neon_vgetq_lane_i32
__builtin_neon_vgetq_lane_i64
__builtin_neon_vget_lane_f32
__builtin_neon_vget_lane_f64
dV1di
__builtin_neon_vgetq_lane_f32
__builtin_neon_vgetq_lane_f64
dV2di
__builtin_neon_vld1q_v
__builtin_neon_vld1_v
__builtin_neon_vld1q_dup_v
__builtin_neon_vld1_dup_v
__builtin_neon_vld1q_lane_v
__builtin_neon_vld1_lane_v
__builtin_neon_vld1q_x2_v
__builtin_neon_vld1_x2_v
__builtin_neon_vld2q_v
__builtin_neon_vld2_v
__builtin_neon_vld2q_dup_v
__builtin_neon_vld2_dup_v
__builtin_neon_vld2q_lane_v
__builtin_neon_vld2_lane_v
__builtin_neon_vld3q_v
__builtin_neon_vld3_v
__builtin_neon_vld3q_dup_v
__builtin_neon_vld3_dup_v
__builtin_neon_vld3q_lane_v
__builtin_neon_vld3_lane_v
__builtin_neon_vld1q_x3_v
__builtin_neon_vld1_x3_v
__builtin_neon_vld4q_v
__builtin_neon_vld4_v
__builtin_neon_vld4q_dup_v
__builtin_neon_vld4_dup_v
__builtin_neon_vld4q_lane_v
__builtin_neon_vld4_lane_v
__builtin_neon_vld1q_x4_v
__builtin_neon_vld1_x4_v
__builtin_neon_vmax_v
__builtin_neon_vmaxq_v
__builtin_neon_vpmax_v
__builtin_neon_vpmaxq_v
__builtin_neon_vmin_v
__builtin_neon_vminq_v
__builtin_neon_vpmin_v
__builtin_neon_vpminq_v
__builtin_neon_vmulx_v
__builtin_neon_vmulxq_v
__builtin_neon_vqabs_v
__builtin_neon_vqabsq_v
__builtin_neon_vqneg_v
__builtin_neon_vqnegq_v
__builtin_neon_vrbit_v
__builtin_neon_vrbitq_v
__builtin_neon_vabds_f32
__builtin_neon_vabdd_f64
__builtin_neon_vabsd_s64
__builtin_neon_vaddd_s64
__builtin_neon_vaddd_u64
__builtin_neon_vpadds_f32
__builtin_neon_vpaddd_s64
__builtin_neon_vpaddd_f64
__builtin_neon_vpaddd_u64
ULLiV2LLi
__builtin_neon_vceqd_s64
__builtin_neon_vceqd_u64
__builtin_neon_vceqzd_s64
__builtin_neon_vceqzd_u64
__builtin_neon_vcged_s64
__builtin_neon_vcgezd_s64
__builtin_neon_vcgtd_s64
__builtin_neon_vcgtzd_s64
__builtin_neon_vcgtd_u64
__builtin_neon_vcged_u64
__builtin_neon_vcled_s64
__builtin_neon_vcled_u64
__builtin_neon_vclezd_s64
__builtin_neon_vcltd_s64
__builtin_neon_vcltd_u64
__builtin_neon_vcltzd_s64
__builtin_neon_vtstd_s64
__builtin_neon_vtstd_u64
__builtin_neon_vcages_f32
Uiff
__builtin_neon_vcaged_f64
ULLidd
__builtin_neon_vcagts_f32
__builtin_neon_vcagtd_f64
__builtin_neon_vcales_f32
__builtin_neon_vcaled_f64
__builtin_neon_vcalts_f32
__builtin_neon_vcaltd_f64
__builtin_neon_vceqs_f32
__builtin_neon_vceqd_f64
__builtin_neon_vceqzs_f32
__builtin_neon_vceqzd_f64
__builtin_neon_vcges_f32
__builtin_neon_vcged_f64
__builtin_neon_vcgezs_f32
__builtin_neon_vcgezd_f64
__builtin_neon_vcgts_f32
__builtin_neon_vcgtd_f64
__builtin_neon_vcgtzs_f32
__builtin_neon_vcgtzd_f64
__builtin_neon_vcles_f32
__builtin_neon_vcled_f64
__builtin_neon_vclezs_f32
__builtin_neon_vclezd_f64
__builtin_neon_vclts_f32
__builtin_neon_vcltd_f64
__builtin_neon_vcltzs_f32
__builtin_neon_vcltzd_f64
__builtin_neon_vcvtad_s64_f64
__builtin_neon_vcvtas_s32_f32
__builtin_neon_vcvtad_u64_f64
__builtin_neon_vcvtas_u32_f32
__builtin_neon_vcvtmd_s64_f64
__builtin_neon_vcvtms_s32_f32
__builtin_neon_vcvtmd_u64_f64
__builtin_neon_vcvtms_u32_f32
__builtin_neon_vcvtnd_s64_f64
__builtin_neon_vcvtns_s32_f32
__builtin_neon_vcvtnd_u64_f64
__builtin_neon_vcvtns_u32_f32
__builtin_neon_vcvtpd_s64_f64
__builtin_neon_vcvtps_s32_f32
__builtin_neon_vcvtpd_u64_f64
__builtin_neon_vcvtps_u32_f32
__builtin_neon_vcvtxd_f32_f64
__builtin_neon_vcvtd_s64_f64
__builtin_neon_vcvts_s32_f32
__builtin_neon_vcvts_n_s32_f32
__builtin_neon_vcvtd_n_s64_f64
__builtin_neon_vcvtd_u64_f64
__builtin_neon_vcvts_u32_f32
__builtin_neon_vcvts_n_u32_f32
__builtin_neon_vcvtd_n_u64_f64
__builtin_neon_vpmaxnms_f32
__builtin_neon_vpmaxnmqd_f64
__builtin_neon_vpmaxs_f32
__builtin_neon_vpmaxqd_f64
__builtin_neon_vpminnms_f32
__builtin_neon_vpminnmqd_f64
__builtin_neon_vpmins_f32
__builtin_neon_vpminqd_f64
__builtin_neon_vfmas_lane_f32
fffV2fi
__builtin_neon_vfmad_lane_f64
dddV1di
__builtin_neon_vfmas_laneq_f32
fffV4fi
__builtin_neon_vfmad_laneq_f64
dddV2di
__builtin_neon_vmulxs_f32
__builtin_neon_vmulxd_f64
__builtin_neon_vrecpes_f32
__builtin_neon_vrecped_f64
__builtin_neon_vrecpss_f32
__builtin_neon_vrecpsd_f64
__builtin_neon_vrecpxs_f32
__builtin_neon_vrecpxd_f64
__builtin_neon_vrsqrtes_f32
__builtin_neon_vrsqrted_f64
__builtin_neon_vrsqrtss_f32
__builtin_neon_vrsqrtsd_f64
__builtin_neon_vnegd_s64
__builtin_neon_vqaddb_s8
__builtin_neon_vqaddh_s16
__builtin_neon_vqadds_s32
__builtin_neon_vqaddd_s64
__builtin_neon_vqaddb_u8
__builtin_neon_vqaddh_u16
__builtin_neon_vqadds_u32
__builtin_neon_vqaddd_u64
__builtin_neon_vqrshlb_s8
__builtin_neon_vqrshlh_s16
__builtin_neon_vqrshls_s32
__builtin_neon_vqrshld_s64
__builtin_neon_vqrshlb_u8
__builtin_neon_vqrshlh_u16
__builtin_neon_vqrshls_u32
__builtin_neon_vqrshld_u64
__builtin_neon_vqshlb_s8
__builtin_neon_vqshlh_s16
__builtin_neon_vqshls_s32
__builtin_neon_vqshld_s64
__builtin_neon_vqshlb_u8
__builtin_neon_vqshlh_u16
__builtin_neon_vqshls_u32
__builtin_neon_vqshld_u64
__builtin_neon_vqsubb_s8
__builtin_neon_vqsubh_s16
__builtin_neon_vqsubs_s32
__builtin_neon_vqsubd_s64
__builtin_neon_vqsubb_u8
__builtin_neon_vqsubh_u16
__builtin_neon_vqsubs_u32
__builtin_neon_vqsubd_u64
__builtin_neon_vrshld_s64
__builtin_neon_vrshld_u64
__builtin_neon_vcvtd_f64_s64
__builtin_neon_vcvts_f32_s32
__builtin_neon_vcvts_n_f32_s32
__builtin_neon_vcvts_n_f32_u32
__builtin_neon_vcvtd_n_f64_s64
__builtin_neon_vcvtd_n_f64_u64
__builtin_neon_vshld_s64
__builtin_neon_vshld_u64
__builtin_neon_vshld_n_s64
__builtin_neon_vshld_n_u64
ULLiULLii
__builtin_neon_vslid_n_s64
__builtin_neon_vslid_n_u64
ULLiULLiULLii
__builtin_neon_vqabsb_s8
__builtin_neon_vqabsh_s16
__builtin_neon_vqabss_s32
__builtin_neon_vqabsd_s64
__builtin_neon_vqdmlalh_s16
iiss
__builtin_neon_vqdmlals_s32
__builtin_neon_vqdmlalh_lane_s16
iisV4si
__builtin_neon_vqdmlals_lane_s32
LLiLLiiV2ii
__builtin_neon_vqdmlalh_laneq_s16
iisV8si
__builtin_neon_vqdmlals_laneq_s32
LLiLLiiV4ii
__builtin_neon_vqdmlslh_s16
__builtin_neon_vqdmlsls_s32
__builtin_neon_vqdmlslh_lane_s16
__builtin_neon_vqdmlsls_lane_s32
__builtin_neon_vqdmlslh_laneq_s16
__builtin_neon_vqdmlsls_laneq_s32
__builtin_neon_vqdmulhh_s16
__builtin_neon_vqdmulhs_s32
__builtin_neon_vqdmullh_s16
__builtin_neon_vqdmulls_s32
__builtin_neon_vqnegb_s8
__builtin_neon_vqnegh_s16
__builtin_neon_vqnegs_s32
__builtin_neon_vqnegd_s64
__builtin_neon_vqrdmulhh_s16
__builtin_neon_vqrdmulhs_s32
__builtin_neon_vqrshrnh_n_s16
Scsi
__builtin_neon_vqrshrns_n_s32
__builtin_neon_vqrshrnd_n_s64
__builtin_neon_vqrshrnh_n_u16
UcUsi
__builtin_neon_vqrshrns_n_u32
UsUii
__builtin_neon_vqrshrnd_n_u64
UiULLii
__builtin_neon_vqrshrunh_n_s16
__builtin_neon_vqrshruns_n_s32
__builtin_neon_vqrshrund_n_s64
__builtin_neon_vqshlub_n_s8
ScSci
__builtin_neon_vqshluh_n_s16
__builtin_neon_vqshlus_n_s32
__builtin_neon_vqshlud_n_s64
__builtin_neon_vqshlb_n_s8
__builtin_neon_vqshlh_n_s16
__builtin_neon_vqshls_n_s32
__builtin_neon_vqshld_n_s64
__builtin_neon_vqshlb_n_u8
UcUci
__builtin_neon_vqshlh_n_u16
UsUsi
__builtin_neon_vqshls_n_u32
UiUii
__builtin_neon_vqshld_n_u64
__builtin_neon_vqshrnh_n_s16
__builtin_neon_vqshrns_n_s32
__builtin_neon_vqshrnd_n_s64
__builtin_neon_vqshrnh_n_u16
__builtin_neon_vqshrns_n_u32
__builtin_neon_vqshrnd_n_u64
__builtin_neon_vqshrunh_n_s16
__builtin_neon_vqshruns_n_s32
__builtin_neon_vqshrund_n_s64
__builtin_neon_vqmovnh_s16
__builtin_neon_vqmovns_s32
__builtin_neon_vqmovnd_s64
__builtin_neon_vqmovunh_s16
__builtin_neon_vqmovuns_s32
__builtin_neon_vqmovund_s64
__builtin_neon_vsrid_n_s64
__builtin_neon_vsrid_n_u64
__builtin_neon_vrshrd_n_s64
__builtin_neon_vrshrd_n_u64
__builtin_neon_vrsrad_n_s64
__builtin_neon_vrsrad_n_u64
__builtin_neon_vshrd_n_s64
__builtin_neon_vshrd_n_u64
__builtin_neon_vsrad_n_s64
__builtin_neon_vsrad_n_u64
__builtin_neon_vsubd_s64
__builtin_neon_vsubd_u64
__builtin_neon_vuqaddb_s8
__builtin_neon_vuqaddh_s16
__builtin_neon_vuqadds_s32
__builtin_neon_vuqaddd_s64
__builtin_neon_vcvtd_f64_u64
__builtin_neon_vcvts_f32_u32
__builtin_neon_vqmovnh_u16
__builtin_neon_vqmovns_u32
__builtin_neon_vqmovnd_u64
__builtin_neon_vsqaddb_u8
__builtin_neon_vsqaddh_u16
__builtin_neon_vsqadds_u32
__builtin_neon_vsqaddd_u64
__builtin_neon_vdupb_lane_i8
__builtin_neon_vduph_lane_i16
__builtin_neon_vdups_lane_i32
__builtin_neon_vdupd_lane_i64
__builtin_neon_vdups_lane_f32
__builtin_neon_vdupd_lane_f64
__builtin_neon_vdupb_laneq_i8
__builtin_neon_vduph_laneq_i16
__builtin_neon_vdups_laneq_i32
__builtin_neon_vdupd_laneq_i64
__builtin_neon_vdups_laneq_f32
__builtin_neon_vdupd_laneq_f64
__builtin_neon_vmul_lane_v
__builtin_neon_vmul_laneq_v
V8ScV8ScV16Scii
__builtin_neon_vmul_n_f64
V1dV1dd
__builtin_neon_vset_lane_i8
__builtin_neon_vset_lane_i16
__builtin_neon_vset_lane_i32
__builtin_neon_vset_lane_i64
__builtin_neon_vsetq_lane_i8
__builtin_neon_vsetq_lane_i16
__builtin_neon_vsetq_lane_i32
__builtin_neon_vsetq_lane_i64
__builtin_neon_vset_lane_f32
__builtin_neon_vset_lane_f64
V1ddV1di
__builtin_neon_vsetq_lane_f32
__builtin_neon_vsetq_lane_f64
V2ddV2di
__builtin_neon_vsha1cq_u32
__builtin_neon_vsha1h_u32
__builtin_neon_vsha1mq_u32
__builtin_neon_vsha1pq_u32
__builtin_neon_vsha1su0q_v
__builtin_neon_vsha1su1q_v
__builtin_neon_vsha256hq_v
__builtin_neon_vsha256h2q_v
__builtin_neon_vsha256su0q_v
__builtin_neon_vsha256su1q_v
__builtin_neon_vsli_n_v
__builtin_neon_vsliq_n_v
__builtin_neon_vsri_n_v
__builtin_neon_vsriq_n_v
__builtin_neon_vst1q_v
__builtin_neon_vst1_v
__builtin_neon_vst1q_lane_v
__builtin_neon_vst1_lane_v
__builtin_neon_vst1q_x2_v
__builtin_neon_vst1_x2_v
__builtin_neon_vst1q_x3_v
__builtin_neon_vst1_x3_v
__builtin_neon_vst1q_x4_v
__builtin_neon_vst1_x4_v
__builtin_neon_vst2q_v
__builtin_neon_vst2_v
__builtin_neon_vst2q_lane_v
__builtin_neon_vst2_lane_v
__builtin_neon_vst3q_v
__builtin_neon_vst3_v
__builtin_neon_vst3q_lane_v
__builtin_neon_vst3_lane_v
__builtin_neon_vst4q_v
__builtin_neon_vst4_v
__builtin_neon_vst4q_lane_v
__builtin_neon_vst4_lane_v
__builtin_neon_vuqadd_v
__builtin_neon_vuqaddq_v
__builtin_neon_vsqadd_v
__builtin_neon_vsqaddq_v
__builtin_neon_vaddhn_v
__builtin_neon_vaddlv_s8
__builtin_neon_vaddlv_s16
__builtin_neon_vaddlv_s32
__builtin_neon_vaddlv_u8
__builtin_neon_vaddlv_u16
__builtin_neon_vaddlv_u32
__builtin_neon_vaddlvq_s8
__builtin_neon_vaddlvq_s16
__builtin_neon_vaddlvq_s32
__builtin_neon_vaddlvq_u8
__builtin_neon_vaddlvq_u16
__builtin_neon_vaddlvq_u32
__builtin_neon_vaddv_s8
__builtin_neon_vaddv_s16
__builtin_neon_vaddv_s32
__builtin_neon_vaddv_f32
__builtin_neon_vaddv_u8
__builtin_neon_vaddv_u16
__builtin_neon_vaddv_u32
__builtin_neon_vaddvq_s8
__builtin_neon_vaddvq_s16
__builtin_neon_vaddvq_s32
__builtin_neon_vaddvq_u8
__builtin_neon_vaddvq_u16
__builtin_neon_vaddvq_u32
__builtin_neon_vaddvq_f32
__builtin_neon_vaddvq_f64
__builtin_neon_vaddvq_s64
__builtin_neon_vaddvq_u64
__builtin_neon_vcls_v
__builtin_neon_vclsq_v
__builtin_neon_vclz_v
__builtin_neon_vclzq_v
__builtin_neon_vcnt_v
__builtin_neon_vcntq_v
__builtin_neon_vcvtx_f32_v
V2fV16Sci
__builtin_neon_vcvt_f16_v
__builtin_neon_vcvt_f32_v
__builtin_neon_vcvtq_f32_v
__builtin_neon_vcvt_f32_f16
__builtin_neon_vcvt_f32_f64
__builtin_neon_vcvt_f64_v
V1dV8Sci
__builtin_neon_vcvtq_f64_v
V2dV16Sci
__builtin_neon_vcvt_f64_f32
__builtin_neon_vcvt_n_f32_v
__builtin_neon_vcvtq_n_f32_v
__builtin_neon_vcvt_n_s32_v
__builtin_neon_vcvtq_n_s32_v
__builtin_neon_vcvt_n_u32_v
__builtin_neon_vcvtq_n_u32_v
__builtin_neon_vcvt_s32_v
__builtin_neon_vcvtq_s32_v
__builtin_neon_vcvt_s64_v
__builtin_neon_vcvtq_s64_v
__builtin_neon_vcvt_u32_v
__builtin_neon_vcvtq_u32_v
__builtin_neon_vcvt_u64_v
__builtin_neon_vcvtq_u64_v
__builtin_neon_vext_v
__builtin_neon_vextq_v
__builtin_neon_vfma_lane_v
__builtin_neon_vfmaq_lane_v
V16ScV16ScV16ScV8Scii
__builtin_neon_vfma_laneq_v
V8ScV8ScV8ScV16Scii
__builtin_neon_vfmaq_laneq_v
__builtin_neon_vhadd_v
__builtin_neon_vhaddq_v
__builtin_neon_vhsub_v
__builtin_neon_vhsubq_v
__builtin_neon_vldrq_p128
LLLivC*
__builtin_neon_vmaxv_s8
__builtin_neon_vmaxv_s16
__builtin_neon_vmaxv_s32
__builtin_neon_vmaxv_f32
__builtin_neon_vmaxv_u8
__builtin_neon_vmaxv_u16
__builtin_neon_vmaxv_u32
__builtin_neon_vmaxvq_s8
__builtin_neon_vmaxvq_s16
__builtin_neon_vmaxvq_s32
__builtin_neon_vmaxvq_u8
__builtin_neon_vmaxvq_u16
__builtin_neon_vmaxvq_u32
__builtin_neon_vmaxvq_f32
__builtin_neon_vmaxvq_f64
__builtin_neon_vminv_s8
__builtin_neon_vminv_s16
__builtin_neon_vminv_s32
__builtin_neon_vminv_f32
__builtin_neon_vminv_u8
__builtin_neon_vminv_u16
__builtin_neon_vminv_u32
__builtin_neon_vminvq_s8
__builtin_neon_vminvq_s16
__builtin_neon_vminvq_s32
__builtin_neon_vminvq_u8
__builtin_neon_vminvq_u16
__builtin_neon_vminvq_u32
__builtin_neon_vminvq_f32
__builtin_neon_vminvq_f64
__builtin_neon_vmovl_v
__builtin_neon_vmovn_v
__builtin_neon_vmull_v
__builtin_neon_vmull_p64
LLLiULLiULLi
__builtin_neon_vmul_v
__builtin_neon_vmulq_v
__builtin_neon_vpadal_v
__builtin_neon_vpadalq_v
__builtin_neon_vpaddl_v
__builtin_neon_vpaddlq_v
__builtin_neon_vqadd_v
__builtin_neon_vqaddq_v
__builtin_neon_vqdmlal_v
__builtin_neon_vqdmlsl_v
__builtin_neon_vqdmulh_v
__builtin_neon_vqdmulhq_v
__builtin_neon_vqdmull_v
__builtin_neon_vqmovn_v
__builtin_neon_vqmovun_v
__builtin_neon_vqrdmulh_v
__builtin_neon_vqrdmulhq_v
__builtin_neon_vqrshl_v
__builtin_neon_vqrshlq_v
__builtin_neon_vqrshrn_n_v
__builtin_neon_vqrshrun_n_v
__builtin_neon_vqshl_v
__builtin_neon_vqshlq_v
__builtin_neon_vqshlu_n_v
__builtin_neon_vqshluq_n_v
__builtin_neon_vqshl_n_v
__builtin_neon_vqshlq_n_v
__builtin_neon_vqshrn_n_v
__builtin_neon_vqshrun_n_v
__builtin_neon_vqsub_v
__builtin_neon_vqsubq_v
__builtin_neon_vqtbl1_v
__builtin_neon_vqtbl1q_v
__builtin_neon_vqtbl2_v
__builtin_neon_vqtbl2q_v
__builtin_neon_vqtbl3_v
__builtin_neon_vqtbl3q_v
__builtin_neon_vqtbl4_v
__builtin_neon_vqtbl4q_v
__builtin_neon_vqtbx1_v
__builtin_neon_vqtbx1q_v
__builtin_neon_vqtbx2_v
__builtin_neon_vqtbx2q_v
__builtin_neon_vqtbx3_v
__builtin_neon_vqtbx3q_v
__builtin_neon_vqtbx4_v
__builtin_neon_vqtbx4q_v
__builtin_neon_vraddhn_v
__builtin_neon_vrhadd_v
__builtin_neon_vrhaddq_v
__builtin_neon_vrshl_v
__builtin_neon_vrshlq_v
__builtin_neon_vrshrn_n_v
__builtin_neon_vrshr_n_v
__builtin_neon_vrshrq_n_v
__builtin_neon_vrsra_n_v
__builtin_neon_vrsraq_n_v
__builtin_neon_vrsubhn_v
__builtin_neon_vshl_v
__builtin_neon_vshlq_v
__builtin_neon_vshll_n_v
__builtin_neon_vshl_n_v
__builtin_neon_vshlq_n_v
__builtin_neon_vshrn_n_v
__builtin_neon_vshr_n_v
__builtin_neon_vshrq_n_v
__builtin_neon_vsra_n_v
__builtin_neon_vsraq_n_v
__builtin_neon_vstrq_p128
vv*LLLi
__builtin_neon_vsubhn_v
__builtin_neon_vtbl1_v
__builtin_neon_vtbl2_v
__builtin_neon_vtbl3_v
V8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbl4_v
V8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtbx1_v
__builtin_neon_vtbx2_v
__builtin_neon_vtbx3_v
__builtin_neon_vtbx4_v
V8ScV8ScV8ScV8ScV8ScV8ScV8Sci
__builtin_neon_vtrn_v
__builtin_neon_vtrnq_v
__builtin_neon_vuzp_v
__builtin_neon_vuzpq_v
__builtin_neon_vzip_v
__builtin_neon_vzipq_v
cortex-a53
cortex-a57
+neon
+crypto
__NetBSD__
__unix__
_POSIX_THREADS
apcs-gnu
arm1136j-s
aapcs-linux
__arm
__arm__
__ARMEL__
__ARM_ARCH_
__THUMB_INTERWORK__
aapcs-vfp
__ARM_EABI__
__ARM_PCS
__ARM_PCS_VFP
__SOFTFP__
__XSCALE__
__THUMBEL__
__thumb__
__thumb2__
__ARM_ARCH_EXT_IDIV__
__APCS_32__
__VFP_FP__
__ARM_VFPV2__
__ARM_VFPV3__
__ARM_VFPV4__
__ARM_FEATURE_CRC32
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8
arm8
arm810
strongarm
strongarm110
strongarm1100
strongarm1110
arm7tdmi
arm7tdmi-s
arm710t
arm720t
arm9
arm9tdmi
arm920
arm920t
arm922t
arm940t
ep9312
arm10tdmi
arm1020t
arm9e
arm946e-s
arm966e-s
arm968e-s
arm926ej-s
5TEJ
arm10e
arm1020e
arm1022e
iwmmxt
arm1176jz-s
arm1176jzf-s
arm1136jf-s
mpcorenovfp
mpcore
arm1156t2-s
arm1156t2f-s
cortex-a5
cortex-a8
cortex-a9-mp
cortex-a7
cortex-a9
cortex-a12
cortex-a15
krait
cortex-r4
cortex-r5
swift
cortex-m3
cortex-m4
cortex-m0
__builtin_arm_qadd
__builtin_arm_qsub
__builtin_arm_ssat
iiUi
__builtin_arm_usat
__builtin_arm_ldrexd
LLUiv*
__builtin_arm_strexd
iLLUiv*
__builtin_arm_get_fpscr
__builtin_arm_set_fpscr
__builtin_arm_vcvtr_f
__builtin_arm_vcvtr_d
__builtin_arm_mcr
vUiUiUiUiUiUi
__builtin_arm_mcr2
__builtin_arm_mrc
UiUiUiUiUiUi
__builtin_arm_mrc2
__builtin_arm_cdp
__builtin_arm_cdp2
__builtin_arm_mcrr
vUiUiUiUiUi
UiUiLLUi
__builtin_arm_sevl
__builtin_arm_dmb
__builtin_arm_dsb
apcs
vfp2
pj4b
vfp3
vfp4
hwdiv
hwdiv-arm
v8fp
fp-armv8
armv8a
armv8
thumbv8a
thumbv8
apcs-vfp
e-m:o-p:32:32-i1:8:32-i8:8:32-i16:16:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:o-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:e-p:32:32-f64:32:64-v64:32:64-v128:32:128-a:0:32-n32-S32
e-m:o-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:e-p:32:32-i1:8:32-i8:8:32-i16:16:32-i64:64-v128:64:128-a:0:32-n32-S64
e-m:o-p:32:32-i64:64-v128:64:128-n32-S64
e-m:e-p:32:32-i64:64-v128:64:128-n32-S64
+soft-float
+soft-float-abi
+vfp2
+vfp3
+vfp4
+fp-armv8
+hwdiv
+hwdiv-arm
+crc
+neonfp
-neonfp
softfloat
.mcount
_mcount
__mcount
__FreeBSD__
__FreeBSD_cc_version
__KPRINTF_ATTRIBUTE__
__STDC_MB_MIGHT_NEQ_WC__
__OpenBSD__
__Bitrig__
__rtems__
e-m:e-p:32:32-i64:64-v128:64:128-n32-S128
e-m:e-p:32:32-i64:64-n8:16:32-S128
e-m:e-p:32:32-i64:64-n8:16:32:64-S128
e-p:32:32-i64:64
__native_client__
e-m:e-p:16:16-i32:16:32-n8:16
MSP430
__MSP430__
_mips
__mips_hard_float
__mips_soft_float
__mips_single_float
__mips_fpr
_MIPS_FPSET
__mips16
__mips_micromips
__mips_nan2008
__mips_dsp_rev
__mips_dsp
__mips_dspr2
__mips_msa
_MIPS_SZPTR
_MIPS_SZINT
_MIPS_SZLONG
_MIPS_ARCH
_MIPS_ARCH_
__mips_o32
_ABIO32
_MIPS_SIM
__mips_eabi
MIPSEB
_MIPSEB
__builtin_mips_addu_qb
V4ScV4ScV4Sc
__builtin_mips_addu_s_qb
__builtin_mips_subu_qb
__builtin_mips_subu_s_qb
__builtin_mips_addq_ph
V2sV2sV2s
__builtin_mips_addq_s_ph
__builtin_mips_subq_ph
__builtin_mips_subq_s_ph
__builtin_mips_madd
__builtin_mips_maddu
LLiLLiUiUi
__builtin_mips_msub
__builtin_mips_msubu
__builtin_mips_addq_s_w
__builtin_mips_subq_s_w
__builtin_mips_addsc
__builtin_mips_addwc
__builtin_mips_modsub
__builtin_mips_raddu_w_qb
iV4Sc
__builtin_mips_absq_s_ph
V2sV2s
__builtin_mips_absq_s_w
__builtin_mips_precrq_qb_ph
V4ScV2sV2s
__builtin_mips_precrqu_s_qb_ph
__builtin_mips_precrq_ph_w
V2sii
__builtin_mips_precrq_rs_ph_w
__builtin_mips_preceq_w_phl
__builtin_mips_preceq_w_phr
__builtin_mips_precequ_ph_qbl
V2sV4Sc
__builtin_mips_precequ_ph_qbr
__builtin_mips_precequ_ph_qbla
__builtin_mips_precequ_ph_qbra
__builtin_mips_preceu_ph_qbl
__builtin_mips_preceu_ph_qbr
__builtin_mips_preceu_ph_qbla
__builtin_mips_preceu_ph_qbra
__builtin_mips_shll_qb
V4ScV4Sci
__builtin_mips_shrl_qb
__builtin_mips_shll_ph
V2sV2si
__builtin_mips_shll_s_ph
__builtin_mips_shra_ph
__builtin_mips_shra_r_ph
__builtin_mips_shll_s_w
__builtin_mips_shra_r_w
__builtin_mips_shilo
__builtin_mips_muleu_s_ph_qbl
V2sV4ScV2s
__builtin_mips_muleu_s_ph_qbr
__builtin_mips_mulq_rs_ph
__builtin_mips_muleq_s_w_phl
iV2sV2s
__builtin_mips_muleq_s_w_phr
__builtin_mips_mulsaq_s_w_ph
LLiLLiV2sV2s
__builtin_mips_maq_s_w_phl
__builtin_mips_maq_s_w_phr
__builtin_mips_maq_sa_w_phl
__builtin_mips_maq_sa_w_phr
__builtin_mips_mult
__builtin_mips_multu
LLiUiUi
__builtin_mips_dpau_h_qbl
LLiLLiV4ScV4Sc
__builtin_mips_dpau_h_qbr
__builtin_mips_dpsu_h_qbl
__builtin_mips_dpsu_h_qbr
__builtin_mips_dpaq_s_w_ph
__builtin_mips_dpsq_s_w_ph
__builtin_mips_dpaq_sa_l_w
__builtin_mips_dpsq_sa_l_w
__builtin_mips_cmpu_eq_qb
vV4ScV4Sc
__builtin_mips_cmpu_lt_qb
__builtin_mips_cmpu_le_qb
__builtin_mips_cmpgu_eq_qb
iV4ScV4Sc
__builtin_mips_cmpgu_lt_qb
__builtin_mips_cmpgu_le_qb
__builtin_mips_cmp_eq_ph
vV2sV2s
__builtin_mips_cmp_lt_ph
__builtin_mips_cmp_le_ph
__builtin_mips_extr_s_h
__builtin_mips_extr_w
__builtin_mips_extr_rs_w
__builtin_mips_extr_r_w
__builtin_mips_extp
__builtin_mips_extpdp
__builtin_mips_wrdsp
viIi
__builtin_mips_rddsp
__builtin_mips_insv
__builtin_mips_bitrev
__builtin_mips_packrl_ph
__builtin_mips_repl_qb
V4Sci
__builtin_mips_repl_ph
__builtin_mips_pick_qb
__builtin_mips_pick_ph
__builtin_mips_mthlip
__builtin_mips_bposge32
__builtin_mips_lbux
iv*i
__builtin_mips_lhx
__builtin_mips_lwx
__builtin_mips_absq_s_qb
V4ScV4Sc
__builtin_mips_addqh_ph
__builtin_mips_addqh_r_ph
__builtin_mips_addqh_w
__builtin_mips_addqh_r_w
__builtin_mips_addu_ph
__builtin_mips_addu_s_ph
__builtin_mips_adduh_qb
__builtin_mips_adduh_r_qb
__builtin_mips_append
iiiIi
__builtin_mips_balign
__builtin_mips_cmpgdu_eq_qb
__builtin_mips_cmpgdu_lt_qb
__builtin_mips_cmpgdu_le_qb
__builtin_mips_dpa_w_ph
__builtin_mips_dps_w_ph
__builtin_mips_dpaqx_s_w_ph
__builtin_mips_dpaqx_sa_w_ph
__builtin_mips_dpax_w_ph
__builtin_mips_dpsx_w_ph
__builtin_mips_dpsqx_s_w_ph
__builtin_mips_dpsqx_sa_w_ph
__builtin_mips_mul_ph
__builtin_mips_mul_s_ph
__builtin_mips_mulq_rs_w
__builtin_mips_mulq_s_ph
__builtin_mips_mulq_s_w
__builtin_mips_mulsa_w_ph
__builtin_mips_precr_qb_ph
__builtin_mips_precr_sra_ph_w
V2siiIi
__builtin_mips_prepend
__builtin_mips_shra_qb
__builtin_mips_shra_r_qb
__builtin_mips_shrl_ph
__builtin_mips_subqh_ph
__builtin_mips_subqh_r_ph
__builtin_mips_subqh_w
__builtin_mips_subqh_r_w
__builtin_mips_subu_ph
__builtin_mips_subu_s_ph
__builtin_mips_subuh_qb
__builtin_mips_subuh_r_qb
__builtin_msa_add_a_b
V16ScV16ScV16Sc
__builtin_msa_add_a_h
V8SsV8SsV8Ss
__builtin_msa_add_a_w
V4SiV4SiV4Si
__builtin_msa_add_a_d
V2SLLiV2SLLiV2SLLi
__builtin_msa_adds_a_b
__builtin_msa_adds_a_h
__builtin_msa_adds_a_w
__builtin_msa_adds_a_d
__builtin_msa_adds_s_b
__builtin_msa_adds_s_h
__builtin_msa_adds_s_w
__builtin_msa_adds_s_d
__builtin_msa_adds_u_b
V16UcV16UcV16Uc
__builtin_msa_adds_u_h
V8UsV8UsV8Us
__builtin_msa_adds_u_w
V4UiV4UiV4Ui
__builtin_msa_adds_u_d
V2ULLiV2ULLiV2ULLi
__builtin_msa_addv_b
__builtin_msa_addv_h
__builtin_msa_addv_w
__builtin_msa_addv_d
__builtin_msa_addvi_b
V16cV16cIUi
__builtin_msa_addvi_h
V8sV8sIUi
__builtin_msa_addvi_w
V4iV4iIUi
__builtin_msa_addvi_d
V2LLiV2LLiIUi
__builtin_msa_and_v
__builtin_msa_andi_b
V16UcV16UcIUi
__builtin_msa_asub_s_b
__builtin_msa_asub_s_h
__builtin_msa_asub_s_w
__builtin_msa_asub_s_d
__builtin_msa_asub_u_b
__builtin_msa_asub_u_h
__builtin_msa_asub_u_w
__builtin_msa_asub_u_d
__builtin_msa_ave_s_b
__builtin_msa_ave_s_h
__builtin_msa_ave_s_w
__builtin_msa_ave_s_d
__builtin_msa_ave_u_b
__builtin_msa_ave_u_h
__builtin_msa_ave_u_w
__builtin_msa_ave_u_d
__builtin_msa_aver_s_b
__builtin_msa_aver_s_h
__builtin_msa_aver_s_w
__builtin_msa_aver_s_d
__builtin_msa_aver_u_b
__builtin_msa_aver_u_h
__builtin_msa_aver_u_w
__builtin_msa_aver_u_d
__builtin_msa_bclr_b
__builtin_msa_bclr_h
__builtin_msa_bclr_w
__builtin_msa_bclr_d
__builtin_msa_bclri_b
__builtin_msa_bclri_h
V8UsV8UsIUi
__builtin_msa_bclri_w
V4UiV4UiIUi
__builtin_msa_bclri_d
V2ULLiV2ULLiIUi
__builtin_msa_binsl_b
V16UcV16UcV16UcV16Uc
__builtin_msa_binsl_h
V8UsV8UsV8UsV8Us
__builtin_msa_binsl_w
V4UiV4UiV4UiV4Ui
__builtin_msa_binsl_d
V2ULLiV2ULLiV2ULLiV2ULLi
__builtin_msa_binsli_b
V16UcV16UcV16UcIUi
__builtin_msa_binsli_h
V8UsV8UsV8UsIUi
__builtin_msa_binsli_w
V4UiV4UiV4UiIUi
__builtin_msa_binsli_d
V2ULLiV2ULLiV2ULLiIUi
__builtin_msa_binsr_b
__builtin_msa_binsr_h
__builtin_msa_binsr_w
__builtin_msa_binsr_d
__builtin_msa_binsri_b
__builtin_msa_binsri_h
__builtin_msa_binsri_w
__builtin_msa_binsri_d
__builtin_msa_bmnz_v
__builtin_msa_bmnzi_b
__builtin_msa_bmz_v
__builtin_msa_bmzi_b
__builtin_msa_bneg_b
__builtin_msa_bneg_h
__builtin_msa_bneg_w
__builtin_msa_bneg_d
__builtin_msa_bnegi_b
__builtin_msa_bnegi_h
__builtin_msa_bnegi_w
__builtin_msa_bnegi_d
__builtin_msa_bnz_b
iV16Uc
__builtin_msa_bnz_h
iV8Us
__builtin_msa_bnz_w
iV4Ui
__builtin_msa_bnz_d
iV2ULLi
__builtin_msa_bnz_v
__builtin_msa_bsel_v
__builtin_msa_bseli_b
__builtin_msa_bset_b
__builtin_msa_bset_h
__builtin_msa_bset_w
__builtin_msa_bset_d
__builtin_msa_bseti_b
__builtin_msa_bseti_h
__builtin_msa_bseti_w
__builtin_msa_bseti_d
__builtin_msa_bz_b
__builtin_msa_bz_h
__builtin_msa_bz_w
__builtin_msa_bz_d
__builtin_msa_bz_v
__builtin_msa_ceq_b
__builtin_msa_ceq_h
__builtin_msa_ceq_w
__builtin_msa_ceq_d
__builtin_msa_ceqi_b
V16ScV16ScISi
__builtin_msa_ceqi_h
V8SsV8SsISi
__builtin_msa_ceqi_w
V4SiV4SiISi
__builtin_msa_ceqi_d
V2SLLiV2SLLiISi
__builtin_msa_cfcmsa
__builtin_msa_cle_s_b
__builtin_msa_cle_s_h
__builtin_msa_cle_s_w
__builtin_msa_cle_s_d
__builtin_msa_cle_u_b
V16ScV16UcV16Uc
__builtin_msa_cle_u_h
V8SsV8UsV8Us
__builtin_msa_cle_u_w
V4SiV4UiV4Ui
__builtin_msa_cle_u_d
V2SLLiV2ULLiV2ULLi
__builtin_msa_clei_s_b
__builtin_msa_clei_s_h
__builtin_msa_clei_s_w
__builtin_msa_clei_s_d
__builtin_msa_clei_u_b
V16ScV16UcIUi
__builtin_msa_clei_u_h
V8SsV8UsIUi
__builtin_msa_clei_u_w
V4SiV4UiIUi
__builtin_msa_clei_u_d
V2SLLiV2ULLiIUi
__builtin_msa_clt_s_b
__builtin_msa_clt_s_h
__builtin_msa_clt_s_w
__builtin_msa_clt_s_d
__builtin_msa_clt_u_b
__builtin_msa_clt_u_h
__builtin_msa_clt_u_w
__builtin_msa_clt_u_d
__builtin_msa_clti_s_b
__builtin_msa_clti_s_h
__builtin_msa_clti_s_w
__builtin_msa_clti_s_d
__builtin_msa_clti_u_b
__builtin_msa_clti_u_h
__builtin_msa_clti_u_w
__builtin_msa_clti_u_d
__builtin_msa_copy_s_b
iV16ScIUi
__builtin_msa_copy_s_h
iV8SsIUi
__builtin_msa_copy_s_w
iV4SiIUi
__builtin_msa_copy_s_d
LLiV2SLLiIUi
__builtin_msa_copy_u_b
iV16UcIUi
__builtin_msa_copy_u_h
iV8UsIUi
__builtin_msa_copy_u_w
iV4UiIUi
__builtin_msa_copy_u_d
LLiV2ULLiIUi
__builtin_msa_ctcmsa
vIii
__builtin_msa_div_s_b
__builtin_msa_div_s_h
__builtin_msa_div_s_w
__builtin_msa_div_s_d
__builtin_msa_div_u_b
__builtin_msa_div_u_h
__builtin_msa_div_u_w
__builtin_msa_div_u_d
__builtin_msa_dotp_s_h
V8SsV16ScV16Sc
__builtin_msa_dotp_s_w
V4SiV8SsV8Ss
__builtin_msa_dotp_s_d
V2SLLiV4SiV4Si
__builtin_msa_dotp_u_h
V8UsV16UcV16Uc
__builtin_msa_dotp_u_w
V4UiV8UsV8Us
__builtin_msa_dotp_u_d
V2ULLiV4UiV4Ui
__builtin_msa_dpadd_s_h
V8SsV8SsV16ScV16Sc
__builtin_msa_dpadd_s_w
V4SiV4SiV8SsV8Ss
__builtin_msa_dpadd_s_d
V2SLLiV2SLLiV4SiV4Si
__builtin_msa_dpadd_u_h
V8UsV8UsV16UcV16Uc
__builtin_msa_dpadd_u_w
V4UiV4UiV8UsV8Us
__builtin_msa_dpadd_u_d
V2ULLiV2ULLiV4UiV4Ui
__builtin_msa_dpsub_s_h
__builtin_msa_dpsub_s_w
__builtin_msa_dpsub_s_d
__builtin_msa_dpsub_u_h
__builtin_msa_dpsub_u_w
__builtin_msa_dpsub_u_d
__builtin_msa_fadd_w
__builtin_msa_fadd_d
__builtin_msa_fcaf_w
V4iV4fV4f
__builtin_msa_fcaf_d
V2LLiV2dV2d
__builtin_msa_fceq_w
__builtin_msa_fceq_d
__builtin_msa_fclass_w
__builtin_msa_fclass_d
__builtin_msa_fcle_w
__builtin_msa_fcle_d
__builtin_msa_fclt_w
__builtin_msa_fclt_d
__builtin_msa_fcne_w
__builtin_msa_fcne_d
__builtin_msa_fcor_w
__builtin_msa_fcor_d
__builtin_msa_fcueq_w
__builtin_msa_fcueq_d
__builtin_msa_fcule_w
__builtin_msa_fcule_d
__builtin_msa_fcult_w
__builtin_msa_fcult_d
__builtin_msa_fcun_w
__builtin_msa_fcun_d
__builtin_msa_fcune_w
__builtin_msa_fcune_d
__builtin_msa_fdiv_w
__builtin_msa_fdiv_d
__builtin_msa_fexdo_h
V8hV4fV4f
__builtin_msa_fexdo_w
V4fV2dV2d
__builtin_msa_fexp2_w
__builtin_msa_fexp2_d
__builtin_msa_fexupl_w
V4fV8h
__builtin_msa_fexupl_d
__builtin_msa_fexupr_w
__builtin_msa_fexupr_d
__builtin_msa_ffint_s_w
V4fV4Si
__builtin_msa_ffint_s_d
V2dV2SLLi
__builtin_msa_ffint_u_w
V4fV4Ui
__builtin_msa_ffint_u_d
V2dV2ULLi
__builtin_msa_ffql_w
V4fV8Ss
__builtin_msa_ffql_d
V2dV4Si
__builtin_msa_ffqr_w
__builtin_msa_ffqr_d
__builtin_msa_fill_b
V16Sci
__builtin_msa_fill_h
V8Ssi
__builtin_msa_fill_w
V4Sii
__builtin_msa_fill_d
V2SLLiLLi
__builtin_msa_flog2_w
__builtin_msa_flog2_d
__builtin_msa_fmadd_w
__builtin_msa_fmadd_d
__builtin_msa_fmax_w
__builtin_msa_fmax_d
__builtin_msa_fmax_a_w
__builtin_msa_fmax_a_d
__builtin_msa_fmin_w
__builtin_msa_fmin_d
__builtin_msa_fmin_a_w
__builtin_msa_fmin_a_d
__builtin_msa_fmsub_w
__builtin_msa_fmsub_d
__builtin_msa_fmul_w
__builtin_msa_fmul_d
__builtin_msa_frint_w
__builtin_msa_frint_d
__builtin_msa_frcp_w
__builtin_msa_frcp_d
__builtin_msa_frsqrt_w
__builtin_msa_frsqrt_d
__builtin_msa_fsaf_w
__builtin_msa_fsaf_d
__builtin_msa_fseq_w
__builtin_msa_fseq_d
__builtin_msa_fsle_w
__builtin_msa_fsle_d
__builtin_msa_fslt_w
__builtin_msa_fslt_d
__builtin_msa_fsne_w
__builtin_msa_fsne_d
__builtin_msa_fsor_w
__builtin_msa_fsor_d
__builtin_msa_fsqrt_w
__builtin_msa_fsqrt_d
__builtin_msa_fsub_w
__builtin_msa_fsub_d
__builtin_msa_fsueq_w
__builtin_msa_fsueq_d
__builtin_msa_fsule_w
__builtin_msa_fsule_d
__builtin_msa_fsult_w
__builtin_msa_fsult_d
__builtin_msa_fsun_w
__builtin_msa_fsun_d
__builtin_msa_fsune_w
__builtin_msa_fsune_d
__builtin_msa_ftint_s_w
V4SiV4f
__builtin_msa_ftint_s_d
V2SLLiV2d
__builtin_msa_ftint_u_w
V4UiV4f
__builtin_msa_ftint_u_d
V2ULLiV2d
__builtin_msa_ftq_h
V4UiV4fV4f
__builtin_msa_ftq_w
V2ULLiV2dV2d
__builtin_msa_ftrunc_s_w
__builtin_msa_ftrunc_s_d
__builtin_msa_ftrunc_u_w
__builtin_msa_ftrunc_u_d
__builtin_msa_hadd_s_h
__builtin_msa_hadd_s_w
__builtin_msa_hadd_s_d
__builtin_msa_hadd_u_h
__builtin_msa_hadd_u_w
__builtin_msa_hadd_u_d
__builtin_msa_hsub_s_h
__builtin_msa_hsub_s_w
__builtin_msa_hsub_s_d
__builtin_msa_hsub_u_h
__builtin_msa_hsub_u_w
__builtin_msa_hsub_u_d
__builtin_msa_ilvev_b
__builtin_msa_ilvev_h
__builtin_msa_ilvev_w
__builtin_msa_ilvev_d
__builtin_msa_ilvl_b
__builtin_msa_ilvl_h
__builtin_msa_ilvl_w
__builtin_msa_ilvl_d
__builtin_msa_ilvod_b
__builtin_msa_ilvod_h
__builtin_msa_ilvod_w
__builtin_msa_ilvod_d
__builtin_msa_ilvr_b
__builtin_msa_ilvr_h
__builtin_msa_ilvr_w
__builtin_msa_ilvr_d
__builtin_msa_insert_b
V16ScV16ScIUii
__builtin_msa_insert_h
V8SsV8SsIUii
__builtin_msa_insert_w
V4SiV4SiIUii
__builtin_msa_insert_d
V2SLLiV2SLLiIUiLLi
__builtin_msa_insve_b
V16ScV16ScIUiV16Sc
__builtin_msa_insve_h
V8SsV8SsIUiV8Ss
__builtin_msa_insve_w
V4SiV4SiIUiV4Si
__builtin_msa_insve_d
V2SLLiV2SLLiIUiV2SLLi
__builtin_msa_ld_b
V16Scv*Ii
__builtin_msa_ld_h
V8Ssv*Ii
__builtin_msa_ld_w
V4Siv*Ii
__builtin_msa_ld_d
V2SLLiv*Ii
__builtin_msa_ldi_b
V16cIi
__builtin_msa_ldi_h
V8sIi
__builtin_msa_ldi_w
V4iIi
__builtin_msa_ldi_d
V2LLiIi
__builtin_msa_madd_q_h
V8SsV8SsV8SsV8Ss
__builtin_msa_madd_q_w
V4SiV4SiV4SiV4Si
__builtin_msa_maddr_q_h
__builtin_msa_maddr_q_w
__builtin_msa_maddv_b
V16ScV16ScV16ScV16Sc
__builtin_msa_maddv_h
__builtin_msa_maddv_w
__builtin_msa_maddv_d
V2SLLiV2SLLiV2SLLiV2SLLi
__builtin_msa_max_a_b
__builtin_msa_max_a_h
__builtin_msa_max_a_w
__builtin_msa_max_a_d
__builtin_msa_max_s_b
__builtin_msa_max_s_h
__builtin_msa_max_s_w
__builtin_msa_max_s_d
__builtin_msa_max_u_b
__builtin_msa_max_u_h
__builtin_msa_max_u_w
__builtin_msa_max_u_d
__builtin_msa_maxi_s_b
V16ScV16ScIi
__builtin_msa_maxi_s_h
V8SsV8SsIi
__builtin_msa_maxi_s_w
V4SiV4SiIi
__builtin_msa_maxi_s_d
V2SLLiV2SLLiIi
__builtin_msa_maxi_u_b
V16UcV16UcIi
__builtin_msa_maxi_u_h
V8UsV8UsIi
__builtin_msa_maxi_u_w
V4UiV4UiIi
__builtin_msa_maxi_u_d
V2ULLiV2ULLiIi
__builtin_msa_min_a_b
__builtin_msa_min_a_h
__builtin_msa_min_a_w
__builtin_msa_min_a_d
__builtin_msa_min_s_b
__builtin_msa_min_s_h
__builtin_msa_min_s_w
__builtin_msa_min_s_d
__builtin_msa_min_u_b
__builtin_msa_min_u_h
__builtin_msa_min_u_w
__builtin_msa_min_u_d
__builtin_msa_mini_s_b
__builtin_msa_mini_s_h
__builtin_msa_mini_s_w
__builtin_msa_mini_s_d
__builtin_msa_mini_u_b
__builtin_msa_mini_u_h
__builtin_msa_mini_u_w
__builtin_msa_mini_u_d
__builtin_msa_mod_s_b
__builtin_msa_mod_s_h
__builtin_msa_mod_s_w
__builtin_msa_mod_s_d
__builtin_msa_mod_u_b
__builtin_msa_mod_u_h
__builtin_msa_mod_u_w
__builtin_msa_mod_u_d
__builtin_msa_move_v
V16ScV16Sc
__builtin_msa_msub_q_h
__builtin_msa_msub_q_w
__builtin_msa_msubr_q_h
__builtin_msa_msubr_q_w
__builtin_msa_msubv_b
__builtin_msa_msubv_h
__builtin_msa_msubv_w
__builtin_msa_msubv_d
__builtin_msa_mul_q_h
__builtin_msa_mul_q_w
__builtin_msa_mulr_q_h
__builtin_msa_mulr_q_w
__builtin_msa_mulv_b
__builtin_msa_mulv_h
__builtin_msa_mulv_w
__builtin_msa_mulv_d
__builtin_msa_nloc_b
__builtin_msa_nloc_h
V8SsV8Ss
__builtin_msa_nloc_w
V4SiV4Si
__builtin_msa_nloc_d
V2SLLiV2SLLi
__builtin_msa_nlzc_b
__builtin_msa_nlzc_h
__builtin_msa_nlzc_w
__builtin_msa_nlzc_d
__builtin_msa_nor_v
__builtin_msa_nori_b
V16UcV16cIUi
__builtin_msa_or_v
__builtin_msa_ori_b
__builtin_msa_pckev_b
__builtin_msa_pckev_h
__builtin_msa_pckev_w
__builtin_msa_pckev_d
__builtin_msa_pckod_b
__builtin_msa_pckod_h
__builtin_msa_pckod_w
__builtin_msa_pckod_d
__builtin_msa_pcnt_b
__builtin_msa_pcnt_h
__builtin_msa_pcnt_w
__builtin_msa_pcnt_d
__builtin_msa_sat_s_b
V16ScV16ScIUi
__builtin_msa_sat_s_h
V8SsV8SsIUi
__builtin_msa_sat_s_w
V4SiV4SiIUi
__builtin_msa_sat_s_d
V2SLLiV2SLLiIUi
__builtin_msa_sat_u_b
__builtin_msa_sat_u_h
__builtin_msa_sat_u_w
__builtin_msa_sat_u_d
__builtin_msa_shf_b
__builtin_msa_shf_h
__builtin_msa_shf_w
__builtin_msa_sld_b
V16cV16cV16cUi
__builtin_msa_sld_h
V8sV8sV8sUi
__builtin_msa_sld_w
V4iV4iV4iUi
__builtin_msa_sld_d
V2LLiV2LLiV2LLiUi
__builtin_msa_sldi_b
V16cV16cV16cIUi
__builtin_msa_sldi_h
V8sV8sV8sIUi
__builtin_msa_sldi_w
V4iV4iV4iIUi
__builtin_msa_sldi_d
V2LLiV2LLiV2LLiIUi
__builtin_msa_sll_b
__builtin_msa_sll_h
__builtin_msa_sll_w
__builtin_msa_sll_d
__builtin_msa_slli_b
__builtin_msa_slli_h
__builtin_msa_slli_w
__builtin_msa_slli_d
__builtin_msa_splat_b
V16cV16cUi
__builtin_msa_splat_h
V8sV8sUi
__builtin_msa_splat_w
V4iV4iUi
__builtin_msa_splat_d
V2LLiV2LLiUi
__builtin_msa_splati_b
__builtin_msa_splati_h
__builtin_msa_splati_w
__builtin_msa_splati_d
__builtin_msa_sra_b
__builtin_msa_sra_h
__builtin_msa_sra_w
__builtin_msa_sra_d
__builtin_msa_srai_b
__builtin_msa_srai_h
__builtin_msa_srai_w
__builtin_msa_srai_d
__builtin_msa_srar_b
__builtin_msa_srar_h
__builtin_msa_srar_w
__builtin_msa_srar_d
__builtin_msa_srari_b
__builtin_msa_srari_h
__builtin_msa_srari_w
__builtin_msa_srari_d
__builtin_msa_srl_b
__builtin_msa_srl_h
__builtin_msa_srl_w
__builtin_msa_srl_d
__builtin_msa_srli_b
__builtin_msa_srli_h
__builtin_msa_srli_w
__builtin_msa_srli_d
__builtin_msa_srlr_b
__builtin_msa_srlr_h
__builtin_msa_srlr_w
__builtin_msa_srlr_d
__builtin_msa_srlri_b
__builtin_msa_srlri_h
__builtin_msa_srlri_w
__builtin_msa_srlri_d
__builtin_msa_st_b
vV16Scv*Ii
__builtin_msa_st_h
vV8Ssv*Ii
__builtin_msa_st_w
vV4Siv*Ii
__builtin_msa_st_d
vV2SLLiv*Ii
__builtin_msa_subs_s_b
__builtin_msa_subs_s_h
__builtin_msa_subs_s_w
__builtin_msa_subs_s_d
__builtin_msa_subs_u_b
__builtin_msa_subs_u_h
__builtin_msa_subs_u_w
__builtin_msa_subs_u_d
__builtin_msa_subsus_u_b
V16UcV16UcV16Sc
__builtin_msa_subsus_u_h
V8UsV8UsV8Ss
__builtin_msa_subsus_u_w
V4UiV4UiV4Si
__builtin_msa_subsus_u_d
V2ULLiV2ULLiV2SLLi
__builtin_msa_subsuu_s_b
__builtin_msa_subsuu_s_h
__builtin_msa_subsuu_s_w
__builtin_msa_subsuu_s_d
__builtin_msa_subv_b
__builtin_msa_subv_h
__builtin_msa_subv_w
__builtin_msa_subv_d
__builtin_msa_subvi_b
__builtin_msa_subvi_h
__builtin_msa_subvi_w
__builtin_msa_subvi_d
__builtin_msa_vshf_b
__builtin_msa_vshf_h
__builtin_msa_vshf_w
__builtin_msa_vshf_d
__builtin_msa_xor_v
__builtin_msa_xori_b
+single-float
+mips16
+micromips
+dsp
+dspr2
+msa
+fp64
-fp64
+nan2008
fp64
$f10
$f11
$f12
$f13
$f14
$f15
$f16
$f17
$f18
$f19
$f20
$f21
$f22
$f23
$f24
$f25
$f26
$f27
$f28
$f29
$f30
$f31
$fcc0
$fcc1
$fcc2
$fcc3
$fcc4
$fcc5
$fcc6
$fcc7
$w10
$w11
$w12
$w13
$w14
$w15
$w16
$w17
$w18
$w19
$w20
$w21
$w22
$w23
$w24
$w25
$w26
$w27
$w28
$w29
$w30
$w31
$msair
$msacsr
$msaaccess
$msasave
$msamodify
$msarequest
$msamap
$msaunmap
E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
MIPSEL
_MIPSEL
e-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64
__mips64
__mips64__
__mips_n32
_ABIN32
__mips_n64
_ABI64
E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
E-m:m-i8:8:32-i16:16:32-i64:64-n32:64-S128
e-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32:64-S128
e-m:m-i8:8:32-i16:16:32-i64:64-n32:64-S128
pnacl
__le32__
__pnacl__
E-m:o-p:32:32-f64:32:64-n32
E-m:e-p:32:32-i64:64-n32
__ppc__
__PPC__
_ARCH_PPC
__powerpc__
__POWERPC__
_ARCH_PPC64
__powerpc64__
__ppc64__
__PPC64__
_LITTLE_ENDIAN
_BIG_ENDIAN
__BIG_ENDIAN__
__NATURAL_ALIGNMENT__
__LONG_DOUBLE_128__
__VEC__
10206
__ALTIVEC__
603e
603ev
604e
7400
7450
pwr3
pwr4
pwr5
pwr5x
pwr6
pwr6x
pwr7
power3
power4
power5
power5x
power6
power6x
power7
_ARCH_
_ARCH_PPCGR
_ARCH_PPCSQ
_ARCH_440
_ARCH_603
_ARCH_604
_ARCH_PWR4
_ARCH_PWR5
_ARCH_PWR5X
_ARCH_PWR6
_ARCH_PWR6X
_ARCH_PWR7
_ARCH_A2
_ARCH_A2Q
_ARCH_QP
__bg__
__THW_BLUEGENE__
__bgq__
__TOS_BGQ__
__VSX__
__builtin_altivec_vaddcuw
__builtin_altivec_vaddsbs
__builtin_altivec_vaddubs
__builtin_altivec_vaddshs
__builtin_altivec_vadduhs
__builtin_altivec_vaddsws
__builtin_altivec_vadduws
__builtin_altivec_vsubsbs
__builtin_altivec_vsububs
__builtin_altivec_vsubshs
__builtin_altivec_vsubuhs
__builtin_altivec_vsubsws
__builtin_altivec_vsubuws
__builtin_altivec_vavgsb
__builtin_altivec_vavgub
__builtin_altivec_vavgsh
__builtin_altivec_vavguh
__builtin_altivec_vavgsw
__builtin_altivec_vavguw
__builtin_altivec_vrfip
__builtin_altivec_vcfsx
V4fV4ii
__builtin_altivec_vcfux
__builtin_altivec_vctsxs
V4SiV4fi
__builtin_altivec_vctuxs
V4UiV4fi
__builtin_altivec_dss
__builtin_altivec_dssall
__builtin_altivec_dst
vvC*iUi
__builtin_altivec_dstt
__builtin_altivec_dstst
__builtin_altivec_dststt
__builtin_altivec_vexptefp
__builtin_altivec_vrfim
__builtin_altivec_lvx
V4iivC*
__builtin_altivec_lvxl
__builtin_altivec_lvebx
V16civC*
__builtin_altivec_lvehx
V8sivC*
__builtin_altivec_lvewx
__builtin_altivec_vlogefp
__builtin_altivec_lvsl
V16cUcvC*
__builtin_altivec_lvsr
__builtin_altivec_vmaddfp
__builtin_altivec_vmhaddshs
__builtin_altivec_vmhraddshs
__builtin_altivec_vmsumubm
V4UiV16UcV16UcV4Ui
__builtin_altivec_vmsummbm
V4SiV16ScV16UcV4Si
__builtin_altivec_vmsumuhm
V4UiV8UsV8UsV4Ui
__builtin_altivec_vmsumshm
V4SiV8SsV8SsV4Si
__builtin_altivec_vmsumuhs
__builtin_altivec_vmsumshs
__builtin_altivec_vmuleub
__builtin_altivec_vmulesb
__builtin_altivec_vmuleuh
__builtin_altivec_vmulesh
__builtin_altivec_vmuloub
__builtin_altivec_vmulosb
__builtin_altivec_vmulouh
__builtin_altivec_vmulosh
__builtin_altivec_vnmsubfp
__builtin_altivec_vpkpx
V8sV4UiV4Ui
__builtin_altivec_vpkuhus
V16UcV8UsV8Us
__builtin_altivec_vpkshss
V16ScV8SsV8Ss
__builtin_altivec_vpkuwus
V8UsV4UiV4Ui
__builtin_altivec_vpkswss
V8SsV4SiV4Si
__builtin_altivec_vpkshus
V16UcV8SsV8Ss
__builtin_altivec_vpkswus
V8UsV4SiV4Si
__builtin_altivec_vperm_4si
V4iV4iV4iV16Uc
__builtin_altivec_stvx
vV4iiv*
__builtin_altivec_stvxl
__builtin_altivec_stvebx
vV16civ*
__builtin_altivec_stvehx
vV8siv*
__builtin_altivec_stvewx
__builtin_altivec_vcmpbfp
__builtin_altivec_vcmpgefp
__builtin_altivec_vcmpequb
__builtin_altivec_vcmpequh
__builtin_altivec_vcmpequw
__builtin_altivec_vcmpeqfp
__builtin_altivec_vcmpgtsb
V16cV16ScV16Sc
__builtin_altivec_vcmpgtub
V16cV16UcV16Uc
__builtin_altivec_vcmpgtsh
V8sV8SsV8Ss
__builtin_altivec_vcmpgtuh
V8sV8UsV8Us
__builtin_altivec_vcmpgtsw
V4iV4SiV4Si
__builtin_altivec_vcmpgtuw
V4iV4UiV4Ui
__builtin_altivec_vcmpgtfp
__builtin_altivec_vmaxsb
__builtin_altivec_vmaxub
__builtin_altivec_vmaxsh
__builtin_altivec_vmaxuh
__builtin_altivec_vmaxsw
__builtin_altivec_vmaxuw
__builtin_altivec_vmaxfp
__builtin_altivec_mfvscr
V8Us
__builtin_altivec_vminsb
__builtin_altivec_vminub
__builtin_altivec_vminsh
__builtin_altivec_vminuh
__builtin_altivec_vminsw
__builtin_altivec_vminuw
__builtin_altivec_vminfp
__builtin_altivec_mtvscr
vV4i
__builtin_altivec_vrefp
__builtin_altivec_vrlb
V16cV16cV16Uc
__builtin_altivec_vrlh
V8sV8sV8Us
__builtin_altivec_vrlw
V4iV4iV4Ui
__builtin_altivec_vsel_4si
V4iV4iV4iV4Ui
__builtin_altivec_vsl
__builtin_altivec_vslo
__builtin_altivec_vsrab
__builtin_altivec_vsrah
__builtin_altivec_vsraw
__builtin_altivec_vsr
__builtin_altivec_vsro
__builtin_altivec_vrfin
__builtin_altivec_vrsqrtefp
__builtin_altivec_vsubcuw
__builtin_altivec_vsum4sbs
V4SiV16ScV4Si
__builtin_altivec_vsum4ubs
V4UiV16UcV4Ui
__builtin_altivec_vsum4shs
V4SiV8SsV4Si
__builtin_altivec_vsum2sws
__builtin_altivec_vsumsws
__builtin_altivec_vrfiz
__builtin_altivec_vupkhsb
__builtin_altivec_vupkhpx
V4UiV8s
__builtin_altivec_vupkhsh
__builtin_altivec_vupklsb
__builtin_altivec_vupklpx
__builtin_altivec_vupklsh
__builtin_altivec_vcmpbfp_p
iiV4fV4f
__builtin_altivec_vcmpgefp_p
__builtin_altivec_vcmpequb_p
iiV16cV16c
__builtin_altivec_vcmpequh_p
iiV8sV8s
__builtin_altivec_vcmpequw_p
iiV4iV4i
__builtin_altivec_vcmpeqfp_p
__builtin_altivec_vcmpgtsb_p
iiV16ScV16Sc
__builtin_altivec_vcmpgtub_p
iiV16UcV16Uc
__builtin_altivec_vcmpgtsh_p
iiV8SsV8Ss
__builtin_altivec_vcmpgtuh_p
iiV8UsV8Us
__builtin_altivec_vcmpgtsw_p
iiV4SiV4Si
__builtin_altivec_vcmpgtuw_p
iiV4UiV4Ui
__builtin_altivec_vcmpgtfp_p
altivec
e500mc
e5500
vrsave
spe_acc
spefscr
fr10
fr11
fr12
fr13
fr14
fr15
fr16
fr17
fr18
fr19
fr20
fr21
fr22
fr23
fr24
fr25
fr26
fr27
fr28
fr29
fr30
fr31
E-m:o-i64:64-n32:64
E-m:e-i64:64-n32:64
E-m:e-p:32:32-i64:64-n32:64
__PPU__
__CELLOS_LV2__
__LP32__
e-p:32:32-i64:64-v16:16-v32:32-n16:32:64
__NVPTX__
__builtin_ptx_read_tid_x
__builtin_ptx_read_tid_y
__builtin_ptx_read_tid_z
__builtin_ptx_read_tid_w
__builtin_ptx_read_ntid_x
__builtin_ptx_read_ntid_y
__builtin_ptx_read_ntid_z
__builtin_ptx_read_ntid_w
__builtin_ptx_read_ctaid_x
__builtin_ptx_read_ctaid_y
__builtin_ptx_read_ctaid_z
__builtin_ptx_read_ctaid_w
__builtin_ptx_read_nctaid_x
__builtin_ptx_read_nctaid_y
__builtin_ptx_read_nctaid_z
__builtin_ptx_read_nctaid_w
__builtin_ptx_read_laneid
__builtin_ptx_read_warpid
__builtin_ptx_read_nwarpid
__builtin_ptx_read_smid
__builtin_ptx_read_nsmid
__builtin_ptx_read_gridid
__builtin_ptx_read_lanemask_eq
__builtin_ptx_read_lanemask_le
__builtin_ptx_read_lanemask_lt
__builtin_ptx_read_lanemask_ge
__builtin_ptx_read_lanemask_gt
__builtin_ptx_read_clock
__builtin_ptx_read_clock64
__builtin_ptx_read_pm0
__builtin_ptx_read_pm1
__builtin_ptx_read_pm2
__builtin_ptx_read_pm3
__builtin_ptx_bar_sync
__nvvm_clz_i
__nvvm_clz_ll
__nvvm_popc_i
__nvvm_popc_ll
__nvvm_prmt
__nvvm_min_i
__nvvm_min_ui
__nvvm_min_ll
__nvvm_min_ull
__nvvm_max_i
__nvvm_max_ui
__nvvm_max_ll
__nvvm_max_ull
__nvvm_fmax_ftz_f
__nvvm_fmax_f
__nvvm_fmin_ftz_f
__nvvm_fmin_f
__nvvm_fmax_d
__nvvm_fmin_d
__nvvm_mulhi_i
__nvvm_mulhi_ui
__nvvm_mulhi_ll
__nvvm_mulhi_ull
__nvvm_mul_rn_ftz_f
__nvvm_mul_rn_f
__nvvm_mul_rz_ftz_f
__nvvm_mul_rz_f
__nvvm_mul_rm_ftz_f
__nvvm_mul_rm_f
__nvvm_mul_rp_ftz_f
__nvvm_mul_rp_f
__nvvm_mul_rn_d
__nvvm_mul_rz_d
__nvvm_mul_rm_d
__nvvm_mul_rp_d
__nvvm_mul24_i
__nvvm_mul24_ui
__nvvm_div_approx_ftz_f
__nvvm_div_approx_f
__nvvm_div_rn_ftz_f
__nvvm_div_rn_f
__nvvm_div_rz_ftz_f
__nvvm_div_rz_f
__nvvm_div_rm_ftz_f
__nvvm_div_rm_f
__nvvm_div_rp_ftz_f
__nvvm_div_rp_f
__nvvm_div_rn_d
__nvvm_div_rz_d
__nvvm_div_rm_d
__nvvm_div_rp_d
__nvvm_brev32
__nvvm_brev64
__nvvm_sad_i
__nvvm_sad_ui
__nvvm_floor_ftz_f
__nvvm_floor_f
__nvvm_floor_d
__nvvm_ceil_ftz_f
__nvvm_ceil_f
__nvvm_ceil_d
__nvvm_abs_i
__nvvm_abs_ll
__nvvm_fabs_ftz_f
__nvvm_fabs_f
__nvvm_fabs_d
__nvvm_round_ftz_f
__nvvm_round_f
__nvvm_round_d
__nvvm_trunc_ftz_f
__nvvm_trunc_f
__nvvm_trunc_d
__nvvm_saturate_ftz_f
__nvvm_saturate_f
__nvvm_saturate_d
__nvvm_ex2_approx_ftz_f
__nvvm_ex2_approx_f
__nvvm_ex2_approx_d
__nvvm_lg2_approx_ftz_f
__nvvm_lg2_approx_f
__nvvm_lg2_approx_d
__nvvm_sin_approx_ftz_f
__nvvm_sin_approx_f
__nvvm_cos_approx_ftz_f
__nvvm_cos_approx_f
__nvvm_fma_rn_ftz_f
__nvvm_fma_rn_f
__nvvm_fma_rz_ftz_f
__nvvm_fma_rz_f
__nvvm_fma_rm_ftz_f
__nvvm_fma_rm_f
__nvvm_fma_rp_ftz_f
__nvvm_fma_rp_f
__nvvm_fma_rn_d
__nvvm_fma_rz_d
__nvvm_fma_rm_d
__nvvm_fma_rp_d
__nvvm_rcp_rn_ftz_f
__nvvm_rcp_rn_f
__nvvm_rcp_rz_ftz_f
__nvvm_rcp_rz_f
__nvvm_rcp_rm_ftz_f
__nvvm_rcp_rm_f
__nvvm_rcp_rp_ftz_f
__nvvm_rcp_rp_f
__nvvm_rcp_rn_d
__nvvm_rcp_rz_d
__nvvm_rcp_rm_d
__nvvm_rcp_rp_d
__nvvm_rcp_approx_ftz_d
__nvvm_sqrt_rn_ftz_f
__nvvm_sqrt_rn_f
__nvvm_sqrt_rz_ftz_f
__nvvm_sqrt_rz_f
__nvvm_sqrt_rm_ftz_f
__nvvm_sqrt_rm_f
__nvvm_sqrt_rp_ftz_f
__nvvm_sqrt_rp_f
__nvvm_sqrt_approx_ftz_f
__nvvm_sqrt_approx_f
__nvvm_sqrt_rn_d
__nvvm_sqrt_rz_d
__nvvm_sqrt_rm_d
__nvvm_sqrt_rp_d
__nvvm_rsqrt_approx_ftz_f
__nvvm_rsqrt_approx_f
__nvvm_rsqrt_approx_d
__nvvm_add_rn_ftz_f
__nvvm_add_rn_f
__nvvm_add_rz_ftz_f
__nvvm_add_rz_f
__nvvm_add_rm_ftz_f
__nvvm_add_rm_f
__nvvm_add_rp_ftz_f
__nvvm_add_rp_f
__nvvm_add_rn_d
__nvvm_add_rz_d
__nvvm_add_rm_d
__nvvm_add_rp_d
__nvvm_d2f_rn_ftz
__nvvm_d2f_rn
__nvvm_d2f_rz_ftz
__nvvm_d2f_rz
__nvvm_d2f_rm_ftz
__nvvm_d2f_rm
__nvvm_d2f_rp_ftz
__nvvm_d2f_rp
__nvvm_d2i_rn
__nvvm_d2i_rz
__nvvm_d2i_rm
__nvvm_d2i_rp
__nvvm_d2ui_rn
__nvvm_d2ui_rz
__nvvm_d2ui_rm
__nvvm_d2ui_rp
__nvvm_i2d_rn
__nvvm_i2d_rz
__nvvm_i2d_rm
__nvvm_i2d_rp
__nvvm_ui2d_rn
__nvvm_ui2d_rz
__nvvm_ui2d_rm
__nvvm_ui2d_rp
__nvvm_f2i_rn_ftz
__nvvm_f2i_rn
__nvvm_f2i_rz_ftz
__nvvm_f2i_rz
__nvvm_f2i_rm_ftz
__nvvm_f2i_rm
__nvvm_f2i_rp_ftz
__nvvm_f2i_rp
__nvvm_f2ui_rn_ftz
__nvvm_f2ui_rn
__nvvm_f2ui_rz_ftz
__nvvm_f2ui_rz
__nvvm_f2ui_rm_ftz
__nvvm_f2ui_rm
__nvvm_f2ui_rp_ftz
__nvvm_f2ui_rp
__nvvm_i2f_rn
__nvvm_i2f_rz
__nvvm_i2f_rm
__nvvm_i2f_rp
__nvvm_ui2f_rn
__nvvm_ui2f_rz
__nvvm_ui2f_rm
__nvvm_ui2f_rp
__nvvm_lohi_i2d
__nvvm_d2i_lo
__nvvm_d2i_hi
__nvvm_f2ll_rn_ftz
__nvvm_f2ll_rn
__nvvm_f2ll_rz_ftz
__nvvm_f2ll_rz
__nvvm_f2ll_rm_ftz
__nvvm_f2ll_rm
__nvvm_f2ll_rp_ftz
__nvvm_f2ll_rp
__nvvm_f2ull_rn_ftz
ULLif
__nvvm_f2ull_rn
__nvvm_f2ull_rz_ftz
__nvvm_f2ull_rz
__nvvm_f2ull_rm_ftz
__nvvm_f2ull_rm
__nvvm_f2ull_rp_ftz
__nvvm_f2ull_rp
__nvvm_d2ll_rn
__nvvm_d2ll_rz
__nvvm_d2ll_rm
__nvvm_d2ll_rp
__nvvm_d2ull_rn
__nvvm_d2ull_rz
__nvvm_d2ull_rm
__nvvm_d2ull_rp
__nvvm_ll2f_rn
__nvvm_ll2f_rz
__nvvm_ll2f_rm
__nvvm_ll2f_rp
__nvvm_ull2f_rn
fULLi
__nvvm_ull2f_rz
__nvvm_ull2f_rm
__nvvm_ull2f_rp
__nvvm_ll2d_rn
__nvvm_ll2d_rz
__nvvm_ll2d_rm
__nvvm_ll2d_rp
__nvvm_ull2d_rn
__nvvm_ull2d_rz
__nvvm_ull2d_rm
__nvvm_ull2d_rp
__nvvm_f2h_rn_ftz
__nvvm_f2h_rn
__nvvm_bitcast_f2i
__nvvm_bitcast_i2f
__nvvm_bitcast_ll2d
__nvvm_bitcast_d2ll
__syncthreads
__nvvm_bar0
__nvvm_bar0_popc
__nvvm_bar0_and
__nvvm_bar0_or
__nvvm_membar_cta
__nvvm_membar_gl
__nvvm_membar_sys
__nvvm_memcpy
vUc*Uc*zi
__nvvm_memset
vUc*Uczi
__builtin_ptx_read_image2Dfi_
__builtin_ptx_read_image2Dff_
V4fiiff
__builtin_ptx_read_image2Dii_
__builtin_ptx_read_image2Dif_
V4iiiff
__builtin_ptx_read_image3Dfi_
V4fiiiiii
__builtin_ptx_read_image3Dff_
V4fiiffff
__builtin_ptx_read_image3Dii_
V4iiiiiii
__builtin_ptx_read_image3Dif_
V4iiiffff
__builtin_ptx_write_image2Df_
__builtin_ptx_write_image2Di_
__builtin_ptx_write_image2Dui_
viiiUiUiUiUi
__builtin_ptx_get_image_depthi_
__builtin_ptx_get_image_heighti_
__builtin_ptx_get_image_widthi_
__builtin_ptx_get_image_channel_data_typei_
__builtin_ptx_get_image_channel_orderi_
__nvvm_atom_add_g_i
iiD*1i
__nvvm_atom_add_s_i
iiD*3i
__nvvm_atom_add_gen_i
iiD*i
__nvvm_atom_add_g_l
LiLiD*1Li
__nvvm_atom_add_s_l
LiLiD*3Li
__nvvm_atom_add_gen_l
LiLiD*Li
__nvvm_atom_add_g_ll
LLiLLiD*1LLi
__nvvm_atom_add_s_ll
LLiLLiD*3LLi
__nvvm_atom_add_gen_ll
LLiLLiD*LLi
__nvvm_atom_add_g_f
ffD*1f
__nvvm_atom_add_s_f
ffD*3f
__nvvm_atom_add_gen_f
ffD*f
__nvvm_atom_sub_g_i
__nvvm_atom_sub_s_i
__nvvm_atom_sub_gen_i
__nvvm_atom_sub_g_l
__nvvm_atom_sub_s_l
__nvvm_atom_sub_gen_l
__nvvm_atom_sub_g_ll
__nvvm_atom_sub_s_ll
__nvvm_atom_sub_gen_ll
__nvvm_atom_xchg_g_i
__nvvm_atom_xchg_s_i
__nvvm_atom_xchg_gen_i
__nvvm_atom_xchg_g_l
__nvvm_atom_xchg_s_l
__nvvm_atom_xchg_gen_l
__nvvm_atom_xchg_g_ll
__nvvm_atom_xchg_s_ll
__nvvm_atom_xchg_gen_ll
__nvvm_atom_max_g_i
__nvvm_atom_max_s_i
__nvvm_atom_max_gen_i
__nvvm_atom_max_g_ui
UiUiD*1Ui
__nvvm_atom_max_s_ui
UiUiD*3Ui
__nvvm_atom_max_gen_ui
UiUiD*Ui
__nvvm_atom_max_g_l
__nvvm_atom_max_s_l
__nvvm_atom_max_gen_l
__nvvm_atom_max_g_ul
ULiULiD*1ULi
__nvvm_atom_max_s_ul
ULiULiD*3ULi
__nvvm_atom_max_gen_ul
ULiULiD*ULi
__nvvm_atom_max_g_ll
__nvvm_atom_max_s_ll
__nvvm_atom_max_gen_ll
__nvvm_atom_max_g_ull
ULLiULLiD*1ULLi
__nvvm_atom_max_s_ull
ULLiULLiD*3ULLi
__nvvm_atom_max_gen_ull
ULLiULLiD*ULLi
__nvvm_atom_min_g_i
__nvvm_atom_min_s_i
__nvvm_atom_min_gen_i
__nvvm_atom_min_g_ui
__nvvm_atom_min_s_ui
__nvvm_atom_min_gen_ui
__nvvm_atom_min_g_l
__nvvm_atom_min_s_l
__nvvm_atom_min_gen_l
LiLi10D*Li
__nvvm_atom_min_g_ul
__nvvm_atom_min_s_ul
__nvvm_atom_min_gen_ul
__nvvm_atom_min_g_ll
__nvvm_atom_min_s_ll
__nvvm_atom_min_gen_ll
__nvvm_atom_min_g_ull
__nvvm_atom_min_s_ull
__nvvm_atom_min_gen_ull
__nvvm_atom_inc_g_ui
__nvvm_atom_inc_s_ui
__nvvm_atom_inc_gen_ui
__nvvm_atom_dec_g_ui
__nvvm_atom_dec_s_ui
__nvvm_atom_dec_gen_ui
__nvvm_atom_and_g_i
__nvvm_atom_and_s_i
__nvvm_atom_and_gen_i
__nvvm_atom_and_g_l
__nvvm_atom_and_s_l
__nvvm_atom_and_gen_l
__nvvm_atom_and_g_ll
__nvvm_atom_and_s_ll
__nvvm_atom_and_gen_ll
__nvvm_atom_or_g_i
__nvvm_atom_or_s_i
__nvvm_atom_or_gen_i
__nvvm_atom_or_g_l
__nvvm_atom_or_s_l
__nvvm_atom_or_gen_l
__nvvm_atom_or_g_ll
__nvvm_atom_or_s_ll
__nvvm_atom_or_gen_ll
__nvvm_atom_xor_g_i
__nvvm_atom_xor_s_i
__nvvm_atom_xor_gen_i
__nvvm_atom_xor_g_l
__nvvm_atom_xor_s_l
__nvvm_atom_xor_gen_l
__nvvm_atom_xor_g_ll
__nvvm_atom_xor_s_ll
__nvvm_atom_xor_gen_ll
__nvvm_atom_cas_g_i
iiD*1ii
__nvvm_atom_cas_s_i
iiD*3ii
__nvvm_atom_cas_gen_i
iiD*ii
__nvvm_atom_cas_g_l
LiLiD*1LiLi
__nvvm_atom_cas_s_l
LiLiD*3LiLi
__nvvm_atom_cas_gen_l
LiLiD*LiLi
__nvvm_atom_cas_g_ll
LLiLLiD*1LLiLLi
__nvvm_atom_cas_s_ll
LLiLLiD*3LLiLLi
__nvvm_atom_cas_gen_ll
LLiLLiD*LLiLLi
__nvvm_compiler_error
vcC*4
__nvvm_compiler_warn
sm_20
sm_21
sm_30
sm_35
e-i64:64-v16:16-v32:32-n16:32:64
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64
__R600__
rv610
rv620
rv630
rv635
rs780
rs880
rv670
rv710
rv730
rv740
rv770
palm
cedar
sumo
sumo2
redwood
juniper
hemlock
cypress
barts
turks
caicos
cayman
aruba
tahiti
pitcairn
verde
oland
bonaire
kabini
kaveri
hawaii
e-p:32:32-p1:64:64-p2:64:64-p3:32:32-p4:32:32-p5:64:64-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64
E-m:e-p:32:32-i64:64-f128:64-n32-S64
SOFT_FLOAT
__sparcv8
__svr4__
__SVR4
_XOPEN_SOURCE
__C99FEATURES__
_LARGEFILE_SOURCE
_LARGEFILE64_SOURCE
__EXTENSIONS__
E-m:e-i64:64-n32:64-S128
__sparcv9
__arch64__
__sparc64__
__sparc_v9__
__sparcv9__
E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64
__s390__
__s390x__
__zarch__
z196
zEC12
E-p:32:32-i8:8:32-i16:16:32-i64:32-f64:32-v64:32-v128:32-a:0:32-n32
__TCE__
__TCE_V1__
e-m:o-p:32:32-f64:32:64-f80:128-n8:16:32-S128
e-m:e-p:32:32-f64:32:64-f80:32-n8:16:32-S128
__amd64__
__amd64
__x86_64
__x86_64__
__x86_64h
__x86_64h__
__tune_i386__
__pentium_mmx__
__tune_pentium_mmx__
__tune_pentium3__
__tune_pentium2__
__tune_i686__
__tune_pentiumpro__
__i686
__i686__
__pentiumpro
__pentiumpro__
__k6_2__
__tune_k6_2__
__k6_3__
__tune_k6_3__
__athlon_sse__
__tune_athlon_sse__
__NO_MATH_INLINES
__AES__
__PCLMUL__
__LZCNT__
__RDRND__
__BMI__
__BMI2__
__POPCNT__
__RTM__
__PRFCHW__
__RDSEED__
__TBM__
__XOP__
__FMA4__
__SSE4A__
__FMA__
__F16C__
__AVX512CD__
__AVX512ER__
__AVX512PF__
__SHA__
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16
__AVX512F__
__AVX2__
__AVX__
__SSE4_2__
__SSE4_1__
__SSSE3__
__SSE3__
__SSE2__
__SSE2_MATH__
__SSE__
__SSE_MATH__
_M_IX86_FP
__3dNOW_A__
__3dNOW__
__MMX__
__tune_
no-mmx
{ax}
{bx}
{cx}
{dx}
{si}
{di}
{st(1)}
~{dirflag},~{fpsr},~{flags}
sse4
-popcnt
+popcnt
-prfchw
+prfchw
-mmx
mm3dnow
mm3dnowa
x86_32
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
argp
flags
fpcr
fpsr
dirflag
frame
xmm0
xmm1
xmm2
xmm3
xmm4
xmm5
xmm6
xmm7
xmm8
xmm9
xmm10
xmm11
xmm12
xmm13
xmm14
xmm15
ymm0
ymm1
ymm2
ymm3
ymm4
ymm5
ymm6
ymm7
ymm8
ymm9
ymm10
ymm11
ymm12
ymm13
ymm14
ymm15
__DragonFly__
__DragonFly_cc_version
100001
__FreeBSD_kernel__
__GLIBC__
__minix
_EM_WSIZE
_EM_PSIZE
_EM_SSIZE
_EM_LSIZE
_EM_FSIZE
_EM_DSIZE
e-m:w-p:32:32-i64:64-f80:32-n8:16:32-S32
_X86_
__CYGWIN__
__CYGWIN32__
WIN32
WINNT
__MSVCRT__
__MINGW32__
__declspec
__declspec(a)
__attribute__((a))
_WIN32
_M_IX86
_CPPRTTI
_CPPUNWIND
_CHAR_UNSIGNED
_MSC_VER
_MSC_EXTENSIONS
_RVALUE_REFERENCES_V2_SUPPORTED
_RVALUE_REFERENCES_SUPPORTED
_NATIVE_NULLPTR_SUPPORTED
_INTEGRAL_MAX_BITS
__INTEL__
__HAIKU__
e-m:o-i64:64-f80:128-n8:16:32:64-S128
e-m:e-i64:64-f80:128-n8:16:32:64-S128
_WIN64
WIN64
__MINGW64__
_M_X64
_M_AMD64
e-p:32:32-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
SPIR32
e-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024
SPIR64
sm_10
sm_13
code_completion
cxx_defaultarg_end
raw_identifier
numeric_constant
char_constant
wide_char_constant
utf16_char_constant
utf32_char_constant
string_literal
wide_string_literal
angle_string_literal
utf8_string_literal
utf16_string_literal
utf32_string_literal
l_square
r_square
l_paren
r_paren
l_brace
r_brace
period
ellipsis
ampamp
ampequal
star
starequal
plus
plusplus
plusequal
minus
arrow
minusminus
minusequal
tilde
exclaim
exclaimequal
slash
slashequal
percent
percentequal
less
lessless
lessequal
lesslessequal
greater
greatergreater
greaterequal
greatergreaterequal
caret
caretequal
pipepipe
pipeequal
question
colon
semi
equal
equalequal
comma
hash
hashhash
hashat
periodstar
arrowstar
coloncolon
lesslessless
greatergreatergreater
annot_cxxscope
annot_typename
annot_template_id
annot_primary_expr
annot_decltype
annot_pragma_unused
annot_pragma_vis
annot_pragma_pack
annot_pragma_parser_crash
annot_pragma_captured
annot_pragma_msstruct
annot_pragma_align
annot_pragma_weak
annot_pragma_weakalias
annot_pragma_redefine_extname
annot_pragma_fp_contract
annot_pragma_opencl_extension
annot_pragma_openmp
annot_pragma_openmp_end
annot_module_include
annot_module_begin
annot_module_end
clang-3600.13.14
llvm/
Apple 
 version 6.0.0 
 (based on LLVM 
LLVM 6.0.0 
failed to open pgo data file
pgo data file too big
pgo data file has malformed function entry
pgo data file has unexpected number of counters
pgo-data file has bad count value
pgo data file is missing some counter info
pgo-data file has inconsistent counters
__llvm_pgo_writeout
llvm_pgo_emit
__llvm_pgo_name
__llvm_pgo_init
llvm_pgo_init
__llvm_pgo_ctr
pgocount
backend data layout '%0' does not match expected target description '%1'
nolifetimeinline
Code Generation Time
Per-function optimization
Per-module optimization passes
Code generation
small
medium
large
-debug-pass
-limit-float-precision
-time-passes
-global-merge=false
.atomictmp
.atomicdst
atomic library call
atomic-load-temp
atomic-load
atomic-store-temp
block.isa
block.flags
block.reserved
block.invoke
block.descriptor
block.captured-this.addr
block.captured
block.capture.addr
byref.capture
ref.val
struct.__block_descriptor
struct.__block_literal_generic
block.literal
byref.addr
byref.forwarding
byref.addr.forwarded
ref.tmp
.block_descriptor
block.addr
block.captured-this
block.captured-const
__copy_helper_block_
block.source
block.dest
blockcopy.src
__destroy_helper_block_
forwarding
struct.__block_byref_
byref.isa
 Inline flag for BYREF variable layout (%d):
 BLOCK_BYREF_HAS_COPY_DISPOSE
 BLOCK_BYREF_LAYOUT_EXTENDED
 BLOCK_BYREF_LAYOUT_STRONG
 BLOCK_BYREF_LAYOUT_WEAK
 BLOCK_BYREF_LAYOUT_UNRETAINED
 BLOCK_BYREF_LAYOUT_NON_OBJECT
byref.flags
byref.size
byref.layout
_NSConcreteGlobalBlock
_NSConcreteStackBlock
__block_descriptor_tmp
__block_literal_global
__Block_byref_object_copy_
__Block_byref_object_dispose_
abscond
expval
builtin_unreachable
isinf
iseq
isnormal
fpclassify_result
extend.cast
extend.sext
extend.zext
was_set
builtin function
lane
vcage
vcagt
vrshr_n
vsra_n
vrsra_n
vqshlu_n
vsri_n
vsli_n
vshll_n
vshrn_n
vqshrun_n
vrshrn_n
vqrshrun_n
vqshrn_n
vqrshrn_n
vcvt_n
vld1xN
vld1_lane
vld_dup
aese
aesd
aesmc
aesimc
sha1su1
sha256su0
sha1su0
sha256h
sha256h2
sha256su1
vmaxnm
vminnm
vpmaxnm
vpminnm
vpmax
vpmin
vpadd
vmulx
vabs
vsqadd
vuqadd
vrbit
vcvt
vcvtx_f32_f64
vrndn
vrnda
vrndp
vrndm
vrndx
vrnd
vrndi
vcvtns_f32
vcvtns_f64
vcvtnu_f32
vcvtnu_f64
vcvtps_f32
vcvtps_f64
vcvtpu_f32
vcvtpu_f64
vcvtms_f32
vcvtms_f64
vcvtmu_f32
vcvtmu_f64
vcvtas_f32
vcvtas_f64
vcvtau_f32
vcvtau_f64
vsqrt
vceqz
vcgez
vclez
vcgtz
vcltz
ldrexd
ldrex
strexd
strex
vget_lane
vset_lane
vcvtr
vbsl
vabd
vaddhn
vcls
vclz
vctpop
vhadd
vhsub
vld1
vld1q_lane
vld2
vld3
vld4
vld2_lane
vld3_lane
vmax
vmin
vmovl
vmovn
vmul
vmull
vpadal
vpaddl
vqabs
vqadd
vqdmlal
vqdmlsl
vqdmulh
vqdmull
vqmovn
vqneg
vqrdmulh
vqrshl
vqshl
vqshl_n
vqshlu
vqsub
vraddhn
vrecpe
vrecps
vrhadd
vrshl
vrsqrte
vrsqrts
vrsubhn
vshl
vshll
vshl_n
vshr_n
vsubhn
vtbl1
vtbl2
vtbl3
vtbl4
vtbx1
vtbx2
vtbx3
vtbx4
vtst
vtrn
vuzp
vzip
lane0
ldxp
ldxr
stxp
stxr
vrsqrtss
vrsqrtsd
vrshld
vqrshlb
vqrshlh
vqrshls
vqrshld
vqshlb
vqshlh
vqshls
vqshld
vqdmullh
vqdmulls
vqaddb
vqaddh
vqsubb
vqsubh
vqmovun
fcvt_n
fcvtr
vcvtxd
lane1
vpaddd
vceqzd
vtstd
vgetq_lane
vdups_lane
vdupd_lane
vsha1c
vsha1p
vsha1m
vaese
vaesd
vaesimc
vaesmc
vsha1su0
vsha1su1
vsha256h
vsha256h2
vsha256su0
vsha256su1
vusqadd
fmla
fmls
facge
facgt
cmtst
vabdl
vrndz
vcvtx
vcvta
vcvtm
vcvtn
vcvtp
vaddv
vmaxv
vminv
vaddlv
vmaxnmv
vminnmv
vld4_lane
vcnt
vabdl_high
vqdmull_high
vqmovn_high
vqmovun_high
vrshrn_high_n
vshrn_high_n
vqshrun_high_n
vqrshrun_high_n
vrsubhn_high
vsubhn_high
vraddhn_high
vaddhn_high
vmovn_high
vtrn1
vtrn2
vuzp1
vuzp2
vzip1
vzip2
stmxcsr
palignr
pmulld
loadu.cast
pswapd
is_fc_def
num_ctrl_pts
vdup_lane
sha1h
sha1c
sha1p
sha1m
vaddds
vadddu
vsubds
vsubdu
vqadds
vqaddu
vqsubs
vqsubu
vshlds
vshldu
vrshlds
vrshldu
vqrshlu
vpfadd
vpfmaxnm
vpfminnm
saddlv
uaddlv
smaxv
umaxv
sminv
uminv
vcvtf
vcvtxn
vcvtas
vcvtau
vcvtms
vcvtmu
vcvtns
vcvtnu
vcvtps
vcvtpu
vcvtzs
vcvtzu
vrecpx
vceq
vcge
vcgt
vchs
vcle
vchi
vclt
vcalt
vneg
vsshr
vushr
vsrshr
vurshr
vssra
vusra
vsrsra
vursra
vsqshl
vuqshl
vsqshlu
vsri
vsli
vsqshrn
vuqshrn
vsqrshrn
vuqrshrn
vsqshrun
vsqrshrun
fcvtzs
fcvtzu
real
imag
agg.result
coerce
.coerce
retval.packed
retval.orig
agg.arg.tmp
Invalid cast from 
agg.tmp
arg.unpromote
coerce.dive
coerce.val
coerce.val.pi
coerce.highbits
coerce.val.ii
coerce.val.ip
icr.temp
icr.isnull
icr.argument
icr.cast
icr.to-use
icr.writeback-cast
cast.result
sub.ptr
object.index
isempty
arrayctor.end
arrayctor.cur
arrayctor.next
arrayctor.done
vtable
lambda conversion to variadic function
destaddress
isless
saved-rvalue
saved-complex
cleanup.cond
cleanup.dest
cleanup.dest.slot
cleanup.is_active
cleanup.isactive
cudaSetupArgument
cudaLaunch
vfnkxt
cannot yet compile %0 in this ABI
calls through member pointers
loads of member pointers
member function pointer conversions
member function pointer comparison
member function pointer null testing
array cookie initialization
reading a new[] cookie
complete object detection in ctor
odr-use of thread_local global
objc_selector
opencl_image1d_t
opencl_image1d_array_t
opencl_image1d_buffer_t
opencl_image2d_t
opencl_image2d_array_t
opencl_image3d_t
opencl_sampler_t
opencl_event_t
__isa
__flags
__reserved
__FuncPtr
__descriptor
__block_literal_generic
__vtbl_ptr_type
_vptr$
debug information for %0 is not yet supported
__size
__copy_helper
__destroy_helper
__byref_variable_layout
__block_literal_
constant l-value expression
nrvo
saved_stack
arraydestroy.done
arraydestroy.isempty
arraydestroy.elementPast
arraydestroy.element
.addr
nrvo.val
pad.arraybegin
pad.arrayend
atexit
this initialization requires a guard variable, which the kernel does not support
__tls_init
__tls_guard
_GLOBAL__I_
_GLOBAL__I_a
_GLOBAL__D_a
guard.uninitialized
__cxx_global_array_dtor
_Unwind_SjLj_Resume
_Unwind_SjLj_Resume_or_Rethrow
_Unwind_Resume_or_Rethrow
exn.slot
ehselector.slot
finally.exn
finally.for-eh
SEH __try
__gnu_objc_personality_v0
__gnustep_objcxx_personality_v0
__gnustep_objc_personality_v0
__gcc_personality_sj0
__gcc_personality_v0
__gxx_personality_sj0
OBJC_EHTYPE
__cxa_rethrow
__cxa_allocate_exception
__cxa_free_exception
cond-cleanup.save
__cxa_throw
ehspec.fails
__cxa_call_unexpected
matches
__cxa_begin_catch
__cxa_end_catch
exn.byref.tmp
exn.byref
exn.casted
__cxa_get_exception_ptr
__clang_call_terminate
_ZSt9terminatev
objc_terminate
cleanup.dest.saved
finally.shouldthrow
finally.endcatch
agg-temp
type_mismatch
__ubsan_vptr_type_cache
dynamic_type_cache_miss
out_of_bounds
l-value expression
castToVec4
loadVec4
extractVec
load_invalid_value
frombool
storetmp
vecext
bf.load
bf.shl
bf.ashr
bf.lshr
bf.clear
bf.cast
vecins
sub.ptr.rhs.cast
sub.ptr.lhs.cast
ivar.offset
bf.value
bf.set
bf.result.shl
bf.result.ashr
bf.result.cast
predefined expression
__func__.
__FUNCTION__.
__FUNCDNAME__.
L__FUNCTION__.
__PRETTY_FUNCTION__.
.src
__ubsan_handle_
_abort
vidx
idxprom
arrayidx
conditional operator
cond-lvalue
unexpected cast lvalue
temp.lvalue
function_type_mismatch
callee.knr.cast
agg.tmp.ensured
aggregate expression
aggregate binary expression
weird std::initializer_list
arraystart
arrayend
non-simple lvalue dynamic_cast
lvalue dynamic_cast with a destination
atomic-to-nonatomic.temp
GNU array range designator extension
arrayinit.begin
arrayinit.endOfInit
arrayinit.element
arrayinit.start
arrayinit.end
arrayinit.cur
arrayinit.next
arrayinit.done
aggregate va_arg expression
mul.rl
mul.rr
mul.r
mul.il
mul.ir
mul.i
add.r
add.i
sub.r
sub.i
neg.r
neg.i
conj.i
cond.r
cond.i
complex expression
complex va_arg expression
.realp
.imagp
.compoundliteral
array.end
array.endOfInit
array.exp.next
array.isempty
array.cur
array.next
array.atend
new.isnull
delete.end
del.first
__cxa_bad_typeid
__cxa_bad_cast
offset.to.top
__dynamic_cast
resval
cmp.r
cmp.i
and.ri
or.ri
land.ext
lor.ext
lnot
lnot.ext
vecidxcast
astypeCast
astype
scalar expression
arraydecay
conv
splat
vecinit
vext
virtual base in offsetof
concat
shuf_idx
idx_zext
shuf_elt
shuf_ins
shuffle
float_cast_overflow
vla.negsize
vla.inc
incdec.funcptr
incdec.ptr
incdec.objptr
negate_overflow
shift_out_of_bounds
divrem_overflow
add_overflow
sub_overflow
mul_overflow
tmask
fmask
gtzero
frhs
nonzero
trhs
gdiv
grem
idx.ext
idx.neg
vla.index
sub.ptr.sub
sub.ptr.div
sh_prom
shl.zeros
shl.check
shl.mask
shr.mask
Obj-C getter requiring atomic copy
Obj-C optimized setter - NYI
Obj-C setter requiring atomic copy
Obj-C fast enumeration for this runtime
forcoll.end
state.ptr
items.ptr
forcoll.next
iszero
mutationsptr.ptr
mutationsptr
forcoll.initial-mutations
forcoll.index
forcoll.count
statemutations
stateitems.ptr
stateitems
currentitem.ptr
currentitem
drain
__assign_helper_atomic_property_
__copy_helper_atomic_property_
objc_msg_lookup_sender
objc_slot_lookup_super
objc_begin_catch
objc_end_catch
objc_exception_rethrow
objc_setProperty_atomic
objc_setProperty_atomic_copy
objc_setProperty_nonatomic
objc_setProperty_nonatomic_copy
objc_setCppObjectAtomic
objc_getCppObjectAtomic
GNUObjCMessageSend
objc_getProperty
objc_setProperty
objc_getPropertyStruct
objc_setPropertyStruct
objc_memmove_collectable
NXConstantString
.objc_static_class_name
.objc_statics
.objc_statics_ptr
.objc_sel_name
.objc_sel_types
.objc_selector_list
.objc_source_file_name
.objc_load_function
__objc_exec_class
class_registerAlias_np
no_alias
_OBJC_CLASS_
__ObjC_Protocol_Holder_Ugly_Hack
AnotherHack
.objc_protocol_list
.objc_method_list
.objc_selector_
__objc_id_type_info
__objc_eh_typeinfo_
_ZTVN7gnustep7libobjc22__objc_class_type_infoE
__objc_eh_typename_
.objc_str
.objc_protocol_name
__objc_class_name_
__objc_ivar_offset_value_
.ivar.offsets
.super_class_name
__objc_ivar_offset_
__objc_class_ref_
.objc_property_list
.objc_ivar_list
.class_name
_OBJC_METACLASS_
objc_get_meta_class
objc_get_class
.objc_metaclass_ref
.objc_class_ref
NSAutoreleasePool
ivar
.guess
objc_lookup_class
objc_msg_lookup
objc_msg_lookup_super
objc_msg_lookup_stret
objc_msg_lookup_super_stret
struct._objc_method_description
struct._objc_method_description_list
struct._objc_protocol_extension
struct._objc_protocol
struct._objc_protocol_list
struct._objc_ivar
struct._objc_ivar_list
struct._objc_method_list
struct._objc_class_extension
struct._objc_class
struct._objc_category
struct._objc_symtab
struct._objc_module
struct._objc_exception_data
_objc_super
struct._prop_t
struct._prop_list_t
struct._objc_method
struct._objc_cache
__OBJC, __image_info,regular
__DATA, __objc_imageinfo, regular, no_dead_strip
Objective-C Version
.objc_class_name_
.globl .objc_class_name_
.lazy_reference .objc_class_name_
.objc_category_name_
.globl .objc_category_name_
L_OBJC_MODULES
__OBJC,__module_info,regular,no_dead_strip
L_OBJC_SYMBOLS
__OBJC,__symbols,regular,no_dead_strip
L_OBJC_CLASS_NAME_
__TEXT,__objc_classname,cstring_literals
__OBJC,__message_refs,literal_pointers,no_dead_strip
__TEXT,__objc_methname,cstring_literals
L_OBJC_CATEGORY_INSTANCE_METHODS_
__OBJC,__cat_inst_meth,regular,no_dead_strip
L_OBJC_CATEGORY_CLASS_METHODS_
__OBJC,__cat_cls_meth,regular,no_dead_strip
L_OBJC_CATEGORY_PROTOCOLS_
l_OBJC_$_PROP_LIST_
L_OBJC_CATEGORY_
__OBJC,__category,regular,no_dead_strip
L_OBJC_METH_VAR_TYPE_
__TEXT,__objc_methtype,cstring_literals
__DATA, __objc_const
__OBJC,__property,regular,no_dead_strip
L_OBJC_PROP_NAME_ATTR_
L_OBJC_CLASS_PROTOCOLS_
L_OBJC_INSTANCE_METHODS_
__OBJC,__inst_meth,regular,no_dead_strip
L_OBJC_CLASS_
__OBJC,__class,regular,no_dead_strip
L_OBJC_CLASS_METHODS_
__OBJC,__cls_meth,regular,no_dead_strip
L_OBJC_METACLASS_
__OBJC,__meta_class,regular,no_dead_strip
L_OBJC_INSTANCE_VARIABLES_
__OBJC,__instance_vars,regular,no_dead_strip
%s ivar layout for class '%s': 
0x0%x%s
0x%x%s
L_OBJC_CLASSEXT_
__OBJC,__class_ext,regular,no_dead_strip
objc_msgSendSuper2_stret
objc_msgSendSuper2
L_OBJC_CLASS_REFERENCES_
__OBJC,__cls_refs,literal_pointers,no_dead_strip
objc_copyStruct
objc_copyCppObjectAtomic
finally.end
finally.rethrow
sync.arg
exceptiondata.ptr
_call_try_exit
setjmp_buffer
setjmp_result
did_catch_exception
caught
propagating_exception
setjmp.result
match
matched
weakread
weakassign
globalassign
threadlocalassign
objc_assign_threadlocal
 block variable layout for block: 
 Inline instruction for BYREF variable layout: 
 Inline instruction for block variable layout: 
0x0%llx
 BYREF variable layout: 
 block variable layout: 
BL_OPERATOR:
BL_NON_OBJECT_BYTES:
BL_NON_OBJECT_WORD:
BL_STRONG:
BL_BYREF:
BL_WEAK:
BL_UNRETAINED:
L_OBJC_PROTOCOL_REFS_
L_OBJC_PROTOCOL_INSTANCE_METHODS_
L_OBJC_PROTOCOL_CLASS_METHODS_
L_OBJC_PROTOCOL_
__OBJC,__protocol,regular,no_dead_strip
L_OBJC_PROTOCOL_INSTANCE_METHODS_OPT_
L_OBJC_PROTOCOL_CLASS_METHODS_OPT_
L_OBJC_$_PROP_PROTO_LIST_
L_OBJC_PROTOCOL_METHOD_TYPES_
L_OBJC_PROTOCOLEXT_
struct.__method_list_t
struct._protocol_t
struct._ivar_t
struct._ivar_list_t
struct._class_ro_t
struct._class_t
struct._category_t
_message_ref_t
struct._super_message_ref_t
struct._objc_typeinfo
L_OBJC_LABEL_CLASS_$
__DATA, __objc_classlist, regular, no_dead_strip
L_OBJC_LABEL_NONLAZY_CLASS_$
__DATA, __objc_nlclslist, regular, no_dead_strip
L_OBJC_LABEL_CATEGORY_$
__DATA, __objc_catlist, regular, no_dead_strip
L_OBJC_LABEL_NONLAZY_CATEGORY_$
__DATA, __objc_nlcatlist, regular, no_dead_strip
__DATA, __objc_selrefs, literal_pointers, no_dead_strip
OBJC_EHTYPE_id
OBJC_EHTYPE_$_
objc_ehtype_vtable
__DATA,__objc_const
__DATA,__datacoal_nt,coalesced
l_OBJC_$_CATEGORY_
INSTANCE_METHODS_
CLASS_METHODS_
l_OBJC_CATEGORY_PROTOCOLS_$_
_objc_empty_cache
_objc_empty_vtable
OBJC_METACLASS_$_
l_OBJC_$_
l_OBJC_CLASS_PROTOCOLS_$_
l_OBJC_METACLASS_RO_$_
l_OBJC_CLASS_RO_$_
l_OBJC_$_INSTANCE_VARIABLES_
__DATA, __objc_ivar
OBJC_IVAR_$_
__DATA, __objc_data
isFlipped
isKindOfClass
isEqualToString
addObject
objc_msgSendSuper2_stret_fixup
objc_msgSend_stret_fixup
objc_msgSend_fpret_fixup
objc_msgSendSuper2_fixup
objc_msgSend_fixup
__DATA, __objc_msgrefs, coalesced
msgSend_fn
__DATA, __objc_superrefs, regular, no_dead_strip
l_OBJC_PROTOCOL_REFERENCE_$_
__DATA, __objc_protorefs, coalesced, no_dead_strip
L_OBJC_CLASSLIST_REFERENCES_$_
__DATA, __objc_classrefs, regular, no_dead_strip
ivar.conv
l_OBJC_$_PROTOCOL_REFS_
l_OBJC_$_PROTOCOL_INSTANCE_METHODS_
l_OBJC_$_PROTOCOL_CLASS_METHODS_
l_OBJC_$_PROTOCOL_INSTANCE_METHODS_OPT_
l_OBJC_$_PROTOCOL_CLASS_METHODS_OPT_
l_OBJC_$_PROTOCOL_METHOD_TYPES_
l_OBJC_PROTOCOL_$_
l_OBJC_LABEL_PROTOCOL_$_
__DATA, __objc_protolist, coalesced, no_dead_strip
add.ptr
exn.adjusted
opencl.image1d_t
opencl.image1d_array_t
opencl.image1d_buffer_t
opencl.image2d_t
opencl.image2d_array_t
opencl.image3d_t
opencl.event_t
*** Dumping IRgen Record Layout
<CGRecordLayout
  LLVMType:
  NonVirtualBaseLLVMType:
  IsZeroInitializable:
  BitFields:[
<CGBitFieldInfo
 IsSigned:
 StorageSize:
 StorageAlignment:
.base
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTVN10__cxxabiv123__fundamental_type_infoE
_ZTVN10__cxxabiv117__array_type_infoE
_ZTVN10__cxxabiv120__function_type_infoE
_ZTVN10__cxxabiv116__enum_type_infoE
_ZTVN10__cxxabiv119__pointer_type_infoE
_ZTVN10__cxxabiv129__pointer_to_member_type_infoE
LLVM IR generation of compound statement ('{}')
addr
while.cond
while.end
do.end
do.cond
for.end
for.cond
for.inc
sw.epilog
asmresult
agg.captured
overriding the module target triple with %0
LLVM IR Generation Time
LLVM IR generation of declaration
Per-file LLVM IR generation
apple.cl.arg_metadata
class agp::image_1d<
class agp::image_2d<
class agp::image_3d<
read/write
agp::image_
stream
__cyg_profile_func_exit
callsite
air.vertex_fetch
__cyg_profile_func_enter
indirect.goto.dest
array.begin
vla_bound_not_positive
uintptr_t
intptr_t
unsigned 
local 
device 
threadgroup 
thread 
sample
packed_
user(
generated(
air.read
air.read_write
air.write
air.struct_type_info
air.arg_type_size
air.arg_type_align_size
air.patch_control_point
air.clip_distance
air.point_size
air.vertex_output
air.flat
air.perspective
air.no_perspective
air.depth_qualifier
air.any
air.less
air.greater
__captured_stmt
Unable to get target machine: 
opencl.compiler.option
air.version
air.language_version
air.compile_options
air.compile.denorms_enable
air.compile.denorms_disable
air.compile.fast_math_disable
air.compile.fast_math_enable
air.compile.framebuffer_fetch_enable
air.compile.framebuffer_fetch_disable
air.compile.native_double_enable
air.compile.native_double_disable
cannot compile this %0 yet
.str
lvgv
Generating code for declaration
air.function_constants
static initializer
llvm.asan.dynamically_initialized_globals
__CFConstantStringClassReference
__TEXT,__ustring
__TEXT,__cstring,cstring_literals
_unnamed_cfstring_
__DATA,__cfstring
OBJC_CLASS_$_NSConstantString
OBJC_CLASS_$_
_NSConstantStringClassReference
ClassReference
__builtin_NSString
_unnamed_nsstring_
__OBJC,__cstring_object,regular,no_dead_strip
__DATA,__objc_stringobj,regular,no_dead_strip
__objcFastEnumerationState
.cxx_destruct
.cxx_construct
linkage spec
clang.decl.ptr
sse41
sse42
_cpu_capabilities
clang.global.decl.ptrs
/System/Library/Frameworks/OpenCL.framework/Resources/runtime.i386.bc
/System/Library/Frameworks/OpenCL.framework/Resources/runtime.x86_64.bc
/System/Library/PrivateFrameworks/OpenCL.framework/runtime.armv7.bc
/System/Library/PrivateFrameworks/OpenCL.framework/runtime.arm64.bc
Runtime bitcode file not found.
CL_VWIDTH_8
/System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/Vectorizer.dylib
createVectorizerPass
getVectorizerFunctions
getVectorizerWidths
Error creating OpenCL Wrapper info dictionary.
Linking with OpenCL failed.
_wrapper
args_list
gtid
xend
stride
loop.cond
arglist
argptr
ptrtoarg
gtid_1
get_global_id
localgv
larg
bcast
ptoi
opencl.kernels
kernel_arg_type
kernel_arg_type_qual
kernel_arg_name
__cl_metadata0
__TEXT,__opencl
Simple C/C++ TBAA
omnipotent char
any pointer
anon
memptr.adj
memptr.adj.shifted
this.adjusted
memptr.ptr
memptr.isvirtual
memptr.vtable
memptr.virtualfn
memptr.nonvirtualfn
memptr.offset
memptr.isnull
src.adj
lhs.memptr.ptr
rhs.memptr.ptr
cmp.ptr
cmp.ptr.null
lhs.memptr.adj
rhs.memptr.adj
cmp.adj
or.adj
cmp.or.adj
memptr.ne
memptr.eq
memptr.tobool
memptr.virtualbit
complete-offset.ptr
vbase.offset.ptr
vbase.offset
__fundamental_type_info
__cxxabiv1
__cxa_pure_virtual
__cxa_deleted_virtual
tobool
non-trivial TLS destruction
_tlv_atexit
__cxa_thread_atexit
__dso_handle
memptr.is_vbase
memptr.base
vbptr
vbtable
vbase_offs
memptr.converted
pointer to variadic virtual member function
pointer to virtual member function with incomplete return or parameter type
pointer to virtual member function overriding member function in virtual base class
lhs.0
rhs.0
memptr.cmp.first
memptr.cmp.rest
memptr.cmp.iszero
memptr.cmp
memptr.cmp0
is_complete_object
this.int8
vbptr.
vtordisp.value
vtordisp.ptr
is_most_derived
should_call_delete
vtordisp
_purecall
dynamic TLS initialization
more than 32 guarded initializations
(ABIArgInfo Kind=
Direct Type=
Extend
Ignore
Indirect Align=
 ByVal=
 Realign=
Expand
Compact Type=
IndirectUnpack
cl.1.0
cl.1.1
.packed
ap.cur
ap.next
ap.align
gr_offs_p
gr_offs
vr_offs_p
vr_offs
align_regoffs
aligned_regoffs
new_reg_offs
reg_top_p
reg_top
stack_p
stack
align_stack
new_stack
vaarg.addr
fp, fp
; marker for objc_retainAutoreleaseReturnValue
var.align
r7, r7
@ marker for objc_retainAutoreleaseReturnValue
.vareal
.vaimag
vacplx
.real
.imag
nvvm.annotations
__isr_
reg_count_ptr
reg_count
fits_in_regs
scaled_reg_count
reg_offset
reg_save_area_ptr
raw_reg_addr
reg_addr
overflow_arg_area_ptr
raw_mem_addr
mem_addr
va_arg.addr
indirect_arg
opencl.kernel_wg_size_info
ap.cur.aligned
/FAILIFMISMATCH:"
gp_offset_p
fits_in_gp
fp_offset_p
fits_in_fp
overflow_arg_area_p
overflow_arg_area.align
overflow_arg_area.next
extend
indirect
indirect.arg
arg.addr
-fcatch-undefined-behavior
-fno-sanitize-undefined-trap-on-error
address,
init-order,
use-after-return,
use-after-scope,
memory,
thread,
leak,
alignment,
array-bounds,
bool,
enum,
float-cast-overflow,
float-divide-by-zero,
function,
integer-divide-by-zero,
null,
object-size,
return,
shift,
signed-integer-overflow,
unreachable,
vla-bound,
vptr,
unsigned-integer-overflow,
dataflow,
local-bounds,
-fsanitize-blacklist=
-fsanitize-memory-track-origins
address-full
undefined-trap
integer
bounds
-fno-sanitize=address
-fsanitize=thread
-fno-sanitize=thread
-fsanitize=undefined-trap -fsanitize-undefined-trap-on-error
-fsanitize=local-bounds
asan_blacklist.txt
msan_blacklist.txt
tsan_blacklist.txt
dfsan_abilist.txt
bind-arch
preprocessor
precompiler
analyzer
migrator
compiler
<input>
dwarf-debug-flags
The string to embed in the Dwarf debug flags record.
dwarf-debug-producer
The string to embed in the Dwarf debug AT_producer record.
fdebug-compilation-dir
The compilation directory to embed in the debug info.
filetype
Specify the output file type ('asm', 'null', or 'obj')
Generate source level debug information
Print this help text
Add directory to include search path
<directory>
main-file-name
Main file name to use for debug info
mllvm
Additional arguments to forward to LLVM's option processing
mnoexecstack
Mark the file as not needing an executable stack
mrelax-all
Relax all fixups (for performance testing)
msave-temp-labels
Save temporary labels in the symbol table. Note this may change .s semantics, it should almost never be used on compiler generated code!
Don't automatically start assembly file with a text section
output-asm-variant
Select the asm variant index to use for output
Specify output file
<path>
show-encoding
Show instruction encoding information in transliterate mode
show-inst
Show internal instruction representation in transliterate mode
target-cpu
Target a specific cpu type
target-feature
Target specific attributes
triple
Specify target triple (e.g. x86_64-pc-linux-gnu)
Print the assembler version
[Logging clang options]
clang LLVM compiler
Command line argument parsing
--no-demangle
-MMD
stdc++
cc_kext
Compilation construction
COMPILER_PATH
PLEASE submit a bug report to http://llvm.org/bugs/ and include the crash backtrace, preprocessed source, and associated run script.
Error generating preprocessed source(s) - ignoring input from stdin.
Error generating preprocessed source(s) - no preprocessable inputs.
Error generating preprocessed source(s) - cannot generate preprocessed source with multiple -arch options.
Error generating preprocessed source(s).
********************
PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:
Preprocessed source(s) and associated run script(s) are located at:
Error generating run script: 
-main-file-name 
********************
Target: 
Thread model: 
posix
4.2.1
programs: =
libraries: =
libgcc.a
x86_64;@m64
ppc64;@m64
ppc64le;@m64
Building universal build actions
Building compilation actions
Constructing phase actions
Building compilation jobs
 - "
", inputs: [
], output: 
Computing output path
(input arg)
(nothing)
<action group>
<CompileOnly group>
<I group>
<M group>
<O group>
<T group>
<W group>
</M group>
<clang-cl options>
CL.EXE COMPATIBILITY OPTIONS
<clang-cl compile-only options>
<clang-cl ignored options>
<clang i group>
<clang ignored f group>
<clang ignored m group>
<d group>
<f group>
<f (clang-only) group>
<g group>
<g flags group>
gfortran Group
<i group>
<clang internal options>
<clang debug/development internal options>
DEBUG/DEVELOPMENT OPTIONS
<clang driver internal options>
DRIVER OPTIONS
<m group>
<m arm features group>
<m hexagon features group>
<m ppc features group>
<m x86 features group>
<OpenCL group>
<pedantic group>
<reserved libs group>
<u group>
Print (but do not run) the commands to run for this compilation
Display available options
add-plugin
Use the named plugin action in addition to the default action
<name>
all-warnings
all_load
allowable_client
analyze-auto
analyze-function=
analyze-function
Run analysis on specific function
analyze-
analyzer-checker-help
Display the list of analyzer checkers that are available
analyzer-checker=
analyzer-checker
Choose analyzer checkers to enable
analyzer-config
Choose analyzer options to enable
analyzer-constraints=
analyzer-constraints
Source Code Analysis - Symbolic Constraint Engines
analyzer-disable-checker=
analyzer-disable-checker
Choose analyzer checkers to disable
analyzer-disable-retry-exhausted
Do not re-analyze paths leading to exhausted nodes with a different strategy (may decrease code coverage)
analyzer-display-progress
Emit verbose output about the analyzer's progress
analyzer-eagerly-assume
Eagerly assume the truth/falseness of some symbolic constraints
analyzer-inline-max-stack-depth=
analyzer-inline-max-stack-depth
Bound on stack depth while inlining (4 by default)
analyzer-inlining-mode=
analyzer-inlining-mode
Specify the function selection heuristic used during inlining
analyzer-max-loop
The maximum number of times the analyzer will go through a loop
analyzer-no-default-checks
analyzer-opt-analyze-headers
Force the static analyzer to analyze functions defined in header files
analyzer-opt-analyze-nested-blocks
Analyze the definitions of blocks in addition to functions
analyzer-output=
analyzer-output
Source Code Analysis - Output Options
analyzer-purge=
analyzer-purge
Source Code Analysis - Dead Symbol Removal Frequency
analyzer-stats
Print internal analyzer statistics.
analyzer-store=
analyzer-store
Source Code Analysis - Abstract Memory Store Models
analyzer-viz-egraph-graphviz
Display exploded graph using GraphViz
analyzer-viz-egraph-ubigraph
Display exploded graph using Ubigraph
analyze
Run the static analyzer
Run static analysis engine
ansi
arch:
arch_errors_fatal
arch_only
arch
arcmt-check
Check for ARC migration issues that need manual handling
arcmt-migrate-emit-errors
Emit ARC errors even if the migrator can fix them
arcmt-migrate-report-output
Output path for the plist report
arcmt-migrate
Apply modifications and produces temporary files that conform to ARC
arcmt-modify
Apply modifications to files to conform to ARC
assemble
assert=
assert
ast-dump-filter
Use with -ast-dump or -ast-print to dump/print only AST declaration nodes having a certain substring in a qualified name. Use -ast-list to list all filterable declaration node names.
<dump_filter>
ast-dump-lookups
Include name lookup table dumps in AST dumps
ast-dump
Build ASTs and then debug dump them
ast-list
Build ASTs and print the list of declaration node qualified names
ast-merge
Merge the given AST file into the translation unit being compiled.
<ast file>
ast-print
Build ASTs and then pretty-print them
ast-view
Build ASTs and view them with GraphViz
backend-option
Additional arguments to forward to LLVM backend (during code gen)
bigobj
bind_at_load
bootclasspath=
bootclasspath
bundle_loader
bundle
c-isystem
Add directory to the C SYSTEM include search path
ccc-arcmt-check
ccc-arcmt-migrate
ccc-arcmt-modify
ccc-gcc-name
Name for native GCC compiler
<gcc-path>
ccc-install-dir
Simulate installation in the given directory
ccc-objcmt-migrate
Apply modifications and produces temporary files to migrate to modern ObjC syntax
ccc-pch-is-pch
Use lazy PCH for precompiled headers
ccc-pch-is-pth
Use pretokenized headers for precompiled headers
ccc-print-bindings
Show bindings of tools to actions
ccc-print-phases
Dump list of actions to perform
ccc-
cfg-add-implicit-dtors
Add C++ implicit destructors to CFGs for all analyses
chain-include
Include and chain a header file after turning it into PCH
<file>
cl-auto-vectorize-disable
Disable auto-vectorize for the cpu
cl-auto-vectorize-enable
Enable auto-vectorize for the cpu
cl-binary
Create an executable binary which is a CL_PROGRAM_TYPE_EXECUTABLE
cl-denorms-are-zero
Single precision denorms may be flush to zero
cl-double-as-single
Treat double precision fp as single precision fp
cl-fast-relaxed-math
OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__
cl-finite-math-only
OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or +-Inf.
cl-fp32-correctly-rounded-divide-sqrt
OpenCL only. Allows correctly rounded single precision divide and sqrt
cl-kernel-arg-info
OpenCL only. This option allows the compiler to store information about the arguments of a kernel(s)
cl-mad-enable
OpenCL only. Enable less precise MAD instructions to be generated.
cl-opt-disable
OpenCL only. This option disables all optimizations. The default is optimizations are enabled.
cl-single-precision-constant
OpenCL only. Treat double precision floating-point constant as single precision constant.
cl-std=
OpenCL language standard to compile for
cl-unsafe-math-optimizations
OpenCL only. Allow unsafe floating-point optimizations.  Also implies -cl-no-signed-zeros and -cl-mad-enable
CLASSPATH=
classpath=
CLASSPATH
classpath
client_name
code-completion-at=
code-completion-at
Dump code-completion information at a location
<file>:<line>:<column>
code-completion-brief-comments
Include brief documentation comments in code-completion results.
code-completion-macros
Include macros in code-completion results
code-completion-patterns
Include code patterns in code-completion results
combine
comments-in-macros
comments
compatibility_version
compile
constant-cfstrings
coverage-cfg-checksum
Emit CFG checksum for functions in .gcno files.
coverage-file=
coverage-file
Emit coverage data to this filename. The extension will be replaced.
coverage-no-function-names-in-data
Emit function names in .gcda files.
coverage-version=
Four-byte version string for gcov files.
coverage
cpp-precomp
current_version
cxx-isystem
Add directory to the C++ SYSTEM include search path
Don't discard comments when preprocessing
Only run preprocess, compile, and assemble steps
Compile only
Print macro definitions in -E mode in addition to normal output
dead_strip
debug=
debug
define-macro=
define-macro
dependencies
dependency-dot
Filename to write DOT-formatted header dependencies to
dependency-file
Filename (or -) to write dependency output to
dependency-format
Format in which to generate the dependency file
dependency-info
Filename (or -) to write dependency output to in Xcode format
dependent-lib=
Add dependent library
detailed-preprocessing-record
include a detailed record of preprocessing actions
diagnostic-log-file
Filename (or -) to log diagnostics to
disable-free
Disable freeing of memory on exit
disable-llvm-optzns
Don't run LLVM optimization passes
disable-llvm-verifier
Don't run the LLVM IR verifier pass
disable-objc-default-synthesize-properties
disable the default synthesis of Objective-C properties
disable-red-zone
Do not emit code that uses the red zone.
Print macro definitions in -E mode instead of normal output
driver-mode=
Set the driver mode to either 'gcc', 'g++', 'cpp', 'cl', or 'metal'
dump-deserialized-decls
Dump declarations that are deserialized from PCH, for testing
dump-raw-tokens
Lex file in raw mode and dump raw tokens
dump-tokens
Run preprocessor, dump internal rep of tokens
dumpmachine
dumpspecs
dumpversion
dwarf-column-info
Turn on column location information.
dyld-prefix=
dyld-prefix
dylib_file
dylinker_install_name
dylinker
dynamiclib
dynamic
Define macro
<macro[=value]>
emit-ast
Emit Clang AST files for source inputs
emit-codegen-only
Generate machine code, but discard output
emit-gcl
Generate GCL stubs from input source
emit-html
Output input source as HTML
emit-llvm-bc
Build ASTs then convert to LLVM, emit .bc file
emit-llvm-only
Build ASTs and convert to LLVM, discarding output
emit-llvm
Use the LLVM representation for assembler and object files
emit-module
Generate pre-compiled module file from a module map
emit-obj
Emit native object files
emit-pch
Generate pre-compiled header file
emit-pth
Generate pre-tokenized header file
encoding=
encoding
Eonly
Just run preprocessor, no output (for timings)
error-on-deserialized-decl=
error-on-deserialized-decl
Emit error if a specific declaration is deserialized from PCH, for testing
errorReport
exported_symbols_list
extdirs=
extdirs
extra-warnings
Only run the preprocessor
Preprocess to stdout
faccess-control
faddress-sanitizer
faddress-space-map-mangling=
Set the mode for address space map based mangling; OpenCL testing purposes only
<yes|no|target>
faggressive-function-elimination
falign-commons
falign-functions=
falign-functions
fall-intrinsics
fallback
Fall back to cl.exe if clang-cl fails to compile
fallow-unsupported
faltivec
Enable AltiVec vector initializer syntax
fansi-escape-codes
Use ANSI escape codes for diagnostics
fapple-kext
Use Apple's kernel extensions ABI
fapple-pragma-pack
Enable Apple gcc-compatible #pragma pack handling
fasm-blocks
fasm
fassociative-math
fassume-sane-operator-new
fastcp
fastf
fasynchronous-unwind-tables
fauto-profile=
fautolink
fautomatic
favor
Output assembly code file during compilation
Output assembly code to this file during compilation
<file or directory>
fbackslash
fbacktrace
fblas-matmul-limit=
fblocks-runtime-optional
Weakly link in the blocks runtime
fblocks
Enable the 'blocks' language feature
fbootclasspath=
fborland-extensions
Accept non-standard constructs supported by the Borland compiler
fbounds-checking=
fbounds-checking
Enable run-time bounds checks
fbounds-check
fbracket-depth=
fbracket-depth
Maximum nesting level for parentheses, brackets, and braces
fbuiltin
fcaret-diagnostics
fcatch-undefined-behavior
fcheck-array-temporaries
fcheck=
fclasspath=
fcoarray=
fcolor-diagnostics
Use colors in diagnostics
fcomment-block-commands=
Treat each comma separated argument in <arg> as a documentation comment block command
<arg>
fcommon
fcompile-resource=
fconst-strings
Use a const qualified type for string literals in C and ObjC
fconstant-cfstrings
fconstant-string-class=
fconstant-string-class
Specify the class to use for constant Objective-C string objects.
<class name>
fconstexpr-backtrace-limit=
fconstexpr-backtrace-limit
Set the maximum number of entries to print in a constexpr evaluation backtrace (0 = no limit).
fconstexpr-depth=
fconstexpr-depth
Maximum depth of recursive constexpr function calls
fconstexpr-steps=
fconstexpr-steps
Maximum number of steps in constexpr function evaluation
fconvert=
fcray-pointer
fcreate-profile
fcuda-is-device
Generate code for CUDA device
fcxx-exceptions
Enable C++ exceptions
fcxx-modules
fd-lines-as-code
fd-lines-as-comments
fdata-sections
Place each data in its own section (ELF Only)
fdebug-pass-arguments
fdebug-pass-structure
fdebug-types-section
Place debug types in their own section (ELF Only)
fdebugger-cast-result-to-id
Enable casting unknown expression results to id
fdebugger-objc-literal
Enable special debugger support for Objective-C subscripting and literals
fdebugger-support
Enable special debugger support behavior
fdefault-double-8
fdefault-integer-8
fdefault-real-8
fdelayed-template-parsing
Parse templated function definitions at the end of the translation unit
fdenorms
fdeprecated-macro
Defines the __DEPRECATED macro
fdiagnostics-color=
fdiagnostics-color
fdiagnostics-fixit-info
fdiagnostics-format=
fdiagnostics-format
Change diagnostic formatting to match IDE and command line tools
fdiagnostics-parseable-fixits
Print fix-its in machine parseable form
fdiagnostics-print-source-range-info
Print source range spans in numeric form
fdiagnostics-show-category=
fdiagnostics-show-category
Print diagnostic category
fdiagnostics-show-location=
fdiagnostics-show-note-include-stack
Display include stacks for diagnostic notes
fdiagnostics-show-option
Print option name with mappable diagnostics
fdiagnostics-show-template-tree
Print a template comparison tree for differing templates
fdisable-module-hash
Disable the module hash
fdollar-ok
fdollars-in-identifiers
Allow '$' in identifiers
fdump-fortran-optimized
fdump-fortran-original
fdump-parse-tree
fdump-record-layouts-simple
Dump record layout information in a simple form used for testing
fdump-record-layouts
Dump record layout information
fdump-vtable-layouts
Dump the layouts of all vtables that will be emitted in a translation unit
fdwarf-directory-asm
fdwarf2-cfi-asm
felide-constructors
feliminate-unused-debug-symbols
feliminate-unused-debug-types
femit-all-decls
Emit all declarations, even if unused
femit-coverage-data
Instrument the program to emit gcov coverage data when run.
femit-coverage-notes
Emit a gcov coverage notes file when compiling.
fencode-extended-block-signature
enable extended encoding of block type signature
fencoding=
ferror-limit=
ferror-limit
Set the maximum number of errors to emit before stopping (0 = no limit).
fexceptions
Enable support for exception handling
fexpensive-optimizations
fextdirs=
fextended-identifiers
fexternal-blas
Set output executable file or directory (ends in / or \)
ff2c
ffake-address-space-map
Use a fake address space map; OpenCL testing purposes only
ffast-math
Enable the *frontend*'s 'fast-math' mode. This has no effect on optimizations, but provides a preprocessor macro __FAST_MATH__ the same as GCC's -ffast-math flag
ffinite-math-only
ffixed-form
ffixed-line-length-
ffixed-r9
Reserve the r9 register (ARM only)
ffloat-store
ffor-scope
fforbid-guard-variables
Emit an error if a C++ static local initializer would need a guard variable
ffp-contract=
Form fused FP ops (e.g. FMAs): fast (everywhere) | on (according to FP_CONTRACT pragma, default) | off (never fuse)
ffpe-trap=
ffragment-writes
fframebuffer-fetch
ffree-form
ffree-line-length-
ffreestanding
Assert that the compilation takes place in a freestanding environment
ffrontend-optimize
ffunction-attribute-list
ffunction-sections
Place each function in its own section (ELF Only)
fgcse
fgnu-keywords
Allow GNU-extension keywords regardless of language standard
fgnu-runtime
Generate output compatible with the standard GNU Objective-C runtime
fgnu89-inline
Use the gnu89 inline semantics
fgnu
fheinous-gnu-extensions
fhidden-weak-vtables
Generate weak vtables and RTTI with hidden visibility
fhonor-infinites
fhonor-infinities
fhonor-nans
fhosted
fident
filelist
fimplicit-none
fimplicit-templates
findirect-virtual-calls
finit-character=
finit-integer=
finit-local-zero
finit-logical=
finit-real=
finline-functions
finline-limit
finline
finstrument-functions
Generate calls to instrument function entry and exit
finteger-4-integer-8
fintrinsic-modules-path
fivopts
fix-only-warnings
Apply fix-it advice only for warnings, not errors
fix-what-you-can
Apply fix-it advice even in the presence of unfixable errors
fixit-recompile
Apply fix-it changes and recompile
fixit-to-temporary
Apply fix-it changes to temporary files
fixit=
Apply fix-it advice creating a file with the given suffix
fixit
Apply fix-it advice to the input source
Include file before parsing
fkeep-inline-functions
flat_namespace
flax-vector-conversions
flimit-debug-info
flimited-precision=
flto
fmacro-backtrace-limit=
fmacro-backtrace-limit
Set the maximum number of entries to print in a macro expansion backtrace (0 = no limit).
fmath-errno
Require math functions to indicate errors by setting errno
fmax-array-constructor=
fmax-errors=
fmax-identifier-length
fmax-stack-var-size=
fmax-subrecord-length=
fmerge-all-constants
fmessage-length=
fmessage-length
Format message diagnostics so that they fit within N columns or fewer, when possible.
fmodule-map-file=
Load this module map file
fmodule-maps
Read module maps to understand the structure of library headers
fmodule-name=
Specify the name of the module to build
fmodule-private
fmodules-cache-path=
Specify the module cache path
fmodules-decluse
Require declaration of modules used within a module
fmodules-ignore-macro=
Ignore the definition of the given macro when building and loading modules
fmodules-prune-after=
Specify the interval (in seconds) after which a module file will be considered unused
<seconds>
fmodules-prune-interval=
Specify the interval (in seconds) between attempts to prune the module cache
fmodules
Enable the 'modules' language feature
fms-compatibility
Enable full Microsoft Visual C++ compatibility
fms-extensions
Accept some non-standard constructs supported by the Microsoft compiler
fmsc-version=
Microsoft compiler version number to report in _MSC_VER (0 = don't define it (default))
fmudflapth
fmudflap
fnative-double
fnested-functions
fnext-runtime
fno-access-control
Disable C++ access control
fno-address-sanitizer
fno-aggressive-function-elimination
fno-align-commons
fno-align-functions
fno-all-intrinsics
fno-altivec
fno-apple-pragma-pack
fno-asm-blocks
fno-asm
fno-associative-math
fno-assume-sane-operator-new
Don't assume that C++'s global operator new can't alias any pointer
fno-asynchronous-unwind-tables
fno-autolink
Disable generation of linker directives for automatic library linking
fno-automatic
fno-backslash
fno-backtrace
fno-bitfield-type-align
Ignore bit-field types when aligning structures
fno-blocks
fno-borland-extensions
fno-bounds-check
fno-builtin-
Disable implicit builtin knowledge of a specific function
fno-builtin
Disable implicit builtin knowledge of functions
fno-caret-diagnostics
fno-check-array-temporaries
fno-color-diagnostics
fno-common
Compile common globals like normal definitions
fno-const-strings
Don't use a const qualified type for string literals in C and ObjC
fno-constant-cfstrings
Disable creation of CodeFoundation-type constant strings
fno-crash-diagnostics
fno-cray-pointer
fno-cxx-exceptions
fno-cxx-modules
fno-d-lines-as-code
fno-d-lines-as-comments
fno-data-sections
fno-default-double-8
fno-default-integer-8
fno-default-real-8
fno-delayed-template-parsing
fno-denorms
fno-deprecated-macro
Undefines the __DEPRECATED macro
fno-diagnostics-color
fno-diagnostics-fixit-info
Do not include fixit information in diagnostics
fno-diagnostics-show-note-include-stack
fno-diagnostics-show-option
fno-diagnostics-use-presumed-location
Ignore #line directives when displaying diagnostic locations
fno-dollar-ok
fno-dollars-in-identifiers
Disallow '$' in identifiers
fno-dump-fortran-optimized
fno-dump-fortran-original
fno-dump-parse-tree
fno-dwarf-directory-asm
fno-dwarf2-cfi-asm
fno-elide-constructors
Disable C++ copy constructor elision
fno-elide-type
Do not elide types when printing diagnostics
fno-eliminate-unused-debug-symbols
fno-eliminate-unused-debug-types
fno-exceptions
fno-expensive-optimizations
fno-extended-identifiers
fno-external-blas
fno-f2c
fno-fast-math
Disable the frontend*'s 'fast-math' mode.
fno-finite-math-only
fno-fixed-form
fno-float-store
fno-for-scope
fno-free-form
fno-frontend-optimize
fno-function-attribute-list
fno-function-sections
fno-gcse
fno-gnu-keywords
fno-gnu89-inline
fno-gnu
fno-honor-infinites
fno-honor-infinities
fno-honor-nans
fno-ident
fno-implicit-none
fno-implicit-templates
fno-init-local-zero
fno-inline-functions
fno-inline-limit
fno-inline
fno-integer-4-integer-8
fno-intrinsic-modules-path
fno-ivopts
fno-keep-inline-functions
fno-lax-vector-conversions
Disallow implicit conversions between vectors with a different number of elements or different element types
fno-limit-debug-info
fno-lto
fno-math-builtin
Disable implicit builtin knowledge of math functions
fno-math-errno
fno-max-identifier-length
fno-merge-all-constants
Disallow merging of constants
fno-module-maps
fno-module-private
fno-modules-decluse
fno-modules-global-index
Do not automatically generate or update the global module index
fno-modules
fno-ms-compatibility
fno-ms-extensions
fno-native-double
fno-non-call-exceptions
fno-objc-arc-exceptions
fno-objc-arc
fno-objc-exceptions
fno-objc-infer-related-result-type
do not infer Objective-C related result type based on method family
fno-objc-legacy-dispatch
fno-objc-nonfragile-abi
fno-omit-frame-pointer
fno-operator-names
Do not treat C++ operator name keywords as synonyms for operators
fno-optimize-sibling-calls
fno-pack-derived
fno-pack-struct
fno-pascal-strings
fno-permissive
fno-PIC
fno-pic
fno-PIE
fno-pie
fno-prefetch-loop-arrays
fno-printf
fno-profile-correction
fno-profile-generate-sampling
fno-profile-reusedist
fno-profile-use
fno-profile-values
fno-profile
fno-protect-parens
fno-range-check
fno-real-4-real-10
fno-real-4-real-16
fno-real-4-real-8
fno-real-8-real-10
fno-real-8-real-16
fno-real-8-real-4
fno-realloc-lhs
fno-reciprocal-math
fno-recursive
fno-regs-graph
fno-repack-arrays
fno-reroll-loops
Turn off loop reroller
fno-rewrite-includes
fno-ripa
fno-rounding-math
fno-rtti
Disable generation of rtti information
fno-sanitize-blacklist
Don't use blacklist file for sanitizers
fno-sanitize-memory-track-origins
fno-sanitize-recover
Disable sanitizer check recovery
fno-sanitize-undefined-trap-on-error
fno-sanitize=
fno-schedule-insns
fno-second-underscore
fno-see
fno-short-enums
fno-show-column
Do not include column number on diagnostics
fno-show-source-location
Do not include source location information with diagnostics
fno-sign-zero
fno-signaling-math
fno-signaling-nans
fno-signed-char
Char is unsigned
fno-signed-zeros
fno-slp-vectorize-aggressive
fno-slp-vectorize
fno-spec-constr-count
fno-spell-checking
Disable spell-checking
fno-stack-arrays
fno-stack-protector
fno-standalone-debug
Limit debug information produced to reduce size of debug binary
fno-strength-reduce
fno-strict-aliasing
fno-strict-enums
fno-strict-overflow
fno-struct-path-tbaa
fno-thread-sanitizer
fno-threadsafe-statics
Do not emit code to make initialization of local statics thread safe
fno-tls-model
fno-tracer
fno-trapping-math
fno-tree-salias
fno-tree-slp-vectorize
fno-tree-vectorizer-verbose
fno-tree-vectorize
fno-underscoring
fno-unit-at-a-time
fno-unroll-all-loops
fno-unroll-loops
Turn off loop unroller
fno-unsafe-math-optimizations
fno-unsigned-char
fno-unswitch-loops
fno-unwind-tables
fno-use-cxa-atexit
Don't use __cxa_atexit for calling destructors
fno-use-init-array
Don't use .init_array instead of .ctors
fno-validate-pch
Disable validation of precompiled headers
fno-var-tracking
fno-vectorize
fno-verbose-asm
fno-wchar
Disable C++ builtin type wchar_t
fno-whole-file
fno-working-directory
fno-wrapv
fno-zero-initialized-in-bss
fnon-call-exceptions
fobjc-abi-version=
fobjc-arc-cxxlib=
Objective-C++ Automatic Reference Counting standard library kind
fobjc-arc-exceptions
Use EH-safe code when synthesizing retains and releases in -fobjc-arc
fobjc-arc
Synthesize retain and release calls for Objective-C pointers
fobjc-atdefs
fobjc-call-cxx-cdtors
fobjc-dispatch-method=
Objective-C dispatch method to use
fobjc-exceptions
Enable Objective-C exceptions
fobjc-gc-only
Use GC exclusively for Objective-C related memory management
fobjc-gc
Enable Objective-C garbage collection
fobjc-infer-related-result-type
fobjc-legacy-dispatch
fobjc-link-runtime
fobjc-new-property
fobjc-nonfragile-abi-version=
fobjc-nonfragile-abi
fobjc-runtime-has-weak
The target Objective-C runtime supports ARC weak operations
fobjc-runtime=
Specify the target Objective-C runtime kind and version
fobjc-sender-dependent-dispatch
fobjc-subscripting-legacy-runtime
Allow Objective-C array and dictionary subscripting in legacy runtime
fomit-frame-pointer
fopenmp
foperator-arrow-depth=
foperator-arrow-depth
Maximum number of 'operator->'s to call for a member access
foptimize-sibling-calls
for-linker=
for-linker
force-link=
force-link
force_cpusubtype_ALL
force_flat_namespace
force_load
foutput-class-dir=
foverride-record-layout=
Override record layouts with those in the given file
Set output object file, or directory (ends in / or \)
fpack-derived
fpack-struct=
Specify the default maximum struct packing alignment
fpack-struct
fparse-all-comments
fpascal-strings
Recognize and construct Pascal-style string literals
fpcc-struct-return
Override the default ABI to return all structs on the stack
fpch-preprocess
fpermissive
fPIC
fpic
fPIE
fpie
fprefetch-loop-arrays
fprintf
fprofile-arcs
fprofile-correction
fprofile-dir=
fprofile-generate-sampling
fprofile-generate
fprofile-instr-generate
Generate instrumented code to collect execution counts
fprofile-instr-use=
Use instrumentation data for profile-guided optimization
fprofile-instr-use
fprofile-reusedist
fprofile-sample-use=
Enable sample-based profile guided optimizations
fprofile-use=
fprofile-use
fprofile-values
fprofile
fprotect-parens
framework
frandom-seed=
frange-check
freal-4-real-10
freal-4-real-16
freal-4-real-8
freal-8-real-10
freal-8-real-16
freal-8-real-4
frealloc-lhs
freciprocal-math
frecord-marker=
frecursive
freg-struct-return
Override the default ABI to return small structs in registers
fregs-graph
freorder-blocks
frepack-arrays
freroll-loops
Turn on loop reroller
fretain-comments-from-system-headers
frewrite-includes
fripa
frounding-math
frtti
fsanitize-blacklist=
Path to blacklist file for sanitizers
fsanitize-memory-track-origins
Enable origins tracking in MemorySanitizer
fsanitize-recover
fsanitize-undefined-trap-on-error
fsanitize=
Enable runtime instrumentation for bug detection: undefined (miscellaneous undefined behavior)
<check>
fsched-interblock
fschedule-insns
fsecond-underscore
fsee
fshort-enums
Allocate to an enum type only as many bytes as it needs for the declared range of possible values
fshort-wchar
Force wchar_t to be a short unsigned int
fshow-column
fshow-overloads=
Which overload candidates to show when overload resolution fails: best|all; defaults to all
fshow-source-location
fsign-zero
fsignaling-math
fsignaling-nans
fsigned-bitfields
fsigned-char
fsigned-zeros
fsized-deallocation
Enable C++1y sized global deallocation functions
fsjlj-exceptions
Use SjLj style exceptions
fslp-vectorize-aggressive
Enable the BB vectorization passes
fslp-vectorize
Enable the superword-level parallelism vectorization passes
fspec-constr-count
fspell-checking
fsplit-stack
fstack-arrays
fstack-protector-all
fstack-protector
fstandalone-debug
Emit full debug info for all types used by the program
fstrength-reduce
fstrict-aliasing
fstrict-enums
Enable optimizations based on the strict definition of an enum's value range
fstrict-overflow
fstruct-path-tbaa
fsyntax-only
Force synchronous PDB writes
ftabstop=
ftabstop
Set the tab stop distance.
ftemplate-backtrace-limit=
ftemplate-backtrace-limit
Set the maximum number of entries to print in a template instantiation backtrace (0 = no limit).
ftemplate-depth-
ftemplate-depth=
ftemplate-depth
Maximum depth of recursive template instantiation
fterminated-vtables
ftest-coverage
fthread-sanitizer
fthreadsafe-statics
ftime-report
ftls-model=
ftls-model
ftracer
ftrap-function=
Issue call to specified function rather than a trap instruction
ftrapping-math
ftrapv-handler=
Specify the function to be called on overflow
<function name>
ftrapv-handler
ftrapv
Trap on integer overflow
ftree-salias
ftree-slp-vectorize
ftree-vectorizer-verbose
ftree-vectorize
ftype-visibility
Default type visibility
funderscoring
funit-at-a-time
funknown-anytype
Enable parser support for the __unknown_anytype type; for testing purposes only
funroll-all-loops
funroll-loops
Turn on loop unroller
funsafe-math-optimizations
funsigned-bitfields
funsigned-char
funswitch-loops
funwind-tables
fuse-cxa-atexit
fuse-init-array
Use .init_array instead of .ctors
fuse-ld=
fuse-register-sized-bitfield-access
Use register sized accesses to bit-fields, when possible.
fvectorize
Enable the loop vectorization passes
fverbose-asm
fvisibility-inlines-hidden
Give inline C++ member functions default visibility by default
fvisibility-ms-compat
Give global types 'default' visibility and global functions and variables 'hidden' visibility by default
fvisibility=
Set the default symbol visibility for all global declarations
fvisibility
Default type and symbol visibility
fwhole-file
fwrapv
Treat signed integer overflow as two's complement
fwritable-strings
Store string literals as writable data
fzero-initialized-in-bss
Add directory to framework include search path
gcc-toolchain=
Use the gcc toolchain at the given directory
gcc-toolchain
gcl-bc-bundle-identifier
bundle to load
gcl-bc-dir
Path to where to find the bitcode file
gcl-output-dir
Path to store the gcl files
gcoff
gcolumn-info
gdwarf-2
Generate source level debug information with dwarf version 2
gdwarf-3
Generate source level debug information with dwarf version 3
gdwarf-4
Generate source level debug information with dwarf version 4
Disable string pooling
gfull
ggdb0
ggdb1
ggdb2
ggdb3
ggdb
ggnu-pubnames
gline-tables-only
Emit debug line number tables only
gno-record-gcc-switches
gno-strict-dwarf
gnu-pubnames
Emit newer GNU style pubnames
Disable RTTI
grecord-gcc-switches
Enable RTTI
gsplit-dwarf
gstabs
gstrict-dwarf
gtoggle
gused
gvms
gxcoff
header-include-file
Filename (or -) to write header include output to
headerpad_max_install_names
HELP
homeparams
hotpatch
Show header includes and nesting depth
idirafter
Add directory to AFTER include search path
iframework
Add directory to SYSTEM framework search path
imacros=
imacros
Include macros from file before parsing
image_base
include-barrier
include-directory-after=
include-directory-after
include-directory=
include-directory
include-pch
Include precompiled header file
include-prefix=
include-prefix
include-pth
include-with-prefix-after=
include-with-prefix-after
include-with-prefix-before=
include-with-prefix-before
include-with-prefix=
include-with-prefix
include=
include
index-header-map
Make the next included directory (-I or -F) an indexer header map
init-only
Only execute frontend initialization
init
ino-system-prefix
Treat all #include paths starting with <prefix> as not including a system header.
<prefix>
install_name
integrated-as
internal-externc-isystem
Add directory to the internal system include search path with implicit extern "C" semantics; these are assumed to not be user-provided and are used to model system and standard headers' paths.
internal-isystem
Add directory to the internal system include search path; these are assumed to not be user-provided and are used to model system and standard headers' paths.
iprefix
Set the -iwithprefix/-iwithprefixbefore prefix
<dir>
iquote
Add directory to QUOTE include search path
isysroot
Set the system root directory (usually /)
isystem-prefix
Treat all #include paths starting with <prefix> as including a system header.
isystem
Add directory to SYSTEM include search path
iwithprefixbefore
Set directory to include search path with prefix
iwithprefix
Set directory to SYSTEM include search path with prefix
iwithsysroot
Add directory to SYSTEM include search path, absolute paths are relative to -isysroot
Make char type unsigned
keep_private_externs
kernel-
kernel
language=
language
lazy_framework
lazy_library
Create debug DLL
Create DLL
library-directory=
library-directory
link
Forward options to the linker
<options>
Load the named plugin (dynamic shared object)
<dsopath>
m3dnowa
m3dnow
mabi=
Mach
maes
maltivec
march=
marm
masm-verbose
Generate verbose assembly output
mavx2
mavx512cd
mavx512er
mavx512f
mavx512pf
mavx
mbmi2
mbmi
mcheck-zero-division
mcmodel=
mcode-model
The code model to use
mconstant-cfstrings
mconstructor-aliases
Emit complete constructors and destructors as aliases when possible
mcpu=
mcrc
Allow use of CRC instructions (ARM only)
mcx16
Use DLL debug run-time
mdebug-pass
Enable additional debug output
mdisable-fp-elim
Disable frame pointer elimination optimization
mdisable-tail-calls
Disable tail call optimization, keeping the call stack accurate
mdouble-float
mdspr2
mdsp
mdynamic-no-pic
Write a depfile containing user and system headers
Use DLL run-time
menable-no-infs
Allow optimization to assume there are no infinities.
menable-no-nans
Allow optimization to assume there are no NaNs.
menable-unsafe-fp-math
Allow unsafe floating-point math optimizations which may decrease precision
mf16c
mfix-and-continue
mfloat-abi=
mfloat-abi
The float ABI to use
mfma4
mfma
mfp32
Use 32-bit floating point registers (MIPS only)
mfp64
Use 64-bit floating point registers (MIPS only)
mfpmath=
mfpmath
Which unit to use for fp math
mfprnd
mfpu=
Write depfile output from -MMD, -MD, -MM, or -M to <file>
mglobal-merge
Add missing headers to depfile
mhard-float
mhwdiv=
mhwdiv
mieee-fp
mieee-rnd-near
migrate-xct
Apply modifications and produces temporary files to migrate to XCTest framework
migrate
Run the migrator
Migrate source code
migration-for-xct
mimplicit-float
minline-all-stringops
mios-simulator-version-min=
mios-version-min=
miphoneos-version-min=
mips16
mips32r2
Equivalent to -march=mips32r2
mips32
Equivalent to -march=mips32
mips64r2
Equivalent to -march=mips64r2
Equivalent to -march=mips64
mkernel
mldc1-sdc1
mlimit-float-precision
Limit float precision to the given value
mlink-bitcode-file
Link the given bitcode file before performing optimizations.
mlinker-version=
mlzcnt
mmacosx-version-min=
Write a depfile containing user headers
mmfcrf
mmicromips
mmmx
mms-bitfields
Set the default structure layout to be compatible with the Microsoft compiler standard
mmsa
Enable MSA ASE (MIPS only)
Like -MMD, but also implies -E and writes to stdout by default
mnan=
mno-3dnowa
mno-3dnow
mno-aes
mno-altivec
mno-avx2
mno-avx512cd
mno-avx512er
mno-avx512f
mno-avx512pf
mno-avx
mno-bmi2
mno-bmi
mno-check-zero-division
mno-constant-cfstrings
mno-dspr2
mno-dsp
mno-f16c
mno-fma4
mno-fma
mno-fprnd
mno-global-merge
Disable merging of globals
mno-implicit-float
Don't generate implicit floating point instructions
mno-inline-all-stringops
mno-ldc1-sdc1
mno-lzcnt
mno-mfcrf
mno-micromips
mno-mips16
mno-mmx
mno-msa
Disable MSA ASE (MIPS only)
mno-omit-leaf-frame-pointer
mno-pascal-strings
mno-pclmul
mno-popcntd
mno-popcnt
mno-prfchw
mno-qpx
mno-rdrnd
mno-rdseed
mno-red-zone
mno-relax-all
mno-restrict-it
Allow generation of deprecated IT blocks for ARMv8. It is off by default for ARMv8 Thumb mode
mno-rtd
mno-rtm
mno-sha
mno-soft-float
mno-sse2
mno-sse3
mno-sse4.1
mno-sse4.2
mno-sse4a
mno-sse4
mno-sse
mno-ssse3
mno-stackrealign
mno-tbm
mno-thumb
mno-unaligned-access
Force all memory accesses to be aligned (ARM only)
mno-vsx
mno-warn-nonportable-cfstrings
mno-xgot
mno-xop
mno-zero-initialized-in-bss
Do not put zero initialized data in the BSS
mnocrc
Disallow use of CRC instructions (ARM only)
module-file-info
momit-leaf-frame-pointer
Omit frame pointer setup for leaf functions
moslib=
mpascal-strings
mpclmul
mpopcntd
mpopcnt
mprfchw
Create phony target for each dependency (other than main file)
mqdsp6-compat
Enable hexagon-qdsp6 backward compatibility
mqpx
Specify name of main file output to quote in depfile
mrdrnd
mrdseed
mred-zone
mregparm=
mregparm
Limit the number of registers available for integer arguments
(integrated-as) Relax all machine instructions
mrelocation-model
The relocation model to use
mrestrict-it
Disallow generation of deprecated IT blocks for ARMv8. It is on by default for ARMv8 Thumb mode.
mrtd
Make StdCall calling convention the default
mrtm
(integrated-as) Save temporary labels
msha
msingle-float
msmall-data-threshold=
msoft-float
Use software floating point
msse2
msse3
msse4.1
msse4.2
msse4a
msse4
msse
mssse3
mstack-alignment=
Set the stack alignment
mstackrealign
Force realign the stack at entry to every function
mstrict-align
Force all memory accesses to be aligned (ARM only, same as mno-unaligned-access)
mt-migrate-directory
Directory for temporary files produced during ARC or ObjC migration
mtbm
Use static debug run-time
mthumb
mtune=
Specify name of main file output in depfile
Use static run-time
multi_module
multiply_defined_unused
multiply_defined
munaligned-access
Allow memory accesses to be unaligned (ARM only)
munwind-tables
Generate unwinding tables for all functions
mvsx
mwarn-nonportable-cfstrings
mxgot
mxop
Like -MD, but also implies -E and writes to stdout by default
no-canonical-prefixes
Use relative instead of canonical paths
no-code-completion-globals
Do not include global declarations in code-completion results.
no-cpp-precomp
no-finalize-removal
Do not remove finalize method in gc mode
no-implicit-float
no-integrated-as
no-integrated-cpp
no-line-commands
no-ns-alloc-error
Do not error on use of NSAllocateCollectable/NSReallocateCollectable
no-pedantic
no-standard-includes
no-standard-libraries
no-struct-path-tbaa
Turn off struct-path aware Type Based Alias Analysis
no-undefined
no-warnings
no_dead_strip_inits_and_terms
nobuiltininc
Disable builtin #include directories
nocpp
nodefaultlibs
nofixprebinding
nolibc
nologo
nomultidefs
nopie
noprebind
noseglinkedit
nostartfiles
nostdinc++
Disable standard #include directories for the C++ standard library
nostdinc
nostdlibinc
nostdlib
nostdsysteminc
Disable standard system #include directories
Disable inlining
ObjC++
Treat source input files as Objective-C++ inputs
objc-isystem
Add directory to the ObjC SYSTEM include search path
objcmt-atomic-property
Make migration to 'atomic' properties
objcmt-migrate-all
Enable migration to modern ObjC
objcmt-migrate-annotation
Enable migration to property and method annotations
objcmt-migrate-designated-init
Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods
objcmt-migrate-instancetype
Enable migration to infer instancetype for method result type
objcmt-migrate-literals
Enable migration to modern ObjC literals
objcmt-migrate-ns-macros
Enable migration to NS_ENUM/NS_OPTIONS macros
objcmt-migrate-property
Enable migration to modern ObjC property
objcmt-migrate-protocol-conformance
Enable migration to add protocol conformance on classes
objcmt-migrate-readonly-property
Enable migration to modern ObjC readonly property
objcmt-migrate-readwrite-property
Enable migration to modern ObjC readwrite property
objcmt-migrate-subscripting
Enable migration to modern ObjC subscripting
objcmt-ns-nonatomic-iosonly
Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property's 'atomic' attribute
objcmt-returns-innerpointer-property
Enable migration to annotate property with NS_RETURNS_INNER_POINTER
objcmt-white-list-dir-path=
objcmt-whitelist-dir-path=
Only modify files with a filename contained in the provided directory path
objcxx-isystem
Add directory to the ObjC++ SYSTEM include search path
ObjC
Treat source input files as Objective-C inputs
Disable optimization
Ofast
Disable use of builtin functions
Enable use of builtin functions
openmp
optimize=
optimize
Optimize for size
Optimize for speed
output-class-directory=
output-class-directory
output=
Maximum optimization
Disable frame pointer omission
Enable frame pointer omission
Optimization level
Write output to <file>
pagezero_size
param=
param
pass-exit-codes
pedantic-errors
pedantic
Enable mcount instrumentation
pic-level
Value for __PIC__
pie-level
Value for __PIE__
pipe
Use pipes between commands, when possible
plugin-arg-
Pass <arg> to plugin <name>
<name> <arg>
plugin
Use the named plugin action instead of the default action (use "help" to list available options)
preamble-bytes=
Assume that the precompiled header is a precompiled preamble covering the first N bytes of the main file
prebind_all_twolevel_modules
prebind
prefix=
prefix
preload
preprocess
print-decl-contexts
Print DeclContexts and their Decls
print-diagnostic-categories
print-file-name=
Print the full library path of <file>
print-file-name
print-ivar-layout
Enable Objective-C Ivar layout bitmap print trace
print-libgcc-file-name
Print the library path for "libgcc.a"
print-missing-file-dependencies
print-multi-directory
print-multi-lib
print-multi-os-directory
print-preamble
Print the "preamble" of a file, which is a candidate for implicit precompiled headers.
print-prog-name=
Print the full program path of <name>
print-prog-name
print-search-dirs
Print the paths used for finding libraries and programs
print-stats
Print performance metrics and statistics
private_bundle
profile-blocks
profile
pthreads
pthread
Support POSIX threads in generated code
Disable linemarker output in -E mode
Preprocess to file
Qfast_transcendentals
QIfist
Qimprecise_fwaits
Qpar
Qunused-arguments
Don't emit warning for unused driver arguments
Qvec-report
rdynamic
read_only_relocs
relaxed-aliasing
Turn off Type Based Alias Analysis
relocatable-pch
Whether to build a relocatable precompiled header
remap-file
Replace the contents of the <from> file with the contents of the <to> file
<from>;<to>
remap
resource-dir=
resource-dir
The directory which holds the compiler resource files
resource=
resource
rewrite-legacy-objc
Rewrite Legacy Objective-C source to C++
rewrite-macros
Expand macros without full preprocessing
rewrite-objc
Rewrite Objective-C source to C++
rewrite-test
Rewriter playground
rpath
rtlib=
rtlib
save-temps
Save intermediate compilation results
sdl-
sectalign
sectcreate
sectobjectsymbols
sectorder
seg1addr
seg_addr_table_filename
seg_addr_table
segaddr
segcreate
seglinkedit
segprot
segs_read_only_addr
segs_read_write_addr
segs_read_
serialize-diagnostic-file
File for serializing diagnostics in a binary format
<filename>
serialize-diagnostics
Serialize compiler diagnostics to a file
shared-libgcc
shared
show-includes
Print cl.exe style /showIncludes to stderr
showIncludes
Print info about included files to stderr
signed-char
single_module
specs=
specs
split-dwarf-file
File name to use for split dwarf debug info output
split-dwarf
Split out the dwarf .dwo sections
split-stacks
Try to use a split stack if possible.
stack-protector-buffer-size
Lower bound for a buffer to be considered for stack protection
stack-protector
Enable stack protectors
static-define
Should __STATIC__ be defined
static-libgcc
static-libgfortran
static-libstdc++
static
std-default=
std=
Language standard to compile for
stdlib=
C++ standard library to use
stdlib
sub_library
sub_umbrella
sys-header-deps
Include system headers in dependency output
sysroot=
sysroot
Only run preprocess and compilation steps
target-abi
Target a particular ABI type
target-help
target-linker-version
Target linker version
target=
Generate code for the given target
Tbss
Treat all source files as C
Specify a C source file
Tdata
test-coverage
Do not generate coverage files or remove coverage changes from IR
time
Time individual commands
token-cache
Use specified token cache file
Treat all source files as C++
Specify a C++ source file
trace-includes
traditional-cpp
Enable some traditional CPP emulation
traditional
trigraphs
Process trigraph sequences
trim-egraph
Only show error-related paths in the analysis graph
triple=
Specify target triple (e.g. i686-apple-darwin9)
Ttext
twolevel_namespace_hints
twolevel_namespace
umbrella
undefine-macro=
undefine-macro
undef all system defines
unexported_symbols_list
unoptimized-cfg
Generate unoptimized CFGs for all analyses
unsigned-char
user-dependencies
Undefine macro
<macro>
vectorize-loops
Run the Loop vectorization passes
vectorize-slp-aggressive
Run the BB vectorization passes
vectorize-slp
Run the SLP vectorization passes
verbose
verify-debug-info
Verify the binary representation of debug output
verify-pch
Load and verify that a pre-compiled header file is not stale
verify
Verify diagnostic output using comment directives
Print the compiler version
via-file-asm
Write assembly to file for input to assemble jobs
volatile
Show commands to run and use verbose output
Disable all warnings
Enable -Wall
Pass the comma separated arguments in <arg> to the assembler
Wall
warn-=
warn-
Wdeprecated
weak-l
weak_framework
weak_library
weak_reference_mismatches
Wextra
Wframe-larger-than=
Wframe-larger-than
whatsloaded
whyload
Pass the comma separated arguments in <arg> to the linker
Wlarge-by-value-copy=
Wlarge-by-value-copy
Warn if a function definition returns or accepts an object larger in bytes than a given value
Wlarger-than-
Wlarger-than=
Wlarger-than
Wno-deprecated
Wno-nonportable-cfstrings
Wno-rewrite-macros
Silence ObjC rewriting warnings
Wno-write-strings
Wnonportable-cfstrings
working-directory=
working-directory
Resolve file paths relative to the specified directory
Pass the comma separated arguments in <arg> to the preprocessor
Wp64
write-dependencies
write-user-dependencies
Wwrite-strings
Do not treat warnings as errors
Treat warnings as errors
Enable the specified warning
<warning>
Suppress all warnings
Xanalyzer
Pass <arg> to the static analyzer
Xarch_
Xassembler
Pass <arg> to the assembler
Xclang
Pass <arg> to the clang compiler
Xlinker
Pass <arg> to the linker
Xpreprocessor
Pass <arg> to the preprocessor
Treat subsequent input files as having type <language>
<language>
Z-reserved-lib-cckext
Z-reserved-lib-stdc++
Z-Xlinker-no-demangle
Zc:forScope
Zc:wchar_t
Zlinker-input
Syntax-check only
-idirafter
-include
-internal-isystem
-internal-externc-isystem
-iprefix
-iwithprefix
-iwithprefixbefore
-isystem
-iquote
compiler-rt
libgcc
-lcc_kext
crtfastmath.o
clang frontend
clang::as
clang integrated assembler
/../../../Developer/usr/bin
-Wdeprecated-objc-isa-usage
-Werror=deprecated-objc-isa-usage
-Werror=implicit-function-declaration
-force_load
libarclite_
iphonesimulator
iphoneos
macho_embedded
libclang_rt.profile_ios.a
libclang_rt.profile_osx.a
-fsanitize=undefined
libclang_rt.ubsan_osx.a
-fsanitize=address
libclang_rt.asan_osx_dynamic.dylib
libclang_rt.asan_iossim_dynamic.dylib
-lSystem
-lgcc_s.1
libclang_rt.ios.a
-lgcc_s.10.4
-lgcc_s.10.5
libclang_rt.10.4.a
libclang_rt.eprintf.a
libclang_rt.osx.a
SDKROOT
MACOSX_DEPLOYMENT_TARGET
IPHONEOS_DEPLOYMENT_TARGET
IOS_SIMULATOR_DEPLOYMENT_TARGET
SDKs/iPhoneOS
armv7k
armv7s
armv6m
armv7m
armv7em
-lc++
libstdc++.dylib
libstdc++.6.dylib
/usr/lib/libstdc++.dylib
/usr/lib/libstdc++.6.dylib
-lstdc++
libclang_rt.cc_kext.a
libclang_rt.cc_kext_ios5.a
ppc601
ppc603
ppc604
ppc604e
ppc750
ppc7400
ppc7450
ppc970
pentpro
pentIIm3
armv5tej
armv6k
armv7a
libclang_rt.
hard
soft
_pic.a
_static.a
iOS 5.0
OS X 10.7
RC_DEBUG_OPTIONS
thumbv7k
-ios_simulator_version_min
-iphoneos_version_min
-macosx_version_min
-ldylib1.o
-ldylib1.10.5.o
-lbundle1.o
-lgcrt0.o
-lgcrt1.o
-no_new_main
-lcrt0.o
-lcrt1.o
-lcrt1.3.1.o
-lcrt1.10.5.o
-lcrt1.10.6.o
crt3.o
/usr
0.0.0
Found candidate GCC installation: 
Selected GCC installation: 
/lib
aarch64-none-linux-gnu
aarch64-linux-gnu
arm-linux-gnueabi
arm-linux-androideabi
arm-linux-gnueabihf
armv7hl-redhat-linux-gnueabi
/lib64
x86_64-linux-gnu
x86_64-unknown-linux-gnu
x86_64-pc-linux-gnu
x86_64-redhat-linux6E
x86_64-redhat-linux
x86_64-suse-linux
x86_64-manbo-linux-gnu
x86_64-slackware-linux
/lib32
i686-linux-gnu
i686-pc-linux-gnu
i486-linux-gnu
i386-linux-gnu
i386-redhat-linux6E
i686-redhat-linux
i586-redhat-linux
i386-redhat-linux
i586-suse-linux
i486-slackware-linux
i686-montavista-linux
i686-linux-android
mips-linux-gnu
mips-mti-linux-gnu
mipsel-linux-gnu
mipsel-linux-android
mips64-linux-gnu
mips64el-linux-gnu
powerpc-linux-gnu
powerpc-unknown-linux-gnu
powerpc-linux-gnuspe
powerpc-suse-linux
powerpc-montavista-linuxspe
powerpc64-linux-gnu
powerpc64-unknown-linux-gnu
powerpc64-suse-linux
ppc64-redhat-linux
powerpc64le-linux-gnu
powerpc64le-unknown-linux-gnu
powerpc64le-suse-linux
ppc64le-redhat-linux
sparc-linux-gnu
sparcv8-linux-gnu
sparc64-linux-gnu
sparcv9-linux-gnu
s390x-linux-gnu
s390x-unknown-linux-gnu
s390x-ibm-linux-gnu
s390x-suse-linux
s390x-redhat-linux
/micromips
/mips32
/mips16
/mips64r2
/mips64r2/64
/mips64
/mips64/64
/sof
/fp64
/nan2008
/soft-float
/gcc/
/gcc-cross/
/i386-linux-gnu/gcc/
/../../..
/../../../..
/../..
-fuse-init-array
/../../gnu
/Library/Caches/com.apple.xbs/Sources/GPUCompiler_host/GPUCompiler_host-600.0.48.25/llvm-src/dst
/../gnu
/bin
/lib/gcc/hexagon
/lib/gcc/hexagon/
/include
/include-fixed
/hexagon/include
hexagon/include/c++/
/../libexec
/../lib
/usr/lib
/usr/include/c++/
/usr/include/c++/stdc++
/usr/include/c++/stdc++/backward
/usr/include/c++/stdc++/x86_64
/usr/include/c++/stdc++/
-lcxxrt
-lgcc
/usr/lib32/crt1.o
/usr/lib32
/usr/include/c++/v1
/usr/include/c++/4.2
/usr/include/c++/4.2/backward
=/usr/lib/i386
=/usr/lib
/usr/include/g++
/usr/include/g++/backward
/usr/sfw/lib
/opt/gcc4/lib
/opt/gcc4/lib/gcc/i386-pc-solaris2.11/4.2.4
/../
relro
--sysroot=
--hash-style=gnu
--hash-style=both
--no-add-needed
--build-id
--enable-new-dtags
/mips-r2
/lib/../
/../lib/
/lib/
/usr/lib/
/usr/lib/../
/../../
/../../../../
/libc
/../../../../sysroot
/usr/local/include
/libc/usr/include
/../../../../sysroot/usr/include
/usr/include/x86_64-linux-gnu
/usr/include/i686-linux-gnu/64
/usr/include/i486-linux-gnu/64
/usr/include/i386-linux-gnu
/usr/include/x86_64-linux-gnu/32
/usr/include/i686-linux-gnu
/usr/include/i486-linux-gnu
/usr/include/aarch64-linux-gnu
/usr/include/arm-linux-gnueabi
/usr/include/arm-linux-gnueabihf
/usr/include/mips-linux-gnu
/usr/include/mipsel-linux-gnu
/usr/include/powerpc-linux-gnu
/usr/include/powerpc64-linux-gnu
/usr/include
/backward
/../include/c++/v1
/../include
/c++/
/include/g++-v
/include/c++/
/../include/c++
/usr/lib/gcc47
/usr/lib/gcc44
XCC_C_INCLUDE_PATH
-nostdsysteminc
XCC_CPLUS_INCLUDE_PATH
armv7-a
armv7r
armv7-r
armv7e-m
armv7-k
armv7-m
armv7-s
arm1026ej-s
darwin::Lipo
lipo
darwin::Dsymutil
dsymutil
darwin::VerifyDebug
dwarfdump
darwin::Link
linker
darwin::Assemble
assembler
2008
/crtbegin.o
/n32
gcc::Preprocess
gcc preprocessor
gcc::Compile
gcc frontend
GNU::Assemble
gcc::Link
linker (via gcc)
lib/gcc/hexagon/
lib/gcc
hexagon/lib
hexagon::Assemble
hexagon-as
hexagon::Link
hexagon-ld
hexagonv
openbsd::Assemble
openbsd::Link
bitrig::Assemble
bitrig::Link
freebsd::Assemble
freebsd::Link
netbsd::Assemble
netbsd::Link
minix::Assemble
minix::Link
auroraux::Assemble
auroraux::Link
solaris::Assemble
solaris::Link
/etc/lsb-release
DISTRIB_CODENAME=
hardy
intrepid
jaunty
karmic
lucid
maverick
natty
oneiric
precise
quantal
raring
saucy
trusty
/etc/redhat-release
Fedora release
Red Hat Enterprise Linux
release 6
CentOS
release 5
release 4
/etc/debian_version
squeeze/sid
wheezy/sid
jessie/sid
/etc/SuSE-release
/etc/exherbo-release
/etc/arch-release
lib32
lib64
/lib/arm-linux-gnueabihf
/lib/arm-linux-gnueabi
/lib/i386-linux-gnu
/lib/x86_64-linux-gnu
/lib/aarch64-linux-gnu
/lib/mips-linux-gnu
/lib/mipsel-linux-gnu
/lib/powerpc-linux-gnuspe
/lib/powerpc-linux-gnu
/lib/powerpc64-linux-gnu
/lib/powerpc64le-linux-gnu
GNU::Link
dragonfly::Assemble
dragonfly::Link
XCore::Assemble
XCore-as
XCore::Link
XCore-ld
-dependency-format
-dependency-file
-sys-header-deps
.dummy
-include-pch
-include-pth
-isysroot
CPATH
-c-isystem
C_INCLUDE_PATH
-cxx-isystem
CPLUS_INCLUDE_PATH
-objc-isystem
OBJC_INCLUDE_PATH
-objcxx-isystem
OBJCPLUS_INCLUDE_PATH
softfp
cortex-m
-target-abi
-msoft-float
-mfloat-abi
-backend-option
-arm-long-calls
-arm-strict-align
-arm-use-movt=0
-mno-global-merge
-no-implicit-float
-arm-reserve-r9
-disable-red-zone
-target-cpu
-arm64-strict-align
-mllvm
-mxgot
-mno-ldc1-sdc1
-mno-check-zero-division
-mips-ssection-threshold=
-mhard-float
-fno-signed-char
-mqdsp6-compat
-Wreturn-type
-hexagon-small-data-threshold=
-fshort-enums
-enable-hexagon-ieee-rnd-near
-machine-sink-split=0
-triple
-analyze
-migrate
-Eonly
-emit-obj
-fsyntax-only
-emit-pch
-emit-pth
-verify-pch
-emit-gcl
-emit-llvm
-emit-llvm-bc
-module-file-info
-rewrite-objc
-disable-free
-disable-llvm-verifier
-main-file-name
-static-define
-analyzer-store=region
-analyzer-opt-analyze-nested-blocks
-analyzer-eagerly-assume
-analyzer-checker=core
-analyzer-checker=unix
-analyzer-checker=osx
-analyzer-checker=deadcode
-analyzer-checker=cplusplus
-analyzer-checker=security.insecureAPI.UncheckedReturn
-analyzer-checker=security.insecureAPI.getpw
-analyzer-checker=security.insecureAPI.gets
-analyzer-checker=security.insecureAPI.mktemp
-analyzer-checker=security.insecureAPI.mkstemp
-analyzer-checker=security.insecureAPI.vfork
-analyzer-output
-mrelocation-model
dynamic-no-pic
-pic-level
-pie-level
-fno-merge-all-constants
-mregparm
-fpcc-struct-return
-freg-struct-return
-mrtd
-mdisable-fp-elim
-mno-zero-initialized-in-bss
-relaxed-aliasing
-no-struct-path-tbaa
-fstrict-enums
-mdisable-tail-calls
-split-stacks
-menable-no-infs
-menable-no-nans
-fmath-errno
-menable-unsafe-fp-math
-ffp-contract=
-ffp-contract=fast
-fno-fast-math
-ffast-math
-ffinite-math-only
-masm-verbose
-mdebug-pass
-mconstructor-aliases
-fforbid-guard-variables
-mms-bitfields
-munwind-tables
-mlimit-float-precision
-mcode-model
-cl-binary
-mfpmath
-target-linker-version
-momit-leaf-frame-pointer
-header-include-file
-diagnostic-log-file
-gline-tables-only
-gdwarf-2
-gdwarf-3
-gdwarf-4
-dwarf-column-info
-split-dwarf=Enable
-generate-gnu-dwarf-pub-sections
-generate-type-units
-fprofile-instr-generate
-fprofile-instr-use
-fprofile-instr-use=pgo-data
-femit-coverage-notes
-femit-coverage-data
-coverage-file
-nobuiltininc
-resource-dir
-arcmt-check
-arcmt-modify
-arcmt-migrate
-mt-migrate-directory
-ccc-arcmt-migrate
-objcmt-migrate-literals
-objcmt-migrate-subscripting
-objcmt-migrate-property
-migration-for-xct
-pedantic
-Wmtl-shader-return-type
-Werror=mtl-shader-return-type
-std=c++98
-std=c89
-std=
-std=c++11
-fconst-strings
-fdeprecated-macro
-fgnu-keywords
-fno-gnu-keywords
-fno-dwarf2-cfi-asm
-fno-dwarf-directory-asm
-fno-autolink
-ftemplate-depth
-foperator-arrow-depth
-fconstexpr-depth
-fconstexpr-steps
-fbracket-depth
-Wlarge-by-value-copy=
-Wlarge-by-value-copy=64
-relocatable-pch
-fconstant-string-class
-ftabstop
-ferror-limit
-fmacro-backtrace-limit
-ftemplate-backtrace-limit
-fconstexpr-backtrace-limit
-fmessage-length
-fvisibility
-ftype-visibility
-ffreestanding
-fno-sanitize-recover
-fsanitize-undefined-trap-on-error
ppc/ppc64/ppc64le
-fno-lax-vector-conversions
-fapple-kext
-frewrite-includes
-ftrapv-handler
-fwrapv
-freroll-loops
-stack-protector
ssp-buffer-size=
-stack-protector-buffer-size
-force-align-stack
-mstackrealign
-mstack-alignment=
-arm-no-strict-align
-arm-restrict-it
-arm-no-restrict-it
-fno-builtin
-fno-assume-sane-operator-new
-fblocks
-fblocks-runtime-optional
-fmodules
-fmodule-maps
-fmodules-decluse
org.llvm.clang
ModuleCache
-fno-access-control
-fno-elide-constructors
-fno-rtti
-fsanitize=vptr
-fno-threadsafe-statics
-fno-use-cxa-atexit
-fms-extensions
-fms-compatibility
-fmsc-version=1700
-fmsc-version=
-fborland-extensions
-fdelayed-template-parsing
-fgnu89-inline
-fno-inline
-fno-inline-functions
-fobjc-dispatch-method=mixed
-fobjc-dispatch-method=non-legacy
-fobjc-subscripting-legacy-runtime
-fencode-extended-block-signature
-fobjc-arc
-fobjc-arc-cxxlib=libc++
-fobjc-arc-cxxlib=libstdc++
-fobjc-arc-exceptions
-fno-objc-infer-related-result-type
-fsjlj-exceptions
-fno-constant-cfstrings
-fpascal-strings
-fpack-struct=
-fpack-struct=1
-fno-common
-fno-caret-diagnostics
-fno-diagnostics-fixit-info
-fdiagnostics-show-option
-fdiagnostics-show-category
-fdiagnostics-format
-fdiagnostics-show-note-include-stack
-fno-diagnostics-show-note-include-stack
always
never
-fdiagnostics-color=
-fcolor-diagnostics
-fansi-escape-codes
-fno-show-source-location
-fno-show-column
-fno-spell-checking
-fasm-blocks
-vectorize-loops
-vectorize-slp
-vectorize-slp-aggressive
-fdollars-in-identifiers
-fno-dollars-in-identifiers
-fapple-pragma-pack
-fno-math-builtin
-traditional-cpp
-serialize-diagnostic-file
-fretain-comments-from-system-headers
-disable-llvm-optzns
-dwarf-debug-flags
-split-dwarf-file
-fomit-frame-pointer
-fobjc-runtime=
-D_DEBUG
-D_MT
-D_DLL
--dependent-lib=msvcrt
--dependent-lib=msvcrtd
--dependent-lib=libcmt
--dependent-lib=libcmtd
--dependent-lib=oldnames
-cc1as
-filetype
-dwarf-debug-producer
-arch
-m32
-m64
-march=
-shared
-call_shared
-static
-pie
standalone
/crt0_standalone.o
/crt0.o
/initS.o
/init.o
--start-group
--end-group
/finiS.o
/fini.o
native
armv2
armv2a
arm2
armv3
arm6
armv3m
arm7m
armv4
armv5t
thumbv5t
armv5te
thumbv5te
thumbv5tej
thumbv6k
armv6j
thumbv6j
armv6z
armv6zk
thumbv6z
thumbv6zk
armv6t2
thumbv6t2
armv6-m
thumbv6m
thumbv7a
armv7l
armv7-l
thumbv7r
thumbv7m
thumbv7em
thumbv7e-m
armv8-a
v6t2
v7em
i486SX
pentIIm5
--gstabs
-force_cpusubtype_ALL
-demangle
-export_dynamic
-object_path_lto
-dynamic
-dynamiclib
-dylib
-dylib_compatibility_version
-dylib_current_version
-dylib_install_name
-no_pie
-syslibroot
touch
-ObjC
-lgomp
-framework
Foundation
-lobjc
-arch_multiple
-final_output
-allow_stack_execute
-create
-output
--verify
--debug-info
--eh-frame
--quiet
/usr/gcc/4.5/lib/gcc/
i386-
/4.5.2/
/4.5.2/amd64/
amd64/
_start
-Bstatic
-Bdynamic
--dynamic-linker
ld.so.1
crt1.o
crti.o
values-Xa.o
crtbegin.o
cxa_finalize.o
-lgcc_s
crtend.o
crtn.o
/lib/ld.so.1
-L/opt/gcc4/lib/gcc/
/4.2.4
-pthread
--32
-mppc
-many
-mabi
-KPIC
__start
-export-dynamic
--eh-frame-hdr
-dynamic-linker
/usr/libexec/ld.so
-nopie
gcrt0.o
crt0.o
crtbeginS.o
-L/usr/lib/gcc-lib/
/4.2.1
-lm_p
-lpthread_p
-lpthread
-lc_p
crtendS.o
-lclang_rt.
-a32
-march
-mfpu=softvfp
-meabi=5
-matpcs
-Bshareable
/libexec/ld-elf.so.1
elf_i386_fbsd
elf32ppc_fbsd
gcrt1.o
Scrt1.o
crtbeginT.o
-lgcc_p
-lgcc_eh
-lgcc_eh_p
--as-needed
--no-as-needed
-mcpu=
/libexec/ld.elf_so
elf_i386
--64
-a64
-mppc64
-mppc64le
-Av8plusa
-Av9a
-mfpu=neon
-mfpu=crypto-neon-fp-armv8
-mfloat-abi=
-march=armv7-a
-mnan=2008
-mmsa
aarch64linux
armelf_linux_eabi
elf32ppclinux
elf64ppc
elf32_sparc
elf64_sparc
elf32btsmip
elf32ltsmip
elf32btsmipn32
elf64btsmip
elf32ltsmipn32
elf64ltsmip
elf64_s390
elf_x86_64
-Bsymbolic
crtbegin_static.o
crtbegin_so.o
crtbegin_dynamic.o
-lrt
crtend_so.o
crtend_android.o
-lCompilerRT-Generic
-L/usr/pkg/compiler-rt/lib
/usr/libexec/ld-elf.so.2
-L/usr/lib/gcc47
-L/usr/lib/gcc44
-rpath
-lgcc_pic
-out:
-defaultlib:libcmt
-nologo
-dll
-implib:
-debug
-incremental:no
windows
clang_rt.asan_dll_thunk-i386.lib
clang_rt.asan-i386.lib
link.exe
/nologo
/GR-
-mrelax-all
-msave-temp-labels
--fatal-warnings
-fatal-assembler-warnings
--noexecstack
-mnoexecstack
-compress-debug-sections
440fp
-target-feature
single-float
micromips
dspr2
-neon
-crc
fpe2
fpe3
-vfp2
-vfp3
vfp3-d16
vfpv3-d16
+d16
vfpv3
vfp4-d16
vfpv4-d16
vfpv4
-crypto
neon-fp-armv8
crypto-neon-fp-armv8
-vfp4
-fp-armv8
-hwdiv
-hwdiv-arm
arm,thumb
thumb,arm
mfcrf
mfocrf
-rdrnd
-aes
-pclmul
-rtm
-hle
-fsgsbase
-fdebug-compilation-dir
-fobjc-exceptions
-fcxx-exceptions
-fexceptions
visualstudio::Compile
--extract-dwo
--strip-dwo
objcopy
LIBRARY_PATH
/../lib/libprofile_rt.a
-plugin
/../lib/LLVMgold.so
-plugin-opt=mcpu=
/system/bin/linker
/lib/ld-linux.so.2
/lib/ld-linux-aarch64.so.1
/lib/ld-linux-armhf.so.3
/lib/ld-linux.so.3
/lib32/ld.so.1
/lib64/ld.so.1
/lib64/ld64.so.1
/lib64/ld-linux.so.2
/lib64/ld-linux-x86-64.so.2
ubsan
ubsan_cxx
-whole-archive
-no-whole-archive
-ldl
.syms
--dynamic-list=
libclang_rt.asan-
-android.so
asan
tsan
msan
lsan
dfsan
libclang_rt.profile-
c-header-cpp-output
objective-c-header-cpp-output
c++-header-cpp-output
objective-c++-header-cpp-output
f95-cpp-input
java
lto-ir
lto-bc
rewritten-objc
rewritten-legacy-objc
precompiled-header
treelang
image
dSYM
C:/Program Files/Microsoft Visual Studio 10.0/VC/include
C:/Program Files/Microsoft Visual Studio 9.0/VC/include
C:/Program Files/Microsoft Visual Studio 9.0/VC/PlatformSDK/Include
C:/Program Files/Microsoft Visual Studio 8/VC/include
C:/Program Files/Microsoft Visual Studio 8/VC/PlatformSDK/Include
visualstudio::Link
NSMapTable
NSLocale
] = 
converting to boxing syntax requires casting %0 to %1
NSUTF8StringEncoding
NSASCIIStringEncoding
Not a DeclContext
Dumping 
Printing 
[translation unit] 
[namespace] 
[enum] 
<enum> 
[struct] 
<struct> 
[class] 
<class> 
[objc method]
[objc interface]
[objc category]
[objc protocol]
[objc implementation]
[objc categoryimpl]
[linkage spec]
[block]
[function] 
<function> 
[c++ method] 
(c++ method) 
<c++ method> 
[c++ ctor] 
(c++ ctor) 
<c++ ctor> 
[c++ dtor] 
(c++ dtor) 
<c++ dtor> 
[c++ conversion] 
(c++ conversion) 
<c++ conversion> 
<IndirectField> 
<Label> 
<field> 
<typedef> 
<enum constant> 
<var> 
<implicit parameter> 
<parameter> 
<objc property> 
<function template> 
<file-scope asm>
<using directive>
<namespace alias> 
<class template> 
<omp threadprivate> 
DeclKind: 
LIBCLANG_TIMING
LIBCLANG_OBJTRACKING
+++ %d translation units
--- %d translation units
Cache global code completions for 
LIBCLANG_DISABLE_PCH_VALIDATION
Precompiling preamble
Parsing 
Reparsing 
Code completion @ 
CINDEXTEST_PREAMBLE_FILE
preamble
.pch
.pch-final
Clang front-end timer
-%%%%%%%%
local
enable_objc_gc
clang -cc1 version 6.0.0
 based upon 
LLVM 3.5svn
 default target 
 warning
 and 
 error
 generated.
 -> 
mtl-shader-return-type
modules.timestamp
.pcm
modules.idx
__inferred_module.map
best
name
msvc
msvc-fallback
System
Library
CoreServices
SystemVersion.plist
region
range
html
plist
plist-multi-file
plist-html
text
statement
block
noredundancy
Xcode
Makefile
ARC migration
ObjC migration
objective-c
objective-c++
cpp-output
assembler-with-cpp
c++-cpp-output
objective-c-cpp-output
objc-cpp-output
objective-c++-cpp-output
objc++-cpp-output
c-header
cl-header
objective-c-header
c++-header
objective-c++-header
metal
metal-header
legacy
non-legacy
mixed
global-dynamic
local-dynamic
initial-exec
local-exec
fast
libc++
iso9899:1990
iso9899:199409
gnu89
gnu90
iso9899:1999
iso9899:199x
gnu99
gnu9x
iso9899:2011
gnu11
gnu1x
c++98
c++03
gnu++98
c++0x
c++11
gnu++0x
gnu++11
c++1y
gnu++1y
CL1.1
CL1.2
ios-metal1.0
ios-metal1.1
osx-metal1.0
osx-metal1.1
osx-metal1.2
C/ObjC
C++/ObjC++
OpenCL
CUDA
Metal
target
-faddress-space-map-mangling=
address
init-order
use-after-return
use-after-scope
memory
thread
leak
alignment
array-bounds
bool
enum
float-cast-overflow
float-divide-by-zero
integer-divide-by-zero
object-size
return
shift
signed-integer-overflow
unreachable
vla-bound
vptr
unsigned-integer-overflow
dataflow
local-bounds
-fsanitize=
default
hidden
protected
altivec.h
libstdc++
<clang>
digraph "dependencies" {
 [ shape="box", label="
header_
(skipping 
 expansions in backtrace; use -fmacro-backtrace-limit=0 to see all)
expanded from here
expanded from macro '
in file included from 
in module '
while building module '
STATISTICS FOR '
PCH DECL: 
%0 was deserialized
Information for module file '
PTH requires a seekable file for output!
#import "
.hpp
<module-includes>
Generated by 
a different
 Clang: 
Language options:
Target options:
  Triple: 
  CPU: 
  ABI: 
  Linker version: 
Target features:
Header search options:
System root [-isysroot=]: '
Use builtin include directories [-nobuiltininc]
Use standard system include directories [-nostdinc]
Use standard C++ include directories [-nostdinc++]
Use libc++ (rather than libstdc++) [-stdlib=]
Preprocessor options:
Uses compiler/target-specific predefines [-undef]
Uses detailed preprocessing record (for indexing)
Predefined macros:
Note: including file:
ignoring nonexistent directory "
/usr/include/c++/v1/support/solaris
/System/Library/Frameworks
/Library/Frameworks
/include/metal
/usr/include/c++/4.2.1
powerpc-apple-darwin10
/usr/include/c++/4.0.0
i686-apple-darwin10
i686-apple-darwin8
arm-apple-darwin10
arm64-apple-darwin10
/usr/lib/gcc
i686-pc-cygwin
4.7.3
4.5.3
4.3.4
4.3.2
4.7.0
4.7.1
4.7.2
4.8.0
4.8.1
4.8.2
/usr/include/c++/4.7
/usr/include/c++/4.4
/usr/gnu/include/c++/4.4.3
/usr/gcc/4.5/include/c++/4.5.2/
i386-pc-solaris2.11
/opt/gcc4/include/c++/4.2.4
/include/c++
/include/c++/backward
/../../../include/c++/
/x86_64-w64-mingw32
/i686-w64-mingw32
include/metal
/boot/common/include
/boot/develop/headers/os
/boot/develop/headers/os/app
/boot/develop/headers/os/arch
/boot/develop/headers/os/device
/boot/develop/headers/os/drivers
/boot/develop/headers/os/game
/boot/develop/headers/os/interface
/boot/develop/headers/os/kernel
/boot/develop/headers/os/locale
/boot/develop/headers/os/mail
/boot/develop/headers/os/media
/boot/develop/headers/os/midi
/boot/develop/headers/os/midi2
/boot/develop/headers/os/net
/boot/develop/headers/os/storage
/boot/develop/headers/os/support
/boot/develop/headers/os/translation
/boot/develop/headers/os/add-ons/graphics
/boot/develop/headers/os/add-ons/input_server
/boot/develop/headers/os/add-ons/screen_saver
/boot/develop/headers/os/add-ons/tracker
/boot/develop/headers/os/be_apps/Deskbar
/boot/develop/headers/os/be_apps/NetPositive
/boot/develop/headers/os/be_apps/Tracker
/boot/develop/headers/cpp
/boot/develop/headers/cpp/i586-pc-haiku
/boot/develop/headers/3rdparty
/boot/develop/headers/bsd
/boot/develop/headers/glibc
/boot/develop/headers/posix
/boot/develop/headers
/usr/include/w32api
../../../i686-w64-mingw32/include
../../../x86_64-w64-mingw32/include
../../../include
/mingw/include
.xctoolchain/usr
/CommandLineTools/usr
/XcodeDefault.xctoolchain/usr
/XcodeDefault.xctoolchain/usr/include
#include "..." search starts here:
#include <...> search starts here:
 (framework directory)
 (headermap)
End of search list.
ignoring duplicate directory "
  as it is a non-system directory that duplicates 
a system directory
# 1 "<built-in>" 3
# 1 "<command line>" 1
cl_kernel.h
metal_types.h
# 1 "<built-in>" 2
__llvm__
__clang__
__clang_major__
__clang_minor__
__clang_patchlevel__
__clang_version__
"6.0.0 
__GNUC_MINOR__
__GNUC_PATCHLEVEL__
__GNUC__
__GXX_ABI_VERSION
1002
__ATOMIC_RELAXED
__ATOMIC_CONSUME
__ATOMIC_ACQUIRE
__ATOMIC_RELEASE
__ATOMIC_ACQ_REL
__ATOMIC_SEQ_CST
__PRAGMA_REDEFINE_EXTNAME
__VERSION__
"4.2.1 Compatible 
__STRICT_ANSI__
__GXX_EXPERIMENTAL_CXX0X__
__OBJC2__
OBJC_ZEROCOST_EXCEPTIONS
__OBJC_GC__
__NEXT_RUNTIME__
__OBJFW_RUNTIME_ABI__
IBOutlet
__attribute__((iboutlet))
IBOutletCollection(ClassName)
__attribute__((iboutletcollection(ClassName)))
IBAction
void)__attribute__((ibaction)
__CONSTANT_CFSTRINGS__
__PASCAL_STRINGS__
__block
__attribute__((__blocks__(byref)))
__BLOCKS__
__EXCEPTIONS
__GXX_RTTI
__USING_SJLJ_EXCEPTIONS__
__DEPRECATED
__GNUG__
__GXX_WEAK__
_WCHAR_T_DEFINED
_NATIVE_WCHAR_T_DEFINED
#define __identifier(x) x
__OPTIMIZE__
__OPTIMIZE_SIZE__
__FAST_MATH__
__ORDER_LITTLE_ENDIAN__
1234
__ORDER_BIG_ENDIAN__
4321
__ORDER_PDP_ENDIAN__
3412
__BYTE_ORDER__
__CHAR_BIT__
__SCHAR_MAX__
__SHRT_MAX__
__INT_MAX__
__LONG_MAX__
__LONG_LONG_MAX__
9223372036854775807LL
__WCHAR_MAX__
__INTMAX_MAX__
__SIZE_MAX__
__SIZEOF_DOUBLE__
__SIZEOF_FLOAT__
__SIZEOF_INT__
__SIZEOF_LONG__
__SIZEOF_LONG_DOUBLE__
__SIZEOF_LONG_LONG__
__SIZEOF_POINTER__
__SIZEOF_SHORT__
__SIZEOF_PTRDIFF_T__
__SIZEOF_SIZE_T__
__SIZEOF_WCHAR_T__
__SIZEOF_WINT_T__
__SIZEOF_INT128__
__INTMAX_TYPE__
__UINTMAX_TYPE__
__INTMAX_WIDTH__
__PTRDIFF_TYPE__
__PTRDIFF_WIDTH__
__INTPTR_TYPE__
__INTPTR_WIDTH__
__SIZE_TYPE__
__SIZE_WIDTH__
__WCHAR_TYPE__
__WCHAR_WIDTH__
__WINT_TYPE__
__WINT_WIDTH__
__SIG_ATOMIC_WIDTH__
__CHAR16_TYPE__
__CHAR32_TYPE__
LDBL
__SAMPLER_MAX__
__SAMPLER_TYPE__
__POINTER_WIDTH__
__CHAR_UNSIGNED__
__WCHAR_UNSIGNED__
__WINT_UNSIGNED__
__INT
_TYPE__
__USER_LABEL_PREFIX__
__FINITE_MATH_ONLY__
__GNUC_GNU_INLINE__
__GNUC_STDC_INLINE__
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL
__GCC_ATOMIC_BOOL_LOCK_FREE
__GCC_ATOMIC_CHAR_LOCK_FREE
__GCC_ATOMIC_CHAR16_T_LOCK_FREE
__GCC_ATOMIC_CHAR32_T_LOCK_FREE
__GCC_ATOMIC_WCHAR_T_LOCK_FREE
__GCC_ATOMIC_SHORT_LOCK_FREE
__GCC_ATOMIC_INT_LOCK_FREE
__GCC_ATOMIC_LONG_LOCK_FREE
__GCC_ATOMIC_LLONG_LOCK_FREE
__GCC_ATOMIC_POINTER_LOCK_FREE
__NO_INLINE__
__PIC__
__pic__
__PIE__
__pie__
__FLT_EVAL_METHOD__
__FLT_RADIX__
__DECIMAL_DIG__
__SSP__
__SSP_ALL__
__clang_analyzer__
__FAST_RELAXED_MATH__
__attribute__((objc_ownership(weak)))
__attribute__((objc_ownership(strong)))
__autoreleasing
__attribute__((objc_ownership(autoreleasing)))
__attribute__((objc_ownership(none)))
_OPENMP
201107
__cpp_unicode_characters
200704
__cpp_raw_strings
200710
__cpp_unicode_literals
__cpp_user_defined_literals
200809
__cpp_lambdas
200907
__cpp_constexpr
201304
__cpp_static_assert
200410
__cpp_decltype
200707
__cpp_attributes
__cpp_rvalue_references
200610
__cpp_variadic_templates
__cpp_binary_literals
__cpp_init_captures
__cpp_generic_lambdas
__cpp_decltype_auto
__cpp_return_type_deduction
__cpp_aggregate_nsdmi
__cpp_variable_templates
1.40129846e-45
4.9406564584124654e-324
3.64519953188247460253e-4951
4.94065645841246544176568792868221e-324
6.47517511943802511092443895822764655e-4966
1.19209290e-7
2.2204460492503131e-16
1.08420217248550443401e-19
1.92592994438723585305597794258492732e-34
1.17549435e-38
2.2250738585072014e-308
3.36210314311209350626e-4932
2.00416836000897277799610805135016e-292
3.36210314311209350626267781732175260e-4932
3.40282347e+38
1.7976931348623157e+308
1.18973149535723176502e+4932
1.79769313486231580793728971405301e+308
1.18973149535723176508575932662800702e+4932
DENORM_MIN__
HAS_DENORM__
DIG__
EPSILON__
HAS_INFINITY__
HAS_QUIET_NAN__
MANT_DIG__
MAX_10_EXP__
MAX_EXP__
MAX__
MIN_10_EXP__
MIN_EXP__
MIN__
_C_SUFFIX__
_GLIBCXX_PREDEFINED_OBJC_ARC_IS_SCALAR
namespace std {
struct __true_type;
struct __false_type;
template<typename _Tp> struct __is_scalar;
template<typename _Tp>
struct __is_scalar<__attribute__((objc_ownership(strong))) _Tp> {
  enum { __value = 0 };
  typedef __false_type __type;
struct __is_scalar<__attribute__((objc_ownership(weak))) _Tp> {
struct __is_scalar<__attribute__((objc_ownership(autoreleasing)))
 _Tp> {
__OPENCL__
__METAL_NATIVE_DOUBLE__
__STDC__
__STDC_HOSTED__
__STDC_VERSION__
201112L
199901L
199409L
__cplusplus
201305L
201103L
199711L
__STDC_UTF_16__
__STDC_UTF_32__
__OBJC__
__ASSEMBLER__
#undef 
#__include_macros "
#include "
#include <
getLangStandardForKind() on unspecified kind
ISO C 1990
ISO C 1990 with amendment 1
ISO C 1990 with GNU extensions
ISO C 1999
ISO C 1999 with GNU extensions
ISO C 2011
ISO C 2011 with GNU extensions
ISO C++ 1998 with amendments
ISO C++ 1998 with amendments and GNU extensions
ISO C++ 2011 with amendments
ISO C++ 2011 with amendments and GNU extensions
Working draft for ISO C++ 2014
Working draft for ISO C++ 2014 with GNU extensions
OpenCL 1.0
OpenCL 1.1
OpenCL 1.2
Metal 1.0 (iOS)
Metal 1.1 (iOS)
Metal 1.0 (OSX)
Metal 1.1 (OSX)
Metal 1.2 (OSX)
NVIDIA CUDA(tm)
*** Dumping AST Record Layout
class 
 Size:
Alignment:
sizeof=
align=
FieldOffsets: [
Type: blah 
<dict>
  <key>main-file</key>
  <string>
</string>
  <key>dwarf-debug-flags</key>
  <key>diagnostics</key>
  <array>
    <dict>
      <key>level</key>
      <string>
      <key>filename</key>
      <key>line</key>
      <integer>
</integer>
      <key>column</key>
      <key>message</key>
    </dict>
  </array>
</dict>
&amp;
&lt;
&gt;
&apos;
&quot;
ignored
#pragma
#pragma GCC
#pragma clang
<uninit>
#line
 3 4
 /* clang -E: implicit import for "
" */
#ident 
#pragma comment(
#pragma detect_mismatch("
#pragma clang __debug 
#pragma 
message("
warning "
error "
 diagnostic push
 diagnostic pop
 diagnostic 
#pragma warning(
#pragma warning(push
#pragma warning(pop)
#pragma captured
Meta
Version
Diag
DiagInfo
SrcRange
CatName
DiagFlag
FileName
fatal error
(clang)
 (in PCH)
) : 
In file included from 
In included file:
In module '
' imported from 
In module 
While building module '
fix-it:"
  ...
     
<U+>
<XX>
 [-ferror-limit=]
 [-Werror
warn
expected
no-diagnostics
regex
  File 
 Line *
 Line 
 (directive at 
  (frontend)
 File 
format=0
no-format
system-headers
everything
error
-Werror
-Werror=
fatal-errors
-Wfatal-errors
-Wfatal-errors=
-Wno-
clang -cc1
LLVM 'Clang' Compiler: http://clang.llvm.org
EmitHTML
FixIt
RewriteIncludesAction
RewriteMacros
RewriteObjC
RewriteTest
MigrateSource
RunAnalysis
Header Map %s:
  %d buckets, %d entries
  %d. %s -> '%s' '%s'
*** HeaderSearch Stats:
%d files tracked.
  %d #import/#pragma once files.
  %d included exactly once.
  %d max times a file is included.
  %d #include/#include_next/#import.
    %d #includes skipped due to the multi-include optimization.
%d framework lookups.
%d subframework lookups.
.framework
.framework/
.system_framework
Headers/
Private
Frameworks/
PrivateHeaders/
module.map
module_private.map
<<<<<<<
>>>> 
<<<<
>>>>>>>
Headers
Frameworks
Modules:
Headers:
" -> 
config_macros
conflict
exclude
header
module
requires
PrivateHeaders
exhaustive
float.h
iso646.h
limits.h
stdalign.h
stdarg.h
stdbool.h
stddef.h
stdint.h
tgmath.h
unwind.h
ndef
ndif
@import 
'defined'
__LINE__
__FILE__
__DATE__
__TIME__
__COUNTER__
_Pragma
__BASE_FILE__
__INCLUDE_LEVEL__
__TIMESTAMP__
__has_feature
__has_extension
__has_builtin
__has_attribute
__has_include
__has_include_next
__has_warning
__METAL_VERSION__
__building_module
__MODULE__
__pragma
??? ??? ?? ??:??:?? ????
'__has_warning'
"%s %2d %4d"
"%02d:%02d:%02d"
interrupt
acquired_after
acquired_before
address_space
aligned
always_inline
analyzer_noreturn
annotate
objc_arc_weak_reference_unavailable
argument_with_type_tag
pointer_with_type_tag
assert_exclusive_lock
assert_shared_lock
availability
blocks
bounded
cdecl
cf_audited_transfer
cf_consumed
cf_returns_not_retained
cf_returns_retained
cf_unknown_transfer
host
launch_bounds
callable_when
carries_dependency
cleanup
constructor
consumable
consumable_auto_cast_state
consumable_set_state_on_read
dllexport
dllimport
deprecated
destructor
enable_if
exclusive_lock_function
exclusive_locks_required
exclusive_trylock_function
ext_vector_type
fallthrough
fastcall
final
sealed
format
format_arg
gnu_inline
guarded_by
guarded_var
ibaction
iboutlet
iboutletcollection
init_priority
lock_returned
lockable
locks_excluded
ms_abi
__unspecified_inheritance
may_alias
base_instance
base_vertex
buffer
center_no_perspective
center_perspective
centroid_no_perspective
centroid_perspective
clip_distance
color
depth
early_fragment_tests
flat
front_facing
function_constant
instance_id
patch
patch_id
point_coord
point_size
position
position_in_patch
render_target_array_index
sample_id
sample_mask
sample_no_perspective
sample_perspective
sampler
stage_in
grid_origin
grid_size
attribute
texture
threadgroup_position_in_grid
threadgroups_per_grid
thread_index_in_threadgroup
thread_position_in_grid
thread_position_in_threadgroup
threads_per_grid
threads_per_threadgroup
user
vertex_id
mode
ms_struct
ns_consumed
ns_consumes_self
ns_returns_autoreleased
ns_returns_not_retained
ns_returns_retained
neon_polyvector_type
neon_vector_type
nocommon
nodebug
no_duplicate
no_instrument_function
nomips16
no_address_safety_analysis
no_sanitize_address
no_sanitize_memory
no_sanitize_thread
no_thread_safety_analysis
nothrow
nonnull
objc_bridge
objc_bridge_mutable
objc_bridge_related
objc_designated_initializer
objc_exception
objc_protocol_requires_explicit_implementation
objc_gc
objc_method_family
NSObject
objc_ownership
objc_precise_lifetime
objc_requires_property_definitions
objc_requires_super
objc_returns_inner_pointer
objc_root_class
overloadable
override
ownership_holds
ownership_returns
ownership_takes
packed
param_typestate
pascal
pnaclcall
pt_guarded_by
pt_guarded_var
pure
regparm
reqd_work_group_size
return_typestate
returns_nonnull
scoped_lockable
section
selectany
sentinel
set_typestate
shared_lock_function
shared_locks_required
shared_trylock_function
stdcall
sysv_abi
tls_model
test_typestate
thiscall
thread_execution_width
transparent_union
type_tag_for_datatype
type_visibility
unavailable
unlock_function
unused
used
uuid
vecreturn
vec_type_hint
vector_size
visibility
warn_unused
warn_unused_result
weak
weak_import
weakref
work_group_size_hint
force_align_arg_pointer
c_alignas
c_atomic
c_generic_selections
c_static_assert
c_thread_local
cxx_atomic
cxx_deleted_functions
cxx_explicit_conversions
cxx_inline_namespaces
cxx_local_type_template_args
cxx_nonstatic_member_init
cxx_override_control
cxx_range_for
cxx_reference_qualified_functions
cxx_rvalue_references
cxx_binary_literals
cxx_init_captures
cxx_variable_templates
address_sanitizer
attribute_analyzer_noreturn
attribute_availability
attribute_availability_with_message
attribute_cf_returns_not_retained
attribute_cf_returns_retained
attribute_deprecated_with_message
attribute_ext_vector_type
attribute_ns_returns_not_retained
attribute_ns_returns_retained
attribute_ns_consumes_self
attribute_ns_consumed
attribute_cf_consumed
attribute_objc_ivar_unused
attribute_objc_method_family
attribute_overloadable
attribute_unavailable_with_message
attribute_unused_on_fields
c_thread_safety_attributes
cxx_exceptions
cxx_rtti
enumerator_attributes
memory_sanitizer
thread_sanitizer
dataflow_sanitizer
objc_arr
objc_arc
objc_arc_weak
objc_default_synthesize_properties
objc_fixed_enum
objc_instancetype
objc_modules
objc_nonfragile_abi
objc_property_explicit_atomic
objc_protocol_qualifier_mangling
objc_weak_class
objc_bool
objc_subscripting
objc_array_literals
objc_dictionary_literals
objc_boxed_expressions
arc_cf_code_audited
cxx_access_control_sfinae
cxx_alias_templates
cxx_alignas
cxx_attributes
cxx_auto_type
cxx_constexpr
cxx_decltype
cxx_decltype_incomplete_return_types
cxx_default_function_template_args
cxx_defaulted_functions
cxx_delegating_constructors
cxx_generalized_initializers
cxx_implicit_moves
cxx_inheriting_constructors
cxx_lambdas
cxx_noexcept
cxx_nullptr
cxx_raw_string_literals
cxx_strong_enums
cxx_static_assert
cxx_thread_local
cxx_trailing_return
cxx_unicode_literals
cxx_unrestricted_unions
cxx_user_literals
cxx_variadic_templates
cxx_aggregate_nsdmi
cxx_contextual_conversions
cxx_relaxed_constexpr
cxx_return_type_deduction
has_nothrow_assign
has_nothrow_copy
has_nothrow_constructor
has_trivial_assign
has_trivial_copy
has_trivial_constructor
has_trivial_destructor
has_virtual_destructor
is_abstract
is_base_of
is_class
is_convertible_to
is_empty
is_enum
is_final
is_literal
is_standard_layout
is_pod
is_polymorphic
is_sealed
is_trivial
is_trivially_assignable
is_trivially_constructible
is_trivially_copyable
is_union
modules
underlying_type
DEFAULT
STDC
endregion
once
pragma once
mark
push_macro
pop_macro
message
pragma message
pragma warning
pragma error
poison
system_header
dependency
diagnostic
fatal
push
pragma diagnostic
__debug
crash
parser_crash
llvm_fatal_error
#pragma clang __debug llvm_fatal_error
overflow_stack
handle_crash
captured
pragma clang __debug captured
begin
FENV_ACCESS
CX_LIMITED_RANGE
disable
suppress
include_alias
__VA_ARGS__
_exception_info
__exception_info
GetExceptionInformation
_exception_code
__exception_code
GetExceptionCode
_abnormal_termination
__abnormal_termination
AbnormalTermination
 [StartOfLine]
 [LeadingSpace]
 [ExpandDisabled]
 [UnClean='
Loc=<
MACRO: 
*** Preprocessor Stats:
 directives found:
 #define.
 #undef.
  #include/#include_next/#import:
 source files entered.
 max include stack depth
 #if/#ifndef/#ifdef.
 #else/#elif.
 #endif.
 #pragma.
 #if/#ifndef#ifdef regions skipped
 obj/fn/builtin macros expanded, 
 on the fast path.
 token paste (##) operations performed, 
Preprocessor Memory: 
B total
  BumpPtr: 
  Macro Expanded Tokens: 
  Predefines Buffer: 
  Macros: 
  #pragma push_macro Info: 
  Poison Reasons: 
  Comment Handlers: 
<built-in>
cfe-pth
PTH file uses an older PTH format that is no longer supported
PTH file contains no cached source data
Could not allocate memory for processing PTH file
<scratch space>
AIR target info
air-target-info
Info about a call graph
cginfo
air.sampler
air.yuv_sampler
NoDuplicate to AlwaysInline hack
noduplicate-to-alwaysinline-hack
OpenGL GLSL
OpenGL ES GLSL
OpenCL C
post tessellation optimizations
post tessellation optimizer
clamp_to_border
clamp_to_edge
repeat
mirrored_repeat
nearest
linear
bicubic
normalized
less_equal
greater_equal
not_equal
transparent_black
opaque_black
opaque_white
Constant Sampler (
S Address Mode = 
T Address Mode = 
R Address Mode = 
Mag Filter Mode = 
Min Filter Mode = 
Mip Filter Mode = 
Coords = 
Compare Function = 
Border Color = 
required metadata (
) is missing in 
metadata 
 is corrupted (
) in 
cannot have global constructors (
cannot have global destructors (
 cannot be used 
with pre AIR 
 module 
buffer argument 
 has invalid location (<
>) in 
too many constant buffers (
texture argument 
sampler argument 
vertex input 
fragment input 
 has duplicated attribute name (
render target 
 has duplicated attachment index (
Multiple function constants with 
same name '
' but different indexes: '
' but different types: '
same index '
' but different names: '
too many patch-data attributes (
 function 
 calls recursive function
non-void vertex function 
writes to global memory
calls functions (
) writing to global memory
 uses too many samplers (
 uses illegal functions in 
air.function_constant
air.buffer_size
air.center
air.centroid
air.sample
generated
air.vertex
air.fragment
air.kernel
air.patch_control_point_function
air.location_index
air.arg_unused
air.depth
air.render_target
air.sample_mask
air.base_instance
air.base_vertex
air.buffer
air.control_point_index_buffer
air.dispatch_simdgroups_per_threadgroup
air.dispatch_threads_per_threadgroup
air.fragment_input
air.front_facing
air.image_block_data
air.instance_id
air.patch_control_point_input
air.patch_id
air.patch_input
air.point_coord
air.position
air.position_in_patch
air.render_target_array_index
air.sample_id
air.sample_mask_in
air.simdgroup_index_in_threadgroup
air.simdgroups_per_threadgroup
air.stage_in
air.stage_in_grid_origin
air.stage_in_grid_size
air.texture
air.thread_execution_width
air.thread_index_in_simdgroup
air.thread_index_in_threadgroup
air.thread_position_in_grid
air.thread_position_in_threadgroup
air.threadgroup_position_in_grid
air.threadgroups_per_grid
air.threads_per_grid
air.threads_per_simdgroup
air.threads_per_threadgroup
air.vertex_id
air.vertex_input
air.yuv_texture
air.arg_type_name
air.arg_name
air.patch
air.atomic.global.store.i32
air.atomic.local.store.i32
air.atomic.global.load.i32
air.atomic.local.load.i32
air.atomic.global.xchg.i32
air.atomic.local.xchg.i32
air.atomic.global.cmpxchg.weak.i32
air.atomic.local.cmpxchg.weak.i32
air.atomic.global.add.s.i32
air.atomic.global.add.u.i32
air.atomic.local.add.s.i32
air.atomic.local.add.u.i32
air.atomic.global.and.s.i32
air.atomic.global.and.u.i32
air.atomic.local.and.s.i32
air.atomic.local.and.u.i32
air.atomic.global.min.s.i32
air.atomic.global.min.u.i32
air.atomic.local.min.s.i32
air.atomic.local.min.u.i32
air.atomic.global.max.s.i32
air.atomic.global.max.u.i32
air.atomic.local.max.s.i32
air.atomic.local.max.u.i32
air.atomic.global.or.s.i32
air.atomic.global.or.u.i32
air.atomic.local.or.s.i32
air.atomic.local.or.u.i32
air.atomic.global.sub.s.i32
air.atomic.global.sub.u.i32
air.atomic.local.sub.s.i32
air.atomic.local.sub.u.i32
air.atomic.global.xor.s.i32
air.atomic.global.xor.u.i32
air.atomic.local.xor.s.i32
air.atomic.local.xor.u.i32
air.clz.i8
air.clz.v2i8
air.clz.v3i8
air.clz.v4i8
air.clz.i16
air.clz.v2i16
air.clz.v3i16
air.clz.v4i16
air.clz.i32
air.clz.v2i32
air.clz.v3i32
air.clz.v4i32
air.ctz.i8
air.ctz.v2i8
air.ctz.v3i8
air.ctz.v4i8
air.ctz.i16
air.ctz.v2i16
air.ctz.v3i16
air.ctz.v4i16
air.ctz.i32
air.ctz.v2i32
air.ctz.v3i32
air.ctz.v4i32
air.dfdx.f32
air.dfdx.v2f32
air.dfdx.v3f32
air.dfdx.v4f32
air.dfdx.f16
air.dfdx.v2f16
air.dfdx.v3f16
air.dfdx.v4f16
air.dfdy.f32
air.dfdy.v2f32
air.dfdy.v3f32
air.dfdy.v4f32
air.dfdy.f16
air.dfdy.v2f16
air.dfdy.v3f16
air.dfdy.v4f16
air.fwidth.f32
air.fwidth.v2f32
air.fwidth.v3f32
air.fwidth.v4f32
air.fwidth.f16
air.fwidth.v2f16
air.fwidth.v3f16
air.fwidth.v4f16
air.get_num_patch_control_points
air.is_function_constant_defined
air.sample_texture_1d.v4f32
air.sample_texture_1d.v4f16
air.sample_texture_1d.s.v4i32
air.sample_texture_1d.u.v4i32
air.sample_texture_1d.s.v4i16
air.sample_texture_1d.u.v4i16
air.sample_texture_1d_array.v4f32
air.sample_texture_1d_array.v4f16
air.sample_texture_1d_array.s.v4i32
air.sample_texture_1d_array.u.v4i32
air.sample_texture_1d_array.s.v4i16
air.sample_texture_1d_array.u.v4i16
air.sample_texture_2d.v4f32
air.sample_texture_2d.v4f16
air.sample_texture_2d.s.v4i32
air.sample_texture_2d.u.v4i32
air.sample_texture_2d.s.v4i16
air.sample_texture_2d.u.v4i16
air.sample_texture_2d_array.v4f32
air.sample_texture_2d_array.v4f16
air.sample_texture_2d_array.s.v4i32
air.sample_texture_2d_array.u.v4i32
air.sample_texture_2d_array.s.v4i16
air.sample_texture_2d_array.u.v4i16
air.sample_texture_3d.v4f32
air.sample_texture_3d.v4f16
air.sample_texture_3d.s.v4i32
air.sample_texture_3d.u.v4i32
air.sample_texture_3d.s.v4i16
air.sample_texture_3d.u.v4i16
air.sample_texture_cube.v4f32
air.sample_texture_cube.v4f16
air.sample_texture_cube.s.v4i32
air.sample_texture_cube.u.v4i32
air.sample_texture_cube.s.v4i16
air.sample_texture_cube.u.v4i16
air.sample_depth_2d.f32
air.sample_depth_2d_array.f32
air.sample_depth_cube.f32
air.sample_compare_depth_2d.f32
air.sample_compare_depth_2d_array.f32
air.sample_compare_depth_cube.f32
air.write_texture_1d.v4f32
air.write_texture_1d.v4f16
air.write_texture_1d.s.v4i32
air.write_texture_1d.u.v4i32
air.write_texture_1d.s.v4i16
air.write_texture_1d.u.v4i16
air.write_texture_1d.i16.v4f32
air.write_texture_1d.i16.v4f16
air.write_texture_1d.i16.s.v4i32
air.write_texture_1d.i16.u.v4i32
air.write_texture_1d.i16.s.v4i16
air.write_texture_1d.i16.u.v4i16
air.write_texture_1d_array.v4f32
air.write_texture_1d_array.v4f16
air.write_texture_1d_array.s.v4i32
air.write_texture_1d_array.u.v4i32
air.write_texture_1d_array.s.v4i16
air.write_texture_1d_array.u.v4i16
air.write_texture_1d_array.i16.v4f32
air.write_texture_1d_array.i16.v4f16
air.write_texture_1d_array.i16.s.v4i32
air.write_texture_1d_array.i16.u.v4i32
air.write_texture_1d_array.i16.s.v4i16
air.write_texture_1d_array.i16.u.v4i16
air.write_texture_2d.v4f32
air.write_texture_2d.v4f16
air.write_texture_2d.s.v4i32
air.write_texture_2d.u.v4i32
air.write_texture_2d.s.v4i16
air.write_texture_2d.u.v4i16
air.write_texture_2d.i16.v4f32
air.write_texture_2d.i16.v4f16
air.write_texture_2d.i16.s.v4i32
air.write_texture_2d.i16.u.v4i32
air.write_texture_2d.i16.s.v4i16
air.write_texture_2d.i16.u.v4i16
air.write_texture_2d_array.v4f32
air.write_texture_2d_array.v4f16
air.write_texture_2d_array.s.v4i32
air.write_texture_2d_array.u.v4i32
air.write_texture_2d_array.s.v4i16
air.write_texture_2d_array.u.v4i16
air.write_texture_2d_array.i16.v4f32
air.write_texture_2d_array.i16.v4f16
air.write_texture_2d_array.i16.s.v4i32
air.write_texture_2d_array.i16.u.v4i32
air.write_texture_2d_array.i16.s.v4i16
air.write_texture_2d_array.i16.u.v4i16
air.write_texture_3d.v4f32
air.write_texture_3d.v4f16
air.write_texture_3d.s.v4i32
air.write_texture_3d.u.v4i32
air.write_texture_3d.s.v4i16
air.write_texture_3d.u.v4i16
air.write_texture_3d.i16.v4f32
air.write_texture_3d.i16.v4f16
air.write_texture_3d.i16.s.v4i32
air.write_texture_3d.i16.u.v4i32
air.write_texture_3d.i16.s.v4i16
air.write_texture_3d.i16.u.v4i16
air.write_texture_cube.v4f32
air.write_texture_cube.v4f16
air.write_texture_cube.s.v4i32
air.write_texture_cube.u.v4i32
air.write_texture_cube.s.v4i16
air.write_texture_cube.u.v4i16
air.write_texture_cube.i16.v4f32
air.write_texture_cube.i16.v4f16
air.write_texture_cube.i16.s.v4i32
air.write_texture_cube.i16.u.v4i32
air.write_texture_cube.i16.s.v4i16
air.write_texture_cube.i16.u.v4i16
air.write_texture_cube_array.v4f32
air.write_texture_cube_array.v4f16
air.write_texture_cube_array.s.v4i32
air.write_texture_cube_array.u.v4i32
air.write_texture_cube_array.s.v4i16
air.write_texture_cube_array.u.v4i16
air.write_texture_cube_array.i16.v4f32
air.write_texture_cube_array.i16.v4f16
air.write_texture_cube_array.i16.s.v4i32
air.write_texture_cube_array.i16.u.v4i32
air.write_texture_cube_array.i16.s.v4i16
air.write_texture_cube_array.i16.u.v4i16
air.wg.barrier
air.vstore.private.i8
air.vstore.global.i8
air.vstore.local.i8
air.vstore.private.v2i8
air.vstore.global.v2i8
air.vstore.local.v2i8
air.vstore.private.v3i8
air.vstore.global.v3i8
air.vstore.local.v3i8
air.vstore.private.v4i8
air.vstore.global.v4i8
air.vstore.local.v4i8
air.vstore.private.i16
air.vstore.global.i16
air.vstore.local.i16
air.vstore.private.v2i16
air.vstore.global.v2i16
air.vstore.local.v2i16
air.vstore.private.v3i16
air.vstore.global.v3i16
air.vstore.local.v3i16
air.vstore.private.v4i16
air.vstore.global.v4i16
air.vstore.local.v4i16
air.vstore.private.i32
air.vstore.global.i32
air.vstore.local.i32
air.vstore.private.v2i32
air.vstore.global.v2i32
air.vstore.local.v2i32
air.vstore.private.v3i32
air.vstore.global.v3i32
air.vstore.local.v3i32
air.vstore.private.v4i32
air.vstore.global.v4i32
air.vstore.local.v4i32
air.vstore.private.f16
air.vstore.global.f16
air.vstore.local.f16
air.vstore.private.v2f16
air.vstore.global.v2f16
air.vstore.local.v2f16
air.vstore.private.v3f16
air.vstore.global.v3f16
air.vstore.local.v3f16
air.vstore.private.v4f16
air.vstore.global.v4f16
air.vstore.local.v4f16
air.vstore.private.f32
air.vstore.global.f32
air.vstore.local.f32
air.vstore.private.v2f32
air.vstore.global.v2f32
air.vstore.local.v2f32
air.vstore.private.v3f32
air.vstore.global.v3f32
air.vstore.local.v3f32
air.vstore.private.v4f32
air.vstore.global.v4f32
air.vstore.local.v4f32
air.vstore.private.f64
air.vstore.global.f64
air.vstore.local.f64
air.vstore.private.v2f64
air.vstore.global.v2f64
air.vstore.local.v2f64
air.vstore.private.v3f64
air.vstore.global.v3f64
air.vstore.local.v3f64
air.vstore.private.v4f64
air.vstore.global.v4f64
air.vstore.local.v4f64
air.vstore_half.private.f32
air.vstore_half.global.f32
air.vstore_half.local.f32
air.vstore_half.private.v2f32
air.vstore_half.global.v2f32
air.vstore_half.local.v2f32
air.vstore_half.private.v3f32
air.vstore_half.global.v3f32
air.vstore_half.local.v3f32
air.vstore_half.private.v4f32
air.vstore_half.global.v4f32
air.vstore_half.local.v4f32
air.vstore_half.private.f64
air.vstore_half.global.f64
air.vstore_half.local.f64
air.vstore_half.private.v2f64
air.vstore_half.global.v2f64
air.vstore_half.local.v2f64
air.vstore_half.private.v3f64
air.vstore_half.global.v3f64
air.vstore_half.local.v3f64
air.vstore_half.private.v4f64
air.vstore_half.global.v4f64
air.vstore_half.local.v4f64
air.vstore_half.private.rte.f32
air.vstore_half.global.rte.f32
air.vstore_half.local.rte.f32
air.vstore_half.private.rte.v2f32
air.vstore_half.global.rte.v2f32
air.vstore_half.local.rte.v2f32
air.vstore_half.private.rte.v3f32
air.vstore_half.global.rte.v3f32
air.vstore_half.local.rte.v3f32
air.vstore_half.private.rte.v4f32
air.vstore_half.global.rte.v4f32
air.vstore_half.local.rte.v4f32
air.vstore_half.private.rte.f64
air.vstore_half.global.rte.f64
air.vstore_half.local.rte.f64
air.vstore_half.private.rte.v2f64
air.vstore_half.global.rte.v2f64
air.vstore_half.local.rte.v2f64
air.vstore_half.private.rte.v3f64
air.vstore_half.global.rte.v3f64
air.vstore_half.local.rte.v3f64
air.vstore_half.private.rte.v4f64
air.vstore_half.global.rte.v4f64
air.vstore_half.local.rte.v4f64
air.vstore_half.private.rtz.f32
air.vstore_half.global.rtz.f32
air.vstore_half.local.rtz.f32
air.vstore_half.private.rtz.v2f32
air.vstore_half.global.rtz.v2f32
air.vstore_half.local.rtz.v2f32
air.vstore_half.private.rtz.v3f32
air.vstore_half.global.rtz.v3f32
air.vstore_half.local.rtz.v3f32
air.vstore_half.private.rtz.v4f32
air.vstore_half.global.rtz.v4f32
air.vstore_half.local.rtz.v4f32
air.vstore_half.private.rtz.f64
air.vstore_half.global.rtz.f64
air.vstore_half.local.rtz.f64
air.vstore_half.private.rtz.v2f64
air.vstore_half.global.rtz.v2f64
air.vstore_half.local.rtz.v2f64
air.vstore_half.private.rtz.v3f64
air.vstore_half.global.rtz.v3f64
air.vstore_half.local.rtz.v3f64
air.vstore_half.private.rtz.v4f64
air.vstore_half.global.rtz.v4f64
air.vstore_half.local.rtz.v4f64
air.vstore_half.private.rtp.f32
air.vstore_half.global.rtp.f32
air.vstore_half.local.rtp.f32
air.vstore_half.private.rtp.v2f32
air.vstore_half.global.rtp.v2f32
air.vstore_half.local.rtp.v2f32
air.vstore_half.private.rtp.v3f32
air.vstore_half.global.rtp.v3f32
air.vstore_half.local.rtp.v3f32
air.vstore_half.private.rtp.v4f32
air.vstore_half.global.rtp.v4f32
air.vstore_half.local.rtp.v4f32
air.vstore_half.private.rtp.f64
air.vstore_half.global.rtp.f64
air.vstore_half.local.rtp.f64
air.vstore_half.private.rtp.v2f64
air.vstore_half.global.rtp.v2f64
air.vstore_half.local.rtp.v2f64
air.vstore_half.private.rtp.v3f64
air.vstore_half.global.rtp.v3f64
air.vstore_half.local.rtp.v3f64
air.vstore_half.private.rtp.v4f64
air.vstore_half.global.rtp.v4f64
air.vstore_half.local.rtp.v4f64
air.vstore_half.private.rtn.f32
air.vstore_half.global.rtn.f32
air.vstore_half.local.rtn.f32
air.vstore_half.private.rtn.v2f32
air.vstore_half.global.rtn.v2f32
air.vstore_half.local.rtn.v2f32
air.vstore_half.private.rtn.v3f32
air.vstore_half.global.rtn.v3f32
air.vstore_half.local.rtn.v3f32
air.vstore_half.private.rtn.v4f32
air.vstore_half.global.rtn.v4f32
air.vstore_half.local.rtn.v4f32
air.vstore_half.private.rtn.f64
air.vstore_half.global.rtn.f64
air.vstore_half.local.rtn.f64
air.vstore_half.private.rtn.v2f64
air.vstore_half.global.rtn.v2f64
air.vstore_half.local.rtn.v2f64
air.vstore_half.private.rtn.v3f64
air.vstore_half.global.rtn.v3f64
air.vstore_half.local.rtn.v3f64
air.vstore_half.private.rtn.v4f64
air.vstore_half.global.rtn.v4f64
air.vstore_half.local.rtn.v4f64
air.vstorea_half.private.f32
air.vstorea_half.global.f32
air.vstorea_half.local.f32
air.vstorea_half.private.v2f32
air.vstorea_half.global.v2f32
air.vstorea_half.local.v2f32
air.vstorea_half.private.v3f32
air.vstorea_half.global.v3f32
air.vstorea_half.local.v3f32
air.vstorea_half.private.v4f32
air.vstorea_half.global.v4f32
air.vstorea_half.local.v4f32
air.vstorea_half.private.f64
air.vstorea_half.global.f64
air.vstorea_half.local.f64
air.vstorea_half.private.v2f64
air.vstorea_half.global.v2f64
air.vstorea_half.local.v2f64
air.vstorea_half.private.v3f64
air.vstorea_half.global.v3f64
air.vstorea_half.local.v3f64
air.vstorea_half.private.v4f64
air.vstorea_half.global.v4f64
air.vstorea_half.local.v4f64
air.vstorea_half.private.rte.f32
air.vstorea_half.global.rte.f32
air.vstorea_half.local.rte.f32
air.vstorea_half.private.rte.v2f32
air.vstorea_half.global.rte.v2f32
air.vstorea_half.local.rte.v2f32
air.vstorea_half.private.rte.v3f32
air.vstorea_half.global.rte.v3f32
air.vstorea_half.local.rte.v3f32
air.vstorea_half.private.rte.v4f32
air.vstorea_half.global.rte.v4f32
air.vstorea_half.local.rte.v4f32
air.vstorea_half.private.rte.f64
air.vstorea_half.global.rte.f64
air.vstorea_half.local.rte.f64
air.vstorea_half.private.rte.v2f64
air.vstorea_half.global.rte.v2f64
air.vstorea_half.local.rte.v2f64
air.vstorea_half.private.rte.v3f64
air.vstorea_half.global.rte.v3f64
air.vstorea_half.local.rte.v3f64
air.vstorea_half.private.rte.v4f64
air.vstorea_half.global.rte.v4f64
air.vstorea_half.local.rte.v4f64
air.vstorea_half.private.rtz.f32
air.vstorea_half.global.rtz.f32
air.vstorea_half.local.rtz.f32
air.vstorea_half.private.rtz.v2f32
air.vstorea_half.global.rtz.v2f32
air.vstorea_half.local.rtz.v2f32
air.vstorea_half.private.rtz.v3f32
air.vstorea_half.global.rtz.v3f32
air.vstorea_half.local.rtz.v3f32
air.vstorea_half.private.rtz.v4f32
air.vstorea_half.global.rtz.v4f32
air.vstorea_half.local.rtz.v4f32
air.vstorea_half.private.rtz.f64
air.vstorea_half.global.rtz.f64
air.vstorea_half.local.rtz.f64
air.vstorea_half.private.rtz.v2f64
air.vstorea_half.global.rtz.v2f64
air.vstorea_half.local.rtz.v2f64
air.vstorea_half.private.rtz.v3f64
air.vstorea_half.global.rtz.v3f64
air.vstorea_half.local.rtz.v3f64
air.vstorea_half.private.rtz.v4f64
air.vstorea_half.global.rtz.v4f64
air.vstorea_half.local.rtz.v4f64
air.vstorea_half.private.rtp.f32
air.vstorea_half.global.rtp.f32
air.vstorea_half.local.rtp.f32
air.vstorea_half.private.rtp.v2f32
air.vstorea_half.global.rtp.v2f32
air.vstorea_half.local.rtp.v2f32
air.vstorea_half.private.rtp.v3f32
air.vstorea_half.global.rtp.v3f32
air.vstorea_half.local.rtp.v3f32
air.vstorea_half.private.rtp.v4f32
air.vstorea_half.global.rtp.v4f32
air.vstorea_half.local.rtp.v4f32
air.vstorea_half.private.rtp.f64
air.vstorea_half.global.rtp.f64
air.vstorea_half.local.rtp.f64
air.vstorea_half.private.rtp.v2f64
air.vstorea_half.global.rtp.v2f64
air.vstorea_half.local.rtp.v2f64
air.vstorea_half.private.rtp.v3f64
air.vstorea_half.global.rtp.v3f64
air.vstorea_half.local.rtp.v3f64
air.vstorea_half.private.rtp.v4f64
air.vstorea_half.global.rtp.v4f64
air.vstorea_half.local.rtp.v4f64
air.vstorea_half.private.rtn.f32
air.vstorea_half.global.rtn.f32
air.vstorea_half.local.rtn.f32
air.vstorea_half.private.rtn.v2f32
air.vstorea_half.global.rtn.v2f32
air.vstorea_half.local.rtn.v2f32
air.vstorea_half.private.rtn.v3f32
air.vstorea_half.global.rtn.v3f32
air.vstorea_half.local.rtn.v3f32
air.vstorea_half.private.rtn.v4f32
air.vstorea_half.global.rtn.v4f32
air.vstorea_half.local.rtn.v4f32
air.vstorea_half.private.rtn.f64
air.vstorea_half.global.rtn.f64
air.vstorea_half.local.rtn.f64
air.vstorea_half.private.rtn.v2f64
air.vstorea_half.global.rtn.v2f64
air.vstorea_half.local.rtn.v2f64
air.vstorea_half.private.rtn.v3f64
air.vstorea_half.global.rtn.v3f64
air.vstorea_half.local.rtn.v3f64
air.vstorea_half.private.rtn.v4f64
air.vstorea_half.global.rtn.v4f64
air.vstorea_half.local.rtn.v4f64
air.get_num_samples.i32
air.get_sample_position.v2f32
air.discard_fragment
invalid
air.
AIR Target Info:
Max Device Buffers = 
Max Constant Buffers = 
Max Threadgroup Buffers = 
Max Textures = 
Max Samplers = 
Max Vertex Inputs = 
Max Render Targets = 
Max PatchData Attributes = 
Call Graph Info:
Recursion:
<<null function>>
Writing to Global Memory:
Used Constant Samplers:
Illegal fragment context:
Illegal vertex context:
Illegal kernel context:
STATISTICS:
<eof> parser at end of file
<unknown> parser at unknown location
: at annotation token
: unknown current parser token
: current parser token '
appdomain
process
jitintrinsic
novtable
safebuffers
allocate
introduced
obsoleted
layout_compatible
must_be_null
parsing struct/union body
 { namespace 
parsing namespace
attributes list
alias declaration
using declaration
__is_
access declaration
parsing struct/union/class body
noexcept(false)
block literal parsing
lambda expression parsing
< ::
@end
@end
@catch clause
parsing Objective-C method
cl_khr_fp64
cl_khr_int64_base_atomics
cl_khr_int64_extended_atomics
cl_khr_fp16
cl_khr_gl_sharing
cl_khr_gl_event
cl_khr_d3d10_sharing
cl_khr_global_int32_base_atomics
cl_khr_global_int32_extended_atomics
cl_khr_local_int32_base_atomics
cl_khr_local_int32_extended_atomics
cl_khr_byte_addressable_store
cl_khr_3d_image_writes
cl_APPLE_bool_vec
cl_clang_storage_class_specifiers
show
reset
OPENCL EXTENSION
pragma detect_mismatch
exestr
pragma comment
natural
power
__except
OPENCL
pixel
top-level asm block
'asm'
options
redefine_extname
EXTENSION
detect_mismatch
do/while
'case'
'default'
in compound statement ('{}')
'do'
<MS inline asm>
asm operand
parsing function body
parsing function try block
/***** GCL Generated File *********************/
/* Automatically generated file, do not edit! */
/**********************************************/
#include <OpenCL/opencl.h>
#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <dispatch/dispatch.h>
#include <OpenCL/gcl_priv.h>
static void initBlocks(void);
// Initialize static data structures
static block_kernel_pair pair_map[
] = {
static block_kernel_map bmap = { 0, 
, initBlocks, pair_map };
// Block function
// Initialization functions
static void initBlocks(void) {
  static dispatch_once_t once;
  dispatch_once(&once,
    ^{ int err = gclBuildProgramBinaryAPPLE("
", "", &bmap, build_opts);
, &bmap, build_opts);
       if (!err) {
       }
     });
__attribute__((constructor))
static void RegisterMap(void) {
  gclRegisterBlockKernelMap(&bmap);
(const cl_ndrange *ndrange
, size_t 
extern void (^
_kernel)
void (^
  int err = 0;
  cl_kernel k = bmap.map[
].kernel;
  if (!k) {
    initBlocks();
    k = bmap.map[
  if (!k)
    gcl_log_fatal("kernel 
 does not exist for device");
  kargs_struct kargs;
  gclCreateArgsAPPLE(k, &kargs);
  err |= gclSetKernelArgMemAPPLE(k, 
, &kargs);
  cl_sampler 
_obj;
  err |= gclSetKernelArgSamplerAPPLE(k, 
, &kargs, &
_obj);
  gclReleaseSampler(
  err |= gclSetKernelArgAPPLE(k, 
, NULL, &kargs);
), &
  gcl_log_cl_fatal(err, "setting argument for 
 failed");
  err = gclExecKernelAPPLE(k, ndrange, &kargs);
  gcl_log_cl_fatal(err, "Executing 
  gclDeleteArgsAPPLE(k, &kargs);
    
  { NULL, NULL }
          assert(bmap.map[
].block_ptr == 
_kernel
 && "mismatch block");
          bmap.map[
].kernel = 
clCreateKernel(bmap.program, "
", &err);
  bmap.map[
].block_ptr = 
_kernel;
cl_image
cl_uchar
cl_ushort
cl_uint
cl_ulong
cl_ulonglong
cl_char
cl_short
cl_int
cl_long
cl_longlong
cl_float
cl_double
typedef struct 
typedef union 
struct 
union 
 __attribute__ ((packed)) {
_unalign 
_unalign;
typedef 
__attribute__ ((aligned(8))) 
[%lld]
  const char* build_opts = "
 -cl-mad-enable
 -cl-fast-relaxed-math
 -cl-single-precision-constant
 -cl-denorms-are-zero
 -cl-auto-vectorize-disable
 -cl-std=
*** Analysis Based Warnings Stats:
 functions analyzed (
 w/o CFGs).
 CFG blocks built.
 average CFG blocks per function.
 max CFG blocks per function.
 functions analyzed for uninitialiazed variables
 variables analyzed.
 average variables per function.
 max variables per function.
 block visits.
 average block visits per function.
 max block visits per function.
__block 
[[clang::fallthrough]]
break; 
lias
aked
locks
ommon
evice
ormat
lloc
ps16
_abi
nused
_const
ligned
ounded
leanup
insize
ebug
bjc_gc
egparm
ction
dcall
eakref
SObject
nnotate
onstant
astcall
utlet
ockable
nline
ips16
eturn
ntinel
sv_abi
hiscall
xport
mport
nable_if
nterrupt
y_alias
_struct
naclcall
ls_model
ecreturn
onsumable
recated
tructor
ormat_arg
u_inline
arded_by
isibility
_consumed
nstructor
uarded_var
s_consumed
bjc_bridge
navailable
ector_size
rn_unused
ak_import
vailability
o_duplicate
verloadable
dress_space
ways_inline
allable_when
nit_priority
unch_bounds
ck_returned
t_guarded_by
eturns_twice
et_typestate
ec_type_hint
cquired_after
ntel_ocl_bicc
ocks_excluded
bjc_
t_guarded_var
est_typestate
cquired_before
xt_vector_type
jc_root_class
nership_
olds
akes
aram_typestate
eturns_nonnull
coped_lockable
ype_visibility
nlock_function
on_vector_type
_consumes_self
eturn_typestate
nalyzer_noreturn
wnership_returns
ransparent_union
ssert_shared_lock
arries_dependency
boutletcollection
o_sanitize_
emory
hread
bjc_method_family
arn_unused_result
udited_transfer
eturns_retained
nknown_transfer
_sanitize_address
_returns_retained
ridge_
utable
elated
equires_super
eon_polyvector_type
eqd_work_group_size
hared_lock_function
ork_group_size_hint
ssert_exclusive_lock
bjc_precise_lifetime
ointer_with_type_tag
hared_locks_required
ype_tag_for_datatype
rgument_with_type_tag
o_instrument_function
f_returns_not_retained
xclusive_lock_function
orce_align_arg_pointer
s_returns_
utoreleased
ot_retained
hared_trylock_function
onsumable_auto_cast_state
xclusive_trylock_function
o_address_safety_analysis
bjc_returns_inner_pointer
roperty
electany
olor
ndex
atch
:buffer
nu::
ampler
oreturn
tch_id
sition
tage_in
ttribute
rid_size
ample_id
ertex_id
acked
eprecated
oint_size
ase_vertex
rid_origin
nstance_id
oint_coord
ample_mask
hreadgroup
td::noreturn
ront_facing
ase_instance
lip_distance
nu_inline
gnu::
onstructor
:threads_per_grid
lang::fallthrough
lways_inline
unction_constant
osition_in_patch
rries_dependency
nter_perspective
ample_perspective
nu::returns_nonnull
entroid_perspective
arly_fragment_tests
lang::type_visibility
nu::transparent_union
enter_no_perspective
ample_no_perspective
hreadgroups_per_grid
nu::warn_unused_result
td::carries_dependency
:thread_execution_width
nu::no_sanitize_address
entroid_no_perspective
position_in_grid
_per_threadgroup
lang::warn_unused_result
:render_target_array_index
nu::no_instrument_function
::thread_index_in_threadgroup
::threadgroup_position_in_grid
gnu::no_address_safety_analysis
::thread_position_in_threadgroup
_w64
decl
ernel
ertex
ascal
lignas
rivate
tdcall
ragment
ead_only
ead_write
rite_only
naligned
COMPLETION: 
 (Hidden)
Pattern : 
OVERLOAD: 
unspecified
imaginary
complex
(decltype)
(error)
 double
type_info
size_t
sampler_t
*** Semantic Analysis Stats:
 SFINAE diagnostics trapped.
///<
/**<
super
stack empty
mac68k
no record matching name
bit-field
vector element
property expression
read_imageui
read_imagei
read_imageh
read_imagef
write_imageui
write_imagei
write_imageh
write_imagef
__rd
__rw
__wr
(void*)
) - 
strlen(
) - 1
Metal 1.2
unichar
SInt32
UInt32
c_str
c_str()
.c_str()
(size_t)(
>= 0
0 <=
addOperationWithBlock
_Block_copy
, ...
NULL
statements
condition
expression
args
assign
unsafe_unretained
readwrite
strong
nonatomic
atomic
setter
method
getter
inout
bycopy
byref
oneway
sender
macro
arguments
operator+
operator-
operator*
operator/
operator%
operator^
operator&
operator|
operator~
operator!
operator=
operator<
operator>
operator+=
operator-=
operator*=
operator/=
operator%=
operator^=
operator&=
operator|=
operator<<
operator>>
operator<<=
operator>>=
operator==
operator!=
operator<=
operator>=
operator&&
operator||
operator++
operator--
operator,
operator->*
operator->
operator new
operator delete
operator new[]
operator delete[]
operator()
operator[]
 restrict
template<...> class
(...)
(void)
inout 
out 
bycopy 
byref 
oneway 
, nil
, NULL
, (void*)0
struct <anonymous>
__interface <anonymous>
class <anonymous>
union <anonymous>
enum <anonymous>
declarations
string-literal
declaration
qualifier
parameters
init-statement
init-expression
inc-expression
Objective-C type
CF type
std::type_info
expression-or-type
expressions
std::nullptr_t
sizeof...
parameter-pack
@end
@dynamic
@synthesize
@property
@required
@optional
@class
@interface
@protocol
@implementation
@compatibility_alias
@import
@private
@protected
@public
@package
@try
@catch
parameter
@finally
@throw
@synchronized
char[]
const char[]
@encode
type-name
Protocol *
protocol-name
@selector
NSString *
NSArray *
objects, ...
NSDictionary *
object, ...
copyWithZone
mutableCopyWithZone
awakeFromCoder
replacementObjectFromCoder
classForCoder
superclass
allocWithZone
NSMutableArray
NSArray
NSMutableSet
NSSet
countOf
NSUInteger
objectIn
AtIndex
AtIndexes
NSIndexSet *
indexes
object-type
range:
NSRange
inRange
insertObject
insertObject:
atIndexes
atIndexes:
removeObjectFrom
replaceObjectIn
withObject
withObject:
replace
with
NSEnumerator
enumeratorOf
NSEnumerator *
memberOf
Object
NSSet *
objects
intersect
keyPathsForValuesAffecting
automaticallyNotifiesObserversOf
typename 
FILE
jmp_buf
sigjmp_buf
ucontext_t
template<> 
constexpr 
  int 
asprintf
vasprintf
__CFStringMakeConstantString
bad_alloc
this system field has retaining ownership
enum 
__interface 
objc_msgSendSuper
vertex or post-tesselation [patch] vertex
post-tesselation [patch] vertex or fragment
post-tesselation [patch] vertex
const 
quad
float2
triangle
float3
constant buffer
patch-data attribute
color attachment index
ABORT
UNDEF
a CFString
an NSString
a string type
CFString
strftime
printf0
strfmon
cmn_err
vcmn_err
zcmn_err
kprintf
gcc_diag
gcc_cdiag
gcc_cxxdiag
gcc_tdiag
__CFString
NSMutableString
string type
pointer
unwind_word
struct type
float2 or float3
consumed
unconsumed
this system declaration uses an unsupported type
const &
 const &
initializer_list
using 
"C++"
__atomic
inline 
__builtin_objc_memmove_collectable
__builtin_memcpy
init method returns a type unrelated to its receiver type
 : NSObject 
(id)
forwardInvocation
NSProxy
throw()
throw(
noexcept(
(void*) 0
object_getClass
object_getClass(
__builtin_trap
this->
self->
cudaConfigureCall
object_setClass
object_setClass(
NSString
nextObject
 isEqual:
isEqual
__builtin_shufflevector
_GUID
'size_t'
integral
keys
NSCopying
respondsToSelector
CFBridgingRelease
CFBridgingRelease 
__bridge_transfer 
CFBridgingRetain
__bridge 
CFBridgingRetain 
converts between Objective-C and C pointers in -fobjc-arc
__bridge_retained 
 = {}
'\0'
L'\0'
u'\0'
U'\0'
Variable
Parameter
CF audited function Parameter
Result
Exception
Member
Temporary
CompoundLiteral
RelatedResult
Base
Delegating
ArrayElement 
VectorElement 
ComplexElement 
LambdaCapture 
Failed sequence: 
too many initializers for reference
array requires initializer list
array requires initializer list or string literal
array requires initializer list or wide string literal
narrow string into wide char array
wide string into char array
incompatible wide string into wide char array
array type mismatch
non-constant array initializer
address of overloaded function failed
overload resolution for reference initialization failed
non-const lvalue reference bound to temporary
non-const lvalue reference bound to unrelated type
rvalue reference bound to an lvalue
reference initialization drops qualifiers
reference initialization failed
conversion failed
conversion from property failed
too many initializers for scalar
referencing binding to initializer list
initializer list for non-aggregate, non-scalar type
overloading failed for user-defined conversion
constructor overloading failed
default initialization of a const variable
initialization of incomplete type
list initialization checker failure
variable length array has an initializer
initializer expression isn't contextually valid
list constructor overloading failed
list copy initialization chose explicit constructor
invalid vector initializer: incorrect number of initializers.
invalid constant sampler initializer: invalid combination
invalid constant sampler initializer: invalid argument
Dependent sequence
Normal sequence: 
resolve address of overloaded function
derived-to-base case (rvalue
derived-to-base case (xvalue
derived-to-base case (lvalue
bind reference to lvalue
bind reference to a temporary
extraneous C++03 copy to temporary
user-defined conversion via 
qualification conversion (rvalue)
qualification conversion (xvalue)
qualification conversion (lvalue)
load (lvalue to rvalue)
implicit conversion sequence (
implicit conversion sequence with narrowing prohibited (
list aggregate initialization
list initialization via constructor
unwrap reference initializer list
rewrap reference initializer list
constructor initialization
zero initialization
C assignment
string initialization
Objective-C object conversion
array initialization
parenthesized array initialization
pass by indirect copy and restore
pass by indirect restore
Objective-C object retension
std::initializer_list from initializer list
OpenCL sampler_t from integer constant
OpenCL event_t from zero
Metal Vector Initialization
'this'
 result(s)
, ambiguous
, base paths present
vector
retain (or strong)
@property (nonatomic
@property (nonatomic) 
@property (nonatomic, 
 or 
No conversion
Lvalue-to-rvalue
Array-to-pointer
Function-to-pointer
Noreturn adjustment
Qualification
Integral promotion
Floating point promotion
Complex promotion
Integral conversion
Floating conversion
Complex conversion
Floating-integral conversion
Pointer conversion
Pointer-to-member conversion
Boolean conversion
Compatible-types conversion
Derived-to-base conversion
Vector conversion
Vector splat
Complex-real conversion
Block Pointer conversion
Transparent Union ConversionWriteback conversion
 (by copy constructor)
 (direct reference binding)
 (reference binding)
No conversions required
aggregate initialization
Worst std::initializer_list element conversion: 
Standard conversion: 
User-defined conversion: 
Ellipsis conversion
Ambiguous conversion
Bad conversion
static_cast<
'enable_if'
objectForKeyedSubscript
objectAtIndexedSubscript
forKeyedSubscript
atIndexedSubscript
countByEnumeratingWithState
__range
__begin
__end
literal
__context
default captured statement
OpenMP region
[with 
common_type
_Map_base
__detail
cannot instantiate %0 yet
instantiating function definition
instantiating variable definition
type name
$auto-
'__ptr32'
'__ptr64'
'__sptr'
'__uptr'
'static'
type qualifier
Expected lexical block
Expected visible lookup table block
malformed block record in AST file
malformed source manager block record in AST file
source location entry ID out-of-range for AST file
incorrectly-formatted source location entry in AST file
AST record has invalid code
could not find file '
' referenced by AST file
error at end of module block in AST file
malformed preprocessor detail record in AST file
malformed comments block in AST file
duplicate TYPE_OFFSET record in AST file
duplicate DECL_OFFSET record in AST file
duplicate IDENTIFIER_OFFSET record in AST file
invalid special-types record
invalid weak identifiers record
SourceLocation remap refers to unknown module
Multiple SOURCE_LOCATION_PRELOADS records in AST file
Invalid VTABLE_USES record
Invalid existing PendingInstantiations
Invalid PENDING_IMPLICIT_INSTANTIATIONS block
Invalid SEMA_DECL_REFS block
invalid DECL_UPDATE_OFFSETS block in AST file
invalid DECL_REPLACEMENTS block in AST file
duplicate OBJC_CATEGORIES_MAP record in AST file
duplicate CXX_BASE_SPECIFIER_OFFSETS record in AST file
Invalid existing UndefinedButUsed
invalid undefined-but-used record
duplicate LOCAL_REDECLARATIONS_MAP record in AST file
duplicate MACRO_OFFSET record in AST file
Unable to load module "
invalid record at top-level of AST file
malformed BlockInfoBlock in AST file
FILE type is NULL
Invalid FILE type in AST file
jmp_buf type is NULL
Invalid jmp_buf type in AST file
sigjmp_buf type is NULL
ucontext_t type is NULL
malformed submodule block record in AST file
missing submodule metadata record at beginning of block
malformed module definition
too many submodules
mismatched umbrella headers in submodule
mismatched umbrella directories in submodule
submodule metadata record not at beginning of block
no preprocessing record
Incorrect encoding of extended qualifier type
Incorrect encoding of complex type
Incorrect encoding of pointer type
Incorrect encoding of decayed type
Decayed type does not decay
Incorrect encoding of adjusted type
Incorrect encoding of block pointer type
Incorrect encoding of lvalue reference type
Incorrect encoding of rvalue reference type
Incorrect encoding of member pointer type
incorrect encoding of vector type in AST file
incorrect encoding of extended vector type in AST file
incorrect encoding of dependent sized vector type in AST file
incorrect encoding of no-proto function type
incorrect encoding of typedef type
incorrect encoding of typeof(type) in AST file
incorrect encoding of record type
incorrect encoding of enum type
incorrect encoding of attributed type
incorrect encoding of paren type
incorrect encoding of pack expansion type
Incorrect encoding of atomic type
Malformed AST file: missing C++ base specifiers
declaration ID out-of-range for AST file
Corrupted AST file
*** AST File Statistics:
  %u/%u source location entries read (%f%%)
  %u/%u types read (%f%%)
  %u/%u declarations read (%f%%)
  %u/%u identifiers read (%f%%)
  %u/%u macros read (%f%%)
  %u/%u selectors read (%f%%)
  %u/%u statements read (%f%%)
  %u/%u lexical declcontexts read (%f%%)
  %u/%u visible declcontexts read (%f%%)
  %u/%u method pool entries read (%f%%)
  %u/%u method pool lookups succeeded (%f%%)
  %u/%u method pool table lookups succeeded (%f%%)
  %u / %u identifier table lookups succeeded (%f%%)
*** PCH/ModuleFile Remappings:
Global bit offset map
Global source location entry map
Global type map
Global declaration map
Global identifier map
Global macro map
Global submodule map
Global selector map
Global preprocessed entity map
*** PCH/Modules Loaded:
no identifier table in AST file
no macro table in AST file
submodule ID out of range in AST file
selector ID out of range in AST file
Microsoft Visual C++ full compatibility mode
Microsoft C++ extensions
Microsoft inline asm blocks
Borland extensions
C++11
C++1y
Objective-C 1
Objective-C 2
'//' comments
bool, true, and false keywords
wchar_t keyword
GNU keywords
digraphs
C++ operator name keywords
Apple kext support
writable string support
const-qualified string support
lax vector conversions
AltiVec-style vector initializers
exception handling
Objective-C exceptions
C++ exceptions
setjmp-longjump exception handling
traditional CPP emulation
run-time type information
Microsoft-compatible structure layout
freestanding implementation
disable builtin functions
disable math builtin functions
POSIX thread support
blocks extension to C
errno support for math functions
modules extension to C
require declaration of module uses
__OPTIMIZE__ predefined macro
__OPTIMIZE_SIZE__ predefined macro
__STATIC__ predefined macro (as opposed to __DYNAMIC__)
default struct packing maximum alignment
__PIC__ level
__PIE__ level
GNU inline semantics
__NO_INLINE__ predefined macro
__DEPRECATED predefined macro
__FAST_MATH__ predefined macro
__FINITE_MATH_ONLY__ predefined macro
signed char
unsigned short wchar_t
short enum types
OpenCL version
Native half type support
OpenMP support
OpenCL: CL allow mad enable
OpenCL: CL fast relax math
OpenCL: CL treat double fp constant as single fp
OpenCL: CL allow denorms to be flush to zero
OpenCL: CL turn on autovectorizer on the cpu
OpenCL: Allows correctly rounded single precision divide and sqrt
Metal iOS dialect
Metal OSX dialect
Metal: support for allowing builtins in fields
Metal: support for the "base_vertex" and "base_instance" attributes
Metal: support for border color
Metal: bugfix version
Metal: do not flush denorms to zero
Metal: support derived classes
Metal: support dual source blending
Metal: early fragment test
Metal: support for Uber function constants
Metal: major version
Metal: minor version
Metal: support double-precision floating point type
Metal: support for struct of resources
Metal: support for Tessellation functions
Metal: support unions
Metal: maximum constant buffer count
Metal: maximum constant buffer size in KB
implicit __attribute__((malloc)) for C++'s new operators
enable sized deallocation functions
no constant CoreFoundation strings
treating double-precision floating point constants as single precision constants
OpenCL fast relaxed math
FP_CONTRACT
bit-field type alignment
hexagon-qdsp6 backward compatibility
Objective-C automated reference counting
__weak support in the ARC runtime
Subscripting support in legacy ObjectiveC runtime
OpenCL fake address space map
OpenCL address space map mangling mode
-mrtd calling convention
optional blocks runtime
Objective-C Garbage Collection mode
value symbol visibility
type symbol visibility
stack protector mode
signed integer overflow handling
version of Microsoft Visual C/C++
Apple gcc-compatible #pragma pack handling
retain documentation comments from system headers in the AST
target Objective-C runtime
block command names
target CPU
target ABI
target linker version
attempt to read a C++ base-specifier record as a declaration
CONTROL_BLOCK
METADATA
IMPORTS
LANGUAGE_OPTIONS
TARGET_OPTIONS
ORIGINAL_FILE
ORIGINAL_PCH_DIR
ORIGINAL_FILE_ID
INPUT_FILE_OFFSETS
DIAGNOSTIC_OPTIONS
FILE_SYSTEM_OPTIONS
HEADER_SEARCH_OPTIONS
PREPROCESSOR_OPTIONS
INPUT_FILES_BLOCK
INPUT_FILE
AST_BLOCK
TYPE_OFFSET
DECL_OFFSET
IDENTIFIER_OFFSET
IDENTIFIER_TABLE
EAGERLY_DESERIALIZED_DECLS
SPECIAL_TYPES
STATISTICS
TENTATIVE_DEFINITIONS
UNUSED_FILESCOPED_DECLS
LOCALLY_SCOPED_EXTERN_C_DECLS
SELECTOR_OFFSETS
METHOD_POOL
PP_COUNTER_VALUE
SOURCE_LOCATION_OFFSETS
SOURCE_LOCATION_PRELOADS
EXT_VECTOR_DECLS
PPD_ENTITIES_OFFSETS
REFERENCED_SELECTOR_POOL
TU_UPDATE_LEXICAL
LOCAL_REDECLARATIONS_MAP
SEMA_DECL_REFS
WEAK_UNDECLARED_IDENTIFIERS
PENDING_IMPLICIT_INSTANTIATIONS
DECL_REPLACEMENTS
UPDATE_VISIBLE
DECL_UPDATE_OFFSETS
DECL_UPDATES
CXX_BASE_SPECIFIER_OFFSETS
DIAG_PRAGMA_MAPPINGS
CUDA_SPECIAL_DECL_REFS
HEADER_SEARCH_TABLE
FP_PRAGMA_OPTIONS
OPENCL_EXTENSIONS
DELEGATING_CTORS
KNOWN_NAMESPACES
UNDEFINED_BUT_USED
MODULE_OFFSET_MAP
SOURCE_MANAGER_LINE_TABLE
OBJC_CATEGORIES_MAP
FILE_SORTED_DECLS
IMPORTED_MODULES
MERGED_DECLARATIONS
LOCAL_REDECLARATIONS
OBJC_CATEGORIES
MACRO_OFFSET
MACRO_TABLE
LATE_PARSED_TEMPLATE
SOURCE_MANAGER_BLOCK
SM_SLOC_FILE_ENTRY
SM_SLOC_BUFFER_ENTRY
SM_SLOC_BUFFER_BLOB
SM_SLOC_EXPANSION_ENTRY
PREPROCESSOR_BLOCK
PP_MACRO_OBJECT_LIKE
PP_MACRO_FUNCTION_LIKE
PP_TOKEN
DECLTYPES_BLOCK
TYPE_EXT_QUAL
TYPE_COMPLEX
TYPE_POINTER
TYPE_BLOCK_POINTER
TYPE_LVALUE_REFERENCE
TYPE_RVALUE_REFERENCE
TYPE_MEMBER_POINTER
TYPE_CONSTANT_ARRAY
TYPE_INCOMPLETE_ARRAY
TYPE_VARIABLE_ARRAY
TYPE_VECTOR
TYPE_EXT_VECTOR
TYPE_FUNCTION_PROTO
TYPE_FUNCTION_NO_PROTO
TYPE_TYPEDEF
TYPE_TYPEOF_EXPR
TYPE_TYPEOF
TYPE_RECORD
TYPE_ENUM
TYPE_OBJC_INTERFACE
TYPE_OBJC_OBJECT
TYPE_OBJC_OBJECT_POINTER
TYPE_DECLTYPE
TYPE_ELABORATED
TYPE_SUBST_TEMPLATE_TYPE_PARM
TYPE_UNRESOLVED_USING
TYPE_INJECTED_CLASS_NAME
TYPE_TEMPLATE_TYPE_PARM
TYPE_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_NAME
TYPE_DEPENDENT_TEMPLATE_SPECIALIZATION
TYPE_DEPENDENT_SIZED_ARRAY
TYPE_PAREN
TYPE_PACK_EXPANSION
TYPE_ATTRIBUTED
TYPE_SUBST_TEMPLATE_TYPE_PARM_PACK
TYPE_ATOMIC
DECL_TYPEDEF
DECL_ENUM
DECL_RECORD
DECL_ENUM_CONSTANT
DECL_FUNCTION
DECL_OBJC_METHOD
DECL_OBJC_INTERFACE
DECL_OBJC_PROTOCOL
DECL_OBJC_IVAR
DECL_OBJC_AT_DEFS_FIELD
DECL_OBJC_CATEGORY
DECL_OBJC_CATEGORY_IMPL
DECL_OBJC_IMPLEMENTATION
DECL_OBJC_COMPATIBLE_ALIAS
DECL_OBJC_PROPERTY
DECL_OBJC_PROPERTY_IMPL
DECL_FIELD
DECL_MS_PROPERTY
DECL_VAR
DECL_IMPLICIT_PARAM
DECL_PARM_VAR
DECL_FILE_SCOPE_ASM
DECL_BLOCK
DECL_CONTEXT_LEXICAL
DECL_CONTEXT_VISIBLE
DECL_NAMESPACE
DECL_NAMESPACE_ALIAS
DECL_USING
DECL_USING_SHADOW
DECL_USING_DIRECTIVE
DECL_UNRESOLVED_USING_VALUE
DECL_UNRESOLVED_USING_TYPENAME
DECL_LINKAGE_SPEC
DECL_CXX_RECORD
DECL_CXX_METHOD
DECL_CXX_CONSTRUCTOR
DECL_CXX_DESTRUCTOR
DECL_CXX_CONVERSION
DECL_ACCESS_SPEC
DECL_FRIEND
DECL_FRIEND_TEMPLATE
DECL_CLASS_TEMPLATE
DECL_CLASS_TEMPLATE_SPECIALIZATION
DECL_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_VAR_TEMPLATE
DECL_VAR_TEMPLATE_SPECIALIZATION
DECL_VAR_TEMPLATE_PARTIAL_SPECIALIZATION
DECL_FUNCTION_TEMPLATE
DECL_TEMPLATE_TYPE_PARM
DECL_NON_TYPE_TEMPLATE_PARM
DECL_TEMPLATE_TEMPLATE_PARM
DECL_STATIC_ASSERT
DECL_CXX_BASE_SPECIFIERS
DECL_INDIRECTFIELD
DECL_EXPANDED_NON_TYPE_TEMPLATE_PARM_PACK
PREPROCESSOR_DETAIL_BLOCK
PPD_MACRO_EXPANSION
PPD_MACRO_DEFINITION
PPD_INCLUSION_DIRECTIVE
SDKSettings.plist
warning: precompiled header used __DATE__ or __TIME__.
STMT_STOP
STMT_NULL_PTR
STMT_NULL
STMT_COMPOUND
STMT_CASE
STMT_DEFAULT
STMT_LABEL
STMT_ATTRIBUTED
STMT_IF
STMT_SWITCH
STMT_WHILE
STMT_DO
STMT_FOR
STMT_GOTO
STMT_INDIRECT_GOTO
STMT_CONTINUE
STMT_BREAK
STMT_RETURN
STMT_DECL
STMT_GCCASM
STMT_MSASM
EXPR_PREDEFINED
EXPR_DECL_REF
EXPR_INTEGER_LITERAL
EXPR_FLOATING_LITERAL
EXPR_IMAGINARY_LITERAL
EXPR_STRING_LITERAL
EXPR_CHARACTER_LITERAL
EXPR_PAREN
EXPR_UNARY_OPERATOR
EXPR_SIZEOF_ALIGN_OF
EXPR_ARRAY_SUBSCRIPT
EXPR_CALL
EXPR_MEMBER
EXPR_BINARY_OPERATOR
EXPR_COMPOUND_ASSIGN_OPERATOR
EXPR_CONDITIONAL_OPERATOR
EXPR_IMPLICIT_CAST
EXPR_CSTYLE_CAST
EXPR_COMPOUND_LITERAL
EXPR_EXT_VECTOR_ELEMENT
EXPR_INIT_LIST
EXPR_DESIGNATED_INIT
EXPR_IMPLICIT_VALUE_INIT
EXPR_VA_ARG
EXPR_ADDR_LABEL
EXPR_STMT
EXPR_CHOOSE
EXPR_GNU_NULL
EXPR_SHUFFLE_VECTOR
EXPR_BLOCK
EXPR_GENERIC_SELECTION
EXPR_OBJC_STRING_LITERAL
EXPR_OBJC_BOXED_EXPRESSION
EXPR_OBJC_ARRAY_LITERAL
EXPR_OBJC_DICTIONARY_LITERAL
EXPR_OBJC_ENCODE
EXPR_OBJC_SELECTOR_EXPR
EXPR_OBJC_PROTOCOL_EXPR
EXPR_OBJC_IVAR_REF_EXPR
EXPR_OBJC_PROPERTY_REF_EXPR
EXPR_OBJC_KVC_REF_EXPR
EXPR_OBJC_MESSAGE_EXPR
STMT_OBJC_FOR_COLLECTION
STMT_OBJC_CATCH
STMT_OBJC_FINALLY
STMT_OBJC_AT_TRY
STMT_OBJC_AT_SYNCHRONIZED
STMT_OBJC_AT_THROW
EXPR_OBJC_BOOL_LITERAL
EXPR_CXX_OPERATOR_CALL
EXPR_CXX_CONSTRUCT
EXPR_CXX_STATIC_CAST
EXPR_CXX_DYNAMIC_CAST
EXPR_CXX_REINTERPRET_CAST
EXPR_CXX_CONST_CAST
EXPR_CXX_FUNCTIONAL_CAST
EXPR_USER_DEFINED_LITERAL
EXPR_CXX_STD_INITIALIZER_LIST
EXPR_CXX_BOOL_LITERAL
EXPR_CXX_NULL_PTR_LITERAL
EXPR_CXX_TYPEID_EXPR
EXPR_CXX_TYPEID_TYPE
EXPR_CXX_UUIDOF_EXPR
EXPR_CXX_UUIDOF_TYPE
EXPR_CXX_THIS
EXPR_CXX_THROW
EXPR_CXX_DEFAULT_ARG
EXPR_CXX_BIND_TEMPORARY
EXPR_CXX_SCALAR_VALUE_INIT
EXPR_CXX_NEW
EXPR_CXX_DELETE
EXPR_CXX_PSEUDO_DESTRUCTOR
EXPR_EXPR_WITH_CLEANUPS
EXPR_CXX_DEPENDENT_SCOPE_MEMBER
EXPR_CXX_DEPENDENT_SCOPE_DECL_REF
EXPR_CXX_UNRESOLVED_CONSTRUCT
EXPR_CXX_UNRESOLVED_MEMBER
EXPR_CXX_UNRESOLVED_LOOKUP
EXPR_CXX_NOEXCEPT
EXPR_OPAQUE_VALUE
EXPR_PACK_EXPANSION
EXPR_SIZEOF_PACK
EXPR_SUBST_NON_TYPE_TEMPLATE_PARM_PACK
EXPR_CUDA_KERNEL_CALL
unexpected declaration kind '
*** Global Module Index Statistics:
  %u / %u identifier lookups succeeded (%f%%)
.pcm.lock
GLOBAL_INDEX_BLOCK
INDEX_METADATA
MODULE
IDENTIFIER_INDEX
Module: 
  Imports: 
  Base source location offset: 
Source location offset local -> global map
  Base identifier ID: 
  Number of identifiers: 
Identifier ID local -> global map
  Base macro ID: 
  Number of macros: 
Macro ID local -> global map
  Base submodule ID: 
  Number of submodules: 
Submodule ID local -> global map
  Base selector ID: 
  Number of selectors: 
Selector ID local -> global map
  Base preprocessed entity ID: 
  Number of preprocessed entities: 
Preprocessed entity ID local -> global map
  Base type index: 
  Number of types: 
Type index local -> global map
  Base decl ID: 
  Number of decls: 
Decl ID local -> global map
module file out of date
module file not found
0@.%
0@,%
0@%
0@%
4Z<
5Z<
\LD
<premain>
