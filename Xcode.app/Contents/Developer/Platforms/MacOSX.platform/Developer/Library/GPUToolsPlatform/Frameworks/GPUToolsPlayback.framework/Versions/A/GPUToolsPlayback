St12length_error
St11logic_error
St9exception
NSt3__117bad_function_callE
(knN
St8bad_cast
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
GPUMTLOverrideDeviceFamily
v32@?0@"<MTLDevice>"8Q16^c24
device
T@"<MTLDevice>",&,N,V_device
indirectArgumentManager
T@"DYMTLIndirectArgumentBufferManager",&,N,V_indirectArgumentManager
indirectCommandManager
T@"DYMTLIndirectCommandBufferManager",&,N,V_indirectCommandManager
styleMask
windowLevel
strongLayerManager
T@"<DYLayerManager>",R,N
layerManager
T@"<DYLayerManager>",W,N,V_layerManager
        #include <metal_graphics>
        #include <metal_texture>
        using namespace metal;
    
        fragment vec<float, 4> wireframeCreationFragment()
        {
            return vec<float, 4>(1.0, 1.0, 1.0, 1.0);
        }
    
        kernel void createOutlineTexture(texture2d<half, access::read> solid [[texture(0)]], texture2d<half, access::write> outline [[texture(1)]], uint2 gridPosition [[thread_position_in_grid]])
        {
            uint width = solid.get_width();
            uint height = solid.get_height();
            if (gridPosition.x < width && gridPosition.y < height)
            {
                auto currentColor = solid.read(gridPosition).r;
                outline.write(vec<half, 4>(0.0, 0.0, 0.0, 0.0), gridPosition);
                
                if (abs(currentColor - 0.0) <= 0.0001)
                {
                    auto left = solid.read(uint2(gridPosition.x - 1, gridPosition.y)).r;
                    auto right = solid.read(uint2(gridPosition.x + 1, gridPosition.y)).r;
                    auto up = solid.read(uint2(gridPosition.x, gridPosition.y + 1)).r;
                    auto down = solid.read(uint2(gridPosition.x, gridPosition.y - 1)).r;
                    if (left == 1 || right == 1 || up == 1 || down == 1)
                    {
                        // pixel is part of the outline
                        outline.write(vec<half, 4>(1.0, 1.0, 1.0, 1.0), gridPosition);
                    }
                }
                else if (abs(currentColor - 1.0) <= 0.0001 && (gridPosition.x == 0 || gridPosition.y == 0 || gridPosition.x == width - 1 || gridPosition.y == height - 1))
                {
                     outline.write(vec<half, 4>(1.0, 1.0, 1.0, 1.0), gridPosition);
                }
            }
        }
    
-[DYMTLDebugWireframeRenderer initWithDebugFunctionPlayer:]
_wireframeLibrary != nil
wireframeCreationFragment
_wireframeCreationFragmentFunction != nil
createOutlineTexture
_outlinePostProcessFunction != nil
tessellationControlPointIndexType
v32@?0^{?=ccQ@QQQQQcff}8Q16^c24
wireframeTexture
T@"<MTLTexture>",R,N,V_wireframeTexture
outlineTexture
T@"<MTLTexture>",R,N,V_outlineTexture
solidTexture
T@"<MTLTexture>",R,N,V_solidTexture
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
label
T@"NSString",C
T@"<MTLDevice>",R
cpuCacheMode
storageMode
heap
T@"<MTLHeap>",R
allocatedSize
length
T@"NSString",R
supportIndirectCommandBuffers
Tc,R
GPUToolsInternalPostTransformPipelineStateLabel
postVertexDumpBuffer
T@"<MTLBuffer>",R,N,V_postVertexDumpBuffer
bufferVitualAddressMap
T^{map<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> >, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > > > >={__tree<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::less<unsigned long long>, true> >=Q}}},R,N,V_bufferVitualAddressMap
textureMap
T^{unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> >=f}}},R,N,V_textureMap
samplerMap
T^{unordered_map<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > > > >={__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::equal_to<unsigned long long>, true> >=f}}},R,N,V_samplerMap
replayerBufferBaseVirtualAddressMap
T^{map<unsigned long long, unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >={__tree<std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, unsigned long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, unsigned long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::less<unsigned long long>, true> >=Q}}},R,N,V_replayerBufferBaseVirtualAddressMap
replayerTextureMap
T^{unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> >=f}}},R,N,V_replayerTextureMap
replayerSamplerMap
T^{unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> >=f}}},R,N,V_replayerSamplerMap
v32@?0@"MTLStructMember"8Q16^c24
-fno-tracepoint-instrument-line-markers
Error creating instrumented library: %@
kDYMTLShaderDebuggerInstrumentedMetallib is nil
kDYMTLShaderDebuggerLibraryId library not found in object map
v32@?0@"MTLArgument"8Q16^c24
rootResource
T@"<MTLResource>",R
parentTexture
T@"<MTLTexture>",R
parentRelativeLevel
parentRelativeSlice
buffer
T@"<MTLBuffer>",R
bufferOffset
bufferBytesPerRow
iosurface
T^{__IOSurface=},R
iosurfacePlane
textureType
pixelFormat
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
shareable
Tc,R,GisShareable
framebufferOnly
Tc,R,GisFramebufferOnly
allowGPUOptimizedContents
_prepareRenderCommandEncoder: Unhandled ROI type
v32@?0@"MTLSamplerDescriptor"8Q16^c24
Error creating instrumented render pipeline state: %@
Error creating instrumented compute pipeline state: %@
Error creating instrumented function: %@
Incorrect ROI parameters
Invalid command encoder for Vertex ROI type
Invalid command encoder for Fragment ROI type
Invalid command encoder for Kernel ROI type
responsibleProcess
sharedAllocationInfo
T@"MTLResourceAllocationInfo",R
cachedAllocationInfo
uniqueIdentifier
resourceIndex
numFaces
isDrawable
Shader bitcode not found.
Could not generate shader metadata.
Trace buffer not big enough. Retry with new size.
tracepoint
return_value(
MTLStatCommandBufferIndex
MTLStatEncoderIndex
MTLStatCommandIndex
MTLStat_nSec
MTLStatTotalGPUCycles
SW_PBUsed
_fedf2c59
GPUFrameProfilingPowerStateWarmupTime
AverageSamples
frame profile data
splitEncoderCommandCount
splitPerEncoderKickCount
encoder time data
kick time data
kick cycle data
tilerParamBufBytesUsedArray
perEncoderIndexDrawCallCount
frame counters
First
Depth.
Stencil.
v8@?0
-[DYMTLCommonDebugFunctionPlayer thumbnailCache]
[_thumbnailDevice isKindOfClass:[MTLDebugDevice class]]
-[DYMTLCommonDebugFunctionPlayer dependencyGraphThumbnailCache]
v24@?0@"<MTLTexture>"8Q16
v32@?0^{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}8I16I20^B24
#include <metal_stdlib>
using namespace metal;
struct TransformMatrices
    float4 modelview_projection_matrix[4];
struct VertexOutput
    vec<float, 4> pos [[position]];
vertex VertexOutput texturedQuadVertex(uint vid [[ vertex_id ]])
    VertexOutput out;
    out.pos =  float4(0.0, 0.0, 0.0, 1.0);
    return out;
texturedQuadVertex
NopPipeline
v32@?0@"<MTLCommandBuffer>"8@"NSData"16Q24
type
DELTA
perEncoderDrawCallCount
currentEncoderIndex
TI,N,V_currentEncoderIndex
counterListsPerPass
T@"NSMutableArray",&,N,V_counterListsPerPass
statVertices
T@"NSString",&,N,V_statVertices
statPixels
T@"NSString",&,N,V_statPixels
frameCounters
T@"NSMutableArray",&,N,V_frameCounters
shouldIgnoreCaptureFile
Tc,N,V_shouldIgnoreCaptureFile
wireframeRenderMode
Tq,N,V_wireframeRenderMode
postVertexDump
T@"DYMTLPostVertexDump",R,N,V_postVertexDump
targetFunctionNeedsSeparatedPostVertexDump
Tc,R,N,V_targetFunctionNeedsSeparatedPostVertexDump
shaderDebuggerTraceGenerator
T@"DYMTLShaderDebuggerTraceGenerator",R,N,V_shaderDebuggerTraceGenerator
format
Color.%u
Color.
v16@?0@"<MTLCommandBuffer>"8
Failed to dispatch: 0x%x
ConvertIndirectCommandBufferDataToFBufStream
Ctulul
Cululululul
Cululultulullul
Cululultululul
Cululultultululul
gputools.%@.%p
gputools.%@.%p.%@
messageLock
messageProcessingQueue
couldn't get global client transport
couldn't get global client source
v16@?0@"DYTransportMessage"8
version
interpose-feature-version
interpose-patch-version
couldn't send replayer ready message: %@
c24@?0@"DYTransportMessage"8@"NSDictionary"16
-[DYReplayController _processMessage:]
uuidString
filename
uuid
Initial draw
replayer
v16@?0@"NSDictionary"8
-[DYReplayController _loadArchives:error:]
filenames
gputrace
-[DYReplayController _playbackCurrentArchiveAndExperiments]
![self.archiveStack empty]
-[DYReplayController _playbackArchiveWithExperiment:passingFuture:resolvingFuture:]
-[DYReplayController _playbackArchiveWithExperiment:passingFuture:resolvingFuture:]_block_invoke
result_message
self.replayMessage
-[DYReplayController _beginDebugArchive]
queue
T^{dispatch_queue_s=},N,Vqueue
transport
T@"DYTransport",&,N,Vtransport
source
T@"DYTransportSource",&,N,Vsource
replayMessage
T@"DYTransportMessage",&,N,VreplayMessage
origSourceMessageHandler
T@?,C,N,VorigSourceMessageHandler
archiveStack
T@"DYCaptureArchiveStack",&,N,VarchiveStack
playbackEngine
T@"DYPlaybackEngine",&,N,VplaybackEngine
replayControllerSupport
T@"<DYReplayControllerSupport>",&,N,VreplayControllerSupport
experiments
T@"NSMutableArray",&,N,Vexperiments
profileInfo
T@"NSMutableDictionary",&,N,VprofileInfo
Load archive
Setup
initWithCaptureStore:
alloc
initWithFunctionPlayer:
setIndirectArgumentManager:
setIndirectCommandManager:
finish
dealloc
standardUserDefaults
stringForKey:
length
componentsSeparatedByString:
objectAtIndexedSubscript:
name
hasPrefix:
enumerateObjectsUsingBlock:
count
_getDeviceWithName:
setDevice:
isEqual:
bytes
processArguments
indirectArgumentManager
processCommandBuffer:functionIndex:ancestorMapData:indirectArgumentBuffersData:resourceMapsData:driverDecodingData:
encodeIndirectArgumentsForBuffer:data:
class
isKindOfClass:
options
contents
device
newBufferWithLength:options:
commandQueue
commandBuffer
blitCommandEncoder
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
endEncoding
commit
stringWithUTF8String:
deviceForID:withDeviceName:
addGPUVirtualAddress:forObjectId:
restoreBuffer:withData:commandQueue:
restoreBuffer:optimizedRanges:commandQueue:
addRenderPipelineStateUniqueIdentifier:forObjectId:
newBufferWithBytes:length:options:
didModifyRange:
_createPrivateBufferForFunctionWithDevice:bytes:length:resourceOptions:
storageMode
isDrawable
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
pixelFormat
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
executePlatformFunction
vertexBytesKeyAtIndex:
dataWithBytes:length:
fragmentBytesKeyAtIndex:
computeBytesKeyAtIndex:
newCommandQueue
shouldExecuteGraphicsFunction
_saveBytes
commitAndWaitUntilSubmitted
newSharedTextureWithHandle:
newSharedTextureWithDescriptor:
newSharedEventWithHandle:
newSharedEvent
setObject:forKey:
objectForKey:
removeObjectForKey:
keyForOriginalObject:
objectMap
vertexBytesForKey:
fragmentBytesForKey:
tileBytesForKey:
computeBytesForKey:
executeGraphicsFunction
isFrameBoundary
.cxx_destruct
.cxx_construct
indirectCommandManager
_objectMap
_commandQueueSet
_vertexBytesDataMap
_fragmentBytesDataMap
_tileBytesDataMap
_computeBytesDataMap
_indirectArgumentManager
_indirectCommandManager
_device
isStatEnabled
getStatLocations
setStatLocations:
strongLayerManager
layerForID:
createLayerWithID:contentRect:contentsScale:properties:isCoreAnimationSurface:
updateLayer:contentRect:contentsScale:properties:
numberWithUnsignedLongLong:
numberWithLongLong:
dictionaryWithObjects:forKeys:count:
updateLayer:contentRect:contentsScale:properties:windowRect:
setDrawableSize:
setPixelFormat:
setFramebufferOnly:
nextDrawable
setPresentsWithTransaction:
texture
presentAtTime:
present
setTransform:forLayerID:withScreenToLayerScale:
setPosition:forLayerID:
setAnchorPoint:forLayerID:
layerManager
setLayerManager:
_drawableMap
_drawableRenderabilityStatusMap
_layerManager
init
newLibraryWithSource:options:error:
newFunctionWithName:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
usage
setUsage:
renderPassDescriptor
colorAttachments
setLoadAction:
setStoreAction:
setClearColor:
supportsFeatureSet:
respondsToSelector:
width
height
setWidth:
setHeight:
setTextureType:
setArrayLength:
newTextureWithDescriptor:
descriptor
isRasterizationEnabled
_createWireframeTexture:renderPassDescriptor:
_createOutlineTexture:renderPassDescriptor:
vertexDescriptor
setVertexDescriptor:
vertexFunction
setVertexFunction:
setFragmentFunction:
inputPrimitiveTopology
setInputPrimitiveTopology:
tessellationFactorFormat
setTessellationFactorFormat:
tessellationPartitionMode
setTessellationPartitionMode:
tessellationOutputWindingOrder
setTessellationOutputWindingOrder:
isTessellationFactorScaleEnabled
setTessellationFactorScaleEnabled:
tessellationFactorStepFunction
setTessellationFactorStepFunction:
maxTessellationFactor
setMaxTessellationFactor:
tessellationControlPointIndexType
setTessellationControlPointIndexType:
newRenderPipelineStateWithDescriptor:error:
newComputePipelineStateWithFunction:error:
_saveEncoderState:
reflection
vertexArguments
countByEnumeratingWithState:objects:count:
access
type
fragmentArguments
index
array
addObject:
enumerateFragmentBuffersUsingBlock:
enumerateFragmentTexturesUsingBlock:
containsObject:
enumerateVertexBuffersUsingBlock:
enumerateVertexTexturesUsingBlock:
createWireframeRenderCommandEncoder:
engine
wireframeLineWidth
function
tessellationWireframeLineWidth
setTexture:
setRenderTargetArrayLength:
renderCommandEncoderWithDescriptor:
_loadEncoderState:
newDepthStencilStateWithDescriptor:
setDepthStencilState:
setRenderPipelineState:
setTriangleFillMode:
textureType
mipmapLevelCount
newTextureViewWithPixelFormat:textureType:levels:slices:
computeCommandEncoder
setComputePipelineState:
setTexture:atIndex:
dispatchThreadgroups:threadsPerThreadgroup:
_prepareWireframeTextureWithEncoder:andCommandBuffer:andPipelineState:andParallelEncoder:andRenderPassDescriptor:
viewports
viewport
scissorRects
scissorRect
frontFacingWinding
cullMode
tessellationFactorScale
tessellationFactorBufferInstanceStride
tessellationFactorBufferArgument
enumerateVertexSamplersUsingBlock:
setViewports:count:
setViewport:
setScissorRects:count:
setScissorRect:
setFrontFacingWinding:
setCullMode:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
setVertexBytes:length:atIndex:
setVertexBuffer:offset:atIndex:
setVertexTexture:atIndex:
setVertexSamplerState:atIndex:
initWithDebugFunctionPlayer:
createSolidRenderCommandEncoder:commandBufferId:commandEncoderId:parallelEncoderId:
createOutlineTexture
prepareWireframeTextureWithCommandBufferId:commandEncoderId:parallelEncoderId:pipelineId:renderPassDescriptor:
wireframeTexture
outlineTexture
solidTexture
_player
_wireframeLibrary
_wireframeCreationFragmentFunction
_outlinePostProcessFunction
_wireframeTextureDescriptor
_outlineTextureDescriptor
_wireframeTexture
_outlineTexture
_solidTexture
_wireframeRenderPassColorAttachmentDescriptor
_wireframeRenderPassDescriptor
_solidRenderPassColorAttachmentDescriptor
_solidRenderPassDescriptor
_wireframeRenderPipelineState
_outlineComputePipelineState
_encoder_viewports
_encoder_scissorRects
_encoder_frontFacingWinding
_encoder_cullMode
_encoder_tessellationFactorBuffer
_encoder_tessellationFactorScale
_encoder_tessellationFactorBufferInstanceStride
_encoder_vertexBufferArgs
_encoder_vertexTextureArgs
_encoder_vertexSamplerArgs
_originalCommandEncoderId
_originalCommandBuffer
_originalEncoder
_originalParallelEncoder
_supports_tessellation
inheritPipelineState
renderPipelineState
inheritBuffers
maxVertexBufferBindCount
maxFragmentBufferBindCount
setFragmentBytes:length:atIndex:
setFragmentBuffer:offset:atIndex:
saveEncoder:withDescriptor:player:
restoreEncoder:withDescriptor:
_pipelineState
_vertexBuffers
_vertexBytes
_vertexBufferOffsets
_vertexBytesLength
_fragmentBuffers
_fragmentBytes
_fragmentBufferOffsets
_fragmentBytesLength
_calculateGPUVirtualAddress
saveEncoder:withDescriptor:
size
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
originalObject
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
rangeValue
optimizeIndirectCommandBuffer:withRange:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
setPurgeableState:
makeAliasable
isAliasable
label
setLabel:
cpuCacheMode
heap
allocatedSize
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
gpuAddress
supportIndirectCommandBuffers
uniqueIdentifier
dataWithBytesNoCopy:length:freeWhenDone:
bufferIdAndOffsetForGPUVirtualAddress:
renderPipelineIdForUniqueIdentifier:
executeIndirectRenderCommand:withData:atIndex:descriptor:
executeIndirectRenderCommands:withData:forRange:descriptor:
fillCommandEncoder:withData:atIndex:descriptor:
updateReplayerTranslationBuffer
convertIndirectCommandBufferData:range:toFBufStream:
_gpuVirtualAddressMap
_renderPipelineStateUniqueIdentifier
_gpuVirtualAddressArray
_recalculateVirtualAddress
commandTypes
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
indirectRenderCommandAtIndex:
reset
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
postVertexDumpBufferIndex
maxColorAttachments
setObject:atIndexedSubscript:
internalPipelineStateLabel
depthAttachmentPixelFormat
setDepthAttachmentPixelFormat:
stencilAttachmentPixelFormat
setStencilAttachmentPixelFormat:
setRasterizationEnabled:
sampleCount
setSampleCount:
sampleMask
setSampleMask:
maxVertexBuffers
setPostVertexDumpBufferIndex:
newRenderPipelineStateWithDescriptor:options:reflection:error:
_reservePostVertexDumpBufferWithLength:
postVertexDumpOutputs
postVertexDumpStride
createAndSetPostVertexDumpPipelineState:commandEncoderId:pipelineId:
notifyReplayerTargetCommandBuffersFinished
postVertexDumpBuffer
_reflectionSizeAligned256
_reflectionPostVertexDumpStride
_postVertexDumpBuffer
resourcePatchingTypeForResourceType:
initializeResourcePatchingTypes
uploadDriverDecodingData:
processAncestorMapData:
processIndirectArgumentBuffersData:
processResourceMapsData:
resolveIABDecodingOperations
encodeIndirectArgumentsForBuffer:decodingMap:
setIndirectArgumentBufferDecodingData:
findAncestorsForBuffer:commandBufferIndex:commandEncoderIndex:callIndex:ancestors:
objectWithId:
queue
synchronizeResource:
waitUntilCompleted
encodeIndirectArgumentsForBuffer:data:decodingMap:
executeIABDecodingOp:bufferId:data:indirectDecodingMap:
argumentEncoderForDecodingOperation:reflectionStructType:
layout
encodedLength
newArgumentEncoderWithArguments:
newArgumentEncoderWithBufferIndex:reflection:
bufferStructType
newArgumentEncoderForBufferAtIndex:
findStructTypeForArgumentIndex:inStructType:
blitBufferFromGPU:
decodeReplayerIAB:offset:function:argument:
newArgumentEncoderWithBufferIndex:
functionType
notifyReplayerTargetIndirectArgumentBuffers:
bufferVitualAddressMap
textureMap
samplerMap
replayerBufferBaseVirtualAddressMap
replayerTextureMap
replayerSamplerMap
_currentCommandBuffer
_currentCommandBufferFunctionIndex
_traceProcessed
_currentDeviceDecodingData
_commandBufferIds
_ancestorMaps
_indirectArgumentBuffers
_bufferVitualAddressMap
_bufferLengthMap
_textureMap
_samplerMap
_renderPipelineMap
_computePipelineMap
_indirectCommandBufferMap
_usedSamplersMap
_encodedResourcesMap
_decodingMap
_deviceResourcesBuffers
_replayerIABs
_replayerBufferBaseVirtualAddressMap
_replayerTextureMap
_replayerSamplerMap
_replayerRenderPipelineMap
_replayerComputePipelineMap
_replayerIndirectCommandBufferMap
_resourcePatchingType
_resourcePatchingTypesInitialized
setArgumentBuffer:offset:
arrayLength
elementStructType
argumentIndexStride
elementArrayType
elementTypeDescription
dataType
virtualAddressForBufferAtIndex:inIndirectArgumentBuffer:atOffset:
setBuffer:offset:atIndex:
uniqueIdentifierForTextureAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifierForSamplerAtIndex:inIndirectArgumentBuffer:atOffset:
setSamplerState:atIndex:
uniqueIdentifierForRenderPipelineAtIndex:inIndirectArgumentBuffer:atOffset:
setRenderPipelineState:atIndex:
uniqueIdentifierForIndirectCommandBufferAtIndex:inIndirectArgumentBuffer:atOffset:
setIndirectCommandBuffer:atIndex:
members
structType
indirectArgumentIndex
arrayType
pointerType
elementType
setSupportArgumentBuffers:
newSamplerStateWithDescriptor:
argumentDescriptor
setDataType:
setIndex:
arrayWithObjects:count:
setDepth:
setMipmapLevelCount:
setResourceOptions:
compileOptions
copy
setTracingEnabled:
setAdditionalCompilerArguments:
code
stringWithFormat:
objectForKeyedSubscript:
newLibraryWithData:error:
isActive
bufferDataSize
enumerateBuffersUsingBlock:
enumerateTexturesUsingBlock:
enumerateSamplersUsingBlock:
enumerateFragmentSamplersUsingBlock:
valueForKey:
unsignedIntValue
unsignedLongLongValue
_instrumentLibrary:generationOptions:
_createInstrumentedFunctionWithInstrumentedLibrary:originalFunction:
_createAndSetInstrumentedRenderPipelineStateWithDescriptor:renderCommandEncoder:roiType:
_vertexBindingNeedsPlaceholderResource:renderCommandEncoder:
_placeholderTextureWithType:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newSharedTextureHandle
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
buffer
bufferOffset
bufferBytesPerRow
iosurface
iosurfacePlane
depth
isShareable
isFramebufferOnly
allowGPUOptimizedContents
supportArgumentBuffers
fragmentFunction
_fragmentBindingNeedsPlaceholderResource:renderCommandEncoder:
setFragmentTexture:atIndex:
setFragmentSamplerState:atIndex:
computePipelineState
computeFunction
setComputeFunction:
_createAndSetInstrumentedComputePipelineStateWithDescriptor:computeCommandEncoder:
arguments
_kernelBindingNeedsPlaceholderResource:computeCommandEncoder:
dictionary
setObject:forKeyedSubscript:
traceBufferIndex
constantSamplerUniqueIdentifiers
constantSamplerDescriptors
_generateConstantSamplerReflectionWithUniqueIdentifiers:descriptors:
newComputePipelineStateWithDescriptor:options:reflection:error:
constantValues
newFunctionWithName:constantValues:error:
bitcodeData
unsignedIntegerValue
floatValue
_prepareTraceBufferWithGenerationOptions:
_prepareRenderCommandEncoder:generationOptions:
_prepareComputeCommandEncoder:generationOptions:
isPurgeable
isComplete
waitUntilComplete
doesAliasResource:
doesAliasAllResources:count:
doesAliasAnyResources:count:
responsibleProcess
setResponsibleProcess:
sharedAllocationInfo
cachedAllocationInfo
didModifyData
numFaces
resourceIndex
numberWithUnsignedInt:
appendBytes:length:
_generateResourceResolutionRemappingTables
prepareCommandEncoderForInstrumentedCall:generationOptions:
notifyReplayFinishedAndGenerateTraceContainer
_traceBuffer
_errorStr
_placeholderBuffer
_placeholderTexture
_placeholderSamplerState
_placeholderTextures
_dummyArgumentEncoder
_dummyArgumentBuffer
_replacedSamplerStates
_constantSamplerReflection
_traceType
_bitcodeData
_onlineSrc
setPreprocessorMacros:
setFastMathEnabled:
setDebuggingEnabled:
setLanguageVersion:
setConstantValue:type:atIndex:
setIsDrawable:
setStorageMode:
setCpuCacheMode:
setAllowGPUOptimizedContents:
setForceResourceIndex:
setResourceIndex:
setVisibilityResultBuffer:
depthAttachment
depthResolveFilter
setDepthResolveFilter:
stencilAttachment
setSamplePositions:count:
stencilResolveFilter
setStencilResolveFilter:
setDepthAttachment:
setStencilAttachment:
setDepthCompareFunction:
setDepthWriteEnabled:
setFrontFaceStencil:
setBackFaceStencil:
setMinFilter:
setMagFilter:
setMipFilter:
setMaxAnisotropy:
setSAddressMode:
setTAddressMode:
setRAddressMode:
setNormalizedCoordinates:
setLodMinClamp:
setLodMaxClamp:
setCompareFunction:
borderColor
setBorderColor:
layouts
setStride:
setStepRate:
setStepFunction:
attributes
setFormat:
setOffset:
setBufferIndex:
setIndexType:
setIndexBufferIndex:
memoryBarrierWithResources:count:afterStages:beforeStages:
memoryBarrierWithResources:count:
setTextures:withRange:
setFragmentTextures:withRange:
setVertexTextures:withRange:
setBuffers:offsets:withRange:
setFragmentBuffers:offsets:withRange:
setVertexBuffers:offsets:withRange:
setSamplerStates:withRange:
setVertexSamplerStates:withRange:
setFragmentSamplerStates:withRange:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
useResources:count:usage:
useHeaps:count:
setIndirectCommandBuffers:withRange:
arrayWithCapacity:
valueWithRange:
setRenderPipelineStates:withRange:
rasterSampleCount
setRasterSampleCount:
setSampleCoverage:
setAlphaToCoverageEnabled:
setAlphaToOneEnabled:
vertexBuffers
setMutability:
fragmentBuffers
setSupportIndirectCommandBuffers:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
stageInputDescriptor
setStageInputDescriptor:
buffers
setMaxCommandBufferCount:
setQosClass:
setQosRelativePriority:
setSize:
setCommandTypes:
setInheritPipelineState:
setInheritBuffers:
setMaxVertexBufferBindCount:
setMaxFragmentBufferBindCount:
unarchivedObjectOfClass:fromData:error:
setLevel:
setSlice:
setDepthPlane:
setResolveTexture:
setResolveLevel:
setResolveSlice:
setResolveDepthPlane:
storeActionOptions
setStoreActionOptions:
setClearDepth:
setClearStencil:
setStencilCompareFunction:
setStencilFailureOperation:
setDepthFailureOperation:
setDepthStencilPassOperation:
setReadMask:
setWriteMask:
setBlendingEnabled:
setSourceRGBBlendFactor:
setDestinationRGBBlendFactor:
setRgbBlendOperation:
setSourceAlphaBlendFactor:
setDestinationAlphaBlendFactor:
setAlphaBlendOperation:
UTF8String
integerForKey:
setLoopTimeLimit:
setPlaybackMode:
playbackToFunction:withLoops:
_setupPState
player
enableStatsSampling:
setupCounterConfigurationAndGetFrameProfilerCounters
mutableCopy
_profileFrameWithCounterListsForProfileInfo:
sampleEncoderCounters
_profileFrameWithCounterListsForProfileInfo:encoderPass:
addObjectsFromArray:
addCounters:
sampleSplitEncoderCounters
setupProfileInfo:
_clearData
counterInfo:
setupProfilingForCounterLists
setupProfilingForListAtIndex:
_FixSplitEncoderSamples:forProfile:withInfo:andUpdatedCounterInfo:
stopFrameProfiling
numberWithUnsignedInteger:
isEqualToString:
numberWithUnsignedLong:
numberWithInt:
arrayWithObject:
lastObject
arrayWithObjects:
isCounterAvailable:
dictionaryWithDictionary:
setValue:forKey:
setupAllStatLocationsWithBlitOption:
_computeAverageForFrameProfile:forProfile:withInfo:andUpdatedCounterInfo:forEncoders:
derivedCounterData
initWithPlaybackEngine:
profileFrameWithPayload:
addCommandBufferFrameProfile:
_profileSplitEncodersForProfileInfo:
profileEncodersForProfileInfo:
profileFrameWithCounterListsForProfileInfo:
availableCounters
_commandBufferFrameProfilesInfo
_commandBufferFrameProfilesDrawCallInfo
_commandBufferFrameProfilesPerDMDrawCallInfo
_commandBufferFrameProfiles
_frameProfiling
_engine
_needsMultiplePasses
_loopCount
initWithDevice:
initWithBaseObject:parent:
forDevice:
textureFromTexture:slice:level:depthPlane:commandBuffer:
resolveMultisampleTexture:slice:level:depthPlane:commandBuffer:
stencilTextureFromTexture:commandBuffer:
generateThumbnailFromTexture:commandBuffer:resolution:
shouldIgnoreCaptureFile
mainExecutionMode
executeFunctions:count:subCommandIndex:
_copyComputeEncoder:toComputeEncoderData:
_copyComputeEncoderData:toComputeEncoder:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
_updateMemorylessTextures:
_copyRenderEncoder:toRenderEncoderData:
_copyRenderEncoderFromData:toRenderEncoder:
_modifyDescriptorForLayering:withBuffer:
_addRenderPassDescriptorToEncoderMapFromRenderPassDescriptor:forEncoder:
_generateNopDrawPipelineData
drawPrimitives:vertexStart:vertexCount:
_executeGraphicsFunction
extractIndirectArgumentBuffers
_trackObjects
_splitComputeEncoder
_splitRenderEncoders
playbackMode
playbackOptions
boolValue
_generateThumbnailAndResourceInfoForRequestedTextures:resolution:commandBuffer:
parallelRenderCommandEncoderWithDescriptor:
renderCommandEncoder
copyRenderEncoder:toRenderEncoder:
arrayWithArray:
level
slice
depthPlane
resizeTexture:resolution:level:slice:depthPlane:inBuffer:withType:completion:
replayerLayerForDrawableId:
prepareLayerForPresent:
targetFunctionIndex
removeAllObjects
targetSubCommandIndex
_executeIndirectCommandBufferUpToSubIndex:outDescriptor:outDataPointer:
extractCommandBufferTranslationData
_splitCommandEncoders
executedDrawCallCount
setExecutedDrawCallCount:
extractRenderIndirectArgumentBuffers:
extractComputeIndirectArgumentBuffers:
firstObject
dataTypeDescription
elementIsArgumentBuffer
_superExecutePlatformFunction
updateReplayerLayer:withOriginalLayer:
prepareForCaptureExecution
resetLayersVisibility
storeAction
setColorStoreAction:atIndex:
setDepthStoreAction:
setStencilStoreAction:
_endEncodingForAllRemainingEncoders:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
_attachmentInfoForCommandEncoderID:
superlayer
bounds
shrinkSourceSize:toDestSize:
setBounds:
setPosition:
setAnchorPoint:
contentsScale
setContentsScale:
_texture2DFromTexture:level:slice:depthPlane:commandBuffer:
renderTexture:withEncoder:enableBlending:layerIndex:
enableWireframePresent
wireframeLineColor
setBlendColorRed:green:blue:alpha:
enableOutlinePresent
currentTopLayer
deleteLayer:
applyLayersVisibility
position
anchorPoint
anchorPointZ
setAnchorPointZ:
transform
setTransform:
drawableSize
_modifyDescriptorForStore:
_updateRemainingCommandsForEncoder:
resolveTexture
_isFunctionCommandEncoderCreation
_isReceiverTypeCommandEncoderRelated
_addRenderPassDescriptorToEncoderMapFromArgumentPointer:forEncoder:
loadAction
depthStencilState
blendColorRed
blendColorGreen
blendColorBlue
blendColorAlpha
depthClipMode
setDepthClipMode:
depthBias
depthBiasSlopeScale
depthBiasClamp
setDepthBias:slopeScale:clamp:
frontStencilRef
backStencilRef
setStencilFrontReferenceValue:backReferenceValue:
triangleFillMode
visibilityResultMode
visibilityResultOffset
setVisibilityResultMode:offset:
enumerateThreadgroupMemoryLengthsUsingBlock:
setBytes:length:atIndex:
setThreadgroupMemoryLength:atIndex:
_forceAttachmentLoadActionToLoad:
_forceAttachmentStoreActionToStore:
_swizzleAttachmentTextureForLoad:withBuffer:
removeObject:
setStatEnabled:
setStatOptions:
getListIndex
addPerfSampleHandler:
requestCounters:withIndex:
counterInfo
setWithArray:
subdivideCounterList:
initWithMTLDevice:
counterDictionary
allKeys
derivedCounterScript
analysisScript
configurationVariables
executeCommandsInBuffer:withRange:
thumbnailTexture:
harvestableTexture:
encoderMap
thumbnailCache
dependencyGraphThumbnailCache
commitEncodersAndCommandBuffers
waitForCommmandBuffersCompletion
presentDrawable
wireframeRenderMode
setWireframeRenderMode:
postVertexDump
targetFunctionNeedsSeparatedPostVertexDump
shaderDebuggerTraceGenerator
setShouldIgnoreCaptureFile:
currentEncoderIndex
setCurrentEncoderIndex:
counterListsPerPass
setCounterListsPerPass:
statVertices
setStatVertices:
statPixels
setStatPixels:
frameCounters
setFrameCounters:
_drawableIdToLayerIdMap
_textureToDrawableMap
_commandEncoderDescriptorMap
_counterInfos
_baseCounterIndexForList
_commandBufferMap
_encoderMap
_parallelEncoderMap
_encoderToParallelEncoderMap
_lastEncoderID
_disableWireframe
_wireframeRenderer
_wireframeRenderMode
_nRemainingCommandsForCurrentEncoder
_parallelRenderCommandEncoderDescriptor
_dyParallelRenderCommandEncoderDescriptor
_parallelCommandBufferId
_profileInfo
_perEncoderDrawCallCount
_stageInRegion
_bSetStageInRegion
_stageInIndirectBufferId
_stageInIndirectBufferOffset
_isTileRenderPassDescriptor
_renderPipelineState
_nopDrawFunction
_nopRenderPipelineState
_isDeltaCounter
_postVertexDump
_targetFunctionNeedsSeparatedPostVertexDump
_shaderDebuggerTraceGenerator
_textureRenderer
_commandBufferIndex
_encoderIndex
_drawIndex
_supportsTessellation
_targetCommandEncoderId
_metalLayers
_lastCommandBufferId
_lastCommandBufferIndex
_lastEncoderIndex
_lastSampleCommandBufferEncoderId
_last
_thumbnailDevice
_thumbnailDictionary
_dependencyGraphThumbnails
_shouldIgnoreCaptureFile
_currentEncoderIndex
_counterListsPerPass
_statVertices
_statPixels
_frameCounters
substringWithRange:
integerValue
animationTimingFunction
animationDuration
disableActions
completionBlock
setDisableActions:
flush
setAnimationTimingFunction:
setAnimationDuration:
setCompletionBlock:
constantDataAtIndex:
setArgumentBuffer:startOffset:arrayElement:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
fillBuffer:range:value:
generateMipmapsForTexture:
insertDebugSignpost:
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
resetCommandsInBuffer:withRange:
synchronizeTexture:slice:level:
updateFence:
waitForFence:
newTiledTextureWithDescriptor:offset:bytesPerRow:
setProfilingEnabled:
addCompletedHandler:
addPurgedHeap:
addPurgedResource:
addScheduledHandler:
commitAndHold
computeCommandEncoderWithDispatchType:
debugCommandEncoder
doCorruptCBSPI:
encodeSignalEvent:value:
encodeWaitForEvent:value:
enqueue
presentDrawable:
presentDrawable:atTime:
videoCommandEncoder
waitUntilScheduled
setSkipRender:
setExecutionEnabled:
insertDebugCaptureBoundary
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
memoryBarrierWithScope:
setBufferOffset:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
useHeap:
useResource:usage:
setMetalAssertionsEnabled:
minLinearTextureAlignmentForPixelFormat:
newCommandQueueWithDescriptor:
newCommandQueueWithMaxCommandBufferCount:
newComputePipelineStateWithDescriptor:error:
newDefaultLibrary
newEvent
newFence
newHeapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newLibraryWithFile:error:
newTextureWithDescriptor:iosurface:plane:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
reserveResourceIndicesForResourceType:indices:indexCount:
unmapShaderSampleBuffer
maxAvailableSizeWithAlignment:
resetWithRange:
setOverrideTriple:
newExternFunctionWithName:
popDebugGroup
pushDebugGroup:
setColorStoreActionOptions:atIndex:
setDepthStoreActionOptions:
setStencilStoreActionOptions:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawPrimitives:vertexStart:vertexCount:instanceCount:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
memoryBarrierWithScope:afterStages:beforeStages:
setFragmentBufferOffset:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setLineWidth:
setStencilReferenceValue:
setVertexBufferOffset:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
textureBarrier
updateFence:afterStages:
waitForFence:beforeStages:
setSignaledValue:
newSharedEventHandle
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
setQueue:
setArchiveStack:
origSourceMessageHandler
source
setMessageHandler:
doesNotRecognizeSelector:
setTransport:
transport
setSource:
suspend
messageHandler
setOrigSourceMessageHandler:
_pushMessage:
resume
messageWithKind:attributes:
send:error:
_loadArchives:error:
archiveStack
_replayerControllerSupportForCaptureStore:
setReplayControllerSupport:
replayControllerSupport
createArchivePlaybackEngineWithCaptureStore:
setPlaybackEngine:
_displayPlaybackEngine
playbackEngine
playback
notifyOnQueue:handler:
waitUntilResolved
removeObjectAtIndex:
kind
numberWithBool:
messageWithKind:objectPayload:
send:inReplyTo:error:
messageWithKind:attributes:payload:
predicateWithBlock:
filterUsingPredicate:
_messageLoop
_popMessage
_processMessage:
messageWithKind:
_deleteAllArchives
_archiveDirectory
messageWithKind:attributes:stringPayload:
replayMessage
errorWithDomain:code:userInfo:
messageWithKind:attributes:objectPayload:
plistPayload
allObjects
uuid
path
lastPathComponent
initWithObjectsAndKeys:
messageWithKind:attributes:plistPayload:
_handleArchiveLoadingForPlaybackRequest:replyKind:
setReplayMessage:
attributeForKey:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
initWithArray:
setExperiments:
setProfileInfo:
profileInfo
_playbackCurrentArchiveAndExperiments
result
archivedDataWithRootObject:requiringSecureCoding:error:
_beginDebugArchive
_endPlayback
isDebugPlaybackEngine:
objectPayload
playbackToFunction:subCommandIndex:withLoops:
enableDebugWireframePresent:playbackEngine:
setDebugWireframeLineWidth:playbackEngine:
setWireframeLineColor:playbackEngine:
enableDebugOutlinePresent:playbackEngine:
enableDebugDrawCallPresent:playbackEngine:
disableDebugFunctions:playbackEngine:
enableDebugFunctions:playbackEngine:
generateThumbnailsWithPlaybackEngine:forMessage:onReady:
generateShaderDebuggerTraceForMessage:playbackEngine:onReady:
generateDependencyGraphThumbnailsWithPlaybackEngine:forMessage:onReady:
currentFunctionIndex
setTargetFunctionIndex:
setTargetSubCommandIndex:
close
stringByAppendingPathComponent:
fileURLWithPath:
initWithURL:options:error:
push:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
pathExtension
caseInsensitiveCompare:
removeItemAtURL:error:
endPlayback
stringPayload
empty
future
experiments
_playbackArchiveWithExperiment:passingFuture:resolvingFuture:
_recursivePlaybackWithFuture:usingExperiment:withToplevelFuture:
objectAtIndex:
boolResult
setResult:
createOverridingPlaybackEngineWithCaptureStore:experiment:
experimentResultsGeneratorForPlaybackEngine:
begin
resolveWithFuture:
createDebugPlaybackEngineWithCaptureStore:
sharedController
profileBlockQueue
initializeTransportWith:
informReady
playbackArchive:
_messageLock
_messageProcessingQueue
_messageQueue
_profileBlockQueue
DYMTLFunctionPlayer
DYMTLCommonFunctionPlayer
DYMTLDebugWireframeRenderer
IndirectRenderCommandEncoderState
MTLBuffer
MTLResource
NSObject
MTLRenderPipelineState
DYMTLIndirectCommandBufferManager
DYMTLIndirectCommandBufferTranslateDelegate
DYMTLPostVertexDump
DYMTLIndirectArgumentBufferManager
MTLTexture
MTLSamplerState
MTLTextureSPI
MTLResourceSPI
DYMTLShaderDebuggerTraceGenerator
DYMTLDebugPlaybackEngineCounterSupport
DYLayerManager
DYMTLCommonDebugFunctionPlayer
DYReplayController
^v24@0:8Q16
@24@0:8@16
v16@0:8
@32@0:8Q16@24
v32@0:8@16Q24
@24@0:8Q16
v24@0:8Q16
Q24@0:8@16
^{unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, id>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true> >=f}}}16@0:8
r^v24@0:8Q16
@48@0:8@16*24Q32Q40
@16@0:8
c16@0:8
v24@0:8@16
{unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, id>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{set<id, std::__1::less<id>, std::__1::allocator<id> >="__tree_"{__tree<id, std::__1::less<id>, std::__1::allocator<id> >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id> >="__value_"Q}}}
{unordered_map<unsigned long long, NSData *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, NSData *> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, NSData *> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
@"DYMTLIndirectArgumentBufferManager"
@"DYMTLIndirectCommandBufferManager"
@"<MTLDevice>"
{unordered_map<unsigned long long, id<CAMetalDrawable>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<CAMetalDrawable> > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, bool, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, bool> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, bool>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, bool> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
@"<DYLayerManager>"
@32@0:8@16^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}QQQQQQQ[8{DYMTLSamplePosition=ff}]Qc}24
q56@0:8@16@24@32@40^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}QQQQQQQ[8{DYMTLSamplePosition=ff}]Qc}48
c24@0:8^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}QQQQQQQ[8{DYMTLSamplePosition=ff}]Qc}16
c48@0:8^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}QQQQQQQ[8{DYMTLSamplePosition=ff}]Qc}16Q24Q32Q40
q56@0:8Q16Q24Q32Q40^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}QQQQQQQ[8{DYMTLSamplePosition=ff}]Qc}48
@"DYMTLCommonDebugFunctionPlayer"
@"<MTLLibrary>"
@"<MTLFunction>"
@"MTLTextureDescriptor"
@"<MTLTexture>"
@"MTLRenderPassColorAttachmentDescriptor"
@"MTLRenderPassDescriptor"
@"<MTLRenderPipelineState>"
@"<MTLComputePipelineState>"
{vector<MTLViewport, std::__1::allocator<MTLViewport> >="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<MTLViewport *, std::__1::allocator<MTLViewport> >="__value_"^{?}}}
{vector<MTLScissorRect, std::__1::allocator<MTLScissorRect> >="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<MTLScissorRect *, std::__1::allocator<MTLScissorRect> >="__value_"^{?}}}
{?="isValid"c"hasBeenUsed"c"type"Q"object"@"baseLevel"Q"bufferLength"Q"bufferOffset"Q"threadgroupMemoryLength"Q"threadgroupMemoryOffset"Q"hasLodClamp"c"lodMinClamp"f"lodMaxClamp"f}
{vector<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument> > >="__begin_"^{pair<unsigned long long, MTLDebugFunctionArgument>}"__end_"^{pair<unsigned long long, MTLDebugFunctionArgument>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long long, MTLDebugFunctionArgument> *, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument> > >="__value_"^{pair<unsigned long long, MTLDebugFunctionArgument>}}}
@"<MTLCommandBufferSPI>"
@"MTLDebugRenderCommandEncoder"
@"MTLDebugParallelRenderCommandEncoder"
@40@0:8@16@24@32
v32@0:8@16@24
[31@"<MTLBuffer>"]
[31^v]
[31Q]
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
Q24@0:8Q16
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
@"<MTLHeap>"16@0:8
^v16@0:8
v32@0:8{_NSRange=QQ}16
@40@0:8@16Q24Q32
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
{pair<unsigned long long, unsigned long long>=QQ}24@0:8Q16
v32@0:8Q16Q24
v48@0:8@16r*24Q32@40
I56@0:8@16r*24{_NSRange=QQ}32@48
v40@0:8@16r*24@32
Q48@0:8@16r*24Q32@40
@48@0:8r*16{_NSRange=QQ}24r^{CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}40
@32@0:8@16@24
@"DYMTLFunctionPlayer"
{unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{vector<GPUTools::MTL::Utils::DYMTLBufferGPUAddress, std::__1::allocator<GPUTools::MTL::Utils::DYMTLBufferGPUAddress> >="__begin_"^{DYMTLBufferGPUAddress}"__end_"^{DYMTLBufferGPUAddress}"__end_cap_"{__compressed_pair<GPUTools::MTL::Utils::DYMTLBufferGPUAddress *, std::__1::allocator<GPUTools::MTL::Utils::DYMTLBufferGPUAddress> >="__value_"^{DYMTLBufferGPUAddress}}}
c40@0:8Q16Q24Q32
@"<MTLBuffer>"
v60@0:8Q16I24r^v28r^v36r^v44^{dispatch_data_s=}52
v24@0:8^{dispatch_data_s=}16
v24@0:8r^v16
v56@0:8Q16Q24Q32Q40^{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >={__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >=Q}}}48
v32@0:8Q16^{unordered_map<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true> >=f}}}24
v32@0:8Q16^v24
v40@0:8Q16^v24^{unordered_map<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true> >=f}}}32
v48@0:8r^{DYMTLIABDecodingOp=QQB{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}}16Q24^v32^{unordered_map<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true> >=f}}}40
@32@0:8r^{DYMTLIABDecodingOp=QQB{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}}16^@24
v24@0:8^{map<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}16
v48@0:8@16Q24@32@40
^{map<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> >, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > > > >={__tree<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::less<unsigned long long>, true> >=Q}}}16@0:8
^{unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> >=f}}}16@0:8
^{unordered_map<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > > > >={__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::equal_to<unsigned long long>, true> >=f}}}16@0:8
^{map<unsigned long long, unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >={__tree<std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, unsigned long long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, unsigned long long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::less<unsigned long long>, true> >=Q}}}16@0:8
^{dispatch_data_s=}
{vector<std::__1::pair<unsigned long long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long long, unsigned int> > >="__begin_"^{pair<unsigned long long, unsigned int>}"__end_"^{pair<unsigned long long, unsigned int>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long long, unsigned int> > >="__value_"^{pair<unsigned long long, unsigned int>}}}
{vector<std::__1::vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > >, std::__1::allocator<std::__1::vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > > >="__begin_"^{vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > >}"__end_"^{vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > >}"__end_cap_"{__compressed_pair<std::__1::vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > *, std::__1::allocator<std::__1::vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > > >="__value_"^{vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > >}}}
{vector<std::__1::vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > > > >="__begin_"^{vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > >}"__end_"^{vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > >}"__end_cap_"{__compressed_pair<std::__1::vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > > > >="__value_"^{vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > >}}}
{map<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> >, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > > > >="__tree_"{__tree<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::less<unsigned long long>, true> >="__value_"Q}}}
{unordered_map<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, id<MTLSamplerState>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<MTLSamplerState> > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >="__tree_"{__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >="__value_"Q}}}
{vector<DYMTLReplayerIAB, std::__1::allocator<DYMTLReplayerIAB> >="__begin_"^{DYMTLReplayerIAB}"__end_"^{DYMTLReplayerIAB}"__end_cap_"{__compressed_pair<DYMTLReplayerIAB *, std::__1::allocator<DYMTLReplayerIAB> >="__value_"^{DYMTLReplayerIAB}}}
{map<unsigned long long, unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >="__tree_"{__tree<std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, unsigned long long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, unsigned long long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::less<unsigned long long>, true> >="__value_"Q}}}
[5Q]
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
^{__IOSurface=}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"MTLSharedTextureHandle"16@0:8
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
c32@0:8r^@16Q24
i16@0:8
v20@0:8i16
c24@0:8@"<MTLResource>"16
@"MTLResourceAllocationInfo"16@0:8
c32@0:8@16@24
c36@0:8@16@24i32
v32@0:8Q16@24
@"NSString"
@"<MTLSamplerState>"
{map<MTLTextureType, id<MTLTexture>, std::__1::less<MTLTextureType>, std::__1::allocator<std::__1::pair<const MTLTextureType, id<MTLTexture> > > >="__tree_"{__tree<std::__1::__value_type<MTLTextureType, id<MTLTexture> >, std::__1::__map_value_compare<MTLTextureType, std::__1::__value_type<MTLTextureType, id<MTLTexture> >, std::__1::less<MTLTextureType>, true>, std::__1::allocator<std::__1::__value_type<MTLTextureType, id<MTLTexture> > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<MTLTextureType, id<MTLTexture> >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<MTLTextureType, std::__1::__value_type<MTLTextureType, id<MTLTexture> >, std::__1::less<MTLTextureType>, true> >="__value_"Q}}}
@"<MTLArgumentEncoder>"
{map<id<MTLSamplerState>, unsigned long long, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<std::__1::pair<const id<MTLSamplerState>, unsigned long long> > >="__tree_"{__tree<std::__1::__value_type<id<MTLSamplerState>, unsigned long long>, std::__1::__map_value_compare<id<MTLSamplerState>, std::__1::__value_type<id<MTLSamplerState>, unsigned long long>, std::__1::less<id<MTLSamplerState> >, true>, std::__1::allocator<std::__1::__value_type<id<MTLSamplerState>, unsigned long long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<MTLSamplerState>, unsigned long long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<id<MTLSamplerState>, std::__1::__value_type<id<MTLSamplerState>, unsigned long long>, std::__1::less<id<MTLSamplerState> >, true> >="__value_"Q}}}
@"NSDictionary"
@"NSData"
B52@0:8^{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}16r^{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}24@32@40c48
v24@0:8r^{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}16
c48@0:8^{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}16r^{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}24@32@40
^{NSDictionary=#}24@0:8@16
@28@0:8@16c24
{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >="__begin_"^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}"__end_"^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}"__end_cap_"{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >="__value_"^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}
{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >="__begin_"^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}"__end_"^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}"__end_cap_"{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >="__value_"^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}
{vector<unsigned long long, std::__1::allocator<unsigned long long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >="__value_"^Q}}
@"NSMutableDictionary"
@"DYPlaybackEngine"
@76@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@64B72
v72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@64
v40@0:8r^{Argument=^vIIISS}16Q24r^{pair<double, double>=}32
v32@0:8r^{Argument=^vIIISS}16Q24
@"CALayer"76@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@"NSDictionary"64B72
v72@0:8@"CALayer"16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@"NSDictionary"64
@"CALayer"24@0:8Q16
@"CALayer"16@0:8
v24@0:8@"CALayer"16
^{unordered_map<unsigned long long, EncoderInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, EncoderInfo> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, EncoderInfo> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true> >=f}}}16@0:8
@56@0:8@16{?=QQQ}24@48
v36@0:8^{CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}16Q24I32
v24@0:8^{unordered_map<unsigned long long, EncoderInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, EncoderInfo> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, EncoderInfo> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true> >=f}}}16
@56@0:8@16Q24Q32Q40@48
{AttachmentInfo=QQQQ}24@0:8Q16
v32@0:8^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}QQ}QQQQQQQ[8{DYMTLSamplePosition=ff}]Qc}16Q24
v32@0:8^v16Q24
v32@0:8^{_DYMTLRenderCommandEncoderData={vector<MTLScissorRect, std::__1::allocator<MTLScissorRect> >=^{?}^{?}{__compressed_pair<MTLScissorRect *, std::__1::allocator<MTLScissorRect> >=^{?}}}{vector<MTLViewport, std::__1::allocator<MTLViewport> >=^{?}^{?}{__compressed_pair<MTLViewport *, std::__1::allocator<MTLViewport> >=^{?}}}QQQ{_DYMTLDebugFunctionArgument=QI@@@BQQQQ}fQ{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}fffffffIIQQQ@@@}16@24
v32@0:8@16^{_DYMTLRenderCommandEncoderData={vector<MTLScissorRect, std::__1::allocator<MTLScissorRect> >=^{?}^{?}{__compressed_pair<MTLScissorRect *, std::__1::allocator<MTLScissorRect> >=^{?}}}{vector<MTLViewport, std::__1::allocator<MTLViewport> >=^{?}^{?}{__compressed_pair<MTLViewport *, std::__1::allocator<MTLViewport> >=^{?}}}QQQ{_DYMTLDebugFunctionArgument=QI@@@BQQQQ}fQ{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}fffffffIIQQQ@@@}24
v32@0:8@16^{_DYMTLComputeCommandEncoderData={_DYMTLDebugFunctionArgument=QI@@@BQQQQ}fQ{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}@@}24
v32@0:8^{_DYMTLComputeCommandEncoderData={_DYMTLDebugFunctionArgument=QI@@@BQQQQ}fQ{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}{vector<_DYMTLDebugFunctionArgument, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}^{_DYMTLDebugFunctionArgument}{__compressed_pair<_DYMTLDebugFunctionArgument *, std::__1::allocator<_DYMTLDebugFunctionArgument> >=^{_DYMTLDebugFunctionArgument}}}@@}16@24
v20@0:8c16
B24@0:8@16
B24@0:8Q16
Q40@0:8Q16^@24r^*32
q16@0:8
v24@0:8q16
I16@0:8
v20@0:8I16
{unordered_map<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}
{unordered_map<unsigned long long, CommandBufferInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, CommandBufferInfo> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, EncoderInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, EncoderInfo> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, EncoderInfo> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >="__table_"{__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::hash<unsigned long long> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::equal_to<unsigned long long> >="__value_"f}}}
@"DYMTLDebugWireframeRenderer"
{DYMTLRenderPassDescriptor="visibilityResultBuffer"Q"renderTargetArrayLength"Q"colorAttachments"[8{DYMTLRenderPassAttachmentDescriptor="texture"Q"level"Q"slice"Q"depthPlane"Q"resolveTexture"Q"resolveLevel"Q"resolveSlice"Q"resolveDepthPlane"Q"loadAction"Q"storeAction"Q"storeActionOptions"Q"clearValue"{DYMTLClearValue=""(?=""{?="red"d"green"d"blue"d"alpha"d}"colors"[4d])}"depthResolveFilter"Q"stencilResolveFilter"Q}]"depthAttachment"{DYMTLRenderPassAttachmentDescriptor="texture"Q"level"Q"slice"Q"depthPlane"Q"resolveTexture"Q"resolveLevel"Q"resolveSlice"Q"resolveDepthPlane"Q"loadAction"Q"storeAction"Q"storeActionOptions"Q"clearValue"{DYMTLClearValue=""(?=""{?="red"d"green"d"blue"d"alpha"d}"colors"[4d])}"depthResolveFilter"Q"stencilResolveFilter"Q}"stencilAttachment"{DYMTLRenderPassAttachmentDescriptor="texture"Q"level"Q"slice"Q"depthPlane"Q"resolveTexture"Q"resolveLevel"Q"resolveSlice"Q"resolveDepthPlane"Q"loadAction"Q"storeAction"Q"storeActionOptions"Q"clearValue"{DYMTLClearValue=""(?=""{?="red"d"green"d"blue"d"alpha"d}"colors"[4d])}"depthResolveFilter"Q"stencilResolveFilter"Q}"imageblockSampleLength"Q"threadgroupMemoryLength"Q"tileWidth"Q"tileHeight"Q"renderTargetWidth"Q"renderTargetHeight"Q"defaultRasterSampleCount"Q"customSamplePositions"[8{DYMTLSamplePosition="x"f"y"f}]"customSampleCount"Q"openGLModeEnabled"c}
{?="origin"{?="x"Q"y"Q"z"Q}"size"{?="width"Q"height"Q"depth"Q}}
{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}
@"DYMTLPostVertexDump"
@"DYMTLShaderDebuggerTraceGenerator"
@"DYMTLTextureRenderer"
{unordered_map<unsigned long long, CAMetalLayer *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, CAMetalLayer *> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{tuple<unsigned long long, unsigned long long>="__base_"{__tuple_impl<std::__1::__tuple_indices<0, 1>, unsigned long long, unsigned long long>="__value_"Q"__value_"Q}}
@"MTLDebugDevice"
@"NSMutableArray"
c32@0:8@16^@24
c28@0:8@16i24
v40@0:8@16@24@32
v36@0:8@16@24B32
^{dispatch_queue_s=}16@0:8
v24@0:8^{dispatch_queue_s=}16
@?16@0:8
v24@0:8@?16
^{dispatch_queue_s=}
@"DYTransport"
@"DYTransportSource"
@"DYTransportMessage"
@"DYCaptureArchiveStack"
@"<DYReplayControllerSupport>"
