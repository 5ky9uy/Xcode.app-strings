textureType
pixelFormat
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
cpuCacheMode
storageMode
usage
framebufferOnly
isDrawable
rotation
allowGPUOptimizedContents
compressionMode
resourceIndex
forceResourceIndex
swizzle
swizzleKey
hazardTrackingMode
protectionOptions
sparseSurfaceDefaultValue
writeSwizzleEnabled
setTextureType:
setPixelFormat:
setUsage:
setWidth:
setHeight:
setDepth:
setArrayLength:
setStorageMode:
setSampleCount:
setCpuCacheMode:
setMipmapLevelCount:
setHazardTrackingMode:
setAllowGPUOptimizedContents:
setSwizzle:
setResourceIndex:
setForceResourceIndex:
setRotation:
setCompressionMode:
setProtectionOptions:
setSparseSurfaceDefaultValue:
setWriteSwizzleEnabled:
layouts
objectAtIndexedSubscript:
setStepRate:
setStride:
setStepFunction:
attributes
setOffset:
setBufferIndex:
setFormat:
vertexFunction
streamReference
fragmentFunction
pipelineLibrary
vertexDescriptor
rasterSampleCount
sampleMask
sampleCoverage
isAlphaToCoverageEnabled
isAlphaToOneEnabled
isRasterizationEnabled
depthAttachmentPixelFormat
stencilAttachmentPixelFormat
colorAttachments
label
UTF8String
inputPrimitiveTopology
tessellationPartitionMode
maxTessellationFactor
isTessellationFactorScaleEnabled
tessellationFactorFormat
tessellationControlPointIndexType
tessellationFactorStepFunction
tessellationOutputWindingOrder
vertexBuffers
mutability
fragmentBuffers
supportIndirectCommandBuffers
vertexAmplificationMode
maxVertexAmplificationCount
openGLModeEnabled
logicOperation
alphaTestFunction
vertexDepthCompareClampMask
fragmentDepthCompareClampMask
isLogicOperationEnabled
isPointCoordLowerLeft
isPointSizeOutputVS
isTwoSideEnabled
isAlphaTestEnabled
isPointSmoothEnabled
clipDistanceEnableMask
sampleCoverageInvert
needsCustomBorderColorSamplers
isDepthStencilWriteDisabled
colorSampleCount
pluginData
archivedDataWithRootObject:requiringSecureCoding:error:
length
bytes
driverCompilerOptions
compilerTimeoutInSeconds
forceSoftwareVertexFetch
numberWithUnsignedLongLong:
objectForKeyedSubscript:
setVertexFunction:
setFragmentFunction:
setPipelineLibrary:
setRasterSampleCount:
setSampleMask:
setSampleCoverage:
setAlphaToCoverageEnabled:
setAlphaToOneEnabled:
setRasterizationEnabled:
setDepthAttachmentPixelFormat:
setStencilAttachmentPixelFormat:
stringWithUTF8String:
setLabel:
setInputPrimitiveTopology:
setTessellationPartitionMode:
setMaxTessellationFactor:
setTessellationFactorScaleEnabled:
setTessellationFactorFormat:
setTessellationControlPointIndexType:
setTessellationFactorStepFunction:
setTessellationOutputWindingOrder:
setMutability:
setSupportIndirectCommandBuffers:
setVertexAmplificationMode:
setMaxVertexAmplificationCount:
setSampleCoverageInvert:
setNeedsCustomBorderColorSamplers:
setDepthStencilWriteDisabled:
setColorSampleCount:
setWithObjects:
dataWithBytesNoCopy:length:freeWhenDone:
unarchivedObjectOfClasses:fromData:error:
setPluginData:
localizedDescription
setDriverCompilerOptions:
setCompilerTimeoutInSeconds:
setForceSoftwareVertexFetch:
threadgroupSizeMatchesTileSize
maxTotalThreadsPerThreadgroup
tileFunction
tileBuffers
setThreadgroupSizeMatchesTileSize:
setMaxTotalThreadsPerThreadgroup:
setTileFunction:
depthCompareFunction
isDepthWriteEnabled
frontFaceStencil
backFaceStencil
setDepthCompareFunction:
setDepthWriteEnabled:
setStencilCompareFunction:
setStencilFailureOperation:
setDepthFailureOperation:
setDepthStencilPassOperation:
setReadMask:
setWriteMask:
setFrontFaceStencil:
setBackFaceStencil:
minFilter
magFilter
mipFilter
maxAnisotropy
sAddressMode
tAddressMode
rAddressMode
normalizedCoordinates
lodMinClamp
lodMaxClamp
compareFunction
lodAverage
borderColor
supportArgumentBuffers
reductionMode
borderColorSPI
customBorderColorValue_0
customBorderColorValue_1
customBorderColorValue_2
customBorderColorValue_3
forceSeamsOnCubemapFiltering
setMinFilter:
setMagFilter:
setMipFilter:
setMaxAnisotropy:
setSAddressMode:
setTAddressMode:
setRAddressMode:
setLodMinClamp:
setLodMaxClamp:
setCompareFunction:
setNormalizedCoordinates:
setLodAverage:
setBorderColor:
setSupportArgumentBuffers:
setReductionMode:
setBorderColorSPI:
setCustomBorderColorValue_0:
setCustomBorderColorValue_1:
setCustomBorderColorValue_2:
setCustomBorderColorValue_3:
setForceSeamsOnCubemapFiltering:
size
type
resourceOptions
sparsePageSize
setSize:
setType:
setResourceOptions:
commandTypes
maxVertexBufferBindCount
maxFragmentBufferBindCount
inheritBuffers
maxKernelBufferBindCount
inheritPipelineState
getHeader:headerSize:
setCommandTypes:
setMaxVertexBufferBindCount:
setMaxFragmentBufferBindCount:
setInheritBuffers:
setMaxKernelBufferBindCount:
setInheritPipelineState:
visibilityResultBuffer
texture
clearColor
depthAttachment
clearDepth
depthResolveFilter
stencilAttachment
clearStencil
stencilResolveFilter
renderTargetArrayLength
imageblockSampleLength
threadgroupMemoryLength
tileWidth
tileHeight
renderTargetWidth
renderTargetHeight
getSamplePositions:count:
rasterizationRateMap
defaultRasterSampleCount
defaultColorSampleCount
ditherEnabled
pointCoordYFlipEnabled
setVisibilityResultBuffer:
setClearColor:
setClearDepth:
setDepthResolveFilter:
setClearStencil:
setStencilResolveFilter:
setRenderTargetArrayLength:
setImageblockSampleLength:
setThreadgroupMemoryLength:
setTileWidth:
setTileHeight:
setRenderTargetWidth:
setRenderTargetHeight:
setSamplePositions:count:
setOpenGLModeEnabled:
setRasterizationRateMap:
setDefaultRasterSampleCount:
setDefaultColorSampleCount:
setDitherEnabled:
setPointCoordYFlipEnabled:
computeFunction
threadGroupSizeIsMultipleOfThreadExecutionWidth
stageInputDescriptor
stepRate
stride
stepFunction
offset
bufferIndex
format
indexType
indexBufferIndex
buffers
functionPointers
count
textureWriteRoundingMode
openCLModeEnabled
setComputeFunction:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
setIndexType:
setIndexBufferIndex:
addObject:
setFunctionPointers:
setTextureWriteRoundingMode:
setOpenCLModeEnabled:
vendorName
familyName
productName
isLowPower
isHeadless
name
maxThreadsPerThreadgroup
sharedMemorySize
dedicatedMemorySize
isDepth24Stencil8PixelFormatSupported
motionEstimatorCapabilities
maxTextureWidth
maxTextureHeight
minTextureWidth
minTextureHeight
macroBlockWidth
macroBlockHeight
regionWidth
regionHeight
precisionNumerator
precisionDenominator
samplerReductionModeSupport
isPlacementHeapSupported
deviceCreationFlags
setObject:forKeyedSubscript:
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
containsObject:
initWithCapacity:
numberWithUnsignedInteger:
copy
textureWidth
textureHeight
setTextureWidth:
setTextureHeight:
maxCommandBufferCount
qosLevel
commitSynchronously
isOpenGLQueue
disableCrossQueueHazardTracking
screenSize
layerCount
layers
horizontalSampleStorage
verticalSampleStorage
counterSet
description
isEqualToString:
counters
counterSets
setCounterSet:
captureObject
destination
outputURL
fileSystemRepresentation
retainedReferences
errorOptions
baseObject
performSelector:
isBlendingEnabled
sourceRGBBlendFactor
destinationRGBBlendFactor
rgbBlendOperation
sourceAlphaBlendFactor
destinationAlphaBlendFactor
alphaBlendOperation
writeMask
setBlendingEnabled:
setSourceRGBBlendFactor:
setDestinationRGBBlendFactor:
setRgbBlendOperation:
setSourceAlphaBlendFactor:
setDestinationAlphaBlendFactor:
setAlphaBlendOperation:
stencilCompareFunction
stencilFailureOperation
depthFailureOperation
depthStencilPassOperation
readMask
level
slice
depthPlane
resolveTexture
resolveLevel
resolveSlice
resolveDepthPlane
loadAction
storeAction
storeActionOptions
yInvert
setTexture:
setLevel:
setSlice:
setDepthPlane:
setResolveTexture:
setResolveLevel:
setResolveSlice:
setResolveDepthPlane:
setLoadAction:
setStoreAction:
setStoreActionOptions:
bufferForKey:
bufferWithLength:alignment:
contents
blitCommandEncoder
heapBuffer
heapLocation
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
textureForKey:
device
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
initWithDevice:
newCommandQueueWithMaxCommandBufferCount:
setDefaultCommandQueue:
initWithDevice:bufferCapacity:
setMaxPooledBuffers:
defaultCommandQueue
initWithCommandQueue:resourcePool:
enterLoadArchiveWithPath:
resourceStateCommandEncoder
endEncoding
commit
waitUntilCompleted
initWithLog:
enterOptimizeRestores
defaultDevice
newBufferWithLength:options:
commitCommandBuffer
setLayerClass:
enterRestoreCommandBufferAtIndex:
releaseBuffer
sparseTileSizeWithTextureType:pixelFormat:sampleCount:
convertSparsePixelRegions:toTileRegions:withTileSize:alignmentMode:numRegions:
updateTextureMappings:mode:regions:mipLevels:slices:numRegions:
firstMipmapInTail
deviceForKey:
setBuffer:forKey:
enterRestoreResources:count:
leaveActivity
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
restoreIndirectCommandBufferDataMap
indirectCommandBufferForKey:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
finish
commitCommandBufferWithLog:
iosurface
setObject:forKey:
commandBuffer
removeResourcesForKeys:
enterRewind
init
dealloc
lastObject
removeLastObject
initWithBuffer:resourcePool:
heapTextureSizeAndAlignWithDescriptor:
newTextureWithDescriptor:
initWithAllocatedSize:resourcePool:
removeObjectsInRange:
removeAllObjects
newBufferHeapWithLength:
reclaimBuffer:
reclaimAllocatedSize:
releasePooledBuffers
defaultBufferCapacity
.cxx_destruct
_mutex
_cond
_pooledBuffers
_maxPooledBuffers
_usedSize
_maxSize
_device
_defaultBufferCapacity
T@"<MTLDevice>",R,N,V_device
TQ,R,N,V_defaultBufferCapacity
_allocatedSize
_resourcePool
buffer
_buffer
initWithBytesNoCopy:length:deallocator:
initWithBuffer:
initWithHeap:range:
data
_heap
_heapBuffer
_heapRange
isStatEnabled
getStatLocations
setStatLocations:
isEqual:
class
self
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
T@"<MTLDevice>",R
T@"NSString",C
synchronizeResource:
synchronizeTexture:slice:level:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
generateMipmapsForTexture:
fillBuffer:range:value:
copyFromTexture:sourceSlice:sourceLevel:toTexture:destinationSlice:destinationLevel:sliceCount:levelCount:
copyFromTexture:toTexture:
updateFence:
waitForFence:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
resetCommandsInBuffer:withRange:
optimizeIndirectCommandBuffer:withRange:
sampleCountersInBuffer:atSampleIndex:withBarrier:
resolveCounters:inRange:destinationBuffer:destinationOffset:
getTextureAccessCounters:region:mipLevel:slice:resetCounters:countersBuffer:countersBufferOffset:
resetTextureAccessCounters:region:mipLevel:slice:
addCompletedHandler:
logSharedCommandBuffer:
resourcePool
renderCommandEncoderWithDescriptor:
clearCommandBuffer
_bufferArray
_commandBuffer
commandBufferWithDescriptor:
unsignedLongLongValue
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
stringWithFormat:
libraries
addEntriesFromDictionary:
newLibraryWithData:error:
setPreprocessorMacros:
boolValue
setFastMathEnabled:
setDebuggingEnabled:
setPreserveInvariance:
newLibraryWithSource:options:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
performanceStatistics
newComputePipelineStateWithDescriptor:options:reflection:error:
setRenderPipelineState:forKey:
setComputePipelineState:forKey:
setFunction:forKey:
setLibrary:forKey:
newFunctionWithName:constantValues:error:
newFunctionWithName:
firstObject
sourceList
arrayWithCapacity:
ringBufferNum
hasPrefix:
availableCounters
sampleMarker
numberWithUnsignedInt:
setOptions:
requestTriggers:firstErrorIndex:
requestCounters:firstErrorIndex:
setEnabled:
selectWithName:options:
mutableCopy
setWithArray:
arrayByAddingObjectsFromArray:
numberWithUnsignedLong:
mutableBytes
initWithEncoderBatchPriorityList:
resume
blockOperationWithBlock:
setQueuePriority:
addOperation:
waitUntilFinished
computeCommandEncoderForKey:
renderCommandEncoderForKey:
parallelRenderCommandEncoderForKey:
blitCommandEncoderForKey:
commandBatchIdRangeMin:max:
commandBatchIdOffset
commandBufferForKey:
setDisableDeferredEndEncoding:
dictionaryWithCapacity:
unsignedIntValue
subDivideCounterList:withOptions:
addObjectsFromArray:
counterValueType
setDictionary:
unsignedIntegerValue
setRenderPipelineState:
dispatchThreadsPerTile:
drawPrimitives:vertexStart:vertexCount:instanceCount:
executeIndirectCommandBufferMap
renderPipelineStateForKey:
nextPerEncoderBatchList:
startSampling
setArray:
stopSampling
addDependency:
dataWithBytes:length:
renderPipelineDescriptorMap
newRenderPipelineStateWithDescriptor:error:
nextPerEncoderBatchListForHighPriorityBatches:withHighPriorityInfo:
pause
cleanup
initWithLength:
newEvent
setRenderCommandEncoder:forKey:
removeRenderCommandEncoderForKey:
renderPassDescriptorMap
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
globalTraceObjectID
setParallelRenderCommandEncoder:forKey:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
setComputeCommandEncoder:forKey:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
encodeSignalEvent:value:
encodeWaitForEvent:value:
resetRawDataPostProcessor
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
setData:
isEnabled
ringBufferInfoAtIndex:base:size:dataOffset:dataSize:
dataWithCapacity:
appendBytes:length:
drainRingBufferAtIndex:dataSize:
dataWithLength:
postProcessRawDataWithSource:sourceSize:sourceRead:output:outputSize:outputWritten:isLast:
setLength:
counterSampleBufferLimits
setMTLCounterSampleLocationWithBuffer:vertexStartIndex:vertexEndIndex:fragmentStartIndex:fragmentEndIndex:
setMTLCounterSampleLocationWithBuffer:startIndex:endIndex:
globalTraceIdForEncoder:ofType:
encoderForKey:ofType:
setBlitCommandEncoder:forKey:
filterCounterRangeWithFirstBatch:lastBatch:filterIndex:
setGPUPriority:
setErrorOptions:
computePipelineStateForKey:
newVertexShaderDebugInfo
newFragmentShaderDebugInfo
newTileShaderDebugInfo
initWithFormat:
newKernelDebugInfo
defaultManager
fileExistsAtPath:
contentsOfDirectoryAtPath:error:
pathExtension
caseInsensitiveCompare:
stringByAppendingPathComponent:
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
disableComputeEncoderCoalescing
setDisableComputeEncoderCoalescing:
resolveCounterRange:
enumerateObjectsUsingBlock:
appendData:
newCounterSampleBufferWithLength:label:error:
enumerateKeysAndObjectsUsingBlock:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
renderPassDescriptor
setObject:atIndexedSubscript:
unarchivedObjectOfClass:fromData:error:
doubleValue
arrayWithArray:
integerValue
UUID
UUIDString
dataWithData:
writeToURL:atomically:
path
setName:
setMaxConcurrentOperationCount:
_gatherStaticInformation:forReplayController:
drawCallInfoList
pipelineStateId
_calculateFrameTime:result:
programPipelineInfoList
pipelineStateIndex
setBinary:
_saveShaderBinariesWith:targetIndex:
_setupLimiterInfoPerDrawCall:forPayload:withShaderInfo:
_preProcessUSCSampleData:result:targetIndex:
binary
uscSamples
_extractShaderBinaryTextSegment:
_analyzeBinary:uscSamples:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
setAnalyzerResult:
analyzerResult
drawCallCost
drawCallIndex
_showDrawCallDataforResult:
_dumpTraceProfileDataForResult:
moveItemAtPath:toPath:error:
_calculatePerLineCostWithSampleData:binary:targetIndex:withTextSegment:withKey:withShaderSourcePath:forDataMaster:withPerDrawLimiterData:
_calculatePerDrawCallCostWithSampleData:targetIndex:
encoderCount
setEncoderCount:
encoderInfoList
setProgramId:
setProgramIndex:
setPipelineStateFunctionIndex:
setValid:
setPipelineStateId:
setPipelineStateIndex:
setDrawCallIndex:
setCommandBufferIndex:
setFunctionIndex:
setEncoderIndex:
setEncoderStateId:
setEncoderFunctionIndex:
encoderIndex
setSubCommandIndex:
_updateShaderTimelineInfo:withShaderTimelineDataEx:forGPUTimelineInfo:withEncoderGlobalTraceIdToStateMirrorIdMapping:
encoderFunctionIndex
pipelineStateFunctionIndex
stringByDeletingLastPathComponent
_saveAddressList:size:filename:
_saveSampleDataFromGPURawCounters:size:filename:
evaluateStreamingSamples:withUSCSampleNum:withProgramAddressLUT:targetIndex:forRingBufferIndex:withMinEncoderIndex:withMaxEncoderIndex:withEncoderIdToEncoderIndexMap:withProfilingData:
setCommandBufferCount:
setPerCommandBufferEncoderCount:
setEncoderIndexToLabelMap:
blitEncoderTimeInfo
effectiveKickTimes
setShaderProfilingTime:
setDerivedCountersData:
_createPerCounterCommandData:withPerCommandData:
dataWithJSONObject:options:error:
fileURLWithPath:
lastPathComponent
stringByDeletingPathExtension
stringByAppendingPathExtension:
fileURLWithPath:isDirectory:relativeToURL:
stringByReplacingOccurrencesOfString:withString:
isEqualToArray:
characterSetWithCharactersInString:
invertedSet
componentsSeparatedByCharactersInSet:
componentsJoinedByString:
numberWithDouble:
numberWithInt:
initWithData:encoding:
writeToFile:atomically:encoding:error:
setPerFileCost:
setPerFileLineCostDictForCI:
_createPerFileCostDictionaryWith:lineOffset:
_createPerFileLineCostDictionaryForCIWith:lineOffset:
setTotalCost:
setDrawCallCost:
perFileCost
allValues
setTotalPerLineCost:
setDrawCallPerLineCost:
_getDebugInfoForBinary:withTextSegment:forTargetIndex:
_getAddressAndLineTableForDebugInfo:
_waitLatencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:forLimiterType:
_latencyAdjustmentFactorWithLimiterDataForDraw:forDataMaster:
_ProcessLineList:forFileCostMap:forDebugInfo:andCost:forAddr:andDrawIndex:andTargetIndex:
_processPerLineCostDataForLineTable:withFileCost:withDebugInfo:andAllDrawCost:withKey:withShaderSourcePath:withDrawCost:
_calculatePerLineCostWithSampleData:binary:targetIndex:withKey:withShaderSourcePath:
_calculatePerDrawCallWithGRCSampleData:targetIndex:
analyzedBinary:processedUscSamples:targetIndex:withKey:withShaderSourcePath:
loadActionTimes
storeActionTimes
timing
shaderProfilingTime
programInfo
programId
blitTimeData
gpuTime
setEffectivePerEncoderDrawKickTimes:
_analyzeShaderBinarySamplesForResult:forShaderKeyToSourcePath:
_calculatePerDrawCosts:
effectivePerEncoderDrawKickTimes
convertBinaryInfoToJSONDictionary:
derivedCountersData
_processDerivedEncoderCounterData:forDerivedEncoderData:withEffectivePerDrawKickTimes:withShaderInfo:
perFileLineCostDictForCI
_handlePerDrawCounterData
_calculatePerSampleActiveShaders:withShaderProfilerResult:forWorkloadInfo:
_calculatePerSampleAggregatedActiveShaders:withShaderProfilerResult:forWorkloadInfo:
_preProcessStreamingUSCSampleData:result:
dictionaryWithDictionary:
numberWithBool:
_processHarvestedBinaryData:forStreamedData:
adjustHWBiasAndFinalizeResult
_addBlitTimesToEffectiveKickTimes:
shaderProfilingFrameTimes
setGpuTime:
setupDataForEvaluatingStreamingSamples:forRingBufferCount:forTargetIndex:
setBlitTimeData:
_processBatchIdCounterData:
setFrameTime:
setUscSamples:
_saveSampleListForTarget:size:filename:
_saveSampleList:size:filename:
generateTargetSamplesForResult:withProgramAddressLUT:withBatchIndexMin:withProgramAddressList:withUSCSampleBuffer:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:targetIndex:
_generateSamplesForResult:withProgramAddressLUT:withBatchIndexMin:andBatchIndexMax:andMinIndex:withProgramAddressList:withUSCSampleList:withUSCSampleNum:withBatchIDToEncoderIndex:andEncoderIndexToBatchIdMap:
vertexTiming
fragmentTiming
computeTiming
sortedArrayUsingComparator:
stringByAppendingFormat:
programIndex
functionIndex
dictionary
_createPerLineCostDictionaryWith:lineOffset:
_saveDebugInfoFrom:to:withTextSegment:targetIndex:
stringByAppendingString:
writeToFile:atomically:
_dumpShaderBinaryInfo:usingKey:withBaseFileName:targetIndex:
string
appendFormat:
appendString:
_codeGenCounterProcessing:derivedCounterNames:
context
evaluteScript:scriptURL:
setRawArrayValues:withUint32Values:andNumCounters:
callFunction:withArguments:
getValue:
toArray
allKeys
_prepareCounterNames:derivedCounterNames:withContext:
_prepareAndEvaluateCounterValues:numElementsPerSample:numSamples:withContext:withGPUCyclesCounterIndex:
initWithOptions:
analyzeShaderInfoResult:forDataSource:forReplayController:
processStreamingGRCData:
waitForCompletion
processGPUTimelineDataSources:withPayload:forReplayController:
writeGPUTimelineSerializedData
profileShadersForDataSource:withPayload:forReplayController:
profileBatchIdFilteredData:withPayload:forReplayController:
_saveSampleDataFromGPURawCountersBytes:size:filename:
_calculateRealTimeInfoWithGPUTime:forShaderInfoResult:
_saveDebugInfoFrom:to:targetIndex:
_waitLatencyAdjustmentWithLimiterData:forIndex:withLimiterTypeIndexMap:
_latencyAdjustmentWithLimiterData:forIndex:withLimiterTypeIndexMap:
_latencyAdjustmentFactorWithLimiterData:forIndex:withLimiterTypeIndexMap:forLimiterType:
_PrintLimiterData:withRawLimiterList:withDerivedCounters:andDerivedCounterNames:
_processGPURawCounterData:andFillDeivedCounterNames:
_calculateEffectiveGPUEncoderCostforData:andPerLimiterBatchCost:forShaderProfilerResult:
metalPluginName
setMetalPluginName:
.cxx_construct
_options
_streamingHelper
_shaderSourcePath
_operationQueue
_shaderProfilerHelper
_payload
_shaderInfoResult
_streamingMTLResult
waitOperation
_batchIdPartialResults
_workloadTimelineInfo
_metalPluginName
T@"NSString",&,N,V_metalPluginName
stringWithFileSystemRepresentation:length:
fileURLWithPath:isDirectory:
fileExistsAtPath:isDirectory:
removeItemAtURL:error:
domain
code
dy_errorSignature
objectForKey:
dictionaryWithObject:forKey:
numberWithInteger:
dictionaryWithObjectsAndKeys:
userInfo
setObject:forIntKey:
allowsKeyedCoding
decodeObjectOfClasses:forKey:
longLongValue
decodeObjectOfClass:forKey:
encodeObject:forKey:
removeObjectForIntKey:
objectForIntKey:
initWithLongLong:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
Tc,R
initWithIntKeyedDictionary:
removeObjectForKey:
_private
future
setError:
setResult:
lock
unlock
_setResult:error:notify_NOLOCK:
broadcast
automaticallyNotifiesObserversForKey:
willChangeValueForKey:
didChangeValueForKey:
wait
_addDependency_REQUIRESLOCK:
_dependencies_NOLOCK
_start_NOLOCK
standardUserDefaults
boolForKey:
isMainThread
logPerformance
date
timeIntervalSinceNow
timeIntervalSinceReferenceDate
currentThread
valueForKeyPath:
callStackSymbols
fileHandleForWritingAtPath:
seekToEndOfFile
dataUsingEncoding:
writeData:
closeFile
waitUntilResolved
addResultHandler:
result
intValue
start
isFinished
removeObject:
addObserver:forKeyPath:options:context:
futureWithResult:error:
isCancelled
isAsynchronous
isExecuting
queuePriority
completionBlock
setCompletionBlock:
dependencies
requestResult:
boolResult
uint32Result
intResult
error
cancel
timeoutAfter:label:
resolveWithFuture:
notifyOnQueue:handler:
notifyGroup:
observeValueForKeyPath:ofObject:change:context:
_waitForDependencies_REQUIRESLOCK
_timeout
_condition
_resolved
_cancelled
_result
_error
_notifyList
_inflightDependencies
_started
_completion
_priority
doesNotRecognizeSelector:
initWithQueue:block:
dispatch
queue
block
cancelled
initWithKind:attributes:payload:
initWithKind:attributes:boolPayload:
initWithKind:attributes:plistPayload:
initWithKind:attributes:stringPayload:
initWithKind:attributes:objectPayload:
initWithBytes:length:
initRequiringSecureCoding:
encodedData
allocWithZone:
serial
getBytes:length:
objectPayload
initForReadingFromData:error:
setDecodingFailurePolicy:
finishDecoding
messageWithKind:
messageWithKind:attributes:
messageWithKind:payload:
messageWithKind:attributes:payload:
messageWithKind:boolPayload:
messageWithKind:attributes:boolPayload:
messageWithKind:plistPayload:
messageWithKind:attributes:plistPayload:
messageWithKind:stringPayload:
messageWithKind:attributes:stringPayload:
messageWithKind:objectPayload:
messageWithKind:attributes:objectPayload:
copyWithZone:
hasBeenSent
_setSerial:replySerial:transport:
_setTransportSize:
attributeForKey:
uint32ForKey:
uint64ForKey:
doubleForKey:
boolPayload
plistPayload
stringPayload
kind
payload
encodedAttributes
setEncodedAttributes:
replySerial
transport
transportSize
_attributes
_transport
_encodedAttributes
_decodedPayload
_decodedPayloadType
_kind
_serial
_replySerial
_transportSize
T@"GTTransport_replayer",R,&,N,V_transport
TI,R,N,V_replySerial
TI,R,N,V_transportSize
T@"NSData",&,N,V_encodedAttributes
Ti,R,N,V_kind
TI,R,N,V_serial
T@"NSDictionary",R,&,N,V_attributes
T@"NSData",R,&,N,V_payload
dispatchError:
timeout
replyCount
_register
_cancel
_callRegistrationHandler
_activateSource:
_cancelSource:
_callCancellationHandler
_initWithQueue:transport:
suspend
messageHandler
setMessageHandler:
cancellationHandler
setCancellationHandler:
registrationHandler
setRegistrationHandler:
_dispatch:
_messageHandler
_cancellationHandler
_registrationHandler
_queue
_mqueue
_state
T@?,C,N
connected
invalid
makeObjectsPerformSelector:
_handleReplyTimeout:count:
_scheduleInvalidation:
_invalidate
_packMessage:error:
_nextMessageSerial
_sendMessage:error:
send:inReplyTo:error:replyQueue:timeout:handler:
sendNewMessage:error:replyQueue:timeout:handler:
setTargetQueue:
newSourceWithQueue:
connect
_dispatchMessage:
invalidate
synchronous
setSynchronous:
send:inReplyTo:error:
send:error:replyQueue:timeout:handler:
send:error:
sendNewMessage:error:
relayMessage:error:
drainQueue
prioritizeOutgoingMessages
setPrioritizeOutgoingMessages:
identifier
setIdentifier:
interposerVersion
setInterposerVersion:
_url
_rootQueue
_sendQueue
_messageCounter
_messageSendQueueDepth
_invalid
_prioritizeOutgoingMessages
_interposerVersion
_sources
_replyHandlersMap
_identifier
_dispatch_send
T@"NSURL",R,&,N
Tc,R,N
T@"NSError",R,&,N,V_error
T@"NSString",C,N,V_identifier
Tc,N,V_prioritizeOutgoingMessages
TI,N,V_interposerVersion
Tc,N
initWithGTVMBuffer:range:
GTGPUToolsData
subdataWithRange:
_parent
_range
initWithVMBuffer:
vmBuffer
_vmBuffer
T^{VMBuffer=QQQQQQ},R,N,V_vmBuffer
propertyListWithData:options:format:error:
_read:size:
_performRead:size:
_syncTmuToHeader:ioBlock:
_unpackAndDispatchMessage
_allocateMessageBuffer
_clearBuffers
_write:size:
_waitEAGAIN
dataWithPropertyList:format:options:error:
_writeBuffers:
initWithBytesNoCopy:length:freeWhenDone:
_relayBufferInner:size:
_readAndAccumulate
_relayBuffer:size:
_tmu
_messageBuffer
_messageBufferWritePtr
_bytesToRead
_iov
_buffers
_sendSema
_relayQueue
_relayTmu
message
setMessage:
replyTo
setReplyTo:
setQueue:
setTimeout:
replyBlock
setReplyBlock:
_message
_replyTo
_replyBlock
T@"GTTransportMessage_replayer",&,N,V_message
T@"GTTransportMessage_replayer",&,N,V_replyTo
T@"NSObject<OS_dispatch_queue>",N,V_queue
TQ,N,V_timeout
T@?,N,V_replyBlock
initWithMode:initialMessageSerial:
initWithString:
_accumulateMessageBytes
methodForSelector:
scheme
absoluteString
_relayPacket
substringFromIndex:
_calculateVMRegionMapSize:
_mapSharedMemoryFile:size:error:
_dequeueIncomingMessages
_getSharedMemoryNameWithSuffix:
getCString:maxLength:encoding:
_initializeSMRegion:size:name:error:
_setupIOBuffers
_createAndRunSources:
_openSMRegion:size:name:error:
_serverConnect:
_clientConnect:
objectAtIndex:
_tearDownSharedMemory
_computeBytesAvailableToRead
_computeBytesAvailableToWrite
_copyToSM:size:
_updateReaderOffset:
_copyFromSM:size:
_dequeuePacket
initWithMode:
setUrl:
setRelayTransport:
deferred
_outgoingShmem
_incomingShmem
_masterSMRegion
_outgoingBuffer
_incomingBuffer
_relayTransport
_consumeBytesIMP
_consumeBytesSEL
_currentPacketBytesLeft
_mode
_deferred
_bufferedMessages
_sendName
_receiveName
T@"NSURL",&,D,N
Tc,R,N,V_deferred
closeSocketDescriptor
_readAndAccumulateLoop
_destroySharedMemoryTransport
createNewSharedMemoryTransportWithURL:
runWithSocket:
scheduleReadOnWritableSocket
createNewSharedMemoryTransport
destroySharedMemoryTransport
relayMessageOverSharedMemoryTransport:error:
smTransport
_readSource
_writeSource
_smTransport
_writeSourceIsSuspended
_scheduledReadOnWritableSocket
T@"GTSharedMemoryTransport_replayer",R,N,V_smTransport
filePathURL
initFileURLWithPath:
_connectServer:future:
_connectClient:future:
_connSource
stringWithCString:encoding:
URLWithString:
processInfo
activeProcessorCount
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
indirectRenderCommandAtIndex:
getCommandType
drawArguments
primitiveType
vertexStart
vertexCount
instanceCount
baseInstance
drawIndexedArguments
indexCount
indexBufferVirtualAddress
baseVertex
getTessellationFactorArguments
virtualAddress
instanceStride
scale
drawPatchesArguments
numberOfPatchControlPoints
patchStart
patchCount
patchIndexBufferVirtualAddress
drawIndexedPatchesArguments
controlPointIndexBufferVirtualAddress
getPipelineStateUniqueIdentifier
getVertexBufferAtIndex:
getFragmentBufferAtIndex:
indirectComputeCommandAtIndex:
dispatchThreadgroupsArguments
threadgroupsPerGrid
threadsPerThreadgroup
getStageInRegion
hasBarrier
dispatchThreadsArguments
threadsPerGrid
getKernelBufferAtIndex:
getThreadgroupMemoryLengthAtIndex:
reset
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
setVertexBuffer:offset:atIndex:
setFragmentBuffer:offset:atIndex:
concurrentDispatchThreadgroups:threadsPerThreadgroup:
setStageInRegion:
setBarrier
concurrentDispatchThreads:threadsPerThreadgroup:
setComputePipelineState:
setKernelBuffer:offset:atIndex:
setThreadgroupMemoryLength:atIndex:
setTileBuffer:offset:atIndex:
setThreadgroupMemoryLength:offset:atIndex:
reserveResourceIndicesForResourceType:indices:indexCount:
functionForKey:
newArgumentEncoderWithBufferIndex:reflection:
enterArgumentBufferDownload
enterArgumentBufferUpload
newArgumentEncoderWithBufferIndex:
alignment
gpuAddress
uniqueIdentifier
resourcePatchingTypeForResourceType:
encodedLength
setArgumentBuffer:offset:
layout
virtualAddressForBufferAtIndex:inIndirectArgumentBuffer:atOffset:
setBuffer:offset:atIndex:
newArgumentEncoderForBufferAtIndex:
uniqueIdentifierForTextureAtIndex:inIndirectArgumentBuffer:atOffset:
setTexture:atIndex:
uniqueIdentifierForSamplerAtIndex:inIndirectArgumentBuffer:atOffset:
samplerStateForKey:
setSamplerState:atIndex:
uniqueIdentifierForRenderPipelineAtIndex:inIndirectArgumentBuffer:atOffset:
setRenderPipelineState:atIndex:
uniqueIdentifierForComputePipelineAtIndex:inIndirectArgumentBuffer:atOffset:
setComputePipelineState:atIndex:
uniqueIdentifierForIndirectCommandBufferAtIndex:inIndirectArgumentBuffer:atOffset:
setIndirectCommandBuffer:atIndex:
setFragmentSamplerState:atIndex:
setFragmentTexture:atIndex:
setFragmentBytes:length:atIndex:
drawPrimitives:vertexStart:vertexCount:
maxTextureWidth2D
newTextureViewWithPixelFormat:textureType:levels:slices:
dictionaryWithContentsOfFile:
setShaderDebugInfoCaching:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
mainBundle
pathForResource:ofType:
waitUntilAllOperationsAreFinished
writeToURL:error:
initWithContentsOfFile:
writeToURL:atomically:encoding:error:
setCaptureObject:
initWithDictionary:
arrayByAddingObject:
compare:
sortedArrayUsingSelector:
subarrayWithRange:
addOperationWithBlock:
initWithCGImage:
representationUsingType:properties:
initWithObjects:forKeys:
setTransform:
setBounds:
setAnchor:
setContentsScale:
setRgb:
setDepthStencil:
setOverlay:
setShrinkToFit:
transform
bounds
anchor
contentsScale
depthStencil
overlay
shrinkToFit
_transform
_bounds
_anchor
_texture
_contentsScale
_rgb
_depthStencil
_overlay
_shrinkToFit
T{CATransform3D=dddddddddddddddd},V_transform
T{CGRect={CGPoint=dd}{CGSize=dd}},V_bounds
T{CGPoint=dd},V_anchor
T@"<MTLTexture>",&,V_texture
Td,V_contentsScale
TI,V_rgb
TB,V_depthStencil
TB,V_overlay
TB,V_shrinkToFit
resetCommand
submitCommand
setBounds:contentsScale:
drawTexture:isDepthStencil:shrinkToFit:
drawOverlay:color:shrinkToFit:
commands
_commands
_currentCommand
T@"<MTLDevice>",R,V_device
T@"NSArray",R,V_commands
newDefaultLibrary
newTextureViewWithPixelFormat:
getPipelineStateFromCache:withDescriptor:withFormat:
wrapLinear:
setVertexBytes:length:atIndex:
renderOverlay:color:shrinkToFit:withEncoder:withFormat:transform:anchor:bounds:renderTargetSize:viewContentsScale:
renderTexture:isDepthStencil:shrinkToFit:withEncoder:withFormat:transform:anchor:bounds:renderTargetSize:viewContentsScale:
currentRenderPassDescriptor
colorPixelFormat
drawableSize
layer
render:withEncoder:withFormat:renderTargetSize:viewContentsScale:
renderEncodedCommands:toCommandBuffer:withView:
_overlayPipelineDescriptor
_texturePipelineDescriptor
_depthStencilPipelineDescriptor
_overlayPipelines
_texturePipelines
_depthStencilPipelines
numberWithUnsignedShort:
layerForKey:
anchorPoint
setDisplayTextureEncoder:
initWithVirtualMachine:
toString
toDictionary
setExceptionHandler:
evaluateScript:
valueWithObject:inContext:
JSGlobalContextRef
JSValueRef
initWithUTF8String:
newComputePipelineStateWithFunction:error:
newSamplerStateWithDescriptor:
newBufferWithBytes:length:options:
rasterizationRateMapForKey:
validate:width:height:
commitCommandBuffers
computeCommandEncoder
threadExecutionWidth
allocNewContext
_clearCache
_jsStringToString:
_cachedStringFromString:
evaluateScript:withSourceURL:
callWithArguments:
toDouble
_jsValueToString:
dataWithBytesNoCopy:length:
JSONObjectWithData:options:error:
sharedContext
setValue:value:
createArrayRef:
setRawArrayValues:withUint64Values:andNumCounters:
setValues:
callGlobalFunction:
setGlobalDouble:value:
getGlobalDouble:
setGlobalJSONObject:value:
getGlobalJSONObject:
virtualMachine
exceptionHandler
_cache
_stringCache
_globalObject
_filename
_virtualMachine
_context
_exceptionHandler
T@"JSVirtualMachine",R,N,V_virtualMachine
T@"JSContext",R,N,V_context
T@?,C,N,V_exceptionHandler
infoDictionary
setTracingEnabled:
setAdditionalCompilerArguments:
bitcodeData
traceBufferIndex
constantSamplerUniqueIdentifiers
constantSamplerDescriptors
computePipelineDescriptorMap
initWithObjectsAndKeys:
floatValue
isFramebufferOnly
maxVertexBuffers
setPostVertexDumpBufferIndex:
postVertexDumpStride
supportsMemorylessRenderTargets
setTessellationFactorScale:
postVertexDumpOutputs
airMDType
dataType
setRetainedReferences:
messageSerial
initWithType:
jsonObject
outputToLog:
signpostIntervalBegin:
endTime
setEndTime:
previousActivity
setPreviousActivity:
_activityType
_activityStartTime
_activityEndTime
_previousActivity
TQ,N,V_activityEndTime
T@"GTMTLReplayActivity",&,N,V_previousActivity
initWithPath:
_path
base64EncodedStringWithOptions:
isValidJSONObject:
null
initWithMessage:
initWithAttributes:
initWithIndex:
_functionIndex
initWithRequests:count:
_requests
_requestCount
initWithCurrentIndex:targetIndex:
_currentIndex
_targetIndex
initWithCounters:statLocations:index:
_counterNames
_locations
_index
status
temporaryDirectory
initFileURLWithPath:relativeToURL:
logCommandBuffer:atIndex:
enterActivity:
logCommandBuffer:withKey:
logFailure:file:line:reason:
enterMessage:
enterHarvestResourceObjectWithAttributes:
enterDebugFuncStopFromIndex:toIndex:
enterCollectCounters:statLocations:withIndex:
enterPerformFrameTimingForIndex:
enterDisplayAttachmentAtIndex:
gputracePath
_log
_gputracePath
_lastBreadcrumb
_lastActivity
_abortOnCommandBufferErrorCode
_abortOnFailureType
_retainActivityLog
T@"NSString",R,N,V_gputracePath
exchangeObjectAtIndex:withObjectAtIndex:
kernelStartTime
kernelEndTime
GPUStartTime
GPUEndTime
logs
debugSignposts
errorState
function
encoderIdentifier
encoderLabel
encoderMethodIdentifier
addressSpace
operation
errorStackTrace
functionType
allocatedSize
functionName
line
column
_initializeData:
_clearData
_addBatchAtEncoderIndex:inEncoderArray:
_processedBatches
_batchToEncoderMap
_perEncoderBatchQueue
_highPriorityArray
_semaphore
_semaphoreRequests
_paused
setConstantValue:type:atIndex:
setLanguageVersion:
supportsVertexAmplification
supportsTessellation
supportsLayeredRendering
supportsImageBlocks
maxRasterizationRateLayerCount
newTextureViewWithPixelFormat:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:resourceIndex:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:resourceIndex:
argumentBuffersSupport
containsString:
setWithCapacity:
_grcFrameData
cancelAllOperations
maxConcurrentOperationCount
setPurgeableState:
makeAliasable
isAliasable
heap
heapOffset
T@"<MTLHeap>",R
resetWithRange:
setTiming:
_timing
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}},N,V_timing
encoderStateId
commandBufferIndex
subCommandIndex
setProgramInfo:
_vertexShaderKey
_fragmentShaderKey
_computeKernelKey
_vertexTiming
_fragmentTiming
_computeTiming
_drawCallIndex
_encoderIndex
_commandBufferIndex
_pipelineStateIndex
_subCommandIndex
_encoderStateId
_encoderFunctionIndex
_pipelineStateId
_pipelineStateFunctionIndex
_programInfo
TI,N,V_drawCallIndex
TI,N,V_functionIndex
TI,N,V_pipelineStateIndex
TQ,N,V_pipelineStateId
TQ,N,V_pipelineStateFunctionIndex
TI,N,V_encoderIndex
TQ,N,V_encoderStateId
TQ,N,V_encoderFunctionIndex
TI,N,V_commandBufferIndex
Ti,N,V_subCommandIndex
T@"DYShaderProfilerProgramInfo",&,N,V_programInfo
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}},R,N,V_vertexTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}},R,N,V_fragmentTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}},R,N,V_computeTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}},R,N,V_timing
programPipelineIndex
valid
_drawCallInfoList
_valid
_programPipelineIndex
_programIndex
_programId
TI,N,V_programIndex
TQ,N,V_programId
Tc,N,V_valid
TI,R,N,V_programPipelineIndex
TQ,R,N,V_pipelineStateId
T@"NSMutableArray",R,N,V_drawCallInfoList
totalCost
totalPerLineCost
drawCallPerLineCost
_totalCost
_drawCallCost
_perFileCost
_totalPerLineCost
_drawCallPerLineCost
_perFileLineCostDictForCI
Td,N,V_totalCost
T@"NSDictionary",&,N,V_drawCallCost
T@"NSDictionary",&,N,V_perFileCost
T@"NSDictionary",&,N,V_totalPerLineCost
T@"NSDictionary",&,N,V_drawCallPerLineCost
T@"NSDictionary",&,N,V_perFileLineCostDictForCI
_binary
_uscSamples
_analyzerResult
T@"NSData",&,N,V_binary
T@"NSMutableData",&,N,V_uscSamples
T@"DYShaderAnalyzerResult",&,N,V_analyzerResult
setDrawCallInfoList:
encoderFunctionIndexList
programInfoList
setProgramPipelineInfoList:
encoderFunctionIndexToEncoderIndexMap
setVertexTiming:
setFragmentTiming:
setComputeTiming:
setEffectiveKickTimes:
setLoadActionTimes:
setStoreActionTimes:
commandBufferCount
perCommandBufferEncoderCount
encoderIndexToLabelMap
frameTime
deviceUtilization
setDeviceUtilization:
setBlitEncoderTimeInfo:
setShaderProfilingFrameTimes:
_drawCallInfoIndexMap
_vertexShaderBinaryInfo
_fragmentShaderBinaryInfo
_computeKernelBinaryInfo
_perContextDrawCallCounterDY
_commandBufferCount
_deviceUtilization
_encoderCount
_encoderInfoList
_encoderFunctionIndexList
_programInfoList
_programPipelineInfoList
_encoderFunctionIndexToEncoderIndexMap
_effectiveKickTimes
_effectivePerEncoderDrawKickTimes
_loadActionTimes
_storeActionTimes
_perCommandBufferEncoderCount
_encoderIndexToLabelMap
_derivedCountersData
_frameTime
_gpuTime
_blitTimeData
_blitEncoderTimeInfo
_shaderProfilingFrameTimes
_shaderProfilingTime
T@"NSMutableArray",&,N,V_drawCallInfoList
T@"NSMutableArray",&,N,V_programPipelineInfoList
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}},N,V_vertexTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}},N,V_fragmentTiming
T{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}},N,V_computeTiming
TQ,N,V_frameTime
TI,N,V_deviceUtilization
TI,N,V_encoderCount
Td,N,V_gpuTime
T@"NSArray",&,N,V_blitTimeData
T@"NSMutableDictionary",&,N,V_blitEncoderTimeInfo
T@"NSMutableArray",&,N,V_shaderProfilingFrameTimes
Td,N,V_shaderProfilingTime
T@"NSDictionary",&,N,V_derivedCountersData
T@"NSMutableArray",R,N,V_encoderInfoList
T@"NSMutableArray",R,N,V_encoderFunctionIndexList
T@"NSMutableArray",R,N,V_programInfoList
T@"NSMutableDictionary",R,N,V_encoderFunctionIndexToEncoderIndexMap
T@"NSMutableArray",&,N,V_effectiveKickTimes
T@"NSMutableArray",&,N,V_effectivePerEncoderDrawKickTimes
T@"NSMutableArray",&,N,V_loadActionTimes
T@"NSMutableArray",&,N,V_storeActionTimes
TI,N,V_commandBufferCount
T@"NSMutableArray",&,N,V_perCommandBufferEncoderCount
T@"NSDictionary",&,N,V_encoderIndexToLabelMap
encoderTilerParamBufBytesUsedArray
setEncoderTilerParamBufBytesUsedArray:
parameterBufferMaxSize
setParameterBufferMaxSize:
parameterBufferMaxSizeEverMemless
setParameterBufferMaxSizeEverMemless:
parameterBufferMaxSizeNeverMemless
setParameterBufferMaxSizeNeverMemless:
parameterBufferPercentFullDict
setParameterBufferPercentFullDict:
softwareCounterInfo
setSoftwareCounterInfo:
unknownUSCSamples
setUnknownUSCSamples:
perRingPerFrameLimiterData
setPerRingPerFrameLimiterData:
_encoderTilerParamBufBytesUsedArray
_parameterBufferMaxSize
_parameterBufferMaxSizeEverMemless
_parameterBufferMaxSizeNeverMemless
_parameterBufferPercentFullDict
_softwareCounterInfo
_unknownUSCSamples
_perRingPerFrameLimiterData
T@"NSArray",&,N,V_encoderTilerParamBufBytesUsedArray
T@"NSNumber",&,N,V_parameterBufferMaxSize
T@"NSNumber",&,N,V_parameterBufferMaxSizeEverMemless
T@"NSNumber",&,N,V_parameterBufferMaxSizeNeverMemless
T@"NSDictionary",&,N,V_parameterBufferPercentFullDict
T@"NSDictionary",&,N,V_softwareCounterInfo
T@"NSMutableData",&,N,V_unknownUSCSamples
T@"NSMutableDictionary",&,N,V_perRingPerFrameLimiterData
extractShaderBinaryTextSegment:
instructionPCStatInfo
_instructionPCStatInfo
T{InstructionPCStatInfo=^{ShaderBinaryStatsInfo}IIb27b5dd{vector<DYMTLShaderProfilerGRCProcessedUSCSample, std::__1::allocator<DYMTLShaderProfilerGRCProcessedUSCSample>>=^{DYMTLShaderProfilerGRCProcessedUSCSample}^{DYMTLShaderProfilerGRCProcessedUSCSample}{__compressed_pair<DYMTLShaderProfilerGRCProcessedUSCSample *, std::__1::allocator<DYMTLShaderProfilerGRCProcessedUSCSample>>=^{DYMTLShaderProfilerGRCProcessedUSCSample}}}},R,N,V_instructionPCStatInfo
_eventTypesForTarget:
_traceHeaders
_setupShaderBinaryInfo:withBinaryKey:andNumDraws:
dumpInstructions
_dumpTraceBufferPacketsInFile:usingTracePackets:withExtractedSamples:withTraceBufferCount:forTargetIndex:
_latencyAdjustmentFactorWithLimiterDataWithLerp:forIndex:withLimiterTypeIndexMap:forLimiterType:
_latencyAdjustmentFactorWithLimiterData:forIndex:withLimiterTypeIndexMap:forLimiterTypeLoad:forLimiterTypeStore:
_computeSampleNormFactorForSample:forProgramStartAddress:forProgramEndAddress:
_calculateAndAppendPerBatchCosts:forFrameIndex:atTimestamp:withLimiterIndices:withTimestampBuffers:withActiveBatches:withPerRingBufferLimiterEncoderCosts:
_dumpAggregatedGPUTimePerBatchForFrame:
_calculateAggregatedEffectiveGPUEncoderCost
_calculateEffectiveGPUEncoderCostForFrameIndex:
replaceBytesInRange:withBytes:
_cleanup
_processTracePackets:forRenderIndex:andGenerateSampleList:forTargetIndex:forLimiterIndex:
_costHeaders
_dumpLimiterBatchInfoCosts:forRingBuffer:forFrame:
setDumpInstructions:
_ignoreBlockSamplingBiasAdjustment
_shaderBinaryStatInfoMap
_binaryLUT
_nDrawCalls
_binaryKeyToClauseInfoMap
_instructionPCInfo
_perRingBufferPerFrameLimiters
_perRingBufferPerFrameLimiterTimeStamps
_perRingBufferPerFrameShaderTimelineData
_perRingBufferPerFramePerLimiterIndexEncoderCost
_perRingBufferPerFramePerEncoderLoadActionCost
_perRingBufferPerFramePerEncoderStoreActionCost
_perFrameTimeStats
_averageTimeStats
_limiterMap
_limiterTypeIndexMap
_limiterCounterList
_frameIndexMap
_clauseMutex
_parallelQueue
_serialQueue
_dumpInstructions
Tc,N,V_dumpInstructions
setTriangleFillMode:
setFrontFacingWinding:
setCullMode:
depthStencilStateForKey:
setDepthStencilState:
setDepthBias:slopeScale:clamp:
setDepthClipMode:
setStencilFrontReferenceValue:backReferenceValue:
setViewports:count:
setScissorRects:count:
setVertexAmplificationMode:value:
setVertexAmplificationCount:viewMappings:
setBlendColorRed:green:blue:alpha:
setVisibilityResultMode:offset:
setVertexBuffers:offsets:withRange:
setVertexTextures:withRange:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentBuffers:offsets:withRange:
setFragmentTextures:withRange:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setTessellationFactorBuffer:offset:instanceStride:
setTileBuffers:offsets:withRange:
setTileBytes:length:atIndex:
setTileTextures:withRange:
setTileSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setColorStoreAction:atIndex:
setColorStoreActionOptions:atIndex:
setDepthStoreAction:
setDepthStoreActionOptions:
setStencilStoreAction:
setStencilStoreActionOptions:
setLineWidth:
setPrimitiveRestartEnabled:
setBuffers:offsets:withRange:
setBytes:length:atIndex:
setTextures:withRange:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setImageblockWidth:height:
heapForKey:
resourceForKey:
useResources:count:usage:
useHeaps:count:
executeCommandsInBuffer:withRange:
renderPassDescriptorMapWithMemorylessSubstitutes:
parallelRenderCommandEncoderWithDescriptor:
renderCommandEncoder
viewDidLoad
view
setWantsLayer:
blackColor
CGColor
setBackgroundColor:
setDevice:
initWithFrame:
setColorPixelFormat:
setPaused:
setColorspace:
setView:
initWithMetalKitView:
mtkView:drawableSizeWillChange:
setDelegate:
draw
window
frame
screen
screens
setStyleMask:
setCollectionBehavior:
colorWithDeviceRed:green:blue:alpha:
setOpaque:
setHasShadow:
setMinSize:
setMaxSize:
setAspectRatio:
setFrame:display:
standardWindowButton:
makeKeyAndOrderFront:
toggleFullScreen:
setFrame:
setContentRect:windowRect:properties:
updateViewWithContentRect:windowRect:properties:
setWindowTitle:
setTitleWithRepresentedFilename:
setTitle:
setOrientation:
shouldAutorotate
_metalView
_renderer
_shouldRotate
allObjects
indexOfObject:
stringForKey:
componentsSeparatedByString:
arrayWithObject:
initFileURLWithPath:isDirectory:
initWithContentsOfURL:error:
initWithContentsOfFile:encoding:error:
acceleratorPort
predicateWithFormat:
filteredArrayUsingPredicate:
rangeOfString:
setStatEnabled:
subdivideCounterList:
commandBufferWithUnretainedReferences
setStatOptions:
requestCounters:withIndex:
addPerfSampleHandler:
counterInfo
array
sortUsingComparator:
addIndex:
removeObjectsAtIndexes:
removeAllIndexes
initWithBytesNoCopy:length:encoding:freeWhenDone:
argumentEncoderForKey:
removeArgumentEncoderForKey:
setArgumentEncoder:forKey:
setArgumentBuffer:startOffset:arrayElement:
setIndirectCommandBuffers:withRange:
setRenderPipelineStates:withRange:
setSamplerStates:withRange:
binaryArchiveForKey:
removeBinaryArchiveForKey:
removeBlitCommandEncoderForKey:
fenceForKey:
removeBufferForKey:
didModifyRange:
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
setTexture:forKey:
newTextureWithDescriptor:offset:bytesPerRow:
newTiledTextureWithDescriptor:offset:bytesPerRow:
setProfilingEnabled:
setSharedIndirectionTable:
addPurgedHeap:
addPurgedResource:
computeCommandEncoderWithDispatchType:
removeCommandBufferForKey:
debugCommandEncoder
setDebugCommandEncoder:forKey:
doCorruptCBSPI:
eventForKey:
setResourceStateCommandEncoder:forKey:
waitUntilScheduled
commandQueueForKey:
setExecutionEnabled:
setSkipRender:
removeCommandQueueForKey:
insertDebugCaptureBoundary
setBackgroundGPUPriority:
setBackgroundGPUPriority:offset:
setGPUPriority:offset:
removeComputeCommandEncoderForKey:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
enableNullBufferBinds:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
memoryBarrierWithResources:count:
memoryBarrierWithScope:
setBufferOffset:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
useHeap:
useResource:usage:
removeComputePipelineStateForKey:
removeCounterSampleBufferForKey:
counterSampleBufferForKey:
removeDepthStencilStateForKey:
setCommandBufferErrorOptions:
setMetalAssertionsEnabled:
removeDeviceForKey:
minLinearTextureAlignmentForPixelFormat:
minLinearTextureBaseAddressAlignmentForDescriptor:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithLength:options:gpuAddress:
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithFunction:options:reflection:error:
newCounterSampleBufferWithDescriptor:error:
setCounterSampleBuffer:forKey:
newDepthStencilStateWithDescriptor:
setDepthStencilState:forKey:
setEvent:forKey:
newFence
setFence:forKey:
newFunctionWithGLIR:functionType:
setIndirectCommandBuffer:forKey:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newMotionEstimationPipelineWithDescriptor:
setMotionEstimationPipeline:forKey:
newPipelineLibraryWithFilePath:error:
setPipelineLibrarySPI:forKey:
newRasterizationRateMapWithDescriptor:
setRasterizationRateMap:forKey:
newRenderPipelineStateWithTileDescriptor:error:
setSamplerState:forKey:
newSharedEvent
setSharedEvent:forKey:
newSharedEventWithMachPort:
newSharedTextureWithDescriptor:
requiredLinearTextureBytesPerRowForDescriptor:
tileSizeWithSparsePageSize:textureType:pixelFormat:sampleCount:
dynamicLibraryForKey:
removeDynamicLibraryForKey:
removeEventForKey:
removeFenceForKey:
removeFunctionForKey:
pipelineLibraryForKey:
newArgumentEncoderWithBufferIndex:pipelineLibrary:
newArgumentEncoderWithBufferIndex:reflection:pipelineLibrary:
removeHeapForKey:
maxAvailableSizeWithAlignment:
newBufferWithLength:options:offset:
newTextureWithDescriptor:offset:
setResponsibleProcess:
removeIndirectCommandBufferForKey:
setIndirectComputeCommand:forKey:
setIndirectRenderCommand:forKey:
indirectComputeCommandForKey:
removeIndirectComputeCommandForKey:
removeIndirectRenderCommandForKey:
indirectRenderCommandForKey:
libraryForKey:
setOverrideTriple:
removeLibraryForKey:
newExternFunctionWithName:
removeMotionEstimationPipelineForKey:
removeParallelRenderCommandEncoderForKey:
setDisableRunTimeCompilation:
removePipelineLibraryForKey:
newComputePipelineStateWithName:options:reflection:error:
newRenderPipelineStateWithName:options:reflection:error:
removeRasterizationRateMapForKey:
mapScreenToPhysicalCoordinates:forLayer:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPrimitives:indirectBuffer:indirectBufferOffset:
memoryBarrierWithResources:count:afterStages:beforeStages:
memoryBarrierWithScope:afterStages:beforeStages:
setAlphaTestReferenceValue:
setColorResolveTexture:slice:depthPlane:level:atIndex:
setColorResolveTexture:slice:depthPlane:level:yInvert:atIndex:
setDepthCleared
setDepthResolveTexture:slice:depthPlane:level:
setDepthResolveTexture:slice:depthPlane:level:yInvert:
setFragmentBufferOffset:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerStates:withRange:
setFragmentTexture:atTextureIndex:samplerState:atSamplerIndex:
setPointSize:
setPrimitiveRestartEnabled:index:
setProvokingVertexMode:
setScissorRect:
setStencilCleared
setStencilReferenceValue:
setStencilResolveTexture:slice:depthPlane:level:
setStencilResolveTexture:slice:depthPlane:level:yInvert:
setTileBufferOffset:atIndex:
setTileSamplerState:atIndex:
setTileSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setTileSamplerStates:withRange:
setTileTexture:atIndex:
setTriangleFrontFillMode:backFillMode:
setVertexBufferOffset:atIndex:
setVertexSamplerState:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerStates:withRange:
setVertexTexture:atIndex:
setViewport:
setViewportTransformEnabled:
textureBarrier
updateFence:afterStages:
useHeap:stages:
useHeaps:count:stages:
useResource:usage:stages:
useResources:count:usage:stages:
waitForFence:beforeStages:
removeRenderPipelineStateForKey:
removeResourceGroupForKey:
resourceStateCommandEncoderForKey:
removeResourceStateCommandEncoderForKey:
updateTextureMapping:mode:indirectBuffer:indirectBufferOffset:
updateTextureMapping:mode:region:mipLevel:slice:
removeSamplerStateForKey:
sharedEventForKey:
setSignaledValue:
removeSharedEventForKey:
removeTextureForKey:
newSharedTextureHandle
videoCommandEncoderForKey:
removeVideoCommandEncoderForKey:
generateMotionVectorsForTexture:previousTexture:resultBuffer:bufferOffset:
motionEstimationPipelineForKey:
setMotionEstimationPipeline:
MPSNeuralNetworkPluginForKey:
newCNNConvolutionWithDescriptor:convolutionData:
setMPSExternalPluginBase:forKey:
newCNNConvolutionGradientWithDescriptor:convolutionData:
newCNNNeuronWithNeuronType:neuronParameterA:neuronParameterB:neuronParameterC:
newCNNNeuronWithNeuronType:neuronParameterAArray:count:
MPSMatrixPluginForKey:
newMatrixMultiplicationWithTransposeLeft:transposeRight:resultRows:resultColumns:interiorColumns:alpha:beta:
newMatrixVectorMultiplicationWithTranspose:rows:columns:alpha:beta:
newMatrixFullyConnected
newCNNPoolingMaxWithKernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:
newCNNPoolingAverageWithKernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:
newCNNDilatedPoolingMaxWithKernelWidth:kernelHeight:strideInPixelsX:strideInPixelsY:dilationRateX:dilationRateY:
newCNNSoftMax
removeMPSExternalPluginBaseForKey:
MPSExternalCNNUnaryForKey:
encodeToCommandBuffer:computeCommandEncoder:options:sourceTexture:sourceInfo:destinationTexture:destinationInfo:
encodeToCommandBuffer:computeCommandEncoder:options:pluginOptions:sourceTexture:sourceInfo:destinationTexture:destinationInfo:
resources
encodeBatchToCommandBuffer:computeCommandEncoder:options:pluginOptions:sourceTextures:sourceInfo:destinationTextures:destinationInfo:predicationBuffer:predicationOffset:
MPSExternalCNNBinaryForKey:
encodeToCommandBuffer:computeCommandEncoder:options:pluginOptions:primaryTexture:primaryInfo:secondaryTexture:secondaryInfo:destinationTexture:destinationInfo:
encodeBatchToCommandBuffer:computeCommandEncoder:options:pluginOptions:primaryTextures:primaryInfo:secondaryTextures:secondaryInfo:destinationTextures:destinationInfo:predicationBuffer:predicationOffset:
MPSExternalCNNConvolutionForKey:
reloadWeightsAndBiases:
reloadWeightsAndBiasesWithCommandBuffer:encoder:weights:biases:predicationBuffer:predicationOffset:
exportWeightsAndBiasesWithCommandBuffer:encoder:weights:biases:predicationBuffer:predicationOffset:
reloadWeightsAndBiasesWithCommandBuffer:encoder:weights:weightsDataType:biases:predicationBuffer:predicationOffset:
exportWeightsAndBiasesWithCommandBuffer:encoder:weights:weightsDataType:biases:predicationBuffer:predicationOffset:
MPSExternalCNNConvolutionGradientForKey:
reloadWeights:
reloadWeightsWithCommandBuffer:encoder:weights:predicationBuffer:predicationOffset:
reloadWeightsWithCommandBuffer:encoder:weights:weightsDataType:predicationBuffer:predicationOffset:
encodeBatchToCommandBuffer:computeCommandEncoder:options:pluginOptions:primaryTextures:primaryInfo:secondaryTextures:secondaryInfo:weightsGradient:biasesGradient:accumulate:predicationBuffer:predicationOffset:
MPSExternalMatrixMultiplicationForKey:
encodeToCommandBuffer:encoder:options:batchSize:A:aInfo:B:bInfo:C:cInfo:
encodeToCommandBuffer:encoder:options:batchSize:resultRows:resultColumns:interiorColumns:alpha:beta:A:aInfo:B:bInfo:C:cInfo:
encodeToCommandBuffer:encoder:options:batchSize:resultRows:resultColumns:interiorColumns:alpha:beta:A:aInfo:B:bInfo:C:cInfo:predicationBuffer:predicationOffset:
MPSExternalMatrixVectorMultiplicationForKey:
encodeToCommandBuffer:encoder:options:batchSize:matrix:matrixStructure:vector:vectorStructure:result:resultStructure:
encodeToCommandBuffer:encoder:options:batchSize:matrix:matrixStructure:vector:vectorStructure:result:resultStructure:predicationBuffer:predicationOffset:
MPSExternalMatrixFullyConnectedForKey:
encodeToCommandBuffer:encoder:options:batchSize:inputMatrix:inputMatrixInfo:weightMatrix:weightMatrixInfo:biasVector:biasVectorInfo:resultMatrix:resultMatrixInfo:alpha:numberOfFeatureVectors:inputFeatureChannels:outputFeatureChannels:neuronType:neuronParameterA:neuronParameterB:neuronParameterC:
encodeToCommandBuffer:encoder:options:batchSize:inputMatrix:inputMatrixInfo:weightMatrix:weightMatrixInfo:biasVector:biasVectorInfo:resultMatrix:resultMatrixInfo:alpha:numberOfFeatureVectors:inputFeatureChannels:outputFeatureChannels:neuronType:neuronParameterA:neuronParameterB:neuronParameterC:predicationBuffer:predicationOffset:
MPSExternalCNNPoolingAverageForKey:
encodeToCommandBuffer:computeCommandEncoder:options:sourceTexture:sourceInfo:destinationTexture:destinationInfo:zeroPadSizeX:zeroPadSizeY:
encodeBatchToCommandBuffer:computeCommandEncoder:options:sourceTextures:sourceInfo:destinationTextures:destinationInfo:zeroPadSizeX:zeroPadSizeY:predicationBuffer:predicationOffset:
setInterfaceOrientation:
setAnchorPoint:
presentDrawableWithKey:
drawableForKey:
nextDrawable
setDrawable:forKey:
numberWithLongLong:
setDevice:forKey:
layerClass
setLayer:forKey:
setDrawableSize:
setFramebufferOnly:
setWantsExtendedDynamicRangeContent:
commitAndHold
commitAndWaitUntilSubmitted
videoCommandEncoder
setVideoCommandEncoder:forKey:
setCommandBuffer:forKey:
newBufferWithIOSurface:
setCommandQueue:forKey:
functionMap
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newFunctionWithGLIR:inputsDescription:functionType:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
sharedEventHandleForKey:
newSharedEventWithHandle:
newTextureWithDescriptor:iosurface:plane:
newHeapWithDescriptor:
setHeap:forKey:
newSharedEventHandle
setSharedEventHandle:forKey:
newLibraryWithDAG:functions:error:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
initWithSampleCount:
rasterizationRateMapDescriptorWithScreenSize:layerCount:layers:
cnnNeuronPReLUDescriptorWithData:noCopy:
cnnNeuronDescriptorWithType:a:b:c:
initWithKernelWidth:kernelHeight:inputFeatureChannels:outputFeatureChannels:strideInPixelsX:strideInPixelsY:groups:dilationRateX:dilationRateY:channelMultiplier:subPixelScaleFactor:isFullyConnected:isConvolutionTranspose:fusedNeuronDescriptor:
iosurfaceForProperties:
newLibraryWithFile:error:
access
isActive
index
textureDataType
bufferAlignment
bufferDataSize
bufferDataType
isVertexDescriptorBuffer
dataTypeDescription
threadgroupMemoryAlignment
threadgroupMemoryDataSize
imageBlockDataSize
aliasImplicitImageBlockRenderTarget
aliasImplicitImageBlock
imageBlockMasterStructMembers
imageBlockKind
vertexArguments
fragmentArguments
vertexBuiltInArguments
imageBlockDataReturn
tileArguments
builtInArguments
arguments
elementType
argumentIndexStride
elementTypeDescription
aluType
dataSize
members
argumentIndex
indirectArgumentIndex
addBarrierBlock:
interfaceOrientation
contentRect
windowRect
windowProperties
initWithString:relativeToURL:
indexOfObject:inSortedRange:options:usingComparator:
executablePath
bundleIdentifier
bundlePath
newCommandQueue
currentDrawable
presentDrawable:
drawInMTKView:
_commandQueue
_encoder
_textureRenderer
applicationShouldTerminate:
application:openURLs:
application:openFile:
application:openFiles:
application:openTempFile:
applicationShouldOpenUntitledFile:
applicationOpenUntitledFile:
application:openFileWithoutUI:
application:printFile:
application:printFiles:withSettings:showPrintPanels:
applicationShouldTerminateAfterLastWindowClosed:
applicationShouldHandleReopen:hasVisibleWindows:
applicationDockMenu:
application:willPresentError:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:willEncodeRestorableState:
application:didDecodeRestorableState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:delegateHandlesKey:
applicationWillFinishLaunching:
applicationDidFinishLaunching:
applicationWillHide:
applicationDidHide:
applicationWillUnhide:
applicationDidUnhide:
applicationWillBecomeActive:
applicationDidBecomeActive:
applicationWillResignActive:
applicationDidResignActive:
applicationWillUpdate:
applicationDidUpdate:
applicationWillTerminate:
applicationDidChangeScreenParameters:
applicationDidChangeOcclusionState:
initWithObjects:
lowercaseString
arrayWithObjects:
setConsistentGPUPerfStateTo:
characterAtIndex:
initWithTexture:
T@"<MTLTexture>",&,N,V_texture
wantsExtendedDynamicRangeContent
colorspace
_framebufferOnly
_wantsExtendedDynamicRangeContent
_pixelFormat
_colorspace
_anchorPoint
_drawableSize
T@"<MTLDevice>",&,N,V_device
T{CATransform3D=dddddddddddddddd},N,V_transform
TQ,N,V_pixelFormat
T{CGSize=dd},N,V_drawableSize
T{CGPoint=dd},N,V_anchorPoint
Tc,N,V_framebufferOnly
Tc,N,V_wantsExtendedDynamicRangeContent
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_bounds
Td,N,V_contentsScale
T^{CGColorSpace=},N,V_colorspace
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
addEntriesFromObjectMap:
objectsForKeys:notFoundMarker:
removeObjectsForKeys:
addDebugMarker:range:
removeAllDebugMarkers
newRemoteBufferViewForDevice:
remoteStorageBuffer
T@"<MTLBuffer>",R
setVisibleFunctionTable:atBufferIndex:
setVisibleFunctionTables:withBufferRange:
setIntersectionFunctionTable:atBufferIndex:
setIntersectionFunctionTables:withBufferRange:
setAccelerationStructure:atBufferIndex:
dispatchType
initWithProperties:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newRemoteTextureViewForDevice:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
bufferOffset
bufferBytesPerRow
iosurfacePlane
isShareable
remoteStorageTexture
tailSizeInBytes
isSparse
T@"<MTLResource>",R
T@"<MTLTexture>",R
T^{__IOSurface=},R
shareable
Tc,R,GisShareable
Tc,R,GisFramebufferOnly
T{?=CCCC},R,N
removeAliasableResourceForKey:
initWithObjectMap:
setDynamicLibrary:forKey:
binaryLibraryForKey:
removeCounterSampleBuffer:
removeBinaryLibraryForKey:
MPSExternalCNNNeuronForKey:
MPSExternalCNNPoolingMaxForKey:
MPSExternalCNNDilatedPoolingMaxForKey:
MPSExternalCNNSoftMaxForKey:
endEncodingForRenderCommandEncoder:
_argumentEncoders
_commandBuffers
_commandEncoders
_commandQueues
_computePipelineStates
_counterSampleBuffers
_depthStencilStates
_devices
_drawables
_events
_fences
_functions
_heaps
_indirectComputeCommands
_indirectRenderCommands
_iosurfaces
_layers
_libraries
_motionEstimationPipelines
_parallelRenderCommandEncoders
_pipelineLibraries
_rasterizationRateMaps
_renderPipelineStates
_resourceGroups
_resources
_samplerStates
_sharedEventHandles
_mpsExternalPluginBases
_layerClass
_contentRect
_windowRect
_windowProperties
_orientation
_defaultDevice
_defaultCommandQueue
T@"<MTLDevice>",R,N,V_defaultDevice
T@"<MTLCommandQueue>",&,N,V_defaultCommandQueue
LoadArchive %{public}s
SortArchiveStrings
ReadTrace %{public}s (%{xcode:size-in-bytes}zu)
Replayer-2-restore
BuildMemoryMap
BuildDeviceMirror
OrderDispatchCommandBuffers
Delta
Replayer-1-serial
CreateDeviceResources
CreatePipelineStates %d
CreateOtherStates %d
PlayCaptureAndRewind
SortCommandBufferKeys
FitResourcesInOptimizedBuffer
FillDirtyRangesInOptimizedBuffer
RestoreIndirectCommandBuffersFromArchive x%d
%llu. %{xcode:size-in-bytes}zu %{public}s
Replayer-6-high
%{xcode:size-in-bytes}zu
RestoreRequiresFlush
RestoreResourceFromArchive x%d
DownloadBufferContent
CompareAndRestoreResourcesFromArchive x%d
RestoreResourcesFromBuffer x%d
queue cannot be NULL
block cannot be NULL
transport cannot be nil
tried to set URL on connected transport
url scheme has to be dysmt: %s
url path cannot be nil or empty: %s
tried to set socket path on connected unix domain socket transport
unix domain socket url must be a file url: %s
[create_transport] GT_HOST_URL environment not set
[create_transport] failed to parse GT_HOST_URL: %s
[create_transport] failed to create transport; GT_HOST_URL: %s
%{public}@
%u. %@
Replayer-3-commandQueue
%{public}@:
%{public}@
%u. %{public}@(%u):
%{public}@
%{public}@:
%u. %@ x%d
%{public}@:
%u:%u -> %u:%u
%{public}@(%llu):
0x%08llx %{public}@
%{public}@:
%{public}@:
%u:%u
logPath:
%{public}@
gputracePath:
%{public}@:%u
commandBuffer:
%{public}@
gputracePath:
%{public}@
commandBuffer(%llu):
%{public}@
file:
%{public}s:%u
failure(%llu):
%{public}@
bPostProcessingMarkerReceived: %u
profileCounters
Frame Index: %u
usc sampling address data
Frame Index, ShaderProfilerData: %u
Frame Time Data
Blit Encoder Frame Data
Derived Counter Sample Data
Havested Binaries
Kick Times
End Batch ID Streaming Data
ShaderProfiler-ProcessStreamedDataPayload
ShaderProfiler-ProcessStreamedDataPostProcessing
MTLReplayer main() inited!
ShaderProfiler-EvaulateStreamingSamples
ShaderProfiler-AdjustHWBiasAndFinalizeResult
failed to create memory entry error 0x%x (%s)
failed to map memory error 0x%x (%s)
failed to mark memory(GRAPHICS) error 0x%x (%s)
ProcessFrameData
Replayer-4-parallel
MergeCounterData
SortCounterData %zu/%zu
CollectCounterData %zu/%zu
performFrameTiming %d
FormatSampleData
%u. kDYMessageTraceConfiguration
%u. kDYMessageTraceOverridesConfiguration
Replayer-5-network
%u. kDYMessageGuestAppInvalidateSavePointerAliases
%u. kDYMessageReplayerDebugEnableDrawCallPresent %d
%u. kDYMessageReplayerDebugEnableWireframePresent %d
%u. kDYMessageReplayerDebugEnableOutlinePresent %d
%u. kDYMessageReplayerDebugWireframeLineWidth %f
%u. kDYMessageReplayerEndDebugArchive
%u. kDYMessageReplayerDeleteAllArchives
%u. kDYMessageReplayerDeleteAllArchives %{public}s
%u. kDYMessageReplayerBeginDebugArchive %{public}s
%u. kDYMessageReplayerDebugFuncStop %u
%u. kDYMessageFetchResourceObject %{xcode:address}llu
%u. kDYMessageReplayerGenerateThumbnails
%u. kDYMessageReplayerGenerateDependencyGraphThumbnails
%u. kDYMessageReplayerQueryShaderInfo
%u. kDYMessageReplayerDerivedCounterData
%u. loadAnalysis
%u. kDYGenerateShaderDebuggerTrace
%u. kDYMessageReplayerLoadArchives %{public}s
%u. kDYMessageReplayerReplayArchive
%u. kDYMessageUpdateResourceObject
%u. send %{public}s %{xcode:size-in-bytes}zu
%u. sendFbufStreamData %{xcode:size-in-bytes}zu
debugFuncStop %u
%u. kDYMessageFetchResourceObjectBatch x%zu
%u. %{public}s %{xcode:size-in-bytes}zu
%u. archivedDataWithRootObject
%u. send compressedData %{xcode:size-in-bytes}zu
MTLReplayer application finished launching!
address
IOSurfaceAddress
startup
device-resources
capture
gttrace-dump
v24@?0^v8Q16
com.apple.dt.gputrace-replayer
v16@?0@"<MTLCommandBuffer>"8
context
object
DYPMTLResourceUpdaterErrorDomain
Unable to find library
error
 "%@"
Cannot update library
Ensure the modified library%@ isn't created during the capture
source
options
preprocessorMacros
fastMathEnabled
debuggingEnabled
preserveInvariance
Failed to update library
propagate
Unable to create render pipeline state
%@: %s
Unable to create compute pipeline state with function: %@
updatedPipelines
Unable to create function: %@
CulUul
CNUw
Cul@%lluuwul
MTLStat_nSec
MTLStatTotalGPUCycles
GRC_TIMESTAMP
GRC_GPU_CYCLES
GRC_SAMPLE_TYPE
GRC_ENCODER_ID
GRC_KICK_TRACE_ID
GRC_KICK_SLOT_IDX
GRC_SOURCE_ID
Firmware
GRC_SHADER_PROFILER_DATA_
LockGPUPerfState
Fail, error while requesting triggers for %@
Fail, error while requesting %lu %@ counter for source[%u] 
Fail, error while enabling source[%u]
DisableOverlap
passList
Failed to set %@ Trigger for %@
Fail, error while requesting counter[%u/%lu] (%@) for source[%@] in pass[%u]
Fail, error while enabling source[%@] in pass[%u]
draw call info
vertex fetch shader info
vertex shader info
fragment shader info
compute kernel info
profileCounters
profileCounters32
Width
TimerFixed
Period
KickBoundary
BufferSizeInKB
ShaderProfiler
limiter sample counters
encoderBatchPriorityList
pause
perEncoderDrawCallCount
v8@?0
passNum
perEncoderIndexDrawCallCount
Derived Counter Sample Data
Subdivided Dictionary
Encoder Infos
Encoder Tile Info
BatchInfos
Counter Info
Num Encoders
Source Sample Marker
Batch Filtered Counters
Derived Counters Info Data
HighPriorityBatchInfo
#include <metal_stdlib>
using namespace metal;
struct TransformMatrices
    float4 modelview_projection_matrix[4];
struct VertexOutput
    float4 pos [[position]];
    float4 color;
vertex VertexOutput defaultVertexProgram(uint vid [[ vertex_id ]])
    VertexOutput out;
    out.pos   = float4(0.0, 0.0, 0.0, 1.0);
    out.color = float4(0.0, 0.0, 0.0, 1.0);
    return out;
vertex void rasterizationDisabledVertexProgram(uint vid [[ vertex_id ]])
fragment float4 defaultFragmentProgram(VertexOutput vo [[ stage_in ]])
    return float4(vo.color.bgr, 1.0f);
kernel void defaultKernel()
defaultVertexProgram
defaultFragmentProgram
rasterizationDisabledVertexProgram
defaultKernel
highPriorityBatches
resume
totalDrawCallCount
ShaderProfilerData
Source
SourceIndex
RingBufferIndex
Post Processing Frame Marker
Frame Index
Program Address Buffer
TraceId to BatchId
Frame Encoder Time Data
TraceId to SampleIndex
usc sampling address data
Fail, error while requesting %lu counter for source[%@]
Fail, error while enabling source[%@]
Fail, unable to retrieve ring buffer info from source %@!
Fail, unexpected drain count for source %@!
UseMTLCounters
perCommandBufferEncoderCount
Frame Time Data
Encoder TraceId Data
Num Ring Buffers
Num Frame Iterations
Sample Marker
Frame Encoder Times Data
Error, fail to set counter sample location for %lu
%s%s %u: %s
#CI-ERROR# 
void GTUSCSamplingStreamingManagerHelper::AddEncoderSamplePoints(std::unordered_map<uint32_t, GTEncoderSampleIndexInfo> &, const GTTraceFunc *, uint32_t, __strong id<MTLCommandEncoder>, size_t, uint64_t)
Blit Encoder Frame Data
Blit Encoder Info
Blit Split Encoder Frame Data
Blit Split Encoder Info
Blit Encoder Indices
blitEncoderIndices
Encoder Draw Call Count
activePerEncoderDrawCallCount
Blit TraceId to Sample Index
Blit Encoder Time Data
Blit Split TraceId to Sample Index
Blit Split Encoder Time Data
DerivedCounterDictionary
DerivedCounters
FRGTicks
Fragment Counter
MetalPluginName
Havested Binaries
derivedCounterInfo
vertex shader key
fragment shader key
compute kernel key
%0.8x_%p
binary
mmapbuffer
/tmp/com.apple.gputools.profiling
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Failed to write to source %@
v32@?0@"<MTLCounterSampleBuffer>"8Q16^c24
maxBufferSize
maxDeviceBufferNum
GTMTLReplayer_StreamingManager_Buffer_%u
v32@?0@8@16^c24
v32@?0@8Q16^c24
GPUToolsCounterProfilingEmptyRender
XPState
ApproximateShaderProfilerALUOpsLimiter
TPULimiter
PBELimiter
BufferLoadLimiter
BufferStoreLimiter
LocalLoadLimiter
LocalStoreLimiter
ApproximateShaderProfilerALULimiter
SampleLimiter
ALULimiter
FragmentInputInterpolationLimiter
FRG1_COUNT_CYCLES
DerivedCounterConfigurationVariables
DerivedCounterScript
DerivedCounterAnalysis
DerivedCounterAnalysisFunctions
Instruments
Profiles
Set1
RawCounterWidth
Name
%@/Temp_%@_%d.mmapbuffer
GTMMappedBuffer::GTMMappedBuffer(size_t, size_t)
thread constructor failed
16777235-0
::air.vertexFetchFunction()
shaderBinaries
/tmp/com.apple.gputools.profiling/shaderProfilerResults
/tmp/com.apple.gputools.profiling/shaderProfilerResults/json
gputools.AGXMTLReplayer.serialQueue
frametime
payload
%6u : encoderId:%u limiterIdx:%u nTracePackets:%u)
%6u : 0x%0.8llx 0x%0.8llx
aggregated derived counters
sampled timestamps
ring buffer sampled counter data
core counts
ring buffer blend factors
ring buffer
limiter data
limiter time stamps
limiter counter list
shader timeline data
shader timeline data ex
usc sampling sample data
frame index
/tmp/com.apple.gputools.profiling/shaderProfilerResults/Frames/%u/uscSamplingAddressRaw.txt
/tmp/com.apple.gputools.profiling/shaderProfilerResults/Frames/%u/%u/uscSamplingSampleRaw.txt
encoderIndexToLabel
Blit Encoder Kick Times Nsec
derivedCounterDataForBottleneckAnalysis
counters
AverageSamples
PerCounterEncoderCallData
effectivePerDrawKickTimes
shaderInfo
json
/tmp/com.apple.gputools.profiling/shaderProfilerResults/derivedCounters.json
Got %ld partial results
#CI-INFO# 
#CI-INFO# %s
Got %ld draw calls in %ld encoders
Batch counter list has changed between batches from %@ to %@
-[GTShaderProfilerHelper _processBatchIdCounterData:]
Batch has invalid encoder count, encoderCount %ld, averageSamplesByEncoder.count %ld, batchInfos.count %ld
drawId %ld > numDraws %ld, drawIndexWithinEncoder %ld (max %d)
PerCounterDrawCallData
intermediate
activePerEncoderDrawCount
drawToBatchId
batchInfoList
rawBatchResults
/tmp/com.apple.gputools.profiling/shaderProfilerResults/derivedCountersByDraw.json
Empty Path
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
/tmp/com.apple.gputools.profiling/shaderProfilerResults/shader_cost_%s_%s.txt
SourceFiles
LineData
line
cost
percent
%u: %s      %.1f %.2f%%
%u: %s
ShaderRangeInfo
lineIndex
function
filename
fullpath
directory
      -----> %u:  %s : %s
callstackInfos
diassembly
offset
disasm
    %d %s %.1f %.2f%%
    %d %s
----------- Full Binary Disassembly -----------
disasmSource
irSource
costPercentage
opcodeType
opcodeSubType
opcode
binaryDisassemblyInfo
/tmp/com.apple.gputools.profiling/shaderProfilerResults/json/shader_cost_%s_%s.json
allDrawCall
perDrawCall
/program_source
GlobalLoad
GlobalStore
Sample
LocalLoad
LocalStore
In _calculatePerLineCostWithSampleData
includePerDrawTimings now processing
includePerDrawTimings: strongSelf is %p, result is %p
totalDrawCount
perEncoderKickCount
Encoder %ld should be empty, expecting dummy draw call but found %ld
-[GTShaderProfilerHelper _handlePerDrawCounterData]
vertex
fragment
compute
GPUTime_vtx
GPUTime_frg
GPUTime_cmp
encoder
drawIndexInEncoder
End Streaming Data
End Batch ID Streaming Data
/tmp/com.apple.gputools.profiling/shaderProfilerResults/
@"NSDictionary"16@?0@"NSDictionary"8
BatchingFilteringAvailable
Finalize Shader Profiler Result
Kick Time Data
Encoder Load Action Times
Encoder Store Action Times
Shader Profiling Frame Time
GPU Time
Blit Command Nsec Times
derivedCounterData
derivedCounterData: strongSelf is %p, strongResult is %p
includePerDrawTimings deferring
Received data for batch %ld
/uscSamplingProcessedSample.txt
%5u | %5u | batch index is out of range
%5u | %5u(%5u) | %5u (%u) | %2u 0x%0.8x
%5u | %5u | PC (0x%0.8x) is not within any program
Index : ProgramType BatchIdx FunctionIdx [Start - End]
%6u : %2u %6u %6u [0x%0.8llx - 0x%0.8llx]
%6u : %u --------
%6u : %6u 0x%0.8x 0x%0.8x
periodic
kick start
kick end
usc pc samples
invalid
%6llu : %6u 0x%0.16llx (type:"%s" trace_id:0x%0.8x dm:%u render_id:0x%0.8x timestamp:0x%0.16llx gpu_cycles:0x%0.8x counter_num:%u)
%6llu : %6u 0x%0.8x 0x%0.8x
%6llu : %6u : 0x%0.8llx
%6u : trace_id:0x%0.8x limiterIdx:%u nTracePackets:%u)
/uscSamplingAddressRaw.txt
/uscSamplingAddressProcessed.txt
/uscSamplingSampleRaw.txt
q24@?0@"DYShaderProfilerProgramInfo"8@"DYShaderProfilerProgramInfo"16
/PipelineState.txt
[%u] PipelineState 0x%llX
Vertex[%.4f%%]
Fragment[%.4f%%]
[%u] PipelineState 0x%llX
Compute[%.4f%%]
index
functionIndex
Compute
Vert
Fragment
q24@?0@"NSNumber"8@"NSNumber"16
%.2f%%
%.4f%%
%.4f%%
/DrawCallCosts_Unsorted.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
NumSamples
Index
FunctionIndex
VS_Percent
FS_Percent
CS_Percent
%10.4f%%
%10.4f%%
%10.4f%%
/DrawCallCosts_Sorted.txt
index
functionIndex
Vert
    Fragment
Compute
VS_Hash
FS_Hash
CS_HASH
%10.4f%%
%10.4f%%
%10.4f%%
%s Shader Profling Test
Passed
Failed
index
functionIndex
vertTiming
vertCyclePercentragTiming
fragmentCyclePercent
Encoder Index
 Percentage Frame
Failed ratio %g / %g = %g
totalCost
perLineCost
[%3u] Compile Unit
      Directory: %s
      Filename : %s
      Line Info:
      %4u [%4u:%4u] %0.8llx - %0.8llx
                           
.bin
_text.txt
.txt
/shaderBinaries
/drawCallToBinariesMap.txt
Index | DisplayIdx |          VS_Hash |          FS_Hash |         CS_Hash
%5u | %10u | %16s | %16s |  %16s
%@/VS_%@
v32@?0@"NSString"8@"ShaderBinaryInfo"16^c24
%@/FS_%@
%@/CS_%@
LimiterCounterData
VertexTPULimiter
VertexALULimiter
VertexGlobalLoadLimiter
VertexGlobalStoreLimiter
VertexPBELimiter
VertexSampleLimiter
VertexLocalLoadLimiter
VertexLocalStoreLimiter
FragmentTPULimiter
FragmentALULimiter
FragmentGlobalLoadLimiter
FragmentGlobalStoreLimiter
FragmentPBELimiter
FragmentSampleLimiter
FragmentLocalLoadLimiter
FragmentLocalStoreLimiter
GlobalLoadLimiter
GlobalStoreLimiter
VertexBufferLoadLimiter
VertexBufferStoreLimiter
FragmentBufferLoadLimiter
FragmentBufferStoreLimiter
v32@?0@8@"NSNumber"16^c24
var %@_norm = 0;
var _DerivedCounterResult = [];
function _SetAndEvaluateRawCounterValues(numSamples, gpuCyclesCounterIndex) {
_DerivedCounterResult = [];
for (var sampleIndex = 0; sampleIndex < numSamples; ++sampleIndex) {
var sampleStartIndex = sampleIndex * %lu;
var gpuCycles = _RawCounterValues[gpuCyclesCounterIndex + sampleStartIndex] / num_cores;
%@_norm = 100.0 * (_RawCounterValues[%lu + sampleStartIndex] / gpuCycles);
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
v16@?0@"NSString"8
ErrorLog
_RawCounterValues
_SetAndEvaluateRawCounterValues
_DerivedCounterResult
%@ = %u, 
%@ = %f, 
limiter sample data
LimiterCounters
%u[%u]: Duration %f < Effective Time %f
/EffectGPUTimePerBatch.txt
Batch DM  Time
%lu %u
s / %f 
s = %f %% 
XXXXXX
GPUTimelineInfos
AggregatedGPUTimelineInfo
WorkloadArchive.data
Version
Num Periodic Samples
Timestamp Data
Derived Counter List
Derived Counters
Active Shaders Per Sample
Encoder Timeline
GPU Timeline Info
Ring Sampled Derived Counters
Core Counts
%@ (%llu)
DYErrorDomain
v32@?0q8@16^c24
-[GTIntKeyedDictionary initWithCoder:]
[coder allowsKeyedCoding]
keys
%llu
-[GTIntKeyedDictionary initWithCoder:]_block_invoke
v32@?0@"NSNumber"8Q16^c24
-[GTIntKeyedDictionary encodeWithCoder:]
isFinished
isExecuting
GPUDebugger.DYFuture.LogPerformance
GPUDebugger.DYFuture.csv
%f, %@, %@, %f, %d, %d
private.seqNum
Timestamp, Thread, Symbol, Interval, Resolved, Main Thread
GPUDebugger.DYFuture.HardAssertMainThread
GPUDebugger.DYFuture.SoftAssertMainThread
v24@?0@8@"NSError"16
root
%@ kind=0x%x serial=%u, reply serial=%u
$archiver
NSKeyedArchiver
$top
$version
$objects
gputools.%@.%p.%@
manager
message
<%@ %p>
gputools.%@.%p
default
send
%@: url=%@, connected=%d, invalid=%d, error=%@, messageCounter=%u, messageSendQueueDepth=%u, sources=%@
-[GTVMBuffer initWithVMBuffer:]
vmBuffer
-[GTBaseStreamTransport init]
_tmu
_relayTmu
relay
-[GTBaseStreamTransport _allocateMessageBuffer]
_tmu->hasHeader
size_aligned <= MAXIMUM_MESSAGE_SIZE
_messageBuffer != nil
q8@?0
-[GTSharedMemoryTransport initWithMode:initialMessageSerial:]
_mode == kDYSharedMemoryTransportModeClient || _mode == kDYSharedMemoryTransportModeServer
dysmt://localhost/%lx%d
_consumeBytesIMP
-[GTSharedMemoryTransport setUrl:]
newUrl != nil
dysmt
dysmtdeferred
-[GTSharedMemoryTransport setRelayTransport:]_block_invoke
gdt-%@-%@
-[GTBaseSocketTransport runWithSocket:]
_readSource == nullptr
_writeSource == nullptr
_invalid == NO
_readSource
_writeSource
-[GTBaseSocketTransport _invalidate]
/tmp
dysonXXXXXX
GTTransport *DYCreateTransportC(const char *)
url_str
null
file
invalid filename (%ld)
data is too large (%ld)
IO failure (%ld)
out of memory (%ld)
timed out (%ld)
explicit invalidation (%ld)
truncated data (%ld)
invalid transport message payload (%ld)
unexpected transport message (%ld)
read-only capture archive (%ld)
truncated capture archive store (%ld)
truncated capture archive index (%ld)
invalid capture archive index (%ld)
unknown capture archive index version (%ld)
file exists in capture archive (%ld)
file does not exists in capture archive (%ld)
capture archive does not exist (%ld)
missing capture archive index (%ld)
invalid capture archive metadata (%ld)
corrupted capture archive store (%ld)
could not write capture archive metadata (%ld)
capture archive has been closed (%ld)
position does not exist in archive (%ld)
already tried to launch guest app (%ld)
invalid launch dictionary (%ld)
guest app not found (%ld)
guest app launch timed out (%ld)
invalid guest app session (%ld)
guest app has not been launched yet (%ld)
did not find interpose dylib (%ld)
failed to launch guest app (%ld)
guest app terminated (%ld)
guest app crashed (%ld)
another capture session is active (%ld)
capture session is already active (%ld)
capture session activation failed (%ld)
inferior already running (%ld)
GL dispatch table mismatch (%ld)
inferior and host session ids mismatch (%ld)
lost transport connection (%ld)
invalid transport (%ld)
transport is not connected (%ld)
message has already been sent (%ld)
in-reply-to message has not been sent (%ld)
failed to encode message attributes (%ld)
connect timed out (%ld)
undefined socket path (%ld)
socket path is too long (%ld)
message originated from this transport (%ld)
invalid socket descriptor (%ld)
invalid socket url (%ld)
transport source cancelled (%ld)
corrupt transport message header (%ld)
corrupt transport message attributes (%ld)
message too large (%ld)
initialized function stream with immutable data but swapping is required (%ld)
invalid function stream header (%ld)
transfer refused (%ld)
protocol error (%ld)
path outside destination root (%ld)
transfer aborted (%ld)
unknown item type (%ld)
no data (%ld)
guest app session error (%ld)
already replaying (%ld)
no loaded archives (%ld)
no resource streamer (%ld)
no archive data (%ld)
no thumbnail support (%ld)
failed to create core symbolicator (%ld)
Shader profiler does not support multi-context captures (%ld)
Shader profiler failed due to an internal error (%ld)
Cannot find the target path provided (%ld)
Metal.framework is not available on the remote machine (%ld)
Cannot authenticate SSH, make sure the authentication is done right (%ld)
Cannot find the specified username and host (%ld)
Specified remote machine is not available. Please make sure to login with specified user (%ld)
Cannot find Xcode.app on the remote machine. Please make sure that Xcode.app is in the Applications folder (%ld)
Missing environment variables, please make sure all the required environment variables are enabled (%ld)
gputools.smt_poll.%p
MTLREPLAYER_ABORT_ON_ERROR_CODE
MTLREPLAYER_ABORT_ON_FAILURE_TYPE
MTLREPLAYER_FORCE_PATCHING_TYPE_REPLACE_MASK
MTLREPLAYER_SHARED_RESOURCE_POOL_MAX_SIZE
MTLREPLAYER_RESTORE_THREAD_COUNT
MTLREPLAYER_SLEEP_AFTER_RESTORE
MTLREPLAYER_VALIDATE_LOAD_ACTIONS
MTLREPLAYER_FORCE_WAIT_UNTIL_COMPLETED
MTLREPLAYER_FORCE_BUFFER_STORAGE_MODE_PRIVATE
MTLREPLAYER_PLAY_TO_USING_INDIRECT_SNAPSHOT
MTLREPLAYER_ENHANCED_COMMAND_BUFFER_ERRORS
MTLREPLAYER_DISABLE_OPTIMIZE_RESTORES
METAL_FRAME_DEBUGGER_DISABLE_DISPLAY_ON_DEVICE
MTLREPLAYER_DISABLE_PATCHING_ARRAYS
THREADGROUP_MEMORY_LENGTH
#include <metal_stdlib>
using namespace metal;
struct ThreadgroupData { uint8_t data[THREADGROUP_MEMORY_LENGTH]; };
kernel void ThreadgroupStore(ushort2 threadgroup_position_in_grid [[ threadgroup_position_in_grid ]],
                                ushort2 threadgroups_per_grid [[ threadgroups_per_grid ]],
                                device ThreadgroupData* buffer [[ buffer(0) ]],
                                const threadgroup ThreadgroupData& threadgroupData [[ threadgroup(0) ]])
   ushort i = (threadgroup_position_in_grid.y * threadgroups_per_grid.x) + threadgroup_position_in_grid.x;
   for (ushort j = 0; j < THREADGROUP_MEMORY_LENGTH; j++)
       buffer[i].data[j] = threadgroupData.data[j];
kernel void ThreadgroupLoad(ushort2 threadgroup_position_in_grid [[ threadgroup_position_in_grid ]],
                                ushort2 threadgroups_per_grid [[ threadgroups_per_grid ]],
                                const device ThreadgroupData* buffer [[ buffer(0) ]],
                                threadgroup ThreadgroupData& threadgroupData [[ threadgroup(0) ]])
   ushort i = (threadgroup_position_in_grid.y * threadgroups_per_grid.x) + threadgroup_position_in_grid.x;
   for (ushort j = 0; j < THREADGROUP_MEMORY_LENGTH; j++)
       threadgroupData.data[j] = buffer[i].data[j];
kernel void Fence()
ThreadgroupStore
ThreadgroupLoad
Fence
uint%d_t _%d
(dest)->_%d = (src)->_%d
IMAGEBLOCK_SAMPLE_MEMBERS
"%@"
IMAGEBLOCK_SAMPLE_COPY(dest,src)
SAMPLE_COUNT
#include <metal_stdlib>
using namespace metal;
struct ImageblockData { IMAGEBLOCK_SAMPLE_MEMBERS; };
kernel void ImageblockStore(ushort2 threadgroup_position_in_grid [[ threadgroup_position_in_grid ]],
                            ushort2 threadgroups_per_grid [[ threadgroups_per_grid ]],
                            ushort2 threads_per_threadgroup [[ threads_per_threadgroup ]],
                            ushort thread_index_in_threadgroup [[ thread_index_in_threadgroup ]],
                            ushort2 thread_position_in_threadgroup [[ thread_position_in_threadgroup ]],
                            device ImageblockData* buffer [[ buffer(0) ]],
                            const imageblock<ImageblockData,imageblock_layout_explicit> ib)
   uint i = (threadgroup_position_in_grid.y * threadgroups_per_grid.x) + threadgroup_position_in_grid.x;
   i *= threads_per_threadgroup.x * threads_per_threadgroup.y;
   i += thread_index_in_threadgroup;
   for (ushort j = 0; j < SAMPLE_COUNT; j++)
   {
       const threadgroup_imageblock ImageblockData* src = ib.data(thread_position_in_threadgroup, j, imageblock_data_rate::sample);
       device ImageblockData* dest = buffer + i * SAMPLE_COUNT + j;       IMAGEBLOCK_SAMPLE_COPY(dest,src);
   }
kernel void ImageblockLoad(ushort2 threadgroup_position_in_grid [[ threadgroup_position_in_grid ]],
                           ushort2 threadgroups_per_grid [[ threadgroups_per_grid ]],
                           ushort2 threads_per_threadgroup [[ threads_per_threadgroup ]],
                           ushort thread_index_in_threadgroup [[ thread_index_in_threadgroup ]],
                           ushort2 thread_position_in_threadgroup [[ thread_position_in_threadgroup ]],
                           const device ImageblockData* buffer [[ buffer(0) ]],
                           imageblock<ImageblockData,imageblock_layout_explicit> ib)
   uint i = (threadgroup_position_in_grid.y * threadgroups_per_grid.x) + threadgroup_position_in_grid.x;
   i *= threads_per_threadgroup.x * threads_per_threadgroup.y;
   i += thread_index_in_threadgroup;
   for (ushort j = 0; j < SAMPLE_COUNT; j++)
   {
       threadgroup_imageblock ImageblockData* dest = ib.data(thread_position_in_threadgroup, j, imageblock_data_rate::sample);
       const device ImageblockData* src = buffer + i * SAMPLE_COUNT + j;       IMAGEBLOCK_SAMPLE_COPY(dest,src);
   }
ImageblockStore
ImageblockLoad
Unknown
C@4dd@4dulil
CiulSlS
CUululul
CUUUU
Culult
CU<b>ulult
CUUt
CU<b>tt
C@%llutU<b>t
Cult
CU<b>ulul@6ulululul
C@6ulululU<b>ulul
CUulul
C@%zut@%zuul@2ul
C@%zut@2ul
C@%zutul
C@%zut@%zuf@%zuf@2ul
C@%zutulul
C@%zutulU<b>i
C@%zutululul
C@%zutU<b>@2ul
Cttulul@%llutU@%llutUtul
Cttulul@%llutU@%llutU@%llutUtul
Cttulul@%llutU@%llutUttitul
Cttul@%llutU@%llutUulultul
DependencyGraphRequestedTextureAttachmentIndex
DependencyGraphRequestedTextureLevel
DependencyGraphRequestedTextureSlice
DependencyGraphRequestedTextureDepthPlane
width
height
format
Dictionary %@ not found in JSON dictionary
void verifyPerCounterCommandData(NSDictionary *__strong, NSString *__strong, NSArray *__strong, NSUInteger)
Counter %@ not found when validating %@ dictionary
Counter %@ had incorrect number of results when validating %@ dictionary, size was %lu should be %lu
batchfiltered
vendorCounters
v32@?0@"NSString"8@"NSDictionary"16^c24
Batch ID filtering will require %ld batches
v32@?0@"NSString"8@16^c24
gputools.MTLReplayer.parallelQueue
gputools.MTLReplayer.serialQueue
MTLReplayer attempting to open capture archive: %s
Failed to open capture archive: %s
int GTMTLReplayCLI_main(int, const char **)
MTLReplayer opened capture archive: %s
Creating system default device
Iterating MTLCopyAllDevices()
Selected default device %@
Enabled shaderDebugInfoCaching on device
MTLReplayer vendorName: %@
Calling GTMTLReplaySupport_init()
Calling GTMTLReplayController_makeController()
Creating GTMTLReplayWireframeRenderer
Calling GTMTLReplayWireframeRenderer_initWithDevice()
ATF_RESULTSDIRECTORY
options.saveDestination=%s
Calling GenerateThumbnails
%@-%@-%@
v32@?0@"NSData"8@"NSNumber"16@"NSString"24
profileBatchIdFilter
-profileBatchIdFilter only supported on AGX devices
-profileBatchIdFilter only supported on recent AGX devices
targetIndex=%d
GPUCounterGraph
plist
GPUTime
Filtered counter list from %ld to %ld counters
NoBlitSampling
SampleEncoders
SplitEncoderData
NormalizedCounters
activePerEncoderDrawCallCount missing in payload
v16@?0@"NSDictionary"8
Waiting for batch ID streaming...
Finished
collectDerivedCounters
_derivedCounterInfoResult.plist
No raw counters remain from derived counter list: %@
frameProfile
Timing Data
EncoderData
encoderData is nil
TraceInformation
_encoder_derivedComputedData.plist
_derivedComputedData.plist
_derivedCounterDataFromDeviceResult.plist
Creating Streaming Derived Counters Helper
Creating Streaming Shader Profiler Helper
CollectLimiters
gputime
consistent time
encoder time data
kick time data
_allCountersInfo.plist
.csv
.plist
replayer
replayCapture, loop count=%d/%d
commandQueue finish
normal exit
-testProfiling
-testLineProfiling
-profileTrace
-dumpProfileDictionary
-dumpDebugData
-loopCount
-verbose
-runningInCI
-runningValidationCI
-collectDerivedCounters
-uscBufferSize
-maxProfilingTime
-maxProfilingFrames
-waitUntilCompleteEachFrame
--device
--output
--frame
--gen-thumbnails
--all
--end
--last
-width
-height
--full
--replay
--list-devices
--counter-plist
--performAnalysis
--counters
--collect-xcode-derived-counters
--performShaderProfilingAnalysis
--presiliconRawData
--presiliconKickTimeFile
--derived-counters
--shader-profiling
--script
--analysis_script
--dyoptimize
-outputPath
-collectRawCounters
-collectPerformanceTiming
-profileTraceStreaming
-batchIdFilter
-collectPipelinePerformanceStatistics
-gpuTimelineData
-optimizeRestores
-NSDocumentRevisionsDebugMode
%d:%d
Unknown token: %s
void ParseArguments(GTMTLReplayCLIOptions *, int, const char **)
enable
resolution
DependencyGraphRequestedTexturesForThumbnail
First
attachments
functionIndex
type
DependencyGraphRequestedThumbnailTextureID
DependencyGraphRequestedTextureID
target
GPUTools_ClearCountInEncoder
GPUTools_IndexCount
GPUTools_InstanceCount
Frame Start 1
Frame End 1
Draw Call %llu
Command Encoder %llu
Command Buffer %llu
Frame 0
FullscreenVertex
FullscreenFragmentOverlay
FullscreenFragmentTexture
FullscreenFragmentDepthStencil
apr_global_pool
derivedScriptCode missing
NSDictionary *GTMTLReplayHost_computeDerivedCountersFromData(NSArray *__strong, NSArray *__strong, NSArray *__strong, NSArray *__strong, NSArray *__strong, NSDictionary *__strong)
NSDictionary *GTMTLReplayHost_computeDerivedCountersFromData(NSArray *__strong, NSArray *__strong, NSArray *__strong, NSArray *__strong, NSArray *__strong, NSDictionary *__strong)_block_invoke
v24@?0@"JSContext"8@"JSValue"16
[DYJSScripting] %@ %@
NSDictionary *GTMTLReplayHost_computeDerivedCountersFromData(NSArray *__strong, NSArray *__strong, NSArray *__strong, NSArray *__strong, NSArray *__strong, NSDictionary *__strong)_block_invoke_2
var %@ = 0;
function _SetRawCounterValues() {
%@ = _RawCounterValues[%zu];
function _SetSoftwareCounterValues() {
%@ = _SoftwareCounterValues[%zu];
var _DerivedCounterResult = [];
function _EvaluteDerivedCounters() {
_DerivedCounterResult = [];
try { value = %@(); if (!isFinite(value)) { value = 0; } _DerivedCounterResult.push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult.push(0); }
_SetSoftwareCounterValues
_SetRawCounterValues
_EvaluteDerivedCounters
_SoftwareCounterValues
derivedCounterResult contains %lu results, %lu expected (derivedCounterNames)
resultsForAnalysis contains %lu results, %lu expected (counterNamesForAnalysis)
derivedDataResults contains no results
derivedDataResultsForBottleNeckAnalysis contains no results
Bottlenecks
[DYJSScripting] "%@"
name
description
Value
wireframeCreationFragment
createOutlineTexture
passthoughVertex
fragmentShader
fragmentShaderUint
fragmentShaderSint
depthShader
stencilShader
[DYJSScripting] "%s" when calling "%s" (%s)
[DYJSScripting] "%s" when setting "%s" (%s)
[DYJSScripting] "%s" when getting "%s" (%s)
DTPlatformName
DTPlatformVersion
 or later
the latest version available
Please update your target OS to 
DYMTLShaderDebuggerErrorKey
DYMTLShaderDebuggerError
DYMTLShaderDebuggerFunctionIndex
DYMTLShaderDebuggerSubCommandIndex
DYMTLShaderDebuggerFunctionId
DYMTLShaderDebuggerLibraryId
DYMTLShaderDebuggerROIType
Internal error
-fno-tracepoint-instrument-line-markers
DYMTLShaderDebuggerInstrumentedMetallib
Failed to set up library for debugging
Failed to set up function for debugging
Failed to process shader debug information
Failed to process shader debug information. Please update your target device to the latest OS version
DYMTLShaderDebuggerTraceBufferSize
Failed to create GPU data buffer (%llu)
DYMTLShaderDebuggerPipelineCreationTimeout
AMDShaderDebugFunctionCall
true
CompilerError
Failed to set up render pipeline state for vertex debugging
Failed to set up render pipeline state for fragment debugging
Failed to set up render pipeline state for tile debugging
Unexpected Input: Render:ROI[%u]
Unexpected Input: Compute:ROI[%u]
Intel
Failed to set up compute pipeline state for debugging
DYMTLShaderDebuggerResourceResolutionRemappingTablesBuffers
DYMTLShaderDebuggerResourceResolutionRemappingTablesTextures
DYMTLShaderDebuggerResourceResolutionRemappingTablesSamplers
DYMTLShaderDebuggerResourceResolutionRemappingTablesConstantSamplersReflection
DYMTLShaderDebuggerResourceResolutionRemappingTablesBytes
DYMTLShaderDebuggerMetadata
DYMTLShaderDebuggerTrace
DYMTLShaderDebuggerResourceResolutionRemappingTables
libLLVM.dylib
macosx
macOS 
iphoneos
iOS 
appletvos
tvOS 
watchos
watchOS 
iphonesimulator
iOS Simulator 
appletvsimulator
tvOS Simulator 
DYMTLShaderDebuggerErrorInfo
GTMTLShaderDebuggerErrorDomain
Error while preparing trace buffer
DYMTLShaderDebuggerROIInstanceId
DYMTLShaderDebuggerROIAmplificationId
DYMTLShaderDebuggerROIVertexIds
DYMTLShaderDebuggerROIMinPositionX
DYMTLShaderDebuggerROIMinPositionY
DYMTLShaderDebuggerROIMaxPositionX
DYMTLShaderDebuggerROIMaxPositionY
DYMTLShaderDebuggerROIMinSampleId
DYMTLShaderDebuggerROIMaxSampleId
DYMTLShaderDebuggerROIRenderTargetArrayIndex
DYMTLShaderDebuggerROIMinPositionZ
DYMTLShaderDebuggerROIMaxPositionZ
DYMTLShaderDebuggerROIPatchIds
Harvest2PVertex
Harvest2PFragmentDownload
MTLTexture-0x%llx-%llu-%llu-Fetch
GPUToolsInternalPostTransformPipelineStateLabel
MTLCommandBufferDescriptor
activityType
activityStartTime
activityEndTime
loadArchive
path
kind
serial
attributes
harvestResourceObject
restoreCommandBuffer
restoreResources
requests
debugFuncStop
currentFunctionIndex
currentSubCommand
targetFunctionIndex
targetSubCommand
collectCounters
counterNames
locations
index
performFrameTiming
displayAttachment
subCommand
commandBuffer
breadcrumbs
activityLog
gputracePath
GTMTLReplayActivityLog.json
commandBufferKey
reason
failureType
rewind
argumentBufferUpload
argumentBufferDownload
optimizeRestores
retainedReferences
label
kernelStartTime
kernelEndTime
GPUStartTime
GPUEndTime
status
errorOptions
logs
MTLCommandBufferEncoderInfoErrorKey
domain
code
localizedDescription
commandBufferEncoderInfo
debugSignposts
errorState
encoderMethodIdentifier
encoderLabel
encoderIdentifier
logMessage
addressSpace
buffer
operation
errorStackTrace
functionType
length
resourceOptions
allocatedSize
functionName
column
store0
tracepoint_thread_begin
tracepoint_function_begin
tracepoint_function_end
tracepoint_call
tracepoint_variable
tracepoint_data
tracepoint_loop_begin_for
tracepoint_loop_begin_while
tracepoint_loop_begin_do
tracepoint_loop_init_begin
tracepoint_loop_init_end
tracepoint_loop_cond_begin
tracepoint_loop_cond_end
tracepoint_loop_inc_begin
tracepoint_loop_inc_end
tracepoint_loop_body_begin
tracepoint_loop_body_end
tracepoint_loop_end
tracepoint_thread_exit
tracepoint_library_version
tracepoint.sets
tracepoint
return_value(
MTLTileRenderPipelineDescriptor
MTLIndirectCommandBufferDescriptor
MTLRasterizationRateMapDescriptor
%3d 
%d.%d%c
%3d%c
v32@?0@"NSNumber"8@"NSArray"16^c24
Blit Encoder Nsec Times
Blit Command Kick Times Nsec
subtype
Normalize
_encoderRawData
_encoderTileInfos
_encoderKickTimes
DerivedCounterInfo
num_cores
_vtx
_frg
_cmp
var %@%@ = 0;
var %@_norm%@ = 0;
var core_count = num_cores;
var TileWidth  = 0;
var TileHeight = 0;
var _RawCounterValues = [];
function _SetAndEvaluateRawCounterValues() {
for (var encoderIdx = 0; encoderIdx < _encoderRawData.length; encoderIdx++) {
TileWidth = _encoderTileInfos[encoderIdx][0];
TileHeight = _encoderTileInfos[encoderIdx][1];
_DerivedCounterResult[encoderIdx] = []
_RawCounterValues[encoderIdx] = []
%@%@ = _encoderRawData[encoderIdx][%u][%u][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@ = _encoderKickTimes[encoderIdx][%u];
_RawCounterValues[encoderIdx].push(%@%@);
%@%@
%@_norm%@ = 100.0 * %@ * (%@%@ / Math.max(_encoderRawData[encoderIdx][%u][%u][%u], 1));
_RawCounterValues[encoderIdx].push(%@_norm%@);
%@_norm%@
%@ = %@%@ + %@%@ + %@%@;
_RawCounterValues[encoderIdx].push(%@);
%@_norm = 100.0 * %@ * (%@ / Math.max(_encoderRawData[encoderIdx][0][%u][%u] + _encoderRawData[encoderIdx][1][%u][%u] + _encoderRawData[encoderIdx][2][%u][%u], 1.0));
_RawCounterValues[encoderIdx].push(%@_norm);
_norm
try { value = %@(); if (!isFinite(value) || isNaN(value) || (value < 0)) { value = 0; } _DerivedCounterResult[encoderIdx].push(value); } catch(err) { ErrorLog(err); _DerivedCounterResult[encoderIdx].push(0); }
Kick Times
v32@?0@"NSNumber"8@"NSNumber"16^c24
EncoderTime
var %@ = 0;
var %@_norm = 0;
var core_count = num_cores;
var MTLStat_nSec = 0;
function _SetAndEvaluateRawCounterValues(numSamples, gpuCyclesCounterIndex, ringBufferIndex) {
num_cores = _CoreCount[ringBufferIndex];
MTLStat_nSec = (_RawTimestampDelta[sampleIndex]) * %u / %u;
%@ = _RawCounterValues[%lu + sampleStartIndex];
core_mask_list
gputools.MTLShaderProfiler.GRCPerFrameDataparallelQueue
_RawTimestampDelta
_CoreCount
usc sample count
usc sample data thread offsets
Bandwidth
gputools.MTLShaderProfiler.parallelQueue
com.apple.gputools
MTLReplayer
Color.0
Color.1
Color.2
Color.3
Color.4
Color.5
Color.6
Color.7
Depth.
Stencil.
MTLIOAccelIndirectCommandBuffer
-CLI
GT_HOST_URL_MTL
GPUShaderProfilerIgnoreBlockSamplingBiasAdjustment
gputools.GPUToolsDebugger.GPUToolsPlatform.ShaderProfiler.ParallelQueue
gputools.GPUToolsDebugger.GPUToolsPlatform.ShaderProfiler.SerialQueue
Invalid
Scheduled
Start
Wait_DRC
Wait_PIX
Wait_Barrier
Wait_SYNCBUF
End0
End1
End2
End3
End4
Trace Header batchIdMatch(%1u) dataMaster(%s) tileX(%4u) tileY(%4u)
Trace Header layerId(%6u) tileX(%4u) tileY(%4u)
Sample[%d] PC=0x%X ClauseIndex = %u, RenderIndex = %u, Duration = %u, norm = %u
Total Trace Buffer Count = %u, Total Clause Count = %u
PC(Hex)     PC(Dec) NumInst    Occur  OverflowOccur   AveLag     Weight     %Weight
%s Binary %s : Num Clauses = %u : Total Weight = %u : %% Weight = %.2f
[%u]Trace Buffer
%1u %s %4u %4u
%6u %4u %4u
%d 0x%X %u,%u, %u,%u
PC = 0x%X
A [%s %4u] : B [%s %4u]
Invalid Packet Type
/tmp/com.apple.gputools.profiling/shaderProfilerResults/Frames/%u/%u/evaluateStreamingSamples_%lu.txt
Sample Encoder Entry Not Found %u
/tmp/com.apple.gputools.profiling/shaderProfilerResults/Frames/%u/%u/processedStreamingSamples.txt
PC:0xPC Encoder Draw Limiter Idx Duration Cost costFactor sampleFactor
%lu %u:0x%x %u %10u %10u %10u %10u %15f %15f %15f
/tmp/com.apple.gputools.profiling/shaderProfilerResults/Frames/%u/AggregatedEffectiveGPUTimePerBatch.txt
%u %u
s / %f 
s = %f %% 
/tmp/com.apple.gputools.profiling/shaderProfilerResults/AggregatedEffectiveGPUTimePerBatch.txt
/tmp/com.apple.gputools.profiling/shaderProfilerResults/Frames/%u/%u/perLimiterBatchCosts.txt
Limiter Index : BatchIdx Cost
%lu: 
%u %f, 
/tmp/com.apple.gputools.profiling/shaderProfilerResults/uscSamplingProcessedSample_%d.txt
/tmp/com.apple.gputools.profiling/shaderProfilerResults/bblCostInfo.txt
Binary 0x%s : Num Basic Blocks = %u : Total Cost = %.4f %% Weight = %.4f
Index   PC  NumInst  Mean Occurences  Total Original Cost Total Cost  Block Weight %%
%d      0x%x %4d %10u  %15.2f %15.2f %15.4f
%d      0x%x %15u %15.4f %15.4f %15.5f
%u%u
%s%s%u%u%.2f
/tmp/com.apple.gputools.profiling/shaderProfilerResults/segLikeCost.txt
/tmp/com.apple.gputools.profiling/shaderProfilerResults/segLikeCostOnly.txt
Vertex
Fragment
Compute
0x%0.8x %6u %10u %10u %10u %10.2g %10u %10.2g
Draw Call Costs
Idx   drawIdx  function vertex key  fragment key  Cost    %%Weight
%d : %8u %8u   0x%s   0x%s    0x%s : %8u  : %4.2f
apr_initialize
Clause #
, Offset 
, size in bytes 
, Instruction Count 
Unexpected instruction found
%04x
debugIndex(%u)
APR does not understand this error code
Could not perform a stat on the file.
A new pool could not be created.
An invalid date has been provided
An invalid socket was returned
No process was provided and one was required.
No time was provided and one was required.
No directory was provided and one was required.
No lock was provided and one was required.
No poll structure was provided and one was required.
No socket was provided and one was required.
No thread was provided and one was required.
No thread key structure was provided and one was required.
No shared memory is currently available
DSO load failed
The specified IP address is invalid.
The specified network mask is invalid.
Could not find the requested symbol.
Not enough entropy to continue.
Your code just forked, and you are currently executing in the child process
Your code just forked, and you are currently executing in the parent process
The specified thread is detached
The specified thread is not detached
The specified child process is done executing
The specified child process is not done executing
The timeout specified has expired
Partial results are valid but processing is incomplete
Bad character specified on command line
Missing parameter for the specified command line option
End of file found
Could not find specified socket in poll list.
Shared memory is implemented anonymously
Shared memory is implemented using files
Shared memory is implemented using a key system
There is no error, this value signifies an initialized error code
This function has not been implemented on this platform
passwords do not match
The given path is absolute
The given path is relative
The given path is incomplete
The given path was above the root path
The given path is misformatted or contained invalid characters
The given path contained wildcard characters
The given lock was busy.
The process is not recognized.
Internal error (specific information not available)
Error string not specified yet
Unknown host
No address for host
Unrecognized resolver error
windowLevel
styleMask
GPU Debugging %@
GPU Debugging
perFrameCommandBufferCount
uscSamplingPeriod
withoutBlitPerEncoderIndexDrawCallCount
splitEncoderCommandCount
splitPerEncoderKickCount
device
GPUMTLOverrideDeviceFamily
IOAccelerator
IOAcceleratorES
AGXMetal
MTLStatDataMaster
counterLists
v32@?0@"NSString"8Q16^c24
MTLStatCommandBufferIndex
MTLStatEncoderIndex
MTLStatCommandIndex
MTLStatVertexCost
MTLStatFragmentCost
-counters.plist
-derived.js
-analysis.js
Validating merged derived counters
Counter %@ is missing from merged counter list
void validateMergeDerivedCounterInfo(NSDictionary *__strong, NSDictionary *__strong)
%d counters found
No derivedCounterInfoResult counters present!
void debugDumpCounterDictionary(NSDictionary *__strong)
Counter %@:%@
%@ missing in plist
_Bool verifyCounterDictionary(NSDictionary *__strong)
No derived counters in plist
MetalStatisticsName
Failed to obtain IORegistryEntry MetalStatisticsName from IORegistry
NSDictionary *DYMTLReplayFrameProfiler_loadAnalysis(__strong id<MTLDevice>)
NOT (self BEGINSWITH 'autocorr')
Failed to determine statisticsName
statisticsName=%@
AGXMetalStatistics
AGXMetalStatisticsExternal
MetalStatisticsScriptName
/System/Library/Extensions/%@.bundle/%@
/System/Library/Extensions/%@.bundle/Contents/Resources/%@
Checking with plistPrefix=%@, scriptPrefix=%@
Failed to load any derived counters
Derived counter script missing
GPU Time in nSec
Count
GPUToolsGPUTime
function GPUToolsGPUTime()
   return MTLStat_nSec
GPUConfigurationVariable
Configuration Variables: %@
Draw ID -> PipelineState ID
PipelineState ID
Required counters: %@, divided list: %@
Counter %@ missing from subdivided counter list
void validateSubdividedCounterLists(NSArray *__strong, NSArray *__strong)
QueryShaderInfo - subdividing counter list
frame counters
frame profile data
frameGPUTime
numberOfPasses
%0.8x
CollectCounterData requestCounters on index %d failed with error %d
void CollectCounterData(GTMTLReplayController *, NSArray *__strong, uint64_t, NSArray *__strong, NSUInteger)
v32@?0@"<MTLCommandBuffer>"8@"NSData"16Q24
SubdivideCounterList - subdividing counter list
NVidia
functionIndex(%u)
MPSNNNeuronDescriptor
MPSPluginCNNConvolutionDescriptor
Tile Pipeline for dumping Image Block data
dumpImageBlockData
Dump Tile Data
#include <metal_stdlib>
using namespace metal;
kernel void dumpThreadgroupData(uint2 threadgroupInGrid [[ threadgroup_position_in_grid ]],
                                uint2 threadgroupsPerGrid [[ threadgroups_per_grid ]],
                                device uint8_t* threadgroupBufferDump [[ buffer(0) ]],
                                threadgroup uint8_t* threadgroupData [[ threadgroup(THREADGROUP_MEMORY_INDEX) ]])
   uint tileIndex = (threadgroupInGrid.y * threadgroupsPerGrid.x) + threadgroupInGrid.x;
   uint offset = THREADGROUP_MEMORY_LENGTH * tileIndex;
   for(int i = 0; i < THREADGROUP_MEMORY_LENGTH; i++)
   {
       threadgroupBufferDump[offset + i] = threadgroupData[i];
   }
THREADGROUP_MEMORY_INDEX
Tile Pipeline for dumping Threadgroup data
dumpThreadgroupData
Dump Tile Threadgroup Data
user(
fragmentMember%d
[%u]
#include <metal_stdlib>
#include <metal_imageblocks>
#include <simd/simd.h>
using namespace metal;
struct ImageblockMaster {
kernel void dumpImageBlockData(imageblock<ImageblockMaster, imageblock_layout_explicit> imageBlock
 [[ alias_implicit_imageblock ]]
 [[ alias_implicit_imageblock_color
(%u)
uint2 gid [[ thread_position_in_grid ]],
ushort2 lid [[ thread_position_in_threadgroup ]],
texture2d_array
texture2d
, access::write> imageBlockData [[ texture(0) ]])
threadgroup_imageblock ImageblockMaster* ib = imageBlock.data(lid);
for(int i = 0; i < 
; i++) {
 currData = ib->
[i];
imageBlockData.write(
, gid, i);
imageBlockData.write(
, gid);
struct {
r8unorm
r8snorm
r16unorm
r16snorm
rg8unorm
rg8snorm
rg16unorm
rg16snorm
rgba8unorm
srgba8unorm
rgba8snorm
rgba16unorm
rgba16snorm
rgb10a2
rg11b10f
rgb9e5
float
half
uint
short
ushort
float2
float3
float4
half2
half3
half4
int2
int3
int4
uint2
uint3
uint4
short2
short3
short4
ushort2
ushort3
ushort4
char
char2
char3
char4
uchar
uchar2
uchar3
uchar4
bool
bool2
bool3
bool4
4(currData, 0, 0, 0)
4(currData.x, currData.y, 0, 0)
4(currData.x, currData.y, currData.z, 0)
4(currData.x, currData.y, currData.z, currData.w)
/System/Library/Frameworks/ATFMTL.framework/ATFMTL
ATFMTLSaveTextureSliceWithOptions
ATFMTLSaveDepthTexture
ATFMTLSaveBuffer
ATFTestFinish
ATFTestStartVersion
bogus %p
0123456789abcdef
0123456789ABCDEF
gputools.global_sync
v16@?0@"GTTransportMessage_replayer"8
v36@?0Q8r*16I24@"NSString"28
trace mode
include backtraces
trace host type
profiling send period
profiling flags
override_flags
override_scale_tesselation_factor
sandbox_extensions
DYCaptureEngine.launch_dictionary
title
Streaming Shader Profiling Data
Batch Filtering Request Received
collectInBackground
Batch Filtering Started
archivedExperiments
queryAvailableCounters
version
interpose-feature-version
interpose-patch-version
LATEST
/tmp/com.apple.GPUToolsAgent
gputrace
metadata
MTLOverrideDeviceCreationFlags
buffer name
capture serial
kDYMessageFetchResourceObject: textureID %llu (%llu) not found.
MTLBuffer-0x%llx-Fetch
MTLIndirectCommandBuffer-0x%llx-Fetch
kDYMessageFetchResourceObject: %u invalidType
stream
compressed
ZLIB
LZFSE
none
requestStreamIndex
q24@?0@8@16
succeeded
executable-path
identifier
nanoseconds since epoch timestamp
mach absolute timestamp
mach timebase numerator
mach timebase denominator
GPUToolsPerfLogging
SW_PBUsed
_fedf2c59
limiter
uscBufferSize
MTLStatSampleLocation
kick cycle data
tilerParamBufBytesUsedArray
PerDrawNsecTimes
CollectTimingData
TimingPerformanceData
BlitTimeData
CAMetalLayer Drawable
33333333
UUUU
MbP?
St8bad_cast
MTSP
(knN(knN
NSt3__117bad_function_callE
St12length_error
(null)
MTSP
St11logic_error
St9exception
GTMTLReplaySharedResourcePool
GTMTLReplaySharedTexture
GTMTLReplaySharedBufferHeap
GTMTLReplaySharedBufferRange
MTLBlitCommandEncoder
MTLCommandEncoder
NSObject
GTMTLReplaySharedBlitBuffer
GTShaderProfilerHelper
(Cb1
DYNSErrorAdditions
GTError_replayer
GTIntKeyedDictionary_replayer
NSSecureCoding
NSCoding
GTFuture_replayer
GTContinuation_replayer
GTTransportMessage_replayer
NSCopying
GTTransportMessageReplyContinuation_replayer
GTTransportSource_replayer
GTTransport_replayer
GTVMBufferSubRegion_replayer
GTVMBufferSubRegion
GTVMBuffer_replayer
GTVMBuffer
GTGPUVMBuffer
GTBaseStreamTransport_replayer
GTBufferedSendOperation_replayer
GTSharedMemoryTransport_replayer
GTBaseSocketTransport_replayer
GTUNIXDomainSocketTransport_replayer
GTMTLTextureRenderEncoderCommand
GTMTLTextureRenderEncoder
GTMTLTextureRenderer
DYJSScriptingContext
GTMTLReplayActivity
GTMTLReplayActivityLoadArchive
GTMTLReplayActivityMessage
GTMTLReplayActivityHarvestResourceObject
GTMTLReplayActivityRestoreCommandBuffer
GTMTLReplayActivityRestoreResources
GTMTLReplayActivityDebugFuncStop
GTMTLReplayActivityCollectCounters
GTMTLReplayActivityPerformFrameTiming
GTMTLReplayActivityDisplayAttachment
GTMTLReplayActivityLog
GTBatchedCounterManager
GRCPerFrameDataClass
MTLIndirectCommandBuffer
MTLResource
DYShaderProfilerTimingWrapper
DYShaderProfilerDrawCallInfo
DYShaderProfilerProgramInfo
DYShaderAnalyzerResult
ShaderBinaryInfo
DYShaderProfilerResult
DYMTLShaderProfilerResult
DYShaderProfiler
InstructionPCStatInfoClass
DYPMTLShaderProfilerHelper
ReplayerViewController
GTMTLReplayDisplayDelegate
Renderer
MTKViewDelegate
AppDelegate
NSApplicationDelegate
!0!3
DYMetalDrawable
DYMetalLayer
MTLBuffer
MTLComputeCommandEncoder
MTLRenderCommandEncoder
MTLResourceStateCommandEncoder
MTLTexture
MTLVideoCommandEncoderSPI
GTMTLReplayObjectMap
@32@0:8@16Q24
v16@0:8
@24@0:8Q16
@24@0:8@16
v24@0:8@16
v24@0:8Q16
@16@0:8
Q16@0:8
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{_opaque_pthread_cond_t="__sig"q"__opaque"[40c]}
@"NSMutableArray"
@"<MTLDevice>"
@32@0:8Q16@24
@"GTMTLReplaySharedResourcePool"
@32@0:8@16@24
@"<MTLBuffer>"
@40@0:8@16{_NSRange=QQ}24
^v16@0:8
@"GTMTLReplaySharedBufferHeap"
{_NSRange="location"Q"length"Q}
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
v40@0:8@16Q24Q32
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v80@0:8@16Q24Q32@40Q48Q56Q64Q72
v32@0:8@16@24
v56@0:8@16Q24@32Q40Q48
v40@0:8@16{_NSRange=QQ}24
v56@0:8@16{_NSRange=QQ}24@40Q48
v36@0:8@16Q24c32
v108@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80c88@92Q100
v88@0:8@16{?={?=QQQ}{?=QQQ}}24Q72Q80
v24@0:8@"<MTLResource>"16
v40@0:8@"<MTLTexture>"16Q24Q32
v136@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLTexture>"88Q96Q104{?=QQQ}112
v120@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96
v128@0:8@"<MTLBuffer>"16Q24Q32Q40{?=QQQ}48@"<MTLTexture>"72Q80Q88{?=QQQ}96Q120
v120@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112
v128@0:8@"<MTLTexture>"16Q24Q32{?=QQQ}40{?=QQQ}64@"<MTLBuffer>"88Q96Q104Q112Q120
v24@0:8@"<MTLTexture>"16
v44@0:8@"<MTLBuffer>"16{_NSRange=QQ}24C40
v80@0:8@"<MTLTexture>"16Q24Q32@"<MTLTexture>"40Q48Q56Q64Q72
v32@0:8@"<MTLTexture>"16@"<MTLTexture>"24
v56@0:8@"<MTLBuffer>"16Q24@"<MTLBuffer>"32Q40Q48
v24@0:8@"<MTLFence>"16
v40@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24
v56@0:8@"<MTLIndirectCommandBuffer>"16{_NSRange=QQ}24@"<MTLIndirectCommandBuffer>"40Q48
v36@0:8@"<MTLCounterSampleBuffer>"16Q24c32
v56@0:8@"<MTLCounterSampleBuffer>"16{_NSRange=QQ}24@"<MTLBuffer>"40Q48
v108@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80c88@"<MTLBuffer>"92Q100
v88@0:8@"<MTLTexture>"16{?={?=QQQ}{?=QQQ}}24Q72Q80
@32@0:8Q16Q24
{SharedBufferArray="resourcePool"@"GTMTLReplaySharedResourcePool""retainArray"@"NSMutableArray""bufferOffset"Q}
{SharedCommandBuffer="commandQueue"@"<MTLCommandQueue>""commandBuffer"@"<MTLCommandBuffer>""commandEncoder"@"<MTLCommandEncoder>"}
@24@0:8^{GTProfilerOptions=b1b1b1b1b1b1b1b1b1b1b1b1@@b1}16
c40@0:8@16r^{GTMTLReplayDataSource=^{GTCaptureArchive}^{apr_hash_t}^{apr_hash_t}^{apr_hash_t}^{GTMTLSMContext}{GTRange=ii}{?={GTRange=ii}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_hash_t}^{apr_hash_t}^{apr_hash_t}^{apr_hash_t}}{?=^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_hash_t}}b1b1}24r^{GTMTLReplayController=^{GTMTLReplayDataSource}@@@@@@@@@@@@^{GTCaptureArchiveDecompressor}{GTMTLSMCommandEncoder={GTMTLSMObject=IIQQQ^{GTMTLSMObject}}Q*(?={GTMTLSMRenderCommandEncoder=*[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[31Q][16Q]QQ[16{GTMTLViewport=dddddd}]QQQQ[16{GTMTLScissorRect=QQQQ}]QQQQQ^IQQQQQ[31Q][31Q][8Q]QQ[8Q]QQfff[4f]II[16f][16f][16f][16f][16f][16f]ffII}{?=QQ[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][31Q]QQ{?={?=QQQ}{?=QQQ}}QQ[16f][16f]}{?=Q}{GTMTLSMParallelCommandEncoder=*[8Q]QQ[8Q]QQ})}{GTMTLSMCommandEncoder={GTMTLSMObject=IIQQQ^{GTMTLSMObject}}Q*(?={GTMTLSMRenderCommandEncoder=*[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[31Q][16Q]QQ[16{GTMTLViewport=dddddd}]QQQQ[16{GTMTLScissorRect=QQQQ}]QQQQQ^IQQQQQ[31Q][31Q][8Q]QQ[8Q]QQfff[4f]II[16f][16f][16f][16f][16f][16f]ffII}{?=QQ[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][31Q]QQ{?={?=QQQ}{?=QQQ}}QQ[16f][16f]}{?=Q}{GTMTLSMParallelCommandEncoder=*[8Q]QQ[8Q]QQ})}QQ{?=II}{?=^{apr_hash_t}}{?=^{apr_array_header_t}AiAi@@}{?=@^{apr_hash_t}^{apr_hash_t}}i[0{GTMTLReplayThreadData=^{_opaque_pthread_t}^{GTMTLReplayController}^{apr_hash_t}}]}32
@72@0:8@16@24i32@36@44@52I60@64
@32@0:8r^{GTMTLReplayDataSource=^{GTCaptureArchive}^{apr_hash_t}^{apr_hash_t}^{apr_hash_t}^{GTMTLSMContext}{GTRange=ii}{?={GTRange=ii}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_hash_t}^{apr_hash_t}^{apr_hash_t}^{apr_hash_t}}{?=^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_hash_t}}b1b1}16r^{GTMTLReplayController=^{GTMTLReplayDataSource}@@@@@@@@@@@@^{GTCaptureArchiveDecompressor}{GTMTLSMCommandEncoder={GTMTLSMObject=IIQQQ^{GTMTLSMObject}}Q*(?={GTMTLSMRenderCommandEncoder=*[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[31Q][16Q]QQ[16{GTMTLViewport=dddddd}]QQQQ[16{GTMTLScissorRect=QQQQ}]QQQQQ^IQQQQQ[31Q][31Q][8Q]QQ[8Q]QQfff[4f]II[16f][16f][16f][16f][16f][16f]ffII}{?=QQ[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][31Q]QQ{?={?=QQQ}{?=QQQ}}QQ[16f][16f]}{?=Q}{GTMTLSMParallelCommandEncoder=*[8Q]QQ[8Q]QQ})}{GTMTLSMCommandEncoder={GTMTLSMObject=IIQQQ^{GTMTLSMObject}}Q*(?={GTMTLSMRenderCommandEncoder=*[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[31Q][16Q]QQ[16{GTMTLViewport=dddddd}]QQQQ[16{GTMTLScissorRect=QQQQ}]QQQQQ^IQQQQQ[31Q][31Q][8Q]QQ[8Q]QQfff[4f]II[16f][16f][16f][16f][16f][16f]ffII}{?=QQ[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][31Q]QQ{?={?=QQQ}{?=QQQ}}QQ[16f][16f]}{?=Q}{GTMTLSMParallelCommandEncoder=*[8Q]QQ[8Q]QQ})}QQ{?=II}{?=^{apr_hash_t}}{?=^{apr_array_header_t}AiAi@@}{?=@^{apr_hash_t}^{apr_hash_t}}i[0{GTMTLReplayThreadData=^{_opaque_pthread_t}^{GTMTLReplayController}^{apr_hash_t}}]}24
v36@0:8^Q16I24r*28
v48@0:8@16@24^{GPUTimelineInfo=I@@@{vector<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>, std::__1::allocator<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>>>=^{vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>}^{vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>}{__compressed_pair<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>> *, std::__1::allocator<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>>>=^{vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>}}}{vector<EncoderTimelineInfo, std::__1::allocator<EncoderTimelineInfo>>=^{EncoderTimelineInfo}^{EncoderTimelineInfo}{__compressed_pair<EncoderTimelineInfo *, std::__1::allocator<EncoderTimelineInfo>>=^{EncoderTimelineInfo}}}}32^{unordered_map<unsigned int, unsigned long long, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned long long>>>={__hash_table<std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned long long>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned long long>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned long long>, std::__1::equal_to<unsigned int>, true>>=f}}}40
v40@0:8@16@24^{WorkloadGPUTimelineInfo={vector<GPUTimelineInfo, std::__1::allocator<GPUTimelineInfo>>=^{GPUTimelineInfo}^{GPUTimelineInfo}{__compressed_pair<GPUTimelineInfo *, std::__1::allocator<GPUTimelineInfo>>=^{GPUTimelineInfo}}}{AggregatedGPUTimelineInfo={GPUTimelineInfo=I@@@{vector<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>, std::__1::allocator<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>>>=^{vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>}^{vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>}{__compressed_pair<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>> *, std::__1::allocator<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>>>=^{vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>}}}{vector<EncoderTimelineInfo, std::__1::allocator<EncoderTimelineInfo>>=^{EncoderTimelineInfo}^{EncoderTimelineInfo}{__compressed_pair<EncoderTimelineInfo *, std::__1::allocator<EncoderTimelineInfo>>=^{EncoderTimelineInfo}}}}@@{vector<std::__1::vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>, std::__1::allocator<std::__1::vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>>>=^{vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>}^{vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>}{__compressed_pair<std::__1::vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>> *, std::__1::allocator<std::__1::vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>>>=^{vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>}}}}}32
v48@0:8@16@24@32@40
{DebugInfo={vector<DebugInfo::LineEntry, std::__1::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::__1::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::__1::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}IIIII}36@0:8@16@24i32
{pair<std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>, std::__1::vector<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>>>>={vector<unsigned int, std::__1::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>=^I}}{vector<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>>>=^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>}^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>}{__compressed_pair<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>> *, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>>>=^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>}}}}24@0:8^{DebugInfo={vector<DebugInfo::LineEntry, std::__1::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::__1::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::__1::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}IIIII}16
v60@0:8^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>=^^{LineEntry}^^{LineEntry}{__compressed_pair<DebugInfo::LineEntry **, std::__1::allocator<DebugInfo::LineEntry *>>=^^{LineEntry}}}16^{unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>>>={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=f}}}24^{DebugInfo={vector<DebugInfo::LineEntry, std::__1::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::__1::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::__1::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}IIIII}32d40I48I52i56
@72@0:8^{vector<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>>>=^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>}^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>}{__compressed_pair<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>> *, std::__1::allocator<std::__1::vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>>>=^{vector<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry *>>}}}16^{unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>>>={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, PerFileCost>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>=f}}}24^{DebugInfo={vector<DebugInfo::LineEntry, std::__1::allocator<DebugInfo::LineEntry>>=^{LineEntry}^{LineEntry}{__compressed_pair<DebugInfo::LineEntry *, std::__1::allocator<DebugInfo::LineEntry>>=^{LineEntry}}}{vector<DebugInfo::LineDisassemblyInfo, std::__1::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}^{LineDisassemblyInfo}{__compressed_pair<DebugInfo::LineDisassemblyInfo *, std::__1::allocator<DebugInfo::LineDisassemblyInfo>>=^{LineDisassemblyInfo}}}IIIII}32d40@48@56^{unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>>={__hash_table<std::__1::__hash_value_type<unsigned int, double>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, double>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::equal_to<unsigned int>, true>>=f}}}64
@52@0:8@16@24i32@36@44
@28@0:8@16i24
v40@0:8r^{GTMTLReplayDataSource=^{GTCaptureArchive}^{apr_hash_t}^{apr_hash_t}^{apr_hash_t}^{GTMTLSMContext}{GTRange=ii}{?={GTRange=ii}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_hash_t}^{apr_hash_t}^{apr_hash_t}^{apr_hash_t}}{?=^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_array_header_t}^{apr_hash_t}}b1b1}16@24r^{GTMTLReplayController=^{GTMTLReplayDataSource}@@@@@@@@@@@@^{GTCaptureArchiveDecompressor}{GTMTLSMCommandEncoder={GTMTLSMObject=IIQQQ^{GTMTLSMObject}}Q*(?={GTMTLSMRenderCommandEncoder=*[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[31Q][16Q]QQ[16{GTMTLViewport=dddddd}]QQQQ[16{GTMTLScissorRect=QQQQ}]QQQQQ^IQQQQQ[31Q][31Q][8Q]QQ[8Q]QQfff[4f]II[16f][16f][16f][16f][16f][16f]ffII}{?=QQ[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][31Q]QQ{?={?=QQQ}{?=QQQ}}QQ[16f][16f]}{?=Q}{GTMTLSMParallelCommandEncoder=*[8Q]QQ[8Q]QQ})}{GTMTLSMCommandEncoder={GTMTLSMObject=IIQQQ^{GTMTLSMObject}}Q*(?={GTMTLSMRenderCommandEncoder=*[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[31Q][16Q]QQ[16{GTMTLViewport=dddddd}]QQQQ[16{GTMTLScissorRect=QQQQ}]QQQQQ^IQQQQQ[31Q][31Q][8Q]QQ[8Q]QQfff[4f]II[16f][16f][16f][16f][16f][16f]ffII}{?=QQ[1Q](?={?=[31Q][31Q]}{?=[31Q][31Q]})[128Q][16Q][31Q]QQ{?={?=QQQ}{?=QQQ}}QQ[16f][16f]}{?=Q}{GTMTLSMParallelCommandEncoder=*[8Q]QQ[8Q]QQ})}QQ{?=II}{?=^{apr_hash_t}}{?=^{apr_array_header_t}AiAi@@}{?=@^{apr_hash_t}^{apr_hash_t}}i[0{GTMTLReplayThreadData=^{_opaque_pthread_t}^{GTMTLReplayController}^{apr_hash_t}}]}32
v80@0:8@16^{vector<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>, std::__1::allocator<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>>=^{vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>}^{vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>}{__compressed_pair<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>> *, std::__1::allocator<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>>=^{vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>}}}24I32I36I40^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})QQ}44^{DYMTLShaderProfilerUSCSample=I(?={?=(?=II)I}{?=II})}52I60^{vector<unsigned int, std::__1::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>=^I}}64^{unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>>={__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>>=f}}}72
v36@0:8^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})QQ}16I24r*28
v36@0:8^{DYMTLShaderProfilerUSCSample=I(?={?=(?=II)I}{?=II})}16I24r*28
v36@0:8*16I24r*28
v36@0:8@16@24i32
v32@0:8d16@24
@28@0:8r^{PerLineCost={vector<double, std::__1::allocator<double>>=^d^d{__compressed_pair<double *, std::__1::allocator<double>>=^d}}d}16I24
@28@0:8r^{PerFileCost={PerLineCost={vector<double, std::__1::allocator<double>>=^d^d{__compressed_pair<double *, std::__1::allocator<double>>=^d}}d}{unordered_map<unsigned int, PerFileCost::PerLineCost, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PerFileCost::PerLineCost>>>={__hash_table<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, PerFileCost::PerLineCost>, std::__1::equal_to<unsigned int>, true>>=f}}}}16I24
v44@0:8@16@24@32i40
v28@0:8@16i24
@40@0:8@16@24@32
d40@0:8@16Q24r^{vector<unsigned int, std::__1::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>=^I}}32
d44@0:8@16Q24r^{vector<unsigned int, std::__1::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>=^I}}32I40
d28@0:8@16I24
d36@0:8@16I24@28
c40@0:8@16@24@32
@56@0:8^I16Q24Q32@40Q48
v48@0:8^{PerfCounterCompressedSample=b26b6[0I]}16@24@32@40
v40@0:8@16^{vector<std::__1::unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>>, std::__1::allocator<std::__1::unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>>>>=^{unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>>}^{unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>>}{__compressed_pair<std::__1::unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>> *, std::__1::allocator<std::__1::unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>>>>=^{unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>>}}}24@32
^{GTProfilerOptions=b1b1b1b1b1b1b1b1b1b1b1b1@@b1}
{unique_ptr<MTLGRCStreamingSampleHelper, std::__1::default_delete<MTLGRCStreamingSampleHelper>>="__ptr_"{__compressed_pair<MTLGRCStreamingSampleHelper *, std::__1::default_delete<MTLGRCStreamingSampleHelper>>="__value_"^{MTLGRCStreamingSampleHelper}}}
@"NSMutableDictionary"
@"NSOperationQueue"
@"DYPMTLShaderProfilerHelper"
@"NSDictionary"
@"DYMTLShaderProfilerResult"
@"NSOperation"
{WorkloadGPUTimelineInfo="mGPUTimelineInfos"{vector<GPUTimelineInfo, std::__1::allocator<GPUTimelineInfo>>="__begin_"^{GPUTimelineInfo}"__end_"^{GPUTimelineInfo}"__end_cap_"{__compressed_pair<GPUTimelineInfo *, std::__1::allocator<GPUTimelineInfo>>="__value_"^{GPUTimelineInfo}}}"aggregatedGPUTimelineInfo"{AggregatedGPUTimelineInfo="aggregatedGPUTimelineInfo"{GPUTimelineInfo="nPeriodicSamples"I"timestamps"@"NSData""derivedCounters"@"NSData""derivedCounterNames"@"NSArray""activeShadersPerPeriodicSample"{vector<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>, std::__1::allocator<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>>>="__begin_"^{vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>}"__end_"^{vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>}"__end_cap_"{__compressed_pair<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>> *, std::__1::allocator<std::__1::vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>>>="__value_"^{vector<PipelineStateInfo, std::__1::allocator<PipelineStateInfo>>}}}"encoderTimeline"{vector<EncoderTimelineInfo, std::__1::allocator<EncoderTimelineInfo>>="__begin_"^{EncoderTimelineInfo}"__end_"^{EncoderTimelineInfo}"__end_cap_"{__compressed_pair<EncoderTimelineInfo *, std::__1::allocator<EncoderTimelineInfo>>="__value_"^{EncoderTimelineInfo}}}}"perRingSampledDerivedCounters"@"NSArray""coreCounts"@"NSArray""activeShadersPerPeriodicSample"{vector<std::__1::vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>, std::__1::allocator<std::__1::vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>>>="__begin_"^{vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>}"__end_"^{vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>}"__end_cap_"{__compressed_pair<std::__1::vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>> *, std::__1::allocator<std::__1::vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>>>="__value_"^{vector<PipelineStateInfoMasks, std::__1::allocator<PipelineStateInfoMasks>>}}}}}
@"NSString"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v32@0:8@16q24
@24@0:8q16
v24@0:8q16
v24@0:8@?16
^{_IntKeyedDictionaryPrivate={unordered_map<long long, id<NSObject>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, id<NSObject>>>>={__hash_table<std::__1::__hash_value_type<long long, id<NSObject>>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, id<NSObject>>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, id<NSObject>>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, id<NSObject>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, id<NSObject>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, id<NSObject>>, std::__1::hash<long long>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, id<NSObject>>, std::__1::equal_to<long long>, true>>=f}}}}
q16@0:8
@?16@0:8
I16@0:8
i16@0:8
v36@0:8@16@24c32
v32@0:8@16@?24
v48@0:8@16@24@32^v40
@"NSTimer"
@"NSCondition"
@"NSError"
@32@0:8@16@?24
@"NSObject<OS_dispatch_queue>"
@20@0:8i16
@28@0:8i16@20
@36@0:8i16@20@28
@24@0:8i16c20
@32@0:8i16@20c28
@24@0:8^{_NSZone=}16
v32@0:8I16I20@24
v20@0:8I16
I24@0:8@16
Q24@0:8@16
d24@0:8@16
@"NSData"
@"GTTransport_replayer"
{atomic<int>="__a_"{__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int>>="__a_value"Ai}}
v24@0:8I16I20
B32@0:8@16^@24
q32@0:8@16^@24
v20@0:8c16
c64@0:8@16@24^@32@40Q48@?56
c40@0:8@16@24^@32
c56@0:8@16^@24@32Q40@?48
c32@0:8@16^@24
c52@0:8i16^@20@28Q36@?44
c28@0:8i16^@20
@"NSURL"
{atomic<unsigned int>="__a_"{__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>>="__a_value"AI}}
@"NSMutableSet"
@"GTIntKeyedDictionary_replayer"
@"NSData"16@0:8
r^v16@0:8
@32@0:8{_NSRange=QQ}16
@"GTVMBuffer_replayer"
@"<GTVMBufferSubRegion>"32@0:8{_NSRange=QQ}16
@24@0:8^{VMBuffer=QQQQQQ}16
^{VMBuffer=QQQQQQ}16@0:8
^{VMBuffer=QQQQQQ}
q32@0:8^v16Q24
q32@0:8r^v16Q24
q32@0:8^{dy_transport_message_unpack_s={dy_transport_message_header=IIIIII}IIQQB}16@?24
q24@0:8^@16
^{dy_transport_message_unpack_s={dy_transport_message_header=IIIIII}IIQQB}
@"<GTVMBuffer>"
[3{iovec="iov_base"^v"iov_len"Q}]
[3@"NSData"]
@"NSObject<OS_dispatch_semaphore>"
@"GTTransportMessage_replayer"
@24@0:8i16I20
Q24@0:8Q16
^v36@0:8i16Q20^@28
c48@0:8^^{sm_region_header}16Q24r*32^@40
c24@0:8^@16
v32@0:8r^v16q24
v32@0:8^v16Q24
^{sm_region_header={atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>>=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>>=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>>=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>>=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>>=AI}}{atomic<unsigned int>={__cxx_atomic_impl<unsigned int, std::__1::__cxx_atomic_base_impl<unsigned int>>=AI}}II}
@"GTBaseStreamTransport_replayer"
[64c]
v20@0:8i16
@"NSObject<OS_dispatch_source>"
@"GTSharedMemoryTransport_replayer"
{CATransform3D=dddddddddddddddd}16@0:8
v144@0:8{CATransform3D=dddddddddddddddd}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
v32@0:8{CGPoint=dd}16
d16@0:8
v24@0:8d16
B16@0:8
v20@0:8B16
{CATransform3D="m11"d"m12"d"m13"d"m14"d"m21"d"m22"d"m23"d"m24"d"m31"d"m32"d"m33"d"m34"d"m41"d"m42"d"m43"d"m44"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
{CGPoint="x"d"y"d}
@"<MTLTexture>"
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16d48
v32@0:8@16c24c28
v32@0:8@16I24c28
@"GTMTLTextureRenderEncoderCommand"
@40@0:8@16@24Q32
v248@0:8@16I24c28@32Q40{CATransform3D=dddddddddddddddd}48{CGPoint=dd}176{CGRect={CGPoint=dd}{CGSize=dd}}192{CGSize=dd}224d240
v248@0:8@16c24c28@32Q40{CATransform3D=dddddddddddddddd}48{CGPoint=dd}176{CGRect={CGPoint=dd}{CGSize=dd}}192{CGSize=dd}224d240
v64@0:8@16@24Q32{CGSize=dd}40d56
v40@0:8@16@24@32
@"MTLRenderPipelineDescriptor"
{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24@0:8^{OpaqueJSString=}16
{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24@0:8^{OpaqueJSValue=}16
v40@0:8@16^I24Q32
^{OpaqueJSValue=}24@0:8@16
v40@0:8@16^Q24Q32
c32@0:8@16@24
d32@0:8@16@24
^{OpaqueJSString=}24@0:8r*16
d24@0:8r*16
v32@0:8r*16d24
c32@0:8r*16@24
@24@0:8r*16
{unordered_map<const char *, OpaqueJSValue *, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, OpaqueJSValue *>>>="__table_"{__hash_table<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, OpaqueJSValue *>, std::__1::hash<const char *>, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, OpaqueJSValue *>, std::__1::equal_to<const char *>, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, OpaqueJSValue *>>>="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *> *>>>="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *>>>="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSValue *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, OpaqueJSValue *>, std::__1::hash<const char *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, OpaqueJSValue *>, std::__1::equal_to<const char *>, true>>="__value_"f}}}
{unordered_map<const char *, OpaqueJSString *, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, OpaqueJSString *>>>="__table_"{__hash_table<std::__1::__hash_value_type<const char *, OpaqueJSString *>, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, OpaqueJSString *>, std::__1::hash<const char *>, true>, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, OpaqueJSString *>, std::__1::equal_to<const char *>, true>, std::__1::allocator<std::__1::__hash_value_type<const char *, OpaqueJSString *>>>="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *> *>>>="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *>>>="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<const char *, OpaqueJSString *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<const char *, std::__1::__hash_value_type<const char *, OpaqueJSString *>, std::__1::hash<const char *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<const char *, std::__1::__hash_value_type<const char *, OpaqueJSString *>, std::__1::equal_to<const char *>, true>>="__value_"f}}}
^{OpaqueJSValue=}
@"JSVirtualMachine"
@"JSContext"
@"GTMTLReplayActivity"
@20@0:8I16
@28@0:8r^{GTResourceDownloaderRequest=QQQ*(?={?=QQ}{?=SS[3S][3S]IIISCC}{?=II})}16i24
r^{GTResourceDownloaderRequest=QQQ*(?={?=QQ}{?=SS[3S][3S]IIISCC}{?=II})}
@32@0:8{?=II}16{?=II}24
{?="function"I"subCommand"I}
@40@0:8@16Q24Q32
@"NSArray"
@24@0:8{?=II}16
v28@0:8@16I24
v32@0:8@16Q24
v44@0:8Q16r*24I32@36
v28@0:8r^{GTResourceDownloaderRequest=QQQ*(?={?=QQ}{?=SS[3S][3S]IIISCC}{?=II})}16i24
v32@0:8{?=II}16{?=II}24
v24@0:8{?=II}16
@"NSObject<OS_os_log>"
B28@0:8I16@20
{vector<std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>, std::__1::allocator<std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>="__begin_"^{unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>}"__end_"^{unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>}"__end_cap_"{__compressed_pair<std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>> *, std::__1::allocator<std::__1::unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>>>="__value_"^{unordered_set<unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<unsigned int>>}}}
{unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>>="__table_"{__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>>="__value_"f}}}
{vector<std::__1::queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::allocator<std::__1::queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>>>>="__begin_"^{queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>>}"__end_"^{queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>>}"__end_cap_"{__compressed_pair<std::__1::queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>> *, std::__1::allocator<std::__1::queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>>>>="__value_"^{queue<unsigned int, std::__1::deque<unsigned int, std::__1::allocator<unsigned int>>>}}}
{vector<std::__1::pair<NSDictionary *, NSArray *>, std::__1::allocator<std::__1::pair<NSDictionary *, NSArray *>>>="__begin_"^{pair<NSDictionary *, NSArray *>}"__end_"^{pair<NSDictionary *, NSArray *>}"__end_cap_"{__compressed_pair<std::__1::pair<NSDictionary *, NSArray *> *, std::__1::allocator<std::__1::pair<NSDictionary *, NSArray *>>>="__value_"^{pair<NSDictionary *, NSArray *>}}}
{atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__1::__cxx_atomic_base_impl<bool>>="__a_value"AB}}
{unique_ptr<GRCPerFrameData, std::__1::default_delete<GRCPerFrameData>>="__ptr_"{__compressed_pair<GRCPerFrameData *, std::__1::default_delete<GRCPerFrameData>>="__value_"^{GRCPerFrameData}}}
@"<MTLHeap>"16@0:8
v32@0:8{_NSRange=QQ}16
@"<MTLIndirectRenderCommand>"24@0:8Q16
@"<MTLIndirectComputeCommand>"24@0:8Q16
{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}}16@0:8
v64@0:8{DYShaderProfilerTiming={Statistics=ddd}{Statistics=ddd}}16
{DYShaderProfilerTiming="_cycle"{Statistics="average"d"min"d"max"d}"_time"{Statistics="average"d"min"d"max"d}}
@"DYShaderProfilerProgramInfo"
@"NSMutableData"
@"DYShaderAnalyzerResult"
{unordered_map<unsigned long long, unsigned int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned int>>>="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>>="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned int>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::hash<unsigned long long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned int>, std::__1::equal_to<unsigned long long>, true>>="__value_"f}}}
@"NSNumber"
{InstructionPCStatInfo=^{ShaderBinaryStatsInfo}IIb27b5dd{vector<DYMTLShaderProfilerGRCProcessedUSCSample, std::__1::allocator<DYMTLShaderProfilerGRCProcessedUSCSample>>=^{DYMTLShaderProfilerGRCProcessedUSCSample}^{DYMTLShaderProfilerGRCProcessedUSCSample}{__compressed_pair<DYMTLShaderProfilerGRCProcessedUSCSample *, std::__1::allocator<DYMTLShaderProfilerGRCProcessedUSCSample>>=^{DYMTLShaderProfilerGRCProcessedUSCSample}}}}16@0:8
{InstructionPCStatInfo="shaderBinaryStats"^{ShaderBinaryStatsInfo}"limiterIndex"I"batchId"I"frameIndex"b27"ringBufferIndex"b5"costFactor"d"cost"d"samples"{vector<DYMTLShaderProfilerGRCProcessedUSCSample, std::__1::allocator<DYMTLShaderProfilerGRCProcessedUSCSample>>="__begin_"^{DYMTLShaderProfilerGRCProcessedUSCSample}"__end_"^{DYMTLShaderProfilerGRCProcessedUSCSample}"__end_cap_"{__compressed_pair<DYMTLShaderProfilerGRCProcessedUSCSample *, std::__1::allocator<DYMTLShaderProfilerGRCProcessedUSCSample>>="__value_"^{DYMTLShaderProfilerGRCProcessedUSCSample}}}}
v48@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16^I24r^{vector<ShaderProfilerUSCSampleInfo, std::__1::allocator<ShaderProfilerUSCSampleInfo>>=^{ShaderProfilerUSCSampleInfo}^{ShaderProfilerUSCSampleInfo}{__compressed_pair<ShaderProfilerUSCSampleInfo *, std::__1::allocator<ShaderProfilerUSCSampleInfo>>=^{ShaderProfilerUSCSampleInfo}}}32I40i44
I40@0:8r^{ShaderProfilerUSCSampleInfo=IIIII(?=II)(?={SampleNormFactor=b12b12b12b2b26}Q)II}16Q24Q32
v44@0:8^I16I24^{vector<ShaderProfilerUSCSampleInfo, std::__1::allocator<ShaderProfilerUSCSampleInfo>>=^{ShaderProfilerUSCSampleInfo}^{ShaderProfilerUSCSampleInfo}{__compressed_pair<ShaderProfilerUSCSampleInfo *, std::__1::allocator<ShaderProfilerUSCSampleInfo>>=^{ShaderProfilerUSCSampleInfo}}}28i36I40
v36@0:8@16r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>>={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}24I32
v32@0:8@16I24i28
d40@0:8^d16Q24r^{vector<unsigned int, std::__1::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>=^I}}32
d44@0:8^d16Q24r^{vector<unsigned int, std::__1::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>=^I}}32I40
d48@0:8^d16Q24r^{vector<unsigned int, std::__1::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>=^I}}32I40I44
v68@0:8^Q16I24^{unordered_map<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>>>={__hash_table<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>, std::__1::equal_to<unsigned int>, true>>=f}}}28i36I40I44I48^{unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>>={__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>>=f}}}52@60
v68@0:8^{unordered_map<unsigned int, double, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, double>>>={__hash_table<std::__1::__hash_value_type<unsigned int, double>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, double>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, double>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, double>, std::__1::equal_to<unsigned int>, true>>=f}}}16I24Q28^{vector<unsigned int, std::__1::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>=^I}}36^{vector<BufferView<unsigned long long>, std::__1::allocator<BufferView<unsigned long long>>>=^{BufferView<unsigned long long>}^{BufferView<unsigned long long>}{__compressed_pair<BufferView<unsigned long long> *, std::__1::allocator<BufferView<unsigned long long>>>=^{BufferView<unsigned long long>}}}44r^{unordered_map<unsigned int, BatchInfo, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, BatchInfo>>>={__hash_table<std::__1::__hash_value_type<unsigned int, BatchInfo>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, BatchInfo>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, BatchInfo>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, BatchInfo>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, BatchInfo>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, BatchInfo>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, BatchInfo>, std::__1::equal_to<unsigned int>, true>>=f}}}52^{vector<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>> *, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>> *>>=^^{vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>}^^{vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>}{__compressed_pair<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>> **, std::__1::allocator<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>> *>>=^^{vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>}}}60
v32@0:8^{vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>=^{vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>}^{vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>}{__compressed_pair<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>> *, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>=^{vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>}}}16I24I28
v76@0:8@16^{vector<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>, std::__1::allocator<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>>=^{vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>}^{vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>}{__compressed_pair<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>> *, std::__1::allocator<std::__1::vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>>>=^{vector<DYMTLShaderProfilerProgramAddress *, std::__1::allocator<DYMTLShaderProfilerProgramAddress *>>}}}24I32^{DYMTLShaderProfilerProgramAddress=(?={?=b8b24I}{?=b8b24I})QQ}36^Q44I52^{vector<unsigned int, std::__1::allocator<unsigned int>>=^I^I{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>=^I}}56^{unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>>={__hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>>={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>>>={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>>=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>>=f}}}64i72
{unordered_map<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>>>="__table_"{__hash_table<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>>>="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *> *>>>="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *>>>="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, std::__1::hash<long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unique_ptr<ShaderBinaryStatsInfo, std::__1::default_delete<ShaderBinaryStatsInfo>>>, std::__1::equal_to<long>, true>>="__value_"f}}}
{vector<std::__1::vector<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>, std::__1::allocator<std::__1::vector<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>>>="__begin_"^{vector<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>}"__end_"^{vector<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>}"__end_cap_"{__compressed_pair<std::__1::vector<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>> *, std::__1::allocator<std::__1::vector<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>>>="__value_"^{vector<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<ShaderBinaryStatsInfo *, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>>}}}
{unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>>>="__table_"{__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>>>="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *> *>>>="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *>>>="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::__hash_value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPUToolsPlatformLLVMShaderProfilerHelper, std::__1::default_delete<GPUToolsPlatformLLVMShaderProfilerHelper>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, true>>="__value_"f}}}
{vector<std::__1::vector<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>>>, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>>>>>="__begin_"^{vector<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>>>}"__end_"^{vector<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>>>}"__end_cap_"{__compressed_pair<std::__1::vector<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>>> *, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>>>>>="__value_"^{vector<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>, std::__1::default_delete<std::__1::vector<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>, std::__1::allocator<std::__1::vector<std::__1::pair<unsigned int, double>, std::__1::allocator<std::__1::pair<unsigned int, double>>>>>>>>>}}}
{vector<std::__1::vector<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>>>, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>>>>>="__begin_"^{vector<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>>>}"__end_"^{vector<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>>>}"__end_cap_"{__compressed_pair<std::__1::vector<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>>> *, std::__1::allocator<std::__1::vector<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>>>>>="__value_"^{vector<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>, std::__1::allocator<std::__1::unique_ptr<std::__1::vector<double, std::__1::allocator<double>>, std::__1::default_delete<std::__1::vector<double, std::__1::allocator<double>>>>>>}}}
{vector<std::__1::unordered_map<unsigned int, TimeStats, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TimeStats>>>, std::__1::allocator<std::__1::unordered_map<unsigned int, TimeStats, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TimeStats>>>>>="__begin_"^{unordered_map<unsigned int, TimeStats, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TimeStats>>>}"__end_"^{unordered_map<unsigned int, TimeStats, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TimeStats>>>}"__end_cap_"{__compressed_pair<std::__1::unordered_map<unsigned int, TimeStats, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TimeStats>>> *, std::__1::allocator<std::__1::unordered_map<unsigned int, TimeStats, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TimeStats>>>>>="__value_"^{unordered_map<unsigned int, TimeStats, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TimeStats>>>}}}
{vector<TimeStats, std::__1::allocator<TimeStats>>="__begin_"^{TimeStats}"__end_"^{TimeStats}"__end_cap_"{__compressed_pair<TimeStats *, std::__1::allocator<TimeStats>>="__value_"^{TimeStats}}}
{vector<unsigned int, std::__1::allocator<unsigned int>>="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int>>="__value_"^I}}
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
v88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48@80
v24@0:8@"<MTLDevice>"16
v24@0:8@"GTMTLTextureRenderEncoder"16
v88@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{CGRect={CGPoint=dd}{CGSize=dd}}48@"NSDictionary"80
@"MTKView"
{GTMTLReplayClient="pool"^{apr_pool_t}"replayController"^{GTMTLReplayController}"sessionId"Q"config"{?="hostInfoType"Q"profilingSendPeriod"Q"profilingFlags"Q"xcodeOverrideScaleTessFactor"d"traceMode"I"xcodeOverrideFlags"I"includeBacktraceInFbufs"b1"_padding"b63}"state"{?="targetIndex"{?="function"I"subCommand"I}"wireframeLineColor"I"outlineColor"I"wireframeLineWidth"f"enableDrawCallPresent"b1"enableWireframePresent"b1"enableOutlinePresent"b1"disablePresent"b1"_padding"b28}"generateThumbnails"@"NSMutableArray""wireframe"{?="textureDescriptor"@"MTLTextureDescriptor""renderPassDescriptor"@"MTLRenderPassDescriptor""renderPipelineDescriptor"@"MTLRenderPipelineDescriptor""texture"@"<MTLTexture>""textureSampleCount"Q"outlinePipelineState"@"<MTLComputePipelineState>""postVertexDumpBuffer"@"<MTLBuffer>""resizeRenderPipelineDescriptor"@"MTLRenderPipelineDescriptor""resizeColorFunction"@"<MTLFunction>""resizeColorUintFunction"@"<MTLFunction>""resizeColorSintFunction"@"<MTLFunction>""resizeDepthFunction"@"<MTLFunction>""resizeStencilFunction"@"<MTLFunction>""upscaleSamplerState"@"<MTLSamplerState>""downscaleSamplerState"@"<MTLSamplerState>""quadData"@"<MTLBuffer>""resizeRenderPipelineStates"@"NSMutableDictionary"}"operationQueues"{GTMTLReplayOperationQueues="serialQueue"@"NSOperationQueue""parallelQueue"@"NSOperationQueue"}"cancelableOperations"@"NSMutableArray""displayDelegate"@"<GTMTLReplayDisplayDelegate>"}
@"Renderer"
v40@0:8@16{CGSize=dd}24
v40@0:8@"MTKView"16{CGSize=dd}24
v24@0:8@"MTKView"16
@"<MTLCommandQueue>"
@"GTMTLTextureRenderEncoder"
@"GTMTLTextureRenderer"
Q44@0:8@16@24@32c40
c28@0:8@16c24
c40@0:8@16@24@?32
Q24@0:8@"NSApplication"16
v32@0:8@"NSApplication"16@"NSArray"24
c32@0:8@"NSApplication"16@"NSString"24
c24@0:8@"NSApplication"16
c32@0:8@16@"NSString"24
Q44@0:8@"NSApplication"16@"NSArray"24@"NSDictionary"32c40
c28@0:8@"NSApplication"16c24
@"NSMenu"24@0:8@"NSApplication"16
@"NSError"32@0:8@"NSApplication"16@"NSError"24
v32@0:8@"NSApplication"16@"NSData"24
v32@0:8@"NSApplication"16@"NSError"24
v32@0:8@"NSApplication"16@"NSDictionary"24
v32@0:8@"NSApplication"16@"NSCoder"24
c40@0:8@"NSApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"NSApplication"16@"NSString"24@"NSError"32
v32@0:8@"NSApplication"16@"NSUserActivity"24
v32@0:8@"NSApplication"16@"CKShareMetadata"24
v24@0:8@"NSNotification"16
^{CGColorSpace=}16@0:8
v24@0:8^{CGColorSpace=}16
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
^{CGColorSpace=}
{CGSize="width"d"height"d}
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@"<MTLBuffer>"24@0:8@"<MTLDevice>"16
@"<MTLBuffer>"16@0:8
v40@0:8r^v16Q24Q32
v32@0:8Q16Q24
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v40@0:8r^@16Q24Q32
v32@0:8r^@16Q24
v40@0:8@16@24Q32
v24@0:8@"<MTLComputePipelineState>"16
v40@0:8@"<MTLBuffer>"16Q24Q32
v32@0:8@"<MTLVisibleFunctionTable>"16Q24
v32@0:8@"<MTLIntersectionFunctionTable>"16Q24
v32@0:8@"<MTLAccelerationStructure>"16Q24
v32@0:8@"<MTLTexture>"16Q24
v32@0:8@"<MTLSamplerState>"16Q24
v40@0:8@"<MTLSamplerState>"16f24f28Q32
v32@0:8@"<MTLBuffer>"16Q24
v56@0:8@"<MTLBuffer>"16Q24{?=QQQ}32
v32@0:8@"<MTLResource>"16Q24
v24@0:8@"<MTLHeap>"16
v40@0:8@"<MTLIndirectCommandBuffer>"16@"<MTLBuffer>"24Q32
v64@0:8{?=dddddd}16
v32@0:8r^{?=dddddd}16Q24
v32@0:8Q16r^{?=II}24
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8r^{?=QQQQ}16Q24
v32@0:8f16f20f24f28
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v56@0:8Q16@24Q32@40Q48
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v72@0:8Q16@24Q32@40Q48@56Q64
v40@0:8{?=QQQ}16
v48@0:8r^@16Q24Q32Q40
v24@0:8@"<MTLRenderPipelineState>"16
v24@0:8@"<MTLDepthStencilState>"16
v64@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56
v56@0:8Q16Q24Q32@"<MTLBuffer>"40Q48
v80@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56q64Q72
v40@0:8Q16@"<MTLBuffer>"24Q32
v64@0:8Q16Q24@"<MTLBuffer>"32Q40@"<MTLBuffer>"48Q56
v32@0:8@"<MTLFence>"16Q24
v72@0:8Q16Q24Q32@"<MTLBuffer>"40Q48Q56Q64
v56@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48
v88@0:8Q16Q24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64Q72Q80
v72@0:8Q16@"<MTLBuffer>"24Q32@"<MTLBuffer>"40Q48@"<MTLBuffer>"56Q64
v40@0:8@"<MTLResource>"16Q24Q32
v32@0:8@"<MTLHeap>"16Q24
v64@0:8@16Q24r^{?={?=QQQ}{?=QQQ}}32r^Q40r^Q48Q56
v96@0:8@16Q24{?={?=QQQ}{?=QQQ}}32Q80Q88
v48@0:8@16Q24@32Q40
v64@0:8@"<MTLTexture>"16Q24r^{?={?=QQQ}{?=QQQ}}32r^Q40r^Q48Q56
v96@0:8@"<MTLTexture>"16Q24{?={?=QQQ}{?=QQQ}}32Q80Q88
v48@0:8@"<MTLTexture>"16Q24@"<MTLBuffer>"32Q40
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"MTLSharedTextureHandle"16@0:8
@"<MTLTexture>"24@0:8@"<MTLDevice>"16
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
v48@0:8@16@24@32Q40
v24@0:8@"<MTLMotionEstimationPipeline>"16
v48@0:8@"<MTLTexture>"16@"<MTLTexture>"24@"<MTLBuffer>"32Q40
v24@0:8#16
I28@0:8Q16B24
@28@0:8Q16B24

