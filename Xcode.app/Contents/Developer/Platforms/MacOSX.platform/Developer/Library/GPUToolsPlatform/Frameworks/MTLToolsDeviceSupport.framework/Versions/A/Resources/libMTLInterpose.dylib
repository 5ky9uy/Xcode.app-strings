St12length_error
St11logic_error
NSt3__117bad_function_callE
St9exception
class
isKindOfClass:
device
defaultFbufStream
pixelFormat
framebufferOnly
drawableSize
texture
init
setDevice:
setBounds:
setFrame:
setDrawableSize:
setContentsScale:
setPixelFormat:
setFramebufferOnly:
nextDrawable
setPresentsWithTransaction:
present
presentAtTime:
graphicsSemaphore
traceMode
originalObject
activeCaptureDescriptor
includeBacktraceInFbufs
contentsScale
bounds
superlayer
window
frame
level
styleMask
baseObject
setLabel:
UTF8String
dealloc
function
reflection
arguments
isActive
type
dataTypeDescription
elementIsArgumentBuffer
respondsToSelector:
index
enumerateObjectsUsingBlock:
setComputePipelineState:
setBytes:length:atIndex:
setBuffer:offset:atIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
stringWithFormat:
setTexture:atIndex:
setTextures:withRange:
setSamplerState:atIndex:
setSamplerStates:withRange:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setThreadgroupMemoryLength:atIndex:
setStageInRegion:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
updateFence:
waitForFence:
useResource:usage:
useResources:count:usage:
useHeap:
useHeaps:count:
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
insertDebugSignpost:
pushDebugGroup:
popDebugGroup
strongParent
addMarkedComputeResources:
endEncoding
.cxx_destruct
.cxx_construct
argumentsIABIndices
setArgumentsIABIndices:
argumentsParentFunction
setArgumentsParentFunction:
ancestorMap
setAncestorMap:
callIndex
setCallIndex:
_helper
_harvesterMarker
_argumentsParentFunction
_callIndex
_argumentsIABIndices
_ancestorMap
synchronizeResource:
synchronizeTexture:slice:level:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
generateMipmapsForTexture:
fillBuffer:range:value:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
addMarkedBlitResources:
setMetalAssertionsEnabled:
newCommandQueue
alloc
initWithBaseObject:parent:
newCommandQueueWithMaxCommandBufferCount:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newHeapWithDescriptor:
newTextureWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newLibraryWithData:error:
newFence
supportsTextureSampleCount:
newArgumentEncoderWithArguments:
unmapShaderSampleBuffer
minLinearTextureAlignmentForPixelFormat:
supportsSampleCount:
newCommandQueueWithDescriptor:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
unwrapMTLRenderPipelineDescriptor:
newRenderPipelineStateWithDescriptor:completionHandler:
unwrapMTLComputePipelineDescriptor:
newComputePipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:completionHandler:
newComputePipelineStateWithDescriptor:options:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newDepthStencilStateWithDescriptor:
newSamplerStateWithDescriptor:
newDefaultLibrary
mainBundle
pathForResource:ofType:
label
newLibraryWithFile:error:
newLibraryWithURL:error:
path
newBufferWithLength:options:
contents
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDefaultLibraryWithBundle:error:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
count
youShallNotPass
setYouShallNotPass:
streams
setStreams:
blitRequest
setBlitRequest:
initialResources
setInitialResources:
usedResources
setUsedResources:
generatedResources
setGeneratedResources:
harvestAtNextCommitResources
setHarvestAtNextCommitResources:
debugDevice
setDebugDevice:
unused
setUnused:
_formatBuffer
_youShallNotPass
_streams
_blitRequest
_initialResources
_usedResources
_generatedResources
_harvestAtNextCommitResources
_debugDevice
_unused
setDescriptor:
setReflection:
setFunction:
resetPointerToUrlAssociation:
setWasHarvested:
setParentDevice:
maxAvailableSizeWithAlignment:
parentDevice
setPurgeableState:
debugHeap
setDebugHeap:
wasHarvested
wasMutated
setWasMutated:
isAppleInternal
setIsAppleInternal:
_wasHarvested
_wasMutated
_isAppleInternal
_debugHeap
_parentDevice
initWithBaseObject:parent:lockingPolicy:
setBaseObject:
insert:object:parent:
initWithDevice:
name
hash
numberWithUnsignedInteger:
setObject:forKey:
parent
baseObjectWithClass:
limits
viewports
setDefaultViewport:
viewport
descriptor
colorAttachments
objectAtIndexedSubscript:
setIsColorAttachment:
resolveTexture
renderCommandEncoders
enumeratePointersUsingBlock:
setPipelines:
visitDevice:
visitHeap:
visitBuffer:
visitDepthStencilState:
visitTexture:
visitSamplerState:
visitCommandQueue:
visitFence:
visitFunction:
visitArgumentEncoder:
visitIndirectArgumentEncoder:
visitLibrary:
visitCommandBuffer:
visitRenderCommandEncoder:
visitComputeCommandEncoder:
visitBlitCommandEncoder:
visitParallelRenderCommandEncoder:
visitRenderPipelineState:
visitComputePipelineState:
_currentDevice
_currentBuffer
_currentCommandQueue
_currentCommandBuffer
_currentLibrary
vertexFunction
vertexArguments
fragmentFunction
fragmentArguments
setRenderPipelineState:
setVertexBytes:length:atIndex:
setVertexBuffer:offset:atIndex:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setVertexSamplerState:atIndex:
setVertexSamplerStates:withRange:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setViewport:
setFrontFacingWinding:
setCullMode:
setDepthClipMode:
setDepthBias:slopeScale:clamp:
setScissorRect:
setTriangleFillMode:
setFragmentBytes:length:atIndex:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentTexture:atIndex:
setFragmentTextures:withRange:
setFragmentSamplerState:atIndex:
setFragmentSamplerStates:withRange:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setBlendColorRed:green:blue:alpha:
setDepthStencilState:
setStencilReferenceValue:
setStencilFrontReferenceValue:backReferenceValue:
setVisibilityResultMode:offset:
setColorStoreAction:atIndex:
setDepthStoreAction:
setStencilStoreAction:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
textureBarrier
updateFence:afterStages:
waitForFence:beforeStages:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
setLineWidth:
addMarkedRenderResources:
setViewports:count:
setScissorRects:count:
vertexArgumentsIABIndices
setVertexArgumentsIABIndices:
vertexArgumentsParentFunction
setVertexArgumentsParentFunction:
fragmentArgumentsIABIndices
setFragmentArgumentsIABIndices:
fragmentArgumentsParentFunction
setFragmentArgumentsParentFunction:
_vertexArgumentsParentFunction
_fragmentArgumentsParentFunction
_vertexArgumentsIABIndices
_fragmentArgumentsIABIndices
notifySubmissionForEyeSPI:iosurface:bounds:submitFlags:
state
lockGraphicsAndWaitForThreads:
unlockGraphics
setFromBuffer:
setFromTexture:
setFromHeap:
fromHeap
fromBuffer
fromTexture
iosurface
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
makeAliasable
isAliasable
cpuCacheMode
storageMode
heap
allocatedSize
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
buffer
bufferOffset
bufferBytesPerRow
iosurfacePlane
textureType
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
isFramebufferOnly
didModifyRange:
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
length
loadAction
storeAction
wasLoaded
wasStored
setWasLoaded:
setWasStored:
depthAttachment
stencilAttachment
visibilityResultBuffer
countByEnumeratingWithState:objects:count:
commandQueues
commandBufferWithUnretainedReferences
blitCommandEncoder
commit
waitUntilCompleted
uniqueIdentifier
commandBuffers
computeCommandEncoders
parallelRenderCommandEncoders
access
computeFunction
indirectArgumentBufferDecodingData
textures
buffers
doesAliasResource:
size
setSize:
setCpuCacheMode:
setStorageMode:
usedSize
options
accessHistoryEventsUsingBlock:
latestEvent
oldestEvent
responsibleProcess
resourceUsage
gpuAddress
wasRestored
isContentExposedToCPU
isRangeModified
resetRangeModified
setWasRestored:
debugBuffer
offset
bytesPerRow
debugTexture
plane
views
isDrawable
debugLibrary
code
compileOptions
functions
functionConstantsDictionary
newFunctionWithName:
constantValues
filePath
debugPipeline
imageFilterFunctions
imageFilterFunctionInfo
debugQueue
maxCommandBufferCount
isProfilingEnabled
backgroundTrackingPID
skipRender
executionEnabled
copyDebugMarkers
range
enumerateVertexBuffersUsingBlock:
enumerateFragmentBuffersUsingBlock:
renderPipelineState
enumerateBuffersUsingBlock:
computePipelineState
isLabelAppleInternal:
setProfilingEnabled:
enqueue
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
waitUntilScheduled
addCompletedHandler:
computeCommandEncoder
debugCommandEncoder
commitAndHold
unwrapMTLRenderPassDescriptor:
renderCommandEncoderWithDescriptor:
parallelRenderCommandEncoderWithDescriptor:
setBackgroundTrackingPID:
setSkipRender:
setExecutionEnabled:
insertDebugCaptureBoundary
finish
commandBuffer
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
constantDataAtIndex:
newArgumentEncoderForBufferAtIndex:
setDebugPipeline:
_descriptor
_reflection
_function
_debugPipeline
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
initWithBaseObject:parent:functions:
newFunctionWithName:constantValues:error:
newFunctionWithName:constantValues:completionHandler:
_insertInstanceOfClass:withParent:intoObject:
setDebugBuffer:
setIsContentExposedToCPU:
setDebugTexture:
setDebugQueue:
setDebugFunction:
setDebugLibrary:
isEqualToString:
setComputeFunction:
pipelines
_pipelines
numberWithBool:
isCommitted
notifyCommandBufferCaptured
commandQueue
addUsedResources:
_usedResourcesLock
_ancestorMaps
_usedIndirectArgumentBuffers
_hasPresentDrawable
setResponsibleProcess:
newTiledTextureWithDescriptor:offset:bytesPerRow:
isPurgeable
_rangeModified
_wasRestored
_isContentExposedToCPU
_debugBuffer
_fromHeap
acceleratorPort
addObject:
setObject:forKeyedSubscript:
initWithTransport:
connect
boolResult
error
initWithNumberOfSubLayersToRemove:
_removeBaseObjectsFromObject:
_numLayers
xcodeOverrideFlags
numberWithUnsignedLongLong:
objectForKeyedSubscript:
copy
isBlendingEnabled
setBlendingEnabled:
tessellationPartitionMode
patchType
maxTessellationFactor
setMaxTessellationFactor:
isTessellationFactorScaleEnabled
setTessellationFactorScaleEnabled:
xcodeOverrideScaleTessFactor
isColorAttachment
defaultViewport
_currentViewport
_currentFillMode
_currentState
_indexHasRenderPass
_indexIsUsed
_defaultViewport
basicTexture
getTexture:
setBasicTexture:
_debugQueue
renderCommandEncoder
debugFunction
_debugFunction
newExternFunctionWithName:
_debugLibrary
initWithAPI:
initWithCommandQueue:
initWithCaptureScope:
captureDevice
captureCommandQueue
setCaptureCommandQueue:
captureScope
setCaptureScope:
_captureDevice
_captureCommandQueue
_captureScope
setCaptureDevice:
capturedCommandBuffers
setCapturedCommandBuffers:
captureScopeActive
setCaptureScopeActive:
_capturedCommandBuffers
_captureScopeActive
kind
_copyMTLCommandQueueInfos
messageWithKind:objectPayload:
sendMessage:inReplyTo:
attributeForKey:
unsignedIntValue
boolForKey:
uint64ForKey:
setPreviousTraceMode:
setTraceMode:
uint32ForKey:
doubleForKey:
attributes
plistPayload
objectForKey:
defaultManager
isWritableFileAtPath:
processMessage:
atexit
acceptVisitor:
liveDebugging
liveDebuggingCaptureData
initWithData:
sendCaptureData:name:inReplyTo:
stringByAppendingPathComponent:
writeToFile:atomically:
sessionId
initWithObjectsAndKeys:
data
initWithKind:attributes:payload:
_copyDeviceProfiles
_appendLinkTimeLibrary:toVersionsDictionary:
sendMessage:
triggerFrame
activeCaptureState
numberWithUnsignedLong:
dictionaryWithObjectsAndKeys:
notifyUsedDataSentWithDictionary:
notifyAllCaptureMetadataSent
unsignedLongLongValue
queueAddress
array
addObjectsFromArray:
sharedCaptureManager
defaultCaptureScope
setSessionId:
setFramesToCapture:
setTriggerFrame:
boolValue
setSuspendAfterCapture:
setLockGraphicsAfterCapture:
setIsBoundaryLess:
armCaptureWithDescriptor:
setIncludeBacktraceInFbufs:
_inferCaptureDevice
_armCapture
_startCapture
_populateQueueAndThreadLabelMaps
_appendToAllCaptureDataSentMessagePayload:
_appendLinkTimeLibrariesToVersionsDictionary:
_canTriggerCaptureOnNextGraphicsCommand
sendMTLCommandQueueInfoUpdate
_handleTurnOnCapture
_handleCaptureStreamCreated
_handleTurnOffCapture
_armCaptureWithTransportMessage:
startCaptureWithDescriptor:
lastCapturableCommandQueueUsed
setLastCapturableCommandQueueUsed:
_hostCaptureArchivePath
_tempDirectoryPath
_lastCapturableCommandQueueUsed
_includeBacktraceInFbufs
_quicklookData
setLiveDebugging:
initWithDictionary:
archivedDataWithRootObject:
standardUserDefaults
persistentDomainForName:
enumerateKeysAndObjectsUsingBlock:
handleFrameBoundaryCommon
resourceTrackingEndOfFrame
invalidateSavePointerMap:
harvestableTexture:
pipelineStates
libraries
updateLibrary:withIR:isDefault:optionsDict:resultsDict:
updateLibrary:withSource:optionsDict:resultsDict:
initWithKind:attributes:objectPayload:
setLockingPolicy:
isInternalQueue
canBeCaptured
setBoundaryLessCaptureMode:
isBoundaryLess
isOpenGLQueue
deviceAddress
removeObjectForKey:
stringWithUTF8String:
boundaryLessCaptureMode
incrementGlobalFrameCounter
incrementCapturedFramesCounter
numberWithUnsignedInt:
messageWithKind:plistPayload:
startCaptureWithDevice:
startCaptureWithCommandQueue:
startCaptureWithScope:
stopCapture
isCapturing
initWithDevice:commandQueue:
beginScope
endScope
setUnlockGraphicThreadsOnActivateCapture:
setArmPreparedCapture:
triggerArmedCapture
apiLockQueue
graphicsLockWaitQueue
apiLockGroup
setTextureType:
setDepth:
setArrayLength:
setWidth:
setHeight:
setSampleCount:
_device
_textures
_isColorAttachment
_basicTexture
_wasLoaded
_wasStored
_debugTexture
_fromBuffer
_fromTexture
cache
setCache:
_cache
constantValueWithFunctionConstant:
setConstantValue:type:atIndex:
userInfo
hashTableWithOptions:
mapTableWithKeyOptions:valueOptions:
_constantValuesFrom:andSpecializedFunction:
containsObject:
internalPipelineStateLabel
_originalObjectFromMapTable:toolsObject:
setVertexFunction:
setFragmentFunction:
performanceStatistics
computePipelineStates
setOriginalObject:
setPreprocessorMacros:
setFastMathEnabled:
setDebuggingEnabled:
_compileOptionsFromDict:
_updateLibrary:resultsDict:creationBlock:
setType:
setCode:
setCompileOptions:
bytes
C@2d
dealloc
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
C@4dd@4dull
v32@?0@"MTLArgument"8Q16^c24
CU<b>ulul
Ctulul
Culul
C@%llut@%lluul@2ul
Ctul
C@%llut@2ul
Ctfful
C@%llut@%lluf@%lluf@2ul
C@6ul
C@3ul@3ul
Ctul@3ul
C@%llutulul
C@%llutul
argumentsIABIndices
T{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}},N,V_argumentsIABIndices
argumentsParentFunction
T@"<MTLFunction>",N,V_argumentsParentFunction
ancestorMap
T{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}},N,V_ancestorMap
callIndex
TQ,N,V_callIndex
Ctulul@3ul@3ultulul@3ul
Ctululul@3ultulul@3ul
Ctululul@3ultulul@3ulul
Ctulul@3ul@3ultululul
Ctulul@3ul@3ultulululul
Ct@2ulub
Ctultulul
@2ul
CUUul
CU<b>ulUulul
CU<b>ultUulul
CU<b>Ut
CU<b>tt
v24@?0@"<MTLLibrary>"8@"NSError"16
v24@?0@"<MTLRenderPipelineState>"8@"NSError"16
CUultt
v24@?0@"<MTLComputePipelineState>"8@"NSError"16
CUult
v32@?0@"<MTLComputePipelineState>"8@"MTLComputePipelineReflection"16@"NSError"24
v32@?0@"<MTLRenderPipelineState>"8@"MTLRenderPipelineReflection"16@"NSError"24
Ctult
Ctultt
default
metallib
CU<b>t
CU<b>ulult
CitS
CUUt
youShallNotPass
T^{mutex={_opaque_pthread_mutex_t=q[56c]}},N,V_youShallNotPass
streams
T^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}},N,V_streams
blitRequest
T^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}},N,V_blitRequest
initialResources
T^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}},N,V_initialResources
usedResources
T^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=},N,V_usedResources
generatedResources
T^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=},N,V_generatedResources
harvestAtNextCommitResources
T^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=},N,V_harvestAtNextCommitResources
debugDevice
T@"<MTLDevice>",&,N,V_debugDevice
unused
T{MTLHarvesterUnusedResourcesInfo={MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}{MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}},N,V_unused
debugHeap
T@"<MTLHeap>",&,N,V_debugHeap
parentDevice
T@"<MTLDevice>",N,V_parentDevice
wasHarvested
Tc,N,V_wasHarvested
wasMutated
Tc,N,V_wasMutated
isAppleInternal
Tc,N,V_isAppleInternal
v24@?0@"MTLToolsObject"8^c16
C@6d
Cfff
C@4l
Cffff
Cuiui
Culululul
Cululul
Cululultulul
Cululultul
Cululululul
Cululultulullul
Cultul
Culultultul
Cululultululul
Cultultul
Cululultultululul
Cultultultul
CUul
vertexArgumentsIABIndices
T{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}},N,V_vertexArgumentsIABIndices
vertexArgumentsParentFunction
T@"<MTLFunction>",N,V_vertexArgumentsParentFunction
fragmentArgumentsIABIndices
T{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}},N,V_fragmentArgumentsIABIndices
fragmentArgumentsParentFunction
T@"<MTLFunction>",N,V_fragmentArgumentsParentFunction
Cult@4dul
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
label
T@"NSString",C
device
T@"<MTLDevice>",R
cpuCacheMode
storageMode
heap
T@"<MTLHeap>",R
allocatedSize
rootResource
T@"<MTLResource>",R
parentTexture
T@"<MTLTexture>",R
parentRelativeLevel
parentRelativeSlice
buffer
T@"<MTLBuffer>",R
bufferOffset
bufferBytesPerRow
iosurface
T^{__IOSurface=},R
iosurfacePlane
textureType
pixelFormat
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
framebufferOnly
Tc,R,GisFramebufferOnly
length
%@-%p
%@-%@-%p
Ciui
C@6ulululU<b>ululul
CtU<b>ulul
CSuwuw
v16@?0^{Stream=^{VMBuffer}(?=^v^{?})^vQ^{__CFString}@?@?iB}8
GPU Tx
MTLLibrary
MTLHeap
Ciul
CiulU
v24@?0^{HeapHistoryEvent=^{HeapHistoryEvent}^vc}8^{HeapHistoryEvent=^{HeapHistoryEvent}^vc}16
MTLTexture-%p-%lu-%lu
MTLBuffer-%p-@-%p
MTLBuffer
CUulul
MTLTexture
Culul@2ul@2ul
IOSurface-%p-%p-%lu
MTLDepthStencilState
MTLSamplerState
CSUt
MTLFence
MTLRenderPipelineState
MTLComputePipelineState
MTLCommandQueue
CUUUU
CUUU
MTLTexture-%p-%lu-%lu-Fetch
MTLBuffer-%p-Fetch
CS@2ul
v32@?0^{?=ccQ@QQQQQcff}8Q16^c24
descriptor
T@"MTLComputePipelineDescriptor",&,N,V_descriptor
reflection
T@"MTLComputePipelineReflection",&,N,V_reflection
function
T@"<MTLFunction>",&,N,V_function
debugPipeline
T@"<MTLComputePipelineState>",&,N,V_debugPipeline
v24@?0@"<MTLFunction>"8@"NSError"16
ciKernelMain
pipelines
T@"NSMutableDictionary",&,N,V_pipelines
T@"MTLRenderPipelineDescriptor",&,N,V_descriptor
T@"MTLRenderPipelineReflection",&,N,V_reflection
v16@?0@"<MTLCommandBuffer>"8
Commit
C@2ul
wasRestored
Tc,N,V_wasRestored
isContentExposedToCPU
Tc,N,V_isContentExposedToCPU
debugBuffer
T@"<MTLBuffer>",&,N,V_debugBuffer
fromHeap
T@"<MTLHeap>",&,N,V_fromHeap
PerformanceStatistics
v16@?0@"<MTLDevice>"8
PerformanceStatisticsActiveDevices
GT_HOST_URL_MTL
[DYMTLInitPlatform] failed to initialize client
[DYMTLInitPlatform] connection to the host has failed: %s
IOAccelerator
[DYMTLInitPlatform] platform initialization successful
T@"MTLSamplerDescriptor",&,N,V_descriptor
defaultViewport
T{?=dddddd},N,V_defaultViewport
T^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}},N,V_streams
debugQueue
T@"<MTLCommandQueue>",&,N,V_debugQueue
Cult
debugFunction
T@"<MTLFunction>",&,N,V_debugFunction
debugLibrary
T@"<MTLLibrary>",&,N,V_debugLibrary
captureDevice
T@"<MTLDevice>",R,N,V_captureDevice
captureCommandQueue
T@"<MTLCommandQueue>",N,V_captureCommandQueue
captureScope
T@"<MTLCaptureScope>",N,V_captureScope
T@"<MTLDevice>",&,N,V_captureDevice
capturedCommandBuffers
TQ,N,V_capturedCommandBuffers
captureScopeActive
Tc,N,V_captureScopeActive
capture trace mode cannot be set directly; create and start a capture session
HostCaptureArchivePath
v24@?0^{MTLDeviceInfo=@}8^B16
Unknown trace mode: %d
Disk Wx
v16@?0@"DYMTLCommandQueueInfo"8
v16@?0@"DYMTLDeviceProfile"8
v8@?0
device profile
Metal
Frame
CaptureScopeAddress
CaptureCommandQueueAddress
Invalid CommandQueue address, maybe selected queue has been deallocated
v32@?0@"<MTLDevice>"8Q16^c24
CommandQueue not found, maybe selected queue has been deallocated
Serial
-[DYMTLGuestAppClient _armCaptureWithTransportMessage:]
captureDescriptor.sessionId != 0
FrameLimit
TriggerFrame
SuspendAfterCompletion
LockOpenGLAfterCompletion
-[DYMTLGuestAppClient _inferCaptureDevice]
mtlCaptureState.captureDevice
lastCapturableCommandQueueUsed
T@"<MTLCommandQueue>",N,V_lastCapturableCommandQueueUsed
Insert Capture Layer
Capture done
Capture Unused
Capture Finish
resource-stream
v24@?0@"<MTLDevice>"8^c16
MTLUseInterpose
METAL_LOAD_INTERPOSER
com.apple.GPUTools
IgnoreInsertDebugCaptureBoundary
Ignoring insertDebugCaptureBoundary
v32@?0@8@"DYMTLCommandQueueInfo"16^c24
v32@?0@8@"DYMTLDeviceProfile"16^c24
Unsupported resource type: %u
DYMTL_UI_SERVER_CAPTURE
Harvesting
DYResourceType _ValidateIncomingResource(uint32_t)
unsafeResourceType > 0 && unsafeResourceType < kDYMaxResourceTypes
void _GetDeviceAndResource(uint64_t, uint64_t, MTLDebugDevice *__autoreleasing *, __autoreleasing id *)
(uint64_t)[debugDevice originalObject] == deviceID
[debugDevice isKindOfClass:[MTLDebugDevice class]]
frame index
frame duration
timestamp
MTLCaptureManager: startCaptureWithDevice attempted while a capture is active
MTLCaptureManager: startCaptureWithCommandQueue attempted while a capture is active
MTLCaptureManager: startCaptureWithScope attempted while a capture is active
T@"MTLDepthStencilDescriptor",&,N,V_descriptor
ReadOnly
MTLArgumentAccessReadOnly
ReadWrite
MTLArgumentAccessReadWrite
WriteOnly
MTLArgumentAccessWriteOnly
Unknown
MTLArgumentBuffersTier1
MTLArgumentBuffersTier2
Buffer
MTLArgumentTypeBuffer
ThreadgroupMemory
MTLArgumentTypeThreadgroupMemory
Texture
MTLArgumentTypeTexture
Sampler
MTLArgumentTypeSampler
MTLArgumentTypePrivateBuffer
ThreadGroupMemory
MTLArgumentTypePrivateThreadGroupMemory
MTLArgumentTypePrivateTexture
MTLArgumentTypePrivateSampler
IndirectConstant
MTLArgumentTypePrivateIndirectConstant
BuiltIn
MTLArgumentTypePrivateBuiltIn
Value
MTLArgumentTypePrivateValue
Invalid
MTLAttributeFormatInvalid
UChar2
MTLAttributeFormatUChar2
UChar3
MTLAttributeFormatUChar3
UChar4
MTLAttributeFormatUChar4
Char2
MTLAttributeFormatChar2
Char3
MTLAttributeFormatChar3
Char4
MTLAttributeFormatChar4
UChar2Normalized
MTLAttributeFormatUChar2Normalized
UChar3Normalized
MTLAttributeFormatUChar3Normalized
UChar4Normalized
MTLAttributeFormatUChar4Normalized
Char2Normalized
MTLAttributeFormatChar2Normalized
Char3Normalized
MTLAttributeFormatChar3Normalized
Char4Normalized
MTLAttributeFormatChar4Normalized
UShort2
MTLAttributeFormatUShort2
UShort3
MTLAttributeFormatUShort3
UShort4
MTLAttributeFormatUShort4
Short2
MTLAttributeFormatShort2
Short3
MTLAttributeFormatShort3
Short4
MTLAttributeFormatShort4
UShort2Normalized
MTLAttributeFormatUShort2Normalized
UShort3Normalized
MTLAttributeFormatUShort3Normalized
UShort4Normalized
MTLAttributeFormatUShort4Normalized
Short2Normalized
MTLAttributeFormatShort2Normalized
Short3Normalized
MTLAttributeFormatShort3Normalized
Short4Normalized
MTLAttributeFormatShort4Normalized
Half2
MTLAttributeFormatHalf2
Half3
MTLAttributeFormatHalf3
Half4
MTLAttributeFormatHalf4
Float
MTLAttributeFormatFloat
Float2
MTLAttributeFormatFloat2
Float3
MTLAttributeFormatFloat3
Float4
MTLAttributeFormatFloat4
MTLAttributeFormatInt
Int2
MTLAttributeFormatInt2
Int3
MTLAttributeFormatInt3
Int4
MTLAttributeFormatInt4
UInt
MTLAttributeFormatUInt
UInt2
MTLAttributeFormatUInt2
UInt3
MTLAttributeFormatUInt3
UInt4
MTLAttributeFormatUInt4
Int1010102Normalized
MTLAttributeFormatInt1010102Normalized
UInt1010102Normalized
MTLAttributeFormatUInt1010102Normalized
UChar4Normalized_BGRA
MTLAttributeFormatUChar4Normalized_BGRA
UChar
MTLAttributeFormatUChar
Char
MTLAttributeFormatChar
UCharNormalized
MTLAttributeFormatUCharNormalized
CharNormalized
MTLAttributeFormatCharNormalized
UShort
MTLAttributeFormatUShort
Short
MTLAttributeFormatShort
UShortNormalized
MTLAttributeFormatUShortNormalized
ShortNormalized
MTLAttributeFormatShortNormalized
Half
MTLAttributeFormatHalf
MTLAttributeFormatUInt_VertexID
MTLAttributeFormatUInt_InstanceID
Zero
MTLBlendFactorZero
MTLBlendFactorOne
SourceColor
MTLBlendFactorSourceColor
OneMinusSourceColor
MTLBlendFactorOneMinusSourceColor
SourceAlpha
MTLBlendFactorSourceAlpha
OneMinusSourceAlpha
MTLBlendFactorOneMinusSourceAlpha
DestinationColor
MTLBlendFactorDestinationColor
OneMinusDestinationColor
MTLBlendFactorOneMinusDestinationColor
DestinationAlpha
MTLBlendFactorDestinationAlpha
OneMinusDestinationAlpha
MTLBlendFactorOneMinusDestinationAlpha
SourceAlphaSaturated
MTLBlendFactorSourceAlphaSaturated
BlendColor
MTLBlendFactorBlendColor
OneMinusBlendColor
MTLBlendFactorOneMinusBlendColor
BlendAlpha
MTLBlendFactorBlendAlpha
OneMinusBlendAlpha
MTLBlendFactorOneMinusBlendAlpha
Source1Color
MTLBlendFactorSource1Color
OneMinusSource1Color
MTLBlendFactorOneMinusSource1Color
Source1Alpha
MTLBlendFactorSource1Alpha
OneMinusSource1Alpha
MTLBlendFactorOneMinusSource1Alpha
MTLBlendOperationAdd
Subtract
MTLBlendOperationSubtract
ReverseSubtract
MTLBlendOperationReverseSubtract
MTLBlendOperationMin
MTLBlendOperationMax
None
MTLBlitOptionNone
DepthFromDepthStencil
MTLBlitOptionDepthFromDepthStencil
StencilFromDepthStencil
MTLBlitOptionStencilFromDepthStencil
RowLinearPVRTC
MTLBlitOptionRowLinearPVRTC
MTLBuiltInArgumentInvalid
MTLBuiltInArgumentVertexID
MTLBuiltInArgumentInstanceID
MTLBuiltInArgumentBaseVertex
MTLBuiltInArgumentBaseInstance
MTLBuiltInArgumentThreadPositionInGrid
MTLBuiltInArgumentThreadsPerGrid
MTLBuiltInArgumentThreadPositionInThreadgroup
MTLBuiltInArgumentThreadIndexInThreadgroup
MTLBuiltInArgumentThreadsPerThreadgroup
MTLBuiltInArgumentThreadgroupPositionInGrid
MTLBuiltInArgumentThreadgroupsPerGrid
MTLBuiltInArgumentThreadExecutionWidth
MTLBuiltInArgumentPatchID
MTLBuiltInArgumentPositionInPatch
MTLBuiltInArgumentStageInGridOrigin
MTLBuiltInArgumentStageInGridSize
MTLBuiltInArgumentThreadIndexInQuadgroup
MTLBuiltInArgumentThreadIndexInSimdgroup
MTLBuiltInArgumentThreadsPerQuadgroup
MTLBuiltInArgumentThreadsPerSimdgroup
DefaultCache
MTLCPUCacheModeDefaultCache
WriteCombined
MTLCPUCacheModeWriteCombined
MTLColorWriteMaskNone
Alpha
MTLColorWriteMaskAlpha
Blue
MTLColorWriteMaskBlue
Green
MTLColorWriteMaskGreen
MTLColorWriteMaskRed
MTLColorWriteMaskAll
MTLCommandBufferErrorNone
Internal
MTLCommandBufferErrorInternal
Timeout
MTLCommandBufferErrorTimeout
PageFault
MTLCommandBufferErrorPageFault
Blacklisted
MTLCommandBufferErrorBlacklisted
NotPermitted
MTLCommandBufferErrorNotPermitted
OutOfMemory
MTLCommandBufferErrorOutOfMemory
InvalidResource
MTLCommandBufferErrorInvalidResource
Memoryless
MTLCommandBufferErrorMemoryless
DeviceRemoved
MTLCommandBufferErrorDeviceRemoved
MTLCommandBufferStatusMemoryAccessError
NotEnqueued
MTLCommandBufferStatusNotEnqueued
Enqueued
MTLCommandBufferStatusEnqueued
Committed
MTLCommandBufferStatusCommitted
Scheduled
MTLCommandBufferStatusScheduled
Completed
MTLCommandBufferStatusCompleted
Error
MTLCommandBufferStatusError
AllBytes
MTLCommandDataCorruptionModeAllBytes
RandomLocation
MTLCommandDataCorruptionModeRandomLocation
Render
MTLCommandEncoderTypeRender
Compute
MTLCommandEncoderTypeCompute
Blit
MTLCommandEncoderTypeBlit
ParallelRender
MTLCommandEncoderTypeParallelRender
FragmentRender
MTLCommandEncoderTypeFragmentRender
Never
MTLCompareFunctionNever
Less
MTLCompareFunctionLess
Equal
MTLCompareFunctionEqual
LessEqual
MTLCompareFunctionLessEqual
Greater
MTLCompareFunctionGreater
NotEqual
MTLCompareFunctionNotEqual
GreaterEqual
MTLCompareFunctionGreaterEqual
Always
MTLCompareFunctionAlways
NoError
MTLCompilerErrorNoError
FatalError
MTLCompilerErrorFatalError
CompilationError
MTLCompilerErrorCompilationError
MTLComputeFMABit
RoundToInfinityBit
MTLComputeFPRoundToInfinityBit
DenormBit
MTLComputeFPDenormBit
InfNanBit
MTLComputeFPInfNanBit
RoundToNearestBit
MTLComputeFPRoundToNearestBit
RoundToZeroBit
MTLComputeFPRoundToZeroBit
MTLCullModeNone
Front
MTLCullModeFront
Back
MTLCullModeBack
MTLDataTypeNone
Struct
MTLDataTypeStruct
Array
MTLDataTypeArray
MTLDataTypeFloat
MTLDataTypeFloat2
MTLDataTypeFloat3
MTLDataTypeFloat4
Float2x2
MTLDataTypeFloat2x2
Float2x3
MTLDataTypeFloat2x3
Float2x4
MTLDataTypeFloat2x4
Float3x2
MTLDataTypeFloat3x2
Float3x3
MTLDataTypeFloat3x3
Float3x4
MTLDataTypeFloat3x4
Float4x2
MTLDataTypeFloat4x2
Float4x3
MTLDataTypeFloat4x3
Float4x4
MTLDataTypeFloat4x4
MTLDataTypeHalf
MTLDataTypeHalf2
MTLDataTypeHalf3
MTLDataTypeHalf4
Half2x2
MTLDataTypeHalf2x2
Half2x3
MTLDataTypeHalf2x3
Half2x4
MTLDataTypeHalf2x4
Half3x2
MTLDataTypeHalf3x2
Half3x3
MTLDataTypeHalf3x3
Half3x4
MTLDataTypeHalf3x4
Half4x2
MTLDataTypeHalf4x2
Half4x3
MTLDataTypeHalf4x3
Half4x4
MTLDataTypeHalf4x4
MTLDataTypeInt
MTLDataTypeInt2
MTLDataTypeInt3
MTLDataTypeInt4
MTLDataTypeUInt
MTLDataTypeUInt2
MTLDataTypeUInt3
MTLDataTypeUInt4
MTLDataTypeShort
MTLDataTypeShort2
MTLDataTypeShort3
MTLDataTypeShort4
MTLDataTypeUShort
MTLDataTypeUShort2
MTLDataTypeUShort3
MTLDataTypeUShort4
MTLDataTypeChar
MTLDataTypeChar2
MTLDataTypeChar3
MTLDataTypeChar4
MTLDataTypeUChar
MTLDataTypeUChar2
MTLDataTypeUChar3
MTLDataTypeUChar4
Bool
MTLDataTypeBool
Bool2
MTLDataTypeBool2
Bool3
MTLDataTypeBool3
Bool4
MTLDataTypeBool4
MTLDataTypeTexture
MTLDataTypeSampler
Pointer
MTLDataTypePointer
R8Unorm
MTLDataTypeR8Unorm
R8Snorm
MTLDataTypeR8Snorm
R16Unorm
MTLDataTypeR16Unorm
R16Snorm
MTLDataTypeR16Snorm
RG8Unorm
MTLDataTypeRG8Unorm
RG8Snorm
MTLDataTypeRG8Snorm
RG16Unorm
MTLDataTypeRG16Unorm
RG16Snorm
MTLDataTypeRG16Snorm
RGBA8Unorm
MTLDataTypeRGBA8Unorm
RGBA8Unorm_sRGB
MTLDataTypeRGBA8Unorm_sRGB
RGBA8Snorm
MTLDataTypeRGBA8Snorm
RGBA16Unorm
MTLDataTypeRGBA16Unorm
RGBA16Snorm
MTLDataTypeRGBA16Snorm
RGB10A2Unorm
MTLDataTypeRGB10A2Unorm
RG11B10Float
MTLDataTypeRG11B10Float
RGB9E5Float
MTLDataTypeRGB9E5Float
IndirectArgument
MTLDataTypePrivateIndirectArgument
Void
MTLDataTypePrivateVoid
Clip
MTLDepthClipModeClip
Clamp
MTLDepthClipModeClamp
iOS_1
MTLDeviceFeatureProfileiOS_1
iOS_2
MTLDeviceFeatureProfileiOS_2
iOS_3
MTLDeviceFeatureProfileiOS_3
iOS_4
MTLDeviceFeatureProfileiOS_4
TVOS_1 | tvOS_1
MTLDeviceFeatureProfileTVOS_1 | MTLDeviceFeatureProfiletvOS_1
OSX_1 | macOS_1
MTLDeviceFeatureProfileOSX_1 | MTLDeviceFeatureProfilemacOS_1
tvOS_2 | TVOS_2
MTLDeviceFeatureProfiletvOS_2 | MTLDeviceFeatureProfileTVOS_2
watchOS_1 | WatchOS_1
MTLDeviceFeatureProfilewatchOS_1 | MTLDeviceFeatureProfileWatchOS_1
Undefined
MTLDeviceFeatureProfileUndefined
iOS_GPUFamily1_v1
MTLFeatureSet_iOS_GPUFamily1_v1
iOS_GPUFamily2_v1
MTLFeatureSet_iOS_GPUFamily2_v1
iOS_GPUFamily1_v2
MTLFeatureSet_iOS_GPUFamily1_v2
iOS_GPUFamily2_v2
MTLFeatureSet_iOS_GPUFamily2_v2
iOS_GPUFamily3_v1
MTLFeatureSet_iOS_GPUFamily3_v1
iOS_GPUFamily1_v3
MTLFeatureSet_iOS_GPUFamily1_v3
iOS_GPUFamily2_v3
MTLFeatureSet_iOS_GPUFamily2_v3
iOS_GPUFamily3_v2
MTLFeatureSet_iOS_GPUFamily3_v2
iOS_GPUFamily1_v4
MTLFeatureSet_iOS_GPUFamily1_v4
iOS_GPUFamily2_v4
MTLFeatureSet_iOS_GPUFamily2_v4
iOS_GPUFamily3_v3
MTLFeatureSet_iOS_GPUFamily3_v3
tvOS_GPUFamily1_v2
MTLFeatureSet_tvOS_GPUFamily1_v2
tvOS_GPUFamily1_v1
MTLFeatureSet_tvOS_GPUFamily1_v1
macOS_GPUFamily1_v1
MTLFeatureSet_macOS_GPUFamily1_v1
macOS_GPUFamily1_v2
MTLFeatureSet_macOS_GPUFamily1_v2
macOS_ReadWriteTextureTier2
MTLFeatureSet_macOS_ReadWriteTextureTier2
macOS_GPUFamily1_v3
MTLFeatureSet_macOS_GPUFamily1_v3
tvOS_GPUFamily1_v3
MTLFeatureSet_tvOS_GPUFamily1_v3
Vertex
MTLFunctionTypeVertex
Fragment
MTLFunctionTypeFragment
Kernel
MTLFunctionTypeKernel
Extern
MTLFunctionTypeExtern
High
MTLGPUPriorityHigh
Normal
MTLGPUPriorityNormal
MTLGPUPriorityLow
Disabled
MTLGPUPriorityDisabled
NormalHigh
MTLGPUPriorityNormalHigh
MTLImageFilterFunctionArgumentTypeTexture2DSPI
MTLImageFilterFunctionArgumentTypeTexture2DWriteSPI
MTLImageFilterFunctionArgumentTypeSamplerSPI
MTLImageFilterFunctionArgumentTypeBufferSPI
MTLImageFilterFunctionArgumentTypeThreadPositionInGridSPI
MTLImageFilterFunctionArgumentTypeOutputSPI
UInt16
MTLIndexTypeUInt16
UInt32
MTLIndexTypeUInt32
MTLIndirectArgumentBuffersTier1
MTLIndirectArgumentBuffersTier2
MTLLanguageVersion1_0
MTLLanguageVersion1_1
MTLLanguageVersion1_2
MTLLanguageVersion2_0
Unsupported
MTLLibraryErrorUnsupported
MTLLibraryErrorInternal
CompileFailure
MTLLibraryErrorCompileFailure
CompileWarning
MTLLibraryErrorCompileWarning
FunctionNotFound
MTLLibraryErrorFunctionNotFound
FileNotFound
MTLLibraryErrorFileNotFound
DontCare
MTLLoadActionDontCare
Load
MTLLoadActionLoad
Clear
MTLLoadActionClear
Sample0
MTLMultisampleDepthResolveFilterSample0
MTLMultisampleDepthResolveFilterMin
MTLMultisampleDepthResolveFilterMax
Default
MTLMutabilityDefault
Mutable
MTLMutabilityMutable
Immutable
MTLMutabilityImmutable
MTLPatchTypeNone
Triangle
MTLPatchTypeTriangle
Quad
MTLPatchTypeQuad
MTLPipelineOptionNone
ArgumentInfo
MTLPipelineOptionArgumentInfo
BufferTypeInfo
MTLPipelineOptionBufferTypeInfo
BuiltInArguments
MTLPipelineOptionPrivateBuiltInArguments
FunctionWithNoReflection
MTLPipelineOptionPrivateFunctionWithNoReflection
BufferAccessToVertexDescriptor
MTLPipelineOptionPrivateBufferAccessToVertexDescriptor
MTLPipelineOptionPrivatePerformanceStatistics
PostVertexDump
MTLPipelineOptionPrivatePostVertexDump
MTLPixelFormatInvalid
A8Unorm
MTLPixelFormatA8Unorm
YCBCR8_420_2P_sRGB
MTLPixelFormatYCBCR8_420_2P_sRGB
YCBCR8_422_1P_sRGB
MTLPixelFormatYCBCR8_422_1P_sRGB
MTLPixelFormatR8Unorm
R8Unorm_sRGB
MTLPixelFormatR8Unorm_sRGB
MTLPixelFormatR8Snorm
R8Uint
MTLPixelFormatR8Uint
R8Sint
MTLPixelFormatR8Sint
YCBCR10_444_2P_sRGB
MTLPixelFormatYCBCR10_444_2P_sRGB
YCBCR10_420_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_420_2P_PACKED_sRGB
YCBCR10_422_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_422_2P_PACKED_sRGB
YCBCR10_444_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_444_2P_PACKED_sRGB
RGB10_420_2P_PACKED
MTLPixelFormatRGB10_420_2P_PACKED
MTLPixelFormatR16Unorm
MTLPixelFormatR16Snorm
R16Uint
MTLPixelFormatR16Uint
R16Sint
MTLPixelFormatR16Sint
R16Float
MTLPixelFormatR16Float
RGB8_420_2P
MTLPixelFormatRGB8_420_2P
RGB8_422_2P
MTLPixelFormatRGB8_422_2P
MTLPixelFormatRG8Unorm
RG8Unorm_sRGB
MTLPixelFormatRG8Unorm_sRGB
MTLPixelFormatRG8Snorm
RG8Uint
MTLPixelFormatRG8Uint
RG8Sint
MTLPixelFormatRG8Sint
RGB10_422_2P_PACKED
MTLPixelFormatRGB10_422_2P_PACKED
RGB10_444_2P_PACKED
MTLPixelFormatRGB10_444_2P_PACKED
RGB10A8_2P_XR10
MTLPixelFormatRGB10A8_2P_XR10
RGB10A8_2P_XR10_sRGB
MTLPixelFormatRGB10A8_2P_XR10_sRGB
B5G6R5Unorm
MTLPixelFormatB5G6R5Unorm
A1BGR5Unorm
MTLPixelFormatA1BGR5Unorm
ABGR4Unorm
MTLPixelFormatABGR4Unorm
BGR5A1Unorm
MTLPixelFormatBGR5A1Unorm
BGRA4Unorm
MTLPixelFormatBGRA4Unorm
YCBCR8_422_1P_REV
MTLPixelFormatYCBCR8_422_1P_REV
R32Uint
MTLPixelFormatR32Uint
R32Sint
MTLPixelFormatR32Sint
R32Float
MTLPixelFormatR32Float
MTLPixelFormatRG16Unorm
YCBCR8_422_2P_sRGB
MTLPixelFormatYCBCR8_422_2P_sRGB
MTLPixelFormatRG16Snorm
RG16Uint
MTLPixelFormatRG16Uint
RG16Sint
MTLPixelFormatRG16Sint
RG16Float
MTLPixelFormatRG16Float
YCBCR8_444_2P_sRGB
MTLPixelFormatYCBCR8_444_2P_sRGB
MTLPixelFormatRGBA8Unorm
MTLPixelFormatRGBA8Unorm_sRGB
MTLPixelFormatRGBA8Snorm
RGBA8Uint
MTLPixelFormatRGBA8Uint
RGBA8Sint
MTLPixelFormatRGBA8Sint
YCBCR10_420_2P_sRGB
MTLPixelFormatYCBCR10_420_2P_sRGB
BGRA8Unorm
MTLPixelFormatBGRA8Unorm
BGRA8Unorm_sRGB
MTLPixelFormatBGRA8Unorm_sRGB
YCBCR10_422_2P_sRGB
MTLPixelFormatYCBCR10_422_2P_sRGB
MTLPixelFormatRGB10A2Unorm
RGB10A2Uint
MTLPixelFormatRGB10A2Uint
MTLPixelFormatRG11B10Float
MTLPixelFormatRGB9E5Float
BGR10A2Unorm
MTLPixelFormatBGR10A2Unorm
RG32Uint
MTLPixelFormatRG32Uint
RG32Sint
MTLPixelFormatRG32Sint
RG32Float
MTLPixelFormatRG32Float
MTLPixelFormatRGBA16Unorm
MTLPixelFormatRGBA16Snorm
RGBA16Uint
MTLPixelFormatRGBA16Uint
RGBA16Sint
MTLPixelFormatRGBA16Sint
RGBA16Float
MTLPixelFormatRGBA16Float
RGBA32Uint
MTLPixelFormatRGBA32Uint
RGBA32Sint
MTLPixelFormatRGBA32Sint
RGBA32Float
MTLPixelFormatRGBA32Float
BC1_RGBA
MTLPixelFormatBC1_RGBA
BC1_RGBA_sRGB
MTLPixelFormatBC1_RGBA_sRGB
BC2_RGBA
MTLPixelFormatBC2_RGBA
BC2_RGBA_sRGB
MTLPixelFormatBC2_RGBA_sRGB
BC3_RGBA
MTLPixelFormatBC3_RGBA
BC3_RGBA_sRGB
MTLPixelFormatBC3_RGBA_sRGB
BC4_RUnorm
MTLPixelFormatBC4_RUnorm
BC4_RSnorm
MTLPixelFormatBC4_RSnorm
BC5_RGUnorm
MTLPixelFormatBC5_RGUnorm
BC5_RGSnorm
MTLPixelFormatBC5_RGSnorm
BC6H_RGBFloat
MTLPixelFormatBC6H_RGBFloat
BC6H_RGBUfloat
MTLPixelFormatBC6H_RGBUfloat
BC7_RGBAUnorm
MTLPixelFormatBC7_RGBAUnorm
BC7_RGBAUnorm_sRGB
MTLPixelFormatBC7_RGBAUnorm_sRGB
PVRTC_RGB_2BPP
MTLPixelFormatPVRTC_RGB_2BPP
PVRTC_RGB_2BPP_sRGB
MTLPixelFormatPVRTC_RGB_2BPP_sRGB
PVRTC_RGB_4BPP
MTLPixelFormatPVRTC_RGB_4BPP
PVRTC_RGB_4BPP_sRGB
MTLPixelFormatPVRTC_RGB_4BPP_sRGB
PVRTC_RGBA_2BPP
MTLPixelFormatPVRTC_RGBA_2BPP
PVRTC_RGBA_2BPP_sRGB
MTLPixelFormatPVRTC_RGBA_2BPP_sRGB
PVRTC_RGBA_4BPP
MTLPixelFormatPVRTC_RGBA_4BPP
PVRTC_RGBA_4BPP_sRGB
MTLPixelFormatPVRTC_RGBA_4BPP_sRGB
EAC_R11Unorm
MTLPixelFormatEAC_R11Unorm
EAC_R11Snorm
MTLPixelFormatEAC_R11Snorm
EAC_RG11Unorm
MTLPixelFormatEAC_RG11Unorm
EAC_RG11Snorm
MTLPixelFormatEAC_RG11Snorm
EAC_RGBA8
MTLPixelFormatEAC_RGBA8
EAC_RGBA8_sRGB
MTLPixelFormatEAC_RGBA8_sRGB
ETC2_RGB8
MTLPixelFormatETC2_RGB8
ETC2_RGB8_sRGB
MTLPixelFormatETC2_RGB8_sRGB
ETC2_RGB8A1
MTLPixelFormatETC2_RGB8A1
ETC2_RGB8A1_sRGB
MTLPixelFormatETC2_RGB8A1_sRGB
ASTC_4x2_sRGB
MTLPixelFormatASTC_4x2_sRGB
ASTC_4x4_sRGB
MTLPixelFormatASTC_4x4_sRGB
ASTC_5x4_sRGB
MTLPixelFormatASTC_5x4_sRGB
ASTC_5x5_sRGB
MTLPixelFormatASTC_5x5_sRGB
ASTC_6x5_sRGB
MTLPixelFormatASTC_6x5_sRGB
ASTC_6x6_sRGB
MTLPixelFormatASTC_6x6_sRGB
ASTC_8x4_sRGB
MTLPixelFormatASTC_8x4_sRGB
ASTC_8x5_sRGB
MTLPixelFormatASTC_8x5_sRGB
ASTC_8x6_sRGB
MTLPixelFormatASTC_8x6_sRGB
ASTC_8x8_sRGB
MTLPixelFormatASTC_8x8_sRGB
ASTC_10x5_sRGB
MTLPixelFormatASTC_10x5_sRGB
ASTC_10x6_sRGB
MTLPixelFormatASTC_10x6_sRGB
ASTC_10x8_sRGB
MTLPixelFormatASTC_10x8_sRGB
ASTC_10x10_sRGB
MTLPixelFormatASTC_10x10_sRGB
ASTC_12x10_sRGB
MTLPixelFormatASTC_12x10_sRGB
ASTC_12x12_sRGB
MTLPixelFormatASTC_12x12_sRGB
ASTC_4x2_LDR
MTLPixelFormatASTC_4x2_LDR
ASTC_4x4_LDR
MTLPixelFormatASTC_4x4_LDR
ASTC_5x4_LDR
MTLPixelFormatASTC_5x4_LDR
ASTC_5x5_LDR
MTLPixelFormatASTC_5x5_LDR
ASTC_6x5_LDR
MTLPixelFormatASTC_6x5_LDR
ASTC_6x6_LDR
MTLPixelFormatASTC_6x6_LDR
ASTC_8x4_LDR
MTLPixelFormatASTC_8x4_LDR
ASTC_8x5_LDR
MTLPixelFormatASTC_8x5_LDR
ASTC_8x6_LDR
MTLPixelFormatASTC_8x6_LDR
ASTC_8x8_LDR
MTLPixelFormatASTC_8x8_LDR
ASTC_10x5_LDR
MTLPixelFormatASTC_10x5_LDR
ASTC_10x6_LDR
MTLPixelFormatASTC_10x6_LDR
ASTC_10x8_LDR
MTLPixelFormatASTC_10x8_LDR
ASTC_10x10_LDR
MTLPixelFormatASTC_10x10_LDR
ASTC_12x10_LDR
MTLPixelFormatASTC_12x10_LDR
ASTC_12x12_LDR
MTLPixelFormatASTC_12x12_LDR
ASTC_4x2_HDR
MTLPixelFormatASTC_4x2_HDR
ASTC_4x4_HDR
MTLPixelFormatASTC_4x4_HDR
ASTC_5x4_HDR
MTLPixelFormatASTC_5x4_HDR
ASTC_5x5_HDR
MTLPixelFormatASTC_5x5_HDR
ASTC_6x5_HDR
MTLPixelFormatASTC_6x5_HDR
ASTC_6x6_HDR
MTLPixelFormatASTC_6x6_HDR
ASTC_8x4_HDR
MTLPixelFormatASTC_8x4_HDR
ASTC_8x5_HDR
MTLPixelFormatASTC_8x5_HDR
ASTC_8x6_HDR
MTLPixelFormatASTC_8x6_HDR
ASTC_8x8_HDR
MTLPixelFormatASTC_8x8_HDR
ASTC_10x5_HDR
MTLPixelFormatASTC_10x5_HDR
ASTC_10x6_HDR
MTLPixelFormatASTC_10x6_HDR
ASTC_10x8_HDR
MTLPixelFormatASTC_10x8_HDR
ASTC_10x10_HDR
MTLPixelFormatASTC_10x10_HDR
ASTC_12x10_HDR
MTLPixelFormatASTC_12x10_HDR
ASTC_12x12_HDR
MTLPixelFormatASTC_12x12_HDR
GBGR422
MTLPixelFormatGBGR422
BGRG422
MTLPixelFormatBGRG422
BGRA10_XR_sRGB
MTLPixelFormatBGRA10_XR_sRGB
Depth16Unorm
MTLPixelFormatDepth16Unorm
Depth32Float
MTLPixelFormatDepth32Float
Stencil8
MTLPixelFormatStencil8
Depth24Unorm_Stencil8
MTLPixelFormatDepth24Unorm_Stencil8
BGR10_XR
MTLPixelFormatBGR10_XR
Depth32Float_Stencil8
MTLPixelFormatDepth32Float_Stencil8
X32_Stencil8
MTLPixelFormatX32_Stencil8
X24_Stencil8
MTLPixelFormatX24_Stencil8
BGR10_XR_sRGB
MTLPixelFormatBGR10_XR_sRGB
RGBX8Unorm
MTLPixelFormatRGBX8Unorm
RGBX8Unorm_sRGB
MTLPixelFormatRGBX8Unorm_sRGB
RGBX8Snorm
MTLPixelFormatRGBX8Snorm
RGBX8Uint
MTLPixelFormatRGBX8Uint
RGBX8Sint
MTLPixelFormatRGBX8Sint
RGBX16Uint
MTLPixelFormatRGBX16Uint
RGBX16Sint
MTLPixelFormatRGBX16Sint
RGBX16Float
MTLPixelFormatRGBX16Float
RGBX32Uint
MTLPixelFormatRGBX32Uint
RGBX32Sint
MTLPixelFormatRGBX32Sint
RGBX32Float
MTLPixelFormatRGBX32Float
YCBCR10_444_1P_sRGB
MTLPixelFormatYCBCR10_444_1P_sRGB
RGB8_444_2P
MTLPixelFormatRGB8_444_2P
RGB10_420_2P
MTLPixelFormatRGB10_420_2P
RGB10_444_2P
MTLPixelFormatRGB10_444_2P
RGB10_422_2P
MTLPixelFormatRGB10_422_2P
BGRA10_XR
MTLPixelFormatBGRA10_XR
YCBCR8_420_2P
MTLPixelFormatYCBCR8_420_2P
YCBCR8_422_1P
MTLPixelFormatYCBCR8_422_1P
YCBCR8_422_2P
MTLPixelFormatYCBCR8_422_2P
YCBCR8_444_2P
MTLPixelFormatYCBCR8_444_2P
YCBCR10_444_1P
MTLPixelFormatYCBCR10_444_1P
YCBCR10_420_2P
MTLPixelFormatYCBCR10_420_2P
YCBCR10_422_2P
MTLPixelFormatYCBCR10_422_2P
YCBCR10_444_2P
MTLPixelFormatYCBCR10_444_2P
YCBCR10_420_2P_PACKED
MTLPixelFormatYCBCR10_420_2P_PACKED
YCBCR10_422_2P_PACKED
MTLPixelFormatYCBCR10_422_2P_PACKED
YCBCR10_444_2P_PACKED
MTLPixelFormatYCBCR10_444_2P_PACKED
Uncastable
MTLPixelFormatCastClassUncastable
1Bytes
MTLPixelFormatCastClass1Bytes
2Bytes
MTLPixelFormatCastClass2Bytes
4Bytes
MTLPixelFormatCastClass4Bytes
8Bytes
MTLPixelFormatCastClass8Bytes
16Bytes
MTLPixelFormatCastClass16Bytes
BC1_RGBA | PVRTC_RGB_2BPP
MTLPixelFormatCastClassBC1_RGBA | MTLPixelFormatCastClassPVRTC_RGB_2BPP
PVRTC_RGB_4BPP | BC2_RGBA
MTLPixelFormatCastClassPVRTC_RGB_4BPP | MTLPixelFormatCastClassBC2_RGBA
PVRTC_RGBA_2BPP | BC3_RGBA
MTLPixelFormatCastClassPVRTC_RGBA_2BPP | MTLPixelFormatCastClassBC3_RGBA
BC4_R | PVRTC_RGBA_4BPP
MTLPixelFormatCastClassBC4_R | MTLPixelFormatCastClassPVRTC_RGBA_4BPP
EAC_R11 | BC5_RG
MTLPixelFormatCastClassEAC_R11 | MTLPixelFormatCastClassBC5_RG
EAC_RG11 | BC6H_RGBFloat
MTLPixelFormatCastClassEAC_RG11 | MTLPixelFormatCastClassBC6H_RGBFloat
EAC_RGBA8 | BC7_RGBAUnorm
MTLPixelFormatCastClassEAC_RGBA8 | MTLPixelFormatCastClassBC7_RGBAUnorm
MTLPixelFormatCastClassETC2_RGB8
MTLPixelFormatCastClassETC2_RGB8A1
ASTC_4x2
MTLPixelFormatCastClassASTC_4x2
ASTC_4x4
MTLPixelFormatCastClassASTC_4x4
ASTC_5x4
MTLPixelFormatCastClassASTC_5x4
ASTC_5x5
MTLPixelFormatCastClassASTC_5x5
ASTC_6x5
MTLPixelFormatCastClassASTC_6x5
ASTC_6x6
MTLPixelFormatCastClassASTC_6x6
ASTC_8x4
MTLPixelFormatCastClassASTC_8x4
ASTC_8x5
MTLPixelFormatCastClassASTC_8x5
ASTC_8x6
MTLPixelFormatCastClassASTC_8x6
ASTC_8x8
MTLPixelFormatCastClassASTC_8x8
ASTC_10x5
MTLPixelFormatCastClassASTC_10x5
ASTC_10x6
MTLPixelFormatCastClassASTC_10x6
ASTC_10x8
MTLPixelFormatCastClassASTC_10x8
ASTC_10x10
MTLPixelFormatCastClassASTC_10x10
ASTC_12x10
MTLPixelFormatCastClassASTC_12x10
ASTC_12x12
MTLPixelFormatCastClassASTC_12x12
Depth24_Stencil8
MTLPixelFormatCastClassDepth24_Stencil8
Depth32_Stencil8
MTLPixelFormatCastClassDepth32_Stencil8
ARGBV16_XR10
MTLPixelFormatCastClassARGBV16_XR10
RGB10_XR10
MTLPixelFormatCastClassRGB10_XR10
MTLPixelFormatCastClassRGB10A8_2P_XR10
IsASTC
MTLPixelFormatFlagsIsASTC
IsValid
MTLPixelFormatFlagsIsValid
IsWriteable
MTLPixelFormatFlagsIsWriteable
IsFilterable
MTLPixelFormatFlagsIsFilterable
IsPVRTC
MTLPixelFormatFlagsIsPVRTC
IsBlendable
MTLPixelFormatFlagsIsBlendable
IsAllowedForMSAAResolve
MTLPixelFormatFlagsIsAllowedForMSAAResolve
IsMSAACapable
MTLPixelFormatFlagsIsMSAACapable
IsColorRenderable
MTLPixelFormatFlagsIsColorRenderable
IsRestrictedFormatAccess
MTLPixelFormatFlagsIsRestrictedFormatAccess
IsUIntCompatible
MTLPixelFormatFlagsIsUIntCompatible
IsDepthRenderable
MTLPixelFormatFlagsIsDepthRenderable
IsHalfCompatible
MTLPixelFormatFlagsIsHalfCompatible
IsIntCompatible
MTLPixelFormatFlagsIsIntCompatible
IsCompressed
MTLPixelFormatFlagsIsCompressed
Is422
MTLPixelFormatFlagsIs422
IsShortCompatible
MTLPixelFormatFlagsIsShortCompatible
IsFullMaskRequired
MTLPixelFormatFlagsIsFullMaskRequired
IsStencilRenderable
MTLPixelFormatFlagsIsStencilRenderable
IsSRGB
MTLPixelFormatFlagsIsSRGB
IsUShortCompatible
MTLPixelFormatFlagsIsUShortCompatible
IsFloatCompatible
MTLPixelFormatFlagsIsFloatCompatible
_Invalid
MTLPixelFormatSPI_Invalid
MTLPixelFormatBGR5A1Unorm_SPI
MTLPixelFormatASTC_4x4_sRGB_SPI
MTLPixelFormatASTC_5x4_sRGB_SPI
MTLPixelFormatASTC_5x5_sRGB_SPI
MTLPixelFormatASTC_6x5_sRGB_SPI
MTLPixelFormatASTC_6x6_sRGB_SPI
MTLPixelFormatASTC_8x5_sRGB_SPI
MTLPixelFormatASTC_8x6_sRGB_SPI
MTLPixelFormatASTC_8x8_sRGB_SPI
MTLPixelFormatASTC_10x5_sRGB_SPI
MTLPixelFormatASTC_10x6_sRGB_SPI
MTLPixelFormatASTC_10x8_sRGB_SPI
MTLPixelFormatASTC_10x10_sRGB_SPI
MTLPixelFormatASTC_12x10_sRGB_SPI
MTLPixelFormatASTC_12x12_sRGB_SPI
MTLPixelFormatASTC_4x4_LDR_SPI
MTLPixelFormatASTC_5x4_LDR_SPI
MTLPixelFormatASTC_5x5_LDR_SPI
MTLPixelFormatASTC_6x5_LDR_SPI
MTLPixelFormatASTC_6x6_LDR_SPI
MTLPixelFormatASTC_8x5_LDR_SPI
MTLPixelFormatASTC_8x6_LDR_SPI
MTLPixelFormatASTC_8x8_LDR_SPI
MTLPixelFormatASTC_10x5_LDR_SPI
MTLPixelFormatASTC_10x6_LDR_SPI
MTLPixelFormatASTC_10x8_LDR_SPI
MTLPixelFormatASTC_10x10_LDR_SPI
MTLPixelFormatASTC_12x10_LDR_SPI
MTLPixelFormatASTC_12x12_LDR_SPI
Unspecified
MTLPrimitiveTopologyClassUnspecified
Point
MTLPrimitiveTopologyClassPoint
Line
MTLPrimitiveTopologyClassLine
MTLPrimitiveTopologyClassTriangle
MTLPrimitiveTypePoint
MTLPrimitiveTypeLine
LineStrip
MTLPrimitiveTypeLineStrip
MTLPrimitiveTypeTriangle
TriangleStrip
MTLPrimitiveTypeTriangleStrip
KeepCurrent
MTLPurgeableStateKeepCurrent
NonVolatile
MTLPurgeableStateNonVolatile
Volatile
MTLPurgeableStateVolatile
Empty
MTLPurgeableStateEmpty
UserInteractive
MTLQosClassUserInteractive
UserInitiated
MTLQosClassUserInitiated
Utility
MTLQosClassUtility
Background
MTLQosClassBackground
MTLReadWriteTextureTierNone
MTLReadWriteTextureTier1
MTLReadWriteTextureTier2
TooManyResources
MTLRenderCommandEncoderSplitReasonTooManyResources
TooManyScissorEmits
MTLRenderCommandEncoderSplitReasonTooManyScissorEmits
TooManyDepthBiasEmits
MTLRenderCommandEncoderSplitReasonTooManyDepthBiasEmits
MTLRenderStageVertex
MTLRenderStageFragment
StorageModeShared | CPUCacheModeDefaultCache
MTLResourceStorageModeShared | MTLResourceCPUCacheModeDefaultCache
CPUCacheModeWriteCombined
MTLResourceCPUCacheModeWriteCombined
StorageModeManaged
MTLResourceStorageModeManaged
StorageModePrivate
MTLResourceStorageModePrivate
HazardTrackingModeUntracked
MTLResourceHazardTrackingModeUntracked
StorageModeMemoryless
MTLResourceStorageModeMemoryless
Read
MTLResourceUsageRead
Write
MTLResourceUsageWrite
Sample
MTLResourceUsageSample
ClampToEdge
MTLSamplerAddressModeClampToEdge
MirrorClampToEdge
MTLSamplerAddressModeMirrorClampToEdge
Repeat
MTLSamplerAddressModeRepeat
MirrorRepeat
MTLSamplerAddressModeMirrorRepeat
ClampToZero
MTLSamplerAddressModeClampToZero
ClampToBorderColor
MTLSamplerAddressModeClampToBorderColor
MTLSamplerAddressModeClampToZeroAlpha
TransparentBlack
MTLSamplerBorderColorTransparentBlack
OpaqueBlack
MTLSamplerBorderColorOpaqueBlack
OpaqueWhite
MTLSamplerBorderColorOpaqueWhite
Nearest
MTLSamplerMinMagFilterNearest
Linear
MTLSamplerMinMagFilterLinear
MTLSamplerMinMagFilterCubic
NotMipmapped
MTLSamplerMipFilterNotMipmapped
MTLSamplerMipFilterNearest
MTLSamplerMipFilterLinear
Keep
MTLStencilOperationKeep
MTLStencilOperationZero
Replace
MTLStencilOperationReplace
IncrementClamp
MTLStencilOperationIncrementClamp
DecrementClamp
MTLStencilOperationDecrementClamp
Invert
MTLStencilOperationInvert
IncrementWrap
MTLStencilOperationIncrementWrap
DecrementWrap
MTLStencilOperationDecrementWrap
Constant
MTLStepFunctionConstant
PerVertex
MTLStepFunctionPerVertex
PerInstance
MTLStepFunctionPerInstance
PerPatch
MTLStepFunctionPerPatch
PerPatchControlPoint
MTLStepFunctionPerPatchControlPoint
ThreadPositionInGridX
MTLStepFunctionThreadPositionInGridX
ThreadPositionInGridY
MTLStepFunctionThreadPositionInGridY
ThreadPositionInGridXIndexed
MTLStepFunctionThreadPositionInGridXIndexed
ThreadPositionInGridYIndexed
MTLStepFunctionThreadPositionInGridYIndexed
Shared
MTLStorageModeShared
Managed
MTLStorageModeManaged
Private
MTLStorageModePrivate
MTLStorageModeMemoryless
MTLStoreActionDontCare
Store
MTLStoreActionStore
MultisampleResolve
MTLStoreActionMultisampleResolve
StoreAndMultisampleResolve
MTLStoreActionStoreAndMultisampleResolve
MTLStoreActionUnknown
CustomSampleDepthStore
MTLStoreActionCustomSampleDepthStore
MTLTessellationControlPointIndexTypeNone
MTLTessellationControlPointIndexTypeUInt16
MTLTessellationControlPointIndexTypeUInt32
MTLTessellationFactorFormatHalf
MTLTessellationFactorStepFunctionConstant
MTLTessellationFactorStepFunctionPerPatch
MTLTessellationFactorStepFunctionPerInstance
PerPatchAndPerInstance
MTLTessellationFactorStepFunctionPerPatchAndPerInstance
Pow2
MTLTessellationPartitionModePow2
Integer
MTLTessellationPartitionModeInteger
FractionalOdd
MTLTessellationPartitionModeFractionalOdd
FractionalEven
MTLTessellationPartitionModeFractionalEven
MTLTextureCompressionModeDefault
OptIn
MTLTextureCompressionModeOptIn
OptOut
MTLTextureCompressionModeOptOut
0Degrees
MTLTextureRotation0Degrees
90DegreesClockwise
MTLTextureRotation90DegreesClockwise
180DegreesClockwise
MTLTextureRotation180DegreesClockwise
270DegreesClockwise
MTLTextureRotation270DegreesClockwise
MTLTextureSwizzleRed
MTLTextureSwizzleGreen
MTLTextureSwizzleBlue
MTLTextureSwizzleAlpha
MTLTextureSwizzleZero
MTLTextureSwizzleOne
MTLTextureType1D
1DArray
MTLTextureType1DArray
MTLTextureType2D
2DArray
MTLTextureType2DArray
2DMultisample
MTLTextureType2DMultisample
Cube
MTLTextureTypeCube
CubeArray
MTLTextureTypeCubeArray
MTLTextureType3D
MTLTextureUsageUnknown
ShaderRead
MTLTextureUsageShaderRead
ShaderWrite
MTLTextureUsageShaderWrite
RenderTarget
MTLTextureUsageRenderTarget
PixelFormatView
MTLTextureUsagePixelFormatView
Fill
MTLTriangleFillModeFill
Lines
MTLTriangleFillModeLines
Left
MTLVREyeLeft
Right
MTLVREyeRight
MTLVRSubmitDefault
MTLVRSubmitLensDistortionApplied
MTLVertexFormatInvalid
MTLVertexFormatUChar2
MTLVertexFormatUChar3
MTLVertexFormatUChar4
MTLVertexFormatChar2
MTLVertexFormatChar3
MTLVertexFormatChar4
MTLVertexFormatUChar2Normalized
MTLVertexFormatUChar3Normalized
MTLVertexFormatUChar4Normalized
MTLVertexFormatChar2Normalized
MTLVertexFormatChar3Normalized
MTLVertexFormatChar4Normalized
MTLVertexFormatUShort2
MTLVertexFormatUShort3
MTLVertexFormatUShort4
MTLVertexFormatShort2
MTLVertexFormatShort3
MTLVertexFormatShort4
MTLVertexFormatUShort2Normalized
MTLVertexFormatUShort3Normalized
MTLVertexFormatUShort4Normalized
MTLVertexFormatShort2Normalized
MTLVertexFormatShort3Normalized
MTLVertexFormatShort4Normalized
MTLVertexFormatHalf2
MTLVertexFormatHalf3
MTLVertexFormatHalf4
MTLVertexFormatFloat
MTLVertexFormatFloat2
MTLVertexFormatFloat3
MTLVertexFormatFloat4
MTLVertexFormatInt
MTLVertexFormatInt2
MTLVertexFormatInt3
MTLVertexFormatInt4
MTLVertexFormatUInt
MTLVertexFormatUInt2
MTLVertexFormatUInt3
MTLVertexFormatUInt4
MTLVertexFormatInt1010102Normalized
MTLVertexFormatUInt1010102Normalized
MTLVertexFormatUChar4Normalized_BGRA
MTLVertexFormatUChar
MTLVertexFormatChar
MTLVertexFormatUCharNormalized
MTLVertexFormatCharNormalized
MTLVertexFormatUShort
MTLVertexFormatShort
MTLVertexFormatUShortNormalized
MTLVertexFormatShortNormalized
MTLVertexFormatHalf
MTLVertexStepFunctionConstant
MTLVertexStepFunctionPerVertex
MTLVertexStepFunctionPerInstance
MTLVertexStepFunctionPerPatch
MTLVertexStepFunctionPerPatchControlPoint
MTLVisibilityResultModeDisabled
Boolean
MTLVisibilityResultModeBoolean
Counting
MTLVisibilityResultModeCounting
Clockwise
MTLWindingClockwise
CounterClockwise
MTLWindingCounterClockwise
isColorAttachment
Tc,N,V_isColorAttachment
basicTexture
T@"<MTLTexture>",&,N,V_basicTexture
CU<b>ulul@6ulululul
CU<b>ul@6ululul
C@6ululU<b>ulul
wasLoaded
Tc,N,V_wasLoaded
wasStored
Tc,N,V_wasStored
debugTexture
T@"<MTLTexture>",&,N,V_debugTexture
fromBuffer
T@"<MTLBuffer>",&,N,V_fromBuffer
fromTexture
T@"<MTLTexture>",&,N,V_fromTexture
cache
T@"MTLOverrideCache",&,N,V_cache
v32@?0@"NSString"8@"MTLFunctionConstant"16^c24
Unable to create specialized function: %@
Unable to create function: %@
Unable to create pipeline: %@
Unable to create pipeline
Unable to create computePipelineState with function: %@
@"<MTLLibrary>"24@?0@"<MTLDevice>"8^@16
MTLCaptureComputeCommandEncoder
MTLCaptureBlitCommandEncoder
MTLCaptureDevice
MTLCaptureHeap
MTLInsertOverridesLayerVisitor
MTLToolsVisitor
MTLCaptureRenderCommandEncoder
MTLTexture
MTLResource
NSObject
MTLBuffer
MTLOverrideBlitCommandEncoder
MTLOverrideCommandBuffer
MTLOverrideCommandQueue
MTLCaptureArgumentEncoder
MTLCaptureComputePipelineState
MTLOverrideArgumentEncoder
MTLOverrideFunction
MTLOverrideLibrary
MTLInsertCaptureLayerVisitor
MTLOverrideRenderPipelineState
MTLCaptureCommandBuffer
MTLOverrideComputeCommandEncoder
MTLCaptureBuffer
MTLCaptureSamplerState
MTLRemoveSubLayerVisitor
MTLOverrideRenderCommandEncoder
MTLCaptureFence
MTLCaptureCommandQueue
MTLCaptureParallelRenderCommandEncoder
MTLCaptureFunction
MTLCaptureLibrary
DYMTLCaptureDescriptor
DYMTLCaptureState
DYMTLGuestAppClient
DYMTLMobileAppClient
DYQuicklook
MTLOverrideBuffer
MTLCaptureDepthStencilState
MTLOverrideCache
MTLOverrideTexture
MTLOverrideParallelRenderCommandEncoder
MTLCaptureTexture
MTLOverrideDevice
DYMTLDesktopAppClient
0 2A
DYMTLResourceUpdater
MTLCaptureRenderPipelineState
v24@0:8@16
v16@0:8
v40@0:8r^v16Q24Q32
v40@0:8@16Q24Q32
v32@0:8Q16Q24
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v32@0:8@16Q24
v40@0:8r^@16{_NSRange=QQ}24
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v64@0:8{?={?=QQQ}{?=QQQ}}16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v40@0:8r^@16Q24Q32
v32@0:8r^@16Q24
@16@0:8
{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}16@0:8
v40@0:8{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}16
{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}16@0:8
v40@0:8{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}16
Q16@0:8
v24@0:8Q16
{CaptureHelper="_buffer"{DynamicBuffer="_data"{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__first_"*}}}"_urlBuffer"*"_urlBufferA"[41c]"_urlBufferB"[41c]"_fbuf"{Fbuf="bh"(?="buffer"^v"header"^{?})"_access_ptr"^v"_capacity"I}"_semaphore"^{dispatch_semaphore_s}}
{MTLHarvesterMarkerComputeResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="value"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__first_"^@}}"value"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__first_"^@}}"value"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__first_"^@}}"value"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__first_"^@}}"value"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__first_"^@}}"value"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__first_"^@}}"value"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__first_"^@}}"value"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__first_"^@}}"value"{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >="__first_"^@}}"value"{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >="__first_"^@}}"value"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__first_"^@}}}}"MTLBuffer"[31@"<MTLBuffer>"]"MTLBufferBindingOffset"[31Q]"MTLTexture"[128@"<MTLTexture>"]"mutableMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"mutableMTLTextureIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"readMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"ancestorMap"{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__tree_"{__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >="__first_"Q}}}"indirectArgumentBuffers"{vector<MTLHarvesterIndirectArgumentBufferInfo, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >="__begin_"^{MTLHarvesterIndirectArgumentBufferInfo}"__end_"^{MTLHarvesterIndirectArgumentBufferInfo}"__end_cap_"{__compressed_pair<MTLHarvesterIndirectArgumentBufferInfo *, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >="__first_"^{MTLHarvesterIndirectArgumentBufferInfo}}}}
@"<MTLFunction>"
{vector<unsigned long long, std::__1::allocator<unsigned long long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >="__first_"^Q}}
{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__tree_"{__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >="__first_"Q}}}
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v44@0:8@16{_NSRange=QQ}24C40
v56@0:8@16Q24@32Q40Q48
{MTLHarvesterMarkerBlitResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="value"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__first_"^@}}"value"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__first_"^@}}"value"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__first_"^@}}"value"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__first_"^@}}"value"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__first_"^@}}"value"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__first_"^@}}"value"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__first_"^@}}"value"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__first_"^@}}"value"{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >="__first_"^@}}"value"{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >="__first_"^@}}"value"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__first_"^@}}}}"srcMTLBuffer"@"<MTLBuffer>""dstMTLBuffer"@"<MTLBuffer>""ancestorMap"{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__tree_"{__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >="__first_"Q}}}}
v20@0:8c16
@24@0:8Q16
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@24@0:8@16
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8^{dispatch_data_s=}16^@24
c24@0:8Q16
Q24@0:8Q16
@56@0:8^v16Q24@32Q40Q48
@64@0:8^v16Q24@?32@40Q48Q56
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16^@24
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16r^{?=BQ^{?}}24^@32
^{mutex={_opaque_pthread_mutex_t=q[56c]}}16@0:8
v24@0:8^{mutex={_opaque_pthread_mutex_t=q[56c]}}16
^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}}16@0:8
v24@0:8^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}}16
^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}}16@0:8
v24@0:8^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}}16
^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}16@0:8
v24@0:8^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}16
^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=}16@0:8
v24@0:8^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=}16
{MTLHarvesterUnusedResourcesInfo={MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}{MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}}16@0:8
v208@0:8{MTLHarvesterUnusedResourcesInfo={MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}{MTLHarvesterResourcesInfo=QQQQQQQQQQQQ}}16
[64c]
^{mutex={_opaque_pthread_mutex_t=q[56c]}}
^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}}
^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}}
^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}
^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >=}
@"<MTLDevice>"
{MTLHarvesterUnusedResourcesInfo="user"{MTLHarvesterResourcesInfo="bufferCount"Q"textureCount"Q"libraryCount"Q"functionCount"Q"renderPipelineStateCount"Q"computePipelineStateCount"Q"depthStencilStateCount"Q"samplerStateCount"Q"commandQueueCount"Q"heapCount"Q"fenceCount"Q"textureLayoutCount"Q}"internal"{MTLHarvesterResourcesInfo="bufferCount"Q"textureCount"Q"libraryCount"Q"functionCount"Q"renderPipelineStateCount"Q"computePipelineStateCount"Q"depthStencilStateCount"Q"samplerStateCount"Q"commandQueueCount"Q"heapCount"Q"fenceCount"Q"textureLayoutCount"Q}}
c16@0:8
@"<MTLHeap>"
v24@0:8@"MTLToolsDevice"16
v24@0:8@"MTLToolsHeap"16
v24@0:8@"MTLToolsBuffer"16
v24@0:8@"MTLToolsDepthStencilState"16
v24@0:8@"MTLToolsTexture"16
v24@0:8@"MTLToolsSamplerState"16
v24@0:8@"MTLToolsCommandQueue"16
v24@0:8@"MTLToolsFence"16
v24@0:8@"MTLToolsFunction"16
v24@0:8@"MTLToolsArgumentEncoder"16
v24@0:8@"MTLToolsIndirectArgumentEncoder"16
v24@0:8@"MTLToolsLibrary"16
v24@0:8@"MTLToolsCommandBuffer"16
v24@0:8@"MTLToolsRenderCommandEncoder"16
v24@0:8@"MTLToolsComputeCommandEncoder"16
v24@0:8@"MTLToolsBlitCommandEncoder"16
v24@0:8@"MTLToolsParallelRenderCommandEncoder"16
v24@0:8@"MTLToolsRenderPipelineState"16
v24@0:8@"MTLToolsComputePipelineState"16
@40@0:8#16@24@32
@"MTLOverrideDevice"
@"MTLOverrideBuffer"
@"MTLOverrideCommandQueue"
@"MTLOverrideCommandBuffer"
@"MTLOverrideLibrary"
v64@0:8{?=dddddd}16
v28@0:8f16f20f24
v48@0:8{?=QQQQ}16
v32@0:8f16f20f24f28
v20@0:8I16
v24@0:8I16I20
v48@0:8Q16Q24Q32Q40
v40@0:8Q16Q24Q32
v64@0:8Q16Q24Q32@40Q48Q56
v56@0:8Q16Q24Q32@40Q48
v56@0:8Q16Q24Q32Q40Q48
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v40@0:8Q16@24Q32
v64@0:8Q16Q24@32Q40@48Q56
v20@0:8f16
v72@0:8Q16Q24Q32@40Q48Q56Q64
v56@0:8Q16@24Q32@40Q48
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v72@0:8Q16@24Q32@40Q48@56Q64
v32@0:8r^{?=dddddd}16Q24
v32@0:8r^{?=QQQQ}16Q24
{MTLHarvesterMarkerRenderResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="value"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__first_"^@}}"value"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__first_"^@}}"value"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__first_"^@}}"value"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__first_"^@}}"value"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__first_"^@}}"value"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__first_"^@}}"value"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__first_"^@}}"value"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__first_"^@}}"value"{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >="__first_"^@}}"value"{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >="__first_"^@}}"value"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__first_"^@}}}}"vertexMTLBuffer"[31@"<MTLBuffer>"]"vertexMTLBufferBindingOffset"[31Q]"vertexMTLTexture"[128@"<MTLTexture>"]"mutableVertexMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"mutableVertexMTLTextureIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"readVertexMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"fragmentMTLBuffer"[31@"<MTLBuffer>"]"fragmentMTLBufferBindingOffset"[31Q]"fragmentMTLTexture"[128@"<MTLTexture>"]"mutableFragmentMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"mutableFragmentMTLTextureIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"readFragmentMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}"ancestorMap"{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__tree_"{__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >="__first_"Q}}}"indirectArgumentBuffers"{vector<MTLHarvesterIndirectArgumentBufferInfo, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >="__begin_"^{MTLHarvesterIndirectArgumentBufferInfo}"__end_"^{MTLHarvesterIndirectArgumentBufferInfo}"__end_cap_"{__compressed_pair<MTLHarvesterIndirectArgumentBufferInfo *, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >="__first_"^{MTLHarvesterIndirectArgumentBufferInfo}}}}
c24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c24@0:8#16
c24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
^{__IOSurface=}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
^v16@0:8
v32@0:8{_NSRange=QQ}16
@40@0:8@16Q24Q32
v40@0:8@16{_NSRange=QQ}24
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
v24@0:8@?16
v32@0:8@16d24
v20@0:8i16
^v24@0:8Q16
@"MTLComputePipelineDescriptor"
@"MTLComputePipelineReflection"
@"<MTLComputePipelineState>"
@32@0:8Q16^@24
@"MTLCaptureDevice"
@"MTLCaptureBuffer"
@"MTLCaptureLibrary"
@"MTLCaptureCommandQueue"
@"MTLCaptureCommandBuffer"
@"NSMutableDictionary"
@"MTLRenderPipelineDescriptor"
@"MTLRenderPipelineReflection"
v24@0:8r^{MTLHarvesterMarkerBlitResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}@@{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}}16
v24@0:8r^{MTLHarvesterMarkerRenderResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}[31@][31Q][128@]{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}[31@][31Q][128@]{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}{vector<MTLHarvesterIndirectArgumentBufferInfo, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >=^{MTLHarvesterIndirectArgumentBufferInfo}^{MTLHarvesterIndirectArgumentBufferInfo}{__compressed_pair<MTLHarvesterIndirectArgumentBufferInfo *, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >=^{MTLHarvesterIndirectArgumentBufferInfo}}}}16
v24@0:8r^{MTLHarvesterMarkerComputeResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}[31@][31Q][128@]{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}{vector<MTLHarvesterIndirectArgumentBufferInfo, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >=^{MTLHarvesterIndirectArgumentBufferInfo}^{MTLHarvesterIndirectArgumentBufferInfo}{__compressed_pair<MTLHarvesterIndirectArgumentBufferInfo *, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >=^{MTLHarvesterIndirectArgumentBufferInfo}}}}16
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >="base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >="value"{set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >="__tree_"{__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >="__first_"Q}}}"value"{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >="__tree_"{__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >="__first_"Q}}}"value"{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >="__tree_"{__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >="__first_"Q}}}"value"{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >="__tree_"{__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >="__first_"Q}}}"value"{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >="__tree_"{__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >="__first_"Q}}}"value"{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >="__tree_"{__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >="__first_"Q}}}"value"{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >="__tree_"{__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >="__first_"Q}}}"value"{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >="__tree_"{__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >="__first_"Q}}}"value"{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >="__tree_"{__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >="__first_"Q}}}"value"{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >="__tree_"{__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >="__first_"Q}}}"value"{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >="__tree_"{__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >="__first_"Q}}}}}
{vector<std::__1::map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >, std::__1::allocator<std::__1::map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > > > >="__begin_"^{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >}"__end_"^{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >}"__end_cap_"{__compressed_pair<std::__1::map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > > *, std::__1::allocator<std::__1::map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > > > >="__first_"^{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >}}}
{vector<std::__1::set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> > > >="__begin_"^{set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >}"__end_"^{set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >}"__end_cap_"{__compressed_pair<std::__1::set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> > *, std::__1::allocator<std::__1::set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> > > >="__first_"^{set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >}}}
@"<MTLBuffer>"
@"MTLSamplerDescriptor"
{?=dddddd}16@0:8
{?="originX"d"originY"d"width"d"height"d"znear"d"zfar"d}
@"MTLOverrideRenderPipelineState"
{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__first_"Q}}
v24@0:8r^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >={__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >=Q}}}{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >={__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}}16
^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}}16@0:8
v24@0:8^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}}16
^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}}
@"<MTLCommandQueue>"
@"<MTLLibrary>"
@"<MTLCaptureScope>"
v40@0:8@16@24@32
@"NSString"
@"MTLDepthStencilDescriptor"
@"<MTLTexture>"
@"MTLOverrideCache"
@32@0:8@16@24
c40@0:8@16@24@?32
c48@0:8@16@24@32@40
c52@0:8@16@24c32@36@44
