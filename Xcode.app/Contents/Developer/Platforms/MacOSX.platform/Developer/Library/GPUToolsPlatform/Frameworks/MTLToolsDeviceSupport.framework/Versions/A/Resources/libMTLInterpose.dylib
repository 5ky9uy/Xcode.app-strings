_St11logic_error
St9exception
St12length_error
startup1Stream
class
isKindOfClass:
device
pixelFormat
framebufferOnly
drawableSize
defaultFbufStream
texture
init
setDevice:
setBounds:
setFrame:
setDrawableSize:
setContentsScale:
setPixelFormat:
setFramebufferOnly:
nextDrawable
setPresentsWithTransaction:
present
presentAtTime:
presentAfterMinimumDuration:
graphicsSemaphore
traceMode
iosurface
baseObject
setIosurfaceSeed:
respondsToSelector:
performSelector:
activeCaptureDescriptor
includeBacktraceInFbufs
contentsScale
bounds
superlayer
window
frame
level
styleMask
setLabel:
originalObject
UTF8String
dealloc
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
insertDebugSignpost:
memoryBarrierWithResources:count:
stringWithFormat:
memoryBarrierWithScope:
popDebugGroup
pushDebugGroup:
setBuffer:offset:atIndex:
setBufferOffset:atIndex:
setBuffers:offsets:withRange:
setBytes:length:atIndex:
setSamplerState:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setSamplerStates:withRange:
setStageInRegion:
setStageInRegionWithIndirectBuffer:indirectBufferOffset:
setTexture:atIndex:
setTextures:withRange:
setThreadgroupMemoryLength:atIndex:
updateFence:
useHeap:
useHeaps:count:
waitForFence:
useResource:usage:
isEqual:
self
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
setPurgeableState:
makeAliasable
isAliasable
label
cpuCacheMode
storageMode
hazardTrackingMode
resourceOptions
heap
heapOffset
allocatedSize
resetWithRange:
indirectRenderCommandAtIndex:
size
useResources:count:usage:
setPipelineState:
descriptor
computeFunction
function
reflection
arguments
isActive
type
dataTypeDescription
elementIsArgumentBuffer
index
enumerateObjectsUsingBlock:
setComputePipelineState:
strongParent
addMarkedComputeResources:
endEncoding
pipelineState
argumentsIABIndices
setArgumentsIABIndices:
argumentsParentFunction
setArgumentsParentFunction:
ancestorMap
setAncestorMap:
callIndex
setCallIndex:
.cxx_destruct
.cxx_construct
_helper
_harvesterMarker
_pipelineState
_argumentsParentFunction
_callIndex
_argumentsIABIndices
_ancestorMap
generateMotionVectorsForTexture:previousTexture:resultBuffer:bufferOffset:
setMotionEstimationPipeline:
addMarkedVideoResources:
commandTypes
dataWithLength:
mutableBytes
getCommandType
drawArguments
primitiveType
vertexStart
vertexCount
instanceCount
baseInstance
drawIndexedArguments
indexCount
indexType
indexBufferVirtualAddress
baseVertex
getTessellationFactorArguments
virtualAddress
instanceStride
scale
drawPatchesArguments
numberOfPatchControlPoints
patchStart
patchCount
patchIndexBufferVirtualAddress
drawIndexedPatchesArguments
controlPointIndexBufferVirtualAddress
inheritPipelineState
getPipelineStateUniqueIdentifier
inheritBuffers
maxVertexBufferBindCount
getVertexBufferAtIndex:
maxFragmentBufferBindCount
getFragmentBufferAtIndex:
copy
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyIndirectCommandBuffer:sourceRange:destination:destinationIndex:
fillBuffer:range:value:
generateMipmapsForTexture:
optimizeContentsForCPUAccess:
optimizeContentsForCPUAccess:slice:level:
optimizeContentsForGPUAccess:
optimizeContentsForGPUAccess:slice:level:
optimizeIndirectCommandBuffer:withRange:
resetCommandsInBuffer:withRange:
synchronizeResource:
synchronizeTexture:slice:level:
addMarkedBlitResources:
pipelines
setPipelines:
setDescriptor:
setReflection:
_pipelines
_descriptor
_reflection
resourcePatchingTypeForResourceType:
argumentDescriptor
setDataType:
supportsFeatureSet:
setTextureType:
setIndex:
addObject:
newArgumentEncoderWithArguments:
encodedLength
newBufferWithLength:options:
setArgumentBuffer:offset:
initDummyEncoderIfNeeded
resourceIndex
textureType
setResourceIndex:
setForceResourceIndex:
supportArgumentBuffers
setMetalAssertionsEnabled:
heapBufferSizeAndAlignWithLength:options:
heapTextureSizeAndAlignWithDescriptor:
minLinearTextureAlignmentForPixelFormat:
initWithBaseObject:parent:
newBufferWithIOSurface:
newCommandQueue
newCommandQueueWithDescriptor:
newCommandQueueWithMaxCommandBufferCount:
newFence
newHeapWithDescriptor:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newLibraryWithData:error:
newSharedEventWithMachPort:
newTextureWithDescriptor:
dummyEncodeTextureIntoArgumentBufferForResourceIndex:withDescriptor:
newTiledTextureWithBytesNoCopy:length:deallocator:descriptor:offset:bytesPerRow:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
reserveResourceIndicesForResourceType:indices:indexCount:
supportsPrimitiveType:
supportsSampleCount:
supportsTextureSampleCount:
unmapShaderSampleBuffer
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
unwrapMTLRenderPipelineDescriptor:
newRenderPipelineStateWithDescriptor:completionHandler:
unwrapMTLComputePipelineDescriptor:
newComputePipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:completionHandler:
newComputePipelineStateWithDescriptor:options:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
name
isEqualToString:
parent
imageFilterFunctions
imageFilterFunctionInfo
count
newDepthStencilStateWithDescriptor:
newSamplerStateWithDescriptor:
dummyEncodeSamplerIntoArgumentBufferForResourceIndex:withDescriptor:
newDefaultLibrary
mainBundle
pathForResource:ofType:
newLibraryWithFile:error:
newLibraryWithURL:error:
path
gpuAddress
contents
newBufferWithBytes:length:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDefaultLibraryWithBundle:error:
array
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
setImageFilterFunctions:imageFilterFunctionInfo:
setWasHarvested:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newTextureWithDescriptor:iosurface:plane:
newSharedTextureWithHandle:
ioSurface
newTextureDescriptorFromIOSurface:
harvestAtNextCommitResources
newSharedTextureWithDescriptor:
newSharedTextureHandle
newSharedEvent
newSharedEventHandle
eventPort
newSharedEventWithHandle:
signaledValue
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newMotionEstimationPipelineWithDescriptor:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
youShallNotPass
setYouShallNotPass:
streams
setStreams:
blitRequest
setBlitRequest:
initialResources
setInitialResources:
usedResources
setUsedResources:
generatedResources
setGeneratedResources:
resourceIndices
setResourceIndices:
setHarvestAtNextCommitResources:
debugDevice
setDebugDevice:
unused
setUnused:
_formatBuffer
_dummyArgumentEncoder
isArgumentBufferPatchingTypeIndexed
resourceIndicesMutex
_dummySamplerIndex
_youShallNotPass
_streams
_blitRequest
_initialResources
_usedResources
_generatedResources
_resourceIndices
_harvestAtNextCommitResources
_debugDevice
_unused
setFunction:
resetPointerToUrlAssociation:
setWasGenerated:
setParentDevice:
setSignaledValue:
debugEvent
setDebugEvent:
parentDevice
wasHarvested
wasMutated
setWasMutated:
wasGenerated
wasDeltaGen
setWasDeltaGen:
isAppleInternal
setIsAppleInternal:
_wasHarvested
_wasMutated
_wasGenerated
_wasDeltaGen
_isAppleInternal
_debugEvent
_parentDevice
alloc
initWithBaseObject:parent:lockingPolicy:
setBaseObject:
insert:object:parent:
initWithDevice:
numberWithUnsignedInteger:
setObject:forKey:
baseObjectWithClass:
limits
viewports
setDefaultViewport:
viewport
colorAttachments
objectAtIndexedSubscript:
setIsColorAttachment:
resolveTexture
renderCommandEncoders
enumeratePointersUsingBlock:
visitDevice:
visitHeap:
visitBuffer:
visitDepthStencilState:
visitTexture:
visitSamplerState:
visitCommandQueue:
visitFence:
visitEvent:
visitFunction:
visitArgumentEncoder:
visitIndirectArgumentEncoder:
visitLibrary:
visitCommandBuffer:
visitRenderCommandEncoder:
visitComputeCommandEncoder:
visitBlitCommandEncoder:
visitParallelRenderCommandEncoder:
visitRenderPipelineState:
visitComputePipelineState:
visitPipelineLibrary:
visitIndirectCommandBuffer:
visitIndirectRenderCommand:
visitIndirectComputeCommand:
visitMotionEstimationPipelineState:
visitVideoCommandEncoder:
visitRasterizationRateMap:
visitDynamicLibrary:
visitBinaryLibrary:
visitBinaryArchive:
_currentDevice
_currentBuffer
_currentCommandQueue
_currentCommandBuffer
_currentLibrary
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawPrimitives:vertexStart:vertexCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
memoryBarrierWithResources:count:afterStages:beforeStages:
memoryBarrierWithScope:afterStages:beforeStages:
setBlendColorRed:green:blue:alpha:
setColorStoreAction:atIndex:
setColorStoreActionOptions:atIndex:
setCullMode:
setDepthBias:slopeScale:clamp:
setDepthClipMode:
setDepthStencilState:
setDepthStoreAction:
setDepthStoreActionOptions:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentBuffers:offsets:withRange:
setFragmentBytes:length:atIndex:
setFragmentSamplerState:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentSamplerStates:withRange:
setFragmentTexture:atIndex:
setFragmentTextures:withRange:
setFrontFacingWinding:
setLineWidth:
setPrimitiveRestartEnabled:
setScissorRect:
setStencilFrontReferenceValue:backReferenceValue:
setStencilReferenceValue:
setStencilStoreAction:
setStencilStoreActionOptions:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
setTriangleFillMode:
setVertexBuffer:offset:atIndex:
setVertexBufferOffset:atIndex:
setVertexBuffers:offsets:withRange:
setVertexBytes:length:atIndex:
setVertexSamplerState:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexSamplerStates:withRange:
setVertexTexture:atIndex:
setVertexTextures:withRange:
setViewport:
setVisibilityResultMode:offset:
textureBarrier
updateFence:afterStages:
waitForFence:beforeStages:
addMarkedRenderResources:
setViewports:count:
setScissorRects:count:
vertexFunction
vertexArguments
fragmentFunction
fragmentArguments
setRenderPipelineState:
executeCommandsInBuffer:withRange:
executeCommandsInBuffer:indirectBuffer:indirectBufferOffset:
vertexArgumentsIABIndices
setVertexArgumentsIABIndices:
vertexArgumentsParentFunction
setVertexArgumentsParentFunction:
fragmentArgumentsIABIndices
setFragmentArgumentsIABIndices:
fragmentArgumentsParentFunction
setFragmentArgumentsParentFunction:
_vertexArgumentsParentFunction
_fragmentArgumentsParentFunction
_vertexArgumentsIABIndices
_fragmentArgumentsIABIndices
debugPipeline
setDebugPipeline:
_function
_debugPipeline
notifySubmissionForEyeSPI:iosurface:bounds:submitFlags:
notifyPostPresentHandoffSPI
state
lockGraphicsAndWaitForThreads:
unlockGraphics
maxAvailableSizeWithAlignment:
debugHeap
setDebugHeap:
_debugHeap
activeCaptureState
captureDevice
standardUserDefaults
persistentDomainForName:
presentDrawable:
presentDrawable:atTime:
presentDrawable:afterMinimumDuration:
commit
commitAndWaitUntilSubmitted
commandBuffer
commandBufferWithUnretainedReferences
objectForKey:
insertDebugCaptureBoundary
numberWithBool:
enumerateKeysAndObjectsUsingBlock:
handleFrameBoundaryCommon
resourceTrackingEndOfFrame
invalidateSavePointerMap:
objectForKeyedSubscript:
unsignedIntValue
unsignedLongLongValue
buffers
indirectCommandBuffers
textures
thumbnailTexture:
harvestableTexture:
pipelineStates
kind
initWithKind:attributes:payload:
sendMessage:inReplyTo:
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
forDevice:
indexOfObject:
replaceObjectAtIndex:withObject:
resizeTexture:resolution:level:slice:depthPlane:inBuffer:withType:completion:
waitUntilCompleted
valueWithPointer:
pointerValue
removeAllObjects
dictionaryWithObjects:forKeys:count:
archivedDataWithRootObject:requiringSecureCoding:error:
length
DYCompressionAlgorithmFromString:
dy_compressedDataWithAlgorithm:
numberWithUnsignedLong:
attributes
libraries
boolValue
updateLibrary:withIR:isDefault:optionsDict:resultsDict:
updateLibrary:withSource:optionsDict:resultsDict:
setObject:forKeyedSubscript:
initWithKind:attributes:objectPayload:
captureCommandQueue
setLockingPolicy:
captureScope
isInternalQueue
canBeCaptured
numberWithUnsignedLongLong:
setLastCapturableCommandQueueUsed:
setBoundaryLessCaptureMode:
commandQueue
capturedCommandBuffers
isBoundaryLess
isOpenGLQueue
deviceAddress
sendMTLCommandQueueInfoUpdate
lastCapturableCommandQueueUsed
initWithCommandQueue:
setCaptureCommandQueue:
removeObjectForKey:
stringWithUTF8String:
boundaryLessCaptureMode
setIsBoundaryLess:
setFramesToCapture:
startCaptureWithDescriptor:
incrementGlobalFrameCounter
incrementCapturedFramesCounter
numberWithUnsignedInt:
dictionaryWithObjectsAndKeys:
messageWithKind:plistPayload:
sendMessage:
setResponsibleProcess:
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
isPurgeable
newRemoteTextureViewForDevice:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
isColorAttachment
basicTexture
setBasicTexture:
_isColorAttachment
_basicTexture
setFromBuffer:
setFromTexture:
setFromHeap:
setWasRestored:
fromBuffer
fromTexture
fromHeap
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
buffer
bufferOffset
bufferBytesPerRow
iosurfacePlane
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
isShareable
isFramebufferOnly
allowGPUOptimizedContents
remoteStorageTexture
swizzle
didModifyRange:
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
newRemoteBufferViewForDevice:
remoteStorageBuffer
loadAction
storeAction
depthAttachment
stencilAttachment
visibilityResultBuffer
commandQueues
startup0Stream
reset
objectAtIndex:
initWithBytes:length:
blitCommandEncoder
bytes
uniqueIdentifier
commandBuffers
computeCommandEncoders
parallelRenderCommandEncoders
supportIndirectCommandBuffers
bufferIdAndOffsetForGPUVirtualAddress:
renderPipelineIdForUniqueIdentifier:
computePipelineIdForUniqueIdentifier:
initWithResources:
_gpuAddressArray
_renderPipelineStates
_computePipelineStates
_objectMap
wasLoaded
setWasLoaded:
access
indirectArgumentBufferDecodingData
doesAliasResource:
setSize:
setCpuCacheMode:
setStorageMode:
usedSize
options
accessHistoryEventsUsingBlock:
latestEvent
oldestEvent
responsibleProcess
resourceUsage
offset
bytesPerRow
views
wasRestored
isContentExposedToCPU
waitUntilComplete
isRangeModified
resetRangeModified
debugBuffer
iosurfaceSeed
debugTexture
plane
isDrawable
debugLibrary
debugType
valueForKey:
integerValue
code
compileOptions
setOverrideTriple:
overrideTriple
functions
functionConstantsDictionary
externFunctionNames
containsObject:
newExternFunctionWithName:
newFunctionWithName:
constantValues
filePath
optimizedRangeList
commandIndex
debugQueue
maxCommandBufferCount
isProfilingEnabled
backgroundTrackingPID
skipRender
executionEnabled
copyDebugMarkers
range
enumerateVertexBuffersUsingBlock:
enumerateFragmentBuffersUsingBlock:
renderPipelineState
enumerateBuffersUsingBlock:
computePipelineState
dispatchType
setLanguageVersion:
setVertexFunction:
setRasterizationEnabled:
newArgumentEncoderWithBufferIndex:
setIndirectCommandBuffer:atIndex:
isLabelAppleInternal:
setDebugTexture:
_wasRestored
_wasLoaded
_iosurfaceSeed
_debugTexture
_fromHeap
_fromBuffer
_fromTexture
setProfilingEnabled:
addCompletedHandler:
addPurgedHeap:
addPurgedResource:
addScheduledHandler:
commitAndHold
computeCommandEncoder
computeCommandEncoderWithDispatchType:
debugCommandEncoder
doCorruptCBSPI:
encodeSignalEvent:value:
encodeWaitForEvent:value:
enqueue
waitUntilScheduled
unwrapMTLRenderPassDescriptor:
renderCommandEncoderWithDescriptor:
parallelRenderCommandEncoderWithDescriptor:
videoCommandEncoder
setBackgroundTrackingPID:
setExecutionEnabled:
setSkipRender:
finish
constantDataAtIndex:
newArgumentEncoderForBufferAtIndex:
setArgumentBuffer:startOffset:arrayElement:
setIndirectCommandBuffers:withRange:
setRenderPipelineState:atIndex:
newArgumentEncoderWithBufferIndex:reflection:
initWithBaseObject:parent:functions:
newFunctionWithName:constantValues:error:
newFunctionWithName:constantValues:completionHandler:
_insertInstanceOfClass:withParent:intoObject:
setDebugBuffer:
setIsContentExposedToCPU:
setDebugQueue:
setDebugFunction:
setDebugLibrary:
setComputeFunction:
setOptimizedRangeList:
setCommandIndex:
_currentIndirectCommandBuffer
isCommitted
requiresCompletionHandlerHarvesting
extracted:
notifyCommandBufferCaptured
addUsedResources:
_harvestResources
_addPostCommitHarvesting
_commitWaitCmdBufs
_preCommit
_postCommitWithEncodeBlock:
waitQueue
signalQueue
removeWritableResourcesForValue:
_processSignalEventResources:
_scheduleLateHarvestWithEvent:value:
_ancestorMaps
_usedIndirectArgumentBuffers
_executeIndirectCommandCalls
_waitCmdBufs
_commitIdentifier
_hasPresentDrawable
_ignoreHarvestAtCommit
_encoderCreated
_waitEnqueued
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
newTiledTextureWithDescriptor:offset:bytesPerRow:
_rangeModified
_isContentExposedToCPU
_debugBuffer
acceleratorPort
initWithTransport:
connect
boolResult
error
setRenderPipelineStates:withRange:
initWithNumberOfSubLayersToRemove:
_removeBaseObjectsFromObject:
_numLayers
xcodeOverrideFlags
isBlendingEnabled
setBlendingEnabled:
tessellationPartitionMode
patchType
maxTessellationFactor
setMaxTessellationFactor:
isTessellationFactorScaleEnabled
setTessellationFactorScaleEnabled:
xcodeOverrideScaleTessFactor
defaultViewport
_currentViewport
_currentFillMode
_currentState
_indexHasRenderPass
_indexIsUsed
_defaultViewport
getTexture:
setWaitQueue:
setSignalQueue:
_debugQueue
_waitQueue
_signalQueue
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:tessellationFactorBuffer:tessellationFactorBufferOffset:tessellationFactorBufferInstanceStride:
_commandIndex
renderCommandEncoder
_usedResourcesLock
debugFunction
_debugFunction
compare:
_freeImageFilterFunctionInfo
_debugLibrary
_imageFilterFunctions
_imageFilterFunctionInfo
initWithAPI:
initWithCaptureScope:
setCaptureScope:
_captureDevice
_captureCommandQueue
_captureScope
setCaptureDevice:
setCapturedCommandBuffers:
captureScopeActive
setCaptureScopeActive:
_capturedCommandBuffers
_captureScopeActive
_copyMTLCommandQueueInfos
messageWithKind:objectPayload:
attributeForKey:
boolForKey:
uint64ForKey:
setPreviousTraceMode:
setTraceMode:
uint32ForKey:
doubleForKey:
processInfo
processName
stringByReplacingOccurrencesOfString:withString:
URLWithString:relativeToURL:
objectPayload
plistPayload
defaultManager
isWritableFileAtPath:
processMessage:
atexit
acceptVisitor:
liveDebugging
liveDebuggingCaptureData
initWithData:
sendCaptureData:name:inReplyTo:
stringByAppendingPathComponent:
writeToFile:atomically:
sessionId
initWithObjectsAndKeys:
data
_waitForGraphicsThreads
_copyDeviceProfiles
_appendLinkTimeLibrary:toVersionsDictionary:
triggerFrame
notifyUsedDataSentWithDictionary:
notifyAllCaptureMetadataSent
localFilePathURL
_finishLocalCapture
numberWithInt:
setMetadataValue:forKey:error:
setPlatform:
setRuntimeIdentifier:
bundleWithIdentifier:
URLForResource:withExtension:
initWithContentsOfURL:
infoDictionary
setInfoPlist:
setVersionPlist:
setInterposeVersionGL:
setInterposeVersionMetal:
setGputoolsVersionInfo:
setName:
setVersion:
setBuild:
setProductType:
setPermanentIdentifier:
setMetalVersion:
setNativePointerSize:
supportedFeatureSets
setSupportedGraphicsAPIInfos:
addFileWithName:data:options:error:waitUntilDone:
commit:
initWithCaptureArchive:
processCaptureStream
stopCapture
queueAddress
sharedCaptureManager
defaultCaptureScope
setSessionId:
setTriggerFrame:
setSuspendAfterCapture:
setLockGraphicsAfterCapture:
armCaptureWithDescriptor:
setIncludeBacktraceInFbufs:
_inferCaptureDevice
_armCapture
initWithURL:options:error:
_startCapture
armPreparedCapture
invalidateCapture
_populateQueueAndThreadLabelMaps
_appendToAllCaptureDataSentMessagePayload:
_appendLinkTimeLibrariesToVersionsDictionary:
_canTriggerCaptureOnNextGraphicsCommand
_handleTurnOnCapture
_handleCaptureStreamCreated
_handleFrameEnd:
_handleTurnOffCapture
_armCaptureWithTransportMessage:
_hostCaptureArchivePath
_tempDirectoryPath
_lastCapturableCommandQueueUsed
_includeBacktraceInFbufs
_quicklookData
setLiveDebugging:
initWithDictionary:
setArmPreparedCapture:
setUnlockGraphicThreadsOnActivateCapture:
dictionaryWithObject:forKey:
initWithDomain:code:userInfo:
setLocalFilePathURL:
isCapturing
startCaptureWithDevice:
startCaptureWithCommandQueue:
startCaptureWithScope:
initWithDevice:commandQueue:
beginScope
endScope
triggerArmedCapture
_optimizedRangeList
waitOnGraphicsSemaphoreAssertions
graphicsLockWaitQueue
setDepth:
setArrayLength:
setWidth:
setHeight:
setSampleCount:
_device
_textures
newEvent
cache
setCache:
_cache
constantValueWithFunctionConstant:
setConstantValue:type:atIndex:
userInfo
_errorWithCode:description:recoverySuggestion:
hashTableWithOptions:
mapTableWithKeyOptions:valueOptions:
_constantValuesFrom:andSpecializedFunction:
functionType
internalPipelineStateLabel
setFragmentFunction:
performanceStatistics
computePipelineStates
_originalObjectFromMapTable:toolsObject:
maxTotalThreadsPerThreadgroup
setMaxTotalThreadsPerThreadgroup:
setOriginalObject:
errorWithDomain:code:userInfo:
setPreprocessorMacros:
setFastMathEnabled:
setDebuggingEnabled:
_compileOptionsFromDict:
_updateLibrary:resultsDict:creationBlock:
setDebugType:
setValue:forKey:
setCode:
setCompileOptions:
C@2d
dealloc
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
C@4dd@4dull
C@3ul@3ul
Ctul@3ul
Ctul
C@%llutul
Ctulul
Culul
C@%llut@%lluul@2ul
CU<b>ulul
Ctfful
C@%llut@%lluf@%lluf@2ul
C@%llut@2ul
C@6ul
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
label
T@"NSString",C
device
T@"<MTLDevice>",R
cpuCacheMode
storageMode
hazardTrackingMode
resourceOptions
heap
T@"<MTLHeap>",R
heapOffset
allocatedSize
size
C@%llutulul
v32@?0@"MTLArgument"8Q16^c24
pipelineState
T@"<MTLComputePipelineState>",&,N,V_pipelineState
argumentsIABIndices
T{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}},N,V_argumentsIABIndices
argumentsParentFunction
T@"<MTLFunction>",N,V_argumentsParentFunction
ancestorMap
T{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}},N,V_ancestorMap
callIndex
TQ,N,V_callIndex
Ctttul
Ctululul@3ultulul@3ul
Ctululul@3ultulul@3ulul
Ctultulul
Ctulul@3ul@3ultululul
Ctulul@3ul@3ultulululul
Ctulul@3ul@3ultulul@3ul
Ct@2ultul
Ct@2ulub
Ct@2ul
pipelines
T@"NSMutableDictionary",&,N,V_pipelines
descriptor
T@"MTLRenderPipelineDescriptor",C,N,V_descriptor
reflection
T@"MTLRenderPipelineReflection",&,N,V_reflection
v8@?0
@2ul
CUulul
CU<b>ultUulul
CU<b>ulUulul
Cul@%lluful
CU<b>Ut
CU<b>tt
v24@?0@"<MTLLibrary>"8@"NSError"16
v24@?0@"<MTLRenderPipelineState>"8@"NSError"16
CUultt
v24@?0@"<MTLComputePipelineState>"8@"NSError"16
CUult
v32@?0@"<MTLComputePipelineState>"8@"MTLComputePipelineReflection"16@"NSError"24
v32@?0@"<MTLRenderPipelineState>"8@"MTLRenderPipelineReflection"16@"NSError"24
Ctult
ciKernelMain
Ctultt
CUUt
default
metallib
CU<b>t
CU<b>ulult
CitS
v32@?0@"MTLCaptureFunction"8Q16^c24
CUUul
IOSurface-%p-%p-%lu-%u
CttU
Ctuiuw
youShallNotPass
T^{mutex={_opaque_pthread_mutex_t=q[56c]}},N,V_youShallNotPass
streams
T^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}},N,V_streams
blitRequest
T^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterIndirectCommandBufferHarvestStruct>={vector<MTLHarvesterIndirectCommandBufferHarvestStruct, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}^{MTLHarvesterIndirectCommandBufferHarvestStruct}{__compressed_pair<MTLHarvesterIndirectCommandBufferHarvestStruct *, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}}}{vector<MTLHarvesterIndirectCommandBufferHarvestStruct, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}^{MTLHarvesterIndirectCommandBufferHarvestStruct}{__compressed_pair<MTLHarvesterIndirectCommandBufferHarvestStruct *, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}}}}},N,V_blitRequest
initialResources
T^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >=^@^@{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >=^@}}{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@^@{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@}}{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@^@{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@}}{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@^@{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}},N,V_initialResources
usedResources
T^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >={__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >=Q}}}{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >={__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >=Q}}}{set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >={__tree<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSharedEvent>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSharedEvent> > >=Q}}}{set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >={__tree<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLMotionEstimationPipeline>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLMotionEstimationPipeline> > >=Q}}}{set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >={__tree<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectCommandBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectCommandBuffer> > >=Q}}}{set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >={__tree<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectRenderCommand>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectRenderCommand> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}},N,V_usedResources
generatedResources
T^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >={__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >=Q}}}{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >={__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >=Q}}}{set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >={__tree<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSharedEvent>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSharedEvent> > >=Q}}}{set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >={__tree<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLMotionEstimationPipeline>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLMotionEstimationPipeline> > >=Q}}}{set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >={__tree<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectCommandBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectCommandBuffer> > >=Q}}}{set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >={__tree<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectRenderCommand>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectRenderCommand> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}},N,V_generatedResources
resourceIndices
T^{array<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, 6>=[6{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}]},N,V_resourceIndices
harvestAtNextCommitResources
T^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >={__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >=Q}}}{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >={__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >=Q}}}{set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >={__tree<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSharedEvent>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSharedEvent> > >=Q}}}{set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >={__tree<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLMotionEstimationPipeline>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLMotionEstimationPipeline> > >=Q}}}{set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >={__tree<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectCommandBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectCommandBuffer> > >=Q}}}{set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >={__tree<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectRenderCommand>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectRenderCommand> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}},N,V_harvestAtNextCommitResources
debugDevice
T@"<MTLDevice>",&,N,V_debugDevice
unused
T{MTLHarvesterUnusedResourcesInfo={MTLHarvesterResourcesInfo=QQQQQQQQQQQQQQQQQ}{MTLHarvesterResourcesInfo=QQQQQQQQQQQQQQQQQ}},N,V_unused
debugEvent
T@"MTLToolsSharedEvent",N,V_debugEvent
parentDevice
T@"<MTLDevice>",N,V_parentDevice
wasHarvested
Tc,N,V_wasHarvested
wasMutated
Tc,N,V_wasMutated
wasGenerated
Tc,N,V_wasGenerated
wasDeltaGen
Tc,N,V_wasDeltaGen
isAppleInternal
Tc,N,V_isAppleInternal
v24@?0@"MTLToolsObject"8^c16
Cultultultul
Cululultultululul
Cululultul
Cululultulul
Cululultulullul
Culultultul
Cultultul
Cululultululul
Cultul
Cululul
Culululul
Cululululul
C@%llutululul
Cffff
Cfff
C@4l
Cuiui
C@6d
CUul
Ct@2ulU
CttulUU
T@"<MTLRenderPipelineState>",&,N,V_pipelineState
vertexArgumentsIABIndices
T{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}},N,V_vertexArgumentsIABIndices
vertexArgumentsParentFunction
T@"<MTLFunction>",N,V_vertexArgumentsParentFunction
fragmentArgumentsIABIndices
T{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}},N,V_fragmentArgumentsIABIndices
fragmentArgumentsParentFunction
T@"<MTLFunction>",N,V_fragmentArgumentsParentFunction
T@"MTLRenderPipelineDescriptor",&,N,V_descriptor
T@"MTLComputePipelineDescriptor",&,N,V_descriptor
T@"MTLComputePipelineReflection",&,N,V_reflection
function
T@"<MTLFunction>",&,N,V_function
debugPipeline
T@"<MTLComputePipelineState>",&,N,V_debugPipeline
Cult@4dul
debugHeap
T@"<MTLHeap>",&,N,V_debugHeap
v24@?0@"<MTLDevice>"8^c16
v24@?0^{MTLDeviceInfo=@i}8^B16
MTLUseInterpose
METAL_LOAD_INTERPOSER
com.apple.GPUTools
IgnoreInsertDebugCaptureBoundary
Ignoring insertDebugCaptureBoundary
v32@?0@8@"DYMTLCommandQueueInfo"16^c24
v32@?0@8@"DYMTLDeviceProfile"16^c24
resource-stream
DYMTLCommonDebugFunctionPlayer
Unsupported resource type: %u
v24@?0@"<MTLTexture>"8Q16
Unsupported batch resource type: %u
resource-stream-batch-%lu
DYMTL_UI_SERVER_CAPTURE
Harvesting
DYResourceType _ValidateIncomingResource(uint32_t)
unsafeResourceType > 0 && unsafeResourceType < kDYMaxResourceTypes
void _GetDeviceAndResource(uint64_t, uint64_t, MTLDebugDevice *__autoreleasing *, __autoreleasing id *)
(uint64_t)[debugDevice originalObject] == deviceID
[debugDevice isKindOfClass:[MTLDebugDevice class]]
frame index
frame duration
timestamp
isColorAttachment
Tc,N,V_isColorAttachment
basicTexture
T@"<MTLTexture>",&,N,V_basicTexture
rootResource
T@"<MTLResource>",R
parentTexture
T@"<MTLTexture>",R
parentRelativeLevel
parentRelativeSlice
buffer
T@"<MTLBuffer>",R
bufferOffset
bufferBytesPerRow
iosurface
T^{__IOSurface=},R
iosurfacePlane
textureType
pixelFormat
width
height
depth
mipmapLevelCount
sampleCount
arrayLength
usage
shareable
Tc,R,GisShareable
framebufferOnly
Tc,R,GisFramebufferOnly
allowGPUOptimizedContents
Tc,R
remoteStorageTexture
swizzle
T{?=CCCC},R,N
length
remoteStorageBuffer
%@-%p
%@-%@-%p
CNUw
%@-%d-%@
ancestorMaps-%d
indirectArgumentBuffers-%d
Ciui
C@6ulululU<b>ululul
v48@?0r^v8Q16r*24@"DYGuestAppClient"32@"DYTransportMessage"40
CtU<b>ulul
CSuwuw
MTLIndirectCmdBuf-%d-Snapshot
MTLIndirectCmdRng-%d-Snapshot
v16@?0^{Stream=^{VMBuffer}(?=^v^{?})^vQ^{__CFString}@?@?iB}8
GPU Tx
MTLLibrary
MTLHeap
Ciul
CiulU
v24@?0^{HeapHistoryEvent=^{HeapHistoryEvent}^vc}8^{HeapHistoryEvent=^{HeapHistoryEvent}^vc}16
MTLTexture-%p-%lu-%lu
MTLBuffer-%p-@-%p
CUululul
Culul@2ul@2ul
MTLBuffer
CtUulul
MTLBuffer-%p-@-0x0
C@2ul
MTLBuffer-%p-@-%p-%zu
MTLTexture
MTLDepthStencilState
MTLSamplerState
type
CSUt
MTLFence
MTLSharedEvent
MTLEvent
MTLRenderPipelineState
MTLComputePipelineState
MTLMotionEstimationPipelineState
MTLIndirectCommandBuffer
MTLIndirectCmdBuf-%p-@-0x0
MTLIndirectCmdBuf-%p-@-%p
MTLIndirectRenderCommand
MTLCommandQueue
CUUUU
CUUU
MTLTexture-%p-%lu-%lu-Fetch
IOSurface-%p-%p-%lu-%u-Fetch
MTLBuffer-%p-Fetch
CS@2ul
v32@?0^{?=ccQ@QQQQQcff}8Q16^c24
#include <metal_stdlib>
using namespace metal;
struct CopyBufferShaderInputs {
command_buffer destination;
command_buffer source;
vertex void copyBuffer (device CopyBufferShaderInputs& in [[ buffer(0) ]], uint i [[ vertex_id ]])
render_command src(in.source, i);
render_command dest(in.destination, i);
dest.copy_command(src);
copyBuffer
#include <metal_stdlib>
using namespace metal;
vertex void copyBuffer (device char* dest [[ buffer(0) ]], constant char* src [[ buffer(1) ]], uint i [[ vertex_id ]])
dest[i] = src[i];
MotionEstimationPipeline
CU<b>ulul@6ulululul
CU<b>ul@6ululul
C@6ululU<b>ulul
wasRestored
Tc,N,V_wasRestored
wasLoaded
Tc,N,V_wasLoaded
iosurfaceSeed
TI,N,V_iosurfaceSeed
debugTexture
T@"<MTLTexture>",&,N,V_debugTexture
fromHeap
T@"<MTLHeap>",&,N,V_fromHeap
fromBuffer
T@"<MTLBuffer>",&,N,V_fromBuffer
fromTexture
T@"<MTLTexture>",&,N,V_fromTexture
T@"MTLSamplerDescriptor",&,N,V_descriptor
v24@?0@"<MTLFunction>"8@"NSError"16
ReadOnly
MTLArgumentAccessReadOnly
ReadWrite
MTLArgumentAccessReadWrite
WriteOnly
MTLArgumentAccessWriteOnly
Unknown
MTLArgumentBuffersTier1
MTLArgumentBuffersTier2
PrivateImplicit
MTLArgumentImageBlockKindPrivateImplicit
PrivateExplicit
MTLArgumentImageBlockKindPrivateExplicit
Buffer
MTLArgumentTypeBuffer
ThreadgroupMemory
MTLArgumentTypeThreadgroupMemory
Texture
MTLArgumentTypeTexture
Sampler
MTLArgumentTypeSampler
PrivateIndirectConstant
MTLArgumentTypePrivateIndirectConstant
PrivateBuiltIn
MTLArgumentTypePrivateBuiltIn
ImageblockData
MTLArgumentTypeImageblockData
Imageblock
MTLArgumentTypeImageblock
PrivateValue
MTLArgumentTypePrivateValue
PrivateRenderPipeline
MTLArgumentTypePrivateRenderPipeline
PrivateComputePipeline
MTLArgumentTypePrivateComputePipeline
PrivateIndirectCommandBuffer
MTLArgumentTypePrivateIndirectCommandBuffer
PrivateByVal
MTLArgumentTypePrivateByVal
Invalid
MTLAttributeFormatInvalid
UChar2
MTLAttributeFormatUChar2
UChar3
MTLAttributeFormatUChar3
UChar4
MTLAttributeFormatUChar4
Char2
MTLAttributeFormatChar2
Char3
MTLAttributeFormatChar3
Char4
MTLAttributeFormatChar4
UChar2Normalized
MTLAttributeFormatUChar2Normalized
UChar3Normalized
MTLAttributeFormatUChar3Normalized
UChar4Normalized
MTLAttributeFormatUChar4Normalized
Char2Normalized
MTLAttributeFormatChar2Normalized
Char3Normalized
MTLAttributeFormatChar3Normalized
Char4Normalized
MTLAttributeFormatChar4Normalized
UShort2
MTLAttributeFormatUShort2
UShort3
MTLAttributeFormatUShort3
UShort4
MTLAttributeFormatUShort4
Short2
MTLAttributeFormatShort2
Short3
MTLAttributeFormatShort3
Short4
MTLAttributeFormatShort4
UShort2Normalized
MTLAttributeFormatUShort2Normalized
UShort3Normalized
MTLAttributeFormatUShort3Normalized
UShort4Normalized
MTLAttributeFormatUShort4Normalized
Short2Normalized
MTLAttributeFormatShort2Normalized
Short3Normalized
MTLAttributeFormatShort3Normalized
Short4Normalized
MTLAttributeFormatShort4Normalized
Half2
MTLAttributeFormatHalf2
Half3
MTLAttributeFormatHalf3
Half4
MTLAttributeFormatHalf4
Float
MTLAttributeFormatFloat
Float2
MTLAttributeFormatFloat2
Float3
MTLAttributeFormatFloat3
Float4
MTLAttributeFormatFloat4
MTLAttributeFormatInt
Int2
MTLAttributeFormatInt2
Int3
MTLAttributeFormatInt3
Int4
MTLAttributeFormatInt4
UInt
MTLAttributeFormatUInt
UInt2
MTLAttributeFormatUInt2
UInt3
MTLAttributeFormatUInt3
UInt4
MTLAttributeFormatUInt4
Int1010102Normalized
MTLAttributeFormatInt1010102Normalized
UInt1010102Normalized
MTLAttributeFormatUInt1010102Normalized
UChar4Normalized_BGRA
MTLAttributeFormatUChar4Normalized_BGRA
UInt_VertexID
MTLAttributeFormatUInt_VertexID
UInt_InstanceID
MTLAttributeFormatUInt_InstanceID
UChar
MTLAttributeFormatUChar
Char
MTLAttributeFormatChar
UCharNormalized
MTLAttributeFormatUCharNormalized
CharNormalized
MTLAttributeFormatCharNormalized
UShort
MTLAttributeFormatUShort
Short
MTLAttributeFormatShort
UShortNormalized
MTLAttributeFormatUShortNormalized
ShortNormalized
MTLAttributeFormatShortNormalized
Half
MTLAttributeFormatHalf
Buffers
MTLBarrierScopeBuffers
Textures
MTLBarrierScopeTextures
RenderTargets
MTLBarrierScopeRenderTargets
Zero
MTLBlendFactorZero
MTLBlendFactorOne
SourceColor
MTLBlendFactorSourceColor
OneMinusSourceColor
MTLBlendFactorOneMinusSourceColor
SourceAlpha
MTLBlendFactorSourceAlpha
OneMinusSourceAlpha
MTLBlendFactorOneMinusSourceAlpha
DestinationColor
MTLBlendFactorDestinationColor
OneMinusDestinationColor
MTLBlendFactorOneMinusDestinationColor
DestinationAlpha
MTLBlendFactorDestinationAlpha
OneMinusDestinationAlpha
MTLBlendFactorOneMinusDestinationAlpha
SourceAlphaSaturated
MTLBlendFactorSourceAlphaSaturated
BlendColor
MTLBlendFactorBlendColor
OneMinusBlendColor
MTLBlendFactorOneMinusBlendColor
BlendAlpha
MTLBlendFactorBlendAlpha
OneMinusBlendAlpha
MTLBlendFactorOneMinusBlendAlpha
Source1Color
MTLBlendFactorSource1Color
OneMinusSource1Color
MTLBlendFactorOneMinusSource1Color
Source1Alpha
MTLBlendFactorSource1Alpha
OneMinusSource1Alpha
MTLBlendFactorOneMinusSource1Alpha
MTLBlendOperationAdd
Subtract
MTLBlendOperationSubtract
ReverseSubtract
MTLBlendOperationReverseSubtract
MTLBlendOperationMin
MTLBlendOperationMax
None
MTLBlitOptionNone
DepthFromDepthStencil
MTLBlitOptionDepthFromDepthStencil
StencilFromDepthStencil
MTLBlitOptionStencilFromDepthStencil
RowLinearPVRTC
MTLBlitOptionRowLinearPVRTC
MTLBuiltInArgumentInvalid
MTLBuiltInArgumentVertexID
MTLBuiltInArgumentInstanceID
MTLBuiltInArgumentBaseVertex
MTLBuiltInArgumentBaseInstance
MTLBuiltInArgumentThreadPositionInGrid
MTLBuiltInArgumentThreadsPerGrid
MTLBuiltInArgumentThreadPositionInThreadgroup
MTLBuiltInArgumentThreadIndexInThreadgroup
MTLBuiltInArgumentThreadsPerThreadgroup
MTLBuiltInArgumentThreadgroupPositionInGrid
MTLBuiltInArgumentThreadgroupsPerGrid
MTLBuiltInArgumentThreadExecutionWidth
MTLBuiltInArgumentPatchID
MTLBuiltInArgumentPositionInPatch
MTLBuiltInArgumentStageInGridOrigin
MTLBuiltInArgumentStageInGridSize
MTLBuiltInArgumentThreadIndexInQuadgroup
MTLBuiltInArgumentThreadIndexInSimdgroup
MTLBuiltInArgumentThreadsPerQuadgroup
MTLBuiltInArgumentThreadsPerSimdgroup
MTLBuiltInAmplificationID
MTLBuiltInAmplificationCount
DefaultCache
MTLCPUCacheModeDefaultCache
WriteCombined
MTLCPUCacheModeWriteCombined
MTLColorWriteMaskNone
Alpha
MTLColorWriteMaskAlpha
Blue
MTLColorWriteMaskBlue
Green
MTLColorWriteMaskGreen
MTLColorWriteMaskRed
MTLColorWriteMaskAll
MTLCommandBufferErrorNone
Internal
MTLCommandBufferErrorInternal
Timeout
MTLCommandBufferErrorTimeout
PageFault
MTLCommandBufferErrorPageFault
Blacklisted
MTLCommandBufferErrorBlacklisted
NotPermitted
MTLCommandBufferErrorNotPermitted
OutOfMemory
MTLCommandBufferErrorOutOfMemory
InvalidResource
MTLCommandBufferErrorInvalidResource
Memoryless
MTLCommandBufferErrorMemoryless
DeviceRemoved
MTLCommandBufferErrorDeviceRemoved
ProtectionViolation
MTLCommandBufferErrorProtectionViolation
NotEnqueued
MTLCommandBufferStatusNotEnqueued
Enqueued
MTLCommandBufferStatusEnqueued
Committed
MTLCommandBufferStatusCommitted
Scheduled
MTLCommandBufferStatusScheduled
Completed
MTLCommandBufferStatusCompleted
Error
MTLCommandBufferStatusError
Abort
MTLCommandBufferStatusAbort
AllBytes
MTLCommandDataCorruptionModeAllBytes
RandomLocation
MTLCommandDataCorruptionModeRandomLocation
Render
MTLCommandEncoderTypeRender
Compute
MTLCommandEncoderTypeCompute
Blit
MTLCommandEncoderTypeBlit
ParallelRender
MTLCommandEncoderTypeParallelRender
FragmentRender
MTLCommandEncoderTypeFragmentRender
Video
MTLCommandEncoderTypeVideo
ResourceState
MTLCommandEncoderTypeResourceState
Never
MTLCompareFunctionNever
Less
MTLCompareFunctionLess
Equal
MTLCompareFunctionEqual
LessEqual
MTLCompareFunctionLessEqual
Greater
MTLCompareFunctionGreater
NotEqual
MTLCompareFunctionNotEqual
GreaterEqual
MTLCompareFunctionGreaterEqual
Always
MTLCompareFunctionAlways
NoError
MTLCompilerErrorNoError
FatalError
MTLCompilerErrorFatalError
CompilationError
MTLCompilerErrorCompilationError
MTLCompilerErrorTimeout
Default
MTLCompilerTestModeDefault
IntermittentCrash
MTLCompilerTestModeIntermittentCrash
MTLComputeFMABit
RoundToInfinityBit
MTLComputeFPRoundToInfinityBit
DenormBit
MTLComputeFPDenormBit
InfNanBit
MTLComputeFPInfNanBit
RoundToNearestBit
MTLComputeFPRoundToNearestBit
RoundToZeroBit
MTLComputeFPRoundToZeroBit
MTLCounterSampleBufferErrorOutOfMemory
MTLCounterSampleBufferErrorInternal
MTLCullModeNone
Front
MTLCullModeFront
Back
MTLCullModeBack
MTLDataTypeNone
Struct
MTLDataTypeStruct
Array
MTLDataTypeArray
MTLDataTypeFloat
MTLDataTypeFloat2
MTLDataTypeFloat3
MTLDataTypeFloat4
Float2x2
MTLDataTypeFloat2x2
Float2x3
MTLDataTypeFloat2x3
Float2x4
MTLDataTypeFloat2x4
Float3x2
MTLDataTypeFloat3x2
Float3x3
MTLDataTypeFloat3x3
Float3x4
MTLDataTypeFloat3x4
Float4x2
MTLDataTypeFloat4x2
Float4x3
MTLDataTypeFloat4x3
Float4x4
MTLDataTypeFloat4x4
MTLDataTypeHalf
MTLDataTypeHalf2
MTLDataTypeHalf3
MTLDataTypeHalf4
Half2x2
MTLDataTypeHalf2x2
Half2x3
MTLDataTypeHalf2x3
Half2x4
MTLDataTypeHalf2x4
Half3x2
MTLDataTypeHalf3x2
Half3x3
MTLDataTypeHalf3x3
Half3x4
MTLDataTypeHalf3x4
Half4x2
MTLDataTypeHalf4x2
Half4x3
MTLDataTypeHalf4x3
Half4x4
MTLDataTypeHalf4x4
MTLDataTypeInt
MTLDataTypeInt2
MTLDataTypeInt3
MTLDataTypeInt4
MTLDataTypeUInt
MTLDataTypeUInt2
MTLDataTypeUInt3
MTLDataTypeUInt4
MTLDataTypeShort
MTLDataTypeShort2
MTLDataTypeShort3
MTLDataTypeShort4
MTLDataTypeUShort
MTLDataTypeUShort2
MTLDataTypeUShort3
MTLDataTypeUShort4
MTLDataTypeChar
MTLDataTypeChar2
MTLDataTypeChar3
MTLDataTypeChar4
MTLDataTypeUChar
MTLDataTypeUChar2
MTLDataTypeUChar3
MTLDataTypeUChar4
Bool
MTLDataTypeBool
Bool2
MTLDataTypeBool2
Bool3
MTLDataTypeBool3
Bool4
MTLDataTypeBool4
PrivateIndirectArgument
MTLDataTypePrivateIndirectArgument
MTLDataTypeTexture
MTLDataTypeSampler
Pointer
MTLDataTypePointer
PrivateVoid
MTLDataTypePrivateVoid
R8Unorm
MTLDataTypeR8Unorm
R8Snorm
MTLDataTypeR8Snorm
R16Unorm
MTLDataTypeR16Unorm
R16Snorm
MTLDataTypeR16Snorm
RG8Unorm
MTLDataTypeRG8Unorm
RG8Snorm
MTLDataTypeRG8Snorm
RG16Unorm
MTLDataTypeRG16Unorm
RG16Snorm
MTLDataTypeRG16Snorm
RGBA8Unorm
MTLDataTypeRGBA8Unorm
RGBA8Unorm_sRGB
MTLDataTypeRGBA8Unorm_sRGB
RGBA8Snorm
MTLDataTypeRGBA8Snorm
RGBA16Unorm
MTLDataTypeRGBA16Unorm
RGBA16Snorm
MTLDataTypeRGBA16Snorm
RGB10A2Unorm
MTLDataTypeRGB10A2Unorm
RG11B10Float
MTLDataTypeRG11B10Float
RGB9E5Float
MTLDataTypeRGB9E5Float
RenderPipeline
MTLDataTypeRenderPipeline
ComputePipeline
MTLDataTypeComputePipeline
IndirectCommandBuffer
MTLDataTypeIndirectCommandBuffer
Long
MTLDataTypeLong
Long2
MTLDataTypeLong2
Long3
MTLDataTypeLong3
Long4
MTLDataTypeLong4
ULong
MTLDataTypeULong
ULong2
MTLDataTypeULong2
ULong3
MTLDataTypeULong3
ULong4
MTLDataTypeULong4
Double
MTLDataTypeDouble
Double2
MTLDataTypeDouble2
Double3
MTLDataTypeDouble3
Double4
MTLDataTypeDouble4
Float8
MTLDataTypeFloat8
Float16
MTLDataTypeFloat16
Half8
MTLDataTypeHalf8
Half16
MTLDataTypeHalf16
Int8
MTLDataTypeInt8
Int16
MTLDataTypeInt16
UInt8
MTLDataTypeUInt8
UInt16
MTLDataTypeUInt16
Short8
MTLDataTypeShort8
Short16
MTLDataTypeShort16
UShort8
MTLDataTypeUShort8
UShort16
MTLDataTypeUShort16
Char8
MTLDataTypeChar8
Char16
MTLDataTypeChar16
UChar8
MTLDataTypeUChar8
UChar16
MTLDataTypeUChar16
Long8
MTLDataTypeLong8
Long16
MTLDataTypeLong16
ULong8
MTLDataTypeULong8
ULong16
MTLDataTypeULong16
Double8
MTLDataTypeDouble8
Double16
MTLDataTypeDouble16
Clip
MTLDepthClipModeClip
Clamp
MTLDepthClipModeClamp
iOS_1
MTLDeviceFeatureProfileiOS_1
iOS_2
MTLDeviceFeatureProfileiOS_2
iOS_3
MTLDeviceFeatureProfileiOS_3
iOS_4
MTLDeviceFeatureProfileiOS_4
iOS_5
MTLDeviceFeatureProfileiOS_5
iOS_6
MTLDeviceFeatureProfileiOS_6
tvOS_2
MTLDeviceFeatureProfiletvOS_2
tvOS_1
MTLDeviceFeatureProfiletvOS_1
OSX_1
MTLDeviceFeatureProfileOSX_1
macOS_2
MTLDeviceFeatureProfilemacOS_2
tvOS_3
MTLDeviceFeatureProfiletvOS_3
WatchOS_2
MTLDeviceFeatureProfileWatchOS_2
watchOS_1
MTLDeviceFeatureProfilewatchOS_1
Undefined
MTLDeviceFeatureProfileUndefined
BuiltIn
MTLDeviceLocationBuiltIn
Slot
MTLDeviceLocationSlot
External
MTLDeviceLocationExternal
Serial
MTLDispatchTypeSerial
Concurrent
MTLDispatchTypeConcurrent
iOS_GPUFamily1_v1
MTLFeatureSet_iOS_GPUFamily1_v1
iOS_GPUFamily2_v1
MTLFeatureSet_iOS_GPUFamily2_v1
iOS_GPUFamily1_v2
MTLFeatureSet_iOS_GPUFamily1_v2
iOS_GPUFamily2_v2
MTLFeatureSet_iOS_GPUFamily2_v2
iOS_GPUFamily3_v1
MTLFeatureSet_iOS_GPUFamily3_v1
iOS_GPUFamily1_v3
MTLFeatureSet_iOS_GPUFamily1_v3
iOS_GPUFamily2_v3
MTLFeatureSet_iOS_GPUFamily2_v3
iOS_GPUFamily3_v2
MTLFeatureSet_iOS_GPUFamily3_v2
iOS_GPUFamily1_v4
MTLFeatureSet_iOS_GPUFamily1_v4
iOS_GPUFamily2_v4
MTLFeatureSet_iOS_GPUFamily2_v4
iOS_GPUFamily3_v3
MTLFeatureSet_iOS_GPUFamily3_v3
iOS_GPUFamily4_v1
MTLFeatureSet_iOS_GPUFamily4_v1
iOS_GPUFamily1_v5
MTLFeatureSet_iOS_GPUFamily1_v5
iOS_GPUFamily2_v5
MTLFeatureSet_iOS_GPUFamily2_v5
iOS_GPUFamily3_v4
MTLFeatureSet_iOS_GPUFamily3_v4
iOS_GPUFamily4_v2
MTLFeatureSet_iOS_GPUFamily4_v2
iOS_GPUFamily5_v1
MTLFeatureSet_iOS_GPUFamily5_v1
macOS_GPUFamily1_v2
MTLFeatureSet_macOS_GPUFamily1_v2
macOS_ReadWriteTextureTier2
MTLFeatureSet_macOS_ReadWriteTextureTier2
macOS_GPUFamily1_v3
MTLFeatureSet_macOS_GPUFamily1_v3
macOS_GPUFamily1_v4
MTLFeatureSet_macOS_GPUFamily1_v4
macOS_GPUFamily2_v1
MTLFeatureSet_macOS_GPUFamily2_v1
watchOS_GPUFamily1_v1
MTLFeatureSet_watchOS_GPUFamily1_v1
watchOS_GPUFamily2_v1
MTLFeatureSet_watchOS_GPUFamily2_v1
tvOS_GPUFamily1_v1
MTLFeatureSet_tvOS_GPUFamily1_v1
tvOS_GPUFamily1_v2
MTLFeatureSet_tvOS_GPUFamily1_v2
tvOS_GPUFamily1_v3
MTLFeatureSet_tvOS_GPUFamily1_v3
tvOS_GPUFamily2_v1
MTLFeatureSet_tvOS_GPUFamily2_v1
tvOS_GPUFamily1_v4
MTLFeatureSet_tvOS_GPUFamily1_v4
tvOS_GPUFamily2_v2
MTLFeatureSet_tvOS_GPUFamily2_v2
macOS_GPUFamily1_v1
MTLFeatureSet_macOS_GPUFamily1_v1
Vertex
MTLFunctionTypeVertex
Fragment
MTLFunctionTypeFragment
Kernel
MTLFunctionTypeKernel
Extern
MTLFunctionTypeExtern
Generic
MTLGLFragmentInputTypeGeneric
PPAttrib
MTLGLFragmentInputTypePPAttrib
MacCatalyst1
MTLGPUFamilyMacCatalyst1
MacCatalyst2
MTLGPUFamilyMacCatalyst2
Apple1
MTLGPUFamilyApple1
Apple2
MTLGPUFamilyApple2
Apple3
MTLGPUFamilyApple3
Apple4
MTLGPUFamilyApple4
Apple5
MTLGPUFamilyApple5
Apple6
MTLGPUFamilyApple6
Mac1
MTLGPUFamilyMac1
Mac2
MTLGPUFamilyMac2
Common1
MTLGPUFamilyCommon1
Common2
MTLGPUFamilyCommon2
Common3
MTLGPUFamilyCommon3
High
MTLGPUPriorityHigh
Normal
MTLGPUPriorityNormal
MTLGPUPriorityLow
Disabled
MTLGPUPriorityDisabled
Media
MTLGPUPriorityMedia
RealTime
MTLGPUPriorityRealTime
MTLHazardTrackingModeDefault
Untracked
MTLHazardTrackingModeUntracked
Tracked
MTLHazardTrackingModeTracked
Automatic
MTLHeapTypeAutomatic
Placement
MTLHeapTypePlacement
Sparse
MTLHeapTypeSparse
Texture2DSPI
MTLImageFilterFunctionArgumentTypeTexture2DSPI
Texture2DWriteSPI
MTLImageFilterFunctionArgumentTypeTexture2DWriteSPI
SamplerSPI
MTLImageFilterFunctionArgumentTypeSamplerSPI
BufferSPI
MTLImageFilterFunctionArgumentTypeBufferSPI
ThreadPositionInGridSPI
MTLImageFilterFunctionArgumentTypeThreadPositionInGridSPI
OutputSPI
MTLImageFilterFunctionArgumentTypeOutputSPI
ThreadPositionInThreadgroupSPI
MTLImageFilterFunctionArgumentTypeThreadPositionInThreadgroupSPI
ImageBlockSPI
MTLImageFilterFunctionArgumentTypeImageBlockSPI
MTLIndexTypeUInt16
UInt32
MTLIndexTypeUInt32
MTLIndirectArgumentBuffersTier1
MTLIndirectArgumentBuffersTier2
ConcurrentDispatchThreads
MTLIndirectCommandTypeConcurrentDispatchThreads
Draw
MTLIndirectCommandTypeDraw
DrawIndexed
MTLIndirectCommandTypeDrawIndexed
DrawPatches
MTLIndirectCommandTypeDrawPatches
ConcurrentDispatch
MTLIndirectCommandTypeConcurrentDispatch
DrawIndexedPatches
MTLIndirectCommandTypeDrawIndexedPatches
MTLLanguageVersion1_0
MTLLanguageVersion1_1
MTLLanguageVersion1_2
MTLLanguageVersion2_0
MTLLanguageVersion2_1
MTLLanguageVersion2_2
Unsupported
MTLLibraryErrorUnsupported
MTLLibraryErrorInternal
CompileFailure
MTLLibraryErrorCompileFailure
CompileWarning
MTLLibraryErrorCompileWarning
FunctionNotFound
MTLLibraryErrorFunctionNotFound
FileNotFound
MTLLibraryErrorFileNotFound
DontCare
MTLLoadActionDontCare
Load
MTLLoadActionLoad
Clear
MTLLoadActionClear
MTLLogicOpClear
MTLLogicOpSet
Copy
MTLLogicOpCopy
InverseCopy
MTLLogicOpInverseCopy
Noop
MTLLogicOpNoop
Inverse
MTLLogicOpInverse
MTLLogicOpAnd
Nand
MTLLogicOpNand
MTLLogicOpOr
MTLLogicOpNor
MTLLogicOpXor
Equiv
MTLLogicOpEquiv
RevAnd
MTLLogicOpRevAnd
InvAnd
MTLLogicOpInvAnd
RevOr
MTLLogicOpRevOr
InvOr
MTLLogicOpInvOr
MTLLogicOperationClear
MTLLogicOperationSet
MTLLogicOperationCopy
MTLLogicOperationInverseCopy
MTLLogicOperationNoop
MTLLogicOperationInverse
MTLLogicOperationAnd
MTLLogicOperationNand
MTLLogicOperationOr
MTLLogicOperationNor
MTLLogicOperationXor
MTLLogicOperationEquiv
MTLLogicOperationRevAnd
MTLLogicOperationInvAnd
MTLLogicOperationRevOr
MTLLogicOperationInvOr
Sample0
MTLMultisampleDepthResolveFilterSample0
MTLMultisampleDepthResolveFilterMin
MTLMultisampleDepthResolveFilterMax
MTLMultisampleStencilResolveFilterSample0
DepthResolvedSample
MTLMultisampleStencilResolveFilterDepthResolvedSample
MTLMutabilityDefault
Mutable
MTLMutabilityMutable
Immutable
MTLMutabilityImmutable
MTLPatchTypeNone
Triangle
MTLPatchTypeTriangle
Quad
MTLPatchTypeQuad
MTLPipelineOptionNone
ArgumentInfo
MTLPipelineOptionArgumentInfo
BufferTypeInfo
MTLPipelineOptionBufferTypeInfo
EnableAssertions
MTLPipelineOptionEnableAssertions
PrivateBuiltInArguments
MTLPipelineOptionPrivateBuiltInArguments
PrivatePostVertexDump
MTLPipelineOptionPrivatePostVertexDump
PrivateFunctionWithNoReflection
MTLPipelineOptionPrivateFunctionWithNoReflection
PrivateBufferAccessToVertexDescriptor
MTLPipelineOptionPrivateBufferAccessToVertexDescriptor
PrivateTraceBuffer
MTLPipelineOptionPrivateTraceBuffer
PrivateCompileTimeStatistics
MTLPipelineOptionPrivateCompileTimeStatistics
PrivatePerformanceStatistics
MTLPipelineOptionPrivatePerformanceStatistics
PrivateDisableFunctionJIT
MTLPipelineOptionPrivateDisableFunctionJIT
PrivateDebugInstrumentation
MTLPipelineOptionPrivateDebugInstrumentation
PrivateFrameworkGeneratedReflection
MTLPipelineOptionPrivateFrameworkGeneratedReflection
MTLPixelFormatInvalid
A8Unorm
MTLPixelFormatA8Unorm
YCBCR8_420_2P_sRGB
MTLPixelFormatYCBCR8_420_2P_sRGB
YCBCR8_422_1P_sRGB
MTLPixelFormatYCBCR8_422_1P_sRGB
MTLPixelFormatR8Unorm
R8Unorm_sRGB
MTLPixelFormatR8Unorm_sRGB
MTLPixelFormatR8Snorm
R8Uint
MTLPixelFormatR8Uint
R8Sint
MTLPixelFormatR8Sint
YCBCR10_444_2P_sRGB
MTLPixelFormatYCBCR10_444_2P_sRGB
YCBCR10_420_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_420_2P_PACKED_sRGB
YCBCR10_422_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_422_2P_PACKED_sRGB
YCBCR10_444_2P_PACKED_sRGB
MTLPixelFormatYCBCR10_444_2P_PACKED_sRGB
MTLPixelFormatR16Unorm
MTLPixelFormatR16Snorm
R16Uint
MTLPixelFormatR16Uint
R16Sint
MTLPixelFormatR16Sint
R16Float
MTLPixelFormatR16Float
RGB8_420_2P
MTLPixelFormatRGB8_420_2P
RGB8_422_2P
MTLPixelFormatRGB8_422_2P
MTLPixelFormatRG8Unorm
RG8Unorm_sRGB
MTLPixelFormatRG8Unorm_sRGB
MTLPixelFormatRG8Snorm
RG8Uint
MTLPixelFormatRG8Uint
RGB10_420_2P_PACKED
MTLPixelFormatRGB10_420_2P_PACKED
RGB10_422_2P_PACKED
MTLPixelFormatRGB10_422_2P_PACKED
RGB10_444_2P_PACKED
MTLPixelFormatRGB10_444_2P_PACKED
RGB10A8_2P_XR10
MTLPixelFormatRGB10A8_2P_XR10
RGB10A8_2P_XR10_sRGB
MTLPixelFormatRGB10A8_2P_XR10_sRGB
B5G6R5Unorm
MTLPixelFormatB5G6R5Unorm
A1BGR5Unorm
MTLPixelFormatA1BGR5Unorm
ABGR4Unorm
MTLPixelFormatABGR4Unorm
BGR5A1Unorm
MTLPixelFormatBGR5A1Unorm
BGRA4Unorm
MTLPixelFormatBGRA4Unorm
RG12Unorm_X8
MTLPixelFormatRG12Unorm_X8
YCBCRA8_444_1P
MTLPixelFormatYCBCRA8_444_1P
YCBCR8_422_1P_REV
MTLPixelFormatYCBCR8_422_1P_REV
YCBCR10_444_1P_PQ
MTLPixelFormatYCBCR10_444_1P_PQ
YCBCR10_420_2P_PQ
MTLPixelFormatYCBCR10_420_2P_PQ
R32Uint
MTLPixelFormatR32Uint
R32Sint
MTLPixelFormatR32Sint
R32Float
MTLPixelFormatR32Float
YCBCR10_422_2P_PACKED_PQ
MTLPixelFormatYCBCR10_422_2P_PACKED_PQ
YCBCR10_444_2P_PACKED_PQ
MTLPixelFormatYCBCR10_444_2P_PACKED_PQ
YCBCR12_420_2P
MTLPixelFormatYCBCR12_420_2P
YCBCR12_422_2P
MTLPixelFormatYCBCR12_422_2P
MTLPixelFormatRG16Unorm
YCBCR8_422_2P_sRGB
MTLPixelFormatYCBCR8_422_2P_sRGB
MTLPixelFormatRG16Snorm
RG16Uint
MTLPixelFormatRG16Uint
RG16Sint
MTLPixelFormatRG16Sint
RG16Float
MTLPixelFormatRG16Float
RG10Unorm_X12
MTLPixelFormatRG10Unorm_X12
YCBCR8_444_2P_sRGB
MTLPixelFormatYCBCR8_444_2P_sRGB
MTLPixelFormatRGBA8Unorm
MTLPixelFormatRGBA8Unorm_sRGB
MTLPixelFormatRGBA8Snorm
RGBA8Uint
MTLPixelFormatRGBA8Uint
RGBA8Sint
MTLPixelFormatRGBA8Sint
R10Unorm_PACKED
MTLPixelFormatR10Unorm_PACKED
RG10Unorm_PACKED
MTLPixelFormatRG10Unorm_PACKED
YCBCR10_444_1P_XR
MTLPixelFormatYCBCR10_444_1P_XR
YCBCR10_420_2P_sRGB
MTLPixelFormatYCBCR10_420_2P_sRGB
BGRA8Unorm
MTLPixelFormatBGRA8Unorm
BGRA8Unorm_sRGB
MTLPixelFormatBGRA8Unorm_sRGB
YCBCR10_420_2P_PACKED_XR
MTLPixelFormatYCBCR10_420_2P_PACKED_XR
YCBCR10_422_2P_PACKED_XR
MTLPixelFormatYCBCR10_422_2P_PACKED_XR
YCBCR10_444_2P_PACKED_XR
MTLPixelFormatYCBCR10_444_2P_PACKED_XR
YCBCR10_422_2P_sRGB
MTLPixelFormatYCBCR10_422_2P_sRGB
YCBCR12_422_2P_XR
MTLPixelFormatYCBCR12_422_2P_XR
YCBCR12_444_2P_XR
MTLPixelFormatYCBCR12_444_2P_XR
MTLPixelFormatRGB10A2Unorm
RGB10A2Uint
MTLPixelFormatRGB10A2Uint
MTLPixelFormatRG11B10Float
MTLPixelFormatRGB9E5Float
BGR10A2Unorm
MTLPixelFormatBGR10A2Unorm
RG32Uint
MTLPixelFormatRG32Uint
RG32Sint
MTLPixelFormatRG32Sint
RG32Float
MTLPixelFormatRG32Float
MTLPixelFormatRGBA16Unorm
MTLPixelFormatRGBA16Snorm
RGBA16Uint
MTLPixelFormatRGBA16Uint
RGBA16Sint
MTLPixelFormatRGBA16Sint
RGBA16Float
MTLPixelFormatRGBA16Float
RGBA32Uint
MTLPixelFormatRGBA32Uint
RGBA32Sint
MTLPixelFormatRGBA32Sint
RGBA32Float
MTLPixelFormatRGBA32Float
BC1_RGBA
MTLPixelFormatBC1_RGBA
BC1_RGBA_sRGB
MTLPixelFormatBC1_RGBA_sRGB
BC2_RGBA
MTLPixelFormatBC2_RGBA
BC2_RGBA_sRGB
MTLPixelFormatBC2_RGBA_sRGB
BC3_RGBA
MTLPixelFormatBC3_RGBA
BC3_RGBA_sRGB
MTLPixelFormatBC3_RGBA_sRGB
BC4_RUnorm
MTLPixelFormatBC4_RUnorm
BC4_RSnorm
MTLPixelFormatBC4_RSnorm
BC5_RGUnorm
MTLPixelFormatBC5_RGUnorm
BC5_RGSnorm
MTLPixelFormatBC5_RGSnorm
BC6H_RGBFloat
MTLPixelFormatBC6H_RGBFloat
BC6H_RGBUfloat
MTLPixelFormatBC6H_RGBUfloat
BC7_RGBAUnorm
MTLPixelFormatBC7_RGBAUnorm
BC7_RGBAUnorm_sRGB
MTLPixelFormatBC7_RGBAUnorm_sRGB
PVRTC_RGB_2BPP
MTLPixelFormatPVRTC_RGB_2BPP
PVRTC_RGB_2BPP_sRGB
MTLPixelFormatPVRTC_RGB_2BPP_sRGB
PVRTC_RGB_4BPP
MTLPixelFormatPVRTC_RGB_4BPP
PVRTC_RGB_4BPP_sRGB
MTLPixelFormatPVRTC_RGB_4BPP_sRGB
PVRTC_RGBA_2BPP
MTLPixelFormatPVRTC_RGBA_2BPP
PVRTC_RGBA_2BPP_sRGB
MTLPixelFormatPVRTC_RGBA_2BPP_sRGB
PVRTC_RGBA_4BPP
MTLPixelFormatPVRTC_RGBA_4BPP
PVRTC_RGBA_4BPP_sRGB
MTLPixelFormatPVRTC_RGBA_4BPP_sRGB
EAC_R11Unorm
MTLPixelFormatEAC_R11Unorm
EAC_R11Snorm
MTLPixelFormatEAC_R11Snorm
EAC_RG11Unorm
MTLPixelFormatEAC_RG11Unorm
EAC_RG11Snorm
MTLPixelFormatEAC_RG11Snorm
EAC_RGBA8
MTLPixelFormatEAC_RGBA8
EAC_RGBA8_sRGB
MTLPixelFormatEAC_RGBA8_sRGB
ETC2_RGB8
MTLPixelFormatETC2_RGB8
ETC2_RGB8_sRGB
MTLPixelFormatETC2_RGB8_sRGB
ETC2_RGB8A1
MTLPixelFormatETC2_RGB8A1
ETC2_RGB8A1_sRGB
MTLPixelFormatETC2_RGB8A1_sRGB
ASTC_4x2_sRGB
MTLPixelFormatASTC_4x2_sRGB
ASTC_4x4_sRGB
MTLPixelFormatASTC_4x4_sRGB
ASTC_5x4_sRGB
MTLPixelFormatASTC_5x4_sRGB
ASTC_5x5_sRGB
MTLPixelFormatASTC_5x5_sRGB
ASTC_6x5_sRGB
MTLPixelFormatASTC_6x5_sRGB
ASTC_6x6_sRGB
MTLPixelFormatASTC_6x6_sRGB
ASTC_8x4_sRGB
MTLPixelFormatASTC_8x4_sRGB
ASTC_8x5_sRGB
MTLPixelFormatASTC_8x5_sRGB
ASTC_8x6_sRGB
MTLPixelFormatASTC_8x6_sRGB
ASTC_8x8_sRGB
MTLPixelFormatASTC_8x8_sRGB
ASTC_10x5_sRGB
MTLPixelFormatASTC_10x5_sRGB
ASTC_10x6_sRGB
MTLPixelFormatASTC_10x6_sRGB
ASTC_10x8_sRGB
MTLPixelFormatASTC_10x8_sRGB
ASTC_10x10_sRGB
MTLPixelFormatASTC_10x10_sRGB
ASTC_12x10_sRGB
MTLPixelFormatASTC_12x10_sRGB
ASTC_12x12_sRGB
MTLPixelFormatASTC_12x12_sRGB
ASTC_4x2_LDR
MTLPixelFormatASTC_4x2_LDR
ASTC_4x4_LDR
MTLPixelFormatASTC_4x4_LDR
RG8Sint
MTLPixelFormatRG8Sint
ASTC_5x5_LDR
MTLPixelFormatASTC_5x5_LDR
ASTC_5x4_LDR
MTLPixelFormatASTC_5x4_LDR
ASTC_6x6_LDR
MTLPixelFormatASTC_6x6_LDR
ASTC_8x4_LDR
MTLPixelFormatASTC_8x4_LDR
ASTC_8x5_LDR
MTLPixelFormatASTC_8x5_LDR
ASTC_8x6_LDR
MTLPixelFormatASTC_8x6_LDR
ASTC_8x8_LDR
MTLPixelFormatASTC_8x8_LDR
ASTC_10x5_LDR
MTLPixelFormatASTC_10x5_LDR
ASTC_10x6_LDR
MTLPixelFormatASTC_10x6_LDR
ASTC_10x8_LDR
MTLPixelFormatASTC_10x8_LDR
ASTC_10x10_LDR
MTLPixelFormatASTC_10x10_LDR
ASTC_12x10_LDR
MTLPixelFormatASTC_12x10_LDR
ASTC_12x12_LDR
MTLPixelFormatASTC_12x12_LDR
ASTC_6x5_LDR
MTLPixelFormatASTC_6x5_LDR
ASTC_4x2_HDR
MTLPixelFormatASTC_4x2_HDR
ASTC_4x4_HDR
MTLPixelFormatASTC_4x4_HDR
ASTC_5x4_HDR
MTLPixelFormatASTC_5x4_HDR
R12Unorm_X4_PQ
MTLPixelFormatR12Unorm_X4_PQ
ASTC_6x5_HDR
MTLPixelFormatASTC_6x5_HDR
ASTC_6x6_HDR
MTLPixelFormatASTC_6x6_HDR
ASTC_8x4_HDR
MTLPixelFormatASTC_8x4_HDR
ASTC_8x5_HDR
MTLPixelFormatASTC_8x5_HDR
ASTC_8x6_HDR
MTLPixelFormatASTC_8x6_HDR
ASTC_8x8_HDR
MTLPixelFormatASTC_8x8_HDR
ASTC_10x5_HDR
MTLPixelFormatASTC_10x5_HDR
ASTC_10x6_HDR
MTLPixelFormatASTC_10x6_HDR
ASTC_10x8_HDR
MTLPixelFormatASTC_10x8_HDR
ASTC_10x10_HDR
MTLPixelFormatASTC_10x10_HDR
ASTC_12x10_HDR
MTLPixelFormatASTC_12x10_HDR
ASTC_12x12_HDR
MTLPixelFormatASTC_12x12_HDR
GBGR422
MTLPixelFormatGBGR422
BGRG422
MTLPixelFormatBGRG422
BGRA10_XR_sRGB
MTLPixelFormatBGRA10_XR_sRGB
Depth16Unorm
MTLPixelFormatDepth16Unorm
Depth32Float
MTLPixelFormatDepth32Float
Stencil8
MTLPixelFormatStencil8
Depth24Unorm_Stencil8
MTLPixelFormatDepth24Unorm_Stencil8
BGR10_XR
MTLPixelFormatBGR10_XR
Depth32Float_Stencil8
MTLPixelFormatDepth32Float_Stencil8
X32_Stencil8
MTLPixelFormatX32_Stencil8
X24_Stencil8
MTLPixelFormatX24_Stencil8
RGBA16Float_XR
MTLPixelFormatRGBA16Float_XR
R10Unorm_X6_PQ
MTLPixelFormatR10Unorm_X6_PQ
BGR10_XR_sRGB
MTLPixelFormatBGR10_XR_sRGB
RGBX8Unorm
MTLPixelFormatRGBX8Unorm
RGBX8Unorm_sRGB
MTLPixelFormatRGBX8Unorm_sRGB
RGBX8Snorm
MTLPixelFormatRGBX8Snorm
RGBX8Uint
MTLPixelFormatRGBX8Uint
RGBX8Sint
MTLPixelFormatRGBX8Sint
RGBX16Uint
MTLPixelFormatRGBX16Uint
RGBX16Sint
MTLPixelFormatRGBX16Sint
RGBX16Float
MTLPixelFormatRGBX16Float
YCBCR10_422_2P_PQ
MTLPixelFormatYCBCR10_422_2P_PQ
ASTC_5x5_HDR
MTLPixelFormatASTC_5x5_HDR
RGBX32Uint
MTLPixelFormatRGBX32Uint
RGBX32Sint
MTLPixelFormatRGBX32Sint
YCBCR10_444_2P_PQ
MTLPixelFormatYCBCR10_444_2P_PQ
YCBCR10_420_2P_PACKED_PQ
MTLPixelFormatYCBCR10_420_2P_PACKED_PQ
YCBCR12_444_2P
MTLPixelFormatYCBCR12_444_2P
YCBCR12_420_2P_PQ
MTLPixelFormatYCBCR12_420_2P_PQ
YCBCR12_422_2P_PQ
MTLPixelFormatYCBCR12_422_2P_PQ
YCBCR12_444_2P_PQ
MTLPixelFormatYCBCR12_444_2P_PQ
YCBCR10_444_1P_sRGB
MTLPixelFormatYCBCR10_444_1P_sRGB
R10Unorm_X6
MTLPixelFormatR10Unorm_X6
R10Unorm_X6_sRGB
MTLPixelFormatR10Unorm_X6_sRGB
RG10Unorm_X12_sRGB
MTLPixelFormatRG10Unorm_X12_sRGB
RGB8_444_2P
MTLPixelFormatRGB8_444_2P
RGBX32Float
MTLPixelFormatRGBX32Float
RGB10_420_2P
MTLPixelFormatRGB10_420_2P
YCBCR8_422_1P
MTLPixelFormatYCBCR8_422_1P
R12Unorm_X4
MTLPixelFormatR12Unorm_X4
RGB10_422_2P
MTLPixelFormatRGB10_422_2P
YCBCR10_420_2P_XR
MTLPixelFormatYCBCR10_420_2P_XR
YCBCR10_422_2P_XR
MTLPixelFormatYCBCR10_422_2P_XR
BGRA10_XR
MTLPixelFormatBGRA10_XR
YCBCR10_444_2P_XR
MTLPixelFormatYCBCR10_444_2P_XR
YCBCR8_420_2P
MTLPixelFormatYCBCR8_420_2P
RGB10_444_2P
MTLPixelFormatRGB10_444_2P
YCBCR8_422_2P
MTLPixelFormatYCBCR8_422_2P
YCBCR8_444_2P
MTLPixelFormatYCBCR8_444_2P
YCBCR10_444_1P
MTLPixelFormatYCBCR10_444_1P
YCBCR10_420_2P
MTLPixelFormatYCBCR10_420_2P
YCBCR10_422_2P
MTLPixelFormatYCBCR10_422_2P
YCBCR10_444_2P
MTLPixelFormatYCBCR10_444_2P
YCBCR10_420_2P_PACKED
MTLPixelFormatYCBCR10_420_2P_PACKED
YCBCR10_422_2P_PACKED
MTLPixelFormatYCBCR10_422_2P_PACKED
YCBCR10_444_2P_PACKED
MTLPixelFormatYCBCR10_444_2P_PACKED
YCBCR12_420_2P_XR
MTLPixelFormatYCBCR12_420_2P_XR
IsASTC
MTLPixelFormatFlagsIsASTC
IsValid
MTLPixelFormatFlagsIsValid
IsWriteable
MTLPixelFormatFlagsIsWriteable
IsFilterable
MTLPixelFormatFlagsIsFilterable
IsPVRTC
MTLPixelFormatFlagsIsPVRTC
IsBlendable
MTLPixelFormatFlagsIsBlendable
IsAllowedForMSAAResolve
MTLPixelFormatFlagsIsAllowedForMSAAResolve
IsMSAACapable
MTLPixelFormatFlagsIsMSAACapable
IsColorRenderable
MTLPixelFormatFlagsIsColorRenderable
IsDualPlane
MTLPixelFormatFlagsIsDualPlane
IsRestrictedFormatAccess
MTLPixelFormatFlagsIsRestrictedFormatAccess
IsBC
MTLPixelFormatFlagsIsBC
IsUIntCompatible
MTLPixelFormatFlagsIsUIntCompatible
IsDepthRenderable
MTLPixelFormatFlagsIsDepthRenderable
IsHalfCompatible
MTLPixelFormatFlagsIsHalfCompatible
IsIntCompatible
MTLPixelFormatFlagsIsIntCompatible
IsCompressed
MTLPixelFormatFlagsIsCompressed
Is422
MTLPixelFormatFlagsIs422
IsShortCompatible
MTLPixelFormatFlagsIsShortCompatible
IsFullMaskRequired
MTLPixelFormatFlagsIsFullMaskRequired
IsStencilRenderable
MTLPixelFormatFlagsIsStencilRenderable
IsSRGB
MTLPixelFormatFlagsIsSRGB
IsUShortCompatible
MTLPixelFormatFlagsIsUShortCompatible
IsFloatCompatible
MTLPixelFormatFlagsIsFloatCompatible
PipelineData
MTLPrecompiledDataTypePipelineData
VertexFunction
MTLPrecompiledDataTypeVertexFunction
FragmentFunction
MTLPrecompiledDataTypeFragmentFunction
ComputeFunction
MTLPrecompiledDataTypeComputeFunction
VertexReflectionData
MTLPrecompiledDataTypeVertexReflectionData
FragmentReflectionData
MTLPrecompiledDataTypeFragmentReflectionData
ComputeReflectionData
MTLPrecompiledDataTypeComputeReflectionData
CustomStart
MTLPrecompiledDataTypeCustomStart
Unspecified
MTLPrimitiveTopologyClassUnspecified
Point
MTLPrimitiveTopologyClassPoint
Line
MTLPrimitiveTopologyClassLine
MTLPrimitiveTopologyClassTriangle
MTLPrimitiveTypePoint
MTLPrimitiveTypeLine
LineStrip
MTLPrimitiveTypeLineStrip
MTLPrimitiveTypeTriangle
TriangleStrip
MTLPrimitiveTypeTriangleStrip
KeepCurrent
MTLPurgeableStateKeepCurrent
NonVolatile
MTLPurgeableStateNonVolatile
Volatile
MTLPurgeableStateVolatile
Empty
MTLPurgeableStateEmpty
MTLQosExclusive
MTLQosHigh
MTLQosMedium
MTLQosLow
MTLQosOpportunistic
MTLReadWriteTextureTierNone
MTLReadWriteTextureTier1
MTLReadWriteTextureTier2
TooManyResources
MTLRenderCommandEncoderSplitReasonTooManyResources
TooManyScissorEmits
MTLRenderCommandEncoderSplitReasonTooManyScissorEmits
TooManyDepthBiasEmits
MTLRenderCommandEncoderSplitReasonTooManyDepthBiasEmits
MTLRenderStageVertex
MTLRenderStageFragment
Flush
MTLResourceGroupCacheHintFlush
Invalidate
MTLResourceGroupCacheHintInvalidate
StorageModeShared
MTLResourceStorageModeShared
CPUCacheModeWriteCombined
MTLResourceCPUCacheModeWriteCombined
StorageModeManaged
MTLResourceStorageModeManaged
StorageModePrivate
MTLResourceStorageModePrivate
HazardTrackingModeUntracked
MTLResourceHazardTrackingModeUntracked
StorageModeMemoryless
MTLResourceStorageModeMemoryless
HazardTrackingModeTracked
MTLResourceHazardTrackingModeTracked
Read
MTLResourceUsageRead
Write
MTLResourceUsageWrite
Sample
MTLResourceUsageSample
ClampToEdge
MTLSamplerAddressModeClampToEdge
MirrorClampToEdge
MTLSamplerAddressModeMirrorClampToEdge
Repeat
MTLSamplerAddressModeRepeat
MirrorRepeat
MTLSamplerAddressModeMirrorRepeat
ClampToZero
MTLSamplerAddressModeClampToZero
ClampToBorderColor
MTLSamplerAddressModeClampToBorderColor
TransparentBlack
MTLSamplerBorderColorTransparentBlack
OpaqueBlack
MTLSamplerBorderColorOpaqueBlack
OpaqueWhite
MTLSamplerBorderColorOpaqueWhite
SPICustom
MTLSamplerBorderColorSPICustom
Nearest
MTLSamplerMinMagFilterNearest
Linear
MTLSamplerMinMagFilterLinear
Cubic
MTLSamplerMinMagFilterCubic
NotMipmapped
MTLSamplerMipFilterNotMipmapped
MTLSamplerMipFilterNearest
MTLSamplerMipFilterLinear
WeightedAverage
MTLSamplerReductionModeWeightedAverage
Minimum
MTLSamplerReductionModeMinimum
Maximum
MTLSamplerReductionModeMaximum
MTLSamplerReductionModeSupportNone
SingleChannel
MTLSamplerReductionModeSupportSingleChannel
AllChannels
MTLSamplerReductionModeSupportAllChannels
Metal
MTLSourceLanguageMetal
OpenCL
MTLSourceLanguageOpenCL
MTLSparsePageSize16
MTLSparsePageSize64
MTLSparsePageSize256
MTLSparseTextureMappingModeMap
Unmap
MTLSparseTextureMappingModeUnmap
Outward
MTLSparseTextureRegionAlignmentModeOutward
Inward
MTLSparseTextureRegionAlignmentModeInward
MTLSparseTexturesTierNone
MTLSparseTexturesTier1
MTLSparseTexturesTier2
MTLSparseTexturesTier3
Keep
MTLStencilOperationKeep
MTLStencilOperationZero
Replace
MTLStencilOperationReplace
IncrementClamp
MTLStencilOperationIncrementClamp
DecrementClamp
MTLStencilOperationDecrementClamp
Invert
MTLStencilOperationInvert
IncrementWrap
MTLStencilOperationIncrementWrap
DecrementWrap
MTLStencilOperationDecrementWrap
Constant
MTLStepFunctionConstant
PerVertex
MTLStepFunctionPerVertex
PerInstance
MTLStepFunctionPerInstance
PerPatch
MTLStepFunctionPerPatch
PerPatchControlPoint
MTLStepFunctionPerPatchControlPoint
ThreadPositionInGridX
MTLStepFunctionThreadPositionInGridX
ThreadPositionInGridY
MTLStepFunctionThreadPositionInGridY
ThreadPositionInGridXIndexed
MTLStepFunctionThreadPositionInGridXIndexed
ThreadPositionInGridYIndexed
MTLStepFunctionThreadPositionInGridYIndexed
Shared
MTLStorageModeShared
Managed
MTLStorageModeManaged
Private
MTLStorageModePrivate
MTLStorageModeMemoryless
MTLStoreActionDontCare
Store
MTLStoreActionStore
MultisampleResolve
MTLStoreActionMultisampleResolve
StoreAndMultisampleResolve
MTLStoreActionStoreAndMultisampleResolve
MTLStoreActionUnknown
CustomSampleDepthStore
MTLStoreActionCustomSampleDepthStore
MTLStoreActionOptionNone
MTLStoreActionOptionValidMask
MTLSynchronizationTypeExplicit
MTLSynchronizationTypeImplicit
MTLSynchronizationTypeCommit
MTLSynchronizationTypeDealloc
MTLTessellationControlPointIndexTypeNone
MTLTessellationControlPointIndexTypeUInt16
MTLTessellationControlPointIndexTypeUInt32
MTLTessellationFactorFormatHalf
Float_SPI
MTLTessellationFactorFormatFloat_SPI
MTLTessellationFactorStepFunctionConstant
MTLTessellationFactorStepFunctionPerPatch
MTLTessellationFactorStepFunctionPerInstance
PerPatchAndPerInstance
MTLTessellationFactorStepFunctionPerPatchAndPerInstance
Pow2
MTLTessellationPartitionModePow2
Integer
MTLTessellationPartitionModeInteger
FractionalOdd
MTLTessellationPartitionModeFractionalOdd
FractionalEven
MTLTessellationPartitionModeFractionalEven
MTLTextureCompressionFeedbackUnknown
Supported
MTLTextureCompressionFeedbackSupported
MTLTextureCompressionFeedbackUnsupported
UnsupportedDevice
MTLTextureCompressionFeedbackUnsupportedDevice
UnsupportedTextureUsagePixelFormatView
MTLTextureCompressionFeedbackUnsupportedTextureUsagePixelFormatView
UnsupportedPixelFormat
MTLTextureCompressionFeedbackUnsupportedPixelFormat
UnsupportedTextureType
MTLTextureCompressionFeedbackUnsupportedTextureType
UnsupportedHeapTypeSparse
MTLTextureCompressionFeedbackUnsupportedHeapTypeSparse
UnsupportedLinearLayout
MTLTextureCompressionFeedbackUnsupportedLinearLayout
UnsupportedTextureUsageShaderWrite
MTLTextureCompressionFeedbackUnsupportedTextureUsageShaderWrite
UnsupportedOptOut
MTLTextureCompressionFeedbackUnsupportedOptOut
MTLTextureCompressionModeDefault
OptIn
MTLTextureCompressionModeOptIn
OptOut
MTLTextureCompressionModeOptOut
0Degrees
MTLTextureRotation0Degrees
90DegreesClockwise
MTLTextureRotation90DegreesClockwise
180DegreesClockwise
MTLTextureRotation180DegreesClockwise
270DegreesClockwise
MTLTextureRotation270DegreesClockwise
MTLTextureSwizzleZero
MTLTextureSwizzleOne
MTLTextureSwizzleRed
MTLTextureSwizzleGreen
MTLTextureSwizzleBlue
MTLTextureSwizzleAlpha
MTLTextureSwizzleShiftRed
MTLTextureSwizzleShiftGreen
MTLTextureSwizzleShiftBlue
MTLTextureSwizzleShiftAlpha
MTLTextureType1D
1DArray
MTLTextureType1DArray
MTLTextureType2D
2DArray
MTLTextureType2DArray
2DMultisample
MTLTextureType2DMultisample
Cube
MTLTextureTypeCube
CubeArray
MTLTextureTypeCubeArray
MTLTextureType3D
2DMultisampleArray
MTLTextureType2DMultisampleArray
TextureBuffer
MTLTextureTypeTextureBuffer
MTLTextureUsageUnknown
ShaderRead
MTLTextureUsageShaderRead
ShaderWrite
MTLTextureUsageShaderWrite
RenderTarget
MTLTextureUsageRenderTarget
MTLTextureUsageVideo
PixelFormatView
MTLTextureUsagePixelFormatView
MTLTransformFeedbackActive
MTLTransformFeedbackInactive
Fill
MTLTriangleFillModeFill
Lines
MTLTriangleFillModeLines
MTLTriangleFillModePoint
MTLUnmappedDepthValueZero
MTLUnmappedDepthValueOne
Left
MTLVREyeLeft
Right
MTLVREyeRight
MTLVRSubmitDefault
MTLVRSubmitLensDistortionApplied
Count
MTLVertexAmplificationModeCount
Mask
MTLVertexAmplificationModeMask
MTLVertexFormatInvalid
MTLVertexFormatUChar2
MTLVertexFormatUChar3
MTLVertexFormatUChar4
MTLVertexFormatChar2
MTLVertexFormatChar3
MTLVertexFormatChar4
MTLVertexFormatUChar2Normalized
MTLVertexFormatUChar3Normalized
MTLVertexFormatUChar4Normalized
MTLVertexFormatChar2Normalized
MTLVertexFormatChar3Normalized
MTLVertexFormatChar4Normalized
MTLVertexFormatUShort2
MTLVertexFormatUShort3
MTLVertexFormatUShort4
MTLVertexFormatShort2
MTLVertexFormatShort3
MTLVertexFormatShort4
MTLVertexFormatUShort2Normalized
MTLVertexFormatUShort3Normalized
MTLVertexFormatUShort4Normalized
MTLVertexFormatShort2Normalized
MTLVertexFormatShort3Normalized
MTLVertexFormatShort4Normalized
MTLVertexFormatHalf2
MTLVertexFormatHalf3
MTLVertexFormatHalf4
MTLVertexFormatFloat
MTLVertexFormatFloat2
MTLVertexFormatFloat3
MTLVertexFormatFloat4
MTLVertexFormatInt
MTLVertexFormatInt2
MTLVertexFormatInt3
MTLVertexFormatInt4
MTLVertexFormatUInt
MTLVertexFormatUInt2
MTLVertexFormatUInt3
MTLVertexFormatUInt4
MTLVertexFormatInt1010102Normalized
MTLVertexFormatUInt1010102Normalized
MTLVertexFormatUChar4Normalized_BGRA
MTLVertexFormatUChar
MTLVertexFormatChar
MTLVertexFormatUCharNormalized
MTLVertexFormatCharNormalized
MTLVertexFormatUShort
MTLVertexFormatShort
MTLVertexFormatUShortNormalized
MTLVertexFormatShortNormalized
MTLVertexFormatHalf
MTLVertexStepFunctionConstant
MTLVertexStepFunctionPerVertex
MTLVertexStepFunctionPerInstance
MTLVertexStepFunctionPerPatch
MTLVertexStepFunctionPerPatchControlPoint
MTLVisibilityResultModeDisabled
Boolean
MTLVisibilityResultModeBoolean
Counting
MTLVisibilityResultModeCounting
Clockwise
MTLWindingClockwise
CounterClockwise
MTLWindingCounterClockwise
_MTLArgumentBufferPatchingTypeNone
Indexed
_MTLArgumentBufferPatchingTypeIndexed
_MTLArgumentBufferPatchingTypeReplace
_MTLArgumentBufferResourceTypeTexture
_MTLArgumentBufferResourceTypeSampler
_MTLArgumentBufferResourceTypeConstant
_MTLArgumentBufferResourceTypeBuffer
PipelineState
_MTLArgumentBufferResourceTypePipelineState
_MTLArgumentBufferResourceTypeIndirectCommandBuffer
_MTLArgumentBufferResourceTypeCount
v16@?0@"<MTLCommandBuffer>"8
v12@?0c8
Unsupported resource type!
Cituw
Ctuw
Commit
isContentExposedToCPU
Tc,N,V_isContentExposedToCPU
debugBuffer
T@"<MTLBuffer>",&,N,V_debugBuffer
PerformanceStatistics
v16@?0@"<MTLDevice>"8
PerformanceStatisticsActiveDevices
GT_HOST_URL_MTL
[DYMTLInitPlatform] failed to initialize client
[DYMTLInitPlatform] connection to the host has failed: %s
IOAccelerator
[DYMTLInitPlatform] platform initialization successful
defaultViewport
T{?=dddddd},N,V_defaultViewport
T^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}},N,V_streams
debugQueue
T@"<MTLCommandQueue>",&,N,V_debugQueue
waitQueue
T@"<MTLCommandQueue>",&,N,V_waitQueue
signalQueue
T@"<MTLCommandQueue>",&,N,V_signalQueue
Cululultultululultulul
Cululultululultulul
commandIndex
TQ,N,V_commandIndex
ConvertIndirectCommandBufferDataToFBufStreamRender
ConvertIndirectCommandBufferDataToFBufStreamCompute
Cult
debugFunction
T@"<MTLFunction>",&,N,V_debugFunction
debugLibrary
T@"<MTLLibrary>",&,N,V_debugLibrary
imageFilterFunctions
T@"NSArray",R,N,V_imageFilterFunctions
imageFilterFunctionInfo
T^{?=BQ^{?}},R,N,V_imageFilterFunctionInfo
captureDevice
T@"<MTLDevice>",R,N,V_captureDevice
captureCommandQueue
T@"<MTLCommandQueue>",N,V_captureCommandQueue
captureScope
T@"<MTLCaptureScope>",N,V_captureScope
T@"<MTLDevice>",&,N,V_captureDevice
capturedCommandBuffers
TQ,N,V_capturedCommandBuffers
captureScopeActive
Tc,N,V_captureScopeActive
capture trace mode cannot be set directly; create and start a capture session
gputraces
%@_%lu.gputrace
HostCaptureArchivePath
Unknown trace mode: %d
Disk Wx
v16@?0@"DYMTLCommandQueueInfo"8
v16@?0@"DYMTLDeviceProfile"8
device profile
Frame
version
plist
%@ - Metal
failed to commit final archive: %@
CaptureScopeAddress
CaptureCommandQueueAddress
Invalid CommandQueue address, maybe selected queue has been deallocated
v32@?0@"<MTLDevice>"8Q16^c24
CommandQueue not found, maybe selected queue has been deallocated
-[DYMTLGuestAppClient _armCaptureWithTransportMessage:]
captureDescriptor.sessionId != 0
FrameLimit
TriggerFrame
SuspendAfterCompletion
LockOpenGLAfterCompletion
-[DYMTLGuestAppClient _inferCaptureDevice]
mtlCaptureState.captureDevice
lastCapturableCommandQueueUsed
T@"<MTLCommandQueue>",N,V_lastCapturableCommandQueueUsed
Insert Capture Layer
Capture done
Capture Unused
Capture Finish
url cannot be nil
startCaptureWithDevice
cannot write at url
startCaptureWithCommandQueue
startCaptureWithScope
MTLCaptureManager: %s attempted while a capture is active
T@"MTLIndirectCommandBufferDescriptor",&,N,V_descriptor
optimizedRangeList
T@"NSArray",&,N,V_optimizedRangeList
T@"MTLMotionEstimationPipelineDescriptor",&,N,V_descriptor
T@"MTLDepthStencilDescriptor",&,N,V_descriptor
cache
T@"MTLOverrideCache",&,N,V_cache
DYPMTLResourceUpdaterErrorDomain
v32@?0@"NSString"8@"MTLFunctionConstant"16^c24
Failed to create new library
@"<MTLFunction>"24@?0@"MTLDebugFunction"8^@16
Unable to create function: %@
Unable to find library
Ensure the library or pipeline state isn't recreated every frame
DYMTLPostVertexDump
Unable to create render pipeline state
%@: %@
Unable to create compute pipeline state with function: %@
@"<MTLLibrary>"24@?0@"<MTLDevice>"8^@16
MTLIndirectCommandBuffer
MTLResource
NSObject
MTLCaptureComputeCommandEncoder
MTLCaptureVideoCommandEncoder
MTLCaptureBlitCommandEncoder
MTLOverrideRenderPipelineState
MTLCaptureDevice
MTLCaptureEvent
MTLCaptureSharedEvent
MTLInsertOverridesLayerVisitor
MTLToolsVisitor
MTLCaptureRenderCommandEncoder
MTLCaptureRenderPipelineState
MTLCaptureComputePipelineState
MTLCaptureHeap
MTLCaptureFence
MTLOverrideTexture
MTLTexture
MTLBuffer
DYMTLIndirectCommandBufferHarvesterTranslateDelegate
DYMTLIndirectCommandBufferTranslateDelegate
MTLCaptureTexture
MTLOverrideBlitCommandEncoder
MTLOverrideCommandBuffer
MTLCaptureSamplerState
MTLOverrideCommandQueue
MTLOverrideArgumentEncoder
MTLOverrideFunction
MTLOverrideLibrary
MTLInsertCaptureLayerVisitor
MTLOverrideVideoCommandEncoder
???6
MTLCaptureCommandBuffer
MTLOverrideComputeCommandEncoder
MTLCaptureBuffer
MTLCaptureArgumentEncoder
MTLRemoveSubLayerVisitor
MTLOverrideRenderCommandEncoder
MTLCaptureCommandQueue
MTLCaptureIndirectRenderCommand
MTLCaptureParallelRenderCommandEncoder
MTLCaptureFunction
MTLCaptureLibrary
DYMTLCaptureDescriptor
DYMTLCaptureState
DYMTLGuestAppClient
DYMTLMobileAppClient
DYQuicklook
MTLCaptureIndirectCommandBuffer
MTLCaptureMotionEstimationPipeline
MTLOverrideBuffer
MTLOverrideCache
MTLCaptureDepthStencilState
MTLOverrideParallelRenderCommandEncoder
MTLOverrideDevice
DYMTLDesktopAppClient
0 1@
0 2A
DYMTLResourceUpdater
c24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
Q24@0:8Q16
v16@0:8
v24@0:8@16
v24@0:8@"NSString"16
@"<MTLDevice>"16@0:8
@"<MTLHeap>"16@0:8
v32@0:8{_NSRange=QQ}16
@24@0:8Q16
@"<MTLIndirectRenderCommand>"24@0:8Q16
v64@0:8{?=QQQ}16{?=QQQ}40
v56@0:8@16Q24{?=QQQ}32
v32@0:8@16Q24
v32@0:8r^@16Q24
v24@0:8Q16
v40@0:8@16Q24Q32
v32@0:8Q16Q24
v48@0:8r^@16r^Q24{_NSRange=QQ}32
v40@0:8r^v16Q24Q32
v40@0:8@16f24f28Q32
v56@0:8r^@16r^f24r^f32{_NSRange=QQ}40
v40@0:8r^@16{_NSRange=QQ}24
v64@0:8{?={?=QQQ}{?=QQQ}}16
v40@0:8r^@16Q24Q32
{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}16@0:8
v40@0:8{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}16
{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}16@0:8
v40@0:8{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}16
{CaptureHelper="_buffer"{DynamicBuffer="_data"{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__value_"*}}}"_urlsMutex"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}"_urls"{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__value_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}"_fbuf"{Fbuf="bh"(?="buffer"^v"header"^{?})"_access_ptr"^v"_capacity"I}"_semaphore"^{dispatch_semaphore_s}}
{MTLHarvesterMarkerComputeResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="__base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="__value_"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__value_"^@}}"__value_"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__value_"^@}}"__value_"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__value_"^@}}"__value_"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__value_"^@}}"__value_"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__value_"^@}}"__value_"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__value_"^@}}"__value_"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__value_"^@}}"__value_"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__value_"^@}}"__value_"{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >="__value_"^@}}"__value_"{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >="__value_"^@}}"__value_"{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >="__value_"^@}}"__value_"{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__value_"^@}}"__value_"{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__value_"^@}}"__value_"{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__value_"^@}}"__value_"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__value_"^@}}}}"MTLBuffer"[31@"<MTLBuffer>"]"MTLBufferBindingOffset"[31Q]"MTLTexture"[128@"<MTLTexture>"]"mutableMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"mutableMTLTextureIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"readMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"ancestorMap"{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__tree_"{__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >="__value_"Q}}}"indirectArgumentBuffers"{vector<MTLHarvesterIndirectArgumentBufferInfo, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >="__begin_"^{MTLHarvesterIndirectArgumentBufferInfo}"__end_"^{MTLHarvesterIndirectArgumentBufferInfo}"__end_cap_"{__compressed_pair<MTLHarvesterIndirectArgumentBufferInfo *, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >="__value_"^{MTLHarvesterIndirectArgumentBufferInfo}}}"executeIndirectCommandCalls"{vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >="__begin_"^{MTLHarvesterMarkerIndirectExecute}"__end_"^{MTLHarvesterMarkerIndirectExecute}"__end_cap_"{__compressed_pair<MTLHarvesterMarkerIndirectExecute *, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >="__value_"^{MTLHarvesterMarkerIndirectExecute}}}}
@"<MTLComputePipelineState>"
@"<MTLFunction>"
{vector<unsigned long long, std::__1::allocator<unsigned long long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >="__value_"^Q}}
{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__tree_"{__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >="__value_"Q}}}
v48@0:8@16@24@32Q40
{MTLHarvesterMarkerVideoResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="__base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="__value_"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__value_"^@}}"__value_"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__value_"^@}}"__value_"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__value_"^@}}"__value_"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__value_"^@}}"__value_"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__value_"^@}}"__value_"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__value_"^@}}"__value_"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__value_"^@}}"__value_"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__value_"^@}}"__value_"{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >="__value_"^@}}"__value_"{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >="__value_"^@}}"__value_"{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >="__value_"^@}}"__value_"{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__value_"^@}}"__value_"{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__value_"^@}}"__value_"{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__value_"^@}}"__value_"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__value_"^@}}}}"currMTLTexture"@"<MTLTexture>""prevMTLTexture"@"<MTLTexture>""resultMTLBuffer"@"<MTLBuffer>""ancestorMap"{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__tree_"{__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >="__value_"Q}}}}
v120@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96
v128@0:8@16Q24Q32Q40{?=QQQ}48@72Q80Q88{?=QQQ}96Q120
v56@0:8@16Q24@32Q40Q48
v120@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112
v128@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104Q112Q120
v136@0:8@16Q24Q32{?=QQQ}40{?=QQQ}64@88Q96Q104{?=QQQ}112
v56@0:8@16{_NSRange=QQ}24@40Q48
v44@0:8@16{_NSRange=QQ}24C40
v40@0:8@16{_NSRange=QQ}24
{MTLHarvesterMarkerBlitResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="__base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="__value_"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__value_"^@}}"__value_"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__value_"^@}}"__value_"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__value_"^@}}"__value_"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__value_"^@}}"__value_"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__value_"^@}}"__value_"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__value_"^@}}"__value_"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__value_"^@}}"__value_"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__value_"^@}}"__value_"{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >="__value_"^@}}"__value_"{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >="__value_"^@}}"__value_"{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >="__value_"^@}}"__value_"{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__value_"^@}}"__value_"{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__value_"^@}}"__value_"{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__value_"^@}}"__value_"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__value_"^@}}}}"srcMTLBuffer"@"<MTLBuffer>""dstMTLBuffer"@"<MTLBuffer>""ancestorMap"{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__tree_"{__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >="__value_"Q}}}}
@"NSMutableDictionary"
@"MTLRenderPipelineDescriptor"
@"MTLRenderPipelineReflection"
@32@0:8@16@24
v20@0:8c16
{?=QQ}32@0:8Q16Q24
{?=QQ}24@0:8@16
@24@0:8@16
@24@0:8^{__IOSurface=}16
@40@0:8@16Q24Q32
@32@0:8^{dispatch_data_s=}16^@24
@20@0:8I16
@64@0:8^v16Q24@?32@40Q48Q56
@56@0:8^v16Q24@32Q40Q48
v40@0:8Q16^Q24Q32
c24@0:8Q16
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16^@24
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16r^{?=BQ^{?}}24^@32
@40@0:8@16^{__IOSurface=}24Q32
^{mutex={_opaque_pthread_mutex_t=q[56c]}}16@0:8
v24@0:8^{mutex={_opaque_pthread_mutex_t=q[56c]}}16
^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}}16@0:8
v24@0:8^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}}16
^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterIndirectCommandBufferHarvestStruct>={vector<MTLHarvesterIndirectCommandBufferHarvestStruct, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}^{MTLHarvesterIndirectCommandBufferHarvestStruct}{__compressed_pair<MTLHarvesterIndirectCommandBufferHarvestStruct *, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}}}{vector<MTLHarvesterIndirectCommandBufferHarvestStruct, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}^{MTLHarvesterIndirectCommandBufferHarvestStruct}{__compressed_pair<MTLHarvesterIndirectCommandBufferHarvestStruct *, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}}}}}16@0:8
v24@0:8^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterIndirectCommandBufferHarvestStruct>={vector<MTLHarvesterIndirectCommandBufferHarvestStruct, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}^{MTLHarvesterIndirectCommandBufferHarvestStruct}{__compressed_pair<MTLHarvesterIndirectCommandBufferHarvestStruct *, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}}}{vector<MTLHarvesterIndirectCommandBufferHarvestStruct, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}^{MTLHarvesterIndirectCommandBufferHarvestStruct}{__compressed_pair<MTLHarvesterIndirectCommandBufferHarvestStruct *, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}}}}}16
^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >=^@^@{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >=^@}}{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@^@{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@}}{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@^@{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@}}{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@^@{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}16@0:8
v24@0:8^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >=^@^@{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >=^@}}{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@^@{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@}}{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@^@{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@}}{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@^@{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}16
^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >={__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >=Q}}}{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >={__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >=Q}}}{set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >={__tree<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSharedEvent>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSharedEvent> > >=Q}}}{set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >={__tree<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLMotionEstimationPipeline>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLMotionEstimationPipeline> > >=Q}}}{set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >={__tree<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectCommandBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectCommandBuffer> > >=Q}}}{set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >={__tree<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectRenderCommand>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectRenderCommand> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}}16@0:8
v24@0:8^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >={__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >=Q}}}{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >={__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >=Q}}}{set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >={__tree<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSharedEvent>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSharedEvent> > >=Q}}}{set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >={__tree<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLMotionEstimationPipeline>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLMotionEstimationPipeline> > >=Q}}}{set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >={__tree<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectCommandBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectCommandBuffer> > >=Q}}}{set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >={__tree<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectRenderCommand>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectRenderCommand> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}}16
^{array<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, 6>=[6{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}]}16@0:8
v24@0:8^{array<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, 6>=[6{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}]}16
{MTLHarvesterUnusedResourcesInfo={MTLHarvesterResourcesInfo=QQQQQQQQQQQQQQQQQ}{MTLHarvesterResourcesInfo=QQQQQQQQQQQQQQQQQ}}16@0:8
v288@0:8{MTLHarvesterUnusedResourcesInfo={MTLHarvesterResourcesInfo=QQQQQQQQQQQQQQQQQ}{MTLHarvesterResourcesInfo=QQQQQQQQQQQQQQQQQ}}16
[64c]
@"<MTLArgumentEncoder>"
[5B]
{mutex="__m_"{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}}
^{mutex={_opaque_pthread_mutex_t=q[56c]}}
^{list<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, std::__1::allocator<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> > > >={__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>=^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}^{__list_node_base<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >, void *> > >=Q}}
^{MTLHarvesterMarkerBlitData={MTLHarvesterDataStruct<MTLHarvesterBufferHarvestStruct>={vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}{vector<MTLHarvesterBufferHarvestStruct, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}^{MTLHarvesterBufferHarvestStruct}{__compressed_pair<MTLHarvesterBufferHarvestStruct *, std::__1::allocator<MTLHarvesterBufferHarvestStruct> >=^{MTLHarvesterBufferHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterTextureHarvestStruct>={vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}{vector<MTLHarvesterTextureHarvestStruct, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}^{MTLHarvesterTextureHarvestStruct}{__compressed_pair<MTLHarvesterTextureHarvestStruct *, std::__1::allocator<MTLHarvesterTextureHarvestStruct> >=^{MTLHarvesterTextureHarvestStruct}}}}{MTLHarvesterDataStruct<MTLHarvesterIndirectCommandBufferHarvestStruct>={vector<MTLHarvesterIndirectCommandBufferHarvestStruct, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}^{MTLHarvesterIndirectCommandBufferHarvestStruct}{__compressed_pair<MTLHarvesterIndirectCommandBufferHarvestStruct *, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}}}{vector<MTLHarvesterIndirectCommandBufferHarvestStruct, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}^{MTLHarvesterIndirectCommandBufferHarvestStruct}{__compressed_pair<MTLHarvesterIndirectCommandBufferHarvestStruct *, std::__1::allocator<MTLHarvesterIndirectCommandBufferHarvestStruct> >=^{MTLHarvesterIndirectCommandBufferHarvestStruct}}}}}
^{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >=^@^@{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >=^@}}{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@^@{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@}}{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@^@{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@}}{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@^@{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}
^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >={__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >=Q}}}{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >={__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >=Q}}}{set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >={__tree<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSharedEvent>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSharedEvent> > >=Q}}}{set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >={__tree<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLMotionEstimationPipeline>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLMotionEstimationPipeline> > >=Q}}}{set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >={__tree<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectCommandBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectCommandBuffer> > >=Q}}}{set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >={__tree<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectRenderCommand>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectRenderCommand> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}}
^{array<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, 6>=[6{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}]}
@"<MTLDevice>"
{MTLHarvesterUnusedResourcesInfo="user"{MTLHarvesterResourcesInfo="bufferCount"Q"textureCount"Q"libraryCount"Q"functionCount"Q"renderPipelineStateCount"Q"computePipelineStateCount"Q"depthStencilStateCount"Q"samplerStateCount"Q"commandQueueCount"Q"heapCount"Q"fenceCount"Q"textureLayoutCount"Q"eventCount"Q"indirectCommandBufferCount"Q"indirectRenderCommandCount"Q"indirectComputeCommandCount"Q"motionEstimationPipelineCount"Q}"internal"{MTLHarvesterResourcesInfo="bufferCount"Q"textureCount"Q"libraryCount"Q"functionCount"Q"renderPipelineStateCount"Q"computePipelineStateCount"Q"depthStencilStateCount"Q"samplerStateCount"Q"commandQueueCount"Q"heapCount"Q"fenceCount"Q"textureLayoutCount"Q"eventCount"Q"indirectCommandBufferCount"Q"indirectRenderCommandCount"Q"indirectComputeCommandCount"Q"motionEstimationPipelineCount"Q}}
@"MTLToolsSharedEvent"
v24@0:8@"MTLToolsDevice"16
v24@0:8@"MTLToolsHeap"16
v24@0:8@"MTLToolsBuffer"16
v24@0:8@"MTLToolsDepthStencilState"16
v24@0:8@"MTLToolsTexture"16
v24@0:8@"MTLToolsSamplerState"16
v24@0:8@"MTLToolsCommandQueue"16
v24@0:8@"MTLToolsFence"16
v24@0:8@"MTLToolsEvent"16
v24@0:8@"MTLToolsFunction"16
v24@0:8@"MTLToolsArgumentEncoder"16
v24@0:8@"MTLToolsIndirectArgumentEncoder"16
v24@0:8@"MTLToolsLibrary"16
v24@0:8@"MTLToolsCommandBuffer"16
v24@0:8@"MTLToolsRenderCommandEncoder"16
v24@0:8@"MTLToolsComputeCommandEncoder"16
v24@0:8@"MTLToolsBlitCommandEncoder"16
v24@0:8@"MTLToolsParallelRenderCommandEncoder"16
v24@0:8@"MTLToolsRenderPipelineState"16
v24@0:8@"MTLToolsComputePipelineState"16
v24@0:8@"MTLToolsPipelineLibrary"16
v24@0:8@"MTLToolsIndirectCommandBuffer"16
v24@0:8@"MTLToolsIndirectRenderCommand"16
v24@0:8@"MTLToolsIndirectComputeCommand"16
v24@0:8@"MTLToolsMotionEstimationPipeline"16
v24@0:8@"MTLToolsVideoCommandEncoder"16
v24@0:8@"MTLToolsRasterizationRateMap"16
v24@0:8@"MTLToolsDynamicLibrary"16
v24@0:8@"MTLToolsBinaryLibrary"16
v24@0:8@"MTLToolsBinaryArchive"16
@40@0:8#16@24@32
@"MTLOverrideDevice"
@"MTLOverrideBuffer"
@"MTLOverrideCommandQueue"
@"MTLOverrideCommandBuffer"
@"MTLOverrideLibrary"
v72@0:8Q16@24Q32@40Q48@56Q64
v88@0:8Q16Q24Q32@40Q48@56Q64Q72Q80
v56@0:8Q16Q24Q32@40Q48
v64@0:8Q16Q24Q32@40Q48Q56
v80@0:8Q16Q24Q32@40Q48Q56q64Q72
v64@0:8Q16Q24@32Q40@48Q56
v56@0:8Q16@24Q32@40Q48
v72@0:8Q16Q24Q32@40Q48Q56Q64
v40@0:8Q16@24Q32
v40@0:8Q16Q24Q32
v48@0:8Q16Q24Q32Q40
v56@0:8Q16Q24Q32Q40Q48
v48@0:8r^@16Q24Q32Q40
v32@0:8f16f20f24f28
v28@0:8f16f20f24
v20@0:8f16
v48@0:8{?=QQQQ}16
v24@0:8I16I20
v20@0:8I16
v64@0:8{?=dddddd}16
v32@0:8r^{?=dddddd}16Q24
v32@0:8r^{?=QQQQ}16Q24
v40@0:8@16@24Q32
{MTLHarvesterMarkerRenderResources="used"{tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="__base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >="__value_"{vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >="__value_"^@}}"__value_"{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >="__value_"^@}}"__value_"{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >="__value_"^@}}"__value_"{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >="__value_"^@}}"__value_"{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >="__value_"^@}}"__value_"{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >="__value_"^@}}"__value_"{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >="__value_"^@}}"__value_"{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >="__value_"^@}}"__value_"{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >="__value_"^@}}"__value_"{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >="__value_"^@}}"__value_"{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >="__value_"^@}}"__value_"{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__value_"^@}}"__value_"{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__value_"^@}}"__value_"{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__value_"^@}}"__value_"{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >="__value_"^@}}}}"vertexMTLBuffer"[31@"<MTLBuffer>"]"vertexMTLBufferBindingOffset"[31Q]"vertexMTLTexture"[128@"<MTLTexture>"]"mutableVertexMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"mutableVertexMTLTextureIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"readVertexMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"fragmentMTLBuffer"[31@"<MTLBuffer>"]"fragmentMTLBufferBindingOffset"[31Q]"fragmentMTLTexture"[128@"<MTLTexture>"]"mutableFragmentMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"mutableFragmentMTLTextureIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"readFragmentMTLBufferIndices"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"reflectionless"B"ancestorMap"{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__tree_"{__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >="__value_"Q}}}"indirectArgumentBuffers"{vector<MTLHarvesterIndirectArgumentBufferInfo, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >="__begin_"^{MTLHarvesterIndirectArgumentBufferInfo}"__end_"^{MTLHarvesterIndirectArgumentBufferInfo}"__end_cap_"{__compressed_pair<MTLHarvesterIndirectArgumentBufferInfo *, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >="__value_"^{MTLHarvesterIndirectArgumentBufferInfo}}}"executeIndirectCommandCalls"{vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >="__begin_"^{MTLHarvesterMarkerIndirectExecute}"__end_"^{MTLHarvesterMarkerIndirectExecute}"__end_cap_"{__compressed_pair<MTLHarvesterMarkerIndirectExecute *, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >="__value_"^{MTLHarvesterMarkerIndirectExecute}}}}
@"<MTLRenderPipelineState>"
@"MTLComputePipelineDescriptor"
@"MTLComputePipelineReflection"
@"<MTLHeap>"
v20@0:8i16
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@"<MTLTexture>"
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"MTLSharedTextureHandle"16@0:8
@"<MTLTexture>"24@0:8@"<MTLDevice>"16
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
^v16@0:8
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16Q24Q32
v40@0:8@"NSString"16{_NSRange=QQ}24
@"<MTLBuffer>"24@0:8@"<MTLDevice>"16
{pair<unsigned long long, unsigned long long>=QQ}24@0:8Q16
@24@0:8r^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >={__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >=Q}}}{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >={__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >=Q}}}{set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >={__tree<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSharedEvent>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSharedEvent> > >=Q}}}{set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >={__tree<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLMotionEstimationPipeline>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLMotionEstimationPipeline> > >=Q}}}{set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >={__tree<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectCommandBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectCommandBuffer> > >=Q}}}{set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >={__tree<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectRenderCommand>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectRenderCommand> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}}16
{vector<GPUTools::MTL::Utils::DYMTLBufferGPUAddress, std::__1::allocator<GPUTools::MTL::Utils::DYMTLBufferGPUAddress> >="__begin_"^{DYMTLBufferGPUAddress}"__end_"^{DYMTLBufferGPUAddress}"__end_cap_"{__compressed_pair<GPUTools::MTL::Utils::DYMTLBufferGPUAddress *, std::__1::allocator<GPUTools::MTL::Utils::DYMTLBufferGPUAddress> >="__value_"^{DYMTLBufferGPUAddress}}}
{unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
{unordered_map<unsigned long long, __unsafe_unretained id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, __unsafe_unretained id> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, std::__1::hash<unsigned long long>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, __unsafe_unretained id>, std::__1::equal_to<unsigned long long>, true> >="__value_"f}}}
I16@0:8
@"<MTLBuffer>"
v24@0:8@?16
v32@0:8@16d24
@"MTLSamplerDescriptor"
^v24@0:8Q16
@32@0:8Q16^@24
@"MTLCaptureDevice"
@"MTLCaptureBuffer"
@"MTLCaptureLibrary"
@"MTLCaptureCommandQueue"
@"MTLCaptureCommandBuffer"
@"MTLCaptureIndirectCommandBuffer"
v24@0:8r^{MTLHarvesterMarkerBlitResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >=^@^@{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >=^@}}{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@^@{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@}}{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@^@{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@}}{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@^@{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}@@{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}}16
v24@0:8r^{MTLHarvesterMarkerVideoResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >=^@^@{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >=^@}}{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@^@{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@}}{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@^@{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@}}{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@^@{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}@@@{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}}16
v24@0:8r^{MTLHarvesterMarkerRenderResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >=^@^@{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >=^@}}{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@^@{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@}}{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@^@{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@}}{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@^@{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}[31@][31Q][128@]{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}[31@][31Q][128@]{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}B{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}{vector<MTLHarvesterIndirectArgumentBufferInfo, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >=^{MTLHarvesterIndirectArgumentBufferInfo}^{MTLHarvesterIndirectArgumentBufferInfo}{__compressed_pair<MTLHarvesterIndirectArgumentBufferInfo *, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >=^{MTLHarvesterIndirectArgumentBufferInfo}}}{vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >=^{MTLHarvesterMarkerIndirectExecute}^{MTLHarvesterMarkerIndirectExecute}{__compressed_pair<MTLHarvesterMarkerIndirectExecute *, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >=^{MTLHarvesterMarkerIndirectExecute}}}}16
v24@0:8r^{MTLHarvesterMarkerComputeResources={tuple<std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >, std::__1::vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >, std::__1::vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >, std::__1::vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >, std::__1::vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >, std::__1::vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >, std::__1::vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >, std::__1::vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > > >={vector<id<MTLBuffer>, std::__1::allocator<id<MTLBuffer> > >=^@^@{__compressed_pair<__strong id<MTLBuffer> *, std::__1::allocator<id<MTLBuffer> > >=^@}}{vector<id<MTLTexture>, std::__1::allocator<id<MTLTexture> > >=^@^@{__compressed_pair<__strong id<MTLTexture> *, std::__1::allocator<id<MTLTexture> > >=^@}}{vector<id<MTLLibrary>, std::__1::allocator<id<MTLLibrary> > >=^@^@{__compressed_pair<__strong id<MTLLibrary> *, std::__1::allocator<id<MTLLibrary> > >=^@}}{vector<id<MTLFunction>, std::__1::allocator<id<MTLFunction> > >=^@^@{__compressed_pair<__strong id<MTLFunction> *, std::__1::allocator<id<MTLFunction> > >=^@}}{vector<id<MTLRenderPipelineState>, std::__1::allocator<id<MTLRenderPipelineState> > >=^@^@{__compressed_pair<__strong id<MTLRenderPipelineState> *, std::__1::allocator<id<MTLRenderPipelineState> > >=^@}}{vector<id<MTLComputePipelineState>, std::__1::allocator<id<MTLComputePipelineState> > >=^@^@{__compressed_pair<__strong id<MTLComputePipelineState> *, std::__1::allocator<id<MTLComputePipelineState> > >=^@}}{vector<id<MTLDepthStencilState>, std::__1::allocator<id<MTLDepthStencilState> > >=^@^@{__compressed_pair<__strong id<MTLDepthStencilState> *, std::__1::allocator<id<MTLDepthStencilState> > >=^@}}{vector<id<MTLSamplerState>, std::__1::allocator<id<MTLSamplerState> > >=^@^@{__compressed_pair<__strong id<MTLSamplerState> *, std::__1::allocator<id<MTLSamplerState> > >=^@}}{vector<id<MTLHeap>, std::__1::allocator<id<MTLHeap> > >=^@^@{__compressed_pair<__strong id<MTLHeap> *, std::__1::allocator<id<MTLHeap> > >=^@}}{vector<id<MTLFence>, std::__1::allocator<id<MTLFence> > >=^@^@{__compressed_pair<__strong id<MTLFence> *, std::__1::allocator<id<MTLFence> > >=^@}}{vector<id<MTLSharedEvent>, std::__1::allocator<id<MTLSharedEvent> > >=^@^@{__compressed_pair<__strong id<MTLSharedEvent> *, std::__1::allocator<id<MTLSharedEvent> > >=^@}}{vector<id<MTLMotionEstimationPipeline>, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@^@{__compressed_pair<__strong id<MTLMotionEstimationPipeline> *, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^@}}{vector<id<MTLIndirectCommandBuffer>, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@^@{__compressed_pair<__strong id<MTLIndirectCommandBuffer> *, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^@}}{vector<id<MTLIndirectRenderCommand>, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@^@{__compressed_pair<__strong id<MTLIndirectRenderCommand> *, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^@}}{vector<id<MTLCommandQueue>, std::__1::allocator<id<MTLCommandQueue> > >=^@^@{__compressed_pair<__strong id<MTLCommandQueue> *, std::__1::allocator<id<MTLCommandQueue> > >=^@}}}}[31@][31Q][128@]{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}{vector<MTLHarvesterIndirectArgumentBufferInfo, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >=^{MTLHarvesterIndirectArgumentBufferInfo}^{MTLHarvesterIndirectArgumentBufferInfo}{__compressed_pair<MTLHarvesterIndirectArgumentBufferInfo *, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >=^{MTLHarvesterIndirectArgumentBufferInfo}}}{vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >=^{MTLHarvesterMarkerIndirectExecute}^{MTLHarvesterMarkerIndirectExecute}{__compressed_pair<MTLHarvesterMarkerIndirectExecute *, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >=^{MTLHarvesterMarkerIndirectExecute}}}}16
v24@0:8^{MTLHarvesterRuntimeStreams=^{Stream}^{MTLHarvesterCommandStream}}16
@32@0:8@16Q24
{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >="__base_"{__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >="__value_"{set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >="__tree_"{__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >="__value_"Q}}}"__value_"{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >="__tree_"{__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >="__value_"Q}}}"__value_"{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >="__tree_"{__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >="__value_"Q}}}"__value_"{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >="__tree_"{__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >="__value_"Q}}}"__value_"{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >="__tree_"{__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >="__value_"Q}}}"__value_"{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >="__tree_"{__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >="__value_"Q}}}"__value_"{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >="__tree_"{__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >="__value_"Q}}}"__value_"{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >="__tree_"{__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >="__value_"Q}}}"__value_"{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >="__tree_"{__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >="__value_"Q}}}"__value_"{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >="__tree_"{__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >="__value_"Q}}}"__value_"{set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >="__tree_"{__tree<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSharedEvent>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLSharedEvent> > >="__value_"Q}}}"__value_"{set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__tree_"{__tree<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLMotionEstimationPipeline>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLMotionEstimationPipeline> > >="__value_"Q}}}"__value_"{set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__tree_"{__tree<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectCommandBuffer>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectCommandBuffer> > >="__value_"Q}}}"__value_"{set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__tree_"{__tree<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectRenderCommand>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectRenderCommand> > >="__value_"Q}}}"__value_"{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >="__tree_"{__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >="__value_"Q}}}}}
{vector<std::__1::map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >, std::__1::allocator<std::__1::map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > > > >="__begin_"^{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >}"__end_"^{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >}"__end_cap_"{__compressed_pair<std::__1::map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > > *, std::__1::allocator<std::__1::map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > > > >="__value_"^{map<__unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::map<__unsafe_unretained id<MTLBuffer>, unsigned long long, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, unsigned long long> > > > > >}}}
{vector<std::__1::set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> > > >="__begin_"^{set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >}"__end_"^{set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >}"__end_cap_"{__compressed_pair<std::__1::set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> > *, std::__1::allocator<std::__1::set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> > > >="__value_"^{set<MTLHarvesterIndirectArgumentBufferInfo, std::__1::less<MTLHarvesterIndirectArgumentBufferInfo>, std::__1::allocator<MTLHarvesterIndirectArgumentBufferInfo> >}}}
{vector<std::__1::vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >, std::__1::allocator<std::__1::vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> > > >="__begin_"^{vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >}"__end_"^{vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >}"__end_cap_"{__compressed_pair<std::__1::vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> > *, std::__1::allocator<std::__1::vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> > > >="__value_"^{vector<MTLHarvesterMarkerIndirectExecute, std::__1::allocator<MTLHarvesterMarkerIndirectExecute> >}}}
{vector<id<MTLCommandBuffer>, std::__1::allocator<id<MTLCommandBuffer> > >="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<__strong id<MTLCommandBuffer> *, std::__1::allocator<id<MTLCommandBuffer> > >="__value_"^@}}
@48@0:8@16Q24Q32Q40
{?=dddddd}16@0:8
{?="originX"d"originY"d"width"d"height"d"znear"d"zfar"d}
@"MTLOverrideRenderPipelineState"
{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}
@40@0:8@16@24^{ILayerLockingPolicy=^^?}32
v24@0:8r^{tuple<std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={__tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14>, std::__1::set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >, std::__1::set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >, std::__1::set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >, std::__1::set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >, std::__1::set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >, std::__1::set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >, std::__1::set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >, std::__1::set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >, std::__1::set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >, std::__1::set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >, std::__1::set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >, std::__1::set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >, std::__1::set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >, std::__1::set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >, std::__1::set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > > >={set<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >={__tree<id<MTLBuffer>, std::__1::less<id<MTLBuffer> >, std::__1::allocator<id<MTLBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLBuffer> > >=Q}}}{set<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >={__tree<id<MTLTexture>, std::__1::less<id<MTLTexture> >, std::__1::allocator<id<MTLTexture> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLTexture>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLTexture> > >=Q}}}{set<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >={__tree<id<MTLLibrary>, std::__1::less<id<MTLLibrary> >, std::__1::allocator<id<MTLLibrary> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLLibrary>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLLibrary> > >=Q}}}{set<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >={__tree<id<MTLFunction>, std::__1::less<id<MTLFunction> >, std::__1::allocator<id<MTLFunction> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFunction>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFunction> > >=Q}}}{set<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >={__tree<id<MTLRenderPipelineState>, std::__1::less<id<MTLRenderPipelineState> >, std::__1::allocator<id<MTLRenderPipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLRenderPipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLRenderPipelineState> > >=Q}}}{set<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >={__tree<id<MTLComputePipelineState>, std::__1::less<id<MTLComputePipelineState> >, std::__1::allocator<id<MTLComputePipelineState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLComputePipelineState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLComputePipelineState> > >=Q}}}{set<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >={__tree<id<MTLDepthStencilState>, std::__1::less<id<MTLDepthStencilState> >, std::__1::allocator<id<MTLDepthStencilState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLDepthStencilState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLDepthStencilState> > >=Q}}}{set<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >={__tree<id<MTLSamplerState>, std::__1::less<id<MTLSamplerState> >, std::__1::allocator<id<MTLSamplerState> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSamplerState>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSamplerState> > >=Q}}}{set<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >={__tree<id<MTLHeap>, std::__1::less<id<MTLHeap> >, std::__1::allocator<id<MTLHeap> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLHeap>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLHeap> > >=Q}}}{set<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >={__tree<id<MTLFence>, std::__1::less<id<MTLFence> >, std::__1::allocator<id<MTLFence> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLFence>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLFence> > >=Q}}}{set<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >={__tree<id<MTLSharedEvent>, std::__1::less<id<MTLSharedEvent> >, std::__1::allocator<id<MTLSharedEvent> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLSharedEvent>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLSharedEvent> > >=Q}}}{set<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >={__tree<id<MTLMotionEstimationPipeline>, std::__1::less<id<MTLMotionEstimationPipeline> >, std::__1::allocator<id<MTLMotionEstimationPipeline> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLMotionEstimationPipeline>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLMotionEstimationPipeline> > >=Q}}}{set<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >={__tree<id<MTLIndirectCommandBuffer>, std::__1::less<id<MTLIndirectCommandBuffer> >, std::__1::allocator<id<MTLIndirectCommandBuffer> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectCommandBuffer>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectCommandBuffer> > >=Q}}}{set<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >={__tree<id<MTLIndirectRenderCommand>, std::__1::less<id<MTLIndirectRenderCommand> >, std::__1::allocator<id<MTLIndirectRenderCommand> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLIndirectRenderCommand>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLIndirectRenderCommand> > >=Q}}}{set<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >={__tree<id<MTLCommandQueue>, std::__1::less<id<MTLCommandQueue> >, std::__1::allocator<id<MTLCommandQueue> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id<MTLCommandQueue>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<id<MTLCommandQueue> > >=Q}}}}}16
^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}}16@0:8
v24@0:8^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}}16
^{list<MTLHarvesterCommandStream, std::__1::allocator<MTLHarvesterCommandStream> >={__list_node_base<MTLHarvesterCommandStream, void *>=^{__list_node_base<MTLHarvesterCommandStream, void *>}^{__list_node_base<MTLHarvesterCommandStream, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<MTLHarvesterCommandStream, void *> > >=Q}}
@"<MTLCommandQueue>"
v112@0:8Q16Q24Q32@40Q48@56Q64Q72Q80@88Q96Q104
v96@0:8Q16Q24Q32@40Q48Q56Q64@72Q80Q88
v32@0:8@16r^{?=BQ^{?}}24
^{?=BQ^{?}}16@0:8
@"<MTLLibrary>"
@"NSArray"
^{?=BQ^{?}}
@"<MTLCaptureScope>"
v40@0:8@16@24@32
@"NSString"
@"MTLIndirectCommandBufferDescriptor"
@"MTLMotionEstimationPipelineDescriptor"
@"MTLDepthStencilDescriptor"
@"MTLOverrideCache"
c40@0:8@16@24@?32
@40@0:8q16@24@32
c48@0:8@16@24@32@40
c52@0:8@16@24c32@36@44
