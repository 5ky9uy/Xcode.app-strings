St12length_error
St11logic_error
St9exception
NSt3__117bad_function_callE
setViewports:count:
setScissorRects:count:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
count
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
iosurface
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
present
presentAtTime:
setDevice:
alloc
initWithDebugFunctionPlayer:
device
initWithDevice:
initWithCaptureStore:
shouldIgnoreCaptureFile
mainExecutionMode
executeFunctions:count:
playbackMode
layerManager
replayerLayerForDrawableId:
prepareLayerForPresent:
executeGraphicsFunction
targetFunctionIndex
removeAllObjects
prepareWireframeTextureWithCommandBufferId:commandEncoderId:parallelEncoderId:pipelineId:renderPassDescriptor:
extractIndirectArgumentBuffers
createAndSetPostVertexDumpPipelineState:commandEncoderId:pipelineId:
createWireframeRenderCommandEncoder:
objectForKey:
reflection
vertexArguments
countByEnumeratingWithState:objects:count:
access
type
setRenderPipelineState:
wireframeTexture
setObject:forKey:
_executeGraphicsFunction
shouldExecuteGraphicsFunction
_trackObjects
executedDrawCallCount
setExecutedDrawCallCount:
extractRenderIndirectArgumentBuffers:
extractComputeIndirectArgumentBuffers:
indirectArgumentManager
notifyReplayerTargetIndirectArgumentBuffers:
objectMap
renderPipelineState
enumerateVertexBuffersUsingBlock:
firstObject
dataTypeDescription
respondsToSelector:
elementIsArgumentBuffer
index
descriptor
vertexFunction
enumerateObjectsUsingBlock:
enumerateFragmentBuffersUsingBlock:
fragmentArguments
fragmentFunction
computePipelineState
enumerateBuffersUsingBlock:
arguments
computeFunction
executePlatformFunction
_superExecutePlatformFunction
updateReplayerLayer:withOriginalLayer:
nextDrawable
texture
prepareForCaptureExecution
resetLayersVisibility
class
isKindOfClass:
colorAttachments
objectAtIndexedSubscript:
storeAction
setColorStoreAction:atIndex:
depthAttachment
setDepthStoreAction:
stencilAttachment
setStencilStoreAction:
endEncoding
_endEncodingForAllRemainingEncoders:
commit
finish
setTextureType:
pixelFormat
setPixelFormat:
width
setWidth:
height
setHeight:
setResourceOptions:
newTextureWithDescriptor:
textureType
renderPassDescriptor
setTexture:
setLevel:
setSlice:
setDepthPlane:
setResolveTexture:
setLoadAction:
setStoreAction:
renderCommandEncoderWithDescriptor:
blitCommandEncoder
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
_attachmentInfoForCommandEncoderID:
superlayer
bounds
shrinkSourceSize:toDestSize:
setBounds:
setPosition:
setAnchorPoint:
setDrawableSize:
contentsScale
setContentsScale:
commandBuffer
setClearColor:
_texture2DFromTexture:level:slice:depthPlane:commandBuffer:
renderTexture:withEncoder:enableBlending:layerIndex:
enableWireframePresent
wireframeLineColor
setBlendColorRed:green:blue:alpha:
waitUntilCompleted
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
createLayerWithID:contentRect:contentsScale:properties:isCoreAnimationSurface:
updateLayer:contentRect:contentsScale:properties:
layerForID:
currentTopLayer
deleteLayer:
setTransform:forLayerID:withScreenToLayerScale:
setPosition:forLayerID:
setAnchorPoint:forLayerID:
applyLayersVisibility
setFramebufferOnly:
position
anchorPoint
anchorPointZ
setAnchorPointZ:
transform
setTransform:
drawableSize
processArguments
_modifyDescriptorForStore:
parallelRenderCommandEncoderWithDescriptor:
_isFunctionCommandEncoderCreation
_isReceiverTypeCommandEncoderRelated
_addRenderPassDescriptorToEncoderMapFromArgumentPointer:forEncoder:
_forceAttachmentStoreActionToStore:
setObject:atIndexedSubscript:
_updateMemorylessTextures:
setDepthAttachment:
setStencilAttachment:
commandQueue
setStatLocations:
availableCounters
isEqualToString:
removeObject:
setStatEnabled:
setStatOptions:
getListIndex
length
bytes
unsignedIntegerValue
addCommandBufferFrameProfile:
addPerfSampleHandler:
requestCounters:withIndex:
counterInfo
objectForKeyedSubscript:
addObject:
isStatEnabled
arrayWithObjects:
setWithArray:
containsObject:
subdivideCounterList:
mutableCopy
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
getStatLocations
initWithMTLDevice:
counterDictionary
allKeys
derivedCounterScript
analysisScript
configurationVariables
harvestableTexture:
encoderMap
commitEncodersAndCommandBuffers
waitForCommmandBuffersCompletion
presentDrawable
setupCounterConfigurationAndGetFrameProfilerCounters
enableStatsSampling:
isCounterAvailable:
setupAllStatLocationsWithBlitOption:
setupProfilingForCounterLists
setupProfilingForListAtIndex:
counterInfo:
sampleEncoderCounters
stopFrameProfiling
derivedCounterData
.cxx_destruct
.cxx_construct
wireframeRenderMode
targetFunctionNeedsSeparatedPostVertexDump
setShouldIgnoreCaptureFile:
currentEncoderIndex
setCurrentEncoderIndex:
counterTypes
setCounterTypes:
counterListsPerPass
setCounterListsPerPass:
statVertices
setStatVertices:
statPixels
setStatPixels:
frameCounters
setFrameCounters:
_drawableIdToLayerIdMap
_textureToDrawableMap
_commandEncoderDescriptorMap
_counterInfos
_baseCounterIndexForList
_commandBufferMap
_encoderMap
_parallelEncoderMap
_encoderToParallelEncoderMap
_lastEncoderID
_disableWireframe
_commandQueueSet
_wireframeRenderer
_wireframeRenderMode
_postVertexDump
_targetFunctionNeedsSeparatedPostVertexDump
_textureRenderer
_commandBufferIndex
_encoderIndex
_drawIndex
_targetCommandEncoderId
_metalLayers
_lastCommandBufferId
_lastCommandBufferIndex
_lastEncoderIndex
_lastSampleCommandBufferEncoderId
_last
_shouldIgnoreCaptureFile
_currentEncoderIndex
_counterTypes
_counterListsPerPass
_statVertices
_statPixels
_frameCounters
animationTimingFunction
animationDuration
disableActions
completionBlock
copy
setDisableActions:
flush
setAnimationTimingFunction:
setAnimationDuration:
setCompletionBlock:
init
newLibraryWithSource:options:error:
newFunctionWithName:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
usage
setUsage:
setArrayLength:
isRasterizationEnabled
_createWireframeTexture:andRenderPassDescriptor:
vertexDescriptor
setVertexDescriptor:
setVertexFunction:
setFragmentFunction:
inputPrimitiveTopology
setInputPrimitiveTopology:
tessellationFactorFormat
setTessellationFactorFormat:
tessellationPartitionMode
setTessellationPartitionMode:
tessellationOutputWindingOrder
setTessellationOutputWindingOrder:
isTessellationFactorScaleEnabled
setTessellationFactorScaleEnabled:
tessellationFactorStepFunction
setTessellationFactorStepFunction:
maxTessellationFactor
setMaxTessellationFactor:
tessellationControlPointIndexType
setTessellationControlPointIndexType:
newRenderPipelineStateWithDescriptor:error:
_saveEncoderState:
array
enumerateFragmentTexturesUsingBlock:
enumerateVertexTexturesUsingBlock:
engine
wireframeLineWidth
function
tessellationWireframeLineWidth
setRenderTargetArrayLength:
_loadEncoderState:
newDepthStencilStateWithDescriptor:
setDepthStencilState:
setTriangleFillMode:
originalObject
setLineWidth:
_prepareWireframeTextureWithEncoder:andCommandBuffer:andPipelineState:andParallelEncoder:andRenderPassDescriptor:
viewports
viewport
scissorRects
scissorRect
frontFacingWinding
cullMode
tessellationFactorScale
tessellationFactorBufferInstanceStride
tessellationFactorBufferArgument
enumerateVertexSamplersUsingBlock:
setViewport:
setScissorRect:
setFrontFacingWinding:
setCullMode:
setTessellationFactorBuffer:offset:instanceStride:
setTessellationFactorScale:
vertexBytesKeyAtIndex:
vertexBytesForKey:
setVertexBytes:length:atIndex:
setVertexBuffer:offset:atIndex:
setVertexTexture:atIndex:
setVertexSamplerState:atIndex:
_player
_wireframeLibrary
_wireframeCreationFragmentFunction
_wireframeTextureDescriptor
_wireframeTexture
_wireframeRenderPassColorAttachmentDescriptor
_wireframeRenderPassDescriptor
_wireframeRenderPipelineState
_encoder_viewports
_encoder_scissorRects
_encoder_frontFacingWinding
_encoder_cullMode
_encoder_tessellationFactorBuffer
_encoder_tessellationFactorScale
_encoder_tessellationFactorBufferInstanceStride
_encoder_vertexBufferArgs
_encoder_vertexTextureArgs
_encoder_vertexSamplerArgs
_originalCommandEncoderId
_originalCommandBuffer
_originalEncoder
_originalParallelEncoder
_supports_tessellation
addObjectsFromArray:
mergeDictionaries:right:
stringByAppendingString:
initWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
initWithContentsOfFile:encoding:error:
arrayWithObjects:count:
stringWithFormat:
stringByStandardizingPath
addAnalysisWithPrefix:andScriptPrefix:
arrayWithObject:
stringWithUTF8String:
baseObject
acceleratorPort
initWithAcceleratorPort:
_loadAnalysis:vendorStringNames:vendorScriptPrefix:
_addGPUTimeEntry
_counterDictionary
_derivedCounterScript
_analysisScript
_configurationVariables
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
unarchiveObjectWithData:
strongLayerManager
numberWithUnsignedLongLong:
numberWithLongLong:
dictionaryWithObjects:forKeys:count:
updateLayer:contentRect:contentsScale:properties:windowRect:
deviceForID:withDeviceName:
setPresentsWithTransaction:
removeObjectForKey:
isFrameBoundary
setLayerManager:
_drawableMap
_drawableRenderabilityStatusMap
_layerManager
initWithFunctionPlayer:
setIndirectArgumentManager:
dealloc
standardUserDefaults
stringForKey:
componentsSeparatedByString:
name
hasPrefix:
_getDeviceWithName:
processCommandBuffer:functionIndex:ancestorMapData:indirectArgumentBuffersData:resourceMapsData:driverDecodingData:
encodeIndirectArgumentsForBuffer:data:
options
contents
newBufferWithLength:options:
copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:
newBufferWithBytes:length:options:
didModifyRange:
_createPrivateBufferForFunctionWithDevice:bytes:length:resourceOptions:
storageMode
isDrawable
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:options:
newCommandQueue
_saveBytes
keyForOriginalObject:
_objectMap
_vertexBytesDataMap
_indirectArgumentManager
_device
setLabel:
newTextureWithDescriptor:offset:bytesPerRow:
addDebugMarker:range:
removeAllDebugMarkers
newTiledTextureWithDescriptor:offset:bytesPerRow:
setPurgeableState:
makeAliasable
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
getBytes:bytesPerRow:fromRegion:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newArgumentEncoderWithBufferIndex:
newArgumentEncoderWithBufferIndex:reflection:
newFunctionWithName:constantValues:error:
newExternFunctionWithName:
setMetalAssertionsEnabled:
newCommandQueueWithMaxCommandBufferCount:
newHeapWithDescriptor:
newTextureWithDescriptor:iosurface:plane:
newSamplerStateWithDescriptor:
newDefaultLibrary
newLibraryWithFile:error:
newLibraryWithData:error:
newComputePipelineStateWithFunction:error:
newComputePipelineStateWithDescriptor:error:
newFence
unmapShaderSampleBuffer
minLinearTextureAlignmentForPixelFormat:
newCommandQueueWithDescriptor:
newTiledTextureWithBytesNoCopy:length:descriptor:offset:bytesPerRow:
setProfilingEnabled:
enqueue
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
waitUntilScheduled
addCompletedHandler:
computeCommandEncoder
debugCommandEncoder
commitAndHold
setComputePipelineState:
setBytes:length:atIndex:
setBuffer:offset:atIndex:
setBufferOffset:atIndex:
setTexture:atIndex:
setSamplerState:atIndex:
setSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setThreadgroupMemoryLength:atIndex:
setStageInRegion:
dispatchThreadgroups:threadsPerThreadgroup:
dispatchThreadgroupsWithIndirectBuffer:indirectBufferOffset:threadsPerThreadgroup:
dispatchThreads:threadsPerThreadgroup:
updateFence:
waitForFence:
useResource:usage:
useHeap:
dispatchThreadsWithIndirectBuffer:indirectBufferOffset:
insertDebugSignpost:
setVertexBufferOffset:atIndex:
setVertexSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setDepthClipMode:
setDepthBias:slopeScale:clamp:
setFragmentBytes:length:atIndex:
setFragmentBuffer:offset:atIndex:
setFragmentBufferOffset:atIndex:
setFragmentTexture:atIndex:
setFragmentSamplerState:atIndex:
setFragmentSamplerState:lodMinClamp:lodMaxClamp:atIndex:
setStencilReferenceValue:
setStencilFrontReferenceValue:backReferenceValue:
setVisibilityResultMode:offset:
setColorStoreActionOptions:atIndex:
setDepthStoreActionOptions:
setStencilStoreActionOptions:
drawPrimitives:vertexStart:vertexCount:instanceCount:
drawPrimitives:vertexStart:vertexCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:
drawPrimitives:vertexStart:vertexCount:instanceCount:baseInstance:
drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:instanceCount:baseVertex:baseInstance:
drawPrimitives:indirectBuffer:indirectBufferOffset:
drawIndexedPrimitives:indexType:indexBuffer:indexBufferOffset:indirectBuffer:indirectBufferOffset:
textureBarrier
updateFence:afterStages:
waitForFence:beforeStages:
drawPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:instanceCount:baseInstance:
drawPatches:patchIndexBuffer:patchIndexBufferOffset:indirectBuffer:indirectBufferOffset:
drawIndexedPatches:patchStart:patchCount:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:instanceCount:baseInstance:
drawIndexedPatches:patchIndexBuffer:patchIndexBufferOffset:controlPointIndexBuffer:controlPointIndexBufferOffset:indirectBuffer:indirectBufferOffset:
synchronizeResource:
synchronizeTexture:slice:level:
copyFromBuffer:sourceOffset:sourceBytesPerRow:sourceBytesPerImage:sourceSize:toTexture:destinationSlice:destinationLevel:destinationOrigin:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:
copyFromTexture:sourceSlice:sourceLevel:sourceOrigin:sourceSize:toBuffer:destinationOffset:destinationBytesPerRow:destinationBytesPerImage:options:
generateMipmapsForTexture:
fillBuffer:range:value:
setArgumentBuffer:offset:
setArgumentBuffer:startOffset:arrayElement:
constantDataAtIndex:
newArgumentEncoderForBufferAtIndex:
setSkipRender:
setExecutionEnabled:
insertDebugCaptureBoundary
renderCommandEncoder
pushDebugGroup:
popDebugGroup
maxAvailableSizeWithAlignment:
setBlendingEnabled:
setSourceRGBBlendFactor:
setDestinationRGBBlendFactor:
setRgbBlendOperation:
setSourceAlphaBlendFactor:
setDestinationAlphaBlendFactor:
setAlphaBlendOperation:
setMinFilter:
setMagFilter:
setMipFilter:
setMaxAnisotropy:
setSAddressMode:
setTAddressMode:
setRAddressMode:
setNormalizedCoordinates:
setLodMinClamp:
setLodMaxClamp:
_renderPassPixelFormatFromDescriptor:
_library
_vertexFunction
_opaqueFragmentFunction
_blendingFragmentFunction
_blendingFragmentFunction_2dArray
_renderPipelineDescriptor
_depthStencilDescriptor
_positionBuffer
_texCoordBuffer
_uniformData
_uniformDataBuffer
_samplerState
uploadDriverDecodingData:
processAncestorMapData:
processIndirectArgumentBuffersData:
processResourceMapsData:
resolveIABDecodingOperations
encodeIndirectArgumentsForBuffer:decodingMap:
setIndirectArgumentBufferDecodingData:
findAncestorsForBuffer:commandBufferIndex:commandEncoderIndex:callIndex:ancestors:
encodeIndirectArgumentsForBuffer:data:decodingMap:
executeIABDecodingOp:bufferId:data:indirectDecodingMap:
argumentEncoderForDecodingOperation:reflectionStructType:
layout
encodedLength
newArgumentEncoderWithArguments:
bufferStructType
findStructTypeForArgumentIndex:inStructType:
blitBufferFromGPU:
decodeReplayerIAB:offset:function:argument:
functionType
notifyReplayerTargetCommandBuffersFinished
_currentCommandBuffer
_currentCommandBufferFunctionIndex
_traceProcessed
_currentDeviceDecodingData
_commandBufferIds
_ancestorMaps
_indirectArgumentBuffers
_bufferVitualAddressMap
_bufferLengthMap
_textureMap
_samplerMap
_usedSamplersMap
_encodedResourcesMap
_decodingMap
_deviceResourcesBuffers
_replayerIABs
_replayerBufferBaseVirtualAddressMap
_replayerTextureMap
_replayerSamplerMap
arrayLength
elementStructType
argumentIndexStride
elementArrayType
elementTypeDescription
dataType
virtualAddressForBufferAtIndex:inIndirectArgumentBuffer:atOffset:
gpuAddress
uniqueIdentifierForTextureAtIndex:inIndirectArgumentBuffer:atOffset:
uniqueIdentifier
uniqueIdentifierForSamplerAtIndex:inIndirectArgumentBuffer:atOffset:
members
structType
indirectArgumentIndex
arrayType
pointerType
elementType
strongObjectsPointerArray
preprocessorMacros
fastMathEnabled
debuggingEnabled
languageVersion
UTF8String
required
constantValueWithFunctionConstant:
enumerateKeysAndObjectsUsingBlock:
depth
mipmapLevelCount
sampleCount
framebufferOnly
cpuCacheMode
level
slice
depthPlane
resolveTexture
resolveLevel
resolveSlice
resolveDepthPlane
loadAction
storeActionOptions
visibilityResultBuffer
clearColor
clearDepth
clearStencil
renderTargetArrayLength
getSamplePositions:count:
stencilCompareFunction
stencilFailureOperation
depthFailureOperation
depthStencilPassOperation
readMask
writeMask
depthCompareFunction
isDepthWriteEnabled
label
frontFaceStencil
backFaceStencil
minFilter
magFilter
mipFilter
maxAnisotropy
sAddressMode
tAddressMode
rAddressMode
normalizedCoordinates
lodMinClamp
lodMaxClamp
compareFunction
borderColor
maxThreadsPerThreadgroup
isDepth24Stencil8PixelFormatSupported
vendorName
familyName
productName
isLowPower
isHeadless
valueForKey:
unsignedLongValue
isBlendingEnabled
sourceRGBBlendFactor
destinationRGBBlendFactor
rgbBlendOperation
sourceAlphaBlendFactor
destinationAlphaBlendFactor
alphaBlendOperation
layouts
stride
stepRate
stepFunction
attributes
format
offset
bufferIndex
rasterSampleCount
sampleMask
sampleCoverage
isAlphaToCoverageEnabled
isAlphaToOneEnabled
depthAttachmentPixelFormat
stencilAttachmentPixelFormat
vertexBuffers
mutability
fragmentBuffers
threadGroupSizeIsMultipleOfThreadExecutionWidth
stageInputDescriptor
indexType
indexBufferIndex
buffers
maxCommandBufferCount
qosClass
qosRelativePriority
size
airMDType
debugHeap
enumeratePointersUsingBlock:
textures
dataWithContentsOfFile:
lineNumber
vertexAttributes
attributeIndex
attributeType
isActive
stageInputAttributes
patchType
patchControlPointCount
textureDataType
isVertexDescriptorBuffer
bufferAlignment
bufferDataSize
bufferDataType
threadgroupMemoryAlignment
threadgroupMemoryDataSize
lastObject
archivedDataWithRootObject:
performanceStatistics
vertexBuiltInArguments
builtInArguments
maxTotalThreadsPerThreadgroup
threadExecutionWidth
addPointer:
iosurfacePlane
isFramebufferOnly
dataSize
loopCount
setLoopCount:
integerForKey:
setLoopTimeLimit:
setPlaybackMode:
playbackToFunction:
waitUntilResolved
_setupPState
player
_profileFrameWithCounterListsForProfileInfo:
_profileFrameWithCounterListsForProfileInfo:encoderPass:
unsignedLongLongValue
addCounters:
dictionaryWithDictionary:
setValue:forKey:
_clearData
_computeAverageForFrameProfile:forProfile:withInfo:andUpdatedCounterInfo:forEncoders:
numberWithUnsignedLong:
dictionary
initWithPlaybackEngine:
profileFrameWithPayload:
profileEncodersForProfileInfo:
profileFrameWithCounterListsForProfileInfo:
_commandBufferFrameProfilesInfo
_commandBufferFrameProfilesDrawCallInfo
_commandBufferFrameProfiles
_frameProfiling
_engine
_needsMultiplePasses
decodeObjectForKey:
encodeObject:forKey:
supportedFeatureSets
supportsFeatureSet:
supportsCapabilitiesOfGraphicsAPI:
encodeWithCoder:
initWithCoder:
copyWithZone:
_supportedFeatureSets
_name
isLabelAppleInternal:
decodeInt64ForKey:
containsValueForKey:
decodeBoolForKey:
encodeInt64:forKey:
encodeBool:forKey:
capturableObjectType
initWithCommandQueue:
displayName
deviceAddress
queueAddress
toolsQueueAddress
canBeCaptured
setCanBeCaptured:
isOpenGLQueue
setIsOpenGLQueue:
isInternalQueue
setIsInternalQueue:
_canBeCaptured
_isOpenGLQueue
_isInternalQueue
_displayName
_deviceAddress
_queueAddress
_toolsQueueAddress
_label
graphicsSemaphore
_reservePostVertexDumpBufferWithLength:
postVertexDumpBufferIndex
maxColorAttachments
internalPipelineStateLabel
setDepthAttachmentPixelFormat:
setStencilAttachmentPixelFormat:
setRasterizationEnabled:
setSampleCount:
setSampleMask:
maxVertexBuffers
setPostVertexDumpBufferIndex:
newRenderPipelineStateWithDescriptor:options:reflection:error:
postVertexDumpOutputs
postVertexDumpStride
postVertexDumpBuffer
_postVertexDumpBuffer
setPreprocessorMacros:
setFastMathEnabled:
setDebuggingEnabled:
setLanguageVersion:
setConstantValue:type:atIndex:
setDepth:
setMipmapLevelCount:
setIsDrawable:
setStorageMode:
setCpuCacheMode:
setVisibilityResultBuffer:
setSamplePositions:count:
setDepthCompareFunction:
setDepthWriteEnabled:
setFrontFaceStencil:
setBackFaceStencil:
setCompareFunction:
setBorderColor:
setStride:
setStepRate:
setStepFunction:
setFormat:
setOffset:
setBufferIndex:
setIndexType:
setIndexBufferIndex:
setTextures:withRange:
setFragmentTextures:withRange:
setVertexTextures:withRange:
setBuffers:offsets:withRange:
setFragmentBuffers:offsets:withRange:
setVertexBuffers:offsets:withRange:
setSamplerStates:withRange:
setVertexSamplerStates:withRange:
setFragmentSamplerStates:withRange:
setSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setVertexSamplerStates:lodMinClamps:lodMaxClamps:withRange:
setFragmentSamplerStates:lodMinClamps:lodMaxClamps:withRange:
useResources:count:usage:
useHeaps:count:
setRasterSampleCount:
setSampleCoverage:
setAlphaToCoverageEnabled:
setAlphaToOneEnabled:
setMutability:
setComputeFunction:
setThreadGroupSizeIsMultipleOfThreadExecutionWidth:
setStageInputDescriptor:
setMaxCommandBufferCount:
setQosClass:
setQosRelativePriority:
setSize:
setResolveLevel:
setResolveSlice:
setResolveDepthPlane:
setStoreActionOptions:
setClearDepth:
setClearStencil:
setStencilCompareFunction:
setStencilFailureOperation:
setDepthFailureOperation:
setDepthStencilPassOperation:
setReadMask:
setWriteMask:
initWithCaptureScope:
scopeAddress
_scopeAddress
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
MTLStatCommandBufferIndex
MTLStatEncoderIndex
MTLStatCommandIndex
v8@?0
v32@?0^{?=ccQ@QQQQQcff}8Q16^c24
v32@?0@"MTLArgument"8Q16^c24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v32@?0^{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}8I16I20^B24
v32@?0@"<MTLCommandBuffer>"8@"NSData"16Q24
type
currentEncoderIndex
TI,N,V_currentEncoderIndex
counterTypes
T@"NSMutableArray",&,N,V_counterTypes
counterListsPerPass
T@"NSMutableArray",&,N,V_counterListsPerPass
statVertices
T@"NSString",&,N,V_statVertices
statPixels
T@"NSString",&,N,V_statPixels
frameCounters
T@"NSMutableArray",&,N,V_frameCounters
shouldIgnoreCaptureFile
Tc,N,V_shouldIgnoreCaptureFile
wireframeRenderMode
Tq,R,N,V_wireframeRenderMode
targetFunctionNeedsSeparatedPostVertexDump
Tc,R,N,V_targetFunctionNeedsSeparatedPostVertexDump
#include <metal_graphics>
#include <metal_texture>
using namespace metal;
fragment vec<float, 4> wireframeCreationFragment()
  return vec<float, 4>(1.0, 1.0, 1.0, 1.0);
-[DYMTLDebugWireframeRenderer initWithDebugFunctionPlayer:]
_wireframeLibrary != nil
wireframeCreationFragment
_wireframeCreationFragmentFunction != nil
tessellationControlPointIndexType
wireframeTexture
T@"<MTLTexture>",R,N,V_wireframeTexture
MTLStat_nSec
Version
Mismatched versions
-counters.plist
-analysis.js
-derived.js
Failed to load property file at %@, reason: %@
Failed to load analysis file at %@, reason: %@
/System/Library/Extensions/%@.bundle/Contents/Resources/%@
/System/Library/Extensions/%@.bundle/Contents/%@
/System/Library/Extensions/%@.bundle/%@
/AppleInternal/Developer/Library/MetalStatistics/%@/%@
~/Library/Developer/MetalStatistics/%@/%@
function GPUToolsGPUTime()
   return MTLStat_nSec
counters
name
GPU Time
GPU Time in nSec
Count
MetalPluginName
MetalStatisticsName
GPUConfigurationVariable
MetalStatisticsScriptName
MetalStatistics
counterDictionary
T@"NSMutableDictionary",R,N,V_counterDictionary
derivedCounterScript
T@"NSString",R,N,V_derivedCounterScript
analysisScript
T@"NSString",R,N,V_analysisScript
configurationVariables
T@"NSMutableDictionary",R,N,V_configurationVariables
Unknown
CAMetalDrawable
CAMetalLayer
MTLArgumentEncoder
MTLBlitCommandEncoder
MTLBuffer
MTLCaptureManager
MTLCaptureScope
MTLCommandBuffer
MTLCommandQueue
MTLComputeCommandEncoder
MTLComputePipelineState
MTLDepthStencilState
MTLDevice
MTLFence
MTLFragmentRenderCommandEncoder
MTLFunction
MTLHeap
MTLLibrary
MTLParallelRenderCommandEncoder
MTLRenderCommandEncoder
MTLRenderPipelineState
MTLSamplerState
MTLTexture
MTLTextureLayout
kDYFEMTLBlitCommandEncoder_copyFromBuffer_sourceOffset_toBuffer_destinationOffset_size
kDYFEMTLComputeCommandEncoder_setTexture_baseLevel_atIndex
kDYFEMTLDevice_newRenderPipelineStateWithDescriptor_completionHandler
kDYFEMTLDevice_newTextureWithDescriptor_iosurface_plane
kDYFEMTLDevice_newTextureWithDescriptor
kDYFEMTLRenderCommandEncoder_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount
kDYFEMTLArgumentEncoder_setLabel
kDYFEMTLComputeCommandEncoder_useHeap
kDYFEMTLRenderCommandEncoder_setLineWidth
kDYFEMTLBuffer_addDebugMarker_range
kDYFEMTLRenderCommandEncoder_setScissorRects_count
kDYFECAMetalDrawable_dealloc
kDYFEMTLTexture_formattedDescription
kDYFEMTLComputeCommandEncoder_pushDebugGroup
kDYFEMTLRenderCommandEncoder_setVisibilityResultMode_offset
kDYFEMTLComputeCommandEncoder_setBufferOffset_atIndex
kDYFEMTLRenderCommandEncoder_setViewport
kDYFEMTLArgumentEncoder_setSamplerStates_withRange
kDYFEMTLDevice_newSamplerStateWithDescriptor
kDYFEMTLDevice_supportsFeatureSet
kDYFEMTLComputeCommandEncoder_setBuffer_offset_atIndex
kDYFEMTLRenderCommandEncoder_drawIndexedPatches_patchStart_patchCount_patchIndexBuffer_patchIndexBufferOffset_controlPointIndexBuffer_controlPointIndexBufferOffset_instanceCount_baseInstance
kDYFEMTLComputeCommandEncoder_useResources_count_usage
kDYFEMTLComputeCommandEncoder_dispatchThreadgroupsWithIndirectBuffer_indirectBufferOffset_threadsPerThreadgroup
kDYFEMTLDevice_newCommandQueue
kDYFEMTLRenderCommandEncoder_setTileBufferOffset_atIndex
kDYFEMTLBlitCommandEncoder_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toBuffer_destinationOffset_destinationBytesPerRow_destinationBytesPerImage
kDYFEMTLRenderCommandEncoder_setColorStoreActionOptions_atIndex
kDYFEMTLRenderCommandEncoder_setStencilStoreActionOptions
kDYFEMTLHeap_setResponsibleProcess
kDYFEMTLDevice_newComputePipelineStateWithFunction_error
kDYFEMTLComputeCommandEncoder_popDebugGroup
kDYFEMTLRenderCommandEncoder_setFragmentSamplerStates_lodMinClamps_lodMaxClamps_withRange
kDYFEMTLLibrary_newFunctionWithName
kDYFEMTLRenderCommandEncoder_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset_instanceCount_baseVertex_baseInstance
kDYFEMTLFragmentRenderCommandEncoder_setFragmentSamplerState_atIndex
kDYFEMTLLibrary_dealloc
kDYFEMTLRenderCommandEncoder_setFragmentSamplerState_lodMinClamp_lodMaxClamp_atIndex
kDYFEMTLRenderCommandEncoder_setFragmentBuffers_offsets_withRange
kDYFEMTLParallelRenderCommandEncoder_renderCommandEncoder
kDYFEMTLRenderCommandEncoder_drawIndexedPatches_patchIndexBuffer_patchIndexBufferOffset_controlPointIndexBuffer_controlPointIndexBufferOffset_indirectBuffer_indirectBufferOffset
kDYFEMTLComputeCommandEncoder_updateFence
kDYFEMTLArgumentEncoder_setTexture_atIndex
kDYFEMTLFragmentRenderCommandEncoder_setFragmentTexture_baseLevel_atIndex
kDYFEMTLDevice_newArgumentBufferLayoutWithStructType
kDYFEMTLComputeCommandEncoder_setSamplerState_atIndex
kDYFEMTLTexture_getBytes_bytesPerRow_bytesPerImage_fromRegion_mipmapLevel_slice
kDYFEMTLLibrary_newFunctionWithName_constantValues_completionHandler
kDYFEMTLDevice_newLibraryWithCIFilters_imageFilterFunctionInfo_error
kDYFEMTLFragmentRenderCommandEncoder_setFragmentBuffer_offset_atIndex
kDYFEMTLBlitCommandEncoder_generateMipmapsForTexture
kDYFEMTLFragmentRenderCommandEncoder_dealloc
kDYFEMTLCommandBuffer_debugCommandEncoder
kDYFEMTLDevice_newRenderPipelineStateWithDescriptor_error
kDYFEMTLCaptureManager_startCaptureWithCommandQueue
kDYFEMTLRenderCommandEncoder_useResources_count_usage
kDYFEMTLBuffer_gpuVirtualAddress
kDYFEMTLRenderCommandEncoder_setTileTextures_withRange
kDYFEMTLCommandBuffer_commitAndHold
kDYFEMTLBlitCommandEncoder_fillBuffer_range_value
kDYFECAMetalLayer_setFramebufferOnly
kDYFEMTLComputeCommandEncoder_executeBarrier
kDYFEMTLRenderCommandEncoder_dealloc
kDYFEMTLBuffer_dealloc
kDYFEMTLDevice_setMetalAssertionsEnabled
kDYFEMTLFragmentRenderCommandEncoder_insertDebugSignpost
kDYFEMTLBuffer_removeAllDebugMarkers
kDYFEMTLDevice_newRenderPipelineStateWithTileDescriptor_options_reflection_error
kDYFEMTLRenderCommandEncoder_setColorStoreAction_atIndex
kDYFEMTLFragmentRenderCommandEncoder_setScissorRect
kDYFEMTLDevice_newRenderPipelineStateWithTileDescriptor_options_completionHandler
kDYFEMTLParallelRenderCommandEncoder_setColorStoreActionOptions_atIndex
0xffffc0fb
kDYFEMTLCommandBuffer_popDebugGroup
kDYFEMTLCommandBuffer_presentDrawable_atTime
kDYFEMTLDevice_heapTextureSizeWithDescriptor
kDYFEMTLHeap_setPurgeableState
kDYFEMTLTexture_isPurgeable
kDYFEMTLCommandQueue_setProfilingEnabled
kDYFEMTLTexture_invalidateRegion
kDYFEMTLRenderCommandEncoder_setDepthStoreActionOptions
kDYFEMTLTexture_harvested_replaceRegion_mipmapLevel_slice_withBytes_bytesPerRow_bytesPerImage
kDYFEMTLBuffer_isPurgeable
kDYFEMTLRenderCommandEncoder_setFragmentTexture_atTextureIndex_samplerState_atSamplerIndex
kDYFEMTLDevice_newRenderPipelineStateWithTileDescriptor_error
kDYFEMTLRenderCommandEncoder_setViewports_count
kDYFEMTLRenderCommandEncoder_setTileBuffer_offset_atIndex
kDYFEMTLComputeCommandEncoder_setTexture_atIndex
kDYFEMTLFragmentRenderCommandEncoder_setFragmentSamplerState_lodMinClamp_lodMaxClamp_atIndex
kDYFEMTLBlitCommandEncoder_copyFromBuffer_sourceOffset_sourceBytesPerRow_sourceBytesPerImage_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin
kDYFEMTLComputeCommandEncoder_setTextures_withRange
kDYFEMTLTexture_resourceUsage
kDYFEMTLFragmentRenderCommandEncoder_setFragmentTexture_atIndex
kDYFECAMetalLayer_setBounds_contentsScale_windowBounds_windowProperties
kDYFEMTLRenderCommandEncoder_setStencilReferenceValue
kDYFEMTLFragmentRenderCommandEncoder_setFragmentBufferOffset_atIndex
kDYFEMTLDevice_newBufferWithBytes_length_options
kDYFECAMetalDrawable_present
kDYFEMTLDevice_newDepthStencilStateWithDescriptor
kDYFEMTLComputeCommandEncoder_dispatchThreadgroups_threadsPerThreadgroup
kDYFEMTLHeap_isPurgeable
kDYFEMTLArgumentEncoder_constantDataAtIndex
kDYFEMTLParallelRenderCommandEncoder_setColorStoreAction_atIndex
kDYFEMTLDepthStencilState_dealloc
kDYFEMTLRenderCommandEncoder_drawPatches_patchStart_patchCount_patchIndexBuffer_patchIndexBufferOffset_instanceCount_baseInstance
kDYFEMTLCommandQueue_insertDebugCaptureBoundary
kDYFEMTLFragmentRenderCommandEncoder_setRenderPipelineState
kDYFEMTLFragmentRenderCommandEncoder_drawTrianglesWithPositions_vertexCount_vertexVaryings_varyingCountPerVertex
kDYFEMTLArgumentEncoder_setArgumentBuffer_startOffset_arrayElement
kDYFEMTLTexture_getBytes_bytesPerRow_fromRegion_mipmapLevel
kDYFEMTLCommandBuffer_renderCommandEncoderWithDescriptor
kDYFEMTLRenderCommandEncoder_setVertexBufferOffset_atIndex
kDYFECAMetalLayer_setDevice
kDYFECAMetalLayer_setBounds_contentsScale
kDYFEMTLCommandBuffer_parallelRenderCommandEncoderWithDescriptor
kDYFEMTLComputePipelineState_dealloc
kDYFEMTLDevice_newCommandQueueWithDescriptor
kDYFEMTLRenderCommandEncoder_setTileSamplerStates_withRange
kDYFEMTLDevice_indirectArgumentBufferDecodingData
kDYFEMTLHeap_newTextureWithDescriptor
kDYFEMTLBlitCommandEncoder_synchronizeTexture_slice_level
kDYFEMTLFragmentRenderCommandEncoder_drawTrianglesWithPositions_vertexCount_triangleIndices_triangleCount
kDYFEMTLBlitCommandEncoder_setLabel
kDYFEMTLCaptureScope_dealloc
kDYFEMTLComputeCommandEncoder_endEncoding
kDYFEMTLFragmentRenderCommandEncoder_setFragmentBytes_length_atIndex
kDYFEMTLComputeCommandEncoder_setBuffers_offsets_withRange
kDYFEMTLSamplerState_dealloc
kDYFEMTLComputeCommandEncoder_setSamplerStates_withRange
kDYFEMTLRenderCommandEncoder_textureBarrier
kDYFEMTLRenderCommandEncoder_setDepthBias_slopeScale_clamp
kDYFEMTLCommandBuffer_restoreMTLBufferContents
kDYFEMTLCommandBuffer_setLabel
kDYFEMTLParallelRenderCommandEncoder_setDepthStoreAction
kDYFEMTLBuffer_contents
kDYFEMTLRenderCommandEncoder_setTileBytes_length_atIndex
kDYFEMTLBuffer_newTextureWithDescriptor_offset_bytesPerRow
kDYFEMTLRenderCommandEncoder_setVertexSamplerState_lodMinClamp_lodMaxClamp_atIndex
kDYFEMTLBlitCommandEncoder_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toBuffer_destinationOffset_destinationBytesPerRow_destinationBytesPerImage_options
kDYFEMTLRenderCommandEncoder_drawIndexedPrimitives_indexCount_indexType_indexBuffer_indexBufferOffset
kDYFEMTLDevice_harvested_newBufferWithBytes_length_options
kDYFEMTLFragmentRenderCommandEncoder_endEncoding
kDYFEMTLCommandQueue_commandBuffer
kDYFEMTLRenderCommandEncoder_setVertexBytes_length_atIndex
kDYFEMTLCommandBuffer_blitCommandEncoder
kDYFEMTLTexture_uniqueIdentifier
kDYFEMTLArgumentEncoder_setTextures_withRange
kDYFEMTLRenderCommandEncoder_setLabel
kDYFEMTLParallelRenderCommandEncoder_setLabel
kDYFEMTLDevice_newComputePipelineStateWithDescriptor_error
kDYFEMTLDevice_setIndirectArgumentBufferDecodingData
kDYFEMTLBuffer_didModifyRange
kDYFEMTLRenderCommandEncoder_setThreadgroupMemoryLength_offset_atIndex
0xffffc0ea
kDYFECAMetalLayer_setDrawableSize
kDYFEMTLDevice_heapTextureSizeAndAlignWithDescriptor
kDYFEMTLRenderCommandEncoder_setThreadgroupMemoryLength_atIndex
kDYFEMTLDevice_setSelectedCommandQueueAddress
kDYFEMTLFunction_setLabel
kDYFEMTLFence_dealloc
kDYFEMTLComputeCommandEncoder_waitForFence
kDYFEMTLBlitCommandEncoder_copyFromBuffer_sourceOffset_sourceBytesPerRow_sourceBytesPerImage_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_options
kDYFEMTLRenderCommandEncoder_drawPrimitives_vertexStart_vertexCount
kDYFEMTLRenderCommandEncoder_setVertexBuffers_offsets_withRange
kDYFEMTLSamplerState_uniqueIdentifier
kDYFEMTLFence_setLabel
kDYFEMTLFragmentRenderCommandEncoder_setFragmentBuffers_offsets_withRange
kDYFEMTLRenderCommandEncoder_setTessellationFactorScale
kDYFEMTLRenderCommandEncoder_popDebugGroup
kDYFEMTLBlitCommandEncoder_flushResource
kDYFEMTLDevice_supportsSampleCount
kDYFEMTLBuffer_setLabel
kDYFEMTLComputeCommandEncoder_setBytes_length_atIndex
0xffffe40c
kDYFEMTLDevice_newComputePipelineStateWithDescriptor_completionHandler
kDYFEMTLDevice_newRenderPipelineStateWithDescriptor_options_completionHandler
kDYFEMTLRenderCommandEncoder_setStencilStoreAction
kDYFEMTLCaptureManager_notifyPostPresentHandoffSPI
kDYFEMTLTexture_setPurgeableState
kDYFEMTLFragmentRenderCommandEncoder_setColorStoreActionOptions_atIndex
kDYFEMTLArgumentEncoder_setBuffers_offsets_withRange
kDYFEMTLDevice_newDefaultLibrary
kDYFEMTLBlitCommandEncoder_popDebugGroup
kDYFEMTLDevice_newComputePipelineStateWithFunction_completionHandler
kDYFEMTLHeap_newBufferWithLength_options
kDYFEMTLParallelRenderCommandEncoder_dealloc
kDYFEMTLLibrary_newFunctionWithName_constantValues_pipelineLibrary_completionHandler
kDYFEMTLDevice_newTiledTextureWithBytesNoCopy_length_descriptor_offset_bytesPerRow
kDYFEMTLBuffer_newTiledTextureWithDescriptor_offset_bytesPerRow
kDYFEMTLTexture_newTextureViewWithPixelFormat
kDYFEMTLFragmentRenderCommandEncoder_drawTrianglesWithPositions_vertexCount_vertexVaryings_varyingCountPerVertex_triangleIndices_triangleCount
kDYFEMTLRenderCommandEncoder_useHeaps_count
kDYFEMTLRenderCommandEncoder_setCullMode
kDYFEMTLRenderCommandEncoder_setDepthStoreAction
kDYFEMTLDevice_setCapturingCommandQueueAddress
kDYFEMTLBlitCommandEncoder_updateFence
kDYFEMTLHeap_dealloc
kDYFEMTLDevice_newComputePipelineStateWithDescriptor_options_reflection_error
kDYFEMTLParallelRenderCommandEncoder_setStencilStoreAction
kDYFEMTLFragmentRenderCommandEncoder_setDepthStoreAction
kDYFEMTLTexture_makeAliasable
kDYFEMTLDevice_newTextureLayoutWithDescriptor_isHeapOrBufferBacked
kDYFEMTLDevice_newArgumentEncoderWithLayout
kDYFEMTLTextureLayout_dealloc
kDYFECAMetalDrawable_texture
kDYFEMTLDevice_newComputePipelineStateWithImageFilterFunctionsSPI_imageFilterFunctionInfo_error
kDYFEMTLDevice_newLibraryWithFile_error
kDYFEMTLRenderCommandEncoder_setRenderPipelineState
kDYFEMTLRenderCommandEncoder_setStencilFrontReferenceValue_backReferenceValue
kDYFEMTLLibrary_setLabel
kDYFEMTLRenderCommandEncoder_setScissorRect
kDYFEMTLBuffer_invalidateRange
kDYFEMTLRenderCommandEncoder_setTriangleFillMode
kDYFEMTLRenderCommandEncoder_setFragmentSamplerStates_withRange
kDYFEMTLArgumentEncoder_setSamplerState_atIndex
kDYFEMTLRenderCommandEncoder_setBlendColorRed_green_blue_alpha
kDYFEMTLBlitCommandEncoder_dealloc
kDYFEMTLComputeCommandEncoder_setSamplerStates_lodMinClamps_lodMaxClamps_withRange
kDYFEMTLCommandBuffer_commit
kDYFEMTLComputeCommandEncoder_dispatchThreads_threadsPerThreadgroup
kDYFEMTLDevice_minLinearTextureAlignmentForPixelFormat
kDYFEMTLRenderCommandEncoder_endEncoding
kDYFEMTLDevice_newPipelineLibraryWithFilePath_error
kDYFEMTLFunction_newArgumentEncoderWithBufferIndex
kDYFEMTLComputeCommandEncoder_useResource_usage
kDYFEMTLRenderCommandEncoder_setVertexTexture_atIndex
kDYFEMTLRenderCommandEncoder_setTileSamplerState_lodMinClamp_lodMaxClamp_atIndex
kDYFEMTLDevice_newComputePipelineStateWithFunction_options_completionHandler
kDYFEMTLDevice_newBufferWithIOSurface
kDYFEMTLRenderCommandEncoder_setVertexTexture_baseLevel_atIndex
kDYFEMTLRenderCommandEncoder_setDepthClipMode
kDYFEMTLTexture_harvested_replaceRegion_mipmapLevel_slice_withBytes_bytesPerRow_bytesPerImage_totalBytes
kDYFEMTLCommandQueue_setExecutionEnabled
kDYFEMTLTexture_newTextureViewWithPixelFormat_textureType_levels_slices
kDYFEMTLRenderCommandEncoder_setFragmentTextures_withRange
kDYFEMTLLibrary_newFunctionWithName_constantValues_pipelineLibrary_error
kDYFEMTLDevice_newBufferWithLength_options
kDYFEMTLDevice_heapBufferSizeAndAlignWithLength_options
kDYFEMTLBuffer_isAliasable
kDYFEMTLRenderCommandEncoder_drawIndexedPrimitives_indexType_indexBuffer_indexBufferOffset_indirectBuffer_indirectBufferOffset
kDYFEMTLParallelRenderCommandEncoder_popDebugGroup
kDYFEMTLParallelRenderCommandEncoder_setSeparateCommits
kDYFEMTLDevice_newLibraryWithURL_error
kDYFEMTLRenderCommandEncoder_insertDebugSignpost
kDYFEMTLCommandBuffer_fragmentRenderCommandEncoderWithDescriptor
kDYFEMTLBlitCommandEncoder_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin
kDYFEMTLBlitCommandEncoder_pushDebugGroup
kDYFEMTLCaptureManager_startCaptureWithDevice
kDYFEMTLCommandQueue_finish
kDYFEMTLHeap_maxAvailableSizeWithAlignment
kDYFEMTLArgumentEncoder_newArgumentEncoderForBufferAtIndex
kDYFEMTLParallelRenderCommandEncoder_pushDebugGroup
kDYFEMTLTexture_dealloc
kDYFEMTLDevice_dealloc
kDYFEMTLBuffer_setResponsibleProcess
kDYFEMTLRenderCommandEncoder_drawPrimitives_vertexStart_vertexCount_instanceCount_baseInstance
kDYFEMTLCommandQueue_setSkipRender
kDYFEMTLRenderCommandEncoder_setDepthStencilState
kDYFEMTLCommandBuffer_waitUntilScheduled
kDYFEMTLDevice_newBufferWithBytesNoCopy_length_options_deallocator
kDYFEMTLFunction_dealloc
kDYFEMTLDevice_newArgumentEncoderWithArguments_count
kDYFEMTLDevice_newRenderPipelineStateWithDescriptor_options_reflection_error
kDYFEMTLComputeCommandEncoder_setImageblockWidth_height
kDYFEMTLRenderCommandEncoder_drawPrimitives_indirectBuffer_indirectBufferOffset
kDYFEMTLFragmentRenderCommandEncoder_setFragmentSamplerStates_withRange
kDYFEMTLRenderCommandEncoder_setFrontFacingWinding
kDYFEMTLRenderCommandEncoder_setVertexBuffer_offset_atIndex
kDYFEMTLTextureLayout_initializeTextureMemory
kDYFEMTLComputeCommandEncoder_setSamplerState_lodMinClamp_lodMaxClamp_atIndex
kDYFEMTLFragmentRenderCommandEncoder_setDepthStencilState
kDYFEMTLComputeCommandEncoder_useHeaps_count
kDYFEMTLFragmentRenderCommandEncoder_setColorStoreAction_atIndex
kDYFEMTLCommandBuffer_pushDebugGroup
kDYFEMTLFunction_newArgumentEncoderWithBufferIndex_reflection
kDYFEMTLRenderCommandEncoder_setVertexSamplerStates_withRange
kDYFEMTLCommandBuffer_dealloc
kDYFEMTLFragmentRenderCommandEncoder_setStencilStoreActionOptions
kDYFEMTLDevice_newTextureWithBytesNoCopy_length_descriptor_deallocator
kDYFEMTLTexture_replaceRegion_mipmapLevel_withBytes_bytesPerRow
kDYFEMTLDevice_newHeapWithDescriptor
kDYFEMTLFunction_functionConstantIndexByName_type
kDYFEMTLRenderCommandEncoder_drawPrimitives_vertexStart_vertexCount_instanceCount
kDYFECAMetalDrawable_presentAtTime
kDYFEMTLFragmentRenderCommandEncoder_pushDebugGroup
kDYFEMTLRenderPipelineState_dealloc
kDYFEMTLRenderCommandEncoder_waitForFence_beforeStages
kDYFEMTLCommandBuffer_addCompletedHandler
kDYFEMTLTexture_setLabel
kDYFEMTLCommandBuffer_setListIndex
kDYFEMTLBlitCommandEncoder_waitForFence
kDYFEMTLDevice_newCommandQueueWithMaxCommandBufferCount
kDYFEMTLBlitCommandEncoder_synchronizeResource
kDYFEMTLFragmentRenderCommandEncoder_popDebugGroup
kDYFEMTLTexture_isAliasable
kDYFEMTLDevice_newLibraryWithSource_options_completionHandler
kDYFEMTLRenderCommandEncoder_useResource_usage
kDYFEMTLArgumentEncoder_setBuffer_offset_atIndex
kDYFEMTLRenderCommandEncoder_setTileSamplerStates_lodMinClamps_lodMaxClamps_withRange
kDYFEMTLTexture_restoreIOSurfaceData_length_forPlane
kDYFEMTLHeap_setLabel
kDYFEMTLBuffer_newLinearTextureWithDescriptor_offset_bytesPerRow_bytesPerImage
kDYFEMTLBlitCommandEncoder_copyFromTexture_sourceSlice_sourceLevel_sourceOrigin_sourceSize_toTexture_destinationSlice_destinationLevel_destinationOrigin_options
kDYFEMTLCaptureScope_setLabel
kDYFEMTLArgumentEncoder_setArgumentBuffer_offset
kDYFEMTLCommandQueue_setIsOpenGLQueue
kDYFEMTLComputePipelineState_getComputeKernelTelemetryID
kDYFEMTLDevice_newDefaultLibraryWithBundle_error
kDYFEMTLCommandBuffer_indirectArgumentBufferData
kDYFEMTLDevice_newRenderPipelineStateWithTileDescriptor_completionHandler
kDYFEMTLRenderCommandEncoder_setFragmentBytes_length_atIndex
kDYFECAMetalLayer_setPresentsWithTransaction
kDYFEMTLCommandQueue_setLabel
kDYFEMTLBuffer_makeAliasable
kDYFEMTLCommandQueue_setBackgroundTrackingPID
kDYFEMTLCommandQueue_commandBufferWithUnretainedReferences
kDYFEMTLCommandBuffer_addScheduledHandler
kDYFEMTLTexture_replaceRegion_mipmapLevel_slice_withBytes_bytesPerRow_bytesPerImage
kDYFEMTLFragmentRenderCommandEncoder_setDepthStoreActionOptions
kDYFEMTLFragmentRenderCommandEncoder_setFragmentTextures_withRange
kDYFEMTLRenderCommandEncoder_setVertexTextures_withRange
kDYFEMTLBuffer_resourceUsage
kDYFEMTLTexture_setResponsibleProcess
kDYFEMTLDevice_newTiledTextureWithBytesNoCopy_length_deallocator_descriptor_offset_bytesPerRow
kDYFEMTLBuffer_setPurgeableState
kDYFEMTLRenderCommandEncoder_setDepthResolveTexture_slice_depthPlane_level
kDYFEMTLFragmentRenderCommandEncoder_setStencilReferenceValue
kDYFEMTLComputeCommandEncoder_setThreadgroupMemoryLength_atIndex
0xffffc0e9
kDYFEMTLDevice_newComputePipelineStateWithFunction_options_reflection_error
kDYFEMTLCommandBuffer_enqueue
kDYFEMTLBlitCommandEncoder_endEncoding
kDYFEMTLRenderCommandEncoder_setTessellationFactorBuffer_offset_instanceStride
kDYFEMTLDevice_newLibraryWithSource_options_error
kDYFEMTLRenderCommandEncoder_setFragmentSamplerState_atIndex
kDYFECAMetalLayer_setPixelFormat
kDYFEMTLRenderCommandEncoder_setFragmentBufferOffset_atIndex
kDYFEMTLCaptureScope_beginScope
kDYFECAMetalLayer_nextDrawable
kDYFEMTLRenderCommandEncoder_drawPatches_patchIndexBuffer_patchIndexBufferOffset_indirectBuffer_indirectBufferOffset
kDYFEMTLCommandQueue_dealloc
kDYFEMTLFragmentRenderCommandEncoder_setBlendColorRed_green_blue_alpha
kDYFEMTLComputeCommandEncoder_dealloc
kDYFEMTLRenderCommandEncoder_pushDebugGroup
kDYFEMTLRenderCommandEncoder_setVertexSamplerState_atIndex
kDYFEMTLParallelRenderCommandEncoder_setDepthStoreActionOptions
kDYFEMTLLibrary_newFunctionWithName_constantValues_error
kDYFEMTLDevice_setShaderDebugInfoCaching
kDYFEMTLDevice_startCollectingPipelineDescriptors
kDYFEMTLDevice_supportsTextureSampleCount
kDYFEMTLLibrary_setOverrideTriple
kDYFEMTLDevice_newArgumentEncoderWithArguments
kDYFEMTLDevice_newFence
kDYFEMTLRenderCommandEncoder_setTileTexture_atIndex
kDYFEMTLFragmentRenderCommandEncoder_setFragmentSamplerStates_lodMinClamps_lodMaxClamps_withRange
kDYFEMTLCommandBuffer_computeCommandEncoder
kDYFEMTLBlitCommandEncoder_insertDebugSignpost
kDYFEMTLFragmentRenderCommandEncoder_setDepthBias_slopeScale_clamp
kDYFEMTLRenderCommandEncoder_setVertexSamplerStates_lodMinClamps_lodMaxClamps_withRange
kDYFEMTLComputeCommandEncoder_setStageInRegion
kDYFEMTLCaptureScope_endScope
kDYFEMTLCaptureManager_stopCapture
kDYFEMTLRenderCommandEncoder_setFragmentTexture_atIndex
kDYFEMTLComputeCommandEncoder_setComputePipelineState
kDYFEMTLFragmentRenderCommandEncoder_setStencilFrontReferenceValue_backReferenceValue
kDYFEMTLRenderCommandEncoder_updateFence_afterStages
kDYFEMTLTexture_mipmapInfo
kDYFEMTLCommandBuffer_setProfilingEnabled
kDYFEMTLDevice_unmapShaderSampleBuffer
kDYFEMTLComputeCommandEncoder_dispatchThreadsWithIndirectBuffer_indirectBufferOffset
kDYFEMTLFragmentRenderCommandEncoder_setLabel
kDYFEMTLCommandBuffer_waitUntilCompleted
kDYFEMTLRenderCommandEncoder_useHeap
kDYFEMTLArgumentEncoder_dealloc
kDYFEMTLDevice_newLibraryWithData_error
kDYFEMTLRenderCommandEncoder_dispatchThreadsPerTile
kDYFEMTLFragmentRenderCommandEncoder_setFragmentTexture_atTextureIndex_samplerState_atSamplerIndex
kDYFEMTLLibrary_newExternFunctionWithName
kDYFEMTLRenderCommandEncoder_setTileBuffers_offsets_withRange
kDYFEMTLBlitCommandEncoder_flushTexture_slice_mipmapLevel
kDYFEMTLComputeCommandEncoder_setLabel
kDYFEMTLRenderCommandEncoder_setTileSamplerState_atIndex
kDYFEMTLCaptureManager_notifySubmissionForEyeSPI_iosurface_bounds_submitFlags
kDYFEMTLRenderCommandEncoder_setFragmentTexture_baseLevel_atIndex
kDYFEMTLComputeCommandEncoder_insertDebugSignpost
kDYFEMTLCommandBuffer_presentDrawable
kDYFEMTLDevice_deviceReference
kDYFEMTLRenderCommandEncoder_setColorResolveTexture_slice_depthPlane_level_atIndex
kDYFEMTLParallelRenderCommandEncoder_endEncoding
kDYFEMTLDevice_newComputePipelineStateWithDescriptor_options_completionHandler
kDYFEMTLRenderCommandEncoder_setFragmentBuffer_offset_atIndex
kDYFEMTLFragmentRenderCommandEncoder_setStencilStoreAction
kDYFEMTLParallelRenderCommandEncoder_insertDebugSignpost
kDYFEMTLParallelRenderCommandEncoder_setStencilStoreActionOptions
[%@ setLabel:%@]
[%@ dealloc]
[%@ copyFromTexture:%@ sourceSlice:%@ sourceLevel:%@ sourceOrigin:%@ sourceSize:%@ toTexture:%@ destinationSlice:%@ destinationLevel:%@ destinationOrigin:%@]
[%@ copyFromBuffer:%@ sourceOffset:%@ sourceBytesPerRow:%@ sourceBytesPerImage:%@ sourceSize:%@ toTexture:%@ destinationSlice:%@ destinationLevel:%@ destinationOrigin:%@]
[%@ copyFromTexture:%@ sourceSlice:%@ sourceLevel:%@ sourceOrigin:%@ sourceSize:%@ toBuffer:%@ destinationOffset:%@ destinationBytesPerRow:%@ destinationBytesPerImage:%@]
[%@ generateMipmapsForTexture:%@]
[%@ fillBuffer:%@ range:%@ value:%@]
[%@ copyFromBuffer:%@ sourceOffset:%@ toBuffer:%@ destinationOffset:%@ size:%@]
[%@ endEncoding]
[%@ insertDebugSignpost:%@]
[%@ pushDebugGroup:%@]
[%@ popDebugGroup]
[%@ setResponsibleProcess:%@]
[%@ contents]
[%@ newTextureWithDescriptor:%@ offset:%@ bytesPerRow:%@]
[%@ setPurgeableState:%@]
[%@ isPurgeable]
[%@ setProfilingEnabled:%@]
[%@ enqueue]
[%@ commit]
[%@ addScheduledHandler:%@]
[%@ presentDrawable:%@]
[%@ presentDrawable:%@ atTime:%@]
[%@ waitUntilScheduled]
[%@ addCompletedHandler:%@]
[%@ waitUntilCompleted]
[%@ blitCommandEncoder]
[%@ renderCommandEncoderWithDescriptor:%@]
[%@ computeCommandEncoder]
[%@ parallelRenderCommandEncoderWithDescriptor:%@]
[%@ debugCommandEncoder]
[%@ setBackgroundTrackingPID:%@]
[%@ setSkipRender:%@]
[%@ setExecutionEnabled:%@]
[%@ commandBuffer]
[%@ commandBufferWithUnretainedReferences]
[%@ insertDebugCaptureBoundary]
[%@ finish]
[%@ setComputePipelineState:%@]
[%@ setBuffer:%@ offset:%@ atIndex:%@]
[%@ setBuffers:%@ offsets:%@ withRange:%@]
[%@ setTexture:%@ atIndex:%@]
[%@ setTextures:%@ withRange:%@]
[%@ setSamplerState:%@ atIndex:%@]
[%@ setSamplerStates:%@ withRange:%@]
[%@ setSamplerState:%@ lodMinClamp:%@ lodMaxClamp:%@ atIndex:%@]
[%@ setSamplerStates:%@ lodMinClamps:%@ lodMaxClamps:%@ withRange:%@]
[%@ setThreadgroupMemoryLength:%@ atIndex:%@]
[%@ dispatchThreadgroups:%@ threadsPerThreadgroup:%@]
[%@ executeBarrier]
[%@ setShaderDebugInfoCaching:%@]
[%@ setMetalAssertionsEnabled:%@]
[%@ newCommandQueue]
[%@ newCommandQueueWithMaxCommandBufferCount:%@]
[%@ newBufferWithLength:%@ options:%@]
[%@ newBufferWithBytes:%@ length:%@ options:%@]
[%@ newBufferWithBytesNoCopy:%@ length:%@ options:%@ deallocator:%@]
[%@ newDepthStencilStateWithDescriptor:%@]
[%@ newTextureWithDescriptor:%@]
[%@ newSamplerStateWithDescriptor:%@]
[%@ newDefaultLibrary]
[%@ newLibraryWithFile:%@ error:%@]
[%@ newLibraryWithData:%@ error:%@]
[%@ newLibraryWithSource:%@ options:%@ error:%@]
[%@ newLibraryWithSource:%@ options:%@ completionHandler:%@]
[%@ newRenderPipelineStateWithDescriptor:%@ error:%@]
[%@ newRenderPipelineStateWithDescriptor:%@ options:%@ reflection:%@ error:%@]
[%@ newRenderPipelineStateWithDescriptor:%@ completionHandler:%@]
[%@ newRenderPipelineStateWithDescriptor:%@ options:%@ completionHandler:%@]
[%@ newComputePipelineStateWithFunction:%@ error:%@]
[%@ newComputePipelineStateWithFunction:%@ options:%@ reflection:%@ error:%@]
[%@ newComputePipelineStateWithFunction:%@ completionHandler:%@]
[%@ newComputePipelineStateWithFunction:%@ options:%@ completionHandler:%@]
[%@ unmapShaderSampleBuffer]
[%@ newTextureWithDescriptor:%@ iosurface:%@ plane:%@]
[%@ newFunctionWithName:%@]
[%@ setSeparateCommits:%@]
[%@ renderCommandEncoder]
[%@ setRenderPipelineState:%@]
[%@ setVertexBuffer:%@ offset:%@ atIndex:%@]
[%@ setVertexBuffers:%@ offsets:%@ withRange:%@]
[%@ setVertexTexture:%@ atIndex:%@]
[%@ setVertexTextures:%@ withRange:%@]
[%@ setVertexSamplerState:%@ atIndex:%@]
[%@ setVertexSamplerStates:%@ withRange:%@]
[%@ setVertexSamplerState:%@ lodMinClamp:%@ lodMaxClamp:%@ atIndex:%@]
[%@ setVertexSamplerStates:%@ lodMinClamps:%@ lodMaxClamps:%@ withRange:%@]
[%@ setViewport:%@]
[%@ setFrontFacingWinding:%@]
[%@ setCullMode:%@]
[%@ setDepthClipMode:%@]
[%@ setDepthBias:%@ slopeScale:%@ clamp:%@]
[%@ setScissorRect:%@]
[%@ setTriangleFillMode:%@]
[%@ setFragmentBuffer:%@ offset:%@ atIndex:%@]
[%@ setFragmentBuffers:%@ offsets:%@ withRange:%@]
[%@ setFragmentTexture:%@ atIndex:%@]
[%@ setFragmentTextures:%@ withRange:%@]
[%@ setFragmentSamplerState:%@ atIndex:%@]
[%@ setFragmentSamplerStates:%@ withRange:%@]
[%@ setFragmentSamplerState:%@ lodMinClamp:%@ lodMaxClamp:%@ atIndex:%@]
[%@ setFragmentSamplerStates:%@ lodMinClamps:%@ lodMaxClamps:%@ withRange:%@]
[%@ setBlendColorRed:%@ green:%@ blue:%@ alpha:%@]
[%@ setDepthStencilState:%@]
[%@ setStencilReferenceValue:%@]
[%@ setVisibilityResultMode:%@ offset:%@]
[%@ drawPrimitives:%@ vertexStart:%@ vertexCount:%@ instanceCount:%@]
[%@ drawPrimitives:%@ vertexStart:%@ vertexCount:%@]
[%@ drawIndexedPrimitives:%@ indexCount:%@ indexType:%@ indexBuffer:%@ indexBufferOffset:%@ instanceCount:%@]
[%@ drawIndexedPrimitives:%@ indexCount:%@ indexType:%@ indexBuffer:%@ indexBufferOffset:%@]
[%@ setLineWidth:%@]
[%@ getBytes:%@ bytesPerRow:%@ bytesPerImage:%@ fromRegion:%@ mipmapLevel:%@ slice:%@]
[%@ replaceRegion:%@ mipmapLevel:%@ slice:%@ withBytes:%@ bytesPerRow:%@ bytesPerImage:%@]
[%@ getBytes:%@ bytesPerRow:%@ fromRegion:%@ mipmapLevel:%@]
[%@ replaceRegion:%@ mipmapLevel:%@ withBytes:%@ bytesPerRow:%@]
[%@ newTextureViewWithPixelFormat:%@]
[%@ flushResource:%@]
[%@ flushTexture:%@ slice:%@ mipmapLevel:%@]
[%@ invalidateRange:%@]
[%@ setBytes:%@ length:%@ atIndex:%@]
[%@ setBufferOffset:%@ atIndex:%@]
[%@ setVertexBytes:%@ length:%@ atIndex:%@]
[%@ setVertexBufferOffset:%@ atIndex:%@]
[%@ setFragmentBytes:%@ length:%@ atIndex:%@]
[%@ setFragmentBufferOffset:%@ atIndex:%@]
[%@ invalidateRegion:%@]
[%@ dispatchThreadgroupsWithIndirectBuffer:%@ indirectBufferOffset:%@ threadsPerThreadgroup:%@]
[%@ setStencilFrontReferenceValue:%@ backReferenceValue:%@]
[%@ drawPrimitives:%@ vertexStart:%@ vertexCount:%@ instanceCount:%@ baseInstance:%@]
[%@ drawIndexedPrimitives:%@ indexCount:%@ indexType:%@ indexBuffer:%@ indexBufferOffset:%@ instanceCount:%@ baseVertex:%@ baseInstance:%@]
[%@ drawPrimitives:%@ indirectBuffer:%@ indirectBufferOffset:%@]
[%@ drawIndexedPrimitives:%@ indexType:%@ indexBuffer:%@ indexBufferOffset:%@ indirectBuffer:%@ indirectBufferOffset:%@]
[%@ setFragmentTexture:%@ atTextureIndex:%@ samplerState:%@ atSamplerIndex:%@]
[%@ synchronizeResource:%@]
[%@ synchronizeTexture:%@ slice:%@ level:%@]
[%@ copyFromTexture:%@ sourceSlice:%@ sourceLevel:%@ sourceOrigin:%@ sourceSize:%@ toTexture:%@ destinationSlice:%@ destinationLevel:%@ destinationOrigin:%@ options:%@]
[%@ copyFromBuffer:%@ sourceOffset:%@ sourceBytesPerRow:%@ sourceBytesPerImage:%@ sourceSize:%@ toTexture:%@ destinationSlice:%@ destinationLevel:%@ destinationOrigin:%@ options:%@]
[%@ copyFromTexture:%@ sourceSlice:%@ sourceLevel:%@ sourceOrigin:%@ sourceSize:%@ toBuffer:%@ destinationOffset:%@ destinationBytesPerRow:%@ destinationBytesPerImage:%@ options:%@]
[%@ didModifyRange:%@]
[%@ setTexture:%@ baseLevel:%@ atIndex:%@]
[%@ supportsFeatureSet:%@]
[%@ supportsSampleCount:%@]
[%@ setVertexTexture:%@ baseLevel:%@ atIndex:%@]
[%@ setFragmentTexture:%@ baseLevel:%@ atIndex:%@]
[%@ commitAndHold]
[%@ textureBarrier]
[%@ newComputePipelineStateWithDescriptor:%@ error:%@]
[%@ newComputePipelineStateWithDescriptor:%@ options:%@ reflection:%@ error:%@]
[%@ newComputePipelineStateWithDescriptor:%@ completionHandler:%@]
[%@ newComputePipelineStateWithDescriptor:%@ options:%@ completionHandler:%@]
[%@ newTextureViewWithPixelFormat:%@ textureType:%@ levels:%@ slices:%@]
[%@ fragmentRenderCommandEncoderWithDescriptor:%@]
[%@ drawTrianglesWithPositions:%@ vertexCount:%@ triangleIndices:%@ triangleCount:%@]
[%@ drawTrianglesWithPositions:%@ vertexCount:%@ vertexVaryings:%@ varyingCountPerVertex:%@ triangleIndices:%@ triangleCount:%@]
[%@ drawTrianglesWithPositions:%@ vertexCount:%@ vertexVaryings:%@ varyingCountPerVertex:%@]
[%@ supportsTextureSampleCount:%@]
[%@ newCommandQueueWithDescriptor:%@]
[%@ setListIndex:%@]
[%@ newBufferWithIOSurface:%@]
[%@ setColorStoreAction:%@ atIndex:%@]
[%@ setDepthStoreAction:%@]
[%@ setStencilStoreAction:%@]
[%@ setColorResolveTexture:%@ slice:%@ depthPlane:%@ level:%@ atIndex:%@]
[%@ setDepthResolveTexture:%@ slice:%@ depthPlane:%@ level:%@]
[%@ setImageblockWidth:%@ height:%@]
[%@ setTessellationFactorBuffer:%@ offset:%@ instanceStride:%@]
[%@ drawPatches:%@ patchStart:%@ patchCount:%@ patchIndexBuffer:%@ patchIndexBufferOffset:%@ instanceCount:%@ baseInstance:%@]
[%@ drawPatches:%@ patchIndexBuffer:%@ patchIndexBufferOffset:%@ indirectBuffer:%@ indirectBufferOffset:%@]
[%@ drawIndexedPatches:%@ patchStart:%@ patchCount:%@ patchIndexBuffer:%@ patchIndexBufferOffset:%@ controlPointIndexBuffer:%@ controlPointIndexBufferOffset:%@ instanceCount:%@ baseInstance:%@]
[%@ drawIndexedPatches:%@ patchIndexBuffer:%@ patchIndexBufferOffset:%@ controlPointIndexBuffer:%@ controlPointIndexBufferOffset:%@ indirectBuffer:%@ indirectBufferOffset:%@]
[%@ setTileBytes:%@ length:%@ atIndex:%@]
[%@ setTileBuffer:%@ offset:%@ atIndex:%@]
[%@ setTileBufferOffset:%@ atIndex:%@]
[%@ setTileTexture:%@ atIndex:%@]
[%@ setTileSamplerState:%@ atIndex:%@]
[%@ setTileSamplerState:%@ lodMinClamp:%@ lodMaxClamp:%@ atIndex:%@]
[%@ dispatchThreadsPerTile:%@]
[%@ functionConstantIndexByName:%@ type:%@]
[%@ setIsOpenGLQueue:%@]
[%@ setTessellationFactorScale:%@]
[%@ waitForFence:%@]
[%@ updateFence:%@]
[%@ newFence]
[%@ updateFence:%@ afterStages:%@]
[%@ waitForFence:%@ beforeStages:%@]
[%@ setLabel:%@ error:%@]
[%@ makeAliasable]
[%@ heapTextureSizeWithDescriptor:%@]
[%@ newHeapWithDescriptor:%@]
[%@ isAliasable]
[%@ heapTextureSizeAndAlignWithDescriptor:%@]
[%@ heapBufferSizeAndAlignWithLength:%@ options:%@]
[%@ newFunctionWithName:%@ constantValues:%@ error:%@]
[%@ newFunctionWithName:%@ constantValues:%@ completionHandler:%@]
[%@ maxAvailableSizeWithAlignment:%@]
[%@ newTiledTextureWithDescriptor:%@ offset:%@ bytesPerRow:%@]
[%@ addDebugMarker:%@ range:%@]
[%@ removeAllDebugMarkers]
[%@ newComputePipelineStateWithImageFilterFunctionsSPI:%@ imageFilterFunctionInfo:%@ error:%@]
[%@ setStageInRegion:%@]
[%@ newTextureLayoutWithDescriptor:%@ isHeapOrBufferBacked:%@]
[%@ newLinearTextureWithDescriptor:%@ offset:%@ bytesPerRow:%@ bytesPerImage:%@]
[%@ newTextureWithBytesNoCopy:%@ length:%@ descriptor:%@ deallocator:%@]
[%@ newDefaultLibraryWithBundle:%@ error:%@]
[%@ formattedDescription:%@]
[%@ minLinearTextureAlignmentForPixelFormat:%@]
[%@ getComputeKernelTelemetryID]
[%@ newRenderPipelineStateWithTileDescriptor:%@ error:%@]
[%@ newRenderPipelineStateWithTileDescriptor:%@ options:%@ reflection:%@ error:%@]
[%@ newRenderPipelineStateWithTileDescriptor:%@ completionHandler:%@]
[%@ newRenderPipelineStateWithTileDescriptor:%@ options:%@ completionHandler:%@]
[%@ setTileBuffers:%@ offsets:%@ withRange:%@]
[%@ setTileTextures:%@ withRange:%@]
[%@ setTileSamplerStates:%@ withRange:%@]
[%@ setTileSamplerStates:%@ lodMinClamps:%@ lodMaxClamps:%@ withRange:%@]
[%@ setOverrideTriple:%@]
[%@ newFunctionWithName:%@ constantValues:%@ pipelineLibrary:%@ error:%@]
[%@ newFunctionWithName:%@ constantValues:%@ pipelineLibrary:%@ completionHandler:%@]
[%@ dispatchThreadsWithIndirectBuffer:%@ indirectBufferOffset:%@]
[%@ dispatchThreads:%@ threadsPerThreadgroup:%@]
[%@ setViewports:%@ count:%@]
[%@ setScissorRects:%@ count:%@]
[%@ newPipelineLibraryWithFilePath:%@ error:%@]
[%@ setThreadgroupMemoryLength:%@ offset:%@ atIndex:%@]
[%@ beginScope]
[%@ endScope]
[%@ startCaptureWithDevice: %@]
[%@ startCaptureWithCommandQueue: %@]
[%@ stopCapture]
[%@ startCollectingPipelineDescriptors]
[%@ setArgumentBuffer:%@ offset:%@]
[%@ constantDataAtIndex:%@]
[%@ newArgumentEncoderForBufferAtIndex:%@]
[%@ newArgumentEncoderWithBufferIndex:%@]
[%@ newArgumentEncoderWithBufferIndex:%@ reflection:%@]
[%@ newArgumentEncoderWithArguments:%@ count:%@]
[%@ newArgumentBufferLayoutWithStructType:%@]
[%@ newArgumentEncoderWithLayout:%@]
[%@ useResource:%@ usage:%@]
[%@ useResources:%@ count:%@ usage:%@]
[%@ useHeap:%@]
[%@ useHeaps:%@ count:%@]
[%@ newLibraryWithURL:%@ error:%@]
[%@ newExternFunctionWithName:%@]
[%@ newArgumentEncoderWithArguments:%@]
[%@ indirectArgumentBufferDecodingData]
[%@ setIndirectArgumentBufferDecodingData:%@]
IVRCompositor::Submit(%@, %@, %@, %@)
[%@ setArgumentBuffer:%@ startOffset:%@ arrayElement:%@]
[%@ initializeTextureMemory:%@]
[%@ newTiledTextureWithBytesNoCopy:%@ length:%@ descriptor:%@ offset:%@ bytesPerRow:%@]
[%@ newTiledTextureWithBytesNoCopy:%@ length:%@ deallocator:%@ descriptor:%@ offset:%@ bytesPerRow:%@]
[%@ newLibraryWithCIFilters:%@ imageFilterFunctionInfo:%@ error:%@]
[%@ setColorStoreActionOptions:%@ atIndex:%@]
[%@ setDepthStoreActionOptions:%@]
[%@ setStencilStoreActionOptions:%@]
IVRCompositor::PostPresentHandoff()
RestoreMTLBufferContents
DeviceReference
%@ harvestedReplaceRegion:%@ mipmapLevel:%@ slice:%@ withBytes:%@ bytesPerRow:%@ bytesPerImage:%@
%@ harvestedNewBufferWithBytes:%@ length:%@ options:%@
%@ harvestedReplaceRegion:%@ mipmapLevel:%@ slice:%@ withBytes:%@ bytesPerRow:%@ bytesPerImage:%@ totalBytes:%@
BufferResourceUsage
TextureResourceUsage
SetCapturingCommandQueueAddress
RestoreMTLTextureIOSurfaceDataForPlane
TextureMipmapInfo
IndirectArgumentBufferData
BufferVirtualGPUAddress
TextureUniqueIdentifier
SamplerStateUniqueIdentifier
[%@ setPresentsWithTransaction:%@]
[%@ texture]
[%@ nextDrawable]
[%@ setPixelFormat:%@]
[%@ setDrawableSize:%@]
[%@ setDevice:%@]
[%@ setBounds:%@ contentsScale:%@]
[%@ setFramebufferOnly:%@]
[%@ setBounds:%@ contentsScale:%@ windowBounds:%@)
[%@ present]
[%@ presentAtTime:%@]
styleMask
windowLevel
strongLayerManager
T@"<DYLayerManager>",R,N
layerManager
T@"<DYLayerManager>",W,N,V_layerManager
GPUMTLOverrideDeviceFamily
v32@?0@"<MTLDevice>"8Q16^c24
device
T@"<MTLDevice>",&,N,V_device
indirectArgumentManager
T@"DYMTLIndirectArgumentBufferManager",&,N,V_indirectArgumentManager
v16@?0@"<MTLCommandBuffer>"8
Failed to dispatch: 0x%x
DYGuestAppClient *DYGetMTLGuestAppClient()
_guestAppClientMTL != nil
failed to dlopen interpose dylib: %s
gDYMTLObjectRemappingBlock
void init_interpose_api(void *)
g_interpose_api.gDYMTLObjectRemappingBlock != nullptr
gDYMTLObjectUnmappingBlock
g_interpose_api.gDYMTLObjectUnmappingBlock != nullptr
#include <metal_graphics>
#include <metal_texture>
using namespace metal;
struct VertexOutput
  vec<float, 4> pos [[position]];
  vec<float, 2> uv;
struct UniformData
  vec<float, 4> blendColor;
  uint selectedLayer;
vertex VertexOutput vertexFunction(device const vec<float,4> *pos_data [[ buffer(0) ]],
                                   device const vec<float,2> *uv_data [[ buffer(1) ]], 
                                   uint vid [[ vertex_id ]])
  VertexOutput out;
  out.pos = pos_data[vid];
  out.uv = uv_data[vid];
  return out;
fragment vec<float, 4> opaqueFragmentFunction(VertexOutput in [[stage_in]],
                                              texture2d<float> tex [[ texture(0) ]],
                                              sampler sam [[ sampler(0) ]] )
  vec<float, 4> tex_color = tex.sample(sam, in.uv);
  return tex_color;
fragment vec<float, 4> blendingFragmentFunction(VertexOutput in [[stage_in]],
                                                texture2d<float> tex [[ texture(0) ]],
                                                sampler sam [[ sampler(0) ]],
                                                constant UniformData &uniformData [[ buffer(0) ]]){
  vec<float, 4> tex_color = tex.sample(sam, in.uv);
  return tex_color.r * uniformData.blendColor;
fragment vec<float, 4> blendingFragmentFunction_2dArray(VertexOutput in [[stage_in]],
                                                        texture2d_array<float> tex [[ texture(0) ]],
                                                        sampler sam [[ sampler(0) ]],
                                                        constant UniformData &uniformData [[ buffer(0) ]]){
  vec<float, 4> tex_color = tex.sample(sam, in.uv, uniformData.selectedLayer);
  return tex_color.r * uniformData.blendColor;
-[DYMTLTextureRenderer initWithDevice:]
_library != nil
vertexFunction
opaqueFragmentFunction
blendingFragmentFunction
blendingFragmentFunction_2dArray
_depthStencilDescriptor != nil
_positionBuffer != nil
_texCoordBuffer != nil
_uniformDataBuffer != nil
v32@?0@"MTLStructMember"8Q16^c24
v32@?0@"NSString"8@"MTLFunctionConstant"16^c24
sharedMemorySize
dedicatedMemorySize
v32@?0@"MTLPostVertexDumpOutput"8Q16^c24
v24@?0@"MTLToolsObject"8^c16
CiulSl
CiSululb
Ciuli
CiSululuiululul
CiSululuiululululbb
CiSululuiul
CiSulbbulb
Ciululbbbul
CiUul
Ciulul
CiuiSSS
CiSululuiulululululb
SW_PBUsed
_fedf2c59
GPUFrameProfilingPowerStateWarmupTime
AverageSamples
frame profile data
encoder time data
kick time data
tilerParamBufBytesUsedArray
perEncoderIndexDrawCallCount
frame counters
vertex fetch shader key
vertex fetch shader info
vertex shader key
vertex shader info
fragment shader key
fragment shader info
compute kernel key
compute kernel info
supportedFeatureSets
v32@?0@8Q16^c24
%@ name=%@ featureProfile=
%lx 
T@"NSArray",R,N,V_supportedFeatureSets
T@"NSString",R,N,V_name
Command Queue <0x%llx>
deviceAddress
queueAddress
label
canBeCaptured
isOpenGLQueue
isInternalQueue
toolsQueueAddress
device:0x%llx, queue:0x%llx, toolsQueue:0x%llx, label:%@, canBeCaptured:%@, isOpenGL:%@, isInternal: %@
com.apple.SceneKit
com.apple.SpriteKit
com.apple.CoreImage
com.apple
capturableObjectType
T@"NSString",R,C,N
TQ,R,N,V_deviceAddress
TQ,R,N,V_queueAddress
TQ,R,N,V_toolsQueueAddress
T@"NSString",R,N,V_label
Tc,N,V_canBeCaptured
Tc,N,V_isOpenGLQueue
Tc,N,V_isInternalQueue
displayName
T@"NSString",R,C,N,V_displayName
MTLCommandBufferScheduled
MTLFunctionInfo
MTLRenderBuiltinVertexArgument
MTLRenderVertexArgument
MTLRenderFragmentArgument
MTLComputeBuiltinArgument
MTLComputeArgument
MTLComputePipelineProperties
MTLDefaultLibrary
GPUToolsInternalPostTransformPipelineStateLabel
postVertexDumpBuffer
T@"<MTLBuffer>",R,N,V_postVertexDumpBuffer
command-buffer
command-buffers
command-queue
command-queues
parallel-render-pass
parallel-render-passes
blit-encoder
blit-encoders
compute-encoder
compute-encoders
render-encoder
render-encoders
render-pipeline-state
render-pipeline-states
depth-stencil-state
depth-stencil-states
library
libraries
function
functions
compute-pipeline-state
compute-pipeline-states
texture-views
scopeAddress
Capture Scope <0x%llx>
TQ,R,N,V_scopeAddress
T@"NSString",R,C,N,V_label
DYLayerManager
NSObject
DYMTLCommonDebugFunctionPlayer
DYMTLDebugWireframeRenderer
DYMTLDerivedCounterSupport
DYMTLCommonFunctionPlayer
DYMTLFunctionPlayer
DYMTLTextureRenderer
DYMTLIndirectArgumentBufferManager
DYMTLDebugPlaybackEngineCounterSupport
DYMTLDeviceProfile
DYGraphicsAPIInfo
NSCoding
NSCopying
DYMTLCommandQueueInfo
DYMTLPostVertexDump
DYMTLCaptureScopeInfo
c24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@76@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@64B72
v72@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@64
@24@0:8Q16
v24@0:8Q16
v40@0:8r^{Argument=^vIIISS}16Q24r^{pair<double, double>=}32
v32@0:8r^{Argument=^vIIISS}16Q24
v16@0:8
v24@0:8@16
@"CALayer"76@0:8Q16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@"NSDictionary"64B72
v72@0:8@"CALayer"16{CGRect={CGPoint=dd}{CGSize=dd}}24d56@"NSDictionary"64
@"CALayer"24@0:8Q16
@"CALayer"16@0:8
v24@0:8@"CALayer"16
@24@0:8@16
^{unordered_map<unsigned long long, EncoderInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, EncoderInfo> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, EncoderInfo> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true> >=f}}}16@0:8
v32@0:8^{CoreFunction=IISS(?=QQ){Argument=^vIIISS}[16{Argument=^vIIISS}]II^v^v}16Q24
v24@0:8^{map<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, std::__1::allocator<std::__1::pair<const __unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > > > >={__tree<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > >, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true>, std::__1::allocator<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<__unsafe_unretained id<MTLBuffer>, std::__1::__value_type<__unsafe_unretained id<MTLBuffer>, std::__1::vector<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *>, std::__1::allocator<std::__1::tuple<unsigned long long, id<MTLFunction>, MTLArgument *> > > >, std::__1::less<__unsafe_unretained id<MTLBuffer> >, true> >=Q}}}16
v24@0:8^{unordered_map<unsigned long long, EncoderInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, EncoderInfo> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, EncoderInfo> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true> >=f}}}16
@56@0:8@16Q24Q32Q40@48
v32@0:8Q16Q24
{AttachmentInfo=QQQQ}24@0:8Q16
v32@0:8^v16Q24
v20@0:8c16
B24@0:8@16
B24@0:8Q16
q16@0:8
I16@0:8
v20@0:8I16
{unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long long> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long long>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long long>, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{unordered_map<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::MTL::Utils::DYMTLRenderPassDescriptor>, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
@"NSDictionary"
{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__first_"^Q}}
{unordered_map<unsigned long long, CommandBufferInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, CommandBufferInfo> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CommandBufferInfo>, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{unordered_map<unsigned long long, EncoderInfo, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, EncoderInfo> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, EncoderInfo> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, EncoderInfo>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, EncoderInfo>, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >="__table_"{__hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long> >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<unsigned long long, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::hash<unsigned long long> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::equal_to<unsigned long long> >="__first_"f}}}
@"DYMTLDebugWireframeRenderer"
@"DYMTLPostVertexDump"
@"DYMTLTextureRenderer"
{unordered_map<unsigned long long, CAMetalLayer *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, CAMetalLayer *> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, CAMetalLayer *>, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{tuple<unsigned long long, unsigned long long>="base_"{__tuple_impl<std::__1::__tuple_indices<0, 1>, unsigned long long, unsigned long long>="value"Q"value"Q}}
{vector<unsigned long long, std::__1::allocator<unsigned long long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >="__first_"^Q}}
@"NSMutableArray"
@"NSString"
@32@0:8@16^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}QQQQQQQ[8{DYMTLSamplePosition=ff}]Q}24
q56@0:8@16@24@32@40^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}QQQQQQQ[8{DYMTLSamplePosition=ff}]Q}48
c24@0:8^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}QQQQQQQ[8{DYMTLSamplePosition=ff}]Q}16
q56@0:8Q16Q24Q32Q40^{DYMTLRenderPassDescriptor=QQ[8{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}]{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}{DYMTLRenderPassAttachmentDescriptor=QQQQQQQQQQQ{DYMTLClearValue=(?={?=dddd}[4d])}Q}QQQQQQQ[8{DYMTLSamplePosition=ff}]Q}48
@"DYMTLCommonDebugFunctionPlayer"
@"<MTLLibrary>"
@"<MTLFunction>"
@"MTLTextureDescriptor"
@"<MTLTexture>"
@"MTLRenderPassColorAttachmentDescriptor"
@"MTLRenderPassDescriptor"
@"<MTLRenderPipelineState>"
{vector<MTLViewport, std::__1::allocator<MTLViewport> >="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<MTLViewport *, std::__1::allocator<MTLViewport> >="__first_"^{?}}}
{vector<MTLScissorRect, std::__1::allocator<MTLScissorRect> >="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<MTLScissorRect *, std::__1::allocator<MTLScissorRect> >="__first_"^{?}}}
{?="isValid"c"hasBeenUsed"c"type"Q"object"@"baseLevel"Q"bufferLength"Q"bufferOffset"Q"threadgroupMemoryLength"Q"threadgroupMemoryOffset"Q"hasLodClamp"c"lodMinClamp"f"lodMaxClamp"f}
{vector<std::__1::pair<unsigned long long, MTLDebugFunctionArgument>, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument> > >="__begin_"^{pair<unsigned long long, MTLDebugFunctionArgument>}"__end_"^{pair<unsigned long long, MTLDebugFunctionArgument>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long long, MTLDebugFunctionArgument> *, std::__1::allocator<std::__1::pair<unsigned long long, MTLDebugFunctionArgument> > >="__first_"^{pair<unsigned long long, MTLDebugFunctionArgument>}}}
@"<MTLCommandBufferSPI>"
@"MTLDebugRenderCommandEncoder"
@"MTLDebugParallelRenderCommandEncoder"
v32@0:8@16@24
v40@0:8@16@24@32
@20@0:8I16
@"NSMutableDictionary"
{unordered_map<unsigned long long, id<CAMetalDrawable>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<CAMetalDrawable> > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<CAMetalDrawable> >, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{unordered_map<unsigned long long, bool, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, bool> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, bool>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, bool> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, bool>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, bool>, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
@"<DYLayerManager>"
^v24@0:8Q16
@32@0:8Q16@24
v32@0:8@16Q24
Q24@0:8@16
^{unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id> > >={__hash_table<std::__1::__hash_value_type<unsigned long long, id>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id> > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true> >=f}}}16@0:8
r^v24@0:8Q16
@48@0:8@16*24Q32Q40
{unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, id>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{set<id, std::__1::less<id>, std::__1::allocator<id> >="__tree_"{__tree<id, std::__1::less<id>, std::__1::allocator<id> >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<id, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<id> >="__first_"Q}}}
{unordered_map<unsigned long long, NSData *, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, NSData *> > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, NSData *> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, NSData *>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, NSData *>, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
@"DYMTLIndirectArgumentBufferManager"
@"<MTLDevice>"
v40@0:8@16@24c32I36
v32@0:8f16f20f24f28
@"MTLRenderPipelineDescriptor"
@"MTLDepthStencilDescriptor"
@"<MTLBuffer>"
{UniformData="blendColor"[4f]"layerIndex"I"padding"[3I]}
@"<MTLSamplerState>"
v60@0:8Q16I24r^v28r^v36r^v44^{dispatch_data_s=}52
v24@0:8^{dispatch_data_s=}16
v24@0:8r^v16
v56@0:8Q16Q24Q32Q40^{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >={__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >=Q}}}48
v32@0:8Q16^{unordered_map<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true> >=f}}}24
v32@0:8Q16^v24
v40@0:8Q16^v24^{unordered_map<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true> >=f}}}32
v48@0:8r^{DYMTLIABDecodingOp=QQB{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}}16Q24^v32^{unordered_map<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true> >=f}}}40
@32@0:8r^{DYMTLIABDecodingOp=QQB{vector<unsigned long long, std::__1::allocator<unsigned long long> >=^Q^Q{__compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long> >=^Q}}}16^@24
v48@0:8@16Q24@32@40
@"DYMTLFunctionPlayer"
^{dispatch_data_s=}
{vector<std::__1::pair<unsigned long long, unsigned int>, std::__1::allocator<std::__1::pair<unsigned long long, unsigned int> > >="__begin_"^{pair<unsigned long long, unsigned int>}"__end_"^{pair<unsigned long long, unsigned int>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long long, unsigned int> *, std::__1::allocator<std::__1::pair<unsigned long long, unsigned int> > >="__first_"^{pair<unsigned long long, unsigned int>}}}
{vector<std::__1::vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > >, std::__1::allocator<std::__1::vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > > >="__begin_"^{vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > >}"__end_"^{vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > >}"__end_cap_"{__compressed_pair<std::__1::vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > *, std::__1::allocator<std::__1::vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > > >="__first_"^{vector<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::allocator<std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > >}}}
{vector<std::__1::vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > >, std::__1::allocator<std::__1::vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > > > >="__begin_"^{vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > >}"__end_"^{vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > >}"__end_cap_"{__compressed_pair<std::__1::vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > > *, std::__1::allocator<std::__1::vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > > > >="__first_"^{vector<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> >, std::__1::allocator<std::__1::vector<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo, std::__1::allocator<GPUTools::MTL::Utils::DYMTLIndirectArgumentBufferInfo> > > >}}}
{map<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> >, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > > > >="__tree_"{__tree<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > > > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, std::__1::vector<DYMTLOriginalProcessBuffer, std::__1::allocator<DYMTLOriginalProcessBuffer> > >, std::__1::less<unsigned long long>, true> >="__first_"Q}}}
{unordered_map<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long> > >, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{unordered_map<unsigned long long, id<MTLSamplerState>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id<MTLSamplerState> > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id<MTLSamplerState> >, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unordered_map<unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unordered_map<unsigned long long, unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > > > > > >, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{unordered_map<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> >, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *> *> >="__first_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::hash<unsigned long long>, true> >="__first_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::set<DYMTLIABDecodingOp, std::__1::less<DYMTLIABDecodingOp>, std::__1::allocator<DYMTLIABDecodingOp> > >, std::__1::equal_to<unsigned long long>, true> >="__first_"f}}}
{set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >="__tree_"{__tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long> >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::less<unsigned long long> >="__first_"Q}}}
{vector<DYMTLReplayerIAB, std::__1::allocator<DYMTLReplayerIAB> >="__begin_"^{DYMTLReplayerIAB}"__end_"^{DYMTLReplayerIAB}"__end_cap_"{__compressed_pair<DYMTLReplayerIAB *, std::__1::allocator<DYMTLReplayerIAB> >="__first_"^{DYMTLReplayerIAB}}}
{map<unsigned long long, unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long long> > >="__tree_"{__tree<std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::less<unsigned long long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long long, unsigned long long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long long, unsigned long long>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long long, std::__1::__value_type<unsigned long long, unsigned long long>, std::__1::less<unsigned long long>, true> >="__first_"Q}}}
v52@0:8^{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}16r^{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}24@32@40c48
v24@0:8r^{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >=^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}16
^{NSDictionary=#}24@0:8@16
@28@0:8@16c24
{vector<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >="__begin_"^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}"__end_"^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}"__end_cap_"{__compressed_pair<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> *, std::__1::allocator<std::__1::tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long> > >="__first_"^{tuple<unsigned long long, unsigned long long, unsigned long long, unsigned long long, unsigned long long>}}}
@"DYPlaybackEngine"
c24@0:8@"<DYGraphicsAPIInfo>"16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@"NSArray"
c24@0:8r*16
c40@0:8Q16Q24Q32
