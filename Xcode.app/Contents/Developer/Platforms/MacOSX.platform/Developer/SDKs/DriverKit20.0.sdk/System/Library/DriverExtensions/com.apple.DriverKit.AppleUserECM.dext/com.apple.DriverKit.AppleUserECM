AppleUserECM
IOUserNetworkEthernet
tx_pipe_dq
rx_pipe_dq
RxComplete
TxComplete
OSAction_AppleUserECM_TxPacketsAvailable
OSAction
OSAction_AppleUserECM_TxComplete
OSAction
OSAction_AppleUserECM_RxComplete
OSAction
OSAction_AppleUserECM_InterruptReadComplete
OSAction
==> %s()
<== %s() = 0x%08x
==> ivars = %p
provider = %p
ivars->ctrl_iface = %p
ivars->data_iface = %p
ivars->ctrl_if_open
ivars->data_if_open
SelectAlternateSetting Worked.
ivars->ctrl_dev_open
Calling RegisterEthernetInterface(mac_addr = %02x:%02x:%02x:%02x:%02x:%02x pool = %p tx_sub_queue = %p, tx_comp_queue = %p, rx_sub_queue = %p, rx_comp_queue = %p
%s %p done
<== %s():%d = 0x%08x
ivars->usb_rx_rd_index = %d
ivars->usb_rx_wr_index = %d
Rx abort_timeout = %d
ivars->usb_rx_rd_index = %d ivars->usb_rx_wr_index = %d
ivars->usb_tx_index = %d
ivars->usb_rx_bufs_pending = %d
Tx abort_timeout = %d
ivars->usb_tx_pkts_available = %d
ivars->max_mcast_cnt = %d
ivars->filter = 0x%04x
<== %s() status=0x%08x
==> %s tx_more_pkts=%d usb_tx_pkts_available=%d
==> %s actualByteCountArray[%d] = 0x%08x
kIOReturnTimeout or kIOReturnAborted
==> %s(%p, %d, %d, %p, %p)
pkt_cnt = %d pkt_rx_cnt = %d
setDataOffset(0) status = %d
setDataLength(%d) status = %d
USB buffer not delivered to stack status = 0x%08x len = %d usb_buf_cnt = %d pkt_rx_cnt = %d
EnqueuePackets: pkts_enqueued = %d pkt_rx_cnt = %d
==> %s(%p, 0x%08x, %d)
%s():%d ivars->intr_action
0x%02x 
%s():%d kUSBCDCNotificationTypeNetworkConnection
Link state change: 0x%02x
%s():%d kUSBCDCNotificationTypeConnectionSpeedChange
Unknown status 0x%08x on Interrupt pipe
usb_tx_pkts_available = %d usb_tx_index = %d
pkt_cnt = %d
usb_pkt = %p usb_tx_index = %d
pkt_len = 0x%08x
pkt_data = 0x%llx
pkt_len = %d pkt_off = %d pkt_data = %llu
pkt = %p
AsyncIOBundled : batch_cnt = %d pkt_cnt = %d
 dequeue_tx_packets Error on AsyncIOBundled = 0x%08x
 EnqueuPacket failed pkts_enqueued = %d pkt_cnt = %d
==> %s(%p, 0x%02x, 0x%02x, %p)
==> %s : %d
bmAttributes = 0x%02x bEndpointAddress = 0x%02x
==> %s()%d found iface = %p alt = %d %d
==> %s()%d
----------------------
bLength = 0x%x
bDescriptorType = 0x%x
bInterfaceNumber = 0x%x
bAlternateSetting = 0x%x
bNumEndpoints = 0x%x
bInterfaceClass = 0x%x
bInterfaceSubClass = 0x%x
bInterfaceProtocol = 0x%x
iInterface = 0x%x
Calling SelectAlternateSetting interface_desc = %p alt_interface_descm = %p bInterfaceNumber = %d
<== %s(%p, %p) = 0x%08x
<== %s:%d
bDescriptorSubtype = 0x%x
addr_byte = 0x%1x i=%d j = %d
==> %s(%d)
ivars->usb_pkt_count = %d
==> %s(%p, %d)
<== %s()
0x%04x:
%02x 
init
auecm_debug
free
Start_Impl
AppleUserECM
Default
ecm_tx_pipe_dq
tx_pipe_dq
ecm_rx_pipe_dq
rx_pipe_dq
Stop_Impl
SetInterfaceEnable_Impl
SetPromiscuousModeEnable_Impl
SetAllMulticastModeEnable_Impl
SetMulticastAddresses_Impl
SelectMediaType_Impl
TxComplete_Impl
RxComplete_Impl
InterruptReadComplete_Impl
handleTxPacketsAvailable
findUSBPipe
findDataInterface
getFunctionalDescriptors
allocateUSBPackets
v8@?0
freeUSBPackets
postRxPackets
readInterruptPipe
reportMediaCapabilities
OSAction_AppleUserECM_TxPacketsAvailable
OSAction_AppleUserECM_TxComplete
OSAction_AppleUserECM_RxComplete
OSAction_AppleUserECM_InterruptReadComplete
