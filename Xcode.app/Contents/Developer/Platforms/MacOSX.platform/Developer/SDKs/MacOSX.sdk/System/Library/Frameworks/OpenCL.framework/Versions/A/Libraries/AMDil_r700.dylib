AMDIL 789 IO Expansion Pass
E021:MemOp with no memory allocated! 
W002:Recoverable BE Error Detected!  
rv710
rv730
AMDIL 7XX IO Expansion Pass
E005:Byte Addressable Stores Invalid!
E020:Region address space invalid!   
AMDIL Barrier Detect Pass
__amd_barrier
;limitgroupsize
__AMD_barrierMacro
barrierGlobal
barrierLocal
barrierRegion
W000:Barrier caused limited groupsize
W001:Dangerous Barrier Opt Detected! 
machinepostdomtree
MachinePostDominator Tree Construction
AMD IL Control Flow Graph Preparation Pass
AMD IL Control Flow Graph structurizer Pass
unreachable block BB
structcfg
CFGStructurizer number of serial pattern matched
CFGStructurizer cloned instructions
CFGStructurizer number of if pattern matched
CFGStructurizer cloned blocks
CFGStructurizer number of loop-break pattern matched
CFGStructurizer number of loop-continue pattern matched
CFGStructurizer number of loop pattern matched
E010:Irreducible ControlFlow Detected
e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:32:32-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-v2048:2048:2048-n8:16:32:64
AMDIL EG/NI IO Expansion Pass
__amdil_
sample_data
write_image
get_image
cedar
redwood
cypress
AMDIL Generic IO Expansion Pass
AMDIL DAG->DAG Pattern Instruction Selection
AMDILISD::INTTOANY
AMDILISD::DP_TO_FP
AMDILISD::FP_TO_DP
AMDILISD::BITCONV
AMDILISD::CMOV
AMDILISD::CMOVLOG
AMDILISD::INEGATE
AMDILISD::MAD
AMDILISD::UMAD
AMDILISD::CALL
AMDILISD::RET
AMDILISD::IFFB_HI
AMDILISD::IFFB_LO
AMDILISD::ADD
AMDILISD::UMUL
AMDILISD::AND
AMDILISD::OR
AMDILISD::NOT
AMDILISD::XOR
AMDILISD::DIV_INF
AMDILISD::SMAX
AMDILISD::PHIMOVE
AMDILISD::MOVE
AMDILISD::VBUILD
AMDILISD::VEXTRACT
AMDILISD::VINSERT
AMDILISD::VCONCAT
AMDILISD::LCREATE
AMDILISD::LCOMPHI
AMDILISD::LCOMPLO
AMDILISD::DCREATE
AMDILISD::DCOMPHI
AMDILISD::DCOMPLO
AMDILISD::LCREATE2
AMDILISD::LCOMPHI2
AMDILISD::LCOMPLO2
AMDILISD::DCREATE2
AMDILISD::DCOMPHI2
AMDILISD::DCOMPLO2
AMDILISD::CMP
AMDILISD::IL_CC_I_LT
AMDILISD::IL_CC_I_LE
AMDILISD::IL_CC_I_GT
AMDILISD::IL_CC_I_GE
AMDILISD::IL_CC_I_EQ
AMDILISD::IL_CC_I_NE
AMDILISD::RET_FLAG
AMDILISD::BRANCH_COND
AMDILISD::LOOP_NZERO
AMDILISD::LOOP_ZERO
AMDILISD::LOOP_CMP
AMDILISD::ADDADDR
AMDILISD::ATOM_G_ADD
AMDILISD::ATOM_G_AND
AMDILISD::ATOM_G_CMPXCHG
AMDILISD::ATOM_G_DEC
AMDILISD::ATOM_G_INC
AMDILISD::ATOM_G_MAX
AMDILISD::ATOM_G_UMAX
AMDILISD::ATOM_G_MIN
AMDILISD::ATOM_G_UMIN
AMDILISD::ATOM_G_OR
AMDILISD::ATOM_G_SUB
AMDILISD::ATOM_G_RSUB
AMDILISD::ATOM_G_XCHG
AMDILISD::ATOM_G_XOR
AMDILISD::ATOM_G_ADD_NORET
AMDILISD::ATOM_G_AND_NORET
AMDILISD::ATOM_G_CMPXCHG_NORET
AMDILISD::ATOM_G_DEC_NORET
AMDILISD::ATOM_G_INC_NORET
AMDILISD::ATOM_G_MAX_NORET
AMDILISD::ATOM_G_UMAX_NORET
AMDILISD::ATOM_G_MIN_NORET
AMDILISD::ATOM_G_UMIN_NORET
AMDILISD::ATOM_G_OR_NORET
AMDILISD::ATOM_G_SUB_NORET
AMDILISD::ATOM_G_RSUB_NORET
AMDILISD::ATOM_G_XCHG_NORET
AMDILISD::ATOM_G_XOR_NORET
AMDILISD::ATOM_L_ADD
AMDILISD::ATOM_L_AND
AMDILISD::ATOM_L_CMPXCHG
AMDILISD::ATOM_L_DEC
AMDILISD::ATOM_L_INC
AMDILISD::ATOM_L_MAX
AMDILISD::ATOM_L_UMAX
AMDILISD::ATOM_L_MIN
AMDILISD::ATOM_L_UMIN
AMDILISD::ATOM_L_OR
AMDILISD::ATOM_L_SUB
AMDILISD::ATOM_L_RSUB
AMDILISD::ATOM_L_XCHG
AMDILISD::ATOM_L_XOR
AMDILISD::ATOM_L_ADD_NORET
AMDILISD::ATOM_L_AND_NORET
AMDILISD::ATOM_L_CMPXCHG_NORET
AMDILISD::ATOM_L_DEC_NORET
AMDILISD::ATOM_L_INC_NORET
AMDILISD::ATOM_L_MAX_NORET
AMDILISD::ATOM_L_UMAX_NORET
AMDILISD::ATOM_L_MIN_NORET
AMDILISD::ATOM_L_UMIN_NORET
AMDILISD::ATOM_L_OR_NORET
AMDILISD::ATOM_L_SUB_NORET
AMDILISD::ATOM_L_RSUB_NORET
AMDILISD::ATOM_L_XCHG_NORET
AMDILISD::ATOM_R_ADD
AMDILISD::ATOM_R_AND
AMDILISD::ATOM_R_CMPXCHG
AMDILISD::ATOM_R_DEC
AMDILISD::ATOM_R_INC
AMDILISD::ATOM_R_MAX
AMDILISD::ATOM_R_UMAX
AMDILISD::ATOM_R_MIN
AMDILISD::ATOM_R_UMIN
AMDILISD::ATOM_R_OR
AMDILISD::ATOM_R_MSKOR
AMDILISD::ATOM_R_SUB
AMDILISD::ATOM_R_RSUB
AMDILISD::ATOM_R_XCHG
AMDILISD::ATOM_R_XOR
AMDILISD::ATOM_R_ADD_NORET
AMDILISD::ATOM_R_AND_NORET
AMDILISD::ATOM_R_CMPXCHG_NORET
AMDILISD::ATOM_R_DEC_NORET
AMDILISD::ATOM_R_INC_NORET
AMDILISD::ATOM_R_MAX_NORET
AMDILISD::ATOM_R_UMAX_NORET
AMDILISD::ATOM_R_MIN_NORET
AMDILISD::ATOM_R_UMIN_NORET
AMDILISD::ATOM_R_OR_NORET
AMDILISD::ATOM_R_MSKOR_NORET
AMDILISD::ATOM_R_SUB_NORET
AMDILISD::ATOM_R_RSUB_NORET
AMDILISD::ATOM_R_XCHG_NORET
AMDILISD::ATOM_R_XOR_NORET
AMDILISD::APPEND_ALLOC
AMDILISD::APPEND_ALLOC_NORET
AMDILISD::APPEND_CONSUME
AMDILISD::APPEND_CONSUME_NORET
Opcode: 
Condition Code: 
AMDIL Inline Function Pass
E022:Recursive Function detected!    
INLINEASM
PROLOG_LABEL
EH_LABEL
GC_LABEL
KILL
EXTRACT_SUBREG
INSERT_SUBREG
IMPLICIT_DEF
SUBREG_TO_REG
COPY_TO_REGCLASS
DBG_VALUE
REG_SEQUENCE
COPY
ABS_f32
ABS_f64
ABS_i32
ABS_v2f32
ABS_v2f64
ABS_v2i32
ABS_v4f32
ABS_v4i32
ACOS_f32
ADD_RTE_f32
ADD_RTE_f64
ADD_RTE_v2f32
ADD_RTE_v4f32
ADD_RTN_f32
ADD_RTN_f64
ADD_RTN_v2f32
ADD_RTN_v4f32
ADD_RTP_f32
ADD_RTP_f64
ADD_RTP_v2f32
ADD_RTP_v4f32
ADD_RTZ_f32
ADD_RTZ_f64
ADD_RTZ_v2f32
ADD_RTZ_v4f32
ADD_f32
ADD_f64
ADD_i16
ADD_i32
ADD_i8
ADD_v2f32
ADD_v2f64
ADD_v2i16
ADD_v2i32
ADD_v2i8
ADD_v4f32
ADD_v4i16
ADD_v4i32
ADD_v4i8
ADDir
ADDri
ADJCALLSTACKDOWN
ADJCALLSTACKUP
AND_i16
AND_i32
AND_i64
AND_i8
AND_v2i16
AND_v2i32
AND_v2i64
AND_v2i8
AND_v4i16
AND_v4i32
AND_v4i8
APPEND_ALLOC
APPEND_ALLOC_NORET
APPEND_CONSUME
APPEND_CONSUME_NORET
ASIN_f32
ATAN_f32
ATOM_A_ADD_NORET_P32_i32
ATOM_A_ADD_NORET_P32_i64
ATOM_A_ADD_NORET_P64_i32
ATOM_A_ADD_NORET_P64_i64
ATOM_A_ADD_P32_i32
ATOM_A_ADD_P32_i64
ATOM_A_ADD_P64_i32
ATOM_A_ADD_P64_i64
ATOM_A_AND_NORET_P32_i32
ATOM_A_AND_NORET_P32_i64
ATOM_A_AND_NORET_P64_i32
ATOM_A_AND_NORET_P64_i64
ATOM_A_AND_P32_i32
ATOM_A_AND_P32_i64
ATOM_A_AND_P64_i32
ATOM_A_AND_P64_i64
ATOM_A_CMPXCHG_NORET_P32_i32
ATOM_A_CMPXCHG_NORET_P32_i64
ATOM_A_CMPXCHG_NORET_P64_i32
ATOM_A_CMPXCHG_NORET_P64_i64
ATOM_A_CMPXCHG_P32_i32
ATOM_A_CMPXCHG_P32_i64
ATOM_A_CMPXCHG_P64_i32
ATOM_A_CMPXCHG_P64_i64
ATOM_A_DEC_NORET_P32_i32
ATOM_A_DEC_NORET_P32_i64
ATOM_A_DEC_NORET_P64_i32
ATOM_A_DEC_NORET_P64_i64
ATOM_A_DEC_P32_i32
ATOM_A_DEC_P32_i64
ATOM_A_DEC_P64_i32
ATOM_A_DEC_P64_i64
ATOM_A_INC_NORET_P32_i32
ATOM_A_INC_NORET_P32_i64
ATOM_A_INC_NORET_P64_i32
ATOM_A_INC_NORET_P64_i64
ATOM_A_INC_P32_i32
ATOM_A_INC_P32_i64
ATOM_A_INC_P64_i32
ATOM_A_INC_P64_i64
ATOM_A_MAX_NORET_P32_i32
ATOM_A_MAX_NORET_P32_i64
ATOM_A_MAX_NORET_P64_i32
ATOM_A_MAX_NORET_P64_i64
ATOM_A_MAX_P32_i32
ATOM_A_MAX_P32_i64
ATOM_A_MAX_P64_i32
ATOM_A_MAX_P64_i64
ATOM_A_MIN_NORET_P32_i32
ATOM_A_MIN_NORET_P32_i64
ATOM_A_MIN_NORET_P64_i32
ATOM_A_MIN_NORET_P64_i64
ATOM_A_MIN_P32_i32
ATOM_A_MIN_P32_i64
ATOM_A_MIN_P64_i32
ATOM_A_MIN_P64_i64
ATOM_A_OR_NORET_P32_i32
ATOM_A_OR_NORET_P32_i64
ATOM_A_OR_NORET_P64_i32
ATOM_A_OR_NORET_P64_i64
ATOM_A_OR_P32_i32
ATOM_A_OR_P32_i64
ATOM_A_OR_P64_i32
ATOM_A_OR_P64_i64
ATOM_A_RSUB_NORET_P32_i32
ATOM_A_RSUB_NORET_P32_i64
ATOM_A_RSUB_NORET_P64_i32
ATOM_A_RSUB_NORET_P64_i64
ATOM_A_RSUB_P32_i32
ATOM_A_RSUB_P32_i64
ATOM_A_RSUB_P64_i32
ATOM_A_RSUB_P64_i64
ATOM_A_SUB_NORET_P32_i32
ATOM_A_SUB_NORET_P32_i64
ATOM_A_SUB_NORET_P64_i32
ATOM_A_SUB_NORET_P64_i64
ATOM_A_SUB_P32_i32
ATOM_A_SUB_P32_i64
ATOM_A_SUB_P64_i32
ATOM_A_SUB_P64_i64
ATOM_A_UMAX_NORET_P32_i32
ATOM_A_UMAX_NORET_P32_i64
ATOM_A_UMAX_NORET_P64_i32
ATOM_A_UMAX_NORET_P64_i64
ATOM_A_UMAX_P32_i32
ATOM_A_UMAX_P32_i64
ATOM_A_UMAX_P64_i32
ATOM_A_UMAX_P64_i64
ATOM_A_UMIN_NORET_P32_i32
ATOM_A_UMIN_NORET_P32_i64
ATOM_A_UMIN_NORET_P64_i32
ATOM_A_UMIN_NORET_P64_i64
ATOM_A_UMIN_P32_i32
ATOM_A_UMIN_P32_i64
ATOM_A_UMIN_P64_i32
ATOM_A_UMIN_P64_i64
ATOM_A_XCHG_P32_i32
ATOM_A_XCHG_P32_i64
ATOM_A_XCHG_P64_i32
ATOM_A_XCHG_P64_i64
ATOM_A_XOR_NORET_P32_i32
ATOM_A_XOR_NORET_P32_i64
ATOM_A_XOR_NORET_P64_i32
ATOM_A_XOR_NORET_P64_i64
ATOM_A_XOR_P32_i32
ATOM_A_XOR_P32_i64
ATOM_A_XOR_P64_i32
ATOM_A_XOR_P64_i64
ATOM_G_ADD_NORET_P32_i32
ATOM_G_ADD_NORET_P32_i64
ATOM_G_ADD_NORET_P64_i32
ATOM_G_ADD_NORET_P64_i64
ATOM_G_ADD_P32_i32
ATOM_G_ADD_P32_i64
ATOM_G_ADD_P64_i32
ATOM_G_ADD_P64_i64
ATOM_G_AND_NORET_P32_i32
ATOM_G_AND_NORET_P32_i64
ATOM_G_AND_NORET_P64_i32
ATOM_G_AND_NORET_P64_i64
ATOM_G_AND_P32_i32
ATOM_G_AND_P32_i64
ATOM_G_AND_P64_i32
ATOM_G_AND_P64_i64
ATOM_G_CMPXCHG_NORET_P32_i32
ATOM_G_CMPXCHG_NORET_P32_i64
ATOM_G_CMPXCHG_NORET_P64_i32
ATOM_G_CMPXCHG_NORET_P64_i64
ATOM_G_CMPXCHG_P32_i32
ATOM_G_CMPXCHG_P32_i64
ATOM_G_CMPXCHG_P64_i32
ATOM_G_CMPXCHG_P64_i64
ATOM_G_DEC_NORET_P32_i32
ATOM_G_DEC_NORET_P32_i64
ATOM_G_DEC_NORET_P64_i32
ATOM_G_DEC_NORET_P64_i64
ATOM_G_DEC_P32_i32
ATOM_G_DEC_P32_i64
ATOM_G_DEC_P64_i32
ATOM_G_DEC_P64_i64
ATOM_G_INC_NORET_P32_i32
ATOM_G_INC_NORET_P32_i64
ATOM_G_INC_NORET_P64_i32
ATOM_G_INC_NORET_P64_i64
ATOM_G_INC_P32_i32
ATOM_G_INC_P32_i64
ATOM_G_INC_P64_i32
ATOM_G_INC_P64_i64
ATOM_G_MAX_NORET_P32_i32
ATOM_G_MAX_NORET_P32_i64
ATOM_G_MAX_NORET_P64_i32
ATOM_G_MAX_NORET_P64_i64
ATOM_G_MAX_P32_i32
ATOM_G_MAX_P32_i64
ATOM_G_MAX_P64_i32
ATOM_G_MAX_P64_i64
ATOM_G_MIN_NORET_P32_i32
ATOM_G_MIN_NORET_P32_i64
ATOM_G_MIN_NORET_P64_i32
ATOM_G_MIN_NORET_P64_i64
ATOM_G_MIN_P32_i32
ATOM_G_MIN_P32_i64
ATOM_G_MIN_P64_i32
ATOM_G_MIN_P64_i64
ATOM_G_OR_NORET_P32_i32
ATOM_G_OR_NORET_P32_i64
ATOM_G_OR_NORET_P64_i32
ATOM_G_OR_NORET_P64_i64
ATOM_G_OR_P32_i32
ATOM_G_OR_P32_i64
ATOM_G_OR_P64_i32
ATOM_G_OR_P64_i64
ATOM_G_RSUB_NORET_P32_i32
ATOM_G_RSUB_NORET_P32_i64
ATOM_G_RSUB_NORET_P64_i32
ATOM_G_RSUB_NORET_P64_i64
ATOM_G_RSUB_P32_i32
ATOM_G_RSUB_P32_i64
ATOM_G_RSUB_P64_i32
ATOM_G_RSUB_P64_i64
ATOM_G_SUB_NORET_P32_i32
ATOM_G_SUB_NORET_P32_i64
ATOM_G_SUB_NORET_P64_i32
ATOM_G_SUB_NORET_P64_i64
ATOM_G_SUB_P32_i32
ATOM_G_SUB_P32_i64
ATOM_G_SUB_P64_i32
ATOM_G_SUB_P64_i64
ATOM_G_UMAX_NORET_P32_i32
ATOM_G_UMAX_NORET_P32_i64
ATOM_G_UMAX_NORET_P64_i32
ATOM_G_UMAX_NORET_P64_i64
ATOM_G_UMAX_P32_i32
ATOM_G_UMAX_P32_i64
ATOM_G_UMAX_P64_i32
ATOM_G_UMAX_P64_i64
ATOM_G_UMIN_NORET_P32_i32
ATOM_G_UMIN_NORET_P32_i64
ATOM_G_UMIN_NORET_P64_i32
ATOM_G_UMIN_NORET_P64_i64
ATOM_G_UMIN_P32_i32
ATOM_G_UMIN_P32_i64
ATOM_G_UMIN_P64_i32
ATOM_G_UMIN_P64_i64
ATOM_G_XCHG_P32_i32
ATOM_G_XCHG_P32_i64
ATOM_G_XCHG_P64_i32
ATOM_G_XCHG_P64_i64
ATOM_G_XOR_NORET_P32_i32
ATOM_G_XOR_NORET_P32_i64
ATOM_G_XOR_NORET_P64_i32
ATOM_G_XOR_NORET_P64_i64
ATOM_G_XOR_P32_i32
ATOM_G_XOR_P32_i64
ATOM_G_XOR_P64_i32
ATOM_G_XOR_P64_i64
ATOM_L_ADD_NORET_P32_i32
ATOM_L_ADD_NORET_P32_i64
ATOM_L_ADD_NORET_P64_i32
ATOM_L_ADD_NORET_P64_i64
ATOM_L_ADD_P32_i32
ATOM_L_ADD_P32_i64
ATOM_L_ADD_P64_i32
ATOM_L_ADD_P64_i64
ATOM_L_AND_NORET_P32_i32
ATOM_L_AND_NORET_P32_i64
ATOM_L_AND_NORET_P64_i32
ATOM_L_AND_NORET_P64_i64
ATOM_L_AND_P32_i32
ATOM_L_AND_P32_i64
ATOM_L_AND_P64_i32
ATOM_L_AND_P64_i64
ATOM_L_CMPXCHG_NORET_P32_i32
ATOM_L_CMPXCHG_NORET_P32_i64
ATOM_L_CMPXCHG_NORET_P64_i32
ATOM_L_CMPXCHG_NORET_P64_i64
ATOM_L_CMPXCHG_P32_i32
ATOM_L_CMPXCHG_P32_i64
ATOM_L_CMPXCHG_P64_i32
ATOM_L_CMPXCHG_P64_i64
ATOM_L_DEC_NORET_P32_i32
ATOM_L_DEC_NORET_P32_i64
ATOM_L_DEC_NORET_P64_i32
ATOM_L_DEC_NORET_P64_i64
ATOM_L_DEC_P32_i32
ATOM_L_DEC_P32_i64
ATOM_L_DEC_P64_i32
ATOM_L_DEC_P64_i64
ATOM_L_INC_NORET_P32_i32
ATOM_L_INC_NORET_P32_i64
ATOM_L_INC_NORET_P64_i32
ATOM_L_INC_NORET_P64_i64
ATOM_L_INC_P32_i32
ATOM_L_INC_P32_i64
ATOM_L_INC_P64_i32
ATOM_L_INC_P64_i64
ATOM_L_MAX_NORET_P32_i32
ATOM_L_MAX_NORET_P32_i64
ATOM_L_MAX_NORET_P64_i32
ATOM_L_MAX_NORET_P64_i64
ATOM_L_MAX_P32_i32
ATOM_L_MAX_P32_i64
ATOM_L_MAX_P64_i32
ATOM_L_MAX_P64_i64
ATOM_L_MIN_NORET_P32_i32
ATOM_L_MIN_NORET_P32_i64
ATOM_L_MIN_NORET_P64_i32
ATOM_L_MIN_NORET_P64_i64
ATOM_L_MIN_P32_i32
ATOM_L_MIN_P32_i64
ATOM_L_MIN_P64_i32
ATOM_L_MIN_P64_i64
ATOM_L_MSKOR_NORET_P32_i32
ATOM_L_MSKOR_NORET_P32_i64
ATOM_L_MSKOR_NORET_P64_i32
ATOM_L_MSKOR_NORET_P64_i64
ATOM_L_MSKOR_P32_i32
ATOM_L_MSKOR_P32_i64
ATOM_L_MSKOR_P64_i32
ATOM_L_MSKOR_P64_i64
ATOM_L_OR_NORET_P32_i32
ATOM_L_OR_NORET_P32_i64
ATOM_L_OR_NORET_P64_i32
ATOM_L_OR_NORET_P64_i64
ATOM_L_OR_P32_i32
ATOM_L_OR_P32_i64
ATOM_L_OR_P64_i32
ATOM_L_OR_P64_i64
ATOM_L_RSUB_NORET_P32_i32
ATOM_L_RSUB_NORET_P32_i64
ATOM_L_RSUB_NORET_P64_i32
ATOM_L_RSUB_NORET_P64_i64
ATOM_L_RSUB_P32_i32
ATOM_L_RSUB_P32_i64
ATOM_L_RSUB_P64_i32
ATOM_L_RSUB_P64_i64
ATOM_L_SUB_NORET_P32_i32
ATOM_L_SUB_NORET_P32_i64
ATOM_L_SUB_NORET_P64_i32
ATOM_L_SUB_NORET_P64_i64
ATOM_L_SUB_P32_i32
ATOM_L_SUB_P32_i64
ATOM_L_SUB_P64_i32
ATOM_L_SUB_P64_i64
ATOM_L_UMAX_NORET_P32_i32
ATOM_L_UMAX_NORET_P32_i64
ATOM_L_UMAX_NORET_P64_i32
ATOM_L_UMAX_NORET_P64_i64
ATOM_L_UMAX_P32_i32
ATOM_L_UMAX_P32_i64
ATOM_L_UMAX_P64_i32
ATOM_L_UMAX_P64_i64
ATOM_L_UMIN_NORET_P32_i32
ATOM_L_UMIN_NORET_P32_i64
ATOM_L_UMIN_NORET_P64_i32
ATOM_L_UMIN_NORET_P64_i64
ATOM_L_UMIN_P32_i32
ATOM_L_UMIN_P32_i64
ATOM_L_UMIN_P64_i32
ATOM_L_UMIN_P64_i64
ATOM_L_XCHG_P32_i32
ATOM_L_XCHG_P32_i64
ATOM_L_XCHG_P64_i32
ATOM_L_XCHG_P64_i64
ATOM_L_XOR_NORET_P32_i32
ATOM_L_XOR_NORET_P32_i64
ATOM_L_XOR_NORET_P64_i32
ATOM_L_XOR_NORET_P64_i64
ATOM_L_XOR_P32_i32
ATOM_L_XOR_P32_i64
ATOM_L_XOR_P64_i32
ATOM_L_XOR_P64_i64
ATOM_R_ADD_NORET_P32_i32
ATOM_R_ADD_NORET_P32_i64
ATOM_R_ADD_NORET_P64_i32
ATOM_R_ADD_NORET_P64_i64
ATOM_R_ADD_P32_i32
ATOM_R_ADD_P32_i64
ATOM_R_ADD_P64_i32
ATOM_R_ADD_P64_i64
ATOM_R_AND_NORET_P32_i32
ATOM_R_AND_NORET_P32_i64
ATOM_R_AND_NORET_P64_i32
ATOM_R_AND_NORET_P64_i64
ATOM_R_AND_P32_i32
ATOM_R_AND_P32_i64
ATOM_R_AND_P64_i32
ATOM_R_AND_P64_i64
ATOM_R_CMPXCHG_NORET_P32_i32
ATOM_R_CMPXCHG_NORET_P32_i64
ATOM_R_CMPXCHG_NORET_P64_i32
ATOM_R_CMPXCHG_NORET_P64_i64
ATOM_R_CMPXCHG_P32_i32
ATOM_R_CMPXCHG_P32_i64
ATOM_R_CMPXCHG_P64_i32
ATOM_R_CMPXCHG_P64_i64
ATOM_R_DEC_NORET_P32_i32
ATOM_R_DEC_NORET_P32_i64
ATOM_R_DEC_NORET_P64_i32
ATOM_R_DEC_NORET_P64_i64
ATOM_R_DEC_P32_i32
ATOM_R_DEC_P32_i64
ATOM_R_DEC_P64_i32
ATOM_R_DEC_P64_i64
ATOM_R_INC_NORET_P32_i32
ATOM_R_INC_NORET_P32_i64
ATOM_R_INC_NORET_P64_i32
ATOM_R_INC_NORET_P64_i64
ATOM_R_INC_P32_i32
ATOM_R_INC_P32_i64
ATOM_R_INC_P64_i32
ATOM_R_INC_P64_i64
ATOM_R_MAX_NORET_P32_i32
ATOM_R_MAX_NORET_P32_i64
ATOM_R_MAX_NORET_P64_i32
ATOM_R_MAX_NORET_P64_i64
ATOM_R_MAX_P32_i32
ATOM_R_MAX_P32_i64
ATOM_R_MAX_P64_i32
ATOM_R_MAX_P64_i64
ATOM_R_MIN_NORET_P32_i32
ATOM_R_MIN_NORET_P32_i64
ATOM_R_MIN_NORET_P64_i32
ATOM_R_MIN_NORET_P64_i64
ATOM_R_MIN_P32_i32
ATOM_R_MIN_P32_i64
ATOM_R_MIN_P64_i32
ATOM_R_MIN_P64_i64
ATOM_R_MSKOR_NORET_P32_i32
ATOM_R_MSKOR_NORET_P32_i64
ATOM_R_MSKOR_NORET_P64_i32
ATOM_R_MSKOR_NORET_P64_i64
ATOM_R_MSKOR_P32_i32
ATOM_R_MSKOR_P32_i64
ATOM_R_MSKOR_P64_i32
ATOM_R_MSKOR_P64_i64
ATOM_R_OR_NORET_P32_i32
ATOM_R_OR_NORET_P32_i64
ATOM_R_OR_NORET_P64_i32
ATOM_R_OR_NORET_P64_i64
ATOM_R_OR_P32_i32
ATOM_R_OR_P32_i64
ATOM_R_OR_P64_i32
ATOM_R_OR_P64_i64
ATOM_R_RSUB_NORET_P32_i32
ATOM_R_RSUB_NORET_P32_i64
ATOM_R_RSUB_NORET_P64_i32
ATOM_R_RSUB_NORET_P64_i64
ATOM_R_RSUB_P32_i32
ATOM_R_RSUB_P32_i64
ATOM_R_RSUB_P64_i32
ATOM_R_RSUB_P64_i64
ATOM_R_SUB_NORET_P32_i32
ATOM_R_SUB_NORET_P32_i64
ATOM_R_SUB_NORET_P64_i32
ATOM_R_SUB_NORET_P64_i64
ATOM_R_SUB_P32_i32
ATOM_R_SUB_P32_i64
ATOM_R_SUB_P64_i32
ATOM_R_SUB_P64_i64
ATOM_R_UMAX_NORET_P32_i32
ATOM_R_UMAX_NORET_P32_i64
ATOM_R_UMAX_NORET_P64_i32
ATOM_R_UMAX_NORET_P64_i64
ATOM_R_UMAX_P32_i32
ATOM_R_UMAX_P32_i64
ATOM_R_UMAX_P64_i32
ATOM_R_UMAX_P64_i64
ATOM_R_UMIN_NORET_P32_i32
ATOM_R_UMIN_NORET_P32_i64
ATOM_R_UMIN_NORET_P64_i32
ATOM_R_UMIN_NORET_P64_i64
ATOM_R_UMIN_P32_i32
ATOM_R_UMIN_P32_i64
ATOM_R_UMIN_P64_i32
ATOM_R_UMIN_P64_i64
ATOM_R_XCHG_NORET_P32_i32
ATOM_R_XCHG_NORET_P32_i64
ATOM_R_XCHG_NORET_P64_i32
ATOM_R_XCHG_NORET_P64_i64
ATOM_R_XCHG_P32_i32
ATOM_R_XCHG_P32_i64
ATOM_R_XCHG_P64_i32
ATOM_R_XCHG_P64_i64
ATOM_R_XOR_NORET_P32_i32
ATOM_R_XOR_NORET_P32_i64
ATOM_R_XOR_NORET_P64_i32
ATOM_R_XOR_NORET_P64_i64
ATOM_R_XOR_P32_i32
ATOM_R_XOR_P32_i64
ATOM_R_XOR_P64_i32
ATOM_R_XOR_P64_i64
BARRIER_7XX
BARRIER_EGNI
BARRIER_GLOBAL
BARRIER_LOCAL
BARRIER_REGION
BFI_PAT1A_i32
BFI_PAT1A_v2i32
BFI_PAT1A_v4i32
BFI_PAT1B_i32
BFI_PAT1B_v2i32
BFI_PAT1B_v4i32
BFI_PAT2A_i32
BFI_PAT2A_v2i32
BFI_PAT2A_v4i32
BFI_PAT2B_i32
BFI_PAT2B_v2i32
BFI_PAT2B_v4i32
BFI_i32
BFI_v2i32
BFI_v4i32
BFM_PAT1A_i32
BFM_PAT1B_i32
BFM_i32
BFM_v2i32
BFM_v4i32
BINARY_AND_f32
BINARY_AND_f64
BINARY_AND_i16
BINARY_AND_i32
BINARY_AND_i64
BINARY_AND_i8
BINARY_AND_v2f32
BINARY_AND_v2f64
BINARY_AND_v2i16
BINARY_AND_v2i32
BINARY_AND_v2i64
BINARY_AND_v2i8
BINARY_AND_v4f32
BINARY_AND_v4i16
BINARY_AND_v4i32
BINARY_AND_v4i8
BINARY_NOT_f32
BINARY_NOT_f64
BINARY_NOT_i16
BINARY_NOT_i32
BINARY_NOT_i64
BINARY_NOT_i8
BINARY_NOT_v2f32
BINARY_NOT_v2f64
BINARY_NOT_v2i16
BINARY_NOT_v2i32
BINARY_NOT_v2i64
BINARY_NOT_v2i8
BINARY_NOT_v4f32
BINARY_NOT_v4i16
BINARY_NOT_v4i32
BINARY_NOT_v4i8
BINARY_OR_f32
BINARY_OR_f64
BINARY_OR_i16
BINARY_OR_i32
BINARY_OR_i64
BINARY_OR_i8
BINARY_OR_v2f32
BINARY_OR_v2f64
BINARY_OR_v2i16
BINARY_OR_v2i32
BINARY_OR_v2i64
BINARY_OR_v2i8
BINARY_OR_v4f32
BINARY_OR_v4i16
BINARY_OR_v4i32
BINARY_OR_v4i8
BINARY_XOR_f32
BINARY_XOR_f64
BINARY_XOR_i16
BINARY_XOR_i32
BINARY_XOR_i64
BINARY_XOR_i8
BINARY_XOR_v2f32
BINARY_XOR_v2f64
BINARY_XOR_v2i16
BINARY_XOR_v2i32
BINARY_XOR_v2i64
BINARY_XOR_v2i8
BINARY_XOR_v4f32
BINARY_XOR_v4i16
BINARY_XOR_v4i32
BINARY_XOR_v4i8
BITALIGN_PAT_1B_i32
BITALIGN_PAT_1_i32
BITALIGN_PAT_2B_i32
BITALIGN_PAT_2_i32
BITALIGN_PAT_3B_i32
BITALIGN_PAT_3_i32
BITALIGN_i32
BITALIGN_v2i32
BITALIGN_v4i32
BITCOUNT_i32
BITCOUNT_v2i32
BITCOUNT_v4i32
BORROW_i32
BORROW_v2i32
BORROW_v4i32
BRANCH
BRANCH_COND_f32
BRANCH_COND_f64
BRANCH_COND_i16
BRANCH_COND_i32
BRANCH_COND_i64
BRANCH_COND_i8
BREAK
BREAKC_f32
BREAKC_f64
BREAKC_i16
BREAKC_i32
BREAKC_i64
BREAKC_i8
BREAK_LOGICALNZ_f32
BREAK_LOGICALNZ_f64
BREAK_LOGICALNZ_i16
BREAK_LOGICALNZ_i32
BREAK_LOGICALNZ_i64
BREAK_LOGICALNZ_i8
BREAK_LOGICALZ_f32
BREAK_LOGICALZ_f64
BREAK_LOGICALZ_i16
BREAK_LOGICALZ_i32
BREAK_LOGICALZ_i64
BREAK_LOGICALZ_i8
BYTEALIGN_i32
BYTEALIGN_v2i32
BYTEALIGN_v4i32
CALL
CARRY_i32
CARRY_v2i32
CARRY_v4i32
CASE
CBLOAD
CBLOAD64
CLAMP_f32
CLAMP_v2f32
CLAMP_v4f32
CLASS_f32
CLASS_f64
CLASS_v2f32
CLASS_v2f64
CLASS_v4f32
CMOVLOG_f32
CMOVLOG_f64
CMOVLOG_i16
CMOVLOG_i32
CMOVLOG_i64
CMOVLOG_i8
CMOVLOG_v2f32
CMOVLOG_v2f64
CMOVLOG_v2i16
CMOVLOG_v2i32
CMOVLOG_v2i64
CMOVLOG_v2i8
CMOVLOG_v4f32
CMOVLOG_v4i16
CMOVLOG_v4i32
CMOVLOG_v4i8
CMOV_LOG_i32
CMOV_LOG_v2i32
CMOV_LOG_v4i32
CMOV_f32
CMOV_f64
CMOV_i16
CMOV_i32
CMOV_i64
CMOV_i8
CMOV_v2f32
CMOV_v2f64
CMOV_v2i16
CMOV_v2i32
CMOV_v2i64
CMOV_v2i8
CMOV_v4f32
CMOV_v4i16
CMOV_v4i32
CMOV_v4i8
CMP_f32
CMP_f64
CMP_i16
CMP_i32
CMP_i64
CMP_i8
CMP_v2f32
CMP_v2f64
CMP_v2i16
CMP_v2i32
CMP_v2i64
CMP_v2i8
CMP_v4f32
CMP_v4i16
CMP_v4i32
CMP_v4i8
CONSTANTAEXTLOAD64_f32
CONSTANTAEXTLOAD64_f64
CONSTANTAEXTLOAD64_i16
CONSTANTAEXTLOAD64_i32
CONSTANTAEXTLOAD64_i64
CONSTANTAEXTLOAD64_i8
CONSTANTAEXTLOAD64_v2f32
CONSTANTAEXTLOAD64_v2f64
CONSTANTAEXTLOAD64_v2i16
CONSTANTAEXTLOAD64_v2i32
CONSTANTAEXTLOAD64_v2i64
CONSTANTAEXTLOAD64_v2i8
CONSTANTAEXTLOAD64_v4f32
CONSTANTAEXTLOAD64_v4i16
CONSTANTAEXTLOAD64_v4i32
CONSTANTAEXTLOAD64_v4i8
CONSTANTAEXTLOAD_f32
CONSTANTAEXTLOAD_f64
CONSTANTAEXTLOAD_i16
CONSTANTAEXTLOAD_i32
CONSTANTAEXTLOAD_i64
CONSTANTAEXTLOAD_i8
CONSTANTAEXTLOAD_v2f32
CONSTANTAEXTLOAD_v2f64
CONSTANTAEXTLOAD_v2i16
CONSTANTAEXTLOAD_v2i32
CONSTANTAEXTLOAD_v2i64
CONSTANTAEXTLOAD_v2i8
CONSTANTAEXTLOAD_v4f32
CONSTANTAEXTLOAD_v4i16
CONSTANTAEXTLOAD_v4i32
CONSTANTAEXTLOAD_v4i8
CONSTANTLOAD64_f32
CONSTANTLOAD64_f64
CONSTANTLOAD64_i16
CONSTANTLOAD64_i32
CONSTANTLOAD64_i64
CONSTANTLOAD64_i8
CONSTANTLOAD64_v2f32
CONSTANTLOAD64_v2f64
CONSTANTLOAD64_v2i16
CONSTANTLOAD64_v2i32
CONSTANTLOAD64_v2i64
CONSTANTLOAD64_v2i8
CONSTANTLOAD64_v4f32
CONSTANTLOAD64_v4i16
CONSTANTLOAD64_v4i32
CONSTANTLOAD64_v4i8
CONSTANTLOAD_f32
CONSTANTLOAD_f64
CONSTANTLOAD_i16
CONSTANTLOAD_i32
CONSTANTLOAD_i64
CONSTANTLOAD_i8
CONSTANTLOAD_v2f32
CONSTANTLOAD_v2f64
CONSTANTLOAD_v2i16
CONSTANTLOAD_v2i32
CONSTANTLOAD_v2i64
CONSTANTLOAD_v2i8
CONSTANTLOAD_v4f32
CONSTANTLOAD_v4i16
CONSTANTLOAD_v4i32
CONSTANTLOAD_v4i8
CONSTANTSEXTLOAD64_f32
CONSTANTSEXTLOAD64_f64
CONSTANTSEXTLOAD64_i16
CONSTANTSEXTLOAD64_i32
CONSTANTSEXTLOAD64_i64
CONSTANTSEXTLOAD64_i8
CONSTANTSEXTLOAD64_v2f32
CONSTANTSEXTLOAD64_v2f64
CONSTANTSEXTLOAD64_v2i16
CONSTANTSEXTLOAD64_v2i32
CONSTANTSEXTLOAD64_v2i64
CONSTANTSEXTLOAD64_v2i8
CONSTANTSEXTLOAD64_v4f32
CONSTANTSEXTLOAD64_v4i16
CONSTANTSEXTLOAD64_v4i32
CONSTANTSEXTLOAD64_v4i8
CONSTANTSEXTLOAD_f32
CONSTANTSEXTLOAD_f64
CONSTANTSEXTLOAD_i16
CONSTANTSEXTLOAD_i32
CONSTANTSEXTLOAD_i64
CONSTANTSEXTLOAD_i8
CONSTANTSEXTLOAD_v2f32
CONSTANTSEXTLOAD_v2f64
CONSTANTSEXTLOAD_v2i16
CONSTANTSEXTLOAD_v2i32
CONSTANTSEXTLOAD_v2i64
CONSTANTSEXTLOAD_v2i8
CONSTANTSEXTLOAD_v4f32
CONSTANTSEXTLOAD_v4i16
CONSTANTSEXTLOAD_v4i32
CONSTANTSEXTLOAD_v4i8
CONSTANTZEXTLOAD64_f32
CONSTANTZEXTLOAD64_f64
CONSTANTZEXTLOAD64_i16
CONSTANTZEXTLOAD64_i32
CONSTANTZEXTLOAD64_i64
CONSTANTZEXTLOAD64_i8
CONSTANTZEXTLOAD64_v2f32
CONSTANTZEXTLOAD64_v2f64
CONSTANTZEXTLOAD64_v2i16
CONSTANTZEXTLOAD64_v2i32
CONSTANTZEXTLOAD64_v2i64
CONSTANTZEXTLOAD64_v2i8
CONSTANTZEXTLOAD64_v4f32
CONSTANTZEXTLOAD64_v4i16
CONSTANTZEXTLOAD64_v4i32
CONSTANTZEXTLOAD64_v4i8
CONSTANTZEXTLOAD_f32
CONSTANTZEXTLOAD_f64
CONSTANTZEXTLOAD_i16
CONSTANTZEXTLOAD_i32
CONSTANTZEXTLOAD_i64
CONSTANTZEXTLOAD_i8
CONSTANTZEXTLOAD_v2f32
CONSTANTZEXTLOAD_v2f64
CONSTANTZEXTLOAD_v2i16
CONSTANTZEXTLOAD_v2i32
CONSTANTZEXTLOAD_v2i64
CONSTANTZEXTLOAD_v2i8
CONSTANTZEXTLOAD_v4f32
CONSTANTZEXTLOAD_v4i16
CONSTANTZEXTLOAD_v4i32
CONSTANTZEXTLOAD_v4i8
CONTINUE
CONTINUEC_f32
CONTINUEC_f64
CONTINUEC_i16
CONTINUEC_i32
CONTINUEC_i64
CONTINUEC_i8
CONTINUE_LOGICALNZ_f32
CONTINUE_LOGICALNZ_f64
CONTINUE_LOGICALNZ_i16
CONTINUE_LOGICALNZ_i32
CONTINUE_LOGICALNZ_i64
CONTINUE_LOGICALNZ_i8
CONTINUE_LOGICALZ_f32
CONTINUE_LOGICALZ_f64
CONTINUE_LOGICALZ_i16
CONTINUE_LOGICALZ_i32
CONTINUE_LOGICALZ_i64
CONTINUE_LOGICALZ_i8
COSVEC_f32
COSVEC_v2f32
COSVEC_v4f32
COS_f32
CPOOLAEXTLOAD64_f32
CPOOLAEXTLOAD64_f64
CPOOLAEXTLOAD64_i16
CPOOLAEXTLOAD64_i32
CPOOLAEXTLOAD64_i64
CPOOLAEXTLOAD64_i8
CPOOLAEXTLOAD64_v2f32
CPOOLAEXTLOAD64_v2f64
CPOOLAEXTLOAD64_v2i16
CPOOLAEXTLOAD64_v2i32
CPOOLAEXTLOAD64_v2i64
CPOOLAEXTLOAD64_v2i8
CPOOLAEXTLOAD64_v4f32
CPOOLAEXTLOAD64_v4i16
CPOOLAEXTLOAD64_v4i32
CPOOLAEXTLOAD64_v4i8
CPOOLAEXTLOAD_f32
CPOOLAEXTLOAD_f64
CPOOLAEXTLOAD_i16
CPOOLAEXTLOAD_i32
CPOOLAEXTLOAD_i64
CPOOLAEXTLOAD_i8
CPOOLAEXTLOAD_v2f32
CPOOLAEXTLOAD_v2f64
CPOOLAEXTLOAD_v2i16
CPOOLAEXTLOAD_v2i32
CPOOLAEXTLOAD_v2i64
CPOOLAEXTLOAD_v2i8
CPOOLAEXTLOAD_v4f32
CPOOLAEXTLOAD_v4i16
CPOOLAEXTLOAD_v4i32
CPOOLAEXTLOAD_v4i8
CPOOLLOAD64_f32
CPOOLLOAD64_f64
CPOOLLOAD64_i16
CPOOLLOAD64_i32
CPOOLLOAD64_i64
CPOOLLOAD64_i8
CPOOLLOAD64_v2f32
CPOOLLOAD64_v2f64
CPOOLLOAD64_v2i16
CPOOLLOAD64_v2i32
CPOOLLOAD64_v2i64
CPOOLLOAD64_v2i8
CPOOLLOAD64_v4f32
CPOOLLOAD64_v4i16
CPOOLLOAD64_v4i32
CPOOLLOAD64_v4i8
CPOOLLOAD_f32
CPOOLLOAD_f64
CPOOLLOAD_i16
CPOOLLOAD_i32
CPOOLLOAD_i64
CPOOLLOAD_i8
CPOOLLOAD_v2f32
CPOOLLOAD_v2f64
CPOOLLOAD_v2i16
CPOOLLOAD_v2i32
CPOOLLOAD_v2i64
CPOOLLOAD_v2i8
CPOOLLOAD_v4f32
CPOOLLOAD_v4i16
CPOOLLOAD_v4i32
CPOOLLOAD_v4i8
CPOOLSEXTLOAD64_f32
CPOOLSEXTLOAD64_f64
CPOOLSEXTLOAD64_i16
CPOOLSEXTLOAD64_i32
CPOOLSEXTLOAD64_i64
CPOOLSEXTLOAD64_i8
CPOOLSEXTLOAD64_v2f32
CPOOLSEXTLOAD64_v2f64
CPOOLSEXTLOAD64_v2i16
CPOOLSEXTLOAD64_v2i32
CPOOLSEXTLOAD64_v2i64
CPOOLSEXTLOAD64_v2i8
CPOOLSEXTLOAD64_v4f32
CPOOLSEXTLOAD64_v4i16
CPOOLSEXTLOAD64_v4i32
CPOOLSEXTLOAD64_v4i8
CPOOLSEXTLOAD_f32
CPOOLSEXTLOAD_f64
CPOOLSEXTLOAD_i16
CPOOLSEXTLOAD_i32
CPOOLSEXTLOAD_i64
CPOOLSEXTLOAD_i8
CPOOLSEXTLOAD_v2f32
CPOOLSEXTLOAD_v2f64
CPOOLSEXTLOAD_v2i16
CPOOLSEXTLOAD_v2i32
CPOOLSEXTLOAD_v2i64
CPOOLSEXTLOAD_v2i8
CPOOLSEXTLOAD_v4f32
CPOOLSEXTLOAD_v4i16
CPOOLSEXTLOAD_v4i32
CPOOLSEXTLOAD_v4i8
CPOOLZEXTLOAD64_f32
CPOOLZEXTLOAD64_f64
CPOOLZEXTLOAD64_i16
CPOOLZEXTLOAD64_i32
CPOOLZEXTLOAD64_i64
CPOOLZEXTLOAD64_i8
CPOOLZEXTLOAD64_v2f32
CPOOLZEXTLOAD64_v2f64
CPOOLZEXTLOAD64_v2i16
CPOOLZEXTLOAD64_v2i32
CPOOLZEXTLOAD64_v2i64
CPOOLZEXTLOAD64_v2i8
CPOOLZEXTLOAD64_v4f32
CPOOLZEXTLOAD64_v4i16
CPOOLZEXTLOAD64_v4i32
CPOOLZEXTLOAD64_v4i8
CPOOLZEXTLOAD_f32
CPOOLZEXTLOAD_f64
CPOOLZEXTLOAD_i16
CPOOLZEXTLOAD_i32
CPOOLZEXTLOAD_i64
CPOOLZEXTLOAD_i8
CPOOLZEXTLOAD_v2f32
CPOOLZEXTLOAD_v2f64
CPOOLZEXTLOAD_v2i16
CPOOLZEXTLOAD_v2i32
CPOOLZEXTLOAD_v2i64
CPOOLZEXTLOAD_v2i8
CPOOLZEXTLOAD_v4f32
CPOOLZEXTLOAD_v4i16
CPOOLZEXTLOAD_v4i32
CPOOLZEXTLOAD_v4i8
CUSTOM_ADD_i16
CUSTOM_ADD_i32
CUSTOM_ADD_i8
CUSTOM_ADD_v2i16
CUSTOM_ADD_v2i32
CUSTOM_ADD_v2i8
CUSTOM_ADD_v4i16
CUSTOM_ADD_v4i32
CUSTOM_ADD_v4i8
CUSTOM_XOR_i16
CUSTOM_XOR_i32
CUSTOM_XOR_i64
CUSTOM_XOR_i8
CUSTOM_XOR_v2i16
CUSTOM_XOR_v2i32
CUSTOM_XOR_v2i64
CUSTOM_XOR_v2i8
CUSTOM_XOR_v4i16
CUSTOM_XOR_v4i32
CUSTOM_XOR_v4i8
CU_ID
DABS_f64
DCREATE
DCREATE_v2f64
DDIV_INT_f64
DDIV_INT_v2f64
DDIV_f64
DEFAULT
DEQ_v2f64
DFMA_f64
DFMA_v2f64
DHI_v2f64
DIV_INF_f32
DIV_INF_f64
DIV_INF_i16
DIV_INF_i32
DIV_INF_i64
DIV_INF_i8
DIV_INF_v2f32
DIV_INF_v2f64
DIV_INF_v2i16
DIV_INF_v2i32
DIV_INF_v2i64
DIV_INF_v2i8
DIV_INF_v4f32
DIV_INF_v4i16
DIV_INF_v4i32
DIV_INF_v4i8
DIV_INT_f32
DIV_INT_v2f32
DIV_INT_v4f32
DIV_PRECISE_f32
DIV_PRECISE_v2f32
DIV_PRECISE_v4f32
DIV_f32
DIV_f64
DIV_v2f32
DIV_v2f64
DIV_v4f32
DLO_v2f64
DMAD_f64
DP2ADD_f32
DP2_f32
DP3_f32
DP4_f32
DTOF
DTOI
DTOU
DTRIG_PREOP
EADD_i16
EADD_i32
EADD_i8
EADD_v2i16
EADD_v2i32
EADD_v2i8
EADD_v4i16
EADD_v4i32
EADD_v4i8
EARLY_EXIT
ELSE
ENDFUNC
ENDIF
ENDLOOP
ENDMAIN
ENDSWITCH
EXN_f32
EXPVEC_f32
EXPVEC_v2f32
EXPVEC_v4f32
EXP_f32
FABS_f32
FABS_v2f32
FABS_v4f32
FENCE
FENCE_GLOBAL
FENCE_GLOBAL_LOCAL
FENCE_LOCAL
FENCE_READ_ONLY
FENCE_READ_ONLY_GLOBAL
FENCE_READ_ONLY_GLOBAL_LOCAL
FENCE_READ_ONLY_LOCAL
FENCE_READ_ONLY_REGION
FENCE_READ_ONLY_REGION_GLOBAL
FENCE_READ_ONLY_REGION_LOCAL
FENCE_REGION
FENCE_REGION_GLOBAL
FENCE_REGION_LOCAL
FENCE_WRITE_ONLY
FENCE_WRITE_ONLY_GLOBAL
FENCE_WRITE_ONLY_GLOBAL_LOCAL
FENCE_WRITE_ONLY_LOCAL
FENCE_WRITE_ONLY_REGION
FENCE_WRITE_ONLY_REGION_GLOBAL
FENCE_WRITE_ONLY_REGION_LOCAL
FFB_HI_i32
FFB_HI_v2i32
FFB_HI_v4i32
FFB_LO_i32
FFB_LO_v2i32
FFB_LO_v4i32
FFB_SGN_i32
FFB_SGN_v2i32
FFB_SGN_v4i32
FLT_v2f32
FLT_v4f32
FMAD_f32
FMAD_v2f32
FMAD_v4f32
FMA_RTE_f32
FMA_RTE_v2f32
FMA_RTE_v4f32
FMA_RTN_f32
FMA_RTN_v2f32
FMA_RTN_v4f32
FMA_RTP_f32
FMA_RTP_v2f32
FMA_RTP_v4f32
FMA_RTZ_f32
FMA_RTZ_v2f32
FMA_RTZ_v4f32
FMA_f32
FMA_v2f32
FMA_v4f32
FRAC_f32
FRAC_f64
FRAC_v2f32
FRAC_v2f64
FRAC_v4f32
FREXP_EXP_f64
FREXP_EXP_i32
FREXP_EXP_v2f64
FREXP_EXP_v2i32
FREXP_EXP_v4i32
FREXP_MANT_f32
FREXP_MANT_f64
FREXP_MANT_v2f32
FREXP_MANT_v2f64
FREXP_MANT_v4f32
FREXP_f64
FTOD
FTOH_NEAR_i16
FTOH_NEAR_v2i16
FTOH_NEAR_v4i16
FTOH_NEG_INF_i16
FTOH_NEG_INF_v2i16
FTOH_NEG_INF_v4i16
FTOH_PLUS_INF_i16
FTOH_PLUS_INF_v2i16
FTOH_PLUS_INF_v4i16
FTOH_i16
FTOH_v2i16
FTOH_v4i16
FTOI
FTOI_FLR_i32
FTOI_FLR_v2i32
FTOI_FLR_v4i32
FTOI_RPI_i32
FTOI_RPI_v2i32
FTOI_RPI_v4i32
FTOI_v2i32
FTOI_v4i32
FTOU
FTOU_v2i32
FTOU_v4i32
FTOV4U8_i32
FTZ_f32
FTZ_v2f32
FTZ_v4f32
FUNC
GDSLOAD
GDSLOAD64
GDSSTORE
GDSSTORE64
GET_GLOBAL_ID
GET_GLOBAL_OFFSET
GET_GLOBAL_SIZE
GET_GROUP_ID
GET_LOCAL_ID
GET_LOCAL_SIZE
GET_NUM_GROUPS
GET_NUM_REGIONS
GET_PRINTF_OFFSET_i32
GET_PRINTF_OFFSET_i64
GET_PRINTF_SIZE_i32
GET_PRINTF_SIZE_i64
GET_REGION_ID
GET_REGION_LOCAL_ID
GET_REGION_SIZE
GET_WORK_DIM
GLOBALAEXTLOAD64_f32
GLOBALAEXTLOAD64_f64
GLOBALAEXTLOAD64_i16
GLOBALAEXTLOAD64_i32
GLOBALAEXTLOAD64_i64
GLOBALAEXTLOAD64_i8
GLOBALAEXTLOAD64_v2f32
GLOBALAEXTLOAD64_v2f64
GLOBALAEXTLOAD64_v2i16
GLOBALAEXTLOAD64_v2i32
GLOBALAEXTLOAD64_v2i64
GLOBALAEXTLOAD64_v2i8
GLOBALAEXTLOAD64_v4f32
GLOBALAEXTLOAD64_v4i16
GLOBALAEXTLOAD64_v4i32
GLOBALAEXTLOAD64_v4i8
GLOBALAEXTLOAD_f32
GLOBALAEXTLOAD_f64
GLOBALAEXTLOAD_i16
GLOBALAEXTLOAD_i32
GLOBALAEXTLOAD_i64
GLOBALAEXTLOAD_i8
GLOBALAEXTLOAD_v2f32
GLOBALAEXTLOAD_v2f64
GLOBALAEXTLOAD_v2i16
GLOBALAEXTLOAD_v2i32
GLOBALAEXTLOAD_v2i64
GLOBALAEXTLOAD_v2i8
GLOBALAEXTLOAD_v4f32
GLOBALAEXTLOAD_v4i16
GLOBALAEXTLOAD_v4i32
GLOBALAEXTLOAD_v4i8
GLOBALLOAD64_f32
GLOBALLOAD64_f64
GLOBALLOAD64_i16
GLOBALLOAD64_i32
GLOBALLOAD64_i64
GLOBALLOAD64_i8
GLOBALLOAD64_v2f32
GLOBALLOAD64_v2f64
GLOBALLOAD64_v2i16
GLOBALLOAD64_v2i32
GLOBALLOAD64_v2i64
GLOBALLOAD64_v2i8
GLOBALLOAD64_v4f32
GLOBALLOAD64_v4i16
GLOBALLOAD64_v4i32
GLOBALLOAD64_v4i8
GLOBALLOAD_f32
GLOBALLOAD_f64
GLOBALLOAD_i16
GLOBALLOAD_i32
GLOBALLOAD_i64
GLOBALLOAD_i8
GLOBALLOAD_v2f32
GLOBALLOAD_v2f64
GLOBALLOAD_v2i16
GLOBALLOAD_v2i32
GLOBALLOAD_v2i64
GLOBALLOAD_v2i8
GLOBALLOAD_v4f32
GLOBALLOAD_v4i16
GLOBALLOAD_v4i32
GLOBALLOAD_v4i8
GLOBALSEXTLOAD64_f32
GLOBALSEXTLOAD64_f64
GLOBALSEXTLOAD64_i16
GLOBALSEXTLOAD64_i32
GLOBALSEXTLOAD64_i64
GLOBALSEXTLOAD64_i8
GLOBALSEXTLOAD64_v2f32
GLOBALSEXTLOAD64_v2f64
GLOBALSEXTLOAD64_v2i16
GLOBALSEXTLOAD64_v2i32
GLOBALSEXTLOAD64_v2i64
GLOBALSEXTLOAD64_v2i8
GLOBALSEXTLOAD64_v4f32
GLOBALSEXTLOAD64_v4i16
GLOBALSEXTLOAD64_v4i32
GLOBALSEXTLOAD64_v4i8
GLOBALSEXTLOAD_f32
GLOBALSEXTLOAD_f64
GLOBALSEXTLOAD_i16
GLOBALSEXTLOAD_i32
GLOBALSEXTLOAD_i64
GLOBALSEXTLOAD_i8
GLOBALSEXTLOAD_v2f32
GLOBALSEXTLOAD_v2f64
GLOBALSEXTLOAD_v2i16
GLOBALSEXTLOAD_v2i32
GLOBALSEXTLOAD_v2i64
GLOBALSEXTLOAD_v2i8
GLOBALSEXTLOAD_v4f32
GLOBALSEXTLOAD_v4i16
GLOBALSEXTLOAD_v4i32
GLOBALSEXTLOAD_v4i8
GLOBALSTORE64_f32
GLOBALSTORE64_f64
GLOBALSTORE64_i16
GLOBALSTORE64_i32
GLOBALSTORE64_i64
GLOBALSTORE64_i8
GLOBALSTORE64_v2f32
GLOBALSTORE64_v2f64
GLOBALSTORE64_v2i16
GLOBALSTORE64_v2i32
GLOBALSTORE64_v2i64
GLOBALSTORE64_v2i8
GLOBALSTORE64_v4f32
GLOBALSTORE64_v4i16
GLOBALSTORE64_v4i32
GLOBALSTORE64_v4i8
GLOBALSTORE_f32
GLOBALSTORE_f64
GLOBALSTORE_i16
GLOBALSTORE_i32
GLOBALSTORE_i64
GLOBALSTORE_i8
GLOBALSTORE_v2f32
GLOBALSTORE_v2f64
GLOBALSTORE_v2i16
GLOBALSTORE_v2i32
GLOBALSTORE_v2i64
GLOBALSTORE_v2i8
GLOBALSTORE_v4f32
GLOBALSTORE_v4i16
GLOBALSTORE_v4i32
GLOBALSTORE_v4i8
GLOBALTRUNCSTORE64_f64f32
GLOBALTRUNCSTORE64_i16i8
GLOBALTRUNCSTORE64_i32i16
GLOBALTRUNCSTORE64_i32i8
GLOBALTRUNCSTORE64_i64i16
GLOBALTRUNCSTORE64_i64i32
GLOBALTRUNCSTORE64_i64i8
GLOBALTRUNCSTORE64_v2f64f32
GLOBALTRUNCSTORE64_v2i16i8
GLOBALTRUNCSTORE64_v2i32i16
GLOBALTRUNCSTORE64_v2i32i8
GLOBALTRUNCSTORE64_v2i64i16
GLOBALTRUNCSTORE64_v2i64i32
GLOBALTRUNCSTORE64_v2i64i8
GLOBALTRUNCSTORE64_v4i16i8
GLOBALTRUNCSTORE64_v4i32i16
GLOBALTRUNCSTORE64_v4i32i8
GLOBALTRUNCSTORE_f64f32
GLOBALTRUNCSTORE_i16i8
GLOBALTRUNCSTORE_i32i16
GLOBALTRUNCSTORE_i32i8
GLOBALTRUNCSTORE_i64i16
GLOBALTRUNCSTORE_i64i32
GLOBALTRUNCSTORE_i64i8
GLOBALTRUNCSTORE_v2f64f32
GLOBALTRUNCSTORE_v2i16i8
GLOBALTRUNCSTORE_v2i32i16
GLOBALTRUNCSTORE_v2i32i8
GLOBALTRUNCSTORE_v2i64i16
GLOBALTRUNCSTORE_v2i64i32
GLOBALTRUNCSTORE_v2i64i8
GLOBALTRUNCSTORE_v4i16i8
GLOBALTRUNCSTORE_v4i32i16
GLOBALTRUNCSTORE_v4i32i8
GLOBALZEXTLOAD64_f32
GLOBALZEXTLOAD64_f64
GLOBALZEXTLOAD64_i16
GLOBALZEXTLOAD64_i32
GLOBALZEXTLOAD64_i64
GLOBALZEXTLOAD64_i8
GLOBALZEXTLOAD64_v2f32
GLOBALZEXTLOAD64_v2f64
GLOBALZEXTLOAD64_v2i16
GLOBALZEXTLOAD64_v2i32
GLOBALZEXTLOAD64_v2i64
GLOBALZEXTLOAD64_v2i8
GLOBALZEXTLOAD64_v4f32
GLOBALZEXTLOAD64_v4i16
GLOBALZEXTLOAD64_v4i32
GLOBALZEXTLOAD64_v4i8
GLOBALZEXTLOAD_f32
GLOBALZEXTLOAD_f64
GLOBALZEXTLOAD_i16
GLOBALZEXTLOAD_i32
GLOBALZEXTLOAD_i64
GLOBALZEXTLOAD_i8
GLOBALZEXTLOAD_v2f32
GLOBALZEXTLOAD_v2f64
GLOBALZEXTLOAD_v2i16
GLOBALZEXTLOAD_v2i32
GLOBALZEXTLOAD_v2i64
GLOBALZEXTLOAD_v2i8
GLOBALZEXTLOAD_v4f32
GLOBALZEXTLOAD_v4i16
GLOBALZEXTLOAD_v4i32
GLOBALZEXTLOAD_v4i8
HILO_BITOR_v2i32
HILO_BITOR_v2i64
HILO_BITOR_v4i16
HTOF_f32
HTOF_v2f32
HTOF_v4f32
IBIT_EXTRACT_i32
IBIT_EXTRACT_v2i32
IBIT_EXTRACT_v4i32
IEQ_v2i32
IEQ_v4i32
IFC_f32
IFC_f64
IFC_i16
IFC_i32
IFC_i64
IFC_i8
IFFB_HI_i16
IFFB_HI_i32
IFFB_HI_i8
IFFB_HI_v2i16
IFFB_HI_v2i32
IFFB_HI_v2i8
IFFB_HI_v4i16
IFFB_HI_v4i32
IFFB_HI_v4i8
IFFB_LO_i16
IFFB_LO_i32
IFFB_LO_i8
IFFB_LO_v2i16
IFFB_LO_v2i32
IFFB_LO_v2i8
IFFB_LO_v4i16
IFFB_LO_v4i32
IFFB_LO_v4i8
IF_LOGICALNZ_f32
IF_LOGICALNZ_f64
IF_LOGICALNZ_i16
IF_LOGICALNZ_i32
IF_LOGICALNZ_i64
IF_LOGICALNZ_i8
IF_LOGICALZ_f32
IF_LOGICALZ_f64
IF_LOGICALZ_i16
IF_LOGICALZ_i32
IF_LOGICALZ_i64
IF_LOGICALZ_i8
IGE_v2i32
IGE_v4i32
ILT_v2i32
ILT_v4i32
IL_ASCHAR_f32
IL_ASCHAR_f64
IL_ASCHAR_i16
IL_ASCHAR_i32
IL_ASCHAR_i64
IL_ASCHAR_i8
IL_ASCHAR_v2f32
IL_ASCHAR_v2f64
IL_ASCHAR_v2i16
IL_ASCHAR_v2i32
IL_ASCHAR_v2i64
IL_ASCHAR_v2i8
IL_ASCHAR_v4f32
IL_ASCHAR_v4i16
IL_ASCHAR_v4i32
IL_ASCHAR_v4i8
IL_ASDOUBLE_f32
IL_ASDOUBLE_f64
IL_ASDOUBLE_i16
IL_ASDOUBLE_i32
IL_ASDOUBLE_i64
IL_ASDOUBLE_i8
IL_ASDOUBLE_v2f32
IL_ASDOUBLE_v2f64
IL_ASDOUBLE_v2i16
IL_ASDOUBLE_v2i32
IL_ASDOUBLE_v2i64
IL_ASDOUBLE_v2i8
IL_ASDOUBLE_v4f32
IL_ASDOUBLE_v4i16
IL_ASDOUBLE_v4i32
IL_ASDOUBLE_v4i8
IL_ASFLOAT_f32
IL_ASFLOAT_f64
IL_ASFLOAT_i16
IL_ASFLOAT_i32
IL_ASFLOAT_i64
IL_ASFLOAT_i8
IL_ASFLOAT_v2f32
IL_ASFLOAT_v2f64
IL_ASFLOAT_v2i16
IL_ASFLOAT_v2i32
IL_ASFLOAT_v2i64
IL_ASFLOAT_v2i8
IL_ASFLOAT_v4f32
IL_ASFLOAT_v4i16
IL_ASFLOAT_v4i32
IL_ASFLOAT_v4i8
IL_ASINT_f32
IL_ASINT_f64
IL_ASINT_i16
IL_ASINT_i32
IL_ASINT_i64
IL_ASINT_i8
IL_ASINT_v2f32
IL_ASINT_v2f64
IL_ASINT_v2i16
IL_ASINT_v2i32
IL_ASINT_v2i64
IL_ASINT_v2i8
IL_ASINT_v4f32
IL_ASINT_v4i16
IL_ASINT_v4i32
IL_ASINT_v4i8
IL_ASLONG_f32
IL_ASLONG_f64
IL_ASLONG_i16
IL_ASLONG_i32
IL_ASLONG_i64
IL_ASLONG_i8
IL_ASLONG_v2f32
IL_ASLONG_v2f64
IL_ASLONG_v2i16
IL_ASLONG_v2i32
IL_ASLONG_v2i64
IL_ASLONG_v2i8
IL_ASLONG_v4f32
IL_ASLONG_v4i16
IL_ASLONG_v4i32
IL_ASLONG_v4i8
IL_ASSHORT_f32
IL_ASSHORT_f64
IL_ASSHORT_i16
IL_ASSHORT_i32
IL_ASSHORT_i64
IL_ASSHORT_i8
IL_ASSHORT_v2f32
IL_ASSHORT_v2f64
IL_ASSHORT_v2i16
IL_ASSHORT_v2i32
IL_ASSHORT_v2i64
IL_ASSHORT_v2i8
IL_ASSHORT_v4f32
IL_ASSHORT_v4i16
IL_ASSHORT_v4i32
IL_ASSHORT_v4i8
IL_ASV2CHAR_f32
IL_ASV2CHAR_f64
IL_ASV2CHAR_i16
IL_ASV2CHAR_i32
IL_ASV2CHAR_i64
IL_ASV2CHAR_i8
IL_ASV2CHAR_v2f32
IL_ASV2CHAR_v2f64
IL_ASV2CHAR_v2i16
IL_ASV2CHAR_v2i32
IL_ASV2CHAR_v2i64
IL_ASV2CHAR_v2i8
IL_ASV2CHAR_v4f32
IL_ASV2CHAR_v4i16
IL_ASV2CHAR_v4i32
IL_ASV2CHAR_v4i8
IL_ASV2DOUBLE_f32
IL_ASV2DOUBLE_f64
IL_ASV2DOUBLE_i16
IL_ASV2DOUBLE_i32
IL_ASV2DOUBLE_i64
IL_ASV2DOUBLE_i8
IL_ASV2DOUBLE_v2f32
IL_ASV2DOUBLE_v2f64
IL_ASV2DOUBLE_v2i16
IL_ASV2DOUBLE_v2i32
IL_ASV2DOUBLE_v2i64
IL_ASV2DOUBLE_v2i8
IL_ASV2DOUBLE_v4f32
IL_ASV2DOUBLE_v4i16
IL_ASV2DOUBLE_v4i32
IL_ASV2DOUBLE_v4i8
IL_ASV2FLOAT_f32
IL_ASV2FLOAT_f64
IL_ASV2FLOAT_i16
IL_ASV2FLOAT_i32
IL_ASV2FLOAT_i64
IL_ASV2FLOAT_i8
IL_ASV2FLOAT_v2f32
IL_ASV2FLOAT_v2f64
IL_ASV2FLOAT_v2i16
IL_ASV2FLOAT_v2i32
IL_ASV2FLOAT_v2i64
IL_ASV2FLOAT_v2i8
IL_ASV2FLOAT_v4f32
IL_ASV2FLOAT_v4i16
IL_ASV2FLOAT_v4i32
IL_ASV2FLOAT_v4i8
IL_ASV2INT_f32
IL_ASV2INT_f64
IL_ASV2INT_i16
IL_ASV2INT_i32
IL_ASV2INT_i64
IL_ASV2INT_i8
IL_ASV2INT_v2f32
IL_ASV2INT_v2f64
IL_ASV2INT_v2i16
IL_ASV2INT_v2i32
IL_ASV2INT_v2i64
IL_ASV2INT_v2i8
IL_ASV2INT_v4f32
IL_ASV2INT_v4i16
IL_ASV2INT_v4i32
IL_ASV2INT_v4i8
IL_ASV2LONG_f32
IL_ASV2LONG_f64
IL_ASV2LONG_i16
IL_ASV2LONG_i32
IL_ASV2LONG_i64
IL_ASV2LONG_i8
IL_ASV2LONG_v2f32
IL_ASV2LONG_v2f64
IL_ASV2LONG_v2i16
IL_ASV2LONG_v2i32
IL_ASV2LONG_v2i64
IL_ASV2LONG_v2i8
IL_ASV2LONG_v4f32
IL_ASV2LONG_v4i16
IL_ASV2LONG_v4i32
IL_ASV2LONG_v4i8
IL_ASV2SHORT_f32
IL_ASV2SHORT_f64
IL_ASV2SHORT_i16
IL_ASV2SHORT_i32
IL_ASV2SHORT_i64
IL_ASV2SHORT_i8
IL_ASV2SHORT_v2f32
IL_ASV2SHORT_v2f64
IL_ASV2SHORT_v2i16
IL_ASV2SHORT_v2i32
IL_ASV2SHORT_v2i64
IL_ASV2SHORT_v2i8
IL_ASV2SHORT_v4f32
IL_ASV2SHORT_v4i16
IL_ASV2SHORT_v4i32
IL_ASV2SHORT_v4i8
IL_ASV4CHAR_f32
IL_ASV4CHAR_f64
IL_ASV4CHAR_i16
IL_ASV4CHAR_i32
IL_ASV4CHAR_i64
IL_ASV4CHAR_i8
IL_ASV4CHAR_v2f32
IL_ASV4CHAR_v2f64
IL_ASV4CHAR_v2i16
IL_ASV4CHAR_v2i32
IL_ASV4CHAR_v2i64
IL_ASV4CHAR_v2i8
IL_ASV4CHAR_v4f32
IL_ASV4CHAR_v4i16
IL_ASV4CHAR_v4i32
IL_ASV4CHAR_v4i8
IL_ASV4FLOAT_f32
IL_ASV4FLOAT_f64
IL_ASV4FLOAT_i16
IL_ASV4FLOAT_i32
IL_ASV4FLOAT_i64
IL_ASV4FLOAT_i8
IL_ASV4FLOAT_v2f32
IL_ASV4FLOAT_v2f64
IL_ASV4FLOAT_v2i16
IL_ASV4FLOAT_v2i32
IL_ASV4FLOAT_v2i64
IL_ASV4FLOAT_v2i8
IL_ASV4FLOAT_v4f32
IL_ASV4FLOAT_v4i16
IL_ASV4FLOAT_v4i32
IL_ASV4FLOAT_v4i8
IL_ASV4INT_f32
IL_ASV4INT_f64
IL_ASV4INT_i16
IL_ASV4INT_i32
IL_ASV4INT_i64
IL_ASV4INT_i8
IL_ASV4INT_v2f32
IL_ASV4INT_v2f64
IL_ASV4INT_v2i16
IL_ASV4INT_v2i32
IL_ASV4INT_v2i64
IL_ASV4INT_v2i8
IL_ASV4INT_v4f32
IL_ASV4INT_v4i16
IL_ASV4INT_v4i32
IL_ASV4INT_v4i8
IL_ASV4SHORT_f32
IL_ASV4SHORT_f64
IL_ASV4SHORT_i16
IL_ASV4SHORT_i32
IL_ASV4SHORT_i64
IL_ASV4SHORT_i8
IL_ASV4SHORT_v2f32
IL_ASV4SHORT_v2f64
IL_ASV4SHORT_v2i16
IL_ASV4SHORT_v2i32
IL_ASV4SHORT_v2i64
IL_ASV4SHORT_v2i8
IL_ASV4SHORT_v4f32
IL_ASV4SHORT_v4i16
IL_ASV4SHORT_v4i32
IL_ASV4SHORT_v4i8
IMAD24_i32
IMAD24_v2i32
IMAD24_v4i32
IMAD_i32
IMAD_v2i32
IMAD_v4i32
IMAGE1D64_INFO0
IMAGE1D64_INFO1
IMAGE1D64_READ
IMAGE1D64_READ_UNNORM
IMAGE1D64_WRITE
IMAGE1DA64_INFO0
IMAGE1DA64_INFO1
IMAGE1DA64_READ
IMAGE1DA64_READ_UNNORM
IMAGE1DA64_WRITE
IMAGE1DA_INFO0
IMAGE1DA_INFO1
IMAGE1DA_READ
IMAGE1DA_READ_UNNORM
IMAGE1DA_WRITE
IMAGE1DB64_INFO0
IMAGE1DB64_INFO1
IMAGE1DB64_READ
IMAGE1DB64_READ_UNNORM
IMAGE1DB64_WRITE
IMAGE1DB_INFO0
IMAGE1DB_INFO1
IMAGE1DB_READ
IMAGE1DB_READ_UNNORM
IMAGE1DB_WRITE
IMAGE1D_INFO0
IMAGE1D_INFO1
IMAGE1D_READ
IMAGE1D_READ_UNNORM
IMAGE1D_WRITE
IMAGE2D64_INFO0
IMAGE2D64_INFO1
IMAGE2D64_READ
IMAGE2D64_READ_UNNORM
IMAGE2D64_WRITE
IMAGE2DA64_INFO0
IMAGE2DA64_INFO1
IMAGE2DA64_READ
IMAGE2DA64_READ_UNNORM
IMAGE2DA64_WRITE
IMAGE2DA_INFO0
IMAGE2DA_INFO1
IMAGE2DA_READ
IMAGE2DA_READ_UNNORM
IMAGE2DA_WRITE
IMAGE2D_INFO0
IMAGE2D_INFO1
IMAGE2D_READ
IMAGE2D_READ_UNNORM
IMAGE2D_WRITE
IMAGE3D64_INFO0
IMAGE3D64_INFO1
IMAGE3D64_READ
IMAGE3D64_READ_UNNORM
IMAGE3D64_WRITE
IMAGE3D_INFO0
IMAGE3D_INFO1
IMAGE3D_READ
IMAGE3D_READ_UNNORM
IMAGE3D_WRITE
IMAX3_i32
IMAX3_v2i32
IMAX3_v4i32
IMAX64_i64
IMAX_i32
IMAX_v2i32
IMAX_v4i32
IMED3_i32
IMED3_v2i32
IMED3_v4i32
IMIN3_i32
IMIN3_v2i32
IMIN3_v4i32
IMIN64_i64
IMIN_i32
IMIN_v2i32
IMIN_v4i32
IMUL24_i32
IMUL24_v2i32
IMUL24_v4i32
IMULHI24_i32
IMULHI24_v2i32
IMULHI24_v4i32
IMULHI_i32
IMULHI_v2i32
IMULHI_v4i32
INE_v2i32
INE_v4i32
INTTOANY_f32
INTTOANY_i16
INTTOANY_i32
INTTOANY_i8
ITOD
ITOF
ITOF_v2f32
ITOF_v4f32
LADD_i64
LADD_v2i64
LCREATE
LCREATE_v2i64
LDEXP_f32
LDEXP_f64
LDEXP_v2f32
LDEXP_v2f64
LDEXP_v4f32
LDSLOAD
LDSLOAD64
LDSLOAD64_i16
LDSLOAD64_i8
LDSLOAD64_u16
LDSLOAD64_u8
LDSLOADVEC
LDSLOADVEC64
LDSLOADVEC64_v2i32
LDSLOADVEC64_v4i32
LDSLOADVEC_v2i32
LDSLOADVEC_v4i32
LDSLOAD_i16
LDSLOAD_i8
LDSLOAD_u16
LDSLOAD_u8
LDSSTORE
LDSSTORE64
LDSSTORE64_i16
LDSSTORE64_i8
LDSSTOREVEC
LDSSTOREVEC64
LDSSTOREVEC64_v2i32
LDSSTOREVEC64_v4i32
LDSSTOREVEC_v2i32
LDSSTOREVEC_v4i32
LDSSTORE_i16
LDSSTORE_i8
LENGTH_f32
LENGTH_v2f32
LENGTH_v4f32
LERP_f32
LERP_v2f32
LERP_v4f32
LHI_v2i64
LLO_v2i64
LNEGATE
LNEGATE_v2i64
LN_f32
LOADCONST_f32
LOADCONST_f64
LOADCONST_i16
LOADCONST_i32
LOADCONST_i64
LOADCONST_i8
LOCALAEXTLOAD64_f32
LOCALAEXTLOAD64_f64
LOCALAEXTLOAD64_i16
LOCALAEXTLOAD64_i32
LOCALAEXTLOAD64_i64
LOCALAEXTLOAD64_i8
LOCALAEXTLOAD64_v2f32
LOCALAEXTLOAD64_v2f64
LOCALAEXTLOAD64_v2i16
LOCALAEXTLOAD64_v2i32
LOCALAEXTLOAD64_v2i64
LOCALAEXTLOAD64_v2i8
LOCALAEXTLOAD64_v4f32
LOCALAEXTLOAD64_v4i16
LOCALAEXTLOAD64_v4i32
LOCALAEXTLOAD64_v4i8
LOCALAEXTLOAD_f32
LOCALAEXTLOAD_f64
LOCALAEXTLOAD_i16
LOCALAEXTLOAD_i32
LOCALAEXTLOAD_i64
LOCALAEXTLOAD_i8
LOCALAEXTLOAD_v2f32
LOCALAEXTLOAD_v2f64
LOCALAEXTLOAD_v2i16
LOCALAEXTLOAD_v2i32
LOCALAEXTLOAD_v2i64
LOCALAEXTLOAD_v2i8
LOCALAEXTLOAD_v4f32
LOCALAEXTLOAD_v4i16
LOCALAEXTLOAD_v4i32
LOCALAEXTLOAD_v4i8
LOCALLOAD64_f32
LOCALLOAD64_f64
LOCALLOAD64_i16
LOCALLOAD64_i32
LOCALLOAD64_i64
LOCALLOAD64_i8
LOCALLOAD64_v2f32
LOCALLOAD64_v2f64
LOCALLOAD64_v2i16
LOCALLOAD64_v2i32
LOCALLOAD64_v2i64
LOCALLOAD64_v2i8
LOCALLOAD64_v4f32
LOCALLOAD64_v4i16
LOCALLOAD64_v4i32
LOCALLOAD64_v4i8
LOCALLOAD_f32
LOCALLOAD_f64
LOCALLOAD_i16
LOCALLOAD_i32
LOCALLOAD_i64
LOCALLOAD_i8
LOCALLOAD_v2f32
LOCALLOAD_v2f64
LOCALLOAD_v2i16
LOCALLOAD_v2i32
LOCALLOAD_v2i64
LOCALLOAD_v2i8
LOCALLOAD_v4f32
LOCALLOAD_v4i16
LOCALLOAD_v4i32
LOCALLOAD_v4i8
LOCALSEXTLOAD64_f32
LOCALSEXTLOAD64_f64
LOCALSEXTLOAD64_i16
LOCALSEXTLOAD64_i32
LOCALSEXTLOAD64_i64
LOCALSEXTLOAD64_i8
LOCALSEXTLOAD64_v2f32
LOCALSEXTLOAD64_v2f64
LOCALSEXTLOAD64_v2i16
LOCALSEXTLOAD64_v2i32
LOCALSEXTLOAD64_v2i64
LOCALSEXTLOAD64_v2i8
LOCALSEXTLOAD64_v4f32
LOCALSEXTLOAD64_v4i16
LOCALSEXTLOAD64_v4i32
LOCALSEXTLOAD64_v4i8
LOCALSEXTLOAD_f32
LOCALSEXTLOAD_f64
LOCALSEXTLOAD_i16
LOCALSEXTLOAD_i32
LOCALSEXTLOAD_i64
LOCALSEXTLOAD_i8
LOCALSEXTLOAD_v2f32
LOCALSEXTLOAD_v2f64
LOCALSEXTLOAD_v2i16
LOCALSEXTLOAD_v2i32
LOCALSEXTLOAD_v2i64
LOCALSEXTLOAD_v2i8
LOCALSEXTLOAD_v4f32
LOCALSEXTLOAD_v4i16
LOCALSEXTLOAD_v4i32
LOCALSEXTLOAD_v4i8
LOCALSTORE64_f32
LOCALSTORE64_f64
LOCALSTORE64_i16
LOCALSTORE64_i32
LOCALSTORE64_i64
LOCALSTORE64_i8
LOCALSTORE64_v2f32
LOCALSTORE64_v2f64
LOCALSTORE64_v2i16
LOCALSTORE64_v2i32
LOCALSTORE64_v2i64
LOCALSTORE64_v2i8
LOCALSTORE64_v4f32
LOCALSTORE64_v4i16
LOCALSTORE64_v4i32
LOCALSTORE64_v4i8
LOCALSTORE_f32
LOCALSTORE_f64
LOCALSTORE_i16
LOCALSTORE_i32
LOCALSTORE_i64
LOCALSTORE_i8
LOCALSTORE_v2f32
LOCALSTORE_v2f64
LOCALSTORE_v2i16
LOCALSTORE_v2i32
LOCALSTORE_v2i64
LOCALSTORE_v2i8
LOCALSTORE_v4f32
LOCALSTORE_v4i16
LOCALSTORE_v4i32
LOCALSTORE_v4i8
LOCALTRUNCSTORE64_f64f32
LOCALTRUNCSTORE64_i16i8
LOCALTRUNCSTORE64_i32i16
LOCALTRUNCSTORE64_i32i8
LOCALTRUNCSTORE64_i64i16
LOCALTRUNCSTORE64_i64i32
LOCALTRUNCSTORE64_i64i8
LOCALTRUNCSTORE64_v2f64f32
LOCALTRUNCSTORE64_v2i16i8
LOCALTRUNCSTORE64_v2i32i16
LOCALTRUNCSTORE64_v2i32i8
LOCALTRUNCSTORE64_v2i64i16
LOCALTRUNCSTORE64_v2i64i32
LOCALTRUNCSTORE64_v2i64i8
LOCALTRUNCSTORE64_v4i16i8
LOCALTRUNCSTORE64_v4i32i16
LOCALTRUNCSTORE64_v4i32i8
LOCALTRUNCSTORE_f64f32
LOCALTRUNCSTORE_i16i8
LOCALTRUNCSTORE_i32i16
LOCALTRUNCSTORE_i32i8
LOCALTRUNCSTORE_i64i16
LOCALTRUNCSTORE_i64i32
LOCALTRUNCSTORE_i64i8
LOCALTRUNCSTORE_v2f64f32
LOCALTRUNCSTORE_v2i16i8
LOCALTRUNCSTORE_v2i32i16
LOCALTRUNCSTORE_v2i32i8
LOCALTRUNCSTORE_v2i64i16
LOCALTRUNCSTORE_v2i64i32
LOCALTRUNCSTORE_v2i64i8
LOCALTRUNCSTORE_v4i16i8
LOCALTRUNCSTORE_v4i32i16
LOCALTRUNCSTORE_v4i32i8
LOCALZEXTLOAD64_f32
LOCALZEXTLOAD64_f64
LOCALZEXTLOAD64_i16
LOCALZEXTLOAD64_i32
LOCALZEXTLOAD64_i64
LOCALZEXTLOAD64_i8
LOCALZEXTLOAD64_v2f32
LOCALZEXTLOAD64_v2f64
LOCALZEXTLOAD64_v2i16
LOCALZEXTLOAD64_v2i32
LOCALZEXTLOAD64_v2i64
LOCALZEXTLOAD64_v2i8
LOCALZEXTLOAD64_v4f32
LOCALZEXTLOAD64_v4i16
LOCALZEXTLOAD64_v4i32
LOCALZEXTLOAD64_v4i8
LOCALZEXTLOAD_f32
LOCALZEXTLOAD_f64
LOCALZEXTLOAD_i16
LOCALZEXTLOAD_i32
LOCALZEXTLOAD_i64
LOCALZEXTLOAD_i8
LOCALZEXTLOAD_v2f32
LOCALZEXTLOAD_v2f64
LOCALZEXTLOAD_v2i16
LOCALZEXTLOAD_v2i32
LOCALZEXTLOAD_v2i64
LOCALZEXTLOAD_v2i8
LOCALZEXTLOAD_v4f32
LOCALZEXTLOAD_v4i16
LOCALZEXTLOAD_v4i32
LOCALZEXTLOAD_v4i8
LOGVEC_f32
LOGVEC_v2f32
LOGVEC_v4f32
LOG_f32
LSHL
LSHL_APPLE
LSHR
LSHR_APPLE
LUSHR
LUSHR_APPLE
MACRO__ddiv_f64
MACRO__ddiv_f64_fma
MACRO__ftol_i64
MACRO__ltof_f32
MACRO__mul_i64
MACRO__mul_v2i64
MACRO__sdiv_i16
MACRO__sdiv_i32
MACRO__sdiv_i64
MACRO__sdiv_i8
MACRO__shl_apple_i64
MACRO__shl_apple_v2i64
MACRO__shl_i64
MACRO__shl_v2i64
MACRO__shr_apple_i64
MACRO__shr_apple_v2i64
MACRO__shr_i64
MACRO__shr_v2i64
MACRO__smod_i16
MACRO__smod_i32
MACRO__smod_i64
MACRO__smod_i8
MACRO__sra_apple_i64
MACRO__sra_apple_v2i64
MACRO__sra_i64
MACRO__sra_v2i64
MACRO__udiv_i16
MACRO__udiv_i32
MACRO__udiv_i64
MACRO__udiv_i8
MACRO__ultof_f32
MACRO__umod_i16
MACRO__umod_i32
MACRO__umod_i64
MACRO__umod_i8
MAD_RTE_f32
MAD_RTE_f64
MAD_RTE_v2f32
MAD_RTE_v4f32
MAD_RTN_f32
MAD_RTN_f64
MAD_RTN_v2f32
MAD_RTN_v4f32
MAD_RTP_f32
MAD_RTP_f64
MAD_RTP_v2f32
MAD_RTP_v4f32
MAD_RTZ_f32
MAD_RTZ_f64
MAD_RTZ_v2f32
MAD_RTZ_v4f32
MAD_f32
MAD_f64
MAD_v2f32
MAD_v2f64
MAD_v4f32
MAX3_f32
MAX3_v2f32
MAX3_v4f32
MAX_f32
MAX_f64
MAX_v2f32
MAX_v2f64
MAX_v4f32
MED3_f32
MED3_v2f32
MED3_v4f32
MEDIA_UNPACK_0
MEDIA_UNPACK_1
MEDIA_UNPACK_2
MEDIA_UNPACK_3
MIN3_f32
MIN3_v2f32
MIN3_v4f32
MIN_f32
MIN_f64
MIN_v2f32
MIN_v2f64
MIN_v4f32
MOD_f32
MOD_v2f32
MOD_v4f32
MOVE_f32
MOVE_f64
MOVE_i16
MOVE_i32
MOVE_i64
MOVE_i8
MOVE_v2f32
MOVE_v2f64
MOVE_v2i16
MOVE_v2i32
MOVE_v2i64
MOVE_v2i8
MOVE_v4f32
MOVE_v4i16
MOVE_v4i32
MOVE_v4i8
MQSAD_i64
MSAD_i32
MSAD_v2i32
MSAD_v4i32
MUL_IEEE_f32
MUL_IEEE_f64
MUL_IEEE_v2f32
MUL_IEEE_v2f64
MUL_IEEE_v4f32
MUL_RTE_f32
MUL_RTE_f64
MUL_RTE_v2f32
MUL_RTE_v4f32
MUL_RTN_f32
MUL_RTN_f64
MUL_RTN_v2f32
MUL_RTN_v4f32
MUL_RTP_f32
MUL_RTP_f64
MUL_RTP_v2f32
MUL_RTP_v4f32
MUL_RTZ_f32
MUL_RTZ_f64
MUL_RTZ_v2f32
MUL_RTZ_v4f32
NATIVE_UDIV_i32
NATIVE_UDIV_v2i32
NATIVE_UDIV_v4i32
NEAR_f32
NEAR_v2f32
NEAR_v4f32
NEGATE_i16
NEGATE_i32
NEGATE_i8
NEGATE_v2i16
NEGATE_v2i32
NEGATE_v2i8
NEGATE_v4i16
NEGATE_v4i32
NEGATE_v4i8
NEG_f32
NEG_f64
NEG_v2f32
NEG_v2f64
NEG_v4f32
PHIMOVE_f32
PHIMOVE_f64
PHIMOVE_i16
PHIMOVE_i32
PHIMOVE_i64
PHIMOVE_i8
PHIMOVE_v2f32
PHIMOVE_v2f64
PHIMOVE_v2i16
PHIMOVE_v2i32
PHIMOVE_v2i64
PHIMOVE_v2i8
PHIMOVE_v4f32
PHIMOVE_v4i16
PHIMOVE_v4i32
PHIMOVE_v4i8
PIREDUCE_f32
PIREDUCE_v2f32
PIREDUCE_v4f32
POW_f32
POW_v2f32
POW_v4f32
PRIVATEAEXTLOAD64_f32
PRIVATEAEXTLOAD64_f64
PRIVATEAEXTLOAD64_i16
PRIVATEAEXTLOAD64_i32
PRIVATEAEXTLOAD64_i64
PRIVATEAEXTLOAD64_i8
PRIVATEAEXTLOAD64_v2f32
PRIVATEAEXTLOAD64_v2f64
PRIVATEAEXTLOAD64_v2i16
PRIVATEAEXTLOAD64_v2i32
PRIVATEAEXTLOAD64_v2i64
PRIVATEAEXTLOAD64_v2i8
PRIVATEAEXTLOAD64_v4f32
PRIVATEAEXTLOAD64_v4i16
PRIVATEAEXTLOAD64_v4i32
PRIVATEAEXTLOAD64_v4i8
PRIVATEAEXTLOAD_f32
PRIVATEAEXTLOAD_f64
PRIVATEAEXTLOAD_i16
PRIVATEAEXTLOAD_i32
PRIVATEAEXTLOAD_i64
PRIVATEAEXTLOAD_i8
PRIVATEAEXTLOAD_v2f32
PRIVATEAEXTLOAD_v2f64
PRIVATEAEXTLOAD_v2i16
PRIVATEAEXTLOAD_v2i32
PRIVATEAEXTLOAD_v2i64
PRIVATEAEXTLOAD_v2i8
PRIVATEAEXTLOAD_v4f32
PRIVATEAEXTLOAD_v4i16
PRIVATEAEXTLOAD_v4i32
PRIVATEAEXTLOAD_v4i8
PRIVATELOAD64_f32
PRIVATELOAD64_f64
PRIVATELOAD64_i16
PRIVATELOAD64_i32
PRIVATELOAD64_i64
PRIVATELOAD64_i8
PRIVATELOAD64_v2f32
PRIVATELOAD64_v2f64
PRIVATELOAD64_v2i16
PRIVATELOAD64_v2i32
PRIVATELOAD64_v2i64
PRIVATELOAD64_v2i8
PRIVATELOAD64_v4f32
PRIVATELOAD64_v4i16
PRIVATELOAD64_v4i32
PRIVATELOAD64_v4i8
PRIVATELOAD_f32
PRIVATELOAD_f64
PRIVATELOAD_i16
PRIVATELOAD_i32
PRIVATELOAD_i64
PRIVATELOAD_i8
PRIVATELOAD_v2f32
PRIVATELOAD_v2f64
PRIVATELOAD_v2i16
PRIVATELOAD_v2i32
PRIVATELOAD_v2i64
PRIVATELOAD_v2i8
PRIVATELOAD_v4f32
PRIVATELOAD_v4i16
PRIVATELOAD_v4i32
PRIVATELOAD_v4i8
PRIVATESEXTLOAD64_f32
PRIVATESEXTLOAD64_f64
PRIVATESEXTLOAD64_i16
PRIVATESEXTLOAD64_i32
PRIVATESEXTLOAD64_i64
PRIVATESEXTLOAD64_i8
PRIVATESEXTLOAD64_v2f32
PRIVATESEXTLOAD64_v2f64
PRIVATESEXTLOAD64_v2i16
PRIVATESEXTLOAD64_v2i32
PRIVATESEXTLOAD64_v2i64
PRIVATESEXTLOAD64_v2i8
PRIVATESEXTLOAD64_v4f32
PRIVATESEXTLOAD64_v4i16
PRIVATESEXTLOAD64_v4i32
PRIVATESEXTLOAD64_v4i8
PRIVATESEXTLOAD_f32
PRIVATESEXTLOAD_f64
PRIVATESEXTLOAD_i16
PRIVATESEXTLOAD_i32
PRIVATESEXTLOAD_i64
PRIVATESEXTLOAD_i8
PRIVATESEXTLOAD_v2f32
PRIVATESEXTLOAD_v2f64
PRIVATESEXTLOAD_v2i16
PRIVATESEXTLOAD_v2i32
PRIVATESEXTLOAD_v2i64
PRIVATESEXTLOAD_v2i8
PRIVATESEXTLOAD_v4f32
PRIVATESEXTLOAD_v4i16
PRIVATESEXTLOAD_v4i32
PRIVATESEXTLOAD_v4i8
PRIVATESTORE64_f32
PRIVATESTORE64_f64
PRIVATESTORE64_i16
PRIVATESTORE64_i32
PRIVATESTORE64_i64
PRIVATESTORE64_i8
PRIVATESTORE64_v2f32
PRIVATESTORE64_v2f64
PRIVATESTORE64_v2i16
PRIVATESTORE64_v2i32
PRIVATESTORE64_v2i64
PRIVATESTORE64_v2i8
PRIVATESTORE64_v4f32
PRIVATESTORE64_v4i16
PRIVATESTORE64_v4i32
PRIVATESTORE64_v4i8
PRIVATESTORE_f32
PRIVATESTORE_f64
PRIVATESTORE_i16
PRIVATESTORE_i32
PRIVATESTORE_i64
PRIVATESTORE_i8
PRIVATESTORE_v2f32
PRIVATESTORE_v2f64
PRIVATESTORE_v2i16
PRIVATESTORE_v2i32
PRIVATESTORE_v2i64
PRIVATESTORE_v2i8
PRIVATESTORE_v4f32
PRIVATESTORE_v4i16
PRIVATESTORE_v4i32
PRIVATESTORE_v4i8
PRIVATETRUNCSTORE64_f64f32
PRIVATETRUNCSTORE64_i16i8
PRIVATETRUNCSTORE64_i32i16
PRIVATETRUNCSTORE64_i32i8
PRIVATETRUNCSTORE64_i64i16
PRIVATETRUNCSTORE64_i64i32
PRIVATETRUNCSTORE64_i64i8
PRIVATETRUNCSTORE64_v2f64f32
PRIVATETRUNCSTORE64_v2i16i8
PRIVATETRUNCSTORE64_v2i32i16
PRIVATETRUNCSTORE64_v2i32i8
PRIVATETRUNCSTORE64_v2i64i16
PRIVATETRUNCSTORE64_v2i64i32
PRIVATETRUNCSTORE64_v2i64i8
PRIVATETRUNCSTORE64_v4i16i8
PRIVATETRUNCSTORE64_v4i32i16
PRIVATETRUNCSTORE64_v4i32i8
PRIVATETRUNCSTORE_f64f32
PRIVATETRUNCSTORE_i16i8
PRIVATETRUNCSTORE_i32i16
PRIVATETRUNCSTORE_i32i8
PRIVATETRUNCSTORE_i64i16
PRIVATETRUNCSTORE_i64i32
PRIVATETRUNCSTORE_i64i8
PRIVATETRUNCSTORE_v2f64f32
PRIVATETRUNCSTORE_v2i16i8
PRIVATETRUNCSTORE_v2i32i16
PRIVATETRUNCSTORE_v2i32i8
PRIVATETRUNCSTORE_v2i64i16
PRIVATETRUNCSTORE_v2i64i32
PRIVATETRUNCSTORE_v2i64i8
PRIVATETRUNCSTORE_v4i16i8
PRIVATETRUNCSTORE_v4i32i16
PRIVATETRUNCSTORE_v4i32i8
PRIVATEZEXTLOAD64_f32
PRIVATEZEXTLOAD64_f64
PRIVATEZEXTLOAD64_i16
PRIVATEZEXTLOAD64_i32
PRIVATEZEXTLOAD64_i64
PRIVATEZEXTLOAD64_i8
PRIVATEZEXTLOAD64_v2f32
PRIVATEZEXTLOAD64_v2f64
PRIVATEZEXTLOAD64_v2i16
PRIVATEZEXTLOAD64_v2i32
PRIVATEZEXTLOAD64_v2i64
PRIVATEZEXTLOAD64_v2i8
PRIVATEZEXTLOAD64_v4f32
PRIVATEZEXTLOAD64_v4i16
PRIVATEZEXTLOAD64_v4i32
PRIVATEZEXTLOAD64_v4i8
PRIVATEZEXTLOAD_f32
PRIVATEZEXTLOAD_f64
PRIVATEZEXTLOAD_i16
PRIVATEZEXTLOAD_i32
PRIVATEZEXTLOAD_i64
PRIVATEZEXTLOAD_i8
PRIVATEZEXTLOAD_v2f32
PRIVATEZEXTLOAD_v2f64
PRIVATEZEXTLOAD_v2i16
PRIVATEZEXTLOAD_v2i32
PRIVATEZEXTLOAD_v2i64
PRIVATEZEXTLOAD_v2i8
PRIVATEZEXTLOAD_v4f32
PRIVATEZEXTLOAD_v4i16
PRIVATEZEXTLOAD_v4i32
PRIVATEZEXTLOAD_v4i8
QSAD_i64
RCP_f64
REGIONAEXTLOAD64_f32
REGIONAEXTLOAD64_f64
REGIONAEXTLOAD64_i16
REGIONAEXTLOAD64_i32
REGIONAEXTLOAD64_i64
REGIONAEXTLOAD64_i8
REGIONAEXTLOAD64_v2f32
REGIONAEXTLOAD64_v2f64
REGIONAEXTLOAD64_v2i16
REGIONAEXTLOAD64_v2i32
REGIONAEXTLOAD64_v2i64
REGIONAEXTLOAD64_v2i8
REGIONAEXTLOAD64_v4f32
REGIONAEXTLOAD64_v4i16
REGIONAEXTLOAD64_v4i32
REGIONAEXTLOAD64_v4i8
REGIONAEXTLOAD_f32
REGIONAEXTLOAD_f64
REGIONAEXTLOAD_i16
REGIONAEXTLOAD_i32
REGIONAEXTLOAD_i64
REGIONAEXTLOAD_i8
REGIONAEXTLOAD_v2f32
REGIONAEXTLOAD_v2f64
REGIONAEXTLOAD_v2i16
REGIONAEXTLOAD_v2i32
REGIONAEXTLOAD_v2i64
REGIONAEXTLOAD_v2i8
REGIONAEXTLOAD_v4f32
REGIONAEXTLOAD_v4i16
REGIONAEXTLOAD_v4i32
REGIONAEXTLOAD_v4i8
REGIONLOAD64_f32
REGIONLOAD64_f64
REGIONLOAD64_i16
REGIONLOAD64_i32
REGIONLOAD64_i64
REGIONLOAD64_i8
REGIONLOAD64_v2f32
REGIONLOAD64_v2f64
REGIONLOAD64_v2i16
REGIONLOAD64_v2i32
REGIONLOAD64_v2i64
REGIONLOAD64_v2i8
REGIONLOAD64_v4f32
REGIONLOAD64_v4i16
REGIONLOAD64_v4i32
REGIONLOAD64_v4i8
REGIONLOAD_f32
REGIONLOAD_f64
REGIONLOAD_i16
REGIONLOAD_i32
REGIONLOAD_i64
REGIONLOAD_i8
REGIONLOAD_v2f32
REGIONLOAD_v2f64
REGIONLOAD_v2i16
REGIONLOAD_v2i32
REGIONLOAD_v2i64
REGIONLOAD_v2i8
REGIONLOAD_v4f32
REGIONLOAD_v4i16
REGIONLOAD_v4i32
REGIONLOAD_v4i8
REGIONSEXTLOAD64_f32
REGIONSEXTLOAD64_f64
REGIONSEXTLOAD64_i16
REGIONSEXTLOAD64_i32
REGIONSEXTLOAD64_i64
REGIONSEXTLOAD64_i8
REGIONSEXTLOAD64_v2f32
REGIONSEXTLOAD64_v2f64
REGIONSEXTLOAD64_v2i16
REGIONSEXTLOAD64_v2i32
REGIONSEXTLOAD64_v2i64
REGIONSEXTLOAD64_v2i8
REGIONSEXTLOAD64_v4f32
REGIONSEXTLOAD64_v4i16
REGIONSEXTLOAD64_v4i32
REGIONSEXTLOAD64_v4i8
REGIONSEXTLOAD_f32
REGIONSEXTLOAD_f64
REGIONSEXTLOAD_i16
REGIONSEXTLOAD_i32
REGIONSEXTLOAD_i64
REGIONSEXTLOAD_i8
REGIONSEXTLOAD_v2f32
REGIONSEXTLOAD_v2f64
REGIONSEXTLOAD_v2i16
REGIONSEXTLOAD_v2i32
REGIONSEXTLOAD_v2i64
REGIONSEXTLOAD_v2i8
REGIONSEXTLOAD_v4f32
REGIONSEXTLOAD_v4i16
REGIONSEXTLOAD_v4i32
REGIONSEXTLOAD_v4i8
REGIONSTORE64_f32
REGIONSTORE64_f64
REGIONSTORE64_i16
REGIONSTORE64_i32
REGIONSTORE64_i64
REGIONSTORE64_i8
REGIONSTORE64_v2f32
REGIONSTORE64_v2f64
REGIONSTORE64_v2i16
REGIONSTORE64_v2i32
REGIONSTORE64_v2i64
REGIONSTORE64_v2i8
REGIONSTORE64_v4f32
REGIONSTORE64_v4i16
REGIONSTORE64_v4i32
REGIONSTORE64_v4i8
REGIONSTORE_f32
REGIONSTORE_f64
REGIONSTORE_i16
REGIONSTORE_i32
REGIONSTORE_i64
REGIONSTORE_i8
REGIONSTORE_v2f32
REGIONSTORE_v2f64
REGIONSTORE_v2i16
REGIONSTORE_v2i32
REGIONSTORE_v2i64
REGIONSTORE_v2i8
REGIONSTORE_v4f32
REGIONSTORE_v4i16
REGIONSTORE_v4i32
REGIONSTORE_v4i8
REGIONTRUNCSTORE64_f64f32
REGIONTRUNCSTORE64_i16i8
REGIONTRUNCSTORE64_i32i16
REGIONTRUNCSTORE64_i32i8
REGIONTRUNCSTORE64_i64i16
REGIONTRUNCSTORE64_i64i32
REGIONTRUNCSTORE64_i64i8
REGIONTRUNCSTORE64_v2f64f32
REGIONTRUNCSTORE64_v2i16i8
REGIONTRUNCSTORE64_v2i32i16
REGIONTRUNCSTORE64_v2i32i8
REGIONTRUNCSTORE64_v2i64i16
REGIONTRUNCSTORE64_v2i64i32
REGIONTRUNCSTORE64_v2i64i8
REGIONTRUNCSTORE64_v4i16i8
REGIONTRUNCSTORE64_v4i32i16
REGIONTRUNCSTORE64_v4i32i8
REGIONTRUNCSTORE_f64f32
REGIONTRUNCSTORE_i16i8
REGIONTRUNCSTORE_i32i16
REGIONTRUNCSTORE_i32i8
REGIONTRUNCSTORE_i64i16
REGIONTRUNCSTORE_i64i32
REGIONTRUNCSTORE_i64i8
REGIONTRUNCSTORE_v2f64f32
REGIONTRUNCSTORE_v2i16i8
REGIONTRUNCSTORE_v2i32i16
REGIONTRUNCSTORE_v2i32i8
REGIONTRUNCSTORE_v2i64i16
REGIONTRUNCSTORE_v2i64i32
REGIONTRUNCSTORE_v2i64i8
REGIONTRUNCSTORE_v4i16i8
REGIONTRUNCSTORE_v4i32i16
REGIONTRUNCSTORE_v4i32i8
REGIONZEXTLOAD64_f32
REGIONZEXTLOAD64_f64
REGIONZEXTLOAD64_i16
REGIONZEXTLOAD64_i32
REGIONZEXTLOAD64_i64
REGIONZEXTLOAD64_i8
REGIONZEXTLOAD64_v2f32
REGIONZEXTLOAD64_v2f64
REGIONZEXTLOAD64_v2i16
REGIONZEXTLOAD64_v2i32
REGIONZEXTLOAD64_v2i64
REGIONZEXTLOAD64_v2i8
REGIONZEXTLOAD64_v4f32
REGIONZEXTLOAD64_v4i16
REGIONZEXTLOAD64_v4i32
REGIONZEXTLOAD64_v4i8
REGIONZEXTLOAD_f32
REGIONZEXTLOAD_f64
REGIONZEXTLOAD_i16
REGIONZEXTLOAD_i32
REGIONZEXTLOAD_i64
REGIONZEXTLOAD_i8
REGIONZEXTLOAD_v2f32
REGIONZEXTLOAD_v2f64
REGIONZEXTLOAD_v2i16
REGIONZEXTLOAD_v2i32
REGIONZEXTLOAD_v2i64
REGIONZEXTLOAD_v2i8
REGIONZEXTLOAD_v4f32
REGIONZEXTLOAD_v4i16
REGIONZEXTLOAD_v4i32
REGIONZEXTLOAD_v4i8
RETDYN
RETURN
RND_Z_f32
RND_Z_v2f32
RND_Z_v4f32
ROUND_NEAREST_f32
ROUND_NEAREST_v2f32
ROUND_NEAREST_v4f32
ROUND_NEGINF_f32
ROUND_NEGINF_v2f32
ROUND_NEGINF_v4f32
ROUND_POSINF_f32
ROUND_POSINF_v2f32
ROUND_POSINF_v4f32
ROUND_ZERO_f32
ROUND_ZERO_v2f32
ROUND_ZERO_v4f32
RSQVEC_f32
RSQVEC_v2f32
RSQVEC_v4f32
RSQ_f32
RSQ_f64
SAD16_i32
SAD16_v2i32
SAD16_v4i32
SAD32_i32
SAD32_v2i32
SAD32_v4i32
SAD4_i32
SADHI_i32
SADHI_v2i32
SADHI_v4i32
SAD_i32
SAD_v2i32
SAD_v4i32
SCRATCHLOAD
SCRATCHLOAD64
SCRATCHSTORE
SCRATCHSTORE64
SDIV_i64
SDIV_v2i64
SELECTBIN_f32
SELECTBIN_f64
SELECTBIN_i16
SELECTBIN_i32
SELECTBIN_i64
SELECTBIN_i8
SEMAPHORE_INIT
SEMAPHORE_SIGNAL
SEMAPHORE_WAIT
SHLVEC_i16
SHLVEC_i32
SHLVEC_i8
SHLVEC_v2i16
SHLVEC_v2i32
SHLVEC_v2i8
SHLVEC_v4i16
SHLVEC_v4i32
SHLVEC_v4i8
SHL_i16
SHL_i32
SHL_i8
SHL_v2i16
SHL_v2i32
SHL_v2i8
SHL_v4i16
SHL_v4i32
SHL_v4i8
SHRVEC_i16
SHRVEC_i32
SHRVEC_i8
SHRVEC_v2i16
SHRVEC_v2i32
SHRVEC_v2i8
SHRVEC_v4i16
SHRVEC_v4i32
SHRVEC_v4i8
SHR_i16
SHR_i32
SHR_i8
SHR_v2i16
SHR_v2i32
SHR_v2i8
SHR_v4i16
SHR_v4i32
SHR_v4i8
SIGN_f32
SIGN_v2f32
SIGN_v4f32
SINVEC_f32
SINVEC_v2f32
SINVEC_v4f32
SIN_f32
SMAX_i16
SMAX_i32
SMAX_i64
SMAX_i8
SMAX_v2i16
SMAX_v2i32
SMAX_v2i64
SMAX_v2i8
SMAX_v4i16
SMAX_v4i32
SMAX_v4i8
SMOD_i64
SMOD_v2i64
SMULHI_i16
SMULHI_i32
SMULHI_i8
SMULHI_v2i16
SMULHI_v2i32
SMULHI_v2i8
SMULHI_v4i16
SMULHI_v4i32
SMULHI_v4i8
SMUL_i16
SMUL_i32
SMUL_i64
SMUL_i8
SMUL_v2i16
SMUL_v2i32
SMUL_v2i64
SMUL_v2i8
SMUL_v4i16
SMUL_v4i32
SMUL_v4i8
SQRTVEC_f32
SQRTVEC_v2f32
SQRTVEC_v4f32
SQRT_f32
SQRT_f64
SQRT_v2f64
SUB_RTE_f32
SUB_RTE_f64
SUB_RTE_v2f32
SUB_RTE_v4f32
SUB_RTN_f32
SUB_RTN_f64
SUB_RTN_v2f32
SUB_RTN_v4f32
SUB_RTP_f32
SUB_RTP_f64
SUB_RTP_v2f32
SUB_RTP_v4f32
SUB_RTZ_f32
SUB_RTZ_f64
SUB_RTZ_v2f32
SUB_RTZ_v4f32
SUB_f32
SUB_f64
SUB_v2f32
SUB_v2f64
SUB_v4f32
SWABS_f64
SWDABS_f64
SWITCH
TAN_f32
TRAP
U4LERP_i32
U4LERP_v2i32
U4LERP_v4i32
UAVARENALOAD_i16
UAVARENALOAD_i32
UAVARENALOAD_i8
UAVARENASTORE_i16
UAVARENASTORE_i32
UAVARENASTORE_i8
UAVRAWLOAD64_i16
UAVRAWLOAD64_i32
UAVRAWLOAD64_i8
UAVRAWLOAD64_u16
UAVRAWLOAD64_u8
UAVRAWLOAD64_v2i32
UAVRAWLOAD64_v4i32
UAVRAWLOADCACHED64_i16
UAVRAWLOADCACHED64_i32
UAVRAWLOADCACHED64_i8
UAVRAWLOADCACHED64_u16
UAVRAWLOADCACHED64_u8
UAVRAWLOADCACHED64_v2i32
UAVRAWLOADCACHED64_v4i32
UAVRAWLOADCACHEDALIGNED64_v2i32
UAVRAWLOADCACHEDALIGNED64_v4i32
UAVRAWLOADCACHEDALIGNED_v2i32
UAVRAWLOADCACHEDALIGNED_v4i32
UAVRAWLOADCACHED_i16
UAVRAWLOADCACHED_i32
UAVRAWLOADCACHED_i8
UAVRAWLOADCACHED_u16
UAVRAWLOADCACHED_u8
UAVRAWLOADCACHED_v2i32
UAVRAWLOADCACHED_v4i32
UAVRAWLOAD_i16
UAVRAWLOAD_i32
UAVRAWLOAD_i8
UAVRAWLOAD_u16
UAVRAWLOAD_u8
UAVRAWLOAD_v2i32
UAVRAWLOAD_v4i32
UAVRAWSTORE64_i16
UAVRAWSTORE64_i32
UAVRAWSTORE64_i8
UAVRAWSTORE64_v2i32
UAVRAWSTORE64_v4i32
UAVRAWSTORE_i16
UAVRAWSTORE_i32
UAVRAWSTORE_i8
UAVRAWSTORE_v2i32
UAVRAWSTORE_v4i32
UBIT_EXTRACT_i32
UBIT_EXTRACT_v2i32
UBIT_EXTRACT_v4i32
UBIT_INSERT_i32
UBIT_INSERT_v2i32
UBIT_INSERT_v4i32
UBIT_REVERSE_i32
UBIT_REVERSE_v2i32
UBIT_REVERSE_v4i32
UDIV_i16
UDIV_i32
UDIV_i64
UDIV_i8
UDIV_v2i16
UDIV_v2i32
UDIV_v2i64
UDIV_v2i8
UDIV_v4i16
UDIV_v4i32
UDIV_v4i8
UEQ_v2i32
UEQ_v4i32
UGE_v2i32
UGE_v4i32
UGT_v2i32
UGT_v4i32
ULE_v2i32
ULE_v4i32
ULGE
ULGT
ULLE
ULLT
ULT_v2i32
ULT_v4i32
UMAD24_i32
UMAD24_v2i32
UMAD24_v4i32
UMAD_i32
UMAD_v2i32
UMAD_v4i32
UMAX3_i32
UMAX3_v2i32
UMAX3_v4i32
UMAX64_i64
UMAX_i32
UMAX_v2i32
UMAX_v4i32
UMED3_i32
UMED3_v2i32
UMED3_v4i32
UMIN3_i32
UMIN3_v2i32
UMIN3_v4i32
UMIN64_i64
UMIN_i32
UMIN_v2i32
UMIN_v4i32
UMOD_i64
UMOD_v2i64
UMUL24_i32
UMUL24_v2i32
UMUL24_v4i32
UMULHI24_i32
UMULHI24_v2i32
UMULHI24_v4i32
UMULHI_INT_i32
UMULHI_INT_v2i32
UMULHI_INT_v4i32
UMULHI_i16
UMULHI_i32
UMULHI_i8
UMULHI_v2i16
UMULHI_v2i32
UMULHI_v2i8
UMULHI_v4i16
UMULHI_v4i32
UMULHI_v4i8
UMUL_i16
UMUL_i32
UMUL_i64
UMUL_i8
UMUL_v2i16
UMUL_v2i32
UMUL_v2i64
UMUL_v2i8
UMUL_v4i16
UMUL_v4i32
UMUL_v4i8
UNE_v2i32
UNE_v4i32
UNPACK_B0_f32
UNPACK_B0_v2f32
UNPACK_B0_v4f32
UNPACK_B1_f32
UNPACK_B1_v2f32
UNPACK_B1_v4f32
UNPACK_B2_f32
UNPACK_B2_v2f32
UNPACK_B2_v4f32
UNPACK_B3_f32
UNPACK_B3_v2f32
UNPACK_B3_v4f32
UNPACK_PAT0_1_i32
UNPACK_PAT0_i32
UNPACK_PAT1_1_i32
UNPACK_PAT1_i32
UNPACK_PAT2_1_i32
UNPACK_PAT2_i32
UNPACK_PAT3_1_i32
UNPACK_PAT3_i32
USHRVEC_i16
USHRVEC_i32
USHRVEC_i8
USHRVEC_v2i16
USHRVEC_v2i32
USHRVEC_v2i8
USHRVEC_v4i16
USHRVEC_v4i32
USHRVEC_v4i8
USHR_i16
USHR_i32
USHR_i8
USHR_v2i16
USHR_v2i32
USHR_v2i8
USHR_v4i16
USHR_v4i32
USHR_v4i8
UTOD
UTOF
UTOF_v2f32
UTOF_v4f32
VCONCAT_v2f32
VCONCAT_v2f64
VCONCAT_v2i16
VCONCAT_v2i32
VCONCAT_v2i64
VCONCAT_v2i8
VCONCAT_v4f32
VCONCAT_v4i16
VCONCAT_v4i32
VCONCAT_v4i8
VCREATE_v2f32
VCREATE_v2f64
VCREATE_v2i16
VCREATE_v2i32
VCREATE_v2i64
VCREATE_v2i8
VCREATE_v4f32
VCREATE_v4i16
VCREATE_v4i32
VCREATE_v4i8
VEXTRACT_v2f32
VEXTRACT_v2f64
VEXTRACT_v2i16
VEXTRACT_v2i32
VEXTRACT_v2i64
VEXTRACT_v2i8
VEXTRACT_v4f32
VEXTRACT_v4i16
VEXTRACT_v4i32
VEXTRACT_v4i8
VINSERT_v2f32
VINSERT_v2f64
VINSERT_v2i16
VINSERT_v2i32
VINSERT_v2i64
VINSERT_v2i8
VINSERT_v4f32
VINSERT_v4i16
VINSERT_v4i32
VINSERT_v4i8
WAVE_ID
WHILELOOP
llvm.AMDIL.abs
llvm.AMDIL.acos
llvm.AMDIL.add.rte
llvm.AMDIL.add.rtn
llvm.AMDIL.add.rtp
llvm.AMDIL.add.rtz
llvm.AMDIL.append.alloc.i32
llvm.AMDIL.append.alloc.i32.noret
llvm.AMDIL.append.consume.i32
llvm.AMDIL.append.consume.i32.noret
llvm.AMDIL.asin
llvm.AMDIL.atan
llvm.AMDIL.atomic.add.gi32
llvm.AMDIL.atomic.add.gi32.noret
llvm.AMDIL.atomic.add.gi64
llvm.AMDIL.atomic.add.gi64.noret
llvm.AMDIL.atomic.add.gu32
llvm.AMDIL.atomic.add.gu32.noret
llvm.AMDIL.atomic.add.gu64
llvm.AMDIL.atomic.add.gu64.noret
llvm.AMDIL.atomic.add.li32
llvm.AMDIL.atomic.add.li32.noret
llvm.AMDIL.atomic.add.li64
llvm.AMDIL.atomic.add.li64.noret
llvm.AMDIL.atomic.add.lu32
llvm.AMDIL.atomic.add.lu32.noret
llvm.AMDIL.atomic.add.lu64
llvm.AMDIL.atomic.add.lu64.noret
llvm.AMDIL.atomic.add.ri32
llvm.AMDIL.atomic.add.ri32.noret
llvm.AMDIL.atomic.add.ri64
llvm.AMDIL.atomic.add.ri64.noret
llvm.AMDIL.atomic.add.ru32
llvm.AMDIL.atomic.add.ru32.noret
llvm.AMDIL.atomic.add.ru64
llvm.AMDIL.atomic.add.ru64.noret
llvm.AMDIL.atomic.and.gi32
llvm.AMDIL.atomic.and.gi32.noret
llvm.AMDIL.atomic.and.gi64
llvm.AMDIL.atomic.and.gi64.noret
llvm.AMDIL.atomic.and.gu32
llvm.AMDIL.atomic.and.gu32.noret
llvm.AMDIL.atomic.and.gu64
llvm.AMDIL.atomic.and.gu64.noret
llvm.AMDIL.atomic.and.li32
llvm.AMDIL.atomic.and.li32.noret
llvm.AMDIL.atomic.and.li64
llvm.AMDIL.atomic.and.li64.noret
llvm.AMDIL.atomic.and.lu32
llvm.AMDIL.atomic.and.lu32.noret
llvm.AMDIL.atomic.and.lu64
llvm.AMDIL.atomic.and.lu64.noret
llvm.AMDIL.atomic.and.ri32
llvm.AMDIL.atomic.and.ri32.noret
llvm.AMDIL.atomic.and.ri64
llvm.AMDIL.atomic.and.ri64.noret
llvm.AMDIL.atomic.and.ru32
llvm.AMDIL.atomic.and.ru32.noret
llvm.AMDIL.atomic.and.ru64
llvm.AMDIL.atomic.and.ru64.noret
llvm.AMDIL.atomic.cmpxchg.gi32
llvm.AMDIL.atomic.cmpxchg.gi32.noret
llvm.AMDIL.atomic.cmpxchg.gi64
llvm.AMDIL.atomic.cmpxchg.gi64.noret
llvm.AMDIL.atomic.cmpxchg.gu32
llvm.AMDIL.atomic.cmpxchg.gu32.noret
llvm.AMDIL.atomic.cmpxchg.gu64
llvm.AMDIL.atomic.cmpxchg.gu64.noret
llvm.AMDIL.atomic.cmpxchg.li32
llvm.AMDIL.atomic.cmpxchg.li32.noret
llvm.AMDIL.atomic.cmpxchg.li64
llvm.AMDIL.atomic.cmpxchg.li64.noret
llvm.AMDIL.atomic.cmpxchg.lu32
llvm.AMDIL.atomic.cmpxchg.lu32.noret
llvm.AMDIL.atomic.cmpxchg.lu64
llvm.AMDIL.atomic.cmpxchg.lu64.noret
llvm.AMDIL.atomic.cmpxchg.ri32
llvm.AMDIL.atomic.cmpxchg.ri32.noret
llvm.AMDIL.atomic.cmpxchg.ri64
llvm.AMDIL.atomic.cmpxchg.ri64.noret
llvm.AMDIL.atomic.cmpxchg.ru32
llvm.AMDIL.atomic.cmpxchg.ru32.noret
llvm.AMDIL.atomic.cmpxchg.ru64
llvm.AMDIL.atomic.cmpxchg.ru64.noret
llvm.AMDIL.atomic.dec.gi32
llvm.AMDIL.atomic.dec.gi32.noret
llvm.AMDIL.atomic.dec.gi64
llvm.AMDIL.atomic.dec.gi64.noret
llvm.AMDIL.atomic.dec.gu32
llvm.AMDIL.atomic.dec.gu32.noret
llvm.AMDIL.atomic.dec.gu64
llvm.AMDIL.atomic.dec.gu64.noret
llvm.AMDIL.atomic.dec.li32
llvm.AMDIL.atomic.dec.li32.noret
llvm.AMDIL.atomic.dec.li64
llvm.AMDIL.atomic.dec.li64.noret
llvm.AMDIL.atomic.dec.lu32
llvm.AMDIL.atomic.dec.lu32.noret
llvm.AMDIL.atomic.dec.lu64
llvm.AMDIL.atomic.dec.lu64.noret
llvm.AMDIL.atomic.dec.ri32
llvm.AMDIL.atomic.dec.ri32.noret
llvm.AMDIL.atomic.dec.ri64
llvm.AMDIL.atomic.dec.ri64.noret
llvm.AMDIL.atomic.dec.ru32
llvm.AMDIL.atomic.dec.ru32.noret
llvm.AMDIL.atomic.dec.ru64
llvm.AMDIL.atomic.dec.ru64.noret
llvm.AMDIL.atomic.inc.gi32
llvm.AMDIL.atomic.inc.gi32.noret
llvm.AMDIL.atomic.inc.gi64
llvm.AMDIL.atomic.inc.gi64.noret
llvm.AMDIL.atomic.inc.gu32
llvm.AMDIL.atomic.inc.gu32.noret
llvm.AMDIL.atomic.inc.gu64
llvm.AMDIL.atomic.inc.gu64.noret
llvm.AMDIL.atomic.inc.li32
llvm.AMDIL.atomic.inc.li32.noret
llvm.AMDIL.atomic.inc.li64
llvm.AMDIL.atomic.inc.li64.noret
llvm.AMDIL.atomic.inc.lu32
llvm.AMDIL.atomic.inc.lu32.noret
llvm.AMDIL.atomic.inc.lu64
llvm.AMDIL.atomic.inc.lu64.noret
llvm.AMDIL.atomic.inc.ri32
llvm.AMDIL.atomic.inc.ri32.noret
llvm.AMDIL.atomic.inc.ri64
llvm.AMDIL.atomic.inc.ri64.noret
llvm.AMDIL.atomic.inc.ru32
llvm.AMDIL.atomic.inc.ru32.noret
llvm.AMDIL.atomic.inc.ru64
llvm.AMDIL.atomic.inc.ru64.noret
llvm.AMDIL.atomic.max.gi32
llvm.AMDIL.atomic.max.gi32.noret
llvm.AMDIL.atomic.max.gi64
llvm.AMDIL.atomic.max.gi64.noret
llvm.AMDIL.atomic.max.gu32
llvm.AMDIL.atomic.max.gu32.noret
llvm.AMDIL.atomic.max.gu64
llvm.AMDIL.atomic.max.gu64.noret
llvm.AMDIL.atomic.max.li32
llvm.AMDIL.atomic.max.li32.noret
llvm.AMDIL.atomic.max.li64
llvm.AMDIL.atomic.max.li64.noret
llvm.AMDIL.atomic.max.lu32
llvm.AMDIL.atomic.max.lu32.noret
llvm.AMDIL.atomic.max.lu64
llvm.AMDIL.atomic.max.lu64.noret
llvm.AMDIL.atomic.max.ri32
llvm.AMDIL.atomic.max.ri32.noret
llvm.AMDIL.atomic.max.ri64
llvm.AMDIL.atomic.max.ri64.noret
llvm.AMDIL.atomic.max.ru32
llvm.AMDIL.atomic.max.ru32.noret
llvm.AMDIL.atomic.max.ru64
llvm.AMDIL.atomic.max.ru64.noret
llvm.AMDIL.atomic.min.gi32
llvm.AMDIL.atomic.min.gi32.noret
llvm.AMDIL.atomic.min.gi64
llvm.AMDIL.atomic.min.gi64.noret
llvm.AMDIL.atomic.min.gu32
llvm.AMDIL.atomic.min.gu32.noret
llvm.AMDIL.atomic.min.gu64
llvm.AMDIL.atomic.min.gu64.noret
llvm.AMDIL.atomic.min.li32
llvm.AMDIL.atomic.min.li32.noret
llvm.AMDIL.atomic.min.li64
llvm.AMDIL.atomic.min.li64.noret
llvm.AMDIL.atomic.min.lu32
llvm.AMDIL.atomic.min.lu32.noret
llvm.AMDIL.atomic.min.lu64
llvm.AMDIL.atomic.min.lu64.noret
llvm.AMDIL.atomic.min.ri32
llvm.AMDIL.atomic.min.ri32.noret
llvm.AMDIL.atomic.min.ri64
llvm.AMDIL.atomic.min.ri64.noret
llvm.AMDIL.atomic.min.ru32
llvm.AMDIL.atomic.min.ru32.noret
llvm.AMDIL.atomic.min.ru64
llvm.AMDIL.atomic.min.ru64.noret
llvm.AMDIL.atomic.mskor.li32
llvm.AMDIL.atomic.mskor.li32.noret
llvm.AMDIL.atomic.mskor.li64
llvm.AMDIL.atomic.mskor.li64.noret
llvm.AMDIL.atomic.mskor.lu32
llvm.AMDIL.atomic.mskor.lu32.noret
llvm.AMDIL.atomic.mskor.lu64
llvm.AMDIL.atomic.mskor.lu64.noret
llvm.AMDIL.atomic.mskor.ri32
llvm.AMDIL.atomic.mskor.ri32.noret
llvm.AMDIL.atomic.mskor.ri64
llvm.AMDIL.atomic.mskor.ri64.noret
llvm.AMDIL.atomic.mskor.ru32
llvm.AMDIL.atomic.mskor.ru32.noret
llvm.AMDIL.atomic.mskor.ru64
llvm.AMDIL.atomic.mskor.ru64.noret
llvm.AMDIL.atomic.or.gi32
llvm.AMDIL.atomic.or.gi32.noret
llvm.AMDIL.atomic.or.gi64
llvm.AMDIL.atomic.or.gi64.noret
llvm.AMDIL.atomic.or.gu32
llvm.AMDIL.atomic.or.gu32.noret
llvm.AMDIL.atomic.or.gu64
llvm.AMDIL.atomic.or.gu64.noret
llvm.AMDIL.atomic.or.li32
llvm.AMDIL.atomic.or.li32.noret
llvm.AMDIL.atomic.or.li64
llvm.AMDIL.atomic.or.li64.noret
llvm.AMDIL.atomic.or.lu32
llvm.AMDIL.atomic.or.lu32.noret
llvm.AMDIL.atomic.or.lu64
llvm.AMDIL.atomic.or.lu64.noret
llvm.AMDIL.atomic.or.ri32
llvm.AMDIL.atomic.or.ri32.noret
llvm.AMDIL.atomic.or.ri64
llvm.AMDIL.atomic.or.ri64.noret
llvm.AMDIL.atomic.or.ru32
llvm.AMDIL.atomic.or.ru32.noret
llvm.AMDIL.atomic.or.ru64
llvm.AMDIL.atomic.or.ru64.noret
llvm.AMDIL.atomic.rsub.gi32
llvm.AMDIL.atomic.rsub.gi32.noret
llvm.AMDIL.atomic.rsub.gi64
llvm.AMDIL.atomic.rsub.gi64.noret
llvm.AMDIL.atomic.rsub.gu32
llvm.AMDIL.atomic.rsub.gu32.noret
llvm.AMDIL.atomic.rsub.gu64
llvm.AMDIL.atomic.rsub.gu64.noret
llvm.AMDIL.atomic.rsub.li32
llvm.AMDIL.atomic.rsub.li32.noret
llvm.AMDIL.atomic.rsub.li64
llvm.AMDIL.atomic.rsub.li64.noret
llvm.AMDIL.atomic.rsub.lu32
llvm.AMDIL.atomic.rsub.lu32.noret
llvm.AMDIL.atomic.rsub.lu64
llvm.AMDIL.atomic.rsub.lu64.noret
llvm.AMDIL.atomic.rsub.ri32
llvm.AMDIL.atomic.rsub.ri32.noret
llvm.AMDIL.atomic.rsub.ri64
llvm.AMDIL.atomic.rsub.ri64.noret
llvm.AMDIL.atomic.rsub.ru32
llvm.AMDIL.atomic.rsub.ru32.noret
llvm.AMDIL.atomic.rsub.ru64
llvm.AMDIL.atomic.rsub.ru64.noret
llvm.AMDIL.atomic.sub.gi32
llvm.AMDIL.atomic.sub.gi32.noret
llvm.AMDIL.atomic.sub.gi64
llvm.AMDIL.atomic.sub.gi64.noret
llvm.AMDIL.atomic.sub.gu32
llvm.AMDIL.atomic.sub.gu32.noret
llvm.AMDIL.atomic.sub.gu64
llvm.AMDIL.atomic.sub.gu64.noret
llvm.AMDIL.atomic.sub.li32
llvm.AMDIL.atomic.sub.li32.noret
llvm.AMDIL.atomic.sub.li64
llvm.AMDIL.atomic.sub.li64.noret
llvm.AMDIL.atomic.sub.lu32
llvm.AMDIL.atomic.sub.lu32.noret
llvm.AMDIL.atomic.sub.lu64
llvm.AMDIL.atomic.sub.lu64.noret
llvm.AMDIL.atomic.sub.ri32
llvm.AMDIL.atomic.sub.ri32.noret
llvm.AMDIL.atomic.sub.ri64
llvm.AMDIL.atomic.sub.ri64.noret
llvm.AMDIL.atomic.sub.ru32
llvm.AMDIL.atomic.sub.ru32.noret
llvm.AMDIL.atomic.sub.ru64
llvm.AMDIL.atomic.sub.ru64.noret
llvm.AMDIL.atomic.xchg.gf32
llvm.AMDIL.atomic.xchg.gf32.noret
llvm.AMDIL.atomic.xchg.gi32
llvm.AMDIL.atomic.xchg.gi32.noret
llvm.AMDIL.atomic.xchg.gi64
llvm.AMDIL.atomic.xchg.gi64.noret
llvm.AMDIL.atomic.xchg.gu32
llvm.AMDIL.atomic.xchg.gu32.noret
llvm.AMDIL.atomic.xchg.gu64
llvm.AMDIL.atomic.xchg.gu64.noret
llvm.AMDIL.atomic.xchg.lf32
llvm.AMDIL.atomic.xchg.lf32.noret
llvm.AMDIL.atomic.xchg.li32
llvm.AMDIL.atomic.xchg.li32.noret
llvm.AMDIL.atomic.xchg.li64
llvm.AMDIL.atomic.xchg.li64.noret
llvm.AMDIL.atomic.xchg.lu32
llvm.AMDIL.atomic.xchg.lu32.noret
llvm.AMDIL.atomic.xchg.lu64
llvm.AMDIL.atomic.xchg.lu64.noret
llvm.AMDIL.atomic.xchg.rf32
llvm.AMDIL.atomic.xchg.rf32.noret
llvm.AMDIL.atomic.xchg.ri32
llvm.AMDIL.atomic.xchg.ri32.noret
llvm.AMDIL.atomic.xchg.ri64
llvm.AMDIL.atomic.xchg.ri64.noret
llvm.AMDIL.atomic.xchg.ru32
llvm.AMDIL.atomic.xchg.ru32.noret
llvm.AMDIL.atomic.xchg.ru64
llvm.AMDIL.atomic.xchg.ru64.noret
llvm.AMDIL.atomic.xor.gi32
llvm.AMDIL.atomic.xor.gi32.noret
llvm.AMDIL.atomic.xor.gi64
llvm.AMDIL.atomic.xor.gi64.noret
llvm.AMDIL.atomic.xor.gu32
llvm.AMDIL.atomic.xor.gu32.noret
llvm.AMDIL.atomic.xor.gu64
llvm.AMDIL.atomic.xor.gu64.noret
llvm.AMDIL.atomic.xor.li32
llvm.AMDIL.atomic.xor.li32.noret
llvm.AMDIL.atomic.xor.li64
llvm.AMDIL.atomic.xor.li64.noret
llvm.AMDIL.atomic.xor.lu32
llvm.AMDIL.atomic.xor.lu32.noret
llvm.AMDIL.atomic.xor.lu64
llvm.AMDIL.atomic.xor.lu64.noret
llvm.AMDIL.atomic.xor.ri32
llvm.AMDIL.atomic.xor.ri32.noret
llvm.AMDIL.atomic.xor.ri64
llvm.AMDIL.atomic.xor.ri64.noret
llvm.AMDIL.atomic.xor.ru32
llvm.AMDIL.atomic.xor.ru32.noret
llvm.AMDIL.atomic.xor.ru64
llvm.AMDIL.atomic.xor.ru64.noret
llvm.AMDIL.barrier
llvm.AMDIL.barrier.global
llvm.AMDIL.barrier.local
llvm.AMDIL.barrier.region
llvm.AMDIL.bfi
llvm.AMDIL.bfm
llvm.AMDIL.bit.count.i32
llvm.AMDIL.bit.extract.i32
llvm.AMDIL.bit.extract.u32
llvm.AMDIL.bit.find.first.hi
llvm.AMDIL.bit.find.first.lo
llvm.AMDIL.bit.find.first.sgn
llvm.AMDIL.bit.insert.u32
llvm.AMDIL.bit.reverse.u32
llvm.AMDIL.borrow.i32
llvm.AMDIL.carry.i32
llvm.AMDIL.clamp
llvm.AMDIL.class
llvm.AMDIL.cmov.logical
llvm.AMDIL.compute.unit.id
llvm.AMDIL.convert.f16.f32
llvm.AMDIL.convert.f32.f16
llvm.AMDIL.convert.f32.f16.near
llvm.AMDIL.convert.f32.f16.neg.inf
llvm.AMDIL.convert.f32.f16.plus.inf
llvm.AMDIL.convert.f32.i32.flr
llvm.AMDIL.convert.f32.i32.rpi
llvm.AMDIL.cos
llvm.AMDIL.cos.vec
llvm.AMDIL.div
llvm.AMDIL.div.precise
llvm.AMDIL.dp2
llvm.AMDIL.dp2.add
llvm.AMDIL.dp3
llvm.AMDIL.dp4
llvm.AMDIL.drcp
llvm.AMDIL.early.exit
llvm.AMDIL.exn
llvm.AMDIL.exp
llvm.AMDIL.exp.vec
llvm.AMDIL.fabs
llvm.AMDIL.fence
llvm.AMDIL.fence.global
llvm.AMDIL.fence.global.local
llvm.AMDIL.fence.local
llvm.AMDIL.fence.region
llvm.AMDIL.fence.region.global
llvm.AMDIL.fence.region.local
llvm.AMDIL.fma
llvm.AMDIL.fma.rte
llvm.AMDIL.fma.rtn
llvm.AMDIL.fma.rtp
llvm.AMDIL.fma.rtz
llvm.AMDIL.fraction
llvm.AMDIL.frexp.exp
llvm.AMDIL.frexp.f64
llvm.AMDIL.frexp.mant
llvm.AMDIL.ftz
llvm.AMDIL.get.cycle.count
llvm.AMDIL.get.global.id
llvm.AMDIL.get.global.offset
llvm.AMDIL.get.global.size
llvm.AMDIL.get.group.id
llvm.AMDIL.get.local.id
llvm.AMDIL.get.local.size
llvm.AMDIL.get.num.groups
llvm.AMDIL.get.num.regions
llvm.AMDIL.get.printf.offset
llvm.AMDIL.get.printf.size
llvm.AMDIL.get.region.id
llvm.AMDIL.get.region.local.id
llvm.AMDIL.get.region.size
llvm.AMDIL.get.work.dim
llvm.AMDIL.image1d.array.info0
llvm.AMDIL.image1d.array.info1
llvm.AMDIL.image1d.array.read.norm
llvm.AMDIL.image1d.array.read.unnorm
llvm.AMDIL.image1d.array.write
llvm.AMDIL.image1d.buffer.info0
llvm.AMDIL.image1d.buffer.info1
llvm.AMDIL.image1d.buffer.read.norm
llvm.AMDIL.image1d.buffer.read.unnorm
llvm.AMDIL.image1d.buffer.write
llvm.AMDIL.image1d.info0
llvm.AMDIL.image1d.info1
llvm.AMDIL.image1d.read.norm
llvm.AMDIL.image1d.read.unnorm
llvm.AMDIL.image1d.write
llvm.AMDIL.image2d.array.info0
llvm.AMDIL.image2d.array.info1
llvm.AMDIL.image2d.array.read.norm
llvm.AMDIL.image2d.array.read.unnorm
llvm.AMDIL.image2d.array.write
llvm.AMDIL.image2d.info0
llvm.AMDIL.image2d.info1
llvm.AMDIL.image2d.read.norm
llvm.AMDIL.image2d.read.unnorm
llvm.AMDIL.image2d.write
llvm.AMDIL.image3d.info0
llvm.AMDIL.image3d.info1
llvm.AMDIL.image3d.read.norm
llvm.AMDIL.image3d.read.unnorm
llvm.AMDIL.image3d.write
llvm.AMDIL.ldexp
llvm.AMDIL.length
llvm.AMDIL.lerp
llvm.AMDIL.ln
llvm.AMDIL.log
llvm.AMDIL.log.vec
llvm.AMDIL.mad
llvm.AMDIL.mad24.i32
llvm.AMDIL.mad24.u32
llvm.AMDIL.mad.i32
llvm.AMDIL.mad.rte
llvm.AMDIL.mad.rtn
llvm.AMDIL.mad.rtp
llvm.AMDIL.mad.rtz
llvm.AMDIL.mad.u32
llvm.AMDIL.max
llvm.AMDIL.max3
llvm.AMDIL.max3.i32
llvm.AMDIL.max3.u32
llvm.AMDIL.max.i32
llvm.AMDIL.max.u32
llvm.AMDIL.med3
llvm.AMDIL.med3.i32
llvm.AMDIL.med3.u32
llvm.AMDIL.media.bitalign
llvm.AMDIL.media.bytealign
llvm.AMDIL.media.convert.f2v4u8
llvm.AMDIL.media.lerp.u4
llvm.AMDIL.media.mqsad
llvm.AMDIL.media.msad
llvm.AMDIL.media.qsad
llvm.AMDIL.media.sad
llvm.AMDIL.media.sad16
llvm.AMDIL.media.sad32
llvm.AMDIL.media.sad4
llvm.AMDIL.media.sad.hi
llvm.AMDIL.media.unpack.byte.0
llvm.AMDIL.media.unpack.byte.1
llvm.AMDIL.media.unpack.byte.2
llvm.AMDIL.media.unpack.byte.3
llvm.AMDIL.min
llvm.AMDIL.min3
llvm.AMDIL.min3.i32
llvm.AMDIL.min3.u32
llvm.AMDIL.min.i32
llvm.AMDIL.min.u32
llvm.AMDIL.mul24.i32
llvm.AMDIL.mul24.u32
llvm.AMDIL.mul.rte
llvm.AMDIL.mul.rtn
llvm.AMDIL.mul.rtp
llvm.AMDIL.mul.rtz
llvm.AMDIL.mulhi24.i32
llvm.AMDIL.mulhi24.u32
llvm.AMDIL.mulhi.i32
llvm.AMDIL.mulhi.u32
llvm.AMDIL.pireduce
llvm.AMDIL.pow
llvm.AMDIL.read.fence
llvm.AMDIL.read.fence.global
llvm.AMDIL.read.fence.global.local
llvm.AMDIL.read.fence.local
llvm.AMDIL.read.fence.region
llvm.AMDIL.read.fence.region.global
llvm.AMDIL.read.fence.region.local
llvm.AMDIL.round.nearest
llvm.AMDIL.round.neginf
llvm.AMDIL.round.posinf
llvm.AMDIL.round.zero
llvm.AMDIL.rsq
llvm.AMDIL.rsq.vec
llvm.AMDIL.semaphore.init
llvm.AMDIL.semaphore.signal
llvm.AMDIL.semaphore.size
llvm.AMDIL.semaphore.wait
llvm.AMDIL.sign
llvm.AMDIL.sin
llvm.AMDIL.sin.vec
llvm.AMDIL.sqrt
llvm.AMDIL.sqrt.vec
llvm.AMDIL.sub.rte
llvm.AMDIL.sub.rtn
llvm.AMDIL.sub.rtp
llvm.AMDIL.sub.rtz
llvm.AMDIL.tan
llvm.AMDIL.trig.preop.f64
llvm.AMDIL.udiv
llvm.AMDIL.wavefront.id
llvm.AMDIL.write.fence
llvm.AMDIL.write.fence.global
llvm.AMDIL.write.fence.global.local
llvm.AMDIL.write.fence.local
llvm.AMDIL.write.fence.region
llvm.AMDIL.write.fence.region.global
llvm.AMDIL.write.fence.region.local
MDIL.abs.
MDIL.acos.
MDIL.add.rte.
MDIL.add.rtn.
MDIL.add.rtp.
MDIL.add.rtz.
MDIL.asin.
MDIL.atan.
MDIL.barrier.
MDIL.barrier.global.
MDIL.barrier.local.
MDIL.barrier.region.
MDIL.bfi.
MDIL.bfm.
MDIL.bit.count.i32.
MDIL.bit.extract.i32.
MDIL.bit.extract.u32.
MDIL.bit.find.first.hi.
MDIL.bit.find.first.lo.
MDIL.bit.find.first.sgn.
MDIL.bit.insert.u32.
MDIL.bit.reverse.u32.
MDIL.borrow.i32.
MDIL.carry.i32.
MDIL.clamp.
MDIL.class.
MDIL.cmov.logical.
MDIL.convert.f16.f32.
MDIL.convert.f32.f16.
MDIL.convert.f32.f16.near.
MDIL.convert.f32.f16.neg.inf.
MDIL.convert.f32.f16.plus.inf.
MDIL.convert.f32.i32.flr.
MDIL.convert.f32.i32.rpi.
MDIL.cos.
MDIL.cos.vec.
MDIL.div.
MDIL.div.precise.
MDIL.early.exit.
MDIL.exn.
MDIL.exp.
MDIL.exp.vec.
MDIL.fabs.
MDIL.fence.
MDIL.fence.global.
MDIL.fence.global.local.
MDIL.fence.local.
MDIL.fence.region.
MDIL.fence.region.global.
MDIL.fence.region.local.
MDIL.fma.
MDIL.fma.rte.
MDIL.fma.rtn.
MDIL.fma.rtp.
MDIL.fma.rtz.
MDIL.fraction.
MDIL.frexp.exp.
MDIL.frexp.mant.
MDIL.ftz.
MDIL.get.printf.offset.
MDIL.get.printf.size.
MDIL.ldexp.
MDIL.length.
MDIL.lerp.
MDIL.ln.
MDIL.log.
MDIL.log.vec.
MDIL.mad.
MDIL.mad24.i32.
MDIL.mad24.u32.
MDIL.mad.i32.
MDIL.mad.rte.
MDIL.mad.rtn.
MDIL.mad.rtp.
MDIL.mad.rtz.
MDIL.mad.u32.
MDIL.max.
MDIL.max3.
MDIL.max3.i32.
MDIL.max3.u32.
MDIL.max.i32.
MDIL.max.u32.
MDIL.med3.
MDIL.med3.i32.
MDIL.med3.u32.
MDIL.media.bitalign.
MDIL.media.bytealign.
MDIL.media.lerp.u4.
MDIL.media.msad.
MDIL.media.sad.
MDIL.media.sad16.
MDIL.media.sad32.
MDIL.media.sad.hi.
MDIL.media.unpack.byte.0.
MDIL.media.unpack.byte.1.
MDIL.media.unpack.byte.2.
MDIL.media.unpack.byte.3.
MDIL.min.
MDIL.min3.
MDIL.min3.i32.
MDIL.min3.u32.
MDIL.min.i32.
MDIL.min.u32.
MDIL.mul24.i32.
MDIL.mul24.u32.
MDIL.mul.rte.
MDIL.mul.rtn.
MDIL.mul.rtp.
MDIL.mul.rtz.
MDIL.mulhi24.i32.
MDIL.mulhi24.u32.
MDIL.mulhi.i32.
MDIL.mulhi.u32.
MDIL.pireduce.
MDIL.pow.
MDIL.read.fence.
MDIL.read.fence.global.
MDIL.read.fence.global.local.
MDIL.read.fence.local.
MDIL.read.fence.region.
MDIL.read.fence.region.global.
MDIL.read.fence.region.local.
MDIL.round.nearest.
MDIL.round.neginf.
MDIL.round.posinf.
MDIL.round.zero.
MDIL.rsq.
MDIL.rsq.vec.
MDIL.sign.
MDIL.sin.
MDIL.sin.vec.
MDIL.sqrt.
MDIL.sqrt.vec.
MDIL.sub.rte.
MDIL.sub.rtn.
MDIL.sub.rtp.
MDIL.sub.rtz.
MDIL.tan.
MDIL.udiv.
MDIL.write.fence.
MDIL.write.fence.global.
MDIL.write.fence.global.local.
MDIL.write.fence.local.
MDIL.write.fence.region.
MDIL.write.fence.region.global.
MDIL.write.fence.region.local.
MDIL.dp
MDIL.drcp
MDIL.dp2.add
MDIL.frexp.f64
MDIL.media.
MDIL.media.mqsad
MDIL.
roup.id
ocal.id
ork.dim
avefront.id
lobal.id
egion.id
mage
rite
tomic.or.
ocal.size
um.groups
emaphore.
rig.preop.f64
tomic.
ompute.unit.id
ycle.count
lobal.size
um.regions
egion.size
pend.alloc.i32
omic.
sub.
chg.
emaphore.signal
tomic.mskor.
et.global.offset
d.read.norm
MDIL.append.consume.i32
tomic.cmpxchg.
et.region.local.id
rray.
ead.unnorm
d.read.unnorm
2.noret
4.noret
mage1d.buffer.
edia.convert.f2v4u8
MDIL.atomic.
MDIL.a
pend.alloc.i32.noret
32.noret
d.array.read.norm
ppend.consume.i32.noret
mage1d.buffer.read.norm
d.array.read.unnorm
MDIL.image1d.buffer.read.unnorm
__atom
__atom_
__atomic_
__amdil_ln
_amdil_
arrierLocal
et_work_dim
_amd
barrier
rexp
dexp
qsad
arrier
lobal
egion
orrow
2_u4
ength
lerp
dd_rt
os_vec
p2_add
xp_vec
ma_rt
og_vec
d_rt
l_rt
sq_vec
n_vec
b_rt
dil_
italign
raction
ireduce
qrt_vec
npack_
omic_or_
ytealign
rexp_exp
mul_high
em_fence
omic_
ount_bits
arly_exit
b_signed
exp_mant
ound_zero
rig_preop
sub_
chg_
iv_precise
mul24_high
it_insert
ul24_high
omic_mskor_
ppend_alloc
mov_logical
bit_extract
ound_
eginf
osinf
bit_
xtract
everse
avefront_id
loat_to_half
alf_to_float
ound_nearest
omic_cmpxchg_
ppend_consume
ead_mem_fence
emaphore_
2_noret
4_noret
ompute_unit_id
ycle_count
rintf_size
em_fence_local
rite_mem_fence
loat_to_int_
roup_id_int
ocal_id_int
em_fence_
emaphore_signal
32_noret
lobal_id_int
rintf_offset
egion_id_int
d_read_norm
ppend_alloc_noret
loat_to_half_near
ocal_size_int
um_groups_int
ax_semaphore_size
lobal_size_int
um_regions_int
egion_size_int
rray_
ead_unnorm
d_read_unnorm
ppend_consume_noret
mage1d_buffer_
ead_mem_fence_local
loat_to_half_neg_inf
et_global_offset_int
ead_mem_fence_
rite_mem_fence_local
loat_to_half_plus_inf
lobal_local
egion_local
rite_mem_fence_
et_region_local_id_int
d_array_read_norm
em_fence_region_global
__amdil_image1d_buffer_read_norm
__amdil_image
d_array_read_unnorm
__amdil_image1d_buffer_read_unnorm
__amdil_read_mem_fence_
ead_mem_fence_region_global
__amdil_write_mem_fence_region_global
.xy__,
.xy00,
.__zw,
.00zw,
.00xx
.00xy
.xxxx
.xxyy
.xyzw
;pointer:
NoSymTab
:1:1:
;value:
struct._image1d_t
struct._image1d_t.
struct._image1d_array_t
struct._image1d_array_t.
struct._image1d_buffer_t
struct._image1d_buffer_t.
struct._image2d_t
struct._image2d_t.
struct._image2d_array_t
struct._image2d_array_t.
struct._image3d_t
struct._image3d_t.
struct._counter32_t
struct._counter32_t.
struct._counter64_t
struct._counter64_t.
struct._sema_t
struct._sema_t.
;image:
1DA:
1DB:
2DA:
dcl_resource_id(
)_type(
1darray
buffer
2darray
)_fmtx(unknown)_fmty(unknown)
_fmtz(unknown)_fmtw(unknown)
dcl_uav_id(
)_fmtx(uint)
;counter:
;sema:
:struct:
;constarg:
__OpenCL_
_kernel
func 
mov 
, cb0[8].xy
, cb0[8].x
, l1.0000
dcl_num_thread_per_group 
          
, 1, 1       
dcl_max_thread_per_group 
dcl_lds_id(
dcl_gds_id(
dcl_raw_uav_id(
dcl_arena_uav_id(
mov r0.__z_, vThreadGrpIdFlat0.x
mov r1022.xyz0, vTidInGrp0.xyz
mov r1023.xyz0, vThreadGrpId0.xyz
imul r0.___w, cb0[2].x, cb0[2].y
umod r1023.x___, r0.z, cb0[2].x
udiv r1023._y__, r0.z, cb0[2].x
umod r1023._y__, r1023.y, cb0[2].y
udiv r1023.__z_, r0.z, r0.w
dcl_literal l9, 
imad r1021.xyz0, r1023.xyzz, l9.xyzz, r1022.xyzz
imad r1021.xyz0, r1023.xyzz, cb0[1].xyzz, r1022.xyzz
iadd r1021.xyz0, r1021.xyz0, cb0[6].xyz0
iadd r1023.xyz0, r1023.xyz0, cb0[7].xyz0
mov r1023.___w, r0.z
umul 
.x0__, r1023.w, cb0[4].z
i64add 
.xy__, 
.xyyy, cb0[4].xyyy
imad 
.x___, r1023.w, cb0[4].y, cb0[4].x
ishl r1023.___w, r1023.w, l0.z
.x0__, vAbsTidFlat.x, cb0[3].z
.xyyy, cb0[3].xyyy
.x___, vAbsTidFlat.x, cb0[3].y, cb0[3].x
.x___, l0.0000
udiv r1024.xyz_, r1021.xyzz, cb0[10].xyzz
dcl_literal l10,
imad r1025.xyz0, r1023.xyzz, l10.xyzz, r1022.xyzz
imad r1025.xyz0, r1023.xyzz, cb0[10].xyzz, r1022.xyzz
endfunc ; __OpenCL_
_kernel
endfunc ; 
 l5.x
ishr 
 l3.0y0y
ishl 
 l3.y
ishr 
 l3.y
 l3.0zyx
 l3.x
ishr 
 l3.x
 l3.0z0z
ishr 
mov r1025, cb
mov r0.y, r0.x
uav_raw_store_id(
) mem0, r0.y, r1025
ishr r0.y, r0.y, l0.x
mov x
[r0.y], r1025
iadd r0.x, r0.x, l
;version:
;ARGSTART:__OpenCL_
;ARGSTART:
;device:
;uniqueid:
;memory:
private:
region:
local:
;cws:
;crs:
;function:
;intrinsic:
;sampler:
;memory:64bitABI
;uavid:
;privateid:
llvm.argtypename.annotations.
;reflection:
;ARGEND:__OpenCL_
;ARGEND:
dcl_cb cb1
dcl_literal l
, 16, 
iadd r0.x, 
.x, l
dcl_typeless_uav_id(
)_stride(4)_length(
)_access(private)
dcl_indexed_temp_array x
; Kernel arg setup: 
l3.y
l3.x
].xy
].zw
dcl_cb cb
0x%08X, 0x%08X, 0x%08X, 0x%08X
; f32:i32 
0x%08X, 0x%08X, 0x%08X, 0x%08X; f64:i64 
0x%08X, 0x%08X, 0x%08X, 0x%08X; f128:i128 
E002:Internal Compiler Error Message!
E007:Image 1.0 Extension Unsupported!
E012:Insufficient Local Resources!   
E013:Insufficient Private Resources! 
E017:Max number Constant Ptr reached!
E019:Insufficient Region Resources!  
E026:Semaphores not supported!       
dcl_semaphore_id(
)_stride(4)_length(4)_access(read_write)
AMDIL Literal Manager
;#ASMSTART
;#ASMEND
.zero
.ascii
.asciz
.byte
.short
.long
.quad
;.align
.global
.extern
.weakref
.weakdef
.offset
llvm.signedOrSignedpointee.annotations.
llvm.volatilepointer.annotations.
llvm.restrictpointer.annotations.
llvm.argtypeconst.annotations.
AMDIL Generic Machine Peephole Optimization Pass
__AMD_printf_fmt_
lvgv
llvm.image.annotations
llvm.global.annotations
llvm.constpointer.annotations
llvm.sampler.annotations
llvm.argtypename.annotations
llvm.argtypeconst.annotations
llvm.readonlypointer.annotations
llvm.signedOrSignedpointee.annotations
llvm.restrictpointer.annotations
llvm.volatilepointer.annotations
clregion
%d,%d,%d
;#DATASTART:
;#DATAEND
;#DATAEND:
:0:0:0:0:0:0:0:0
:0:0:0:0
caicos
turks
cayman
AMDIL PeepHole Optimization Pass
__amdil_f_2_u4
F_2_U4
__amdil_is_constant
__amdil_is_asic_id_i32
_xchg
_noret
__amdil_imad24
__amdil_imul24
__amdil__imul24_high
__amdil_imad
_i32
imad24
imul24
__amdil_imul24_high
__amdil_imul_high
imul24_high
__amdil_get_local_size_int
PeepholeOpt
Number of get_local_size(N) functions removed
__amdil_image1d_read_norm
__amdil_image1d_read_unnorm
__amdil_image1d_array_read_norm
__amdil_image1d_array_read_unnorm
__amdil_image2d_read_norm
__amdil_image2d_read_unnorm
__amdil_image2d_array_read_norm
__amdil_image2d_array_read_unnorm
__amdil_image3d_read_norm
__amdil_image3d_read_unnorm
__amdil_bfi
bfi_and
bfi_not
bfi_or
__amdil_bfm
bfm_mask
bfm_shl
bfm_sub
kauai
trinity
__amdil_improved_div
fdiv32
__amdil_ubit_extract
ByteExtractOpt
!!! Vectors are not supported yet!
Found an OR Operation that failed setup!
Found an OR operation that can possible be optimized to ubit insert!
Op:        
LHS:       
(None)
LHS Src:   
LHS Mask:  
LHS Shift: 
RHS:       
RHS Src:   
RHS Mask:  
RHS Shift: 
Found pattern: '((A
 & B)
 << C)
 | ((D
 & E)
 << F)'
A = LHSSrc
D = RHSSrc 
B = 
E = 
C = 
F = 
width(B) = 
width(E) = 
offset(B) = 
offset(E) = 
Constraints: 
(1) B ^ E == 0
(2-LHS) B is a mask
(2-LHS) E is a mask
(3-LHS) (offset(B)) >= (width(E) + offset(E))
(3-RHS) (offset(E)) >= (width(B) + offset(B))
Failed constraint 1!
LHS = 
 >= (
) = 
RHS = 
Value is not a Mask: 
Failed constraint 2!
MaskShr
Optimizing LHS!
Non-Mask: 
Optimizing RHS!
Failed constraint 3!
Width:  
Offset: 
LHSSrc: 
RHSSrc: 
Either width or offset are NULL, failed detection!
__amdil_ubit_insert
_u32
BitInsertOpt
Old Inst: 
New Inst: 
Null pointer passed into function.
Failed setup with no Shl or And instruction on base opcode!
Failed setup since the base operand is not an instruction!
Failed setup since both mask and shift are NULL!
__amdil_class_f
new_class
AMD IL Default Pointer Manager Pass
unknown
AMD IL EG Pointer Manager Pass
llvm.readonlypointer.annotations.
Argument: 
Pointer: '
' is a read only image # 
' is a write only image # 
' is a 
 bit atomic counter type!
' is a semaphore type!
' is cacheable!
Pointer: 
 is assigned 
uav 
scratch 
lds 
gds 
 @ register 
. Inst: 
[BlockOrdering] Parsing CurrentBlock: 
BCI info: Top: 
 Exit: 
 Instructions:
BCI Prop info: 
 Top: 
[Dump]
 found: 
Instruction: 
Base Pointer[s]:
Byte pointer found!
Adding pointer 
 to byte set!
Possible aliased pointer found!
 to conflict set!
 to raw set!
Moving 
 from raw to byte.
Instructions w/ CPool Ops: 
Found an instruction that is a private load 
but should be a constant pool load.
 to cached set!
Annotating pointer as cacheable. Inst: 
Annotating pointer as arena. Inst: 
: Setting byte store bit on instruction: 
Semaphore: 
 assigned the counter 
Skipping instruction: 
Assigning semaphore 
 to Inst: 
Counter: 
Assigning counter 
Annotating instr as cacheable. Inst: 
llvm.sampler.annotations.
Byte Store Ptrs
Raw Ptrs
Cache Load Ptrs
Atomic Counters
Semaphores
Images
Parsing Call Stack Start.
Parsing Call Stack End.
Found an instruction with a frame index #
 with reg 
Found an instruction with a CPI index #
Assigning instruction to pointer 
 UAV: 
 LDS: 
 GDS: 
 SCRATCH: 
 CB: 
 Reg: 
 assigned to reg 
 conflicts with:
Pointer: 
 Inst: 
Found a case where the pointer is being stored!
Pointer is 
 with 
reg 
frameindex 
Annotating instruction as Byte Store. Inst: 
: Setting byte store bit on atomic instruction: 
Mapping kernel sampler 
 to sampler number 
 for Inst:
Mapping internal sampler 
Found a constant sampler for image read inst: 
E014:Images not currently supported! 
E018:Max number of Counters reached! 
E023:Illegal Inc+Dec to same counter!
E025:Insufficient Semaphore Resources
E027:Semaphore init value is invalid!
Assigning instruction to default ID. Inst:
Annotating pointer as raw. Inst: 
Setting pointer to resource ID 
Scratch Pointer '
' being assigned uav 
Updated instruction to bitmask 
 with ResID 
Raw Pointer '
' is cacheable, not allocating a multi-uav for it!
Conflict Pointer '
AMDIL Printf Conversion Pass
__printf_cl
NOREG
MEMx
MEMxy
R100
R101
R102
R103
R104
R105
R106
R107
R108
R109
R110
R111
R112
R113
R114
R115
R116
R117
R118
R119
R120
R121
R122
R123
R124
R125
R126
R127
R128
R129
R130
R131
R132
R133
R134
R135
R136
R137
R138
R139
R140
R141
R142
R143
R144
R145
R146
R147
R148
R149
R150
R151
R152
R153
R154
R155
R156
R157
R158
R159
R160
R161
R162
R163
R164
R165
R166
R167
R168
R169
R170
R171
R172
R173
R174
R175
R176
R177
R178
R179
R180
R181
R182
R183
R184
R185
R186
R187
R188
R189
R190
R191
R1000
R1001
R1002
R1003
R1004
R1005
R1006
R1007
R1008
R1009
R1010
R1011
R1012
Rw10
Rw11
Rw12
Rw13
Rw14
Rw15
Rw16
Rw17
Rw18
Rw19
Rw20
Rw21
Rw22
Rw23
Rw24
Rw25
Rw26
Rw27
Rw28
Rw29
Rw30
Rw31
Rw32
Rw33
Rw34
Rw35
Rw36
Rw37
Rw38
Rw39
Rw40
Rw41
Rw42
Rw43
Rw44
Rw45
Rw46
Rw47
Rw48
Rw49
Rw50
Rw51
Rw52
Rw53
Rw54
Rw55
Rw56
Rw57
Rw58
Rw59
Rw60
Rw61
Rw62
Rw63
Rw64
Rw65
Rw66
Rw67
Rw68
Rw69
Rw70
Rw71
Rw72
Rw73
Rw74
Rw75
Rw76
Rw77
Rw78
Rw79
Rw80
Rw81
Rw82
Rw83
Rw84
Rw85
Rw86
Rw87
Rw88
Rw89
Rw90
Rw91
Rw92
Rw93
Rw94
Rw95
Rw96
Rw97
Rw98
Rw99
Rw100
Rw101
Rw102
Rw103
Rw104
Rw105
Rw106
Rw107
Rw108
Rw109
Rw110
Rw111
Rw112
Rw113
Rw114
Rw115
Rw116
Rw117
Rw118
Rw119
Rw120
Rw121
Rw122
Rw123
Rw124
Rw125
Rw126
Rw127
Rw128
Rw129
Rw130
Rw131
Rw132
Rw133
Rw134
Rw135
Rw136
Rw137
Rw138
Rw139
Rw140
Rw141
Rw142
Rw143
Rw144
Rw145
Rw146
Rw147
Rw148
Rw149
Rw150
Rw151
Rw152
Rw153
Rw154
Rw155
Rw156
Rw157
Rw158
Rw159
Rw160
Rw161
Rw162
Rw163
Rw164
Rw165
Rw166
Rw167
Rw168
Rw169
Rw170
Rw171
Rw172
Rw173
Rw174
Rw175
Rw176
Rw177
Rw178
Rw179
Rw180
Rw181
Rw182
Rw183
Rw184
Rw185
Rw186
Rw187
Rw188
Rw189
Rw190
Rw191
Rw1000
Rw1001
Rw1002
Rw1003
Rw1004
Rw1005
Rw1006
Rw1007
Rw1008
Rw1009
Rw1010
Rw1011
Rw1012
Rx10
Rx11
Rx12
Rx13
Rx14
Rx15
Rx16
Rx17
Rx18
Rx19
Rx20
Rx21
Rx22
Rx23
Rx24
Rx25
Rx26
Rx27
Rx28
Rx29
Rx30
Rx31
Rx32
Rx33
Rx34
Rx35
Rx36
Rx37
Rx38
Rx39
Rx40
Rx41
Rx42
Rx43
Rx44
Rx45
Rx46
Rx47
Rx48
Rx49
Rx50
Rx51
Rx52
Rx53
Rx54
Rx55
Rx56
Rx57
Rx58
Rx59
Rx60
Rx61
Rx62
Rx63
Rx64
Rx65
Rx66
Rx67
Rx68
Rx69
Rx70
Rx71
Rx72
Rx73
Rx74
Rx75
Rx76
Rx77
Rx78
Rx79
Rx80
Rx81
Rx82
Rx83
Rx84
Rx85
Rx86
Rx87
Rx88
Rx89
Rx90
Rx91
Rx92
Rx93
Rx94
Rx95
Rx96
Rx97
Rx98
Rx99
Rx100
Rx101
Rx102
Rx103
Rx104
Rx105
Rx106
Rx107
Rx108
Rx109
Rx110
Rx111
Rx112
Rx113
Rx114
Rx115
Rx116
Rx117
Rx118
Rx119
Rx120
Rx121
Rx122
Rx123
Rx124
Rx125
Rx126
Rx127
Rx128
Rx129
Rx130
Rx131
Rx132
Rx133
Rx134
Rx135
Rx136
Rx137
Rx138
Rx139
Rx140
Rx141
Rx142
Rx143
Rx144
Rx145
Rx146
Rx147
Rx148
Rx149
Rx150
Rx151
Rx152
Rx153
Rx154
Rx155
Rx156
Rx157
Rx158
Rx159
Rx160
Rx161
Rx162
Rx163
Rx164
Rx165
Rx166
Rx167
Rx168
Rx169
Rx170
Rx171
Rx172
Rx173
Rx174
Rx175
Rx176
Rx177
Rx178
Rx179
Rx180
Rx181
Rx182
Rx183
Rx184
Rx185
Rx186
Rx187
Rx188
Rx189
Rx190
Rx191
Rx1000
Rx1001
Rx1002
Rx1003
Rx1004
Rx1005
Rx1006
Rx1007
Rx1008
Rx1009
Rx1010
Rx1011
Rx1012
Rxy1
Rxy2
Rxy3
Rxy4
Rxy5
Rxy6
Rxy7
Rxy8
Rxy9
Rxy10
Rxy11
Rxy12
Rxy13
Rxy14
Rxy15
Rxy16
Rxy17
Rxy18
Rxy19
Rxy20
Rxy21
Rxy22
Rxy23
Rxy24
Rxy25
Rxy26
Rxy27
Rxy28
Rxy29
Rxy30
Rxy31
Rxy32
Rxy33
Rxy34
Rxy35
Rxy36
Rxy37
Rxy38
Rxy39
Rxy40
Rxy41
Rxy42
Rxy43
Rxy44
Rxy45
Rxy46
Rxy47
Rxy48
Rxy49
Rxy50
Rxy51
Rxy52
Rxy53
Rxy54
Rxy55
Rxy56
Rxy57
Rxy58
Rxy59
Rxy60
Rxy61
Rxy62
Rxy63
Rxy64
Rxy65
Rxy66
Rxy67
Rxy68
Rxy69
Rxy70
Rxy71
Rxy72
Rxy73
Rxy74
Rxy75
Rxy76
Rxy77
Rxy78
Rxy79
Rxy80
Rxy81
Rxy82
Rxy83
Rxy84
Rxy85
Rxy86
Rxy87
Rxy88
Rxy89
Rxy90
Rxy91
Rxy92
Rxy93
Rxy94
Rxy95
Rxy96
Rxy97
Rxy98
Rxy99
Rxy100
Rxy101
Rxy102
Rxy103
Rxy104
Rxy105
Rxy106
Rxy107
Rxy108
Rxy109
Rxy110
Rxy111
Rxy112
Rxy113
Rxy114
Rxy115
Rxy116
Rxy117
Rxy118
Rxy119
Rxy120
Rxy121
Rxy122
Rxy123
Rxy124
Rxy125
Rxy126
Rxy127
Rxy128
Rxy129
Rxy130
Rxy131
Rxy132
Rxy133
Rxy134
Rxy135
Rxy136
Rxy137
Rxy138
Rxy139
Rxy140
Rxy141
Rxy142
Rxy143
Rxy144
Rxy145
Rxy146
Rxy147
Rxy148
Rxy149
Rxy150
Rxy151
Rxy152
Rxy153
Rxy154
Rxy155
Rxy156
Rxy157
Rxy158
Rxy159
Rxy160
Rxy161
Rxy162
Rxy163
Rxy164
Rxy165
Rxy166
Rxy167
Rxy168
Rxy169
Rxy170
Rxy171
Rxy172
Rxy173
Rxy174
Rxy175
Rxy176
Rxy177
Rxy178
Rxy179
Rxy180
Rxy181
Rxy182
Rxy183
Rxy184
Rxy185
Rxy186
Rxy187
Rxy188
Rxy189
Rxy190
Rxy191
Rxy1000
Rxy1001
Rxy1002
Rxy1003
Rxy1004
Rxy1005
Rxy1006
Rxy1007
Rxy1008
Rxy1009
Rxy1010
Rxy1011
Rxy1012
Ry10
Ry11
Ry12
Ry13
Ry14
Ry15
Ry16
Ry17
Ry18
Ry19
Ry20
Ry21
Ry22
Ry23
Ry24
Ry25
Ry26
Ry27
Ry28
Ry29
Ry30
Ry31
Ry32
Ry33
Ry34
Ry35
Ry36
Ry37
Ry38
Ry39
Ry40
Ry41
Ry42
Ry43
Ry44
Ry45
Ry46
Ry47
Ry48
Ry49
Ry50
Ry51
Ry52
Ry53
Ry54
Ry55
Ry56
Ry57
Ry58
Ry59
Ry60
Ry61
Ry62
Ry63
Ry64
Ry65
Ry66
Ry67
Ry68
Ry69
Ry70
Ry71
Ry72
Ry73
Ry74
Ry75
Ry76
Ry77
Ry78
Ry79
Ry80
Ry81
Ry82
Ry83
Ry84
Ry85
Ry86
Ry87
Ry88
Ry89
Ry90
Ry91
Ry92
Ry93
Ry94
Ry95
Ry96
Ry97
Ry98
Ry99
Ry100
Ry101
Ry102
Ry103
Ry104
Ry105
Ry106
Ry107
Ry108
Ry109
Ry110
Ry111
Ry112
Ry113
Ry114
Ry115
Ry116
Ry117
Ry118
Ry119
Ry120
Ry121
Ry122
Ry123
Ry124
Ry125
Ry126
Ry127
Ry128
Ry129
Ry130
Ry131
Ry132
Ry133
Ry134
Ry135
Ry136
Ry137
Ry138
Ry139
Ry140
Ry141
Ry142
Ry143
Ry144
Ry145
Ry146
Ry147
Ry148
Ry149
Ry150
Ry151
Ry152
Ry153
Ry154
Ry155
Ry156
Ry157
Ry158
Ry159
Ry160
Ry161
Ry162
Ry163
Ry164
Ry165
Ry166
Ry167
Ry168
Ry169
Ry170
Ry171
Ry172
Ry173
Ry174
Ry175
Ry176
Ry177
Ry178
Ry179
Ry180
Ry181
Ry182
Ry183
Ry184
Ry185
Ry186
Ry187
Ry188
Ry189
Ry190
Ry191
Ry1000
Ry1001
Ry1002
Ry1003
Ry1004
Ry1005
Ry1006
Ry1007
Ry1008
Ry1009
Ry1010
Ry1011
Ry1012
Rz10
Rz11
Rz12
Rz13
Rz14
Rz15
Rz16
Rz17
Rz18
Rz19
Rz20
Rz21
Rz22
Rz23
Rz24
Rz25
Rz26
Rz27
Rz28
Rz29
Rz30
Rz31
Rz32
Rz33
Rz34
Rz35
Rz36
Rz37
Rz38
Rz39
Rz40
Rz41
Rz42
Rz43
Rz44
Rz45
Rz46
Rz47
Rz48
Rz49
Rz50
Rz51
Rz52
Rz53
Rz54
Rz55
Rz56
Rz57
Rz58
Rz59
Rz60
Rz61
Rz62
Rz63
Rz64
Rz65
Rz66
Rz67
Rz68
Rz69
Rz70
Rz71
Rz72
Rz73
Rz74
Rz75
Rz76
Rz77
Rz78
Rz79
Rz80
Rz81
Rz82
Rz83
Rz84
Rz85
Rz86
Rz87
Rz88
Rz89
Rz90
Rz91
Rz92
Rz93
Rz94
Rz95
Rz96
Rz97
Rz98
Rz99
Rz100
Rz101
Rz102
Rz103
Rz104
Rz105
Rz106
Rz107
Rz108
Rz109
Rz110
Rz111
Rz112
Rz113
Rz114
Rz115
Rz116
Rz117
Rz118
Rz119
Rz120
Rz121
Rz122
Rz123
Rz124
Rz125
Rz126
Rz127
Rz128
Rz129
Rz130
Rz131
Rz132
Rz133
Rz134
Rz135
Rz136
Rz137
Rz138
Rz139
Rz140
Rz141
Rz142
Rz143
Rz144
Rz145
Rz146
Rz147
Rz148
Rz149
Rz150
Rz151
Rz152
Rz153
Rz154
Rz155
Rz156
Rz157
Rz158
Rz159
Rz160
Rz161
Rz162
Rz163
Rz164
Rz165
Rz166
Rz167
Rz168
Rz169
Rz170
Rz171
Rz172
Rz173
Rz174
Rz175
Rz176
Rz177
Rz178
Rz179
Rz180
Rz181
Rz182
Rz183
Rz184
Rz185
Rz186
Rz187
Rz188
Rz189
Rz190
Rz191
Rz1000
Rz1001
Rz1002
Rz1003
Rz1004
Rz1005
Rz1006
Rz1007
Rz1008
Rz1009
Rz1010
Rz1011
Rz1012
Rzw1
Rzw2
Rzw3
Rzw4
Rzw5
Rzw6
Rzw7
Rzw8
Rzw9
Rzw10
Rzw11
Rzw12
Rzw13
Rzw14
Rzw15
Rzw16
Rzw17
Rzw18
Rzw19
Rzw20
Rzw21
Rzw22
Rzw23
Rzw24
Rzw25
Rzw26
Rzw27
Rzw28
Rzw29
Rzw30
Rzw31
Rzw32
Rzw33
Rzw34
Rzw35
Rzw36
Rzw37
Rzw38
Rzw39
Rzw40
Rzw41
Rzw42
Rzw43
Rzw44
Rzw45
Rzw46
Rzw47
Rzw48
Rzw49
Rzw50
Rzw51
Rzw52
Rzw53
Rzw54
Rzw55
Rzw56
Rzw57
Rzw58
Rzw59
Rzw60
Rzw61
Rzw62
Rzw63
Rzw64
Rzw65
Rzw66
Rzw67
Rzw68
Rzw69
Rzw70
Rzw71
Rzw72
Rzw73
Rzw74
Rzw75
Rzw76
Rzw77
Rzw78
Rzw79
Rzw80
Rzw81
Rzw82
Rzw83
Rzw84
Rzw85
Rzw86
Rzw87
Rzw88
Rzw89
Rzw90
Rzw91
Rzw92
Rzw93
Rzw94
Rzw95
Rzw96
Rzw97
Rzw98
Rzw99
Rzw100
Rzw101
Rzw102
Rzw103
Rzw104
Rzw105
Rzw106
Rzw107
Rzw108
Rzw109
Rzw110
Rzw111
Rzw112
Rzw113
Rzw114
Rzw115
Rzw116
Rzw117
Rzw118
Rzw119
Rzw120
Rzw121
Rzw122
Rzw123
Rzw124
Rzw125
Rzw126
Rzw127
Rzw128
Rzw129
Rzw130
Rzw131
Rzw132
Rzw133
Rzw134
Rzw135
Rzw136
Rzw137
Rzw138
Rzw139
Rzw140
Rzw141
Rzw142
Rzw143
Rzw144
Rzw145
Rzw146
Rzw147
Rzw148
Rzw149
Rzw150
Rzw151
Rzw152
Rzw153
Rzw154
Rzw155
Rzw156
Rzw157
Rzw158
Rzw159
Rzw160
Rzw161
Rzw162
Rzw163
Rzw164
Rzw165
Rzw166
Rzw167
Rzw168
Rzw169
Rzw170
Rzw171
Rzw172
Rzw173
Rzw174
Rzw175
Rzw176
Rzw177
Rzw178
Rzw179
Rzw180
Rzw181
Rzw182
Rzw183
Rzw184
Rzw185
Rzw186
Rzw187
Rzw188
Rzw189
Rzw190
Rzw191
Rzw1000
Rzw1001
Rzw1002
Rzw1003
Rzw1004
Rzw1005
Rzw1006
Rzw1007
Rzw1008
Rzw1009
Rzw1010
Rzw1011
Rzw1012
GPRI8
GPRI16
GPRI32
GPRF32
GPRV2I8
GPRV2I16
GPRV2I32
GPRV2F32
GPRI64
GPRF64
GPRV4I8
GPRWI32
GPRXI32
GPRYI32
GPRZI32
GPRZWI64
GPRXYI64
GPRV4I16
GPRV2F64
GPRV2I64
GPRV4F32
GPRV4I32
GPRV2I8_with_sub_x_comp
GPRV2I8_with_sub_w_comp
GPRV2I16_with_sub_x_comp
GPRV4I8_with_sub_w_comp
GPRV2I16_with_sub_w_comp
GPRV4I16_with_sub_w_comp
GPRF64_with_sub_x_comp
GPRF64_with_sub_w_comp
GPRV2F64_with_sub_w_comp
sub_w_comp
sub_x_comp
sub_xy_comp
sub_y_comp
sub_z_comp
sub_zw_comp
64BitPtr
Specify if 64bit addressing should be used.
64on32BitPtr
Specify if 64bit sized pointers with 32bit addressing should be used.
barrier_detect
Enable duplicate barrier detection(HD5XXX or later).
byte_addressable_store
Enable byte addressable stores
debug
Debug mode is enabled, so disable hardware accelerated address spaces.
fp64
Enable 64bit double precision operations
images
Enable image functions
macrodb
Use internal macrodb, instead of macrodb in driver
metadata30
Enable generation of version 3.0 of the metadata spec
multi_uav
Generate multiple UAV code(HD5XXX family or later)
no-inline
specify whether to not inline functions
noalias
assert that all kernel argument pointers are not aliased
barts
Select the barts processor
bonaire
Select the bonaire processor
Select the caicos processor
capeverde
Select the capeverde processor
Select the cayman processor
Select the cedar processor
Select the cypress processor
juniper
Select the juniper processor
Select the kauai processor
pitcairn
Select the pitcairn processor
Select the redwood processor
Select the rv710 processor
Select the rv730 processor
rv770
Select the rv770 processor
tahiti
Select the tahiti processor
Select the turks processor
+mwgs
test
+cal
e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:32:32-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-v2048:2048:2048-a0:0:64
AMD IL Swizzle Encoder Pass
Encoding instruction: 
 Operand: 
 SwizID: 
 Swizzle: 
;AMDIL Target Machine State Dump: 
Opcode: %d isTargetOpcode: %d isMachineOpcode: %d
Empty: %d OneUse: %d Size: %d NodeID: %d
OperandNum: %d ValueCount: %d ValueType: %d
Op: %p OpCode: %d NumOperands: %d 
IsTarget: %d IsMachine: %d 
MachineOpcode: %d
ValueType: %d 
UseEmpty: %d OneUse: %d
Children for %d:
Child %d->%d:
LOADCONST
LOAD
EXTLOAD
SEXTLOAD
AEXTLOAD
ZEXTLOAD
STORE
ARENA
TRUNCSTORE
ATOM
GLOBAL
PRIVATE
CONSTANT
CPOOL
REGION
LOCAL
IMAGE
SEMAPHORE
APPEND
ATOM_R
ATOM_L
ATOM_G
ATOM_A
.x000
.0x00
.00x0
.000x
.y000
.0y00
.00y0
.000y
.z000
.0z00
.00z0
.000z
.w000
.0w00
.00w0
.000w
.xy00
.zw00
.00zw
.xyz0
.0xyz
.xzxz
.ywyw
.x0y0
.0x0y
.0yzw
.x0zw
.xy0w
.xyxy
.zwzw
.yzw0
.z0w0
.0z0w
.x___
._y__
.__z_
.___w
.xy__
.__zw
.xyz_
struct
struct._event_t
event
image1d
image1d_array
image2d
image2d_array
image3d
semaphore
counter32
counter64
struct._event_t.
opaque
float
double
E006:Kernel Arg Type Name Is Invalid!
__sqrt_f64
__sqrt_f64_7xx
mcall(
), (
mov 
if_logicalz cb0[0].x
uav_raw_store_id(
mem0.x___, cb0[3].x, r0.0
endif
;memory:compilerwrite
)_arena 
, cb
, r1021.xyz0
, cb0[9].xyz0
, cb0[0].xyz0
, r1023.xyz0
, r1022.xyz0
, cb0[1].xyz0
, cb0[2].xyz0
, cb0[11].xyz0
, cb0[8].y0
, cb0[8].zw
, cb0[8].z0
, cb0[9].x0
, cb0[10].xyz0
, cb0[0].w
)_sampler(
)_value(
, Tmr.xyxy
)_size(short) 
)_size(dword) 
)_size(byte) 
)_cached 
)_cached_aligned 
)_coordtype(normalized) 
)_coordtype(unnormalized) 
, r0.1
_neg(xyzw)
_neg(yw)
_abs(yw)
AMDIL Assembly Printer
.global@
;memory:datareqd
<unknown operand type>
mdef(16383)_out(1)_in(2)
mov r0, in0
mov r1, in1
div_zeroop(infinity) r0.x___, r0.x, r1.x
mov out0, r0
mend
il_cs_3_0
il_cs_2_0
dcl_cb cb0[15] ; Constant buffer that holds ABI data
dcl_literal l0, 0x00000004, 0x00000001, 0x00000002, 0x00000003
dcl_literal l1, 0x00FFFFFF, 0xFFFFFFFF, 0xFFFFFFFE, 0xFFFFFFFD
dcl_literal l2, 0x0000FFFF, 0xFFFFFFFE, 0x000000FF, 0xFFFFFFFC
dcl_literal l3, 0x00000018, 0x00000010, 0x00000008, 0xFFFFFFFF
dcl_literal l4, 0xFFFFFF00, 0xFFFF0000, 0xFF00FFFF, 0xFFFF00FF
dcl_literal l5, 0x00000000, 0x00000004, 0x00000008, 0x0000000C
dcl_literal l6, 0x00000020, 0x00000020, 0x00000020, 0x00000020
dcl_literal l7, 0x00000018, 0x0000001F, 0x00000010, 0x0000001F
dcl_literal l8, 0x80000000, 0x80000000, 0x80000000, 0x80000000
;$$$$$$$$$$
endmain
;DEBUGSTART
;DEBUGEND
call 
unknown_
endfunc ; 
MACRO
4f32
4i32
2f32
2i32
E003:Missing Function Call Detected! 
__fma_f32
__hwfma_f32
uav_arena_store_id(
cb0[3].x, r0.0
e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:32:32-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-v2048:2048:2048-a0:0:64-n8:16:32:64
e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:32:32-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-v2048:2048:2048-n8:16:32:64
AMDIL SI IO Expansion Pass
AMD IL SI Pointer Manager Pass
Annotating pointer as default. Inst: 
amdil
ATI graphics cards
mdef(0)_out(1)_in(1)
mov r0, in0
fence_threads_memory_lds
mov out0, r0
mend
mdef(1)_out(1)_in(1)
mov r0, in0
fence_threads_memory
mov out0, r0
mend
mdef(2)_out(1)_in(1)
mov r0, in0
fence_threads_lds
mov out0, r0
mend
read_mem_fence
mdef(3)_out(1)_in(1)
mov r0, in0
fence_lds_mem_read_only
mov out0, r0
mend
write_mem_fence
mdef(4)_out(1)_in(1)
mov r0, in0
fence_lds_mem_write_only
mov out0, r0
mend
__amdil_float_to_half_near_f32
mdef(5)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 0x80000000, 0x80000000, 0x80000000, 0x80000000
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1.x, r0.x, l1.x
ushr r2.x, r0.x, l2.x
iand r2.x, r2.x, l3.x
iadd r2.x, r2.x, l4.x
iadd r3.x, l6.x, r2.x_neg(xyzw)
imin r3.x, r3.x, l5.x
imax r3.x, r3.x, l8.x
ilt r4.x, l4.x, r2.x
cmov_logical r4.x, r4.x, l7.x, l8.x
ior r4.x, r1.x, r4.x
iadd r13.x, l5.x, r3.x_neg(xyzw)
ishl r4.x, r4.x, r13.x
ushr r5.x, r0.x, l9.x
iand r5.x, r5.x, l10.x
ushr r6.x, r0.x, l11.x
iand r6.x, r6.x, l12.x
cmov_logical r7.x, r1.x, l14.x, l8.x
ior r7.x, r7.x, r6.x
ior r7.x, r7.x, l13.x
ishl r8.x, r2.x, l15.x
ior r8.x, r8.x, r6.x
ior r9.x, l16.x, r6.x
ushr r9.x, r9.x, r3.x
ilt r10.x, r2.x, l6.x
cmov_logical r10.x, r10.x, r9.x, r8.x
iand r11.x, r10.x, l6.x
ult r12.x, l17.x, r4.x
cmov_logical r12.x, r12.x, l6.x, l8.x
ieq r13.x, r4.x, l17.x
cmov_logical r12.x, r13.x, r11.x, r12.x
iadd r10.x, r10.x, r12.x
ilt r13.x, l18.x, r2.x
cmov_logical r10.x, r13.x, l13.x, r10.x
ieq r13.x, r2.x, l19.x
cmov_logical r10.x, r13.x, r7.x, r10.x
ior r0.x, r5.x, r10.x
mov out0, r0
mend
__amdil_float_to_half_near_v2f32
mdef(6)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 0x80000000, 0x80000000, 0x80000000, 0x80000000
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1.xy, r0.xy, l1.xy
ushr r2.xy, r0.xy, l2.xy
iand r2.xy, r2.xy, l3.xy
iadd r2.xy, r2.xy, l4.xy
iadd r3.xy, l6.xy, r2.xy_neg(xyzw)
imin r3.xy, r3.xy, l5.xy
imax r3.xy, r3.xy, l8.xy
ilt r4.xy, l4.xy, r2.xy
cmov_logical r4.xy, r4.xy, l7.xy, l8.xy
ior r4.xy, r1.xy, r4.xy
iadd r13.xy, l5.xy, r3.xy_neg(xyzw)
ishl r4.xy, r4.xy, r13.xy
ushr r5.xy, r0.xy, l9.xy
iand r5.xy, r5.xy, l10.xy
ushr r6.xy, r0.xy, l11.xy
iand r6.xy, r6.xy, l12.xy
cmov_logical r7.xy, r1.xy, l14.xy, l8.xy
ior r7.xy, r7.xy, r6.xy
ior r7.xy, r7.xy, l13.xy
ishl r8.xy, r2.xy, l15.xy
ior r8.xy, r8.xy, r6.xy
ior r9.xy, l16.xy, r6.xy
ushr r9.xy, r9.xy, r3.xy
ilt r10.xy, r2.xy, l6.xy
cmov_logical r10.xy, r10.xy, r9.xy, r8.xy
iand r11.xy, r10.xy, l6.xy
ult r12.xy, l17.xy, r4.xy
cmov_logical r12.xy, r12.xy, l6.xy, l8.xy
ieq r13.xy, r4.xy, l17.xy
cmov_logical r12.xy, r13.xy, r11.xy, r12.xy
iadd r10.xy, r10.xy, r12.xy
ilt r13.xy, l18.xy, r2.xy
cmov_logical r10.xy, r13.xy, l13.xy, r10.xy
ieq r13.xy, r2.xy, l19.xy
cmov_logical r10.xy, r13.xy, r7.xy, r10.xy
ior r0.xy, r5.xy, r10.xy
mov out0, r0
mend
__amdil_float_to_half_near_v4f32
mdef(7)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 0x80000000, 0x80000000, 0x80000000, 0x80000000
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1, r0, l1
ushr r2, r0, l2
iand r2, r2, l3
iadd r2, r2, l4
iadd r3, l6, r2_neg(xyzw)
imin r3, r3, l5
imax r3, r3, l8
ilt r4, l4, r2
cmov_logical r4, r4, l7, l8
ior r4, r1, r4
iadd r13, l5, r3_neg(xyzw)
ishl r4, r4, r13
ushr r5, r0, l9
iand r5, r5, l10
ushr r6, r0, l11
iand r6, r6, l12
cmov_logical r7, r1, l14, l8
ior r7, r7, r6
ior r7, r7, l13
ishl r8, r2, l15
ior r8, r8, r6
ior r9, l16, r6
ushr r9, r9, r3
ilt r10, r2, l6
cmov_logical r10, r10, r9, r8
iand r11, r10, l6
ult r12, l17, r4
cmov_logical r12, r12, l6, l8
ieq r13, r4, l17
cmov_logical r12, r13, r11, r12
iadd r10, r10, r12
ilt r13, l18, r2
cmov_logical r10, r13, l13, r10
ieq r13, r2, l19
cmov_logical r10, r13, r7, r10
ior r0, r5, r10
mov out0, r0
mend
__amdil_float_to_half_neg_inf_f32
mdef(8)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 0x7bff, 0x7bff, 0x7bff, 0x7bff
dcl_literal l19, 30, 30, 30, 30
dcl_literal l20, 143, 143, 143, 143
iand r1.x, r0.x, l1.x
ushr r2.x, r0.x, l2.x
iand r2.x, r2.x, l3.x
iadd r2.x, r2.x, l4.x
iadd r3.x, l6.x, r2.x_neg(xyzw)
imin r3.x, r3.x, l5.x
imax r3.x, r3.x, l8.x
ilt r4.x, l4.x, r2.x
cmov_logical r4.x, r4.x, l7.x, l8.x
ior r4.x, r4.x, r1.x
iadd r13.x, l5.x, r3.x_neg(xyzw)
ishl r4.x, r4.x, r13.x
ushr r5.x, r0.x, l9.x
iand r5.x, r5.x, l10.x
ushr r6.x, r0.x, l11.x
iand r6.x, r6.x, l12.x
cmov_logical r7.x, r1.x, l14.x, l8.x
ior r7.x, r7.x, r6.x
ior r7.x, r7.x, l13.x
ishl r8.x, r2.x, l15.x
ior r8.x, r8.x, r6.x
ior r9.x, l16.x, r6.x
ushr r9.x, r9.x, r3.x
ilt r10.x, r2.x, l6.x
cmov_logical r10.x, r10.x, r9.x, r8.x
ushr r13.x, r5.x, l17.x
ult r14.x, l8.x, r4.x
iand r13.x, r13.x, r14.x
iadd r10.x, r10.x, r13.x
ushr r11.x, r5.x, l17.x
iadd r11.x, r11.x, l18.x
ilt r13.x, l19.x, r2.x
cmov_logical r10.x, r13.x, r11.x, r10.x
ieq r13.x, r2.x, l20.x
cmov_logical r10.x, r13.x, r7.x, r10.x
ior r0.x, r5.x, r10.x
mov out0, r0
mend
__amdil_float_to_half_neg_inf_v2f32
mdef(9)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 0x7bff, 0x7bff, 0x7bff, 0x7bff
dcl_literal l19, 30, 30, 30, 30
dcl_literal l20, 143, 143, 143, 143
iand r1.xy, r0.xy, l1.xy
ushr r2.xy, r0.xy, l2.xy
iand r2.xy, r2.xy, l3.xy
iadd r2.xy, r2.xy, l4.xy
iadd r3.xy, l6.xy, r2.xy_neg(xyzw)
imin r3.xy, r3.xy, l5.xy
imax r3.xy, r3.xy, l8.xy
ilt r4.xy, l4.xy, r2.xy
cmov_logical r4.xy, r4.xy, l7.xy, l8.xy
ior r4.xy, r4.xy, r1.xy
iadd r13.xy, l5.xy, r3.xy_neg(xyzw)
ishl r4.xy, r4.xy, r13.xy
ushr r5.xy, r0.xy, l9.xy
iand r5.xy, r5.xy, l10.xy
ushr r6.xy, r0.xy, l11.xy
iand r6.xy, r6.xy, l12.xy
cmov_logical r7.xy, r1.xy, l14.xy, l8.xy
ior r7.xy, r7.xy, r6.xy
ior r7.xy, r7.xy, l13.xy
ishl r8.xy, r2.xy, l15.xy
ior r8.xy, r8.xy, r6.xy
ior r9.xy, l16.xy, r6.xy
ushr r9.xy, r9.xy, r3.xy
ilt r10.xy, r2.xy, l6.xy
cmov_logical r10.xy, r10.xy, r9.xy, r8.xy
ushr r13.xy, r5.xy, l17.xy
ult r14.xy, l8.xy, r4.xy
iand r13.xy, r13.xy, r14.xy
iadd r10.xy, r10.xy, r13.xy
ushr r11.xy, r5.xy, l17.xy
iadd r11.xy, r11.xy, l18.xy
ilt r13.xy, l19.xy, r2.xy
cmov_logical r10.xy, r13.xy, r11.xy, r10.xy
ieq r13.xy, r2.xy, l20.xy
cmov_logical r10.xy, r13.xy, r7.xy, r10.xy
ior r0.xy, r5.xy, r10.xy
mov out0, r0
mend
__amdil_float_to_half_neg_inf_v4f32
mdef(10)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 0x7bff, 0x7bff, 0x7bff, 0x7bff
dcl_literal l19, 30, 30, 30, 30
dcl_literal l20, 143, 143, 143, 143
iand r1, r0, l1
ushr r2, r0, l2
iand r2, r2, l3
iadd r2, r2, l4
iadd r3, l6, r2_neg(xyzw)
imin r3, r3, l5
imax r3, r3, l8
ilt r4, l4, r2
cmov_logical r4, r4, l7, l8
ior r4, r4, r1
iadd r13, l5, r3_neg(xyzw)
ishl r4, r4, r13
ushr r5, r0, l9
iand r5, r5, l10
ushr r6, r0, l11
iand r6, r6, l12
cmov_logical r7, r1, l14, l8
ior r7, r7, r6
ior r7, r7, l13
ishl r8, r2, l15
ior r8, r8, r6
ior r9, l16, r6
ushr r9, r9, r3
ilt r10, r2, l6
cmov_logical r10, r10, r9, r8
ushr r13, r5, l17
ult r14, l8, r4
iand r13, r13, r14
iadd r10, r10, r13
ushr r11, r5, l17
iadd r11, r11, l18
ilt r13, l19, r2
cmov_logical r10, r13, r11, r10
ieq r13, r2, l20
cmov_logical r10, r13, r7, r10
ior r0, r5, r10
mov out0, r0
mend
__amdil_float_to_half_plus_inf_f32
mdef(11)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1.x, r0.x, l1.x
ushr r2.x, r0.x, l2.x
iand r2.x, r2.x, l3.x
iadd r2.x, r2.x, l4.x
iadd r3.x, l6.x, r2.x_neg(xyzw)
imin r3.x, r3.x, l5.x
imax r3.x, r3.x, l8.x
ilt r4.x, l4.x, r2.x
cmov_logical r4.x, r4.x, l7.x, l8.x
ior r4.x, r1.x, r4.x
iadd r13.x, l5.x, r3.x_neg(xyzw)
ishl r4.x, r4.x, r13.x
ushr r5.x, r0.x, l9.x
iand r5.x, r5.x, l10.x
ushr r6.x, r0.x, l11.x
iand r6.x, r6.x, l12.x
cmov_logical r7.x, r1.x, l14.x, l8.x
ior r7.x, r7.x, r6.x
ior r7.x, r7.x, l13.x
ishl r8.x, r2.x, l15.x
ior r8.x, r8.x, r6.x
ior r9.x, l16.x, r6.x
ushr r9.x, r9.x, r3.x
ilt r10.x, r2.x, l6.x
cmov_logical r10.x, r10.x, r9.x, r8.x
ieq r13.x, l8.x, r5.x
ult r14.x, l8.x, r4.x
iand r13.x, r13.x, r14.x
iand r13.x, r13.x, l6.x
iadd r10.x, r10.x, r13.x
ushr r11.x, r5.x, l17.x
iadd r11.x, l13.x, r11.x_neg(xyzw)
ilt r13.x, l18.x, r2.x
cmov_logical r10.x, r13.x, r11.x, r10.x
ieq r13.x, r2.x, l19.x
cmov_logical r10.x, r13.x, r7.x, r10.x
ior r0.x, r5.x, r10.x
mov out0, r0
mend
__amdil_float_to_half_plus_inf_v2f32
mdef(12)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1.xy, r0.xy, l1.xy
ushr r2.xy, r0.xy, l2.xy
iand r2.xy, r2.xy, l3.xy
iadd r2.xy, r2.xy, l4.xy
iadd r3.xy, l6.xy, r2.xy_neg(xyzw)
imin r3.xy, r3.xy, l5.xy
imax r3.xy, r3.xy, l8.xy
ilt r4.xy, l4.xy, r2.xy
cmov_logical r4.xy, r4.xy, l7.xy, l8.xy
ior r4.xy, r1.xy, r4.xy
iadd r13.xy, l5.xy, r3.xy_neg(xyzw)
ishl r4.xy, r4.xy, r13.xy
ushr r5.xy, r0.xy, l9.xy
iand r5.xy, r5.xy, l10.xy
ushr r6.xy, r0.xy, l11.xy
iand r6.xy, r6.xy, l12.xy
cmov_logical r7.xy, r1.xy, l14.xy, l8.xy
ior r7.xy, r7.xy, r6.xy
ior r7.xy, r7.xy, l13.xy
ishl r8.xy, r2.xy, l15.xy
ior r8.xy, r8.xy, r6.xy
ior r9.xy, l16.xy, r6.xy
ushr r9.xy, r9.xy, r3.xy
ilt r10.xy, r2.xy, l6.xy
cmov_logical r10.xy, r10.xy, r9.xy, r8.xy
ieq r13.xy, l8.xy, r5.xy
ult r14.xy, l8.xy, r4.xy
iand r13.xy, r13.xy, r14.xy
iand r13.xy, r13.xy, l6.xy
iadd r10.xy, r10.xy, r13.xy
ushr r11.xy, r5.xy, l17.xy
iadd r11.xy, l13.xy, r11.xy_neg(xyzw)
ilt r13.xy, l18.xy, r2.xy
cmov_logical r10.xy, r13.xy, r11.xy, r10.xy
ieq r13.xy, r2.xy, l19.xy
cmov_logical r10.xy, r13.xy, r7.xy, r10.xy
ior r0.xy, r5.xy, r10.xy
mov out0, r0
mend
__amdil_float_to_half_plus_inf_v4f32
mdef(13)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1, r0, l1
ushr r2, r0, l2
iand r2, r2, l3
iadd r2, r2, l4
iadd r3, l6, r2_neg(xyzw)
imin r3, r3, l5
imax r3, r3, l8
ilt r4, l4, r2
cmov_logical r4, r4, l7, l8
ior r4, r1, r4
iadd r13, l5, r3_neg(xyzw)
ishl r4, r4, r13
ushr r5, r0, l9
iand r5, r5, l10
ushr r6, r0, l11
iand r6, r6, l12
cmov_logical r7, r1, l14, l8
ior r7, r7, r6
ior r7, r7, l13
ishl r8, r2, l15
ior r8, r8, r6
ior r9, l16, r6
ushr r9, r9, r3
ilt r10, r2, l6
cmov_logical r10, r10, r9, r8
ieq r13, l8, r5
ult r14, l8, r4
iand r13, r13, r14
iand r13, r13, l6
iadd r10, r10, r13
ushr r11, r5, l17
iadd r11, l13, r11_neg(xyzw)
ilt r13, l18, r2
cmov_logical r10, r13, r11, r10
ieq r13, r2, l19
cmov_logical r10, r13, r7, r10
ior r0, r5, r10
mov out0, r0
mend
__amdil_float_to_int_flr_f32
mdef(14)_out(1)_in(1)
mov r0, in0
round_neginf r0.x, r0.x
ftoi r0.x, r0.x
mov out0, r0
mend
__amdil_float_to_int_flr_v2f32
mdef(15)_out(1)_in(1)
mov r0, in0
round_neginf r0.xy, r0.xy
ftoi r0.xy, r0.xy
mov out0, r0
mend
__amdil_float_to_int_flr_v4f32
mdef(16)_out(1)_in(1)
mov r0, in0
round_neginf r0, r0
ftoi r0, r0
mov out0, r0
mend
__amdil_global_id
mdef(17)_out(1)_in(0)
mov r0.xyz, vAbsTid.xyz
mov out0, r0
mend
__amdil_global_id_flat
mdef(18)_out(1)_in(0)
mov r0.x, vAbsTidFlat.x
mov out0, r0
mend
__amdil_group_id
mdef(19)_out(1)_in(0)
mov r0.xyz, vThreadGrpId.xyz
mov out0, r0
mend
__amdil_group_id_flat
mdef(20)_out(1)_in(0)
mov r0.x, vThreadGrpIdFlat.x
mov out0, r0
mend
__amdil_improved_div_f32
mdef(21)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
div_zeroop(infinity) r2.x, l1.x, r1.x
mul_ieee r3.x, r0.x, r2.x
fma r4.x, r3.x, r1.x_neg(xyzw), r0.x
fma r0.x, r4.x, r2.x, r3.x
mov out0, r0
mend
__amdil_improved_div_v2f32
mdef(22)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
div_zeroop(infinity) r2.xy, l1.xy, r1.xy
mul_ieee r3.xy, r0.xy, r2.xy
fma r4.xy, r3.xy, r1.xy_neg(xyzw), r0.xy
fma r0.xy, r4.xy, r2.xy, r3.xy
mov out0, r0
mend
__amdil_improved_div_v4f32
mdef(23)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
div_zeroop(infinity) r2, l1, r1
mul_ieee r3, r0, r2
fma r4, r3, r1_neg(xyzw), r0
fma r0, r4, r2, r3
mov out0, r0
mend
__amdil_local_id
mdef(24)_out(1)_in(0)
mov r0.xyz, vTidInGrp.xyz
mov out0, r0
mend
__amdil_local_id_flat
mdef(25)_out(1)_in(0)
mov r0.x, vTidInGrpFlat.x
mov out0, r0
mend
__amd_early_exit
mdef(26)_out(1)_in(1)
mov r0, in0
ret_logical_non_zero r0
mov out0, r0
mend
__ddiv_f64
mdef(27)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l9, 12, 2, 0x7ff00000, 0x00100000
ixor r2.x, r0.y, r1.y
dadd r0.xy, r0.xy, r0.00
dadd r1.xy, r1.xy, r1.00
ige r3.x, r0.y_abs, l9.z
ige r3.y, r1.y_abs, l9.z
ilt r3.z, r0.y_abs, l9.w
ilt r3.w, r1.y_abs, l9.w
ixor r2.x, r2.x_abs, r2.x
dfrexp r20, r0
dfrexp r21, r1
ishl r0.z, r0.y, l9.x
ishl r1.z, r1.y, l9.x
ior r0.z, r0.z, r0.x
ior r1.z, r1.z, r1.x
ieq r0.z, r0.z, r0.0
ieq r1.z, r1.z, r0.0
mov r20.w, r20.wwww_abs
mov r21.w, r21.wwww_abs
dcl_literal l2, 0x16f0068e, 0x40075048, 0x00000000, 0xc0000000 
dmad r22.xy, l2.zw, r21.zw, l2.xy
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dcl_literal l6, 0x80000000, 0x7fffffff, 0xf8000000, 0xffffffff 
and r24.xy, r21.zw, l6.zwzw
dadd r25.xy, r21.zw, r24.xy_neg(yw)
dmul r26.xy, r22.xy, r20.zw
and r26.xy, r26.xy, l6.zwzw
dmad r20.zw, r26.xy, r24.xy_neg(yw), r20.zw
dmad r20.zw, r26.xy, r25.xy_neg(yw), r20.zw
dmul r27.xy, r22.xy, r20.zw
and r27.xy, r27.xy, l6.zwzw
dmad r20.zw, r27.xy, r24.xy_neg(yw), r20.zw
dmad r20.zw, r27.xy, r25.xy_neg(yw), r20.zw
dmul r28.xy, r22.xy, r20.zw
and r28.xy, r28.xy, l6.zwzw
dmad r20.zw, r28.xy, r24.xy_neg(yw), r20.zw
dmad r20.zw, r28.xy, r25.xy_neg(yw), r20.zw
dmul r29.xy, r22.xy, r20.zw
dadd r25.xy, r26.xy, r27.xy
dadd r26.xy, r25.xy, r26.xy_neg(yw)
dadd r27.xy, r27.xy, r26.xy_neg(yw)
dadd r26.xy, r27.xy, r28.xy
dadd r27.xy, r26.xy, r27.xy_neg(yw)
dadd r28.xy, r28.xy, r27.xy_neg(yw)
dadd r27.xy, r28.xy, r29.xy
dadd r28.xy, r27.xy, r28.xy_neg(yw)
dadd r28.xy, r29.xy, r28.xy_neg(yw)
dadd r24.xy, r25.xy, r26.xy
dadd r25.xy, r24.xy, r25.xy_neg(yw)
dadd r26.xy, r26.xy, r25.xy_neg(yw)
dadd r25.xy, r26.xy, r27.xy
dadd r26.xy, r25.xy, r26.xy_neg(yw)
dadd r27.xy, r27.xy, r26.xy_neg(yw)
dadd r26.xy, r27.xy, r28.xy
dadd r25.xy, r25.xy, r26.xy
ior r25.x, r25.x, l6.w
dadd r10.xy, r24.xy, r25.xy
imad r4.x, r3.x, l9.y, r3.z
imad r4.y, r3.y, l9.y, r3.w
imad r4.x, r4.x, l9.y, r0.z
imad r4.y, r4.y, l9.y, r1.z
ishl r4.x, r4.x, l9.y
ishl r4.y, r4.y, l9.y
dcl_literal l7, 0x80008000, 0x66ff66ff, 0x26f326f3, 52
dcl_literal l8, 0x0048c000, 0x00123000, 0x80000000, 31
ushr r4.z, l8.x, r4.x
ushr r4.w, l8.y, r4.y
ior r4.w, r4.w, r4.z
ishl r5.x, l7.x, r4.w
ishl r5.y, l7.y, r4.w
ishl r5.z, l7.z, r4.w
ishr r5.x, r5.x, l8.w
ishr r5.y, r5.y, l8.w
ishr r5.z, r5.z, l8.w
ishl r5.y, r5.y, l7.w
inegate r21.y, r21.y
iadd r20.y, r20.y, r21.y
dldexp r10.xy, r10.xy, r20.y
and r10.xy, r10.xy, r5.xx
ior r10.y, r10.y, r5.y_abs
ior r10.x, r10.x, r5.z
ixor r10.y, r10.y_abs, r2.x
mov r0.xy, r10.xy
mov out0, r0
mend
__ddiv_f64_fma
mdef(28)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l9, 12, 2, 0x7ff00000, 0x00100000
ixor r2.x, r0.y, r1.y
ige r3.x, r0.y_abs, l9.z
ige r3.y, r1.y_abs, l9.z
ilt r3.z, r0.y_abs, l9.w
ilt r3.w, r1.y_abs, l9.w
ixor r2.x, r2.x_abs, r2.x
dfrexp r20, r0
dfrexp r21, r1
ishl r0.z, r0.y, l9.x
ishl r1.z, r1.y, l9.x
ior r0.z, r0.z, r0.x
ior r1.z, r1.z, r1.x
ieq r0.z, r0.z, r0.0
ieq r1.z, r1.z, r0.0
mov r20.w, r20.wwww_abs
mov r21.w, r21.wwww_abs
dcl_literal l1, 0x00000000, 0x3ff00000, 0x00000001, 0 
dcl_literal l2, 0x16f0068e, 0x40075048, 0x00000000, 0xc0000000 
dcl_literal l3, 0x00040000, 0x00000300, 0, 0 
drcp_zeroop(zero) r22.xy, r21.zw
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dcl_literal l6, 0x80000000, 0x7fffffff, 0xf8000000, 0xffffffff 
dmul r10.xy, r22.xy, r20.zw
dmad r23.xy, r21.zw, r10.xy_neg(yw), r20.zw
dmad r10.xy, r22.xy, r23.xy, r10.xy
dmad r23.xy, r21.zw, r22.xy_neg(yw), l1.xy
dmul r23.xy, r23.xy, r22.xy
dmad r24.xy, r21.zw, r10.xy_neg(yw), r20.zw
dmul r25.xy, r23.xy, r24.xy
dmad r23.xy, r22.xy, r24.xy, r25.xy
ior r23.y, r23.y, l3.x
inegate r21.y, r21.y
iadd r20.x, r20.y, r21.y
imin r20.y, r20.x, l3.y
inegate r21.y, r20.y
iadd r20.x, r20.x, r21.y
dldexp r11.xy, r10.xy, r20.y
dldexp r12.xy, r11.xy, r21.y
dadd r10.xy, r10.xy, r12.xy_neg(yw)
dadd r10.xy, r10.xy, r23.xy
dldexp r12.xy, l1.xy, r20.y
dmad r10.xy, r10.xy, r12.xy, r11.xy
dldexp r10.xy, r10.xy, r20.x
imad r4.x, r3.x, l9.y, r3.z
imad r4.y, r3.y, l9.y, r3.w
imad r4.x, r4.x, l9.y, r0.z
imad r4.y, r4.y, l9.y, r1.z
ishl r4.x, r4.x, l9.y
ishl r4.y, r4.y, l9.y
dcl_literal l7, 0x80008000, 0x66ff66ff, 0x26f326f3, 52
dcl_literal l8, 0x0048c000, 0x00123000, 0x80000000, 31
ushr r4.z, l8.x, r4.x
ushr r4.w, l8.y, r4.y
ior r4.w, r4.w, r4.z
ishl r5.x, l7.x, r4.w
ishl r5.y, l7.y, r4.w
ishl r5.z, l7.z, r4.w
ishr r5.x, r5.x, l8.w
ishr r5.y, r5.y, l8.w
ishr r5.z, r5.z, l8.w
ishl r5.y, r5.y, l7.w
and r10.xy, r10.xy, r5.xx
ior r10.y, r10.y, r5.y_abs
ior r10.x, r10.x, r5.z
ixor r10.y, r10.y_abs, r2.x
mov r0.xy, r10.xy
mov out0, r0
mend
__fdiv_f32
mdef(29)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l1, 0x7f800000, 0x7f800000, 0x807fffff, 0x807fffff
dcl_literal l2, 0x7f800000, 0x7f800000, 0, 0
dcl_literal l3, 0x80000000, 0x80000000, 0x80000000, 0x80000000
dcl_literal l4, 0x3f800000, 0x3f800000, 0, 0
dcl_literal l5, 0, 0, 0, 0
dcl_literal l6, 0x7fffffff, 0x80000000, 0x7fffffff, 0x80000000
dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
dcl_literal l9, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff
mov r2.x___, r0.x
mov r2._y__, r1.x
and r3.xyzw, r2.xyxy, l1
ieq r4.xyzw, r3.xyxy, l2
and r5.xy__, r2.xy, l3
ior r3.__zw, r3.zwzw, l4.xyxy
cmov_logical r3.__zw, r4.zwzw, r5.xyxy, r3.zwzw
cmov_logical r3.__zw, r4.xyxy, r2.xyxy, r3.zwzw
ior r5.xy__, r4.xz, r4.yw
ior r5.x___, r5.x, r5.y
inegate r5.__z_, r3.yyyy
iadd r3.x___, r3.x, r5.z
cmov_logical r3.x___, r5.xxxx, l5, r3.xxxx
rcp_zeroop(infinity) r2._y__, r3.ww
mul_ieee r2.x___, r3.z, r2.y
and r2.__zw, r2.xxxx, l6.xyzw
ishr r6.x___, r2.z, l8
ishr r6._y__, r3.xxxx, l8
iadd r2.xy__, r2.xzxz, r3.xxxx
iadd r6.x___, r6.x, r6.y
ige r4.__z_, l5, r6.x
ior r4._y__, r2.wwww, l1
ige r4.x, r6.x, l9
cmov_logical r4.x, r5.x, l5, r4.x
cmov_logical r2.x, r4.z, r2.w, r2.x
cmov_logical r0.x, r4.x, r4.y, r2.x
mov out0, r0
mend
__ftol_i64
mdef(30)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7F800000, 0x80000000, 0x007FFFFF, 0x00000000
and r0.xyz_, r0.x, l0
dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.x___, r0.x, l1
dcl_literal l2, 0xFFFFFF81, 0x00000000, 0x00000000, 0xFFFFFF6A
iadd r0.x__w, r0.x, l2
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r0.x, l3
dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ige r1._y__, l4, r0.x
and r1.x___, r1.x, r1.y
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
iadd r1._y__, l5, r0.x_neg(xyzw)
cmov_logical r0.___w, r1.x, r1.y, r0.w
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, r0.x, l6
dcl_literal l7, 0x00000040, 0x00000040, 0x00000040, 0x00000040
imin r0.___w, r0.w, l7
dcl_literal l8, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r1._y__, r0.w, l8
dcl_literal l9, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r0.w, l9
cmov_logical r1._y__, r1.z, r1.y, r0.w
dcl_literal l10, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r1.___w, l10, r1.y_neg(xyzw)
dcl_literal l11, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r0.__z_, r0.z, l11
ushr r1.___w, r0.z, r1.w
ishl r1._y__, r0.z, r1.y
cmov_logical r1.___w, r1.z, r1.y, r1.w
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l12, r1.y
dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r0.w, r1.w, l13
cmov_logical r2.x___, r0.w, r1.y, r0.z
dcl_literal l14, 0x00000020, 0x00000020, 0x00000020, 0x00000020
imin r1._y__, r0.w, l14
dcl_literal l15, 0x00000040, 0x00000040, 0x00000040, 0x00000040
ieq r0.___w, r0.w, l15
ushr r0.__z_, r0.z, r1.y
dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l16, r0.z
dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r1.__z_, l17
dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__zw, r0.w, l18, r1.yyyz
cmov_logical r0.__zw, r1.x, r0.zzzw, r2.xxxy
inot r1.xy__, r0.zwzz
dcl_literal l19, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r1.__z_, r1.x, l19
ult r1.x___, r1.z, r1.x
cmov_logical r1.__z_, r0.y, r1.z, r0.z
dcl_literal l20, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r0.__z_, r1.x, l20
iadd r0.__z_, r1.y, r0.z
cmov_logical r1.___w, r0.y, r0.z, r0.w
dcl_literal l21, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r0.x, l21, r1.zwzz
mov out0, r0
mend
__ftoul_i64
mdef(31)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7F800000, 0x007FFFFF, 0x80000000, 0x00000000
and r0.xyz_, r0.x, l0
dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.x___, r0.x, l1
dcl_literal l2, 0xFFFFFF81, 0x00000000, 0x00000000, 0xFFFFFF6A
iadd r0.x__w, r0.x, l2
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r0.x, l3
dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ige r1._y__, l4, r0.x
and r1.x___, r1.x, r1.y
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
iadd r1._y__, l5, r0.x_neg(xyzw)
cmov_logical r0.___w, r1.x, r1.y, r0.w
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, r0.x, l6
dcl_literal l7, 0x00000040, 0x00000040, 0x00000040, 0x00000040
imin r0.___w, r0.w, l7
dcl_literal l8, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r1._y__, r0.w, l8
dcl_literal l9, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r0.w, l9
cmov_logical r1._y__, r1.z, r1.y, r0.w
dcl_literal l10, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r1.___w, l10, r1.y_neg(xyzw)
dcl_literal l11, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r0._y__, r0.y, l11
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.__z_, r0.z, l12
ushr r1.___w, r0.y, r1.w
ishl r1._y__, r0.y, r1.y
cmov_logical r1.___w, r1.z, r1.y, r1.w
dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l13, r1.y
dcl_literal l14, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r0.w, r1.w, l14
cmov_logical r2.x___, r0.w, r1.y, r0.y
dcl_literal l15, 0x00000020, 0x00000020, 0x00000020, 0x00000020
imin r1._y__, r0.w, l15
dcl_literal l16, 0x00000040, 0x00000040, 0x00000040, 0x00000040
ieq r0.___w, r0.w, l16
ushr r0._y__, r0.y, r1.y
dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l17, r0.y
dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r1.__z_, l18
dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y_w, r0.w, l19, r1.yyyz
cmov_logical r0._y_w, r1.x, r0.yyyw, r2.xxxy
ior r0.x___, r0.x, r0.z
dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r0.x, l20, r0.ywyy
mov out0, r0
mend
__ftz_f32
mdef(32)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
mul_ieee r0.x, r0.x, l1.x
mov out0, r0
mend
__ftz_v2f32
mdef(33)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
mul_ieee r0.xy, r0.xy, l1.xy
mov out0, r0
mend
__ftz_v4f32
mdef(34)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
mul_ieee r0, r0, l1
mov out0, r0
mend
__load_128bit_global
mdef(35)_out(1)_in(1)
mov r0, in0
mov r0, g[r0.x]
mov out0, r0
mend
__load_128bit_local
mdef(36)_out(1)_in(1)
mov r0, in0
lds_load_vec_id(0) r0, r0.x
mov out0, r0
mend
__load_128bit_private
mdef(37)_out(1)_in(1)
mov r0, in0
mov r0, x0[r0.x]
mov out0, r0
mend
__load_128bit_uav
mdef(38)_out(1)_in(1)
mov r0, in0
uav_raw_load_id(0) r0, r0.x
mov out0, r0
mend
__load_32bit_local
mdef(39)_out(1)_in(1)
mov r0, in0
lds_load_id(0) r0.x, r0.x
mov out0, r0
mend
__load_32bit_uav
mdef(40)_out(1)_in(1)
mov r0, in0
uav_raw_load_id(0) r0.x, r0.x
mov out0, r0
mend
__load_64bit_local
mdef(41)_out(1)_in(1)
mov r0, in0
lds_load_vec_id(0) r0.xy__, r0.x
mov out0, r0
mend
__load_64bit_uav
mdef(42)_out(1)_in(1)
mov r0, in0
uav_raw_load_id(0) r0.xy, r0.x
mov out0, r0
mend
__load_96bit_global
mdef(43)_out(1)_in(1)
mov r0, in0
mov r0.xyz_, g[r0.x].xyz
mov out0, r0
mend
__load_96bit_local
mdef(44)_out(1)_in(1)
mov r0, in0
lds_load_vec_id(0) r0.xyz_, r0.x
mov out0, r0
mend
__load_96bit_private
mdef(45)_out(1)_in(1)
mov r0, in0
mov r0.xyz_, x0[r0.x].xyz
mov out0, r0
mend
__load_96bit_uav
mdef(46)_out(1)_in(1)
mov r0, in0
uav_raw_load_id(0) r0.xyz, r0.x
mov out0, r0
mend
__load_hi_64bit_global
mdef(47)_out(1)_in(1)
mov r0, in0
mov r0.xy__, g[r0.x].zw
mov out0, r0
mend
__load_hi_64bit_private
mdef(48)_out(1)_in(1)
mov r0, in0
mov r0.xy__, x0[r0.x].zw
mov out0, r0
mend
__load_lo_64bit_global
mdef(49)_out(1)_in(1)
mov r0, in0
mov r0.xy__, g[r0.x].xy
mov out0, r0
mend
__load_lo_64bit_private
mdef(50)_out(1)_in(1)
mov r0, in0
mov r0.xy__, x0[r0.x].xy
mov out0, r0
mend
__load_w_32bit_global
mdef(51)_out(1)_in(1)
mov r0, in0
mov r0.x, g[r0.x].w
mov out0, r0
mend
__load_w_32bit_private
mdef(52)_out(1)_in(1)
mov r0, in0
mov r0.x, x0[r0.x].w
mov out0, r0
mend
__load_x_32bit_global
mdef(53)_out(1)_in(1)
mov r0, in0
mov r0.x, g[r0.x].x
mov out0, r0
mend
__load_x_32bit_private
mdef(54)_out(1)_in(1)
mov r0, in0
mov r0.x, x0[r0.x].x
mov out0, r0
mend
__load_y_32bit_global
mdef(55)_out(1)_in(1)
mov r0, in0
mov r0.x, g[r0.x].y
mov out0, r0
mend
__load_y_32bit_private
mdef(56)_out(1)_in(1)
mov r0, in0
mov r0.x, x0[r0.x].y
mov out0, r0
mend
__load_z_32bit_global
mdef(57)_out(1)_in(1)
mov r0, in0
mov r0.x, g[r0.x].z
mov out0, r0
mend
__load_z_32bit_private
mdef(58)_out(1)_in(1)
mov r0, in0
mov r0.x, x0[r0.x].z
mov out0, r0
mend
__ltof_f32
mdef(59)_out(1)_in(1)
mov r0, in0
inot r0.__zw, r0.xxxy
dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r1.x___, r0.z, l1
ult r0.__z_, r1.x, r0.z
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r0.__z_, r0.z, l2
iadd r0.__z_, r0.w, r0.z
dcl_literal l3, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r0.___w, r0.y, l3
cmov_logical r0._y__, r0.w, r0.z, r0.y
cmov_logical r0.x___, r0.w, r1.x, r0.x
dcl_literal l4, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r0.__z_, r0.y, l4
dcl_literal l5, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r1.x___, r0.x, l5
ior r0.__z_, r0.z, r1.x
dcl_literal l6, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0.__z_, r0.z, l6
dcl_literal l7, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1.x___, r0.z, l7
dcl_literal l8, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.x___, r1.x, l8
dcl_literal l9, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l9
dcl_literal l10, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1.x___, l10, r1.x_neg(xyzw)
dcl_literal l11, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l11
dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1.x___, r1.x, l12
dcl_literal l13, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r1.x___, r1.x, l13
dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r0.__z_, r0.z, r1.x, l14
dcl_literal l15, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r1.x___, r0.y, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1._y__, r1.x, l16
dcl_literal l17, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1._y__, r1.y, l17
dcl_literal l18, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1._y__, r1.y, l18
dcl_literal l19, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1._y__, l19, r1.y_neg(xyzw)
dcl_literal l20, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1._y__, r1.y, l20
dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1._y__, r1.y, l21
dcl_literal l22, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r1._y__, r1.y, l22
dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.x___, r1.x, r1.y, l23
iadd r0.__z_, r1.x, r0.z
dcl_literal l24, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r1._y__, r0.x, l24
dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1.__z_, r1.y, l25
dcl_literal l26, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.__z_, r1.z, l26
dcl_literal l27, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.__z_, r1.z, l27
dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1.__z_, l28, r1.z_neg(xyzw)
dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.__z_, r1.z, l29
dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1.__z_, r1.z, l30
dcl_literal l31, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r1.__z_, r1.z, l31
dcl_literal l32, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r1._y__, r1.y, r1.z, l32
iadd r1._y__, r0.z, r1.y
dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r1.__z_, r1.x, l33
cmov_logical r1.x___, r1.z, r0.z, r1.x
dcl_literal l34, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r0.__z_, r0.z, l34
cmov_logical r0.__z_, r0.z, r1.y, r1.x
dcl_literal l35, 0x00000040, 0x00000040, 0x00000040, 0x00000040
imin r1.x___, r0.z, l35
dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r1.x___, r1.x, l36
dcl_literal l37, 0x00000020, 0x00000020, 0x00000020, 0x00000020
imin r1._y__, r1.x, l37
ishl r1._y__, r0.y, r1.y
dcl_literal l38, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r1.__z_, r1.x, l38
dcl_literal l39, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.___w, r1.x, l39
cmov_logical r1.__z_, r1.w, r1.z, r1.x
dcl_literal l40, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r2.x___, l40, r1.z_neg(xyzw)
ishl r1.__z_, r0.x, r1.z
ushr r2.x___, r0.x, r2.x
ior r1._y__, r1.y, r2.x
cmov_logical r1._y__, r1.w, r1.z, r1.y
dcl_literal l41, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.w, l41, r1.z
cmov_logical r0.xy__, r1.x, r1.zyzz, r0.xyxx
dcl_literal l42, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r1.x___, r0.y, l42
dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0._y__, r0.y, l43
dcl_literal l44, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishl r1._y__, r1.x, l44
dcl_literal l45, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r1.x___, r1.x, l45
dcl_literal l46, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r1.__z_, r0.x, l46
ior r1._y__, r1.y, r1.z
dcl_literal l47, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishl r1.__z_, r0.x, l47
dcl_literal l48, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.x___, r0.x, l48
dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r1.__z_, l49, r1.z
dcl_literal l50, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r1.z, l50
ior r1._y__, r1.y, r1.z
dcl_literal l51, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ieq r1.__z_, r1.y, l51
dcl_literal l52, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ult r1._y__, l52, r1.y
dcl_literal l53, 0x000000BE, 0x000000BE, 0x000000BE, 0x000000BE
iadd r1.___w, r0.z_neg(xyzw), l53
dcl_literal l54, 0x0000003F, 0x0000003F, 0x0000003F, 0x0000003F
iadd r0.__z_, l54, r0.z_neg(xyzw)
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1.___w, r1.w, l55
ior r1.x___, r1.x, r1.w
dcl_literal l56, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.___w, r1.x, l56
iadd r1.___w, r1.x, r1.w
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r1.__z_, r1.x, l57
cmov_logical r1.x___, r1.y, r1.z, r1.x
and r0.x___, r0.y, r0.x
dcl_literal l58, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
ilt r0._y__, r0.z, l58
ior r0.x___, r0.x, r0.y
dcl_literal l59, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l59, r1.x
ior r0.x___, r0.w, r0.x
mov out0, r0
mend
__mul_i64
mdef(60)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul r2.xy, r0.yx, r1.xy
iadd r4.x, r2.x, r3.y
imul_high r5.x, r0.x, r1.x
umul r6.x, r4.x, r5.x
umul r7.x, r0.x, r1.x
iadd r0.xy, r7.x0, r6.0x
mov out0, r0
mend
__mul_v2i64
mdef(61)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul r2, r0.yxwz, r1.xyzw
iadd r4.x_z, r2.x0z, r3.y0w
imul_high r5.x_z, r0.x0z, r1.x0z
umul r6.x_z, r4.x0z, r5.x0z
umul r7.x_z, r0.x0z, r1.x0z
iadd r0, r7.x0z0, r6.0x0z
mov out0, r0
mend
__sdiv_i16
mdef(62)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l13, 0x0000FFFF, 0x0000FFFF, 0x00008000, 0x00000000
and r1.xyz_, r0.xyxx, l13
dcl_literal l14, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l14
dcl_literal l15, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
ior r1.___w, r1.x, l15
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l16, 0x00008000, 0x00008000, 0x00008000, 0x00008000
and r1.__z_, r0.w, l16
dcl_literal l17, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
ior r1.___w, r0.w, l17
cmov_logical r0.___w, r1.z, r1.w, r0.w
ixor r1.__z_, r1.x, r0.w
imax r1.x___, r1.x, r1.x_neg(xyzw)
imax r0.___w, r0.w, r0.w_neg(xyzw)
udiv r0.___w, r1.x, r0.w
inegate r1.x___, r0.w
dcl_literal l18, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r1.__z_, r1.z, l18
cmov_logical r0.___w, r1.z, r1.x, r0.w
dcl_literal l19, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.___w, r0.w, l19
dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r1.y, r0.w, l20
mov r0.x___, r0.z
mov out0, r0
mend
__sdiv_i32
mdef(63)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l25, 0, 0, 0, 0
mov r0._y__, r1.x
ilt r1.xy, r0, l25
iadd r0.xy, r0, r1
ixor r0.xy, r0, r1
udiv r0.x, r0.x, r0.y
ixor r1.x, r1.x, r1.y
iadd r0.x, r0.x, r1.x
ixor r0.x, r0.x, r1.x
mov out0, r0
mend
__sdiv_i64
mdef(64)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0.__zw, r1.yyxy
dcl_literal l1, 0x80000000, 0x80000000, 0x00000000, 0x00000000
and r1.xy__, r0.ywyy, l1
inegate r2, r0
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r1.__zw, l2, r2.zzzx
iadd r1.__zw, r1.zzzw, r2.wwwy
cmov_logical r0._y_w, r1.yyyx, r1.zzzw, r0.wwwy
cmov_logical r0.x_z_, r1.xxyx, r2.xxzx, r0.xxzx
ult r1.__z_, r0.w, r0.y
ieq r1.___w, r0.w, r0.y
ult r2.x___, r0.x, r0.z
and r2.x___, r1.w, r2.x
ior r2.x___, r1.z, r2.x
dcl_literal l3, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.x___, r2.x, l3, l4
ieq r2._y__, r0.x, r0.z
and r2._y__, r1.w, r2.y
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x___, r2.y, l5, r2.x
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r2._yz_, r0.yyzy, l6
and r2.__z_, r2.z, r2.y
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.__z_, r2.z, l7, r0.z
dcl_literal l8, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3.xy__, r0.ywyy, l8
dcl_literal l9, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.__zw, r0.yyyw, l9
dcl_literal l10, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.___w, r0.z, l10
ior r2.___w, r3.z, r2.w
dcl_literal l11, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r2.w, l11
dcl_literal l12, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r0.z, l12
dcl_literal l13, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000
ior r4.xy__, r3.xyxx, l13
dcl_literal l14, 0xBF800000, 0xBF800000, 0x00000000, 0x00000000
add r4.xy__, r4.xyxx, l14
dcl_literal l15, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
and r4.xy__, r4.xyxx, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000
iadd r4.xy__, l16, r4.xyxx_neg(xyzw)
dcl_literal l17, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
and r4.xy__, r4.xyxx, l17
dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.xy__, r4.xyxx, l18
dcl_literal l19, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
iadd r4.xy__, r4.xyxx, l19
dcl_literal l20, 0x00000017, 0x00000017, 0x00000000, 0x00000000
cmov_logical r3.xy__, r3.xyxx, r4.xyxx, l20
dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r2.w, l21
dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l22
dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l23
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l24, r4.x_neg(xyzw)
dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l25
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l26
dcl_literal l27, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l27
dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r2.___w, r2.w, r4.x, l28
dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.z, l29
dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l30
dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l31
dcl_literal l32, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l32, r4.x_neg(xyzw)
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l33
dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l34
dcl_literal l35, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.x___, r4.x, l35
dcl_literal l36, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r4.x, l36
dcl_literal l37, 0x00000017, 0x00000017, 0x00000000, 0x00000000
ieq r4.xy__, r3.xyxx, l37
iadd r2.___w, r3.x, r2.w
cmov_logical r3.x___, r4.x, r2.w, r3.x
dcl_literal l38, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.x___, r2.w, l38
iadd r2.___w, r2.w, r3.z
cmov_logical r2.___w, r4.x, r2.w, r3.x
dcl_literal l39, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r3.x___, r2.w, l39
dcl_literal l40, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.__z_, r2.w, l40
dcl_literal l41, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F
cmov_logical r3.x___, r3.x, r3.z, l41
ult r3.__z_, r0.x, r0.z
and r3.__z_, r1.w, r3.z
ior r1.__z_, r1.z, r3.z
dcl_literal l42, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l43, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.__z_, r1.z, l42, l43
ieq r3.__z_, r0.x, r0.z
and r1.___w, r1.w, r3.z
dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.w, l44, r1.z
dcl_literal l45, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r1.___w, r0.x, l45
ior r1.___w, r3.w, r1.w
dcl_literal l46, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.___w, r1.w, l46
dcl_literal l47, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r0.x, l47
dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r1.w, l48
dcl_literal l49, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l49
dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l50
dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l51, r3.w_neg(xyzw)
dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l52
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l53
dcl_literal l54, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l54
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.___w, r1.w, r3.w, l55
dcl_literal l56, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l56
dcl_literal l57, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l57
dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l58
dcl_literal l59, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l59, r3.w_neg(xyzw)
dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l60
dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l61
dcl_literal l62, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l62
dcl_literal l63, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l63
iadd r1.___w, r3.y, r1.w
cmov_logical r3._y__, r4.y, r1.w, r3.y
dcl_literal l64, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r1.w, l64
iadd r1.___w, r1.w, r3.z
cmov_logical r1.___w, r3.w, r1.w, r3.y
ilt r3._y__, r1.w, r2.w
ieq r3.__z_, r2.w, r1.w
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l65
and r1.__z_, r3.z, r1.z
ior r1.__z_, r3.y, r1.z
iadd r3._y__, r2.w, r1.w_neg(xyzw)
dcl_literal l66, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.__z_, r1.z, r3.y, l66
ilt r3._y__, r3.x, r1.z
iadd r3.__z_, r1.z, r3.x_neg(xyzw)
and r3._y__, r3.y, r3.z
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r3.__z_, r1.z, l67
dcl_literal l68, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3._y__, r3.z, l68, r3.y
dcl_literal l69, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l69
if_logicalnz r1.z
    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r3.y, l70
    dcl_literal l71, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r3.y, l71
    cmov_logical r3.___w, r3.z, r3.w, r3.y
    dcl_literal l72, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r3.y, l72
    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4._y__, l73, r3.w_neg(xyzw)
    ushr r4._y__, r0.z, r4.y
    ishl r3.___w, r0.z, r3.w
    ishl r4.x___, r0.y, r4.x
    ior r4.x___, r4.y, r4.x
    cmov_logical r4.x___, r3.z, r0.z, r4.x
    dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.__z_, r3.z, l74, r3.w
    cmov_logical r3.___w, r3.y, r4.x, r0.y
    cmov_logical r3.__z_, r3.y, r3.z, r0.z
    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.x___, r1.w, l75
    dcl_literal l76, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4._y__, r1.w, l76
    cmov_logical r4._y__, r4.x, r4.y, r1.w
    dcl_literal l77, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.__z_, r1.w, l77
    dcl_literal l78, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4._y__, l78, r4.y_neg(xyzw)
    ushr r4.___w, r0.x, r4.y
    ishl r5.x___, r0.w, r4.z
    ior r4.___w, r4.w, r5.x
    cmov_logical r4.___w, r4.x, r0.x, r4.w
    cmov_logical r4.___w, r1.w, r4.w, r0.w
    ushr r4._y__, r3.z, r4.y
    ishl r4.__z_, r3.w, r4.z
    ior r4._y__, r4.y, r4.z
    cmov_logical r4.x___, r4.x, r3.z, r4.y
    cmov_logical r1.___w, r1.w, r4.x, r3.w
    udiv r4.x___, r4.w, r1.w
    umul r4._y__, r4.x, r1.w
    ilt r4.__z_, r4.w, r4.y
    iadd r5.x___, r4.y, r4.w_neg(xyzw)
    iadd r5.x___, r5.x, r1.w
    dcl_literal l79, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.x___, r5.x, l79
    iadd r4._y__, r4.w, r4.y_neg(xyzw)
    cmov_logical r4._y__, r4.z, r5.x, r4.y
    udiv r1.___w, r4.y, r1.w
    iadd r4._y__, r4.x, r1.w_neg(xyzw)
    iadd r1.___w, r4.x, r1.w
    cmov_logical r1.___w, r4.z, r4.y, r1.w
    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.z, l80
    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r3.z, l81
    dcl_literal l82, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r1.w, l82
    dcl_literal l83, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r1.w, l83
    umul r5.x___, r4.y, r4.w
    umul r4._y__, r4.y, r4.z
    umul r5._y__, r4.x, r4.w
    umul r4.x___, r4.x, r4.z
    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r4.x, l84
    dcl_literal l85, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.y, l85
    iadd r5.__z_, r5.z, r5.w
    iadd r4._y__, r4.y, r5.z
    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r4.y, l86
    iadd r5.x___, r5.x, r5.z
    dcl_literal l87, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r5.y, l87
    iadd r5.x___, r5.x, r5.y
    dcl_literal l88, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4._y__, r4.y, l88
    dcl_literal l89, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r4.x, l89
    ior r4.x___, r4.y, r4.x
    dcl_literal l90, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r3.w, l90
    dcl_literal l91, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r3.w, l91
    umul r5._y__, r5.y, r4.z
    umul r4._y_w, r4.y, r4.zzzw
    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r4.y, l92
    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r4.w, l93
    iadd r4.__z_, r4.z, r4.w
    iadd r4.__z_, r5.y, r4.z
    dcl_literal l94, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.__z_, r4.z, l94
    dcl_literal l95, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r4.y, l95
    ior r4._y__, r4.z, r4.y
    iadd r4.__z_, r4.y, r5.x
    ult r4._y__, r4.z, r4.y
    ult r4.___w, r0.w, r4.z
    ieq r5.x___, r0.w, r4.z
    ult r5._y__, r0.x, r4.x
    and r5._y__, r5.x, r5.y
    ior r4.___w, r4.w, r5.y
    dcl_literal l96, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l97, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4.___w, r4.w, l96, l97
    ieq r5._y__, r0.x, r4.x
    and r5.x___, r5.x, r5.y
    dcl_literal l98, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.___w, r5.x, l98, r4.w
    dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.___w, r4.w, l99
    ior r4._y__, r4.y, r4.w
    dcl_literal l100, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.___w, r1.w, l100
    cmov_logical r1.___w, r4.y, r4.w, r1.w
    iadd r3.__z_, r4.x, r3.z_neg(xyzw)
    ult r4.___w, r4.x, r3.z
    iadd r4.___w, r4.z, r4.w
    iadd r3.___w, r4.w, r3.w_neg(xyzw)
    cmov_logical r3.__zw, r4.y, r3.zzzw, r4.xxxz
    iadd r4._y__, r0.x, r3.z_neg(xyzw)
    ult r3.__z_, r0.x, r4.y
    iadd r3.__z_, r0.w, r3.z
    iadd r4.x___, r3.z, r3.w_neg(xyzw)
else
    mov r4.xy__, r0.wxww
    dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r1.___w, l101
endif
ult r3.__z_, r4.x, r0.y
ieq r3.___w, r4.x, r0.y
ult r4.__z_, r4.y, r0.z
and r4.__z_, r3.w, r4.z
ior r3.__z_, r3.z, r4.z
dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l103, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r3.__z_, r3.z, l102, l103
ieq r4.__z_, r4.y, r0.z
and r3.___w, r3.w, r4.z
dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.__z_, r3.w, l104, r3.z
dcl_literal l105, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.___w, r4.x, l105
dcl_literal l106, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r4.__z_, r4.x, l106
dcl_literal l107, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r4.___w, r4.y, l107
ior r3.___w, r3.w, r4.w
dcl_literal l108, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.___w, r3.w, l108
dcl_literal l109, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r4.___w, r4.y, l109
dcl_literal l110, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.z, l110
dcl_literal l111, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l111
dcl_literal l112, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l112
dcl_literal l113, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l113, r5.x_neg(xyzw)
dcl_literal l114, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l114
dcl_literal l115, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l115
dcl_literal l116, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.x___, r5.x, l116
dcl_literal l117, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.__z_, r4.z, r5.x, l117
dcl_literal l118, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r3.w, l118
dcl_literal l119, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l119
dcl_literal l120, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l120
dcl_literal l121, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l121, r5.x_neg(xyzw)
dcl_literal l122, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l122
dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l123
dcl_literal l124, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.x___, r5.x, l124
dcl_literal l125, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.___w, r3.w, r5.x, l125
dcl_literal l126, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.w, l126
dcl_literal l127, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l127
dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l128
dcl_literal l129, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l129, r5.x_neg(xyzw)
dcl_literal l130, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l130
dcl_literal l131, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l131
dcl_literal l132, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r5.x___, r5.x, l132
dcl_literal l133, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r4.___w, r4.w, r5.x, l133
dcl_literal l134, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r5.x___, r4.z, l134
iadd r3.___w, r4.z, r3.w
cmov_logical r4.__z_, r5.x, r3.w, r4.z
dcl_literal l135, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r5.x___, r3.w, l135
iadd r3.___w, r3.w, r4.w
cmov_logical r3.___w, r5.x, r3.w, r4.z
ilt r4.__z_, r3.w, r2.w
ieq r4.___w, r2.w, r3.w
dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r3.__z_, r3.z, l136
and r3.__z_, r4.w, r3.z
ior r3.__z_, r4.z, r3.z
and r1.__z_, r1.z, r3.z
iadd r3.__z_, r2.w, r3.w_neg(xyzw)
dcl_literal l137, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.__z_, r1.z, r3.z, l137
ilt r3.__z_, r3.x, r1.z
iadd r4.__z_, r1.z, r3.x_neg(xyzw)
and r3.__z_, r3.z, r4.z
dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r4.__z_, r1.z, l138
dcl_literal l139, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.__z_, r4.z, l139, r3.z
dcl_literal l140, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l140
if_logicalnz r1.z
    dcl_literal l141, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.__z_, r3.z, l141
    dcl_literal l142, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.___w, r3.z, l142
    cmov_logical r4.___w, r4.z, r4.w, r3.z
    dcl_literal l143, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r3.z, l143
    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5._y__, l144, r4.w_neg(xyzw)
    ushr r5._y__, r0.z, r5.y
    ishl r4.___w, r0.z, r4.w
    ishl r5.x___, r0.y, r5.x
    ior r5.x___, r5.y, r5.x
    cmov_logical r5.x___, r4.z, r0.z, r5.x
    dcl_literal l145, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.__z_, r4.z, l145, r4.w
    cmov_logical r4.___w, r3.z, r5.x, r0.y
    cmov_logical r4.__z_, r3.z, r4.z, r0.z
    dcl_literal l146, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r5.x___, r3.w, l146
    dcl_literal l147, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5._y__, r3.w, l147
    cmov_logical r5._y__, r5.x, r5.y, r3.w
    dcl_literal l148, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.__z_, r3.w, l148
    dcl_literal l149, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5._y__, l149, r5.y_neg(xyzw)
    ushr r5.___w, r4.y, r5.y
    ishl r6.x___, r4.x, r5.z
    ior r5.___w, r5.w, r6.x
    cmov_logical r5.___w, r5.x, r4.y, r5.w
    cmov_logical r5.___w, r3.w, r5.w, r4.x
    ushr r5._y__, r4.z, r5.y
    ishl r5.__z_, r4.w, r5.z
    ior r5._y__, r5.y, r5.z
    cmov_logical r5.x___, r5.x, r4.z, r5.y
    cmov_logical r3.___w, r3.w, r5.x, r4.w
    udiv r5.x___, r5.w, r3.w
    umul r5._y__, r5.x, r3.w
    ilt r5.__z_, r5.w, r5.y
    iadd r6.x___, r5.y, r5.w_neg(xyzw)
    iadd r6.x___, r6.x, r3.w
    dcl_literal l150, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6.x___, r6.x, l150
    iadd r5._y__, r5.w, r5.y_neg(xyzw)
    cmov_logical r5._y__, r5.z, r6.x, r5.y
    udiv r3.___w, r5.y, r3.w
    iadd r5._y__, r5.x, r3.w_neg(xyzw)
    iadd r3.___w, r5.x, r3.w
    cmov_logical r3.___w, r5.z, r5.y, r3.w
    dcl_literal l151, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r4.z, l151
    dcl_literal l152, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r4.z, l152
    dcl_literal l153, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r3.w, l153
    dcl_literal l154, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r3.w, l154
    umul r6.x___, r5.y, r5.w
    umul r5._y__, r5.y, r5.z
    umul r6._y__, r5.x, r5.w
    umul r5.x___, r5.x, r5.z
    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.__z_, r5.x, l155
    dcl_literal l156, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.___w, r6.y, l156
    iadd r6.__z_, r6.z, r6.w
    iadd r5._y__, r5.y, r6.z
    dcl_literal l157, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.__z_, r5.y, l157
    iadd r6.x___, r6.x, r6.z
    dcl_literal l158, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r6.y, l158
    iadd r6.x___, r6.x, r6.y
    dcl_literal l159, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5._y__, r5.y, l159
    dcl_literal l160, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l160
    ior r5.x___, r5.y, r5.x
    dcl_literal l161, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l161
    dcl_literal l162, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r4.w, l162
    umul r6._y__, r6.y, r5.z
    umul r5._y_w, r5.y, r5.zzzw
    dcl_literal l163, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r5.y, l163
    dcl_literal l164, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.w, l164
    iadd r5.__z_, r5.z, r5.w
    iadd r5.__z_, r6.y, r5.z
    dcl_literal l165, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5.__z_, r5.z, l165
    dcl_literal l166, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r5.y, l166
    ior r5._y__, r5.z, r5.y
    iadd r5.__z_, r5.y, r6.x
    ult r5._y__, r5.z, r5.y
    ult r5.___w, r4.x, r5.z
    ieq r6.x___, r4.x, r5.z
    ult r6._y__, r4.y, r5.x
    and r6._y__, r6.x, r6.y
    ior r5.___w, r5.w, r6.y
    dcl_literal l167, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l168, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r5.___w, r5.w, l167, l168
    ieq r6._y__, r4.y, r5.x
    and r6.x___, r6.x, r6.y
    dcl_literal l169, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r5.___w, r6.x, l169, r5.w
    dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5.___w, r5.w, l170
    ior r5._y__, r5.y, r5.w
    dcl_literal l171, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.___w, r3.w, l171
    cmov_logical r3.___w, r5.y, r5.w, r3.w
    iadd r4.__z_, r5.x, r4.z_neg(xyzw)
    ult r5.___w, r5.x, r4.z
    iadd r5.___w, r5.z, r5.w
    iadd r4.___w, r5.w, r4.w_neg(xyzw)
    cmov_logical r4.__zw, r5.y, r4.zzzw, r5.xxxz
    iadd r4.__z_, r4.y, r4.z_neg(xyzw)
    ult r5.x___, r4.y, r4.z
    iadd r5.x___, r4.x, r5.x
    iadd r4.x___, r5.x, r4.w_neg(xyzw)
    mov r4.xy__, r4.xzxx
else
    dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r3.___w, l172
endif
ult r4.__z_, r4.x, r0.y
ieq r4.___w, r4.x, r0.y
ult r5.x___, r4.y, r0.z
and r5.x___, r4.w, r5.x
ior r4.__z_, r4.z, r5.x
dcl_literal l173, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l174, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r4.__z_, r4.z, l173, l174
ieq r5.x___, r4.y, r0.z
and r4.___w, r4.w, r5.x
dcl_literal l175, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.__z_, r4.w, l175, r4.z
dcl_literal l176, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r4.___w, r4.x, l176
dcl_literal l177, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r5.x___, r4.x, l177
dcl_literal l178, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r5._y__, r4.y, l178
ior r4.___w, r4.w, r5.y
dcl_literal l179, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r4.___w, r4.w, l179
dcl_literal l180, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r5._y__, r4.y, l180
dcl_literal l181, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r5.x, l181
dcl_literal l182, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l182
dcl_literal l183, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l183
dcl_literal l184, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l184, r5.z_neg(xyzw)
dcl_literal l185, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l185
dcl_literal l186, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l186
dcl_literal l187, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.__z_, r5.z, l187
dcl_literal l188, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r5.x___, r5.x, r5.z, l188
dcl_literal l189, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r4.w, l189
dcl_literal l190, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l190
dcl_literal l191, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l191
dcl_literal l192, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l192, r5.z_neg(xyzw)
dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l193
dcl_literal l194, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l194
dcl_literal l195, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.__z_, r5.z, l195
dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.___w, r4.w, r5.z, l196
dcl_literal l197, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r5.y, l197
dcl_literal l198, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l198
dcl_literal l199, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l199
dcl_literal l200, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l200, r5.z_neg(xyzw)
dcl_literal l201, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l201
dcl_literal l202, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l202
dcl_literal l203, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r5.__z_, r5.z, l203
dcl_literal l204, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r5._y__, r5.y, r5.z, l204
dcl_literal l205, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r5.__z_, r5.x, l205
iadd r4.___w, r5.x, r4.w
cmov_logical r5.x___, r5.z, r4.w, r5.x
dcl_literal l206, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r5.__z_, r4.w, l206
iadd r4.___w, r4.w, r5.y
cmov_logical r4.___w, r5.z, r4.w, r5.x
ilt r5.x___, r4.w, r2.w
ieq r5._y__, r2.w, r4.w
dcl_literal l207, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r4.__z_, r4.z, l207
and r4.__z_, r5.y, r4.z
ior r4.__z_, r5.x, r4.z
and r1.__z_, r1.z, r4.z
iadd r4.__z_, r2.w, r4.w_neg(xyzw)
dcl_literal l208, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.__z_, r1.z, r4.z, l208
ilt r4.__z_, r3.x, r1.z
iadd r5.x___, r1.z, r3.x_neg(xyzw)
and r4.__z_, r4.z, r5.x
dcl_literal l209, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r5.x___, r1.z, l209
dcl_literal l210, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.__z_, r5.x, l210, r4.z
dcl_literal l211, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l211
if_logicalnz r1.z
    dcl_literal l212, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r5.x___, r4.z, l212
    dcl_literal l213, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5._y__, r4.z, l213
    cmov_logical r5._y__, r5.x, r5.y, r4.z
    dcl_literal l214, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.__z_, r4.z, l214
    dcl_literal l215, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.___w, l215, r5.y_neg(xyzw)
    ushr r5.___w, r0.z, r5.w
    ishl r5._y__, r0.z, r5.y
    ishl r5.__z_, r0.y, r5.z
    ior r5.__z_, r5.w, r5.z
    cmov_logical r5.__z_, r5.x, r0.z, r5.z
    dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r5.x___, r5.x, l216, r5.y
    cmov_logical r5.xy__, r4.z, r5.xzxx, r0.zyzz
    dcl_literal l217, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r5.__z_, r4.w, l217
    dcl_literal l218, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5.___w, r4.w, l218
    cmov_logical r5.___w, r5.z, r5.w, r4.w
    dcl_literal l219, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r6.x___, r4.w, l219
    dcl_literal l220, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.___w, l220, r5.w_neg(xyzw)
    ushr r6._y__, r4.y, r5.w
    ishl r6.__z_, r4.x, r6.x
    ior r6._y__, r6.y, r6.z
    cmov_logical r6._y__, r5.z, r4.y, r6.y
    cmov_logical r6._y__, r4.w, r6.y, r4.x
    ushr r5.___w, r5.x, r5.w
    ishl r6.x___, r5.y, r6.x
    ior r5.___w, r5.w, r6.x
    cmov_logical r5.__z_, r5.z, r5.x, r5.w
    cmov_logical r4.___w, r4.w, r5.z, r5.y
    udiv r5.__z_, r6.y, r4.w
    umul r5.___w, r5.z, r4.w
    ilt r6.x___, r6.y, r5.w
    iadd r6.__z_, r5.w, r6.y_neg(xyzw)
    iadd r6.__z_, r6.z, r4.w
    dcl_literal l221, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6.__z_, r6.z, l221
    iadd r5.___w, r6.y, r5.w_neg(xyzw)
    cmov_logical r5.___w, r6.x, r6.z, r5.w
    udiv r4.___w, r5.w, r4.w
    iadd r5.___w, r5.z, r4.w_neg(xyzw)
    iadd r4.___w, r5.z, r4.w
    cmov_logical r4.___w, r6.x, r5.w, r4.w
    dcl_literal l222, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r5.x, l222
    dcl_literal l223, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r5.x, l223
    dcl_literal l224, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.x___, r4.w, l224
    dcl_literal l225, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r4.w, l225
    umul r6.__z_, r5.w, r6.y
    umul r5.___w, r5.w, r6.x
    umul r6.___w, r5.z, r6.y
    umul r5.__z_, r5.z, r6.x
    dcl_literal l226, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r7.x___, r5.z, l226
    dcl_literal l227, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r7._y__, r6.w, l227
    iadd r7.x___, r7.x, r7.y
    iadd r5.___w, r5.w, r7.x
    dcl_literal l228, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r7.x___, r5.w, l228
    iadd r6.__z_, r6.z, r7.x
    dcl_literal l229, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.___w, r6.w, l229
    iadd r6.__z_, r6.z, r6.w
    dcl_literal l230, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5.___w, r5.w, l230
    dcl_literal l231, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r5.z, l231
    ior r5.__z_, r5.w, r5.z
    dcl_literal l232, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.y, l232
    dcl_literal l233, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.___w, r5.y, l233
    umul r6.___w, r6.w, r6.x
    umul r6._y__, r5.w, r6.y
    umul r5.___w, r5.w, r6.x
    dcl_literal l234, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.x___, r5.w, l234
    dcl_literal l235, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6._y__, r6.y, l235
    iadd r6.x___, r6.x, r6.y
    iadd r6.x___, r6.w, r6.x
    dcl_literal l236, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r6.x___, r6.x, l236
    dcl_literal l237, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.w, l237
    ior r5.___w, r6.x, r5.w
    iadd r6.x___, r5.w, r6.z
    ult r5.___w, r6.x, r5.w
    ult r6._y__, r4.x, r6.x
    ieq r6.__z_, r4.x, r6.x
    ult r6.___w, r4.y, r5.z
    and r6.___w, r6.z, r6.w
    ior r6._y__, r6.y, r6.w
    dcl_literal l238, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l239, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r6._y__, r6.y, l238, l239
    ieq r6.___w, r4.y, r5.z
    and r6.__z_, r6.z, r6.w
    dcl_literal l240, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r6._y__, r6.z, l240, r6.y
    dcl_literal l241, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r6._y__, r6.y, l241
    ior r5.___w, r5.w, r6.y
    dcl_literal l242, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6._y__, r4.w, l242
    cmov_logical r4.___w, r5.w, r6.y, r4.w
    iadd r5.x___, r5.z, r5.x_neg(xyzw)
    ult r6._y__, r5.z, r5.x
    iadd r6._y__, r6.x, r6.y
    iadd r5._y__, r6.y, r5.y_neg(xyzw)
    cmov_logical r5._y__, r5.w, r5.y, r6.x
    cmov_logical r5.x___, r5.w, r5.x, r5.z
    iadd r5.x___, r4.y, r5.x_neg(xyzw)
    ult r5.__z_, r4.y, r5.x
    iadd r5.__z_, r4.x, r5.z
    iadd r4.x___, r5.z, r5.y_neg(xyzw)
    mov r4._y__, r5.x
else
    dcl_literal l243, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r4.___w, l243
endif
ult r5.x___, r4.x, r0.y
ieq r5._y__, r4.x, r0.y
ult r5.__z_, r4.y, r0.z
and r5.__z_, r5.y, r5.z
ior r5.x___, r5.x, r5.z
dcl_literal l244, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l245, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r5.x___, r5.x, l244, l245
ieq r5.__z_, r4.y, r0.z
and r5._y__, r5.y, r5.z
dcl_literal l246, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r5.x___, r5.y, l246, r5.x
dcl_literal l247, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r5._y__, r4.x, l247
dcl_literal l248, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r5.__z_, r4.x, l248
dcl_literal l249, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r5.___w, r4.y, l249
ior r5._y__, r5.y, r5.w
dcl_literal l250, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r5._y__, r5.y, l250
dcl_literal l251, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r5.___w, r4.y, l251
dcl_literal l252, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r6.x___, r5.z, l252
dcl_literal l253, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r6.x___, r6.x, l253
dcl_literal l254, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l254
dcl_literal l255, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r6.x___, l255, r6.x_neg(xyzw)
dcl_literal l256, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l256
dcl_literal l257, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r6.x___, r6.x, l257
dcl_literal l258, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r6.x___, r6.x, l258
dcl_literal l259, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r5.__z_, r5.z, r6.x, l259
dcl_literal l260, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r6.x___, r5.y, l260
dcl_literal l261, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r6.x___, r6.x, l261
dcl_literal l262, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l262
dcl_literal l263, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r6.x___, l263, r6.x_neg(xyzw)
dcl_literal l264, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l264
dcl_literal l265, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r6.x___, r6.x, l265
dcl_literal l266, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r6.x___, r6.x, l266
dcl_literal l267, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r5._y__, r5.y, r6.x, l267
dcl_literal l268, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r6.x___, r5.w, l268
dcl_literal l269, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r6.x___, r6.x, l269
dcl_literal l270, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l270
dcl_literal l271, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r6.x___, l271, r6.x_neg(xyzw)
dcl_literal l272, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l272
dcl_literal l273, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r6.x___, r6.x, l273
dcl_literal l274, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r6.x___, r6.x, l274
dcl_literal l275, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r5.___w, r5.w, r6.x, l275
dcl_literal l276, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r6.x___, r5.z, l276
iadd r5._y__, r5.z, r5.y
cmov_logical r5.__z_, r6.x, r5.y, r5.z
dcl_literal l277, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r6.x___, r5.y, l277
iadd r5._y__, r5.y, r5.w
cmov_logical r5._y__, r6.x, r5.y, r5.z
ilt r5.__z_, r5.y, r2.w
ieq r5.___w, r2.w, r5.y
dcl_literal l278, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r5.x___, r5.x, l278
and r5.x___, r5.w, r5.x
ior r5.x___, r5.z, r5.x
and r1.__z_, r1.z, r5.x
iadd r2.___w, r2.w, r5.y_neg(xyzw)
dcl_literal l279, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.__z_, r1.z, r2.w, l279
ilt r2.___w, r3.x, r1.z
iadd r3.x___, r1.z, r3.x_neg(xyzw)
and r2.___w, r2.w, r3.x
dcl_literal l280, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r3.x___, r1.z, l280
dcl_literal l281, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r3.x, l281, r2.w
dcl_literal l282, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l282
if_logicalnz r1.z
    dcl_literal l283, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r1.__z_, r2.w, l283
    dcl_literal l284, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.x___, r2.w, l284
    cmov_logical r3.x___, r1.z, r3.x, r2.w
    dcl_literal l285, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r2.w, l285
    dcl_literal l286, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.__z_, l286, r3.x_neg(xyzw)
    ushr r5.__z_, r0.z, r5.z
    ishl r3.x___, r0.z, r3.x
    ishl r5.x___, r0.y, r5.x
    ior r5.x___, r5.z, r5.x
    cmov_logical r5.x___, r1.z, r0.z, r5.x
    dcl_literal l287, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.__z_, r1.z, l287, r3.x
    cmov_logical r0._y__, r2.w, r5.x, r0.y
    cmov_logical r1.__z_, r2.w, r1.z, r0.z
    dcl_literal l288, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.x___, r5.y, l288
    dcl_literal l289, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5.x___, r5.y, l289
    cmov_logical r5.x___, r3.x, r5.x, r5.y
    dcl_literal l290, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.__z_, r5.y, l290
    dcl_literal l291, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.x___, l291, r5.x_neg(xyzw)
    ushr r5.___w, r4.y, r5.x
    ishl r6.x___, r4.x, r5.z
    ior r5.___w, r5.w, r6.x
    cmov_logical r5.___w, r3.x, r4.y, r5.w
    cmov_logical r5.___w, r5.y, r5.w, r4.x
    ushr r5.x___, r1.z, r5.x
    ishl r5.__z_, r0.y, r5.z
    ior r5.x___, r5.x, r5.z
    cmov_logical r3.x___, r3.x, r1.z, r5.x
    cmov_logical r3.x___, r5.y, r3.x, r0.y
    udiv r5.x___, r5.w, r3.x
    umul r5._y__, r5.x, r3.x
    ilt r5.__z_, r5.w, r5.y
    iadd r6.x___, r5.y, r5.w_neg(xyzw)
    iadd r6.x___, r6.x, r3.x
    dcl_literal l292, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6.x___, r6.x, l292
    iadd r5._y__, r5.w, r5.y_neg(xyzw)
    cmov_logical r5._y__, r5.z, r6.x, r5.y
    udiv r3.x___, r5.y, r3.x
    iadd r5._y__, r5.x, r3.x_neg(xyzw)
    iadd r3.x___, r5.x, r3.x
    cmov_logical r3.x___, r5.z, r5.y, r3.x
    dcl_literal l293, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r1.z, l293
    dcl_literal l294, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r1.__z_, r1.z, l294
    dcl_literal l295, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r3.x, l295
    dcl_literal l296, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r3.x, l296
    umul r5.___w, r1.z, r5.z
    umul r1.__z_, r1.z, r5.y
    umul r6.x___, r5.x, r5.z
    umul r5.x___, r5.x, r5.y
    dcl_literal l297, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r5.x, l297
    dcl_literal l298, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.__z_, r6.x, l298
    iadd r6._y__, r6.y, r6.z
    iadd r1.__z_, r1.z, r6.y
    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r1.z, l299
    iadd r5.___w, r5.w, r6.y
    dcl_literal l300, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.x___, r6.x, l300
    iadd r5.___w, r5.w, r6.x
    dcl_literal l301, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r1.__z_, r1.z, l301
    dcl_literal l302, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l302
    ior r1.__z_, r1.z, r5.x
    dcl_literal l303, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r0.y, l303
    dcl_literal l304, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r0._y__, r0.y, l304
    umul r0._y__, r0.y, r5.y
    umul r5.x_z_, r5.x, r5.yyzy
    dcl_literal l305, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r5.x, l305
    dcl_literal l306, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r5.z, l306
    iadd r5._y__, r5.y, r5.z
    iadd r0._y__, r0.y, r5.y
    dcl_literal l307, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r0._y__, r0.y, l307
    dcl_literal l308, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l308
    ior r0._y__, r0.y, r5.x
    iadd r5.x___, r0.y, r5.w
    ult r0._y__, r5.x, r0.y
    ult r5._y__, r4.x, r5.x
    ieq r4.x___, r4.x, r5.x
    ult r5.x___, r4.y, r1.z
    and r5.x___, r4.x, r5.x
    ior r5.x___, r5.y, r5.x
    dcl_literal l309, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l310, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r5.x___, r5.x, l309, l310
    ieq r1.__z_, r4.y, r1.z
    and r1.__z_, r4.x, r1.z
    dcl_literal l311, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.__z_, r1.z, l311, r5.x
    dcl_literal l312, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.__z_, r1.z, l312
    ior r0._y__, r0.y, r1.z
    dcl_literal l313, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r1.__z_, r3.x, l313
    cmov_logical r0._y__, r0.y, r1.z, r3.x
else
    dcl_literal l314, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0._y__, l314
endif
dcl_literal l315, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r3.y, l315
dcl_literal l316, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.x___, r3.y, l316
cmov_logical r3.x___, r1.z, r3.x, r3.y
dcl_literal l317, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r4.x___, l317, r3.x_neg(xyzw)
ushr r4.x___, r1.w, r4.x
ishl r3.x___, r1.w, r3.x
cmov_logical r4.x___, r1.z, r1.w, r4.x
dcl_literal l318, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.z, l318, r3.x
dcl_literal l319, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r3.y, r4.x, l319
cmov_logical r1.__z_, r3.y, r1.z, r1.w
dcl_literal l320, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.___w, r3.z, l320
dcl_literal l321, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3._y__, r3.z, l321
cmov_logical r3._y__, r1.w, r3.y, r3.z
dcl_literal l322, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r4.x___, l322, r3.y_neg(xyzw)
ushr r4.x___, r3.w, r4.x
ishl r3._y__, r3.w, r3.y
cmov_logical r4.x___, r1.w, r3.w, r4.x
dcl_literal l323, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.___w, r1.w, l323, r3.y
dcl_literal l324, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3._y__, r3.z, r4.x, l324
cmov_logical r1.___w, r3.z, r1.w, r3.w
iadd r1.___w, r1.z, r1.w
ult r1.__z_, r1.w, r1.z
dcl_literal l325, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r1.z, l325
iadd r1.__z_, r3.x, r1.z
iadd r1.__z_, r3.y, r1.z
dcl_literal l326, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r3.x___, r4.z, l326
dcl_literal l327, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3._y__, r4.z, l327
cmov_logical r3._y__, r3.x, r3.y, r4.z
dcl_literal l328, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.__z_, l328, r3.y_neg(xyzw)
ushr r3.__z_, r4.w, r3.z
ishl r3._y__, r4.w, r3.y
cmov_logical r3.__z_, r3.x, r4.w, r3.z
dcl_literal l329, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r3.x, l329, r3.y
dcl_literal l330, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3._y__, r4.z, r3.z, l330
cmov_logical r3.x___, r4.z, r3.x, r4.w
iadd r3.x___, r1.w, r3.x
ult r1.___w, r3.x, r1.w
dcl_literal l331, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.___w, r1.w, l331
iadd r1.__z_, r1.z, r1.w
iadd r1.__z_, r3.y, r1.z
dcl_literal l332, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.___w, r2.w, l332
dcl_literal l333, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3._y__, r2.w, l333
cmov_logical r3._y__, r1.w, r3.y, r2.w
dcl_literal l334, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.__z_, l334, r3.y_neg(xyzw)
ushr r3.__z_, r0.y, r3.z
ishl r3._y__, r0.y, r3.y
cmov_logical r3.__z_, r1.w, r0.y, r3.z
dcl_literal l335, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.___w, r1.w, l335, r3.y
dcl_literal l336, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3._y__, r2.w, r3.z, l336
cmov_logical r0._y__, r2.w, r1.w, r0.y
iadd r0._y__, r3.x, r0.y
ult r1.___w, r0.y, r3.x
dcl_literal l337, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.___w, r1.w, l337
iadd r1.__z_, r1.z, r1.w
iadd r1.__z_, r3.y, r1.z
dcl_literal l338, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.___w, r2.x, l338
dcl_literal l339, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.w, l339, r1.z
dcl_literal l340, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r1.w, l340, r0.y
dcl_literal l341, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ieq r0.__z_, r0.z, l341
and r0.__z_, r2.y, r0.z
cmov_logical r0.___w, r0.z, r0.w, r1.z
cmov_logical r0.x___, r0.z, r0.x, r0.y
dcl_literal l342, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r2.z, l342, r0.xwxx
inegate r0.__z_, r0.x
dcl_literal l343, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r0.___w, l343, r0.z
iadd r0.___w, r0.w, r0.y_neg(xyzw)
ixor r1.x___, r1.y, r1.x
cmov_logical r0.xy__, r1.x, r0.zwzz, r0.xyxx
mov out0, r0
mend
__sdiv_i8
mdef(65)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l1, 0x000000FF, 0x000000FF, 0x00000080, 0x00000000
and r1.xyz_, r0.xyxx, l1
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l2
dcl_literal l3, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00
ior r1.___w, r1.x, l3
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l4, 0x00000080, 0x00000080, 0x00000080, 0x00000080
and r1.__z_, r0.w, l4
dcl_literal l5, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00
ior r1.___w, r0.w, l5
cmov_logical r0.___w, r1.z, r1.w, r0.w
ixor r1.__z_, r1.x, r0.w
imax r1.x___, r1.x, r1.x_neg(xyzw)
imax r0.___w, r0.w, r0.w_neg(xyzw)
udiv r0.___w, r1.x, r0.w
inegate r1.x___, r0.w
dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r1.__z_, r1.z, l6
cmov_logical r0.___w, r1.z, r1.x, r0.w
dcl_literal l7, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.___w, r0.w, l7
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r1.y, r0.w, l8
mov r0.x___, r0.z
mov out0, r0
mend
__shl_apple_i64
mdef(66)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ishl r5.x, r0.x, r2.x
ishl r6.x, r0.y, r2.x
ushr r7.x, r0.x, r4.x
cmov_logical r8.x, r2.x, r7.x, l0.z
ior r9.x, r6.x, r8.x
cmov_logical r0.x___, r3.x, l0.z, r5.x
cmov_logical r0._y__, r3.x, r5.x, r9.x
mov out0, r0
mend
__shl_apple_v2i64
mdef(67)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ishl r5.x_z, r0.x0z, r2.x0z
ishl r6.x_z, r0.y0w, r2.x0z
ushr r7.x_z, r0.x0z, r4.x0z
cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z
ior r9.x_z, r6.x0z, r8.x0z
cmov_logical r0.x_z_, r3.x0z, l0.z, r5.x0z
cmov_logical r0._y_w, r3.0x0z, r5.0x0z, r9.0x0z
mov out0, r0
mend
__shl_i64
mdef(68)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ishl r5.x, r0.x, r2.x
ishl r6.x, r0.y, r2.x
ushr r7.x, r0.x, r4.x
cmov_logical r8.x, r2.x, r7.x, l0.z
ior r9.x, r6.x, r8.x
cmov_logical r0.x___, r3.x, l0.z, r5.x
cmov_logical r0._y__, r3.x, r5.x, r9.x
mov out0, r0
mend
__shl_v2i64
mdef(69)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ishl r5.x_z, r0.x0z, r2.x0z
ishl r6.x_z, r0.y0w, r2.x0z
ushr r7.x_z, r0.x0z, r4.x0z
cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z
ior r9.x_z, r6.x0z, r8.x0z
cmov_logical r0.x_z_, r3.x0z, l0.z, r5.x0z
cmov_logical r0._y_w, r3.0x0z, r5.0x0z, r9.0x0z
mov out0, r0
mend
__shr_apple_i64
mdef(70)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ushr r5.x, r0.y, r2.x
ushr r6.x, r0.x, r2.x
ishl r7.x, r0.y, r4.x
cmov_logical r8.x, r2.x, r7.x, l0.z
ior r9.x, r6.x, r8.x
cmov_logical r0.x___, r3.x, r5.x, r9.x
cmov_logical r0._y__, r3.x, l0.z, r5.x
mov out0, r0
mend
__shr_apple_v2i64
mdef(71)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ushr r5.x_z, r0.y0w, r2.x0z
ushr r6.x_z, r0.x0z, r2.x0z
ishl r7.x_z, r0.y0w, r4.x0z
cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z
ior r9.x_z, r6.x0z, r8.x0z
cmov_logical r0.x_z_, r3.x0z, r5.x0z, r9.x0z
cmov_logical r0._y_w, r3.0x0z, l0.z, r5.0x0z
mov out0, r0
mend
__shr_i64
mdef(72)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ushr r5.x, r0.y, r2.x
ushr r6.x, r0.x, r2.x
ishl r7.x, r0.y, r4.x
cmov_logical r8.x, r2.x, r7.x, l0.z
ior r9.x, r6.x, r8.x
cmov_logical r0.x___, r3.x, r5.x, r9.x
cmov_logical r0._y__, r3.x, l0.z, r5.x
mov out0, r0
mend
__shr_v2i64
mdef(73)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ushr r5.x_z, r0.y0w, r2.x0z
ushr r6.x_z, r0.x0z, r2.x0z
ishl r7.x_z, r0.y0w, r4.x0z
cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z
ior r9.x_z, r6.x0z, r8.x0z
cmov_logical r0.x_z_, r3.x0z, r5.x0z, r9.x0z
cmov_logical r0._y_w, r3.0x0z, l0.z, r5.0x0z
mov out0, r0
mend
__smod_i16
mdef(74)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l13, 0x0000FFFF, 0x0000FFFF, 0x00008000, 0x00000000
and r1.xyz_, r0.xyxx, l13
dcl_literal l14, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l14
dcl_literal l15, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
ior r1.___w, r1.x, l15
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l16, 0x00008000, 0x00008000, 0x00008000, 0x00008000
and r1.__z_, r0.w, l16
dcl_literal l17, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
ior r1.___w, r0.w, l17
cmov_logical r0.___w, r1.z, r1.w, r0.w
ixor r1.__z_, r1.x, r0.w
imax r1.___w, r1.x, r1.x_neg(xyzw)
imax r2.x___, r0.w, r0.w_neg(xyzw)
udiv r1.___w, r1.w, r2.x
inegate r2.x___, r1.w
dcl_literal l18, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r1.__z_, r1.z, l18
cmov_logical r1.__z_, r1.z, r2.x, r1.w
dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, r1.z, l19
imul r0.___w, r0.w, r1.y
iadd r0.___w, r1.x, r0.w_neg(xyzw)
dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.w, l20
mov r0.x___, r0.z
mov out0, r0
mend
__smod_i32
mdef(75)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l25, 0, 0, 0, 0
mov r0._y__, r1.x
ilt r1.xy, r0, l25
iadd r0.xy, r0, r1
ixor r0.xy, r0, r1
udiv r2.x, r0.x, r0.y
umul r2.x, r2.x, r0.y
iadd r0.x, r0.x, r2.x_neg(xyzw)
iadd r0.x, r0.x, r1.x
ixor r0.x, r0.x, r1.x
mov out0, r0
mend
__smod_i64
mdef(76)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0.__zw, r1.yyxy
dcl_literal l1, 0x80000000, 0x80000000, 0x00000000, 0x00000000
and r1.xy__, r0.ywyy, l1
inegate r2, r0
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r1.__zw, l2, r2.zzzx
iadd r1.__zw, r1.zzzw, r2.wwwy
cmov_logical r0._y_w, r1.yyyx, r1.zzzw, r0.wwwy
cmov_logical r0.x_z_, r1.xxyx, r2.xxzx, r0.xxzx
ult r1._y__, r0.w, r0.y
ieq r1.__z_, r0.w, r0.y
ult r1.___w, r0.x, r0.z
and r1.___w, r1.z, r1.w
ior r1.___w, r1.y, r1.w
dcl_literal l3, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.___w, r1.w, l3, l4
ieq r2.x___, r0.x, r0.z
and r2.x___, r1.z, r2.x
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.___w, r2.x, l5, r1.w
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r2.xy__, r0.yzyy, l6
and r2.x___, r2.y, r2.x
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.__z_, r2.x, l7, r0.z
dcl_literal l8, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r2._yz_, r0.yywy, l8
dcl_literal l9, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.xy__, r0.ywyy, l9
dcl_literal l10, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.___w, r0.z, l10
ior r2.___w, r3.x, r2.w
dcl_literal l11, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r2.w, l11
dcl_literal l12, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.x___, r0.z, l12
dcl_literal l13, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000
ior r3.__zw, r2.yyyz, l13
dcl_literal l14, 0x00000000, 0x00000000, 0xBF800000, 0xBF800000
add r3.__zw, r3.zzzw, l14
dcl_literal l15, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
and r3.__zw, r3.zzzw, l15
dcl_literal l16, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000
iadd r3.__zw, l16, r3.zzzw_neg(xyzw)
dcl_literal l17, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
and r3.__zw, r3.zzzw, l17
dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__zw, r3.zzzw, l18
dcl_literal l19, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.__zw, r3.zzzw, l19
dcl_literal l20, 0x00000000, 0x00000017, 0x00000017, 0x00000000
cmov_logical r2._yz_, r2.yyzy, r3.zzwz, l20
dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.__z_, r2.w, l21
dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.__z_, r3.z, l22
dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l23
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.__z_, l24, r3.z_neg(xyzw)
dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l25
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__z_, r3.z, l26
dcl_literal l27, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.__z_, r3.z, l27
dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r2.___w, r2.w, r3.z, l28
dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.__z_, r3.x, l29
dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.__z_, r3.z, l30
dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l31
dcl_literal l32, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.__z_, l32, r3.z_neg(xyzw)
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l33
dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__z_, r3.z, l34
dcl_literal l35, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.__z_, r3.z, l35
dcl_literal l36, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.x___, r3.x, r3.z, l36
dcl_literal l37, 0x00000000, 0x00000000, 0x00000017, 0x00000017
ieq r3.__zw, r2.yyyz, l37
iadd r2.___w, r2.y, r2.w
cmov_logical r2._y__, r3.z, r2.w, r2.y
dcl_literal l38, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.__z_, r2.w, l38
iadd r2.___w, r2.w, r3.x
cmov_logical r2._y__, r3.z, r2.w, r2.y
dcl_literal l39, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r2.___w, r2.y, l39
dcl_literal l40, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.x___, r2.y, l40
dcl_literal l41, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F
cmov_logical r2.___w, r2.w, r3.x, l41
ult r3.x___, r0.x, r0.z
and r3.x___, r1.z, r3.x
ior r1._y__, r1.y, r3.x
dcl_literal l42, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l43, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1._y__, r1.y, l42, l43
ieq r3.x___, r0.x, r0.z
and r1.__z_, r1.z, r3.x
dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l44, r1.y
dcl_literal l45, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r1.__z_, r0.x, l45
ior r1.__z_, r3.y, r1.z
dcl_literal l46, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.__z_, r1.z, l46
dcl_literal l47, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.x___, r0.x, l47
dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3._y__, r1.z, l48
dcl_literal l49, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3._y__, r3.y, l49
dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l50
dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3._y__, l51, r3.y_neg(xyzw)
dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l52
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3._y__, r3.y, l53
dcl_literal l54, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3._y__, r3.y, l54
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.__z_, r1.z, r3.y, l55
dcl_literal l56, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3._y__, r3.x, l56
dcl_literal l57, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3._y__, r3.y, l57
dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l58
dcl_literal l59, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3._y__, l59, r3.y_neg(xyzw)
dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l60
dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3._y__, r3.y, l61
dcl_literal l62, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3._y__, r3.y, l62
dcl_literal l63, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.x___, r3.x, r3.y, l63
iadd r1.__z_, r2.z, r1.z
cmov_logical r2.__z_, r3.w, r1.z, r2.z
dcl_literal l64, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3._y__, r1.z, l64
iadd r1.__z_, r1.z, r3.x
cmov_logical r1.__z_, r3.y, r1.z, r2.z
ilt r2.__z_, r1.z, r2.y
ieq r3.x___, r2.y, r1.z
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1._y__, r1.y, l65
and r1._y__, r3.x, r1.y
ior r1._y__, r2.z, r1.y
iadd r2.__z_, r2.y, r1.z_neg(xyzw)
dcl_literal l66, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1._y__, r1.y, r2.z, l66
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r1.y, l67
if_logicalnz r2.z
    ilt r3.x___, r2.w, r1.y
    iadd r3._y__, r1.y, r2.w_neg(xyzw)
    and r3.x___, r3.x, r3.y
    dcl_literal l68, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1._y__, r1.y, l68
    dcl_literal l69, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1._y__, r1.y, l69, r3.x
    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.x___, r1.y, l70
    dcl_literal l71, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3._y__, r1.y, l71
    cmov_logical r3._y__, r3.x, r3.y, r1.y
    dcl_literal l72, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.__z_, r1.y, l72
    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l73, r3.y_neg(xyzw)
    ushr r3.___w, r0.z, r3.w
    ishl r3._y__, r0.z, r3.y
    ishl r3.__z_, r0.y, r3.z
    ior r3.__z_, r3.w, r3.z
    cmov_logical r3.__z_, r3.x, r0.z, r3.z
    dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.x___, r3.x, l74, r3.y
    cmov_logical r3._y__, r1.y, r3.z, r0.y
    cmov_logical r1._y__, r1.y, r3.x, r0.z
    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.x___, r1.z, l75
    dcl_literal l76, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.__z_, r1.z, l76
    cmov_logical r3.__z_, r3.x, r3.z, r1.z
    dcl_literal l77, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.___w, r1.z, l77
    dcl_literal l78, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.__z_, l78, r3.z_neg(xyzw)
    ushr r4.x___, r0.x, r3.z
    ishl r4._y__, r0.w, r3.w
    ior r4.x___, r4.x, r4.y
    cmov_logical r4.x___, r3.x, r0.x, r4.x
    cmov_logical r4.x___, r1.z, r4.x, r0.w
    ushr r3.__z_, r1.y, r3.z
    ishl r3.___w, r3.y, r3.w
    ior r3.__z_, r3.z, r3.w
    cmov_logical r3.x___, r3.x, r1.y, r3.z
    cmov_logical r1.__z_, r1.z, r3.x, r3.y
    udiv r3.x___, r4.x, r1.z
    umul r3.__z_, r3.x, r1.z
    ilt r3.___w, r4.x, r3.z
    iadd r4._y__, r3.z, r4.x_neg(xyzw)
    iadd r4._y__, r4.y, r1.z
    dcl_literal l79, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4._y__, r4.y, l79
    iadd r3.__z_, r4.x, r3.z_neg(xyzw)
    cmov_logical r3.__z_, r3.w, r4.y, r3.z
    udiv r1.__z_, r3.z, r1.z
    iadd r3.__z_, r3.x, r1.z_neg(xyzw)
    iadd r1.__z_, r3.x, r1.z
    cmov_logical r1.__z_, r3.w, r3.z, r1.z
    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r1.y, l80
    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r1.y, l81
    dcl_literal l82, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r1.z, l82
    dcl_literal l83, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r1.__z_, r1.z, l83
    umul r4.x___, r3.z, r1.z
    umul r3.__z_, r3.z, r3.w
    umul r4._y__, r3.x, r1.z
    umul r3.x___, r3.x, r3.w
    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r3.x, l84
    dcl_literal l85, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r4.y, l85
    iadd r4.__z_, r4.z, r4.w
    iadd r3.__z_, r3.z, r4.z
    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r3.z, l86
    iadd r4.x___, r4.x, r4.z
    dcl_literal l87, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r4.y, l87
    iadd r4.x___, r4.x, r4.y
    dcl_literal l88, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.__z_, r3.z, l88
    dcl_literal l89, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r3.x, l89
    ior r3.x___, r3.z, r3.x
    dcl_literal l90, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.y, l90
    dcl_literal l91, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r3.y, l91
    umul r4._y__, r4.y, r3.w
    umul r1.__z_, r3.z, r1.z
    umul r3.__z_, r3.z, r3.w
    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r3.z, l92
    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r1.__z_, r1.z, l93
    iadd r1.__z_, r3.w, r1.z
    iadd r1.__z_, r4.y, r1.z
    dcl_literal l94, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r1.__z_, r1.z, l94
    dcl_literal l95, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.z, l95
    ior r1.__z_, r1.z, r3.z
    iadd r3.__z_, r1.z, r4.x
    ult r1.__z_, r3.z, r1.z
    ult r3.___w, r0.w, r3.z
    ieq r4.x___, r0.w, r3.z
    ult r4._y__, r0.x, r3.x
    and r4._y__, r4.x, r4.y
    ior r3.___w, r3.w, r4.y
    dcl_literal l96, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l97, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r3.___w, r3.w, l96, l97
    ieq r4._y__, r0.x, r3.x
    and r4.x___, r4.x, r4.y
    dcl_literal l98, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.___w, r4.x, l98, r3.w
    dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3.___w, r3.w, l99
    ior r1.__z_, r1.z, r3.w
    iadd r1._y__, r3.x, r1.y_neg(xyzw)
    ult r3.___w, r3.x, r1.y
    iadd r3.___w, r3.z, r3.w
    iadd r3._y__, r3.w, r3.y_neg(xyzw)
    cmov_logical r3._y__, r1.z, r3.y, r3.z
    cmov_logical r1._y__, r1.z, r1.y, r3.x
    iadd r1.__z_, r0.x, r1.y_neg(xyzw)
    ult r3.x___, r0.x, r1.z
    iadd r3.x___, r0.w, r3.x
    iadd r1._y__, r3.x, r3.y_neg(xyzw)
else
    mov r1._yz_, r0.wwxw
endif
ult r3.x___, r1.y, r0.y
ieq r3._y__, r1.y, r0.y
ult r3.__z_, r1.z, r0.z
and r3.__z_, r3.y, r3.z
ior r3.x___, r3.x, r3.z
dcl_literal l100, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l101, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r3.x___, r3.x, l100, l101
ieq r3.__z_, r1.z, r0.z
and r3._y__, r3.y, r3.z
dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r3.y, l102, r3.x
dcl_literal l103, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3._y__, r1.y, l103
dcl_literal l104, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3.__z_, r1.y, l104
dcl_literal l105, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.___w, r1.z, l105
ior r3._y__, r3.y, r3.w
dcl_literal l106, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3._y__, r3.y, l106
dcl_literal l107, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.___w, r1.z, l107
dcl_literal l108, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.z, l108
dcl_literal l109, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l109
dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l110
dcl_literal l111, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l111, r4.x_neg(xyzw)
dcl_literal l112, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l112
dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l113
dcl_literal l114, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l114
dcl_literal l115, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.__z_, r3.z, r4.x, l115
dcl_literal l116, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.y, l116
dcl_literal l117, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l117
dcl_literal l118, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l118
dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l119, r4.x_neg(xyzw)
dcl_literal l120, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l120
dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l121
dcl_literal l122, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l122
dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r4.x, l123
dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.w, l124
dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l125
dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l126
dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l127, r4.x_neg(xyzw)
dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l128
dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l129
dcl_literal l130, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.x___, r4.x, l130
dcl_literal l131, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.___w, r3.w, r4.x, l131
dcl_literal l132, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r4.x___, r3.z, l132
iadd r3._y__, r3.z, r3.y
cmov_logical r3.__z_, r4.x, r3.y, r3.z
dcl_literal l133, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.x___, r3.y, l133
iadd r3._y__, r3.y, r3.w
cmov_logical r3._y__, r4.x, r3.y, r3.z
ilt r3.__z_, r3.y, r2.y
ieq r3.___w, r2.y, r3.y
dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r3.x___, r3.x, l134
and r3.x___, r3.w, r3.x
ior r3.x___, r3.z, r3.x
and r2.__z_, r2.z, r3.x
iadd r3.x___, r2.y, r3.y_neg(xyzw)
dcl_literal l135, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2.__z_, r2.z, r3.x, l135
dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r3.x___, r2.z, l136
if_logicalnz r3.x
    ilt r3.__z_, r2.w, r2.z
    iadd r3.___w, r2.z, r2.w_neg(xyzw)
    and r3.__z_, r3.z, r3.w
    dcl_literal l137, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, r2.z, l137
    dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.__z_, r2.z, l138, r3.z
    dcl_literal l139, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r2.z, l139
    dcl_literal l140, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r2.z, l140
    cmov_logical r3.___w, r3.z, r3.w, r2.z
    dcl_literal l141, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r2.z, l141
    dcl_literal l142, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4._y__, l142, r3.w_neg(xyzw)
    ushr r4._y__, r0.z, r4.y
    ishl r3.___w, r0.z, r3.w
    ishl r4.x___, r0.y, r4.x
    ior r4.x___, r4.y, r4.x
    cmov_logical r4.x___, r3.z, r0.z, r4.x
    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.__z_, r3.z, l143, r3.w
    cmov_logical r3.___w, r2.z, r4.x, r0.y
    cmov_logical r2.__z_, r2.z, r3.z, r0.z
    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r3.y, l144
    dcl_literal l145, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.x___, r3.y, l145
    cmov_logical r4.x___, r3.z, r4.x, r3.y
    dcl_literal l146, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4._y__, r3.y, l146
    dcl_literal l147, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.x___, l147, r4.x_neg(xyzw)
    ushr r4.__z_, r1.z, r4.x
    ishl r4.___w, r1.y, r4.y
    ior r4.__z_, r4.z, r4.w
    cmov_logical r4.__z_, r3.z, r1.z, r4.z
    cmov_logical r4.__z_, r3.y, r4.z, r1.y
    ushr r4.x___, r2.z, r4.x
    ishl r4._y__, r3.w, r4.y
    ior r4.x___, r4.x, r4.y
    cmov_logical r3.__z_, r3.z, r2.z, r4.x
    cmov_logical r3._y__, r3.y, r3.z, r3.w
    udiv r3.__z_, r4.z, r3.y
    umul r4.x___, r3.z, r3.y
    ilt r4._y__, r4.z, r4.x
    iadd r4.___w, r4.x, r4.z_neg(xyzw)
    iadd r4.___w, r4.w, r3.y
    dcl_literal l148, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.___w, r4.w, l148
    iadd r4.x___, r4.z, r4.x_neg(xyzw)
    cmov_logical r4.x___, r4.y, r4.w, r4.x
    udiv r3._y__, r4.x, r3.y
    iadd r4.x___, r3.z, r3.y_neg(xyzw)
    iadd r3._y__, r3.z, r3.y
    cmov_logical r3._y__, r4.y, r4.x, r3.y
    dcl_literal l149, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r2.z, l149
    dcl_literal l150, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r2.z, l150
    dcl_literal l151, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r3.y, l151
    dcl_literal l152, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r3.y, l152
    umul r4.__z_, r4.x, r3.y
    umul r4.x___, r4.x, r4.y
    umul r4.___w, r3.z, r3.y
    umul r3.__z_, r3.z, r4.y
    dcl_literal l153, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.z, l153
    dcl_literal l154, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l154
    iadd r5.x___, r5.x, r5.y
    iadd r4.x___, r4.x, r5.x
    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r4.x, l155
    iadd r4.__z_, r4.z, r5.x
    dcl_literal l156, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.w, l156
    iadd r4.__z_, r4.z, r4.w
    dcl_literal l157, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.x___, r4.x, l157
    dcl_literal l158, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.z, l158
    ior r3.__z_, r4.x, r3.z
    dcl_literal l159, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.w, l159
    dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.w, l160
    umul r4.___w, r4.w, r4.y
    umul r3._y__, r4.x, r3.y
    umul r4.x___, r4.x, r4.y
    dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r4.x, l161
    dcl_literal l162, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l162
    iadd r3._y__, r4.y, r3.y
    iadd r3._y__, r4.w, r3.y
    dcl_literal l163, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3._y__, r3.y, l163
    dcl_literal l164, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r4.x, l164
    ior r3._y__, r3.y, r4.x
    iadd r4.x___, r3.y, r4.z
    ult r3._y__, r4.x, r3.y
    ult r4._y__, r1.y, r4.x
    ieq r4.__z_, r1.y, r4.x
    ult r4.___w, r1.z, r3.z
    and r4.___w, r4.z, r4.w
    ior r4._y__, r4.y, r4.w
    dcl_literal l165, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l166, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4._y__, r4.y, l165, l166
    ieq r4.___w, r1.z, r3.z
    and r4.__z_, r4.z, r4.w
    dcl_literal l167, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4._y__, r4.z, l167, r4.y
    dcl_literal l168, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, r4.y, l168
    ior r3._y__, r3.y, r4.y
    iadd r2.__z_, r3.z, r2.z_neg(xyzw)
    ult r4._y__, r3.z, r2.z
    iadd r4._y__, r4.x, r4.y
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r3.y, r3.w, r4.x
    cmov_logical r2.__z_, r3.y, r2.z, r3.z
    iadd r2.__z_, r1.z, r2.z_neg(xyzw)
    ult r3._y__, r1.z, r2.z
    iadd r3._y__, r1.y, r3.y
    iadd r1._y__, r3.y, r3.w_neg(xyzw)
    mov r1.__z_, r2.z
endif
ult r2.__z_, r1.y, r0.y
ieq r3._y__, r1.y, r0.y
ult r3.__z_, r1.z, r0.z
and r3.__z_, r3.y, r3.z
ior r2.__z_, r2.z, r3.z
dcl_literal l169, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l170, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.__z_, r2.z, l169, l170
ieq r3.__z_, r1.z, r0.z
and r3._y__, r3.y, r3.z
dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r3.y, l171, r2.z
dcl_literal l172, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3._y__, r1.y, l172
dcl_literal l173, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3.__z_, r1.y, l173
dcl_literal l174, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.___w, r1.z, l174
ior r3._y__, r3.y, r3.w
dcl_literal l175, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3._y__, r3.y, l175
dcl_literal l176, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.___w, r1.z, l176
dcl_literal l177, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.z, l177
dcl_literal l178, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l178
dcl_literal l179, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l179
dcl_literal l180, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l180, r4.x_neg(xyzw)
dcl_literal l181, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l181
dcl_literal l182, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l182
dcl_literal l183, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l183
dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.__z_, r3.z, r4.x, l184
dcl_literal l185, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.y, l185
dcl_literal l186, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l186
dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l187
dcl_literal l188, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l188, r4.x_neg(xyzw)
dcl_literal l189, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l189
dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l190
dcl_literal l191, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l191
dcl_literal l192, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r4.x, l192
dcl_literal l193, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.w, l193
dcl_literal l194, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l194
dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l195
dcl_literal l196, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l196, r4.x_neg(xyzw)
dcl_literal l197, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l197
dcl_literal l198, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l198
dcl_literal l199, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.x___, r4.x, l199
dcl_literal l200, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.___w, r3.w, r4.x, l200
dcl_literal l201, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r4.x___, r3.z, l201
iadd r3._y__, r3.z, r3.y
cmov_logical r3.__z_, r4.x, r3.y, r3.z
dcl_literal l202, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.x___, r3.y, l202
iadd r3._y__, r3.y, r3.w
cmov_logical r3._y__, r4.x, r3.y, r3.z
ilt r3.__z_, r3.y, r2.y
ieq r3.___w, r2.y, r3.y
dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.z, l203
and r2.__z_, r3.w, r2.z
ior r2.__z_, r3.z, r2.z
and r2.__z_, r3.x, r2.z
iadd r3.x___, r2.y, r3.y_neg(xyzw)
dcl_literal l204, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2.__z_, r2.z, r3.x, l204
dcl_literal l205, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r3.x___, r2.z, l205
if_logicalnz r3.x
    ilt r3.__z_, r2.w, r2.z
    iadd r3.___w, r2.z, r2.w_neg(xyzw)
    and r3.__z_, r3.z, r3.w
    dcl_literal l206, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, r2.z, l206
    dcl_literal l207, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.__z_, r2.z, l207, r3.z
    dcl_literal l208, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r2.z, l208
    dcl_literal l209, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r2.z, l209
    cmov_logical r3.___w, r3.z, r3.w, r2.z
    dcl_literal l210, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r2.z, l210
    dcl_literal l211, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4._y__, l211, r3.w_neg(xyzw)
    ushr r4._y__, r0.z, r4.y
    ishl r3.___w, r0.z, r3.w
    ishl r4.x___, r0.y, r4.x
    ior r4.x___, r4.y, r4.x
    cmov_logical r4.x___, r3.z, r0.z, r4.x
    dcl_literal l212, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.__z_, r3.z, l212, r3.w
    cmov_logical r3.___w, r2.z, r4.x, r0.y
    cmov_logical r2.__z_, r2.z, r3.z, r0.z
    dcl_literal l213, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r3.y, l213
    dcl_literal l214, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.x___, r3.y, l214
    cmov_logical r4.x___, r3.z, r4.x, r3.y
    dcl_literal l215, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4._y__, r3.y, l215
    dcl_literal l216, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.x___, l216, r4.x_neg(xyzw)
    ushr r4.__z_, r1.z, r4.x
    ishl r4.___w, r1.y, r4.y
    ior r4.__z_, r4.z, r4.w
    cmov_logical r4.__z_, r3.z, r1.z, r4.z
    cmov_logical r4.__z_, r3.y, r4.z, r1.y
    ushr r4.x___, r2.z, r4.x
    ishl r4._y__, r3.w, r4.y
    ior r4.x___, r4.x, r4.y
    cmov_logical r3.__z_, r3.z, r2.z, r4.x
    cmov_logical r3._y__, r3.y, r3.z, r3.w
    udiv r3.__z_, r4.z, r3.y
    umul r4.x___, r3.z, r3.y
    ilt r4._y__, r4.z, r4.x
    iadd r4.___w, r4.x, r4.z_neg(xyzw)
    iadd r4.___w, r4.w, r3.y
    dcl_literal l217, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.___w, r4.w, l217
    iadd r4.x___, r4.z, r4.x_neg(xyzw)
    cmov_logical r4.x___, r4.y, r4.w, r4.x
    udiv r3._y__, r4.x, r3.y
    iadd r4.x___, r3.z, r3.y_neg(xyzw)
    iadd r3._y__, r3.z, r3.y
    cmov_logical r3._y__, r4.y, r4.x, r3.y
    dcl_literal l218, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r2.z, l218
    dcl_literal l219, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r2.z, l219
    dcl_literal l220, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r3.y, l220
    dcl_literal l221, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r3.y, l221
    umul r4.__z_, r4.x, r3.y
    umul r4.x___, r4.x, r4.y
    umul r4.___w, r3.z, r3.y
    umul r3.__z_, r3.z, r4.y
    dcl_literal l222, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.z, l222
    dcl_literal l223, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l223
    iadd r5.x___, r5.x, r5.y
    iadd r4.x___, r4.x, r5.x
    dcl_literal l224, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r4.x, l224
    iadd r4.__z_, r4.z, r5.x
    dcl_literal l225, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.w, l225
    iadd r4.__z_, r4.z, r4.w
    dcl_literal l226, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.x___, r4.x, l226
    dcl_literal l227, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.z, l227
    ior r3.__z_, r4.x, r3.z
    dcl_literal l228, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.w, l228
    dcl_literal l229, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.w, l229
    umul r4.___w, r4.w, r4.y
    umul r3._y__, r4.x, r3.y
    umul r4.x___, r4.x, r4.y
    dcl_literal l230, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r4.x, l230
    dcl_literal l231, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l231
    iadd r3._y__, r4.y, r3.y
    iadd r3._y__, r4.w, r3.y
    dcl_literal l232, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3._y__, r3.y, l232
    dcl_literal l233, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r4.x, l233
    ior r3._y__, r3.y, r4.x
    iadd r4.x___, r3.y, r4.z
    ult r3._y__, r4.x, r3.y
    ult r4._y__, r1.y, r4.x
    ieq r4.__z_, r1.y, r4.x
    ult r4.___w, r1.z, r3.z
    and r4.___w, r4.z, r4.w
    ior r4._y__, r4.y, r4.w
    dcl_literal l234, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l235, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4._y__, r4.y, l234, l235
    ieq r4.___w, r1.z, r3.z
    and r4.__z_, r4.z, r4.w
    dcl_literal l236, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4._y__, r4.z, l236, r4.y
    dcl_literal l237, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, r4.y, l237
    ior r3._y__, r3.y, r4.y
    iadd r2.__z_, r3.z, r2.z_neg(xyzw)
    ult r4._y__, r3.z, r2.z
    iadd r4._y__, r4.x, r4.y
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r3.y, r3.w, r4.x
    cmov_logical r2.__z_, r3.y, r2.z, r3.z
    iadd r2.__z_, r1.z, r2.z_neg(xyzw)
    ult r3._y__, r1.z, r2.z
    iadd r3._y__, r1.y, r3.y
    iadd r1._y__, r3.y, r3.w_neg(xyzw)
    mov r1.__z_, r2.z
endif
ult r2.__z_, r1.y, r0.y
ieq r3._y__, r1.y, r0.y
ult r3.__z_, r1.z, r0.z
and r3.__z_, r3.y, r3.z
ior r2.__z_, r2.z, r3.z
dcl_literal l238, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l239, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.__z_, r2.z, l238, l239
ieq r3.__z_, r1.z, r0.z
and r3._y__, r3.y, r3.z
dcl_literal l240, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r3.y, l240, r2.z
dcl_literal l241, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3._y__, r1.y, l241
dcl_literal l242, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3.__z_, r1.y, l242
dcl_literal l243, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.___w, r1.z, l243
ior r3._y__, r3.y, r3.w
dcl_literal l244, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3._y__, r3.y, l244
dcl_literal l245, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.___w, r1.z, l245
dcl_literal l246, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.z, l246
dcl_literal l247, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l247
dcl_literal l248, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l248
dcl_literal l249, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l249, r4.x_neg(xyzw)
dcl_literal l250, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l250
dcl_literal l251, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l251
dcl_literal l252, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l252
dcl_literal l253, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.__z_, r3.z, r4.x, l253
dcl_literal l254, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.y, l254
dcl_literal l255, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l255
dcl_literal l256, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l256
dcl_literal l257, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l257, r4.x_neg(xyzw)
dcl_literal l258, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l258
dcl_literal l259, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l259
dcl_literal l260, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l260
dcl_literal l261, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r4.x, l261
dcl_literal l262, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.w, l262
dcl_literal l263, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l263
dcl_literal l264, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l264
dcl_literal l265, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l265, r4.x_neg(xyzw)
dcl_literal l266, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l266
dcl_literal l267, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l267
dcl_literal l268, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.x___, r4.x, l268
dcl_literal l269, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.___w, r3.w, r4.x, l269
dcl_literal l270, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r4.x___, r3.z, l270
iadd r3._y__, r3.z, r3.y
cmov_logical r3.__z_, r4.x, r3.y, r3.z
dcl_literal l271, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.x___, r3.y, l271
iadd r3._y__, r3.y, r3.w
cmov_logical r3._y__, r4.x, r3.y, r3.z
ilt r3.__z_, r3.y, r2.y
ieq r3.___w, r2.y, r3.y
dcl_literal l272, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.z, l272
and r2.__z_, r3.w, r2.z
ior r2.__z_, r3.z, r2.z
and r2.__z_, r3.x, r2.z
iadd r2._y__, r2.y, r3.y_neg(xyzw)
dcl_literal l273, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2._y__, r2.z, r2.y, l273
dcl_literal l274, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.y, l274
if_logicalnz r2.z
    ilt r2.__z_, r2.w, r2.y
    iadd r2.___w, r2.y, r2.w_neg(xyzw)
    and r2.__z_, r2.z, r2.w
    dcl_literal l275, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, r2.y, l275
    dcl_literal l276, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2._y__, r2.y, l276, r2.z
    dcl_literal l277, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.__z_, r2.y, l277
    dcl_literal l278, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r2.___w, r2.y, l278
    cmov_logical r2.___w, r2.z, r2.w, r2.y
    dcl_literal l279, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.x___, r2.y, l279
    dcl_literal l280, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.__z_, l280, r2.w_neg(xyzw)
    ushr r3.__z_, r0.z, r3.z
    ishl r2.___w, r0.z, r2.w
    ishl r3.x___, r0.y, r3.x
    ior r3.x___, r3.z, r3.x
    cmov_logical r3.x___, r2.z, r0.z, r3.x
    dcl_literal l281, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.__z_, r2.z, l281, r2.w
    cmov_logical r0._y__, r2.y, r3.x, r0.y
    cmov_logical r0.__z_, r2.y, r2.z, r0.z
    dcl_literal l282, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2._y__, r3.y, l282
    dcl_literal l283, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r2.__z_, r3.y, l283
    cmov_logical r2.__z_, r2.y, r2.z, r3.y
    dcl_literal l284, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r2.___w, r3.y, l284
    dcl_literal l285, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r2.__z_, l285, r2.z_neg(xyzw)
    ushr r3.x___, r1.z, r2.z
    ishl r3.__z_, r1.y, r2.w
    ior r3.x___, r3.x, r3.z
    cmov_logical r3.x___, r2.y, r1.z, r3.x
    cmov_logical r3.x___, r3.y, r3.x, r1.y
    ushr r2.__z_, r0.z, r2.z
    ishl r2.___w, r0.y, r2.w
    ior r2.__z_, r2.z, r2.w
    cmov_logical r2._y__, r2.y, r0.z, r2.z
    cmov_logical r2._y__, r3.y, r2.y, r0.y
    udiv r2.__z_, r3.x, r2.y
    umul r2.___w, r2.z, r2.y
    ilt r3._y__, r3.x, r2.w
    iadd r3.__z_, r2.w, r3.x_neg(xyzw)
    iadd r3.__z_, r3.z, r2.y
    dcl_literal l286, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r3.__z_, r3.z, l286
    iadd r2.___w, r3.x, r2.w_neg(xyzw)
    cmov_logical r2.___w, r3.y, r3.z, r2.w
    udiv r2._y__, r2.w, r2.y
    iadd r2.___w, r2.z, r2.y_neg(xyzw)
    iadd r2._y__, r2.z, r2.y
    cmov_logical r2._y__, r3.y, r2.w, r2.y
    dcl_literal l287, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r0.z, l287
    dcl_literal l288, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2.___w, r0.z, l288
    dcl_literal l289, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r2.y, l289
    dcl_literal l290, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2._y__, r2.y, l290
    umul r3._y__, r2.w, r2.y
    umul r2.___w, r2.w, r3.x
    umul r3.__z_, r2.z, r2.y
    umul r2.__z_, r2.z, r3.x
    dcl_literal l291, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.z, l291
    dcl_literal l292, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.z, l292
    iadd r3.___w, r3.w, r4.x
    iadd r2.___w, r2.w, r3.w
    dcl_literal l293, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.w, l293
    iadd r3._y__, r3.y, r3.w
    dcl_literal l294, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r3.z, l294
    iadd r3._y__, r3.y, r3.z
    dcl_literal l295, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r2.___w, r2.w, l295
    dcl_literal l296, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r2.z, l296
    ior r2.__z_, r2.w, r2.z
    dcl_literal l297, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.___w, r0.y, l297
    dcl_literal l298, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r0.y, l298
    umul r3.__z_, r3.z, r3.x
    umul r2._y__, r2.w, r2.y
    umul r2.___w, r2.w, r3.x
    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.x___, r2.w, l299
    dcl_literal l300, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2._y__, r2.y, l300
    iadd r2._y__, r3.x, r2.y
    iadd r2._y__, r3.z, r2.y
    dcl_literal l301, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r2._y__, r2.y, l301
    dcl_literal l302, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.___w, r2.w, l302
    ior r2._y__, r2.y, r2.w
    iadd r2.___w, r2.y, r3.y
    ult r2._y__, r2.w, r2.y
    ult r3.x___, r1.y, r2.w
    ieq r3._y__, r1.y, r2.w
    ult r3.__z_, r1.z, r2.z
    and r3.__z_, r3.y, r3.z
    ior r3.x___, r3.x, r3.z
    dcl_literal l303, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l304, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r3.x___, r3.x, l303, l304
    ieq r3.__z_, r1.z, r2.z
    and r3._y__, r3.y, r3.z
    dcl_literal l305, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.x___, r3.y, l305, r3.x
    dcl_literal l306, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3.x___, r3.x, l306
    ior r2._y__, r2.y, r3.x
    iadd r0.__z_, r2.z, r0.z_neg(xyzw)
    ult r3.x___, r2.z, r0.z
    iadd r3.x___, r2.w, r3.x
    iadd r0._y__, r3.x, r0.y_neg(xyzw)
    cmov_logical r0._yz_, r2.y, r0.yyzy, r2.wwzw
    iadd r0.__z_, r1.z, r0.z_neg(xyzw)
    ult r2._y__, r1.z, r0.z
    iadd r2._y__, r1.y, r2.y
    iadd r1._y__, r2.y, r0.y_neg(xyzw)
    mov r1.__z_, r0.z
endif
dcl_literal l307, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0._y__, r1.w, l307
cmov_logical r0.x_z_, r0.y, r0.xxwx, r1.zzyz
dcl_literal l308, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r1.w, r0.xzxx, l308
dcl_literal l309, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r2.x, l309, r0.xyxx
inegate r0.__z_, r0.x
dcl_literal l310, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r0.___w, l310, r0.z
iadd r0.___w, r0.w, r0.y_neg(xyzw)
cmov_logical r0.xy__, r1.x, r0.zwzz, r0.xyxx
mov out0, r0
mend
__smod_i8
mdef(77)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l1, 0x000000FF, 0x000000FF, 0x00000080, 0x00000000
and r1.xyz_, r0.xyxx, l1
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l2
dcl_literal l3, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00
ior r1.___w, r1.x, l3
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l4, 0x00000080, 0x00000080, 0x00000080, 0x00000080
and r1.__z_, r0.w, l4
dcl_literal l5, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00
ior r1.___w, r0.w, l5
cmov_logical r0.___w, r1.z, r1.w, r0.w
ixor r1.__z_, r1.x, r0.w
imax r1.___w, r1.x, r1.x_neg(xyzw)
imax r2.x___, r0.w, r0.w_neg(xyzw)
udiv r1.___w, r1.w, r2.x
inegate r2.x___, r1.w
dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r1.__z_, r1.z, l6
cmov_logical r1.__z_, r1.z, r2.x, r1.w
dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, r1.z, l7
imul r0.___w, r0.w, r1.y
iadd r0.___w, r1.x, r0.w_neg(xyzw)
dcl_literal l8, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.__z_, r0.w, l8
mov r0.x___, r0.z
mov out0, r0
mend
__sra_apple_i64
mdef(78)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ishr r5.x, r0.y, r2.x
ishr r6.x, r0.y, l0.x
ushr r7.x, r0.x, r2.x
ishl r8.x, r0.y, r4.x
cmov_logical r9.x, r2.x, r8.x, l0.z
ior r10.x, r7.x, r9.x
cmov_logical r0.x___, r3.x, r5.x, r10.x
cmov_logical r0._y__, r3.x, r6.x, r5.x
mov out0, r0
mend
__sra_apple_v2i64
mdef(79)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ishr r5.x_z, r0.y0w, r2.x0z
ishr r6.x_z, r0.y0w, l0.x
ushr r7.x_z, r0.x0z, r2.x0z
ishl r8.x_z, r0.y0w, r4.x0z
cmov_logical r9.x_z, r2.x0z, r8.x0z, l0.z
ior r10.x_z, r7.x0z, r9.x0z
cmov_logical r0.x_z_, r3.x0z, r5.x0z, r10.x0z
cmov_logical r0._y_w, r3.0x0z, r6.0x0z, r5.0x0z
mov out0, r0
mend
__sra_i64
mdef(80)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ishr r5.x, r0.y, r2.x
ishr r6.x, r0.y, l0.x
ushr r7.x, r0.x, r2.x
ishl r8.x, r0.y, r4.x
cmov_logical r9.x, r2.x, r8.x, l0.z
ior r10.x, r7.x, r9.x
cmov_logical r0.x___, r3.x, r5.x, r10.x
cmov_logical r0._y__, r3.x, r6.x, r5.x
mov out0, r0
mend
__sra_v2i64
mdef(81)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ishr r5.x_z, r0.y0w, r2.x0z
ishr r6.x_z, r0.y0w, l0.x
ushr r7.x_z, r0.x0z, r2.x0z
ishl r8.x_z, r0.y0w, r4.x0z
cmov_logical r9.x_z, r2.x0z, r8.x0z, l0.z
ior r10.x_z, r7.x0z, r9.x0z
cmov_logical r0.x_z_, r3.x0z, r5.x0z, r10.x0z
cmov_logical r0._y_w, r3.0x0z, r6.0x0z, r5.0x0z
mov out0, r0
mend
__store_128bit_global
mdef(82)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x], r1
mend
__store_128bit_local
mdef(83)_out(0)_in(2)
mov r0, in0
mov r1, in1
lds_store_vec_id(0) mem, r0.x, r0.x, r1
mend
__store_128bit_private
mdef(84)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x], r1
mend
__store_128bit_uav
mdef(85)_out(0)_in(2)
mov r0, in0
mov r1, in1
uav_raw_store_id(0) mem0, r0.x, r1
mend
__store_32bit_local
mdef(86)_out(0)_in(2)
mov r0, in0
mov r1, in1
lds_store_id(0) mem, r0.x, r0.x, r1
mend
__store_32bit_uav
mdef(87)_out(0)_in(2)
mov r0, in0
mov r1, in1
uav_raw_store_id(0) mem0.x, r0.x, r1
mend
__store_64bit_local
mdef(88)_out(0)_in(2)
mov r0, in0
mov r1, in1
lds_store_vec_id(0) mem.xy__, r0.x, r0.x, r1
mend
__store_64bit_uav
mdef(89)_out(0)_in(2)
mov r0, in0
mov r1, in1
uav_raw_store_id(0) mem0.xy, r0.x, r1
mend
__store_96bit_global
mdef(90)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].xyz_, r1
mend
__store_96bit_local
mdef(91)_out(0)_in(2)
mov r0, in0
mov r1, in1
lds_store_vec_id(0) mem.xyz_, r0.x, r0.x, r1
mend
__store_96bit_private
mdef(92)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].xyz_, r1
mend
__store_96bit_uav
mdef(93)_out(0)_in(2)
mov r0, in0
mov r1, in1
uav_raw_store_id(0) mem0.xyz, r0.x, r1
mend
__store_hi_64bit_global
mdef(94)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].__zw, r1.00xy
mend
__store_hi_64bit_private
mdef(95)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].__zw, r1.00xy
mend
__store_lo_64bit_global
mdef(96)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].xy__, r1.xy
mend
__store_lo_64bit_private
mdef(97)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].xy__, r1.xy
mend
__store_w_32bit_global
mdef(98)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].w, r1.x
mend
__store_w_32bit_private
mdef(99)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].w, r1.x
mend
__store_x_32bit_global
mdef(100)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].x, r1.x
mend
__store_x_32bit_private
mdef(101)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].x, r1.x
mend
__store_y_32bit_global
mdef(102)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].y, r1.x
mend
__store_y_32bit_private
mdef(103)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].y, r1.x
mend
__store_z_32bit_global
mdef(104)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].z, r1.x
mend
__store_z_32bit_private
mdef(105)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].z, r1.x
mend
__udiv_i16
mdef(106)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l21, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l21
dcl_literal l22, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l22
udiv r0.___w, r1.x, r0.w
dcl_literal l23, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.___w, r0.w, l23
dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r1.y, r0.w, l24
mov r0.x___, r0.z
mov out0, r0
mend
__udiv_i32
mdef(107)_out(1)_in(2)
mov r0, in0
mov r1, in1
udiv r0.x, r0.x, r1.x
mov out0, r0
mend
__udiv_i64
mdef(108)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0.__zw, r1.yyxy
ieq r1.xy__, r0.yxyy, r0.wzww
ult r1.__zw, r0.yyyx, r0.wwwz
and r1.___w, r1.x, r1.w
ior r1.___w, r1.z, r1.w
dcl_literal l1, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.___w, r1.w, l1, l2
and r1._y__, r1.y, r1.x
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, l3, r1.w
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r2.xy__, r0.wzww, l4
and r1.___w, r2.y, r2.x
dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.__z_, r1.w, l5, r0.z
dcl_literal l6, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r2._yz_, r0.wwyw, l6
dcl_literal l7, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.___w, r0.x, l7
dcl_literal l8, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.xy__, r0.wyww, l8
dcl_literal l9, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.__z_, r0.z, l9
ior r3.x___, r3.x, r3.z
dcl_literal l10, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.x___, r3.x, l10
dcl_literal l11, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r0.z, l11
dcl_literal l12, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000
ior r4.xy__, r2.yzyy, l12
dcl_literal l13, 0xBF800000, 0xBF800000, 0x00000000, 0x00000000
add r4.xy__, r4.xyxx, l13
dcl_literal l14, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
and r4.xy__, r4.xyxx, l14
dcl_literal l15, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000
iadd r4.xy__, l15, r4.xyxx_neg(xyzw)
dcl_literal l16, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
and r4.xy__, r4.xyxx, l16
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.xy__, r4.xyxx, l17
dcl_literal l18, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
iadd r4.xy__, r4.xyxx, l18
dcl_literal l19, 0x00000000, 0x00000017, 0x00000017, 0x00000000
cmov_logical r2._yz_, r2.yyzy, r4.xxyx, l19
dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.x, l20
dcl_literal l21, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l21
dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l22
dcl_literal l23, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l23, r3.w_neg(xyzw)
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l24
dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l25
dcl_literal l26, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l26
dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.x___, r3.x, r3.w, l27
dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l28
dcl_literal l29, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l29
dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l30
dcl_literal l31, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l31, r3.w_neg(xyzw)
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l32
dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l33
dcl_literal l34, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l34
dcl_literal l35, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l35
dcl_literal l36, 0x00000017, 0x00000017, 0x00000000, 0x00000000
ieq r4.xy__, r2.yzyy, l36
iadd r3.x___, r2.y, r3.x
cmov_logical r2._y__, r4.x, r3.x, r2.y
dcl_literal l37, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r3.x, l37
iadd r3.x___, r3.x, r3.z
cmov_logical r2._y__, r3.w, r3.x, r2.y
dcl_literal l38, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r3.x___, r2.y, l38
dcl_literal l39, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.__z_, r2.y, l39
dcl_literal l40, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F
cmov_logical r3.x___, r3.x, r3.z, l40
ult r3.__z_, r0.x, r0.z
and r3.__z_, r1.x, r3.z
ior r1.__z_, r1.z, r3.z
dcl_literal l41, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l42, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.__z_, r1.z, l41, l42
ieq r3.__z_, r0.x, r0.z
and r1.x___, r1.x, r3.z
dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.x, l43, r1.z
ior r1.__z_, r2.w, r3.y
dcl_literal l44, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.__z_, r1.z, l44
dcl_literal l45, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r2.___w, r0.x, l45
dcl_literal l46, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3._y__, r1.z, l46
dcl_literal l47, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3._y__, r3.y, l47
dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l48
dcl_literal l49, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3._y__, l49, r3.y_neg(xyzw)
dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l50
dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3._y__, r3.y, l51
dcl_literal l52, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3._y__, r3.y, l52
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.__z_, r1.z, r3.y, l53
dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3._y__, r2.w, l54
dcl_literal l55, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3._y__, r3.y, l55
dcl_literal l56, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l56
dcl_literal l57, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3._y__, l57, r3.y_neg(xyzw)
dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l58
dcl_literal l59, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3._y__, r3.y, l59
dcl_literal l60, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3._y__, r3.y, l60
dcl_literal l61, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r2.___w, r2.w, r3.y, l61
iadd r1.__z_, r2.z, r1.z
cmov_logical r2.__z_, r4.y, r1.z, r2.z
dcl_literal l62, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3._y__, r1.z, l62
iadd r1.__z_, r1.z, r2.w
cmov_logical r1.__z_, r3.y, r1.z, r2.z
ilt r2.__z_, r1.z, r2.y
ieq r2.___w, r2.y, r1.z
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l63
and r1.x___, r2.w, r1.x
ior r1.x___, r2.z, r1.x
iadd r2.__z_, r2.y, r1.z_neg(xyzw)
dcl_literal l64, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r2.z, l64
ilt r2.__z_, r3.x, r1.x
iadd r2.___w, r1.x, r3.x_neg(xyzw)
and r2.__z_, r2.z, r2.w
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.___w, r1.x, l65
dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r2.w, l66, r2.z
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l67
if_logicalnz r1.x
    dcl_literal l68, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.___w, r2.z, l68
    dcl_literal l69, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3._y__, r2.z, l69
    cmov_logical r3._y__, r2.w, r3.y, r2.z
    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.__z_, r2.z, l70
    dcl_literal l71, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l71, r3.y_neg(xyzw)
    ushr r3.___w, r0.z, r3.w
    ishl r3._y__, r0.z, r3.y
    ishl r3.__z_, r0.w, r3.z
    ior r3.__z_, r3.w, r3.z
    cmov_logical r3.__z_, r2.w, r0.z, r3.z
    dcl_literal l72, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.___w, r2.w, l72, r3.y
    cmov_logical r3._y__, r2.z, r3.z, r0.w
    cmov_logical r2.___w, r2.z, r2.w, r0.z
    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r1.z, l73
    dcl_literal l74, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r1.z, l74
    cmov_logical r3.___w, r3.z, r3.w, r1.z
    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r1.z, l75
    dcl_literal l76, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l76, r3.w_neg(xyzw)
    ushr r4._y__, r0.x, r3.w
    ishl r4.__z_, r0.y, r4.x
    ior r4._y__, r4.y, r4.z
    cmov_logical r4._y__, r3.z, r0.x, r4.y
    cmov_logical r4._y__, r1.z, r4.y, r0.y
    ushr r3.___w, r2.w, r3.w
    ishl r4.x___, r3.y, r4.x
    ior r3.___w, r3.w, r4.x
    cmov_logical r3.__z_, r3.z, r2.w, r3.w
    cmov_logical r1.__z_, r1.z, r3.z, r3.y
    udiv r3.__z_, r4.y, r1.z
    umul r3.___w, r3.z, r1.z
    ilt r4.x___, r4.y, r3.w
    iadd r4.__z_, r3.w, r4.y_neg(xyzw)
    iadd r4.__z_, r4.z, r1.z
    dcl_literal l77, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.__z_, r4.z, l77
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r4.x, r4.z, r3.w
    udiv r1.__z_, r3.w, r1.z
    iadd r3.___w, r3.z, r1.z_neg(xyzw)
    iadd r1.__z_, r3.z, r1.z
    cmov_logical r1.__z_, r4.x, r3.w, r1.z
    dcl_literal l78, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r2.w, l78
    dcl_literal l79, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.w, l79
    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r1.z, l80
    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r1.z, l81
    umul r4.__z_, r3.w, r4.y
    umul r3.___w, r3.w, r4.x
    umul r4.___w, r3.z, r4.y
    umul r3.__z_, r3.z, r4.x
    dcl_literal l82, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.z, l82
    dcl_literal l83, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l83
    iadd r5.x___, r5.x, r5.y
    iadd r3.___w, r3.w, r5.x
    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.w, l84
    iadd r4.__z_, r4.z, r5.x
    dcl_literal l85, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.w, l85
    iadd r4.__z_, r4.z, r4.w
    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.___w, r3.w, l86
    dcl_literal l87, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.z, l87
    ior r3.__z_, r3.w, r3.z
    dcl_literal l88, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.y, l88
    dcl_literal l89, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.y, l89
    umul r4.___w, r4.w, r4.x
    umul r4._y__, r3.w, r4.y
    umul r3.___w, r3.w, r4.x
    dcl_literal l90, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r3.w, l90
    dcl_literal l91, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r4.y, l91
    iadd r4.x___, r4.x, r4.y
    iadd r4.x___, r4.w, r4.x
    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.x___, r4.x, l92
    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.w, l93
    ior r3.___w, r4.x, r3.w
    iadd r4.x___, r3.w, r4.z
    ult r3.___w, r4.x, r3.w
    ult r4._y__, r0.y, r4.x
    ieq r4.__z_, r0.y, r4.x
    ult r4.___w, r0.x, r3.z
    and r4.___w, r4.z, r4.w
    ior r4._y__, r4.y, r4.w
    dcl_literal l94, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4._y__, r4.y, l94, l95
    ieq r4.___w, r0.x, r3.z
    and r4.__z_, r4.z, r4.w
    dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4._y__, r4.z, l96, r4.y
    dcl_literal l97, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, r4.y, l97
    ior r3.___w, r3.w, r4.y
    dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4._y__, r1.z, l98
    cmov_logical r1.__z_, r3.w, r4.y, r1.z
    iadd r2.___w, r3.z, r2.w_neg(xyzw)
    ult r4._y__, r3.z, r2.w
    iadd r4._y__, r4.x, r4.y
    iadd r3._y__, r4.y, r3.y_neg(xyzw)
    cmov_logical r3._y__, r3.w, r3.y, r4.x
    cmov_logical r2.___w, r3.w, r2.w, r3.z
    iadd r3.___w, r0.x, r2.w_neg(xyzw)
    ult r2.___w, r0.x, r3.w
    iadd r2.___w, r0.y, r2.w
    iadd r3.__z_, r2.w, r3.y_neg(xyzw)
else
    mov r3.__zw, r0.yyyx
    dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r1.__z_, l99
endif
ult r2.___w, r3.z, r0.w
ieq r3._y__, r3.z, r0.w
ult r4.x___, r3.w, r0.z
and r4.x___, r3.y, r4.x
ior r2.___w, r2.w, r4.x
dcl_literal l100, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l101, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.___w, r2.w, l100, l101
ieq r4.x___, r3.w, r0.z
and r3._y__, r3.y, r4.x
dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r3.y, l102, r2.w
dcl_literal l103, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3._y__, r3.z, l103
dcl_literal l104, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r4.x___, r3.z, l104
dcl_literal l105, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r4._y__, r3.w, l105
ior r3._y__, r3.y, r4.y
dcl_literal l106, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3._y__, r3.y, l106
dcl_literal l107, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r4._y__, r3.w, l107
dcl_literal l108, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.__z_, r4.x, l108
dcl_literal l109, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.__z_, r4.z, l109
dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l110
dcl_literal l111, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.__z_, l111, r4.z_neg(xyzw)
dcl_literal l112, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l112
dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.__z_, r4.z, l113
dcl_literal l114, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.__z_, r4.z, l114
dcl_literal l115, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.x___, r4.x, r4.z, l115
dcl_literal l116, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.__z_, r3.y, l116
dcl_literal l117, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.__z_, r4.z, l117
dcl_literal l118, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l118
dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.__z_, l119, r4.z_neg(xyzw)
dcl_literal l120, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l120
dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.__z_, r4.z, l121
dcl_literal l122, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.__z_, r4.z, l122
dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r4.z, l123
dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.__z_, r4.y, l124
dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.__z_, r4.z, l125
dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l126
dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.__z_, l127, r4.z_neg(xyzw)
dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l128
dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.__z_, r4.z, l129
dcl_literal l130, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.__z_, r4.z, l130
dcl_literal l131, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r4._y__, r4.y, r4.z, l131
dcl_literal l132, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r4.__z_, r4.x, l132
iadd r3._y__, r4.x, r3.y
cmov_logical r4.x___, r4.z, r3.y, r4.x
dcl_literal l133, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.__z_, r3.y, l133
iadd r3._y__, r3.y, r4.y
cmov_logical r3._y__, r4.z, r3.y, r4.x
ilt r4.x___, r3.y, r2.y
ieq r4._y__, r2.y, r3.y
dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.___w, r2.w, l134
and r2.___w, r4.y, r2.w
ior r2.___w, r4.x, r2.w
and r1.x___, r1.x, r2.w
iadd r2.___w, r2.y, r3.y_neg(xyzw)
dcl_literal l135, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r2.w, l135
ilt r2.___w, r3.x, r1.x
iadd r4.x___, r1.x, r3.x_neg(xyzw)
and r2.___w, r2.w, r4.x
dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r4.x___, r1.x, l136
dcl_literal l137, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r4.x, l137, r2.w
dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l138
if_logicalnz r1.x
    dcl_literal l139, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.x___, r2.w, l139
    dcl_literal l140, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4._y__, r2.w, l140
    cmov_logical r4._y__, r4.x, r4.y, r2.w
    dcl_literal l141, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.__z_, r2.w, l141
    dcl_literal l142, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.___w, l142, r4.y_neg(xyzw)
    ushr r4.___w, r0.z, r4.w
    ishl r4._y__, r0.z, r4.y
    ishl r4.__z_, r0.w, r4.z
    ior r4.__z_, r4.w, r4.z
    cmov_logical r4.__z_, r4.x, r0.z, r4.z
    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.x___, r4.x, l143, r4.y
    cmov_logical r4.xy__, r2.w, r4.xzxx, r0.zwzz
    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.__z_, r3.y, l144
    dcl_literal l145, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.___w, r3.y, l145
    cmov_logical r4.___w, r4.z, r4.w, r3.y
    dcl_literal l146, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r3.y, l146
    dcl_literal l147, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.___w, l147, r4.w_neg(xyzw)
    ushr r5._y__, r3.w, r4.w
    ishl r5.__z_, r3.z, r5.x
    ior r5._y__, r5.y, r5.z
    cmov_logical r5._y__, r4.z, r3.w, r5.y
    cmov_logical r5._y__, r3.y, r5.y, r3.z
    ushr r4.___w, r4.x, r4.w
    ishl r5.x___, r4.y, r5.x
    ior r4.___w, r4.w, r5.x
    cmov_logical r4.__z_, r4.z, r4.x, r4.w
    cmov_logical r3._y__, r3.y, r4.z, r4.y
    udiv r4.__z_, r5.y, r3.y
    umul r4.___w, r4.z, r3.y
    ilt r5.x___, r5.y, r4.w
    iadd r5.__z_, r4.w, r5.y_neg(xyzw)
    iadd r5.__z_, r5.z, r3.y
    dcl_literal l148, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.__z_, r5.z, l148
    iadd r4.___w, r5.y, r4.w_neg(xyzw)
    cmov_logical r4.___w, r5.x, r5.z, r4.w
    udiv r3._y__, r4.w, r3.y
    iadd r4.___w, r4.z, r3.y_neg(xyzw)
    iadd r3._y__, r4.z, r3.y
    cmov_logical r3._y__, r5.x, r4.w, r3.y
    dcl_literal l149, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.x, l149
    dcl_literal l150, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.x, l150
    dcl_literal l151, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r3.y, l151
    dcl_literal l152, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r3.y, l152
    umul r5.__z_, r4.w, r5.y
    umul r4.___w, r4.w, r5.x
    umul r5.___w, r4.z, r5.y
    umul r4.__z_, r4.z, r5.x
    dcl_literal l153, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.x___, r4.z, l153
    dcl_literal l154, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6._y__, r5.w, l154
    iadd r6.x___, r6.x, r6.y
    iadd r4.___w, r4.w, r6.x
    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.x___, r4.w, l155
    iadd r5.__z_, r5.z, r6.x
    dcl_literal l156, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r5.w, l156
    iadd r5.__z_, r5.z, r5.w
    dcl_literal l157, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.___w, r4.w, l157
    dcl_literal l158, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.z, l158
    ior r4.__z_, r4.w, r4.z
    dcl_literal l159, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r4.y, l159
    dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r4.y, l160
    umul r5.___w, r5.w, r5.x
    umul r5._y__, r4.w, r5.y
    umul r4.___w, r4.w, r5.x
    dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r4.w, l161
    dcl_literal l162, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r5.y, l162
    iadd r5.x___, r5.x, r5.y
    iadd r5.x___, r5.w, r5.x
    dcl_literal l163, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5.x___, r5.x, l163
    dcl_literal l164, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r4.w, l164
    ior r4.___w, r5.x, r4.w
    iadd r5.x___, r4.w, r5.z
    ult r4.___w, r5.x, r4.w
    ult r5._y__, r3.z, r5.x
    ieq r5.__z_, r3.z, r5.x
    ult r5.___w, r3.w, r4.z
    and r5.___w, r5.z, r5.w
    ior r5._y__, r5.y, r5.w
    dcl_literal l165, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l166, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r5._y__, r5.y, l165, l166
    ieq r5.___w, r3.w, r4.z
    and r5.__z_, r5.z, r5.w
    dcl_literal l167, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r5._y__, r5.z, l167, r5.y
    dcl_literal l168, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5._y__, r5.y, l168
    ior r4.___w, r4.w, r5.y
    dcl_literal l169, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5._y__, r3.y, l169
    cmov_logical r3._y__, r4.w, r5.y, r3.y
    iadd r4.x___, r4.z, r4.x_neg(xyzw)
    ult r5._y__, r4.z, r4.x
    iadd r5._y__, r5.x, r5.y
    iadd r4._y__, r5.y, r4.y_neg(xyzw)
    cmov_logical r4._y__, r4.w, r4.y, r5.x
    cmov_logical r4.x___, r4.w, r4.x, r4.z
    iadd r4.x___, r3.w, r4.x_neg(xyzw)
    ult r4.__z_, r3.w, r4.x
    iadd r4.__z_, r3.z, r4.z
    iadd r3.__z_, r4.z, r4.y_neg(xyzw)
    mov r3.___w, r4.x
else
    dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r3._y__, l170
endif
ult r4.x___, r3.z, r0.w
ieq r4._y__, r3.z, r0.w
ult r4.__z_, r3.w, r0.z
and r4.__z_, r4.y, r4.z
ior r4.x___, r4.x, r4.z
dcl_literal l171, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l172, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r4.x___, r4.x, l171, l172
ieq r4.__z_, r3.w, r0.z
and r4._y__, r4.y, r4.z
dcl_literal l173, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.x___, r4.y, l173, r4.x
dcl_literal l174, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r4._y__, r3.z, l174
dcl_literal l175, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r4.__z_, r3.z, l175
dcl_literal l176, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r4.___w, r3.w, l176
ior r4._y__, r4.y, r4.w
dcl_literal l177, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r4._y__, r4.y, l177
dcl_literal l178, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r4.___w, r3.w, l178
dcl_literal l179, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.z, l179
dcl_literal l180, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l180
dcl_literal l181, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l181
dcl_literal l182, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l182, r5.x_neg(xyzw)
dcl_literal l183, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l183
dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l184
dcl_literal l185, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.x___, r5.x, l185
dcl_literal l186, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.__z_, r4.z, r5.x, l186
dcl_literal l187, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.y, l187
dcl_literal l188, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l188
dcl_literal l189, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l189
dcl_literal l190, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l190, r5.x_neg(xyzw)
dcl_literal l191, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l191
dcl_literal l192, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l192
dcl_literal l193, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.x___, r5.x, l193
dcl_literal l194, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4._y__, r4.y, r5.x, l194
dcl_literal l195, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.w, l195
dcl_literal l196, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l196
dcl_literal l197, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l197
dcl_literal l198, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l198, r5.x_neg(xyzw)
dcl_literal l199, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l199
dcl_literal l200, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l200
dcl_literal l201, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r5.x___, r5.x, l201
dcl_literal l202, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r4.___w, r4.w, r5.x, l202
dcl_literal l203, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r5.x___, r4.z, l203
iadd r4._y__, r4.z, r4.y
cmov_logical r4.__z_, r5.x, r4.y, r4.z
dcl_literal l204, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r5.x___, r4.y, l204
iadd r4._y__, r4.y, r4.w
cmov_logical r4._y__, r5.x, r4.y, r4.z
ilt r4.__z_, r4.y, r2.y
ieq r4.___w, r2.y, r4.y
dcl_literal l205, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r4.x___, r4.x, l205
and r4.x___, r4.w, r4.x
ior r4.x___, r4.z, r4.x
and r1.x___, r1.x, r4.x
iadd r4.x___, r2.y, r4.y_neg(xyzw)
dcl_literal l206, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r4.x, l206
ilt r4.x___, r3.x, r1.x
iadd r4.__z_, r1.x, r3.x_neg(xyzw)
and r4.x___, r4.x, r4.z
dcl_literal l207, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r4.__z_, r1.x, l207
dcl_literal l208, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.x___, r4.z, l208, r4.x
dcl_literal l209, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l209
if_logicalnz r1.x
    dcl_literal l210, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.__z_, r4.x, l210
    dcl_literal l211, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.___w, r4.x, l211
    cmov_logical r4.___w, r4.z, r4.w, r4.x
    dcl_literal l212, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r4.x, l212
    dcl_literal l213, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5._y__, l213, r4.w_neg(xyzw)
    ushr r5._y__, r0.z, r5.y
    ishl r4.___w, r0.z, r4.w
    ishl r5.x___, r0.w, r5.x
    ior r5.x___, r5.y, r5.x
    cmov_logical r5.x___, r4.z, r0.z, r5.x
    dcl_literal l214, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.__z_, r4.z, l214, r4.w
    cmov_logical r4.___w, r4.x, r5.x, r0.w
    cmov_logical r4.__z_, r4.x, r4.z, r0.z
    dcl_literal l215, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r5.x___, r4.y, l215
    dcl_literal l216, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5._y__, r4.y, l216
    cmov_logical r5._y__, r5.x, r5.y, r4.y
    dcl_literal l217, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.__z_, r4.y, l217
    dcl_literal l218, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5._y__, l218, r5.y_neg(xyzw)
    ushr r5.___w, r3.w, r5.y
    ishl r6.x___, r3.z, r5.z
    ior r5.___w, r5.w, r6.x
    cmov_logical r5.___w, r5.x, r3.w, r5.w
    cmov_logical r5.___w, r4.y, r5.w, r3.z
    ushr r5._y__, r4.z, r5.y
    ishl r5.__z_, r4.w, r5.z
    ior r5._y__, r5.y, r5.z
    cmov_logical r5.x___, r5.x, r4.z, r5.y
    cmov_logical r4._y__, r4.y, r5.x, r4.w
    udiv r5.x___, r5.w, r4.y
    umul r5._y__, r5.x, r4.y
    ilt r5.__z_, r5.w, r5.y
    iadd r6.x___, r5.y, r5.w_neg(xyzw)
    iadd r6.x___, r6.x, r4.y
    dcl_literal l219, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6.x___, r6.x, l219
    iadd r5._y__, r5.w, r5.y_neg(xyzw)
    cmov_logical r5._y__, r5.z, r6.x, r5.y
    udiv r4._y__, r5.y, r4.y
    iadd r5._y__, r5.x, r4.y_neg(xyzw)
    iadd r4._y__, r5.x, r4.y
    cmov_logical r4._y__, r5.z, r5.y, r4.y
    dcl_literal l220, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r4.z, l220
    dcl_literal l221, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r4.z, l221
    dcl_literal l222, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r4.y, l222
    dcl_literal l223, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r4.y, l223
    umul r6.x___, r5.y, r5.w
    umul r5._y__, r5.y, r5.z
    umul r6._y__, r5.x, r5.w
    umul r5.x___, r5.x, r5.z
    dcl_literal l224, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.__z_, r5.x, l224
    dcl_literal l225, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.___w, r6.y, l225
    iadd r6.__z_, r6.z, r6.w
    iadd r5._y__, r5.y, r6.z
    dcl_literal l226, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.__z_, r5.y, l226
    iadd r6.x___, r6.x, r6.z
    dcl_literal l227, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r6.y, l227
    iadd r6.x___, r6.x, r6.y
    dcl_literal l228, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5._y__, r5.y, l228
    dcl_literal l229, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l229
    ior r5.x___, r5.y, r5.x
    dcl_literal l230, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l230
    dcl_literal l231, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r4.w, l231
    umul r6._y__, r6.y, r5.z
    umul r5._y_w, r5.y, r5.zzzw
    dcl_literal l232, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r5.y, l232
    dcl_literal l233, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.w, l233
    iadd r5.__z_, r5.z, r5.w
    iadd r5.__z_, r6.y, r5.z
    dcl_literal l234, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5.__z_, r5.z, l234
    dcl_literal l235, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r5.y, l235
    ior r5._y__, r5.z, r5.y
    iadd r5.__z_, r5.y, r6.x
    ult r5._y__, r5.z, r5.y
    ult r5.___w, r3.z, r5.z
    ieq r6.x___, r3.z, r5.z
    ult r6._y__, r3.w, r5.x
    and r6._y__, r6.x, r6.y
    ior r5.___w, r5.w, r6.y
    dcl_literal l236, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l237, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r5.___w, r5.w, l236, l237
    ieq r6._y__, r3.w, r5.x
    and r6.x___, r6.x, r6.y
    dcl_literal l238, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r5.___w, r6.x, l238, r5.w
    dcl_literal l239, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5.___w, r5.w, l239
    ior r5._y__, r5.y, r5.w
    dcl_literal l240, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.___w, r4.y, l240
    cmov_logical r4._y__, r5.y, r5.w, r4.y
    iadd r4.__z_, r5.x, r4.z_neg(xyzw)
    ult r5.___w, r5.x, r4.z
    iadd r5.___w, r5.z, r5.w
    iadd r4.___w, r5.w, r4.w_neg(xyzw)
    cmov_logical r4.__zw, r5.y, r4.zzzw, r5.xxxz
    iadd r4.__z_, r3.w, r4.z_neg(xyzw)
    ult r5.x___, r3.w, r4.z
    iadd r5.x___, r3.z, r5.x
    iadd r3.__z_, r5.x, r4.w_neg(xyzw)
    mov r3.___w, r4.z
else
    dcl_literal l241, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r4._y__, l241
endif
ult r4.__z_, r3.z, r0.w
ieq r4.___w, r3.z, r0.w
ult r5.x___, r3.w, r0.z
and r5.x___, r4.w, r5.x
ior r4.__z_, r4.z, r5.x
dcl_literal l242, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l243, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r4.__z_, r4.z, l242, l243
ieq r5.x___, r3.w, r0.z
and r4.___w, r4.w, r5.x
dcl_literal l244, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.__z_, r4.w, l244, r4.z
dcl_literal l245, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r4.___w, r3.z, l245
dcl_literal l246, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r5.x___, r3.z, l246
dcl_literal l247, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r5._y__, r3.w, l247
ior r4.___w, r4.w, r5.y
dcl_literal l248, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r4.___w, r4.w, l248
dcl_literal l249, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r5._y__, r3.w, l249
dcl_literal l250, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r5.x, l250
dcl_literal l251, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l251
dcl_literal l252, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l252
dcl_literal l253, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l253, r5.z_neg(xyzw)
dcl_literal l254, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l254
dcl_literal l255, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l255
dcl_literal l256, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.__z_, r5.z, l256
dcl_literal l257, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r5.x___, r5.x, r5.z, l257
dcl_literal l258, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r4.w, l258
dcl_literal l259, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l259
dcl_literal l260, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l260
dcl_literal l261, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l261, r5.z_neg(xyzw)
dcl_literal l262, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l262
dcl_literal l263, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l263
dcl_literal l264, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.__z_, r5.z, l264
dcl_literal l265, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.___w, r4.w, r5.z, l265
dcl_literal l266, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r5.y, l266
dcl_literal l267, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l267
dcl_literal l268, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l268
dcl_literal l269, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l269, r5.z_neg(xyzw)
dcl_literal l270, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l270
dcl_literal l271, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l271
dcl_literal l272, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r5.__z_, r5.z, l272
dcl_literal l273, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r5._y__, r5.y, r5.z, l273
dcl_literal l274, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r5.__z_, r5.x, l274
iadd r4.___w, r5.x, r4.w
cmov_logical r5.x___, r5.z, r4.w, r5.x
dcl_literal l275, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r5.__z_, r4.w, l275
iadd r4.___w, r4.w, r5.y
cmov_logical r4.___w, r5.z, r4.w, r5.x
ilt r5.x___, r4.w, r2.y
ieq r5._y__, r2.y, r4.w
dcl_literal l276, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r4.__z_, r4.z, l276
and r4.__z_, r5.y, r4.z
ior r4.__z_, r5.x, r4.z
and r1.x___, r1.x, r4.z
iadd r2._y__, r2.y, r4.w_neg(xyzw)
dcl_literal l277, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r2.y, l277
ilt r2._y__, r3.x, r1.x
iadd r3.x___, r1.x, r3.x_neg(xyzw)
and r2._y__, r2.y, r3.x
dcl_literal l278, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r3.x___, r1.x, l278
dcl_literal l279, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r3.x, l279, r2.y
dcl_literal l280, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l280
if_logicalnz r1.x
    dcl_literal l281, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r1.x___, r2.y, l281
    dcl_literal l282, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.x___, r2.y, l282
    cmov_logical r3.x___, r1.x, r3.x, r2.y
    dcl_literal l283, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.__z_, r2.y, l283
    dcl_literal l284, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.x___, l284, r3.x_neg(xyzw)
    ushr r5.x___, r0.z, r5.x
    ishl r3.x___, r0.z, r3.x
    ishl r4.__z_, r0.w, r4.z
    ior r4.__z_, r5.x, r4.z
    cmov_logical r4.__z_, r1.x, r0.z, r4.z
    dcl_literal l285, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.x___, r1.x, l285, r3.x
    cmov_logical r0.___w, r2.y, r4.z, r0.w
    cmov_logical r1.x___, r2.y, r1.x, r0.z
    dcl_literal l286, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.x___, r4.w, l286
    dcl_literal l287, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.__z_, r4.w, l287
    cmov_logical r4.__z_, r3.x, r4.z, r4.w
    dcl_literal l288, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r4.w, l288
    dcl_literal l289, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.__z_, l289, r4.z_neg(xyzw)
    ushr r5._y__, r3.w, r4.z
    ishl r5.__z_, r3.z, r5.x
    ior r5._y__, r5.y, r5.z
    cmov_logical r5._y__, r3.x, r3.w, r5.y
    cmov_logical r5._y__, r4.w, r5.y, r3.z
    ushr r4.__z_, r1.x, r4.z
    ishl r5.x___, r0.w, r5.x
    ior r4.__z_, r4.z, r5.x
    cmov_logical r3.x___, r3.x, r1.x, r4.z
    cmov_logical r3.x___, r4.w, r3.x, r0.w
    udiv r4.__z_, r5.y, r3.x
    umul r4.___w, r4.z, r3.x
    ilt r5.x___, r5.y, r4.w
    iadd r5.__z_, r4.w, r5.y_neg(xyzw)
    iadd r5.__z_, r5.z, r3.x
    dcl_literal l290, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.__z_, r5.z, l290
    iadd r4.___w, r5.y, r4.w_neg(xyzw)
    cmov_logical r4.___w, r5.x, r5.z, r4.w
    udiv r3.x___, r4.w, r3.x
    iadd r4.___w, r4.z, r3.x_neg(xyzw)
    iadd r3.x___, r4.z, r3.x
    cmov_logical r3.x___, r5.x, r4.w, r3.x
    dcl_literal l291, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r1.x, l291
    dcl_literal l292, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r1.x___, r1.x, l292
    dcl_literal l293, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r3.x, l293
    dcl_literal l294, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.x, l294
    umul r5._y__, r1.x, r5.x
    umul r1.x___, r1.x, r4.w
    umul r5.__z_, r4.z, r5.x
    umul r4.__z_, r4.z, r4.w
    dcl_literal l295, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r4.z, l295
    dcl_literal l296, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.x___, r5.z, l296
    iadd r5.___w, r5.w, r6.x
    iadd r1.x___, r1.x, r5.w
    dcl_literal l297, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r1.x, l297
    iadd r5._y__, r5.y, r5.w
    dcl_literal l298, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r5.z, l298
    iadd r5._y__, r5.y, r5.z
    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r1.x___, r1.x, l299
    dcl_literal l300, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.z, l300
    ior r1.x___, r1.x, r4.z
    dcl_literal l301, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r0.w, l301
    dcl_literal l302, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r0.___w, r0.w, l302
    umul r0.___w, r0.w, r4.w
    umul r5.x___, r4.z, r5.x
    umul r4.__z_, r4.z, r4.w
    dcl_literal l303, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.z, l303
    dcl_literal l304, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l304
    iadd r4.___w, r4.w, r5.x
    iadd r0.___w, r0.w, r4.w
    dcl_literal l305, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r0.___w, r0.w, l305
    dcl_literal l306, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.z, l306
    ior r0.___w, r0.w, r4.z
    iadd r4.__z_, r0.w, r5.y
    ult r0.___w, r4.z, r0.w
    ult r4.___w, r3.z, r4.z
    ieq r3.__z_, r3.z, r4.z
    ult r4.__z_, r3.w, r1.x
    and r4.__z_, r3.z, r4.z
    ior r4.__z_, r4.w, r4.z
    dcl_literal l307, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l308, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4.__z_, r4.z, l307, l308
    ieq r1.x___, r3.w, r1.x
    and r1.x___, r3.z, r1.x
    dcl_literal l309, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.x___, r1.x, l309, r4.z
    dcl_literal l310, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, r1.x, l310
    ior r0.___w, r0.w, r1.x
    dcl_literal l311, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r1.x___, r3.x, l311
    cmov_logical r0.___w, r0.w, r1.x, r3.x
else
    dcl_literal l312, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0.___w, l312
endif
dcl_literal l313, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.x___, r2.z, l313
dcl_literal l314, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.x___, r2.z, l314
cmov_logical r3.x___, r1.x, r3.x, r2.z
dcl_literal l315, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.__z_, l315, r3.x_neg(xyzw)
ushr r3.__z_, r1.z, r3.z
ishl r3.x___, r1.z, r3.x
cmov_logical r3.__z_, r1.x, r1.z, r3.z
dcl_literal l316, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.x, l316, r3.x
dcl_literal l317, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r2.z, r3.z, l317
cmov_logical r1.x___, r2.z, r1.x, r1.z
dcl_literal l318, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r2.w, l318
dcl_literal l319, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r2.__z_, r2.w, l319
cmov_logical r2.__z_, r1.z, r2.z, r2.w
dcl_literal l320, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.__z_, l320, r2.z_neg(xyzw)
ushr r3.__z_, r3.y, r3.z
ishl r2.__z_, r3.y, r2.z
cmov_logical r3.__z_, r1.z, r3.y, r3.z
dcl_literal l321, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.z, l321, r2.z
dcl_literal l322, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r2.w, r3.z, l322
cmov_logical r1.__z_, r2.w, r1.z, r3.y
iadd r1.__z_, r1.x, r1.z
ult r1.x___, r1.z, r1.x
dcl_literal l323, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.x___, r1.x, l323
iadd r1.x___, r3.x, r1.x
iadd r1.x___, r2.z, r1.x
dcl_literal l324, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r2.__z_, r4.x, l324
dcl_literal l325, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r2.___w, r4.x, l325
cmov_logical r2.___w, r2.z, r2.w, r4.x
dcl_literal l326, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.x___, l326, r2.w_neg(xyzw)
ushr r3.x___, r4.y, r3.x
ishl r2.___w, r4.y, r2.w
cmov_logical r3.x___, r2.z, r4.y, r3.x
dcl_literal l327, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r2.z, l327, r2.w
dcl_literal l328, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r4.x, r3.x, l328
cmov_logical r2.__z_, r4.x, r2.z, r4.y
iadd r2.__z_, r1.z, r2.z
ult r1.__z_, r2.z, r1.z
dcl_literal l329, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r1.z, l329
iadd r1.x___, r1.x, r1.z
iadd r1.x___, r2.w, r1.x
dcl_literal l330, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r2.y, l330
dcl_literal l331, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r2.___w, r2.y, l331
cmov_logical r2.___w, r1.z, r2.w, r2.y
dcl_literal l332, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.x___, l332, r2.w_neg(xyzw)
ushr r3.x___, r0.w, r3.x
ishl r2.___w, r0.w, r2.w
cmov_logical r3.x___, r1.z, r0.w, r3.x
dcl_literal l333, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.z, l333, r2.w
dcl_literal l334, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r2.y, r3.x, l334
cmov_logical r0.___w, r2.y, r1.z, r0.w
iadd r0.___w, r2.z, r0.w
ult r1.__z_, r0.w, r2.z
dcl_literal l335, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r1.z, l335
iadd r1.x___, r1.x, r1.z
iadd r1.x___, r2.w, r1.x
dcl_literal l336, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1._y__, r1.y, l336
dcl_literal l337, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.y, l337, r1.x
dcl_literal l338, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.___w, r1.y, l338, r0.w
dcl_literal l339, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ieq r0.__z_, r0.z, l339
and r0.__z_, r2.x, r0.z
cmov_logical r0._y__, r0.z, r0.y, r1.x
cmov_logical r0.x___, r0.z, r0.x, r0.w
dcl_literal l340, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r1.w, l340, r0.xyxx
mov out0, r0
mend
__udiv_i8
mdef(109)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l9, 0x000000FF, 0x000000FF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l9
dcl_literal l10, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l10
udiv r0.___w, r1.x, r0.w
dcl_literal l11, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.___w, r0.w, l11
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r1.y, r0.w, l12
mov r0.x___, r0.z
mov out0, r0
mend
__ultof_f32
mdef(110)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r0.__z_, r0.y, l1
dcl_literal l2, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r0.___w, r0.x, l2
ior r0.__z_, r0.z, r0.w
dcl_literal l3, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0.__z_, r0.z, l3
dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.___w, r0.z, l4
dcl_literal l5, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l5
dcl_literal l6, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l6
dcl_literal l7, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.___w, l7, r0.w_neg(xyzw)
dcl_literal l8, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l8
dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.___w, r0.w, l9
dcl_literal l10, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r0.___w, r0.w, l10
dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r0.__z_, r0.z, r0.w, l11
dcl_literal l12, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r0.___w, r0.y, l12
dcl_literal l13, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1.x___, r0.w, l13
dcl_literal l14, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.x___, r1.x, l14
dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1.x___, l16, r1.x_neg(xyzw)
dcl_literal l17, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l17
dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1.x___, r1.x, l18
dcl_literal l19, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r1.x___, r1.x, l19
dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r0.___w, r0.w, r1.x, l20
iadd r0.__z_, r0.w, r0.z
dcl_literal l21, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r1.x___, r0.x, l21
dcl_literal l22, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1._y__, r1.x, l22
dcl_literal l23, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1._y__, r1.y, l23
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1._y__, r1.y, l24
dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1._y__, l25, r1.y_neg(xyzw)
dcl_literal l26, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1._y__, r1.y, l26
dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1._y__, r1.y, l27
dcl_literal l28, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r1._y__, r1.y, l28
dcl_literal l29, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r1.x___, r1.x, r1.y, l29
iadd r1.x___, r0.z, r1.x
dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r1._y__, r0.w, l30
cmov_logical r0.___w, r1.y, r0.z, r0.w
dcl_literal l31, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r0.__z_, r0.z, l31
cmov_logical r0.__z_, r0.z, r1.x, r0.w
dcl_literal l32, 0x00000040, 0x00000040, 0x00000040, 0x00000040
imin r0.___w, r0.z, l32
dcl_literal l33, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0.___w, r0.w, l33
dcl_literal l34, 0x00000020, 0x00000020, 0x00000020, 0x00000020
imin r1.x___, r0.w, l34
ishl r1.x___, r0.y, r1.x
dcl_literal l35, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r1._y__, r0.w, l35
dcl_literal l36, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r0.w, l36
cmov_logical r1._y__, r1.z, r1.y, r0.w
dcl_literal l37, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r1.___w, l37, r1.y_neg(xyzw)
ishl r1._y__, r0.x, r1.y
ushr r1.___w, r0.x, r1.w
ior r1.x___, r1.x, r1.w
cmov_logical r1.x___, r1.z, r1.y, r1.x
dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l38, r1.y
cmov_logical r0.xy__, r0.w, r1.yxyy, r0.xyxx
dcl_literal l39, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r0.y, l39
dcl_literal l40, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0._y__, r0.y, l40
dcl_literal l41, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishl r1.x___, r0.w, l41
dcl_literal l42, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r0.___w, r0.w, l42
dcl_literal l43, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r1._y__, r0.x, l43
ior r1.x___, r1.x, r1.y
dcl_literal l44, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishl r1._y__, r0.x, l44
dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.x___, r0.x, l45
dcl_literal l46, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r1._y__, l46, r1.y
dcl_literal l47, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1._y__, r1.y, l47
ior r1.x___, r1.x, r1.y
dcl_literal l48, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ieq r1._y__, r1.x, l48
dcl_literal l49, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ult r1.x___, l49, r1.x
dcl_literal l50, 0x000000BE, 0x000000BE, 0x000000BE, 0x000000BE
iadd r1.__z_, r0.z_neg(xyzw), l50
dcl_literal l51, 0x0000003F, 0x0000003F, 0x0000003F, 0x0000003F
iadd r0.__z_, l51, r0.z_neg(xyzw)
dcl_literal l52, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1.__z_, r1.z, l52
ior r0.___w, r0.w, r1.z
dcl_literal l53, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r0.w, l53
iadd r1.__z_, r0.w, r1.z
cmov_logical r0.___w, r1.y, r1.z, r0.w
dcl_literal l54, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r1._y__, r0.w, l54
cmov_logical r0.___w, r1.x, r1.y, r0.w
and r0.x___, r0.y, r0.x
dcl_literal l55, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
ilt r0._y__, r0.z, l55
ior r0.x___, r0.x, r0.y
dcl_literal l56, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l56, r0.w
mov out0, r0
mend
__umod_i16
mdef(111)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l21, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l21
dcl_literal l22, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l22
udiv r1.__z_, r1.x, r0.w
dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, r1.z, l23
umul r0.___w, r0.w, r1.y
iadd r0.___w, r1.x, r0.w_neg(xyzw)
dcl_literal l24, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.w, l24
mov r0.x___, r0.z
mov out0, r0
mend
__umod_i32
mdef(112)_out(1)_in(2)
mov r0, in0
mov r1, in1
udiv r2.x, r0.x, r1.x
umul r2.x, r2.x, r1.x
iadd r0.x, r0.x, r2.x_neg(xyzw)
mov out0, r0
mend
__umod_i64
mdef(113)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0.__zw, r1.yyxy
ieq r1.xy__, r0.yxyy, r0.wzww
ult r1.__zw, r0.yyyx, r0.wwwz
and r1.___w, r1.x, r1.w
ior r1.___w, r1.z, r1.w
dcl_literal l1, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.___w, r1.w, l1, l2
and r1._y__, r1.y, r1.x
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, l3, r1.w
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r2.xy__, r0.wzww, l4
and r1.___w, r2.y, r2.x
dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.__z_, r1.w, l5, r0.z
dcl_literal l6, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r2.xy__, r0.wyww, l6
dcl_literal l7, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.__z_, r0.x, l7
dcl_literal l8, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.xy__, r0.wyww, l8
dcl_literal l9, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.___w, r0.z, l9
ior r2.___w, r3.x, r2.w
dcl_literal l10, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r2.w, l10
dcl_literal l11, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.x___, r0.z, l11
dcl_literal l12, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000
ior r3.__zw, r2.xxxy, l12
dcl_literal l13, 0x00000000, 0x00000000, 0xBF800000, 0xBF800000
add r3.__zw, r3.zzzw, l13
dcl_literal l14, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
and r3.__zw, r3.zzzw, l14
dcl_literal l15, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000
iadd r3.__zw, l15, r3.zzzw_neg(xyzw)
dcl_literal l16, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
and r3.__zw, r3.zzzw, l16
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__zw, r3.zzzw, l17
dcl_literal l18, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.__zw, r3.zzzw, l18
dcl_literal l19, 0x00000017, 0x00000017, 0x00000000, 0x00000000
cmov_logical r2.xy__, r2.xyxx, r3.zwzz, l19
dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.__z_, r2.w, l20
dcl_literal l21, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.__z_, r3.z, l21
dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l22
dcl_literal l23, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.__z_, l23, r3.z_neg(xyzw)
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l24
dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__z_, r3.z, l25
dcl_literal l26, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.__z_, r3.z, l26
dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r2.___w, r2.w, r3.z, l27
dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.__z_, r3.x, l28
dcl_literal l29, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.__z_, r3.z, l29
dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l30
dcl_literal l31, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.__z_, l31, r3.z_neg(xyzw)
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l32
dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__z_, r3.z, l33
dcl_literal l34, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.__z_, r3.z, l34
dcl_literal l35, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.x___, r3.x, r3.z, l35
dcl_literal l36, 0x00000000, 0x00000000, 0x00000017, 0x00000017
ieq r3.__zw, r2.xxxy, l36
iadd r2.___w, r2.x, r2.w
cmov_logical r2.x___, r3.z, r2.w, r2.x
dcl_literal l37, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.__z_, r2.w, l37
iadd r2.___w, r2.w, r3.x
cmov_logical r2.x___, r3.z, r2.w, r2.x
dcl_literal l38, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r2.___w, r2.x, l38
dcl_literal l39, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.x___, r2.x, l39
dcl_literal l40, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F
cmov_logical r2.___w, r2.w, r3.x, l40
ult r3.x___, r0.x, r0.z
and r3.x___, r1.x, r3.x
ior r1.__z_, r1.z, r3.x
dcl_literal l41, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l42, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.__z_, r1.z, l41, l42
ieq r3.x___, r0.x, r0.z
and r1.x___, r1.x, r3.x
dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.x, l43, r1.z
ior r1.__z_, r2.z, r3.y
dcl_literal l44, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.__z_, r1.z, l44
dcl_literal l45, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r2.__z_, r0.x, l45
dcl_literal l46, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.x___, r1.z, l46
dcl_literal l47, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.x___, r3.x, l47
dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r3.x, l48
dcl_literal l49, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.x___, l49, r3.x_neg(xyzw)
dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r3.x, l50
dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.x___, r3.x, l51
dcl_literal l52, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.x___, r3.x, l52
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.__z_, r1.z, r3.x, l53
dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.x___, r2.z, l54
dcl_literal l55, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.x___, r3.x, l55
dcl_literal l56, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r3.x, l56
dcl_literal l57, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.x___, l57, r3.x_neg(xyzw)
dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r3.x, l58
dcl_literal l59, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.x___, r3.x, l59
dcl_literal l60, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.x___, r3.x, l60
dcl_literal l61, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r2.__z_, r2.z, r3.x, l61
iadd r1.__z_, r2.y, r1.z
cmov_logical r2._y__, r3.w, r1.z, r2.y
dcl_literal l62, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.x___, r1.z, l62
iadd r1.__z_, r1.z, r2.z
cmov_logical r1.__z_, r3.x, r1.z, r2.y
ilt r2._y__, r1.z, r2.x
ieq r2.__z_, r2.x, r1.z
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l63
and r1.x___, r2.z, r1.x
ior r1.x___, r2.y, r1.x
iadd r2._y__, r2.x, r1.z_neg(xyzw)
dcl_literal l64, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r2.y, l64
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2._y__, r1.x, l65
if_logicalnz r2.y
    ilt r2.__z_, r2.w, r1.x
    iadd r3.x___, r1.x, r2.w_neg(xyzw)
    and r2.__z_, r2.z, r3.x
    dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, r1.x, l66
    dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.x___, r1.x, l67, r2.z
    dcl_literal l68, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.__z_, r1.x, l68
    dcl_literal l69, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.x___, r1.x, l69
    cmov_logical r3.x___, r2.z, r3.x, r1.x
    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3._y__, r1.x, l70
    dcl_literal l71, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.__z_, l71, r3.x_neg(xyzw)
    ushr r3.__z_, r0.z, r3.z
    ishl r3.x___, r0.z, r3.x
    ishl r3._y__, r0.w, r3.y
    ior r3._y__, r3.z, r3.y
    cmov_logical r3._y__, r2.z, r0.z, r3.y
    dcl_literal l72, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.__z_, r2.z, l72, r3.x
    cmov_logical r3.x___, r1.x, r3.y, r0.w
    cmov_logical r1.x___, r1.x, r2.z, r0.z
    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.__z_, r1.z, l73
    dcl_literal l74, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3._y__, r1.z, l74
    cmov_logical r3._y__, r2.z, r3.y, r1.z
    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.__z_, r1.z, l75
    dcl_literal l76, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3._y__, l76, r3.y_neg(xyzw)
    ushr r3.___w, r0.x, r3.y
    ishl r4.x___, r0.y, r3.z
    ior r3.___w, r3.w, r4.x
    cmov_logical r3.___w, r2.z, r0.x, r3.w
    cmov_logical r3.___w, r1.z, r3.w, r0.y
    ushr r3._y__, r1.x, r3.y
    ishl r3.__z_, r3.x, r3.z
    ior r3._y__, r3.y, r3.z
    cmov_logical r2.__z_, r2.z, r1.x, r3.y
    cmov_logical r1.__z_, r1.z, r2.z, r3.x
    udiv r2.__z_, r3.w, r1.z
    umul r3._y__, r2.z, r1.z
    ilt r3.__z_, r3.w, r3.y
    iadd r4.x___, r3.y, r3.w_neg(xyzw)
    iadd r4.x___, r4.x, r1.z
    dcl_literal l77, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.x___, r4.x, l77
    iadd r3._y__, r3.w, r3.y_neg(xyzw)
    cmov_logical r3._y__, r3.z, r4.x, r3.y
    udiv r1.__z_, r3.y, r1.z
    iadd r3._y__, r2.z, r1.z_neg(xyzw)
    iadd r1.__z_, r2.z, r1.z
    cmov_logical r1.__z_, r3.z, r3.y, r1.z
    dcl_literal l78, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r1.x, l78
    dcl_literal l79, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r1.x, l79
    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r1.z, l80
    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r1.__z_, r1.z, l81
    umul r3.___w, r3.y, r1.z
    umul r3._y__, r3.y, r3.z
    umul r4.x___, r2.z, r1.z
    umul r2.__z_, r2.z, r3.z
    dcl_literal l82, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r2.z, l82
    dcl_literal l83, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.x, l83
    iadd r4._y__, r4.y, r4.z
    iadd r3._y__, r3.y, r4.y
    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r3.y, l84
    iadd r3.___w, r3.w, r4.y
    dcl_literal l85, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r4.x, l85
    iadd r3.___w, r3.w, r4.x
    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3._y__, r3.y, l86
    dcl_literal l87, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r2.z, l87
    ior r2.__z_, r3.y, r2.z
    dcl_literal l88, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.x, l88
    dcl_literal l89, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r3.x, l89
    umul r4.x___, r4.x, r3.z
    umul r1.__z_, r3.y, r1.z
    umul r3._y__, r3.y, r3.z
    dcl_literal l90, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r3.y, l90
    dcl_literal l91, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r1.__z_, r1.z, l91
    iadd r1.__z_, r3.z, r1.z
    iadd r1.__z_, r4.x, r1.z
    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r1.__z_, r1.z, l92
    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l93
    ior r1.__z_, r1.z, r3.y
    iadd r3._y__, r1.z, r3.w
    ult r1.__z_, r3.y, r1.z
    ult r3.__z_, r0.y, r3.y
    ieq r3.___w, r0.y, r3.y
    ult r4.x___, r0.x, r2.z
    and r4.x___, r3.w, r4.x
    ior r3.__z_, r3.z, r4.x
    dcl_literal l94, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r3.__z_, r3.z, l94, l95
    ieq r4.x___, r0.x, r2.z
    and r3.___w, r3.w, r4.x
    dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.__z_, r3.w, l96, r3.z
    dcl_literal l97, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3.__z_, r3.z, l97
    ior r1.__z_, r1.z, r3.z
    iadd r1.x___, r2.z, r1.x_neg(xyzw)
    ult r3.__z_, r2.z, r1.x
    iadd r3.__z_, r3.y, r3.z
    iadd r3.x___, r3.z, r3.x_neg(xyzw)
    cmov_logical r3.x___, r1.z, r3.x, r3.y
    cmov_logical r1.x___, r1.z, r1.x, r2.z
    iadd r1.__z_, r0.x, r1.x_neg(xyzw)
    ult r2.__z_, r0.x, r1.z
    iadd r2.__z_, r0.y, r2.z
    iadd r1.x___, r2.z, r3.x_neg(xyzw)
else
    mov r1.x_z_, r0.yyxy
endif
ult r2.__z_, r1.x, r0.w
ieq r3.x___, r1.x, r0.w
ult r3._y__, r1.z, r0.z
and r3._y__, r3.x, r3.y
ior r2.__z_, r2.z, r3.y
dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l99, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.__z_, r2.z, l98, l99
ieq r3._y__, r1.z, r0.z
and r3.x___, r3.x, r3.y
dcl_literal l100, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r3.x, l100, r2.z
dcl_literal l101, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.x___, r1.x, l101
dcl_literal l102, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3._y__, r1.x, l102
dcl_literal l103, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.__z_, r1.z, l103
ior r3.x___, r3.x, r3.z
dcl_literal l104, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.x___, r3.x, l104
dcl_literal l105, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r1.z, l105
dcl_literal l106, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.y, l106
dcl_literal l107, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l107
dcl_literal l108, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l108
dcl_literal l109, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l109, r3.w_neg(xyzw)
dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l110
dcl_literal l111, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l111
dcl_literal l112, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l112
dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r3.w, l113
dcl_literal l114, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.x, l114
dcl_literal l115, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l115
dcl_literal l116, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l116
dcl_literal l117, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l117, r3.w_neg(xyzw)
dcl_literal l118, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l118
dcl_literal l119, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l119
dcl_literal l120, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l120
dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.x___, r3.x, r3.w, l121
dcl_literal l122, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l122
dcl_literal l123, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l123
dcl_literal l124, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l124
dcl_literal l125, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l125, r3.w_neg(xyzw)
dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l126
dcl_literal l127, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l127
dcl_literal l128, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l128
dcl_literal l129, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l129
dcl_literal l130, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r3.___w, r3.y, l130
iadd r3.x___, r3.y, r3.x
cmov_logical r3._y__, r3.w, r3.x, r3.y
dcl_literal l131, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r3.x, l131
iadd r3.x___, r3.x, r3.z
cmov_logical r3.x___, r3.w, r3.x, r3.y
ilt r3._y__, r3.x, r2.x
ieq r3.__z_, r2.x, r3.x
dcl_literal l132, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.z, l132
and r2.__z_, r3.z, r2.z
ior r2.__z_, r3.y, r2.z
and r2._y__, r2.y, r2.z
iadd r2.__z_, r2.x, r3.x_neg(xyzw)
dcl_literal l133, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2._y__, r2.y, r2.z, l133
dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.y, l134
if_logicalnz r2.z
    ilt r3._y__, r2.w, r2.y
    iadd r3.__z_, r2.y, r2.w_neg(xyzw)
    and r3._y__, r3.y, r3.z
    dcl_literal l135, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, r2.y, l135
    dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2._y__, r2.y, l136, r3.y
    dcl_literal l137, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3._y__, r2.y, l137
    dcl_literal l138, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.__z_, r2.y, l138
    cmov_logical r3.__z_, r3.y, r3.z, r2.y
    dcl_literal l139, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.___w, r2.y, l139
    dcl_literal l140, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.x___, l140, r3.z_neg(xyzw)
    ushr r4.x___, r0.z, r4.x
    ishl r3.__z_, r0.z, r3.z
    ishl r3.___w, r0.w, r3.w
    ior r3.___w, r4.x, r3.w
    cmov_logical r3.___w, r3.y, r0.z, r3.w
    dcl_literal l141, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3._y__, r3.y, l141, r3.z
    cmov_logical r3.__z_, r2.y, r3.w, r0.w
    cmov_logical r2._y__, r2.y, r3.y, r0.z
    dcl_literal l142, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3._y__, r3.x, l142
    dcl_literal l143, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r3.x, l143
    cmov_logical r3.___w, r3.y, r3.w, r3.x
    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r3.x, l144
    dcl_literal l145, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l145, r3.w_neg(xyzw)
    ushr r4._y__, r1.z, r3.w
    ishl r4.__z_, r1.x, r4.x
    ior r4._y__, r4.y, r4.z
    cmov_logical r4._y__, r3.y, r1.z, r4.y
    cmov_logical r4._y__, r3.x, r4.y, r1.x
    ushr r3.___w, r2.y, r3.w
    ishl r4.x___, r3.z, r4.x
    ior r3.___w, r3.w, r4.x
    cmov_logical r3._y__, r3.y, r2.y, r3.w
    cmov_logical r3.x___, r3.x, r3.y, r3.z
    udiv r3._y__, r4.y, r3.x
    umul r3.___w, r3.y, r3.x
    ilt r4.x___, r4.y, r3.w
    iadd r4.__z_, r3.w, r4.y_neg(xyzw)
    iadd r4.__z_, r4.z, r3.x
    dcl_literal l146, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.__z_, r4.z, l146
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r4.x, r4.z, r3.w
    udiv r3.x___, r3.w, r3.x
    iadd r3.___w, r3.y, r3.x_neg(xyzw)
    iadd r3.x___, r3.y, r3.x
    cmov_logical r3.x___, r4.x, r3.w, r3.x
    dcl_literal l147, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r2.y, l147
    dcl_literal l148, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.y, l148
    dcl_literal l149, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.x, l149
    dcl_literal l150, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.x___, r3.x, l150
    umul r4._y__, r3.w, r3.x
    umul r3.___w, r3.w, r4.x
    umul r4.__z_, r3.y, r3.x
    umul r3._y__, r3.y, r4.x
    dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.y, l151
    dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r4.z, l152
    iadd r4.___w, r4.w, r5.x
    iadd r3.___w, r3.w, r4.w
    dcl_literal l153, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.w, l153
    iadd r4._y__, r4.y, r4.w
    dcl_literal l154, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r4.z, l154
    iadd r4._y__, r4.y, r4.z
    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.___w, r3.w, l155
    dcl_literal l156, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l156
    ior r3._y__, r3.w, r3.y
    dcl_literal l157, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.z, l157
    dcl_literal l158, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r3.z, l158
    umul r4.__z_, r4.z, r4.x
    umul r3.x___, r3.w, r3.x
    umul r3.___w, r3.w, r4.x
    dcl_literal l159, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r3.w, l159
    dcl_literal l160, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r3.x, l160
    iadd r3.x___, r4.x, r3.x
    iadd r3.x___, r4.z, r3.x
    dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.x___, r3.x, l161
    dcl_literal l162, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.w, l162
    ior r3.x___, r3.x, r3.w
    iadd r3.___w, r3.x, r4.y
    ult r3.x___, r3.w, r3.x
    ult r4.x___, r1.x, r3.w
    ieq r4._y__, r1.x, r3.w
    ult r4.__z_, r1.z, r3.y
    and r4.__z_, r4.y, r4.z
    ior r4.x___, r4.x, r4.z
    dcl_literal l163, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l164, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4.x___, r4.x, l163, l164
    ieq r4.__z_, r1.z, r3.y
    and r4._y__, r4.y, r4.z
    dcl_literal l165, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.x___, r4.y, l165, r4.x
    dcl_literal l166, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.x___, r4.x, l166
    ior r3.x___, r3.x, r4.x
    iadd r2._y__, r3.y, r2.y_neg(xyzw)
    ult r4.x___, r3.y, r2.y
    iadd r4.x___, r3.w, r4.x
    iadd r3.__z_, r4.x, r3.z_neg(xyzw)
    cmov_logical r3.__z_, r3.x, r3.z, r3.w
    cmov_logical r2._y__, r3.x, r2.y, r3.y
    iadd r2._y__, r1.z, r2.y_neg(xyzw)
    ult r3.x___, r1.z, r2.y
    iadd r3.x___, r1.x, r3.x
    iadd r1.x___, r3.x, r3.z_neg(xyzw)
    mov r1.__z_, r2.y
endif
ult r2._y__, r1.x, r0.w
ieq r3.x___, r1.x, r0.w
ult r3._y__, r1.z, r0.z
and r3._y__, r3.x, r3.y
ior r2._y__, r2.y, r3.y
dcl_literal l167, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l168, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2._y__, r2.y, l167, l168
ieq r3._y__, r1.z, r0.z
and r3.x___, r3.x, r3.y
dcl_literal l169, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r3.x, l169, r2.y
dcl_literal l170, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.x___, r1.x, l170
dcl_literal l171, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3._y__, r1.x, l171
dcl_literal l172, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.__z_, r1.z, l172
ior r3.x___, r3.x, r3.z
dcl_literal l173, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.x___, r3.x, l173
dcl_literal l174, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r1.z, l174
dcl_literal l175, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.y, l175
dcl_literal l176, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l176
dcl_literal l177, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l177
dcl_literal l178, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l178, r3.w_neg(xyzw)
dcl_literal l179, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l179
dcl_literal l180, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l180
dcl_literal l181, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l181
dcl_literal l182, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r3.w, l182
dcl_literal l183, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.x, l183
dcl_literal l184, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l184
dcl_literal l185, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l185
dcl_literal l186, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l186, r3.w_neg(xyzw)
dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l187
dcl_literal l188, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l188
dcl_literal l189, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l189
dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.x___, r3.x, r3.w, l190
dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l191
dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l192
dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l193
dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l194, r3.w_neg(xyzw)
dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l195
dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l196
dcl_literal l197, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l197
dcl_literal l198, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l198
dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r3.___w, r3.y, l199
iadd r3.x___, r3.y, r3.x
cmov_logical r3._y__, r3.w, r3.x, r3.y
dcl_literal l200, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r3.x, l200
iadd r3.x___, r3.x, r3.z
cmov_logical r3.x___, r3.w, r3.x, r3.y
ilt r3._y__, r3.x, r2.x
ieq r3.__z_, r2.x, r3.x
dcl_literal l201, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2._y__, r2.y, l201
and r2._y__, r3.z, r2.y
ior r2._y__, r3.y, r2.y
and r2._y__, r2.z, r2.y
iadd r2.__z_, r2.x, r3.x_neg(xyzw)
dcl_literal l202, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2._y__, r2.y, r2.z, l202
dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.y, l203
if_logicalnz r2.z
    ilt r3._y__, r2.w, r2.y
    iadd r3.__z_, r2.y, r2.w_neg(xyzw)
    and r3._y__, r3.y, r3.z
    dcl_literal l204, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, r2.y, l204
    dcl_literal l205, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2._y__, r2.y, l205, r3.y
    dcl_literal l206, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3._y__, r2.y, l206
    dcl_literal l207, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.__z_, r2.y, l207
    cmov_logical r3.__z_, r3.y, r3.z, r2.y
    dcl_literal l208, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.___w, r2.y, l208
    dcl_literal l209, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.x___, l209, r3.z_neg(xyzw)
    ushr r4.x___, r0.z, r4.x
    ishl r3.__z_, r0.z, r3.z
    ishl r3.___w, r0.w, r3.w
    ior r3.___w, r4.x, r3.w
    cmov_logical r3.___w, r3.y, r0.z, r3.w
    dcl_literal l210, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3._y__, r3.y, l210, r3.z
    cmov_logical r3.__z_, r2.y, r3.w, r0.w
    cmov_logical r2._y__, r2.y, r3.y, r0.z
    dcl_literal l211, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3._y__, r3.x, l211
    dcl_literal l212, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r3.x, l212
    cmov_logical r3.___w, r3.y, r3.w, r3.x
    dcl_literal l213, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r3.x, l213
    dcl_literal l214, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l214, r3.w_neg(xyzw)
    ushr r4._y__, r1.z, r3.w
    ishl r4.__z_, r1.x, r4.x
    ior r4._y__, r4.y, r4.z
    cmov_logical r4._y__, r3.y, r1.z, r4.y
    cmov_logical r4._y__, r3.x, r4.y, r1.x
    ushr r3.___w, r2.y, r3.w
    ishl r4.x___, r3.z, r4.x
    ior r3.___w, r3.w, r4.x
    cmov_logical r3._y__, r3.y, r2.y, r3.w
    cmov_logical r3.x___, r3.x, r3.y, r3.z
    udiv r3._y__, r4.y, r3.x
    umul r3.___w, r3.y, r3.x
    ilt r4.x___, r4.y, r3.w
    iadd r4.__z_, r3.w, r4.y_neg(xyzw)
    iadd r4.__z_, r4.z, r3.x
    dcl_literal l215, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.__z_, r4.z, l215
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r4.x, r4.z, r3.w
    udiv r3.x___, r3.w, r3.x
    iadd r3.___w, r3.y, r3.x_neg(xyzw)
    iadd r3.x___, r3.y, r3.x
    cmov_logical r3.x___, r4.x, r3.w, r3.x
    dcl_literal l216, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r2.y, l216
    dcl_literal l217, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.y, l217
    dcl_literal l218, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.x, l218
    dcl_literal l219, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.x___, r3.x, l219
    umul r4._y__, r3.w, r3.x
    umul r3.___w, r3.w, r4.x
    umul r4.__z_, r3.y, r3.x
    umul r3._y__, r3.y, r4.x
    dcl_literal l220, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.y, l220
    dcl_literal l221, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r4.z, l221
    iadd r4.___w, r4.w, r5.x
    iadd r3.___w, r3.w, r4.w
    dcl_literal l222, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.w, l222
    iadd r4._y__, r4.y, r4.w
    dcl_literal l223, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r4.z, l223
    iadd r4._y__, r4.y, r4.z
    dcl_literal l224, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.___w, r3.w, l224
    dcl_literal l225, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l225
    ior r3._y__, r3.w, r3.y
    dcl_literal l226, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.z, l226
    dcl_literal l227, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r3.z, l227
    umul r4.__z_, r4.z, r4.x
    umul r3.x___, r3.w, r3.x
    umul r3.___w, r3.w, r4.x
    dcl_literal l228, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r3.w, l228
    dcl_literal l229, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r3.x, l229
    iadd r3.x___, r4.x, r3.x
    iadd r3.x___, r4.z, r3.x
    dcl_literal l230, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.x___, r3.x, l230
    dcl_literal l231, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.w, l231
    ior r3.x___, r3.x, r3.w
    iadd r3.___w, r3.x, r4.y
    ult r3.x___, r3.w, r3.x
    ult r4.x___, r1.x, r3.w
    ieq r4._y__, r1.x, r3.w
    ult r4.__z_, r1.z, r3.y
    and r4.__z_, r4.y, r4.z
    ior r4.x___, r4.x, r4.z
    dcl_literal l232, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l233, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4.x___, r4.x, l232, l233
    ieq r4.__z_, r1.z, r3.y
    and r4._y__, r4.y, r4.z
    dcl_literal l234, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.x___, r4.y, l234, r4.x
    dcl_literal l235, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.x___, r4.x, l235
    ior r3.x___, r3.x, r4.x
    iadd r2._y__, r3.y, r2.y_neg(xyzw)
    ult r4.x___, r3.y, r2.y
    iadd r4.x___, r3.w, r4.x
    iadd r3.__z_, r4.x, r3.z_neg(xyzw)
    cmov_logical r3.__z_, r3.x, r3.z, r3.w
    cmov_logical r2._y__, r3.x, r2.y, r3.y
    iadd r2._y__, r1.z, r2.y_neg(xyzw)
    ult r3.x___, r1.z, r2.y
    iadd r3.x___, r1.x, r3.x
    iadd r1.x___, r3.x, r3.z_neg(xyzw)
    mov r1.__z_, r2.y
endif
ult r2._y__, r1.x, r0.w
ieq r3.x___, r1.x, r0.w
ult r3._y__, r1.z, r0.z
and r3._y__, r3.x, r3.y
ior r2._y__, r2.y, r3.y
dcl_literal l236, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l237, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2._y__, r2.y, l236, l237
ieq r3._y__, r1.z, r0.z
and r3.x___, r3.x, r3.y
dcl_literal l238, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r3.x, l238, r2.y
dcl_literal l239, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.x___, r1.x, l239
dcl_literal l240, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3._y__, r1.x, l240
dcl_literal l241, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.__z_, r1.z, l241
ior r3.x___, r3.x, r3.z
dcl_literal l242, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.x___, r3.x, l242
dcl_literal l243, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r1.z, l243
dcl_literal l244, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.y, l244
dcl_literal l245, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l245
dcl_literal l246, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l246
dcl_literal l247, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l247, r3.w_neg(xyzw)
dcl_literal l248, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l248
dcl_literal l249, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l249
dcl_literal l250, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l250
dcl_literal l251, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r3.w, l251
dcl_literal l252, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.x, l252
dcl_literal l253, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l253
dcl_literal l254, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l254
dcl_literal l255, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l255, r3.w_neg(xyzw)
dcl_literal l256, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l256
dcl_literal l257, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l257
dcl_literal l258, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l258
dcl_literal l259, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.x___, r3.x, r3.w, l259
dcl_literal l260, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l260
dcl_literal l261, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l261
dcl_literal l262, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l262
dcl_literal l263, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l263, r3.w_neg(xyzw)
dcl_literal l264, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l264
dcl_literal l265, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l265
dcl_literal l266, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l266
dcl_literal l267, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l267
dcl_literal l268, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r3.___w, r3.y, l268
iadd r3.x___, r3.y, r3.x
cmov_logical r3._y__, r3.w, r3.x, r3.y
dcl_literal l269, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r3.x, l269
iadd r3.x___, r3.x, r3.z
cmov_logical r3.x___, r3.w, r3.x, r3.y
ilt r3._y__, r3.x, r2.x
ieq r3.__z_, r2.x, r3.x
dcl_literal l270, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2._y__, r2.y, l270
and r2._y__, r3.z, r2.y
ior r2._y__, r3.y, r2.y
and r2._y__, r2.z, r2.y
iadd r2.x___, r2.x, r3.x_neg(xyzw)
dcl_literal l271, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2.x___, r2.y, r2.x, l271
dcl_literal l272, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2._y__, r2.x, l272
if_logicalnz r2.y
    ilt r2._y__, r2.w, r2.x
    iadd r2.__z_, r2.x, r2.w_neg(xyzw)
    and r2._y__, r2.y, r2.z
    dcl_literal l273, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.x___, r2.x, l273
    dcl_literal l274, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.x___, r2.x, l274, r2.y
    dcl_literal l275, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2._y__, r2.x, l275
    dcl_literal l276, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r2.__z_, r2.x, l276
    cmov_logical r2.__z_, r2.y, r2.z, r2.x
    dcl_literal l277, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r2.___w, r2.x, l277
    dcl_literal l278, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3._y__, l278, r2.z_neg(xyzw)
    ushr r3._y__, r0.z, r3.y
    ishl r2.__z_, r0.z, r2.z
    ishl r2.___w, r0.w, r2.w
    ior r2.___w, r3.y, r2.w
    cmov_logical r2.___w, r2.y, r0.z, r2.w
    dcl_literal l279, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2._y__, r2.y, l279, r2.z
    cmov_logical r0.__zw, r2.x, r2.yyyw, r0.zzzw
    dcl_literal l280, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.x___, r3.x, l280
    dcl_literal l281, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r2._y__, r3.x, l281
    cmov_logical r2._y__, r2.x, r2.y, r3.x
    dcl_literal l282, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r2.__z_, r3.x, l282
    dcl_literal l283, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r2._y__, l283, r2.y_neg(xyzw)
    ushr r2.___w, r1.z, r2.y
    ishl r3._y__, r1.x, r2.z
    ior r2.___w, r2.w, r3.y
    cmov_logical r2.___w, r2.x, r1.z, r2.w
    cmov_logical r2.___w, r3.x, r2.w, r1.x
    ushr r2._y__, r0.z, r2.y
    ishl r2.__z_, r0.w, r2.z
    ior r2._y__, r2.y, r2.z
    cmov_logical r2.x___, r2.x, r0.z, r2.y
    cmov_logical r2.x___, r3.x, r2.x, r0.w
    udiv r2._y__, r2.w, r2.x
    umul r2.__z_, r2.y, r2.x
    ilt r3.x___, r2.w, r2.z
    iadd r3._y__, r2.z, r2.w_neg(xyzw)
    iadd r3._y__, r3.y, r2.x
    dcl_literal l284, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r3._y__, r3.y, l284
    iadd r2.__z_, r2.w, r2.z_neg(xyzw)
    cmov_logical r2.__z_, r3.x, r3.y, r2.z
    udiv r2.x___, r2.z, r2.x
    iadd r2.__z_, r2.y, r2.x_neg(xyzw)
    iadd r2.x___, r2.y, r2.x
    cmov_logical r2.x___, r3.x, r2.z, r2.x
    dcl_literal l285, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2._y__, r0.z, l285
    dcl_literal l286, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2.__z_, r0.z, l286
    dcl_literal l287, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.___w, r2.x, l287
    dcl_literal l288, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2.x___, r2.x, l288
    umul r3.x___, r2.z, r2.x
    umul r2.__z_, r2.z, r2.w
    umul r3._y__, r2.y, r2.x
    umul r2._y__, r2.y, r2.w
    dcl_literal l289, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r2.y, l289
    dcl_literal l290, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.y, l290
    iadd r3.__z_, r3.z, r3.w
    iadd r2.__z_, r2.z, r3.z
    dcl_literal l291, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r2.z, l291
    iadd r3.x___, r3.x, r3.z
    dcl_literal l292, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r3.y, l292
    iadd r3.x___, r3.x, r3.y
    dcl_literal l293, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r2.__z_, r2.z, l293
    dcl_literal l294, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2._y__, r2.y, l294
    ior r2._y__, r2.z, r2.y
    dcl_literal l295, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r0.w, l295
    dcl_literal l296, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r0.w, l296
    umul r3._y__, r3.y, r2.w
    umul r2.x_z_, r2.z, r2.xxwx
    dcl_literal l297, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2.___w, r2.z, l297
    dcl_literal l298, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.x___, r2.x, l298
    iadd r2.x___, r2.w, r2.x
    iadd r2.x___, r3.y, r2.x
    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r2.x___, r2.x, l299
    dcl_literal l300, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r2.z, l300
    ior r2.x___, r2.x, r2.z
    iadd r2.__z_, r2.x, r3.x
    ult r2.x___, r2.z, r2.x
    ult r2.___w, r1.x, r2.z
    ieq r3.x___, r1.x, r2.z
    ult r3._y__, r1.z, r2.y
    and r3._y__, r3.x, r3.y
    ior r2.___w, r2.w, r3.y
    dcl_literal l301, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l302, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r2.___w, r2.w, l301, l302
    ieq r3._y__, r1.z, r2.y
    and r3.x___, r3.x, r3.y
    dcl_literal l303, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.___w, r3.x, l303, r2.w
    dcl_literal l304, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.___w, r2.w, l304
    ior r2.x___, r2.x, r2.w
    iadd r0.__z_, r2.y, r0.z_neg(xyzw)
    ult r2.___w, r2.y, r0.z
    iadd r2.___w, r2.z, r2.w
    iadd r0.___w, r2.w, r0.w_neg(xyzw)
    cmov_logical r0.__zw, r2.x, r0.zzzw, r2.yyyz
    iadd r0.__z_, r1.z, r0.z_neg(xyzw)
    ult r2.x___, r1.z, r0.z
    iadd r2.x___, r1.x, r2.x
    iadd r1.x___, r2.x, r0.w_neg(xyzw)
    mov r1.__z_, r0.z
endif
dcl_literal l305, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, r1.y, l305
cmov_logical r0.xy__, r0.z, r0.xyxx, r1.zxzz
dcl_literal l306, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r1.y, r0.xyxx, l306
dcl_literal l307, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r1.w, l307, r0.xyxx
mov out0, r0
mend
__umod_i8
mdef(114)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l9, 0x000000FF, 0x000000FF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l9
dcl_literal l10, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l10
udiv r1.__z_, r1.x, r0.w
dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, r1.z, l11
umul r0.___w, r0.w, r1.y
iadd r0.___w, r1.x, r0.w_neg(xyzw)
dcl_literal l12, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.__z_, r0.w, l12
mov r0.x___, r0.z
mov out0, r0
mend
mcall(
N4llvm19AMDIL789IOExpansionE
N4llvm14AMDIL7XXDeviceE
N4llvm14AMDIL770DeviceE
N4llvm14AMDIL710DeviceE
N4llvm19AMDIL7XXIOExpansionE
N4llvm15AMDILAsmBackendE
N12_GLOBAL__N_118AMDILBarrierDetectE
N4llvm24MachinePostDominatorTreeE
N4llvm15AMDILCFGPrepareE
N4llvm20AMDILCFGStructurizerE
N4llvm15AMDILCFGPerformE
N4llvm11AMDILDeviceE
N4llvm18AMDILEGIOExpansionE
N4llvm18AMDILELFWriterInfoE
N4llvm20AMDILEvergreenDeviceE
N4llvm18AMDILCypressDeviceE
N4llvm16AMDILCedarDeviceE
N4llvm18AMDILRedwoodDeviceE
N4llvm18AMDILFrameLoweringE
N4llvm16AMDILIOExpansionE
N12_GLOBAL__N_117AMDILDAGToDAGISelE
e-Y
N4llvm19AMDILTargetLoweringE
N4llvm19AMDILImageExpansionE
N12_GLOBAL__N_115AMDILInlinePassE
N4llvm16AMDILInstPrinterE
N4llvm14AMDILInstrInfoE
N4llvm17AMDILGenInstrInfoE
N4llvm18AMDILIntrinsicInfoE
N4llvm18AMDILKernelManagerE
N12_GLOBAL__N_119AMDILLiteralManagerE
N4llvm14AMDILMCAsmInfoE
N4llvm24AMDILMachineFunctionInfoE
N12_GLOBAL__N_120AMDILMachinePeepholeE
N4llvm15AMDILModuleInfoE
N4llvm13AMDILNIDeviceE
N4llvm17AMDILCaymanDeviceE
N12_GLOBAL__N_116AMDILPeepholeOptE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N4llvm19AMDILPointerManagerE
N4llvm21AMDILEGPointerManagerE
N12_GLOBAL__N_118AMDILPrintfConvertE
N4llvm20AMDILGenRegisterInfoE
N4llvm17AMDILRegisterInfoE
N4llvm5AMDIL10GPRI8ClassE
N4llvm19TargetRegisterClassE
N4llvm5AMDIL11GPRI16ClassE
N4llvm5AMDIL11GPRI32ClassE
N4llvm5AMDIL11GPRF32ClassE
N4llvm5AMDIL12GPRV2I8ClassE
N4llvm5AMDIL13GPRV2I16ClassE
N4llvm5AMDIL13GPRV2I32ClassE
N4llvm5AMDIL13GPRV2F32ClassE
N4llvm5AMDIL11GPRI64ClassE
N4llvm5AMDIL11GPRF64ClassE
N4llvm5AMDIL12GPRV4I8ClassE
N4llvm5AMDIL12GPRWI32ClassE
N4llvm5AMDIL12GPRXI32ClassE
N4llvm5AMDIL12GPRYI32ClassE
N4llvm5AMDIL12GPRZI32ClassE
N4llvm5AMDIL13GPRZWI64ClassE
N4llvm5AMDIL13GPRXYI64ClassE
N4llvm5AMDIL13GPRV4I16ClassE
N4llvm5AMDIL13GPRV2F64ClassE
N4llvm5AMDIL13GPRV2I64ClassE
N4llvm5AMDIL13GPRV4F32ClassE
N4llvm5AMDIL13GPRV4I32ClassE
N4llvm5AMDIL28GPRV2I8_with_sub_x_compClassE
N4llvm5AMDIL28GPRV2I8_with_sub_w_compClassE
N4llvm5AMDIL29GPRV2I16_with_sub_x_compClassE
N4llvm5AMDIL28GPRV4I8_with_sub_w_compClassE
N4llvm5AMDIL29GPRV2I16_with_sub_w_compClassE
N4llvm5AMDIL29GPRV4I16_with_sub_w_compClassE
N4llvm5AMDIL27GPRF64_with_sub_x_compClassE
N4llvm5AMDIL27GPRF64_with_sub_w_compClassE
N4llvm5AMDIL29GPRV2F64_with_sub_w_compClassE
N4llvm14AMDILSubtargetE
N4llvm21AMDILGenSubtargetInfoE
N4llvm19AMDILSwizzleEncoderE
N4llvm18AMDILTargetMachineE
N4llvm21TheAMDILTargetMachineE
N4llvm18ValueMapCallbackVHIPKNS_5ValueEbNS_14ValueMapConfigIS3_EENS_12DenseMapInfoIbEEEE
N4llvm18AMDIL7XXAsmPrinterE
"d5A
"d'B
"dwB
"dWC
"dCD
"c5A
"c'B
"cwB
"cWC
"cCD
"cE
"cpE
"cnG
"cjI
"csJ
"c;K
"cqL
"c9M
"ciN
"c5O
"c>P
PTYYb
PTYYb
PTYYb
PTYYb
PTYYb
PTYYb
PTYYb
PTYYb
PTYYb
PTYYb
PTYYb
PTYYb
 )`c "`c ) 
DBG_VALUE
abs 
dabs 
acos 
add_rte 
dadd_rte 
add_rtn 
dadd_rtn 
add_rtp 
dadd_rtp 
add_rtz 
dadd_rtz 
add 
dadd 
iadd 
; begin of call sequence 
; end of call sequence 
iand 
append_buf_alloc_id(
append_buf_consume_id(
asin 
atan 
uav_add_id(
uav_add_addr(64)_id(
uav_read_add_id(
uav_read_add_addr(64)_id(
uav_and_id(
uav_and_addr(64)_id(
uav_read_and_id(
uav_read_and_addr(64)_id(
uav_cmp_id(
uav_cmp_addr(64)_id(
uav_read_cmp_xchg_id(
uav_read_cmp_xchg_addr(64)_id(
uav_udec_id(
uav_udec_addr(64)_id(
uav_read_udec_id(
uav_read_udec_addr(64)_id(
uav_uinc_id(
uav_uinc_addr(64)_id(
uav_read_uinc_id(
uav_read_uinc_addr(64)_id(
uav_max_id(
uav_max_addr(64)_id(
uav_read_max_id(
uav_read_max_addr(64)_id(
uav_min_id(
uav_min_addr(64)_id(
uav_read_min_id(
uav_read_min_addr(64)_id(
uav_or_id(
uav_or_addr(64)_id(
uav_read_or_id(
uav_read_or_addr(64)_id(
uav_rsub_id(
uav_rsub_addr(64)_id(
uav_read_rsub_id(
uav_read_rsub_addr(64)_id(
uav_sub_id(
uav_sub_addr(64)_id(
uav_read_sub_id(
uav_read_sub_addr(64)_id(
uav_umax_id(
uav_umax_addr(64)_id(
uav_read_umax_id(
uav_read_umax_addr(64)_id(
uav_umin_id(
uav_umin_addr(64)_id(
uav_read_umin_id(
uav_read_umin_addr(64)_id(
uav_read_xchg_id(
uav_read_xchg_addr(64)_id(
uav_xor_id(
uav_xor_addr(64)_id(
uav_read_xor_id(
uav_read_xor_addr(64)_id(
lds_add_resource(
lds_add_addr(64)_resource(
lds_read_add_resource(
lds_read_add_addr(64)_resource(
lds_and_resource(
lds_and_addr(64)_resource(
lds_read_and_resource(
lds_read_and_addr(64)_resource(
lds_cmp_resource(
lds_cmp_addr(64)_resource(
lds_read_cmp_xchg_resource(
lds_read_cmp_xchg_addr(64)_resource(
lds_dec_resource(
lds_dec_addr(64)_resource(
lds_read_dec_resource(
lds_read_dec_addr(64)_resource(
lds_inc_resource(
lds_inc_addr(64)_resource(
lds_read_inc_resource(
lds_read_inc_addr(64)_resource(
lds_max_resource(
lds_max_addr(64)_resource(
lds_read_max_resource(
lds_read_max_addr(64)_resource(
lds_min_resource(
lds_min_addr(64)_resource(
lds_read_min_resource(
lds_read_min_addr(64)_resource(
lds_mskor_resource(
lds_mskor_addr(64)_resource(
lds_read_mskor_resource(
lds_read_mskor_addr(64)_resource(
lds_or_resource(
lds_or_addr(64)_resource(
lds_read_or_resource(
lds_read_or_addr(64)_resource(
lds_rsub_resource(
lds_rsub_addr(64)_resource(
lds_read_rsub_resource(
lds_read_rsub_addr(64)_resource(
lds_sub_resource(
lds_sub_addr(64)_resource(
lds_read_sub_resource(
lds_read_sub_addr(64)_resource(
lds_umax_resource(
lds_umax_addr(64)_resource(
lds_read_umax_resource(
lds_read_umax_addr(64)_resource(
lds_umin_resource(
lds_umin_addr(64)_resource(
lds_read_umin_resource(
lds_read_umin_addr(64)_resource(
lds_read_xchg_resource(
lds_read_xchg_addr(64)_resource(
lds_xor_resource(
lds_xor_addr(64)_resource(
lds_read_xor_resource(
lds_read_xor_addr(64)_resource(
gds_add_resource(
gds_add_addr(64)_resource(
gds_read_add_resource(
gds_read_add_addr(64)_resource(
gds_and_resource(
gds_and_addr(64)_resource(
gds_read_and_resource(
gds_read_and_addr(64)_resource(
gds_cmp_resource(
gds_cmp_addr(64)_resource(
gds_read_cmp_xchg_resource(
gds_read_cmp_xchg_addr(64)_resource(
gds_dec_resource(
gds_dec_addr(64)_resource(
gds_read_dec_resource(
gds_read_dec_addr(64)_resource(
gds_inc_resource(
gds_inc_addr(64)_resource(
gds_read_inc_resource(
gds_read_inc_addr(64)_resource(
gds_max_resource(
gds_max_addr(64)_resource(
gds_read_max_resource(
gds_read_max_addr(64)_resource(
gds_min_resource(
gds_min_addr(64)_resource(
gds_read_min_resource(
gds_read_min_addr(64)_resource(
gds_mskor_resource(
gds_mskor_addr(64)_resource(
gds_read_mskor_resource(
gds_read_mskor_addr(64)_resource(
gds_or_resource(
gds_or_addr(64)_resource(
gds_read_or_resource(
gds_read_or_addr(64)_resource(
gds_rsub_resource(
gds_rsub_addr(64)_resource(
gds_read_rsub_resource(
gds_read_rsub_addr(64)_resource(
gds_sub_resource(
gds_sub_addr(64)_resource(
gds_read_sub_resource(
gds_read_sub_addr(64)_resource(
gds_umax_resource(
gds_umax_addr(64)_resource(
gds_read_umax_resource(
gds_read_umax_addr(64)_resource(
gds_umin_resource(
gds_umin_addr(64)_resource(
gds_read_umin_resource(
gds_read_umin_addr(64)_resource(
gds_read_xchg_resource(
gds_read_xchg_addr(64)_resource(
gds_xor_resource(
gds_xor_addr(64)_resource(
gds_read_xor_resource(
gds_read_xor_addr(64)_resource(
fence_threads_memory_lds
fence_threads_memory_lds_gds_gws
fence_threads_memory
fence_threads_lds
fence_threads_gds
bfi 
bfm 
inot 
ior 
ixor 
bitalign 
icbits 
iborrow 
; Pseudo unconditional branch instruction
; f32 Pseudo branch instruction
; f64 Pseudo branch instruction
; i16 Pseudo branch instruction
; i32 Pseudo branch instruction
; i64 Pseudo branch instruction
; i8 Pseudo branch instruction
break
breakc 
break_logicalnz 
break_logicalz 
bytealign 
call 
icarry 
case 
mov 
clamp 
class 
dclass 
cmov_logical 
cmov 
; f32 Pseudo comparison instr
; f64 Pseudo comparison instr
; i16 Pseudo comparison instr
; i32 Pseudo comparison instr
; i64 Pseudo comparison instr
; i8 Pseudo comparison instr
!constant aext load 
!constant load 
!constant sext load 
!constant zext load 
continue
continuec 
continue_logicalnz 
continue_logicalz 
cos_vec 
cos 
!constant aext pool load 
!constant pool load 
!constant pool sext load 
!constant pool zext load 
cu_id 
ddiv 
default
deq 
dmad 
dge 
div_zeroop(infinity) 
div_precise 
dlt 
dne 
dp2add 
dp2 
dp3 
dp4 
d2f 
dtoi 
dtou 
dtrig_preop 
ret_logicalnz 
else
endfunc
endif
endloop
endmain
endswitch
exn 
exp_vec 
exp 
fence_lds_memory_gds
fence_memory
fence_memory_lds
fence_lds
fence_lds_memory_gds_mem_read_only
fence_memory_mem_read_only
fence_memory_lds_mem_read_only
fence_lds_mem_read_only
fence_gds_mem_read_only
fence_gds_memory_mem_read_only
fence_gds_lds_mem_read_only
fence_gds
fence_gds_memory
fence_gds_lds
fence_lds_memory_gds_mem_write_only
fence_memory_mem_write_only
fence_memory_lds_mem_write_only
fence_lds_mem_write_only
fence_gds_mem_write_only
fence_gds_memory_mem_write_only
fence_gds_lds_mem_write_only
ffb_hi 
ffb_lo 
ffb_shi 
mad_ieee 
fma_rte 
fma_rtn 
fma_rtp 
fma_rtz 
fma 
frc 
dfrac 
dfrexp_exp 
frexp_exp 
frexp_mant 
dfrexp_mant 
dfrexp 
f2d 
f2f16_near 
f2f16_neg_inf 
f2f16_plus_inf 
f2f16 
ftoi 
ftoi_flr 
ftoi_rpi 
ftou 
f_2_u4 
mul_ieee 
func
gds_load_id(
gds_store_id(
!global aext load 
!global load 
!global sext load 
!global store 
!global trunc store 
!global zext load 
f162f 
ibit_extract 
ieq 
ifc 
if_logicalnz 
if_logicalz 
ige 
ilt 
imad24 
imad 
sample_id(
uav_store_id(
sample_resource(
imax3 
i64max 
imax 
imed3 
imin3 
i64min 
imin 
imul24 
imul24_high 
imul_high 
ine 
itod 
itof 
i64add 
fldexp 
dldexp 
lds_load_id(
lds_load_short_id(
lds_load_byte_id(
lds_load_ushort_id(
lds_load_ubyte_id(
lds_load_vec_id(
lds_store_id(
lds_store_short_id(
lds_store_byte_id(
lds_store_vec_id(
len 
i64eq 
lrp 
i64ge 
i64lt 
i64ne 
i64negate 
!local aext load 
!local load 
!local sext load 
!local store 
!local trunc store 
!local zext load 
log_vec 
log 
i64shl 
i64shr 
u64shr 
mad_rte 
dmad_rte 
mad_rtn 
dmad_rtn 
mad_rtp 
dmad_rtp 
mad_rtz 
dmad_rtz 
max3 
max_ieee 
dmax 
med3 
unpack0 
unpack1 
unpack2 
unpack3 
min3 
min_ieee 
dmin 
mod_ieee 
mqsad 
dmul 
mul_rte 
dmul_rte 
mul_rtn 
dmul_rtn 
mul_rtp 
dmul_rtp 
mul_rtz 
dmul_rtz 
udiv 
round_nearest 
inegate 
pireduce 
pow 
!private aext load 
!private load 
!private sext load 
!private store 
!private trunc store 
!private zext load 
qsad 
drcp_zeroop(infinity) 
!region aext load 
!region load 
!region sext load 
!region hw store 
!region trunc store 
!region zext load 
ret_dyn
round_z 
round_neginf 
round_plusinf 
rsq_vec 
rsq 
drsq_zeroop(infinity) 
sad_u16 
sad_u32 
sad4 
sadhi 
sad 
mov x
i64div 
init_semaphore_id(
semaphore_signal_id(
semaphore_wait_id(
ishl 
ishr 
sgn 
sin_vec 
sin 
i64mod 
imul 
i64mul 
sqrt_vec 
sqrt 
dsqrt 
sub_rte 
dsub_rte 
sub_rtn 
dsub_rtn 
sub_rtp 
dsub_rtp 
sub_rtz 
dsub_rtz 
sub 
switch 
tan 
u4lerp 
uav_arena_load_id(
uav_arena_store_id(
uav_short_load_id(
uav_raw_load_addr(64)_id(
uav_byte_load_id(
uav_ushort_load_id(
uav_ubyte_load_id(
uav_raw_load_id(
uav_short_store_id(
uav_raw_store_id(
uav_byte_store_id(
ubit_extract 
ubit_insert 
ubit_reverse 
u64div 
uge 
ult 
u64ge 
u64lt 
umad24 
umad 
umax3 
u64max 
umax 
umed3 
umin3 
u64min 
umin 
u64mod 
umul24 
umul24_high 
umul_high 
umul 
u64mul 
ushr 
utod 
utof 
wave_id 
whileloop
r1029
r1028
mem0
r100
r101
r102
r103
r104
r105
r106
r107
r108
r109
r110
r111
r112
r113
r114
r115
r116
r117
r118
r119
r120
r121
r122
r123
r124
r125
r126
r127
r128
r129
r130
r131
r132
r133
r134
r135
r136
r137
r138
r139
r140
r141
r142
r143
r144
r145
r146
r147
r148
r149
r150
r151
r152
r153
r154
r155
r156
r157
r158
r159
r160
r161
r162
r163
r164
r165
r166
r167
r168
r169
r170
r171
r172
r173
r174
r175
r176
r177
r178
r179
r180
r181
r182
r183
r184
r185
r186
r187
r188
r189
r190
r191
r1000
r1001
r1002
r1003
r1004
r1005
r1006
r1007
r1008
r1009
r1010
r1011
r1012
r1026
r1013
r1019
r1018
r1017
r1016
r1015
r1014
N4llvm15AMDILAsmPrinterE
N4llvm17AMDILEGAsmPrinterE
N4llvm17AMDILSIAsmPrinterE
N4llvm13AMDILSIDeviceE
N4llvm15AMDILSIDevice32E
N4llvm15AMDILSIDevice64E
N4llvm18AMDILSIIOExpansionE
N4llvm21AMDILSIPointerManagerE
