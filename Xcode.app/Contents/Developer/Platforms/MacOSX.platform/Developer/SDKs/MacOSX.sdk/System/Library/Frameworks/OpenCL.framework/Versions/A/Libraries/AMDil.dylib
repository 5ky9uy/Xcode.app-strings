N4llvm15AMDILAsmBackendE
dcl_global_flags flat_address_ptr32
endfunc
else
continue
endif
endswitch
break
endmain
; Pseudo unconditional branch instruction
; Pseudo branch instruction
ret_dyn
endloop
whileloop
fence_gds
fence_threads_gds
fence_lds_gds
fence_memory_gds
fence_threads_memory_gds
fence_lds_memory_gds
fence_lds
fence_threads_lds
fence_threads_gds_lds
fence_threads_memory_gds_lds
fence_threads_memory_lds
fence_gds_gws
fence_lds_gds_gws
fence_memory_gds_gws
fence_lds_memory_gds_gws
fence_lds_gws
fence_memory_gws
fence_lds_memory_gws
default
fence_gds_mem_read_only
fence_lds_gds_mem_read_only
fence_memory_gds_mem_read_only
fence_lds_memory_gds_mem_read_only
fence_lds_mem_read_only
fence_memory_mem_read_only
fence_lds_memory_mem_read_only
fence_gds_mem_write_only
fence_lds_gds_mem_write_only
fence_memory_gds_mem_write_only
fence_lds_memory_gds_mem_write_only
fence_lds_mem_write_only
fence_memory_mem_write_only
fence_lds_memory_mem_write_only
fence_memory
fence_threads_memory
fence_lds_memory
cmp_relop(ge)_cmpval(0.0) 
cmp_relop(eq)_cmpval(0.0) 
cmp_relop(lt)_cmpval(0.0) 
cmp_relop(ge)_cmpval(1.0) 
cmp_relop(eq)_cmpval(1.0) 
cmp_relop(lt)_cmpval(1.0) 
cmp_relop(ge)_cmpval(-1.0) 
cmp_relop(eq)_cmpval(-1.0) 
cmp_relop(lt)_cmpval(-1.0) 
uav_read_sub_op(subx2) 
uav_read_udec_op(decx2) 
uav_read_uinc_op(incx2) 
uav_read_add_op(addx2) 
uav_read_and_op(andx2) 
flat_load_size(dwordx2) 
flat_store_size(dwordx2) 
uav_read_min_op(minx2) 
uav_read_min_op(fminx2) 
uav_read_umin_op(uminx2) 
uav_read_xchg_op(swapx2) 
uav_read_cmp_xchg_op(cmpswapx2) 
uav_read_cmp_xchg_op(fcmpswapx2) 
uav_read_or_op(orx2) 
uav_read_xor_op(xorx2) 
uav_read_max_op(maxx2) 
uav_read_max_op(fmaxx2) 
uav_read_umax_op(umaxx2) 
flat_load_size(dwordx3) 
flat_store_size(dwordx3) 
flat_load_size(dwordx4) 
flat_store_size(dwordx4) 
cmp_relop(ge)_cmpval(0.5) 
cmp_relop(eq)_cmpval(0.5) 
cmp_relop(lt)_cmpval(0.5) 
cmp_relop(ge)_cmpval(-0.5) 
cmp_relop(eq)_cmpval(-0.5) 
cmp_relop(lt)_cmpval(-0.5) 
uav_read_sub_op(sub) 
uav_read_udec_op(dec) 
uav_read_uinc_op(inc) 
uav_read_add_op(add) 
uav_read_and_op(and) 
flat_load_size(dword) 
flat_store_size(dword) 
flat_load_size(sbyte) 
flat_store_size(sbyte) 
flat_load_size(ubyte) 
flat_store_size(ubyte) 
uav_read_min_op(min) 
uav_read_min_op(fmin) 
uav_read_umin_op(umin) 
uav_read_xchg_op(swap) 
uav_read_cmp_xchg_op(cmpswap) 
uav_read_cmp_xchg_op(fcmpswap) 
uav_read_or_op(or) 
uav_read_xor_op(xor) 
flat_load_size(sshort) 
flat_store_size(sshort) 
flat_load_size(ushort) 
flat_store_size(ushort) 
uav_read_max_op(max) 
uav_read_max_op(fmax) 
uav_read_umax_op(umax) 
drcp_zeroop(infinity) 
drsq_zeroop(infinity) 
div_zeroop(infinity) 
sub x0[0], x0[0], 
iadd x0[0], x0[0], 
iadd x0[5].x, x0[5].x, 
unpack0 
unpack1 
vmad_i64_i32 
vmad_u64_u32 
sad_u32 
unpack2 
dp2 
imed3 
umed3 
unpack3 
imin3 
umin3 
dp3 
imax3 
umax3 
imad24 
umad24 
imul24 
umul24 
sad4 
dp4 
f_2_u4 
f2f16 
sad_u16 
mqsad_u32_u8 
f16fma 
f16sub 
u16sub 
dfrac 
continuec 
log_vec 
sin_vec 
exp_vec 
rsq_vec 
cos_vec 
sqrt_vec 
ifc 
breakc 
flat_load_size(dwordx2)_glc 
flat_store_size(dwordx2)_glc 
flat_load_size(dwordx3)_glc 
flat_store_size(dwordx3)_glc 
flat_load_size(dwordx4)_glc 
flat_store_size(dwordx4)_glc 
flat_load_size(dword)_glc 
flat_store_size(dword)_glc 
flat_load_size(sbyte)_glc 
flat_store_size(sbyte)_glc 
flat_load_size(ubyte)_glc 
flat_store_size(ubyte)_glc 
flat_load_size(sshort)_glc 
flat_store_size(sshort)_glc 
flat_load_size(ushort)_glc 
flat_store_size(ushort)_glc 
flat_load_size(dwordx2)_slc_glc 
flat_store_size(dwordx2)_slc_glc 
flat_load_size(dwordx3)_slc_glc 
flat_store_size(dwordx3)_slc_glc 
flat_load_size(dwordx4)_slc_glc 
flat_store_size(dwordx4)_slc_glc 
flat_load_size(dword)_slc_glc 
flat_store_size(dword)_slc_glc 
flat_load_size(sbyte)_slc_glc 
flat_store_size(sbyte)_slc_glc 
flat_load_size(ubyte)_slc_glc 
flat_store_size(ubyte)_slc_glc 
flat_load_size(sshort)_slc_glc 
flat_store_size(sshort)_slc_glc 
flat_load_size(ushort)_slc_glc 
flat_store_size(ushort)_slc_glc 
flat_load_size(dwordx2)_prt_glc 
flat_store_size(dwordx2)_prt_glc 
flat_load_size(dwordx3)_prt_glc 
flat_store_size(dwordx3)_prt_glc 
flat_load_size(dwordx4)_prt_glc 
flat_store_size(dwordx4)_prt_glc 
flat_load_size(dword)_prt_glc 
flat_store_size(dword)_prt_glc 
flat_load_size(sbyte)_prt_glc 
flat_store_size(sbyte)_prt_glc 
flat_load_size(ubyte)_prt_glc 
flat_store_size(ubyte)_prt_glc 
flat_load_size(sshort)_prt_glc 
flat_store_size(sshort)_prt_glc 
flat_load_size(ushort)_prt_glc 
flat_store_size(ushort)_prt_glc 
flat_load_size(dwordx2)_slc 
flat_store_size(dwordx2)_slc 
flat_load_size(dwordx3)_slc 
flat_store_size(dwordx3)_slc 
flat_load_size(dwordx4)_slc 
flat_store_size(dwordx4)_slc 
flat_load_size(dword)_slc 
flat_store_size(dword)_slc 
flat_load_size(sbyte)_slc 
flat_store_size(sbyte)_slc 
flat_load_size(ubyte)_slc 
flat_store_size(ubyte)_slc 
flat_load_size(sshort)_slc 
flat_store_size(sshort)_slc 
flat_load_size(ushort)_slc 
flat_store_size(ushort)_slc 
f16frc 
f2d 
f16mad 
i16mad 
u16mad 
dmad 
imad 
umad 
!private load 
!global load 
!local load 
!constant pool load 
!constant aext pool load 
!region load 
!flat load 
!constant load 
!private aext load 
!global aext load 
!local aext load 
!region aext load 
!flat aext load 
!constant aext load 
!private sext load 
!global sext load 
!local sext load 
!constant pool sext load 
!region sext load 
!flat sext load 
!constant sext load 
!private zext load 
!global zext load 
!local zext load 
!constant pool zext load 
!region zext load 
!flat zext load 
!constant zext load 
msad 
mqsad 
dp2add 
i64add 
f16add 
u16add 
dadd 
iadd 
lane_id 
wave_id 
cu_id 
iand 
i64mod 
u64mod 
itod 
utod 
mad_ieee 
mod_ieee 
mul_ieee 
min_ieee 
max_ieee 
i64ge 
u64ge 
dge 
ige 
uge 
i64ne 
receivelane 
readfirstlane 
dne 
ine 
!private trunc store 
!global trunc store 
!local trunc store 
!region trunc store 
!flat trunc store 
!private store 
!global store 
!local store 
!flat store 
!region hw store 
case 
div_precise 
ubit_reverse 
i64negate 
inegate 
f16fma_rte 
f16sub_rte 
dsub_rte 
dmad_rte 
f16add_rte 
dadd_rte 
d2f_rte 
f16mul_rte 
dmul_rte 
f162f 
d2f 
f2f16_neg_inf 
f2f16_plus_inf 
f16round_neginf 
dround_neginf 
f16round_plusinf 
dround_plusinf 
itof 
utof 
f16log 
switch 
imul24_high 
umul24_high 
imul_high 
umul_high 
bfi 
ffb_hi 
sadhi 
ffb_shi 
dtoi 
ftoi 
ftoi_rpi 
cmov_logical 
i64shl 
i16shl 
ishl 
i64mul 
u64mul 
f16mul 
u16mul 
dmul 
imul 
umul 
bfm 
atan 
len 
bytealign 
bitalign 
sgn 
i64min 
u64min 
f16min 
i16min 
u16min 
dmin 
imin 
umin 
f16sin 
asin 
f16fma_rtn 
f16sub_rtn 
dsub_rtn 
dmad_rtn 
f16add_rtn 
dadd_rtn 
d2f_rtn 
f16mul_rtn 
dmul_rtn 
exn 
ffb_lo 
f16rcp 
clamp 
dtrig_preop 
u4lerp 
lrp 
f16fma_rtp 
f16sub_rtp 
dsub_rtp 
dmad_rtp 
f16add_rtp 
dadd_rtp 
d2f_rtp 
f16mul_rtp 
dmul_rtp 
f16exp 
f16frexp_exp 
dfrexp_exp 
f16ldexp 
dldexp 
fldexp 
dfrexp 
i64eq 
deq 
ieq 
f16rsq 
f2f16_near 
i64shr 
u64shr 
i16shr 
u16shr 
ishr 
ushr 
ftoi_flr 
ior 
ixor 
dabs 
f16cos 
acos 
dclass 
icbits 
ibit_extract 
ubit_extract 
i64lt 
u64lt 
dlt 
ilt 
ult 
f16frexp_mant 
dfrexp_mant 
ballot 
inot 
ubit_insert 
flat_load_size(dwordx2)_prt 
flat_store_size(dwordx2)_prt 
flat_load_size(dwordx3)_prt 
flat_store_size(dwordx3)_prt 
flat_load_size(dwordx4)_prt 
flat_store_size(dwordx4)_prt 
flat_load_size(dword)_prt 
flat_store_size(dword)_prt 
flat_load_size(sbyte)_prt 
flat_store_size(sbyte)_prt 
flat_load_size(ubyte)_prt 
flat_store_size(ubyte)_prt 
flat_load_size(sshort)_prt 
flat_store_size(sshort)_prt 
flat_load_size(ushort)_prt 
flat_store_size(ushort)_prt 
flat_load_size(dwordx2)_slc_glc_prt 
flat_store_size(dwordx2)_slc_glc_prt 
flat_load_size(dwordx3)_slc_glc_prt 
flat_store_size(dwordx3)_slc_glc_prt 
flat_load_size(dwordx4)_slc_glc_prt 
flat_store_size(dwordx4)_slc_glc_prt 
flat_load_size(dword)_slc_glc_prt 
flat_store_size(dword)_slc_glc_prt 
flat_load_size(sbyte)_slc_glc_prt 
flat_store_size(sbyte)_slc_glc_prt 
flat_load_size(ubyte)_slc_glc_prt 
flat_store_size(ubyte)_slc_glc_prt 
flat_load_size(sshort)_slc_glc_prt 
flat_store_size(sshort)_slc_glc_prt 
flat_load_size(ushort)_slc_glc_prt 
flat_store_size(ushort)_slc_glc_prt 
flat_load_size(dwordx2)_slc_prt 
flat_store_size(dwordx2)_slc_prt 
flat_load_size(dwordx3)_slc_prt 
flat_store_size(dwordx3)_slc_prt 
flat_load_size(dwordx4)_slc_prt 
flat_store_size(dwordx4)_slc_prt 
flat_load_size(dword)_slc_prt 
flat_store_size(dword)_slc_prt 
flat_load_size(sbyte)_slc_prt 
flat_store_size(sbyte)_slc_prt 
flat_load_size(ubyte)_slc_prt 
flat_store_size(ubyte)_slc_prt 
flat_load_size(sshort)_slc_prt 
flat_store_size(sshort)_slc_prt 
flat_load_size(ushort)_slc_prt 
flat_store_size(ushort)_slc_prt 
f16sqrt 
dsqrt 
f16round_nearest 
dround_nearest 
dtou 
ftou 
i64div 
u64div 
f16div 
ddiv 
udiv 
poisonv 
mov 
pow 
iborrow 
i64max 
u64max 
f16max 
i16max 
u16max 
dmax 
imax 
umax 
icarry 
f16round_z 
dround_z 
continue_logicalz 
if_logicalz 
break_logicalz 
continue_logicalnz 
if_logicalnz 
break_logicalnz 
ret_logicalnz 
f16fma_rtz 
f16sub_rtz 
dsub_rtz 
dmad_rtz 
f16add_rtz 
dadd_rtz 
d2f_rtz 
f16mul_rtz 
dmul_rtz 
uav_read_sub_b64_addr(64)_id(
uav_sub_b64_addr(64)_id(
uav_read_rsub_b64_addr(64)_id(
uav_rsub_b64_addr(64)_id(
uav_read_udec_b64_addr(64)_id(
uav_udec_b64_addr(64)_id(
uav_read_uinc_b64_addr(64)_id(
uav_uinc_b64_addr(64)_id(
uav_read_add_b64_addr(64)_id(
uav_add_b64_addr(64)_id(
uav_read_and_b64_addr(64)_id(
uav_and_b64_addr(64)_id(
uav_read_xchg_b64_addr(64)_id(
uav_read_cmp_xchg_b64_addr(64)_id(
uav_read_min_b64_addr(64)_id(
uav_min_b64_addr(64)_id(
uav_read_umin_b64_addr(64)_id(
uav_umin_b64_addr(64)_id(
uav_cmp_b64_addr(64)_id(
uav_read_or_b64_addr(64)_id(
uav_or_b64_addr(64)_id(
uav_read_xor_b64_addr(64)_id(
uav_xor_b64_addr(64)_id(
uav_read_max_b64_addr(64)_id(
uav_max_b64_addr(64)_id(
uav_read_umax_b64_addr(64)_id(
uav_umax_b64_addr(64)_id(
uav_read_sub_addr(64)_id(
uav_sub_addr(64)_id(
uav_read_rsub_addr(64)_id(
uav_rsub_addr(64)_id(
uav_read_udec_addr(64)_id(
uav_udec_addr(64)_id(
uav_read_uinc_addr(64)_id(
uav_uinc_addr(64)_id(
uav_byte_load_addr(64)_id(
uav_ubyte_load_addr(64)_id(
uav_short_load_addr(64)_id(
uav_ushort_load_addr(64)_id(
uav_raw_load_addr(64)_id(
uav_read_add_addr(64)_id(
uav_add_addr(64)_id(
uav_read_and_addr(64)_id(
uav_and_addr(64)_id(
uav_byte_store_addr(64)_id(
uav_short_store_addr(64)_id(
uav_raw_store_addr(64)_id(
uav_read_xchg_addr(64)_id(
uav_read_cmp_xchg_addr(64)_id(
uav_read_min_addr(64)_id(
uav_min_addr(64)_id(
uav_read_umin_addr(64)_id(
uav_umin_addr(64)_id(
uav_cmp_addr(64)_id(
uav_read_or_addr(64)_id(
uav_or_addr(64)_id(
uav_read_xor_addr(64)_id(
uav_xor_addr(64)_id(
uav_read_max_addr(64)_id(
uav_max_addr(64)_id(
uav_read_umax_addr(64)_id(
uav_umax_addr(64)_id(
uav_read_sub_b64_id(
uav_sub_b64_id(
uav_read_rsub_b64_id(
uav_rsub_b64_id(
uav_read_udec_b64_id(
uav_udec_b64_id(
uav_read_uinc_b64_id(
uav_uinc_b64_id(
uav_read_add_b64_id(
uav_add_b64_id(
uav_read_and_b64_id(
uav_and_b64_id(
uav_read_xchg_b64_id(
uav_read_cmp_xchg_b64_id(
uav_read_min_b64_id(
uav_min_b64_id(
uav_read_umin_b64_id(
uav_umin_b64_id(
uav_cmp_b64_id(
uav_read_or_b64_id(
uav_or_b64_id(
uav_read_xor_b64_id(
uav_xor_b64_id(
uav_read_max_b64_id(
uav_max_b64_id(
uav_read_umax_b64_id(
uav_umax_b64_id(
gds_read_sub64_id(
lds_read_sub64_id(
gds_sub64_id(
lds_sub64_id(
gds_read_rsub64_id(
lds_read_rsub64_id(
gds_rsub64_id(
lds_rsub64_id(
gds_read_dec64_id(
lds_read_dec64_id(
gds_dec64_id(
lds_dec64_id(
gds_read_inc64_id(
lds_read_inc64_id(
gds_inc64_id(
lds_inc64_id(
lds_load64_id(
gds_read_add64_id(
lds_read_add64_id(
gds_add64_id(
lds_add64_id(
gds_read_and64_id(
lds_read_and64_id(
gds_and64_id(
lds_and64_id(
lds_store64_id(
gds_read_xchg64_id(
lds_read_xchg64_id(
gds_read_cmp_xchg64_id(
lds_read_cmp_xchg64_id(
gds_read_min64_id(
lds_read_min64_id(
gds_min64_id(
lds_min64_id(
gds_read_umin64_id(
lds_read_umin64_id(
gds_umin64_id(
lds_umin64_id(
gds_cmp64_id(
lds_cmp64_id(
gds_read_or64_id(
lds_read_or64_id(
gds_or64_id(
lds_or64_id(
gds_read_mskor64_id(
lds_read_mskor64_id(
gds_mskor64_id(
lds_mskor64_id(
gds_read_xor64_id(
lds_read_xor64_id(
gds_xor64_id(
lds_xor64_id(
gds_read_max64_id(
lds_read_max64_id(
gds_max64_id(
lds_max64_id(
gds_read_umax64_id(
lds_read_umax64_id(
gds_umax64_id(
lds_umax64_id(
gds_read_sub_id(
lds_read_sub_id(
uav_read_sub_id(
gds_sub_id(
lds_sub_id(
uav_sub_id(
gds_read_rsub_id(
lds_read_rsub_id(
uav_read_rsub_id(
gds_rsub_id(
lds_rsub_id(
uav_rsub_id(
gds_read_dec_id(
lds_read_dec_id(
gds_dec_id(
lds_dec_id(
uav_read_udec_id(
uav_udec_id(
lds_load_vec_id(
lds_store_vec_id(
gds_read_inc_id(
lds_read_inc_id(
gds_inc_id(
lds_inc_id(
uav_read_uinc_id(
uav_uinc_id(
append_buf_alloc_id(
uav_arena_load_id(
uav_byte_load_id(
uav_ubyte_load_id(
gds_load_id(
lds_load_id(
uav_short_load_id(
uav_ushort_load_id(
uav_raw_load_id(
gds_read_add_id(
lds_read_add_id(
uav_read_add_id(
gds_add_id(
lds_add_id(
uav_add_id(
gds_read_and_id(
lds_read_and_id(
uav_read_and_id(
gds_and_id(
lds_and_id(
uav_and_id(
sample_id(
append_buf_consume_id(
uav_arena_store_id(
uav_byte_store_id(
gds_store_id(
lds_store_id(
uav_short_store_id(
uav_store_id(
uav_raw_store_id(
gds_load_byte_id(
lds_load_byte_id(
gds_store_byte_id(
lds_store_byte_id(
gds_load_ubyte_id(
lds_load_ubyte_id(
gds_read_xchg_id(
lds_read_xchg_id(
uav_read_xchg_id(
gds_read_cmp_xchg_id(
lds_read_cmp_xchg_id(
uav_read_cmp_xchg_id(
semaphore_signal_id(
gds_read_min_id(
lds_read_min_id(
uav_read_min_id(
gds_min_id(
lds_min_id(
uav_min_id(
gds_read_umin_id(
lds_read_umin_id(
uav_read_umin_id(
gds_umin_id(
lds_umin_id(
uav_umin_id(
gds_cmp_id(
lds_cmp_id(
uav_cmp_id(
gds_read_or_id(
lds_read_or_id(
uav_read_or_id(
gds_or_id(
lds_or_id(
uav_or_id(
gds_read_mskor_id(
lds_read_mskor_id(
gds_mskor_id(
lds_mskor_id(
gds_read_xor_id(
lds_read_xor_id(
uav_read_xor_id(
gds_xor_id(
lds_xor_id(
uav_xor_id(
semaphore_wait_id(
gds_load_short_id(
lds_load_short_id(
gds_store_short_id(
lds_store_short_id(
gds_load_ushort_id(
lds_load_ushort_id(
gds_read_max_id(
lds_read_max_id(
uav_read_max_id(
gds_max_id(
lds_max_id(
uav_max_id(
gds_read_umax_id(
lds_read_umax_id(
uav_read_umax_id(
gds_umax_id(
lds_umax_id(
uav_umax_id(
mcall(
LIFETIME_END
BUNDLE
DBG_VALUE
LIFETIME_START
mov x
r1000
in100
r100
in200
r200
r1010
in110
r110
in210
r210
in10
in120
r120
in220
r220
in20
in130
r130
in230
r230
in30
in140
r140
in240
r240
in40
in150
r150
in250
r250
in50
in160
r160
r260
in60
in170
r170
r270
in70
in180
r180
r280
in80
in190
r190
in90
mem0
out0
r1001
in101
r101
in201
r201
r1011
in111
r111
in211
r211
in11
in121
r121
in221
r221
in21
in131
r131
in231
r231
in31
in141
r141
in241
r241
in41
in151
r151
in251
r251
in51
in161
r161
r261
in61
in171
r171
r271
in71
in181
r181
r281
in81
in191
r191
in91
out1
r1002
in102
r102
in202
r202
r1012
in112
r112
in212
r212
in12
in122
r122
in222
r222
in22
in132
r132
in232
r232
in32
in142
r142
in242
r242
in42
in152
r152
in252
r252
in52
in162
r162
r262
in62
in172
r172
r272
in72
in182
r182
r282
in82
in192
r192
in92
out2
r1003
in103
r103
in203
r203
in113
r113
in213
r213
in13
in123
r123
in223
r223
in23
in133
r133
in233
r233
in33
in143
r143
in243
r243
in43
in153
r153
in253
r253
in53
in163
r163
r263
in63
in173
r173
r273
in73
in183
r183
r283
in83
in193
r193
in93
out3
r1004
in104
r104
in204
r204
r1014
in114
r114
in214
r214
in14
in124
r124
in224
r224
in24
in134
r134
in234
r234
in34
in144
r144
in244
r244
in44
in154
r154
in254
r254
in54
in164
r164
r264
in64
in174
r174
r274
in74
in184
r184
r284
in84
in194
r194
in94
out4
r1005
in105
r105
in205
r205
r1015
in115
r115
in215
r215
in15
in125
r125
in225
r225
in25
in135
r135
in235
r235
in35
in145
r145
in245
r245
in45
in155
r155
in255
r255
in55
in165
r165
r265
in65
in175
r175
r275
in75
in185
r185
r285
in85
in195
r195
in95
out5
r1006
in106
r106
in206
r206
r1016
in116
r116
in216
r216
in16
r1026
in126
r126
in226
r226
in26
in136
r136
in236
r236
in36
in146
r146
in246
r246
in46
in156
r156
r256
in56
in166
r166
r266
in66
in176
r176
r276
in76
in186
r186
r286
in86
in196
r196
in96
out6
r1007
in107
r107
in207
r207
in117
r117
in217
r217
in17
in127
r127
in227
r227
in27
in137
r137
in237
r237
in37
in147
r147
in247
r247
in47
in157
r157
r257
in57
in167
r167
r267
in67
in177
r177
r277
in77
in187
r187
r287
in87
in197
r197
in97
out7
r1008
in108
r108
in208
r208
in118
r118
in218
r218
in18
in128
r128
in228
r228
in28
in138
r138
in238
r238
in38
in148
r148
in248
r248
in48
in158
r158
r258
in58
in168
r168
r268
in68
in178
r178
r278
in78
in188
r188
r288
in88
in198
r198
in98
r1009
in109
r109
in209
r209
in119
r119
in219
r219
in19
r1029
in129
r129
in229
r229
in29
in139
r139
in239
r239
in39
in149
r149
in249
r249
in49
in159
r159
r259
in59
in169
r169
r269
in69
in179
r179
r279
in79
in189
r189
in89
in199
r199
in99
cb1[100]
cb1[200]
cb1[110]
cb1[210]
cb1[10]
cb1[120]
cb1[220]
cb1[20]
cb1[130]
cb1[230]
cb1[30]
cb1[140]
cb1[240]
cb1[40]
cb1[150]
cb1[250]
cb1[50]
cb1[160]
cb1[60]
cb1[170]
cb1[70]
cb1[180]
cb1[80]
cb1[190]
cb1[90]
x0[0]
cb1[0]
cb1[101]
cb1[201]
cb1[111]
cb1[211]
cb1[11]
cb1[121]
cb1[221]
cb1[21]
cb1[131]
cb1[231]
cb1[31]
cb1[141]
cb1[241]
cb1[41]
cb1[151]
cb1[251]
cb1[51]
cb1[161]
cb1[61]
cb1[171]
cb1[71]
cb1[181]
cb1[81]
cb1[191]
cb1[91]
cb1[1]
cb1[102]
cb1[202]
cb1[112]
cb1[212]
cb1[12]
cb1[122]
cb1[222]
cb1[22]
cb1[132]
cb1[232]
cb1[32]
cb1[142]
cb1[242]
cb1[42]
cb1[152]
cb1[252]
cb1[52]
cb1[162]
cb1[62]
cb1[172]
cb1[72]
cb1[182]
cb1[82]
cb1[192]
cb1[92]
cb1[2]
cb1[103]
cb1[203]
cb1[113]
cb1[213]
cb1[13]
cb1[123]
cb1[223]
cb1[23]
cb1[133]
cb1[233]
cb1[33]
cb1[143]
cb1[243]
cb1[43]
cb1[153]
cb1[253]
cb1[53]
cb1[163]
cb1[63]
cb1[173]
cb1[73]
cb1[183]
cb1[83]
cb1[193]
cb1[93]
cb1[3]
cb1[104]
cb1[204]
cb1[114]
cb1[214]
cb1[14]
cb1[124]
cb1[224]
cb1[24]
cb1[134]
cb1[234]
cb1[34]
cb1[144]
cb1[244]
cb1[44]
cb1[154]
cb1[254]
cb1[54]
cb1[164]
cb1[64]
cb1[174]
cb1[74]
cb1[184]
cb1[84]
cb1[194]
cb1[94]
cb1[4]
cb1[105]
cb1[205]
cb1[115]
cb1[215]
cb1[15]
cb1[125]
cb1[225]
cb1[25]
cb1[135]
cb1[235]
cb1[35]
cb1[145]
cb1[245]
cb1[45]
cb1[155]
cb1[255]
cb1[55]
cb1[165]
cb1[65]
cb1[175]
cb1[75]
cb1[185]
cb1[85]
cb1[195]
cb1[95]
x0[5]
cb1[5]
cb1[106]
cb1[206]
cb1[116]
cb1[216]
cb1[16]
cb1[126]
cb1[226]
cb1[26]
cb1[136]
cb1[236]
cb1[36]
cb1[146]
cb1[246]
cb1[46]
cb1[156]
cb1[56]
cb1[166]
cb1[66]
cb1[176]
cb1[76]
cb1[186]
cb1[86]
cb1[196]
cb1[96]
x0[6]
cb1[6]
cb1[107]
cb1[207]
cb1[117]
cb1[217]
cb1[17]
cb1[127]
cb1[227]
cb1[27]
cb1[137]
cb1[237]
cb1[37]
cb1[147]
cb1[247]
cb1[47]
cb1[157]
cb1[57]
cb1[167]
cb1[67]
cb1[177]
cb1[77]
cb1[187]
cb1[87]
cb1[197]
cb1[97]
x0[7]
cb1[7]
cb1[108]
cb1[208]
cb1[118]
cb1[218]
cb1[18]
cb1[128]
cb1[228]
cb1[28]
cb1[138]
cb1[238]
cb1[38]
cb1[148]
cb1[248]
cb1[48]
cb1[158]
cb1[58]
cb1[168]
cb1[68]
cb1[178]
cb1[78]
cb1[188]
cb1[88]
cb1[198]
cb1[98]
x0[8]
cb1[8]
cb1[109]
cb1[209]
cb1[119]
cb1[219]
cb1[19]
cb1[129]
cb1[229]
cb1[29]
cb1[139]
cb1[239]
cb1[39]
cb1[149]
cb1[249]
cb1[49]
cb1[159]
cb1[59]
cb1[169]
cb1[69]
cb1[179]
cb1[79]
cb1[189]
cb1[89]
cb1[199]
cb1[99]
x0[9]
cb1[9]
r1030.x
r1130.x
r1031.x
r1131.x
r1032.x
r1132.x
r1033.x
r1133.x
r1034.x
r1134.x
r1035.x
r1135.x
r1036.x
r1136.x
r1037.x
r1137.x
r1038.x
r1138.x
r1039.x
r1139.x
N4llvm15AMDILAsmPrinterE
N12_GLOBAL__N_118AMDILBarrierDetectE
N4llvm15AMDILCFGPrepareE
N4llvm20AMDILCFGStructurizerE
N4llvm15AMDILCFGPerformE
N4llvm22AMDILCIIOExpansionImplE
N4llvm18AMDILCIIOExpansionE
N4llvm21AMDILCIPointerManagerE
N4llvm18ValueMapCallbackVHIPKNS_5ValueEjNS_14ValueMapConfigIS3_EEEE
N12_GLOBAL__N_125AMDILCIPointerManagerImplE
N4llvm21AMDILCreateKernelStubE
N12_GLOBAL__N_120AMDILLowerAggrCopiesE
N12_GLOBAL__N_115AMDILMachineEBBE
N4llvm22AMDILEGIOExpansionImplE
N4llvm18AMDILEGIOExpansionE
N4llvm18AMDILFrameLoweringE
N4llvm20AMDILIOExpansionImplE
?N12_GLOBAL__N_117AMDILDAGToDAGISelE
).0
).B
).O
).-
).`
).?
).Q
).P
)..
).b
).a
).@
).X
).W
).5
).i
).h
).G
).^
).]
).:
).o
).n
).L
).T
).R
).S
)./
).e
).c
).d
).A
).[
).Y
).Z
).6
).l
).j
).k
).H
).*
).<
).1
).C
).+
).=
).2
).D
).8
).J
).N
).,
)._
).>
).U
).3
).f
).E
).V
).4
).g
).F
).\
).9
).m
).K
).7
).I
).;
).M
).u
).r
).s
).t
).
).p
).q
).|
).y
).~
).z
).{
).v
).w
).x
).}
).%
).)
)."
).'
).#
).$
).(
). 
).!
).&
N4llvm19AMDILTargetLoweringE
N12_GLOBAL__N_115AMDILInlinePassE
N4llvm16AMDILInstPrinterE
SMAD6432
UMAD6432
LOADCONSTv2f32
LOADCONSTv4f32
LOADCONSTf32
MACRO__ltof_f32
MACRO__ultof_f32
UAVRAW32LOADv2i32
UAVRAW64LOADv2i32
ATOM64_G_LOADv2i32
ATOM_G_LOADv2i32
UAVRAW32LOADCACHEDv2i32
UAVRAW64LOADCACHEDv2i32
UAVRAW32LOADCACHEDALIGNEDv2i32
UAVRAW64LOADCACHEDALIGNEDv2i32
UAVRAW32STOREv2i32
UAVRAW64STOREv2i32
ATOM64_G_STOREv2i32
ATOM_G_STOREv2i32
LOADCONSTv2i32
UAVRAW32LOADv4i32
UAVRAW64LOADv4i32
ATOM64_G_LOADv4i32
ATOM_G_LOADv4i32
UAVRAW32LOADCACHEDv4i32
UAVRAW64LOADCACHEDv4i32
UAVRAW32LOADCACHEDALIGNEDv4i32
UAVRAW64LOADCACHEDALIGNEDv4i32
UAVRAW32STOREv4i32
UAVRAW64STOREv4i32
ATOM64_G_STOREv4i32
ATOM_G_STOREv4i32
LOADCONSTv4i32
UAVARENA32LOADi32
UAVRAW32LOADi32
UAVRAW64LOADi32
ATOM64_G_LOADi32
ATOM_G_LOADi32
UAVRAW32LOADCACHEDi32
UAVRAW64LOADCACHEDi32
UAVARENA32STOREi32
UAVRAW32STOREi32
UAVRAW64STOREi32
ATOM64_G_STOREi32
ATOM_G_STOREi32
GET_PRINTF_SIZEi32
LOADFIi32
GET_PRINTF_OFFSETi32
LOADCONSTi32
MACRO__smod_i32
MACRO__umod_i32
MACRO__sdiv_i32
MACRO__udiv_i32
CONST_COPYv464
ATOM64_F_SUB64
ATOM_F_SUB64
ATOM64_G_RSUB_B64
ATOM_G_RSUB_B64
ATOM64_L_RSUB_B64
ATOM_L_RSUB_B64
ATOM64_R_RSUB_B64
ATOM_R_RSUB_B64
ATOM64_G_SUB_B64
ATOM_G_SUB_B64
ATOM64_L_SUB_B64
ATOM_L_SUB_B64
ATOM64_R_SUB_B64
ATOM_R_SUB_B64
ATOM64_G_DEC_B64
ATOM_G_DEC_B64
ATOM64_L_DEC_B64
ATOM_L_DEC_B64
ATOM64_R_DEC_B64
ATOM_R_DEC_B64
ATOM64_G_INC_B64
ATOM_G_INC_B64
ATOM64_L_INC_B64
ATOM_L_INC_B64
ATOM64_R_INC_B64
ATOM_R_INC_B64
ATOM64_G_ADD_B64
ATOM_G_ADD_B64
ATOM64_L_ADD_B64
ATOM_L_ADD_B64
ATOM64_R_ADD_B64
ATOM_R_ADD_B64
ATOM64_G_AND_B64
ATOM_G_AND_B64
ATOM64_L_AND_B64
ATOM_L_AND_B64
ATOM64_R_AND_B64
ATOM_R_AND_B64
ATOM64_G_CMPXCHG_B64
ATOM_G_CMPXCHG_B64
ATOM64_L_CMPXCHG_B64
ATOM_L_CMPXCHG_B64
ATOM64_R_CMPXCHG_B64
ATOM_R_CMPXCHG_B64
ATOM64_G_XCHG_B64
ATOM_G_XCHG_B64
ATOM64_L_XCHG_B64
ATOM_L_XCHG_B64
ATOM64_R_XCHG_B64
ATOM_R_XCHG_B64
ATOM64_G_UMIN_B64
ATOM_G_UMIN_B64
ATOM64_L_UMIN_B64
ATOM_L_UMIN_B64
ATOM64_R_UMIN_B64
ATOM_R_UMIN_B64
ATOM64_G_MIN_B64
ATOM_G_MIN_B64
ATOM64_L_MIN_B64
ATOM_L_MIN_B64
ATOM64_R_MIN_B64
ATOM_R_MIN_B64
ATOM64_L_MSKOR_B64
ATOM_L_MSKOR_B64
ATOM64_R_MSKOR_B64
ATOM_R_MSKOR_B64
ATOM64_G_XOR_B64
ATOM_G_XOR_B64
ATOM64_L_XOR_B64
ATOM_L_XOR_B64
ATOM64_R_XOR_B64
ATOM_R_XOR_B64
ATOM64_G_OR_B64
ATOM_G_OR_B64
ATOM64_L_OR_B64
ATOM_L_OR_B64
ATOM64_R_OR_B64
ATOM_R_OR_B64
ATOM64_G_RSUB_NORET_B64
ATOM_G_RSUB_NORET_B64
ATOM64_L_RSUB_NORET_B64
ATOM_L_RSUB_NORET_B64
ATOM64_R_RSUB_NORET_B64
ATOM_R_RSUB_NORET_B64
ATOM64_G_SUB_NORET_B64
ATOM_G_SUB_NORET_B64
ATOM64_L_SUB_NORET_B64
ATOM_L_SUB_NORET_B64
ATOM64_R_SUB_NORET_B64
ATOM_R_SUB_NORET_B64
ATOM64_G_DEC_NORET_B64
ATOM_G_DEC_NORET_B64
ATOM64_L_DEC_NORET_B64
ATOM_L_DEC_NORET_B64
ATOM64_R_DEC_NORET_B64
ATOM_R_DEC_NORET_B64
ATOM64_G_INC_NORET_B64
ATOM_G_INC_NORET_B64
ATOM64_L_INC_NORET_B64
ATOM_L_INC_NORET_B64
ATOM64_R_INC_NORET_B64
ATOM_R_INC_NORET_B64
ATOM64_G_ADD_NORET_B64
ATOM_G_ADD_NORET_B64
ATOM64_L_ADD_NORET_B64
ATOM_L_ADD_NORET_B64
ATOM64_R_ADD_NORET_B64
ATOM_R_ADD_NORET_B64
ATOM64_G_AND_NORET_B64
ATOM_G_AND_NORET_B64
ATOM64_L_AND_NORET_B64
ATOM_L_AND_NORET_B64
ATOM64_R_AND_NORET_B64
ATOM_R_AND_NORET_B64
ATOM64_G_CMPXCHG_NORET_B64
ATOM_G_CMPXCHG_NORET_B64
ATOM64_L_CMPXCHG_NORET_B64
ATOM_L_CMPXCHG_NORET_B64
ATOM64_R_CMPXCHG_NORET_B64
ATOM_R_CMPXCHG_NORET_B64
ATOM64_G_UMIN_NORET_B64
ATOM_G_UMIN_NORET_B64
ATOM64_L_UMIN_NORET_B64
ATOM_L_UMIN_NORET_B64
ATOM64_R_UMIN_NORET_B64
ATOM_R_UMIN_NORET_B64
ATOM64_G_MIN_NORET_B64
ATOM_G_MIN_NORET_B64
ATOM64_L_MIN_NORET_B64
ATOM_L_MIN_NORET_B64
ATOM64_R_MIN_NORET_B64
ATOM_R_MIN_NORET_B64
ATOM64_L_MSKOR_NORET_B64
ATOM_L_MSKOR_NORET_B64
ATOM64_R_MSKOR_NORET_B64
ATOM_R_MSKOR_NORET_B64
ATOM64_G_XOR_NORET_B64
ATOM_G_XOR_NORET_B64
ATOM64_L_XOR_NORET_B64
ATOM_L_XOR_NORET_B64
ATOM64_R_XOR_NORET_B64
ATOM_R_XOR_NORET_B64
ATOM64_G_OR_NORET_B64
ATOM_G_OR_NORET_B64
ATOM64_L_OR_NORET_B64
ATOM_L_OR_NORET_B64
ATOM64_R_OR_NORET_B64
ATOM_R_OR_NORET_B64
ATOM64_G_UMAX_NORET_B64
ATOM_G_UMAX_NORET_B64
ATOM64_L_UMAX_NORET_B64
ATOM_L_UMAX_NORET_B64
ATOM64_R_UMAX_NORET_B64
ATOM_R_UMAX_NORET_B64
ATOM64_G_MAX_NORET_B64
ATOM_G_MAX_NORET_B64
ATOM64_L_MAX_NORET_B64
ATOM_L_MAX_NORET_B64
ATOM64_R_MAX_NORET_B64
ATOM_R_MAX_NORET_B64
ATOM64_G_UMAX_B64
ATOM_G_UMAX_B64
ATOM64_L_UMAX_B64
ATOM_L_UMAX_B64
ATOM64_R_UMAX_B64
ATOM_R_UMAX_B64
ATOM64_G_MAX_B64
ATOM_G_MAX_B64
ATOM64_L_MAX_B64
ATOM_L_MAX_B64
ATOM64_R_MAX_B64
ATOM_R_MAX_B64
ATOM64_F_DEC64
ATOM_F_DEC64
ATOM64_F_INC64
ATOM_F_INC64
ATOM64_F_ADD64
ATOM_F_ADD64
ATOM64_F_AND64
ATOM_F_AND64
ATOM64_F_FCMPXCHG64
ATOM_F_FCMPXCHG64
ATOM64_F_CMPXCHG64
ATOM_F_CMPXCHG64
ATOM64_F_XCHG64
ATOM_F_XCHG64
ATOM64_F_FMIN64
ATOM_F_FMIN64
ATOM64_F_UMIN64
ATOM_F_UMIN64
ATOM64_F_MIN64
ATOM_F_MIN64
ATOM64_F_XOR64
ATOM_F_XOR64
ATOM64_F_OR64
ATOM_F_OR64
GET_GLOBAL_OFFSET64
ATOM64_F_FMAX64
ATOM_F_FMAX64
ATOM64_F_UMAX64
ATOM_F_UMAX64
ATOM64_F_MAX64
ATOM_F_MAX64
LOADCONSTv2f64
LOADCONSTf64
LOADCONSTv2i64
MACRO__mul_v2i64
GET_PRINTF_SIZEi64
GET_PRINTF_OFFSETi64
LOADCONSTi64
MACRO__smod_i64
MACRO__umod_i64
MACRO__ftol_i64
MACRO__mul_i64
MACRO__sdiv_i64
MACRO__udiv_i64
CONST_COPYv4imm64
CONST_COPYv4
LOADCONSTv2f16
LOADCONSTf16
LOADCONSTv2i16
LOADCONSTv4i16
UAVARENA32LOADi16
UAVRAW32LOADi16
UAVRAW64LOADi16
ATOM64_G_LOADi16
ATOM_G_LOADi16
UAVRAW32LOADCACHEDi16
UAVRAW64LOADCACHEDi16
UAVARENA32STOREi16
UAVRAW32STOREi16
UAVRAW64STOREi16
ATOM64_G_STOREi16
ATOM_G_STOREi16
LOADCONSTi16
UAVRAW32LOADu16
UAVRAW64LOADu16
UAVRAW32LOADCACHEDu16
UAVRAW64LOADCACHEDu16
MQSAD_i32i8
LOADCONSTv2i8
LOADCONSTv4i8
UAVARENA32LOADi8
UAVRAW32LOADi8
UAVRAW64LOADi8
ATOM64_G_LOADi8
ATOM_G_LOADi8
UAVRAW32LOADCACHEDi8
UAVRAW64LOADCACHEDi8
UAVARENA32STOREi8
UAVRAW32STOREi8
UAVRAW64STOREi8
ATOM64_G_STOREi8
ATOM_G_STOREi8
LOADCONSTi8
UAVRAW32LOADu8
UAVRAW64LOADu8
UAVRAW32LOADCACHEDu8
UAVRAW64LOADCACHEDu8
TXLD321DA
TXLD641DA
INFO032I1DA
INFO132I1DA
READ32I1DA
WRITE32I1DA
INFO064I1DA
INFO164I1DA
READ64I1DA
WRITE64I1DA
TXLD322DA
TXLD642DA
INFO032I2DA
INFO132I2DA
READ32I2DA
WRITE32I2DA
INFO064I2DA
INFO164I2DA
READ64I2DA
WRITE64I2DA
TXLD321DB
TXLD641DB
INFO032I1DB
INFO132I1DB
READ32I1DB
WRITE32I1DB
INFO064I1DB
INFO164I1DB
READ64I1DB
WRITE64I1DB
ATOM_A_RSUB
ATOM64_G_RSUB
ATOM_G_RSUB
ATOM64_L_RSUB
ATOM_L_RSUB
ATOM64_R_RSUB
ATOM_R_RSUB
ATOM_A_SUB
ATOM64_F_SUB
ATOM_F_SUB
ATOM64_G_SUB
ATOM_G_SUB
ATOM64_L_SUB
ATOM_L_SUB
ATOM64_R_SUB
ATOM_R_SUB
ATOM_A_DEC
ATOM64_F_DEC
ATOM_F_DEC
ATOM64_G_DEC
ATOM_G_DEC
ATOM64_L_DEC
ATOM_L_DEC
ATOM64_R_DEC
ATOM_R_DEC
ATOM_A_INC
ATOM64_F_INC
ATOM_F_INC
ATOM64_G_INC
ATOM_G_INC
ATOM64_L_INC
ATOM_L_INC
ATOM64_R_INC
ATOM_R_INC
ENDFUNC
APPEND64_ALLOC
APPEND_ALLOC
TXLD321D
TXLD641D
INFO032I1D
INFO132I1D
READ32I1D
WRITE32I1D
INFO064I1D
INFO164I1D
READ64I1D
WRITE64I1D
TXLD322D
TXLD642D
INFO032I2D
INFO132I2D
READ32I2D
WRITE32I2D
INFO064I2D
INFO164I2D
READ64I2D
WRITE64I2D
TXLD323D
TXLD643D
INFO032I3D
INFO132I3D
READ32I3D
WRITE32I3D
INFO064I3D
INFO164I3D
READ64I3D
WRITE64I3D
CB32LOAD
SCRATCH32LOAD
CB64LOAD
SCRATCH64LOAD
ATOM_A_ADD
ATOM64_F_ADD
ATOM_F_ADD
ATOM64_G_ADD
ATOM_G_ADD
ATOM64_L_ADD
ATOM_L_ADD
ATOM64_R_ADD
ATOM_R_ADD
WAVE_ID
GET_GLOBAL_ID
GET_REGION_LOCAL_ID
GET_LOCAL_ID
GET_REGION_ID
GET_GROUP_ID
CU_ID
ATOM_A_AND
ATOM64_F_AND
ATOM_F_AND
ATOM64_G_AND
ATOM_G_AND
ATOM64_L_AND
ATOM_L_AND
ATOM64_R_AND
ATOM_R_AND
LIFETIME_END
REG_SEQUENCE
BUNDLE
APPEND64_CONSUME
APPEND_CONSUME
SCRATCH32STORE
SCRATCH64STORE
CASE
ELSE
DBG_VALUE
CONTINUE
GET_MAX_SEMAPHORE_SIZE
GET_GLOBAL_SIZE
GET_LOCAL_SIZE
GET_REGION_SIZE
IMPLICIT_DEF
ENDIF
FLDv2i32P32G
FSTv2i32P32G
FLDv3i32P32G
FSTv3i32P32G
FLDv4i32P32G
FSTv4i32P32G
FLDi32P32G
FSTi32P32G
FLDi16P32G
FSTi16P32G
FLDu16P32G
FSTu16P32G
FLDi8P32G
FSTi8P32G
FLDu8P32G
FSTu8P32G
FLDv2i32P64G
FSTv2i32P64G
FLDv3i32P64G
FSTv3i32P64G
FLDv4i32P64G
FSTv4i32P64G
FLDi32P64G
FSTi32P64G
FLDi16P64G
FSTi16P64G
FLDu16P64G
FSTu16P64G
FLDi8P64G
FSTi8P64G
FLDu8P64G
FSTu8P64G
EXTRACT_SUBREG
INSERT_SUBREG
SUBREG_TO_REG
ATOM64_F_FCMPXCHG
ATOM_F_FCMPXCHG
ATOM_A_CMPXCHG
ATOM64_F_CMPXCHG
ATOM_F_CMPXCHG
ATOM64_G_CMPXCHG
ATOM_G_CMPXCHG
ATOM64_L_CMPXCHG
ATOM_L_CMPXCHG
ATOM64_R_CMPXCHG
ATOM_R_CMPXCHG
ATOM_A_XCHG
ATOM64_F_XCHG
ATOM_F_XCHG
ATOM64_G_XCHG
ATOM_G_XCHG
ATOM64_L_XCHG
ATOM_L_XCHG
ATOM64_R_XCHG
ATOM_R_XCHG
FLDv2i32P32SG
FSTv2i32P32SG
FLDv3i32P32SG
FSTv3i32P32SG
FLDv4i32P32SG
FSTv4i32P32SG
FLDi32P32SG
FSTi32P32SG
FLDi16P32SG
FSTi16P32SG
FLDu16P32SG
FSTu16P32SG
FLDi8P32SG
FSTi8P32SG
FLDu8P32SG
FSTu8P32SG
FLDv2i32P64SG
FSTv2i32P64SG
FLDv3i32P64SG
FSTv3i32P64SG
FLDv4i32P64SG
FSTv4i32P64SG
FLDi32P64SG
FSTi32P64SG
FLDi16P64SG
FSTi16P64SG
FLDu16P64SG
FSTu16P64SG
FLDi8P64SG
FSTi8P64SG
FLDu8P64SG
FSTu8P64SG
FLDv2i32P32TG
FSTv2i32P32TG
FLDv3i32P32TG
FSTv3i32P32TG
FLDv4i32P32TG
FSTv4i32P32TG
FLDi32P32TG
FSTi32P32TG
FLDi16P32TG
FSTi16P32TG
FLDu16P32TG
FSTu16P32TG
FLDi8P32TG
FSTi8P32TG
FLDu8P32TG
FSTu8P32TG
FLDv2i32P64TG
FSTv2i32P64TG
FLDv3i32P64TG
FSTv3i32P64TG
FLDv4i32P64TG
FSTv4i32P64TG
FLDi32P64TG
FSTi32P64TG
FLDi16P64TG
FSTi16P64TG
FLDu16P64TG
FSTu16P64TG
FLDi8P64TG
FSTi8P64TG
FLDu8P64TG
FSTu8P64TG
ENDSWITCH
BREAK
BARRIER_GLOBAL
BARRIER_GLOBAL_LOCAL
BARRIER_REGION_LOCAL
BARRIER_LOCAL
SEMAPHORE64_SIGNAL
SEMAPHORE_SIGNAL
GC_LABEL
PROLOG_LABEL
EH_LABEL
CALL
KILL
GET_WORK_DIM
READ32I1DA_UNNORM
READ64I1DA_UNNORM
READ32I2DA_UNNORM
READ64I2DA_UNNORM
READ32I1DB_UNNORM
READ64I1DB_UNNORM
READ32I1D_UNNORM
READ64I1D_UNNORM
READ32I2D_UNNORM
READ64I2D_UNNORM
READ32I3D_UNNORM
READ64I3D_UNNORM
INLINEASM
ENDMAIN
ATOM64_F_FMIN
ATOM_F_FMIN
ATOM_A_UMIN
ATOM64_F_UMIN
ATOM_F_UMIN
ATOM64_G_UMIN
ATOM_G_UMIN
ATOM64_L_UMIN
ATOM_L_UMIN
ATOM64_R_UMIN
ATOM_R_UMIN
ATOM_A_MIN
ATOM64_F_MIN
ATOM_F_MIN
ATOM64_G_MIN
ATOM_G_MIN
ATOM64_L_MIN
ATOM_L_MIN
ATOM64_R_MIN
ATOM_R_MIN
BARRIER_GLOBAL_REGION
BARRIER_REGION
RETURN
ADJCALLSTACKDOWN
RETDYN
TRAP
ENDLOOP
WHILELOOP
ADJCALLSTACKUP
BARRIER
ATOM64_L_MSKOR
ATOM_L_MSKOR
ATOM64_R_MSKOR
ATOM_R_MSKOR
ATOM_A_XOR
ATOM64_F_XOR
ATOM_F_XOR
ATOM64_G_XOR
ATOM_G_XOR
ATOM64_L_XOR
ATOM_L_XOR
ATOM64_R_XOR
ATOM_R_XOR
ATOM_A_OR
ATOM64_F_OR
ATOM_F_OR
ATOM64_G_OR
ATOM_G_OR
ATOM64_L_OR
ATOM_L_OR
ATOM64_R_OR
ATOM_R_OR
FLDv2i32P32S
FSTv2i32P32S
FLDv3i32P32S
FSTv3i32P32S
FLDv4i32P32S
FSTv4i32P32S
FLDi32P32S
FSTi32P32S
FLDi16P32S
FSTi16P32S
FLDu16P32S
FSTu16P32S
FLDi8P32S
FSTi8P32S
FLDu8P32S
FSTu8P32S
FLDv2i32P64S
FSTv2i32P64S
FLDv3i32P64S
FSTv3i32P64S
FLDv4i32P64S
FSTv4i32P64S
FLDi32P64S
FSTi32P64S
FLDi16P64S
FSTi16P64S
FLDu16P64S
FSTu16P64S
FLDi8P64S
FSTi8P64S
FLDu8P64S
FSTu8P64S
GET_NUM_REGIONS
GET_REGION_NUM_GROUPS
GET_NUM_GROUPS
COPY_TO_REGCLASS
FLDv2i32P32T
FSTv2i32P32T
FLDv3i32P32T
FSTv3i32P32T
FLDv4i32P32T
FSTv4i32P32T
FLDi32P32T
FSTi32P32T
FLDi16P32T
FSTi16P32T
FLDu16P32T
FSTu16P32T
FLDi8P32T
FSTi8P32T
FLDu8P32T
FSTu8P32T
FLDv2i32P64T
FSTv2i32P64T
FLDv3i32P64T
FSTv3i32P64T
FLDv4i32P64T
FSTv4i32P64T
FLDi32P64T
FSTi32P64T
FLDi16P64T
FSTi16P64T
FLDu16P64T
FSTu16P64T
FLDi8P64T
FSTi8P64T
FLDu8P64T
FSTu8P64T
ATOM_A_RSUB_NORET
ATOM64_G_RSUB_NORET
ATOM_G_RSUB_NORET
ATOM64_L_RSUB_NORET
ATOM_L_RSUB_NORET
ATOM64_R_RSUB_NORET
ATOM_R_RSUB_NORET
ATOM_A_SUB_NORET
ATOM64_G_SUB_NORET
ATOM_G_SUB_NORET
ATOM64_L_SUB_NORET
ATOM_L_SUB_NORET
ATOM64_R_SUB_NORET
ATOM_R_SUB_NORET
ATOM_A_DEC_NORET
ATOM64_G_DEC_NORET
ATOM_G_DEC_NORET
ATOM64_L_DEC_NORET
ATOM_L_DEC_NORET
ATOM64_R_DEC_NORET
ATOM_R_DEC_NORET
ATOM_A_INC_NORET
ATOM64_G_INC_NORET
ATOM_G_INC_NORET
ATOM64_L_INC_NORET
ATOM_L_INC_NORET
ATOM64_R_INC_NORET
ATOM_R_INC_NORET
ATOM_A_ADD_NORET
ATOM64_G_ADD_NORET
ATOM_G_ADD_NORET
ATOM64_L_ADD_NORET
ATOM_L_ADD_NORET
ATOM64_R_ADD_NORET
ATOM_R_ADD_NORET
ATOM_A_AND_NORET
ATOM64_G_AND_NORET
ATOM_G_AND_NORET
ATOM64_L_AND_NORET
ATOM_L_AND_NORET
ATOM64_R_AND_NORET
ATOM_R_AND_NORET
ATOM_A_CMPXCHG_NORET
ATOM64_G_CMPXCHG_NORET
ATOM_G_CMPXCHG_NORET
ATOM64_L_CMPXCHG_NORET
ATOM_L_CMPXCHG_NORET
ATOM64_R_CMPXCHG_NORET
ATOM_R_CMPXCHG_NORET
ATOM_A_UMIN_NORET
ATOM64_G_UMIN_NORET
ATOM_G_UMIN_NORET
ATOM64_L_UMIN_NORET
ATOM_L_UMIN_NORET
ATOM64_R_UMIN_NORET
ATOM_R_UMIN_NORET
ATOM_A_MIN_NORET
ATOM64_G_MIN_NORET
ATOM_G_MIN_NORET
ATOM64_L_MIN_NORET
ATOM_L_MIN_NORET
ATOM64_R_MIN_NORET
ATOM_R_MIN_NORET
ATOM64_L_MSKOR_NORET
ATOM_L_MSKOR_NORET
ATOM64_R_MSKOR_NORET
ATOM_R_MSKOR_NORET
ATOM_A_XOR_NORET
ATOM64_G_XOR_NORET
ATOM_G_XOR_NORET
ATOM64_L_XOR_NORET
ATOM_L_XOR_NORET
ATOM64_R_XOR_NORET
ATOM_R_XOR_NORET
ATOM_A_OR_NORET
ATOM64_G_OR_NORET
ATOM_G_OR_NORET
ATOM64_L_OR_NORET
ATOM_L_OR_NORET
ATOM64_R_OR_NORET
ATOM_R_OR_NORET
ATOM_A_UMAX_NORET
ATOM64_G_UMAX_NORET
ATOM_G_UMAX_NORET
ATOM64_L_UMAX_NORET
ATOM_L_UMAX_NORET
ATOM64_R_UMAX_NORET
ATOM_R_UMAX_NORET
ATOM_A_MAX_NORET
ATOM64_G_MAX_NORET
ATOM_G_MAX_NORET
ATOM64_L_MAX_NORET
ATOM_L_MAX_NORET
ATOM64_R_MAX_NORET
ATOM_R_MAX_NORET
GET_GLOBAL_OFFSET
PRINT_GET_ITEM_OFFSET
GET_SW_GWS_OFFSET
FLDv2i32P32SGT
FSTv2i32P32SGT
FLDv3i32P32SGT
FSTv3i32P32SGT
FLDv4i32P32SGT
FSTv4i32P32SGT
FLDi32P32SGT
FSTi32P32SGT
FLDi16P32SGT
FSTi16P32SGT
FLDu16P32SGT
FSTu16P32SGT
FLDi8P32SGT
FSTi8P32SGT
FLDu8P32SGT
FSTu8P32SGT
FLDv2i32P64SGT
FSTv2i32P64SGT
FLDv3i32P64SGT
FSTv3i32P64SGT
FLDv4i32P64SGT
FSTv4i32P64SGT
FLDi32P64SGT
FSTi32P64SGT
FLDi16P64SGT
FSTi16P64SGT
FLDu16P64SGT
FSTu16P64SGT
FLDi8P64SGT
FSTi8P64SGT
FLDu8P64SGT
FSTu8P64SGT
SEMAPHORE64_WAIT
SEMAPHORE_WAIT
DCL_FLT32BIT
DEFAULT
LIFETIME_START
FLDv2i32P32ST
FSTv2i32P32ST
FLDv3i32P32ST
FSTv3i32P32ST
FLDv4i32P32ST
FSTv4i32P32ST
FLDi32P32ST
FSTi32P32ST
FLDi16P32ST
FSTi16P32ST
FLDu16P32ST
FSTu16P32ST
FLDi8P32ST
FSTi8P32ST
FLDu8P32ST
FSTu8P32ST
FLDv2i32P64ST
FSTv2i32P64ST
FLDv3i32P64ST
FSTv3i32P64ST
FLDv4i32P64ST
FSTv4i32P64ST
FLDi32P64ST
FSTi32P64ST
FLDi16P64ST
FSTi16P64ST
FLDu16P64ST
FSTu16P64ST
FLDi8P64ST
FSTi8P64ST
FLDu8P64ST
FSTu8P64ST
FLDv2i32P32U
FSTv2i32P32U
FLDv3i32P32U
FSTv3i32P32U
FLDv4i32P32U
FSTv4i32P32U
FLDi32P32U
FSTi32P32U
FLDi16P32U
FSTi16P32U
FLDu16P32U
FSTu16P32U
FLDi8P32U
FSTi8P32U
FLDu8P32U
FSTu8P32U
FLDv2i32P64U
FSTv2i32P64U
FLDv3i32P64U
FSTv3i32P64U
FLDv4i32P64U
FSTv4i32P64U
FLDi32P64U
FSTi32P64U
FLDi16P64U
FSTi16P64U
FLDu16P64U
FSTu16P64U
FLDi8P64U
FSTi8P64U
FLDu8P64U
FSTu8P64U
ATOM64_F_FMAX
ATOM_F_FMAX
ATOM_A_UMAX
ATOM64_F_UMAX
ATOM_F_UMAX
ATOM64_G_UMAX
ATOM_G_UMAX
ATOM64_L_UMAX
ATOM_L_UMAX
ATOM64_R_UMAX
ATOM_R_UMAX
ATOM_A_MAX
ATOM64_F_MAX
ATOM_F_MAX
ATOM64_G_MAX
ATOM_G_MAX
ATOM64_L_MAX
ATOM_L_MAX
ATOM64_R_MAX
ATOM_R_MAX
CONST_COPY
MACRO__ddiv_f64_fma
BRANCHb
MEDIA_UNPACK_0i
MEDIA_UNPACK_1i
UNPACK_B0f32i
UNPACK_PAT0f32i
UNPACK_B1f32i
UNPACK_PAT1f32i
UNPACK_PAT0_1f32i
UNPACK_PAT1_1f32i
UNPACK_PAT2_1f32i
UNPACK_PAT3_1f32i
UNPACK_B2f32i
UNPACK_PAT2f32i
UNPACK_B0v2f32i
UNPACK_B1v2f32i
UNPACK_B2v2f32i
UNPACK_B3v2f32i
FRACv2f32i
LOGVECv2f32i
SINVECv2f32i
EXPVECv2f32i
RSQVECv2f32i
COSVECv2f32i
SQRTVECv2f32i
TRUNCv2f32i
VCREATEv2f32i
DTOF_RTEv2f32i
ROUND_NEGINFv2f32i
ROUND_POSINFv2f32i
HTOFv2f32i
ITOFv2f32i
UTOFv2f32i
NEGv2f32i
LENGTHv2f32i
CEILv2f32i
SIGNv2f32i
DTOF_RTNv2f32i
ROUND_ZEROv2f32i
DTOF_RTPv2f32i
FLOORv2f32i
FABSv2f32i
VEXTRACTv2f32i
FREXP_MANTv2f32i
ROUND_NEARESTv2f32i
NEARBYv2f32i
FTZv2f32i
DTOF_RTZv2f32i
UNPACK_B3f32i
UNPACK_PAT3f32i
UNPACK_B0v4f32i
UNPACK_B1v4f32i
UNPACK_B2v4f32i
UNPACK_B3v4f32i
FRACv4f32i
LOGVECv4f32i
SINVECv4f32i
EXPVECv4f32i
RSQVECv4f32i
COSVECv4f32i
SQRTVECv4f32i
TRUNCv4f32i
VCREATEv4f32i
ROUND_NEGINFv4f32i
ROUND_POSINFv4f32i
HTOFv4f32i
ITOFv4f32i
UTOFv4f32i
NEGv4f32i
LENGTHv4f32i
CEILv4f32i
SIGNv4f32i
ROUND_ZEROv4f32i
FLOORv4f32i
FABSv4f32i
VEXTRACTv4f32i
FREXP_MANTv4f32i
ROUND_NEARESTv4f32i
NEARBYv4f32i
FTZv4f32i
FRACf32i
LOGVECf32i
SINVECf32i
EXPVECf32i
RSQVECf32i
COSVECf32i
SQRTVECf32i
TRUNCf32i
DTOF_RTEf32i
ROUND_NEGINFf32i
ROUND_POSINFf32i
HTOFf32i
ITOFf32i
UTOFf32i
NEGf32i
LOGf32i
LENGTHf32i
CEILf32i
ATANf32i
SIGNf32i
ASINf32i
LNf32i
DTOF_RTNf32i
EXNf32i
ROUND_ZEROf32i
DTOF_RTPf32i
EXPf32i
RSQf32i
FLOORf32i
FABSf32i
ACOSf32i
FREXP_MANTf32i
SQRTf32i
ROUND_NEARESTf32i
NEARBYf32i
FTZf32i
DTOF_RTZf32i
UBIT_REVERSEv2i32i
VCREATEv2i32i
NEGv2i32i
FFB_HIv2i32i
FTOIv2i32i
FTOI_RPIv2i32i
FFB_SGNv2i32i
FFB_LOv2i32i
DFREXP_EXPv2i32i
FTOI_FLRv2i32i
ABSv2i32i
VEXTRACTv2i32i
BITCOUNTv2i32i
FTOUv2i32i
POISONVv2i32i
UBIT_REVERSEv4i32i
VCREATEv4i32i
NEGv4i32i
FFB_HIv4i32i
FTOIv4i32i
FTOI_RPIv4i32i
FFB_SGNv4i32i
FFB_LOv4i32i
FREXP_EXPv4i32i
FTOI_FLRv4i32i
ABSv4i32i
VEXTRACTv4i32i
BITCOUNTv4i32i
FTOUv4i32i
POISONVv4i32i
UBIT_REVERSEi32i
NEGi32i
FFB_HIi32i
FTOIi32i
FTOI_RPIi32i
FFB_SGNi32i
FFB_LOi32i
DFREXP_EXPi32i
FTOI_FLRi32i
ABSi32i
BITCOUNTi32i
FTOUi32i
POISONVi32i
CONTINUE_LOGICALZi32i
IF_LOGICALZi32i
BREAK_LOGICALZi32i
CONTINUE_LOGICALNZi32i
IF_LOGICALNZi32i
BREAK_LOGICALNZi32i
MEDIA_UNPACK_2i
MEDIA_UNPACK_3i
FRACv2f64i
TRUNCv2f64i
VCREATEv2f64i
ROUND_NEGINFv2f64i
ROUND_POSINFv2f64i
NEGv2f64i
CEILv2f64i
ROUND_ZEROv2f64i
FLOORv2f64i
DABSv2f64i
VEXTRACTv2f64i
FREXP_MANTv2f64i
SQRTv2f64i
ROUND_NEARESTv2f64i
NEARBYv2f64i
FRACf64i
TRUNCf64i
ROUND_NEGINFf64i
ROUND_POSINFf64i
NEGf64i
CEILf64i
ROUND_ZEROf64i
RCPf64i
FREXPf64i
RSQf64i
FLOORf64i
DABSf64i
FREXP_MANTf64i
SQRTf64i
ROUND_NEARESTf64i
NEARBYf64i
UBIT_REVERSEv2i64i
VCREATEv2i64i
NEGv2i64i
FFB_HIv2i64i
FFB_SGNv2i64i
FFB_LOv2i64i
ABSv2i64i
VEXTRACTv2i64i
BITCOUNTv2i64i
POISONVv2i64i
UBIT_REVERSEi64i
NEGi64i
FFB_HIi64i
FFB_SGNi64i
FFB_LOi64i
ABSi64i
BITCOUNTi64i
POISONVi64i
VCREATEv2f16i
VEXTRACTv2f16i
F16_FRCv2i16i
UBIT_REVERSEv2i16i
VCREATEv2i16i
F16_ROUND_NEGINFv2i16i
F16_ROUND_POSINFv2i16i
FTOH_NEG_INFv2i16i
FTOH_PLUS_INFv2i16i
F16_LOGv2i16i
FTOHv2i16i
FFB_HIv2i16i
FFB_SGNv2i16i
F16_SINv2i16i
FFB_LOv2i16i
F16_ROUND_ZEROv2i16i
F16_RCPv2i16i
F16_EXPv2i16i
F16_FREXP_EXPv2i16i
F16_RSQv2i16i
F16_ROUND_NEARv2i16i
FTOH_NEARv2i16i
ABSv2i16i
F16_COSv2i16i
VEXTRACTv2i16i
F16_FREXP_MANTv2i16i
BITCOUNTv2i16i
F16_SQRTv2i16i
POISONVv2i16i
F16_FRCv4i16i
UBIT_REVERSEv4i16i
VCREATEv4i16i
F16_ROUND_NEGINFv4i16i
F16_ROUND_POSINFv4i16i
FTOH_NEG_INFv4i16i
FTOH_PLUS_INFv4i16i
F16_LOGv4i16i
FTOHv4i16i
FFB_HIv4i16i
FFB_SGNv4i16i
F16_SINv4i16i
FFB_LOv4i16i
F16_ROUND_ZEROv4i16i
F16_RCPv4i16i
F16_EXPv4i16i
F16_FREXP_EXPv4i16i
F16_RSQv4i16i
F16_ROUND_NEARv4i16i
FTOH_NEARv4i16i
ABSv4i16i
F16_COSv4i16i
VEXTRACTv4i16i
F16_FREXP_MANTv4i16i
BITCOUNTv4i16i
F16_SQRTv4i16i
POISONVv4i16i
F16_FRCi16i
UBIT_REVERSEi16i
F16_ROUND_NEGINFi16i
F16_ROUND_POSINFi16i
FTOH_NEG_INFi16i
FTOH_PLUS_INFi16i
F16_LOGi16i
FTOHi16i
FFB_HIi16i
FFB_SGNi16i
F16_SINi16i
FFB_LOi16i
F16_ROUND_ZEROi16i
F16_RCPi16i
F16_EXPi16i
F16_FREXP_EXPi16i
F16_RSQi16i
F16_ROUND_NEARi16i
FTOH_NEARi16i
ABSi16i
F16_COSi16i
F16_FREXP_MANTi16i
BITCOUNTi16i
F16_SQRTi16i
POISONVi16i
FTOV4U8i
UBIT_REVERSEv2i8i
VCREATEv2i8i
FFB_HIv2i8i
FFB_SGNv2i8i
FFB_LOv2i8i
ABSv2i8i
VEXTRACTv2i8i
BITCOUNTv2i8i
POISONVv2i8i
UBIT_REVERSEv4i8i
VCREATEv4i8i
FFB_HIv4i8i
FFB_SGNv4i8i
FFB_LOv4i8i
ABSv4i8i
VEXTRACTv4i8i
BITCOUNTv4i8i
POISONVv4i8i
UBIT_REVERSEi8i
FFB_HIi8i
FFB_SGNi8i
FFB_LOi8i
ABSi8i
BITCOUNTi8i
POISONVi8i
FTODi
ITODi
UTODi
FENCEi
READFIRSTLANEi
DTOFi
HTOFi
FENCE_LGi
FENCE_RO_LGi
FENCE_WO_LGi
FENCE_MGi
FENCE_RO_MGi
FENCE_WO_MGi
FENCE_Gi
FENCE_RO_Gi
FENCE_WO_Gi
FTOHi
DTOIi
SEMAPHORE_SIGNALi
FENCE_Li
FENCE_RO_Li
FENCE_WO_Li
FENCE_LMi
FENCE_RO_LMi
FENCE_WO_LMi
FENCE_Mi
FENCE_RO_Mi
FENCE_WO_Mi
FENCE_ROi
FENCE_WOi
FENCE_LGSi
FENCE_MGSi
FENCE_GSi
FENCE_LSi
FENCE_LMSi
FENCE_MSi
FENCE_Si
PRINT_INC_ITEM_OFFSETi
SEMAPHORE_WAITi
EARLY_EXITi
BALLOTi
DTOUi
BRANCHf32bi
BRANCHi32bi
BRANCHf64bi
BRANCHi64bi
BRANCHf16bi
BRANCHi16bi
BRANCHi8bi
SUBv2f32ii
ADDv2f32ii
MODv2f32ii
MUL_IEEEv2f32ii
GEv2f32ii
NEv2f32ii
DIV_PRECISEv2f32ii
SUB_RTEv2f32ii
ADD_RTEv2f32ii
MUL_RTEv2f32ii
MINv2f32ii
SUB_RTNv2f32ii
ADD_RTNv2f32ii
MUL_RTNv2f32ii
SUB_RTPv2f32ii
ADD_RTPv2f32ii
MUL_RTPv2f32ii
LDEXPv2f32ii
EQv2f32ii
CLASSv2f32ii
VCONCATv2f32ii
LTv2f32ii
DIV_INTv2f32ii
VINSERTv2f32ii
DIVv2f32ii
POWv2f32ii
MAXv2f32ii
SUB_RTZv2f32ii
ADD_RTZv2f32ii
MUL_RTZv2f32ii
SUBv4f32ii
ADDv4f32ii
MODv4f32ii
MUL_IEEEv4f32ii
GEv4f32ii
NEv4f32ii
DIV_PRECISEv4f32ii
SUB_RTEv4f32ii
ADD_RTEv4f32ii
MUL_RTEv4f32ii
MINv4f32ii
SUB_RTNv4f32ii
ADD_RTNv4f32ii
MUL_RTNv4f32ii
SUB_RTPv4f32ii
ADD_RTPv4f32ii
MUL_RTPv4f32ii
LDEXPv4f32ii
EQv4f32ii
CLASSv4f32ii
VCONCATv4f32ii
LTv4f32ii
DIV_INTv4f32ii
VINSERTv4f32ii
DIVv4f32ii
POWv4f32ii
MAXv4f32ii
SUB_RTZv4f32ii
ADD_RTZv4f32ii
MUL_RTZv4f32ii
SUBf32ii
ADDf32ii
MODf32ii
MUL_IEEEf32ii
GEf32ii
NEf32ii
DIV_PRECISEf32ii
SUB_RTEf32ii
ADD_RTEf32ii
MUL_RTEf32ii
MINf32ii
SUB_RTNf32ii
ADD_RTNf32ii
MUL_RTNf32ii
SUB_RTPf32ii
ADD_RTPf32ii
MUL_RTPf32ii
LDEXPf32ii
EQf32ii
CLASSf32ii
LTf32ii
DIV_INTf32ii
DIVf32ii
POWf32ii
MAXf32ii
SUB_RTZf32ii
ADD_RTZf32ii
MUL_RTZf32ii
BFM_PAT1i32ii
IMULHI24v2i32ii
UMULHI24v2i32ii
IMUL24v2i32ii
UMUL24v2i32ii
EADDv2i32ii
ANDv2i32ii
IGEv2i32ii
UGEv2i32ii
INEv2i32ii
IMULHIv2i32ii
SMULHIv2i32ii
UMULHIv2i32ii
SMULv2i32ii
UMULv2i32ii
BFMv2i32ii
IMINv2i32ii
UMINv2i32ii
IEQv2i32ii
XORv2i32ii
VCONCATv2i32ii
ILTv2i32ii
ULTv2i32ii
UMULHI_INTv2i32ii
VINSERTv2i32ii
NATIVE_UDIVv2i32ii
BORROWv2i32ii
IMAXv2i32ii
UMAXv2i32ii
CARRYv2i32ii
IMULHI24i32ii
UMULHI24i32ii
IMUL24i32ii
UMUL24i32ii
IMULHI24v4i32ii
UMULHI24v4i32ii
IMUL24v4i32ii
UMUL24v4i32ii
EADDv4i32ii
ANDv4i32ii
IGEv4i32ii
UGEv4i32ii
INEv4i32ii
IMULHIv4i32ii
SMULHIv4i32ii
UMULHIv4i32ii
SMULv4i32ii
UMULv4i32ii
BFMv4i32ii
IMINv4i32ii
UMINv4i32ii
IEQv4i32ii
XORv4i32ii
VCONCATv4i32ii
ILTv4i32ii
ULTv4i32ii
UMULHI_INTv4i32ii
VINSERTv4i32ii
NATIVE_UDIVv4i32ii
BORROWv4i32ii
IMAXv4i32ii
UMAXv4i32ii
CARRYv4i32ii
EADDi32ii
ANDi32ii
IGEi32ii
UGEi32ii
INEi32ii
IMULHIi32ii
SMULHIi32ii
UMULHIi32ii
SMULi32ii
UMULi32ii
BFMi32ii
IMINi32ii
UMINi32ii
IEQi32ii
XORi32ii
ILTi32ii
ULTi32ii
UMULHI_INTi32ii
NATIVE_UDIVi32ii
BORROWi32ii
IMAXi32ii
UMAXi32ii
CARRYi32ii
DP2ii
DP3ii
SUBv2f64ii
ADDv2f64ii
MUL_IEEEv2f64ii
DGEv2f64ii
DNEv2f64ii
MINv2f64ii
LDEXPv2f64ii
DEQv2f64ii
CLASSv2f64ii
VCONCATv2f64ii
DLTv2f64ii
DDIV_INTv2f64ii
VINSERTv2f64ii
DDIVv2f64ii
MAXv2f64ii
SUBf64ii
ADDf64ii
MUL_IEEEf64ii
DGEf64ii
DNEf64ii
SUB_RTEf64ii
ADD_RTEf64ii
MUL_RTEf64ii
MINf64ii
SUB_RTNf64ii
ADD_RTNf64ii
MUL_RTNf64ii
DTRIG_PREOPf64ii
SUB_RTPf64ii
ADD_RTPf64ii
MUL_RTPf64ii
LDEXPf64ii
DEQf64ii
CLASSf64ii
DLTf64ii
DDIV_INTf64ii
DDIVf64ii
MAXf64ii
SUB_RTZf64ii
ADD_RTZf64ii
MUL_RTZf64ii
IMIN64v2i64ii
UMIN64v2i64ii
IMAX64v2i64ii
UMAX64v2i64ii
ADDv2i64ii
ANDv2i64ii
SMODv2i64ii
UMODv2i64ii
IGEv2i64ii
UGEv2i64ii
INEv2i64ii
SMULv2i64ii
UMULv2i64ii
IEQv2i64ii
XORv2i64ii
VCONCATv2i64ii
ILTv2i64ii
ULTv2i64ii
VINSERTv2i64ii
SDIVv2i64ii
UDIVv2i64ii
IMIN64i64ii
UMIN64i64ii
IMAX64i64ii
UMAX64i64ii
ADDi64ii
ANDi64ii
SMODi64ii
UMODi64ii
IGEi64ii
UGEi64ii
INEi64ii
SMULi64ii
UMULi64ii
IEQi64ii
XORi64ii
ILTi64ii
ULTi64ii
SDIVi64ii
UDIVi64ii
DP4ii
F16_SUBv2f16ii
F16_ADDv2f16ii
F16_MULv2f16ii
VCONCATv2f16ii
VINSERTv2f16ii
F16_DIVv2f16ii
F16_SUBf16ii
F16_ADDf16ii
F16_MULf16ii
F16_DIVf16ii
IMULHI24v2i16ii
UMULHI24v2i16ii
IMUL24v2i16ii
UMUL24v2i16ii
SUB16v2i16ii
ADD16v2i16ii
MUL16v2i16ii
F16_SUBv2i16ii
EADDv2i16ii
F16_ADDv2i16ii
ANDv2i16ii
F16_SUB_RTEv2i16ii
F16_ADD_RTEv2i16ii
F16_MUL_RTEv2i16ii
IMULHIv2i16ii
SMULHIv2i16ii
UMULHIv2i16ii
SMULv2i16ii
UMULv2i16ii
F16_MULv2i16ii
BFMv2i16ii
IMINv2i16ii
UMINv2i16ii
F16_MINv2i16ii
I16_MINv2i16ii
U16_MINv2i16ii
F16_SUB_RTNv2i16ii
F16_ADD_RTNv2i16ii
F16_MUL_RTNv2i16ii
F16_SUB_RTPv2i16ii
F16_ADD_RTPv2i16ii
F16_MUL_RTPv2i16ii
F16_LDEXPv2i16ii
XORv2i16ii
VCONCATv2i16ii
UMULHI_INTv2i16ii
VINSERTv2i16ii
NATIVE_UDIVv2i16ii
BORROWv2i16ii
IMAXv2i16ii
UMAXv2i16ii
F16_MAXv2i16ii
I16_MAXv2i16ii
U16_MAXv2i16ii
CARRYv2i16ii
F16_SUB_RTZv2i16ii
F16_ADD_RTZv2i16ii
F16_MUL_RTZv2i16ii
IMULHI24i16ii
UMULHI24i16ii
IMUL24i16ii
UMUL24i16ii
IMULHI24v4i16ii
UMULHI24v4i16ii
IMUL24v4i16ii
UMUL24v4i16ii
SUB16v4i16ii
ADD16v4i16ii
MUL16v4i16ii
F16_SUBv4i16ii
EADDv4i16ii
F16_ADDv4i16ii
ANDv4i16ii
F16_SUB_RTEv4i16ii
F16_ADD_RTEv4i16ii
F16_MUL_RTEv4i16ii
IMULHIv4i16ii
SMULHIv4i16ii
UMULHIv4i16ii
SMULv4i16ii
UMULv4i16ii
F16_MULv4i16ii
BFMv4i16ii
IMINv4i16ii
UMINv4i16ii
F16_MINv4i16ii
I16_MINv4i16ii
U16_MINv4i16ii
F16_SUB_RTNv4i16ii
F16_ADD_RTNv4i16ii
F16_MUL_RTNv4i16ii
F16_SUB_RTPv4i16ii
F16_ADD_RTPv4i16ii
F16_MUL_RTPv4i16ii
F16_LDEXPv4i16ii
XORv4i16ii
VCONCATv4i16ii
UMULHI_INTv4i16ii
VINSERTv4i16ii
NATIVE_UDIVv4i16ii
BORROWv4i16ii
IMAXv4i16ii
UMAXv4i16ii
F16_MAXv4i16ii
I16_MAXv4i16ii
U16_MAXv4i16ii
CARRYv4i16ii
F16_SUB_RTZv4i16ii
F16_ADD_RTZv4i16ii
F16_MUL_RTZv4i16ii
SUB16i16ii
ADD16i16ii
MUL16i16ii
F16_SUBi16ii
EADDi16ii
F16_ADDi16ii
ANDi16ii
F16_SUB_RTEi16ii
F16_ADD_RTEi16ii
F16_MUL_RTEi16ii
IMULHIi16ii
SMULHIi16ii
UMULHIi16ii
SMULi16ii
UMULi16ii
F16_MULi16ii
BFMi16ii
IMINi16ii
UMINi16ii
F16_MINi16ii
I16_MINi16ii
U16_MINi16ii
F16_SUB_RTNi16ii
F16_ADD_RTNi16ii
F16_MUL_RTNi16ii
F16_SUB_RTPi16ii
F16_ADD_RTPi16ii
F16_MUL_RTPi16ii
F16_LDEXPi16ii
XORi16ii
UMULHI_INTi16ii
NATIVE_UDIVi16ii
BORROWi16ii
IMAXi16ii
UMAXi16ii
F16_MAXi16ii
I16_MAXi16ii
U16_MAXi16ii
CARRYi16ii
F16_SUB_RTZi16ii
F16_ADD_RTZi16ii
F16_MUL_RTZi16ii
IMULHI24v2i8ii
UMULHI24v2i8ii
IMUL24v2i8ii
UMUL24v2i8ii
SUB16v2i8ii
ADD16v2i8ii
MUL16v2i8ii
EADDv2i8ii
ANDv2i8ii
IMULHIv2i8ii
SMULHIv2i8ii
UMULHIv2i8ii
SMULv2i8ii
UMULv2i8ii
BFMv2i8ii
IMINv2i8ii
UMINv2i8ii
XORv2i8ii
VCONCATv2i8ii
UMULHI_INTv2i8ii
VINSERTv2i8ii
NATIVE_UDIVv2i8ii
BORROWv2i8ii
IMAXv2i8ii
UMAXv2i8ii
CARRYv2i8ii
IMULHI24i8ii
UMULHI24i8ii
IMUL24i8ii
UMUL24i8ii
IMULHI24v4i8ii
UMULHI24v4i8ii
IMUL24v4i8ii
UMUL24v4i8ii
SUB16v4i8ii
ADD16v4i8ii
MUL16v4i8ii
EADDv4i8ii
ANDv4i8ii
IMULHIv4i8ii
SMULHIv4i8ii
UMULHIv4i8ii
SMULv4i8ii
UMULv4i8ii
BFMv4i8ii
IMINv4i8ii
UMINv4i8ii
XORv4i8ii
VCONCATv4i8ii
UMULHI_INTv4i8ii
VINSERTv4i8ii
NATIVE_UDIVv4i8ii
BORROWv4i8ii
IMAXv4i8ii
UMAXv4i8ii
CARRYv4i8ii
SUB16i8ii
ADD16i8ii
MUL16i8ii
EADDi8ii
ANDi8ii
IMULHIi8ii
SMULHIi8ii
UMULHIi8ii
SMULi8ii
UMULi8ii
BFMi8ii
IMINi8ii
UMINi8ii
XORi8ii
UMULHI_INTi8ii
NATIVE_UDIVi8ii
BORROWi8ii
IMAXi8ii
UMAXi8ii
CARRYi8ii
MED3v2f32iii
MIN3v2f32iii
MAX3v2f32iii
FMAv2f32iii
MADv2f32iii
FMA_RTEv2f32iii
MAD_RTEv2f32iii
FMA_RTNv2f32iii
MAD_RTNv2f32iii
CLAMPv2f32iii
LERPv2f32iii
FMA_RTPv2f32iii
MAD_RTPv2f32iii
FMA_RTZv2f32iii
MAD_RTZv2f32iii
MED3f32iii
MIN3f32iii
MAX3f32iii
MED3v4f32iii
MIN3v4f32iii
MAX3v4f32iii
FMAv4f32iii
MADv4f32iii
FMA_RTEv4f32iii
MAD_RTEv4f32iii
FMA_RTNv4f32iii
MAD_RTNv4f32iii
CLAMPv4f32iii
LERPv4f32iii
FMA_RTPv4f32iii
MAD_RTPv4f32iii
FMA_RTZv4f32iii
MAD_RTZv4f32iii
FMAf32iii
MADf32iii
FMA_RTEf32iii
MAD_RTEf32iii
FMA_RTNf32iii
MAD_RTNf32iii
CLAMPf32iii
LERPf32iii
FMA_RTPf32iii
MAD_RTPf32iii
FMA_RTZf32iii
MAD_RTZf32iii
SAD32i32iii
SAD32v2i32iii
IMED3v2i32iii
UMED3v2i32iii
IMIN3v2i32iii
UMIN3v2i32iii
IMAX3v2i32iii
UMAX3v2i32iii
IMAD24v2i32iii
UMAD24v2i32iii
SAD16v2i32iii
IMADv2i32iii
UMADv2i32iii
MSADv2i32iii
BFIv2i32iii
SADHIv2i32iii
BYTEALIGNv2i32iii
BITALIGNv2i32iii
U4LERPv2i32iii
IBIT_EXTRACTv2i32iii
UBIT_EXTRACTv2i32iii
IMED3i32iii
UMED3i32iii
IMIN3i32iii
UMIN3i32iii
IMAX3i32iii
UMAX3i32iii
BITALIGN_PAT_3i32iii
IMAD24i32iii
UMAD24i32iii
SAD32v4i32iii
IMED3v4i32iii
UMED3v4i32iii
IMIN3v4i32iii
UMIN3v4i32iii
IMAX3v4i32iii
UMAX3v4i32iii
IMAD24v4i32iii
UMAD24v4i32iii
SAD16v4i32iii
IMADv4i32iii
UMADv4i32iii
MSADv4i32iii
BFIv4i32iii
SADHIv4i32iii
BYTEALIGNv4i32iii
BITALIGNv4i32iii
U4LERPv4i32iii
IBIT_EXTRACTv4i32iii
UBIT_EXTRACTv4i32iii
SAD16i32iii
IMADi32iii
UMADi32iii
MSADi32iii
BFIi32iii
SADHIi32iii
BYTEALIGNi32iii
BITALIGNi32iii
U4LERPi32iii
IBIT_EXTRACTi32iii
UBIT_EXTRACTi32iii
DFMAv2f64iii
MADv2f64iii
DFMAf64iii
MADf64iii
MAD_RTEf64iii
MAD_RTNf64iii
MAD_RTPf64iii
MAD_RTZf64iii
SAD32i64iii
SAD32v2i64iii
IMED3v2i64iii
UMED3v2i64iii
IMIN3v2i64iii
UMIN3v2i64iii
IMAX3v2i64iii
UMAX3v2i64iii
IMAD24v2i64iii
UMAD24v2i64iii
SAD16v2i64iii
IMADv2i64iii
UMADv2i64iii
MSADv2i64iii
BFIv2i64iii
SADHIv2i64iii
BYTEALIGNv2i64iii
BITALIGNv2i64iii
U4LERPv2i64iii
IBIT_EXTRACTv2i64iii
UBIT_EXTRACTv2i64iii
IMED3i64iii
UMED3i64iii
IMIN3i64iii
UMIN3i64iii
IMAX3i64iii
UMAX3i64iii
IMAD24i64iii
UMAD24i64iii
SAD16i64iii
IMADi64iii
UMADi64iii
MSADi64iii
MQSADi64iii
BFIi64iii
SADHIi64iii
BYTEALIGNi64iii
BITALIGNi64iii
U4LERPi64iii
IBIT_EXTRACTi64iii
UBIT_EXTRACTi64iii
SAD4iii
SAD32i16iii
SAD32v2i16iii
IMED3v2i16iii
UMED3v2i16iii
IMIN3v2i16iii
UMIN3v2i16iii
IMAX3v2i16iii
UMAX3v2i16iii
IMAD24v2i16iii
UMAD24v2i16iii
SAD16v2i16iii
F16_FMAv2i16iii
IMADv2i16iii
UMADv2i16iii
F16_MADv2i16iii
I16_MADv2i16iii
U16_MADv2i16iii
MSADv2i16iii
F16_FMA_RTEv2i16iii
BFIv2i16iii
SADHIv2i16iii
BYTEALIGNv2i16iii
BITALIGNv2i16iii
F16_FMA_RTNv2i16iii
U4LERPv2i16iii
F16_FMA_RTPv2i16iii
IBIT_EXTRACTv2i16iii
UBIT_EXTRACTv2i16iii
F16_FMA_RTZv2i16iii
IMED3i16iii
UMED3i16iii
IMIN3i16iii
UMIN3i16iii
IMAX3i16iii
UMAX3i16iii
IMAD24i16iii
UMAD24i16iii
SAD32v4i16iii
IMED3v4i16iii
UMED3v4i16iii
IMIN3v4i16iii
UMIN3v4i16iii
IMAX3v4i16iii
UMAX3v4i16iii
IMAD24v4i16iii
UMAD24v4i16iii
SAD16v4i16iii
F16_FMAv4i16iii
IMADv4i16iii
UMADv4i16iii
F16_MADv4i16iii
I16_MADv4i16iii
U16_MADv4i16iii
MSADv4i16iii
F16_FMA_RTEv4i16iii
BFIv4i16iii
SADHIv4i16iii
BYTEALIGNv4i16iii
BITALIGNv4i16iii
F16_FMA_RTNv4i16iii
U4LERPv4i16iii
F16_FMA_RTPv4i16iii
IBIT_EXTRACTv4i16iii
UBIT_EXTRACTv4i16iii
F16_FMA_RTZv4i16iii
SAD16i16iii
F16_FMAi16iii
IMADi16iii
UMADi16iii
F16_MADi16iii
I16_MADi16iii
U16_MADi16iii
MSADi16iii
F16_FMA_RTEi16iii
BFIi16iii
SADHIi16iii
BYTEALIGNi16iii
BITALIGNi16iii
F16_FMA_RTNi16iii
U4LERPi16iii
F16_FMA_RTPi16iii
IBIT_EXTRACTi16iii
UBIT_EXTRACTi16iii
F16_FMA_RTZi16iii
SAD32i8iii
SAD32v2i8iii
IMED3v2i8iii
UMED3v2i8iii
IMIN3v2i8iii
UMIN3v2i8iii
IMAX3v2i8iii
UMAX3v2i8iii
IMAD24v2i8iii
UMAD24v2i8iii
SAD16v2i8iii
IMADv2i8iii
UMADv2i8iii
MSADv2i8iii
BFIv2i8iii
SADHIv2i8iii
BYTEALIGNv2i8iii
BITALIGNv2i8iii
U4LERPv2i8iii
IBIT_EXTRACTv2i8iii
UBIT_EXTRACTv2i8iii
IMED3i8iii
UMED3i8iii
IMIN3i8iii
UMIN3i8iii
IMAX3i8iii
UMAX3i8iii
IMAD24i8iii
UMAD24i8iii
SAD32v4i8iii
IMED3v4i8iii
UMED3v4i8iii
IMIN3v4i8iii
UMIN3v4i8iii
IMAX3v4i8iii
UMAX3v4i8iii
IMAD24v4i8iii
UMAD24v4i8iii
SAD16v4i8iii
IMADv4i8iii
UMADv4i8iii
MSADv4i8iii
BFIv4i8iii
SADHIv4i8iii
BYTEALIGNv4i8iii
BITALIGNv4i8iii
U4LERPv4i8iii
IBIT_EXTRACTv4i8iii
UBIT_EXTRACTv4i8iii
SAD16i8iii
IMADi8iii
UMADi8iii
MSADi8iii
BFIi8iii
SADHIi8iii
BYTEALIGNi8iii
BITALIGNi8iii
U4LERPi8iii
IBIT_EXTRACTi8iii
UBIT_EXTRACTi8iii
DP2ADDiii
BITALIGN_PAT_1i32iiii
BITALIGN_PAT_2i32iiii
UBIT_INSERTv2i32iiii
UBIT_INSERTv4i32iiii
UBIT_INSERTi32iiii
RECEIVELANEiiii
NEGHALFONE_GEf32riii
NEGONE_GEf32riii
ZERO_GEf32riii
NEGHALFONE_EQf32riii
NEGONE_EQf32riii
ZERO_EQf32riii
NEGHALFONE_LTf32riii
NEGONE_LTf32riii
ZERO_LTf32riii
BITALIGN_PAT_1i32riii
BITALIGN_PAT_2i32riii
UBIT_INSERTv2i32riii
UBIT_INSERTv4i32riii
NEGHALFONE_GEi32riii
NEGONE_GEi32riii
ZERO_GEi32riii
NEGHALFONE_EQi32riii
NEGONE_EQi32riii
ZERO_EQi32riii
NEGHALFONE_LTi32riii
NEGONE_LTi32riii
ZERO_LTi32riii
UBIT_INSERTi32riii
RECEIVELANEriii
CMOV_LOGICALi64c32rii
MED3v2f32rii
MIN3v2f32rii
MAX3v2f32rii
FMAv2f32rii
MADv2f32rii
FMA_RTEv2f32rii
MAD_RTEv2f32rii
CMOV_LOGICALv2f32rii
FMA_RTNv2f32rii
MAD_RTNv2f32rii
CLAMPv2f32rii
LERPv2f32rii
FMA_RTPv2f32rii
MAD_RTPv2f32rii
FMA_RTZv2f32rii
MAD_RTZv2f32rii
MED3f32rii
MIN3f32rii
MAX3f32rii
MED3v4f32rii
MIN3v4f32rii
MAX3v4f32rii
FMAv4f32rii
MADv4f32rii
FMA_RTEv4f32rii
MAD_RTEv4f32rii
CMOV_LOGICALv4f32rii
FMA_RTNv4f32rii
MAD_RTNv4f32rii
CLAMPv4f32rii
LERPv4f32rii
FMA_RTPv4f32rii
MAD_RTPv4f32rii
FMA_RTZv4f32rii
MAD_RTZv4f32rii
FMAf32rii
MADf32rii
FMA_RTEf32rii
MAD_RTEf32rii
CMOV_LOGICALf32rii
FMA_RTNf32rii
MAD_RTNf32rii
CLAMPf32rii
LERPf32rii
FMA_RTPf32rii
MAD_RTPf32rii
FMA_RTZf32rii
MAD_RTZf32rii
SAD32i32rii
SAD32v2i32rii
IMED3v2i32rii
UMED3v2i32rii
IMIN3v2i32rii
UMIN3v2i32rii
IMAX3v2i32rii
UMAX3v2i32rii
IMAD24v2i32rii
UMAD24v2i32rii
SAD16v2i32rii
IMADv2i32rii
UMADv2i32rii
MSADv2i32rii
BFIv2i32rii
SADHIv2i32rii
CMOV_LOGICALv2i32rii
BYTEALIGNv2i32rii
BITALIGNv2i32rii
U4LERPv2i32rii
IBIT_EXTRACTv2i32rii
UBIT_EXTRACTv2i32rii
IMED3i32rii
UMED3i32rii
IMIN3i32rii
UMIN3i32rii
IMAX3i32rii
UMAX3i32rii
BITALIGN_PAT_3i32rii
IMAD24i32rii
UMAD24i32rii
SAD32v4i32rii
IMED3v4i32rii
UMED3v4i32rii
IMIN3v4i32rii
UMIN3v4i32rii
IMAX3v4i32rii
UMAX3v4i32rii
IMAD24v4i32rii
UMAD24v4i32rii
SAD16v4i32rii
IMADv4i32rii
UMADv4i32rii
MSADv4i32rii
BFIv4i32rii
SADHIv4i32rii
CMOV_LOGICALv4i32rii
BYTEALIGNv4i32rii
BITALIGNv4i32rii
U4LERPv4i32rii
IBIT_EXTRACTv4i32rii
UBIT_EXTRACTv4i32rii
SAD16i32rii
IMADi32rii
UMADi32rii
MSADi32rii
BFIi32rii
SADHIi32rii
CMOV_LOGICALi32rii
BYTEALIGNi32rii
BITALIGNi32rii
U4LERPi32rii
IBIT_EXTRACTi32rii
UBIT_EXTRACTi32rii
CMOV_LOGICALi32c64rii
DFMAv2f64rii
MADv2f64rii
CMOV_LOGICALv2f64rii
DFMAf64rii
MADf64rii
MAD_RTEf64rii
CMOV_LOGICALf64rii
MAD_RTNf64rii
MAD_RTPf64rii
MAD_RTZf64rii
SAD32i64rii
SAD32v2i64rii
IMED3v2i64rii
UMED3v2i64rii
IMIN3v2i64rii
UMIN3v2i64rii
IMAX3v2i64rii
UMAX3v2i64rii
IMAD24v2i64rii
UMAD24v2i64rii
SAD16v2i64rii
IMADv2i64rii
UMADv2i64rii
MSADv2i64rii
BFIv2i64rii
SADHIv2i64rii
CMOV_LOGICALv2i64rii
BYTEALIGNv2i64rii
BITALIGNv2i64rii
U4LERPv2i64rii
IBIT_EXTRACTv2i64rii
UBIT_EXTRACTv2i64rii
IMED3i64rii
UMED3i64rii
IMIN3i64rii
UMIN3i64rii
IMAX3i64rii
UMAX3i64rii
IMAD24i64rii
UMAD24i64rii
SAD16i64rii
IMADi64rii
UMADi64rii
MSADi64rii
MQSADi64rii
BFIi64rii
SADHIi64rii
CMOV_LOGICALi64rii
BYTEALIGNi64rii
BITALIGNi64rii
U4LERPi64rii
IBIT_EXTRACTi64rii
UBIT_EXTRACTi64rii
SAD4rii
CMOV_LOGICALv2f16rii
CMOV_LOGICALf16rii
SAD32i16rii
SAD32v2i16rii
IMED3v2i16rii
UMED3v2i16rii
IMIN3v2i16rii
UMIN3v2i16rii
IMAX3v2i16rii
UMAX3v2i16rii
IMAD24v2i16rii
UMAD24v2i16rii
SAD16v2i16rii
F16_FMAv2i16rii
IMADv2i16rii
UMADv2i16rii
F16_MADv2i16rii
I16_MADv2i16rii
U16_MADv2i16rii
MSADv2i16rii
F16_FMA_RTEv2i16rii
BFIv2i16rii
SADHIv2i16rii
CMOV_LOGICALv2i16rii
BYTEALIGNv2i16rii
BITALIGNv2i16rii
F16_FMA_RTNv2i16rii
U4LERPv2i16rii
F16_FMA_RTPv2i16rii
IBIT_EXTRACTv2i16rii
UBIT_EXTRACTv2i16rii
F16_FMA_RTZv2i16rii
IMED3i16rii
UMED3i16rii
IMIN3i16rii
UMIN3i16rii
IMAX3i16rii
UMAX3i16rii
IMAD24i16rii
UMAD24i16rii
SAD32v4i16rii
IMED3v4i16rii
UMED3v4i16rii
IMIN3v4i16rii
UMIN3v4i16rii
IMAX3v4i16rii
UMAX3v4i16rii
IMAD24v4i16rii
UMAD24v4i16rii
SAD16v4i16rii
F16_FMAv4i16rii
IMADv4i16rii
UMADv4i16rii
F16_MADv4i16rii
I16_MADv4i16rii
U16_MADv4i16rii
MSADv4i16rii
F16_FMA_RTEv4i16rii
BFIv4i16rii
SADHIv4i16rii
CMOV_LOGICALv4i16rii
BYTEALIGNv4i16rii
BITALIGNv4i16rii
F16_FMA_RTNv4i16rii
U4LERPv4i16rii
F16_FMA_RTPv4i16rii
IBIT_EXTRACTv4i16rii
UBIT_EXTRACTv4i16rii
F16_FMA_RTZv4i16rii
SAD16i16rii
F16_FMAi16rii
IMADi16rii
UMADi16rii
F16_MADi16rii
I16_MADi16rii
U16_MADi16rii
MSADi16rii
F16_FMA_RTEi16rii
BFIi16rii
SADHIi16rii
CMOV_LOGICALi16rii
BYTEALIGNi16rii
BITALIGNi16rii
F16_FMA_RTNi16rii
U4LERPi16rii
F16_FMA_RTPi16rii
IBIT_EXTRACTi16rii
UBIT_EXTRACTi16rii
F16_FMA_RTZi16rii
SAD32i8rii
SAD32v2i8rii
IMED3v2i8rii
UMED3v2i8rii
IMIN3v2i8rii
UMIN3v2i8rii
IMAX3v2i8rii
UMAX3v2i8rii
IMAD24v2i8rii
UMAD24v2i8rii
SAD16v2i8rii
IMADv2i8rii
UMADv2i8rii
MSADv2i8rii
BFIv2i8rii
SADHIv2i8rii
CMOV_LOGICALv2i8rii
BYTEALIGNv2i8rii
BITALIGNv2i8rii
U4LERPv2i8rii
IBIT_EXTRACTv2i8rii
UBIT_EXTRACTv2i8rii
IMED3i8rii
UMED3i8rii
IMIN3i8rii
UMIN3i8rii
IMAX3i8rii
UMAX3i8rii
IMAD24i8rii
UMAD24i8rii
SAD32v4i8rii
IMED3v4i8rii
UMED3v4i8rii
IMIN3v4i8rii
UMIN3v4i8rii
IMAX3v4i8rii
UMAX3v4i8rii
IMAD24v4i8rii
UMAD24v4i8rii
SAD16v4i8rii
IMADv4i8rii
UMADv4i8rii
MSADv4i8rii
BFIv4i8rii
SADHIv4i8rii
CMOV_LOGICALv4i8rii
BYTEALIGNv4i8rii
BITALIGNv4i8rii
U4LERPv4i8rii
IBIT_EXTRACTv4i8rii
UBIT_EXTRACTv4i8rii
SAD16i8rii
IMADi8rii
UMADi8rii
MSADi8rii
BFIi8rii
SADHIi8rii
CMOV_LOGICALi8rii
BYTEALIGNi8rii
BITALIGNi8rii
U4LERPi8rii
IBIT_EXTRACTi8rii
UBIT_EXTRACTi8rii
DP2ADDrii
BITALIGN_PAT_1i32irii
BITALIGN_PAT_2i32irii
UBIT_INSERTv2i32irii
UBIT_INSERTv4i32irii
UBIT_INSERTi32irii
RECEIVELANEirii
BITALIGN_PAT_1i32rrii
BITALIGN_PAT_2i32rrii
UBIT_INSERTv2i32rrii
UBIT_INSERTv4i32rrii
UBIT_INSERTi32rrii
RECEIVELANErrii
SUBv2f32ri
ADDv2f32ri
MODv2f32ri
MUL_IEEEv2f32ri
GEv2f32ri
NEv2f32ri
DIV_PRECISEv2f32ri
SUB_RTEv2f32ri
ADD_RTEv2f32ri
MUL_RTEv2f32ri
MINv2f32ri
SUB_RTNv2f32ri
ADD_RTNv2f32ri
MUL_RTNv2f32ri
SUB_RTPv2f32ri
ADD_RTPv2f32ri
MUL_RTPv2f32ri
LDEXPv2f32ri
EQv2f32ri
CLASSv2f32ri
VCONCATv2f32ri
LTv2f32ri
DIV_INTv2f32ri
VINSERTv2f32ri
DIVv2f32ri
POWv2f32ri
MAXv2f32ri
SUB_RTZv2f32ri
ADD_RTZv2f32ri
MUL_RTZv2f32ri
SUBv4f32ri
ADDv4f32ri
MODv4f32ri
MUL_IEEEv4f32ri
GEv4f32ri
NEv4f32ri
DIV_PRECISEv4f32ri
SUB_RTEv4f32ri
ADD_RTEv4f32ri
MUL_RTEv4f32ri
MINv4f32ri
SUB_RTNv4f32ri
ADD_RTNv4f32ri
MUL_RTNv4f32ri
SUB_RTPv4f32ri
ADD_RTPv4f32ri
MUL_RTPv4f32ri
LDEXPv4f32ri
EQv4f32ri
CLASSv4f32ri
VCONCATv4f32ri
LTv4f32ri
DIV_INTv4f32ri
VINSERTv4f32ri
DIVv4f32ri
POWv4f32ri
MAXv4f32ri
SUB_RTZv4f32ri
ADD_RTZv4f32ri
MUL_RTZv4f32ri
SUBf32ri
ADDf32ri
MODf32ri
MUL_IEEEf32ri
GEf32ri
NEf32ri
DIV_PRECISEf32ri
SUB_RTEf32ri
ADD_RTEf32ri
MUL_RTEf32ri
MINf32ri
SUB_RTNf32ri
ADD_RTNf32ri
MUL_RTNf32ri
SUB_RTPf32ri
ADD_RTPf32ri
MUL_RTPf32ri
LDEXPf32ri
EQf32ri
CLASSf32ri
LTf32ri
DIV_INTf32ri
DIVf32ri
POWf32ri
MAXf32ri
SUB_RTZf32ri
ADD_RTZf32ri
MUL_RTZf32ri
BFM_PAT1i32ri
SHLv2i32i32ri
USHRv2i32i32ri
SHLv4i32i32ri
USHRv4i32i32ri
SHLi32i32ri
USHRi32i32ri
IMULHI24v2i32ri
UMULHI24v2i32ri
IMUL24v2i32ri
UMUL24v2i32ri
EADDv2i32ri
ANDv2i32ri
IGEv2i32ri
UGEv2i32ri
INEv2i32ri
IMULHIv2i32ri
SMULHIv2i32ri
UMULHIv2i32ri
SMULv2i32ri
UMULv2i32ri
BFMv2i32ri
IMINv2i32ri
UMINv2i32ri
IEQv2i32ri
XORv2i32ri
VCONCATv2i32ri
ILTv2i32ri
ULTv2i32ri
UMULHI_INTv2i32ri
VINSERTv2i32ri
NATIVE_UDIVv2i32ri
BORROWv2i32ri
IMAXv2i32ri
UMAXv2i32ri
CARRYv2i32ri
IMULHI24i32ri
UMULHI24i32ri
IMUL24i32ri
UMUL24i32ri
SHLv2i64i32ri
USHRv2i64i32ri
SHLi64i32ri
USHRi64i32ri
IMULHI24v4i32ri
UMULHI24v4i32ri
IMUL24v4i32ri
UMUL24v4i32ri
EADDv4i32ri
ANDv4i32ri
IGEv4i32ri
UGEv4i32ri
INEv4i32ri
IMULHIv4i32ri
SMULHIv4i32ri
UMULHIv4i32ri
SMULv4i32ri
UMULv4i32ri
BFMv4i32ri
IMINv4i32ri
UMINv4i32ri
IEQv4i32ri
XORv4i32ri
VCONCATv4i32ri
ILTv4i32ri
ULTv4i32ri
UMULHI_INTv4i32ri
VINSERTv4i32ri
NATIVE_UDIVv4i32ri
BORROWv4i32ri
IMAXv4i32ri
UMAXv4i32ri
CARRYv4i32ri
SHRI16v2i16i32ri
SHL16v2i16i32ri
SHRU16v2i16i32ri
SHLv2i16i32ri
USHRv2i16i32ri
SHRI16v4i16i32ri
SHL16v4i16i32ri
SHRU16v4i16i32ri
SHLv4i16i32ri
USHRv4i16i32ri
SHRI16i16i32ri
SHL16i16i32ri
SHRU16i16i32ri
SHLi16i32ri
USHRi16i32ri
SHRI16v2i8i32ri
SHL16v2i8i32ri
SHRU16v2i8i32ri
SHLv2i8i32ri
USHRv2i8i32ri
SHRI16v4i8i32ri
SHL16v4i8i32ri
SHRU16v4i8i32ri
SHLv4i8i32ri
USHRv4i8i32ri
SHRI16i8i32ri
SHL16i8i32ri
SHRU16i8i32ri
SHLi8i32ri
USHRi8i32ri
EADDi32ri
ANDi32ri
IGEi32ri
UGEi32ri
INEi32ri
IMULHIi32ri
SMULHIi32ri
UMULHIi32ri
SMULi32ri
UMULi32ri
BFMi32ri
IMINi32ri
UMINi32ri
IEQi32ri
XORi32ri
ILTi32ri
ULTi32ri
UMULHI_INTi32ri
NATIVE_UDIVi32ri
BORROWi32ri
IMAXi32ri
UMAXi32ri
CARRYi32ri
DP2ri
DP3ri
SUBv2f64ri
ADDv2f64ri
MUL_IEEEv2f64ri
DGEv2f64ri
DNEv2f64ri
MINv2f64ri
LDEXPv2f64ri
DEQv2f64ri
CLASSv2f64ri
VCONCATv2f64ri
DLTv2f64ri
DDIV_INTv2f64ri
VINSERTv2f64ri
DDIVv2f64ri
MAXv2f64ri
SUBf64ri
ADDf64ri
MUL_IEEEf64ri
DGEf64ri
DNEf64ri
SUB_RTEf64ri
ADD_RTEf64ri
MUL_RTEf64ri
MINf64ri
SUB_RTNf64ri
ADD_RTNf64ri
MUL_RTNf64ri
DTRIG_PREOPf64ri
SUB_RTPf64ri
ADD_RTPf64ri
MUL_RTPf64ri
LDEXPf64ri
DEQf64ri
CLASSf64ri
DLTf64ri
DDIV_INTf64ri
DDIVf64ri
MAXf64ri
SUB_RTZf64ri
ADD_RTZf64ri
MUL_RTZf64ri
SHLv2i32i64ri
USHRv2i32i64ri
SHLi32i64ri
USHRi32i64ri
IMIN64v2i64ri
UMIN64v2i64ri
IMAX64v2i64ri
UMAX64v2i64ri
ADDv2i64ri
ANDv2i64ri
SMODv2i64ri
UMODv2i64ri
IGEv2i64ri
UGEv2i64ri
INEv2i64ri
SMULv2i64ri
UMULv2i64ri
IEQv2i64ri
XORv2i64ri
VCONCATv2i64ri
ILTv2i64ri
ULTv2i64ri
VINSERTv2i64ri
SDIVv2i64ri
UDIVv2i64ri
IMIN64i64ri
UMIN64i64ri
IMAX64i64ri
UMAX64i64ri
SHLv2i64i64ri
USHRv2i64i64ri
SHLi64i64ri
USHRi64i64ri
SHRI16v2i16i64ri
SHL16v2i16i64ri
SHRU16v2i16i64ri
SHLv2i16i64ri
USHRv2i16i64ri
SHRI16i16i64ri
SHL16i16i64ri
SHRU16i16i64ri
SHLi16i64ri
USHRi16i64ri
SHRI16v2i8i64ri
SHL16v2i8i64ri
SHRU16v2i8i64ri
SHLv2i8i64ri
USHRv2i8i64ri
SHRI16i8i64ri
SHL16i8i64ri
SHRU16i8i64ri
SHLi8i64ri
USHRi8i64ri
ADDi64ri
ANDi64ri
SMODi64ri
UMODi64ri
IGEi64ri
UGEi64ri
INEi64ri
SMULi64ri
UMULi64ri
IEQi64ri
XORi64ri
ILTi64ri
ULTi64ri
SDIVi64ri
UDIVi64ri
DP4ri
F16_SUBv2f16ri
F16_ADDv2f16ri
F16_MULv2f16ri
VCONCATv2f16ri
VINSERTv2f16ri
F16_DIVv2f16ri
F16_SUBf16ri
F16_ADDf16ri
F16_MULf16ri
F16_DIVf16ri
IMULHI24v2i16ri
UMULHI24v2i16ri
IMUL24v2i16ri
UMUL24v2i16ri
SUB16v2i16ri
ADD16v2i16ri
MUL16v2i16ri
F16_SUBv2i16ri
EADDv2i16ri
F16_ADDv2i16ri
ANDv2i16ri
F16_SUB_RTEv2i16ri
F16_ADD_RTEv2i16ri
F16_MUL_RTEv2i16ri
IMULHIv2i16ri
SMULHIv2i16ri
UMULHIv2i16ri
SMULv2i16ri
UMULv2i16ri
F16_MULv2i16ri
BFMv2i16ri
IMINv2i16ri
UMINv2i16ri
F16_MINv2i16ri
I16_MINv2i16ri
U16_MINv2i16ri
F16_SUB_RTNv2i16ri
F16_ADD_RTNv2i16ri
F16_MUL_RTNv2i16ri
F16_SUB_RTPv2i16ri
F16_ADD_RTPv2i16ri
F16_MUL_RTPv2i16ri
F16_LDEXPv2i16ri
XORv2i16ri
VCONCATv2i16ri
UMULHI_INTv2i16ri
VINSERTv2i16ri
NATIVE_UDIVv2i16ri
BORROWv2i16ri
IMAXv2i16ri
UMAXv2i16ri
F16_MAXv2i16ri
I16_MAXv2i16ri
U16_MAXv2i16ri
CARRYv2i16ri
F16_SUB_RTZv2i16ri
F16_ADD_RTZv2i16ri
F16_MUL_RTZv2i16ri
IMULHI24i16ri
UMULHI24i16ri
IMUL24i16ri
UMUL24i16ri
IMULHI24v4i16ri
UMULHI24v4i16ri
IMUL24v4i16ri
UMUL24v4i16ri
SUB16v4i16ri
ADD16v4i16ri
MUL16v4i16ri
F16_SUBv4i16ri
EADDv4i16ri
F16_ADDv4i16ri
ANDv4i16ri
F16_SUB_RTEv4i16ri
F16_ADD_RTEv4i16ri
F16_MUL_RTEv4i16ri
IMULHIv4i16ri
SMULHIv4i16ri
UMULHIv4i16ri
SMULv4i16ri
UMULv4i16ri
F16_MULv4i16ri
BFMv4i16ri
IMINv4i16ri
UMINv4i16ri
F16_MINv4i16ri
I16_MINv4i16ri
U16_MINv4i16ri
F16_SUB_RTNv4i16ri
F16_ADD_RTNv4i16ri
F16_MUL_RTNv4i16ri
F16_SUB_RTPv4i16ri
F16_ADD_RTPv4i16ri
F16_MUL_RTPv4i16ri
F16_LDEXPv4i16ri
XORv4i16ri
VCONCATv4i16ri
UMULHI_INTv4i16ri
VINSERTv4i16ri
NATIVE_UDIVv4i16ri
BORROWv4i16ri
IMAXv4i16ri
UMAXv4i16ri
F16_MAXv4i16ri
I16_MAXv4i16ri
U16_MAXv4i16ri
CARRYv4i16ri
F16_SUB_RTZv4i16ri
F16_ADD_RTZv4i16ri
F16_MUL_RTZv4i16ri
SUB16i16ri
ADD16i16ri
MUL16i16ri
SHRI16v2i16i16ri
SHL16v2i16i16ri
SHRU16v2i16i16ri
SHLv2i16i16ri
USHRv2i16i16ri
SHRI16v4i16i16ri
SHL16v4i16i16ri
SHRU16v4i16i16ri
SHLv4i16i16ri
USHRv4i16i16ri
SHRI16i16i16ri
SHL16i16i16ri
SHRU16i16i16ri
SHLi16i16ri
USHRi16i16ri
F16_SUBi16ri
EADDi16ri
F16_ADDi16ri
ANDi16ri
F16_SUB_RTEi16ri
F16_ADD_RTEi16ri
F16_MUL_RTEi16ri
IMULHIi16ri
SMULHIi16ri
UMULHIi16ri
SMULi16ri
UMULi16ri
F16_MULi16ri
BFMi16ri
IMINi16ri
UMINi16ri
F16_MINi16ri
I16_MINi16ri
U16_MINi16ri
F16_SUB_RTNi16ri
F16_ADD_RTNi16ri
F16_MUL_RTNi16ri
F16_SUB_RTPi16ri
F16_ADD_RTPi16ri
F16_MUL_RTPi16ri
F16_LDEXPi16ri
XORi16ri
UMULHI_INTi16ri
NATIVE_UDIVi16ri
BORROWi16ri
IMAXi16ri
UMAXi16ri
F16_MAXi16ri
I16_MAXi16ri
U16_MAXi16ri
CARRYi16ri
F16_SUB_RTZi16ri
F16_ADD_RTZi16ri
F16_MUL_RTZi16ri
IMULHI24v2i8ri
UMULHI24v2i8ri
IMUL24v2i8ri
UMUL24v2i8ri
SUB16v2i8ri
ADD16v2i8ri
MUL16v2i8ri
EADDv2i8ri
ANDv2i8ri
IMULHIv2i8ri
SMULHIv2i8ri
UMULHIv2i8ri
SMULv2i8ri
UMULv2i8ri
BFMv2i8ri
IMINv2i8ri
UMINv2i8ri
XORv2i8ri
VCONCATv2i8ri
UMULHI_INTv2i8ri
VINSERTv2i8ri
NATIVE_UDIVv2i8ri
BORROWv2i8ri
IMAXv2i8ri
UMAXv2i8ri
CARRYv2i8ri
IMULHI24i8ri
UMULHI24i8ri
IMUL24i8ri
UMUL24i8ri
IMULHI24v4i8ri
UMULHI24v4i8ri
IMUL24v4i8ri
UMUL24v4i8ri
SUB16v4i8ri
ADD16v4i8ri
MUL16v4i8ri
EADDv4i8ri
ANDv4i8ri
IMULHIv4i8ri
SMULHIv4i8ri
UMULHIv4i8ri
SMULv4i8ri
UMULv4i8ri
BFMv4i8ri
IMINv4i8ri
UMINv4i8ri
XORv4i8ri
VCONCATv4i8ri
UMULHI_INTv4i8ri
VINSERTv4i8ri
NATIVE_UDIVv4i8ri
BORROWv4i8ri
IMAXv4i8ri
UMAXv4i8ri
CARRYv4i8ri
SUB16i8ri
ADD16i8ri
MUL16i8ri
SHRI16v2i8i8ri
SHL16v2i8i8ri
SHRU16v2i8i8ri
SHLv2i8i8ri
USHRv2i8i8ri
SHRI16v4i8i8ri
SHL16v4i8i8ri
SHRU16v4i8i8ri
SHLv4i8i8ri
USHRv4i8i8ri
SHRI16i8i8ri
SHL16i8i8ri
SHRU16i8i8ri
SHLi8i8ri
USHRi8i8ri
EADDi8ri
ANDi8ri
IMULHIi8ri
SMULHIi8ri
UMULHIi8ri
SMULi8ri
UMULi8ri
BFMi8ri
IMINi8ri
UMINi8ri
XORi8ri
UMULHI_INTi8ri
NATIVE_UDIVi8ri
BORROWi8ri
IMAXi8ri
UMAXi8ri
CARRYi8ri
MED3v2f32iri
MIN3v2f32iri
MAX3v2f32iri
FMAv2f32iri
MADv2f32iri
FMA_RTEv2f32iri
MAD_RTEv2f32iri
FMA_RTNv2f32iri
MAD_RTNv2f32iri
CLAMPv2f32iri
LERPv2f32iri
FMA_RTPv2f32iri
MAD_RTPv2f32iri
FMA_RTZv2f32iri
MAD_RTZv2f32iri
MED3f32iri
MIN3f32iri
MAX3f32iri
MED3v4f32iri
MIN3v4f32iri
MAX3v4f32iri
FMAv4f32iri
MADv4f32iri
FMA_RTEv4f32iri
MAD_RTEv4f32iri
FMA_RTNv4f32iri
MAD_RTNv4f32iri
CLAMPv4f32iri
LERPv4f32iri
FMA_RTPv4f32iri
MAD_RTPv4f32iri
FMA_RTZv4f32iri
MAD_RTZv4f32iri
FMAf32iri
MADf32iri
FMA_RTEf32iri
MAD_RTEf32iri
FMA_RTNf32iri
MAD_RTNf32iri
CLAMPf32iri
LERPf32iri
FMA_RTPf32iri
MAD_RTPf32iri
FMA_RTZf32iri
MAD_RTZf32iri
SAD32i32iri
SAD32v2i32iri
IMED3v2i32iri
UMED3v2i32iri
IMIN3v2i32iri
UMIN3v2i32iri
IMAX3v2i32iri
UMAX3v2i32iri
IMAD24v2i32iri
UMAD24v2i32iri
SAD16v2i32iri
IMADv2i32iri
UMADv2i32iri
MSADv2i32iri
BFIv2i32iri
SADHIv2i32iri
BYTEALIGNv2i32iri
BITALIGNv2i32iri
U4LERPv2i32iri
IBIT_EXTRACTv2i32iri
UBIT_EXTRACTv2i32iri
IMED3i32iri
UMED3i32iri
IMIN3i32iri
UMIN3i32iri
IMAX3i32iri
UMAX3i32iri
BITALIGN_PAT_3i32iri
IMAD24i32iri
UMAD24i32iri
SAD32v4i32iri
IMED3v4i32iri
UMED3v4i32iri
IMIN3v4i32iri
UMIN3v4i32iri
IMAX3v4i32iri
UMAX3v4i32iri
IMAD24v4i32iri
UMAD24v4i32iri
SAD16v4i32iri
IMADv4i32iri
UMADv4i32iri
MSADv4i32iri
BFIv4i32iri
SADHIv4i32iri
BYTEALIGNv4i32iri
BITALIGNv4i32iri
U4LERPv4i32iri
IBIT_EXTRACTv4i32iri
UBIT_EXTRACTv4i32iri
SAD16i32iri
IMADi32iri
UMADi32iri
MSADi32iri
BFIi32iri
SADHIi32iri
BYTEALIGNi32iri
BITALIGNi32iri
U4LERPi32iri
IBIT_EXTRACTi32iri
UBIT_EXTRACTi32iri
DFMAv2f64iri
MADv2f64iri
DFMAf64iri
MADf64iri
MAD_RTEf64iri
MAD_RTNf64iri
MAD_RTPf64iri
MAD_RTZf64iri
SAD32i64iri
SAD32v2i64iri
IMED3v2i64iri
UMED3v2i64iri
IMIN3v2i64iri
UMIN3v2i64iri
IMAX3v2i64iri
UMAX3v2i64iri
IMAD24v2i64iri
UMAD24v2i64iri
SAD16v2i64iri
IMADv2i64iri
UMADv2i64iri
MSADv2i64iri
BFIv2i64iri
SADHIv2i64iri
BYTEALIGNv2i64iri
BITALIGNv2i64iri
U4LERPv2i64iri
IBIT_EXTRACTv2i64iri
UBIT_EXTRACTv2i64iri
IMED3i64iri
UMED3i64iri
IMIN3i64iri
UMIN3i64iri
IMAX3i64iri
UMAX3i64iri
IMAD24i64iri
UMAD24i64iri
SAD16i64iri
IMADi64iri
UMADi64iri
MSADi64iri
MQSADi64iri
BFIi64iri
SADHIi64iri
BYTEALIGNi64iri
BITALIGNi64iri
U4LERPi64iri
IBIT_EXTRACTi64iri
UBIT_EXTRACTi64iri
SAD4iri
SAD32i16iri
SAD32v2i16iri
IMED3v2i16iri
UMED3v2i16iri
IMIN3v2i16iri
UMIN3v2i16iri
IMAX3v2i16iri
UMAX3v2i16iri
IMAD24v2i16iri
UMAD24v2i16iri
SAD16v2i16iri
F16_FMAv2i16iri
IMADv2i16iri
UMADv2i16iri
F16_MADv2i16iri
I16_MADv2i16iri
U16_MADv2i16iri
MSADv2i16iri
F16_FMA_RTEv2i16iri
BFIv2i16iri
SADHIv2i16iri
BYTEALIGNv2i16iri
BITALIGNv2i16iri
F16_FMA_RTNv2i16iri
U4LERPv2i16iri
F16_FMA_RTPv2i16iri
IBIT_EXTRACTv2i16iri
UBIT_EXTRACTv2i16iri
F16_FMA_RTZv2i16iri
IMED3i16iri
UMED3i16iri
IMIN3i16iri
UMIN3i16iri
IMAX3i16iri
UMAX3i16iri
IMAD24i16iri
UMAD24i16iri
SAD32v4i16iri
IMED3v4i16iri
UMED3v4i16iri
IMIN3v4i16iri
UMIN3v4i16iri
IMAX3v4i16iri
UMAX3v4i16iri
IMAD24v4i16iri
UMAD24v4i16iri
SAD16v4i16iri
F16_FMAv4i16iri
IMADv4i16iri
UMADv4i16iri
F16_MADv4i16iri
I16_MADv4i16iri
U16_MADv4i16iri
MSADv4i16iri
F16_FMA_RTEv4i16iri
BFIv4i16iri
SADHIv4i16iri
BYTEALIGNv4i16iri
BITALIGNv4i16iri
F16_FMA_RTNv4i16iri
U4LERPv4i16iri
F16_FMA_RTPv4i16iri
IBIT_EXTRACTv4i16iri
UBIT_EXTRACTv4i16iri
F16_FMA_RTZv4i16iri
SAD16i16iri
F16_FMAi16iri
IMADi16iri
UMADi16iri
F16_MADi16iri
I16_MADi16iri
U16_MADi16iri
MSADi16iri
F16_FMA_RTEi16iri
BFIi16iri
SADHIi16iri
BYTEALIGNi16iri
BITALIGNi16iri
F16_FMA_RTNi16iri
U4LERPi16iri
F16_FMA_RTPi16iri
IBIT_EXTRACTi16iri
UBIT_EXTRACTi16iri
F16_FMA_RTZi16iri
SAD32i8iri
SAD32v2i8iri
IMED3v2i8iri
UMED3v2i8iri
IMIN3v2i8iri
UMIN3v2i8iri
IMAX3v2i8iri
UMAX3v2i8iri
IMAD24v2i8iri
UMAD24v2i8iri
SAD16v2i8iri
IMADv2i8iri
UMADv2i8iri
MSADv2i8iri
BFIv2i8iri
SADHIv2i8iri
BYTEALIGNv2i8iri
BITALIGNv2i8iri
U4LERPv2i8iri
IBIT_EXTRACTv2i8iri
UBIT_EXTRACTv2i8iri
IMED3i8iri
UMED3i8iri
IMIN3i8iri
UMIN3i8iri
IMAX3i8iri
UMAX3i8iri
IMAD24i8iri
UMAD24i8iri
SAD32v4i8iri
IMED3v4i8iri
UMED3v4i8iri
IMIN3v4i8iri
UMIN3v4i8iri
IMAX3v4i8iri
UMAX3v4i8iri
IMAD24v4i8iri
UMAD24v4i8iri
SAD16v4i8iri
IMADv4i8iri
UMADv4i8iri
MSADv4i8iri
BFIv4i8iri
SADHIv4i8iri
BYTEALIGNv4i8iri
BITALIGNv4i8iri
U4LERPv4i8iri
IBIT_EXTRACTv4i8iri
UBIT_EXTRACTv4i8iri
SAD16i8iri
IMADi8iri
UMADi8iri
MSADi8iri
BFIi8iri
SADHIi8iri
BYTEALIGNi8iri
BITALIGNi8iri
U4LERPi8iri
IBIT_EXTRACTi8iri
UBIT_EXTRACTi8iri
DP2ADDiri
BITALIGN_PAT_1i32iiri
BITALIGN_PAT_2i32iiri
UBIT_INSERTv2i32iiri
UBIT_INSERTv4i32iiri
UBIT_INSERTi32iiri
RECEIVELANEiiri
NEGHALFONE_GEf32riri
NEGONE_GEf32riri
ZERO_GEf32riri
NEGHALFONE_EQf32riri
NEGONE_EQf32riri
ZERO_EQf32riri
NEGHALFONE_LTf32riri
NEGONE_LTf32riri
ZERO_LTf32riri
BITALIGN_PAT_1i32riri
BITALIGN_PAT_2i32riri
UBIT_INSERTv2i32riri
UBIT_INSERTv4i32riri
NEGHALFONE_GEi32riri
NEGONE_GEi32riri
ZERO_GEi32riri
NEGHALFONE_EQi32riri
NEGONE_EQi32riri
ZERO_EQi32riri
NEGHALFONE_LTi32riri
NEGONE_LTi32riri
ZERO_LTi32riri
UBIT_INSERTi32riri
RECEIVELANEriri
MED3v2f32rri
MIN3v2f32rri
MAX3v2f32rri
FMAv2f32rri
MADv2f32rri
FMA_RTEv2f32rri
MAD_RTEv2f32rri
FMA_RTNv2f32rri
MAD_RTNv2f32rri
CLAMPv2f32rri
LERPv2f32rri
FMA_RTPv2f32rri
MAD_RTPv2f32rri
FMA_RTZv2f32rri
MAD_RTZv2f32rri
MED3f32rri
MIN3f32rri
MAX3f32rri
MED3v4f32rri
MIN3v4f32rri
MAX3v4f32rri
FMAv4f32rri
MADv4f32rri
FMA_RTEv4f32rri
MAD_RTEv4f32rri
FMA_RTNv4f32rri
MAD_RTNv4f32rri
CLAMPv4f32rri
LERPv4f32rri
FMA_RTPv4f32rri
MAD_RTPv4f32rri
FMA_RTZv4f32rri
MAD_RTZv4f32rri
FMAf32rri
MADf32rri
FMA_RTEf32rri
MAD_RTEf32rri
FMA_RTNf32rri
MAD_RTNf32rri
CLAMPf32rri
LERPf32rri
FMA_RTPf32rri
MAD_RTPf32rri
FMA_RTZf32rri
MAD_RTZf32rri
SAD32i32rri
SAD32v2i32rri
IMED3v2i32rri
UMED3v2i32rri
IMIN3v2i32rri
UMIN3v2i32rri
IMAX3v2i32rri
UMAX3v2i32rri
IMAD24v2i32rri
UMAD24v2i32rri
SAD16v2i32rri
IMADv2i32rri
UMADv2i32rri
MSADv2i32rri
BFIv2i32rri
SADHIv2i32rri
BYTEALIGNv2i32rri
BITALIGNv2i32rri
U4LERPv2i32rri
IBIT_EXTRACTv2i32rri
UBIT_EXTRACTv2i32rri
IMED3i32rri
UMED3i32rri
IMIN3i32rri
UMIN3i32rri
IMAX3i32rri
UMAX3i32rri
BITALIGN_PAT_3i32rri
IMAD24i32rri
UMAD24i32rri
SAD32v4i32rri
IMED3v4i32rri
UMED3v4i32rri
IMIN3v4i32rri
UMIN3v4i32rri
IMAX3v4i32rri
UMAX3v4i32rri
IMAD24v4i32rri
UMAD24v4i32rri
SAD16v4i32rri
IMADv4i32rri
UMADv4i32rri
MSADv4i32rri
BFIv4i32rri
SADHIv4i32rri
BYTEALIGNv4i32rri
BITALIGNv4i32rri
U4LERPv4i32rri
IBIT_EXTRACTv4i32rri
UBIT_EXTRACTv4i32rri
SAD16i32rri
IMADi32rri
UMADi32rri
MSADi32rri
BFIi32rri
SADHIi32rri
BYTEALIGNi32rri
BITALIGNi32rri
U4LERPi32rri
IBIT_EXTRACTi32rri
UBIT_EXTRACTi32rri
DFMAv2f64rri
MADv2f64rri
DFMAf64rri
MADf64rri
MAD_RTEf64rri
MAD_RTNf64rri
MAD_RTPf64rri
MAD_RTZf64rri
SAD32i64rri
SAD32v2i64rri
IMED3v2i64rri
UMED3v2i64rri
IMIN3v2i64rri
UMIN3v2i64rri
IMAX3v2i64rri
UMAX3v2i64rri
IMAD24v2i64rri
UMAD24v2i64rri
SAD16v2i64rri
IMADv2i64rri
UMADv2i64rri
MSADv2i64rri
BFIv2i64rri
SADHIv2i64rri
BYTEALIGNv2i64rri
BITALIGNv2i64rri
U4LERPv2i64rri
IBIT_EXTRACTv2i64rri
UBIT_EXTRACTv2i64rri
IMED3i64rri
UMED3i64rri
IMIN3i64rri
UMIN3i64rri
IMAX3i64rri
UMAX3i64rri
IMAD24i64rri
UMAD24i64rri
SAD16i64rri
IMADi64rri
UMADi64rri
MSADi64rri
MQSADi64rri
BFIi64rri
SADHIi64rri
BYTEALIGNi64rri
BITALIGNi64rri
U4LERPi64rri
IBIT_EXTRACTi64rri
UBIT_EXTRACTi64rri
SAD4rri
SAD32i16rri
SAD32v2i16rri
IMED3v2i16rri
UMED3v2i16rri
IMIN3v2i16rri
UMIN3v2i16rri
IMAX3v2i16rri
UMAX3v2i16rri
IMAD24v2i16rri
UMAD24v2i16rri
SAD16v2i16rri
F16_FMAv2i16rri
IMADv2i16rri
UMADv2i16rri
F16_MADv2i16rri
I16_MADv2i16rri
U16_MADv2i16rri
MSADv2i16rri
F16_FMA_RTEv2i16rri
BFIv2i16rri
SADHIv2i16rri
BYTEALIGNv2i16rri
BITALIGNv2i16rri
F16_FMA_RTNv2i16rri
U4LERPv2i16rri
F16_FMA_RTPv2i16rri
IBIT_EXTRACTv2i16rri
UBIT_EXTRACTv2i16rri
F16_FMA_RTZv2i16rri
IMED3i16rri
UMED3i16rri
IMIN3i16rri
UMIN3i16rri
IMAX3i16rri
UMAX3i16rri
IMAD24i16rri
UMAD24i16rri
SAD32v4i16rri
IMED3v4i16rri
UMED3v4i16rri
IMIN3v4i16rri
UMIN3v4i16rri
IMAX3v4i16rri
UMAX3v4i16rri
IMAD24v4i16rri
UMAD24v4i16rri
SAD16v4i16rri
F16_FMAv4i16rri
IMADv4i16rri
UMADv4i16rri
F16_MADv4i16rri
I16_MADv4i16rri
U16_MADv4i16rri
MSADv4i16rri
F16_FMA_RTEv4i16rri
BFIv4i16rri
SADHIv4i16rri
BYTEALIGNv4i16rri
BITALIGNv4i16rri
F16_FMA_RTNv4i16rri
U4LERPv4i16rri
F16_FMA_RTPv4i16rri
IBIT_EXTRACTv4i16rri
UBIT_EXTRACTv4i16rri
F16_FMA_RTZv4i16rri
SAD16i16rri
F16_FMAi16rri
IMADi16rri
UMADi16rri
F16_MADi16rri
I16_MADi16rri
U16_MADi16rri
MSADi16rri
F16_FMA_RTEi16rri
BFIi16rri
SADHIi16rri
BYTEALIGNi16rri
BITALIGNi16rri
F16_FMA_RTNi16rri
U4LERPi16rri
F16_FMA_RTPi16rri
IBIT_EXTRACTi16rri
UBIT_EXTRACTi16rri
F16_FMA_RTZi16rri
SAD32i8rri
SAD32v2i8rri
IMED3v2i8rri
UMED3v2i8rri
IMIN3v2i8rri
UMIN3v2i8rri
IMAX3v2i8rri
UMAX3v2i8rri
IMAD24v2i8rri
UMAD24v2i8rri
SAD16v2i8rri
IMADv2i8rri
UMADv2i8rri
MSADv2i8rri
BFIv2i8rri
SADHIv2i8rri
BYTEALIGNv2i8rri
BITALIGNv2i8rri
U4LERPv2i8rri
IBIT_EXTRACTv2i8rri
UBIT_EXTRACTv2i8rri
IMED3i8rri
UMED3i8rri
IMIN3i8rri
UMIN3i8rri
IMAX3i8rri
UMAX3i8rri
IMAD24i8rri
UMAD24i8rri
SAD32v4i8rri
IMED3v4i8rri
UMED3v4i8rri
IMIN3v4i8rri
UMIN3v4i8rri
IMAX3v4i8rri
UMAX3v4i8rri
IMAD24v4i8rri
UMAD24v4i8rri
SAD16v4i8rri
IMADv4i8rri
UMADv4i8rri
MSADv4i8rri
BFIv4i8rri
SADHIv4i8rri
BYTEALIGNv4i8rri
BITALIGNv4i8rri
U4LERPv4i8rri
IBIT_EXTRACTv4i8rri
UBIT_EXTRACTv4i8rri
SAD16i8rri
IMADi8rri
UMADi8rri
MSADi8rri
BFIi8rri
SADHIi8rri
BYTEALIGNi8rri
BITALIGNi8rri
U4LERPi8rri
IBIT_EXTRACTi8rri
UBIT_EXTRACTi8rri
DP2ADDrri
BITALIGN_PAT_1i32irri
BITALIGN_PAT_2i32irri
UBIT_INSERTv2i32irri
UBIT_INSERTv4i32irri
UBIT_INSERTi32irri
RECEIVELANEirri
BITALIGN_PAT_1i32rrri
BITALIGN_PAT_2i32rrri
UBIT_INSERTv2i32rrri
UBIT_INSERTv4i32rrri
UBIT_INSERTi32rrri
RECEIVELANErrri
CONST_COPYv4imm
ADDi64rp
ADDrp
MEDIA_UNPACK_0r
MEDIA_UNPACK_1r
UNPACK_B0f32r
UNPACK_PAT0f32r
UNPACK_B1f32r
UNPACK_PAT1f32r
UNPACK_PAT0_1f32r
UNPACK_PAT1_1f32r
UNPACK_PAT2_1f32r
UNPACK_PAT3_1f32r
UNPACK_B2f32r
UNPACK_PAT2f32r
UNPACK_B0v2f32r
UNPACK_B1v2f32r
UNPACK_B2v2f32r
UNPACK_B3v2f32r
PRIVATELOAD64v2f32r
GLOBALLOAD64v2f32r
LOCALLOAD64v2f32r
CPOOLLOAD64v2f32r
REGIONLOAD64v2f32r
FLATLOAD64v2f32r
CONSTANTLOAD64v2f32r
PRIVATEAEXTLOAD64v2f32r
GLOBALAEXTLOAD64v2f32r
LOCALAEXTLOAD64v2f32r
CPOOLAEXTLOAD64v2f32r
REGIONAEXTLOAD64v2f32r
FLATAEXTLOAD64v2f32r
CONSTANTAEXTLOAD64v2f32r
PRIVATESEXTLOAD64v2f32r
GLOBALSEXTLOAD64v2f32r
LOCALSEXTLOAD64v2f32r
CPOOLSEXTLOAD64v2f32r
REGIONSEXTLOAD64v2f32r
FLATSEXTLOAD64v2f32r
CONSTANTSEXTLOAD64v2f32r
PRIVATEZEXTLOAD64v2f32r
GLOBALZEXTLOAD64v2f32r
LOCALZEXTLOAD64v2f32r
CPOOLZEXTLOAD64v2f32r
REGIONZEXTLOAD64v2f32r
FLATZEXTLOAD64v2f32r
CONSTANTZEXTLOAD64v2f32r
PRIVATESTORE64v2f32r
GLOBALSTORE64v2f32r
LOCALSTORE64v2f32r
REGIONSTORE64v2f32r
FLATSTORE64v2f32r
FRACv2f32r
LOGVECv2f32r
SINVECv2f32r
EXPVECv2f32r
RSQVECv2f32r
COSVECv2f32r
SQRTVECv2f32r
TRUNCv2f32r
PRIVATELOADv2f32r
GLOBALLOADv2f32r
LOCALLOADv2f32r
CPOOLLOADv2f32r
REGIONLOADv2f32r
FLATLOADv2f32r
CONSTANTLOADv2f32r
PRIVATEAEXTLOADv2f32r
GLOBALAEXTLOADv2f32r
LOCALAEXTLOADv2f32r
CPOOLAEXTLOADv2f32r
REGIONAEXTLOADv2f32r
FLATAEXTLOADv2f32r
CONSTANTAEXTLOADv2f32r
PRIVATESEXTLOADv2f32r
GLOBALSEXTLOADv2f32r
LOCALSEXTLOADv2f32r
CPOOLSEXTLOADv2f32r
REGIONSEXTLOADv2f32r
FLATSEXTLOADv2f32r
CONSTANTSEXTLOADv2f32r
PRIVATEZEXTLOADv2f32r
GLOBALZEXTLOADv2f32r
LOCALZEXTLOADv2f32r
CPOOLZEXTLOADv2f32r
REGIONZEXTLOADv2f32r
FLATZEXTLOADv2f32r
CONSTANTZEXTLOADv2f32r
PRIVATESTOREv2f32r
GLOBALSTOREv2f32r
LOCALSTOREv2f32r
REGIONSTOREv2f32r
FLATSTOREv2f32r
VCREATEv2f32r
DTOF_RTEv2f32r
ROUND_NEGINFv2f32r
ROUND_POSINFv2f32r
HTOFv2f32r
ITOFv2f32r
UTOFv2f32r
NEGv2f32r
LENGTHv2f32r
CEILv2f32r
SIGNv2f32r
DTOF_RTNv2f32r
ROUND_ZEROv2f32r
DTOF_RTPv2f32r
FLOORv2f32r
FABSv2f32r
VEXTRACTv2f32r
FREXP_MANTv2f32r
ROUND_NEARESTv2f32r
NEARBYv2f32r
FTZv2f32r
DTOF_RTZv2f32r
UNPACK_B3f32r
UNPACK_PAT3f32r
PRIVATELOAD64f32r
GLOBALLOAD64f32r
LOCALLOAD64f32r
CPOOLLOAD64f32r
REGIONLOAD64f32r
FLATLOAD64f32r
CONSTANTLOAD64f32r
PRIVATEAEXTLOAD64f32r
GLOBALAEXTLOAD64f32r
LOCALAEXTLOAD64f32r
CPOOLAEXTLOAD64f32r
REGIONAEXTLOAD64f32r
FLATAEXTLOAD64f32r
CONSTANTAEXTLOAD64f32r
PRIVATESEXTLOAD64f32r
GLOBALSEXTLOAD64f32r
LOCALSEXTLOAD64f32r
CPOOLSEXTLOAD64f32r
REGIONSEXTLOAD64f32r
FLATSEXTLOAD64f32r
CONSTANTSEXTLOAD64f32r
PRIVATEZEXTLOAD64f32r
GLOBALZEXTLOAD64f32r
LOCALZEXTLOAD64f32r
CPOOLZEXTLOAD64f32r
REGIONZEXTLOAD64f32r
FLATZEXTLOAD64f32r
CONSTANTZEXTLOAD64f32r
PRIVATESTORE64f32r
GLOBALSTORE64f32r
LOCALSTORE64f32r
REGIONSTORE64f32r
FLATSTORE64f32r
PRIVATETRUNCSTORE64v2f64f32r
GLOBALTRUNCSTORE64v2f64f32r
LOCALTRUNCSTORE64v2f64f32r
REGIONTRUNCSTORE64v2f64f32r
FLATSTORE64v2f64f32r
PRIVATETRUNCSTOREv2f64f32r
GLOBALTRUNCSTOREv2f64f32r
LOCALTRUNCSTOREv2f64f32r
REGIONTRUNCSTOREv2f64f32r
FLATTRUNCSTOREv2f64f32r
PRIVATETRUNCSTORE64f64f32r
GLOBALTRUNCSTORE64f64f32r
LOCALTRUNCSTORE64f64f32r
REGIONTRUNCSTORE64f64f32r
FLATSTORE64f64f32r
PRIVATETRUNCSTOREf64f32r
GLOBALTRUNCSTOREf64f32r
LOCALTRUNCSTOREf64f32r
REGIONTRUNCSTOREf64f32r
FLATTRUNCSTOREf64f32r
UNPACK_B0v4f32r
UNPACK_B1v4f32r
UNPACK_B2v4f32r
UNPACK_B3v4f32r
PRIVATELOAD64v4f32r
GLOBALLOAD64v4f32r
LOCALLOAD64v4f32r
CPOOLLOAD64v4f32r
REGIONLOAD64v4f32r
FLATLOAD64v4f32r
CONSTANTLOAD64v4f32r
PRIVATEAEXTLOAD64v4f32r
GLOBALAEXTLOAD64v4f32r
LOCALAEXTLOAD64v4f32r
CPOOLAEXTLOAD64v4f32r
REGIONAEXTLOAD64v4f32r
FLATAEXTLOAD64v4f32r
CONSTANTAEXTLOAD64v4f32r
PRIVATESEXTLOAD64v4f32r
GLOBALSEXTLOAD64v4f32r
LOCALSEXTLOAD64v4f32r
CPOOLSEXTLOAD64v4f32r
REGIONSEXTLOAD64v4f32r
FLATSEXTLOAD64v4f32r
CONSTANTSEXTLOAD64v4f32r
PRIVATEZEXTLOAD64v4f32r
GLOBALZEXTLOAD64v4f32r
LOCALZEXTLOAD64v4f32r
CPOOLZEXTLOAD64v4f32r
REGIONZEXTLOAD64v4f32r
FLATZEXTLOAD64v4f32r
CONSTANTZEXTLOAD64v4f32r
PRIVATESTORE64v4f32r
GLOBALSTORE64v4f32r
LOCALSTORE64v4f32r
REGIONSTORE64v4f32r
FLATSTORE64v4f32r
FRACv4f32r
LOGVECv4f32r
SINVECv4f32r
EXPVECv4f32r
RSQVECv4f32r
COSVECv4f32r
SQRTVECv4f32r
TRUNCv4f32r
PRIVATELOADv4f32r
GLOBALLOADv4f32r
LOCALLOADv4f32r
CPOOLLOADv4f32r
REGIONLOADv4f32r
FLATLOADv4f32r
CONSTANTLOADv4f32r
PRIVATEAEXTLOADv4f32r
GLOBALAEXTLOADv4f32r
LOCALAEXTLOADv4f32r
CPOOLAEXTLOADv4f32r
REGIONAEXTLOADv4f32r
FLATAEXTLOADv4f32r
CONSTANTAEXTLOADv4f32r
PRIVATESEXTLOADv4f32r
GLOBALSEXTLOADv4f32r
LOCALSEXTLOADv4f32r
CPOOLSEXTLOADv4f32r
REGIONSEXTLOADv4f32r
FLATSEXTLOADv4f32r
CONSTANTSEXTLOADv4f32r
PRIVATEZEXTLOADv4f32r
GLOBALZEXTLOADv4f32r
LOCALZEXTLOADv4f32r
CPOOLZEXTLOADv4f32r
REGIONZEXTLOADv4f32r
FLATZEXTLOADv4f32r
CONSTANTZEXTLOADv4f32r
PRIVATESTOREv4f32r
GLOBALSTOREv4f32r
LOCALSTOREv4f32r
REGIONSTOREv4f32r
FLATSTOREv4f32r
VCREATEv4f32r
ROUND_NEGINFv4f32r
ROUND_POSINFv4f32r
HTOFv4f32r
ITOFv4f32r
UTOFv4f32r
NEGv4f32r
LENGTHv4f32r
CEILv4f32r
SIGNv4f32r
ROUND_ZEROv4f32r
FLOORv4f32r
FABSv4f32r
VEXTRACTv4f32r
FREXP_MANTv4f32r
ROUND_NEARESTv4f32r
NEARBYv4f32r
FTZv4f32r
FRACf32r
LOGVECf32r
SINVECf32r
EXPVECf32r
RSQVECf32r
COSVECf32r
SQRTVECf32r
TRUNCf32r
PRIVATELOADf32r
GLOBALLOADf32r
LOCALLOADf32r
CPOOLLOADf32r
REGIONLOADf32r
FLATLOADf32r
CONSTANTLOADf32r
PRIVATEAEXTLOADf32r
GLOBALAEXTLOADf32r
LOCALAEXTLOADf32r
CPOOLAEXTLOADf32r
REGIONAEXTLOADf32r
FLATAEXTLOADf32r
CONSTANTAEXTLOADf32r
PRIVATESEXTLOADf32r
GLOBALSEXTLOADf32r
LOCALSEXTLOADf32r
CPOOLSEXTLOADf32r
REGIONSEXTLOADf32r
FLATSEXTLOADf32r
CONSTANTSEXTLOADf32r
PRIVATEZEXTLOADf32r
GLOBALZEXTLOADf32r
LOCALZEXTLOADf32r
CPOOLZEXTLOADf32r
REGIONZEXTLOADf32r
FLATZEXTLOADf32r
CONSTANTZEXTLOADf32r
PRIVATESTOREf32r
GLOBALSTOREf32r
LOCALSTOREf32r
REGIONSTOREf32r
FLATSTOREf32r
DTOF_RTEf32r
ROUND_NEGINFf32r
ROUND_POSINFf32r
HTOFf32r
ITOFf32r
UTOFf32r
NEGf32r
LOGf32r
LENGTHf32r
CEILf32r
ATANf32r
SIGNf32r
ASINf32r
LNf32r
DTOF_RTNf32r
EXNf32r
ROUND_ZEROf32r
DTOF_RTPf32r
EXPf32r
RSQf32r
FLOORf32r
FABSf32r
ACOSf32r
FREXP_MANTf32r
SQRTf32r
ROUND_NEARESTf32r
NEARBYf32r
CONTINUE_LOGICALZf32r
IF_LOGICALZf32r
BREAK_LOGICALZf32r
CONTINUE_LOGICALNZf32r
IF_LOGICALNZf32r
BREAK_LOGICALNZf32r
FTZf32r
DTOF_RTZf32r
PRIVATELOAD64v2i32r
GLOBALLOAD64v2i32r
LOCALLOAD64v2i32r
CPOOLLOAD64v2i32r
REGIONLOAD64v2i32r
FLATLOAD64v2i32r
CONSTANTLOAD64v2i32r
PRIVATEAEXTLOAD64v2i32r
GLOBALAEXTLOAD64v2i32r
LOCALAEXTLOAD64v2i32r
CPOOLAEXTLOAD64v2i32r
REGIONAEXTLOAD64v2i32r
FLATAEXTLOAD64v2i32r
CONSTANTAEXTLOAD64v2i32r
PRIVATESEXTLOAD64v2i32r
GLOBALSEXTLOAD64v2i32r
LOCALSEXTLOAD64v2i32r
CPOOLSEXTLOAD64v2i32r
REGIONSEXTLOAD64v2i32r
FLATSEXTLOAD64v2i32r
CONSTANTSEXTLOAD64v2i32r
PRIVATEZEXTLOAD64v2i32r
GLOBALZEXTLOAD64v2i32r
LOCALZEXTLOAD64v2i32r
CPOOLZEXTLOAD64v2i32r
REGIONZEXTLOAD64v2i32r
FLATZEXTLOAD64v2i32r
CONSTANTZEXTLOAD64v2i32r
PRIVATESTORE64v2i32r
GLOBALSTORE64v2i32r
LOCALSTORE64v2i32r
REGIONSTORE64v2i32r
FLATSTORE64v2i32r
LDS32LOADv2i32r
LDS64LOADv2i32r
PRIVATELOADv2i32r
GLOBALLOADv2i32r
LOCALLOADv2i32r
CPOOLLOADv2i32r
REGIONLOADv2i32r
FLATLOADv2i32r
CONSTANTLOADv2i32r
PRIVATEAEXTLOADv2i32r
GLOBALAEXTLOADv2i32r
LOCALAEXTLOADv2i32r
CPOOLAEXTLOADv2i32r
REGIONAEXTLOADv2i32r
FLATAEXTLOADv2i32r
CONSTANTAEXTLOADv2i32r
PRIVATESEXTLOADv2i32r
GLOBALSEXTLOADv2i32r
LOCALSEXTLOADv2i32r
CPOOLSEXTLOADv2i32r
REGIONSEXTLOADv2i32r
FLATSEXTLOADv2i32r
CONSTANTSEXTLOADv2i32r
PRIVATEZEXTLOADv2i32r
GLOBALZEXTLOADv2i32r
LOCALZEXTLOADv2i32r
CPOOLZEXTLOADv2i32r
REGIONZEXTLOADv2i32r
FLATZEXTLOADv2i32r
CONSTANTZEXTLOADv2i32r
LDS32STOREv2i32r
LDS64STOREv2i32r
PRIVATESTOREv2i32r
GLOBALSTOREv2i32r
LOCALSTOREv2i32r
REGIONSTOREv2i32r
FLATSTOREv2i32r
UBIT_REVERSEv2i32r
VCREATEv2i32r
NEGv2i32r
FFB_HIv2i32r
FTOIv2i32r
FTOI_RPIv2i32r
FFB_SGNv2i32r
FFB_LOv2i32r
DFREXP_EXPv2i32r
FTOI_FLRv2i32r
ABSv2i32r
VEXTRACTv2i32r
BITCOUNTv2i32r
NOTv2i32r
FTOUv2i32r
POISONVv2i32r
PRIVATELOAD64i32r
GLOBALLOAD64i32r
LOCALLOAD64i32r
CPOOLLOAD64i32r
REGIONLOAD64i32r
FLATLOAD64i32r
CONSTANTLOAD64i32r
PRIVATEAEXTLOAD64i32r
GLOBALAEXTLOAD64i32r
LOCALAEXTLOAD64i32r
CPOOLAEXTLOAD64i32r
REGIONAEXTLOAD64i32r
FLATAEXTLOAD64i32r
CONSTANTAEXTLOAD64i32r
PRIVATESEXTLOAD64i32r
GLOBALSEXTLOAD64i32r
LOCALSEXTLOAD64i32r
CPOOLSEXTLOAD64i32r
REGIONSEXTLOAD64i32r
FLATSEXTLOAD64i32r
CONSTANTSEXTLOAD64i32r
PRIVATEZEXTLOAD64i32r
GLOBALZEXTLOAD64i32r
LOCALZEXTLOAD64i32r
CPOOLZEXTLOAD64i32r
REGIONZEXTLOAD64i32r
FLATZEXTLOAD64i32r
CONSTANTZEXTLOAD64i32r
PRIVATESTORE64i32r
GLOBALSTORE64i32r
LOCALSTORE64i32r
REGIONSTORE64i32r
FLATSTORE64i32r
PRIVATETRUNCSTORE64v2i64i32r
GLOBALTRUNCSTORE64v2i64i32r
LOCALTRUNCSTORE64v2i64i32r
REGIONTRUNCSTORE64v2i64i32r
FLATSTORE64v2i64i32r
PRIVATETRUNCSTOREv2i64i32r
GLOBALTRUNCSTOREv2i64i32r
LOCALTRUNCSTOREv2i64i32r
REGIONTRUNCSTOREv2i64i32r
FLATTRUNCSTOREv2i64i32r
PRIVATETRUNCSTORE64i64i32r
GLOBALTRUNCSTORE64i64i32r
LOCALTRUNCSTORE64i64i32r
REGIONTRUNCSTORE64i64i32r
FLATSTORE64i64i32r
PRIVATETRUNCSTOREi64i32r
GLOBALTRUNCSTOREi64i32r
LOCALTRUNCSTOREi64i32r
REGIONTRUNCSTOREi64i32r
FLATTRUNCSTOREi64i32r
PRIVATELOAD64v4i32r
GLOBALLOAD64v4i32r
LOCALLOAD64v4i32r
CPOOLLOAD64v4i32r
REGIONLOAD64v4i32r
FLATLOAD64v4i32r
CONSTANTLOAD64v4i32r
PRIVATEAEXTLOAD64v4i32r
GLOBALAEXTLOAD64v4i32r
LOCALAEXTLOAD64v4i32r
CPOOLAEXTLOAD64v4i32r
REGIONAEXTLOAD64v4i32r
FLATAEXTLOAD64v4i32r
CONSTANTAEXTLOAD64v4i32r
PRIVATESEXTLOAD64v4i32r
GLOBALSEXTLOAD64v4i32r
LOCALSEXTLOAD64v4i32r
CPOOLSEXTLOAD64v4i32r
REGIONSEXTLOAD64v4i32r
FLATSEXTLOAD64v4i32r
CONSTANTSEXTLOAD64v4i32r
PRIVATEZEXTLOAD64v4i32r
GLOBALZEXTLOAD64v4i32r
LOCALZEXTLOAD64v4i32r
CPOOLZEXTLOAD64v4i32r
REGIONZEXTLOAD64v4i32r
FLATZEXTLOAD64v4i32r
CONSTANTZEXTLOAD64v4i32r
PRIVATESTORE64v4i32r
GLOBALSTORE64v4i32r
LOCALSTORE64v4i32r
REGIONSTORE64v4i32r
FLATSTORE64v4i32r
LDS32LOADv4i32r
LDS64LOADv4i32r
PRIVATELOADv4i32r
GLOBALLOADv4i32r
LOCALLOADv4i32r
CPOOLLOADv4i32r
REGIONLOADv4i32r
FLATLOADv4i32r
CONSTANTLOADv4i32r
PRIVATEAEXTLOADv4i32r
GLOBALAEXTLOADv4i32r
LOCALAEXTLOADv4i32r
CPOOLAEXTLOADv4i32r
REGIONAEXTLOADv4i32r
FLATAEXTLOADv4i32r
CONSTANTAEXTLOADv4i32r
PRIVATESEXTLOADv4i32r
GLOBALSEXTLOADv4i32r
LOCALSEXTLOADv4i32r
CPOOLSEXTLOADv4i32r
REGIONSEXTLOADv4i32r
FLATSEXTLOADv4i32r
CONSTANTSEXTLOADv4i32r
PRIVATEZEXTLOADv4i32r
GLOBALZEXTLOADv4i32r
LOCALZEXTLOADv4i32r
CPOOLZEXTLOADv4i32r
REGIONZEXTLOADv4i32r
FLATZEXTLOADv4i32r
CONSTANTZEXTLOADv4i32r
LDS32STOREv4i32r
LDS64STOREv4i32r
PRIVATESTOREv4i32r
GLOBALSTOREv4i32r
LOCALSTOREv4i32r
REGIONSTOREv4i32r
FLATSTOREv4i32r
UBIT_REVERSEv4i32r
VCREATEv4i32r
NEGv4i32r
FFB_HIv4i32r
FTOIv4i32r
FTOI_RPIv4i32r
FFB_SGNv4i32r
FFB_LOv4i32r
FREXP_EXPv4i32r
FTOI_FLRv4i32r
ABSv4i32r
VEXTRACTv4i32r
BITCOUNTv4i32r
NOTv4i32r
FTOUv4i32r
POISONVv4i32r
GDS32LOADi32r
LDS32LOADi32r
GDS64LOADi32r
LDS64LOADi32r
PRIVATELOADi32r
GLOBALLOADi32r
LOCALLOADi32r
CPOOLLOADi32r
REGIONLOADi32r
FLATLOADi32r
CONSTANTLOADi32r
PRIVATEAEXTLOADi32r
GLOBALAEXTLOADi32r
LOCALAEXTLOADi32r
CPOOLAEXTLOADi32r
REGIONAEXTLOADi32r
FLATAEXTLOADi32r
CONSTANTAEXTLOADi32r
PRIVATESEXTLOADi32r
GLOBALSEXTLOADi32r
LOCALSEXTLOADi32r
CPOOLSEXTLOADi32r
REGIONSEXTLOADi32r
FLATSEXTLOADi32r
CONSTANTSEXTLOADi32r
PRIVATEZEXTLOADi32r
GLOBALZEXTLOADi32r
LOCALZEXTLOADi32r
CPOOLZEXTLOADi32r
REGIONZEXTLOADi32r
FLATZEXTLOADi32r
CONSTANTZEXTLOADi32r
GDS32STOREi32r
LDS32STOREi32r
GDS64STOREi32r
LDS64STOREi32r
PRIVATESTOREi32r
GLOBALSTOREi32r
LOCALSTOREi32r
REGIONSTOREi32r
FLATSTOREi32r
UBIT_REVERSEi32r
NEGi32r
FFB_HIi32r
FTOIi32r
FTOI_RPIi32r
FFB_SGNi32r
FFB_LOi32r
DFREXP_EXPi32r
FTOI_FLRi32r
ABSi32r
BITCOUNTi32r
NOTi32r
FTOUi32r
POISONVi32r
CONTINUE_LOGICALZi32r
IF_LOGICALZi32r
BREAK_LOGICALZi32r
CONTINUE_LOGICALNZi32r
IF_LOGICALNZi32r
BREAK_LOGICALNZi32r
MEDIA_UNPACK_2r
MEDIA_UNPACK_3r
PRIVATELOAD64v2f64r
GLOBALLOAD64v2f64r
LOCALLOAD64v2f64r
CPOOLLOAD64v2f64r
REGIONLOAD64v2f64r
FLATLOAD64v2f64r
CONSTANTLOAD64v2f64r
PRIVATEAEXTLOAD64v2f64r
GLOBALAEXTLOAD64v2f64r
LOCALAEXTLOAD64v2f64r
CPOOLAEXTLOAD64v2f64r
REGIONAEXTLOAD64v2f64r
FLATAEXTLOAD64v2f64r
CONSTANTAEXTLOAD64v2f64r
PRIVATESEXTLOAD64v2f64r
GLOBALSEXTLOAD64v2f64r
LOCALSEXTLOAD64v2f64r
CPOOLSEXTLOAD64v2f64r
REGIONSEXTLOAD64v2f64r
FLATSEXTLOAD64v2f64r
CONSTANTSEXTLOAD64v2f64r
PRIVATEZEXTLOAD64v2f64r
GLOBALZEXTLOAD64v2f64r
LOCALZEXTLOAD64v2f64r
CPOOLZEXTLOAD64v2f64r
REGIONZEXTLOAD64v2f64r
FLATZEXTLOAD64v2f64r
CONSTANTZEXTLOAD64v2f64r
PRIVATESTORE64v2f64r
GLOBALSTORE64v2f64r
LOCALSTORE64v2f64r
REGIONSTORE64v2f64r
FLATSTORE64v2f64r
FRACv2f64r
TRUNCv2f64r
PRIVATELOADv2f64r
GLOBALLOADv2f64r
LOCALLOADv2f64r
CPOOLLOADv2f64r
REGIONLOADv2f64r
FLATLOADv2f64r
CONSTANTLOADv2f64r
PRIVATEAEXTLOADv2f64r
GLOBALAEXTLOADv2f64r
LOCALAEXTLOADv2f64r
CPOOLAEXTLOADv2f64r
REGIONAEXTLOADv2f64r
FLATAEXTLOADv2f64r
CONSTANTAEXTLOADv2f64r
PRIVATESEXTLOADv2f64r
GLOBALSEXTLOADv2f64r
LOCALSEXTLOADv2f64r
CPOOLSEXTLOADv2f64r
REGIONSEXTLOADv2f64r
FLATSEXTLOADv2f64r
CONSTANTSEXTLOADv2f64r
PRIVATEZEXTLOADv2f64r
GLOBALZEXTLOADv2f64r
LOCALZEXTLOADv2f64r
CPOOLZEXTLOADv2f64r
REGIONZEXTLOADv2f64r
FLATZEXTLOADv2f64r
CONSTANTZEXTLOADv2f64r
PRIVATESTOREv2f64r
GLOBALSTOREv2f64r
LOCALSTOREv2f64r
REGIONSTOREv2f64r
FLATSTOREv2f64r
VCREATEv2f64r
ROUND_NEGINFv2f64r
ROUND_POSINFv2f64r
NEGv2f64r
DHIv2f64r
CEILv2f64r
DLOv2f64r
ROUND_ZEROv2f64r
FLOORv2f64r
DABSv2f64r
VEXTRACTv2f64r
FREXP_MANTv2f64r
SQRTv2f64r
ROUND_NEARESTv2f64r
NEARBYv2f64r
PRIVATELOAD64f64r
GLOBALLOAD64f64r
LOCALLOAD64f64r
CPOOLLOAD64f64r
REGIONLOAD64f64r
FLATLOAD64f64r
CONSTANTLOAD64f64r
PRIVATEAEXTLOAD64f64r
GLOBALAEXTLOAD64f64r
LOCALAEXTLOAD64f64r
CPOOLAEXTLOAD64f64r
REGIONAEXTLOAD64f64r
FLATAEXTLOAD64f64r
CONSTANTAEXTLOAD64f64r
PRIVATESEXTLOAD64f64r
GLOBALSEXTLOAD64f64r
LOCALSEXTLOAD64f64r
CPOOLSEXTLOAD64f64r
REGIONSEXTLOAD64f64r
FLATSEXTLOAD64f64r
CONSTANTSEXTLOAD64f64r
PRIVATEZEXTLOAD64f64r
GLOBALZEXTLOAD64f64r
LOCALZEXTLOAD64f64r
CPOOLZEXTLOAD64f64r
REGIONZEXTLOAD64f64r
FLATZEXTLOAD64f64r
CONSTANTZEXTLOAD64f64r
PRIVATESTORE64f64r
GLOBALSTORE64f64r
LOCALSTORE64f64r
REGIONSTORE64f64r
FLATSTORE64f64r
FRACf64r
TRUNCf64r
PRIVATELOADf64r
GLOBALLOADf64r
LOCALLOADf64r
CPOOLLOADf64r
REGIONLOADf64r
FLATLOADf64r
CONSTANTLOADf64r
PRIVATEAEXTLOADf64r
GLOBALAEXTLOADf64r
LOCALAEXTLOADf64r
CPOOLAEXTLOADf64r
REGIONAEXTLOADf64r
FLATAEXTLOADf64r
CONSTANTAEXTLOADf64r
PRIVATESEXTLOADf64r
GLOBALSEXTLOADf64r
LOCALSEXTLOADf64r
CPOOLSEXTLOADf64r
REGIONSEXTLOADf64r
FLATSEXTLOADf64r
CONSTANTSEXTLOADf64r
PRIVATEZEXTLOADf64r
GLOBALZEXTLOADf64r
LOCALZEXTLOADf64r
CPOOLZEXTLOADf64r
REGIONZEXTLOADf64r
FLATZEXTLOADf64r
CONSTANTZEXTLOADf64r
PRIVATESTOREf64r
GLOBALSTOREf64r
LOCALSTOREf64r
REGIONSTOREf64r
FLATSTOREf64r
ROUND_NEGINFf64r
ROUND_POSINFf64r
NEGf64r
DHIf64r
CEILf64r
DLOf64r
ROUND_ZEROf64r
RCPf64r
FREXPf64r
RSQf64r
FLOORf64r
DABSf64r
FREXP_MANTf64r
SQRTf64r
ROUND_NEARESTf64r
NEARBYf64r
CONTINUE_LOGICALZf64r
IF_LOGICALZf64r
BREAK_LOGICALZf64r
CONTINUE_LOGICALNZf64r
IF_LOGICALNZf64r
BREAK_LOGICALNZf64r
PRIVATELOAD64v2i64r
GLOBALLOAD64v2i64r
LOCALLOAD64v2i64r
CPOOLLOAD64v2i64r
REGIONLOAD64v2i64r
FLATLOAD64v2i64r
CONSTANTLOAD64v2i64r
PRIVATEAEXTLOAD64v2i64r
GLOBALAEXTLOAD64v2i64r
LOCALAEXTLOAD64v2i64r
CPOOLAEXTLOAD64v2i64r
REGIONAEXTLOAD64v2i64r
FLATAEXTLOAD64v2i64r
CONSTANTAEXTLOAD64v2i64r
PRIVATESEXTLOAD64v2i64r
GLOBALSEXTLOAD64v2i64r
LOCALSEXTLOAD64v2i64r
CPOOLSEXTLOAD64v2i64r
REGIONSEXTLOAD64v2i64r
FLATSEXTLOAD64v2i64r
CONSTANTSEXTLOAD64v2i64r
PRIVATEZEXTLOAD64v2i64r
GLOBALZEXTLOAD64v2i64r
LOCALZEXTLOAD64v2i64r
CPOOLZEXTLOAD64v2i64r
REGIONZEXTLOAD64v2i64r
FLATZEXTLOAD64v2i64r
CONSTANTZEXTLOAD64v2i64r
PRIVATESTORE64v2i64r
GLOBALSTORE64v2i64r
LOCALSTORE64v2i64r
REGIONSTORE64v2i64r
FLATSTORE64v2i64r
PRIVATELOADv2i64r
GLOBALLOADv2i64r
LOCALLOADv2i64r
CPOOLLOADv2i64r
REGIONLOADv2i64r
FLATLOADv2i64r
CONSTANTLOADv2i64r
PRIVATEAEXTLOADv2i64r
GLOBALAEXTLOADv2i64r
LOCALAEXTLOADv2i64r
CPOOLAEXTLOADv2i64r
REGIONAEXTLOADv2i64r
FLATAEXTLOADv2i64r
CONSTANTAEXTLOADv2i64r
PRIVATESEXTLOADv2i64r
GLOBALSEXTLOADv2i64r
LOCALSEXTLOADv2i64r
CPOOLSEXTLOADv2i64r
REGIONSEXTLOADv2i64r
FLATSEXTLOADv2i64r
CONSTANTSEXTLOADv2i64r
PRIVATEZEXTLOADv2i64r
GLOBALZEXTLOADv2i64r
LOCALZEXTLOADv2i64r
CPOOLZEXTLOADv2i64r
REGIONZEXTLOADv2i64r
FLATZEXTLOADv2i64r
CONSTANTZEXTLOADv2i64r
PRIVATESTOREv2i64r
GLOBALSTOREv2i64r
LOCALSTOREv2i64r
REGIONSTOREv2i64r
FLATSTOREv2i64r
UBIT_REVERSEv2i64r
VCREATEv2i64r
NEGv2i64r
LHIv2i64r
FFB_HIv2i64r
FFB_SGNv2i64r
LLOv2i64r
FFB_LOv2i64r
ABSv2i64r
VEXTRACTv2i64r
BITCOUNTv2i64r
NOTv2i64r
POISONVv2i64r
PRIVATELOAD64i64r
GLOBALLOAD64i64r
LOCALLOAD64i64r
CPOOLLOAD64i64r
REGIONLOAD64i64r
FLATLOAD64i64r
CONSTANTLOAD64i64r
PRIVATEAEXTLOAD64i64r
GLOBALAEXTLOAD64i64r
LOCALAEXTLOAD64i64r
CPOOLAEXTLOAD64i64r
REGIONAEXTLOAD64i64r
FLATAEXTLOAD64i64r
CONSTANTAEXTLOAD64i64r
PRIVATESEXTLOAD64i64r
GLOBALSEXTLOAD64i64r
LOCALSEXTLOAD64i64r
CPOOLSEXTLOAD64i64r
REGIONSEXTLOAD64i64r
FLATSEXTLOAD64i64r
CONSTANTSEXTLOAD64i64r
PRIVATEZEXTLOAD64i64r
GLOBALZEXTLOAD64i64r
LOCALZEXTLOAD64i64r
CPOOLZEXTLOAD64i64r
REGIONZEXTLOAD64i64r
FLATZEXTLOAD64i64r
CONSTANTZEXTLOAD64i64r
PRIVATESTORE64i64r
GLOBALSTORE64i64r
LOCALSTORE64i64r
REGIONSTORE64i64r
FLATSTORE64i64r
LDS32LOADi64r
LDS64LOADi64r
PRIVATELOADi64r
GLOBALLOADi64r
LOCALLOADi64r
CPOOLLOADi64r
REGIONLOADi64r
FLATLOADi64r
CONSTANTLOADi64r
PRIVATEAEXTLOADi64r
GLOBALAEXTLOADi64r
LOCALAEXTLOADi64r
CPOOLAEXTLOADi64r
REGIONAEXTLOADi64r
FLATAEXTLOADi64r
CONSTANTAEXTLOADi64r
PRIVATESEXTLOADi64r
GLOBALSEXTLOADi64r
LOCALSEXTLOADi64r
CPOOLSEXTLOADi64r
REGIONSEXTLOADi64r
FLATSEXTLOADi64r
CONSTANTSEXTLOADi64r
PRIVATEZEXTLOADi64r
GLOBALZEXTLOADi64r
LOCALZEXTLOADi64r
CPOOLZEXTLOADi64r
REGIONZEXTLOADi64r
FLATZEXTLOADi64r
CONSTANTZEXTLOADi64r
LDS32STOREi64r
LDS64STOREi64r
PRIVATESTOREi64r
GLOBALSTOREi64r
LOCALSTOREi64r
REGIONSTOREi64r
FLATSTOREi64r
UBIT_REVERSEi64r
NEGi64r
LHIi64r
FFB_HIi64r
FFB_SGNi64r
LLOi64r
FFB_LOi64r
ABSi64r
BITCOUNTi64r
NOTi64r
POISONVi64r
CONTINUE_LOGICALZi64r
IF_LOGICALZi64r
BREAK_LOGICALZi64r
CONTINUE_LOGICALNZi64r
IF_LOGICALNZi64r
BREAK_LOGICALNZi64r
PRIVATELOAD64v2f16r
GLOBALLOAD64v2f16r
LOCALLOAD64v2f16r
CPOOLLOAD64v2f16r
REGIONLOAD64v2f16r
FLATLOAD64v2f16r
CONSTANTLOAD64v2f16r
PRIVATEAEXTLOAD64v2f16r
GLOBALAEXTLOAD64v2f16r
LOCALAEXTLOAD64v2f16r
CPOOLAEXTLOAD64v2f16r
REGIONAEXTLOAD64v2f16r
FLATAEXTLOAD64v2f16r
CONSTANTAEXTLOAD64v2f16r
PRIVATESEXTLOAD64v2f16r
GLOBALSEXTLOAD64v2f16r
LOCALSEXTLOAD64v2f16r
CPOOLSEXTLOAD64v2f16r
REGIONSEXTLOAD64v2f16r
FLATSEXTLOAD64v2f16r
CONSTANTSEXTLOAD64v2f16r
PRIVATEZEXTLOAD64v2f16r
GLOBALZEXTLOAD64v2f16r
LOCALZEXTLOAD64v2f16r
CPOOLZEXTLOAD64v2f16r
REGIONZEXTLOAD64v2f16r
FLATZEXTLOAD64v2f16r
CONSTANTZEXTLOAD64v2f16r
PRIVATESTORE64v2f16r
GLOBALSTORE64v2f16r
LOCALSTORE64v2f16r
REGIONSTORE64v2f16r
FLATSTORE64v2f16r
PRIVATELOADv2f16r
GLOBALLOADv2f16r
LOCALLOADv2f16r
CPOOLLOADv2f16r
REGIONLOADv2f16r
FLATLOADv2f16r
CONSTANTLOADv2f16r
PRIVATEAEXTLOADv2f16r
GLOBALAEXTLOADv2f16r
LOCALAEXTLOADv2f16r
CPOOLAEXTLOADv2f16r
REGIONAEXTLOADv2f16r
FLATAEXTLOADv2f16r
CONSTANTAEXTLOADv2f16r
PRIVATESEXTLOADv2f16r
GLOBALSEXTLOADv2f16r
LOCALSEXTLOADv2f16r
CPOOLSEXTLOADv2f16r
REGIONSEXTLOADv2f16r
FLATSEXTLOADv2f16r
CONSTANTSEXTLOADv2f16r
PRIVATEZEXTLOADv2f16r
GLOBALZEXTLOADv2f16r
LOCALZEXTLOADv2f16r
CPOOLZEXTLOADv2f16r
REGIONZEXTLOADv2f16r
FLATZEXTLOADv2f16r
CONSTANTZEXTLOADv2f16r
PRIVATESTOREv2f16r
GLOBALSTOREv2f16r
LOCALSTOREv2f16r
REGIONSTOREv2f16r
FLATSTOREv2f16r
VCREATEv2f16r
VEXTRACTv2f16r
PRIVATESTORE64f16r
GLOBALSTORE64f16r
LOCALSTORE64f16r
REGIONSTORE64f16r
FLATSTORE64f16r
PRIVATESTOREf16r
GLOBALSTOREf16r
LOCALSTOREf16r
REGIONSTOREf16r
FLATSTOREf16r
CONTINUE_LOGICALZf16r
IF_LOGICALZf16r
BREAK_LOGICALZf16r
CONTINUE_LOGICALNZf16r
IF_LOGICALNZf16r
BREAK_LOGICALNZf16r
PRIVATETRUNCSTORE64v2i32i16r
GLOBALTRUNCSTORE64v2i32i16r
LOCALTRUNCSTORE64v2i32i16r
REGIONTRUNCSTORE64v2i32i16r
FLATSTORE64v2i32i16r
PRIVATETRUNCSTOREv2i32i16r
GLOBALTRUNCSTOREv2i32i16r
LOCALTRUNCSTOREv2i32i16r
REGIONTRUNCSTOREv2i32i16r
FLATTRUNCSTOREv2i32i16r
PRIVATETRUNCSTORE64i32i16r
GLOBALTRUNCSTORE64i32i16r
LOCALTRUNCSTORE64i32i16r
REGIONTRUNCSTORE64i32i16r
FLATSTORE64i32i16r
PRIVATETRUNCSTORE64v4i32i16r
GLOBALTRUNCSTORE64v4i32i16r
LOCALTRUNCSTORE64v4i32i16r
REGIONTRUNCSTORE64v4i32i16r
FLATSTORE64v4i32i16r
PRIVATETRUNCSTOREv4i32i16r
GLOBALTRUNCSTOREv4i32i16r
LOCALTRUNCSTOREv4i32i16r
REGIONTRUNCSTOREv4i32i16r
FLATTRUNCSTOREv4i32i16r
PRIVATETRUNCSTOREi32i16r
GLOBALTRUNCSTOREi32i16r
LOCALTRUNCSTOREi32i16r
REGIONTRUNCSTOREi32i16r
FLATTRUNCSTOREi32i16r
PRIVATELOAD64v2i16r
GLOBALLOAD64v2i16r
LOCALLOAD64v2i16r
CPOOLLOAD64v2i16r
REGIONLOAD64v2i16r
FLATLOAD64v2i16r
CONSTANTLOAD64v2i16r
PRIVATEAEXTLOAD64v2i16r
GLOBALAEXTLOAD64v2i16r
LOCALAEXTLOAD64v2i16r
CPOOLAEXTLOAD64v2i16r
REGIONAEXTLOAD64v2i16r
FLATAEXTLOAD64v2i16r
CONSTANTAEXTLOAD64v2i16r
PRIVATESEXTLOAD64v2i16r
GLOBALSEXTLOAD64v2i16r
LOCALSEXTLOAD64v2i16r
CPOOLSEXTLOAD64v2i16r
REGIONSEXTLOAD64v2i16r
FLATSEXTLOAD64v2i16r
CONSTANTSEXTLOAD64v2i16r
PRIVATEZEXTLOAD64v2i16r
GLOBALZEXTLOAD64v2i16r
LOCALZEXTLOAD64v2i16r
CPOOLZEXTLOAD64v2i16r
REGIONZEXTLOAD64v2i16r
FLATZEXTLOAD64v2i16r
CONSTANTZEXTLOAD64v2i16r
PRIVATESTORE64v2i16r
GLOBALSTORE64v2i16r
LOCALSTORE64v2i16r
REGIONSTORE64v2i16r
FLATSTORE64v2i16r
F16_FRCv2i16r
PRIVATELOADv2i16r
GLOBALLOADv2i16r
LOCALLOADv2i16r
CPOOLLOADv2i16r
REGIONLOADv2i16r
FLATLOADv2i16r
CONSTANTLOADv2i16r
PRIVATEAEXTLOADv2i16r
GLOBALAEXTLOADv2i16r
LOCALAEXTLOADv2i16r
CPOOLAEXTLOADv2i16r
REGIONAEXTLOADv2i16r
FLATAEXTLOADv2i16r
CONSTANTAEXTLOADv2i16r
PRIVATESEXTLOADv2i16r
GLOBALSEXTLOADv2i16r
LOCALSEXTLOADv2i16r
CPOOLSEXTLOADv2i16r
REGIONSEXTLOADv2i16r
FLATSEXTLOADv2i16r
CONSTANTSEXTLOADv2i16r
PRIVATEZEXTLOADv2i16r
GLOBALZEXTLOADv2i16r
LOCALZEXTLOADv2i16r
CPOOLZEXTLOADv2i16r
REGIONZEXTLOADv2i16r
FLATZEXTLOADv2i16r
CONSTANTZEXTLOADv2i16r
PRIVATESTOREv2i16r
GLOBALSTOREv2i16r
LOCALSTOREv2i16r
REGIONSTOREv2i16r
FLATSTOREv2i16r
UBIT_REVERSEv2i16r
VCREATEv2i16r
F16_ROUND_NEGINFv2i16r
F16_ROUND_POSINFv2i16r
FTOH_NEG_INFv2i16r
FTOH_PLUS_INFv2i16r
F16_LOGv2i16r
FTOHv2i16r
FFB_HIv2i16r
FFB_SGNv2i16r
F16_SINv2i16r
FFB_LOv2i16r
F16_ROUND_ZEROv2i16r
F16_RCPv2i16r
F16_EXPv2i16r
F16_FREXP_EXPv2i16r
F16_RSQv2i16r
F16_ROUND_NEARv2i16r
FTOH_NEARv2i16r
ABSv2i16r
F16_COSv2i16r
VEXTRACTv2i16r
F16_FREXP_MANTv2i16r
BITCOUNTv2i16r
NOTv2i16r
F16_SQRTv2i16r
POISONVv2i16r
PRIVATELOAD64i16r
GLOBALLOAD64i16r
LOCALLOAD64i16r
CPOOLLOAD64i16r
REGIONLOAD64i16r
FLATLOAD64i16r
CONSTANTLOAD64i16r
PRIVATEAEXTLOAD64i16r
GLOBALAEXTLOAD64i16r
LOCALAEXTLOAD64i16r
CPOOLAEXTLOAD64i16r
REGIONAEXTLOAD64i16r
FLATAEXTLOAD64i16r
CONSTANTAEXTLOAD64i16r
PRIVATESEXTLOAD64i16r
GLOBALSEXTLOAD64i16r
LOCALSEXTLOAD64i16r
CPOOLSEXTLOAD64i16r
REGIONSEXTLOAD64i16r
FLATSEXTLOAD64i16r
CONSTANTSEXTLOAD64i16r
PRIVATEZEXTLOAD64i16r
GLOBALZEXTLOAD64i16r
LOCALZEXTLOAD64i16r
CPOOLZEXTLOAD64i16r
REGIONZEXTLOAD64i16r
FLATZEXTLOAD64i16r
CONSTANTZEXTLOAD64i16r
PRIVATESTORE64i16r
GLOBALSTORE64i16r
LOCALSTORE64i16r
REGIONSTORE64i16r
FLATSTORE64i16r
PRIVATETRUNCSTORE64v2i64i16r
GLOBALTRUNCSTORE64v2i64i16r
LOCALTRUNCSTORE64v2i64i16r
REGIONTRUNCSTORE64v2i64i16r
FLATSTORE64v2i64i16r
PRIVATETRUNCSTOREv2i64i16r
GLOBALTRUNCSTOREv2i64i16r
LOCALTRUNCSTOREv2i64i16r
REGIONTRUNCSTOREv2i64i16r
FLATTRUNCSTOREv2i64i16r
PRIVATETRUNCSTORE64i64i16r
GLOBALTRUNCSTORE64i64i16r
LOCALTRUNCSTORE64i64i16r
REGIONTRUNCSTORE64i64i16r
FLATSTORE64i64i16r
PRIVATETRUNCSTOREi64i16r
GLOBALTRUNCSTOREi64i16r
LOCALTRUNCSTOREi64i16r
REGIONTRUNCSTOREi64i16r
FLATTRUNCSTOREi64i16r
PRIVATELOAD64v4i16r
GLOBALLOAD64v4i16r
LOCALLOAD64v4i16r
CPOOLLOAD64v4i16r
REGIONLOAD64v4i16r
FLATLOAD64v4i16r
CONSTANTLOAD64v4i16r
PRIVATEAEXTLOAD64v4i16r
GLOBALAEXTLOAD64v4i16r
LOCALAEXTLOAD64v4i16r
CPOOLAEXTLOAD64v4i16r
REGIONAEXTLOAD64v4i16r
FLATAEXTLOAD64v4i16r
CONSTANTAEXTLOAD64v4i16r
PRIVATESEXTLOAD64v4i16r
GLOBALSEXTLOAD64v4i16r
LOCALSEXTLOAD64v4i16r
CPOOLSEXTLOAD64v4i16r
REGIONSEXTLOAD64v4i16r
FLATSEXTLOAD64v4i16r
CONSTANTSEXTLOAD64v4i16r
PRIVATEZEXTLOAD64v4i16r
GLOBALZEXTLOAD64v4i16r
LOCALZEXTLOAD64v4i16r
CPOOLZEXTLOAD64v4i16r
REGIONZEXTLOAD64v4i16r
FLATZEXTLOAD64v4i16r
CONSTANTZEXTLOAD64v4i16r
PRIVATESTORE64v4i16r
GLOBALSTORE64v4i16r
LOCALSTORE64v4i16r
REGIONSTORE64v4i16r
FLATSTORE64v4i16r
F16_FRCv4i16r
PRIVATELOADv4i16r
GLOBALLOADv4i16r
LOCALLOADv4i16r
CPOOLLOADv4i16r
REGIONLOADv4i16r
FLATLOADv4i16r
CONSTANTLOADv4i16r
PRIVATEAEXTLOADv4i16r
GLOBALAEXTLOADv4i16r
LOCALAEXTLOADv4i16r
CPOOLAEXTLOADv4i16r
REGIONAEXTLOADv4i16r
FLATAEXTLOADv4i16r
CONSTANTAEXTLOADv4i16r
PRIVATESEXTLOADv4i16r
GLOBALSEXTLOADv4i16r
LOCALSEXTLOADv4i16r
CPOOLSEXTLOADv4i16r
REGIONSEXTLOADv4i16r
FLATSEXTLOADv4i16r
CONSTANTSEXTLOADv4i16r
PRIVATEZEXTLOADv4i16r
GLOBALZEXTLOADv4i16r
LOCALZEXTLOADv4i16r
CPOOLZEXTLOADv4i16r
REGIONZEXTLOADv4i16r
FLATZEXTLOADv4i16r
CONSTANTZEXTLOADv4i16r
PRIVATESTOREv4i16r
GLOBALSTOREv4i16r
LOCALSTOREv4i16r
REGIONSTOREv4i16r
FLATSTOREv4i16r
UBIT_REVERSEv4i16r
VCREATEv4i16r
F16_ROUND_NEGINFv4i16r
F16_ROUND_POSINFv4i16r
FTOH_NEG_INFv4i16r
FTOH_PLUS_INFv4i16r
F16_LOGv4i16r
FTOHv4i16r
FFB_HIv4i16r
FFB_SGNv4i16r
F16_SINv4i16r
FFB_LOv4i16r
F16_ROUND_ZEROv4i16r
F16_RCPv4i16r
F16_EXPv4i16r
F16_FREXP_EXPv4i16r
F16_RSQv4i16r
F16_ROUND_NEARv4i16r
FTOH_NEARv4i16r
ABSv4i16r
F16_COSv4i16r
VEXTRACTv4i16r
F16_FREXP_MANTv4i16r
BITCOUNTv4i16r
NOTv4i16r
F16_SQRTv4i16r
POISONVv4i16r
F16_FRCi16r
GDS32LOADi16r
LDS32LOADi16r
GDS64LOADi16r
LDS64LOADi16r
PRIVATELOADi16r
GLOBALLOADi16r
LOCALLOADi16r
CPOOLLOADi16r
REGIONLOADi16r
FLATLOADi16r
CONSTANTLOADi16r
PRIVATEAEXTLOADi16r
GLOBALAEXTLOADi16r
LOCALAEXTLOADi16r
CPOOLAEXTLOADi16r
REGIONAEXTLOADi16r
FLATAEXTLOADi16r
CONSTANTAEXTLOADi16r
PRIVATESEXTLOADi16r
GLOBALSEXTLOADi16r
LOCALSEXTLOADi16r
CPOOLSEXTLOADi16r
REGIONSEXTLOADi16r
FLATSEXTLOADi16r
CONSTANTSEXTLOADi16r
PRIVATEZEXTLOADi16r
GLOBALZEXTLOADi16r
LOCALZEXTLOADi16r
CPOOLZEXTLOADi16r
REGIONZEXTLOADi16r
FLATZEXTLOADi16r
CONSTANTZEXTLOADi16r
GDS32STOREi16r
LDS32STOREi16r
GDS64STOREi16r
LDS64STOREi16r
PRIVATESTOREi16r
GLOBALSTOREi16r
LOCALSTOREi16r
REGIONSTOREi16r
FLATSTOREi16r
UBIT_REVERSEi16r
F16_ROUND_NEGINFi16r
F16_ROUND_POSINFi16r
FTOH_NEG_INFi16r
FTOH_PLUS_INFi16r
F16_LOGi16r
FTOHi16r
FFB_HIi16r
FFB_SGNi16r
F16_SINi16r
FFB_LOi16r
F16_ROUND_ZEROi16r
F16_RCPi16r
F16_EXPi16r
F16_FREXP_EXPi16r
F16_RSQi16r
F16_ROUND_NEARi16r
FTOH_NEARi16r
ABSi16r
F16_COSi16r
F16_FREXP_MANTi16r
BITCOUNTi16r
NOTi16r
F16_SQRTi16r
POISONVi16r
CONTINUE_LOGICALZi16r
IF_LOGICALZi16r
BREAK_LOGICALZi16r
CONTINUE_LOGICALNZi16r
IF_LOGICALNZi16r
BREAK_LOGICALNZi16r
GDS32LOADu16r
LDS32LOADu16r
GDS64LOADu16r
LDS64LOADu16r
FTOV4U8r
PRIVATETRUNCSTORE64v2i32i8r
GLOBALTRUNCSTORE64v2i32i8r
LOCALTRUNCSTORE64v2i32i8r
REGIONTRUNCSTORE64v2i32i8r
FLATSTORE64v2i32i8r
PRIVATETRUNCSTOREv2i32i8r
GLOBALTRUNCSTOREv2i32i8r
LOCALTRUNCSTOREv2i32i8r
REGIONTRUNCSTOREv2i32i8r
FLATTRUNCSTOREv2i32i8r
PRIVATETRUNCSTORE64i32i8r
GLOBALTRUNCSTORE64i32i8r
LOCALTRUNCSTORE64i32i8r
REGIONTRUNCSTORE64i32i8r
FLATSTORE64i32i8r
PRIVATETRUNCSTORE64v4i32i8r
GLOBALTRUNCSTORE64v4i32i8r
LOCALTRUNCSTORE64v4i32i8r
REGIONTRUNCSTORE64v4i32i8r
FLATSTORE64v4i32i8r
PRIVATETRUNCSTOREv4i32i8r
GLOBALTRUNCSTOREv4i32i8r
LOCALTRUNCSTOREv4i32i8r
REGIONTRUNCSTOREv4i32i8r
FLATTRUNCSTOREv4i32i8r
PRIVATETRUNCSTOREi32i8r
GLOBALTRUNCSTOREi32i8r
LOCALTRUNCSTOREi32i8r
REGIONTRUNCSTOREi32i8r
FLATTRUNCSTOREi32i8r
PRIVATELOAD64v2i8r
GLOBALLOAD64v2i8r
LOCALLOAD64v2i8r
CPOOLLOAD64v2i8r
REGIONLOAD64v2i8r
FLATLOAD64v2i8r
CONSTANTLOAD64v2i8r
PRIVATEAEXTLOAD64v2i8r
GLOBALAEXTLOAD64v2i8r
LOCALAEXTLOAD64v2i8r
CPOOLAEXTLOAD64v2i8r
REGIONAEXTLOAD64v2i8r
FLATAEXTLOAD64v2i8r
CONSTANTAEXTLOAD64v2i8r
PRIVATESEXTLOAD64v2i8r
GLOBALSEXTLOAD64v2i8r
LOCALSEXTLOAD64v2i8r
CPOOLSEXTLOAD64v2i8r
REGIONSEXTLOAD64v2i8r
FLATSEXTLOAD64v2i8r
CONSTANTSEXTLOAD64v2i8r
PRIVATEZEXTLOAD64v2i8r
GLOBALZEXTLOAD64v2i8r
LOCALZEXTLOAD64v2i8r
CPOOLZEXTLOAD64v2i8r
REGIONZEXTLOAD64v2i8r
FLATZEXTLOAD64v2i8r
CONSTANTZEXTLOAD64v2i8r
PRIVATESTORE64v2i8r
GLOBALSTORE64v2i8r
LOCALSTORE64v2i8r
REGIONSTORE64v2i8r
FLATSTORE64v2i8r
PRIVATELOADv2i8r
GLOBALLOADv2i8r
LOCALLOADv2i8r
CPOOLLOADv2i8r
REGIONLOADv2i8r
FLATLOADv2i8r
CONSTANTLOADv2i8r
PRIVATEAEXTLOADv2i8r
GLOBALAEXTLOADv2i8r
LOCALAEXTLOADv2i8r
CPOOLAEXTLOADv2i8r
REGIONAEXTLOADv2i8r
FLATAEXTLOADv2i8r
CONSTANTAEXTLOADv2i8r
PRIVATESEXTLOADv2i8r
GLOBALSEXTLOADv2i8r
LOCALSEXTLOADv2i8r
CPOOLSEXTLOADv2i8r
REGIONSEXTLOADv2i8r
FLATSEXTLOADv2i8r
CONSTANTSEXTLOADv2i8r
PRIVATEZEXTLOADv2i8r
GLOBALZEXTLOADv2i8r
LOCALZEXTLOADv2i8r
CPOOLZEXTLOADv2i8r
REGIONZEXTLOADv2i8r
FLATZEXTLOADv2i8r
CONSTANTZEXTLOADv2i8r
PRIVATESTOREv2i8r
GLOBALSTOREv2i8r
LOCALSTOREv2i8r
REGIONSTOREv2i8r
FLATSTOREv2i8r
UBIT_REVERSEv2i8r
VCREATEv2i8r
FFB_HIv2i8r
FFB_SGNv2i8r
FFB_LOv2i8r
ABSv2i8r
VEXTRACTv2i8r
BITCOUNTv2i8r
NOTv2i8r
POISONVv2i8r
PRIVATELOAD64i8r
GLOBALLOAD64i8r
LOCALLOAD64i8r
CPOOLLOAD64i8r
REGIONLOAD64i8r
FLATLOAD64i8r
CONSTANTLOAD64i8r
PRIVATEAEXTLOAD64i8r
GLOBALAEXTLOAD64i8r
LOCALAEXTLOAD64i8r
CPOOLAEXTLOAD64i8r
REGIONAEXTLOAD64i8r
FLATAEXTLOAD64i8r
CONSTANTAEXTLOAD64i8r
PRIVATESEXTLOAD64i8r
GLOBALSEXTLOAD64i8r
LOCALSEXTLOAD64i8r
CPOOLSEXTLOAD64i8r
REGIONSEXTLOAD64i8r
FLATSEXTLOAD64i8r
CONSTANTSEXTLOAD64i8r
PRIVATEZEXTLOAD64i8r
GLOBALZEXTLOAD64i8r
LOCALZEXTLOAD64i8r
CPOOLZEXTLOAD64i8r
REGIONZEXTLOAD64i8r
FLATZEXTLOAD64i8r
CONSTANTZEXTLOAD64i8r
PRIVATESTORE64i8r
GLOBALSTORE64i8r
LOCALSTORE64i8r
REGIONSTORE64i8r
FLATSTORE64i8r
PRIVATETRUNCSTORE64v2i64i8r
GLOBALTRUNCSTORE64v2i64i8r
LOCALTRUNCSTORE64v2i64i8r
REGIONTRUNCSTORE64v2i64i8r
FLATSTORE64v2i64i8r
PRIVATETRUNCSTOREv2i64i8r
GLOBALTRUNCSTOREv2i64i8r
LOCALTRUNCSTOREv2i64i8r
REGIONTRUNCSTOREv2i64i8r
FLATTRUNCSTOREv2i64i8r
PRIVATETRUNCSTORE64i64i8r
GLOBALTRUNCSTORE64i64i8r
LOCALTRUNCSTORE64i64i8r
REGIONTRUNCSTORE64i64i8r
FLATSTORE64i64i8r
PRIVATETRUNCSTOREi64i8r
GLOBALTRUNCSTOREi64i8r
LOCALTRUNCSTOREi64i8r
REGIONTRUNCSTOREi64i8r
FLATTRUNCSTOREi64i8r
PRIVATELOAD64v4i8r
GLOBALLOAD64v4i8r
LOCALLOAD64v4i8r
CPOOLLOAD64v4i8r
REGIONLOAD64v4i8r
FLATLOAD64v4i8r
CONSTANTLOAD64v4i8r
PRIVATEAEXTLOAD64v4i8r
GLOBALAEXTLOAD64v4i8r
LOCALAEXTLOAD64v4i8r
CPOOLAEXTLOAD64v4i8r
REGIONAEXTLOAD64v4i8r
FLATAEXTLOAD64v4i8r
CONSTANTAEXTLOAD64v4i8r
PRIVATESEXTLOAD64v4i8r
GLOBALSEXTLOAD64v4i8r
LOCALSEXTLOAD64v4i8r
CPOOLSEXTLOAD64v4i8r
REGIONSEXTLOAD64v4i8r
FLATSEXTLOAD64v4i8r
CONSTANTSEXTLOAD64v4i8r
PRIVATEZEXTLOAD64v4i8r
GLOBALZEXTLOAD64v4i8r
LOCALZEXTLOAD64v4i8r
CPOOLZEXTLOAD64v4i8r
REGIONZEXTLOAD64v4i8r
FLATZEXTLOAD64v4i8r
CONSTANTZEXTLOAD64v4i8r
PRIVATESTORE64v4i8r
GLOBALSTORE64v4i8r
LOCALSTORE64v4i8r
REGIONSTORE64v4i8r
FLATSTORE64v4i8r
PRIVATELOADv4i8r
GLOBALLOADv4i8r
LOCALLOADv4i8r
CPOOLLOADv4i8r
REGIONLOADv4i8r
FLATLOADv4i8r
CONSTANTLOADv4i8r
PRIVATEAEXTLOADv4i8r
GLOBALAEXTLOADv4i8r
LOCALAEXTLOADv4i8r
CPOOLAEXTLOADv4i8r
REGIONAEXTLOADv4i8r
FLATAEXTLOADv4i8r
CONSTANTAEXTLOADv4i8r
PRIVATESEXTLOADv4i8r
GLOBALSEXTLOADv4i8r
LOCALSEXTLOADv4i8r
CPOOLSEXTLOADv4i8r
REGIONSEXTLOADv4i8r
FLATSEXTLOADv4i8r
CONSTANTSEXTLOADv4i8r
PRIVATEZEXTLOADv4i8r
GLOBALZEXTLOADv4i8r
LOCALZEXTLOADv4i8r
CPOOLZEXTLOADv4i8r
REGIONZEXTLOADv4i8r
FLATZEXTLOADv4i8r
CONSTANTZEXTLOADv4i8r
PRIVATESTOREv4i8r
GLOBALSTOREv4i8r
LOCALSTOREv4i8r
REGIONSTOREv4i8r
FLATSTOREv4i8r
UBIT_REVERSEv4i8r
VCREATEv4i8r
FFB_HIv4i8r
FFB_SGNv4i8r
FFB_LOv4i8r
ABSv4i8r
VEXTRACTv4i8r
BITCOUNTv4i8r
NOTv4i8r
POISONVv4i8r
PRIVATETRUNCSTORE64v2i16i8r
GLOBALTRUNCSTORE64v2i16i8r
LOCALTRUNCSTORE64v2i16i8r
REGIONTRUNCSTORE64v2i16i8r
FLATSTORE64v2i16i8r
PRIVATETRUNCSTOREv2i16i8r
GLOBALTRUNCSTOREv2i16i8r
LOCALTRUNCSTOREv2i16i8r
REGIONTRUNCSTOREv2i16i8r
FLATTRUNCSTOREv2i16i8r
PRIVATETRUNCSTORE64i16i8r
GLOBALTRUNCSTORE64i16i8r
LOCALTRUNCSTORE64i16i8r
REGIONTRUNCSTORE64i16i8r
FLATSTORE64i16i8r
PRIVATETRUNCSTORE64v4i16i8r
GLOBALTRUNCSTORE64v4i16i8r
LOCALTRUNCSTORE64v4i16i8r
REGIONTRUNCSTORE64v4i16i8r
FLATSTORE64v4i16i8r
PRIVATETRUNCSTOREv4i16i8r
GLOBALTRUNCSTOREv4i16i8r
LOCALTRUNCSTOREv4i16i8r
REGIONTRUNCSTOREv4i16i8r
FLATTRUNCSTOREv4i16i8r
PRIVATETRUNCSTOREi16i8r
GLOBALTRUNCSTOREi16i8r
LOCALTRUNCSTOREi16i8r
REGIONTRUNCSTOREi16i8r
FLATTRUNCSTOREi16i8r
GDS32LOADi8r
LDS32LOADi8r
GDS64LOADi8r
LDS64LOADi8r
PRIVATELOADi8r
GLOBALLOADi8r
LOCALLOADi8r
CPOOLLOADi8r
REGIONLOADi8r
FLATLOADi8r
CONSTANTLOADi8r
PRIVATEAEXTLOADi8r
GLOBALAEXTLOADi8r
LOCALAEXTLOADi8r
CPOOLAEXTLOADi8r
REGIONAEXTLOADi8r
FLATAEXTLOADi8r
CONSTANTAEXTLOADi8r
PRIVATESEXTLOADi8r
GLOBALSEXTLOADi8r
LOCALSEXTLOADi8r
CPOOLSEXTLOADi8r
REGIONSEXTLOADi8r
FLATSEXTLOADi8r
CONSTANTSEXTLOADi8r
PRIVATEZEXTLOADi8r
GLOBALZEXTLOADi8r
LOCALZEXTLOADi8r
CPOOLZEXTLOADi8r
REGIONZEXTLOADi8r
FLATZEXTLOADi8r
CONSTANTZEXTLOADi8r
GDS32STOREi8r
LDS32STOREi8r
GDS64STOREi8r
LDS64STOREi8r
PRIVATESTOREi8r
GLOBALSTOREi8r
LOCALSTOREi8r
REGIONSTOREi8r
FLATSTOREi8r
UBIT_REVERSEi8r
FFB_HIi8r
FFB_SGNi8r
FFB_LOi8r
ABSi8r
BITCOUNTi8r
NOTi8r
POISONVi8r
CONTINUE_LOGICALZi8r
IF_LOGICALZi8r
BREAK_LOGICALZi8r
CONTINUE_LOGICALNZi8r
IF_LOGICALNZi8r
BREAK_LOGICALNZi8r
GDS32LOADu8r
LDS32LOADu8r
GDS64LOADu8r
LDS64LOADu8r
LANE_IDr
FTODr
ITODr
UTODr
FENCEr
READFIRSTLANEr
DTOFr
HTOFr
FENCE_LGr
FENCE_RO_LGr
FENCE_WO_LGr
FENCE_MGr
FENCE_RO_MGr
FENCE_WO_MGr
FENCE_Gr
FENCE_RO_Gr
FENCE_WO_Gr
FTOHr
DTOIr
FENCE_Lr
FENCE_RO_Lr
FENCE_WO_Lr
FENCE_LMr
FENCE_RO_LMr
FENCE_WO_LMr
FENCE_Mr
FENCE_RO_Mr
FENCE_WO_Mr
FENCE_ROr
FENCE_WOr
FENCE_LGSr
FENCE_MGSr
FENCE_GSr
FENCE_LSr
FENCE_LMSr
FENCE_MSr
FENCE_Sr
PRINT_INC_ITEM_OFFSETr
EARLY_EXITr
BALLOTr
DTOUr
BRANCHf32br
BRANCHi32br
BRANCHf64br
BRANCHi64br
BRANCHf16br
BRANCHi16br
BRANCHi8br
GEv2f32ir
NEv2f32ir
LDEXPv2f32ir
EQv2f32ir
CLASSv2f32ir
VCONCATv2f32ir
LTv2f32ir
VINSERTv2f32ir
GEv4f32ir
NEv4f32ir
LDEXPv4f32ir
EQv4f32ir
CLASSv4f32ir
VCONCATv4f32ir
LTv4f32ir
VINSERTv4f32ir
GEf32ir
NEf32ir
LDEXPf32ir
EQf32ir
CLASSf32ir
LTf32ir
IGEv2i32ir
UGEv2i32ir
INEv2i32ir
IEQv2i32ir
VCONCATv2i32ir
ILTv2i32ir
ULTv2i32ir
VINSERTv2i32ir
IGEv4i32ir
UGEv4i32ir
INEv4i32ir
IEQv4i32ir
VCONCATv4i32ir
ILTv4i32ir
ULTv4i32ir
VINSERTv4i32ir
IGEi32ir
UGEi32ir
INEi32ir
IEQi32ir
ILTi32ir
ULTi32ir
DP2ir
DP3ir
SUBv2f64ir
DGEv2f64ir
DNEv2f64ir
LDEXPv2f64ir
DEQv2f64ir
CLASSv2f64ir
VCONCATv2f64ir
DLTv2f64ir
VINSERTv2f64ir
SUBf64ir
DGEf64ir
DNEf64ir
DTRIG_PREOPf64ir
LDEXPf64ir
DEQf64ir
CLASSf64ir
DLTf64ir
IGEv2i64ir
UGEv2i64ir
INEv2i64ir
IEQv2i64ir
VCONCATv2i64ir
ILTv2i64ir
ULTv2i64ir
VINSERTv2i64ir
IGEi64ir
UGEi64ir
INEi64ir
IEQi64ir
ILTi64ir
ULTi64ir
DP4ir
VCONCATv2f16ir
VINSERTv2f16ir
VCONCATv2i16ir
VINSERTv2i16ir
VCONCATv4i16ir
VINSERTv4i16ir
VCONCATv2i8ir
VINSERTv2i8ir
VCONCATv4i8ir
VINSERTv4i8ir
MED3v2f32iir
MIN3v2f32iir
MAX3v2f32iir
FMAv2f32iir
MADv2f32iir
FMA_RTEv2f32iir
MAD_RTEv2f32iir
FMA_RTNv2f32iir
MAD_RTNv2f32iir
CLAMPv2f32iir
LERPv2f32iir
FMA_RTPv2f32iir
MAD_RTPv2f32iir
FMA_RTZv2f32iir
MAD_RTZv2f32iir
MED3f32iir
MIN3f32iir
MAX3f32iir
MED3v4f32iir
MIN3v4f32iir
MAX3v4f32iir
FMAv4f32iir
MADv4f32iir
FMA_RTEv4f32iir
MAD_RTEv4f32iir
FMA_RTNv4f32iir
MAD_RTNv4f32iir
CLAMPv4f32iir
LERPv4f32iir
FMA_RTPv4f32iir
MAD_RTPv4f32iir
FMA_RTZv4f32iir
MAD_RTZv4f32iir
FMAf32iir
MADf32iir
FMA_RTEf32iir
MAD_RTEf32iir
FMA_RTNf32iir
MAD_RTNf32iir
CLAMPf32iir
LERPf32iir
FMA_RTPf32iir
MAD_RTPf32iir
FMA_RTZf32iir
MAD_RTZf32iir
SAD32i32iir
SAD32v2i32iir
IMED3v2i32iir
UMED3v2i32iir
IMIN3v2i32iir
UMIN3v2i32iir
IMAX3v2i32iir
UMAX3v2i32iir
IMAD24v2i32iir
UMAD24v2i32iir
SAD16v2i32iir
IMADv2i32iir
UMADv2i32iir
MSADv2i32iir
BFIv2i32iir
SADHIv2i32iir
BYTEALIGNv2i32iir
BITALIGNv2i32iir
U4LERPv2i32iir
IBIT_EXTRACTv2i32iir
UBIT_EXTRACTv2i32iir
IMED3i32iir
UMED3i32iir
IMIN3i32iir
UMIN3i32iir
IMAX3i32iir
UMAX3i32iir
BITALIGN_PAT_3i32iir
IMAD24i32iir
UMAD24i32iir
SAD32v4i32iir
IMED3v4i32iir
UMED3v4i32iir
IMIN3v4i32iir
UMIN3v4i32iir
IMAX3v4i32iir
UMAX3v4i32iir
IMAD24v4i32iir
UMAD24v4i32iir
SAD16v4i32iir
IMADv4i32iir
UMADv4i32iir
MSADv4i32iir
BFIv4i32iir
SADHIv4i32iir
BYTEALIGNv4i32iir
BITALIGNv4i32iir
U4LERPv4i32iir
IBIT_EXTRACTv4i32iir
UBIT_EXTRACTv4i32iir
SAD16i32iir
IMADi32iir
UMADi32iir
MSADi32iir
BFIi32iir
SADHIi32iir
BYTEALIGNi32iir
BITALIGNi32iir
U4LERPi32iir
IBIT_EXTRACTi32iir
UBIT_EXTRACTi32iir
DFMAv2f64iir
MADv2f64iir
DFMAf64iir
MADf64iir
MAD_RTEf64iir
MAD_RTNf64iir
MAD_RTPf64iir
MAD_RTZf64iir
SAD32i64iir
SAD32v2i64iir
IMED3v2i64iir
UMED3v2i64iir
IMIN3v2i64iir
UMIN3v2i64iir
IMAX3v2i64iir
UMAX3v2i64iir
IMAD24v2i64iir
UMAD24v2i64iir
SAD16v2i64iir
IMADv2i64iir
UMADv2i64iir
MSADv2i64iir
BFIv2i64iir
SADHIv2i64iir
BYTEALIGNv2i64iir
BITALIGNv2i64iir
U4LERPv2i64iir
IBIT_EXTRACTv2i64iir
UBIT_EXTRACTv2i64iir
IMED3i64iir
UMED3i64iir
IMIN3i64iir
UMIN3i64iir
IMAX3i64iir
UMAX3i64iir
IMAD24i64iir
UMAD24i64iir
SAD16i64iir
IMADi64iir
UMADi64iir
MSADi64iir
MQSADi64iir
BFIi64iir
SADHIi64iir
BYTEALIGNi64iir
BITALIGNi64iir
U4LERPi64iir
IBIT_EXTRACTi64iir
UBIT_EXTRACTi64iir
SAD4iir
SAD32i16iir
SAD32v2i16iir
IMED3v2i16iir
UMED3v2i16iir
IMIN3v2i16iir
UMIN3v2i16iir
IMAX3v2i16iir
UMAX3v2i16iir
IMAD24v2i16iir
UMAD24v2i16iir
SAD16v2i16iir
F16_FMAv2i16iir
IMADv2i16iir
UMADv2i16iir
F16_MADv2i16iir
I16_MADv2i16iir
U16_MADv2i16iir
MSADv2i16iir
F16_FMA_RTEv2i16iir
BFIv2i16iir
SADHIv2i16iir
BYTEALIGNv2i16iir
BITALIGNv2i16iir
F16_FMA_RTNv2i16iir
U4LERPv2i16iir
F16_FMA_RTPv2i16iir
IBIT_EXTRACTv2i16iir
UBIT_EXTRACTv2i16iir
F16_FMA_RTZv2i16iir
IMED3i16iir
UMED3i16iir
IMIN3i16iir
UMIN3i16iir
IMAX3i16iir
UMAX3i16iir
IMAD24i16iir
UMAD24i16iir
SAD32v4i16iir
IMED3v4i16iir
UMED3v4i16iir
IMIN3v4i16iir
UMIN3v4i16iir
IMAX3v4i16iir
UMAX3v4i16iir
IMAD24v4i16iir
UMAD24v4i16iir
SAD16v4i16iir
F16_FMAv4i16iir
IMADv4i16iir
UMADv4i16iir
F16_MADv4i16iir
I16_MADv4i16iir
U16_MADv4i16iir
MSADv4i16iir
F16_FMA_RTEv4i16iir
BFIv4i16iir
SADHIv4i16iir
BYTEALIGNv4i16iir
BITALIGNv4i16iir
F16_FMA_RTNv4i16iir
U4LERPv4i16iir
F16_FMA_RTPv4i16iir
IBIT_EXTRACTv4i16iir
UBIT_EXTRACTv4i16iir
F16_FMA_RTZv4i16iir
SAD16i16iir
F16_FMAi16iir
IMADi16iir
UMADi16iir
F16_MADi16iir
I16_MADi16iir
U16_MADi16iir
MSADi16iir
F16_FMA_RTEi16iir
BFIi16iir
SADHIi16iir
BYTEALIGNi16iir
BITALIGNi16iir
F16_FMA_RTNi16iir
U4LERPi16iir
F16_FMA_RTPi16iir
IBIT_EXTRACTi16iir
UBIT_EXTRACTi16iir
F16_FMA_RTZi16iir
SAD32i8iir
SAD32v2i8iir
IMED3v2i8iir
UMED3v2i8iir
IMIN3v2i8iir
UMIN3v2i8iir
IMAX3v2i8iir
UMAX3v2i8iir
IMAD24v2i8iir
UMAD24v2i8iir
SAD16v2i8iir
IMADv2i8iir
UMADv2i8iir
MSADv2i8iir
BFIv2i8iir
SADHIv2i8iir
BYTEALIGNv2i8iir
BITALIGNv2i8iir
U4LERPv2i8iir
IBIT_EXTRACTv2i8iir
UBIT_EXTRACTv2i8iir
IMED3i8iir
UMED3i8iir
IMIN3i8iir
UMIN3i8iir
IMAX3i8iir
UMAX3i8iir
IMAD24i8iir
UMAD24i8iir
SAD32v4i8iir
IMED3v4i8iir
UMED3v4i8iir
IMIN3v4i8iir
UMIN3v4i8iir
IMAX3v4i8iir
UMAX3v4i8iir
IMAD24v4i8iir
UMAD24v4i8iir
SAD16v4i8iir
IMADv4i8iir
UMADv4i8iir
MSADv4i8iir
BFIv4i8iir
SADHIv4i8iir
BYTEALIGNv4i8iir
BITALIGNv4i8iir
U4LERPv4i8iir
IBIT_EXTRACTv4i8iir
UBIT_EXTRACTv4i8iir
SAD16i8iir
IMADi8iir
UMADi8iir
MSADi8iir
BFIi8iir
SADHIi8iir
BYTEALIGNi8iir
BITALIGNi8iir
U4LERPi8iir
IBIT_EXTRACTi8iir
UBIT_EXTRACTi8iir
DP2ADDiir
BITALIGN_PAT_1i32iiir
BITALIGN_PAT_2i32iiir
UBIT_INSERTv2i32iiir
UBIT_INSERTv4i32iiir
UBIT_INSERTi32iiir
RECEIVELANEiiir
NEGHALFONE_GEf32riir
NEGONE_GEf32riir
ZERO_GEf32riir
NEGHALFONE_EQf32riir
NEGONE_EQf32riir
ZERO_EQf32riir
NEGHALFONE_LTf32riir
NEGONE_LTf32riir
ZERO_LTf32riir
BITALIGN_PAT_1i32riir
BITALIGN_PAT_2i32riir
UBIT_INSERTv2i32riir
UBIT_INSERTv4i32riir
NEGHALFONE_GEi32riir
NEGONE_GEi32riir
ZERO_GEi32riir
NEGHALFONE_EQi32riir
NEGONE_EQi32riir
ZERO_EQi32riir
NEGHALFONE_LTi32riir
NEGONE_LTi32riir
ZERO_LTi32riir
UBIT_INSERTi32riir
RECEIVELANEriir
MED3v2f32rir
MIN3v2f32rir
MAX3v2f32rir
FMAv2f32rir
MADv2f32rir
FMA_RTEv2f32rir
MAD_RTEv2f32rir
FMA_RTNv2f32rir
MAD_RTNv2f32rir
CLAMPv2f32rir
LERPv2f32rir
FMA_RTPv2f32rir
MAD_RTPv2f32rir
FMA_RTZv2f32rir
MAD_RTZv2f32rir
MED3f32rir
MIN3f32rir
MAX3f32rir
MED3v4f32rir
MIN3v4f32rir
MAX3v4f32rir
FMAv4f32rir
MADv4f32rir
FMA_RTEv4f32rir
MAD_RTEv4f32rir
FMA_RTNv4f32rir
MAD_RTNv4f32rir
CLAMPv4f32rir
LERPv4f32rir
FMA_RTPv4f32rir
MAD_RTPv4f32rir
FMA_RTZv4f32rir
MAD_RTZv4f32rir
FMAf32rir
MADf32rir
FMA_RTEf32rir
MAD_RTEf32rir
FMA_RTNf32rir
MAD_RTNf32rir
CLAMPf32rir
LERPf32rir
FMA_RTPf32rir
MAD_RTPf32rir
FMA_RTZf32rir
MAD_RTZf32rir
SAD32i32rir
SAD32v2i32rir
IMED3v2i32rir
UMED3v2i32rir
IMIN3v2i32rir
UMIN3v2i32rir
IMAX3v2i32rir
UMAX3v2i32rir
IMAD24v2i32rir
UMAD24v2i32rir
SAD16v2i32rir
IMADv2i32rir
UMADv2i32rir
MSADv2i32rir
BFIv2i32rir
SADHIv2i32rir
BYTEALIGNv2i32rir
BITALIGNv2i32rir
U4LERPv2i32rir
IBIT_EXTRACTv2i32rir
UBIT_EXTRACTv2i32rir
IMED3i32rir
UMED3i32rir
IMIN3i32rir
UMIN3i32rir
IMAX3i32rir
UMAX3i32rir
BITALIGN_PAT_3i32rir
IMAD24i32rir
UMAD24i32rir
SAD32v4i32rir
IMED3v4i32rir
UMED3v4i32rir
IMIN3v4i32rir
UMIN3v4i32rir
IMAX3v4i32rir
UMAX3v4i32rir
IMAD24v4i32rir
UMAD24v4i32rir
SAD16v4i32rir
IMADv4i32rir
UMADv4i32rir
MSADv4i32rir
BFIv4i32rir
SADHIv4i32rir
BYTEALIGNv4i32rir
BITALIGNv4i32rir
U4LERPv4i32rir
IBIT_EXTRACTv4i32rir
UBIT_EXTRACTv4i32rir
SAD16i32rir
IMADi32rir
UMADi32rir
MSADi32rir
BFIi32rir
SADHIi32rir
BYTEALIGNi32rir
BITALIGNi32rir
U4LERPi32rir
IBIT_EXTRACTi32rir
UBIT_EXTRACTi32rir
DFMAv2f64rir
MADv2f64rir
DFMAf64rir
MADf64rir
MAD_RTEf64rir
MAD_RTNf64rir
MAD_RTPf64rir
MAD_RTZf64rir
SAD32i64rir
SAD32v2i64rir
IMED3v2i64rir
UMED3v2i64rir
IMIN3v2i64rir
UMIN3v2i64rir
IMAX3v2i64rir
UMAX3v2i64rir
IMAD24v2i64rir
UMAD24v2i64rir
SAD16v2i64rir
IMADv2i64rir
UMADv2i64rir
MSADv2i64rir
BFIv2i64rir
SADHIv2i64rir
BYTEALIGNv2i64rir
BITALIGNv2i64rir
U4LERPv2i64rir
IBIT_EXTRACTv2i64rir
UBIT_EXTRACTv2i64rir
IMED3i64rir
UMED3i64rir
IMIN3i64rir
UMIN3i64rir
IMAX3i64rir
UMAX3i64rir
IMAD24i64rir
UMAD24i64rir
SAD16i64rir
IMADi64rir
UMADi64rir
MSADi64rir
MQSADi64rir
BFIi64rir
SADHIi64rir
BYTEALIGNi64rir
BITALIGNi64rir
U4LERPi64rir
IBIT_EXTRACTi64rir
UBIT_EXTRACTi64rir
SAD4rir
SAD32i16rir
SAD32v2i16rir
IMED3v2i16rir
UMED3v2i16rir
IMIN3v2i16rir
UMIN3v2i16rir
IMAX3v2i16rir
UMAX3v2i16rir
IMAD24v2i16rir
UMAD24v2i16rir
SAD16v2i16rir
F16_FMAv2i16rir
IMADv2i16rir
UMADv2i16rir
F16_MADv2i16rir
I16_MADv2i16rir
U16_MADv2i16rir
MSADv2i16rir
F16_FMA_RTEv2i16rir
BFIv2i16rir
SADHIv2i16rir
BYTEALIGNv2i16rir
BITALIGNv2i16rir
F16_FMA_RTNv2i16rir
U4LERPv2i16rir
F16_FMA_RTPv2i16rir
IBIT_EXTRACTv2i16rir
UBIT_EXTRACTv2i16rir
F16_FMA_RTZv2i16rir
IMED3i16rir
UMED3i16rir
IMIN3i16rir
UMIN3i16rir
IMAX3i16rir
UMAX3i16rir
IMAD24i16rir
UMAD24i16rir
SAD32v4i16rir
IMED3v4i16rir
UMED3v4i16rir
IMIN3v4i16rir
UMIN3v4i16rir
IMAX3v4i16rir
UMAX3v4i16rir
IMAD24v4i16rir
UMAD24v4i16rir
SAD16v4i16rir
F16_FMAv4i16rir
IMADv4i16rir
UMADv4i16rir
F16_MADv4i16rir
I16_MADv4i16rir
U16_MADv4i16rir
MSADv4i16rir
F16_FMA_RTEv4i16rir
BFIv4i16rir
SADHIv4i16rir
BYTEALIGNv4i16rir
BITALIGNv4i16rir
F16_FMA_RTNv4i16rir
U4LERPv4i16rir
F16_FMA_RTPv4i16rir
IBIT_EXTRACTv4i16rir
UBIT_EXTRACTv4i16rir
F16_FMA_RTZv4i16rir
SAD16i16rir
F16_FMAi16rir
IMADi16rir
UMADi16rir
F16_MADi16rir
I16_MADi16rir
U16_MADi16rir
MSADi16rir
F16_FMA_RTEi16rir
BFIi16rir
SADHIi16rir
BYTEALIGNi16rir
BITALIGNi16rir
F16_FMA_RTNi16rir
U4LERPi16rir
F16_FMA_RTPi16rir
IBIT_EXTRACTi16rir
UBIT_EXTRACTi16rir
F16_FMA_RTZi16rir
SAD32i8rir
SAD32v2i8rir
IMED3v2i8rir
UMED3v2i8rir
IMIN3v2i8rir
UMIN3v2i8rir
IMAX3v2i8rir
UMAX3v2i8rir
IMAD24v2i8rir
UMAD24v2i8rir
SAD16v2i8rir
IMADv2i8rir
UMADv2i8rir
MSADv2i8rir
BFIv2i8rir
SADHIv2i8rir
BYTEALIGNv2i8rir
BITALIGNv2i8rir
U4LERPv2i8rir
IBIT_EXTRACTv2i8rir
UBIT_EXTRACTv2i8rir
IMED3i8rir
UMED3i8rir
IMIN3i8rir
UMIN3i8rir
IMAX3i8rir
UMAX3i8rir
IMAD24i8rir
UMAD24i8rir
SAD32v4i8rir
IMED3v4i8rir
UMED3v4i8rir
IMIN3v4i8rir
UMIN3v4i8rir
IMAX3v4i8rir
UMAX3v4i8rir
IMAD24v4i8rir
UMAD24v4i8rir
SAD16v4i8rir
IMADv4i8rir
UMADv4i8rir
MSADv4i8rir
BFIv4i8rir
SADHIv4i8rir
BYTEALIGNv4i8rir
BITALIGNv4i8rir
U4LERPv4i8rir
IBIT_EXTRACTv4i8rir
UBIT_EXTRACTv4i8rir
SAD16i8rir
IMADi8rir
UMADi8rir
MSADi8rir
BFIi8rir
SADHIi8rir
BYTEALIGNi8rir
BITALIGNi8rir
U4LERPi8rir
IBIT_EXTRACTi8rir
UBIT_EXTRACTi8rir
DP2ADDrir
BITALIGN_PAT_1i32irir
BITALIGN_PAT_2i32irir
UBIT_INSERTv2i32irir
UBIT_INSERTv4i32irir
UBIT_INSERTi32irir
RECEIVELANEirir
BITALIGN_PAT_1i32rrir
BITALIGN_PAT_2i32rrir
UBIT_INSERTv2i32rrir
UBIT_INSERTv4i32rrir
UBIT_INSERTi32rrir
RECEIVELANErrir
ADDi64pr
ADDpr
SUBv2f32rr
ADDv2f32rr
MODv2f32rr
MUL_IEEEv2f32rr
GEv2f32rr
NEv2f32rr
DIV_PRECISEv2f32rr
SUB_RTEv2f32rr
ADD_RTEv2f32rr
MUL_RTEv2f32rr
MINv2f32rr
SUB_RTNv2f32rr
ADD_RTNv2f32rr
MUL_RTNv2f32rr
SUB_RTPv2f32rr
ADD_RTPv2f32rr
MUL_RTPv2f32rr
LDEXPv2f32rr
EQv2f32rr
CLASSv2f32rr
VCONCATv2f32rr
LTv2f32rr
DIV_INTv2f32rr
VINSERTv2f32rr
DIVv2f32rr
POWv2f32rr
MAXv2f32rr
SUB_RTZv2f32rr
ADD_RTZv2f32rr
MUL_RTZv2f32rr
SUBv4f32rr
ADDv4f32rr
MODv4f32rr
MUL_IEEEv4f32rr
GEv4f32rr
NEv4f32rr
DIV_PRECISEv4f32rr
SUB_RTEv4f32rr
ADD_RTEv4f32rr
MUL_RTEv4f32rr
MINv4f32rr
SUB_RTNv4f32rr
ADD_RTNv4f32rr
MUL_RTNv4f32rr
SUB_RTPv4f32rr
ADD_RTPv4f32rr
MUL_RTPv4f32rr
LDEXPv4f32rr
EQv4f32rr
CLASSv4f32rr
VCONCATv4f32rr
LTv4f32rr
DIV_INTv4f32rr
VINSERTv4f32rr
DIVv4f32rr
POWv4f32rr
MAXv4f32rr
SUB_RTZv4f32rr
ADD_RTZv4f32rr
MUL_RTZv4f32rr
SUBf32rr
CONTINUECf32rr
IFCf32rr
BREAKCf32rr
ADDf32rr
MODf32rr
MUL_IEEEf32rr
GEf32rr
NEf32rr
DIV_PRECISEf32rr
SUB_RTEf32rr
ADD_RTEf32rr
MUL_RTEf32rr
MINf32rr
SUB_RTNf32rr
ADD_RTNf32rr
MUL_RTNf32rr
SUB_RTPf32rr
ADD_RTPf32rr
MUL_RTPf32rr
LDEXPf32rr
EQf32rr
CLASSf32rr
LTf32rr
DIV_INTf32rr
DIVf32rr
POWf32rr
MAXf32rr
SUB_RTZf32rr
ADD_RTZf32rr
MUL_RTZf32rr
BFM_PAT1i32rr
SHLv2i32i32rr
USHRv2i32i32rr
SHLv4i32i32rr
USHRv4i32i32rr
SHLi32i32rr
USHRi32i32rr
IMULHI24v2i32rr
UMULHI24v2i32rr
IMUL24v2i32rr
UMUL24v2i32rr
EADDv2i32rr
ANDv2i32rr
IGEv2i32rr
UGEv2i32rr
INEv2i32rr
IMULHIv2i32rr
SMULHIv2i32rr
UMULHIv2i32rr
SMULv2i32rr
UMULv2i32rr
BFMv2i32rr
IMINv2i32rr
UMINv2i32rr
IEQv2i32rr
HILO_BITORv2i32rr
XORv2i32rr
VCONCATv2i32rr
ILTv2i32rr
ULTv2i32rr
UMULHI_INTv2i32rr
VINSERTv2i32rr
NATIVE_UDIVv2i32rr
BORROWv2i32rr
IMAXv2i32rr
UMAXv2i32rr
CARRYv2i32rr
IMULHI24i32rr
UMULHI24i32rr
IMUL24i32rr
UMUL24i32rr
SHLv2i64i32rr
USHRv2i64i32rr
SHLi64i32rr
USHRi64i32rr
IMULHI24v4i32rr
UMULHI24v4i32rr
IMUL24v4i32rr
UMUL24v4i32rr
EADDv4i32rr
ANDv4i32rr
IGEv4i32rr
UGEv4i32rr
INEv4i32rr
IMULHIv4i32rr
SMULHIv4i32rr
UMULHIv4i32rr
SMULv4i32rr
UMULv4i32rr
BFMv4i32rr
IMINv4i32rr
UMINv4i32rr
IEQv4i32rr
XORv4i32rr
VCONCATv4i32rr
ILTv4i32rr
ULTv4i32rr
UMULHI_INTv4i32rr
VINSERTv4i32rr
NATIVE_UDIVv4i32rr
BORROWv4i32rr
IMAXv4i32rr
UMAXv4i32rr
CARRYv4i32rr
SHRI16v2i16i32rr
SHL16v2i16i32rr
SHRU16v2i16i32rr
SHLv2i16i32rr
USHRv2i16i32rr
SHRI16v4i16i32rr
SHL16v4i16i32rr
SHRU16v4i16i32rr
SHLv4i16i32rr
USHRv4i16i32rr
SHRI16i16i32rr
SHL16i16i32rr
SHRU16i16i32rr
SHLi16i32rr
USHRi16i32rr
SHRI16v2i8i32rr
SHL16v2i8i32rr
SHRU16v2i8i32rr
SHLv2i8i32rr
USHRv2i8i32rr
SHRI16v4i8i32rr
SHL16v4i8i32rr
SHRU16v4i8i32rr
SHLv4i8i32rr
USHRv4i8i32rr
SHRI16i8i32rr
SHL16i8i32rr
SHRU16i8i32rr
SHLi8i32rr
USHRi8i32rr
CONTINUECi32rr
IFCi32rr
BREAKCi32rr
EADDi32rr
ANDi32rr
IGEi32rr
UGEi32rr
INEi32rr
IMULHIi32rr
SMULHIi32rr
UMULHIi32rr
SMULi32rr
UMULi32rr
BFMi32rr
IMINi32rr
UMINi32rr
IEQi32rr
XORi32rr
ILTi32rr
ULTi32rr
UMULHI_INTi32rr
NATIVE_UDIVi32rr
BORROWi32rr
IMAXi32rr
UMAXi32rr
CARRYi32rr
DP2rr
DP3rr
SUBv2f64rr
ADDv2f64rr
MUL_IEEEv2f64rr
DGEv2f64rr
DNEv2f64rr
DCREATEv2f64rr
MINv2f64rr
LDEXPv2f64rr
DEQv2f64rr
CLASSv2f64rr
VCONCATv2f64rr
DLTv2f64rr
DDIV_INTv2f64rr
VINSERTv2f64rr
DDIVv2f64rr
MAXv2f64rr
SUBf64rr
CONTINUECf64rr
IFCf64rr
BREAKCf64rr
ADDf64rr
MUL_IEEEf64rr
DGEf64rr
DNEf64rr
DCREATEf64rr
SUB_RTEf64rr
ADD_RTEf64rr
MUL_RTEf64rr
MINf64rr
SUB_RTNf64rr
ADD_RTNf64rr
MUL_RTNf64rr
DTRIG_PREOPf64rr
SUB_RTPf64rr
ADD_RTPf64rr
MUL_RTPf64rr
LDEXPf64rr
DEQf64rr
CLASSf64rr
DLTf64rr
DDIV_INTf64rr
DDIVf64rr
MAXf64rr
SUB_RTZf64rr
ADD_RTZf64rr
MUL_RTZf64rr
SHLv2i32i64rr
USHRv2i32i64rr
SHLi32i64rr
USHRi32i64rr
IMIN64v2i64rr
UMIN64v2i64rr
IMAX64v2i64rr
UMAX64v2i64rr
ADDv2i64rr
ANDv2i64rr
SMODv2i64rr
UMODv2i64rr
IGEv2i64rr
UGEv2i64rr
INEv2i64rr
LCREATEv2i64rr
SMULv2i64rr
UMULv2i64rr
IEQv2i64rr
HILO_BITORv2i64rr
XORv2i64rr
VCONCATv2i64rr
ILTv2i64rr
ULTv2i64rr
VINSERTv2i64rr
SDIVv2i64rr
UDIVv2i64rr
IMIN64i64rr
UMIN64i64rr
IMAX64i64rr
UMAX64i64rr
SHLv2i64i64rr
USHRv2i64i64rr
SHLi64i64rr
USHRi64i64rr
SHRI16v2i16i64rr
SHL16v2i16i64rr
SHRU16v2i16i64rr
SHLv2i16i64rr
USHRv2i16i64rr
SHRI16i16i64rr
SHL16i16i64rr
SHRU16i16i64rr
SHLi16i64rr
USHRi16i64rr
SHRI16v2i8i64rr
SHL16v2i8i64rr
SHRU16v2i8i64rr
SHLv2i8i64rr
USHRv2i8i64rr
SHRI16i8i64rr
SHL16i8i64rr
SHRU16i8i64rr
SHLi8i64rr
USHRi8i64rr
CONTINUECi64rr
IFCi64rr
BREAKCi64rr
ADDi64rr
ANDi64rr
SMODi64rr
UMODi64rr
IGEi64rr
UGEi64rr
INEi64rr
LCREATEi64rr
SMULi64rr
UMULi64rr
IEQi64rr
XORi64rr
ILTi64rr
ULTi64rr
SDIVi64rr
UDIVi64rr
DP4rr
F16_SUBv2f16rr
F16_ADDv2f16rr
F16_MULv2f16rr
VCONCATv2f16rr
VINSERTv2f16rr
F16_DIVv2f16rr
F16_SUBf16rr
F16_ADDf16rr
F16_MULf16rr
F16_DIVf16rr
IMULHI24v2i16rr
UMULHI24v2i16rr
IMUL24v2i16rr
UMUL24v2i16rr
SUB16v2i16rr
ADD16v2i16rr
MUL16v2i16rr
F16_SUBv2i16rr
EADDv2i16rr
F16_ADDv2i16rr
ANDv2i16rr
F16_SUB_RTEv2i16rr
F16_ADD_RTEv2i16rr
F16_MUL_RTEv2i16rr
IMULHIv2i16rr
SMULHIv2i16rr
UMULHIv2i16rr
SMULv2i16rr
UMULv2i16rr
F16_MULv2i16rr
BFMv2i16rr
IMINv2i16rr
UMINv2i16rr
F16_MINv2i16rr
I16_MINv2i16rr
U16_MINv2i16rr
F16_SUB_RTNv2i16rr
F16_ADD_RTNv2i16rr
F16_MUL_RTNv2i16rr
F16_SUB_RTPv2i16rr
F16_ADD_RTPv2i16rr
F16_MUL_RTPv2i16rr
F16_LDEXPv2i16rr
XORv2i16rr
VCONCATv2i16rr
UMULHI_INTv2i16rr
VINSERTv2i16rr
NATIVE_UDIVv2i16rr
BORROWv2i16rr
IMAXv2i16rr
UMAXv2i16rr
F16_MAXv2i16rr
I16_MAXv2i16rr
U16_MAXv2i16rr
CARRYv2i16rr
F16_SUB_RTZv2i16rr
F16_ADD_RTZv2i16rr
F16_MUL_RTZv2i16rr
IMULHI24i16rr
UMULHI24i16rr
IMUL24i16rr
UMUL24i16rr
IMULHI24v4i16rr
UMULHI24v4i16rr
IMUL24v4i16rr
UMUL24v4i16rr
SUB16v4i16rr
ADD16v4i16rr
MUL16v4i16rr
F16_SUBv4i16rr
EADDv4i16rr
F16_ADDv4i16rr
ANDv4i16rr
F16_SUB_RTEv4i16rr
F16_ADD_RTEv4i16rr
F16_MUL_RTEv4i16rr
IMULHIv4i16rr
SMULHIv4i16rr
UMULHIv4i16rr
SMULv4i16rr
UMULv4i16rr
F16_MULv4i16rr
BFMv4i16rr
IMINv4i16rr
UMINv4i16rr
F16_MINv4i16rr
I16_MINv4i16rr
U16_MINv4i16rr
F16_SUB_RTNv4i16rr
F16_ADD_RTNv4i16rr
F16_MUL_RTNv4i16rr
F16_SUB_RTPv4i16rr
F16_ADD_RTPv4i16rr
F16_MUL_RTPv4i16rr
F16_LDEXPv4i16rr
HILO_BITORv4i16rr
XORv4i16rr
VCONCATv4i16rr
UMULHI_INTv4i16rr
VINSERTv4i16rr
NATIVE_UDIVv4i16rr
BORROWv4i16rr
IMAXv4i16rr
UMAXv4i16rr
F16_MAXv4i16rr
I16_MAXv4i16rr
U16_MAXv4i16rr
CARRYv4i16rr
F16_SUB_RTZv4i16rr
F16_ADD_RTZv4i16rr
F16_MUL_RTZv4i16rr
SUB16i16rr
ADD16i16rr
MUL16i16rr
SHRI16v2i16i16rr
SHL16v2i16i16rr
SHRU16v2i16i16rr
SHLv2i16i16rr
USHRv2i16i16rr
SHRI16v4i16i16rr
SHL16v4i16i16rr
SHRU16v4i16i16rr
SHLv4i16i16rr
USHRv4i16i16rr
SHRI16i16i16rr
SHL16i16i16rr
SHRU16i16i16rr
SHLi16i16rr
USHRi16i16rr
F16_SUBi16rr
CONTINUECi16rr
IFCi16rr
BREAKCi16rr
EADDi16rr
F16_ADDi16rr
ANDi16rr
F16_SUB_RTEi16rr
F16_ADD_RTEi16rr
F16_MUL_RTEi16rr
IMULHIi16rr
SMULHIi16rr
UMULHIi16rr
SMULi16rr
UMULi16rr
F16_MULi16rr
BFMi16rr
IMINi16rr
UMINi16rr
F16_MINi16rr
I16_MINi16rr
U16_MINi16rr
F16_SUB_RTNi16rr
F16_ADD_RTNi16rr
F16_MUL_RTNi16rr
F16_SUB_RTPi16rr
F16_ADD_RTPi16rr
F16_MUL_RTPi16rr
F16_LDEXPi16rr
XORi16rr
UMULHI_INTi16rr
NATIVE_UDIVi16rr
BORROWi16rr
IMAXi16rr
UMAXi16rr
F16_MAXi16rr
I16_MAXi16rr
U16_MAXi16rr
CARRYi16rr
F16_SUB_RTZi16rr
F16_ADD_RTZi16rr
F16_MUL_RTZi16rr
IMULHI24v2i8rr
UMULHI24v2i8rr
IMUL24v2i8rr
UMUL24v2i8rr
SUB16v2i8rr
ADD16v2i8rr
MUL16v2i8rr
EADDv2i8rr
ANDv2i8rr
IMULHIv2i8rr
SMULHIv2i8rr
UMULHIv2i8rr
SMULv2i8rr
UMULv2i8rr
BFMv2i8rr
IMINv2i8rr
UMINv2i8rr
XORv2i8rr
VCONCATv2i8rr
UMULHI_INTv2i8rr
VINSERTv2i8rr
NATIVE_UDIVv2i8rr
BORROWv2i8rr
IMAXv2i8rr
UMAXv2i8rr
CARRYv2i8rr
IMULHI24i8rr
UMULHI24i8rr
IMUL24i8rr
UMUL24i8rr
IMULHI24v4i8rr
UMULHI24v4i8rr
IMUL24v4i8rr
UMUL24v4i8rr
SUB16v4i8rr
ADD16v4i8rr
MUL16v4i8rr
EADDv4i8rr
ANDv4i8rr
IMULHIv4i8rr
SMULHIv4i8rr
UMULHIv4i8rr
SMULv4i8rr
UMULv4i8rr
BFMv4i8rr
IMINv4i8rr
UMINv4i8rr
XORv4i8rr
VCONCATv4i8rr
UMULHI_INTv4i8rr
VINSERTv4i8rr
NATIVE_UDIVv4i8rr
BORROWv4i8rr
IMAXv4i8rr
UMAXv4i8rr
CARRYv4i8rr
SUB16i8rr
ADD16i8rr
MUL16i8rr
SHRI16v2i8i8rr
SHL16v2i8i8rr
SHRU16v2i8i8rr
SHLv2i8i8rr
USHRv2i8i8rr
SHRI16v4i8i8rr
SHL16v4i8i8rr
SHRU16v4i8i8rr
SHLv4i8i8rr
USHRv4i8i8rr
SHRI16i8i8rr
SHL16i8i8rr
SHRU16i8i8rr
SHLi8i8rr
USHRi8i8rr
CONTINUECi8rr
IFCi8rr
BREAKCi8rr
EADDi8rr
ANDi8rr
IMULHIi8rr
SMULHIi8rr
UMULHIi8rr
SMULi8rr
UMULi8rr
BFMi8rr
IMINi8rr
UMINi8rr
XORi8rr
UMULHI_INTi8rr
NATIVE_UDIVi8rr
BORROWi8rr
IMAXi8rr
UMAXi8rr
CARRYi8rr
MED3v2f32irr
MIN3v2f32irr
MAX3v2f32irr
FMAv2f32irr
MADv2f32irr
FMA_RTEv2f32irr
MAD_RTEv2f32irr
FMA_RTNv2f32irr
MAD_RTNv2f32irr
CLAMPv2f32irr
LERPv2f32irr
FMA_RTPv2f32irr
MAD_RTPv2f32irr
FMA_RTZv2f32irr
MAD_RTZv2f32irr
MED3f32irr
MIN3f32irr
MAX3f32irr
MED3v4f32irr
MIN3v4f32irr
MAX3v4f32irr
FMAv4f32irr
MADv4f32irr
FMA_RTEv4f32irr
MAD_RTEv4f32irr
FMA_RTNv4f32irr
MAD_RTNv4f32irr
CLAMPv4f32irr
LERPv4f32irr
FMA_RTPv4f32irr
MAD_RTPv4f32irr
FMA_RTZv4f32irr
MAD_RTZv4f32irr
FMAf32irr
MADf32irr
FMA_RTEf32irr
MAD_RTEf32irr
FMA_RTNf32irr
MAD_RTNf32irr
CLAMPf32irr
LERPf32irr
FMA_RTPf32irr
MAD_RTPf32irr
FMA_RTZf32irr
MAD_RTZf32irr
SAD32i32irr
SAD32v2i32irr
IMED3v2i32irr
UMED3v2i32irr
IMIN3v2i32irr
UMIN3v2i32irr
IMAX3v2i32irr
UMAX3v2i32irr
IMAD24v2i32irr
UMAD24v2i32irr
SAD16v2i32irr
IMADv2i32irr
UMADv2i32irr
MSADv2i32irr
BFIv2i32irr
SADHIv2i32irr
BYTEALIGNv2i32irr
BITALIGNv2i32irr
U4LERPv2i32irr
IBIT_EXTRACTv2i32irr
UBIT_EXTRACTv2i32irr
IMED3i32irr
UMED3i32irr
IMIN3i32irr
UMIN3i32irr
IMAX3i32irr
UMAX3i32irr
BITALIGN_PAT_3i32irr
IMAD24i32irr
UMAD24i32irr
SAD32v4i32irr
IMED3v4i32irr
UMED3v4i32irr
IMIN3v4i32irr
UMIN3v4i32irr
IMAX3v4i32irr
UMAX3v4i32irr
IMAD24v4i32irr
UMAD24v4i32irr
SAD16v4i32irr
IMADv4i32irr
UMADv4i32irr
MSADv4i32irr
BFIv4i32irr
SADHIv4i32irr
BYTEALIGNv4i32irr
BITALIGNv4i32irr
U4LERPv4i32irr
IBIT_EXTRACTv4i32irr
UBIT_EXTRACTv4i32irr
SAD16i32irr
IMADi32irr
UMADi32irr
MSADi32irr
BFIi32irr
SADHIi32irr
BYTEALIGNi32irr
BITALIGNi32irr
U4LERPi32irr
IBIT_EXTRACTi32irr
UBIT_EXTRACTi32irr
DFMAv2f64irr
MADv2f64irr
DFMAf64irr
MADf64irr
MAD_RTEf64irr
MAD_RTNf64irr
MAD_RTPf64irr
MAD_RTZf64irr
SAD32i64irr
SAD32v2i64irr
IMED3v2i64irr
UMED3v2i64irr
IMIN3v2i64irr
UMIN3v2i64irr
IMAX3v2i64irr
UMAX3v2i64irr
IMAD24v2i64irr
UMAD24v2i64irr
SAD16v2i64irr
IMADv2i64irr
UMADv2i64irr
MSADv2i64irr
BFIv2i64irr
SADHIv2i64irr
BYTEALIGNv2i64irr
BITALIGNv2i64irr
U4LERPv2i64irr
IBIT_EXTRACTv2i64irr
UBIT_EXTRACTv2i64irr
IMED3i64irr
UMED3i64irr
IMIN3i64irr
UMIN3i64irr
IMAX3i64irr
UMAX3i64irr
IMAD24i64irr
UMAD24i64irr
SAD16i64irr
IMADi64irr
UMADi64irr
MSADi64irr
MQSADi64irr
BFIi64irr
SADHIi64irr
BYTEALIGNi64irr
BITALIGNi64irr
U4LERPi64irr
IBIT_EXTRACTi64irr
UBIT_EXTRACTi64irr
SAD4irr
SAD32i16irr
SAD32v2i16irr
IMED3v2i16irr
UMED3v2i16irr
IMIN3v2i16irr
UMIN3v2i16irr
IMAX3v2i16irr
UMAX3v2i16irr
IMAD24v2i16irr
UMAD24v2i16irr
SAD16v2i16irr
F16_FMAv2i16irr
IMADv2i16irr
UMADv2i16irr
F16_MADv2i16irr
I16_MADv2i16irr
U16_MADv2i16irr
MSADv2i16irr
F16_FMA_RTEv2i16irr
BFIv2i16irr
SADHIv2i16irr
BYTEALIGNv2i16irr
BITALIGNv2i16irr
F16_FMA_RTNv2i16irr
U4LERPv2i16irr
F16_FMA_RTPv2i16irr
IBIT_EXTRACTv2i16irr
UBIT_EXTRACTv2i16irr
F16_FMA_RTZv2i16irr
IMED3i16irr
UMED3i16irr
IMIN3i16irr
UMIN3i16irr
IMAX3i16irr
UMAX3i16irr
IMAD24i16irr
UMAD24i16irr
SAD32v4i16irr
IMED3v4i16irr
UMED3v4i16irr
IMIN3v4i16irr
UMIN3v4i16irr
IMAX3v4i16irr
UMAX3v4i16irr
IMAD24v4i16irr
UMAD24v4i16irr
SAD16v4i16irr
F16_FMAv4i16irr
IMADv4i16irr
UMADv4i16irr
F16_MADv4i16irr
I16_MADv4i16irr
U16_MADv4i16irr
MSADv4i16irr
F16_FMA_RTEv4i16irr
BFIv4i16irr
SADHIv4i16irr
BYTEALIGNv4i16irr
BITALIGNv4i16irr
F16_FMA_RTNv4i16irr
U4LERPv4i16irr
F16_FMA_RTPv4i16irr
IBIT_EXTRACTv4i16irr
UBIT_EXTRACTv4i16irr
F16_FMA_RTZv4i16irr
SAD16i16irr
F16_FMAi16irr
IMADi16irr
UMADi16irr
F16_MADi16irr
I16_MADi16irr
U16_MADi16irr
MSADi16irr
F16_FMA_RTEi16irr
BFIi16irr
SADHIi16irr
BYTEALIGNi16irr
BITALIGNi16irr
F16_FMA_RTNi16irr
U4LERPi16irr
F16_FMA_RTPi16irr
IBIT_EXTRACTi16irr
UBIT_EXTRACTi16irr
F16_FMA_RTZi16irr
SAD32i8irr
SAD32v2i8irr
IMED3v2i8irr
UMED3v2i8irr
IMIN3v2i8irr
UMIN3v2i8irr
IMAX3v2i8irr
UMAX3v2i8irr
IMAD24v2i8irr
UMAD24v2i8irr
SAD16v2i8irr
IMADv2i8irr
UMADv2i8irr
MSADv2i8irr
BFIv2i8irr
SADHIv2i8irr
BYTEALIGNv2i8irr
BITALIGNv2i8irr
U4LERPv2i8irr
IBIT_EXTRACTv2i8irr
UBIT_EXTRACTv2i8irr
IMED3i8irr
UMED3i8irr
IMIN3i8irr
UMIN3i8irr
IMAX3i8irr
UMAX3i8irr
IMAD24i8irr
UMAD24i8irr
SAD32v4i8irr
IMED3v4i8irr
UMED3v4i8irr
IMIN3v4i8irr
UMIN3v4i8irr
IMAX3v4i8irr
UMAX3v4i8irr
IMAD24v4i8irr
UMAD24v4i8irr
SAD16v4i8irr
IMADv4i8irr
UMADv4i8irr
MSADv4i8irr
BFIv4i8irr
SADHIv4i8irr
BYTEALIGNv4i8irr
BITALIGNv4i8irr
U4LERPv4i8irr
IBIT_EXTRACTv4i8irr
UBIT_EXTRACTv4i8irr
SAD16i8irr
IMADi8irr
UMADi8irr
MSADi8irr
BFIi8irr
SADHIi8irr
BYTEALIGNi8irr
BITALIGNi8irr
U4LERPi8irr
IBIT_EXTRACTi8irr
UBIT_EXTRACTi8irr
DP2ADDirr
BITALIGN_PAT_1i32iirr
BITALIGN_PAT_2i32iirr
UBIT_INSERTv2i32iirr
UBIT_INSERTv4i32iirr
UBIT_INSERTi32iirr
RECEIVELANEiirr
NEGHALFONE_GEf32rirr
NEGONE_GEf32rirr
ZERO_GEf32rirr
NEGHALFONE_EQf32rirr
NEGONE_EQf32rirr
ZERO_EQf32rirr
NEGHALFONE_LTf32rirr
NEGONE_LTf32rirr
ZERO_LTf32rirr
BITALIGN_PAT_1i32rirr
BITALIGN_PAT_2i32rirr
UBIT_INSERTv2i32rirr
UBIT_INSERTv4i32rirr
NEGHALFONE_GEi32rirr
NEGONE_GEi32rirr
ZERO_GEi32rirr
NEGHALFONE_EQi32rirr
NEGONE_EQi32rirr
ZERO_EQi32rirr
NEGHALFONE_LTi32rirr
NEGONE_LTi32rirr
ZERO_LTi32rirr
UBIT_INSERTi32rirr
RECEIVELANErirr
CMOV_LOGICALi64c32rrr
MED3v2f32rrr
MIN3v2f32rrr
MAX3v2f32rrr
FMAv2f32rrr
MADv2f32rrr
FMA_RTEv2f32rrr
MAD_RTEv2f32rrr
CMOV_LOGICALv2f32rrr
FMA_RTNv2f32rrr
MAD_RTNv2f32rrr
CLAMPv2f32rrr
LERPv2f32rrr
FMA_RTPv2f32rrr
MAD_RTPv2f32rrr
FMA_RTZv2f32rrr
MAD_RTZv2f32rrr
MED3f32rrr
MIN3f32rrr
MAX3f32rrr
MED3v4f32rrr
MIN3v4f32rrr
MAX3v4f32rrr
FMAv4f32rrr
MADv4f32rrr
FMA_RTEv4f32rrr
MAD_RTEv4f32rrr
CMOV_LOGICALv4f32rrr
FMA_RTNv4f32rrr
MAD_RTNv4f32rrr
CLAMPv4f32rrr
LERPv4f32rrr
FMA_RTPv4f32rrr
MAD_RTPv4f32rrr
FMA_RTZv4f32rrr
MAD_RTZv4f32rrr
FMAf32rrr
MADf32rrr
FMA_RTEf32rrr
MAD_RTEf32rrr
CMOV_LOGICALf32rrr
FMA_RTNf32rrr
MAD_RTNf32rrr
CLAMPf32rrr
LERPf32rrr
FMA_RTPf32rrr
MAD_RTPf32rrr
FMA_RTZf32rrr
MAD_RTZf32rrr
SAD32i32rrr
SAD32v2i32rrr
IMED3v2i32rrr
UMED3v2i32rrr
IMIN3v2i32rrr
UMIN3v2i32rrr
IMAX3v2i32rrr
UMAX3v2i32rrr
IMAD24v2i32rrr
UMAD24v2i32rrr
SAD16v2i32rrr
IMADv2i32rrr
UMADv2i32rrr
MSADv2i32rrr
BFIv2i32rrr
SADHIv2i32rrr
CMOV_LOGICALv2i32rrr
BYTEALIGNv2i32rrr
BITALIGNv2i32rrr
U4LERPv2i32rrr
IBIT_EXTRACTv2i32rrr
UBIT_EXTRACTv2i32rrr
IMED3i32rrr
UMED3i32rrr
IMIN3i32rrr
UMIN3i32rrr
IMAX3i32rrr
UMAX3i32rrr
BITALIGN_PAT_3i32rrr
IMAD24i32rrr
UMAD24i32rrr
SAD32v4i32rrr
IMED3v4i32rrr
UMED3v4i32rrr
IMIN3v4i32rrr
UMIN3v4i32rrr
IMAX3v4i32rrr
UMAX3v4i32rrr
IMAD24v4i32rrr
UMAD24v4i32rrr
SAD16v4i32rrr
IMADv4i32rrr
UMADv4i32rrr
MSADv4i32rrr
BFIv4i32rrr
SADHIv4i32rrr
CMOV_LOGICALv4i32rrr
BYTEALIGNv4i32rrr
BITALIGNv4i32rrr
U4LERPv4i32rrr
IBIT_EXTRACTv4i32rrr
UBIT_EXTRACTv4i32rrr
SAD16i32rrr
IMADi32rrr
UMADi32rrr
MSADi32rrr
BFIi32rrr
SADHIi32rrr
CMOV_LOGICALi32rrr
BYTEALIGNi32rrr
BITALIGNi32rrr
U4LERPi32rrr
IBIT_EXTRACTi32rrr
UBIT_EXTRACTi32rrr
BFI_PAT3rrr
CMOV_LOGICALi32c64rrr
DFMAv2f64rrr
MADv2f64rrr
CMOV_LOGICALv2f64rrr
DFMAf64rrr
MADf64rrr
MAD_RTEf64rrr
CMOV_LOGICALf64rrr
MAD_RTNf64rrr
MAD_RTPf64rrr
MAD_RTZf64rrr
SAD32i64rrr
SAD32v2i64rrr
IMED3v2i64rrr
UMED3v2i64rrr
IMIN3v2i64rrr
UMIN3v2i64rrr
IMAX3v2i64rrr
UMAX3v2i64rrr
IMAD24v2i64rrr
UMAD24v2i64rrr
SAD16v2i64rrr
IMADv2i64rrr
UMADv2i64rrr
MSADv2i64rrr
BFIv2i64rrr
SADHIv2i64rrr
CMOV_LOGICALv2i64rrr
BYTEALIGNv2i64rrr
BITALIGNv2i64rrr
U4LERPv2i64rrr
IBIT_EXTRACTv2i64rrr
UBIT_EXTRACTv2i64rrr
IMED3i64rrr
UMED3i64rrr
IMIN3i64rrr
UMIN3i64rrr
IMAX3i64rrr
UMAX3i64rrr
IMAD24i64rrr
UMAD24i64rrr
SAD16i64rrr
IMADi64rrr
UMADi64rrr
MSADi64rrr
MQSADi64rrr
BFIi64rrr
SADHIi64rrr
CMOV_LOGICALi64rrr
BYTEALIGNi64rrr
BITALIGNi64rrr
U4LERPi64rrr
IBIT_EXTRACTi64rrr
UBIT_EXTRACTi64rrr
SAD4rrr
CMOV_LOGICALv2f16rrr
CMOV_LOGICALf16rrr
SAD32i16rrr
SAD32v2i16rrr
IMED3v2i16rrr
UMED3v2i16rrr
IMIN3v2i16rrr
UMIN3v2i16rrr
IMAX3v2i16rrr
UMAX3v2i16rrr
IMAD24v2i16rrr
UMAD24v2i16rrr
SAD16v2i16rrr
F16_FMAv2i16rrr
IMADv2i16rrr
UMADv2i16rrr
F16_MADv2i16rrr
I16_MADv2i16rrr
U16_MADv2i16rrr
MSADv2i16rrr
F16_FMA_RTEv2i16rrr
BFIv2i16rrr
SADHIv2i16rrr
CMOV_LOGICALv2i16rrr
BYTEALIGNv2i16rrr
BITALIGNv2i16rrr
F16_FMA_RTNv2i16rrr
U4LERPv2i16rrr
F16_FMA_RTPv2i16rrr
IBIT_EXTRACTv2i16rrr
UBIT_EXTRACTv2i16rrr
F16_FMA_RTZv2i16rrr
IMED3i16rrr
UMED3i16rrr
IMIN3i16rrr
UMIN3i16rrr
IMAX3i16rrr
UMAX3i16rrr
IMAD24i16rrr
UMAD24i16rrr
SAD32v4i16rrr
IMED3v4i16rrr
UMED3v4i16rrr
IMIN3v4i16rrr
UMIN3v4i16rrr
IMAX3v4i16rrr
UMAX3v4i16rrr
IMAD24v4i16rrr
UMAD24v4i16rrr
SAD16v4i16rrr
F16_FMAv4i16rrr
IMADv4i16rrr
UMADv4i16rrr
F16_MADv4i16rrr
I16_MADv4i16rrr
U16_MADv4i16rrr
MSADv4i16rrr
F16_FMA_RTEv4i16rrr
BFIv4i16rrr
SADHIv4i16rrr
CMOV_LOGICALv4i16rrr
BYTEALIGNv4i16rrr
BITALIGNv4i16rrr
F16_FMA_RTNv4i16rrr
U4LERPv4i16rrr
F16_FMA_RTPv4i16rrr
IBIT_EXTRACTv4i16rrr
UBIT_EXTRACTv4i16rrr
F16_FMA_RTZv4i16rrr
SAD16i16rrr
F16_FMAi16rrr
IMADi16rrr
UMADi16rrr
F16_MADi16rrr
I16_MADi16rrr
U16_MADi16rrr
MSADi16rrr
F16_FMA_RTEi16rrr
BFIi16rrr
SADHIi16rrr
CMOV_LOGICALi16rrr
BYTEALIGNi16rrr
BITALIGNi16rrr
F16_FMA_RTNi16rrr
U4LERPi16rrr
F16_FMA_RTPi16rrr
IBIT_EXTRACTi16rrr
UBIT_EXTRACTi16rrr
F16_FMA_RTZi16rrr
SAD32i8rrr
SAD32v2i8rrr
IMED3v2i8rrr
UMED3v2i8rrr
IMIN3v2i8rrr
UMIN3v2i8rrr
IMAX3v2i8rrr
UMAX3v2i8rrr
IMAD24v2i8rrr
UMAD24v2i8rrr
SAD16v2i8rrr
IMADv2i8rrr
UMADv2i8rrr
MSADv2i8rrr
BFIv2i8rrr
SADHIv2i8rrr
CMOV_LOGICALv2i8rrr
BYTEALIGNv2i8rrr
BITALIGNv2i8rrr
U4LERPv2i8rrr
IBIT_EXTRACTv2i8rrr
UBIT_EXTRACTv2i8rrr
IMED3i8rrr
UMED3i8rrr
IMIN3i8rrr
UMIN3i8rrr
IMAX3i8rrr
UMAX3i8rrr
IMAD24i8rrr
UMAD24i8rrr
SAD32v4i8rrr
IMED3v4i8rrr
UMED3v4i8rrr
IMIN3v4i8rrr
UMIN3v4i8rrr
IMAX3v4i8rrr
UMAX3v4i8rrr
IMAD24v4i8rrr
UMAD24v4i8rrr
SAD16v4i8rrr
IMADv4i8rrr
UMADv4i8rrr
MSADv4i8rrr
BFIv4i8rrr
SADHIv4i8rrr
CMOV_LOGICALv4i8rrr
BYTEALIGNv4i8rrr
BITALIGNv4i8rrr
U4LERPv4i8rrr
IBIT_EXTRACTv4i8rrr
UBIT_EXTRACTv4i8rrr
SAD16i8rrr
IMADi8rrr
UMADi8rrr
MSADi8rrr
BFIi8rrr
SADHIi8rrr
CMOV_LOGICALi8rrr
BYTEALIGNi8rrr
BITALIGNi8rrr
U4LERPi8rrr
IBIT_EXTRACTi8rrr
UBIT_EXTRACTi8rrr
BFI_PAT1Arrr
BFI_PAT2Arrr
DP2ADDrrr
BITALIGN_PAT_1i32irrr
BITALIGN_PAT_2i32irrr
UBIT_INSERTv2i32irrr
UBIT_INSERTv4i32irrr
UBIT_INSERTi32irrr
RECEIVELANEirrr
BITALIGN_PAT_1i32rrrr
BITALIGN_PAT_2i32rrrr
UBIT_INSERTv2i32rrrr
UBIT_INSERTv4i32rrrr
UBIT_INSERTi32rrrr
RECEIVELANErrrr
N4llvm14AMDILInstrInfoE
N4llvm17AMDILGenInstrInfoE
N4llvm18AMDILIntrinsicInfoE
N4llvm18AMDILKernelManagerE
N4llvm2cl11OptionValueIjEE
N4llvm2cl15OptionValueBaseIjLb0EEE
N4llvm2cl15OptionValueCopyIjEE
N12_GLOBAL__N_119AMDILLiteralManagerE
N4llvm14AMDILMCAsmInfoE
N4llvm24AMDILMachineFunctionInfoE
N12_GLOBAL__N_120AMDILMachinePeepholeE
N4llvm15AMDILModuleInfoE
N4llvm18ValueMapCallbackVHIPKNS_5ValueEbNS_14ValueMapConfigIS3_EEEE
N4llvm2cl11OptionValueIbEE
N4llvm2cl15OptionValueBaseIbLb0EEE
N4llvm2cl15OptionValueCopyIbEE
N12_GLOBAL__N_116AMDILPeepholeOptE
N4llvm19AMDILPointerManagerE
N4llvm21AMDILEGPointerManagerE
N4llvm23AMDILPointerManagerImplE
N4llvm25AMDILEGPointerManagerImplE
N12_GLOBAL__N_118AMDILPrintfConvertE
R1000
Rw1000
Rzw1000
Rx1000
Ry1000
Rxy1000
Rz1000
IN100
R100
CB1_100
INw100
Rw100
CB1_w100
INzw100
Rzw100
CB1_zw100
INx100
Rx100
CB1_x100
INy100
Ry100
CB1_y100
INxy100
Rxy100
CB1_xy100
INz100
Rz100
CB1_z100
IN200
R200
CB1_200
INw200
Rw200
CB1_w200
INzw200
Rzw200
CB1_zw200
INx200
Rx200
CB1_x200
INy200
Ry200
CB1_y200
INxy200
Rxy200
CB1_xy200
INz200
Rz200
CB1_z200
R1010
Rw1010
Rzw1010
Rx1010
Ry1010
Rxy1010
Rz1010
IN110
R110
CB1_110
INw110
Rw110
CB1_w110
INzw110
Rzw110
CB1_zw110
INx110
Rx110
CB1_x110
INy110
Ry110
CB1_y110
INxy110
Rxy110
CB1_xy110
INz110
Rz110
CB1_z110
IN210
R210
CB1_210
INw210
Rw210
CB1_w210
INzw210
Rzw210
CB1_zw210
INx210
Rx210
CB1_x210
INy210
Ry210
CB1_y210
INxy210
Rxy210
CB1_xy210
INz210
Rz210
CB1_z210
CFG10
IN10
CB1_10
INw10
Rw10
CB1_w10
INzw10
Rzw10
CB1_zw10
INx10
Rx10
CB1_x10
INy10
Ry10
CB1_y10
INxy10
Rxy10
CB1_xy10
INz10
Rz10
CB1_z10
IN120
R120
CB1_120
INw120
Rw120
CB1_w120
INzw120
Rzw120
CB1_zw120
INx120
Rx120
CB1_x120
INy120
Ry120
CB1_y120
INxy120
Rxy120
CB1_xy120
INz120
Rz120
CB1_z120
IN220
R220
CB1_220
INw220
Rw220
CB1_w220
INzw220
Rzw220
CB1_zw220
INx220
Rx220
CB1_x220
INy220
Ry220
CB1_y220
INxy220
Rxy220
CB1_xy220
INz220
Rz220
CB1_z220
CFG20
IN20
CB1_20
INw20
Rw20
CB1_w20
INzw20
Rzw20
CB1_zw20
INx20
Rx20
CB1_x20
INy20
Ry20
CB1_y20
INxy20
Rxy20
CB1_xy20
INz20
Rz20
CB1_z20
IN130
R130
CB1_130
INw130
Rw130
CB1_w130
INzw130
Rzw130
CB1_zw130
INx130
Rx130
CB1_x130
INy130
Ry130
CB1_y130
INxy130
Rxy130
CB1_xy130
INz130
Rz130
CB1_z130
IN230
R230
CB1_230
INw230
Rw230
CB1_w230
INzw230
Rzw230
CB1_zw230
INx230
Rx230
CB1_x230
INy230
Ry230
CB1_y230
INxy230
Rxy230
CB1_xy230
INz230
Rz230
CB1_z230
IN30
CB1_30
INw30
Rw30
CB1_w30
INzw30
Rzw30
CB1_zw30
INx30
Rx30
CB1_x30
INy30
Ry30
CB1_y30
INxy30
Rxy30
CB1_xy30
INz30
Rz30
CB1_z30
IN140
R140
CB1_140
INw140
Rw140
CB1_w140
INzw140
Rzw140
CB1_zw140
INx140
Rx140
CB1_x140
INy140
Ry140
CB1_y140
INxy140
Rxy140
CB1_xy140
INz140
Rz140
CB1_z140
IN240
R240
CB1_240
INw240
Rw240
CB1_w240
INzw240
Rzw240
CB1_zw240
INx240
Rx240
CB1_x240
INy240
Ry240
CB1_y240
INxy240
Rxy240
CB1_xy240
INz240
Rz240
CB1_z240
IN40
CB1_40
INw40
Rw40
CB1_w40
INzw40
Rzw40
CB1_zw40
INx40
Rx40
CB1_x40
INy40
Ry40
CB1_y40
INxy40
Rxy40
CB1_xy40
INz40
Rz40
CB1_z40
IN150
R150
CB1_150
INw150
Rw150
CB1_w150
INzw150
Rzw150
CB1_zw150
INx150
Rx150
CB1_x150
INy150
Ry150
CB1_y150
INxy150
Rxy150
CB1_xy150
INz150
Rz150
CB1_z150
IN250
R250
CB1_250
INw250
Rw250
CB1_w250
INzw250
Rzw250
CB1_zw250
INx250
Rx250
CB1_x250
INy250
Ry250
CB1_y250
INxy250
Rxy250
CB1_xy250
INz250
Rz250
CB1_z250
IN50
CB1_50
INw50
Rw50
CB1_w50
INzw50
Rzw50
CB1_zw50
INx50
Rx50
CB1_x50
INy50
Ry50
CB1_y50
INxy50
Rxy50
CB1_xy50
INz50
Rz50
CB1_z50
IN160
R160
CB1_160
INw160
Rw160
CB1_w160
INzw160
Rzw160
CB1_zw160
INx160
Rx160
CB1_x160
INy160
Ry160
CB1_y160
INxy160
Rxy160
CB1_xy160
INz160
Rz160
CB1_z160
R260
Rw260
Rzw260
Rx260
Ry260
Rxy260
Rz260
IN60
CB1_60
INw60
Rw60
CB1_w60
INzw60
Rzw60
CB1_zw60
INx60
Rx60
CB1_x60
INy60
Ry60
CB1_y60
INxy60
Rxy60
CB1_xy60
INz60
Rz60
CB1_z60
IN170
R170
CB1_170
INw170
Rw170
CB1_w170
INzw170
Rzw170
CB1_zw170
INx170
Rx170
CB1_x170
INy170
Ry170
CB1_y170
INxy170
Rxy170
CB1_xy170
INz170
Rz170
CB1_z170
R270
Rw270
Rzw270
Rx270
Ry270
Rxy270
Rz270
IN70
CB1_70
INw70
Rw70
CB1_w70
INzw70
Rzw70
CB1_zw70
INx70
Rx70
CB1_x70
INy70
Ry70
CB1_y70
INxy70
Rxy70
CB1_xy70
INz70
Rz70
CB1_z70
IN180
R180
CB1_180
INw180
Rw180
CB1_w180
INzw180
Rzw180
CB1_zw180
INx180
Rx180
CB1_x180
INy180
Ry180
CB1_y180
INxy180
Rxy180
CB1_xy180
INz180
Rz180
CB1_z180
R280
Rw280
Rzw280
Rx280
Ry280
Rxy280
Rz280
IN80
CB1_80
INw80
Rw80
CB1_w80
INzw80
Rzw80
CB1_zw80
INx80
Rx80
CB1_x80
INy80
Ry80
CB1_y80
INxy80
Rxy80
CB1_xy80
INz80
Rz80
CB1_z80
IN190
R190
CB1_190
INw190
Rw190
CB1_w190
INzw190
Rzw190
CB1_zw190
INx190
Rx190
CB1_x190
INy190
Ry190
CB1_y190
INxy190
Rxy190
CB1_xy190
INz190
Rz190
CB1_z190
IN90
CB1_90
INw90
Rw90
CB1_w90
INzw90
Rzw90
CB1_zw90
INx90
Rx90
CB1_x90
INy90
Ry90
CB1_y90
INxy90
Rxy90
CB1_xy90
INz90
Rz90
CB1_z90
OUT0
CB1_0
INw0
OUTw0
CB1_w0
INzw0
OUTzw0
CB1_zw0
INx0
OUTx0
CB1_x0
INy0
OUTy0
CB1_y0
INxy0
OUTxy0
CB1_xy0
INz0
OUTz0
CB1_z0
R1001
Rw1001
Rzw1001
Rx1001
Ry1001
Rxy1001
Rz1001
IN101
R101
CB1_101
INw101
Rw101
CB1_w101
INzw101
Rzw101
CB1_zw101
INx101
Rx101
CB1_x101
INy101
Ry101
CB1_y101
INxy101
Rxy101
CB1_xy101
INz101
Rz101
CB1_z101
IN201
R201
CB1_201
INw201
Rw201
CB1_w201
INzw201
Rzw201
CB1_zw201
INx201
Rx201
CB1_x201
INy201
Ry201
CB1_y201
INxy201
Rxy201
CB1_xy201
INz201
Rz201
CB1_z201
R1011
Rw1011
Rzw1011
Rx1011
Ry1011
Rxy1011
Rz1011
IN111
R111
CB1_111
INw111
Rw111
CB1_w111
INzw111
Rzw111
CB1_zw111
INx111
Rx111
CB1_x111
INy111
Ry111
CB1_y111
INxy111
Rxy111
CB1_xy111
INz111
Rz111
CB1_z111
IN211
R211
CB1_211
INw211
Rw211
CB1_w211
INzw211
Rzw211
CB1_zw211
INx211
Rx211
CB1_x211
INy211
Ry211
CB1_y211
INxy211
Rxy211
CB1_xy211
INz211
Rz211
CB1_z211
CFG11
IN11
CB1_11
INw11
Rw11
CB1_w11
INzw11
Rzw11
CB1_zw11
INx11
Rx11
CB1_x11
INy11
Ry11
CB1_y11
INxy11
Rxy11
CB1_xy11
INz11
Rz11
CB1_z11
IN121
R121
CB1_121
INw121
Rw121
CB1_w121
INzw121
Rzw121
CB1_zw121
INx121
Rx121
CB1_x121
INy121
Ry121
CB1_y121
INxy121
Rxy121
CB1_xy121
INz121
Rz121
CB1_z121
IN221
R221
CB1_221
INw221
Rw221
CB1_w221
INzw221
Rzw221
CB1_zw221
INx221
Rx221
CB1_x221
INy221
Ry221
CB1_y221
INxy221
Rxy221
CB1_xy221
INz221
Rz221
CB1_z221
IN21
CB1_21
INw21
Rw21
CB1_w21
INzw21
Rzw21
CB1_zw21
INx21
Rx21
CB1_x21
INy21
Ry21
CB1_y21
INxy21
Rxy21
CB1_xy21
INz21
Rz21
CB1_z21
IN131
R131
CB1_131
INw131
Rw131
CB1_w131
INzw131
Rzw131
CB1_zw131
INx131
Rx131
CB1_x131
INy131
Ry131
CB1_y131
INxy131
Rxy131
CB1_xy131
INz131
Rz131
CB1_z131
IN231
R231
CB1_231
INw231
Rw231
CB1_w231
INzw231
Rzw231
CB1_zw231
INx231
Rx231
CB1_x231
INy231
Ry231
CB1_y231
INxy231
Rxy231
CB1_xy231
INz231
Rz231
CB1_z231
IN31
CB1_31
INw31
Rw31
CB1_w31
INzw31
Rzw31
CB1_zw31
INx31
Rx31
CB1_x31
INy31
Ry31
CB1_y31
INxy31
Rxy31
CB1_xy31
INz31
Rz31
CB1_z31
IN141
R141
CB1_141
INw141
Rw141
CB1_w141
INzw141
Rzw141
CB1_zw141
INx141
Rx141
CB1_x141
INy141
Ry141
CB1_y141
INxy141
Rxy141
CB1_xy141
INz141
Rz141
CB1_z141
IN241
R241
CB1_241
INw241
Rw241
CB1_w241
INzw241
Rzw241
CB1_zw241
INx241
Rx241
CB1_x241
INy241
Ry241
CB1_y241
INxy241
Rxy241
CB1_xy241
INz241
Rz241
CB1_z241
IN41
CB1_41
INw41
Rw41
CB1_w41
INzw41
Rzw41
CB1_zw41
INx41
Rx41
CB1_x41
INy41
Ry41
CB1_y41
INxy41
Rxy41
CB1_xy41
INz41
Rz41
CB1_z41
IN151
R151
CB1_151
INw151
Rw151
CB1_w151
INzw151
Rzw151
CB1_zw151
INx151
Rx151
CB1_x151
INy151
Ry151
CB1_y151
INxy151
Rxy151
CB1_xy151
INz151
Rz151
CB1_z151
IN251
R251
CB1_251
INw251
Rw251
CB1_w251
INzw251
Rzw251
CB1_zw251
INx251
Rx251
CB1_x251
INy251
Ry251
CB1_y251
INxy251
Rxy251
CB1_xy251
INz251
Rz251
CB1_z251
IN51
CB1_51
INw51
Rw51
CB1_w51
INzw51
Rzw51
CB1_zw51
INx51
Rx51
CB1_x51
INy51
Ry51
CB1_y51
INxy51
Rxy51
CB1_xy51
INz51
Rz51
CB1_z51
IN161
R161
CB1_161
INw161
Rw161
CB1_w161
INzw161
Rzw161
CB1_zw161
INx161
Rx161
CB1_x161
INy161
Ry161
CB1_y161
INxy161
Rxy161
CB1_xy161
INz161
Rz161
CB1_z161
R261
Rw261
Rzw261
Rx261
Ry261
Rxy261
Rz261
IN61
CB1_61
INw61
Rw61
CB1_w61
INzw61
Rzw61
CB1_zw61
INx61
Rx61
CB1_x61
INy61
Ry61
CB1_y61
INxy61
Rxy61
CB1_xy61
INz61
Rz61
CB1_z61
IN171
R171
CB1_171
INw171
Rw171
CB1_w171
INzw171
Rzw171
CB1_zw171
INx171
Rx171
CB1_x171
INy171
Ry171
CB1_y171
INxy171
Rxy171
CB1_xy171
INz171
Rz171
CB1_z171
R271
Rw271
Rzw271
Rx271
Ry271
Rxy271
Rz271
IN71
CB1_71
INw71
Rw71
CB1_w71
INzw71
Rzw71
CB1_zw71
INx71
Rx71
CB1_x71
INy71
Ry71
CB1_y71
INxy71
Rxy71
CB1_xy71
INz71
Rz71
CB1_z71
IN181
R181
CB1_181
INw181
Rw181
CB1_w181
INzw181
Rzw181
CB1_zw181
INx181
Rx181
CB1_x181
INy181
Ry181
CB1_y181
INxy181
Rxy181
CB1_xy181
INz181
Rz181
CB1_z181
R281
Rw281
Rzw281
Rx281
Ry281
Rxy281
Rz281
IN81
CB1_81
INw81
Rw81
CB1_w81
INzw81
Rzw81
CB1_zw81
INx81
Rx81
CB1_x81
INy81
Ry81
CB1_y81
INxy81
Rxy81
CB1_xy81
INz81
Rz81
CB1_z81
IN191
R191
CB1_191
INw191
Rw191
CB1_w191
INzw191
Rzw191
CB1_zw191
INx191
Rx191
CB1_x191
INy191
Ry191
CB1_y191
INxy191
Rxy191
CB1_xy191
INz191
Rz191
CB1_z191
IN91
CB1_91
INw91
Rw91
CB1_w91
INzw91
Rzw91
CB1_zw91
INx91
Rx91
CB1_x91
INy91
Ry91
CB1_y91
INxy91
Rxy91
CB1_xy91
INz91
Rz91
CB1_z91
CFG1
OUT1
CB1_1
INw1
OUTw1
CB1_w1
INzw1
Rzw1
OUTzw1
CB1_zw1
INx1
OUTx1
CB1_x1
INy1
OUTy1
CB1_y1
INxy1
Rxy1
OUTxy1
CB1_xy1
INz1
OUTz1
CB1_z1
R1002
Rw1002
Rzw1002
Rx1002
Ry1002
Rxy1002
Rz1002
IN102
R102
CB1_102
INw102
Rw102
CB1_w102
INzw102
Rzw102
CB1_zw102
INx102
Rx102
CB1_x102
INy102
Ry102
CB1_y102
INxy102
Rxy102
CB1_xy102
INz102
Rz102
CB1_z102
IN202
R202
CB1_202
INw202
Rw202
CB1_w202
INzw202
Rzw202
CB1_zw202
INx202
Rx202
CB1_x202
INy202
Ry202
CB1_y202
INxy202
Rxy202
CB1_xy202
INz202
Rz202
CB1_z202
R1012
Rw1012
Rzw1012
Rx1012
Ry1012
Rxy1012
Rz1012
IN112
R112
CB1_112
INw112
Rw112
CB1_w112
INzw112
Rzw112
CB1_zw112
INx112
Rx112
CB1_x112
INy112
Ry112
CB1_y112
INxy112
Rxy112
CB1_xy112
INz112
Rz112
CB1_z112
IN212
R212
CB1_212
INw212
Rw212
CB1_w212
INzw212
Rzw212
CB1_zw212
INx212
Rx212
CB1_x212
INy212
Ry212
CB1_y212
INxy212
Rxy212
CB1_xy212
INz212
Rz212
CB1_z212
CFG12
IN12
CB1_12
INw12
Rw12
CB1_w12
INzw12
Rzw12
CB1_zw12
INx12
Rx12
CB1_x12
INy12
Ry12
CB1_y12
INxy12
Rxy12
CB1_xy12
INz12
Rz12
CB1_z12
IN122
R122
CB1_122
INw122
Rw122
CB1_w122
INzw122
Rzw122
CB1_zw122
INx122
Rx122
CB1_x122
INy122
Ry122
CB1_y122
INxy122
Rxy122
CB1_xy122
INz122
Rz122
CB1_z122
IN222
R222
CB1_222
INw222
Rw222
CB1_w222
INzw222
Rzw222
CB1_zw222
INx222
Rx222
CB1_x222
INy222
Ry222
CB1_y222
INxy222
Rxy222
CB1_xy222
INz222
Rz222
CB1_z222
IN22
CB1_22
INw22
Rw22
CB1_w22
INzw22
Rzw22
CB1_zw22
INx22
Rx22
CB1_x22
INy22
Ry22
CB1_y22
INxy22
Rxy22
CB1_xy22
INz22
Rz22
CB1_z22
IN132
R132
CB1_132
INw132
Rw132
CB1_w132
INzw132
Rzw132
CB1_zw132
INx132
Rx132
CB1_x132
INy132
Ry132
CB1_y132
INxy132
Rxy132
CB1_xy132
INz132
Rz132
CB1_z132
IN232
R232
CB1_232
INw232
Rw232
CB1_w232
INzw232
Rzw232
CB1_zw232
INx232
Rx232
CB1_x232
INy232
Ry232
CB1_y232
INxy232
Rxy232
CB1_xy232
INz232
Rz232
CB1_z232
IN32
CB1_32
INw32
Rw32
CB1_w32
INzw32
Rzw32
CB1_zw32
INx32
Rx32
CB1_x32
INy32
Ry32
CB1_y32
INxy32
Rxy32
CB1_xy32
INz32
Rz32
CB1_z32
IN142
R142
CB1_142
INw142
Rw142
CB1_w142
INzw142
Rzw142
CB1_zw142
INx142
Rx142
CB1_x142
INy142
Ry142
CB1_y142
INxy142
Rxy142
CB1_xy142
INz142
Rz142
CB1_z142
IN242
R242
CB1_242
INw242
Rw242
CB1_w242
INzw242
Rzw242
CB1_zw242
INx242
Rx242
CB1_x242
INy242
Ry242
CB1_y242
INxy242
Rxy242
CB1_xy242
INz242
Rz242
CB1_z242
IN42
CB1_42
INw42
Rw42
CB1_w42
INzw42
Rzw42
CB1_zw42
INx42
Rx42
CB1_x42
INy42
Ry42
CB1_y42
INxy42
Rxy42
CB1_xy42
INz42
Rz42
CB1_z42
IN152
R152
CB1_152
INw152
Rw152
CB1_w152
INzw152
Rzw152
CB1_zw152
INx152
Rx152
CB1_x152
INy152
Ry152
CB1_y152
INxy152
Rxy152
CB1_xy152
INz152
Rz152
CB1_z152
IN252
R252
CB1_252
INw252
Rw252
CB1_w252
INzw252
Rzw252
CB1_zw252
INx252
Rx252
CB1_x252
INy252
Ry252
CB1_y252
INxy252
Rxy252
CB1_xy252
INz252
Rz252
CB1_z252
IN52
CB1_52
INw52
Rw52
CB1_w52
INzw52
Rzw52
CB1_zw52
INx52
Rx52
CB1_x52
INy52
Ry52
CB1_y52
INxy52
Rxy52
CB1_xy52
INz52
Rz52
CB1_z52
IN162
R162
CB1_162
INw162
Rw162
CB1_w162
INzw162
Rzw162
CB1_zw162
INx162
Rx162
CB1_x162
INy162
Ry162
CB1_y162
INxy162
Rxy162
CB1_xy162
INz162
Rz162
CB1_z162
R262
Rw262
Rzw262
Rx262
Ry262
Rxy262
Rz262
IN62
CB1_62
INw62
Rw62
CB1_w62
INzw62
Rzw62
CB1_zw62
INx62
Rx62
CB1_x62
INy62
Ry62
CB1_y62
INxy62
Rxy62
CB1_xy62
INz62
Rz62
CB1_z62
IN172
R172
CB1_172
INw172
Rw172
CB1_w172
INzw172
Rzw172
CB1_zw172
INx172
Rx172
CB1_x172
INy172
Ry172
CB1_y172
INxy172
Rxy172
CB1_xy172
INz172
Rz172
CB1_z172
R272
Rw272
Rzw272
Rx272
Ry272
Rxy272
Rz272
IN72
CB1_72
INw72
Rw72
CB1_w72
INzw72
Rzw72
CB1_zw72
INx72
Rx72
CB1_x72
INy72
Ry72
CB1_y72
INxy72
Rxy72
CB1_xy72
INz72
Rz72
CB1_z72
IN182
R182
CB1_182
INw182
Rw182
CB1_w182
INzw182
Rzw182
CB1_zw182
INx182
Rx182
CB1_x182
INy182
Ry182
CB1_y182
INxy182
Rxy182
CB1_xy182
INz182
Rz182
CB1_z182
R282
Rw282
Rzw282
Rx282
Ry282
Rxy282
Rz282
IN82
CB1_82
INw82
Rw82
CB1_w82
INzw82
Rzw82
CB1_zw82
INx82
Rx82
CB1_x82
INy82
Ry82
CB1_y82
INxy82
Rxy82
CB1_xy82
INz82
Rz82
CB1_z82
IN192
R192
CB1_192
INw192
Rw192
CB1_w192
INzw192
Rzw192
CB1_zw192
INx192
Rx192
CB1_x192
INy192
Ry192
CB1_y192
INxy192
Rxy192
CB1_xy192
INz192
Rz192
CB1_z192
IN92
CB1_92
INw92
Rw92
CB1_w92
INzw92
Rzw92
CB1_zw92
INx92
Rx92
CB1_x92
INy92
Ry92
CB1_y92
INxy92
Rxy92
CB1_xy92
INz92
Rz92
CB1_z92
CFG2
OUT2
CB1_2
INw2
OUTw2
CB1_w2
INzw2
Rzw2
OUTzw2
CB1_zw2
INx2
OUTx2
CB1_x2
INy2
OUTy2
CB1_y2
INxy2
Rxy2
OUTxy2
CB1_xy2
INz2
OUTz2
CB1_z2
R1003
Rw1003
Rzw1003
Rx1003
Ry1003
Rxy1003
Rz1003
IN103
R103
CB1_103
INw103
Rw103
CB1_w103
INzw103
Rzw103
CB1_zw103
INx103
Rx103
CB1_x103
INy103
Ry103
CB1_y103
INxy103
Rxy103
CB1_xy103
INz103
Rz103
CB1_z103
IN203
R203
CB1_203
INw203
Rw203
CB1_w203
INzw203
Rzw203
CB1_zw203
INx203
Rx203
CB1_x203
INy203
Ry203
CB1_y203
INxy203
Rxy203
CB1_xy203
INz203
Rz203
CB1_z203
IN113
R113
CB1_113
INw113
Rw113
CB1_w113
INzw113
Rzw113
CB1_zw113
INx113
Rx113
CB1_x113
INy113
Ry113
CB1_y113
INxy113
Rxy113
CB1_xy113
INz113
Rz113
CB1_z113
IN213
R213
CB1_213
INw213
Rw213
CB1_w213
INzw213
Rzw213
CB1_zw213
INx213
Rx213
CB1_x213
INy213
Ry213
CB1_y213
INxy213
Rxy213
CB1_xy213
INz213
Rz213
CB1_z213
CFG13
IN13
CB1_13
INw13
Rw13
CB1_w13
INzw13
Rzw13
CB1_zw13
INx13
Rx13
CB1_x13
INy13
Ry13
CB1_y13
INxy13
Rxy13
CB1_xy13
INz13
Rz13
CB1_z13
IN123
R123
CB1_123
INw123
Rw123
CB1_w123
INzw123
Rzw123
CB1_zw123
INx123
Rx123
CB1_x123
INy123
Ry123
CB1_y123
INxy123
Rxy123
CB1_xy123
INz123
Rz123
CB1_z123
IN223
R223
CB1_223
INw223
Rw223
CB1_w223
INzw223
Rzw223
CB1_zw223
INx223
Rx223
CB1_x223
INy223
Ry223
CB1_y223
INxy223
Rxy223
CB1_xy223
INz223
Rz223
CB1_z223
IN23
CB1_23
INw23
Rw23
CB1_w23
INzw23
Rzw23
CB1_zw23
INx23
Rx23
CB1_x23
INy23
Ry23
CB1_y23
INxy23
Rxy23
CB1_xy23
INz23
Rz23
CB1_z23
IN133
R133
CB1_133
INw133
Rw133
CB1_w133
INzw133
Rzw133
CB1_zw133
INx133
Rx133
CB1_x133
INy133
Ry133
CB1_y133
INxy133
Rxy133
CB1_xy133
INz133
Rz133
CB1_z133
IN233
R233
CB1_233
INw233
Rw233
CB1_w233
INzw233
Rzw233
CB1_zw233
INx233
Rx233
CB1_x233
INy233
Ry233
CB1_y233
INxy233
Rxy233
CB1_xy233
INz233
Rz233
CB1_z233
IN33
CB1_33
INw33
Rw33
CB1_w33
INzw33
Rzw33
CB1_zw33
INx33
Rx33
CB1_x33
INy33
Ry33
CB1_y33
INxy33
Rxy33
CB1_xy33
INz33
Rz33
CB1_z33
IN143
R143
CB1_143
INw143
Rw143
CB1_w143
INzw143
Rzw143
CB1_zw143
INx143
Rx143
CB1_x143
INy143
Ry143
CB1_y143
INxy143
Rxy143
CB1_xy143
INz143
Rz143
CB1_z143
IN243
R243
CB1_243
INw243
Rw243
CB1_w243
INzw243
Rzw243
CB1_zw243
INx243
Rx243
CB1_x243
INy243
Ry243
CB1_y243
INxy243
Rxy243
CB1_xy243
INz243
Rz243
CB1_z243
IN43
CB1_43
INw43
Rw43
CB1_w43
INzw43
Rzw43
CB1_zw43
INx43
Rx43
CB1_x43
INy43
Ry43
CB1_y43
INxy43
Rxy43
CB1_xy43
INz43
Rz43
CB1_z43
IN153
R153
CB1_153
INw153
Rw153
CB1_w153
INzw153
Rzw153
CB1_zw153
INx153
Rx153
CB1_x153
INy153
Ry153
CB1_y153
INxy153
Rxy153
CB1_xy153
INz153
Rz153
CB1_z153
IN253
R253
CB1_253
INw253
Rw253
CB1_w253
INzw253
Rzw253
CB1_zw253
INx253
Rx253
CB1_x253
INy253
Ry253
CB1_y253
INxy253
Rxy253
CB1_xy253
INz253
Rz253
CB1_z253
IN53
CB1_53
INw53
Rw53
CB1_w53
INzw53
Rzw53
CB1_zw53
INx53
Rx53
CB1_x53
INy53
Ry53
CB1_y53
INxy53
Rxy53
CB1_xy53
INz53
Rz53
CB1_z53
IN163
R163
CB1_163
INw163
Rw163
CB1_w163
INzw163
Rzw163
CB1_zw163
INx163
Rx163
CB1_x163
INy163
Ry163
CB1_y163
INxy163
Rxy163
CB1_xy163
INz163
Rz163
CB1_z163
R263
Rw263
Rzw263
Rx263
Ry263
Rxy263
Rz263
IN63
CB1_63
INw63
Rw63
CB1_w63
INzw63
Rzw63
CB1_zw63
INx63
Rx63
CB1_x63
INy63
Ry63
CB1_y63
INxy63
Rxy63
CB1_xy63
INz63
Rz63
CB1_z63
IN173
R173
CB1_173
INw173
Rw173
CB1_w173
INzw173
Rzw173
CB1_zw173
INx173
Rx173
CB1_x173
INy173
Ry173
CB1_y173
INxy173
Rxy173
CB1_xy173
INz173
Rz173
CB1_z173
R273
Rw273
Rzw273
Rx273
Ry273
Rxy273
Rz273
IN73
CB1_73
INw73
Rw73
CB1_w73
INzw73
Rzw73
CB1_zw73
INx73
Rx73
CB1_x73
INy73
Ry73
CB1_y73
INxy73
Rxy73
CB1_xy73
INz73
Rz73
CB1_z73
IN183
R183
CB1_183
INw183
Rw183
CB1_w183
INzw183
Rzw183
CB1_zw183
INx183
Rx183
CB1_x183
INy183
Ry183
CB1_y183
INxy183
Rxy183
CB1_xy183
INz183
Rz183
CB1_z183
R283
Rw283
Rzw283
Rx283
Ry283
Rxy283
Rz283
IN83
CB1_83
INw83
Rw83
CB1_w83
INzw83
Rzw83
CB1_zw83
INx83
Rx83
CB1_x83
INy83
Ry83
CB1_y83
INxy83
Rxy83
CB1_xy83
INz83
Rz83
CB1_z83
IN193
R193
CB1_193
INw193
Rw193
CB1_w193
INzw193
Rzw193
CB1_zw193
INx193
Rx193
CB1_x193
INy193
Ry193
CB1_y193
INxy193
Rxy193
CB1_xy193
INz193
Rz193
CB1_z193
IN93
CB1_93
INw93
Rw93
CB1_w93
INzw93
Rzw93
CB1_zw93
INx93
Rx93
CB1_x93
INy93
Ry93
CB1_y93
INxy93
Rxy93
CB1_xy93
INz93
Rz93
CB1_z93
CFG3
OUT3
CB1_3
INw3
OUTw3
CB1_w3
INzw3
Rzw3
OUTzw3
CB1_zw3
INx3
OUTx3
CB1_x3
INy3
OUTy3
CB1_y3
INxy3
Rxy3
OUTxy3
CB1_xy3
INz3
OUTz3
CB1_z3
R1004
Rw1004
Rzw1004
Rx1004
Ry1004
Rxy1004
Rz1004
IN104
R104
CB1_104
INw104
Rw104
CB1_w104
INzw104
Rzw104
CB1_zw104
INx104
Rx104
CB1_x104
INy104
Ry104
CB1_y104
INxy104
Rxy104
CB1_xy104
INz104
Rz104
CB1_z104
IN204
R204
CB1_204
INw204
Rw204
CB1_w204
INzw204
Rzw204
CB1_zw204
INx204
Rx204
CB1_x204
INy204
Ry204
CB1_y204
INxy204
Rxy204
CB1_xy204
INz204
Rz204
CB1_z204
IN114
R114
CB1_114
INw114
Rw114
CB1_w114
INzw114
Rzw114
CB1_zw114
INx114
Rx114
CB1_x114
INy114
Ry114
CB1_y114
INxy114
Rxy114
CB1_xy114
INz114
Rz114
CB1_z114
IN214
R214
CB1_214
INw214
Rw214
CB1_w214
INzw214
Rzw214
CB1_zw214
INx214
Rx214
CB1_x214
INy214
Ry214
CB1_y214
INxy214
Rxy214
CB1_xy214
INz214
Rz214
CB1_z214
CFG14
IN14
CB1_14
INw14
Rw14
CB1_w14
INzw14
Rzw14
CB1_zw14
INx14
Rx14
CB1_x14
INy14
Ry14
CB1_y14
INxy14
Rxy14
CB1_xy14
INz14
Rz14
CB1_z14
IN124
R124
CB1_124
INw124
Rw124
CB1_w124
INzw124
Rzw124
CB1_zw124
INx124
Rx124
CB1_x124
INy124
Ry124
CB1_y124
INxy124
Rxy124
CB1_xy124
INz124
Rz124
CB1_z124
IN224
R224
CB1_224
INw224
Rw224
CB1_w224
INzw224
Rzw224
CB1_zw224
INx224
Rx224
CB1_x224
INy224
Ry224
CB1_y224
INxy224
Rxy224
CB1_xy224
INz224
Rz224
CB1_z224
IN24
CB1_24
INw24
Rw24
CB1_w24
INzw24
Rzw24
CB1_zw24
INx24
Rx24
CB1_x24
INy24
Ry24
CB1_y24
INxy24
Rxy24
CB1_xy24
INz24
Rz24
CB1_z24
IN134
R134
CB1_134
INw134
Rw134
CB1_w134
INzw134
Rzw134
CB1_zw134
INx134
Rx134
CB1_x134
INy134
Ry134
CB1_y134
INxy134
Rxy134
CB1_xy134
INz134
Rz134
CB1_z134
IN234
R234
CB1_234
INw234
Rw234
CB1_w234
INzw234
Rzw234
CB1_zw234
INx234
Rx234
CB1_x234
INy234
Ry234
CB1_y234
INxy234
Rxy234
CB1_xy234
INz234
Rz234
CB1_z234
IN34
CB1_34
INw34
Rw34
CB1_w34
INzw34
Rzw34
CB1_zw34
INx34
Rx34
CB1_x34
INy34
Ry34
CB1_y34
INxy34
Rxy34
CB1_xy34
INz34
Rz34
CB1_z34
IN144
R144
CB1_144
INw144
Rw144
CB1_w144
INzw144
Rzw144
CB1_zw144
INx144
Rx144
CB1_x144
INy144
Ry144
CB1_y144
INxy144
Rxy144
CB1_xy144
INz144
Rz144
CB1_z144
IN244
R244
CB1_244
INw244
Rw244
CB1_w244
INzw244
Rzw244
CB1_zw244
INx244
Rx244
CB1_x244
INy244
Ry244
CB1_y244
INxy244
Rxy244
CB1_xy244
INz244
Rz244
CB1_z244
IN44
CB1_44
INw44
Rw44
CB1_w44
INzw44
Rzw44
CB1_zw44
INx44
Rx44
CB1_x44
INy44
Ry44
CB1_y44
INxy44
Rxy44
CB1_xy44
INz44
Rz44
CB1_z44
IN154
R154
CB1_154
INw154
Rw154
CB1_w154
INzw154
Rzw154
CB1_zw154
INx154
Rx154
CB1_x154
INy154
Ry154
CB1_y154
INxy154
Rxy154
CB1_xy154
INz154
Rz154
CB1_z154
IN254
R254
CB1_254
INw254
Rw254
CB1_w254
INzw254
Rzw254
CB1_zw254
INx254
Rx254
CB1_x254
INy254
Ry254
CB1_y254
INxy254
Rxy254
CB1_xy254
INz254
Rz254
CB1_z254
IN54
CB1_54
INw54
Rw54
CB1_w54
INzw54
Rzw54
CB1_zw54
INx54
Rx54
CB1_x54
INy54
Ry54
CB1_y54
INxy54
Rxy54
CB1_xy54
INz54
Rz54
CB1_z54
IN164
R164
CB1_164
INw164
Rw164
CB1_w164
INzw164
Rzw164
CB1_zw164
INx164
Rx164
CB1_x164
INy164
Ry164
CB1_y164
INxy164
Rxy164
CB1_xy164
INz164
Rz164
CB1_z164
R264
Rw264
Rzw264
Rx264
Ry264
Rxy264
Rz264
IN64
CB1_64
INw64
Rw64
CB1_w64
INzw64
Rzw64
CB1_zw64
INx64
Rx64
CB1_x64
INy64
Ry64
CB1_y64
INxy64
Rxy64
CB1_xy64
INz64
Rz64
CB1_z64
IN174
R174
CB1_174
INw174
Rw174
CB1_w174
INzw174
Rzw174
CB1_zw174
INx174
Rx174
CB1_x174
INy174
Ry174
CB1_y174
INxy174
Rxy174
CB1_xy174
INz174
Rz174
CB1_z174
R274
Rw274
Rzw274
Rx274
Ry274
Rxy274
Rz274
IN74
CB1_74
INw74
Rw74
CB1_w74
INzw74
Rzw74
CB1_zw74
INx74
Rx74
CB1_x74
INy74
Ry74
CB1_y74
INxy74
Rxy74
CB1_xy74
INz74
Rz74
CB1_z74
IN184
R184
CB1_184
INw184
Rw184
CB1_w184
INzw184
Rzw184
CB1_zw184
INx184
Rx184
CB1_x184
INy184
Ry184
CB1_y184
INxy184
Rxy184
CB1_xy184
INz184
Rz184
CB1_z184
R284
Rw284
Rzw284
Rx284
Ry284
Rxy284
Rz284
IN84
CB1_84
INw84
Rw84
CB1_w84
INzw84
Rzw84
CB1_zw84
INx84
Rx84
CB1_x84
INy84
Ry84
CB1_y84
INxy84
Rxy84
CB1_xy84
INz84
Rz84
CB1_z84
IN194
R194
CB1_194
INw194
Rw194
CB1_w194
INzw194
Rzw194
CB1_zw194
INx194
Rx194
CB1_x194
INy194
Ry194
CB1_y194
INxy194
Rxy194
CB1_xy194
INz194
Rz194
CB1_z194
IN94
CB1_94
INw94
Rw94
CB1_w94
INzw94
Rzw94
CB1_zw94
INx94
Rx94
CB1_x94
INy94
Ry94
CB1_y94
INxy94
Rxy94
CB1_xy94
INz94
Rz94
CB1_z94
CFG4
OUT4
CB1_4
INw4
OUTw4
CB1_w4
INzw4
Rzw4
OUTzw4
CB1_zw4
INx4
OUTx4
CB1_x4
INy4
OUTy4
CB1_y4
INxy4
Rxy4
OUTxy4
CB1_xy4
INz4
OUTz4
CB1_z4
R1005
Rw1005
Rzw1005
Rx1005
Ry1005
Rxy1005
Rz1005
IN105
R105
CB1_105
INw105
Rw105
CB1_w105
INzw105
Rzw105
CB1_zw105
INx105
Rx105
CB1_x105
INy105
Ry105
CB1_y105
INxy105
Rxy105
CB1_xy105
INz105
Rz105
CB1_z105
IN205
R205
CB1_205
INw205
Rw205
CB1_w205
INzw205
Rzw205
CB1_zw205
INx205
Rx205
CB1_x205
INy205
Ry205
CB1_y205
INxy205
Rxy205
CB1_xy205
INz205
Rz205
CB1_z205
IN115
R115
CB1_115
INw115
Rw115
CB1_w115
INzw115
Rzw115
CB1_zw115
INx115
Rx115
CB1_x115
INy115
Ry115
CB1_y115
INxy115
Rxy115
CB1_xy115
INz115
Rz115
CB1_z115
IN215
R215
CB1_215
INw215
Rw215
CB1_w215
INzw215
Rzw215
CB1_zw215
INx215
Rx215
CB1_x215
INy215
Ry215
CB1_y215
INxy215
Rxy215
CB1_xy215
INz215
Rz215
CB1_z215
CFG15
IN15
CB1_15
INw15
Rw15
CB1_w15
INzw15
Rzw15
CB1_zw15
INx15
Rx15
CB1_x15
INy15
Ry15
CB1_y15
INxy15
Rxy15
CB1_xy15
INz15
Rz15
CB1_z15
IN125
R125
CB1_125
INw125
Rw125
CB1_w125
INzw125
Rzw125
CB1_zw125
INx125
Rx125
CB1_x125
INy125
Ry125
CB1_y125
INxy125
Rxy125
CB1_xy125
INz125
Rz125
CB1_z125
IN225
R225
CB1_225
INw225
Rw225
CB1_w225
INzw225
Rzw225
CB1_zw225
INx225
Rx225
CB1_x225
INy225
Ry225
CB1_y225
INxy225
Rxy225
CB1_xy225
INz225
Rz225
CB1_z225
IN25
CB1_25
INw25
Rw25
CB1_w25
INzw25
Rzw25
CB1_zw25
INx25
Rx25
CB1_x25
INy25
Ry25
CB1_y25
INxy25
Rxy25
CB1_xy25
INz25
Rz25
CB1_z25
IN135
R135
CB1_135
INw135
Rw135
CB1_w135
INzw135
Rzw135
CB1_zw135
INx135
Rx135
CB1_x135
INy135
Ry135
CB1_y135
INxy135
Rxy135
CB1_xy135
INz135
Rz135
CB1_z135
IN235
R235
CB1_235
INw235
Rw235
CB1_w235
INzw235
Rzw235
CB1_zw235
INx235
Rx235
CB1_x235
INy235
Ry235
CB1_y235
INxy235
Rxy235
CB1_xy235
INz235
Rz235
CB1_z235
IN35
CB1_35
INw35
Rw35
CB1_w35
INzw35
Rzw35
CB1_zw35
INx35
Rx35
CB1_x35
INy35
Ry35
CB1_y35
INxy35
Rxy35
CB1_xy35
INz35
Rz35
CB1_z35
IN145
R145
CB1_145
INw145
Rw145
CB1_w145
INzw145
Rzw145
CB1_zw145
INx145
Rx145
CB1_x145
INy145
Ry145
CB1_y145
INxy145
Rxy145
CB1_xy145
INz145
Rz145
CB1_z145
IN245
R245
CB1_245
INw245
Rw245
CB1_w245
INzw245
Rzw245
CB1_zw245
INx245
Rx245
CB1_x245
INy245
Ry245
CB1_y245
INxy245
Rxy245
CB1_xy245
INz245
Rz245
CB1_z245
IN45
CB1_45
INw45
Rw45
CB1_w45
INzw45
Rzw45
CB1_zw45
INx45
Rx45
CB1_x45
INy45
Ry45
CB1_y45
INxy45
Rxy45
CB1_xy45
INz45
Rz45
CB1_z45
IN155
R155
CB1_155
INw155
Rw155
CB1_w155
INzw155
Rzw155
CB1_zw155
INx155
Rx155
CB1_x155
INy155
Ry155
CB1_y155
INxy155
Rxy155
CB1_xy155
INz155
Rz155
CB1_z155
IN255
R255
CB1_255
INw255
Rw255
CB1_w255
INzw255
Rzw255
CB1_zw255
INx255
Rx255
CB1_x255
INy255
Ry255
CB1_y255
INxy255
Rxy255
CB1_xy255
INz255
Rz255
CB1_z255
IN55
CB1_55
INw55
Rw55
CB1_w55
INzw55
Rzw55
CB1_zw55
INx55
Rx55
CB1_x55
INy55
Ry55
CB1_y55
INxy55
Rxy55
CB1_xy55
INz55
Rz55
CB1_z55
IN165
R165
CB1_165
INw165
Rw165
CB1_w165
INzw165
Rzw165
CB1_zw165
INx165
Rx165
CB1_x165
INy165
Ry165
CB1_y165
INxy165
Rxy165
CB1_xy165
INz165
Rz165
CB1_z165
R265
Rw265
Rzw265
Rx265
Ry265
Rxy265
Rz265
IN65
CB1_65
INw65
Rw65
CB1_w65
INzw65
Rzw65
CB1_zw65
INx65
Rx65
CB1_x65
INy65
Ry65
CB1_y65
INxy65
Rxy65
CB1_xy65
INz65
Rz65
CB1_z65
IN175
R175
CB1_175
INw175
Rw175
CB1_w175
INzw175
Rzw175
CB1_zw175
INx175
Rx175
CB1_x175
INy175
Ry175
CB1_y175
INxy175
Rxy175
CB1_xy175
INz175
Rz175
CB1_z175
R275
Rw275
Rzw275
Rx275
Ry275
Rxy275
Rz275
IN75
CB1_75
INw75
Rw75
CB1_w75
INzw75
Rzw75
CB1_zw75
INx75
Rx75
CB1_x75
INy75
Ry75
CB1_y75
INxy75
Rxy75
CB1_xy75
INz75
Rz75
CB1_z75
IN185
R185
CB1_185
INw185
Rw185
CB1_w185
INzw185
Rzw185
CB1_zw185
INx185
Rx185
CB1_x185
INy185
Ry185
CB1_y185
INxy185
Rxy185
CB1_xy185
INz185
Rz185
CB1_z185
R285
Rw285
Rzw285
Rx285
Ry285
Rxy285
Rz285
IN85
CB1_85
INw85
Rw85
CB1_w85
INzw85
Rzw85
CB1_zw85
INx85
Rx85
CB1_x85
INy85
Ry85
CB1_y85
INxy85
Rxy85
CB1_xy85
INz85
Rz85
CB1_z85
IN195
R195
CB1_195
INw195
Rw195
CB1_w195
INzw195
Rzw195
CB1_zw195
INx195
Rx195
CB1_x195
INy195
Ry195
CB1_y195
INxy195
Rxy195
CB1_xy195
INz195
Rz195
CB1_z195
IN95
CB1_95
INw95
Rw95
CB1_w95
INzw95
Rzw95
CB1_zw95
INx95
Rx95
CB1_x95
INy95
Ry95
CB1_y95
INxy95
Rxy95
CB1_xy95
INz95
Rz95
CB1_z95
CFG5
OUT5
CB1_5
INw5
OUTw5
CB1_w5
INzw5
Rzw5
OUTzw5
CB1_zw5
INx5
OUTx5
CB1_x5
INy5
OUTy5
CB1_y5
INxy5
Rxy5
OUTxy5
CB1_xy5
INz5
OUTz5
CB1_z5
R1006
Rw1006
Rzw1006
Rx1006
Ry1006
Rxy1006
Rz1006
IN106
R106
CB1_106
INw106
Rw106
CB1_w106
INzw106
Rzw106
CB1_zw106
INx106
Rx106
CB1_x106
INy106
Ry106
CB1_y106
INxy106
Rxy106
CB1_xy106
INz106
Rz106
CB1_z106
IN206
R206
CB1_206
INw206
Rw206
CB1_w206
INzw206
Rzw206
CB1_zw206
INx206
Rx206
CB1_x206
INy206
Ry206
CB1_y206
INxy206
Rxy206
CB1_xy206
INz206
Rz206
CB1_z206
IN116
R116
CB1_116
INw116
Rw116
CB1_w116
INzw116
Rzw116
CB1_zw116
INx116
Rx116
CB1_x116
INy116
Ry116
CB1_y116
INxy116
Rxy116
CB1_xy116
INz116
Rz116
CB1_z116
IN216
R216
CB1_216
INw216
Rw216
CB1_w216
INzw216
Rzw216
CB1_zw216
INx216
Rx216
CB1_x216
INy216
Ry216
CB1_y216
INxy216
Rxy216
CB1_xy216
INz216
Rz216
CB1_z216
CFG16
IN16
CB1_16
INw16
Rw16
CB1_w16
INzw16
Rzw16
CB1_zw16
INx16
Rx16
CB1_x16
INy16
Ry16
CB1_y16
INxy16
Rxy16
CB1_xy16
INz16
Rz16
CB1_z16
IN126
R126
CB1_126
INw126
Rw126
CB1_w126
INzw126
Rzw126
CB1_zw126
INx126
Rx126
CB1_x126
INy126
Ry126
CB1_y126
INxy126
Rxy126
CB1_xy126
INz126
Rz126
CB1_z126
IN226
R226
CB1_226
INw226
Rw226
CB1_w226
INzw226
Rzw226
CB1_zw226
INx226
Rx226
CB1_x226
INy226
Ry226
CB1_y226
INxy226
Rxy226
CB1_xy226
INz226
Rz226
CB1_z226
IN26
CB1_26
INw26
Rw26
CB1_w26
INzw26
Rzw26
CB1_zw26
INx26
Rx26
CB1_x26
INy26
Ry26
CB1_y26
INxy26
Rxy26
CB1_xy26
INz26
Rz26
CB1_z26
IN136
R136
CB1_136
INw136
Rw136
CB1_w136
INzw136
Rzw136
CB1_zw136
INx136
Rx136
CB1_x136
INy136
Ry136
CB1_y136
INxy136
Rxy136
CB1_xy136
INz136
Rz136
CB1_z136
IN236
R236
CB1_236
INw236
Rw236
CB1_w236
INzw236
Rzw236
CB1_zw236
INx236
Rx236
CB1_x236
INy236
Ry236
CB1_y236
INxy236
Rxy236
CB1_xy236
INz236
Rz236
CB1_z236
IN36
CB1_36
INw36
Rw36
CB1_w36
INzw36
Rzw36
CB1_zw36
INx36
Rx36
CB1_x36
INy36
Ry36
CB1_y36
INxy36
Rxy36
CB1_xy36
INz36
Rz36
CB1_z36
IN146
R146
CB1_146
INw146
Rw146
CB1_w146
INzw146
Rzw146
CB1_zw146
INx146
Rx146
CB1_x146
INy146
Ry146
CB1_y146
INxy146
Rxy146
CB1_xy146
INz146
Rz146
CB1_z146
IN246
R246
CB1_246
INw246
Rw246
CB1_w246
INzw246
Rzw246
CB1_zw246
INx246
Rx246
CB1_x246
INy246
Ry246
CB1_y246
INxy246
Rxy246
CB1_xy246
INz246
Rz246
CB1_z246
IN46
CB1_46
INw46
Rw46
CB1_w46
INzw46
Rzw46
CB1_zw46
INx46
Rx46
CB1_x46
INy46
Ry46
CB1_y46
INxy46
Rxy46
CB1_xy46
INz46
Rz46
CB1_z46
IN156
R156
CB1_156
INw156
Rw156
CB1_w156
INzw156
Rzw156
CB1_zw156
INx156
Rx156
CB1_x156
INy156
Ry156
CB1_y156
INxy156
Rxy156
CB1_xy156
INz156
Rz156
CB1_z156
R256
Rw256
Rzw256
Rx256
Ry256
Rxy256
Rz256
IN56
CB1_56
INw56
Rw56
CB1_w56
INzw56
Rzw56
CB1_zw56
INx56
Rx56
CB1_x56
INy56
Ry56
CB1_y56
INxy56
Rxy56
CB1_xy56
INz56
Rz56
CB1_z56
IN166
R166
CB1_166
INw166
Rw166
CB1_w166
INzw166
Rzw166
CB1_zw166
INx166
Rx166
CB1_x166
INy166
Ry166
CB1_y166
INxy166
Rxy166
CB1_xy166
INz166
Rz166
CB1_z166
R266
Rw266
Rzw266
Rx266
Ry266
Rxy266
Rz266
IN66
CB1_66
INw66
Rw66
CB1_w66
INzw66
Rzw66
CB1_zw66
INx66
Rx66
CB1_x66
INy66
Ry66
CB1_y66
INxy66
Rxy66
CB1_xy66
INz66
Rz66
CB1_z66
IN176
R176
CB1_176
INw176
Rw176
CB1_w176
INzw176
Rzw176
CB1_zw176
INx176
Rx176
CB1_x176
INy176
Ry176
CB1_y176
INxy176
Rxy176
CB1_xy176
INz176
Rz176
CB1_z176
R276
Rw276
Rzw276
Rx276
Ry276
Rxy276
Rz276
IN76
CB1_76
INw76
Rw76
CB1_w76
INzw76
Rzw76
CB1_zw76
INx76
Rx76
CB1_x76
INy76
Ry76
CB1_y76
INxy76
Rxy76
CB1_xy76
INz76
Rz76
CB1_z76
IN186
R186
CB1_186
INw186
Rw186
CB1_w186
INzw186
Rzw186
CB1_zw186
INx186
Rx186
CB1_x186
INy186
Ry186
CB1_y186
INxy186
Rxy186
CB1_xy186
INz186
Rz186
CB1_z186
R286
Rw286
Rzw286
Rx286
Ry286
Rxy286
Rz286
IN86
CB1_86
INw86
Rw86
CB1_w86
INzw86
Rzw86
CB1_zw86
INx86
Rx86
CB1_x86
INy86
Ry86
CB1_y86
INxy86
Rxy86
CB1_xy86
INz86
Rz86
CB1_z86
IN196
R196
CB1_196
INw196
Rw196
CB1_w196
INzw196
Rzw196
CB1_zw196
INx196
Rx196
CB1_x196
INy196
Ry196
CB1_y196
INxy196
Rxy196
CB1_xy196
INz196
Rz196
CB1_z196
IN96
CB1_96
INw96
Rw96
CB1_w96
INzw96
Rzw96
CB1_zw96
INx96
Rx96
CB1_x96
INy96
Ry96
CB1_y96
INxy96
Rxy96
CB1_xy96
INz96
Rz96
CB1_z96
CFG6
OUT6
CB1_6
INw6
OUTw6
CB1_w6
INzw6
Rzw6
OUTzw6
CB1_zw6
INx6
OUTx6
CB1_x6
INy6
OUTy6
CB1_y6
INxy6
Rxy6
OUTxy6
CB1_xy6
INz6
OUTz6
CB1_z6
R1007
Rw1007
Rzw1007
Rx1007
Ry1007
Rxy1007
Rz1007
IN107
R107
CB1_107
INw107
Rw107
CB1_w107
INzw107
Rzw107
CB1_zw107
INx107
Rx107
CB1_x107
INy107
Ry107
CB1_y107
INxy107
Rxy107
CB1_xy107
INz107
Rz107
CB1_z107
IN207
R207
CB1_207
INw207
Rw207
CB1_w207
INzw207
Rzw207
CB1_zw207
INx207
Rx207
CB1_x207
INy207
Ry207
CB1_y207
INxy207
Rxy207
CB1_xy207
INz207
Rz207
CB1_z207
IN117
R117
CB1_117
INw117
Rw117
CB1_w117
INzw117
Rzw117
CB1_zw117
INx117
Rx117
CB1_x117
INy117
Ry117
CB1_y117
INxy117
Rxy117
CB1_xy117
INz117
Rz117
CB1_z117
IN217
R217
CB1_217
INw217
Rw217
CB1_w217
INzw217
Rzw217
CB1_zw217
INx217
Rx217
CB1_x217
INy217
Ry217
CB1_y217
INxy217
Rxy217
CB1_xy217
INz217
Rz217
CB1_z217
CFG17
IN17
CB1_17
INw17
Rw17
CB1_w17
INzw17
Rzw17
CB1_zw17
INx17
Rx17
CB1_x17
INy17
Ry17
CB1_y17
INxy17
Rxy17
CB1_xy17
INz17
Rz17
CB1_z17
IN127
R127
CB1_127
INw127
Rw127
CB1_w127
INzw127
Rzw127
CB1_zw127
INx127
Rx127
CB1_x127
INy127
Ry127
CB1_y127
INxy127
Rxy127
CB1_xy127
INz127
Rz127
CB1_z127
IN227
R227
CB1_227
INw227
Rw227
CB1_w227
INzw227
Rzw227
CB1_zw227
INx227
Rx227
CB1_x227
INy227
Ry227
CB1_y227
INxy227
Rxy227
CB1_xy227
INz227
Rz227
CB1_z227
IN27
CB1_27
INw27
Rw27
CB1_w27
INzw27
Rzw27
CB1_zw27
INx27
Rx27
CB1_x27
INy27
Ry27
CB1_y27
INxy27
Rxy27
CB1_xy27
INz27
Rz27
CB1_z27
IN137
R137
CB1_137
INw137
Rw137
CB1_w137
INzw137
Rzw137
CB1_zw137
INx137
Rx137
CB1_x137
INy137
Ry137
CB1_y137
INxy137
Rxy137
CB1_xy137
INz137
Rz137
CB1_z137
IN237
R237
CB1_237
INw237
Rw237
CB1_w237
INzw237
Rzw237
CB1_zw237
INx237
Rx237
CB1_x237
INy237
Ry237
CB1_y237
INxy237
Rxy237
CB1_xy237
INz237
Rz237
CB1_z237
IN37
CB1_37
INw37
Rw37
CB1_w37
INzw37
Rzw37
CB1_zw37
INx37
Rx37
CB1_x37
INy37
Ry37
CB1_y37
INxy37
Rxy37
CB1_xy37
INz37
Rz37
CB1_z37
IN147
R147
CB1_147
INw147
Rw147
CB1_w147
INzw147
Rzw147
CB1_zw147
INx147
Rx147
CB1_x147
INy147
Ry147
CB1_y147
INxy147
Rxy147
CB1_xy147
INz147
Rz147
CB1_z147
IN247
R247
CB1_247
INw247
Rw247
CB1_w247
INzw247
Rzw247
CB1_zw247
INx247
Rx247
CB1_x247
INy247
Ry247
CB1_y247
INxy247
Rxy247
CB1_xy247
INz247
Rz247
CB1_z247
IN47
CB1_47
INw47
Rw47
CB1_w47
INzw47
Rzw47
CB1_zw47
INx47
Rx47
CB1_x47
INy47
Ry47
CB1_y47
INxy47
Rxy47
CB1_xy47
INz47
Rz47
CB1_z47
IN157
R157
CB1_157
INw157
Rw157
CB1_w157
INzw157
Rzw157
CB1_zw157
INx157
Rx157
CB1_x157
INy157
Ry157
CB1_y157
INxy157
Rxy157
CB1_xy157
INz157
Rz157
CB1_z157
R257
Rw257
Rzw257
Rx257
Ry257
Rxy257
Rz257
IN57
CB1_57
INw57
Rw57
CB1_w57
INzw57
Rzw57
CB1_zw57
INx57
Rx57
CB1_x57
INy57
Ry57
CB1_y57
INxy57
Rxy57
CB1_xy57
INz57
Rz57
CB1_z57
IN167
R167
CB1_167
INw167
Rw167
CB1_w167
INzw167
Rzw167
CB1_zw167
INx167
Rx167
CB1_x167
INy167
Ry167
CB1_y167
INxy167
Rxy167
CB1_xy167
INz167
Rz167
CB1_z167
R267
Rw267
Rzw267
Rx267
Ry267
Rxy267
Rz267
IN67
CB1_67
INw67
Rw67
CB1_w67
INzw67
Rzw67
CB1_zw67
INx67
Rx67
CB1_x67
INy67
Ry67
CB1_y67
INxy67
Rxy67
CB1_xy67
INz67
Rz67
CB1_z67
IN177
R177
CB1_177
INw177
Rw177
CB1_w177
INzw177
Rzw177
CB1_zw177
INx177
Rx177
CB1_x177
INy177
Ry177
CB1_y177
INxy177
Rxy177
CB1_xy177
INz177
Rz177
CB1_z177
R277
Rw277
Rzw277
Rx277
Ry277
Rxy277
Rz277
IN77
CB1_77
INw77
Rw77
CB1_w77
INzw77
Rzw77
CB1_zw77
INx77
Rx77
CB1_x77
INy77
Ry77
CB1_y77
INxy77
Rxy77
CB1_xy77
INz77
Rz77
CB1_z77
IN187
R187
CB1_187
INw187
Rw187
CB1_w187
INzw187
Rzw187
CB1_zw187
INx187
Rx187
CB1_x187
INy187
Ry187
CB1_y187
INxy187
Rxy187
CB1_xy187
INz187
Rz187
CB1_z187
R287
Rw287
Rzw287
Rx287
Ry287
Rxy287
Rz287
IN87
CB1_87
INw87
Rw87
CB1_w87
INzw87
Rzw87
CB1_zw87
INx87
Rx87
CB1_x87
INy87
Ry87
CB1_y87
INxy87
Rxy87
CB1_xy87
INz87
Rz87
CB1_z87
IN197
R197
CB1_197
INw197
Rw197
CB1_w197
INzw197
Rzw197
CB1_zw197
INx197
Rx197
CB1_x197
INy197
Ry197
CB1_y197
INxy197
Rxy197
CB1_xy197
INz197
Rz197
CB1_z197
IN97
CB1_97
INw97
Rw97
CB1_w97
INzw97
Rzw97
CB1_zw97
INx97
Rx97
CB1_x97
INy97
Ry97
CB1_y97
INxy97
Rxy97
CB1_xy97
INz97
Rz97
CB1_z97
CFG7
OUT7
CB1_7
INw7
OUTw7
CB1_w7
INzw7
Rzw7
OUTzw7
CB1_zw7
INx7
OUTx7
CB1_x7
INy7
OUTy7
CB1_y7
INxy7
Rxy7
OUTxy7
CB1_xy7
INz7
OUTz7
CB1_z7
R1008
Rw1008
Rzw1008
Rx1008
Ry1008
Rxy1008
Rz1008
IN108
R108
CB1_108
INw108
Rw108
CB1_w108
INzw108
Rzw108
CB1_zw108
INx108
Rx108
CB1_x108
INy108
Ry108
CB1_y108
INxy108
Rxy108
CB1_xy108
INz108
Rz108
CB1_z108
IN208
R208
CB1_208
INw208
Rw208
CB1_w208
INzw208
Rzw208
CB1_zw208
INx208
Rx208
CB1_x208
INy208
Ry208
CB1_y208
INxy208
Rxy208
CB1_xy208
INz208
Rz208
CB1_z208
IN118
R118
CB1_118
INw118
Rw118
CB1_w118
INzw118
Rzw118
CB1_zw118
INx118
Rx118
CB1_x118
INy118
Ry118
CB1_y118
INxy118
Rxy118
CB1_xy118
INz118
Rz118
CB1_z118
IN218
R218
CB1_218
INw218
Rw218
CB1_w218
INzw218
Rzw218
CB1_zw218
INx218
Rx218
CB1_x218
INy218
Ry218
CB1_y218
INxy218
Rxy218
CB1_xy218
INz218
Rz218
CB1_z218
CFG18
IN18
CB1_18
INw18
Rw18
CB1_w18
INzw18
Rzw18
CB1_zw18
INx18
Rx18
CB1_x18
INy18
Ry18
CB1_y18
INxy18
Rxy18
CB1_xy18
INz18
Rz18
CB1_z18
IN128
R128
CB1_128
INw128
Rw128
CB1_w128
INzw128
Rzw128
CB1_zw128
INx128
Rx128
CB1_x128
INy128
Ry128
CB1_y128
INxy128
Rxy128
CB1_xy128
INz128
Rz128
CB1_z128
IN228
R228
CB1_228
INw228
Rw228
CB1_w228
INzw228
Rzw228
CB1_zw228
INx228
Rx228
CB1_x228
INy228
Ry228
CB1_y228
INxy228
Rxy228
CB1_xy228
INz228
Rz228
CB1_z228
IN28
CB1_28
INw28
Rw28
CB1_w28
INzw28
Rzw28
CB1_zw28
INx28
Rx28
CB1_x28
INy28
Ry28
CB1_y28
INxy28
Rxy28
CB1_xy28
INz28
Rz28
CB1_z28
IN138
R138
CB1_138
INw138
Rw138
CB1_w138
INzw138
Rzw138
CB1_zw138
INx138
Rx138
CB1_x138
INy138
Ry138
CB1_y138
INxy138
Rxy138
CB1_xy138
INz138
Rz138
CB1_z138
IN238
R238
CB1_238
INw238
Rw238
CB1_w238
INzw238
Rzw238
CB1_zw238
INx238
Rx238
CB1_x238
INy238
Ry238
CB1_y238
INxy238
Rxy238
CB1_xy238
INz238
Rz238
CB1_z238
IN38
CB1_38
INw38
Rw38
CB1_w38
INzw38
Rzw38
CB1_zw38
INx38
Rx38
CB1_x38
INy38
Ry38
CB1_y38
INxy38
Rxy38
CB1_xy38
INz38
Rz38
CB1_z38
IN148
R148
CB1_148
INw148
Rw148
CB1_w148
INzw148
Rzw148
CB1_zw148
INx148
Rx148
CB1_x148
INy148
Ry148
CB1_y148
INxy148
Rxy148
CB1_xy148
INz148
Rz148
CB1_z148
IN248
R248
CB1_248
INw248
Rw248
CB1_w248
INzw248
Rzw248
CB1_zw248
INx248
Rx248
CB1_x248
INy248
Ry248
CB1_y248
INxy248
Rxy248
CB1_xy248
INz248
Rz248
CB1_z248
IN48
CB1_48
INw48
Rw48
CB1_w48
INzw48
Rzw48
CB1_zw48
INx48
Rx48
CB1_x48
INy48
Ry48
CB1_y48
INxy48
Rxy48
CB1_xy48
INz48
Rz48
CB1_z48
IN158
R158
CB1_158
INw158
Rw158
CB1_w158
INzw158
Rzw158
CB1_zw158
INx158
Rx158
CB1_x158
INy158
Ry158
CB1_y158
INxy158
Rxy158
CB1_xy158
INz158
Rz158
CB1_z158
R258
Rw258
Rzw258
Rx258
Ry258
Rxy258
Rz258
IN58
CB1_58
INw58
Rw58
CB1_w58
INzw58
Rzw58
CB1_zw58
INx58
Rx58
CB1_x58
INy58
Ry58
CB1_y58
INxy58
Rxy58
CB1_xy58
INz58
Rz58
CB1_z58
IN168
R168
CB1_168
INw168
Rw168
CB1_w168
INzw168
Rzw168
CB1_zw168
INx168
Rx168
CB1_x168
INy168
Ry168
CB1_y168
INxy168
Rxy168
CB1_xy168
INz168
Rz168
CB1_z168
R268
Rw268
Rzw268
Rx268
Ry268
Rxy268
Rz268
IN68
CB1_68
INw68
Rw68
CB1_w68
INzw68
Rzw68
CB1_zw68
INx68
Rx68
CB1_x68
INy68
Ry68
CB1_y68
INxy68
Rxy68
CB1_xy68
INz68
Rz68
CB1_z68
IN178
R178
CB1_178
INw178
Rw178
CB1_w178
INzw178
Rzw178
CB1_zw178
INx178
Rx178
CB1_x178
INy178
Ry178
CB1_y178
INxy178
Rxy178
CB1_xy178
INz178
Rz178
CB1_z178
R278
Rw278
Rzw278
Rx278
Ry278
Rxy278
Rz278
IN78
CB1_78
INw78
Rw78
CB1_w78
INzw78
Rzw78
CB1_zw78
INx78
Rx78
CB1_x78
INy78
Ry78
CB1_y78
INxy78
Rxy78
CB1_xy78
INz78
Rz78
CB1_z78
IN188
R188
CB1_188
INw188
Rw188
CB1_w188
INzw188
Rzw188
CB1_zw188
INx188
Rx188
CB1_x188
INy188
Ry188
CB1_y188
INxy188
Rxy188
CB1_xy188
INz188
Rz188
CB1_z188
R288
Rw288
Rzw288
Rx288
Ry288
Rxy288
Rz288
IN88
CB1_88
INw88
Rw88
CB1_w88
INzw88
Rzw88
CB1_zw88
INx88
Rx88
CB1_x88
INy88
Ry88
CB1_y88
INxy88
Rxy88
CB1_xy88
INz88
Rz88
CB1_z88
IN198
R198
CB1_198
INw198
Rw198
CB1_w198
INzw198
Rzw198
CB1_zw198
INx198
Rx198
CB1_x198
INy198
Ry198
CB1_y198
INxy198
Rxy198
CB1_xy198
INz198
Rz198
CB1_z198
IN98
CB1_98
INw98
Rw98
CB1_w98
INzw98
Rzw98
CB1_zw98
INx98
Rx98
CB1_x98
INy98
Ry98
CB1_y98
INxy98
Rxy98
CB1_xy98
INz98
Rz98
CB1_z98
CFG8
CB1_8
INw8
CB1_w8
INzw8
Rzw8
CB1_zw8
INx8
CB1_x8
INy8
CB1_y8
INxy8
Rxy8
CB1_xy8
INz8
CB1_z8
R1009
Rw1009
Rzw1009
Rx1009
Ry1009
Rxy1009
Rz1009
IN109
R109
CB1_109
INw109
Rw109
CB1_w109
INzw109
Rzw109
CB1_zw109
INx109
Rx109
CB1_x109
INy109
Ry109
CB1_y109
INxy109
Rxy109
CB1_xy109
INz109
Rz109
CB1_z109
IN209
R209
CB1_209
INw209
Rw209
CB1_w209
INzw209
Rzw209
CB1_zw209
INx209
Rx209
CB1_x209
INy209
Ry209
CB1_y209
INxy209
Rxy209
CB1_xy209
INz209
Rz209
CB1_z209
IN119
R119
CB1_119
INw119
Rw119
CB1_w119
INzw119
Rzw119
CB1_zw119
INx119
Rx119
CB1_x119
INy119
Ry119
CB1_y119
INxy119
Rxy119
CB1_xy119
INz119
Rz119
CB1_z119
IN219
R219
CB1_219
INw219
Rw219
CB1_w219
INzw219
Rzw219
CB1_zw219
INx219
Rx219
CB1_x219
INy219
Ry219
CB1_y219
INxy219
Rxy219
CB1_xy219
INz219
Rz219
CB1_z219
CFG19
IN19
CB1_19
INw19
Rw19
CB1_w19
INzw19
Rzw19
CB1_zw19
INx19
Rx19
CB1_x19
INy19
Ry19
CB1_y19
INxy19
Rxy19
CB1_xy19
INz19
Rz19
CB1_z19
IN129
R129
CB1_129
INw129
Rw129
CB1_w129
INzw129
Rzw129
CB1_zw129
INx129
Rx129
CB1_x129
INy129
Ry129
CB1_y129
INxy129
Rxy129
CB1_xy129
INz129
Rz129
CB1_z129
IN229
R229
CB1_229
INw229
Rw229
CB1_w229
INzw229
Rzw229
CB1_zw229
INx229
Rx229
CB1_x229
INy229
Ry229
CB1_y229
INxy229
Rxy229
CB1_xy229
INz229
Rz229
CB1_z229
IN29
CB1_29
INw29
Rw29
CB1_w29
INzw29
Rzw29
CB1_zw29
INx29
Rx29
CB1_x29
INy29
Ry29
CB1_y29
INxy29
Rxy29
CB1_xy29
INz29
Rz29
CB1_z29
IN139
R139
CB1_139
INw139
Rw139
CB1_w139
INzw139
Rzw139
CB1_zw139
INx139
Rx139
CB1_x139
INy139
Ry139
CB1_y139
INxy139
Rxy139
CB1_xy139
INz139
Rz139
CB1_z139
IN239
R239
CB1_239
INw239
Rw239
CB1_w239
INzw239
Rzw239
CB1_zw239
INx239
Rx239
CB1_x239
INy239
Ry239
CB1_y239
INxy239
Rxy239
CB1_xy239
INz239
Rz239
CB1_z239
IN39
CB1_39
INw39
Rw39
CB1_w39
INzw39
Rzw39
CB1_zw39
INx39
Rx39
CB1_x39
INy39
Ry39
CB1_y39
INxy39
Rxy39
CB1_xy39
INz39
Rz39
CB1_z39
IN149
R149
CB1_149
INw149
Rw149
CB1_w149
INzw149
Rzw149
CB1_zw149
INx149
Rx149
CB1_x149
INy149
Ry149
CB1_y149
INxy149
Rxy149
CB1_xy149
INz149
Rz149
CB1_z149
IN249
R249
CB1_249
INw249
Rw249
CB1_w249
INzw249
Rzw249
CB1_zw249
INx249
Rx249
CB1_x249
INy249
Ry249
CB1_y249
INxy249
Rxy249
CB1_xy249
INz249
Rz249
CB1_z249
IN49
CB1_49
INw49
Rw49
CB1_w49
INzw49
Rzw49
CB1_zw49
INx49
Rx49
CB1_x49
INy49
Ry49
CB1_y49
INxy49
Rxy49
CB1_xy49
INz49
Rz49
CB1_z49
IN159
R159
CB1_159
INw159
Rw159
CB1_w159
INzw159
Rzw159
CB1_zw159
INx159
Rx159
CB1_x159
INy159
Ry159
CB1_y159
INxy159
Rxy159
CB1_xy159
INz159
Rz159
CB1_z159
R259
Rw259
Rzw259
Rx259
Ry259
Rxy259
Rz259
IN59
CB1_59
INw59
Rw59
CB1_w59
INzw59
Rzw59
CB1_zw59
INx59
Rx59
CB1_x59
INy59
Ry59
CB1_y59
INxy59
Rxy59
CB1_xy59
INz59
Rz59
CB1_z59
IN169
R169
CB1_169
INw169
Rw169
CB1_w169
INzw169
Rzw169
CB1_zw169
INx169
Rx169
CB1_x169
INy169
Ry169
CB1_y169
INxy169
Rxy169
CB1_xy169
INz169
Rz169
CB1_z169
R269
Rw269
Rzw269
Rx269
Ry269
Rxy269
Rz269
IN69
CB1_69
INw69
Rw69
CB1_w69
INzw69
Rzw69
CB1_zw69
INx69
Rx69
CB1_x69
INy69
Ry69
CB1_y69
INxy69
Rxy69
CB1_xy69
INz69
Rz69
CB1_z69
IN179
R179
CB1_179
INw179
Rw179
CB1_w179
INzw179
Rzw179
CB1_zw179
INx179
Rx179
CB1_x179
INy179
Ry179
CB1_y179
INxy179
Rxy179
CB1_xy179
INz179
Rz179
CB1_z179
R279
Rw279
Rzw279
Rx279
Ry279
Rxy279
Rz279
IN79
CB1_79
INw79
Rw79
CB1_w79
INzw79
Rzw79
CB1_zw79
INx79
Rx79
CB1_x79
INy79
Ry79
CB1_y79
INxy79
Rxy79
CB1_xy79
INz79
Rz79
CB1_z79
IN189
R189
CB1_189
INw189
Rw189
CB1_w189
INzw189
Rzw189
CB1_zw189
INx189
Rx189
CB1_x189
INy189
Ry189
CB1_y189
INxy189
Rxy189
CB1_xy189
INz189
Rz189
CB1_z189
IN89
CB1_89
INw89
Rw89
CB1_w89
INzw89
Rzw89
CB1_zw89
INx89
Rx89
CB1_x89
INy89
Ry89
CB1_y89
INxy89
Rxy89
CB1_xy89
INz89
Rz89
CB1_z89
IN199
R199
CB1_199
INw199
Rw199
CB1_w199
INzw199
Rzw199
CB1_zw199
INx199
Rx199
CB1_x199
INy199
Ry199
CB1_y199
INxy199
Rxy199
CB1_xy199
INz199
Rz199
CB1_z199
IN99
CB1_99
INw99
Rw99
CB1_w99
INzw99
Rzw99
CB1_zw99
INx99
Rx99
CB1_x99
INy99
Ry99
CB1_y99
INxy99
Rxy99
CB1_xy99
INz99
Rz99
CB1_z99
CFG9
CB1_9
INw9
CB1_w9
INzw9
Rzw9
CB1_zw9
INx9
CB1_x9
INy9
CB1_y9
INxy9
Rxy9
CB1_xy9
INz9
CB1_z9
PRINTF
MEMx
MEMxy
MEMxyz
 !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
%%%%%%
))))))
............//////
N4llvm20AMDILGenRegisterInfoE
N4llvm17AMDILRegisterInfoE
N12_GLOBAL__N_124AMDILRegisterUseValidateE
N12_GLOBAL__N_121AMDILRenumberRegisterE
N4llvm22AMDILSIIOExpansionImplE
N4llvm18AMDILSIIOExpansionE
N4llvm21AMDILSIPointerManagerE
N4llvm25AMDILSIPointerManagerImplE
N4llvm21AMDILGenSubtargetInfoE
N4llvm14AMDILSubtargetE
N4llvm19AMDILSwizzleEncoderE
N4llvm18AMDILTargetMachineE
N4llvm15AMDILPassConfigE
N4llvm21TheAMDILTargetMachineE
N12_GLOBAL__N_120AMDILELFObjectWriterE
; begin of call sequence 
; end of call sequence 
)_uncached 
)_arena 
, cb
, x0[1].xyz0
, cb0[9].xyz0
, cb0[9].yzw0
, cb0[0].xyz0
, x0[2].xyz0
, vTidInGrp0.xyz
, cb0[1].xyz0
, cb0[10].w
, cb0[2].xyz0
, cb0[11].xyz0
, cb0[8].y0
, cb0[8].zw
, cb0[8].z0
, cb0[9].x0
, r1022.xyz0
, cb0[12].xyz0
, cb0[10].xyz0
, cb0[12].w
, cb0[0].w
, x0[0], 
, x0[5].x
)_sampler(
, Tmr.xyxy
)_size(short) 
)_size(dword) 
)_size(byte) 
)_cached_aligned 
)_cached 
)_coordtype(normalized) 
)_coordtype(unnormalized) 
, r0.1
_neg(xyzw)
_neg(yw)
__OpenCL_
_kernel
AMDIL Assembly Printer
mcall(
), (
mov 
if_logicalz cb0[0].x
uav_raw_store_id(
mem0.x___, cb0[3].x, r0.0
uav_arena_store_id(
cb0[3].x, r0.0
endif
;memory:compilerwrite
) ; 
call 
__fma_f32
__hwfma_f32
.global@
mem0
;memory:datareqd
<unknown operand type>
mdef(16383)_out(1)_in(2)
mov r0, in0
mov r1, in1
div_zeroop(infinity) r0.x___, r0.x, r1.x
mov out0, r0
mend
il_cs_3_0
il_cs_2_0
dcl_cb cb0[15] ; Constant buffer that holds ABI data
dcl_literal l0, 0x00000004, 0x00000001, 0x00000002, 0x00000003
dcl_literal l1, 0x0000FFFF, 0xFFFFFFFE, 0x000000FF, 0xFFFFFFFC
;$$$$$$$$$$
endmain
;DEBUGSTART
;DEBUGEND
unknown_
call 
mdef(
)_out(
)_in(
)_outline ; 
func 
mend ; 
endfunc ; 
MACRO
__atom_
__atomic_
4f32
4i32
2f32
2i32
_stub
.xy__
.xy00
.__zw
.00zw
AMDIL Barrier Detect Pass
__amdil_gws
;memory:gws
;memory:swgws
    
Intervals:
  vreg 
 start 
 end 
AMD IL Control Flow Graph Preparation Pass
AMD IL Control Flow Graph structurizer Pass
amdcfgprepare
amdcfgperform
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
structcfg
CFGStructurizer number of serial pattern matched
CFGStructurizer cloned instructions
CFGStructurizer number of if pattern matched
CFGStructurizer cloned blocks
CFGStructurizer number of loop-break pattern matched
CFGStructurizer number of loop-continue pattern matched
CFGStructurizer number of loop pattern matched
AMDIL SI IO Expansion Pass
AMDIL CI IO Expansion
ci-io-expansion
AMD IL CI Pointer Manager Pass
AMDIL CI Pointer Manager
ci-pointer-manager
E000:Compute Shader Not Supported!   
E001:Generic Compiler Error Message! 
E002:Internal Compiler Error Message!
E003:Missing Function Call Detected! 
E004:Reserved Function Call Detected!
E005:Byte Addressable Stores Invalid!
E006:Kernel Arg Type Name Is Invalid!
E007:Image Extension Unsupported!    
E008:32bit Atomic Op are Unsupported!
E009:64bit Atomic Op are Unsupported!
E010:Irreducible ControlFlow Detected
E011:Insufficient Resources Detected!
E012:Insufficient Local Resources!   
E013:Insufficient Private Resources! 
E014:Insufficient Image Resources!   
E015:Double precision not supported! 
E016:Invalid Constant Memory Write!  
E017:Max number Constant Ptr reached!
E018:Max number of Counters reached! 
E019:Insufficient Region Resources!  
E020:Region address space invalid!   
E021:MemOp with no memory allocated! 
E022:Recursive Function detected!    
E023:Illegal Inc+Dec to same counter!
E024:Illegal usage of intrinsic inst!
E025:Insufficient Semaphore Resources
E026:Semaphores not supported!       
E027:Semaphore init value is invalid!
E028:Flat address is not supported!  
W000:Barrier caused limited groupsize
W001:Dangerous Barrier Opt Detected! 
W002:Recoverable BE Error Detected!  
entry
AMD Create Kernel Stubs
amdcreatekernelstub
Lower aggregate copies, and llvm.mem* intrinsics into loops
amdil-lower-aggr-copies
Lower aggregate copies/intrinsics into loops
split
loadstoreloop
loadstoretail
compare_src_dst
copy_backwards
copy_forward
memmove_done
compare_n_to_0
copy_backwards_loop
index_ptr
element
copy_forward_loop
index_increment
Machine Extended Basic Block Optimization
AMD Extended Basic Block Optimization Pass
AMDIL EG/NI IO Expansion Pass
AMDIL EG/NI IO Expansion
eg-io-expansion
AMDIL DAG->DAG Pattern Instruction Selection
AMDILISD::UBIT_EXTRACT
AMDILISD::IBIT_EXTRACT
AMDILISD::UBIT_INSERT
AMDILISD::BFI
AMDILISD::DP_TO_FP
AMDILISD::FP_TO_DP
AMDILISD::CALL
AMDILISD::RET
AMDILISD::UMUL
AMDILISD::VBUILD
AMDILISD::VEXTRACT
AMDILISD::VINSERT
AMDILISD::VCONCAT
AMDILISD::LCREATE
AMDILISD::LCOMPHI
AMDILISD::LCOMPLO
AMDILISD::DCREATE
AMDILISD::DCOMPHI
AMDILISD::DCOMPLO
AMDILISD::LCREATE2
AMDILISD::LCOMPHI2
AMDILISD::LCOMPLO2
AMDILISD::DCREATE2
AMDILISD::DCOMPHI2
AMDILISD::DCOMPLO2
AMDILISD::RET_FLAG
AMDILISD::BRANCH_COND
AMDILISD::ADDADDR
AMDILISD::CONST_ADDRESS
AMDILISD::ATOM_F_ADD
AMDILISD::ATOM_F_AND
AMDILISD::ATOM_F_CMPXCHG
AMDILISD::ATOM_F_DEC
AMDILISD::ATOM_F_INC
AMDILISD::ATOM_F_MAX
AMDILISD::ATOM_F_UMAX
AMDILISD::ATOM_F_MIN
AMDILISD::ATOM_F_UMIN
AMDILISD::ATOM_F_OR
AMDILISD::ATOM_F_SUB
AMDILISD::ATOM_F_XCHG
AMDILISD::ATOM_F_XOR
AMDILISD::ATOM_G_ADD
AMDILISD::ATOM_G_AND
AMDILISD::ATOM_G_CMPXCHG
AMDILISD::ATOM_G_DEC
AMDILISD::ATOM_G_INC
AMDILISD::ATOM_G_MAX
AMDILISD::ATOM_G_UMAX
AMDILISD::ATOM_G_MIN
AMDILISD::ATOM_G_UMIN
AMDILISD::ATOM_G_OR
AMDILISD::ATOM_G_SUB
AMDILISD::ATOM_G_RSUB
AMDILISD::ATOM_G_XCHG
AMDILISD::ATOM_G_XOR
AMDILISD::ATOM_G_STORE
AMDILISD::ATOM_G_LOAD
AMDILISD::ATOM_G_ADD_NORET
AMDILISD::ATOM_G_AND_NORET
AMDILISD::ATOM_G_CMPXCHG_NORET
AMDILISD::ATOM_G_DEC_NORET
AMDILISD::ATOM_G_INC_NORET
AMDILISD::ATOM_G_MAX_NORET
AMDILISD::ATOM_G_UMAX_NORET
AMDILISD::ATOM_G_MIN_NORET
AMDILISD::ATOM_G_UMIN_NORET
AMDILISD::ATOM_G_OR_NORET
AMDILISD::ATOM_G_SUB_NORET
AMDILISD::ATOM_G_RSUB_NORET
AMDILISD::ATOM_G_XCHG_NORET
AMDILISD::ATOM_G_XOR_NORET
AMDILISD::ATOM_L_ADD
AMDILISD::ATOM_L_AND
AMDILISD::ATOM_L_CMPXCHG
AMDILISD::ATOM_L_DEC
AMDILISD::ATOM_L_INC
AMDILISD::ATOM_L_MAX
AMDILISD::ATOM_L_UMAX
AMDILISD::ATOM_L_MIN
AMDILISD::ATOM_L_UMIN
AMDILISD::ATOM_L_OR
AMDILISD::ATOM_L_SUB
AMDILISD::ATOM_L_RSUB
AMDILISD::ATOM_L_XCHG
AMDILISD::ATOM_L_XOR
AMDILISD::ATOM_L_ADD_NORET
AMDILISD::ATOM_L_AND_NORET
AMDILISD::ATOM_L_CMPXCHG_NORET
AMDILISD::ATOM_L_DEC_NORET
AMDILISD::ATOM_L_INC_NORET
AMDILISD::ATOM_L_MAX_NORET
AMDILISD::ATOM_L_UMAX_NORET
AMDILISD::ATOM_L_MIN_NORET
AMDILISD::ATOM_L_UMIN_NORET
AMDILISD::ATOM_L_OR_NORET
AMDILISD::ATOM_L_SUB_NORET
AMDILISD::ATOM_L_RSUB_NORET
AMDILISD::ATOM_L_XCHG_NORET
AMDILISD::ATOM_R_ADD
AMDILISD::ATOM_R_AND
AMDILISD::ATOM_R_CMPXCHG
AMDILISD::ATOM_R_DEC
AMDILISD::ATOM_R_INC
AMDILISD::ATOM_R_MAX
AMDILISD::ATOM_R_UMAX
AMDILISD::ATOM_R_MIN
AMDILISD::ATOM_R_UMIN
AMDILISD::ATOM_R_OR
AMDILISD::ATOM_R_MSKOR
AMDILISD::ATOM_R_SUB
AMDILISD::ATOM_R_RSUB
AMDILISD::ATOM_R_XCHG
AMDILISD::ATOM_R_XOR
AMDILISD::ATOM_R_ADD_NORET
AMDILISD::ATOM_R_AND_NORET
AMDILISD::ATOM_R_CMPXCHG_NORET
AMDILISD::ATOM_R_DEC_NORET
AMDILISD::ATOM_R_INC_NORET
AMDILISD::ATOM_R_MAX_NORET
AMDILISD::ATOM_R_UMAX_NORET
AMDILISD::ATOM_R_MIN_NORET
AMDILISD::ATOM_R_UMIN_NORET
AMDILISD::ATOM_R_OR_NORET
AMDILISD::ATOM_R_MSKOR_NORET
AMDILISD::ATOM_R_SUB_NORET
AMDILISD::ATOM_R_RSUB_NORET
AMDILISD::ATOM_R_XCHG_NORET
AMDILISD::ATOM_R_XOR_NORET
AMDILISD::APPEND_ALLOC
AMDILISD::APPEND_CONSUME
AMDILISD::HP_TO_FP
AMDILISD::FP_TO_HP
AMDIL Inline Function Pass
llvm.AMDIL.abs
llvm.AMDIL.acos
llvm.AMDIL.add.f16
llvm.AMDIL.add.rte
llvm.AMDIL.add.rte.f16
llvm.AMDIL.add.rtn
llvm.AMDIL.add.rtn.f16
llvm.AMDIL.add.rtp
llvm.AMDIL.add.rtp.f16
llvm.AMDIL.add.rtz
llvm.AMDIL.add.rtz.f16
llvm.AMDIL.append.alloc.i32
llvm.AMDIL.append.consume.i32
llvm.AMDIL.asin
llvm.AMDIL.atan
llvm.AMDIL.atomic.add.fi32
llvm.AMDIL.atomic.add.fi64
llvm.AMDIL.atomic.add.fu32
llvm.AMDIL.atomic.add.fu64
llvm.AMDIL.atomic.add.gi32
llvm.AMDIL.atomic.add.gi32.noret
llvm.AMDIL.atomic.add.gi64
llvm.AMDIL.atomic.add.gi64.noret
llvm.AMDIL.atomic.add.gu32
llvm.AMDIL.atomic.add.gu32.noret
llvm.AMDIL.atomic.add.gu64
llvm.AMDIL.atomic.add.gu64.noret
llvm.AMDIL.atomic.add.li32
llvm.AMDIL.atomic.add.li32.noret
llvm.AMDIL.atomic.add.li64
llvm.AMDIL.atomic.add.li64.noret
llvm.AMDIL.atomic.add.lu32
llvm.AMDIL.atomic.add.lu32.noret
llvm.AMDIL.atomic.add.lu64
llvm.AMDIL.atomic.add.lu64.noret
llvm.AMDIL.atomic.add.ri32
llvm.AMDIL.atomic.add.ri32.noret
llvm.AMDIL.atomic.add.ri64
llvm.AMDIL.atomic.add.ri64.noret
llvm.AMDIL.atomic.add.ru32
llvm.AMDIL.atomic.add.ru32.noret
llvm.AMDIL.atomic.add.ru64
llvm.AMDIL.atomic.add.ru64.noret
llvm.AMDIL.atomic.and.fi32
llvm.AMDIL.atomic.and.fi64
llvm.AMDIL.atomic.and.fu32
llvm.AMDIL.atomic.and.fu64
llvm.AMDIL.atomic.and.gi32
llvm.AMDIL.atomic.and.gi32.noret
llvm.AMDIL.atomic.and.gi64
llvm.AMDIL.atomic.and.gi64.noret
llvm.AMDIL.atomic.and.gu32
llvm.AMDIL.atomic.and.gu32.noret
llvm.AMDIL.atomic.and.gu64
llvm.AMDIL.atomic.and.gu64.noret
llvm.AMDIL.atomic.and.li32
llvm.AMDIL.atomic.and.li32.noret
llvm.AMDIL.atomic.and.li64
llvm.AMDIL.atomic.and.li64.noret
llvm.AMDIL.atomic.and.lu32
llvm.AMDIL.atomic.and.lu32.noret
llvm.AMDIL.atomic.and.lu64
llvm.AMDIL.atomic.and.lu64.noret
llvm.AMDIL.atomic.and.ri32
llvm.AMDIL.atomic.and.ri32.noret
llvm.AMDIL.atomic.and.ri64
llvm.AMDIL.atomic.and.ri64.noret
llvm.AMDIL.atomic.and.ru32
llvm.AMDIL.atomic.and.ru32.noret
llvm.AMDIL.atomic.and.ru64
llvm.AMDIL.atomic.and.ru64.noret
llvm.AMDIL.atomic.cmpxchg.ff32
llvm.AMDIL.atomic.cmpxchg.ff64
llvm.AMDIL.atomic.cmpxchg.fi32
llvm.AMDIL.atomic.cmpxchg.fi64
llvm.AMDIL.atomic.cmpxchg.fu32
llvm.AMDIL.atomic.cmpxchg.fu64
llvm.AMDIL.atomic.cmpxchg.gi32
llvm.AMDIL.atomic.cmpxchg.gi32.noret
llvm.AMDIL.atomic.cmpxchg.gi64
llvm.AMDIL.atomic.cmpxchg.gi64.noret
llvm.AMDIL.atomic.cmpxchg.gu32
llvm.AMDIL.atomic.cmpxchg.gu32.noret
llvm.AMDIL.atomic.cmpxchg.gu64
llvm.AMDIL.atomic.cmpxchg.gu64.noret
llvm.AMDIL.atomic.cmpxchg.li32
llvm.AMDIL.atomic.cmpxchg.li32.noret
llvm.AMDIL.atomic.cmpxchg.li64
llvm.AMDIL.atomic.cmpxchg.li64.noret
llvm.AMDIL.atomic.cmpxchg.lu32
llvm.AMDIL.atomic.cmpxchg.lu32.noret
llvm.AMDIL.atomic.cmpxchg.lu64
llvm.AMDIL.atomic.cmpxchg.lu64.noret
llvm.AMDIL.atomic.cmpxchg.ri32
llvm.AMDIL.atomic.cmpxchg.ri32.noret
llvm.AMDIL.atomic.cmpxchg.ri64
llvm.AMDIL.atomic.cmpxchg.ri64.noret
llvm.AMDIL.atomic.cmpxchg.ru32
llvm.AMDIL.atomic.cmpxchg.ru32.noret
llvm.AMDIL.atomic.cmpxchg.ru64
llvm.AMDIL.atomic.cmpxchg.ru64.noret
llvm.AMDIL.atomic.dec.fi32
llvm.AMDIL.atomic.dec.fi64
llvm.AMDIL.atomic.dec.fu32
llvm.AMDIL.atomic.dec.fu64
llvm.AMDIL.atomic.dec.gi32
llvm.AMDIL.atomic.dec.gi32.noret
llvm.AMDIL.atomic.dec.gi64
llvm.AMDIL.atomic.dec.gi64.noret
llvm.AMDIL.atomic.dec.gu32
llvm.AMDIL.atomic.dec.gu32.noret
llvm.AMDIL.atomic.dec.gu64
llvm.AMDIL.atomic.dec.gu64.noret
llvm.AMDIL.atomic.dec.li32
llvm.AMDIL.atomic.dec.li32.noret
llvm.AMDIL.atomic.dec.li64
llvm.AMDIL.atomic.dec.li64.noret
llvm.AMDIL.atomic.dec.lu32
llvm.AMDIL.atomic.dec.lu32.noret
llvm.AMDIL.atomic.dec.lu64
llvm.AMDIL.atomic.dec.lu64.noret
llvm.AMDIL.atomic.dec.ri32
llvm.AMDIL.atomic.dec.ri32.noret
llvm.AMDIL.atomic.dec.ri64
llvm.AMDIL.atomic.dec.ri64.noret
llvm.AMDIL.atomic.dec.ru32
llvm.AMDIL.atomic.dec.ru32.noret
llvm.AMDIL.atomic.dec.ru64
llvm.AMDIL.atomic.dec.ru64.noret
llvm.AMDIL.atomic.inc.fi32
llvm.AMDIL.atomic.inc.fi64
llvm.AMDIL.atomic.inc.fu32
llvm.AMDIL.atomic.inc.fu64
llvm.AMDIL.atomic.inc.gi32
llvm.AMDIL.atomic.inc.gi32.noret
llvm.AMDIL.atomic.inc.gi64
llvm.AMDIL.atomic.inc.gi64.noret
llvm.AMDIL.atomic.inc.gu32
llvm.AMDIL.atomic.inc.gu32.noret
llvm.AMDIL.atomic.inc.gu64
llvm.AMDIL.atomic.inc.gu64.noret
llvm.AMDIL.atomic.inc.li32
llvm.AMDIL.atomic.inc.li32.noret
llvm.AMDIL.atomic.inc.li64
llvm.AMDIL.atomic.inc.li64.noret
llvm.AMDIL.atomic.inc.lu32
llvm.AMDIL.atomic.inc.lu32.noret
llvm.AMDIL.atomic.inc.lu64
llvm.AMDIL.atomic.inc.lu64.noret
llvm.AMDIL.atomic.inc.ri32
llvm.AMDIL.atomic.inc.ri32.noret
llvm.AMDIL.atomic.inc.ri64
llvm.AMDIL.atomic.inc.ri64.noret
llvm.AMDIL.atomic.inc.ru32
llvm.AMDIL.atomic.inc.ru32.noret
llvm.AMDIL.atomic.inc.ru64
llvm.AMDIL.atomic.inc.ru64.noret
llvm.AMDIL.atomic.load.gi16
llvm.AMDIL.atomic.load.gi32
llvm.AMDIL.atomic.load.gi64
llvm.AMDIL.atomic.load.gi8
llvm.AMDIL.atomic.load.gu16
llvm.AMDIL.atomic.load.gu32
llvm.AMDIL.atomic.load.gu64
llvm.AMDIL.atomic.load.gu8
llvm.AMDIL.atomic.load.gv2i32
llvm.AMDIL.atomic.load.gv2u32
llvm.AMDIL.atomic.load.gv4i32
llvm.AMDIL.atomic.load.gv4u32
llvm.AMDIL.atomic.max.ff32
llvm.AMDIL.atomic.max.ff64
llvm.AMDIL.atomic.max.fi32
llvm.AMDIL.atomic.max.fi64
llvm.AMDIL.atomic.max.fu32
llvm.AMDIL.atomic.max.fu64
llvm.AMDIL.atomic.max.gi32
llvm.AMDIL.atomic.max.gi32.noret
llvm.AMDIL.atomic.max.gi64
llvm.AMDIL.atomic.max.gi64.noret
llvm.AMDIL.atomic.max.gu32
llvm.AMDIL.atomic.max.gu32.noret
llvm.AMDIL.atomic.max.gu64
llvm.AMDIL.atomic.max.gu64.noret
llvm.AMDIL.atomic.max.li32
llvm.AMDIL.atomic.max.li32.noret
llvm.AMDIL.atomic.max.li64
llvm.AMDIL.atomic.max.li64.noret
llvm.AMDIL.atomic.max.lu32
llvm.AMDIL.atomic.max.lu32.noret
llvm.AMDIL.atomic.max.lu64
llvm.AMDIL.atomic.max.lu64.noret
llvm.AMDIL.atomic.max.ri32
llvm.AMDIL.atomic.max.ri32.noret
llvm.AMDIL.atomic.max.ri64
llvm.AMDIL.atomic.max.ri64.noret
llvm.AMDIL.atomic.max.ru32
llvm.AMDIL.atomic.max.ru32.noret
llvm.AMDIL.atomic.max.ru64
llvm.AMDIL.atomic.max.ru64.noret
llvm.AMDIL.atomic.min.ff32
llvm.AMDIL.atomic.min.ff64
llvm.AMDIL.atomic.min.fi32
llvm.AMDIL.atomic.min.fi64
llvm.AMDIL.atomic.min.fu32
llvm.AMDIL.atomic.min.fu64
llvm.AMDIL.atomic.min.gi32
llvm.AMDIL.atomic.min.gi32.noret
llvm.AMDIL.atomic.min.gi64
llvm.AMDIL.atomic.min.gi64.noret
llvm.AMDIL.atomic.min.gu32
llvm.AMDIL.atomic.min.gu32.noret
llvm.AMDIL.atomic.min.gu64
llvm.AMDIL.atomic.min.gu64.noret
llvm.AMDIL.atomic.min.li32
llvm.AMDIL.atomic.min.li32.noret
llvm.AMDIL.atomic.min.li64
llvm.AMDIL.atomic.min.li64.noret
llvm.AMDIL.atomic.min.lu32
llvm.AMDIL.atomic.min.lu32.noret
llvm.AMDIL.atomic.min.lu64
llvm.AMDIL.atomic.min.lu64.noret
llvm.AMDIL.atomic.min.ri32
llvm.AMDIL.atomic.min.ri32.noret
llvm.AMDIL.atomic.min.ri64
llvm.AMDIL.atomic.min.ri64.noret
llvm.AMDIL.atomic.min.ru32
llvm.AMDIL.atomic.min.ru32.noret
llvm.AMDIL.atomic.min.ru64
llvm.AMDIL.atomic.min.ru64.noret
llvm.AMDIL.atomic.mskor.li32
llvm.AMDIL.atomic.mskor.li32.noret
llvm.AMDIL.atomic.mskor.li64
llvm.AMDIL.atomic.mskor.li64.noret
llvm.AMDIL.atomic.mskor.lu32
llvm.AMDIL.atomic.mskor.lu32.noret
llvm.AMDIL.atomic.mskor.lu64
llvm.AMDIL.atomic.mskor.lu64.noret
llvm.AMDIL.atomic.mskor.ri32
llvm.AMDIL.atomic.mskor.ri32.noret
llvm.AMDIL.atomic.mskor.ri64
llvm.AMDIL.atomic.mskor.ri64.noret
llvm.AMDIL.atomic.mskor.ru32
llvm.AMDIL.atomic.mskor.ru32.noret
llvm.AMDIL.atomic.mskor.ru64
llvm.AMDIL.atomic.mskor.ru64.noret
llvm.AMDIL.atomic.or.fi32
llvm.AMDIL.atomic.or.fi64
llvm.AMDIL.atomic.or.fu32
llvm.AMDIL.atomic.or.fu64
llvm.AMDIL.atomic.or.gi32
llvm.AMDIL.atomic.or.gi32.noret
llvm.AMDIL.atomic.or.gi64
llvm.AMDIL.atomic.or.gi64.noret
llvm.AMDIL.atomic.or.gu32
llvm.AMDIL.atomic.or.gu32.noret
llvm.AMDIL.atomic.or.gu64
llvm.AMDIL.atomic.or.gu64.noret
llvm.AMDIL.atomic.or.li32
llvm.AMDIL.atomic.or.li32.noret
llvm.AMDIL.atomic.or.li64
llvm.AMDIL.atomic.or.li64.noret
llvm.AMDIL.atomic.or.lu32
llvm.AMDIL.atomic.or.lu32.noret
llvm.AMDIL.atomic.or.lu64
llvm.AMDIL.atomic.or.lu64.noret
llvm.AMDIL.atomic.or.ri32
llvm.AMDIL.atomic.or.ri32.noret
llvm.AMDIL.atomic.or.ri64
llvm.AMDIL.atomic.or.ri64.noret
llvm.AMDIL.atomic.or.ru32
llvm.AMDIL.atomic.or.ru32.noret
llvm.AMDIL.atomic.or.ru64
llvm.AMDIL.atomic.or.ru64.noret
llvm.AMDIL.atomic.rsub.gi32
llvm.AMDIL.atomic.rsub.gi32.noret
llvm.AMDIL.atomic.rsub.gi64
llvm.AMDIL.atomic.rsub.gi64.noret
llvm.AMDIL.atomic.rsub.gu32
llvm.AMDIL.atomic.rsub.gu32.noret
llvm.AMDIL.atomic.rsub.gu64
llvm.AMDIL.atomic.rsub.gu64.noret
llvm.AMDIL.atomic.rsub.li32
llvm.AMDIL.atomic.rsub.li32.noret
llvm.AMDIL.atomic.rsub.li64
llvm.AMDIL.atomic.rsub.li64.noret
llvm.AMDIL.atomic.rsub.lu32
llvm.AMDIL.atomic.rsub.lu32.noret
llvm.AMDIL.atomic.rsub.lu64
llvm.AMDIL.atomic.rsub.lu64.noret
llvm.AMDIL.atomic.rsub.ri32
llvm.AMDIL.atomic.rsub.ri32.noret
llvm.AMDIL.atomic.rsub.ri64
llvm.AMDIL.atomic.rsub.ri64.noret
llvm.AMDIL.atomic.rsub.ru32
llvm.AMDIL.atomic.rsub.ru32.noret
llvm.AMDIL.atomic.rsub.ru64
llvm.AMDIL.atomic.rsub.ru64.noret
llvm.AMDIL.atomic.store.gi16
llvm.AMDIL.atomic.store.gi32
llvm.AMDIL.atomic.store.gi64
llvm.AMDIL.atomic.store.gi8
llvm.AMDIL.atomic.store.gu16
llvm.AMDIL.atomic.store.gu32
llvm.AMDIL.atomic.store.gu64
llvm.AMDIL.atomic.store.gu8
llvm.AMDIL.atomic.store.gv2i32
llvm.AMDIL.atomic.store.gv2u32
llvm.AMDIL.atomic.store.gv4i32
llvm.AMDIL.atomic.store.gv4u32
llvm.AMDIL.atomic.sub.fi32
llvm.AMDIL.atomic.sub.fi64
llvm.AMDIL.atomic.sub.fu32
llvm.AMDIL.atomic.sub.fu64
llvm.AMDIL.atomic.sub.gi32
llvm.AMDIL.atomic.sub.gi32.noret
llvm.AMDIL.atomic.sub.gi64
llvm.AMDIL.atomic.sub.gi64.noret
llvm.AMDIL.atomic.sub.gu32
llvm.AMDIL.atomic.sub.gu32.noret
llvm.AMDIL.atomic.sub.gu64
llvm.AMDIL.atomic.sub.gu64.noret
llvm.AMDIL.atomic.sub.li32
llvm.AMDIL.atomic.sub.li32.noret
llvm.AMDIL.atomic.sub.li64
llvm.AMDIL.atomic.sub.li64.noret
llvm.AMDIL.atomic.sub.lu32
llvm.AMDIL.atomic.sub.lu32.noret
llvm.AMDIL.atomic.sub.lu64
llvm.AMDIL.atomic.sub.lu64.noret
llvm.AMDIL.atomic.sub.ri32
llvm.AMDIL.atomic.sub.ri32.noret
llvm.AMDIL.atomic.sub.ri64
llvm.AMDIL.atomic.sub.ri64.noret
llvm.AMDIL.atomic.sub.ru32
llvm.AMDIL.atomic.sub.ru32.noret
llvm.AMDIL.atomic.sub.ru64
llvm.AMDIL.atomic.sub.ru64.noret
llvm.AMDIL.atomic.xchg.ff32
llvm.AMDIL.atomic.xchg.ff64
llvm.AMDIL.atomic.xchg.fi32
llvm.AMDIL.atomic.xchg.fi64
llvm.AMDIL.atomic.xchg.fu32
llvm.AMDIL.atomic.xchg.fu64
llvm.AMDIL.atomic.xchg.gf32
llvm.AMDIL.atomic.xchg.gf32.noret
llvm.AMDIL.atomic.xchg.gi32
llvm.AMDIL.atomic.xchg.gi32.noret
llvm.AMDIL.atomic.xchg.gi64
llvm.AMDIL.atomic.xchg.gi64.noret
llvm.AMDIL.atomic.xchg.gu32
llvm.AMDIL.atomic.xchg.gu32.noret
llvm.AMDIL.atomic.xchg.gu64
llvm.AMDIL.atomic.xchg.gu64.noret
llvm.AMDIL.atomic.xchg.lf32
llvm.AMDIL.atomic.xchg.lf32.noret
llvm.AMDIL.atomic.xchg.li32
llvm.AMDIL.atomic.xchg.li32.noret
llvm.AMDIL.atomic.xchg.li64
llvm.AMDIL.atomic.xchg.li64.noret
llvm.AMDIL.atomic.xchg.lu32
llvm.AMDIL.atomic.xchg.lu32.noret
llvm.AMDIL.atomic.xchg.lu64
llvm.AMDIL.atomic.xchg.lu64.noret
llvm.AMDIL.atomic.xchg.rf32
llvm.AMDIL.atomic.xchg.rf32.noret
llvm.AMDIL.atomic.xchg.ri32
llvm.AMDIL.atomic.xchg.ri32.noret
llvm.AMDIL.atomic.xchg.ri64
llvm.AMDIL.atomic.xchg.ri64.noret
llvm.AMDIL.atomic.xchg.ru32
llvm.AMDIL.atomic.xchg.ru32.noret
llvm.AMDIL.atomic.xchg.ru64
llvm.AMDIL.atomic.xchg.ru64.noret
llvm.AMDIL.atomic.xor.fi32
llvm.AMDIL.atomic.xor.fi64
llvm.AMDIL.atomic.xor.fu32
llvm.AMDIL.atomic.xor.fu64
llvm.AMDIL.atomic.xor.gi32
llvm.AMDIL.atomic.xor.gi32.noret
llvm.AMDIL.atomic.xor.gi64
llvm.AMDIL.atomic.xor.gi64.noret
llvm.AMDIL.atomic.xor.gu32
llvm.AMDIL.atomic.xor.gu32.noret
llvm.AMDIL.atomic.xor.gu64
llvm.AMDIL.atomic.xor.gu64.noret
llvm.AMDIL.atomic.xor.li32
llvm.AMDIL.atomic.xor.li32.noret
llvm.AMDIL.atomic.xor.li64
llvm.AMDIL.atomic.xor.li64.noret
llvm.AMDIL.atomic.xor.lu32
llvm.AMDIL.atomic.xor.lu32.noret
llvm.AMDIL.atomic.xor.lu64
llvm.AMDIL.atomic.xor.lu64.noret
llvm.AMDIL.atomic.xor.ri32
llvm.AMDIL.atomic.xor.ri32.noret
llvm.AMDIL.atomic.xor.ri64
llvm.AMDIL.atomic.xor.ri64.noret
llvm.AMDIL.atomic.xor.ru32
llvm.AMDIL.atomic.xor.ru32.noret
llvm.AMDIL.atomic.xor.ru64
llvm.AMDIL.atomic.xor.ru64.noret
llvm.AMDIL.ballot
llvm.AMDIL.barrier
llvm.AMDIL.barrier.global
llvm.AMDIL.barrier.global.local
llvm.AMDIL.barrier.global.region
llvm.AMDIL.barrier.local
llvm.AMDIL.barrier.region
llvm.AMDIL.barrier.region.local
llvm.AMDIL.bfi
llvm.AMDIL.bfm
llvm.AMDIL.bit.count.i32
llvm.AMDIL.bit.find.first.hi
llvm.AMDIL.bit.find.first.lo
llvm.AMDIL.bit.find.first.sgn
llvm.AMDIL.bit.reverse.u32
llvm.AMDIL.borrow.i32
llvm.AMDIL.carry.i32
llvm.AMDIL.clamp
llvm.AMDIL.class
llvm.AMDIL.cmov.logical
llvm.AMDIL.compute.unit.id
llvm.AMDIL.convert.f16.f32
llvm.AMDIL.convert.f32.f16
llvm.AMDIL.convert.f32.f16.near
llvm.AMDIL.convert.f32.f16.neg.inf
llvm.AMDIL.convert.f32.f16.plus.inf
llvm.AMDIL.convert.f32.i32.flr
llvm.AMDIL.convert.f32.i32.rpi
llvm.AMDIL.convert.f64.f32.rte
llvm.AMDIL.convert.f64.f32.rtn
llvm.AMDIL.convert.f64.f32.rtp
llvm.AMDIL.convert.f64.f32.rtz
llvm.AMDIL.cos.f16
llvm.AMDIL.cos.vec
llvm.AMDIL.div
llvm.AMDIL.div.precise
llvm.AMDIL.dp2
llvm.AMDIL.dp2.add
llvm.AMDIL.dp3
llvm.AMDIL.dp4
llvm.AMDIL.drcp
llvm.AMDIL.early.exit
llvm.AMDIL.exn
llvm.AMDIL.exp
llvm.AMDIL.exp.f16
llvm.AMDIL.exp.vec
llvm.AMDIL.fabs
llvm.AMDIL.fence
llvm.AMDIL.fence.global
llvm.AMDIL.fence.global.local
llvm.AMDIL.fence.local
llvm.AMDIL.fence.region
llvm.AMDIL.fence.region.global
llvm.AMDIL.fence.region.local
llvm.AMDIL.fma
llvm.AMDIL.fma.f16
llvm.AMDIL.fma.rte
llvm.AMDIL.fma.rte.f16
llvm.AMDIL.fma.rtn
llvm.AMDIL.fma.rtn.f16
llvm.AMDIL.fma.rtp
llvm.AMDIL.fma.rtp.f16
llvm.AMDIL.fma.rtz
llvm.AMDIL.fma.rtz.f16
llvm.AMDIL.fraction
llvm.AMDIL.frc.f16
llvm.AMDIL.frexp.exp
llvm.AMDIL.frexp.exp.f16
llvm.AMDIL.frexp.f64
llvm.AMDIL.frexp.mant
llvm.AMDIL.frexp.mant.f16
llvm.AMDIL.ftz
llvm.AMDIL.get.cycle.count
llvm.AMDIL.get.global.id
llvm.AMDIL.get.global.offset
llvm.AMDIL.get.global.size
llvm.AMDIL.get.group.id
llvm.AMDIL.get.local.id
llvm.AMDIL.get.local.size
llvm.AMDIL.get.num.groups
llvm.AMDIL.get.num.regions
llvm.AMDIL.get.printf.item.offset
llvm.AMDIL.get.printf.offset
llvm.AMDIL.get.printf.size
llvm.AMDIL.get.region.id
llvm.AMDIL.get.region.local.id
llvm.AMDIL.get.region.num.groups
llvm.AMDIL.get.region.size
llvm.AMDIL.get.sw.gws.offset
llvm.AMDIL.get.work.dim
llvm.AMDIL.gws
llvm.AMDIL.gws.global
llvm.AMDIL.gws.global.local
llvm.AMDIL.gws.global.region
llvm.AMDIL.gws.local
llvm.AMDIL.gws.local.region
llvm.AMDIL.gws.region
llvm.AMDIL.ibit.extract
llvm.AMDIL.image1d.array.info0
llvm.AMDIL.image1d.array.info1
llvm.AMDIL.image1d.array.load
llvm.AMDIL.image1d.array.read.norm
llvm.AMDIL.image1d.array.read.unnorm
llvm.AMDIL.image1d.array.write
llvm.AMDIL.image1d.buffer.info0
llvm.AMDIL.image1d.buffer.info1
llvm.AMDIL.image1d.buffer.load
llvm.AMDIL.image1d.buffer.read.norm
llvm.AMDIL.image1d.buffer.read.unnorm
llvm.AMDIL.image1d.buffer.write
llvm.AMDIL.image1d.info0
llvm.AMDIL.image1d.info1
llvm.AMDIL.image1d.load
llvm.AMDIL.image1d.read.norm
llvm.AMDIL.image1d.read.unnorm
llvm.AMDIL.image1d.write
llvm.AMDIL.image2d.array.info0
llvm.AMDIL.image2d.array.info1
llvm.AMDIL.image2d.array.load
llvm.AMDIL.image2d.array.read.norm
llvm.AMDIL.image2d.array.read.unnorm
llvm.AMDIL.image2d.array.write
llvm.AMDIL.image2d.info0
llvm.AMDIL.image2d.info1
llvm.AMDIL.image2d.load
llvm.AMDIL.image2d.read.norm
llvm.AMDIL.image2d.read.unnorm
llvm.AMDIL.image2d.write
llvm.AMDIL.image3d.info0
llvm.AMDIL.image3d.info1
llvm.AMDIL.image3d.load
llvm.AMDIL.image3d.read.norm
llvm.AMDIL.image3d.read.unnorm
llvm.AMDIL.image3d.write
llvm.AMDIL.inc.printf.item.offset
llvm.AMDIL.lane.id
llvm.AMDIL.ldexp
llvm.AMDIL.ldexp.f16
llvm.AMDIL.length
llvm.AMDIL.lerp
llvm.AMDIL.ln
llvm.AMDIL.log
llvm.AMDIL.log.f16
llvm.AMDIL.log.vec
llvm.AMDIL.mad
llvm.AMDIL.mad24.i32
llvm.AMDIL.mad24.u32
llvm.AMDIL.mad.f16
llvm.AMDIL.mad.i16
llvm.AMDIL.mad.i32
llvm.AMDIL.mad.i64.i32
llvm.AMDIL.mad.rte
llvm.AMDIL.mad.rtn
llvm.AMDIL.mad.rtp
llvm.AMDIL.mad.rtz
llvm.AMDIL.mad.u16
llvm.AMDIL.mad.u32
llvm.AMDIL.mad.u64.u32
llvm.AMDIL.max
llvm.AMDIL.max3
llvm.AMDIL.max3.i32
llvm.AMDIL.max3.u32
llvm.AMDIL.max.f16
llvm.AMDIL.max.i16
llvm.AMDIL.max.i32
llvm.AMDIL.max.semaphore.size
llvm.AMDIL.max.u16
llvm.AMDIL.max.u32
llvm.AMDIL.med3
llvm.AMDIL.med3.i32
llvm.AMDIL.med3.u32
llvm.AMDIL.media.bitalign
llvm.AMDIL.media.bytealign
llvm.AMDIL.media.convert.f2v4u8
llvm.AMDIL.media.lerp.u4
llvm.AMDIL.media.mqsad
llvm.AMDIL.media.mqsad.u32.u8
llvm.AMDIL.media.msad
llvm.AMDIL.media.qsad
llvm.AMDIL.media.sad
llvm.AMDIL.media.sad16
llvm.AMDIL.media.sad32
llvm.AMDIL.media.sad4
llvm.AMDIL.media.sad.hi
llvm.AMDIL.media.unpack.byte.0
llvm.AMDIL.media.unpack.byte.1
llvm.AMDIL.media.unpack.byte.2
llvm.AMDIL.media.unpack.byte.3
llvm.AMDIL.min
llvm.AMDIL.min3
llvm.AMDIL.min3.i32
llvm.AMDIL.min3.u32
llvm.AMDIL.min.f16
llvm.AMDIL.min.i16
llvm.AMDIL.min.i32
llvm.AMDIL.min.u16
llvm.AMDIL.min.u32
llvm.AMDIL.mul24.i32
llvm.AMDIL.mul24.u32
llvm.AMDIL.mul.f16
llvm.AMDIL.mul.rte
llvm.AMDIL.mul.rte.f16
llvm.AMDIL.mul.rtn
llvm.AMDIL.mul.rtn.f16
llvm.AMDIL.mul.rtp
llvm.AMDIL.mul.rtp.f16
llvm.AMDIL.mul.rtz
llvm.AMDIL.mul.rtz.f16
llvm.AMDIL.mulhi24.i32
llvm.AMDIL.mulhi24.u32
llvm.AMDIL.mulhi.i32
llvm.AMDIL.mulhi.u32
llvm.AMDIL.poisonv
llvm.AMDIL.pow
llvm.AMDIL.rcp.f16
llvm.AMDIL.read.fence
llvm.AMDIL.read.fence.global
llvm.AMDIL.read.fence.global.local
llvm.AMDIL.read.fence.local
llvm.AMDIL.read.fence.region
llvm.AMDIL.read.fence.region.global
llvm.AMDIL.read.fence.region.local
llvm.AMDIL.readfirstlane
llvm.AMDIL.receivelane
llvm.AMDIL.round.nearest
llvm.AMDIL.round.nearest.f16
llvm.AMDIL.round.neginf
llvm.AMDIL.round.neginf.f16
llvm.AMDIL.round.posinf
llvm.AMDIL.round.posinf.f16
llvm.AMDIL.round.zero
llvm.AMDIL.round.zero.f16
llvm.AMDIL.rsq
llvm.AMDIL.rsq.f16
llvm.AMDIL.rsq.vec
llvm.AMDIL.semaphore.signal
llvm.AMDIL.semaphore.signal.imm
llvm.AMDIL.semaphore.wait
llvm.AMDIL.semaphore.wait.imm
llvm.AMDIL.sign
llvm.AMDIL.sin.f16
llvm.AMDIL.sin.vec
llvm.AMDIL.sqrt
llvm.AMDIL.sqrt.f16
llvm.AMDIL.sqrt.vec
llvm.AMDIL.sub.f16
llvm.AMDIL.sub.rte
llvm.AMDIL.sub.rte.f16
llvm.AMDIL.sub.rtn
llvm.AMDIL.sub.rtn.f16
llvm.AMDIL.sub.rtp
llvm.AMDIL.sub.rtp.f16
llvm.AMDIL.sub.rtz
llvm.AMDIL.sub.rtz.f16
llvm.AMDIL.tan
llvm.AMDIL.trig.preop.f64
llvm.AMDIL.ubit.extract
llvm.AMDIL.ubit.insert
llvm.AMDIL.udiv
llvm.AMDIL.wavefront.id
llvm.AMDIL.write.fence
llvm.AMDIL.write.fence.global
llvm.AMDIL.write.fence.global.local
llvm.AMDIL.write.fence.local
llvm.AMDIL.write.fence.region
llvm.AMDIL.write.fence.region.global
llvm.AMDIL.write.fence.region.local
MDIL.abs.
MDIL.acos.
MDIL.add.f16.
MDIL.add.rte.
MDIL.add.rte.f16.
MDIL.add.rtn.
MDIL.add.rtn.f16.
MDIL.add.rtp.
MDIL.add.rtp.f16.
MDIL.add.rtz.
MDIL.add.rtz.f16.
MDIL.asin.
MDIL.atan.
MDIL.ballot.
MDIL.bfi.
MDIL.bfm.
MDIL.bit.count.i32.
MDIL.bit.find.first.hi.
MDIL.bit.find.first.lo.
MDIL.bit.find.first.sgn.
MDIL.bit.reverse.u32.
MDIL.borrow.i32.
MDIL.carry.i32.
MDIL.clamp.
MDIL.class.
MDIL.cmov.logical.
MDIL.convert.f16.f32.
MDIL.convert.f32.f16.
MDIL.convert.f32.f16.near.
MDIL.convert.f32.f16.neg.inf.
MDIL.convert.f32.f16.plus.inf.
MDIL.convert.f32.i32.flr.
MDIL.convert.f32.i32.rpi.
MDIL.convert.f64.f32.rte.
MDIL.convert.f64.f32.rtn.
MDIL.convert.f64.f32.rtp.
MDIL.convert.f64.f32.rtz.
MDIL.cos.f16.
MDIL.cos.vec.
MDIL.div.
MDIL.div.precise.
MDIL.early.exit.
MDIL.exn.
MDIL.exp.
MDIL.exp.f16.
MDIL.exp.vec.
MDIL.fabs.
MDIL.fence.
MDIL.fence.global.
MDIL.fence.global.local.
MDIL.fence.local.
MDIL.fence.region.
MDIL.fence.region.global.
MDIL.fence.region.local.
MDIL.fma.
MDIL.fma.f16.
MDIL.fma.rte.
MDIL.fma.rte.f16.
MDIL.fma.rtn.
MDIL.fma.rtn.f16.
MDIL.fma.rtp.
MDIL.fma.rtp.f16.
MDIL.fma.rtz.
MDIL.fma.rtz.f16.
MDIL.fraction.
MDIL.frc.f16.
MDIL.frexp.exp.
MDIL.frexp.exp.f16.
MDIL.frexp.mant.
MDIL.frexp.mant.f16.
MDIL.ftz.
MDIL.get.printf.item.offset.
MDIL.get.printf.offset.
MDIL.get.printf.size.
MDIL.get.sw.gws.offset.
MDIL.gws.
MDIL.gws.global.
MDIL.gws.global.local.
MDIL.gws.global.region.
MDIL.gws.local.
MDIL.gws.local.region.
MDIL.gws.region.
MDIL.ibit.extract.
MDIL.inc.printf.item.offset.
MDIL.lane.id.
MDIL.ldexp.
MDIL.ldexp.f16.
MDIL.length.
MDIL.lerp.
MDIL.ln.
MDIL.log.
MDIL.log.f16.
MDIL.log.vec.
MDIL.mad.
MDIL.mad24.i32.
MDIL.mad24.u32.
MDIL.mad.f16.
MDIL.mad.i16.
MDIL.mad.i32.
MDIL.mad.rte.
MDIL.mad.rtn.
MDIL.mad.rtp.
MDIL.mad.rtz.
MDIL.mad.u16.
MDIL.mad.u32.
MDIL.max.
MDIL.max3.
MDIL.max3.i32.
MDIL.max3.u32.
MDIL.max.f16.
MDIL.max.i16.
MDIL.max.i32.
MDIL.max.u16.
MDIL.max.u32.
MDIL.med3.
MDIL.med3.i32.
MDIL.med3.u32.
MDIL.media.bitalign.
MDIL.media.bytealign.
MDIL.media.lerp.u4.
MDIL.media.msad.
MDIL.media.sad.
MDIL.media.sad16.
MDIL.media.sad32.
MDIL.media.sad.hi.
MDIL.media.unpack.byte.0.
MDIL.media.unpack.byte.1.
MDIL.media.unpack.byte.2.
MDIL.media.unpack.byte.3.
MDIL.min.
MDIL.min3.
MDIL.min3.i32.
MDIL.min3.u32.
MDIL.min.f16.
MDIL.min.i16.
MDIL.min.i32.
MDIL.min.u16.
MDIL.min.u32.
MDIL.mul24.i32.
MDIL.mul24.u32.
MDIL.mul.f16.
MDIL.mul.rte.
MDIL.mul.rte.f16.
MDIL.mul.rtn.
MDIL.mul.rtn.f16.
MDIL.mul.rtp.
MDIL.mul.rtp.f16.
MDIL.mul.rtz.
MDIL.mul.rtz.f16.
MDIL.mulhi24.i32.
MDIL.mulhi24.u32.
MDIL.mulhi.i32.
MDIL.mulhi.u32.
MDIL.poisonv.
MDIL.pow.
MDIL.rcp.f16.
MDIL.read.fence.
MDIL.read.fence.global.
MDIL.read.fence.global.local.
MDIL.read.fence.local.
MDIL.read.fence.region.
MDIL.read.fence.region.global.
MDIL.read.fence.region.local.
MDIL.readfirstlane.
MDIL.receivelane.
MDIL.round.nearest.
MDIL.round.nearest.f16.
MDIL.round.neginf.
MDIL.round.neginf.f16.
MDIL.round.posinf.
MDIL.round.posinf.f16.
MDIL.round.zero.
MDIL.round.zero.f16.
MDIL.rsq.
MDIL.rsq.f16.
MDIL.rsq.vec.
MDIL.semaphore.signal.imm.
MDIL.semaphore.wait.imm.
MDIL.sign.
MDIL.sin.f16.
MDIL.sin.vec.
MDIL.sqrt.
MDIL.sqrt.f16.
MDIL.sqrt.vec.
MDIL.sub.f16.
MDIL.sub.rte.
MDIL.sub.rte.f16.
MDIL.sub.rtn.
MDIL.sub.rtn.f16.
MDIL.sub.rtp.
MDIL.sub.rtp.f16.
MDIL.sub.rtz.
MDIL.sub.rtz.f16.
MDIL.tan.
MDIL.ubit.extract.
MDIL.ubit.insert.
MDIL.udiv.
MDIL.write.fence.
MDIL.write.fence.global.
MDIL.write.fence.global.local.
MDIL.write.fence.local.
MDIL.write.fence.region.
MDIL.write.fence.region.global.
MDIL.write.fence.region.local.
MDIL.dp
MDIL.drcp
MDIL.
arrier
p2.add
MDIL.frexp.f64
MDIL.media.
MDIL.m
64.i32
64.u32
dia.mqsad
roup.id
ocal.id
ork.dim
mage
d.load
avefront.id
arrier.local
lobal.id
egion.id
rite
tomic.or.
arrier.
lobal
egion
ocal.size
um.groups
emaphore.wait
rig.preop.f64
tomic.
oad.g
ompute.unit.id
ycle.count
lobal.size
um.regions
egion.size
pend.alloc.i32
omic.
sub.
tore.g
chg.
emaphore.signal
skor.
et.global.offset
d.read.norm
pend.consume.i32
omic.load.gv
d.array.load
x.semaphore.size
dia.mqsad.u32.u8
mpxchg.
tore.gv
et.region.local.id
rray.
uffer.load
ead.unnorm
d.read.unnorm
2.noret
4.noret
lobal.local
egion.local
mage1d.buffer.
edia.convert.f2v4u8
arrier.global.region
et.region.num.groups
MDIL.atomic.
32.noret
tomic.mskor.
d.array.read.norm
MDIL.image1d.buffer.read.norm
tomic.cmpxchg.
d.array.read.unnorm
MDIL.image1d.buffer.read.unnorm
__atom
__atomic
__amdil_ln
__amdil_
__amd
barrier
rexp
dexp
qsad
llot
rrow
2_u4
ength
lerp
p2_add
c_f16
ne_id
oisonv
p_f16
dil_
italign
raction
qrt_
npack_
omic_or_
ytealign
rexp_exp
ws_local
d64_32
l_high
dexp_f16
em_fence
omic_
ount_bits
arly_exit
b_signed
exp_mant
qsad_32_8
ound_zero
rig_preop
sub_
chg_
dd_rt
_f16
iv_precise
ma_rt
mul24_high
ul_rt
eceivelane
ub_rt
it_insert
ul24_high
omic_mskor_
ppend_alloc
mov_logical
it_extract
d_load
ound_
eginf
osinf
bit_
xtract
everse
avefront_id
arrier_local
oat_to_half
exp_exp_f16
alf_to_float
adfirstlane
und_nearest
omic_cmpxchg_
ppend_consume
arrier_
rexp_mant_f16
ad_mem_fence
und_zero_f16
emaphore_wait
2_noret
4_noret
ompute_unit_id
ycle_count
rintf_size
em_fence_local
rite_mem_fence
loat_to_int_
roup_id_int
ocal_id_int
ork_dim_int
lobal_local
ocal_region
em_fence_
eginf_f16
osinf_f16
emaphore_signal
32_noret
lobal_id_int
rintf_offset
egion_id_int
w_gws_offset
s_global_region
d_read_norm
ound_nearest_f16
loat_to_half_near
ocal_size_int
um_groups_int
d_array_load
ax_semaphore_size
emaphore_wait_imm
omic_load_explicit_g
lobal_size_int
um_regions_int
egion_size_int
rray_
uffer_load
ead_unnorm
d_read_unnorm
mpxchg_
oad_explicit_g
tore_explicit_g
egion_local
ouble_to_float_zero
mage1d_buffer_
ead_mem_fence_local
emaphore_signal_imm
omic_store_explicit_g
arrier_global_region
loat_to_half_neg_inf
et_global_offset_int
ead_mem_fence_
rite_mem_fence_local
omic_load_explicit_gv
ouble_to_float_
loat_to_half_plus_inf
et_printf_item_offset
nc_printf_item_offset
rite_mem_fence_
omic_store_explicit_gv
ouble_to_float_nearest
et_region_local_id_int
d_array_read_norm
em_fence_region_global
__amdil_image1d_buffer_read_norm
et_region_num_groups_int
d_array_read_unnorm
__amdil_image1d_buffer_read_unnorm
__amdil_read_mem_fence_
ead_mem_fence_region_global
__amdil_write_mem_fence_region_global
amdil-call-stack-size
The call stack size for AMDIL
.xyxy
.zwzw
.00xx
.00xy
.xxxx
.xxyy
.xyzw
;pointer:
NoSymTab
:1:1:
flat
;value:
struct._image1d_t
struct._image1d_array_t
struct._image1d_buffer_t
struct._image2d_t
struct._image2d_array_t
struct._image3d_t
struct._counter32_t
struct._counter64_t
struct._sema_t
;image:
1DA:
1DB:
2DA:
dcl_resource_id(
)_type(
1darray
buffer
2darray
)_fmtx(unknown)_fmty(unknown)
_fmtz(unknown)_fmtw(unknown)
dcl_uav
dcl_typed_uav
_id(
)_fmtx(uint)
;counter:
;sema:
:struct:
;constarg:
dcl_num_thread_per_group 
dcl_max_thread_per_group 
dcl_gws_thread_count 
dcl_lds_id(
dcl_gds_id(
dcl_wavesize 
dcl_raw_uav_id(
dcl_arena_uav_id(
dcl_typeless_uav_id(
)_stride(4)_length(4)_access(
read_only)
read_write)
dcl_indexed_temp_array x0[
mov 
, cb0[8].xy
, cb0[8].x
, l0.0000
mov r0.__z_, vThreadGrpIdFlat0.x
mov r1022.xyz0, vTidInGrp0.xyz
mov r1023.xyz0, vThreadGrpId0.xyz
dcl_literal l9, 
0xFFFFFFFF
imad r1021.xyz0, r1023.xyzz, l9.xyzz, r1022.xyzz
umin r1023.xyz0, r1023.xyzz, l9.w
umin r1021.xyz0, cb0[1].xyzz, l1.x
imad r1021.xyz0, r1023.xyzz, r1021.xyzz, r1022.xyzz
imad r1021.xyz0, r1023.xyzz, cb0[1].xyzz, r1022.xyzz
umin r1024.xyz0, cb0[6].xyzz, l9.w
iadd r1021.xyz0, r1021.xyz0, r1024.xyz0
umin r1024.xyz0, cb0[7].xyzz, l9.w
iadd r1023.xyz0, r1023.xyz0, r1024.xyz0
iadd r1021.xyz0, r1021.xyz0, cb0[6].xyz0
iadd r1023.xyz0, r1023.xyz0, cb0[7].xyz0
mov r1023.___w, r0.z
umul 
.x0__, r1023.w, cb0[4].z
i64add 
.xy__, 
.xyyy, cb0[4].xyyy
imad 
.x___, r1023.w, cb0[4].y, cb0[4].x
mov x0[
ishl r1023.___w, r1023.w, l0.z
.x0__, vAbsTidFlat.x, cb0[3].z
.xyyy, cb0[3].xyyy
.x___, vAbsTidFlat.x, cb0[3].y, cb0[3].x
.x___, l0.0000
udiv r1024.xyz_, r1021.xyzz, cb0[10].xyzz
dcl_literal l10,
imad r1025.xyz0, r1023.xyzz, l10.xyzz, r1022.xyzz
imad r1025.xyz0, r1023.xyzz, cb0[10].xyzz, r1022.xyzz
.x, l0.y
], r1021
], r1023
endfunc ; __OpenCL_
_kernel
, l5.x
ishr 
, l3.0y0y
ishl 
, l3.z
, l3.0zyx
, l3.x
, l3.0z0z
ishr 
;memory:
private:
uav_raw_store_id(
) mem0, r0.x, cb
ishr r0.y, r0.x, l5.y
mov x
[r0.y], cb
iadd r0.x, r0.x, l
;version:
;ARGSTART:
;device:
;uniqueid:
local:
region:
;cws:
;crs:
;wsh:
;vth:
;membound:1
;WavesPerSimdHint:
;denorms:
;function:
;intrinsic:
;sampler:
;memory:64bitABI
;uavid:
;printfid:
;cbid:
;privateid:
llvm.argtypename.annotations.
;reflection:
;ARGEND:
dcl_literal l3, 0x00000018, 0x00000010, 0x00000008, 0xFFFFFFFF
dcl_literal l5, 0x00000000, 0x00000004, 0x00000008, 0x0000000C
dcl_cb cb1
dcl_cb cb
; Kernel arg setup: 
l3.y
l3.x
].xy
].zw
, r0.x
dcl_cb cb1[
)_stride(4)_length(
)_access(private)
dcl_literal l
) mem0, l
, r1023
dcl_indexed_temp_array x
, 16, 
iadd r0.x, 
.x, l
0x%08X, 0x%08X, 0x%08X, 0x%08X; f128:i128 
dcl_semaphore_id(
amd.opencl.memory_bound_kernels
amd.opencl.waves_per_simd_hint
denorm
;error:
;warning:
AMDIL Literal Manager
;#ASMSTART
;#ASMEND
.zero
.ascii
.asciz
.byte
.short
.long
.quad
;.align
.global
.extern
.weakref
.weakdef
llvm.signedOrSignedpointee.annotations.
llvm.volatilepointer.annotations.
llvm.restrictpointer.annotations.
llvm.argtypeconst.annotations.
AMDIL Machine Peephole Optimization
amdil-machine-peephole
AMDIL Generic Machine Peephole Optimization Pass
opt-local
Optimize local memory usage by removing useless local array
llvm.image.annotations
llvm.global.annotations
llvm.constpointer.annotations
llvm.sampler.annotations
llvm.argtypename.annotations
llvm.argtypeconst.annotations
llvm.readonlypointer.annotations
llvm.signedOrSignedpointee.annotations
llvm.restrictpointer.annotations
llvm.volatilepointer.annotations
__AMD_printf_fmt_
clregion
%d,%d,%d
;#DATASTART:
 <uninitalized constant>
;#DATAEND
;#DATAEND:
:0:0:0:0:0:0:0:0
:0:0:0:0
AMDIL Peephole Optimization
amdilpeephole
AMDIL PeepHole Optimization Pass
__amdil_f_2_u4
F_2_U4
__atomic_load
__atomic_store
_xchg
_noret
__amdil_imad24
__amdil_imul24
__amdil__imul24_high
__amdil_imad
_i32
imad24
imul24
__amdil_imul24_high
__amdil_imul_high
imul24_high
__amdil_get_local_size_int
peepholeopt
Number of get_local_size(N) functions removed
kauai
__amdil_improved_div
fdiv32
__amdil_use_sw_region_barrier
__amdil_reserve_lds_int
__amdil_reserve_gds_int
__amdil_reserve_semaphore
__amd_sw_region_barrier_gds_reserved
__amd_sw_region_barrier_lds_reserved
__amdil_ubit_extract
ByteExtractOpt
__amdil_bfi
_u32
bfiXor
bfiAnd
__amdil_class_f
new_class
AMD IL Default Pointer Manager Pass
AMD IL EG Pointer Manager Pass
unknown
llvm.readonlypointer.annotations.
llvm.sampler.annotations.
valueIdMap:
idValueMap:
id with write: 
AMDIL Pointer Manager
pointer-manager
AMDIL EG Pointer Manager
eg-pointer-manager
 => 
:arg
       => 
AMDIL Printf Conversion Pass
__printf_cl
GPRI8
GPRI16
GPRV2I8
GPRV2I8_with_sub_w
GPRV2I8_with_sub_x
GPRV2I8_with_sub_w_with_sub_w_in_ReservedTemp
GPRV2I8_with_sub_x_with_sub_x_in_ReservedTemp
GPR_32
GPR_32_and_GPRI16
GPRV2I16
GPRV2I16_with_sub_w
GPRV2I16_with_sub_x
GPRV4I8
GPR_W_32
GPR_X_32
GPR_Y_32
GPR_Z_32
ReservedTemp
GPR_32_and_ReservedTemp
ReservedTemp_and_GPRI16
GPRV2I16_and_ReservedTemp
ReservedTemp_with_sub_w
ReservedTemp_with_sub_x
GPRV4I8_and_ReservedTemp
GPR_W_32_and_ReservedTemp
GPR_X_32_and_ReservedTemp
GPR_Y_32_and_ReservedTemp
GPR_Z_32_and_ReservedTemp
ReservedTemp_and_GPRV2I16_with_sub_w
ReservedTemp_and_GPRV2I16_with_sub_x
ReservedReadonly
GPR_32_and_ReservedReadonly
ReservedReadwrite
GPRV2I32
GPR_64
GPRXYV2I32
GPRV4I16
GPR_XY_64
GPR_ZW_64
GPRV2I32_and_ReservedTemp
GPRV4I16_and_ReservedTemp
GPRXYV2I32_and_ReservedTemp
GPR_ZW_64_and_ReservedTemp
GPRV2I32_and_ReservedReadonly
GPRV4I32
GPRV2I64
GPRV2I64_and_ReservedTemp
GPRV4I32_and_ReservedReadonly
GPRV4I32_and_ReservedReadwrite
GPRI8+GPRV2I8_with_sub_w
GPRI8+GPRV2I8_with_sub_w_with_sub_w_in_ReservedTemp
GPRI8+GPRV2I8_with_sub_x_with_sub_x_in_ReservedTemp
GPRI8+ReservedTemp
GPRI8+GPR_32_and_ReservedTemp
GPRI8+GPRV2I16_and_ReservedTemp
GPRI8+ReservedTemp_with_sub_w
GPRI8+GPRXYV2I32
GPRV2I8_with_sub_w+GPR_32
GPRV2I8_with_sub_w+ReservedTemp
GPRV2I8_with_sub_w+GPR_32_and_ReservedTemp
GPRV2I8_with_sub_w+ReservedTemp_and_GPRI16
GPRV2I8_with_sub_w+GPRV2I16_and_ReservedTemp
GPRV2I8_with_sub_w+ReservedTemp_with_sub_w
GPRV2I8_with_sub_w_with_sub_w_in_ReservedTemp+GPR_32
GPRV2I8_with_sub_w_with_sub_w_in_ReservedTemp+GPR_W_32
GPRV2I8_with_sub_w_with_sub_w_in_ReservedTemp+GPR_Z_32
GPRV2I8_with_sub_w_with_sub_w_in_ReservedTemp+GPR_32_and_ReservedTemp
GPRV2I8_with_sub_w_with_sub_w_in_ReservedTemp+ReservedTemp_and_GPRI16
GPRV2I8_with_sub_x_with_sub_x_in_ReservedTemp+GPR_32
GPRV2I8_with_sub_x_with_sub_x_in_ReservedTemp+GPR_X_32
GPRV2I8_with_sub_x_with_sub_x_in_ReservedTemp+GPR_Y_32
GPRV2I8_with_sub_x_with_sub_x_in_ReservedTemp+GPR_32_and_ReservedTemp
GPRV2I8_with_sub_x_with_sub_x_in_ReservedTemp+ReservedTemp_and_GPRI16
GPR_32+GPRV4I8
GPR_32+ReservedTemp
GPR_32+GPRV2I16_and_ReservedTemp
GPR_32+ReservedTemp_with_sub_w
GPR_32+ReservedReadonly
GPR_32+GPRV2I32
GPR_32+GPRXYV2I32
GPR_32+GPRV4I32
GPRV4I8+ReservedTemp
GPRV4I8+GPR_32_and_ReservedTemp
GPRV4I8+GPRV2I32
GPR_W_32+ReservedTemp
GPR_W_32+GPR_32_and_ReservedTemp
GPR_W_32+ReservedTemp_and_GPRI16
GPR_W_32+GPRV2I16_and_ReservedTemp
GPR_W_32+ReservedTemp_with_sub_w
GPR_X_32+ReservedTemp
GPR_X_32+GPR_32_and_ReservedTemp
GPR_X_32+ReservedTemp_and_GPRI16
GPR_X_32+GPRV2I16_and_ReservedTemp
GPR_X_32+ReservedTemp_with_sub_w
GPR_Y_32+ReservedTemp
GPR_Y_32+GPR_32_and_ReservedTemp
GPR_Y_32+ReservedTemp_and_GPRI16
GPR_Y_32+GPRV2I16_and_ReservedTemp
GPR_Y_32+ReservedTemp_with_sub_w
GPR_Z_32+ReservedTemp
GPR_Z_32+GPR_32_and_ReservedTemp
GPR_Z_32+ReservedTemp_and_GPRI16
GPR_Z_32+GPRV2I16_and_ReservedTemp
GPR_Z_32+ReservedTemp_with_sub_w
ReservedTemp+GPRV2I32
ReservedTemp+GPRXYV2I32
ReservedTemp+GPRV4I32
GPR_32_and_ReservedTemp+GPRV2I16_and_ReservedTemp
GPR_32_and_ReservedTemp+ReservedTemp_with_sub_w
GPR_32_and_ReservedTemp+GPRV2I32
GPR_32_and_ReservedTemp+GPRXYV2I32
GPR_32_and_ReservedTemp+GPRV4I32
ReservedTemp_and_GPRI16+GPRXYV2I32
GPRV2I16_and_ReservedTemp+GPRXYV2I32
ReservedTemp_with_sub_w+GPRV2I32
ReservedTemp_with_sub_w+GPRXYV2I32
ReservedReadonly+GPRV2I32
ReservedReadonly+GPRXYV2I32
ReservedReadonly+GPRV4I32
GPRV2I32+GPRV4I32
v4i32
v2i32
v4f32
v2f32
v2i64
v2f64
sub_w
sub_x
sub_xy
sub_y
sub_z
sub_zw
AMDIL Register Use Validate
AMDIL Renumber Register
AMDIL SI IO Expansion
si-io-expansion
AMD IL SI Pointer Manager Pass
AMDIL SI Pointer Manager
si-pointer-manager
64bitptr
Specify if 64bit addressing should be used.
barrier_detect
Enable duplicate barrier detection(HD5XXX or later).
byte_addressable_store
Enable byte addressable stores
debug
Debug mode is enabled, so disable hardware accelerated address spaces.
flatas
Enable flat address space override for global/local/scratch/constant memory.
fp64
Enable 64bit double precision operations
half-ops
Supports operations on f16.
images
Enable image functions
macro-call
Use outline macro for function call
macrodb
Use internal macrodb, instead of macrodb in driver
metadata30
Enable generation of version 3.0 of the metadata spec
multi_uav
Generate multiple UAV code(HD5XXX family or later)
mwgs-3-128-1-1
Maximum workgroup size of 128
mwgs-3-16-1-1
Maximum workgroup size of 16
mwgs-3-256-1-1
Maximum workgroup size of 256
mwgs-3-32-1-1
Maximum workgroup size of 32
mwgs-3-64-1-1
Maximum workgroup size of 64
no-inline
specify whether to not inline functions
noalias
assert that all kernel argument pointers are not aliased
short-ops
Supports operations on i16.
small-global-objects
Specify that when using 64-bit pointers, no object will be large enough or span 32-bit boundary to require 64-bit addressing calculations
stack-uav
Use stack UAV for stack variables
baffin
Select the baffin processor
barts
Select the barts processor
bonaire
Select the bonaire processor
caicos
Select the caicos processor
capeverde
Select the capeverde processor
carrizo
Select the carrizo processor
cayman
Select the cayman processor
cedar
Select the cedar processor
cypress
Select the cypress processor
eagle
Select the eagle processor
ellesmere
Select the ellesmere processor
fiji
Select the fiji processor
hainan
Select the hainan processor
hawaii
Select the hawaii processor
iceland
Select the iceland processor
juniper
Select the juniper processor
kalindi
Select the kalindi processor
Select the kauai processor
mullins
Select the mullins processor
oland
Select the oland processor
owls
Select the owls processor
pitcairn
Select the pitcairn processor
redwood
Select the redwood processor
spectre
Select the spectre processor
spooky
Select the spooky processor
stoney
Select the stoney processor
tahiti
Select the tahiti processor
tonga
Select the tonga processor
trinity
Select the trinity processor
turks
Select the turks processor
vega10
Select the vega10 processor
Expected a variant SchedClass
generic
+mwgs
test
+cal
e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:32:32-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-v2048:2048:2048-a0:0:64-n32:64
e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-f80:32:32-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024-v2048:2048:2048-a0:0:64-n32:64
tiran
AMD IL Swizzle Encoder Pass
.x000
.0x00
.00x0
.000x
.y000
.0y00
.00y0
.000y
.z000
.0z00
.00z0
.000z
.w000
.0w00
.00w0
.000w
.zw00
.xyz0
.0xyz
.xzxz
.ywyw
.x0y0
.0x0y
.0yzw
.x0zw
.xy0w
.yzw0
.z0w0
.0z0w
.x___
._y__
.__z_
.___w
.xyz_
struct
struct._event_t
event
image1d
image1d_array
image2d
image2d_array
image3d
semaphore
counter32
counter64
opaque
float
double
half
amdil
ATI GPUs with 32 bit pointers
amdil64
AMD GPUs with 64 bit pointers
amdil-
amdil64-
mdef(0)_out(1)_in(1)
mov r0, in0
fence_threads_memory_lds
mov out0, r0
mend
barrierGlobal
mdef(1)_out(1)_in(1)
mov r0, in0
fence_threads_memory
mov out0, r0
mend
barrierLocal
mdef(2)_out(1)_in(1)
mov r0, in0
fence_threads_lds
mov out0, r0
mend
read_mem_fence
mdef(3)_out(1)_in(1)
mov r0, in0
fence_lds_mem_read_only
mov out0, r0
mend
write_mem_fence
mdef(4)_out(1)_in(1)
mov r0, in0
fence_lds_mem_write_only
mov out0, r0
mend
__acosh_f32
mdef(5)_out(1)_in(1)
mov r0, in0
mov r1.x___, r0.x
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r0._y__, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x007FFFFF
and r0.__zw, r1.x, l1
dcl_literal l2, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000
add r1._yz_, r0.z, l2
mul_ieee r1.__z_, r1.z, r1.y
sqrt_vec r1.__z_, r1.z
add r0.x___, r1.y, r1.z
dcl_literal l3, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1._y__, r0.x, l3
dcl_literal l4, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.__z_, r1.y, l4
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1._y__, r1.y, l5
dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r1.___w, l6, r1.z
dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r1.___w, r1.w, l7
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.x___, r1.w, l8
dcl_literal l9, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1.___w, r1.w, l9
dcl_literal l10, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r1._y__, r1.y, l10
iadd r1._y__, r1.y, r2.x
itof r2._y__, r1.y
ior r1._y__, r1.z, r1.w
dcl_literal l11, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r2.x___, r1.y, l11
dcl_literal l12, 0x3ECCCCCD, 0x3ECCCCCD, 0x3ECCCCCD, 0x3ECCCCCD
ge r1._y__, r0.x, l12
cmov_logical r0.xy__, r1.y, r2.xyxx, r0.xyxx
dcl_literal l13, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r1._y__, r0.x, l13
div_zeroop(infinity) r1._y__, r0.x, r1.y
mul_ieee r1.__z_, r1.y, r1.y
mul_ieee r1.___w, r1.z, r1.z
dcl_literal l14, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
dcl_literal l15, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.w, l14, l15
dcl_literal l16, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.w, r2.xyxx, l16
mul_ieee r2.x___, r1.w, r2.x
dcl_literal l17, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r1.___w, r1.w, r2.y, l17
mad_ieee r1.__z_, r1.z, r1.w, r2.x
mul_ieee r1.___w, r0.x, r0.x
dcl_literal l18, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1.__z_, r1.w, l18, r1.z
dcl_literal l19, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r2.x___, r0.y, l19
mad_ieee r1._y__, r1.y, r1.z, r2.x
dcl_literal l20, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1._y__, r1.w, l20, r1.y_neg(xyzw)
add r0.x___, r0.x_neg(xyzw), r1.y
dcl_literal l21, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0.x___, r0.y, l21, r0.x_neg(xyzw)
dcl_literal l22, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r0._y__, l22, r0.w
dcl_literal l23, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r0._y__, r0.y, l23
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1._y__, r0.y, l24
dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0._y__, r0.y, l25
ior r0.___w, r0.w, r1.y
dcl_literal l26, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000
add r1._yz_, r0.w, l26
div_zeroop(infinity) r0.___w, r1.y, r1.z
mul_ieee r1.__z_, r0.w, r0.w
mul_ieee r1.___w, r1.z, r1.z
dcl_literal l27, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
dcl_literal l28, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.w, l27, l28
dcl_literal l29, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.w, r2.xyxx, l29
mul_ieee r2.x___, r1.w, r2.x
dcl_literal l30, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r1.___w, r1.w, r2.y, l30
mad_ieee r1.__z_, r1.z, r1.w, r2.x
mul_ieee r1.___w, r1.y, r1.y
dcl_literal l31, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1.__z_, r1.w, l31, r1.z
dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.x___, r0.z, l32
dcl_literal l33, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.x___, r2.x, l33
iadd r0._y__, r2.x, r0.y
itof r0._y__, r0.y
dcl_literal l34, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r2.x___, r0.y, l34
mad_ieee r0.___w, r0.w, r1.z, r2.x
dcl_literal l35, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0.___w, r1.w, l35, r0.w_neg(xyzw)
add r0.___w, r1.y_neg(xyzw), r0.w
dcl_literal l36, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0._y__, r0.y, l36, r0.w_neg(xyzw)
dcl_literal l37, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
add r0._y__, r0.y, l37
dcl_literal l38, 0x46000000, 0x46000000, 0x46000000, 0x46000000
ult r0.___w, l38, r0.z
cmov_logical r0.x___, r0.w, r0.y, r0.x
dcl_literal l39, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0._y__, l39, r1.x
dcl_literal l40, 0x00000000, 0x3F800000, 0x00000000, 0x00000000
ilt r1.xy__, r1.x, l40
dcl_literal l41, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.z, l41
dcl_literal l42, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l42, r0.z
and r0._y__, r0.y, r0.w
and r0.___w, r1.x, r0.w
dcl_literal l43, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.y, l43, r0.x
ior r0._y__, r0.z, r0.w
dcl_literal l44, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l44, r0.x
dcl_literal l45, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.x___, r1.y, l45, r0.x
mov out0, r0
mend
__acospi_f32
mdef(6)_out(1)_in(1)
mov r0, in0
mov r1.x___, r0.x
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r1.x, l1
cmov_logical r0.x___, r0.w, r1.x_neg(xyzw), r1.x
inot r0.___w, r0.w
dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1._y__, r0.x_neg(xyzw), l2
dcl_literal l3, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r1.___w, r1.y, l3
sqrt_vec r1._yz_, r1.w
dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r2.x___, r1.x, l4
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r2.x___, r2.x, l5
dcl_literal l6, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.x___, r2.x, l6
dcl_literal l7, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
ige r2._y__, r2.x, l7
dcl_literal l8, 0xFFFFFFE6, 0xFFFFFFE6, 0xFFFFFFE6, 0xFFFFFFE6
ilt r2.x___, r2.x, l8
mul_ieee r0.__z_, r0.x, r0.x
cmov_logical r0.xyz_, r2.y, r1.yzwy, r0.xyzx
dcl_literal l9, 0x00000000, 0x3B81CE6B, 0x3F561F0D, 0x00000000
dcl_literal l10, 0x00000000, 0xBC5B3FE1, 0x3F8D6FA5, 0x00000000
mad_ieee r1._yz_, r0.z_neg(xyzw), l9, l10
dcl_literal l11, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD
mad_ieee r1._y__, r1.y, r0.z, l11
dcl_literal l12, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC
mad_ieee r1._y__, r1.y, r0.z, l12
mul_ieee r1._y__, r0.z, r1.y
div_zeroop(infinity) r1._y__, r1.y, r1.z
mul_ieee r1.__z_, r0.x, r1.y
add r1.__z_, r1.z, r1.z
dcl_literal l13, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
and r1.___w, r0.y, l13
mad_ieee r0.__z_, r1.w_neg(xyzw), r1.w, r0.z
add r2.__z_, r0.y, r1.w
mad_ieee r0.x___, r0.x, r1.y, r0.y
dcl_literal l14, 0x333BB645, 0x333BB645, 0x333BB645, 0x333BB645
mad_ieee r0._y__, r1.x_neg(xyzw), r1.y, l14
div_zeroop(infinity) r0.__z_, r0.z, r2.z
dcl_literal l15, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r0.__z_, r0.z, l15, r1.z
dcl_literal l16, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r0.__z_, r1.w, l16, r0.z
dcl_literal l17, 0xB33BB645, 0xB33BB645, 0xB33BB645, 0xB33BB645
add r0.x___, r0.x, l17
dcl_literal l18, 0x40000000, 0x40000000, 0x40000000, 0x40000000
dcl_literal l19, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mad_ieee r0.x___, r0.x_neg(xyzw), l18, l19
and r0.___w, r0.w, r2.y
cmov_logical r0.x___, r0.w, r0.z, r0.x
add r0._y__, r1.x, r0.y_neg(xyzw)
dcl_literal l20, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
add r0._y__, r0.y_neg(xyzw), l20
cmov_logical r0.x___, r2.y, r0.x, r0.y
mov r0._y__, r1.x_abs
dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ult r0._y__, l21, r0.y
dcl_literal l22, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.__z_, r1.x, l22
dcl_literal l23, 0x3F800000, 0xBF800000, 0x00000000, 0x00000000
eq r1.xy__, r1.x, l23
cmov_logical r0.x___, r0.y, r0.z, r0.x
dcl_literal l24, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
cmov_logical r0.x___, r2.x, l24, r0.x
dcl_literal l25, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r1.x, l25, r0.x
dcl_literal l26, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
cmov_logical r0.x___, r1.y, l26, r0.x
dcl_literal l27, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983
mul_ieee r0.x___, r0.x, l27
mov out0, r0
mend
__acos_f32
mdef(7)_out(1)_in(1)
mov r0, in0
mov r1.x___, r0.x
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r0._y__, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r1.x, l1
cmov_logical r0.x___, r0.w, r1.x_neg(xyzw), r1.x
inot r0.___w, r0.w
dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1._y__, r0.x_neg(xyzw), l2
dcl_literal l3, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r1.___w, r1.y, l3
sqrt_vec r1._yz_, r1.w
dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r2.x___, r1.x, l4
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r2.x___, r2.x, l5
dcl_literal l6, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.x___, r2.x, l6
dcl_literal l7, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
ige r2._y__, r2.x, l7
dcl_literal l8, 0xFFFFFFE6, 0xFFFFFFE6, 0xFFFFFFE6, 0xFFFFFFE6
ilt r2.x___, r2.x, l8
mul_ieee r0.__z_, r0.x, r0.x
cmov_logical r0.xyz_, r2.y, r1.yzwy, r0.xyzx
dcl_literal l9, 0x00000000, 0x3B81CE6B, 0x3F561F0D, 0x00000000
dcl_literal l10, 0x00000000, 0xBC5B3FE1, 0x3F8D6FA5, 0x00000000
mad_ieee r1._yz_, r0.z_neg(xyzw), l9, l10
dcl_literal l11, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD
mad_ieee r1._y__, r1.y, r0.z, l11
dcl_literal l12, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC
mad_ieee r1._y__, r1.y, r0.z, l12
mul_ieee r1._y__, r0.z, r1.y
div_zeroop(infinity) r1._y__, r1.y, r1.z
mul_ieee r1.__z_, r0.x, r1.y
add r1.__z_, r1.z, r1.z
dcl_literal l13, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
and r1.___w, r0.y, l13
mad_ieee r0.__z_, r1.w_neg(xyzw), r1.w, r0.z
add r2.__z_, r0.y, r1.w
mad_ieee r0.x___, r0.x, r1.y, r0.y
dcl_literal l14, 0x333BB645, 0x333BB645, 0x333BB645, 0x333BB645
mad_ieee r0._y__, r1.x_neg(xyzw), r1.y, l14
div_zeroop(infinity) r0.__z_, r0.z, r2.z
dcl_literal l15, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r0.__z_, r0.z, l15, r1.z
dcl_literal l16, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r0.__z_, r1.w, l16, r0.z
dcl_literal l17, 0xB33BB645, 0xB33BB645, 0xB33BB645, 0xB33BB645
add r0.x___, r0.x, l17
dcl_literal l18, 0x40000000, 0x40000000, 0x40000000, 0x40000000
dcl_literal l19, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mad_ieee r0.x___, r0.x_neg(xyzw), l18, l19
and r0.___w, r0.w, r2.y
cmov_logical r0.x___, r0.w, r0.z, r0.x
add r0._y__, r1.x, r0.y_neg(xyzw)
dcl_literal l20, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
add r0._y__, r0.y_neg(xyzw), l20
cmov_logical r0.x___, r2.y, r0.x, r0.y
mov r0._y__, r1.x_abs
dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ult r0._y__, l21, r0.y
dcl_literal l22, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.__z_, r1.x, l22
dcl_literal l23, 0x3F800000, 0xBF800000, 0x00000000, 0x00000000
eq r1.xy__, r1.x, l23
cmov_logical r0.x___, r0.y, r0.z, r0.x
dcl_literal l24, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
cmov_logical r0.x___, r2.x, l24, r0.x
dcl_literal l25, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r1.x, l25, r0.x
dcl_literal l26, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
cmov_logical r0.x___, r1.y, l26, r0.x
mov out0, r0
mend
__amdil_bitalign_1
mdef(8)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
bitalign r0.x___, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_bitalign_2
mdef(9)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
bitalign r0.xy__, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_bitalign_3
mdef(10)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
bitalign r0.xyz_, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_bitalign_4
mdef(11)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
bitalign r0, r0, r1, r2
mov out0, r0
mend
__amdil_bytealign_1
mdef(12)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
bytealign r0.x___, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_bytealign_2
mdef(13)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
bytealign r0.xy__, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_bytealign_3
mdef(14)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
bytealign r0.xyz_, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_bytealign_4
mdef(15)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
bytealign r0, r0, r1, r2
mov out0, r0
mend
__amdil_cmovl_1
mdef(16)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
cmov_logical r0.x, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_cmovl_2
mdef(17)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
cmov_logical r0.xy, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_cmovl_3
mdef(18)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
cmov_logical r0.xyz, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_cmovl_4
mdef(19)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
cmov_logical r0, r0, r1, r2
mov out0, r0
mend
__amdil_dfrexp
mdef(20)_out(1)_in(1)
mov r0, in0
dfrexp r0, r0.xy
mov out0, r0
mend
__amdil_dldexp
mdef(21)_out(1)_in(2)
mov r0, in0
mov r1, in1
dldexp r0.xy__, r0.xy, r1.x
mov out0, r0
mend
__amdil_dmad
mdef(22)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
dmad r0.xy__, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_dmax
mdef(23)_out(1)_in(2)
mov r0, in0
mov r1, in1
dmax r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_dmin
mdef(24)_out(1)_in(2)
mov r0, in0
mov r1, in1
dmin r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_dp2_ieee
mdef(25)_out(1)_in(2)
mov r0, in0
mov r1, in1
dp2_ieee r0.x___, r0, r1
mov out0, r0
mend
__amdil_dp3_ieee
mdef(26)_out(1)_in(2)
mov r0, in0
mov r1, in1
dp3_ieee r0.x___, r0, r1
mov out0, r0
mend
__amdil_dp4_ieee
mdef(27)_out(1)_in(2)
mov r0, in0
mov r1, in1
dp4_ieee r0.x___, r0, r1
mov out0, r0
mend
__amdil_drcp
mdef(28)_out(1)_in(1)
mov r0, in0
drcp_zeroop(infinity) r0.xy__, r0.xy
mov out0, r0
mend
__amdil_drsq
mdef(29)_out(1)_in(1)
mov r0, in0
drsq_zeroop(infinity) r0.xy__, r0.xy
mov out0, r0
mend
__amdil_fabs_1
mdef(30)_out(1)_in(1)
mov r0, in0
mov r0.x, r0.x_abs
mov out0, r0
mend
__amdil_fabs_2
mdef(31)_out(1)_in(1)
mov r0, in0
mov r0.xy, r0.xy_abs
mov out0, r0
mend
__amdil_fabs_3
mdef(32)_out(1)_in(1)
mov r0, in0
mov r0.xyz, r0.xyz_abs
mov out0, r0
mend
__amdil_fabs_4
mdef(33)_out(1)_in(1)
mov r0, in0
mov r0, r0_abs
mov out0, r0
mend
__amdil_ffb_hi_1
mdef(34)_out(1)_in(1)
mov r0, in0
ffb_hi r0.x, r0.x
mov out0, r0
mend
__amdil_ffb_hi_2
mdef(35)_out(1)_in(1)
mov r0, in0
ffb_hi r0.xy, r0.xy
mov out0, r0
mend
__amdil_ffb_hi_3
mdef(36)_out(1)_in(1)
mov r0, in0
ffb_hi r0.xyz, r0.xyz
mov out0, r0
mend
__amdil_ffb_hi_4
mdef(37)_out(1)_in(1)
mov r0, in0
ffb_hi r0, r0
mov out0, r0
mend
__amdil_ffb_lo_1
mdef(38)_out(1)_in(1)
mov r0, in0
ffb_lo r0.x, r0.x
mov out0, r0
mend
__amdil_ffb_lo_2
mdef(39)_out(1)_in(1)
mov r0, in0
ffb_lo r0.xy, r0.xy
mov out0, r0
mend
__amdil_ffb_lo_3
mdef(40)_out(1)_in(1)
mov r0, in0
ffb_lo r0.xyz, r0.xyz
mov out0, r0
mend
__amdil_ffb_lo_4
mdef(41)_out(1)_in(1)
mov r0, in0
ffb_lo r0, r0
mov out0, r0
mend
__amdil_float_to_half_near_f32
mdef(42)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 0x80000000, 0x80000000, 0x80000000, 0x80000000
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1.x, r0.x, l1.x
ushr r2.x, r0.x, l2.x
iand r2.x, r2.x, l3.x
iadd r2.x, r2.x, l4.x
iadd r3.x, l6.x, r2.x_neg(xyzw)
imin r3.x, r3.x, l5.x
imax r3.x, r3.x, l8.x
ilt r4.x, l4.x, r2.x
cmov_logical r4.x, r4.x, l7.x, l8.x
ior r4.x, r1.x, r4.x
iadd r13.x, l5.x, r3.x_neg(xyzw)
ishl r4.x, r4.x, r13.x
ushr r5.x, r0.x, l9.x
iand r5.x, r5.x, l10.x
ushr r6.x, r0.x, l11.x
iand r6.x, r6.x, l12.x
cmov_logical r7.x, r1.x, l14.x, l8.x
ior r7.x, r7.x, r6.x
ior r7.x, r7.x, l13.x
ishl r8.x, r2.x, l15.x
ior r8.x, r8.x, r6.x
ior r9.x, l16.x, r6.x
ushr r9.x, r9.x, r3.x
ilt r10.x, r2.x, l6.x
cmov_logical r10.x, r10.x, r9.x, r8.x
iand r11.x, r10.x, l6.x
ult r12.x, l17.x, r4.x
cmov_logical r12.x, r12.x, l6.x, l8.x
ieq r13.x, r4.x, l17.x
cmov_logical r12.x, r13.x, r11.x, r12.x
iadd r10.x, r10.x, r12.x
ilt r13.x, l18.x, r2.x
cmov_logical r10.x, r13.x, l13.x, r10.x
ieq r13.x, r2.x, l19.x
cmov_logical r10.x, r13.x, r7.x, r10.x
ior r0.x, r5.x, r10.x
mov out0, r0
mend
__amdil_float_to_half_near_v2f32
mdef(43)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 0x80000000, 0x80000000, 0x80000000, 0x80000000
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1.xy, r0.xy, l1.xy
ushr r2.xy, r0.xy, l2.xy
iand r2.xy, r2.xy, l3.xy
iadd r2.xy, r2.xy, l4.xy
iadd r3.xy, l6.xy, r2.xy_neg(xyzw)
imin r3.xy, r3.xy, l5.xy
imax r3.xy, r3.xy, l8.xy
ilt r4.xy, l4.xy, r2.xy
cmov_logical r4.xy, r4.xy, l7.xy, l8.xy
ior r4.xy, r1.xy, r4.xy
iadd r13.xy, l5.xy, r3.xy_neg(xyzw)
ishl r4.xy, r4.xy, r13.xy
ushr r5.xy, r0.xy, l9.xy
iand r5.xy, r5.xy, l10.xy
ushr r6.xy, r0.xy, l11.xy
iand r6.xy, r6.xy, l12.xy
cmov_logical r7.xy, r1.xy, l14.xy, l8.xy
ior r7.xy, r7.xy, r6.xy
ior r7.xy, r7.xy, l13.xy
ishl r8.xy, r2.xy, l15.xy
ior r8.xy, r8.xy, r6.xy
ior r9.xy, l16.xy, r6.xy
ushr r9.xy, r9.xy, r3.xy
ilt r10.xy, r2.xy, l6.xy
cmov_logical r10.xy, r10.xy, r9.xy, r8.xy
iand r11.xy, r10.xy, l6.xy
ult r12.xy, l17.xy, r4.xy
cmov_logical r12.xy, r12.xy, l6.xy, l8.xy
ieq r13.xy, r4.xy, l17.xy
cmov_logical r12.xy, r13.xy, r11.xy, r12.xy
iadd r10.xy, r10.xy, r12.xy
ilt r13.xy, l18.xy, r2.xy
cmov_logical r10.xy, r13.xy, l13.xy, r10.xy
ieq r13.xy, r2.xy, l19.xy
cmov_logical r10.xy, r13.xy, r7.xy, r10.xy
ior r0.xy, r5.xy, r10.xy
mov out0, r0
mend
__amdil_float_to_half_near_v4f32
mdef(44)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 0x80000000, 0x80000000, 0x80000000, 0x80000000
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1, r0, l1
ushr r2, r0, l2
iand r2, r2, l3
iadd r2, r2, l4
iadd r3, l6, r2_neg(xyzw)
imin r3, r3, l5
imax r3, r3, l8
ilt r4, l4, r2
cmov_logical r4, r4, l7, l8
ior r4, r1, r4
iadd r13, l5, r3_neg(xyzw)
ishl r4, r4, r13
ushr r5, r0, l9
iand r5, r5, l10
ushr r6, r0, l11
iand r6, r6, l12
cmov_logical r7, r1, l14, l8
ior r7, r7, r6
ior r7, r7, l13
ishl r8, r2, l15
ior r8, r8, r6
ior r9, l16, r6
ushr r9, r9, r3
ilt r10, r2, l6
cmov_logical r10, r10, r9, r8
iand r11, r10, l6
ult r12, l17, r4
cmov_logical r12, r12, l6, l8
ieq r13, r4, l17
cmov_logical r12, r13, r11, r12
iadd r10, r10, r12
ilt r13, l18, r2
cmov_logical r10, r13, l13, r10
ieq r13, r2, l19
cmov_logical r10, r13, r7, r10
ior r0, r5, r10
mov out0, r0
mend
__amdil_float_to_half_neg_inf_f32
mdef(45)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 0x7bff, 0x7bff, 0x7bff, 0x7bff
dcl_literal l19, 30, 30, 30, 30
dcl_literal l20, 143, 143, 143, 143
iand r1.x, r0.x, l1.x
ushr r2.x, r0.x, l2.x
iand r2.x, r2.x, l3.x
iadd r2.x, r2.x, l4.x
iadd r3.x, l6.x, r2.x_neg(xyzw)
imin r3.x, r3.x, l5.x
imax r3.x, r3.x, l8.x
ilt r4.x, l4.x, r2.x
cmov_logical r4.x, r4.x, l7.x, l8.x
ior r4.x, r4.x, r1.x
iadd r13.x, l5.x, r3.x_neg(xyzw)
ishl r4.x, r4.x, r13.x
ushr r5.x, r0.x, l9.x
iand r5.x, r5.x, l10.x
ushr r6.x, r0.x, l11.x
iand r6.x, r6.x, l12.x
cmov_logical r7.x, r1.x, l14.x, l8.x
ior r7.x, r7.x, r6.x
ior r7.x, r7.x, l13.x
ishl r8.x, r2.x, l15.x
ior r8.x, r8.x, r6.x
ior r9.x, l16.x, r6.x
ushr r9.x, r9.x, r3.x
ilt r10.x, r2.x, l6.x
cmov_logical r10.x, r10.x, r9.x, r8.x
ushr r13.x, r5.x, l17.x
ult r14.x, l8.x, r4.x
iand r13.x, r13.x, r14.x
iadd r10.x, r10.x, r13.x
ushr r11.x, r5.x, l17.x
iadd r11.x, r11.x, l18.x
ilt r13.x, l19.x, r2.x
cmov_logical r10.x, r13.x, r11.x, r10.x
ieq r13.x, r2.x, l20.x
cmov_logical r10.x, r13.x, r7.x, r10.x
ior r0.x, r5.x, r10.x
mov out0, r0
mend
__amdil_float_to_half_neg_inf_v2f32
mdef(46)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 0x7bff, 0x7bff, 0x7bff, 0x7bff
dcl_literal l19, 30, 30, 30, 30
dcl_literal l20, 143, 143, 143, 143
iand r1.xy, r0.xy, l1.xy
ushr r2.xy, r0.xy, l2.xy
iand r2.xy, r2.xy, l3.xy
iadd r2.xy, r2.xy, l4.xy
iadd r3.xy, l6.xy, r2.xy_neg(xyzw)
imin r3.xy, r3.xy, l5.xy
imax r3.xy, r3.xy, l8.xy
ilt r4.xy, l4.xy, r2.xy
cmov_logical r4.xy, r4.xy, l7.xy, l8.xy
ior r4.xy, r4.xy, r1.xy
iadd r13.xy, l5.xy, r3.xy_neg(xyzw)
ishl r4.xy, r4.xy, r13.xy
ushr r5.xy, r0.xy, l9.xy
iand r5.xy, r5.xy, l10.xy
ushr r6.xy, r0.xy, l11.xy
iand r6.xy, r6.xy, l12.xy
cmov_logical r7.xy, r1.xy, l14.xy, l8.xy
ior r7.xy, r7.xy, r6.xy
ior r7.xy, r7.xy, l13.xy
ishl r8.xy, r2.xy, l15.xy
ior r8.xy, r8.xy, r6.xy
ior r9.xy, l16.xy, r6.xy
ushr r9.xy, r9.xy, r3.xy
ilt r10.xy, r2.xy, l6.xy
cmov_logical r10.xy, r10.xy, r9.xy, r8.xy
ushr r13.xy, r5.xy, l17.xy
ult r14.xy, l8.xy, r4.xy
iand r13.xy, r13.xy, r14.xy
iadd r10.xy, r10.xy, r13.xy
ushr r11.xy, r5.xy, l17.xy
iadd r11.xy, r11.xy, l18.xy
ilt r13.xy, l19.xy, r2.xy
cmov_logical r10.xy, r13.xy, r11.xy, r10.xy
ieq r13.xy, r2.xy, l20.xy
cmov_logical r10.xy, r13.xy, r7.xy, r10.xy
ior r0.xy, r5.xy, r10.xy
mov out0, r0
mend
__amdil_float_to_half_neg_inf_v4f32
mdef(47)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 0x7bff, 0x7bff, 0x7bff, 0x7bff
dcl_literal l19, 30, 30, 30, 30
dcl_literal l20, 143, 143, 143, 143
iand r1, r0, l1
ushr r2, r0, l2
iand r2, r2, l3
iadd r2, r2, l4
iadd r3, l6, r2_neg(xyzw)
imin r3, r3, l5
imax r3, r3, l8
ilt r4, l4, r2
cmov_logical r4, r4, l7, l8
ior r4, r4, r1
iadd r13, l5, r3_neg(xyzw)
ishl r4, r4, r13
ushr r5, r0, l9
iand r5, r5, l10
ushr r6, r0, l11
iand r6, r6, l12
cmov_logical r7, r1, l14, l8
ior r7, r7, r6
ior r7, r7, l13
ishl r8, r2, l15
ior r8, r8, r6
ior r9, l16, r6
ushr r9, r9, r3
ilt r10, r2, l6
cmov_logical r10, r10, r9, r8
ushr r13, r5, l17
ult r14, l8, r4
iand r13, r13, r14
iadd r10, r10, r13
ushr r11, r5, l17
iadd r11, r11, l18
ilt r13, l19, r2
cmov_logical r10, r13, r11, r10
ieq r13, r2, l20
cmov_logical r10, r13, r7, r10
ior r0, r5, r10
mov out0, r0
mend
__amdil_float_to_half_plus_inf_f32
mdef(48)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1.x, r0.x, l1.x
ushr r2.x, r0.x, l2.x
iand r2.x, r2.x, l3.x
iadd r2.x, r2.x, l4.x
iadd r3.x, l6.x, r2.x_neg(xyzw)
imin r3.x, r3.x, l5.x
imax r3.x, r3.x, l8.x
ilt r4.x, l4.x, r2.x
cmov_logical r4.x, r4.x, l7.x, l8.x
ior r4.x, r1.x, r4.x
iadd r13.x, l5.x, r3.x_neg(xyzw)
ishl r4.x, r4.x, r13.x
ushr r5.x, r0.x, l9.x
iand r5.x, r5.x, l10.x
ushr r6.x, r0.x, l11.x
iand r6.x, r6.x, l12.x
cmov_logical r7.x, r1.x, l14.x, l8.x
ior r7.x, r7.x, r6.x
ior r7.x, r7.x, l13.x
ishl r8.x, r2.x, l15.x
ior r8.x, r8.x, r6.x
ior r9.x, l16.x, r6.x
ushr r9.x, r9.x, r3.x
ilt r10.x, r2.x, l6.x
cmov_logical r10.x, r10.x, r9.x, r8.x
ieq r13.x, l8.x, r5.x
ult r14.x, l8.x, r4.x
iand r13.x, r13.x, r14.x
iand r13.x, r13.x, l6.x
iadd r10.x, r10.x, r13.x
ushr r11.x, r5.x, l17.x
iadd r11.x, l13.x, r11.x_neg(xyzw)
ilt r13.x, l18.x, r2.x
cmov_logical r10.x, r13.x, r11.x, r10.x
ieq r13.x, r2.x, l19.x
cmov_logical r10.x, r13.x, r7.x, r10.x
ior r0.x, r5.x, r10.x
mov out0, r0
mend
__amdil_float_to_half_plus_inf_v2f32
mdef(49)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1.xy, r0.xy, l1.xy
ushr r2.xy, r0.xy, l2.xy
iand r2.xy, r2.xy, l3.xy
iadd r2.xy, r2.xy, l4.xy
iadd r3.xy, l6.xy, r2.xy_neg(xyzw)
imin r3.xy, r3.xy, l5.xy
imax r3.xy, r3.xy, l8.xy
ilt r4.xy, l4.xy, r2.xy
cmov_logical r4.xy, r4.xy, l7.xy, l8.xy
ior r4.xy, r1.xy, r4.xy
iadd r13.xy, l5.xy, r3.xy_neg(xyzw)
ishl r4.xy, r4.xy, r13.xy
ushr r5.xy, r0.xy, l9.xy
iand r5.xy, r5.xy, l10.xy
ushr r6.xy, r0.xy, l11.xy
iand r6.xy, r6.xy, l12.xy
cmov_logical r7.xy, r1.xy, l14.xy, l8.xy
ior r7.xy, r7.xy, r6.xy
ior r7.xy, r7.xy, l13.xy
ishl r8.xy, r2.xy, l15.xy
ior r8.xy, r8.xy, r6.xy
ior r9.xy, l16.xy, r6.xy
ushr r9.xy, r9.xy, r3.xy
ilt r10.xy, r2.xy, l6.xy
cmov_logical r10.xy, r10.xy, r9.xy, r8.xy
ieq r13.xy, l8.xy, r5.xy
ult r14.xy, l8.xy, r4.xy
iand r13.xy, r13.xy, r14.xy
iand r13.xy, r13.xy, l6.xy
iadd r10.xy, r10.xy, r13.xy
ushr r11.xy, r5.xy, l17.xy
iadd r11.xy, l13.xy, r11.xy_neg(xyzw)
ilt r13.xy, l18.xy, r2.xy
cmov_logical r10.xy, r13.xy, r11.xy, r10.xy
ieq r13.xy, r2.xy, l19.xy
cmov_logical r10.xy, r13.xy, r7.xy, r10.xy
ior r0.xy, r5.xy, r10.xy
mov out0, r0
mend
__amdil_float_to_half_plus_inf_v4f32
mdef(50)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
dcl_literal l2, 23, 23, 23, 23
dcl_literal l3, 0xff, 0xff, 0xff, 0xff
dcl_literal l4, 0xffffff90, 0xffffff90, 0xffffff90, 0xffffff90
dcl_literal l5, 19, 19, 19, 19
dcl_literal l6, 1, 1, 1, 1
dcl_literal l7, 0x800000, 0x800000, 0x800000, 0x800000
dcl_literal l8, 0, 0, 0, 0
dcl_literal l9, 16, 16, 16, 16
dcl_literal l10, 0x8000, 0x8000, 0x8000, 0x8000
dcl_literal l11, 13, 13, 13, 13
dcl_literal l12, 0x3ff, 0x3ff, 0x3ff, 0x3ff
dcl_literal l13, 0x7c00, 0x7c00, 0x7c00, 0x7c00
dcl_literal l14, 0x0200, 0x0200, 0x0200, 0x0200
dcl_literal l15, 10, 10, 10, 10
dcl_literal l16, 0x400, 0x400, 0x400, 0x400
dcl_literal l17, 15, 15, 15, 15
dcl_literal l18, 30, 30, 30, 30
dcl_literal l19, 143, 143, 143, 143
iand r1, r0, l1
ushr r2, r0, l2
iand r2, r2, l3
iadd r2, r2, l4
iadd r3, l6, r2_neg(xyzw)
imin r3, r3, l5
imax r3, r3, l8
ilt r4, l4, r2
cmov_logical r4, r4, l7, l8
ior r4, r1, r4
iadd r13, l5, r3_neg(xyzw)
ishl r4, r4, r13
ushr r5, r0, l9
iand r5, r5, l10
ushr r6, r0, l11
iand r6, r6, l12
cmov_logical r7, r1, l14, l8
ior r7, r7, r6
ior r7, r7, l13
ishl r8, r2, l15
ior r8, r8, r6
ior r9, l16, r6
ushr r9, r9, r3
ilt r10, r2, l6
cmov_logical r10, r10, r9, r8
ieq r13, l8, r5
ult r14, l8, r4
iand r13, r13, r14
iand r13, r13, l6
iadd r10, r10, r13
ushr r11, r5, l17
iadd r11, l13, r11_neg(xyzw)
ilt r13, l18, r2
cmov_logical r10, r13, r11, r10
ieq r13, r2, l19
cmov_logical r10, r13, r7, r10
ior r0, r5, r10
mov out0, r0
mend
__amdil_float_to_int_flr_f32
mdef(51)_out(1)_in(1)
mov r0, in0
round_neginf r0.x, r0.x
ftoi r0.x, r0.x
mov out0, r0
mend
__amdil_float_to_int_flr_v2f32
mdef(52)_out(1)_in(1)
mov r0, in0
round_neginf r0.xy, r0.xy
ftoi r0.xy, r0.xy
mov out0, r0
mend
__amdil_float_to_int_flr_v4f32
mdef(53)_out(1)_in(1)
mov r0, in0
round_neginf r0, r0
ftoi r0, r0
mov out0, r0
mend
mdef(54)_out(1)_in(1)
mov r0, in0
f_2_u4 r0.x___, r0
mov out0, r0
mend
__amdil_global_id
mdef(55)_out(1)_in(0)
mov r0.xyz, vAbsTid.xyz
mov out0, r0
mend
__amdil_global_id_flat
mdef(56)_out(1)_in(0)
mov r0.x, vAbsTidFlat.x
mov out0, r0
mend
__amdil_group_id
mdef(57)_out(1)_in(0)
mov r0.xyz, vThreadGrpId.xyz
mov out0, r0
mend
__amdil_group_id_flat
mdef(58)_out(1)_in(0)
mov r0.x, vThreadGrpIdFlat.x
mov out0, r0
mend
__amdil_imad_1
mdef(59)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
imad r0.x, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_imad_2
mdef(60)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
imad r0.xy, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_imad_3
mdef(61)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
imad r0.xyz, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_imad_4
mdef(62)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
imad r0, r0, r1, r2
mov out0, r0
mend
__amdil_imax_1
mdef(63)_out(1)_in(2)
mov r0, in0
mov r1, in1
imax r0.x, r0.x, r1.x
mov out0, r0
mend
__amdil_imax_2
mdef(64)_out(1)_in(2)
mov r0, in0
mov r1, in1
imax r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_imax_3
mdef(65)_out(1)_in(2)
mov r0, in0
mov r1, in1
imax r0.xyz, r0.xyz, r1.xyz
mov out0, r0
mend
__amdil_imax_4
mdef(66)_out(1)_in(2)
mov r0, in0
mov r1, in1
imax r0, r0, r1
mov out0, r0
mend
__amdil_imin_1
mdef(67)_out(1)_in(2)
mov r0, in0
mov r1, in1
imin r0.x, r0.x, r1.x
mov out0, r0
mend
__amdil_imin_2
mdef(68)_out(1)_in(2)
mov r0, in0
mov r1, in1
imin r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_imin_3
mdef(69)_out(1)_in(2)
mov r0, in0
mov r1, in1
imin r0.xyz, r0.xyz, r1.xyz
mov out0, r0
mend
__amdil_imin_4
mdef(70)_out(1)_in(2)
mov r0, in0
mov r1, in1
imin r0, r0, r1
mov out0, r0
mend
__amdil_improved_div_f32
mdef(71)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
div_zeroop(infinity) r2.x, l1.x, r1.x
mul_ieee r3.x, r0.x, r2.x
fma r4.x, r3.x, r1.x_neg(xyzw), r0.x
fma r0.x, r4.x, r2.x, r3.x
mov out0, r0
mend
__amdil_improved_div_v2f32
mdef(72)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
div_zeroop(infinity) r2.xy, l1.xy, r1.xy
mul_ieee r3.xy, r0.xy, r2.xy
fma r4.xy, r3.xy, r1.xy_neg(xyzw), r0.xy
fma r0.xy, r4.xy, r2.xy, r3.xy
mov out0, r0
mend
__amdil_improved_div_v4f32
mdef(73)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l1, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
div_zeroop(infinity) r2, l1, r1
mul_ieee r3, r0, r2
fma r4, r3, r1_neg(xyzw), r0
fma r0, r4, r2, r3
mov out0, r0
mend
__amdil_imul_high_1
mdef(74)_out(1)_in(2)
mov r0, in0
mov r1, in1
imul_high r0.x, r0.x, r1.x
mov out0, r0
mend
__amdil_imul_high_2
mdef(75)_out(1)_in(2)
mov r0, in0
mov r1, in1
imul_high r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_imul_high_3
mdef(76)_out(1)_in(2)
mov r0, in0
mov r1, in1
imul_high r0.xyz, r0.xyz, r1.xyz
mov out0, r0
mend
__amdil_imul_high_4
mdef(77)_out(1)_in(2)
mov r0, in0
mov r1, in1
imul_high r0, r0, r1
mov out0, r0
mend
__amdil_local_id
mdef(78)_out(1)_in(0)
mov r0.xyz, vTidInGrp.xyz
mov out0, r0
mend
__amdil_local_id_flat
mdef(79)_out(1)_in(0)
mov r0.x, vTidInGrpFlat.x
mov out0, r0
mend
__amdil_lpr_3
mdef(80)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
lrp r0.xyz_, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_lrp_1
mdef(81)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
lrp r0.x___, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_lrp_2
mdef(82)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
lrp r0.xy__, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_lrp_4
mdef(83)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
lrp r0, r0, r1, r2
mov out0, r0
mend
__amdil_mad_ieee_1
mdef(84)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mad_ieee r0.x, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_mad_ieee_2
mdef(85)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mad_ieee r0.xy, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_mad_ieee_3
mdef(86)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mad_ieee r0.xyz, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_mad_ieee_4
mdef(87)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mad_ieee r0, r0, r1, r2
mov out0, r0
mend
__amdil_max_ieee_1
mdef(88)_out(1)_in(2)
mov r0, in0
mov r1, in1
max_ieee r0.x, r0.x, r1.x
mov out0, r0
mend
__amdil_max_ieee_2
mdef(89)_out(1)_in(2)
mov r0, in0
mov r1, in1
max_ieee r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_max_ieee_3
mdef(90)_out(1)_in(2)
mov r0, in0
mov r1, in1
max_ieee r0.xyz, r0.xyz, r1.xyz
mov out0, r0
mend
__amdil_max_ieee_4
mdef(91)_out(1)_in(2)
mov r0, in0
mov r1, in1
max_ieee r0, r0, r1
mov out0, r0
mend
__amdil_min_ieee_1
mdef(92)_out(1)_in(2)
mov r0, in0
mov r1, in1
min_ieee r0.x, r0.x, r1.x
mov out0, r0
mend
__amdil_min_ieee_2
mdef(93)_out(1)_in(2)
mov r0, in0
mov r1, in1
min_ieee r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_min_ieee_3
mdef(94)_out(1)_in(2)
mov r0, in0
mov r1, in1
min_ieee r0.xyz, r0.xyz, r1.xyz
mov out0, r0
mend
__amdil_min_ieee_4
mdef(95)_out(1)_in(2)
mov r0, in0
mov r1, in1
min_ieee r0, r0, r1
mov out0, r0
mend
__amdil_rcp_1
mdef(96)_out(1)_in(1)
mov r0, in0
rcp_zeroop(infinity) r0.x___, r0.x
mov out0, r0
mend
__amdil_rcp_2
mdef(97)_out(1)_in(1)
mov r0, in0
rcp_zeroop(infinity) r0.xy__, r0.xy
mov out0, r0
mend
__amdil_rcp_3
mdef(98)_out(1)_in(1)
mov r0, in0
rcp_zeroop(infinity) r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_rcp_4
mdef(99)_out(1)_in(1)
mov r0, in0
rcp_zeroop(infinity) r0, r0
mov out0, r0
mend
__amdil_round_nearest_1
mdef(100)_out(1)_in(1)
mov r0, in0
round_nearest r0.x___, r0.x
mov out0, r0
mend
__amdil_round_nearest_2
mdef(101)_out(1)_in(1)
mov r0, in0
round_nearest r0.xy__, r0.xy
mov out0, r0
mend
__amdil_round_nearest_3
mdef(102)_out(1)_in(1)
mov r0, in0
round_nearest r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_round_nearest_4
mdef(103)_out(1)_in(1)
mov r0, in0
round_nearest r0, r0
mov out0, r0
mend
__amdil_round_neginf_1
mdef(104)_out(1)_in(1)
mov r0, in0
round_neginf r0.x___, r0.x
mov out0, r0
mend
__amdil_round_neginf_2
mdef(105)_out(1)_in(1)
mov r0, in0
round_neginf r0.xy__, r0.xy
mov out0, r0
mend
__amdil_round_neginf_3
mdef(106)_out(1)_in(1)
mov r0, in0
round_neginf r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_round_neginf_4
mdef(107)_out(1)_in(1)
mov r0, in0
round_neginf r0, r0
mov out0, r0
mend
__amdil_round_plusinf_1
mdef(108)_out(1)_in(1)
mov r0, in0
round_plusinf r0.x___, r0.x
mov out0, r0
mend
__amdil_round_plusinf_2
mdef(109)_out(1)_in(1)
mov r0, in0
round_plusinf r0.xy__, r0.xy
mov out0, r0
mend
__amdil_round_plusinf_3
mdef(110)_out(1)_in(1)
mov r0, in0
round_plusinf r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_round_plusinf_4
mdef(111)_out(1)_in(1)
mov r0, in0
round_plusinf r0, r0
mov out0, r0
mend
__amdil_round_z_1
mdef(112)_out(1)_in(1)
mov r0, in0
round_z r0.x___, r0.x
mov out0, r0
mend
__amdil_round_z_2
mdef(113)_out(1)_in(1)
mov r0, in0
round_z r0.xy__, r0.xy
mov out0, r0
mend
__amdil_round_z_3
mdef(114)_out(1)_in(1)
mov r0, in0
round_z r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_round_z_4
mdef(115)_out(1)_in(1)
mov r0, in0
round_z r0, r0
mov out0, r0
mend
__amdil_rsq_vec_1
mdef(116)_out(1)_in(1)
mov r0, in0
rsq_vec r0.x___, r0.x
mov out0, r0
mend
__amdil_rsq_vec_2
mdef(117)_out(1)_in(1)
mov r0, in0
rsq_vec r0.xy__, r0.xy
mov out0, r0
mend
__amdil_rsq_vec_3
mdef(118)_out(1)_in(1)
mov r0, in0
rsq_vec r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_rsq_vec_4
mdef(119)_out(1)_in(1)
mov r0, in0
rsq_vec r0, r0
mov out0, r0
mend
__amdil_sad4
mdef(120)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
sad4 r0.x___, r0, r1, r2.x
mov out0, r0
mend
__amdil_sadhi_1
mdef(121)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
sadhi r0.x___, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_sadhi_2
mdef(122)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
sadhi r0.xy__, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_sadhi_3
mdef(123)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
sadhi r0.xyz_, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_sadhi_4
mdef(124)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
sadhi r0, r0, r1, r2
mov out0, r0
mend
__amdil_sad_1
mdef(125)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
sad r0.x___, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_sad_2
mdef(126)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
sad r0.xy__, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_sad_3
mdef(127)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
sad r0.xyz_, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_sad_4
mdef(128)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
sad r0, r0, r1, r2
mov out0, r0
mend
__amdil_sqrt_vec_1
mdef(129)_out(1)_in(1)
mov r0, in0
sqrt_vec r0.x___, r0.x
mov out0, r0
mend
__amdil_sqrt_vec_2
mdef(130)_out(1)_in(1)
mov r0, in0
sqrt_vec r0.xy__, r0.xy
mov out0, r0
mend
__amdil_sqrt_vec_3
mdef(131)_out(1)_in(1)
mov r0, in0
sqrt_vec r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_sqrt_vec_4
mdef(132)_out(1)_in(1)
mov r0, in0
sqrt_vec r0, r0
mov out0, r0
mend
__amdil_u4lerp_1
mdef(133)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
u4lerp r0.x___, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_u4lerp_2
mdef(134)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
u4lerp r0.xy__, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_u4lerp_3
mdef(135)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
u4lerp r0.xyz_, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_u4lerp_4
mdef(136)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
u4lerp r0, r0, r1, r2
mov out0, r0
mend
__amdil_umad24_1
mdef(137)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
umad24 r0.x, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_umad24_2
mdef(138)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
umad24 r0.xy, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_umad24_3
mdef(139)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
umad24 r0.xyz, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_umad24_4
mdef(140)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
umad24 r0, r0, r1, r2
mov out0, r0
mend
__amdil_umad_1
mdef(141)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
umad r0.x, r0.x, r1.x, r2.x
mov out0, r0
mend
__amdil_umad_2
mdef(142)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
umad r0.xy, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__amdil_umad_3
mdef(143)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
umad r0.xyz, r0.xyz, r1.xyz, r2.xyz
mov out0, r0
mend
__amdil_umad_4
mdef(144)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
umad r0, r0, r1, r2
mov out0, r0
mend
__amdil_umax_1
mdef(145)_out(1)_in(2)
mov r0, in0
mov r1, in1
umax r0.x, r0.x, r1.x
mov out0, r0
mend
__amdil_umax_2
mdef(146)_out(1)_in(2)
mov r0, in0
mov r1, in1
umax r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_umax_3
mdef(147)_out(1)_in(2)
mov r0, in0
mov r1, in1
umax r0.xyz, r0.xyz, r1.xyz
mov out0, r0
mend
__amdil_umax_4
mdef(148)_out(1)_in(2)
mov r0, in0
mov r1, in1
umax r0, r0, r1
mov out0, r0
mend
__amdil_umin_1
mdef(149)_out(1)_in(2)
mov r0, in0
mov r1, in1
umin r0.x, r0.x, r1.x
mov out0, r0
mend
__amdil_umin_2
mdef(150)_out(1)_in(2)
mov r0, in0
mov r1, in1
umin r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_umin_3
mdef(151)_out(1)_in(2)
mov r0, in0
mov r1, in1
umin r0.xyz, r0.xyz, r1.xyz
mov out0, r0
mend
__amdil_umin_4
mdef(152)_out(1)_in(2)
mov r0, in0
mov r1, in1
umin r0, r0, r1
mov out0, r0
mend
__amdil_umul24_1
mdef(153)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul24 r0.x, r0.x, r1.x
mov out0, r0
mend
__amdil_umul24_2
mdef(154)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul24 r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_umul24_3
mdef(155)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul24 r0.xyz, r0.xyz, r1.xyz
mov out0, r0
mend
__amdil_umul24_4
mdef(156)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul24 r0, r0, r1
mov out0, r0
mend
__amdil_umul_high_1
mdef(157)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul_high r0.x, r0.x, r1.x
mov out0, r0
mend
__amdil_umul_high_2
mdef(158)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul_high r0.xy, r0.xy, r1.xy
mov out0, r0
mend
__amdil_umul_high_3
mdef(159)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul_high r0.xyz, r0.xyz, r1.xyz
mov out0, r0
mend
__amdil_umul_high_4
mdef(160)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul_high r0, r0, r1
mov out0, r0
mend
__amdil_unpack0_1
mdef(161)_out(1)_in(1)
mov r0, in0
unpack0 r0.x___, r0.x
mov out0, r0
mend
__amdil_unpack0_2
mdef(162)_out(1)_in(1)
mov r0, in0
unpack0 r0.xy__, r0.xy
mov out0, r0
mend
__amdil_unpack0_3
mdef(163)_out(1)_in(1)
mov r0, in0
unpack0 r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_unpack0_4
mdef(164)_out(1)_in(1)
mov r0, in0
unpack0 r0, r0
mov out0, r0
mend
__amdil_unpack1_1
mdef(165)_out(1)_in(1)
mov r0, in0
unpack1 r0.x___, r0.x
mov out0, r0
mend
__amdil_unpack1_2
mdef(166)_out(1)_in(1)
mov r0, in0
unpack1 r0.xy__, r0.xy
mov out0, r0
mend
__amdil_unpack1_3
mdef(167)_out(1)_in(1)
mov r0, in0
unpack1 r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_unpack1_4
mdef(168)_out(1)_in(1)
mov r0, in0
unpack1 r0, r0
mov out0, r0
mend
__amdil_unpack2_1
mdef(169)_out(1)_in(1)
mov r0, in0
unpack2 r0.x___, r0.x
mov out0, r0
mend
__amdil_unpack2_2
mdef(170)_out(1)_in(1)
mov r0, in0
unpack2 r0.xy__, r0.xy
mov out0, r0
mend
__amdil_unpack2_3
mdef(171)_out(1)_in(1)
mov r0, in0
unpack2 r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_unpack2_4
mdef(172)_out(1)_in(1)
mov r0, in0
unpack2 r0, r0
mov out0, r0
mend
__amdil_unpack3_1
mdef(173)_out(1)_in(1)
mov r0, in0
unpack3 r0.x___, r0.x
mov out0, r0
mend
__amdil_unpack3_2
mdef(174)_out(1)_in(1)
mov r0, in0
unpack3 r0.xy__, r0.xy
mov out0, r0
mend
__amdil_unpack3_3
mdef(175)_out(1)_in(1)
mov r0, in0
unpack3 r0.xyz_, r0.xyz
mov out0, r0
mend
__amdil_unpack3_4
mdef(176)_out(1)_in(1)
mov r0, in0
unpack3 r0, r0
mov out0, r0
mend
__amd_early_exit
mdef(177)_out(1)_in(1)
mov r0, in0
ret_logical_non_zero r0
mov out0, r0
mend
__asinh_f32
mdef(178)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, r0.x, l1
dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r0.__z_, r0.y, r0.y, l2
sqrt_vec r0.__z_, r0.z
add r0.__z_, r0.y, r0.z
dcl_literal l3, 0x40000000, 0x46000000, 0x403EBF80, 0x00000000
ige r1.xyz_, l3, r0.y
cmov_logical r0.__z_, r1.y, r0.z, r0.y
dcl_literal l4, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0.___w, r0.z, l4
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.__z_, r0.z, l5
dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r1._y__, l6, r0.w
dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r1._y__, r1.y, l7
dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1.___w, r1.y, l8
dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1._y__, r1.y, l9
ior r0.___w, r0.w, r1.w
dcl_literal l10, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
add r2.xy__, r0.w, l10
div_zeroop(infinity) r0.___w, r2.x, r2.y
mul_ieee r1.___w, r0.w, r0.w
mul_ieee r2._y__, r1.w, r1.w
dcl_literal l11, 0x00000000, 0x00000000, 0x3E1CD04F, 0x3E178897
dcl_literal l12, 0x00000000, 0x00000000, 0x3E638E29, 0x3E3A3325
mad_ieee r2.__zw, r2.y, l11, l12
dcl_literal l13, 0x00000000, 0x00000000, 0x3ECCCCCD, 0x3E924925
mad_ieee r2.__zw, r2.y, r2.zzzw, l13
mul_ieee r2.__z_, r2.y, r2.z
dcl_literal l14, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r2._y__, r2.y, r2.w, l14
mad_ieee r1.___w, r1.w, r2.y, r2.z
mul_ieee r2._y__, r2.x, r2.x
dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1.___w, r2.y, l15, r1.w
dcl_literal l16, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.__z_, r0.z, l16
iadd r0.__z_, r0.z, r1.y
itof r0.__z_, r0.z
dcl_literal l17, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r1._y__, r0.z, l17
mad_ieee r0.___w, r0.w, r1.w, r1.y
dcl_literal l18, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0.___w, r2.y, l18, r0.w_neg(xyzw)
add r0.___w, r2.x_neg(xyzw), r0.w
dcl_literal l19, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0.__z_, r0.z, l19, r0.w_neg(xyzw)
dcl_literal l20, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
add r0.___w, r0.z, l20
dcl_literal l21, 0x00000000, 0x46000000, 0x00000000, 0x7F800000
ilt r1._y_w, l21, r0.y
cmov_logical r0.__z_, r1.y, r0.w, r0.z
mul_ieee r0.___w, r0.y, r0.y
dcl_literal l22, 0x359E003F, 0x30CF9BA3, 0x00000000, 0x00000000
dcl_literal l23, 0xB9DA3F30, 0xB663DD90, 0x00000000, 0x00000000
mad_ieee r2.xy__, r0.w_neg(xyzw), l22, l23
dcl_literal l24, 0xBBA5E935, 0xB9151DC6, 0x00000000, 0x00000000
mad_ieee r2.xy__, r2.xyxx, r0.w, l24
dcl_literal l25, 0xBC728443, 0xBA94FE2C, 0x00000000, 0x00000000
mad_ieee r2.xy__, r2.xyxx, r0.w, l25
dcl_literal l26, 0xBC3CE6E4, 0xBAF316D1, 0x00000000, 0x00000000
mad_ieee r2.xy__, r2.xyxx, r0.w, l26
mul_ieee r1._y__, r0.y, r0.w
mul_ieee r2.xy__, r2.xyxx, r1.y
dcl_literal l27, 0x00000000, 0x00000000, 0x3A24BDC5, 0x3691AD45
dcl_literal l28, 0x00000000, 0x00000000, 0x3C4E7147, 0x39862A97
mad_ieee r2.__zw, r0.w, l27, l28
dcl_literal l29, 0x00000000, 0x00000000, 0x3D86CE89, 0x3B559594
mad_ieee r2.__zw, r2.zzzw, r0.w, l29
dcl_literal l30, 0x00000000, 0x00000000, 0x3DF5A451, 0x3C40F989
mad_ieee r2.__zw, r2.zzzw, r0.w, l30
dcl_literal l31, 0x00000000, 0x00000000, 0x3D8DAD2B, 0x3C36A8AF
mad_ieee r2.__zw, r2.zzzw, r0.w, l31
div_zeroop(infinity) r2.xy__, r2.xyxx, r2.zwzz
cmov_logical r0.___w, r1.x, r2.x, r2.y
add r0.___w, r0.y, r0.w
cmov_logical r0.__z_, r1.z, r0.w, r0.z
dcl_literal l32, 0x32000000, 0x32000000, 0x32000000, 0x32000000
lt r0.___w, r0.y, l32
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r1.x___, r0.y, l33
ior r0.___w, r0.w, r1.x
cmov_logical r0._y__, r0.w, r0.y, r0.z
cmov_logical r0.x___, r0.x, r0.y_neg(xyzw), r0.y
dcl_literal l34, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r1.w, l34, r0.x
mov out0, r0
mend
__asinpi_f32
mdef(179)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x80000000, 0x7FFFFFFF, 0x00000000, 0x00000000
and r1.xy__, r0.x, l0
dcl_literal l1, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l1, r1.y
dcl_literal l2, 0x01490FDB, 0x01490FDB, 0x01490FDB, 0x01490FDB
ige r0.__z_, l2, r1.y
if_logicalnz r0.z
    
    dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.__z_, r0.x, l3
    if_logicalz r0.z
        
        dcl_literal l4, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r0.___w, r0.x, l4
        itof r0.___w, r0.w
        
        dcl_literal l5, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r2.xy__, r0.w, l5
        
        dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r0.___w, r2.x, l6
        
        dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        iadd r0.___w, r0.w, l7
        
        dcl_literal l8, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2.x___, r2.y, l8
        
        dcl_literal l9, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r0.___w, l9, r0.w_neg(xyzw)
        
        dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2._y__, l10, r0.w
        
        dcl_literal l11, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r0.___w, r2.y, l11, r0.w
        
        dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r2._y__, l12, r0.w
        ishr r2.__z_, r2.x, r0.w
        inegate r0.___w, r0.w
        
        dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r0.___w, r0.w, l13
        iadd r0.___w, r2.x, r0.w
        cmov_logical r0.___w, r2.y, r2.z, r0.w
    else
        
        dcl_literal l14, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r2.x___, r0.x, l14
        
        dcl_literal l15, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r0.__z_, r0.z, l15
        
        dcl_literal l16, 0x0C000000, 0x0C000000, 0x0C000000, 0x0C000000
        iadd r2.x___, r2.x, l16
        
        dcl_literal l17, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99
        iadd r0.__z_, r0.z, l17
        
        dcl_literal l18, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r0.__z_, l18, r0.z
        
        dcl_literal l19, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r0.___w, r0.z, l19, r2.x
    endif
    
    dcl_literal l20, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983
    mul_ieee r0.__z_, r0.w, l20
    
    dcl_literal l21, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r2.xy__, r0.z, l21
    if_logicalz r2.x
        itof r0.___w, r2.y
        
        dcl_literal l22, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
        and r2.__zw, r0.w, l22
        
        dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r0.___w, r2.z, l23
        
        dcl_literal l24, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8
        iadd r0.___w, r0.w, l24
        
        dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2.__z_, r2.w, l25
        
        dcl_literal l26, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r0.___w, l26, r0.w_neg(xyzw)
        
        dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2.___w, l27, r0.w
        
        dcl_literal l28, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r0.___w, r2.w, l28, r0.w
        
        dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r2.___w, l29, r0.w
        ishr r3.x___, r2.z, r0.w
        inegate r0.___w, r0.w
        
        dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r0.___w, r0.w, l30
        iadd r0.___w, r2.z, r0.w
        cmov_logical r0.___w, r2.w, r3.x, r0.w
    else
        
        dcl_literal l31, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r0.__z_, r0.z, l31
        
        dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.x___, r2.x, l32
        
        dcl_literal l33, 0xF4000000, 0xF4000000, 0xF4000000, 0xF4000000
        iadd r0.__z_, r0.z, l33
        
        dcl_literal l34, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69
        iadd r2.x___, r2.x, l34
        
        dcl_literal l35, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r2.x___, l35, r2.x_neg(xyzw)
        
        dcl_literal l36, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2._y__, r2.y, l36
        
        dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000017
        ilt r2.__zw, l37, r2.x
        
        dcl_literal l38, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r2.x___, r2.w, l38, r2.x
        ishr r2.x___, r2.y, r2.x
        cmov_logical r0.___w, r2.z, r2.x, r0.z
    endif
else
    
    dcl_literal l39, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.__z_, r0.x, l39
    
    dcl_literal l40, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.__z_, r0.z, l40
    
    dcl_literal l41, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r0.__z_, r0.z, l41
    
    dcl_literal l42, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    ige r0.__z_, r0.z, l42
    
    dcl_literal l43, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r2.x___, r1.y_neg(xyzw), l43
    
    dcl_literal l44, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mul_ieee r2.__z_, r2.x, l44
    sqrt_vec r2.xy__, r2.z
    mul_ieee r1.__z_, r1.y, r1.y
    
    dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r1.___w, l45
    cmov_logical r2.xyz_, r0.z, r2.xyzx, r1.ywzy
    
    dcl_literal l46, 0x00000000, 0x00000000, 0x3B81CE6B, 0x3F561F0D
    
    dcl_literal l47, 0x00000000, 0x00000000, 0xBC5B3FE1, 0x3F8D6FA5
    mad_ieee r1.__zw, r2.z_neg(xyzw), l46, l47
    
    dcl_literal l48, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD
    mad_ieee r1.__z_, r1.z, r2.z, l48
    
    dcl_literal l49, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC
    mad_ieee r1.__z_, r1.z, r2.z, l49
    mul_ieee r1.__z_, r2.z, r1.z
    div_zeroop(infinity) r1.__z_, r1.z, r1.w
    
    dcl_literal l50, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
    and r1.___w, r2.y, l50
    mad_ieee r2.__z_, r1.w_neg(xyzw), r1.w, r2.z
    add r2.___w, r2.y, r1.w
    div_zeroop(infinity) r2.__z_, r2.z, r2.w
    dp2_ieee r2._y__, r1.z, r2.y
    
    dcl_literal l51, 0x40000000, 0x40000000, 0x40000000, 0x40000000
    
    dcl_literal l52, 0x33A22168, 0x33A22168, 0x33A22168, 0x33A22168
    mad_ieee r2.__z_, r2.z_neg(xyzw), l51, l52
    add r2._y__, r2.y, r2.z_neg(xyzw)
    
    dcl_literal l53, 0x40000000, 0x40000000, 0x40000000, 0x40000000
    
    dcl_literal l54, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA
    mad_ieee r1.___w, r1.w_neg(xyzw), l53, l54
    add r1.___w, r2.y, r1.w_neg(xyzw)
    
    dcl_literal l55, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA
    add r1.___w, r1.w_neg(xyzw), l55
    mad_ieee r1.__z_, r2.x, r1.z, r2.x
    cmov_logical r0.__z_, r0.z, r1.w, r1.z
    
    dcl_literal l56, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983
    mul_ieee r0.___w, r0.z, l56
endif
dcl_literal l57, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r0.__z_, r1.y, l57
dcl_literal l58, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r0.__z_, r0.z, l58, r0.w
ior r0.__z_, r1.x, r0.z
cmov_logical r0.__z_, r1.y, r0.z, r0.x
dcl_literal l59, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l59
cmov_logical r0.x___, r0.y, r0.x, r0.z
dcl_literal l60, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
lt r0._y__, l60, r1.y
dcl_literal l61, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.x___, r0.y, l61, r0.x
mov out0, r0
mend
__asin_f32
mdef(180)_out(1)_in(1)
mov r0, in0
mov r1.x___, r0.x
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r0._y__, l0
dcl_literal l1, 0x00000000, 0x7FFFFFFF, 0x80000000, 0x7F800000
and r1._yzw, r1.x, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r1.w, l2
dcl_literal l3, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, r0.w, l3
dcl_literal l4, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
ige r0.___w, r0.w, l4
dcl_literal l5, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r2.x___, r1.y_neg(xyzw), l5
dcl_literal l6, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r2.__z_, r2.x, l6
sqrt_vec r2.xy__, r2.z
mul_ieee r0.__z_, r1.y, r1.y
mov r0.x___, r1.y
cmov_logical r2.xyz_, r0.w, r2.xyzx, r0.xyzx
dcl_literal l7, 0x00000000, 0x3B81CE6B, 0x3F561F0D, 0x00000000
dcl_literal l8, 0x00000000, 0xBC5B3FE1, 0x3F8D6FA5, 0x00000000
mad_ieee r0._yz_, r2.z_neg(xyzw), l7, l8
dcl_literal l9, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD, 0xBD678BDD
mad_ieee r0._y__, r0.y, r2.z, l9
dcl_literal l10, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC, 0x3E3C94DC
mad_ieee r0._y__, r0.y, r2.z, l10
mul_ieee r0._y__, r2.z, r0.y
div_zeroop(infinity) r0._y__, r0.y, r0.z
dp2_ieee r0.__z_, r0.y, r2.y
mad_ieee r0._y__, r2.x, r0.y, r2.x
dcl_literal l11, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
and r1._y__, r2.y, l11
mad_ieee r2.x___, r1.y_neg(xyzw), r1.y, r2.z
add r2._y__, r2.y, r1.y
dcl_literal l12, 0x40000000, 0x40000000, 0x40000000, 0x40000000
dcl_literal l13, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA
mad_ieee r1._y__, r1.y_neg(xyzw), l12, l13
div_zeroop(infinity) r2.x___, r2.x, r2.y
dcl_literal l14, 0x40000000, 0x40000000, 0x40000000, 0x40000000
dcl_literal l15, 0x33A22168, 0x33A22168, 0x33A22168, 0x33A22168
mad_ieee r2.x___, r2.x_neg(xyzw), l14, l15
add r0.__z_, r0.z, r2.x_neg(xyzw)
add r0.__z_, r1.y_neg(xyzw), r0.z
dcl_literal l16, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA, 0x3F490FDA
add r0.__z_, r0.z_neg(xyzw), l16
cmov_logical r0._y__, r0.w, r0.z, r0.y
dcl_literal l17, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r0.__z_, r1.x_abs, l17
dcl_literal l18, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
cmov_logical r0._y__, r0.z, l18, r0.y
dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l19, r1.w
dcl_literal l20, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ilt r0.___w, r1.w, l20
and r0.__z_, r0.z, r0.w
dcl_literal l21, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.___w, r1.w, l21
dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1._y__, r0.x, l22
and r0.___w, r0.w, r1.y
ior r0.__z_, r0.z, r0.w
cmov_logical r0._y__, r0.z, r0.x, r0.y
cmov_logical r0._y__, r1.z, r0.y_neg(xyzw), r0.y
dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ult r0.x___, l23, r0.x
dcl_literal l24, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.__z_, r1.x, l24
dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
lt r0.___w, l25, r1.x_abs
cmov_logical r0.x___, r0.x, r0.z, r0.y
dcl_literal l26, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.x___, r0.w, l26, r0.x
mov out0, r0
mend
__atan2pi_f32
mdef(181)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x80000000
and r1, r0.xyxy, l0
ult r0.__z_, r1.y, r1.x
cmov_logical r2, r0.z, r1.yxyx, r1.xyxy
dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7F800000, 0x7F800000
and r3, r2.yzwx, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r4, r3.wzzw, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00000000
ilt r5.xyz_, r3.xxyx, l3
dcl_literal l4, 0xFFFFFF81, 0xFFFFFF9D, 0xFFFFFF9D, 0xFFFFFF81
iadd r4, r4.xzwy, l4
dcl_literal l5, 0x41E00000, 0x00000000, 0x00000000, 0x00000000
mov r6.x_z_, l5
mov r6._y_w, r4.yyyw
cmov_logical r4._y_w, r5.yyyx, r6.yyyx, r6.wwwz
dcl_literal l6, 0x00000000, 0x00000000, 0x42280000, 0x41600000
dcl_literal l7, 0xC1E00000, 0x00000000, 0x41600000, 0xC1600000
cmov_logical r6.x_zw, r5.xxzy, l6, l7
mov r5.x___, r6.x
mov r5._y__, r4.z
dcl_literal l8, 0x41E00000, 0x41E00000, 0x41E00000, 0x41E00000
mov r5.___w, l8
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r4.__z_, l9
cmov_logical r5.xyz_, r5.z, r5.xywx, r4.wxzw
iadd r0.___w, r5.y, r4.y_neg(xyzw)
dcl_literal l10, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83
ilt r0.___w, r0.w, l10
dcl_literal l11, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2
iadd r6._y__, r4.y, l11
dcl_literal l12, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000
add r6.x___, r5.x, l12
mov r4.x_z_, r5.xxzx
cmov_logical r4, r0.w, r6, r4
dcl_literal l13, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r0.___w, l13, r4.y
dcl_literal l14, 0x00000000, 0xC1600000, 0xC1600000, 0x00000000
add r2._yz_, r4.wwxw, l14
cmov_logical r2._yz_, r0.w, r2.yyzy, r4.wwxw
dcl_literal l15, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r0.___w, r4.z, l15
if_logicalnz r0.w
    ftoi r0.___w, r4.z
    dcl_literal l16, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r4.x___, r2.x, l16
    itof r4.x___, r4.x
    cmov_logical r3._y__, r3.w, r3.y, r4.x
    dcl_literal l17, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r4.x___, r0.w, l17
    cmov_logical r0.___w, r3.w, r0.w, r4.x
    dcl_literal l18, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r4.xy__, r3.y, l18
    dcl_literal l19, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.___w, r4.x, l19
    iadd r3.___w, r3.w, r0.w
    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l20
    iadd r0.___w, r3.y, r0.w
    dcl_literal l21, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3._y__, r3.w, l21
    dcl_literal l22, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.___w, l22, r3.y
    dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r3.w, l23, r0.w
    dcl_literal l24, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3._y__, l24, r3.y_neg(xyzw)
    dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.___w, r4.y, l25
    dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.x___, l26, r3.y
    dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3._y__, r4.x, l27, r3.y
    dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r3._y__, r3.y, l28
    ishr r3.___w, r3.w, r3.y
    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3._y__, l29, r3.y
    cmov_logical r2.x___, r3.y, r3.w, r0.w
endif
dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r3._y_w, r2.yyyz, l30
if_logicalnz r3.y
    ftoi r0.___w, r2.y
    dcl_literal l31, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r2._y__, r2.w, l31
    itof r2._y__, r2.y
    cmov_logical r2._y__, r3.z, r3.x, r2.y
    dcl_literal l32, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r3.x___, r0.w, l32
    cmov_logical r0.___w, r3.z, r0.w, r3.x
    dcl_literal l33, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r3.xy__, r2.y, l33
    dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.x___, r3.x, l34
    iadd r3.x___, r3.x, r0.w
    dcl_literal l35, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l35
    iadd r0.___w, r2.y, r0.w
    dcl_literal l36, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2._y__, r3.x, l36
    dcl_literal l37, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.x___, l37, r2.y
    dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r3.x, l38, r0.w
    dcl_literal l39, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2._y__, l39, r2.y_neg(xyzw)
    dcl_literal l40, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.x___, r3.y, l40
    dcl_literal l41, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3._y__, l41, r2.y
    dcl_literal l42, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2._y__, r3.y, l42, r2.y
    dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2._y__, r2.y, l43
    ishr r3.x___, r3.x, r2.y
    dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, l44, r2.y
    cmov_logical r2.___w, r2.y, r3.x, r0.w
endif
div_zeroop(infinity) r0.___w, r2.x, r2.w
ftoi r2.x___, r2.z
dcl_literal l45, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r4, r0.w, l45
itof r2._y__, r4.w
cmov_logical r2._y__, r4.z, r4.x, r2.y
dcl_literal l46, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r2.__z_, r2.x, l46
cmov_logical r2.x___, r4.z, r2.x, r2.z
dcl_literal l47, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r2.__zw, r2.y, l47
dcl_literal l48, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.__z_, r2.z, l48
iadd r2.__z_, r2.z, r2.x
dcl_literal l49, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.x___, r2.x, l49
iadd r2.x___, r2.y, r2.x
dcl_literal l50, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2._y__, r2.z, l50
dcl_literal l51, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r2.__z_, l51, r2.y
dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.x___, r2.z, l52, r2.x
dcl_literal l53, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2._y__, l53, r2.y_neg(xyzw)
dcl_literal l54, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r2.__z_, r2.w, l54
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r2.___w, l55, r2.y
dcl_literal l56, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r2._y__, r2.w, l56, r2.y
dcl_literal l57, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r2._y__, r2.y, l57
ishr r2.__z_, r2.z, r2.y
dcl_literal l58, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2._y__, l58, r2.y
cmov_logical r2.x___, r2.y, r2.z, r2.x
ior r2.x___, r4.y, r2.x
cmov_logical r0.___w, r3.w, r2.x, r0.w
dcl_literal l59, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r2.x___, r0.w, l59
dcl_literal l60, 0x3EE00000, 0x3F300000, 0x3F980000, 0x401C0000
uge r3, r2.x, l60
dcl_literal l61, 0x00000000, 0x3F300000, 0x3F980000, 0x401C0000
ult r2._yzw, r2.x, l61
and r2._yzw, r3.xxyz, r2.yyzw
dcl_literal l62, 0x40000000, 0x40000000, 0x40000000, 0x40000000
dcl_literal l63, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
mad_ieee r3.x___, r2.x, l62, l63
dcl_literal l64, 0x40000000, 0xBF800000, 0x3F800000, 0xBFC00000
add r4, r2.x, l64
div_zeroop(infinity) r3.x___, r3.x, r4.x
cmov_logical r3.x___, r2.y, r3.x, r2.x
dcl_literal l65, 0x3EED6338, 0x3EED6338, 0x3EED6338, 0x3EED6338
and r2._y__, r2.y, l65
div_zeroop(infinity) r3._y__, r4.y, r4.z
cmov_logical r3.x___, r2.z, r3.y, r3.x
dcl_literal l66, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
cmov_logical r2._y__, r2.z, l66, r2.y
dcl_literal l67, 0x3FC00000, 0x3FC00000, 0x3FC00000, 0x3FC00000
dcl_literal l68, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r2.__z_, r2.x, l67, l68
div_zeroop(infinity) r2.__z_, r4.w, r2.z
cmov_logical r2.__z_, r2.w, r2.z, r3.x
dcl_literal l69, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F
cmov_logical r2._y__, r2.w, l69, r2.y
dcl_literal l70, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
div_zeroop(infinity) r2.x___, l70, r2.x
cmov_logical r2.x___, r3.w, r2.x, r2.z
dcl_literal l71, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
cmov_logical r2._y__, r3.w, l71, r2.y
mul_ieee r2.__z_, r2.x, r2.x
mul_ieee r2.___w, r2.x, r2.z
dcl_literal l72, 0x3B9A3B54, 0x3E993F1F, 0x00000000, 0x00000000
dcl_literal l73, 0x3E44F0BA, 0x3F8E2C3D, 0x00000000, 0x00000000
mad_ieee r3.xy__, r2.z, l72, l73
dcl_literal l74, 0x3E97D299, 0x3F63BBE5, 0x00000000, 0x00000000
mad_ieee r3.xy__, r3.xyxx, r2.z, l74
mul_ieee r2.__z_, r2.w, r3.x
div_zeroop(infinity) r2.__z_, r2.z, r3.y
add r2.x___, r2.x_neg(xyzw), r2.z
add r2.x___, r2.y, r2.x_neg(xyzw)
dcl_literal l75, 0x32000000, 0x32000000, 0x32000000, 0x32000000
ilt r2._y__, r0.w, l75
cmov_logical r0.___w, r2.y, r0.w, r2.x
dcl_literal l76, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r2.x___, r0.w, l76
dcl_literal l77, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.x___, r2.x, l77
dcl_literal l78, 0x00000003, 0x00000003, 0x00000003, 0x00000003
ilt r2.x___, r2.x, l78
if_logicalnz r2.x
    dcl_literal l79, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r3, r0.w, l79
    itof r2._y__, r3.w
    cmov_logical r2._y__, r3.z, r3.x, r2.y
    dcl_literal l80, 0x00000000, 0x00000000, 0x0000001C, 0x0E000000
    dcl_literal l81, 0x00000000, 0x00000000, 0xFFFFFF87, 0xC3800000
    cmov_logical r2.__zw, r3.z, l80, l81
    dcl_literal l82, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
    and r3.x_z_, r2.y, l82
    dcl_literal l83, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.x___, r3.x, l83
    iadd r2.__z_, r3.x, r2.z
    iadd r2._y__, r2.y, r2.w
    dcl_literal l84, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.__z_, r2.z, l84
    dcl_literal l85, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2.___w, l85, r2.z
    dcl_literal l86, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2._y__, r2.w, l86, r2.y
    dcl_literal l87, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.__z_, l87, r2.z_neg(xyzw)
    dcl_literal l88, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.___w, r3.z, l88
    dcl_literal l89, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.x___, l89, r2.z
    dcl_literal l90, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.__z_, r3.x, l90, r2.z
    dcl_literal l91, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2.__z_, r2.z, l91
    ishr r2.___w, r2.w, r2.z
    dcl_literal l92, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, l92, r2.z
    cmov_logical r2._y__, r2.z, r2.w, r2.y
    ior r0.___w, r3.y, r2.y
endif
dcl_literal l93, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983
mul_ieee r0.___w, r0.w, l93
if_logicalnz r2.x
    dcl_literal l94, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r2, r0.w, l94
    itof r2.___w, r2.w
    cmov_logical r2.x___, r2.z, r2.x, r2.w
    dcl_literal l95, 0x00000000, 0x00000000, 0xFFFFFFE4, 0xF2000000
    dcl_literal l96, 0x00000000, 0x00000000, 0xFFFFFF4F, 0xA7800000
    cmov_logical r2.__zw, r2.z, l95, l96
    dcl_literal l97, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r3.xy__, r2.x, l97
    dcl_literal l98, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.x___, r3.x, l98
    iadd r2.__z_, r3.x, r2.z
    iadd r2.x___, r2.x, r2.w
    dcl_literal l99, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.__z_, r2.z, l99
    dcl_literal l100, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.__z_, l100, r2.z_neg(xyzw)
    dcl_literal l101, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.___w, r3.y, l101
    dcl_literal l102, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.x___, l102, r2.z
    dcl_literal l103, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.__z_, r3.x, l103, r2.z
    dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2.__z_, r2.z, l104
    ishr r2.___w, r2.w, r2.z
    dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, l105, r2.z
    cmov_logical r2.x___, r2.z, r2.w, r2.x
    ior r0.___w, r2.y, r2.x
endif
dcl_literal l106, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
add r2.x___, r0.w_neg(xyzw), l106
cmov_logical r0.__z_, r0.z, r2.x, r0.w
dcl_literal l107, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
ushr r2.x___, r1.z, l107
dcl_literal l108, 0x0000001E, 0x0000001E, 0x0000001E, 0x0000001E
ushr r2._y__, r1.w, l108
dcl_literal l109, 0x00000001, 0x00000002, 0x00000000, 0x00000000
and r2.xy__, r2.xyxx, l109
ior r0.___w, r2.y, r2.x
dcl_literal l110, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r2.xyz_, r0.w, l110
dcl_literal l111, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ixor r0.___w, r0.z, l111
cmov_logical r0.__z_, r2.x, r0.w, r0.z
dcl_literal l112, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.z_neg(xyzw), l112
cmov_logical r0.__z_, r2.y, r0.w, r0.z
dcl_literal l113, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.z, l113
cmov_logical r0.__z_, r2.z, r0.w, r0.z
dcl_literal l114, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
ult r2.xy__, l114, r1.xyxx
dcl_literal l115, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
ieq r2.__zw, r1.xxxy, l115
dcl_literal l116, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l117, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
cmov_logical r3, r1.xyyx, l116, l117
dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.xy__, r1.zwzz, l118
inot r1.__zw, r1.xxxy
and r0.___w, r3.x, r1.z
and r4.xy__, r3.yzyy, r0.w
and r4.__zw, r1.y, r4.xxxy
dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.__z_, r4.z, l119, r0.z
and r0.___w, r3.x, r1.x
and r3.x_z_, r3.yyzy, r0.w
and r5.xy__, r1.y, r3.xzxx
dcl_literal l120, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0.__z_, r5.x, l120, r0.z
and r4.xy__, r1.w, r4.xyxx
dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r4.x, l121, r0.z
and r3.x_z_, r1.w, r3.xxzx
dcl_literal l122, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.__z_, r3.x, l122, r0.z
dcl_literal l123, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.__z_, r4.w, l123, r0.z
dcl_literal l124, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0.__z_, r5.y, l124, r0.z
dcl_literal l125, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r4.y, l125, r0.z
dcl_literal l126, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.__z_, r3.z, l126, r0.z
inot r3.x_z_, r2.zzwz
and r0.___w, r1.z, r3.x
and r0.___w, r3.w, r0.w
and r0.___w, r3.y, r0.w
dcl_literal l127, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r0.__z_, r0.w, l127, r0.z
and r0.___w, r1.x, r3.x
and r0.___w, r3.w, r0.w
and r0.___w, r3.y, r0.w
dcl_literal l128, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
cmov_logical r0.__z_, r0.w, l128, r0.z
and r0.___w, r3.w, r3.x
and r3.x___, r1.z, r0.w
and r3.x___, r2.w, r3.x
and r3._y__, r1.y, r3.x
dcl_literal l129, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.__z_, r3.y, l129, r0.z
and r0.___w, r1.x, r0.w
and r0.___w, r2.w, r0.w
and r3._y__, r1.y, r0.w
dcl_literal l130, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0.__z_, r3.y, l130, r0.z
and r3.x___, r1.w, r3.x
dcl_literal l131, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r3.x, l131, r0.z
and r0.___w, r1.w, r0.w
dcl_literal l132, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.__z_, r0.w, l132, r0.z
and r0.___w, r2.z, r1.z
and r1.__z_, r3.z, r0.w
dcl_literal l133, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r0.__z_, r1.z, l133, r0.z
and r1.x___, r2.z, r1.x
and r1.__z_, r3.z, r1.x
dcl_literal l134, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
cmov_logical r0.__z_, r1.z, l134, r0.z
and r0.___w, r2.w, r0.w
and r1.__z_, r1.y, r0.w
dcl_literal l135, 0x3F400000, 0x3F400000, 0x3F400000, 0x3F400000
cmov_logical r0.__z_, r1.z, l135, r0.z
and r1.x___, r2.w, r1.x
and r1._y__, r1.y, r1.x
dcl_literal l136, 0xBF400000, 0xBF400000, 0xBF400000, 0xBF400000
cmov_logical r0.__z_, r1.y, l136, r0.z
and r0.___w, r1.w, r0.w
dcl_literal l137, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
cmov_logical r0.__z_, r0.w, l137, r0.z
and r0.___w, r1.w, r1.x
dcl_literal l138, 0xBE800000, 0xBE800000, 0xBE800000, 0xBE800000
cmov_logical r0.__z_, r0.w, l138, r0.z
cmov_logical r0.x___, r2.x, r0.x, r0.z
cmov_logical r0.x___, r2.y, r0.y, r0.x
mov out0, r0
mend
__atan2_f32
mdef(182)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x80000000
and r1, r0.xyxy, l0
ult r0.__z_, r1.y, r1.x
cmov_logical r2, r0.z, r1.yxyx, r1.xyxy
dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7F800000, 0x7F800000
and r3, r2.yzwx, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r4, r3.wzzw, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00000000
ilt r5.xyz_, r3.xxyx, l3
dcl_literal l4, 0xFFFFFF81, 0xFFFFFF9D, 0xFFFFFF9D, 0xFFFFFF81
iadd r4, r4.xzwy, l4
dcl_literal l5, 0x41E00000, 0x00000000, 0x00000000, 0x00000000
mov r6.x_z_, l5
mov r6._y_w, r4.yyyw
cmov_logical r4._y_w, r5.yyyx, r6.yyyx, r6.wwwz
dcl_literal l6, 0x00000000, 0x00000000, 0x42280000, 0x41600000
dcl_literal l7, 0xC1E00000, 0x00000000, 0x41600000, 0xC1600000
cmov_logical r6.x_zw, r5.xxzy, l6, l7
mov r5.x___, r6.x
mov r5._y__, r4.z
dcl_literal l8, 0x41E00000, 0x41E00000, 0x41E00000, 0x41E00000
mov r5.___w, l8
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r4.__z_, l9
cmov_logical r5.xyz_, r5.z, r5.xywx, r4.wxzw
iadd r0.___w, r5.y, r4.y_neg(xyzw)
dcl_literal l10, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83
ilt r0.___w, r0.w, l10
dcl_literal l11, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2
iadd r6._y__, r4.y, l11
dcl_literal l12, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000
add r6.x___, r5.x, l12
mov r4.x_z_, r5.xxzx
cmov_logical r4, r0.w, r6, r4
dcl_literal l13, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r0.___w, l13, r4.y
dcl_literal l14, 0x00000000, 0xC1600000, 0xC1600000, 0x00000000
add r2._yz_, r4.wwxw, l14
cmov_logical r2._yz_, r0.w, r2.yyzy, r4.wwxw
dcl_literal l15, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r0.___w, r4.z, l15
if_logicalnz r0.w
    ftoi r0.___w, r4.z
    dcl_literal l16, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r4.x___, r2.x, l16
    itof r4.x___, r4.x
    cmov_logical r3._y__, r3.w, r3.y, r4.x
    dcl_literal l17, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r4.x___, r0.w, l17
    cmov_logical r0.___w, r3.w, r0.w, r4.x
    dcl_literal l18, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r4.xy__, r3.y, l18
    dcl_literal l19, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.___w, r4.x, l19
    iadd r3.___w, r3.w, r0.w
    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l20
    iadd r0.___w, r3.y, r0.w
    dcl_literal l21, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3._y__, r3.w, l21
    dcl_literal l22, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.___w, l22, r3.y
    dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r3.w, l23, r0.w
    dcl_literal l24, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3._y__, l24, r3.y_neg(xyzw)
    dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.___w, r4.y, l25
    dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.x___, l26, r3.y
    dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3._y__, r4.x, l27, r3.y
    dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r3._y__, r3.y, l28
    ishr r3.___w, r3.w, r3.y
    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3._y__, l29, r3.y
    cmov_logical r2.x___, r3.y, r3.w, r0.w
endif
dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r3._y_w, r2.yyyz, l30
if_logicalnz r3.y
    ftoi r0.___w, r2.y
    dcl_literal l31, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r2._y__, r2.w, l31
    itof r2._y__, r2.y
    cmov_logical r2._y__, r3.z, r3.x, r2.y
    dcl_literal l32, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r3.x___, r0.w, l32
    cmov_logical r0.___w, r3.z, r0.w, r3.x
    dcl_literal l33, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r3.xy__, r2.y, l33
    dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.x___, r3.x, l34
    iadd r3.x___, r3.x, r0.w
    dcl_literal l35, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l35
    iadd r0.___w, r2.y, r0.w
    dcl_literal l36, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2._y__, r3.x, l36
    dcl_literal l37, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.x___, l37, r2.y
    dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r3.x, l38, r0.w
    dcl_literal l39, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2._y__, l39, r2.y_neg(xyzw)
    dcl_literal l40, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.x___, r3.y, l40
    dcl_literal l41, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3._y__, l41, r2.y
    dcl_literal l42, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2._y__, r3.y, l42, r2.y
    dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2._y__, r2.y, l43
    ishr r3.x___, r3.x, r2.y
    dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, l44, r2.y
    cmov_logical r2.___w, r2.y, r3.x, r0.w
endif
div_zeroop(infinity) r0.___w, r2.x, r2.w
ftoi r2.x___, r2.z
dcl_literal l45, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r4, r0.w, l45
itof r2._y__, r4.w
cmov_logical r2._y__, r4.z, r4.x, r2.y
dcl_literal l46, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r2.__z_, r2.x, l46
cmov_logical r2.x___, r4.z, r2.x, r2.z
dcl_literal l47, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r2.__zw, r2.y, l47
dcl_literal l48, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.__z_, r2.z, l48
iadd r2.__z_, r2.z, r2.x
dcl_literal l49, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.x___, r2.x, l49
iadd r2.x___, r2.y, r2.x
dcl_literal l50, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2._y__, r2.z, l50
dcl_literal l51, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r2.__z_, l51, r2.y
dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.x___, r2.z, l52, r2.x
dcl_literal l53, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2._y__, l53, r2.y_neg(xyzw)
dcl_literal l54, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r2.__z_, r2.w, l54
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r2.___w, l55, r2.y
dcl_literal l56, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r2._y__, r2.w, l56, r2.y
dcl_literal l57, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r2._y__, r2.y, l57
ishr r2.__z_, r2.z, r2.y
dcl_literal l58, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2._y__, l58, r2.y
cmov_logical r2.x___, r2.y, r2.z, r2.x
ior r2.x___, r4.y, r2.x
cmov_logical r0.___w, r3.w, r2.x, r0.w
dcl_literal l59, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r2.x___, r0.w, l59
dcl_literal l60, 0x3EE00000, 0x3F300000, 0x3F980000, 0x401C0000
uge r3, r2.x, l60
dcl_literal l61, 0x00000000, 0x3F300000, 0x3F980000, 0x401C0000
ult r2._yzw, r2.x, l61
and r2._yzw, r3.xxyz, r2.yyzw
dcl_literal l62, 0x40000000, 0x40000000, 0x40000000, 0x40000000
dcl_literal l63, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
mad_ieee r3.x___, r2.x, l62, l63
dcl_literal l64, 0x40000000, 0xBF800000, 0x3F800000, 0xBFC00000
add r4, r2.x, l64
div_zeroop(infinity) r3.x___, r3.x, r4.x
cmov_logical r3.x___, r2.y, r3.x, r2.x
dcl_literal l65, 0x3EED6338, 0x3EED6338, 0x3EED6338, 0x3EED6338
and r2._y__, r2.y, l65
div_zeroop(infinity) r3._y__, r4.y, r4.z
cmov_logical r3.x___, r2.z, r3.y, r3.x
dcl_literal l66, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
cmov_logical r2._y__, r2.z, l66, r2.y
dcl_literal l67, 0x3FC00000, 0x3FC00000, 0x3FC00000, 0x3FC00000
dcl_literal l68, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r2.__z_, r2.x, l67, l68
div_zeroop(infinity) r2.__z_, r4.w, r2.z
cmov_logical r2.__z_, r2.w, r2.z, r3.x
dcl_literal l69, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F
cmov_logical r2._y__, r2.w, l69, r2.y
dcl_literal l70, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
div_zeroop(infinity) r2.x___, l70, r2.x
cmov_logical r2.x___, r3.w, r2.x, r2.z
dcl_literal l71, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
cmov_logical r2._y__, r3.w, l71, r2.y
mul_ieee r2.__z_, r2.x, r2.x
mul_ieee r2.___w, r2.x, r2.z
dcl_literal l72, 0x3B9A3B54, 0x3E993F1F, 0x00000000, 0x00000000
dcl_literal l73, 0x3E44F0BA, 0x3F8E2C3D, 0x00000000, 0x00000000
mad_ieee r3.xy__, r2.z, l72, l73
dcl_literal l74, 0x3E97D299, 0x3F63BBE5, 0x00000000, 0x00000000
mad_ieee r3.xy__, r3.xyxx, r2.z, l74
mul_ieee r2.__z_, r2.w, r3.x
div_zeroop(infinity) r2.__z_, r2.z, r3.y
add r2.x___, r2.x_neg(xyzw), r2.z
add r2.x___, r2.y, r2.x_neg(xyzw)
dcl_literal l75, 0x32000000, 0x32000000, 0x32000000, 0x32000000
ilt r2._y__, r0.w, l75
cmov_logical r0.___w, r2.y, r0.w, r2.x
dcl_literal l76, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
add r2.x___, r0.w_neg(xyzw), l76
cmov_logical r0.__z_, r0.z, r2.x, r0.w
dcl_literal l77, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
ushr r2.x___, r1.z, l77
dcl_literal l78, 0x0000001E, 0x0000001E, 0x0000001E, 0x0000001E
ushr r2._y__, r1.w, l78
dcl_literal l79, 0x00000001, 0x00000002, 0x00000000, 0x00000000
and r2.xy__, r2.xyxx, l79
ior r0.___w, r2.y, r2.x
dcl_literal l80, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r2.xyz_, r0.w, l80
dcl_literal l81, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ixor r0.___w, r0.z, l81
cmov_logical r0.__z_, r2.x, r0.w, r0.z
dcl_literal l82, 0xA50D3132, 0xA50D3132, 0xA50D3132, 0xA50D3132
add r0.___w, r0.z, l82
dcl_literal l83, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
add r0.___w, r0.w_neg(xyzw), l83
cmov_logical r0.__z_, r2.y, r0.w, r0.z
dcl_literal l84, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB
add r0.___w, r0.z, l84
cmov_logical r0.__z_, r2.z, r0.w, r0.z
dcl_literal l85, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
ult r2.xy__, l85, r1.xyxx
dcl_literal l86, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
ieq r2.__zw, r1.xxxy, l86
dcl_literal l87, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
cmov_logical r3, r1.xyyx, l87, l88
dcl_literal l89, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.xy__, r1.zwzz, l89
inot r1.__zw, r1.xxxy
and r0.___w, r3.x, r1.z
and r4.xy__, r3.yzyy, r0.w
and r4.__zw, r1.y, r4.xxxy
dcl_literal l90, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
cmov_logical r0.__z_, r4.z, l90, r0.z
and r0.___w, r3.x, r1.x
and r3.x_z_, r3.yyzy, r0.w
and r5.xy__, r1.y, r3.xzxx
dcl_literal l91, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB
cmov_logical r0.__z_, r5.x, l91, r0.z
and r4.xy__, r1.w, r4.xyxx
dcl_literal l92, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r4.x, l92, r0.z
and r3.x_z_, r1.w, r3.xxzx
dcl_literal l93, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.__z_, r3.x, l93, r0.z
dcl_literal l94, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
cmov_logical r0.__z_, r4.w, l94, r0.z
dcl_literal l95, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB
cmov_logical r0.__z_, r5.y, l95, r0.z
dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r4.y, l96, r0.z
dcl_literal l97, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.__z_, r3.z, l97, r0.z
inot r3.x_z_, r2.zzwz
and r0.___w, r1.z, r3.x
and r0.___w, r3.w, r0.w
and r0.___w, r3.y, r0.w
dcl_literal l98, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
cmov_logical r0.__z_, r0.w, l98, r0.z
and r0.___w, r1.x, r3.x
and r0.___w, r3.w, r0.w
and r0.___w, r3.y, r0.w
dcl_literal l99, 0xBFC90FDB, 0xBFC90FDB, 0xBFC90FDB, 0xBFC90FDB
cmov_logical r0.__z_, r0.w, l99, r0.z
and r0.___w, r3.w, r3.x
and r3.x___, r1.z, r0.w
and r3.x___, r2.w, r3.x
and r3._y__, r1.y, r3.x
dcl_literal l100, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
cmov_logical r0.__z_, r3.y, l100, r0.z
and r0.___w, r1.x, r0.w
and r0.___w, r2.w, r0.w
and r3._y__, r1.y, r0.w
dcl_literal l101, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB, 0xC0490FDB
cmov_logical r0.__z_, r3.y, l101, r0.z
and r3.x___, r1.w, r3.x
dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r3.x, l102, r0.z
and r0.___w, r1.w, r0.w
dcl_literal l103, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.__z_, r0.w, l103, r0.z
and r0.___w, r2.z, r1.z
and r1.__z_, r3.z, r0.w
dcl_literal l104, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
cmov_logical r0.__z_, r1.z, l104, r0.z
and r1.x___, r2.z, r1.x
and r1.__z_, r3.z, r1.x
dcl_literal l105, 0xBFC90FDB, 0xBFC90FDB, 0xBFC90FDB, 0xBFC90FDB
cmov_logical r0.__z_, r1.z, l105, r0.z
and r0.___w, r2.w, r0.w
and r1.__z_, r1.y, r0.w
dcl_literal l106, 0x4016CBE4, 0x4016CBE4, 0x4016CBE4, 0x4016CBE4
cmov_logical r0.__z_, r1.z, l106, r0.z
and r1.x___, r2.w, r1.x
and r1._y__, r1.y, r1.x
dcl_literal l107, 0xC016CBE4, 0xC016CBE4, 0xC016CBE4, 0xC016CBE4
cmov_logical r0.__z_, r1.y, l107, r0.z
and r0.___w, r1.w, r0.w
dcl_literal l108, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
cmov_logical r0.__z_, r0.w, l108, r0.z
and r0.___w, r1.w, r1.x
dcl_literal l109, 0xBF490FDB, 0xBF490FDB, 0xBF490FDB, 0xBF490FDB
cmov_logical r0.__z_, r0.w, l109, r0.z
cmov_logical r0.x___, r2.x, r0.x, r0.z
cmov_logical r0.x___, r2.y, r0.y, r0.x
mov out0, r0
mend
__atanh_f32
mdef(183)_out(1)_in(1)
mov r0, in0
mov r1.x ___, r0.x
dcl_literal l0, 0xFFFFFFE7, 0x00000000, 0x00000000, 0x00000000
mov r0.x_z_, l0
dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r1._y__, r1.x, l1
add r1.__z_, r1.y, r1.y
dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.___w, r1.y_neg(xyzw), l2
div_zeroop(infinity) r1.__z_, r1.z, r1.w
dcl_literal l3, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r1.z, l3
dcl_literal l4, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r1.__z_, r0.w, l4
dcl_literal l5, 0x4C000000, 0x4C000000, 0x4C000000, 0x4C000000
mul_ieee r0._y__, r0.w, l5
cmov_logical r0.xy__, r1.z, r0.xyxx, r0.zwzz
dcl_literal l6, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0.__z_, r0.y, l6
dcl_literal l7, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r0.___w, l7, r0.z
dcl_literal l8, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r0.___w, r0.w, l8
dcl_literal l9, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1.__z_, r0.w, l9
dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r0.w, l10
ior r0.__z_, r0.z, r1.z
dcl_literal l11, 0x00000000, 0x00000000, 0xBF800000, 0x3F800000
add r1.__zw, r0.z, l11
div_zeroop(infinity) r0.__z_, r1.z, r1.w
mul_ieee r1.___w, r0.z, r0.z
mul_ieee r2.x___, r1.w, r1.w
dcl_literal l12, 0x00000000, 0x3E1CD04F, 0x3E178897, 0x00000000
dcl_literal l13, 0x00000000, 0x3E638E29, 0x3E3A3325, 0x00000000
mad_ieee r2._yz_, r2.x, l12, l13
dcl_literal l14, 0x00000000, 0x3ECCCCCD, 0x3E924925, 0x00000000
mad_ieee r2._yz_, r2.x, r2.yyzy, l14
mul_ieee r2._y__, r2.x, r2.y
dcl_literal l15, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r2.x___, r2.x, r2.z, l15
mad_ieee r1.___w, r1.w, r2.x, r2.y
mul_ieee r2.x___, r1.z, r1.z
dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1.___w, r2.x, l16, r1.w
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0._y__, r0.y, l17
iadd r0.x___, r0.y, r0.x
dcl_literal l18, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.x___, l18, r0.x
iadd r0.x___, r0.x, r0.w
itof r0.x___, r0.x
dcl_literal l19, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r0._y__, r0.x, l19
mad_ieee r0._y__, r0.z, r1.w, r0.y
dcl_literal l20, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0._y__, r2.x, l20, r0.y_neg(xyzw)
add r0._y__, r1.z_neg(xyzw), r0.y
dcl_literal l21, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0.x___, r0.x, l21, r0.y_neg(xyzw)
dcl_literal l22, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r0.x___, r0.x, l22
mul_ieee r0._y__, r1.y, r1.y
dcl_literal l23, 0x00000000, 0x00000000, 0x3C18197E, 0x3EE7D7E1
dcl_literal l24, 0x00000000, 0x00000000, 0xBE8FF9E7, 0xBFC6E215
mad_ieee r0.__zw, r0.y, l23, l24
dcl_literal l25, 0x00000000, 0x00000000, 0x3ECA00A9, 0x3F97807F
mad_ieee r0.__zw, r0.zzzw, r0.y, l25
mul_ieee r0._y__, r1.y, r0.y
div_zeroop(infinity) r0.__z_, r0.z, r0.w
mad_ieee r0._y__, r0.y, r0.z, r1.y
dcl_literal l26, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
lt r0.__z_, r1.y, l26
cmov_logical r0.x___, r0.z, r0.y, r0.x
dcl_literal l27, 0x31800000, 0x31800000, 0x31800000, 0x31800000
ige r0._y__, l27, r1.y
cmov_logical r0.x___, r0.y, r1.y, r0.x
dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ieq r0._y__, r1.y, l28
dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.y, l29, r0.x
dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0._y__, r1.x, l30
dcl_literal l31, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.__z_, r1.x, l31
dcl_literal l32, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.___w, r1.y, l32
and r0._y__, r0.y, r0.w
cmov_logical r0.x___, r0.y, r0.x_neg(xyzw), r0.x
dcl_literal l33, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ilt r0._y__, l33, r1.y
dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.___w, r1.y, l34
dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r1.x___, r1.y, l35
and r0._y__, r0.y, r0.w
dcl_literal l36, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l36, r0.x
cmov_logical r0.x___, r1.x, r0.z, r0.x
mov out0, r0
mend
__atanpi_f32
mdef(184)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x80000000, 0x00000000
and r0._yz_, r0.x, l0
dcl_literal l1, 0x01490FDB, 0x01490FDB, 0x01490FDB, 0x01490FDB
ige r0.___w, l1, r0.y
if_logicalnz r0.w
    
    dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.___w, r0.x, l2
    if_logicalz r0.w
        
        dcl_literal l3, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r1.x___, r0.x, l3
        itof r1.x___, r1.x
        
        dcl_literal l4, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r1.xy__, r1.x, l4
        
        dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.x___, r1.x, l5
        
        dcl_literal l6, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        iadd r1.x___, r1.x, l6
        
        dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1._y__, r1.y, l7
        
        dcl_literal l8, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r1.x___, l8, r1.x_neg(xyzw)
        
        dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r1.__z_, l9, r1.x
        
        dcl_literal l10, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.x___, r1.z, l10, r1.x
        
        dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r1.__z_, l11, r1.x
        ishr r1.___w, r1.y, r1.x
        inegate r1.x___, r1.x
        
        dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.x___, r1.x, l12
        iadd r1.x___, r1.y, r1.x
        cmov_logical r1.x___, r1.z, r1.w, r1.x
    else
        
        dcl_literal l13, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r1._y__, r0.x, l13
        
        dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r0.___w, r0.w, l14
        
        dcl_literal l15, 0x0C000000, 0x0C000000, 0x0C000000, 0x0C000000
        iadd r1._y__, r1.y, l15
        
        dcl_literal l16, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99
        iadd r0.___w, r0.w, l16
        
        dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r0.___w, l17, r0.w
        
        dcl_literal l18, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r1.x___, r0.w, l18, r1.y
    endif
    
    dcl_literal l19, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983
    mul_ieee r0.___w, r1.x, l19
    
    dcl_literal l20, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r1.xy__, r0.w, l20
    if_logicalz r1.x
        itof r1.__z_, r1.y
        
        dcl_literal l21, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
        and r1.__zw, r1.z, l21
        
        dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.__z_, r1.z, l22
        
        dcl_literal l23, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8
        iadd r1.__z_, r1.z, l23
        
        dcl_literal l24, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.___w, r1.w, l24
        
        dcl_literal l25, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r1.__z_, l25, r1.z_neg(xyzw)
        
        dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2.x___, l26, r1.z
        
        dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.__z_, r2.x, l27, r1.z
        
        dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r2.x___, l28, r1.z
        ishr r2._y__, r1.w, r1.z
        inegate r1.__z_, r1.z
        
        dcl_literal l29, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.__z_, r1.z, l29
        iadd r1.__z_, r1.w, r1.z
        cmov_logical r1.__z_, r2.x, r2.y, r1.z
    else
        
        dcl_literal l30, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r0.___w, r0.w, l30
        
        dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.x___, r1.x, l31
        
        dcl_literal l32, 0xF4000000, 0xF4000000, 0xF4000000, 0xF4000000
        iadd r0.___w, r0.w, l32
        
        dcl_literal l33, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69
        iadd r1.x___, r1.x, l33
        
        dcl_literal l34, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r1.x___, l34, r1.x_neg(xyzw)
        
        dcl_literal l35, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1._y__, r1.y, l35
        
        dcl_literal l36, 0x00000000, 0x00000017, 0x00000000, 0x00000000
        ilt r2.xy__, l36, r1.x
        
        dcl_literal l37, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.x___, r2.y, l37, r1.x
        ishr r1.x___, r1.y, r1.x
        cmov_logical r1.__z_, r2.x, r1.x, r0.w
    endif
else
    
    dcl_literal l38, 0x31800000, 0x31800000, 0x31800000, 0x31800000
    lt r0.___w, r0.y, l38
    if_logicalnz r0.w
        mov r0.___w, r0.y
    else
        
        dcl_literal l39, 0x3EE00000, 0x3F300000, 0x3F980000, 0x401C0000
        uge r2, r0.y, l39
        
        dcl_literal l40, 0x3F300000, 0x3F980000, 0x00000000, 0x401C0000
        ult r1.xy_w, r0.y, l40
        and r1.xy_w, r2.xyxz, r1.xyxw
        
        dcl_literal l41, 0x40000000, 0x40000000, 0x40000000, 0x40000000
        
        dcl_literal l42, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        mad_ieee r2.x___, r0.y, l41, l42
        
        dcl_literal l43, 0x40000000, 0xBF800000, 0x3F800000, 0xBFC00000
        add r3, r0.y, l43
        div_zeroop(infinity) r2.x___, r2.x, r3.x
        cmov_logical r2.x___, r1.x, r2.x, r0.y
        
        dcl_literal l44, 0x3EED6338, 0x3EED6338, 0x3EED6338, 0x3EED6338
        and r1.x___, r1.x, l44
        div_zeroop(infinity) r2._y__, r3.y, r3.z
        cmov_logical r2.x___, r1.y, r2.y, r2.x
        
        dcl_literal l45, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
        cmov_logical r1.x___, r1.y, l45, r1.x
        
        dcl_literal l46, 0x3FC00000, 0x3FC00000, 0x3FC00000, 0x3FC00000
        
        dcl_literal l47, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        mad_ieee r1._y__, r0.y, l46, l47
        div_zeroop(infinity) r1._y__, r3.w, r1.y
        cmov_logical r1._y__, r1.w, r1.y, r2.x
        
        dcl_literal l48, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F
        cmov_logical r1.x___, r1.w, l48, r1.x
        
        dcl_literal l49, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        div_zeroop(infinity) r1.___w, l49, r0.y
        cmov_logical r1._y__, r2.w, r1.w, r1.y
        
        dcl_literal l50, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
        cmov_logical r1.x___, r2.w, l50, r1.x
        mul_ieee r1.___w, r1.y, r1.y
        mul_ieee r2.x___, r1.y, r1.w
        
        dcl_literal l51, 0x00000000, 0x3B9A3B54, 0x3E993F1F, 0x00000000
        
        dcl_literal l52, 0x00000000, 0x3E44F0BA, 0x3F8E2C3D, 0x00000000
        mad_ieee r2._yz_, r1.w, l51, l52
        
        dcl_literal l53, 0x00000000, 0x3E97D299, 0x3F63BBE5, 0x00000000
        mad_ieee r2._yz_, r2.yyzy, r1.w, l53
        mul_ieee r1.___w, r2.x, r2.y
        div_zeroop(infinity) r1.___w, r1.w, r2.z
        add r1._y__, r1.y_neg(xyzw), r1.w
        add r0.___w, r1.x, r1.y_neg(xyzw)
    endif
    
    dcl_literal l54, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983, 0x3EA2F983
    mul_ieee r1.__z_, r0.w, l54
endif
ior r0.__z_, r0.z, r1.z
dcl_literal l55, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ult r0._y__, l55, r0.y
dcl_literal l56, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l56
cmov_logical r0.x___, r0.y, r0.x, r0.z
mov out0, r0
mend
__atan_f32
mdef(185)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x80000000, 0x00000000
and r0._yz_, r0.x, l0
dcl_literal l1, 0x32000000, 0x32000000, 0x32000000, 0x32000000
lt r0.___w, r0.y, l1
if_logicalnz r0.w
    mov r0.___w, r0.y
else
    
    dcl_literal l2, 0x3EE00000, 0x3F300000, 0x3F980000, 0x401C0000
    uge r1, r0.y, l2
    
    dcl_literal l3, 0x3F300000, 0x3F980000, 0x401C0000, 0x00000000
    ult r2.xyz_, r0.y, l3
    and r1.xyz_, r1.xyzx, r2.xyzx
    
    dcl_literal l4, 0x40000000, 0x40000000, 0x40000000, 0x40000000
    
    dcl_literal l5, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    mad_ieee r2.x___, r0.y, l4, l5
    
    dcl_literal l6, 0x40000000, 0xBF800000, 0x3F800000, 0xBFC00000
    add r3, r0.y, l6
    div_zeroop(infinity) r2.x___, r2.x, r3.x
    cmov_logical r2.x___, r1.x, r2.x, r0.y
    
    dcl_literal l7, 0x3EED6338, 0x3EED6338, 0x3EED6338, 0x3EED6338
    and r1.x___, r1.x, l7
    div_zeroop(infinity) r2._y__, r3.y, r3.z
    cmov_logical r2.x___, r1.y, r2.y, r2.x
    
    dcl_literal l8, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
    cmov_logical r1.x___, r1.y, l8, r1.x
    
    dcl_literal l9, 0x3FC00000, 0x3FC00000, 0x3FC00000, 0x3FC00000
    
    dcl_literal l10, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    mad_ieee r1._y__, r0.y, l9, l10
    div_zeroop(infinity) r1._y__, r3.w, r1.y
    cmov_logical r1._y__, r1.z, r1.y, r2.x
    
    dcl_literal l11, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F, 0x3F7B985F
    cmov_logical r1.x___, r1.z, l11, r1.x
    
    dcl_literal l12, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    div_zeroop(infinity) r1.__z_, l12, r0.y
    cmov_logical r1._y__, r1.w, r1.z, r1.y
    
    dcl_literal l13, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
    cmov_logical r1.x___, r1.w, l13, r1.x
    mul_ieee r1.__z_, r1.y, r1.y
    mul_ieee r1.___w, r1.y, r1.z
    
    dcl_literal l14, 0x3B9A3B54, 0x3E993F1F, 0x00000000, 0x00000000
    
    dcl_literal l15, 0x3E44F0BA, 0x3F8E2C3D, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, l14, l15
    
    dcl_literal l16, 0x3E97D299, 0x3F63BBE5, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r2.xyxx, r1.z, l16
    mul_ieee r1.__z_, r1.w, r2.x
    div_zeroop(infinity) r1.__z_, r1.z, r2.y
    add r1._y__, r1.y_neg(xyzw), r1.z
    add r0.___w, r1.x, r1.y_neg(xyzw)
endif
ior r0.__z_, r0.z, r0.w
dcl_literal l17, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ult r0._y__, l17, r0.y
dcl_literal l18, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l18
cmov_logical r0.x___, r0.y, r0.x, r0.z
mov out0, r0
mend
__cbrt_f32
mdef(186)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x007FFFFF
and r0._yzw, r0.x, l0
itof r0.___w, r0.w
dcl_literal l1, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
and r1.xy__, r0.w, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r1.x, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.x___, r1.y, l3
dcl_literal l4, 0x00000030, 0x00000030, 0x00000030, 0x00000030
iadd r0.___w, r0.w, l4
dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r0.___w, l5, r0.w_neg(xyzw)
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1._y__, l6, r0.w
dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.___w, r1.y, l7, r0.w
inegate r1._y__, r0.w
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1._y__, r1.y, l8
iadd r1._y__, r1.x, r1.y
ishr r1.x___, r1.x, r0.w
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l9, r0.w
cmov_logical r0.___w, r0.w, r1.x, r1.y
cmov_logical r0._y__, r0.z, r0.y, r0.w
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l11, 0xFFFFFFF0, 0xFFFFFFF0, 0xFFFFFFF0, 0xFFFFFFF0
cmov_logical r0.__z_, r0.z, l10, l11
dcl_literal l12, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
and r1.xy__, r0.y, l12
dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r1.x, l13
dcl_literal l14, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, r0.w, l14
itof r0.___w, r0.w
dcl_literal l15, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB
mul_ieee r1.x___, r0.w, l15
round_nearest r1.x___, r1.x
dcl_literal l16, 0x40400000, 0x40400000, 0x40400000, 0x40400000
mad_ieee r0.___w, r1.x_neg(xyzw), l16, r0.w
ftoi r1.x___, r1.x
ftoi r0.___w, r0.w
dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
iadd r0.___w, r0.w, l17
dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r0.___w, r0.w, l18
ior r0.___w, r1.y, r0.w
dcl_literal l19, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1._y__, r0.w, l19
dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r0.w, l20
dcl_literal l21, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r1.__z_, l21, r1.y
dcl_literal l22, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r1.__z_, r1.z, l22
dcl_literal l23, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1.___w, r1.z, l23
dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.__z_, r1.z, l24
ior r1._y__, r1.y, r1.w
dcl_literal l25, 0x00000000, 0xBF800000, 0x00000000, 0x3F800000
add r1._y_w, r1.y, l25
div_zeroop(infinity) r1.___w, r1.y, r1.w
mul_ieee r2.x___, r1.w, r1.w
mul_ieee r2._y__, r2.x, r2.x
dcl_literal l26, 0x00000000, 0x00000000, 0x3E1CD04F, 0x3E178897
dcl_literal l27, 0x00000000, 0x00000000, 0x3E638E29, 0x3E3A3325
mad_ieee r2.__zw, r2.y, l26, l27
dcl_literal l28, 0x00000000, 0x00000000, 0x3ECCCCCD, 0x3E924925
mad_ieee r2.__zw, r2.y, r2.zzzw, l28
mul_ieee r2.__z_, r2.y, r2.z
dcl_literal l29, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r2._y__, r2.y, r2.w, l29
mad_ieee r2.x___, r2.x, r2.y, r2.z
mul_ieee r2._y__, r1.y, r1.y
dcl_literal l30, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.x___, r2.y, l30, r2.x
dcl_literal l31, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r2._y__, r2.y, l31
mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r2.y
add r1._y__, r1.y_neg(xyzw), r1.w
dcl_literal l32, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB
mul_ieee r1.___w, r1.y, l32
mul_ieee r2.x___, r1.w, r1.w
dcl_literal l33, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l34, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r2._y__, r2.x, l33, l34
dcl_literal l35, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r2._y__, r2.x, r2.y, l35
dcl_literal l36, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r2._y__, r2.x, r2.y, l36
dcl_literal l37, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r2._y__, r2.x, r2.y, l37
mad_ieee r2.x___, r2.x_neg(xyzw), r2.y, r1.w
mul_ieee r1.___w, r1.w, r2.x
dcl_literal l38, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
add r2.x___, r2.x, l38
div_zeroop(infinity) r1.___w, r1.w, r2.x
dcl_literal l39, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB
mad_ieee r1._y__, r1.y_neg(xyzw), l39, r1.w
dcl_literal l40, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1._y__, r1.y_neg(xyzw), l40
dcl_literal l41, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, r0.w, l41
iadd r0.___w, r0.w, r1.z
itof r0.___w, r0.w
dcl_literal l42, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820
mul_ieee r1.__z_, r0.w, l42
mul_ieee r1.___w, r1.z, r1.z
dcl_literal l43, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l44, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r2.x___, r1.w, l43, l44
dcl_literal l45, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r2.x___, r1.w, r2.x, l45
dcl_literal l46, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r2.x___, r1.w, r2.x, l46
dcl_literal l47, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r2.x___, r1.w, r2.x, l47
mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r1.z
mul_ieee r1.__z_, r1.z, r1.w
dcl_literal l48, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
add r1.___w, r1.w, l48
div_zeroop(infinity) r1.__z_, r1.z, r1.w
dcl_literal l49, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820
mad_ieee r0.___w, r0.w_neg(xyzw), l49, r1.z
dcl_literal l50, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.w_neg(xyzw), l50
mul_ieee r0.___w, r1.y, r0.w
dcl_literal l51, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r2, r0.w, l51
iadd r0.__z_, r1.x, r0.z
dcl_literal l52, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r0.___w, r0.z, l52
cmov_logical r0.__z_, r2.z, r0.z, r0.w
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r0.___w, r0.z, l53
itof r1.x___, r2.w
cmov_logical r1.x___, r2.z, r2.x, r1.x
iadd r0.___w, r1.x, r0.w
dcl_literal l54, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
and r1.xy__, r1.x, l54
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r1.x, l55
dcl_literal l56, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1._y__, r1.y, l56
iadd r0.__z_, r1.x, r0.z
dcl_literal l57, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.__z_, r0.z, l57
dcl_literal l58, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.x___, l58, r0.z
dcl_literal l59, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.__z_, l59, r0.z_neg(xyzw)
dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.___w, r1.x, l60, r0.w
dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1.x___, l61, r0.z
dcl_literal l62, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.__z_, r1.x, l62, r0.z
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0.__z_, r0.z, l63
ishr r1.x___, r1.y, r0.z
dcl_literal l64, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l64, r0.z
cmov_logical r0.__z_, r0.z, r1.x, r0.w
ior r0.__z_, r2.y, r0.z
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l65
cmov_logical r0.__z_, r0.w, r0.z_neg(xyzw), r0.z
dcl_literal l66, 0x7F800000, 0x00000000, 0x00000000, 0x00000000
ieq r1.xy__, r0.y, l66
dcl_literal l67, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ult r0._y__, l67, r0.y
ior r0.___w, r1.y, r1.x
cmov_logical r0.__z_, r0.w, r0.x, r0.z
dcl_literal l68, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l68
cmov_logical r0.x___, r0.y, r0.x, r0.z
mov out0, r0
mend
__ceil_f32
mdef(187)_out(1)_in(1)
mov r0, in0
round_plusinf r0.x___, r0.x
mov out0, r0
mend
__clamp_f32
mdef(188)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
max r0.___w, r1.x, r0.x
min r0.x___, r2.x, r0.w
mov out0, r0
mend
__copysign_f32
mdef(189)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x00000000, 0x00000000
and r0.xy__, r0.xyxx, l0
ior r0.x___, r0.y, r0.x
mov out0, r0
mend
__cosh_f32
mdef(190)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0.__z_, r0.y, l1, l2
round_z r0.__z_, r0.z
dcl_literal l3, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0.___w, r0.z_neg(xyzw), l3, r0.y
dcl_literal l4, 0x42000000, 0x42000000, 0x42000000, 0x42000000
ge r1.x___, r0.z, l4
dcl_literal l5, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1._y__, r0.z, l5
cmov_logical r1.x___, r1.x, r1.y, r0.z
dcl_literal l6, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r1._y__, r0.z_neg(xyzw), l6, r0.w
mul_ieee r1.__z_, r1.y, r1.y
dcl_literal l7, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l8, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r1.___w, r1.z, l7, l8
dcl_literal l9, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r1.___w, r1.z, r1.w, l9
dcl_literal l10, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r1.___w, r1.z, r1.w, l10
dcl_literal l11, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r1.___w, r1.z, r1.w, l11
mad_ieee r1.__z_, r1.z_neg(xyzw), r1.w, r1.y
mul_ieee r1._y__, r1.y, r1.z
dcl_literal l12, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r1.__z_, r1.z_neg(xyzw), l12
div_zeroop(infinity) r1._y__, r1.y, r1.z
dcl_literal l13, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r0.__z_, r0.z, l13, r1.y_neg(xyzw)
add r0.__z_, r0.w_neg(xyzw), r0.z
dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.__z_, r0.z_neg(xyzw), l14
ftoi r0.___w, r1.x
mov r1._y__, r0.z_abs
dcl_literal l15, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r1.__zw, r1.y, l15
if_logicalz r1.z
    itof r2.x___, r1.w
    
    dcl_literal l16, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r2.xy__, r2.x, l16
    
    dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.x___, r2.x, l17
    iadd r2.x___, r2.x, r0.w
    
    dcl_literal l18, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2._y__, r2.y, l18
    
    dcl_literal l19, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r2.x___, l19, r2.x_neg(xyzw)
    
    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r2.__z_, l20, r2.x
    
    dcl_literal l21, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.x___, r2.z, l21, r2.x
    
    dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, l22, r2.x
    ishr r2.___w, r2.y, r2.x
    inegate r2.x___, r2.x
    
    dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2.x___, r2.x, l23
    iadd r2.x___, r2.y, r2.x
    cmov_logical r2.x___, r2.z, r2.w, r2.x
else
    
    dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.__z_, r1.z, l24
    iadd r1.__z_, r1.z, r0.w
    
    dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l25
    iadd r0.___w, r1.y, r0.w
    
    dcl_literal l26, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r1._y__, r1.z, l26
    
    dcl_literal l27, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r1.__z_, l27, r1.y
    
    dcl_literal l28, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r1.z, l28, r0.w
    
    dcl_literal l29, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r1._y__, l29, r1.y_neg(xyzw)
    
    dcl_literal l30, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r1.__z_, r1.w, l30
    
    dcl_literal l31, 0x00000000, 0x00000000, 0x00000017, 0x00000000
    ilt r2._yz_, l31, r1.y
    
    dcl_literal l32, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1._y__, r2.z, l32, r1.y
    ishr r1._y__, r1.z, r1.y
    cmov_logical r2.x___, r2.y, r1.y, r0.w
endif
dcl_literal l33, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r0.___w, l33, r1.x
dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.___w, r0.w, l34, r2.x
dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.__z_, r0.z, l35
cmov_logical r0.__z_, r0.z, r0.w_neg(xyzw), r0.w
dcl_literal l36, 0x41AEAC50, 0x41AEAC50, 0x41AEAC50, 0x41AEAC50
lt r0.___w, r0.y, l36
dcl_literal l37, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
div_zeroop(infinity) r1.x___, l37, r0.z
dcl_literal l38, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1.x___, r0.z, l38, r1.x
cmov_logical r0.__z_, r0.w, r1.x, r0.z
dcl_literal l39, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
uge r0.___w, r0.y, l39
cmov_logical r0.__z_, r0.w, r0.x, r0.z
dcl_literal l40, 0x42B2D4FD, 0x42B2D4FD, 0x42B2D4FD, 0x42B2D4FD
ge r0.___w, r0.y, l40
dcl_literal l41, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.__z_, r0.w, l41, r0.z
dcl_literal l42, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ult r0.___w, l42, r0.y
dcl_literal l43, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r1.x___, r0.x, l43
cmov_logical r0.__z_, r0.w, r1.x, r0.z
dcl_literal l44, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.y, l44
cmov_logical r0.__z_, r0.w, r0.y, r0.z
dcl_literal l45, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r0.y, r0.z, l45
mov out0, r0
mend
__cospi_f32
mdef(191)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
frc r0.__z_, r0.y
add r0.___w, r0.y, r0.z_neg(xyzw)
dcl_literal l1, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r0.___w, r0.w, l1
frc r0.___w, r0.w
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r0.___w, r0.w, l2
dcl_literal l3, 0x00000000, 0x3F000000, 0x00000000, 0x00000000
ne r1.xy__, r0.z, l3
and r1.x___, r1.y, r1.x
dcl_literal l4, 0x32000000, 0x32000000, 0x32000000, 0x32000000
ige r1._y__, r0.y, l4
and r1.x___, r1.x, r1.y
dcl_literal l5, 0x00000000, 0x7F800000, 0x32000000, 0x00000000
ilt r1._yz_, r0.y, l5
and r1.x___, r1.x, r1.y
if_logicalnz r1.x
    add r1.x___, r0.x, r0.x
    round_nearest r1.x___, r1.x
    
    dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
    mul_ieee r1._y__, r1.x, l6
    frc r1._y__, r1.y
    
    dcl_literal l7, 0x40800000, 0x40800000, 0x40800000, 0x40800000
    mul_ieee r1._y__, r1.y, l7
    round_nearest r1._y__, r1.y
    
    dcl_literal l8, 0x40000000, 0x40000000, 0x40000000, 0x40000000
    mad_ieee r1.x___, r0.x, l8, r1.x_neg(xyzw)
    
    dcl_literal l9, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
    mul_ieee r1.x___, r1.x, l9
    mul_ieee r1.___w, r1.x, r1.x
    mul_ieee r2.x___, r1.x, r1.w
    
    dcl_literal l10, 0x00000000, 0x3636DF25, 0xB492923A, 0x00000000
    
    dcl_literal l11, 0x00000000, 0xB95009D4, 0x37D00AE2, 0x00000000
    mad_ieee r2._yz_, r1.w, l10, l11
    
    dcl_literal l12, 0x00000000, 0x3C088887, 0xBAB60B60, 0x00000000
    mad_ieee r2._yz_, r1.w, r2.yyzy, l12
    
    dcl_literal l13, 0x00000000, 0xBE2AAAAB, 0x3D2AAAAB, 0x00000000
    mad_ieee r2._yz_, r1.w, r2.yyzy, l13
    mad_ieee r1.x___, r2.x, r2.y, r1.x
    
    dcl_literal l14, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    
    dcl_literal l15, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    mad_ieee r2.x___, r1.w_neg(xyzw), l14, l15
    mul_ieee r1.___w, r1.w, r1.w
    mad_ieee r1.___w, r1.w, r2.z, r2.x
    
    dcl_literal l16, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
    eq r2, r1.y, l16
    and r1._y__, r1.w, r2.x
    cmov_logical r1._y__, r2.y, r1.x_neg(xyzw), r1.y
    cmov_logical r1._y__, r2.z, r1.w_neg(xyzw), r1.y
    cmov_logical r1.x___, r2.w, r1.x, r1.y
else
    
    dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r1.x___, l17
endif
dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x3F000000
eq r1._y_w, r0.z, l18
ior r0.__z_, r1.z, r1.y
dcl_literal l19, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
dcl_literal l20, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0.___w, r0.w, l19, l20
dcl_literal l21, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.w, l21, r1.x
cmov_logical r0.__z_, r0.z, r0.w, r1.x
dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.y, l22
dcl_literal l23, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.__z_, r0.w, l23, r0.z
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l24, r0.y
dcl_literal l25, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l25
cmov_logical r0.x___, r0.y, r0.x, r0.z
mov out0, r0
mend
__cos_f32
mdef(192)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x32000000, 0x32000000, 0x32000000, 0x32000000
ilt r0.__z_, r0.y, l1
if_logicalnz r0.z
    
    dcl_literal l2, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    mov r0.__z_, l2
else
    
    dcl_literal l3, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680
    lt r0.___w, r0.y, l3
    if_logicalnz r0.w
        
        dcl_literal l4, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983
        mul_ieee r0.___w, r0.y, l4
        round_nearest r0.___w, r0.w
        
        dcl_literal l5, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
        and r1.x___, r0.w, l5
        add r1._y__, r0.w, r1.x_neg(xyzw)
        
        dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
        mul_ieee r1.__z_, r0.w, l6
        
        dcl_literal l7, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000
        mul_ieee r2.xyz_, r0.w, l7
        
        dcl_literal l8, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.x, l8, r2.xyxx_neg(xyzw)
        
        dcl_literal l9, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.x, l9, r3.xyxx
        
        dcl_literal l10, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.y, l10, r3.xyxx
        
        dcl_literal l11, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.y, l11, r3.xyxx
        add r0.___w, r0.y, r2.x_neg(xyzw)
        add r1.___w, r0.y, r0.w_neg(xyzw)
        add r1.___w, r2.x_neg(xyzw), r1.w
        add r1.___w, r3.x_neg(xyzw), r1.w
        add r0.___w, r0.w, r1.w
        add r1.___w, r2.y_neg(xyzw), r0.w
        add r0.___w, r0.w, r1.w_neg(xyzw)
        add r0.___w, r2.y_neg(xyzw), r0.w
        add r0.___w, r3.y_neg(xyzw), r0.w
        add r0.___w, r1.w, r0.w
        
        dcl_literal l12, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
        mad_ieee r1.___w, r1.x, l12, r2.z_neg(xyzw)
        
        dcl_literal l13, 0x21188000, 0x21188000, 0x21188000, 0x21188000
        mad_ieee r1.x___, r1.x, l13, r1.w
        
        dcl_literal l14, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
        mad_ieee r1.x___, r1.y, l14, r1.x
        
        dcl_literal l15, 0x21188000, 0x21188000, 0x21188000, 0x21188000
        mad_ieee r1._y__, r1.y, l15, r1.x
        add r1.___w, r2.z_neg(xyzw), r0.w
        add r0.___w, r0.w, r1.w_neg(xyzw)
        add r0.___w, r2.z_neg(xyzw), r0.w
        add r1.x___, r1.w, r0.w
        frc r0.___w, r1.z
        
        dcl_literal l16, 0x40800000, 0x40800000, 0x40800000, 0x40800000
        mul_ieee r0.___w, r0.w, l16
        round_nearest r0.___w, r0.w
        mov r1._y__, r1.y_neg(xyzw)
    else
        
        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r1.__z_, r0.y, l17
        
        dcl_literal l18, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r1.___w, r0.x, l18
        
        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.___w, r1.w, l19
        
        dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.x___, r1.w, l20
        
        dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r1.___w, r1.w, l21
        
        dcl_literal l22, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041
        umul r3, l22, r1.w
        
        dcl_literal l23, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041
        umul r4, l23, r2.x
        
        dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2._yz_, r4.yywy, l24
        
        dcl_literal l25, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r5.xy__, r3.ywyy, l25
        iadd r2._yz_, r2.yyzy, r5.xxyx
        iadd r2._yz_, r4.xxzx, r2.yyzy
        
        dcl_literal l26, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r4.x_z_, r2.yyzy, l26
        iadd r3.x_z_, r3.xxzx, r4.xxzx
        
        dcl_literal l27, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l27
        
        dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2._yz_, r2.yyzy, l28
        
        dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r4.xy__, r4.ywyy, l29
        iadd r3.xy__, r3.xzxx, r3.ywyy
        ior r4.xy__, r2.yzyy, r4.xyxx
        iadd r5.__z_, r3.x, r4.y
        ult r2._y__, r5.z, r4.y
        
        dcl_literal l30, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r3.y, l30
        cmov_logical r2._y__, r2.y, r2.z, r3.y
        
        dcl_literal l31, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0
        umul r3, l31, r1.w
        
        dcl_literal l32, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0
        umul r6, l32, r2.x
        
        dcl_literal l33, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__zw, r6.yyyw, l33
        
        dcl_literal l34, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r7.xy__, r3.ywyy, l34
        iadd r2.__zw, r2.zzzw, r7.xxxy
        iadd r2.__zw, r6.xxxz, r2.zzzw
        
        dcl_literal l35, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6.x_z_, r2.zzwz, l35
        iadd r3.x_z_, r3.xxzx, r6.xxzx
        
        dcl_literal l36, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l36
        iadd r3.xy__, r3.xzxx, r3.ywyy
        
        dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2.__zw, r2.zzzw, l37
        
        dcl_literal l38, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF
        and r3.__zw, r6.yyyw, l38
        ior r2.__zw, r2.zzzw, r3.zzzw
        iadd r5._y__, r2.y, r2.z
        ult r2._y__, r5.y, r2.z
        
        dcl_literal l39, 0x00000000, 0x00000000, 0x00000001, 0x00000001
        iadd r3.__zw, r3.xxxy, l39
        cmov_logical r2._y__, r2.y, r3.z, r3.x
        iadd r5.x___, r2.y, r2.w
        ult r2._y__, r5.x, r2.w
        cmov_logical r2._y__, r2.y, r3.w, r3.y
        
        dcl_literal l40, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529
        umul r3, l40, r1.w
        
        dcl_literal l41, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529
        umul r6, l41, r2.x
        
        dcl_literal l42, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__zw, r6.yyyw, l42
        
        dcl_literal l43, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r7.xy__, r3.ywyy, l43
        iadd r2.__zw, r2.zzzw, r7.xxxy
        iadd r2.__zw, r6.xxxz, r2.zzzw
        
        dcl_literal l44, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6.x_z_, r2.zzwz, l44
        iadd r3.x_z_, r3.xxzx, r6.xxzx
        
        dcl_literal l45, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l45
        iadd r3.xy__, r3.xzxx, r3.ywyy
        
        dcl_literal l46, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2.__zw, r2.zzzw, l46
        
        dcl_literal l47, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF
        and r3.__zw, r6.yyyw, l47
        ior r2.__zw, r2.zzzw, r3.zzzw
        iadd r3.___w, r2.y, r2.z
        ult r2._y__, r3.w, r2.z
        
        dcl_literal l48, 0x00000001, 0x00000001, 0x00000000, 0x00000000
        iadd r6.xy__, r3.xyxx, l48
        cmov_logical r2._y__, r2.y, r6.x, r3.x
        iadd r3.__z_, r2.y, r2.w
        ult r2._y__, r3.z, r2.w
        cmov_logical r2._y__, r2.y, r6.y, r3.y
        
        dcl_literal l49, 0x00000000, 0x00000000, 0x0000A2F9, 0x0000836E
        umul r2.__zw, l49, r1.w
        
        dcl_literal l50, 0x0000A2F9, 0x0000836E, 0x00000000, 0x00000000
        umul r3.xy__, l50, r2.x
        
        dcl_literal l51, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r1.___w, r3.y, l51
        
        dcl_literal l52, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.x___, r2.w, l52
        iadd r1.___w, r1.w, r2.x
        iadd r1.___w, r3.x, r1.w
        
        dcl_literal l53, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.x___, r1.w, l53
        iadd r2.x___, r2.z, r2.x
        
        dcl_literal l54, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__z_, r2.w, l54
        iadd r2.x___, r2.x, r2.z
        
        dcl_literal l55, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r1.___w, r1.w, l55
        
        dcl_literal l56, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.__z_, r3.y, l56
        ior r1.___w, r1.w, r2.z
        iadd r2._y__, r2.y, r1.w
        ult r1.___w, r2.y, r1.w
        
        dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r2.x, l57
        cmov_logical r1.___w, r1.w, r2.z, r2.x
        
        dcl_literal l58, 0xFFFFFF89, 0x00000000, 0xFFFFFF8A, 0x00000000
        iadd r2.x_z_, r1.z, l58
        
        dcl_literal l59, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r6.x___, r2.x, l59
        
        dcl_literal l60, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishl r1.__z_, r6.x, l60
        iadd r1.__z_, r2.x, r1.z_neg(xyzw)
        
        dcl_literal l61, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.x___, l61, r6.x
        
        dcl_literal l62, 0x00000001, 0x00000002, 0x00000004, 0x00000008
        and r7, r2.x, l62
        inegate r2.___w, r7.x
        
        dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ushr r8.x___, r7.y, l63
        
        dcl_literal l64, 0x00000002, 0x00000002, 0x00000002, 0x00000002
        ushr r8._y__, r7.z, l64
        
        dcl_literal l65, 0x00000003, 0x00000003, 0x00000003, 0x00000003
        ushr r8.__z_, r7.w, l65
        inegate r7.xyz_, r8.xyzx
        
        dcl_literal l66, 0x00000010, 0x00000020, 0x00000040, 0x00000080
        and r8, r2.x, l66
        
        dcl_literal l67, 0x00000004, 0x00000004, 0x00000004, 0x00000004
        ushr r9.x___, r8.x, l67
        
        dcl_literal l68, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r9._yzw, r8.yyzw, l68
        inegate r8, r9
        and r2.x___, r1.w, r2.w
        and r3.xy__, r2.y, r7.xyxx
        ior r2.x___, r2.x, r3.x
        and r7._yzw, r3.zzzw, r7.yyzz
        ior r2.x___, r2.x, r7.y
        ior r2.x___, r7.w, r2.x
        and r9, r5.xxyy, r8.xyyz
        ior r2.x___, r2.x, r9.x
        ior r2.x___, r9.z, r2.x
        and r7._y_w, r5.z, r8.zzzw
        ior r2.x___, r2.x, r7.y
        and r2.___w, r4.x, r8.w
        ior r2.x___, r2.x, r2.w
        and r2.___w, r1.w, r7.x
        ior r2.___w, r3.y, r2.w
        ior r2.___w, r7.z, r2.w
        and r3.x___, r3.w, r8.x
        ior r2.___w, r2.w, r3.x
        ior r2.___w, r9.y, r2.w
        ior r2.___w, r9.w, r2.w
        ior r2.___w, r7.w, r2.w
        
        dcl_literal l69, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ushr r3.x___, l69, r1.z
        and r3.x___, r2.x, r3.x
        inegate r3._y__, r1.z
        
        dcl_literal l70, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
        iadd r6._y__, l70, r3.y
        
        dcl_literal l71, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ult r4._y__, l71, r1.z
        
        dcl_literal l72, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r1.__z_, r1.z, l72
        
        dcl_literal l73, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ushr r1.__z_, l73, r1.z
        and r1.__z_, r2.x, r1.z
        ior r1.__z_, r3.x, r1.z
        ushr r1.__z_, r1.z, r6.y
        ushr r2.x___, r3.x, r6.y
        
        dcl_literal l74, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        and r2.___w, r2.w, l74
        
        dcl_literal l75, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.___w, r2.w, l75
        ior r2.x___, r2.x, r2.w
        cmov_logical r7.__z_, r4.y, r1.z, r2.x
        
        dcl_literal l76, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r8.x___, r6.x, l76
        
        dcl_literal l77, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ishl r6.__z_, l77, r3.y
        
        dcl_literal l78, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r6.___w, r6.z, l78
        
        dcl_literal l79, 0x00000000, 0x00000020, 0x00000000, 0xFFFFFFFF
        mov r8._yzw, l79
        cmov_logical r6, r6.y, r6, r8
        
        dcl_literal l80, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r1.__z_, r6.y, l80
        
        dcl_literal l81, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r1.__z_, l81, r1.z
        
        dcl_literal l82, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r2.x___, r1.z, l82
        switch r6.x
        case  0
        and r3.x___, r1.w, r1.z
        
        dcl_literal l83, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000
        
        dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.xy__, r3.x, l83, l84
        if_logicalnz r3.y
            inegate r10.___w, r4.x
            
            dcl_literal l85, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r10._y__, r5.y_neg(xyzw), l85
            
            dcl_literal l86, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
            iadd r6.xy__, r5.zxzz_neg(xyzw), l86
            
            dcl_literal l87, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
            iadd r11._yz_, r3.zzwz_neg(xyzw), l87
            
            dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r11.x___, r2.y_neg(xyzw), l88
            and r3._y__, r1.w, r6.w
            iadd r3._y__, r6.w, r3.y_neg(xyzw)
            mov r10.x___, r6.y
            mov r10.__z_, r6.x
        else
            mov r10.xyz_, r5.xyzx
            mov r10.___w, r4.x
            mov r11.x___, r2.y
            mov r11._yz_, r3.zzwz
            mov r3._y__, r1.w
        endif
        and r8.x___, r2.x, r3.y
        mov r8._yzw, r11.xxyz
        mov r9, r10
        mov r2.___w, r3.x
        break
        case  1
        and r3.x___, r2.y, r1.z
        
        dcl_literal l89, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000
        
        dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.xy__, r3.x, l89, l90
        if_logicalnz r3.y
            inegate r10.___w, r4.x
            
            dcl_literal l91, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r10._y__, r5.y_neg(xyzw), l91
            
            dcl_literal l92, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
            iadd r6.xy__, r5.zxzz_neg(xyzw), l92
            
            dcl_literal l93, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
            iadd r11._yz_, r3.wwzw_neg(xyzw), l93
            and r3._y__, r2.y, r6.w
            iadd r3._y__, r6.w, r3.y_neg(xyzw)
            mov r10.x___, r6.y
            mov r10.__z_, r6.x
            mov r11.xy__, r11.zyzz
        else
            mov r10.xyz_, r5.xyzx
            mov r10.___w, r4.x
            mov r11.xy__, r3.zwzz
            mov r3._y__, r2.y
        endif
        and r11.__z_, r2.x, r3.y
        
        dcl_literal l94, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.___w, l94
        mov r8, r11.wzxy
        mov r9, r10
        mov r2.___w, r3.x
        break
        case  2
        and r3.x___, r3.z, r1.z
        
        dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l95, l96
        inegate r10.___w, r4.x
        
        dcl_literal l97, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10.xyz_, r5.xyzx_neg(xyzw), l97
        
        dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r6._y__, r3.w_neg(xyzw), l98
        and r4._y__, r3.z, r6.w
        iadd r6.x___, r6.w, r4.y_neg(xyzw)
        mov r5.___w, r4.x
        cmov_logical r10, r3.x, r10, r5
        cmov_logical r11._yz_, r3.x, r6.xxyx, r3.zzwz
        and r11.x___, r2.x, r11.y
        
        dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.___w, l99
        mov r8, r11.wwxz
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  3
        and r3.x___, r3.w, r1.z
        
        dcl_literal l100, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l100, l101
        inegate r10.___w, r4.x
        
        dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10.xyz_, r5.xyzx_neg(xyzw), l102
        and r4._y__, r3.w, r6.w
        iadd r4._y__, r6.w, r4.y_neg(xyzw)
        mov r11.xyz_, r5.xyzx
        mov r11.___w, r4.x
        cmov_logical r10, r3.x, r10, r11
        cmov_logical r3.x___, r3.x, r4.y, r3.w
        and r11.___w, r2.x, r3.x
        
        dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.xyz_, l103
        mov r8, r11
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  4
        and r3.x___, r5.x, r1.z
        
        dcl_literal l104, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l104, l105
        inegate r10.___w, r4.x
        
        dcl_literal l106, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10._yz_, r5.yyzy_neg(xyzw), l106
        and r4._y__, r5.x, r6.w
        iadd r10.x___, r6.w, r4.y_neg(xyzw)
        mov r11.xyz_, r5.xyzx
        mov r11.___w, r4.x
        cmov_logical r10, r3.x, r10, r11
        and r3.x___, r2.x, r10.x
        
        dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l107
        mov r9._yzw, r10.yyzw
        mov r9.x___, r3.x
        mov r2.___w, r3.y
        break
        case  5
        and r3.x___, r5.y, r1.z
        
        dcl_literal l108, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l109, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l108, l109
        inegate r10.__z_, r4.x
        
        dcl_literal l110, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r10._y__, r5.z_neg(xyzw), l110
        and r4._y__, r5.y, r6.w
        iadd r10.x___, r6.w, r4.y_neg(xyzw)
        mov r4.__zw, r5.yyyz
        cmov_logical r10.x_zw, r3.x, r10.xxyz, r4.zzwx
        and r10._y__, r2.x, r10.x
        
        dcl_literal l111, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r10.x___, l111
        
        dcl_literal l112, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l112
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  6
        and r3.x___, r5.z, r1.z
        
        dcl_literal l113, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l114, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l113, l114
        inegate r4.__z_, r4.x
        and r4.___w, r5.z, r6.w
        iadd r4._y__, r6.w, r4.w_neg(xyzw)
        mov r6.x___, r5.z
        mov r6._y__, r4.x
        cmov_logical r10._yz_, r3.x, r4.yyzy, r6.xxyx
        and r10.x___, r2.x, r10.y
        
        dcl_literal l115, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r10.___w, l115
        
        dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l116
        mov r9, r10.wwxz
        mov r2.___w, r3.y
        break
        case  7
        and r1.__z_, r4.x, r1.z
        
        dcl_literal l117, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.x___, r1.z, l117, l118
        and r3._y__, r4.x, r6.w
        iadd r3._y__, r6.z, r3.y_neg(xyzw)
        cmov_logical r1.__z_, r1.z, r3.y, r4.x
        and r6.___w, r2.x, r1.z
        
        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r6.xyz_, l119
        
        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l120
        mov r9, r6
        mov r2.___w, r3.x
        break
        default
        mov r8.__zw, r3.zzzw
        mov r8._y__, r2.y
        mov r8.x___, r1.w
        mov r9.___w, r4.x
        mov r9.xyz_, r5.xyzx
        
        dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r2.___w, l121
        break
        endswitch
        mov r3, r8
        mov r4, r9
        mov r1.__z_, r2.w
        
        dcl_literal l122, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r5, r3, l122
        
        dcl_literal l123, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r5, r5, l123
        
        dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r6, r5, l124
        
        dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r6, r6, l125
        
        dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r6, r6, l126
        
        dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r6, l127, r6_neg(xyzw)
        
        dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r6, r6, l128
        
        dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r6, r6, l129
        
        dcl_literal l130, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r6, r6, l130
        
        dcl_literal l131, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r5, r5, r6, l131
        
        dcl_literal l132, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r6, r3, l132
        
        dcl_literal l133, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r8, r6, l133
        
        dcl_literal l134, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r8, r8, l134
        
        dcl_literal l135, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l135
        
        dcl_literal l136, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r8, l136, r8_neg(xyzw)
        
        dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l137
        
        dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r8, r8, l138
        
        dcl_literal l139, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r8, r8, l139
        
        dcl_literal l140, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r6, r6, r8, l140
        
        dcl_literal l141, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ieq r8, r5, l141
        iadd r6, r5, r6
        cmov_logical r5, r8, r6, r5
        
        dcl_literal l142, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6, r4, l142
        
        dcl_literal l143, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r6, r6, l143
        
        dcl_literal l144, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r8, r6, l144
        
        dcl_literal l145, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r8, r8, l145
        
        dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l146
        
        dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r8, l147, r8_neg(xyzw)
        
        dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l148
        
        dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r8, r8, l149
        
        dcl_literal l150, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r8, r8, l150
        
        dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r6, r6, r8, l151
        
        dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r8, r4, l152
        
        dcl_literal l153, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r9, r8, l153
        
        dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r9, r9, l154
        
        dcl_literal l155, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r9, r9, l155
        
        dcl_literal l156, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r9, l156, r9_neg(xyzw)
        
        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r9, r9, l157
        
        dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r9, r9, l158
        
        dcl_literal l159, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r9, r9, l159
        
        dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r8, r8, r9, l160
        
        dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ieq r9, r6, l161
        iadd r8, r6, r8
        cmov_logical r6, r9, r8, r6
        
        dcl_literal l162, 0x00000020, 0x00000020, 0x00000020, 0x00000020
        ieq r1.___w, r5.x, l162
        
        dcl_literal l163, 0x00000020, 0x00000040, 0x00000000, 0x00000060
        iadd r2.xy_w, r5.yzyw, l163
        cmov_logical r1.___w, r1.w, r2.x, r5.x
        
        dcl_literal l164, 0x00000040, 0x00000040, 0x00000040, 0x00000040
        ieq r2.x___, r1.w, l164
        cmov_logical r1.___w, r2.x, r2.y, r1.w
        
        dcl_literal l165, 0x00000060, 0x00000060, 0x00000060, 0x00000060
        ieq r2.x___, r1.w, l165
        cmov_logical r1.___w, r2.x, r2.w, r1.w
        
        dcl_literal l166, 0x00000080, 0x00000080, 0x00000080, 0x00000080
        ieq r2.x___, r1.w, l166
        
        dcl_literal l167, 0x00000080, 0x000000A0, 0x000000C0, 0x000000E0
        iadd r5, r6, l167
        cmov_logical r1.___w, r2.x, r5.x, r1.w
        
        dcl_literal l168, 0x000000A0, 0x000000A0, 0x000000A0, 0x000000A0
        ieq r2.x___, r1.w, l168
        cmov_logical r1.___w, r2.x, r5.y, r1.w
        
        dcl_literal l169, 0x000000C0, 0x000000C0, 0x000000C0, 0x000000C0
        ieq r2.x___, r1.w, l169
        cmov_logical r1.___w, r2.x, r5.z, r1.w
        
        dcl_literal l170, 0x000000E0, 0x000000E0, 0x000000E0, 0x000000E0
        ieq r2.x___, r1.w, l170
        cmov_logical r1.___w, r2.x, r5.w, r1.w
        
        dcl_literal l171, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishr r2.x___, r1.w, l171
        
        dcl_literal l172, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishl r2._y__, r2.x, l172
        iadd r2._y__, r1.w, r2.y_neg(xyzw)
        iadd r1.___w, r2.z, r1.w_neg(xyzw)
        
        dcl_literal l173, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.x___, l173, r2.x
        
        dcl_literal l174, 0x00000001, 0x00000002, 0x00000004, 0x00000008
        and r5, r2.x, l174
        inegate r2.__z_, r5.x
        
        dcl_literal l175, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ushr r6.x__w, r5.y, l175
        
        dcl_literal l176, 0x00000002, 0x00000002, 0x00000002, 0x00000002
        ushr r6._y__, r5.z, l176
        
        dcl_literal l177, 0x00000003, 0x00000003, 0x00000003, 0x00000003
        ushr r6.__z_, r5.w, l177
        inegate r5, r6
        
        dcl_literal l178, 0x00000010, 0x00000020, 0x00000040, 0x00000080
        and r6, r2.x, l178
        
        dcl_literal l179, 0x00000004, 0x00000004, 0x00000004, 0x00000004
        ushr r8.x___, r6.x, l179
        
        dcl_literal l180, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r8._y__, r6.y, l180
        
        dcl_literal l181, 0x00000006, 0x00000006, 0x00000006, 0x00000006
        ushr r8.__z_, r6.z, l181
        
        dcl_literal l182, 0x00000007, 0x00000007, 0x00000007, 0x00000007
        ushr r8.___w, r6.w, l182
        inegate r6, r8
        and r2.x__w, r3.xxxy, r2.z
        and r8, r3.yzwz, r5
        ior r2.x__w, r2.xxxw, r8.xxxw
        ior r2.x___, r8.y, r2.x
        ior r2.x___, r8.z, r2.x
        and r8, r4, r6
        ior r2.x___, r2.x, r8.x
        ior r2.x___, r8.y, r2.x
        ior r2.x___, r8.z, r2.x
        ior r8._y_w, r8.w, r2.x
        and r2.x___, r3.w, r5.y
        ior r2.x___, r2.w, r2.x
        and r2.___w, r4.x, r5.z
        ior r2.x___, r2.x, r2.w
        and r9.xyz_, r4.yzwy, r6.xyzx
        ior r2.x___, r2.x, r9.x
        ior r2.x___, r9.y, r2.x
        ior r8.x___, r9.z, r2.x
        
        dcl_literal l183, 0x00000008, 0x00000008, 0x00000008, 0x00000008
        ult r2.x___, r2.y, l183
        if_logicalnz r2.x
            ishl r2.x___, r8.y, r2.y
            ushr r2.x___, r2.x, r2.y
            
            dcl_literal l184, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            iadd r2.___w, l184, r2.y_neg(xyzw)
            ushr r8.___w, r2.x, r2.w
            
            dcl_literal l185, 0x00000018, 0x00000018, 0x00000018, 0x00000018
            iadd r3._y__, r2.y, l185
            ishl r2.x___, r2.x, r3.y
            ushr r3.x___, r2.x, r3.y
        else
            and r2.x___, r3.z, r2.z
            and r2.__z_, r3.w, r5.w
            ior r2.x___, r2.x, r2.z
            and r2.__zw, r4.xxxy, r5.yyyz
            ior r2.x___, r2.x, r2.z
            ior r2.x___, r2.w, r2.x
            and r2.__zw, r4.zzzw, r6.xxxy
            ior r2.x___, r2.x, r2.z
            ior r4._y__, r2.w, r2.x
            
            dcl_literal l186, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            ult r2.x___, l186, r2.y
            
            dcl_literal l187, 0xFFFFFFF8, 0x00000000, 0xFFFFFFF7, 0x00000000
            iadd r4.x_z_, r2.y, l187
            ishl r2.__z_, r8.y, r4.x
            ishl r2.___w, r8.x, r4.z
            
            dcl_literal l188, 0x00000028, 0x00000028, 0x00000028, 0x00000028
            iadd r2._y__, l188, r2.y_neg(xyzw)
            ushr r2._y__, r8.x, r2.y
            ior r4.___w, r2.z, r2.y
            ushr r4.x___, r2.w, r4.z
            
            dcl_literal l189, 0x00000000, 0x00000000, 0x00000000, 0x00000000
            mov r8.__z_, l189
            cmov_logical r8, r2.x, r4.yxzw, r8
            mov r3.xy__, r8.yzyy
        endif
        
        dcl_literal l190, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r2.xy__, r8.w, l190
        
        dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r2.___w, r8.w, l191
        
        dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r2.___w, r2.w, l192
        
        dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.___w, r2.w, l193
        
        dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r2.___w, l194, r2.w_neg(xyzw)
        
        dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.___w, r2.w, l195
        
        dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.___w, r2.w, l196
        inegate r8._y__, r2.w
        
        dcl_literal l197, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        mov r2.__z_, l197
        cmov_logical r2.xy__, r2.x, r2.yzyy, r8.wyww
        iadd r2._y__, r1.w, r2.y
        
        dcl_literal l198, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        iadd r2._y__, r2.y, l198
        
        dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r2._y__, r2.y, l199
        ior r7.x___, r2.x, r2.y
        
        dcl_literal l200, 0x00000008, 0x00000008, 0x00000008, 0x00000008
        ult r2.x___, r3.y, l200
        if_logicalnz r2.x
            ishl r2.x___, r3.x, r3.y
            ushr r2.x___, r2.x, r3.y
            
            dcl_literal l201, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            iadd r2._y__, l201, r3.y_neg(xyzw)
            ushr r2.x___, r2.x, r2.y
        else
            
            dcl_literal l202, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            ult r2.__z_, l202, r3.y
            
            dcl_literal l203, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
            iadd r2.___w, r3.y, l203
            ishl r2.___w, r3.x, r2.w
            
            dcl_literal l204, 0x00000028, 0x00000028, 0x00000028, 0x00000028
            iadd r3._y__, l204, r3.y_neg(xyzw)
            ushr r3._y__, r8.x, r3.y
            ior r2.___w, r2.w, r3.y
            cmov_logical r2.x___, r2.z, r2.w, r3.x
        endif
        
        dcl_literal l205, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8
        iadd r1.___w, r1.w, l205
        
        dcl_literal l206, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r3.xy__, r2.x, l206
        
        dcl_literal l207, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r2.__z_, r2.x, l207
        
        dcl_literal l208, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r2.__z_, r2.z, l208
        
        dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.__z_, r2.z, l209
        
        dcl_literal l210, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r2.__z_, l210, r2.z_neg(xyzw)
        
        dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.__z_, r2.z, l211
        
        dcl_literal l212, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.__z_, r2.z, l212
        inegate r2._y__, r2.z
        
        dcl_literal l213, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        mov r3.__z_, l213
        cmov_logical r2._yz_, r3.x, r3.yyzy, r2.xxyx
        iadd r1.___w, r1.w, r2.z
        
        dcl_literal l214, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        iadd r1.___w, r1.w, l214
        
        dcl_literal l215, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.___w, r1.w, l215
        ior r1.___w, r2.y, r1.w
        
        dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r7._y__, r2.x, r1.w, l216
        
        dcl_literal l217, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r7.z, l217
        mov r2.xy__, r7.xyxx_neg(xyzw)
        cmov_logical r2.xyz_, r1.z, r2.xyzx, r7.xyzx
        
        dcl_literal l218, 0x00000000, 0x00000000, 0xFFFFF000, 0x00000003
        and r1.__zw, r2.xxxz, l218
        add r2.__z_, r2.x, r1.z_neg(xyzw)
        
        dcl_literal l219, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
        mul_ieee r1.x___, r2.x, l219
        
        dcl_literal l220, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000
        mad_ieee r2.x___, r1.z, l220, r1.x_neg(xyzw)
        
        dcl_literal l221, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22
        mad_ieee r1.__z_, r1.z, l221, r2.x
        
        dcl_literal l222, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000
        mad_ieee r1.__z_, r2.z, l222, r1.z
        
        dcl_literal l223, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22
        mad_ieee r1.__z_, r2.z, l223, r1.z
        utof r0.___w, r1.w
        
        dcl_literal l224, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
        mad_ieee r1._y__, r2.y, l224, r1.z
    endif
    mul_ieee r1.__zw, r1.xxxy, r1.x
    mul_ieee r2.x___, r1.x, r1.z
    
    dcl_literal l225, 0x00000000, 0x2F2EC9D3, 0xAD47D74E, 0x00000000
    
    dcl_literal l226, 0x00000000, 0xB2D72F34, 0x310F74F6, 0x00000000
    mad_ieee r2._yz_, r1.z, l225, l226
    
    dcl_literal l227, 0x00000000, 0x3636DF25, 0xB492923A, 0x00000000
    mad_ieee r2._yz_, r1.z, r2.yyzy, l227
    
    dcl_literal l228, 0x00000000, 0xB95009D4, 0x37D00AE2, 0x00000000
    mad_ieee r2._yz_, r1.z, r2.yyzy, l228
    
    dcl_literal l229, 0x00000000, 0x3C088887, 0xBAB60B60, 0x00000000
    mad_ieee r2._yz_, r1.z, r2.yyzy, l229
    mul_ieee r2._y__, r2.x, r2.y
    
    dcl_literal l230, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r2._y__, r1.y, l230, r2.y_neg(xyzw)
    mad_ieee r1._y__, r1.z, r2.y, r1.y_neg(xyzw)
    
    dcl_literal l231, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB
    mad_ieee r1._y__, r2.x_neg(xyzw), l231, r1.y
    add r1._y__, r1.x, r1.y_neg(xyzw)
    
    dcl_literal l232, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB
    mad_ieee r2.x___, r1.z, r2.z, l232
    mul_ieee r2._y__, r1.z, r1.z
    
    dcl_literal l233, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r1.x___, r1.x, l233
    
    dcl_literal l234, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A
    ige r2.__z_, r1.x, l234
    
    dcl_literal l235, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ige r2.___w, l235, r1.x
    and r2.__z_, r2.z, r2.w
    
    dcl_literal l236, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000
    iadd r2.___w, r1.x, l236
    and r2.__z_, r2.z, r2.w
    
    dcl_literal l237, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ilt r1.x___, l237, r1.x
    
    dcl_literal l238, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000
    cmov_logical r1.x___, r1.x, l238, r2.z
    
    dcl_literal l239, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r1.__z_, r1.z, l239, r1.x_neg(xyzw)
    
    dcl_literal l240, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r1.x___, r1.x_neg(xyzw), l240
    mad_ieee r1.___w, r2.x, r2.y, r1.w_neg(xyzw)
    add r1.__z_, r1.z, r1.w_neg(xyzw)
    add r1.x___, r1.x, r1.z_neg(xyzw)
    
    dcl_literal l241, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
    eq r2, r0.w, l241
    and r0.___w, r1.x, r2.x
    cmov_logical r0.___w, r2.y, r1.y_neg(xyzw), r0.w
    cmov_logical r0.___w, r2.z, r1.x_neg(xyzw), r0.w
    cmov_logical r0.__z_, r2.w, r1.y, r0.w
endif
dcl_literal l242, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.y, l242
dcl_literal l243, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.__z_, r0.w, l243, r0.z
dcl_literal l244, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l244, r0.y
dcl_literal l245, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l245
cmov_logical r0.x___, r0.y, r0.x, r0.z
mov out0, r0
mend
__cross_4f32
mdef(193)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r2, r0
mov r0, r1
mov r1, r2
dcl_literal l1, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0x00000000
and r2.xyz_, r1.yzxy, l1
mul_ieee r3.xyz_, r0.yzxy, r1.zxyz
dcl_literal l2, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0x00000000
and r4.xyz_, r0.yzxy, l2
mad_ieee r5.xyz_, r4.xyzx, r2.yzxy, r3.xyzx_neg(xyzw)
add r6.xyz_, r1.yzxy, r2.xyzx_neg(xyzw)
mad_ieee r5.xyz_, r4.xyzx, r6.yzxy, r5.xyzx
add r4.xyz_, r0.yzxy, r4.xyzx_neg(xyzw)
mov r0.xyz_, r0.zxyz_neg(xyzw)
mad_ieee r5.xyz_, r4.xyzx, r2.yzxy, r5.xyzx
mad_ieee r4.xyz_, r4.xyzx, r6.yzxy, r5.xyzx
mul_ieee r1.xyz_, r0.xyzx, r1.yzxy
dcl_literal l3, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0x00000000
and r5.xyz_, r0.xyzx, l3
add r0.xyz_, r0.xyzx, r5.xyzx_neg(xyzw)
mad_ieee r7.xyz_, r5.xyzx, r2.xyzx, r1.xyzx_neg(xyzw)
mad_ieee r5.xyz_, r5.xyzx, r6.xyzx, r7.xyzx
mad_ieee r2.xyz_, r0.xyzx, r2.xyzx, r5.xyzx
mad_ieee r0.xyz_, r0.xyzx, r6.xyzx, r2.xyzx
add r0.xyz_, r4.xyzx, r0.xyzx
add r2.xyz_, r3.xyzx, r1.xyzx
add r4.xyz_, r3.xyzx, r2.xyzx_neg(xyzw)
add r4.xyz_, r1.xyzx, r4.xyzx
add r5.xyz_, r1.xyzx, r2.xyzx_neg(xyzw)
lt r1.xyz_, r1.xyzx_abs, r3.xyzx_abs
add r3.xyz_, r3.xyzx, r5.xyzx
cmov_logical r1.xyz_, r1.xyzx, r4.xyzx, r3.xyzx
add r0.xyz_, r0.xyzx, r1.xyzx
add r0.xyz_, r2.xyzx, r0.xyzx
mov out0, r0
mend
__ddiv_f64
mdef(194)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l9, 12, 2, 0x7ff00000, 0x00100000
ixor r2.x, r0.y, r1.y
dadd r0.xy, r0.xy, r0.00
dadd r1.xy, r1.xy, r1.00
ige r3.x, r0.y_abs, l9.z
ige r3.y, r1.y_abs, l9.z
ilt r3.z, r0.y_abs, l9.w
ilt r3.w, r1.y_abs, l9.w
ixor r2.x, r2.x_abs, r2.x
dfrexp r20, r0
dfrexp r21, r1
ishl r0.z, r0.y, l9.x
ishl r1.z, r1.y, l9.x
ior r0.z, r0.z, r0.x
ior r1.z, r1.z, r1.x
ieq r0.z, r0.z, r0.0
ieq r1.z, r1.z, r0.0
mov r20.w, r20.wwww_abs
mov r21.w, r21.wwww_abs
dcl_literal l2, 0x16f0068e, 0x40075048, 0x00000000, 0xc0000000 
dmad r22.xy, l2.zw, r21.zw, l2.xy
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dcl_literal l6, 0x80000000, 0x7fffffff, 0xf8000000, 0xffffffff 
and r24.xy, r21.zw, l6.zwzw
dadd r25.xy, r21.zw, r24.xy_neg(yw)
dmul r26.xy, r22.xy, r20.zw
and r26.xy, r26.xy, l6.zwzw
dmad r20.zw, r26.xy, r24.xy_neg(yw), r20.zw
dmad r20.zw, r26.xy, r25.xy_neg(yw), r20.zw
dmul r27.xy, r22.xy, r20.zw
and r27.xy, r27.xy, l6.zwzw
dmad r20.zw, r27.xy, r24.xy_neg(yw), r20.zw
dmad r20.zw, r27.xy, r25.xy_neg(yw), r20.zw
dmul r28.xy, r22.xy, r20.zw
and r28.xy, r28.xy, l6.zwzw
dmad r20.zw, r28.xy, r24.xy_neg(yw), r20.zw
dmad r20.zw, r28.xy, r25.xy_neg(yw), r20.zw
dmul r29.xy, r22.xy, r20.zw
dadd r25.xy, r26.xy, r27.xy
dadd r26.xy, r25.xy, r26.xy_neg(yw)
dadd r27.xy, r27.xy, r26.xy_neg(yw)
dadd r26.xy, r27.xy, r28.xy
dadd r27.xy, r26.xy, r27.xy_neg(yw)
dadd r28.xy, r28.xy, r27.xy_neg(yw)
dadd r27.xy, r28.xy, r29.xy
dadd r28.xy, r27.xy, r28.xy_neg(yw)
dadd r28.xy, r29.xy, r28.xy_neg(yw)
dadd r24.xy, r25.xy, r26.xy
dadd r25.xy, r24.xy, r25.xy_neg(yw)
dadd r26.xy, r26.xy, r25.xy_neg(yw)
dadd r25.xy, r26.xy, r27.xy
dadd r26.xy, r25.xy, r26.xy_neg(yw)
dadd r27.xy, r27.xy, r26.xy_neg(yw)
dadd r26.xy, r27.xy, r28.xy
dadd r25.xy, r25.xy, r26.xy
ior r25.x, r25.x, l6.w
dadd r10.xy, r24.xy, r25.xy
imad r4.x, r3.x, l9.y, r3.z
imad r4.y, r3.y, l9.y, r3.w
imad r4.x, r4.x, l9.y, r0.z
imad r4.y, r4.y, l9.y, r1.z
ishl r4.x, r4.x, l9.y
ishl r4.y, r4.y, l9.y
dcl_literal l7, 0x80008000, 0x66ff66ff, 0x26f326f3, 52
dcl_literal l8, 0x0048c000, 0x00123000, 0x80000000, 31
ushr r4.z, l8.x, r4.x
ushr r4.w, l8.y, r4.y
ior r4.w, r4.w, r4.z
ishl r5.x, l7.x, r4.w
ishl r5.y, l7.y, r4.w
ishl r5.z, l7.z, r4.w
ishr r5.x, r5.x, l8.w
ishr r5.y, r5.y, l8.w
ishr r5.z, r5.z, l8.w
ishl r5.y, r5.y, l7.w
inegate r21.y, r21.y
iadd r20.y, r20.y, r21.y
dldexp r10.xy, r10.xy, r20.y
and r10.xy, r10.xy, r5.xx
ior r10.y, r10.y, r5.y_abs
ior r10.x, r10.x, r5.z
ixor r10.y, r10.y_abs, r2.x
mov r0.xy, r10.xy
mov out0, r0
mend
__ddiv_f64_fma
mdef(195)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l9, 12, 2, 0x7ff00000, 0x00100000
ixor r2.x, r0.y, r1.y
ige r3.x, r0.y_abs, l9.z
ige r3.y, r1.y_abs, l9.z
ilt r3.z, r0.y_abs, l9.w
ilt r3.w, r1.y_abs, l9.w
ixor r2.x, r2.x_abs, r2.x
dfrexp r20, r0
dfrexp r21, r1
ishl r0.z, r0.y, l9.x
ishl r1.z, r1.y, l9.x
ior r0.z, r0.z, r0.x
ior r1.z, r1.z, r1.x
ieq r0.z, r0.z, r0.0
ieq r1.z, r1.z, r0.0
mov r20.w, r20.wwww_abs
mov r21.w, r21.wwww_abs
dcl_literal l1, 0x00000000, 0x3ff00000, 0x00000001, 0 
dcl_literal l2, 0x16f0068e, 0x40075048, 0x00000000, 0xc0000000 
dcl_literal l3, 0x00040000, 0x00000300, 0, 0 
drcp_zeroop(zero) r22.xy, r21.zw
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dmad r23.xy, r21.zw, r22.xy, l2.zw
dmul r22.xy, r22.xy, r23.xy_neg(yw)
dcl_literal l6, 0x80000000, 0x7fffffff, 0xf8000000, 0xffffffff 
dmul r10.xy, r22.xy, r20.zw
dmad r23.xy, r21.zw, r10.xy_neg(yw), r20.zw
dmad r10.xy, r22.xy, r23.xy, r10.xy
dmad r23.xy, r21.zw, r22.xy_neg(yw), l1.xy
dmul r23.xy, r23.xy, r22.xy
dmad r24.xy, r21.zw, r10.xy_neg(yw), r20.zw
dmul r25.xy, r23.xy, r24.xy
dmad r23.xy, r22.xy, r24.xy, r25.xy
ior r23.y, r23.y, l3.x
inegate r21.y, r21.y
iadd r20.x, r20.y, r21.y
imin r20.y, r20.x, l3.y
inegate r21.y, r20.y
iadd r20.x, r20.x, r21.y
dldexp r11.xy, r10.xy, r20.y
dldexp r12.xy, r11.xy, r21.y
dadd r10.xy, r10.xy, r12.xy_neg(yw)
dadd r10.xy, r10.xy, r23.xy
dldexp r12.xy, l1.xy, r20.y
dmad r10.xy, r10.xy, r12.xy, r11.xy
dldexp r10.xy, r10.xy, r20.x
imad r4.x, r3.x, l9.y, r3.z
imad r4.y, r3.y, l9.y, r3.w
imad r4.x, r4.x, l9.y, r0.z
imad r4.y, r4.y, l9.y, r1.z
ishl r4.x, r4.x, l9.y
ishl r4.y, r4.y, l9.y
dcl_literal l7, 0x80008000, 0x66ff66ff, 0x26f326f3, 52
dcl_literal l8, 0x0048c000, 0x00123000, 0x80000000, 31
ushr r4.z, l8.x, r4.x
ushr r4.w, l8.y, r4.y
ior r4.w, r4.w, r4.z
ishl r5.x, l7.x, r4.w
ishl r5.y, l7.y, r4.w
ishl r5.z, l7.z, r4.w
ishr r5.x, r5.x, l8.w
ishr r5.y, r5.y, l8.w
ishr r5.z, r5.z, l8.w
ishl r5.y, r5.y, l7.w
and r10.xy, r10.xy, r5.xx
ior r10.y, r10.y, r5.y_abs
ior r10.x, r10.x, r5.z
ixor r10.y, r10.y_abs, r2.x
mov r0.xy, r10.xy
mov out0, r0
mend
__degrees_f32
mdef(196)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x42652EE1, 0x00000000, 0x00000000, 0x00000000
mul_ieee r0.x___, r0.x, l0
mov out0, r0
mend
__distance_2f32
mdef(197)_out(1)_in(2)
mov r0, in0
mov r1, in1
add r2._yz_, r0.xxyx, r1.xxyx_neg(xyzw)
dp2_ieee r2._y__, r2.yzyy, r2.yzyy
sqrt_vec r0.x___, r2.y
mov out0, r0
mend
__distance_4f32
mdef(198)_out(1)_in(2)
mov r0, in0
mov r1, in1
add r0, r0, r1_neg(xyzw)
dp2_ieee r0.x___, r0.xyxx, r0.xyxx
mad_ieee r0.x___, r0.z, r0.z, r0.x
mad_ieee r0.x___, r0.w, r0.w, r0.x
sqrt_vec r0.x___, r0.x
mov out0, r0
mend
__distance_f32
mdef(199)_out(1)_in(2)
mov r0, in0
mov r1, in1
add r2._y__, r0.x, r1.x_neg(xyzw)
mov r0.x___, r2.y_abs
mov out0, r0
mend
__dot_2f32
mdef(200)_out(1)_in(2)
mov r0, in0
mov r1, in1
dp2_ieee r0.x___, r1.xyxx, r0.xyxx
mov out0, r0
mend
__dot_3f32
mdef(201)_out(1)_in(2)
mov r0, in0
mov r1, in1
dp2_ieee r0.x___, r1.xyxx, r0.xyxx
mad_ieee r0.x___, r1.z, r0.z, r0.x
mov out0, r0
mend
__dot_4f32
mdef(202)_out(1)_in(2)
mov r0, in0
mov r1, in1
dp2_ieee r0.x___, r1.xyxx, r0.xyxx
mad_ieee r0.x___, r1.z, r0.z, r0.x
mad_ieee r0.x___, r1.w, r0.w, r0.x
mov out0, r0
mend
__dot_f32
mdef(203)_out(1)_in(2)
mov r0, in0
mov r1, in1
mul_ieee r0.x___, r1.x, r0.x
mov out0, r0
mend
__erfc_f32
mdef(204)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.__z_, r0.x_neg(xyzw), l1
mul_ieee r0.___w, r0.x, r0.x
dcl_literal l2, 0xB7C756B1, 0xB684E21A, 0x00000000, 0x00000000
dcl_literal l3, 0xBBBD1489, 0x390AEE49, 0x00000000, 0x00000000
mad_ieee r1.xy__, r0.w, l2, l3
dcl_literal l4, 0xBCE9528F, 0x3BA68116, 0x00000000, 0x00000000
mad_ieee r1.xy__, r0.w, r1.xyxx, l4
dcl_literal l5, 0xBEA66BEB, 0x3D852A63, 0x00000000, 0x00000000
mad_ieee r1.xy__, r0.w, r1.xyxx, l5
dcl_literal l6, 0x3E0375D4, 0x3ECBBBCE, 0x00000000, 0x00000000
mad_ieee r1.xy__, r0.w, r1.xyxx, l6
dcl_literal l7, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r0.___w, r0.w, r1.y, l7
div_zeroop(infinity) r0.___w, r1.x, r0.w
mad_ieee r1.x___, r0.x, r0.w, r0.x
dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.x___, r1.x_neg(xyzw), l8
dcl_literal l9, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l10, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
add r1._y__, r0.x, l9
mad_ieee r0.___w, r0.x, r0.w, r1.y
add r0.___w, r0.w_neg(xyzw), l10
mov r1._y__, r0.x_abs
mul_ieee r1.__z_, r1.y, r1.y
dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r1.__z_, l11, r1.z
dcl_literal l12, 0xC11D077E, 0xBD777F97, 0xC3F1C275, 0xC1B38712
dcl_literal l13, 0xC2A2932B, 0x40D23F7C, 0xC480230B, 0x43ED43A7
mad_ieee r2, r1.z, l12, l13
dcl_literal l14, 0xC3389AE7, 0x42D9451F, 0xC41F6441, 0x451F90CE
mad_ieee r2, r1.z, r2, l14
dcl_literal l15, 0xC322658C, 0x43D6810B, 0xC320A2EA, 0x4547FDBB
mad_ieee r2, r1.z, r2, l15
dcl_literal l16, 0xC2798057, 0x442158C9, 0xC18E104B, 0x44C01759
mad_ieee r2, r1.z, r2, l16
dcl_literal l17, 0xC128F022, 0x43D9486F, 0xBF4C9DD4, 0x43A2E571
mad_ieee r2, r1.z, r2, l17
dcl_literal l18, 0xBF31A0B7, 0x4309A863, 0xBC21A092, 0x41F2B459
mad_ieee r2, r1.z, r2, l18
dcl_literal l19, 0xBC21A093, 0x419D35CE, 0x00000000, 0x3F800000
mad_ieee r2.xy_w, r1.z, r2.xyxw, l19
dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r1.__z_, r1.z, r2.y, l20
div_zeroop(infinity) r1.__z_, r2.x, r1.z
div_zeroop(infinity) r1.___w, r2.z, r2.w
dcl_literal l21, 0x4036DB6D, 0x3F580000, 0x41E00000, 0x00000000
ilt r2.xyz_, r0.y, l21
cmov_logical r1.__z_, r2.x, r1.z, r1.w
dcl_literal l22, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r1.___w, r1.y, l22
dcl_literal l23, 0xBF100000, 0x41770000, 0x00000000, 0x00000000
mad_ieee r3.xy__, r1.w_neg(xyzw), r1.w, l23
dcl_literal l24, 0xC1800000, 0xC1800000, 0xC1800000, 0xC1800000
lt r2.x___, r3.x, l24
dcl_literal l25, 0x00000000, 0x00000000, 0x33F1AADE, 0x3F800000
mov r3.__zw, l25
cmov_logical r2.x__w, r2.x, r3.yyyz, r3.xxxw
dcl_literal l26, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r3.x___, r2.x, l26
dcl_literal l27, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l28, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r3.x___, r3.x, l27, l28
dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r3.x___, r2.x, l29, r3.x
round_z r3.x___, r3.x
dcl_literal l30, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r2.x___, r3.x_neg(xyzw), l30, r2.x
dcl_literal l31, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r3._y__, r3.x_neg(xyzw), l31, r2.x
mul_ieee r3.__z_, r3.y, r3.y
dcl_literal l32, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l33, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r3.___w, r3.z, l32, l33
dcl_literal l34, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r3.___w, r3.z, r3.w, l34
dcl_literal l35, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r3.___w, r3.z, r3.w, l35
dcl_literal l36, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3.___w, r3.z, r3.w, l36
mad_ieee r3.__z_, r3.z_neg(xyzw), r3.w, r3.y
mul_ieee r3._y__, r3.y, r3.z
dcl_literal l37, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r3.__z_, r3.z_neg(xyzw), l37
div_zeroop(infinity) r3._y__, r3.y, r3.z
dcl_literal l38, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r3._y__, r3.x, l38, r3.y_neg(xyzw)
add r2.x___, r2.x_neg(xyzw), r3.y
dcl_literal l39, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r2.x___, r2.x_neg(xyzw), l39
ftoi r3.x___, r3.x
dcl_literal l40, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF
and r3._yzw, r2.x, l40
if_logicalz r3.z
    itof r4.x___, r3.w
    
    dcl_literal l41, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r4.xy__, r4.x, l41
    
    dcl_literal l42, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4.x___, r4.x, l42
    iadd r4.x___, r4.x, r3.x
    
    dcl_literal l43, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4._y__, r4.y, l43
    
    dcl_literal l44, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r4.x___, l44, r4.x_neg(xyzw)
    
    dcl_literal l45, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.__z_, l45, r4.x
    
    dcl_literal l46, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r4.x___, r4.z, l46, r4.x
    
    dcl_literal l47, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.__z_, l47, r4.x
    ishr r4.___w, r4.y, r4.x
    inegate r4.x___, r4.x
    
    dcl_literal l48, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r4.x___, r4.x, l48
    iadd r4.x___, r4.y, r4.x
    cmov_logical r4.x___, r4.z, r4.w, r4.x
else
    
    dcl_literal l49, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r2.x___, r2.x, l49
    
    dcl_literal l50, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.__z_, r3.z, l50
    iadd r3.__z_, r3.z, r3.x
    
    dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3.x___, r3.x, l51
    iadd r2.x___, r2.x, r3.x
    
    dcl_literal l52, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3.x___, r3.z, l52
    
    dcl_literal l53, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.__z_, l53, r3.x
    
    dcl_literal l54, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2.x___, r3.z, l54, r2.x
    
    dcl_literal l55, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3.x___, l55, r3.x_neg(xyzw)
    
    dcl_literal l56, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.__z_, r3.w, l56
    
    dcl_literal l57, 0x00000000, 0x00000000, 0x00000017, 0x00000000
    ilt r4._yz_, l57, r3.x
    
    dcl_literal l58, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3.x___, r4.z, l58, r3.x
    ishr r3.x___, r3.z, r3.x
    cmov_logical r4.x___, r4.y, r3.x, r2.x
endif
ior r2.x___, r3.y, r4.x
add r3.x___, r1.y_neg(xyzw), r1.w
add r1.___w, r1.y, r1.w
mad_ieee r1.__z_, r3.x, r1.w, r1.z
dcl_literal l59, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r1.___w, r1.z, l59
dcl_literal l60, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l61, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r1.___w, r1.w, l60, l61
dcl_literal l62, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r1.___w, r1.z, l62, r1.w
round_z r1.___w, r1.w
dcl_literal l63, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r1.__z_, r1.w_neg(xyzw), l63, r1.z
dcl_literal l64, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r3.x___, r1.w_neg(xyzw), l64, r1.z
mul_ieee r3._y__, r3.x, r3.x
dcl_literal l65, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l66, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r3.__z_, r3.y, l65, l66
dcl_literal l67, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r3.__z_, r3.y, r3.z, l67
dcl_literal l68, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r3.__z_, r3.y, r3.z, l68
dcl_literal l69, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3.__z_, r3.y, r3.z, l69
mad_ieee r3._y__, r3.y_neg(xyzw), r3.z, r3.x
mul_ieee r3.x___, r3.x, r3.y
dcl_literal l70, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r3._y__, r3.y_neg(xyzw), l70
div_zeroop(infinity) r3.x___, r3.x, r3.y
dcl_literal l71, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r3.x___, r1.w, l71, r3.x_neg(xyzw)
add r1.__z_, r1.z_neg(xyzw), r3.x
dcl_literal l72, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.__z_, r1.z_neg(xyzw), l72
ftoi r3.x___, r1.w
dcl_literal l73, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF
and r3._yzw, r1.z, l73
if_logicalz r3.z
    itof r4.x___, r3.w
    
    dcl_literal l74, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r4.xy__, r4.x, l74
    
    dcl_literal l75, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4.x___, r4.x, l75
    iadd r4.x___, r4.x, r3.x
    
    dcl_literal l76, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4._y__, r4.y, l76
    
    dcl_literal l77, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r4.x___, l77, r4.x_neg(xyzw)
    
    dcl_literal l78, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.__z_, l78, r4.x
    
    dcl_literal l79, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r4.x___, r4.z, l79, r4.x
    
    dcl_literal l80, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.__z_, l80, r4.x
    ishr r4.___w, r4.y, r4.x
    inegate r4.x___, r4.x
    
    dcl_literal l81, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r4.x___, r4.x, l81
    iadd r4.x___, r4.y, r4.x
    cmov_logical r4.x___, r4.z, r4.w, r4.x
else
    
    dcl_literal l82, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r1.__z_, r1.z, l82
    
    dcl_literal l83, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.__z_, r3.z, l83
    iadd r3.__z_, r3.z, r3.x
    
    dcl_literal l84, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3.x___, r3.x, l84
    iadd r1.__z_, r1.z, r3.x
    
    dcl_literal l85, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3.x___, r3.z, l85
    
    dcl_literal l86, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.__z_, l86, r3.x
    
    dcl_literal l87, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1.__z_, r3.z, l87, r1.z
    
    dcl_literal l88, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3.x___, l88, r3.x_neg(xyzw)
    
    dcl_literal l89, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.__z_, r3.w, l89
    
    dcl_literal l90, 0x00000000, 0x00000000, 0x00000017, 0x00000000
    ilt r4._yz_, l90, r3.x
    
    dcl_literal l91, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3.x___, r4.z, l91, r3.x
    ishr r3.x___, r3.z, r3.x
    cmov_logical r4.x___, r4.y, r3.x, r1.z
endif
dcl_literal l92, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r1.__z_, l92, r1.w
dcl_literal l93, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r1.__z_, r1.z, l93, r4.x
ior r1.__z_, r3.y, r1.z
dcl_literal l94, 0x41131CE0, 0x41131CE0, 0x41131CE0, 0x41131CE0
ge r1.___w, r1.y, l94
if_logicalnz r1.w
    mul_ieee r1.___w, r2.w, r1.z
    div_zeroop(infinity) r1.___w, r1.w, r1.y
    
    dcl_literal l95, 0x80000000, 0x7F800000, 0x00000000, 0x00000000
    and r3.xy__, r2.x, l95
    if_logicalz r3.y
        
        dcl_literal l96, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r3.__z_, r2.x, l96
        itof r3.__z_, r3.z
        
        dcl_literal l97, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
        and r3.__zw, r3.z, l97
        
        dcl_literal l98, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r3.__z_, r3.z, l98
        
        dcl_literal l99, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        iadd r3.__z_, r3.z, l99
        
        dcl_literal l100, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r3.___w, r3.w, l100
        
        dcl_literal l101, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r3.__z_, l101, r3.z_neg(xyzw)
        
        dcl_literal l102, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r4.x___, l102, r3.z
        
        dcl_literal l103, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r3.__z_, r4.x, l103, r3.z
        
        dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r4.x___, l104, r3.z
        ishr r4._y__, r3.w, r3.z
        inegate r3.__z_, r3.z
        
        dcl_literal l105, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r3.__z_, r3.z, l105
        iadd r3.__z_, r3.w, r3.z
        cmov_logical r3.__z_, r4.x, r4.y, r3.z
    else
        
        dcl_literal l106, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r3.___w, r2.x, l106
        
        dcl_literal l107, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r3._y__, r3.y, l107
        
        dcl_literal l108, 0x00000000, 0xFFFFFF99, 0x00000000, 0x0C000000
        iadd r3._y_w, r3.yyyw, l108
        
        dcl_literal l109, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r3._y__, l109, r3.y
        
        dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r3.__z_, r3.y, l110, r3.w
    endif
    ior r3.x___, r3.x, r3.z
    mul_ieee r1.___w, r1.w, r3.x
    
    dcl_literal l111, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r3.xyz_, r1.w, l111
    if_logicalz r3.y
        itof r3.___w, r3.z
        
        dcl_literal l112, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r4.xy__, r3.w, l112
        
        dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r3.___w, r4.x, l113
        
        dcl_literal l114, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8
        iadd r3.___w, r3.w, l114
        
        dcl_literal l115, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r4.x___, r4.y, l115
        
        dcl_literal l116, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r3.___w, l116, r3.w_neg(xyzw)
        
        dcl_literal l117, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r4._y__, l117, r3.w
        
        dcl_literal l118, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r3.___w, r4.y, l118, r3.w
        
        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r4._y__, l119, r3.w
        ishr r4.__z_, r4.x, r3.w
        inegate r3.___w, r3.w
        
        dcl_literal l120, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r3.___w, r3.w, l120
        iadd r3.___w, r4.x, r3.w
        cmov_logical r3.___w, r4.y, r4.z, r3.w
    else
        
        dcl_literal l121, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r1.___w, r1.w, l121
        
        dcl_literal l122, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r3._y__, r3.y, l122
        
        dcl_literal l123, 0xF4000000, 0xF4000000, 0xF4000000, 0xF4000000
        iadd r1.___w, r1.w, l123
        
        dcl_literal l124, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69
        iadd r3._y__, r3.y, l124
        
        dcl_literal l125, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r3._y__, l125, r3.y_neg(xyzw)
        
        dcl_literal l126, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r3.__z_, r3.z, l126
        
        dcl_literal l127, 0x00000000, 0x00000017, 0x00000000, 0x00000000
        ilt r4.xy__, l127, r3.y
        
        dcl_literal l128, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r3._y__, r4.y, l128, r3.y
        ishr r3._y__, r3.z, r3.y
        cmov_logical r3.___w, r4.x, r3.y, r1.w
    endif
    ior r1.___w, r3.x, r3.w
else
    mul_ieee r1.__z_, r2.x, r1.z
    mul_ieee r1.__z_, r2.w, r1.z
    
    dcl_literal l129, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.x___, l129, r0.x
    div_zeroop(infinity) r1._y__, r1.z, r1.y
    
    dcl_literal l130, 0x40000000, 0x40000000, 0x40000000, 0x40000000
    add r1.__z_, r1.y_neg(xyzw), l130
    cmov_logical r1.___w, r2.x, r1.y, r1.z
endif
dcl_literal l131, 0x23800000, 0x3F580000, 0x40C00000, 0x41E00000
ige r3, r0.y, l131
dcl_literal l132, 0x00000000, 0x3E800000, 0x00000000, 0x00000000
ilt r1._yz_, r0.x, l132
and r1._yz_, r3.xxzx, r1.yyzy
cmov_logical r0.__z_, r1.y, r1.x, r0.z
dcl_literal l133, 0x3E800000, 0x00000000, 0x00000000, 0x00000000
ige r1.xy__, r0.x, l133
and r1.x___, r2.y, r1.x
cmov_logical r0.__z_, r1.x, r0.w, r0.z
and r0.___w, r2.z, r3.y
cmov_logical r0.__z_, r0.w, r1.w, r0.z
dcl_literal l134, 0x40000000, 0x40000000, 0x40000000, 0x40000000
cmov_logical r0.__z_, r1.z, l134, r0.z
and r0.___w, r3.w, r1.y
dcl_literal l135, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
ushr r1.x___, r0.x, l135
dcl_literal l136, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishl r1.x___, r1.x, l136
dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r1._y__, r0.y, l137
dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r1.x___, r1.x, l138
and r1.x___, r1.y, r1.x
ior r0.___w, r0.w, r1.x
dcl_literal l139, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r0.w, l139, r0.z
dcl_literal l140, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l140, r0.y
dcl_literal l141, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l141
cmov_logical r0.x___, r0.y, r0.x, r0.z
mov out0, r0
mend
__erf_f32
mdef(205)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00800011, 0x40C00000
ilt r0.__zw, r0.y, l1
if_logicalnz r0.z
    
    dcl_literal l2, 0x80000000, 0x7F800000, 0x00000000, 0x00000000
    and r1.xy__, r0.x, l2
    if_logicalz r1.y
        
        dcl_literal l3, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r1.__z_, r0.x, l3
        itof r1.__z_, r1.z
        
        dcl_literal l4, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
        and r1.__zw, r1.z, l4
        
        dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.__z_, r1.z, l5
        
        dcl_literal l6, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        iadd r1.__z_, r1.z, l6
        
        dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.___w, r1.w, l7
        
        dcl_literal l8, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r1.__z_, l8, r1.z_neg(xyzw)
        
        dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2.x___, l9, r1.z
        
        dcl_literal l10, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.__z_, r2.x, l10, r1.z
        
        dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r2.x___, l11, r1.z
        ishr r2._y__, r1.w, r1.z
        inegate r1.__z_, r1.z
        
        dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.__z_, r1.z, l12
        iadd r1.__z_, r1.w, r1.z
        cmov_logical r1.__z_, r2.x, r2.y, r1.z
    else
        
        dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1._y__, r1.y, l13
        
        dcl_literal l14, 0x0C000000, 0x0C000000, 0x0C000000, 0x0C000000
        iadd r1.___w, r0.y, l14
        
        dcl_literal l15, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99
        iadd r1._y__, r1.y, l15
        
        dcl_literal l16, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r1._y__, l16, r1.y
        
        dcl_literal l17, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r1.__z_, r1.y, l17, r1.w
    endif
    ior r1.x___, r1.x, r1.z
else
    mov r1.x___, r0.x
endif
dcl_literal l18, 0x3F906EBB, 0x3F906EBB, 0x3F906EBB, 0x3F906EBB
mul_ieee r1.x___, r1.x, l18
if_logicalnz r0.z
    
    dcl_literal l19, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF
    and r1._yzw, r1.x, l19
    if_logicalz r1.z
        itof r0.__z_, r1.w
        
        dcl_literal l20, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r2.xy__, r0.z, l20
        
        dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r0.__z_, r2.x, l21
        
        dcl_literal l22, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8
        iadd r0.__z_, r0.z, l22
        
        dcl_literal l23, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2.x___, r2.y, l23
        
        dcl_literal l24, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r0.__z_, l24, r0.z_neg(xyzw)
        
        dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2._y__, l25, r0.z
        
        dcl_literal l26, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r0.__z_, r2.y, l26, r0.z
        
        dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r2._y__, l27, r0.z
        ishr r2.__z_, r2.x, r0.z
        inegate r0.__z_, r0.z
        
        dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r0.__z_, r0.z, l28
        iadd r0.__z_, r2.x, r0.z
        cmov_logical r0.__z_, r2.y, r2.z, r0.z
    else
        
        dcl_literal l29, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r2.x___, r1.x, l29
        
        dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.__z_, r1.z, l30
        
        dcl_literal l31, 0xF4000000, 0xF4000000, 0xF4000000, 0xF4000000
        iadd r2.x___, r2.x, l31
        
        dcl_literal l32, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69, 0xFFFFFF69
        iadd r1.__z_, r1.z, l32
        
        dcl_literal l33, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r1.__z_, l33, r1.z_neg(xyzw)
        
        dcl_literal l34, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.___w, r1.w, l34
        
        dcl_literal l35, 0x00000000, 0x00000000, 0x00000017, 0x00000000
        ilt r2._yz_, l35, r1.z
        
        dcl_literal l36, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.__z_, r2.z, l36, r1.z
        ishr r1.__z_, r1.w, r1.z
        cmov_logical r0.__z_, r2.y, r1.z, r2.x
    endif
    ior r1.x___, r1.y, r0.z
endif
mul_ieee r0.__z_, r0.x, r0.x
dcl_literal l37, 0x00000000, 0xB7C756B1, 0xB684E21A, 0x00000000
dcl_literal l38, 0x00000000, 0xBBBD1489, 0x390AEE49, 0x00000000
mad_ieee r1._yz_, r0.z, l37, l38
dcl_literal l39, 0x00000000, 0xBCE9528F, 0x3BA68116, 0x00000000
mad_ieee r1._yz_, r0.z, r1.yyzy, l39
dcl_literal l40, 0x00000000, 0xBEA66BEB, 0x3D852A63, 0x00000000
mad_ieee r1._yz_, r0.z, r1.yyzy, l40
dcl_literal l41, 0x00000000, 0x3E0375D4, 0x3ECBBBCE, 0x00000000
mad_ieee r1._yz_, r0.z, r1.yyzy, l41
dcl_literal l42, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r0.__z_, r0.z, r1.z, l42
div_zeroop(infinity) r0.__z_, r1.y, r0.z
mad_ieee r0.__z_, r0.x, r0.z, r0.x
mov r1._y__, r0.x_abs
dcl_literal l43, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.__z_, r1.y, l43
dcl_literal l44, 0xBB0DF9C0, 0x3C445AA3, 0x00000000, 0x00000000
dcl_literal l45, 0x3D1151B3, 0x3C5F6E13, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, l44, l45
dcl_literal l46, 0xBDE31CC2, 0x3E013307, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l46
dcl_literal l47, 0x3EA2FE54, 0x3D931AE7, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l47
dcl_literal l48, 0xBEBE9208, 0x3F0A5785, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l48
dcl_literal l49, 0x3ED46805, 0x3DD9F331, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l49
dcl_literal l50, 0x00000000, 0x00000000, 0xBB1ACDC6, 0x3F800000
mad_ieee r1.__zw, r1.z, r2.xxxy, l50
dcl_literal l51, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.x___, r0.x, l51
div_zeroop(infinity) r1.__z_, r1.z, r1.w
dcl_literal l52, 0x3F58560B, 0x3F58560B, 0x3F58560B, 0x3F58560B
add r1.___w, r1.z, l52
dcl_literal l53, 0xBF58560B, 0xBF58560B, 0xBF58560B, 0xBF58560B
add r1.__z_, r1.z_neg(xyzw), l53
cmov_logical r1.__z_, r2.x, r1.w, r1.z
mul_ieee r1.___w, r1.y, r1.y
dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r1.___w, l54, r1.w
dcl_literal l55, 0xC11D077E, 0xBD777F97, 0xC3F1C275, 0xC1B38712
dcl_literal l56, 0xC2A2932B, 0x40D23F7C, 0xC480230B, 0x43ED43A7
mad_ieee r3, r1.w, l55, l56
dcl_literal l57, 0xC3389AE7, 0x42D9451F, 0xC41F6441, 0x451F90CE
mad_ieee r3, r1.w, r3, l57
dcl_literal l58, 0xC322658C, 0x43D6810B, 0xC320A2EA, 0x4547FDBB
mad_ieee r3, r1.w, r3, l58
dcl_literal l59, 0xC2798057, 0x442158C9, 0xC18E104B, 0x44C01759
mad_ieee r3, r1.w, r3, l59
dcl_literal l60, 0xC128F022, 0x43D9486F, 0xBF4C9DD4, 0x43A2E571
mad_ieee r3, r1.w, r3, l60
dcl_literal l61, 0xBF31A0B7, 0x4309A863, 0xBC21A092, 0x41F2B459
mad_ieee r3, r1.w, r3, l61
dcl_literal l62, 0x00000000, 0xBC21A093, 0x419D35CE, 0x3F800000
mad_ieee r2._yzw, r1.w, r3.xxyw, l62
dcl_literal l63, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r1.___w, r1.w, r2.z, l63
div_zeroop(infinity) r1.___w, r2.y, r1.w
div_zeroop(infinity) r2._y__, r3.z, r2.w
dcl_literal l64, 0x4036DB6E, 0x4036DB6E, 0x4036DB6E, 0x4036DB6E
ige r2.__z_, r0.y, l64
and r0.___w, r0.w, r2.z
cmov_logical r0.___w, r0.w, r2.y, r1.w
dcl_literal l65, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r1.___w, r1.y, l65
dcl_literal l66, 0xBF100000, 0xBF100000, 0xBF100000, 0xBF100000
mad_ieee r2._y__, r1.w_neg(xyzw), r1.w, l66
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.__z_, r2.y, l67
dcl_literal l68, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l69, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r2.__z_, r2.z, l68, l69
dcl_literal l70, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r2.__z_, r2.y, l70, r2.z
round_z r2.__z_, r2.z
dcl_literal l71, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r2._y__, r2.z_neg(xyzw), l71, r2.y
dcl_literal l72, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r2.___w, r2.z_neg(xyzw), l72, r2.y
mul_ieee r3.x___, r2.w, r2.w
dcl_literal l73, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l74, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r3._y__, r3.x, l73, l74
dcl_literal l75, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r3._y__, r3.x, r3.y, l75
dcl_literal l76, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r3._y__, r3.x, r3.y, l76
dcl_literal l77, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3._y__, r3.x, r3.y, l77
mad_ieee r3.x___, r3.x_neg(xyzw), r3.y, r2.w
mul_ieee r2.___w, r2.w, r3.x
dcl_literal l78, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r3.x___, r3.x_neg(xyzw), l78
div_zeroop(infinity) r2.___w, r2.w, r3.x
dcl_literal l79, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r2.___w, r2.z, l79, r2.w_neg(xyzw)
add r2._y__, r2.y_neg(xyzw), r2.w
dcl_literal l80, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r2._y__, r2.y_neg(xyzw), l80
ftoi r2.__z_, r2.z
dcl_literal l81, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000
and r3.xyz_, r2.y, l81
if_logicalz r3.y
    itof r2.___w, r3.z
    
    dcl_literal l82, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r4.xy__, r2.w, l82
    
    dcl_literal l83, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.___w, r4.x, l83
    iadd r2.___w, r2.w, r2.z
    
    dcl_literal l84, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.___w, r4.y, l84
    
    dcl_literal l85, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r2.___w, l85, r2.w_neg(xyzw)
    
    dcl_literal l86, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.x___, l86, r2.w
    
    dcl_literal l87, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.___w, r4.x, l87, r2.w
    
    dcl_literal l88, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.x___, l88, r2.w
    ishr r4._y__, r3.w, r2.w
    inegate r2.___w, r2.w
    
    dcl_literal l89, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2.___w, r2.w, l89
    iadd r2.___w, r3.w, r2.w
    cmov_logical r2.___w, r4.x, r4.y, r2.w
else
    
    dcl_literal l90, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r2._y__, r2.y, l90
    
    dcl_literal l91, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3._y__, r3.y, l91
    iadd r3._y__, r3.y, r2.z
    
    dcl_literal l92, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2.__z_, r2.z, l92
    iadd r2._y__, r2.y, r2.z
    
    dcl_literal l93, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.__z_, r3.y, l93
    
    dcl_literal l94, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3._y__, l94, r2.z
    
    dcl_literal l95, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2._y__, r3.y, l95, r2.y
    
    dcl_literal l96, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.__z_, l96, r2.z_neg(xyzw)
    
    dcl_literal l97, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3._y__, r3.z, l97
    
    dcl_literal l98, 0x00000000, 0x00000000, 0x00000000, 0x00000017
    ilt r3.__zw, l98, r2.z
    
    dcl_literal l99, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.__z_, r3.w, l99, r2.z
    ishr r2.__z_, r3.y, r2.z
    cmov_logical r2.___w, r3.z, r2.z, r2.y
endif
ior r2._y__, r3.x, r2.w
add r2.__z_, r1.y_neg(xyzw), r1.w
add r1.___w, r1.y, r1.w
mad_ieee r0.___w, r2.z, r1.w, r0.w
dcl_literal l100, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r1.___w, r0.w, l100
dcl_literal l101, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l102, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r1.___w, r1.w, l101, l102
dcl_literal l103, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r1.___w, r0.w, l103, r1.w
round_z r1.___w, r1.w
dcl_literal l104, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0.___w, r1.w_neg(xyzw), l104, r0.w
dcl_literal l105, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r2.__z_, r1.w_neg(xyzw), l105, r0.w
mul_ieee r2.___w, r2.z, r2.z
dcl_literal l106, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l107, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r3.x___, r2.w, l106, l107
dcl_literal l108, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r3.x___, r2.w, r3.x, l108
dcl_literal l109, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r3.x___, r2.w, r3.x, l109
dcl_literal l110, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3.x___, r2.w, r3.x, l110
mad_ieee r2.___w, r2.w_neg(xyzw), r3.x, r2.z
mul_ieee r2.__z_, r2.z, r2.w
dcl_literal l111, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r2.___w, r2.w_neg(xyzw), l111
div_zeroop(infinity) r2.__z_, r2.z, r2.w
dcl_literal l112, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r2.__z_, r1.w, l112, r2.z_neg(xyzw)
add r0.___w, r0.w_neg(xyzw), r2.z
dcl_literal l113, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.w_neg(xyzw), l113
ftoi r2.__z_, r1.w
dcl_literal l114, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000
and r3.xyz_, r0.w, l114
if_logicalz r3.y
    itof r2.___w, r3.z
    
    dcl_literal l115, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r4.xy__, r2.w, l115
    
    dcl_literal l116, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.___w, r4.x, l116
    iadd r2.___w, r2.w, r2.z
    
    dcl_literal l117, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.___w, r4.y, l117
    
    dcl_literal l118, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r2.___w, l118, r2.w_neg(xyzw)
    
    dcl_literal l119, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.x___, l119, r2.w
    
    dcl_literal l120, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.___w, r4.x, l120, r2.w
    
    dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.x___, l121, r2.w
    ishr r4._y__, r3.w, r2.w
    inegate r2.___w, r2.w
    
    dcl_literal l122, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2.___w, r2.w, l122
    iadd r2.___w, r3.w, r2.w
    cmov_logical r2.___w, r4.x, r4.y, r2.w
else
    
    dcl_literal l123, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r0.___w, r0.w, l123
    
    dcl_literal l124, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3._y__, r3.y, l124
    iadd r3._y__, r3.y, r2.z
    
    dcl_literal l125, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2.__z_, r2.z, l125
    iadd r0.___w, r0.w, r2.z
    
    dcl_literal l126, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.__z_, r3.y, l126
    
    dcl_literal l127, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3._y__, l127, r2.z
    
    dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r3.y, l128, r0.w
    
    dcl_literal l129, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.__z_, l129, r2.z_neg(xyzw)
    
    dcl_literal l130, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3._y__, r3.z, l130
    
    dcl_literal l131, 0x00000000, 0x00000000, 0x00000000, 0x00000017
    ilt r3.__zw, l131, r2.z
    
    dcl_literal l132, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.__z_, r3.w, l132, r2.z
    ishr r2.__z_, r3.y, r2.z
    cmov_logical r2.___w, r3.z, r2.z, r0.w
endif
dcl_literal l133, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r0.___w, l133, r1.w
dcl_literal l134, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.___w, r0.w, l134, r2.w
ior r0.___w, r3.x, r0.w
mul_ieee r0.___w, r2.y, r0.w
div_zeroop(infinity) r0.___w, r0.w, r1.y
dcl_literal l135, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.___w, r0.w_neg(xyzw), l135
dcl_literal l136, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l136
cmov_logical r0.___w, r2.x, r1.w, r0.w
dcl_literal l137, 0x31800000, 0x3F580000, 0x3FA00000, 0x40C00000
ige r3, r1.y, l137
dcl_literal l138, 0x00000000, 0x3F580000, 0x3FA00000, 0x40C00000
ilt r2._yzw, r1.y, l138
and r2._yzw, r3.xxyz, r2.yyzw
cmov_logical r0.__z_, r2.y, r0.z, r1.x
cmov_logical r0.__z_, r2.z, r1.z, r0.z
cmov_logical r0.__z_, r2.w, r0.w, r0.z
dcl_literal l139, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
dcl_literal l140, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0.___w, r2.x, l139, l140
cmov_logical r0.__z_, r3.w, r0.w, r0.z
dcl_literal l141, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.y, l141
dcl_literal l142, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.__z_, r0.w, l142, r0.z
dcl_literal l143, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l143, r0.y
dcl_literal l144, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l144
cmov_logical r0.x___, r0.y, r0.x, r0.z
mov out0, r0
mend
__exp10_f32
mdef(206)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78
mul_ieee r0._y__, r0.x, l0
dcl_literal l1, 0xFFFFF000, 0x7FFFFFFF, 0x7F800000, 0x00000000
and r1.xyz_, r0.x, l1
dcl_literal l2, 0x40549000, 0x40549000, 0x40549000, 0x40549000
mad_ieee r0.__z_, r1.x, l2, r0.y_neg(xyzw)
add r0.___w, r0.x, r1.x_neg(xyzw)
dcl_literal l3, 0x40549000, 0x40549000, 0x40549000, 0x40549000
mad_ieee r0.__z_, r0.w, l3, r0.z
dcl_literal l4, 0x3A2784BD, 0x3A2784BD, 0x3A2784BD, 0x3A2784BD
mad_ieee r0.__z_, r1.x, l4, r0.z
dcl_literal l5, 0x3A2784BD, 0x3A2784BD, 0x3A2784BD, 0x3A2784BD
mad_ieee r0.__z_, r0.w, l5, r0.z
add r0.___w, r0.y, r0.z
add r0._y__, r0.y, r0.w_neg(xyzw)
add r0._y__, r0.z, r0.y
add r0.__z_, r0.w, r0.y
round_nearest r0.__z_, r0.z
add r1.x___, r0.w, r0.z_neg(xyzw)
add r0.___w, r0.w, r1.x_neg(xyzw)
add r0.___w, r0.z_neg(xyzw), r0.w
add r0._y__, r0.y, r0.w
add r0.___w, r1.x, r0.y
add r1.x___, r1.x, r0.w_neg(xyzw)
add r0._y__, r0.y, r1.x
dcl_literal l6, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r1.x___, r0.w, l6
dcl_literal l7, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0._y__, r0.y, l7, r1.x
dcl_literal l8, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r1.x___, r0.w, l8
add r1.___w, r0.w, r1.x_neg(xyzw)
dcl_literal l9, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mul_ieee r0.___w, r0.w, l9
dcl_literal l10, 0x3F317000, 0x3F317000, 0x3F317000, 0x3F317000
mad_ieee r2.x___, r1.x, l10, r0.w_neg(xyzw)
dcl_literal l11, 0x3F317000, 0x3F317000, 0x3F317000, 0x3F317000
mad_ieee r2.x___, r1.w, l11, r2.x
dcl_literal l12, 0x37C00001, 0x37C00001, 0x37C00001, 0x37C00001
mad_ieee r1.x___, r1.x, l12, r2.x
dcl_literal l13, 0x37C00001, 0x37C00001, 0x37C00001, 0x37C00001
mad_ieee r1.x___, r1.w, l13, r1.x
add r0._y__, r0.y, r1.x
add r1.x___, r0.w, r0.y
add r0.___w, r0.w, r1.x_neg(xyzw)
add r0._y__, r0.y, r0.w
add r0.___w, r1.x, r0.y
mul_ieee r1.___w, r0.w, r0.w
dcl_literal l14, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l15, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r2.x___, r1.w, l14, l15
dcl_literal l16, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r2.x___, r1.w, r2.x, l16
dcl_literal l17, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r2.x___, r1.w, r2.x, l17
dcl_literal l18, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r2.x___, r1.w, r2.x, l18
mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r0.w
mul_ieee r0.___w, r0.w, r1.w
dcl_literal l19, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r1.___w, r1.w_neg(xyzw), l19
div_zeroop(infinity) r0.___w, r0.w, r1.w
add r0._y__, r0.y_neg(xyzw), r0.w_neg(xyzw)
add r0._y__, r1.x_neg(xyzw), r0.y
dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0._y__, r0.y_neg(xyzw), l20
dcl_literal l21, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r2, r0.y, l21
ftoi r0._y__, r0.z
dcl_literal l22, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r0.__z_, l22, r0.z
dcl_literal l23, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r0.___w, r0.y, l23
cmov_logical r0._y__, r2.z, r0.y, r0.w
dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r0.___w, r0.y, l24
itof r1.x___, r2.w
cmov_logical r1.x___, r2.z, r2.x, r1.x
iadd r0.___w, r1.x, r0.w
dcl_literal l25, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF
and r1.x__w, r1.x, l25
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r1.x, l26
dcl_literal l27, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.___w, r1.w, l27
iadd r0._y__, r1.x, r0.y
dcl_literal l28, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0._y__, r0.y, l28
dcl_literal l29, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.x___, l29, r0.y
dcl_literal l30, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0._y__, l30, r0.y_neg(xyzw)
dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.___w, r1.x, l31, r0.w
dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1.x___, l32, r0.y
dcl_literal l33, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0._y__, r1.x, l33, r0.y
dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0._y__, r0.y, l34
ishr r1.x___, r1.w, r0.y
dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0._y__, l35, r0.y
cmov_logical r0._y__, r0.y, r1.x, r0.w
dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.z, l36, r0.y
ior r0._y__, r2.y, r0.y
dcl_literal l37, 0x421A209B, 0x421A209B, 0x421A209B, 0x421A209B
ge r0.__z_, r0.x, l37
dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.___w, r1.y, l38
and r0.__z_, r0.z, r0.w
dcl_literal l39, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.z, l39, r0.y
dcl_literal l40, 0xC23369F4, 0xC23369F4, 0xC23369F4, 0xC23369F4
lt r0.__z_, r0.x, l40
and r0.__z_, r0.w, r0.z
dcl_literal l41, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.z, l41, r0.y
dcl_literal l42, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l42, r1.y
cmov_logical r0._y__, r0.z, r0.x, r0.y
dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, r0.x, l43
dcl_literal l44, 0x7F800000, 0x00000000, 0x00000000, 0x00000000
ieq r1.x_z_, r1.yyzy, l44
dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.___w, r1.y, l45
and r0.__z_, r0.z, r1.x
dcl_literal l46, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.z, l46, r0.y
dcl_literal l47, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l47, r0.x
and r0.__zw, r1.xxxz, r0.zzzw
cmov_logical r0._y__, r0.z, r0.x, r0.y
dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.__z_, r0.x, l48
dcl_literal l49, 0x421A209A, 0x421A209A, 0x421A209A, 0x421A209A
eq r0.x___, r0.x, l49
cmov_logical r0._y__, r0.w, r0.z, r0.y
dcl_literal l50, 0x7F7FFFB3, 0x7F7FFFB3, 0x7F7FFFB3, 0x7F7FFFB3
cmov_logical r0.x___, r0.x, l50, r0.y
mov out0, r0
mend
__exp2_f32
mdef(207)_out(1)_in(1)
mov r0, in0
round_nearest r0._y__, r0.x
add r0.__z_, r0.x, r0.y_neg(xyzw)
dcl_literal l0, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mul_ieee r0.___w, r0.z, l0
mul_ieee r1.x___, r0.w, r0.w
dcl_literal l1, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l2, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r1._y__, r1.x, l1, l2
dcl_literal l3, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r1._y__, r1.x, r1.y, l3
dcl_literal l4, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r1._y__, r1.x, r1.y, l4
dcl_literal l5, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r1._y__, r1.x, r1.y, l5
mad_ieee r1.x___, r1.x_neg(xyzw), r1.y, r0.w
mul_ieee r0.___w, r0.w, r1.x
dcl_literal l6, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r1.x___, r1.x_neg(xyzw), l6
div_zeroop(infinity) r0.___w, r0.w, r1.x
dcl_literal l7, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r0.___w, r0.z_neg(xyzw), l7, r0.w_neg(xyzw)
dcl_literal l8, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0.__z_, r0.z_neg(xyzw), l8, r0.w
dcl_literal l9, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.__z_, r0.z_neg(xyzw), l9
dcl_literal l10, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r1, r0.z, l10
ftoi r0.__z_, r0.y
dcl_literal l11, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r0._y__, l11, r0.y
dcl_literal l12, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r0.___w, r0.z, l12
cmov_logical r0.__z_, r1.z, r0.z, r0.w
dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r0.___w, r0.z, l13
itof r1.___w, r1.w
cmov_logical r1.x___, r1.z, r1.x, r1.w
iadd r0.___w, r1.x, r0.w
dcl_literal l14, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
and r1.x_z_, r1.x, l14
dcl_literal l15, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r1.x, l15
dcl_literal l16, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.__z_, r1.z, l16
iadd r0.__z_, r1.x, r0.z
dcl_literal l17, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.__z_, r0.z, l17
dcl_literal l18, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.x___, l18, r0.z
dcl_literal l19, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.__z_, l19, r0.z_neg(xyzw)
dcl_literal l20, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.___w, r1.x, l20, r0.w
dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1.x___, l21, r0.z
dcl_literal l22, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.__z_, r1.x, l22, r0.z
dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0.__z_, r0.z, l23
ishr r1.x___, r1.z, r0.z
dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l24, r0.z
cmov_logical r0.__z_, r0.z, r1.x, r0.w
dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.y, l25, r0.z
ior r0._y__, r1.y, r0.y
dcl_literal l26, 0x43000000, 0x43000000, 0x43000000, 0x43000000
ge r0.__z_, r0.x, l26
dcl_literal l27, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r0.x, l27
dcl_literal l28, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1.x___, r0.w, l28
and r0.__z_, r0.z, r1.x
dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.z, l29, r0.y
dcl_literal l30, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000
lt r0.__z_, r0.x, l30
and r0.__z_, r1.x, r0.z
dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.z, l31, r0.y
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l32, r0.w
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.w, l33
dcl_literal l34, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r1.x___, r0.x, l34
cmov_logical r0._y__, r0.z, r1.x, r0.y
dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, r0.x, l35
and r0.__z_, r0.w, r0.z
dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.z, l36, r0.y
dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l37, r0.x
and r0.__z_, r0.w, r0.z
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__expm1_f32
mdef(208)_out(1)_in(1)
mov r0, in0
mov r3.x___, r0.x
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r0.x___, l0
dcl_literal l1, 0x00000000, 0x00000000, 0xB717F7D1, 0xFFFFFFFF
mov r1.__zw, l1
dcl_literal l2, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mov r2._y__, l2
dcl_literal l3, 0xBF317180, 0x3F317180, 0x00000000, 0x00000000
add r1.xy__, r3.x, l3
mov r2.x___, r1.x
dcl_literal l4, 0x00000000, 0x00000000, 0x80000000, 0x7FFFFFFF
and r0.__zw, r3.x, l4
dcl_literal l5, 0x00000000, 0x3EB17218, 0x7F800000, 0x00000000
ult r3._yz_, l5, r0.w
dcl_literal l6, 0x3F851592, 0x33000000, 0x7F800000, 0x00000000
ult r4.xyz_, r0.w, l6
and r1.x___, r3.y, r4.x
dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x7F800000
ieq r4.x__w, r0.zzzw, l7
and r2.___w, r1.x, r4.x
dcl_literal l8, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r2.__z_, r2.w, l8
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r2.___w, r0.z, l9
and r1.x___, r1.x, r2.w
cmov_logical r1.xyz_, r1.x, r1.yzwy, r2.xyzx
dcl_literal l10, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l11, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r0.__z_, r0.z, l10, l11
dcl_literal l12, 0x3F851592, 0x42B17218, 0x4195B844, 0x00000000
uge r2.xyz_, r0.w, l12
dcl_literal l13, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r0.__z_, r3.x, l13, r0.z
round_z r0.___w, r0.z
ftoi r5.__z_, r0.z
dcl_literal l14, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r5.x___, r0.w_neg(xyzw), l14, r3.x
dcl_literal l15, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r5._y__, r0.w, l15
cmov_logical r1.xyz_, r2.x, r5.xyzx, r1.xyzx
and r0.__zw, r4.z, r2.yyyz
add r2._y__, r1.y_neg(xyzw), r1.x
add r1.x___, r1.x, r2.y_neg(xyzw)
add r2.x___, r1.y_neg(xyzw), r1.x
mov r0._y__, r3.x
cmov_logical r0.xy__, r3.y, r2.xyxx, r0.xyxx
dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r1.x___, r0.y, l16
mul_ieee r1._y__, r0.y, r1.x
dcl_literal l17, 0xB457EDBB, 0xB457EDBB, 0xB457EDBB, 0xB457EDBB
dcl_literal l18, 0x36867E54, 0x36867E54, 0x36867E54, 0x36867E54
mad_ieee r1.___w, r1.y, l17, l18
dcl_literal l19, 0xB8A670CD, 0xB8A670CD, 0xB8A670CD, 0xB8A670CD
mad_ieee r1.___w, r1.y, r1.w, l19
dcl_literal l20, 0x3AD00D01, 0x3AD00D01, 0x3AD00D01, 0x3AD00D01
mad_ieee r1.___w, r1.y, r1.w, l20
dcl_literal l21, 0xBD088889, 0xBD088889, 0xBD088889, 0xBD088889
mad_ieee r1.___w, r1.y, r1.w, l21
dcl_literal l22, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r1.___w, r1.y, r1.w, l22
dcl_literal l23, 0x40400000, 0x40400000, 0x40400000, 0x40400000
mad_ieee r2.x___, r1.w_neg(xyzw), r1.x, l23
add r1.___w, r1.w, r2.x_neg(xyzw)
dcl_literal l24, 0x40C00000, 0x40C00000, 0x40C00000, 0x40C00000
mad_ieee r2.x___, r0.y_neg(xyzw), r2.x, l24
div_zeroop(infinity) r1.___w, r1.w, r2.x
mad_ieee r2.x___, r1.y, r1.w, r0.x_neg(xyzw)
mul_ieee r1.___w, r1.y, r1.w
mad_ieee r1._y__, r0.y, r1.w, r1.y_neg(xyzw)
mad_ieee r0.x___, r0.y, r2.x, r0.x_neg(xyzw)
mad_ieee r0.x___, r0.y_neg(xyzw), r1.x, r0.x
dcl_literal l25, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
iadd r1.x___, l25, r1.z_neg(xyzw)
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1.x___, r1.x, l26
add r1.x___, r0.x, r1.x
add r1.x___, r0.y, r1.x_neg(xyzw)
dcl_literal l27, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.x___, r1.x, l27
add r1.___w, r0.y_neg(xyzw), r0.x
add r0.x___, r0.y, r0.x_neg(xyzw)
add r0._y__, r0.y, r1.y_neg(xyzw)
dcl_literal l28, 0x01000000, 0x01000000, 0x01000000, 0x01000000
ushr r1._y__, l28, r1.z
dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1._y__, l29, r1.y_neg(xyzw)
add r1._y__, r1.w_neg(xyzw), r1.y
dcl_literal l30, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.___w, r1.w_neg(xyzw), l30
dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ige r2.x___, r1.z, l31
cmov_logical r1.x___, r2.x, r1.x, r1.y
dcl_literal l32, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r5, r1.x, l32
itof r1.x___, r1.z
dcl_literal l33, 0x44800000, 0x44800000, 0x44800000, 0x44800000
lt r1._y__, l33, r1.x_abs
ftoi r2.x___, r1.x_abs
dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r1.x___, r1.x, l34
dcl_literal l35, 0x00000400, 0x00000400, 0x00000400, 0x00000400
cmov_logical r1._y__, r1.y, l35, r2.x
inegate r2.x___, r1.y
cmov_logical r1.x___, r1.x, r2.x, r1.y
dcl_literal l36, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r1._y__, r1.x, l36
cmov_logical r2.x___, r5.z, r1.x, r1.y
dcl_literal l37, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2._y__, r2.x, l37
itof r2.__z_, r5.w
cmov_logical r2.__z_, r5.z, r5.x, r2.z
iadd r2._y__, r2.z, r2.y
dcl_literal l38, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF
and r3._y_w, r2.z, l38
dcl_literal l39, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.__z_, r3.y, l39
dcl_literal l40, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r3._y__, r3.w, l40
iadd r2.x___, r2.z, r2.x
dcl_literal l41, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.x___, r2.x, l41
dcl_literal l42, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r2.__z_, l42, r2.x
dcl_literal l43, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2.x___, l43, r2.x_neg(xyzw)
dcl_literal l44, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2._y__, r2.z, l44, r2.y
dcl_literal l45, 0x00000017, 0x00000000, 0x00000000, 0x00000000
ilt r5.x_z_, l45, r2.x
dcl_literal l46, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r2.__z_, r5.x, l46, r2.x
dcl_literal l47, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, r2.x, l47
dcl_literal l48, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x___, r2.x, l48, r2.z
ishr r2.x___, r3.y, r2.x
cmov_logical r2.x___, r5.z, r2.x, r2.y
itof r2._y__, r1.x
dcl_literal l49, 0x43960000, 0x43960000, 0x43960000, 0x43960000
lt r2._y__, l49, r2.y
dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.x___, r2.y, l50, r2.x
ior r2.__z_, r5.y, r2.x
dcl_literal l51, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r3._y__, l51, r2.x
cmov_logical r2.x___, r3.y, r2.z, r2.x
dcl_literal l52, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r5, r1.w, l52
cmov_logical r1.x___, r5.z, r1.x, r1.y
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1._y__, r1.x, l53
itof r1.___w, r5.w
cmov_logical r1.___w, r5.z, r5.x, r1.w
iadd r1._y__, r1.w, r1.y
dcl_literal l54, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF
and r3._y_w, r1.w, l54
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.___w, r3.y, l55
dcl_literal l56, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r2.__z_, r3.w, l56
iadd r1.x___, r1.w, r1.x
dcl_literal l57, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r1.x___, r1.x, l57
dcl_literal l58, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.___w, l58, r1.x
dcl_literal l59, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r1.x___, l59, r1.x_neg(xyzw)
dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r1._y__, r1.w, l60, r1.y
dcl_literal l61, 0x00000000, 0x00000017, 0x00000000, 0x00000000
ilt r3._y_w, l61, r1.x
dcl_literal l62, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r1.___w, r3.y, l62, r1.x
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, r1.x, l63
dcl_literal l64, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.x, l64, r1.w
ishr r1.x___, r2.z, r1.x
cmov_logical r1.x___, r3.w, r1.x, r1.y
dcl_literal l65, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r1.x___, r2.y, l65, r1.x
ior r1._y__, r5.y, r1.x
dcl_literal l66, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r1.___w, l66, r1.x
cmov_logical r1.x___, r1.w, r1.y, r1.x
dcl_literal l67, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r1._y__, r1.x, l67
dcl_literal l68, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.___w, r1.x, l68
cmov_logical r1.x___, r1.y, r1.x, r1.w
dcl_literal l69, 0xFFFFFFFE, 0xFFFFFFFE, 0xFFFFFFFE, 0xFFFFFFFE
ige r1._y__, l69, r1.z
dcl_literal l70, 0x00000038, 0x00000038, 0x00000038, 0x00000038
ilt r1.___w, l70, r1.z
ior r1._y__, r1.y, r1.w
cmov_logical r1.x___, r1.y, r1.x, r2.x
dcl_literal l71, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
dcl_literal l72, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
mad_ieee r0.x___, r0.x, l71, l72
dcl_literal l73, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
ieq r1._y__, r1.z, l73
cmov_logical r0.x___, r1.y, r0.x, r1.x
cmov_logical r0.x___, r1.z, r0.x, r0.y
cmov_logical r0.x___, r4.y, r3.x, r0.x
dcl_literal l74, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.z, l74, r0.x
and r0._y__, r2.w, r0.w
and r0.__z_, r4.w, r2.w
and r0.___w, r4.x, r4.w
dcl_literal l75, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0.x___, r0.y, l75, r0.x
dcl_literal l76, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.w, l76, r0.x
dcl_literal l77, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0.x___, r0.z, l77, r0.x
dcl_literal l78, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r3.z, l78, r0.x
mov out0, r0
mend
__exp_f32
mdef(209)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x00000000, 0xC2CFF1B5, 0x00000000
lt r0._yz_, r0.x, l0
dcl_literal l1, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r0._y__, r0.y, l1, l2
dcl_literal l3, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r0._y__, r0.x, l3, r0.y
round_z r0._y__, r0.y
dcl_literal l4, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0.___w, r0.y_neg(xyzw), l4, r0.x
dcl_literal l5, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r1.x___, r0.y_neg(xyzw), l5, r0.w
mul_ieee r1._y__, r1.x, r1.x
dcl_literal l6, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l7, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r1.__z_, r1.y, l6, l7
dcl_literal l8, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r1.__z_, r1.y, r1.z, l8
dcl_literal l9, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r1.__z_, r1.y, r1.z, l9
dcl_literal l10, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r1.__z_, r1.y, r1.z, l10
mad_ieee r1._y__, r1.y_neg(xyzw), r1.z, r1.x
mul_ieee r1.x___, r1.x, r1.y
dcl_literal l11, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r1._y__, r1.y_neg(xyzw), l11
div_zeroop(infinity) r1.x___, r1.x, r1.y
dcl_literal l12, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r1.x___, r0.y, l12, r1.x_neg(xyzw)
add r0.___w, r0.w_neg(xyzw), r1.x
dcl_literal l13, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.w_neg(xyzw), l13
dcl_literal l14, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r1, r0.w, l14
ftoi r0.___w, r0.y
dcl_literal l15, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r0._y__, l15, r0.y
dcl_literal l16, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r2.x___, r0.w, l16
cmov_logical r0.___w, r1.z, r0.w, r2.x
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.x___, r0.w, l17
itof r1.___w, r1.w
cmov_logical r1.x___, r1.z, r1.x, r1.w
iadd r1.__z_, r1.x, r2.x
dcl_literal l18, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF
and r1.x__w, r1.x, l18
dcl_literal l19, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r1.x, l19
dcl_literal l20, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.___w, r1.w, l20
iadd r0.___w, r1.x, r0.w
dcl_literal l21, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, r0.w, l21
dcl_literal l22, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.x___, l22, r0.w
dcl_literal l23, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.___w, l23, r0.w_neg(xyzw)
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r1.x___, r1.x, l24, r1.z
dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1.__z_, l25, r0.w
dcl_literal l26, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.___w, r1.z, l26, r0.w
dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0.___w, r0.w, l27
ishr r1.__z_, r1.w, r0.w
dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l28, r0.w
cmov_logical r0.___w, r0.w, r1.z, r1.x
dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.y, l29, r0.w
ior r0._y__, r1.y, r0.y
dcl_literal l30, 0x42B17218, 0x42B17218, 0x42B17218, 0x42B17218
ge r0.___w, r0.x, l30
dcl_literal l31, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r1.x___, r0.x, l31
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1._y__, r1.x, l32
and r0.__zw, r0.zzzw, r1.y
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.w, l33, r0.y
dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.z, l34, r0.y
dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l35, r1.x
dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r1.x, l36
dcl_literal l37, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r1.x___, r0.x, l37
cmov_logical r0._y__, r0.z, r1.x, r0.y
dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, r0.x, l38
and r0.__z_, r0.w, r0.z
dcl_literal l39, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.z, l39, r0.y
dcl_literal l40, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l40, r0.x
and r0.__z_, r0.w, r0.z
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__fabs_f32
mdef(210)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.x___, r0.x, l0
mov out0, r0
mend
__fast_distance_2f32
mdef(211)_out(1)_in(2)
mov r0, in0
mov r1, in1
add r2._yz_, r0.xxyx, r1.xxyx_neg(xyzw)
dp2_ieee r2._y__, r2.yzyy, r2.yzyy
sqrt_vec r0.x___, r2.y
mov out0, r0
mend
__fast_distance_4f32
mdef(212)_out(1)_in(2)
mov r0, in0
mov r1, in1
add r0, r0, r1_neg(xyzw)
dp2_ieee r0.x___, r0.xyxx, r0.xyxx
mad_ieee r0.x___, r0.z, r0.z, r0.x
mad_ieee r0.x___, r0.w, r0.w, r0.x
sqrt_vec r0.x___, r0.x
mov out0, r0
mend
__fast_distance_f32
mdef(213)_out(1)_in(2)
mov r0, in0
mov r1, in1
add r2._y__, r0.x, r1.x_neg(xyzw)
mov r0.x___, r2.y_abs
mov out0, r0
mend
__fast_length_2f32
mdef(214)_out(1)_in(1)
mov r0, in0
dp2_ieee r1._y__, r0.xyxx, r0.xyxx
sqrt_vec r0.x___, r1.y
mov out0, r0
mend
__fast_length_4f32
mdef(215)_out(1)_in(1)
mov r0, in0
dp2_ieee r0.x___, r0.xyxx, r0.xyxx
mad_ieee r0.x___, r0.z, r0.z, r0.x
mad_ieee r0.x___, r0.w, r0.w, r0.x
sqrt_vec r0.x___, r0.x
mov out0, r0
mend
__fast_length_f32
mdef(216)_out(1)_in(1)
mov r0, in0
mov r0.x___, r0.x_abs
mov out0, r0
mend
__fast_normalize_2f32
mdef(217)_out(1)_in(1)
mov r0, in0
dp2_ieee r2.x___, r0.xyxx, r0.xyxx
rsq_vec r2._y__, r2.x
mov r2.__zw, r0.xxxy_abs
dcl_literal l7, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
ilt r2.__zw, l7, r2.zzzw
dcl_literal l8, 0x00000000, 0x00000000, 0x00000001, 0x00000001
and r2.__zw, r2.zzzw, l8
iadd r2.__z_, r2.z, r2.w
mul_ieee r2._y_w, r0.xxxy, r2.y
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r2.x___, r2.x, l9
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.xy__, r2.x, l10, r2.ywyy
dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.__z_, l11, r2.z
dcl_literal l12, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r2.z, l12, r2.xyxx
mov r0.__zw, l13
mov out0, r0
mend
__fast_normalize_4f32
mdef(218)_out(1)_in(1)
mov r0, in0
dp2_ieee r2.x___, r0.xyxx, r0.xyxx
mad_ieee r2.x___, r0.z, r0.z, r2.x
mad_ieee r2.x___, r0.w, r0.w, r2.x
rsq_vec r2._y__, r2.x
mov r3, r0_abs
dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r3, l14, r3
dcl_literal l15, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r3, r3, l15
iadd r2.__z_, r3.x, r3.y
iadd r2.__z_, r2.z, r3.z
iadd r2.__z_, r2.z, r3.w
mul_ieee r0, r0, r2.y
dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r2.x___, r2.x, l16
dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0, r2.x, l17, r0
dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, l18, r2.z
dcl_literal l19, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0, r2.x, l19, r0
mov out0, r0
mend
__fast_normalize_f32
mdef(219)_out(1)_in(1)
mov r0, in0
mov r2.x___, r0.x_abs
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2._y__, r0.x, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r2.__z_, l1, r2.x
and r2._y__, r2.y, r2.z
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
uge r2.x___, l2, r2.x
and r2._y__, r2.y, r2.x
dcl_literal l3, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r2._y__, r2.y, l3, r0.x
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.___w, l4, r0.x
and r2.__z_, r2.z, r2.w
and r2.x___, r2.x, r2.z
dcl_literal l5, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r2.x, l5, r2.y
mov r0._yzw, l6
mov out0, r0
mend
__fdim_f32
mdef(220)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7F800000, 0x7F800000
and r1, r0.xyxy, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
ilt r0.__zw, l1, r1.xxxy
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.__zw, r1.zzzw, l2
dcl_literal l3, 0x00000018, 0x00000018, 0x00000000, 0x00000000
ige r2.xy__, l3, r1.zwzz
and r2.x___, r2.y, r2.x
if_logicalnz r2.x
    
    dcl_literal l4, 0x80000000, 0x7F800000, 0x007FFFFF, 0x80000000
    and r2, r0.xxxy, l4
    
    dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.x___, r2.y, l5
    itof r2.__z_, r2.z
    
    dcl_literal l6, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r3._yz_, r2.z, l6
    
    dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.__z_, r3.y, l7
    
    dcl_literal l8, 0x00000030, 0x00000030, 0x00000030, 0x00000030
    iadd r2.__z_, r2.z, l8
    
    dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3._y__, r3.z, l9
    
    dcl_literal l10, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r2.__z_, l10, r2.z_neg(xyzw)
    
    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.__z_, l11, r2.z
    
    dcl_literal l12, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.__z_, r3.z, l12, r2.z
    
    dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3.__z_, l13, r2.z
    ishr r3.___w, r3.y, r2.z
    inegate r2.__z_, r2.z
    
    dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2.__z_, r2.z, l14
    iadd r2.__z_, r3.y, r2.z
    cmov_logical r2.__z_, r3.z, r3.w, r2.z
    
    dcl_literal l15, 0x18000000, 0x18000000, 0x00000000, 0x00000000
    iadd r1.xy__, r1.xyxx, l15
    
    dcl_literal l16, 0xFFFFFFB1, 0xFFFFFFB1, 0xFFFFFFB1, 0xFFFFFFB1
    iadd r3.x___, r3.x, l16
    
    dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.x___, l17, r3.x
    
    dcl_literal l18, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1.x___, r3.x, l18, r1.x
    cmov_logical r1.x___, r2.y, r1.x, r2.z
    ior r1.x___, r2.x, r1.x
    
    dcl_literal l19, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r2.xy__, r0.y, l19
    
    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.__z_, r2.x, l20
    itof r2._y__, r2.y
    
    dcl_literal l21, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r3.xy__, r2.y, l21
    
    dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2._y__, r3.x, l22
    
    dcl_literal l23, 0x00000030, 0x00000030, 0x00000030, 0x00000030
    iadd r2._y__, r2.y, l23
    
    dcl_literal l24, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.x___, r3.y, l24
    
    dcl_literal l25, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r2._y__, l25, r2.y_neg(xyzw)
    
    dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3._y__, l26, r2.y
    
    dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2._y__, r3.y, l27, r2.y
    
    dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3._y__, l28, r2.y
    ishr r3.__z_, r3.x, r2.y
    inegate r2._y__, r2.y
    
    dcl_literal l29, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2._y__, r2.y, l29
    iadd r2._y__, r3.x, r2.y
    cmov_logical r2._y__, r3.y, r3.z, r2.y
    
    dcl_literal l30, 0xFFFFFFB1, 0xFFFFFFB1, 0xFFFFFFB1, 0xFFFFFFB1
    iadd r2.__z_, r2.z, l30
    
    dcl_literal l31, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2.__z_, l31, r2.z
    
    dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1._y__, r2.z, l32, r1.y
    cmov_logical r1._y__, r2.x, r1.y, r2.y
    ior r1._y__, r2.w, r1.y
    lt r2.x___, r1.y, r1.x
    add r1.x___, r1.x, r1.y_neg(xyzw)
    and r1.x___, r2.x, r1.x
    
    dcl_literal l33, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r2, r1.x, l33
    
    dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.x___, r2.z, l34
    itof r1._y__, r2.w
    
    dcl_literal l35, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r3.xy__, r1.y, l35
    
    dcl_literal l36, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1._y__, r3.x, l36
    
    dcl_literal l37, 0xFFFFFFD0, 0xFFFFFFD0, 0xFFFFFFD0, 0xFFFFFFD0
    iadd r1._y__, r1.y, l37
    
    dcl_literal l38, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.x___, r3.y, l38
    
    dcl_literal l39, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r1._y__, l39, r1.y_neg(xyzw)
    
    dcl_literal l40, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3._y__, l40, r1.y
    
    dcl_literal l41, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1._y__, r3.y, l41, r1.y
    
    dcl_literal l42, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3._y__, l42, r1.y
    ishr r3.__z_, r3.x, r1.y
    inegate r1._y__, r1.y
    
    dcl_literal l43, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r1._y__, r1.y, l43
    iadd r1._y__, r3.x, r1.y
    cmov_logical r1._y__, r3.y, r3.z, r1.y
    
    dcl_literal l44, 0xE8000000, 0xE8000000, 0xE8000000, 0xE8000000
    iadd r2.x___, r2.x, l44
    
    dcl_literal l45, 0xFFFFFF51, 0xFFFFFF51, 0xFFFFFF51, 0xFFFFFF51
    iadd r1.x___, r1.x, l45
    
    dcl_literal l46, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r1.x___, l46, r1.x_neg(xyzw)
    
    dcl_literal l47, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.___w, r2.w, l47
    
    dcl_literal l48, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.x___, l48, r1.x
    
    dcl_literal l49, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1.x___, r3.x, l49, r1.x
    ishr r2.___w, r2.w, r1.x
    
    dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, l50, r1.x
    cmov_logical r1.x___, r1.x, r2.w, r2.x
    cmov_logical r1.x___, r2.z, r1.x, r1.y
    ior r1.x___, r2.y, r1.x
else
    
    dcl_literal l51, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1._yz_, r1.zzwz, r0.xxyx, l51
    lt r1.___w, r1.z, r1.y
    add r1._y__, r1.z_neg(xyzw), r1.y
    and r1.x___, r1.w, r1.y
endif
dcl_literal l52, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000
ior r0.xy__, r0.xyxx, l52
cmov_logical r0.x___, r0.z, r0.x, r1.x
cmov_logical r0.x___, r0.w, r0.y, r0.x
mov out0, r0
mend
__fdiv_f32
mdef(221)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l1, 0x7f800000, 0x7f800000, 0x807fffff, 0x807fffff
dcl_literal l2, 0x7f800000, 0x7f800000, 0, 0
dcl_literal l3, 0x80000000, 0x80000000, 0x80000000, 0x80000000
dcl_literal l4, 0x3f800000, 0x3f800000, 0, 0
dcl_literal l5, 0, 0, 0, 0
dcl_literal l6, 0x7fffffff, 0x80000000, 0x7fffffff, 0x80000000
dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
dcl_literal l9, 0x000000ff, 0x000000ff, 0x000000ff, 0x000000ff
mov r2.x___, r0.x
mov r2._y__, r1.x
and r3.xyzw, r2.xyxy, l1
ieq r4.xyzw, r3.xyxy, l2
and r5.xy__, r2.xy, l3
ior r3.__zw, r3.zwzw, l4.xyxy
cmov_logical r3.__zw, r4.zwzw, r5.xyxy, r3.zwzw
cmov_logical r3.__zw, r4.xyxy, r2.xyxy, r3.zwzw
ior r5.xy__, r4.xz, r4.yw
ior r5.x___, r5.x, r5.y
inegate r5.__z_, r3.yyyy
iadd r3.x___, r3.x, r5.z
cmov_logical r3.x___, r5.xxxx, l5, r3.xxxx
rcp_zeroop(infinity) r2._y__, r3.ww
mul_ieee r2.x___, r3.z, r2.y
and r2.__zw, r2.xxxx, l6.xyzw
ishr r6.x___, r2.z, l8
ishr r6._y__, r3.xxxx, l8
iadd r2.xy__, r2.xzxz, r3.xxxx
iadd r6.x___, r6.x, r6.y
ige r4.__z_, l5, r6.x
ior r4._y__, r2.wwww, l1
ige r4.x, r6.x, l9
cmov_logical r4.x, r5.x, l5, r4.x
cmov_logical r2.x, r4.z, r2.w, r2.x
cmov_logical r0.x, r4.x, r4.y, r2.x
mov out0, r0
mend
__floor_f32
mdef(222)_out(1)_in(1)
mov r0, in0
round_neginf r0.x___, r0.x
mov out0, r0
mend
__fmax_f32
mdef(223)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x80000000
and r1, r0.xyxy, l0
ixor r0.__z_, r1.w, r1.z
dcl_literal l1, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
ilt r1.xy__, l1, r1.xyxx
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.__z_, r0.z, l2
inot r0.___w, r0.z
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r0.x, l3
and r1.__zw, r0.zzzw, r1.z
ilt r2.xy__, r0.yxyy, r0.xyxx
and r1.___w, r1.w, r2.x
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, r0.x, l4
and r0.__zw, r0.zzzw, r2.x
and r0.___w, r2.y, r0.w
ior r0.___w, r1.w, r0.w
ior r0.___w, r1.z, r0.w
cmov_logical r0.___w, r0.w, r0.x, r0.y
inot r1.__zw, r1.yyyx
and r1.x_zw, r1.yyzw, r1.xxxy
ior r0.__z_, r0.z, r1.z
cmov_logical r0._y__, r0.z, r0.y, r0.w
cmov_logical r0.x___, r1.w, r0.x, r0.y
dcl_literal l5, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r1.x, l5, r0.x
mov out0, r0
mend
mdef(224)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mad_ieee r3.x, r0.x, r1.x, r2.x
mov r4.x, r2.x
dcl_literal l1, 23, 23, 23, 23
ishr r24.x, r0.x, l1.x
ishr r25.x, r1.x, l1.x
ishr r26.x, r2.x, l1.x
dcl_literal l2, 0xff, 0xff, 0xff, 0xff
iand r24.x, r24.x, l2.x
iand r25.x, r25.x, l2.x
iand r26.x, r26.x, l2.x
dcl_literal l3, -127, -127, -127, -127
iadd r24.x, r24.x, l3.x
iadd r25.x, r25.x, l3.x
iadd r26.x, r26.x, l3.x
iadd r27.x, r24.x, r25.x
iadd r28.x, r26.x, r27.x_neg(xyzw)
dcl_literal l4, 127, 127, 127, 127
iadd r28.x, r28.x, l4.x
ishl r28.x, r28.x, l1.x
ieq r29.x, r24.x, l3.x
ieq r30.x, r25.x, l3.x
ieq r31.x, r26.x, l3.x
dcl_literal l5, 128, 128, 128, 128
ieq r32.x, r24.x, l5.x
ieq r33.x, r25.x, l5.x
ieq r34.x, r26.x, l5.x
ior r29.x, r29.x, r32.x
ior r30.x, r30.x, r33.x
ior r31.x, r31.x, r34.x
ior r35.x, r29.x, r30.x
ior r35.x, r35.x, r31.x
ior r36.x, r32.x, r33.x
inot r36.x, r36.x
iand r36.x, r36.x, r34.x
dcl_literal l6, 0x807fffff, 0x807fffff, 0x807fffff, 0x807fffff
iand r37.x, r0.x, l6.x
iand r38.x, r1.x, l6.x
iand r39.x, r2.x, l6.x
dcl_literal l7, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000
ior r37.x, r37.x, l7.x
ior r38.x, r38.x, l7.x
ior r39.x, r39.x, r28.x
mov r0.x, r37.x
mov r1.x, r38.x
mov r2.x, r39.x
dcl_literal l8, 0xfffff000, 0xfffff000, 0xfffff000, 0xfffff000
iand r5.x, r37.x, l8.x
iand r6.x, r38.x, l8.x
add r7.x, r0.x, r5.x_neg(xyzw)
add r8.x, r1.x, r6.x_neg(xyzw)
mul_ieee r9.x, r0.x, r1.x
mad_ieee r10.x, r5.x, r6.x, r9.x_neg(xyzw)
mad_ieee r10.x, r5.x, r8.x, r10.x
mad_ieee r10.x, r7.x, r6.x, r10.x
mad_ieee r10.x, r7.x, r8.x, r10.x
add r11.x, r9.x, r2.x
add r12.x, r9.x, r11.x_neg(xyzw)
add r12.x, r12.x, r2.x
add r13.x, r2.x, r11.x_neg(xyzw)
add r13.x, r13.x, r9.x
dcl_literal l9, 0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff
iand r40.x, r9.x, l9.x
iand r41.x, r2.x, l9.x
ilt r42.x, r41.x, r40.x
cmov_logical r14.x, r42.x, r12.x, r13.x
add r15.x, r14.x, r10.x
add r16.x, r14.x, r15.x_neg(xyzw)
add r16.x, r16.x, r10.x
add r17.x, r10.x, r15.x_neg(xyzw)
add r17.x, r17.x, r14.x
iand r40.x, r14.x, l9.x
iand r41.x, r10.x, l9.x
ilt r42.x, r41.x, r40.x
cmov_logical r18.x, r42.x, r16.x, r17.x
iadd r40.x, r27.x, r26.x_neg(xyzw)
dcl_literal l10, 60, 60, 60, 60
ilt r42.x, r40.x, l10.x
cmov_logical r19.x, r42.x, r11.x, r9.x
cmov_logical r20.x, r42.x, r15.x, r10.x
cmov_logical r21.x, r42.x, r18.x, r4.x
dcl_literal l11, 0x7f800000, 0x7f800000, 0x7f800000, 0x7f800000
iand r43.x, r19.x, l11.x
iand r44.x, r20.x, l11.x
iadd r45.x, r43.x, r44.x_neg(xyzw)
dcl_literal l12, 0x0c000000, 0x0c000000, 0x0c000000, 0x0c000000
ieq r45.x, r45.x, l12.x
dcl_literal l13, 0x007fffff, 0x007fffff, 0x007fffff, 0x007fffff
iand r43.x, r20.x, l13.x
dcl_literal l14, 0, 0, 0, 0
ieq r43.x, r43.x, l14.x
iand r44.x, r21.x, l9.x
ine r44.x, r44.x, l14.x
iand r45.x, r45.x, r43.x
iand r45.x, r45.x, r44.x
dcl_literal l15, 0x80000000, 0x80000000, 0x80000000, 0x80000000
iand r46.x, r21.x, l15.x
iand r47.x, r20.x, l11.x
dcl_literal l16, 0xf4800000, 0xf4800000, 0xf4800000, 0xf4800000
iadd r47.x, r47.x, l16.x
ior r21.x, r46.x, r47.x
add r22.x, r20.x, r21.x
cmov_logical r20.x, r45.x, r22.x, r20.x
add r23.x, r19.x, r20.x
ishr r48.x, r23.x, l1.x
iand r48.x, r48.x, l2.x
iadd r48.x, r48.x, l3.x
iadd r48.x, r48.x, r27.x
iadd r48.x, r48.x, l4.x
iand r49.x, r48.x, l2.x
ishl r49.x, r49.x, l1.x
iand r50.x, r23.x, l6.x
ior r50.x, r50.x, r49.x
iand r40.x, r23.x, l9.x
ieq r42.x, r40.x, l14.x
cmov_logical r23.x, r42.x, r23.x, r50.x
iand r51.x, r23.x, l15.x
ige r42.x, l14.x, r48.x
cmov_logical r23.x, r42.x, r51.x, r23.x
ior r51.x, r51.x, l11.x
dcl_literal l17, 254, 254, 254, 254
ilt r42.x, l17.x, r48.x
cmov_logical r23.x, r42.x, r51.x, r23.x
iadd r40.x, r26.x, r27.x_neg(xyzw)
dcl_literal l18, 30, 30, 30, 30
ilt r42.x, l18.x, r40.x
cmov_logical r23.x, r42.x, r4.x, r23.x
cmov_logical r23.x, r35.x, r3.x, r23.x
cmov_logical r23.x, r36.x, r4.x, r23.x
mov r0.x, r23.x
mov out0, r0
mend
__fma_f64
mdef(225)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
dmad r0.xy__, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__fmin_f32
mdef(226)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x80000000
and r1, r0.xyxy, l0
ixor r0.__z_, r1.w, r1.z
dcl_literal l1, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
ilt r1.xy__, l1, r1.xyxx
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.__z_, r0.z, l2
inot r0.___w, r0.z
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r0.x, l3
and r1.__zw, r0.zzzw, r1.z
ilt r2.xy__, r0.xyxx, r0.yxyy
and r1.___w, r1.w, r2.x
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, r0.x, l4
and r0.__zw, r0.zzzw, r2.x
and r0.___w, r2.y, r0.w
ior r0.___w, r1.w, r0.w
ior r0.__z_, r0.z, r0.w
cmov_logical r0.__z_, r0.z, r0.x, r0.y
inot r2.xy__, r1.yxyy
and r2.xy__, r1.xyxx, r2.xyxx
and r0.___w, r1.y, r1.x
ior r1.x___, r1.z, r2.x
cmov_logical r0._y__, r1.x, r0.y, r0.z
cmov_logical r0._y__, r2.y, r0.x, r0.y
dcl_literal l5, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l5
cmov_logical r0.x___, r0.w, r0.x, r0.y
mov out0, r0
mend
__fmod_f32
mdef(227)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x7F800000
and r1, r0.xyxy, l0
dcl_literal l1, 0x7F800000, 0x00000000, 0x00000000, 0x00000000
ine r2.xyz_, r1.xyxx, l1
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r0.__z_, l2, r1.x
and r0.__z_, r2.x, r0.z
dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r1.w, l3
dcl_literal l4, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ilt r1.___w, r0.w, l4
and r1.___w, r2.y, r1.w
dcl_literal l5, 0x00000030, 0x00000030, 0x00000030, 0x00000030
iadd r0.___w, l5, r0.w_neg(xyzw)
and r0.___w, r1.w, r0.w
itof r1.___w, r0.w
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r1.___w, r1.w, l6
if_logicalnz r1.w
    dcl_literal l7, 0x7FFFFFFF, 0x7F800000, 0x00000000, 0x007FFFFF
    and r2.xy_w, r0.y, l7
    itof r2.___w, r2.w
    cmov_logical r2.x___, r2.y, r2.x, r2.w
    dcl_literal l8, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r2.___w, r0.w, l8
    cmov_logical r0.___w, r2.y, r0.w, r2.w
    dcl_literal l9, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF
    and r2._y_w, r2.x, l9
    dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2._y__, r2.y, l10
    iadd r2._y__, r2.y, r0.w
    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l11
    iadd r0.___w, r2.x, r0.w
    dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.x___, r2.y, l12
    dcl_literal l13, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2._y__, l13, r2.x
    dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r2.y, l14, r0.w
    dcl_literal l15, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.x___, l15, r2.x_neg(xyzw)
    dcl_literal l16, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2._y__, r2.w, l16
    dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r2.___w, l17, r2.x
    dcl_literal l18, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.x___, r2.w, l18, r2.x
    dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2.x___, r2.x, l19
    ishr r2._y__, r2.y, r2.x
    dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.x___, l20, r2.x
    cmov_logical r0.___w, r2.x, r2.y, r0.w
else
    mov r0.___w, r1.y
endif
dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r2.x___, r0.w, l21
dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.x___, r2.x, l22
dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r2._y__, r0.x, l23
dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2._y__, r2.y, l24
ige r2.___w, r2.x, r2.y
iadd r2.x___, r2.y, r2.x_neg(xyzw)
itof r2.x___, r2.x
dcl_literal l25, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB
mul_ieee r2.x___, r2.x, l25
round_neginf r2.x___, r2.x
dcl_literal l26, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x___, r2.w, l26, r2.x
ftoi r2._y__, r2.x
dcl_literal l27, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C
imul r2.___w, r2.y, l27
dcl_literal l28, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishr r2.___w, r2.w, l28
dcl_literal l29, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C
imad r2._y__, r2.y, l29, r2.w_neg(xyzw)
dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
iadd r2.___w, r2.w, l30
dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.___w, r2.w, l31
mul_ieee r2.___w, r0.w, r2.w
dcl_literal l32, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
iadd r2._y__, r2.y, l32
dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2._y__, r2.y, l33
mul_ieee r2._y__, r2.w, r2.y
dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r2.___w, r2.x, l34
cmov_logical r0.___w, r2.w, r0.w, r2.y
dcl_literal l35, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
dcl_literal l36, 0x39800000, 0x39800000, 0x39800000, 0x39800000
cmov_logical r2._y__, r2.w, l35, l36
dcl_literal l37, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r2.___w, r0.w, l37
dcl_literal l38, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.___w, r2.w, l38
dcl_literal l39, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.___w, r2.w, l39
dcl_literal l40, 0x38800000, 0x38800000, 0x38800000, 0x38800000
mul_ieee r3.x___, r0.w, l40
dcl_literal l41, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r3._y__, l41, r2.w
dcl_literal l42, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r2.___w, l42, r2.w
and r2.___w, r3.y, r2.w
dcl_literal l43, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r3._y__, r2.w, l43
dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r3.__z_, l44, r2.x
and r2.___w, r2.w, r3.z
cmov_logical r2.___w, r2.w, r3.x, r0.w
mov r3.x___, r1.x
mov r3.__z_, r2.w
mov r3.___w, r0.w
mov r4.x___, r3.y
dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r4._y__, l45
whileloop
    ge r4.__z_, r4.y, r2.x
    break_logicalnz r4.z
    div_zeroop(infinity) r4.__z_, r3.x, r3.z
    dcl_literal l46, 0x38800000, 0x38800000, 0x38800000, 0x38800000
    mul_ieee r4.___w, r4.z, l46
    cmov_logical r4.__z_, r4.x, r4.w, r4.z
    round_neginf r4.__z_, r4.z
    dcl_literal l47, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r4.___w, r3.w, l47
    add r5.x___, r3.w, r4.w_neg(xyzw)
    dcl_literal l48, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r5._y__, r4.z, l48
    add r5.__z_, r4.z, r5.y_neg(xyzw)
    mul_ieee r4.__z_, r3.w, r4.z
    mad_ieee r5.___w, r4.w, r5.y, r4.z_neg(xyzw)
    mad_ieee r4.___w, r4.w, r5.z, r5.w
    mad_ieee r4.___w, r5.x, r5.y, r4.w
    mad_ieee r4.___w, r5.x, r5.z, r4.w
    add r5.x___, r3.x, r4.z_neg(xyzw)
    add r5._y__, r3.x, r5.x_neg(xyzw)
    add r4.__z_, r4.z_neg(xyzw), r5.y
    add r4.__z_, r4.w_neg(xyzw), r4.z
    add r4.__z_, r5.x, r4.z
    dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r4.___w, r4.z, l49
    add r5.x___, r3.w, r4.z
    cmov_logical r4.__z_, r4.w, r5.x, r4.z
    dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r4.___w, r4.z, l50
    add r5.x___, r3.w, r4.z
    cmov_logical r4.__z_, r4.w, r5.x, r4.z
    ge r4.___w, r4.z, r3.w
    add r5.x___, r3.w_neg(xyzw), r4.z
    cmov_logical r3.x___, r4.w, r5.x, r4.z
    mul_ieee r3.___w, r2.y, r3.w
    dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r4._y__, r4.y, l51
    mov r3.x_zw, r3.xxww
    dcl_literal l52, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r4.x___, l52
endloop
mov r2.xy_w, r3.xzxz
dcl_literal l53, 0x7F800000, 0x7F800000, 0xFFFFF000, 0x00000000
and r3.xyz_, r2.xywx, l53
dcl_literal l54, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.xy__, r3.xyxx, l54
dcl_literal l55, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, r3.y, l55
dcl_literal l56, 0x38800000, 0x38800000, 0x38800000, 0x38800000
mul_ieee r2._y__, r2.w, l56
dcl_literal l57, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r3._y__, l57, r0.w
dcl_literal l58, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r0.___w, l58, r0.w
and r0.___w, r3.y, r0.w
cmov_logical r2._y__, r0.w, r2.y, r2.w
div_zeroop(infinity) r2._y__, r2.x, r2.y
dcl_literal l59, 0x38800000, 0x38800000, 0x38800000, 0x38800000
mul_ieee r3._y__, r2.y, l59
cmov_logical r0.___w, r0.w, r3.y, r2.y
round_neginf r0.___w, r0.w
add r2._y__, r2.w, r3.z_neg(xyzw)
dcl_literal l60, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3._y__, r0.w, l60
add r3.___w, r0.w, r3.y_neg(xyzw)
mul_ieee r0.___w, r2.w, r0.w
mad_ieee r4.x___, r3.z, r3.y, r0.w_neg(xyzw)
mad_ieee r3.__z_, r3.z, r3.w, r4.x
mad_ieee r3._y__, r2.y, r3.y, r3.z
mad_ieee r2._y__, r2.y, r3.w, r3.y
add r3._y__, r2.x, r0.w_neg(xyzw)
add r3.__z_, r2.x, r3.y_neg(xyzw)
add r0.___w, r0.w_neg(xyzw), r3.z
add r0.___w, r2.y_neg(xyzw), r0.w
add r0.___w, r3.y, r0.w
dcl_literal l61, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2._y__, r0.w, l61
add r3._y__, r2.w, r0.w
cmov_logical r0.___w, r2.y, r3.y, r0.w
dcl_literal l62, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2._y__, r0.w, l62
add r3._y__, r2.w, r0.w
cmov_logical r0.___w, r2.y, r3.y, r0.w
ge r2._y__, r0.w, r2.w
add r2.___w, r2.w_neg(xyzw), r0.w
cmov_logical r0.___w, r2.y, r2.w, r0.w
cmov_logical r0.___w, r3.x, r0.w, r2.x
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r2.x___, r0.w, l63
and r1.___w, r1.w, r2.x
if_logicalnz r1.w
    dcl_literal l64, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF
    and r3, r0.w, l64
    dcl_literal l65, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ior r1.___w, r3.x, l65
    dcl_literal l66, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    add r1.___w, r1.w, l66
    dcl_literal l67, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r1.___w, r1.w, l67
    dcl_literal l68, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    iadd r1.___w, l68, r1.w_neg(xyzw)
    dcl_literal l69, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r1.___w, r1.w, l69
    dcl_literal l70, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ushr r1.___w, r1.w, l70
    dcl_literal l71, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    cmov_logical r1.___w, r3.x, r1.w, l71
    dcl_literal l72, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r1.___w, r1.w_neg(xyzw), l72
    dcl_literal l73, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r2.x___, r3.x, l73
    dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ine r2._y__, r3.x, l74
    and r2.x___, r2.x, r2.y
    dcl_literal l75, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2._y__, r3.y, l75
    dcl_literal l76, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2._y__, r2.y, l76
    cmov_logical r1.___w, r2.x, r1.w, r2.y
    dcl_literal l77, 0x7FFFFFFF, 0x7F800000, 0x00000000, 0x007FFFFF
    and r2.xy_w, r0.y, l77
    dcl_literal l78, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ior r0._y__, r2.x, l78
    dcl_literal l79, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    add r0._y__, r0.y, l79
    dcl_literal l80, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0._y__, r0.y, l80
    dcl_literal l81, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    iadd r0._y__, l81, r0.y_neg(xyzw)
    dcl_literal l82, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0._y__, r0.y, l82
    dcl_literal l83, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ushr r0._y__, r0.y, l83
    dcl_literal l84, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    cmov_logical r0._y__, r2.x, r0.y, l84
    dcl_literal l85, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r0._y__, r0.y_neg(xyzw), l85
    dcl_literal l86, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r4.x___, r2.x, l86
    dcl_literal l87, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ine r4._y__, r2.x, l87
    and r4.x___, r4.x, r4.y
    dcl_literal l88, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4._y__, r2.y, l88
    dcl_literal l89, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r4._y__, r4.y, l89
    cmov_logical r0._y__, r4.x, r0.y, r4.y
    inegate r4.x___, r0.y
    itof r4._y__, r4.x
    itof r2.___w, r2.w
    cmov_logical r2.x___, r2.y, r2.x, r2.w
    dcl_literal l90, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r2.___w, r4.x, l90
    cmov_logical r2._y__, r2.y, r4.x, r2.w
    dcl_literal l91, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
    and r4.__zw, r2.x, l91
    dcl_literal l92, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.___w, r4.z, l92
    iadd r2.___w, r2.w, r2.y
    dcl_literal l93, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2._y__, r2.y, l93
    iadd r2.x___, r2.x, r2.y
    dcl_literal l94, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2._y__, r2.w, l94
    dcl_literal l95, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2.___w, l95, r2.y
    dcl_literal l96, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2.x___, r2.w, l96, r2.x
    dcl_literal l97, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2._y__, l97, r2.y_neg(xyzw)
    dcl_literal l98, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.___w, r4.w, l98
    dcl_literal l99, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.__z_, l99, r2.y
    dcl_literal l100, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2._y__, r4.z, l100, r2.y
    dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2._y__, r2.y, l101
    ishr r2.___w, r2.w, r2.y
    dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, l102, r2.y
    cmov_logical r2.x___, r2.y, r2.w, r2.x
    dcl_literal l103, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r2._y__, l103, r4.y
    dcl_literal l104, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2.x___, r2.y, l104, r2.x
    inegate r2._y__, r1.w
    itof r2.___w, r2.y
    itof r3.___w, r3.w
    cmov_logical r3.x___, r3.y, r3.x, r3.w
    dcl_literal l105, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r3.___w, r2.y, l105
    cmov_logical r2._y__, r3.y, r2.y, r3.w
    dcl_literal l106, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF
    and r3._y_w, r3.x, l106
    dcl_literal l107, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3._y__, r3.y, l107
    iadd r3._y__, r3.y, r2.y
    dcl_literal l108, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2._y__, r2.y, l108
    iadd r2._y__, r3.x, r2.y
    dcl_literal l109, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3.x___, r3.y, l109
    dcl_literal l110, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3._y__, l110, r3.x
    dcl_literal l111, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2._y__, r3.y, l111, r2.y
    dcl_literal l112, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3.x___, l112, r3.x_neg(xyzw)
    dcl_literal l113, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3._y__, r3.w, l113
    dcl_literal l114, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.___w, l114, r3.x
    dcl_literal l115, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3.x___, r3.w, l115, r3.x
    dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r3.x___, r3.x, l116
    ishr r3._y__, r3.y, r3.x
    dcl_literal l117, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3.x___, l117, r3.x
    cmov_logical r2._y__, r3.x, r3.y, r2.y
    dcl_literal l118, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r2.___w, l118, r2.w
    dcl_literal l119, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2._y__, r2.w, l119, r2.y
    ior r2._y__, r3.z, r2.y
    iadd r1.___w, r1.w, r4.x
    mov r2.___w, r2.y
    mov r3.x___, r1.w
    whileloop
       
        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ige r3._y__, l120, r3.x
        break_logicalnz r3.y
        ge r3._y__, r2.w, r2.x
        add r3.__z_, r2.x_neg(xyzw), r2.w
        cmov_logical r3._y__, r3.y, r3.z, r2.w
        add r2.___w, r3.y, r3.y
       
        dcl_literal l121, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r3.x___, r3.x, l121
    endloop
    ge r2._y__, r2.w, r2.x
    add r2.x___, r2.x_neg(xyzw), r2.w
    cmov_logical r2.x___, r2.y, r2.x, r2.w
    itof r2._y__, r0.y
    dcl_literal l122, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r3, r2.x, l122
    itof r2.x___, r3.w
    cmov_logical r2.x___, r3.z, r3.x, r2.x
    dcl_literal l123, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r2.___w, r0.y, l123
    cmov_logical r0._y__, r3.z, r0.y, r2.w
    dcl_literal l124, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
    and r3.x_z_, r2.x, l124
    dcl_literal l125, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.___w, r3.x, l125
    iadd r2.___w, r2.w, r0.y
    dcl_literal l126, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0._y__, r0.y, l126
    iadd r0._y__, r2.x, r0.y
    dcl_literal l127, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.x___, r2.w, l127
    dcl_literal l128, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2.___w, l128, r2.x
    dcl_literal l129, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0._y__, r2.w, l129, r0.y
    dcl_literal l130, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.x___, l130, r2.x_neg(xyzw)
    dcl_literal l131, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.___w, r3.z, l131
    dcl_literal l132, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.x___, l132, r2.x
    dcl_literal l133, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.x___, r3.x, l133, r2.x
    dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2.x___, r2.x, l134
    ishr r2.___w, r2.w, r2.x
    dcl_literal l135, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.x___, l135, r2.x
    cmov_logical r0._y__, r2.x, r2.w, r0.y
    dcl_literal l136, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r2.x___, l136, r2.y
    dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0._y__, r2.x, l137, r0.y
    ior r0._y__, r3.y, r0.y
    dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ige r1.___w, r1.w, l138
    cmov_logical r0.___w, r1.w, r0.y, r0.w
endif
dcl_literal l139, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ixor r0._y__, r0.w, l139
cmov_logical r0._y__, r1.z, r0.y, r0.w
dcl_literal l140, 0x7F800000, 0x00000000, 0x00000000, 0x00000000
ieq r1.x_zw, r1.yyxy, l140
dcl_literal l141, 0x7F800000, 0x00000000, 0x00000000, 0x00000000
ilt r2.xy__, l141, r1.y
and r0.___w, r1.z, r2.y
inot r1._y__, r2.x
and r0.___w, r0.w, r1.y
cmov_logical r0._y__, r0.w, r0.x, r0.y
inot r0.___w, r0.z
ior r0.___w, r1.w, r0.w
ior r0.___w, r2.x, r0.w
dcl_literal l142, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.w, l142, r0.y
and r0.__z_, r2.z, r0.z
and r0.__z_, r1.x, r0.z
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__fract_2f32f32
mdef(228)_out(1)_in(1)
mov r0, in0
round_z r1._y__, r0.x
add r1.x___, r0.x, r1.y_neg(xyzw)
dcl_literal l0, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000
add r2._yz_, r1.yyxy, l0
dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r0.___w, r2.z, l1
dcl_literal l2, 0x3F7FFFFF, 0x3F7FFFFF, 0x3F7FFFFF, 0x3F7FFFFF
cmov_logical r2.x___, r0.w, l2, r2.z
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r1.x, l3
cmov_logical r1._yz_, r0.w, r2.xxyx, r1.xxyx
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r0.___w, r1.y, l4
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r1.___w, r0.x, l5
and r0.___w, r0.w, r1.w
dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r1.x___, r0.w, l6, r1.y
dcl_literal l7, 0x00000000, 0x7FFFFFFF, 0x00000000, 0x7F800000
and r1._y_w, r0.x, l7
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.___w, r1.w, l8
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.___w, r1.y, l9
and r0.___w, r0.w, r1.w
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.___w, r0.x, l10
and r0.___w, r0.w, r1.w
dcl_literal l11, 0x3F7FFFFF, 0x00000000, 0xBF800000, 0x00000000
cmov_logical r1.x_z_, r0.w, l11, r1.xxzx
dcl_literal l12, 0x00000000, 0x00000000, 0x80000000, 0x00000000
mov r0._yz_, l12
dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l13, r0.x
dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ilt r1.___w, r1.y, l14
and r0.___w, r0.w, r1.w
cmov_logical r1.x_z_, r0.w, r0.xxyx, r1.xxzx
cmov_logical r1.x_z_, r1.y, r1.xxzx, r0.x
dcl_literal l15, 0x7F800000, 0xFF800000, 0x00000000, 0x00000000
ieq r2.xy__, r0.x, l15
dcl_literal l16, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.___w, l16, r1.y
cmov_logical r1.xy__, r2.x, r0.yxyy, r1.xzxx
cmov_logical r0.xy__, r2.y, r0.zxzz, r1.xyxx
dcl_literal l17, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r0.w, l17, r0.xyxx
mov out0, r0
mend
__frexp_2f32f32
mdef(229)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x80000000, 0x7FFFFFFF, 0x00000000
and r0._yz_, r0.x, l0
itof r0.___w, r0.z
dcl_literal l1, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
and r1.xy__, r0.w, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r1.x, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.x___, r1.y, l3
dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019
iadd r0.___w, r0.w, l4
dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r0.___w, l5, r0.w_neg(xyzw)
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1._y__, l6, r0.w
dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.___w, r1.y, l7, r0.w
inegate r1._y__, r0.w
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1._y__, r1.y, l8
iadd r1._y__, r1.x, r1.y
ishr r1.x___, r1.x, r0.w
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l9, r0.w
cmov_logical r0.___w, r0.w, r1.x, r1.y
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.x___, r0.z, l10
dcl_literal l11, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r0.__z_, r0.z, l11
and r0.__z_, r1.x, r0.z
cmov_logical r0.x___, r0.z, r0.w, r0.x
dcl_literal l12, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7
and r0.__z_, r0.z, l12
ior r0._y__, r0.y, r0.x
dcl_literal l13, 0x00000000, 0x7FFFFFFF, 0x00000000, 0x807FFFFF
and r0._y_w, r0.y, l13
dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r0.y, l14
iadd r0.__z_, r1.x, r0.z
dcl_literal l15, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.__z_, l15, r0.z
dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r0.y, r0.z, l16
dcl_literal l17, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r1.x___, r0.y, l17
dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x___, r1.x, l18, r0.z
dcl_literal l19, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
ior r0.__z_, r0.w, l19
dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.y, r0.z, l20
cmov_logical r0.x___, r1.x, r0.x, r0.y
mov r0._y__, r2.x
mov out0, r0
mend
__ftol_i64
mdef(230)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7F800000, 0x80000000, 0x007FFFFF, 0x00000000
and r0.xyz_, r0.x, l0
dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.x___, r0.x, l1
dcl_literal l2, 0xFFFFFF81, 0x00000000, 0x00000000, 0xFFFFFF6A
iadd r0.x__w, r0.x, l2
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r0.x, l3
dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ige r1._y__, l4, r0.x
and r1.x___, r1.x, r1.y
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
iadd r1._y__, l5, r0.x_neg(xyzw)
cmov_logical r0.___w, r1.x, r1.y, r0.w
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, r0.x, l6
dcl_literal l7, 0x00000040, 0x00000040, 0x00000040, 0x00000040
imin r0.___w, r0.w, l7
dcl_literal l8, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r1._y__, r0.w, l8
dcl_literal l9, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r0.w, l9
cmov_logical r1._y__, r1.z, r1.y, r0.w
dcl_literal l10, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r1.___w, l10, r1.y_neg(xyzw)
dcl_literal l11, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r0.__z_, r0.z, l11
ushr r1.___w, r0.z, r1.w
ishl r1._y__, r0.z, r1.y
cmov_logical r1.___w, r1.z, r1.y, r1.w
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l12, r1.y
dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r0.w, r1.w, l13
cmov_logical r2.x___, r0.w, r1.y, r0.z
dcl_literal l14, 0x00000020, 0x00000020, 0x00000020, 0x00000020
imin r1._y__, r0.w, l14
dcl_literal l15, 0x00000040, 0x00000040, 0x00000040, 0x00000040
ieq r0.___w, r0.w, l15
ushr r0.__z_, r0.z, r1.y
dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l16, r0.z
dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r1.__z_, l17
dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__zw, r0.w, l18, r1.yyyz
cmov_logical r0.__zw, r1.x, r0.zzzw, r2.xxxy
inot r1.xy__, r0.zwzz
dcl_literal l19, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r1.__z_, r1.x, l19
ult r1.x___, r1.z, r1.x
cmov_logical r1.__z_, r0.y, r1.z, r0.z
dcl_literal l20, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r0.__z_, r1.x, l20
iadd r0.__z_, r1.y, r0.z
cmov_logical r1.___w, r0.y, r0.z, r0.w
dcl_literal l21, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r0.x, l21, r1.zwzz
mov out0, r0
mend
__ftoul_i64
mdef(231)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7F800000, 0x007FFFFF, 0x80000000, 0x00000000
and r0.xyz_, r0.x, l0
dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.x___, r0.x, l1
dcl_literal l2, 0xFFFFFF81, 0x00000000, 0x00000000, 0xFFFFFF6A
iadd r0.x__w, r0.x, l2
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r0.x, l3
dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ige r1._y__, l4, r0.x
and r1.x___, r1.x, r1.y
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
iadd r1._y__, l5, r0.x_neg(xyzw)
cmov_logical r0.___w, r1.x, r1.y, r0.w
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, r0.x, l6
dcl_literal l7, 0x00000040, 0x00000040, 0x00000040, 0x00000040
imin r0.___w, r0.w, l7
dcl_literal l8, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r1._y__, r0.w, l8
dcl_literal l9, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r0.w, l9
cmov_logical r1._y__, r1.z, r1.y, r0.w
dcl_literal l10, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r1.___w, l10, r1.y_neg(xyzw)
dcl_literal l11, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r0._y__, r0.y, l11
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.__z_, r0.z, l12
ushr r1.___w, r0.y, r1.w
ishl r1._y__, r0.y, r1.y
cmov_logical r1.___w, r1.z, r1.y, r1.w
dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l13, r1.y
dcl_literal l14, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r0.w, r1.w, l14
cmov_logical r2.x___, r0.w, r1.y, r0.y
dcl_literal l15, 0x00000020, 0x00000020, 0x00000020, 0x00000020
imin r1._y__, r0.w, l15
dcl_literal l16, 0x00000040, 0x00000040, 0x00000040, 0x00000040
ieq r0.___w, r0.w, l16
ushr r0._y__, r0.y, r1.y
dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l17, r0.y
dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r1.__z_, l18
dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y_w, r0.w, l19, r1.yyyz
cmov_logical r0._y_w, r1.x, r0.yyyw, r2.xxxy
ior r0.x___, r0.x, r0.z
dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r0.x, l20, r0.ywyy
mov out0, r0
mend
__ftz_2f32
mdef(232)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x7F800000, 0xFFFFFFFF, 0x80000000, 0x00000000
iand r1.xy_, r0.xy, l1.xxxx
cmov_logical r1.xy__, r1.xy, l1.yyyy, l1.zzzz
iand r0.xy__, r0.xy, r1.xy
mov out0, r0
mend
__ftz_4f32
mdef(233)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x7F800000, 0xFFFFFFFF, 0x80000000, 0x00000000
iand r1, r0, l1.xxxx
cmov_logical r1, r1, l1.yyyy, l1.zzzz
iand r0, r0, r1
mov out0, r0
mend
__ftz_f32
mdef(234)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x7F800000, 0xFFFFFFFF, 0x80000000, 0x00000000
iand r1.x___, r0.x, l1.x
cmov_logical r1.x___, r1.x, l1.y, l1.z
iand r0.x___, r0.x, r1.x
mov out0, r0
mend
__half_cos_f32
mdef(235)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x3A000000, 0x3A000000, 0x3A000000, 0x3A000000
ige r0.__z_, r0.y, l1
dcl_literal l2, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
lt r0.___w, r0.y, l2
and r0.__z_, r0.z, r0.w
if_logicalnz r0.z
    mul_ieee r0.__z_, r0.y, r0.y
    dcl_literal l3, 0xAD47D74E, 0xAD47D74E, 0xAD47D74E, 0xAD47D74E
    dcl_literal l4, 0x310F74F6, 0x310F74F6, 0x310F74F6, 0x310F74F6
    mad_ieee r0.___w, r0.z, l3, l4
    dcl_literal l5, 0xB492923A, 0xB492923A, 0xB492923A, 0xB492923A
    mad_ieee r0.___w, r0.z, r0.w, l5
    dcl_literal l6, 0x37D00AE2, 0x37D00AE2, 0x37D00AE2, 0x37D00AE2
    mad_ieee r0.___w, r0.z, r0.w, l6
    dcl_literal l7, 0xBAB60B60, 0xBAB60B60, 0xBAB60B60, 0xBAB60B60
    mad_ieee r0.___w, r0.z, r0.w, l7
    dcl_literal l8, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB
    mad_ieee r0.___w, r0.z, r0.w, l8
    mul_ieee r1.x___, r0.z, r0.z
    dcl_literal l9, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r1._y__, r0.x, l9
    dcl_literal l10, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A
    ige r1.__z_, r1.y, l10
    dcl_literal l11, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ige r1.___w, l11, r1.y
    and r1.__z_, r1.z, r1.w
    dcl_literal l12, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000
    iadd r1.___w, r1.y, l12
    and r1.__z_, r1.z, r1.w
    dcl_literal l13, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ilt r1._y__, l13, r1.y
    dcl_literal l14, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000
    cmov_logical r1._y__, r1.y, l14, r1.z
    dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r0.__z_, r0.z, l15, r1.y_neg(xyzw)
    dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r1._y__, r1.y_neg(xyzw), l16
    mad_ieee r0.__z_, r0.w_neg(xyzw), r1.x, r0.z
    add r0.__z_, r1.y, r0.z_neg(xyzw)
else
    dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0.__z_, l17
endif
dcl_literal l18, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
ge r0.___w, r0.y, l18
dcl_literal l19, 0x47800000, 0x47800000, 0x47800000, 0x47800000
ge r1.x___, l19, r0.y
and r0.___w, r0.w, r1.x
if_logicalnz r0.w
    dcl_literal l20, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983
    mul_ieee r0.___w, r0.y, l20
    round_nearest r0.___w, r0.w
    dcl_literal l21, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r1.x___, r0.w, l21
    add r1._y__, r0.w, r1.x_neg(xyzw)
    dcl_literal l22, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
    mul_ieee r1.__z_, r0.w, l22
    dcl_literal l23, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000
    mul_ieee r2.xyz_, r0.w, l23
    dcl_literal l24, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
    mad_ieee r3.xy__, r1.x, l24, r2.xyxx_neg(xyzw)
    dcl_literal l25, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
    mad_ieee r3.xy__, r1.x, l25, r3.xyxx
    dcl_literal l26, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
    mad_ieee r3.xy__, r1.y, l26, r3.xyxx
    dcl_literal l27, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
    mad_ieee r3.xy__, r1.y, l27, r3.xyxx
    add r0.___w, r0.y, r2.x_neg(xyzw)
    add r1.___w, r0.y, r0.w_neg(xyzw)
    add r1.___w, r2.x_neg(xyzw), r1.w
    add r1.___w, r3.x_neg(xyzw), r1.w
    add r0.___w, r0.w, r1.w
    add r1.___w, r2.y_neg(xyzw), r0.w
    add r0.___w, r0.w, r1.w_neg(xyzw)
    add r0.___w, r2.y_neg(xyzw), r0.w
    add r0.___w, r3.y_neg(xyzw), r0.w
    add r0.___w, r1.w, r0.w
    dcl_literal l28, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
    mad_ieee r1.___w, r1.x, l28, r2.z_neg(xyzw)
    dcl_literal l29, 0x21188000, 0x21188000, 0x21188000, 0x21188000
    mad_ieee r1.x___, r1.x, l29, r1.w
    dcl_literal l30, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
    mad_ieee r1.x___, r1.y, l30, r1.x
    dcl_literal l31, 0x21188000, 0x21188000, 0x21188000, 0x21188000
    mad_ieee r1.x___, r1.y, l31, r1.x
    add r1._y__, r2.z_neg(xyzw), r0.w
    add r0.___w, r0.w, r1.y_neg(xyzw)
    add r0.___w, r2.z_neg(xyzw), r0.w
    add r0.___w, r1.y, r0.w
    frc r1._y__, r1.z
    dcl_literal l32, 0x40800000, 0x40800000, 0x40800000, 0x40800000
    mul_ieee r1._y__, r1.y, l32
    round_nearest r1._y__, r1.y
    mul_ieee r1.__z_, r0.w, r0.w
    mul_ieee r1.___w, r0.w, r1.z
    dcl_literal l33, 0x2F2EC9D3, 0xAD47D74E, 0x00000000, 0x00000000
    dcl_literal l34, 0xB2D72F34, 0x310F74F6, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, l33, l34
    dcl_literal l35, 0x3636DF25, 0xB492923A, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, r2.xyxx, l35
    dcl_literal l36, 0xB95009D4, 0x37D00AE2, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, r2.xyxx, l36
    dcl_literal l37, 0x3C088887, 0xBAB60B60, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, r2.xyxx, l37
    mul_ieee r2.x___, r1.w, r2.x
    dcl_literal l38, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
    mad_ieee r2.x___, r1.x, l38, r2.x_neg(xyzw)
    mad_ieee r2.x___, r1.z, r2.x, r1.x
    dcl_literal l39, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB
    mad_ieee r1.___w, r1.w_neg(xyzw), l39, r2.x
    add r1.___w, r0.w, r1.w_neg(xyzw)
    dcl_literal l40, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB
    mad_ieee r2.x___, r1.z, r2.y, l40
    mul_ieee r2._y__, r1.z, r1.z
    dcl_literal l41, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r2.__z_, r0.w, l41
    dcl_literal l42, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A
    ige r2.___w, r2.z, l42
    dcl_literal l43, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ige r3.x___, l43, r2.z
    and r2.___w, r2.w, r3.x
    dcl_literal l44, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000
    iadd r3.x___, r2.z, l44
    and r2.___w, r2.w, r3.x
    dcl_literal l45, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ilt r2.__z_, l45, r2.z
    dcl_literal l46, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000
    cmov_logical r2.__z_, r2.z, l46, r2.w
    dcl_literal l47, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r1.__z_, r1.z, l47, r2.z_neg(xyzw)
    dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r2.__z_, r2.z_neg(xyzw), l48
    mul_ieee r0.___w, r1.x_neg(xyzw), r0.w
    mad_ieee r0.___w, r2.x, r2.y, r0.w_neg(xyzw)
    add r0.___w, r1.z, r0.w_neg(xyzw)
    add r0.___w, r2.z, r0.w_neg(xyzw)
    dcl_literal l49, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
    eq r2, r1.y, l49
    and r1.x___, r0.w, r2.x
    cmov_logical r1.x___, r2.y, r1.w_neg(xyzw), r1.x
    cmov_logical r0.___w, r2.z, r0.w_neg(xyzw), r1.x
    cmov_logical r0.__z_, r2.w, r1.w, r0.w
endif
dcl_literal l50, 0x47800000, 0x47800000, 0x47800000, 0x47800000
lt r0.___w, l50, r0.y
dcl_literal l51, 0x3A000000, 0x7F800000, 0x00000000, 0x00000000
ilt r1.xy__, r0.y, l51
and r0.___w, r0.w, r1.y
ior r0.___w, r1.x, r0.w
dcl_literal l52, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.__z_, r0.w, l52, r0.z
dcl_literal l53, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.y, l53
dcl_literal l54, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.__z_, r0.w, l54, r0.z
dcl_literal l55, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l55, r0.y
dcl_literal l56, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l56, r0.z
mov out0, r0
mend
__half_divide_f32
mdef(236)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7F800000, 0x7F800000
and r1, r0.yxyx, l0
dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2, r1.wzzw, l1
dcl_literal l2, 0x00800000, 0x00800000, 0x00800000, 0x00000000
ilt r3.xyz_, r1.xxyx, l2
dcl_literal l3, 0xFFFFFF81, 0xFFFFFF9D, 0xFFFFFF81, 0xFFFFFF9D
iadd r2, r2.yzxw, l3
mov r4.x_z_, r2.yyxy
dcl_literal l4, 0x00000000, 0x41E00000, 0x00000000, 0x00000000
mov r4._y_w, l4
cmov_logical r2.xy__, r3.xyxx, r4.xyxx, r4.zwzz
dcl_literal l5, 0x00000000, 0x42280000, 0x41600000, 0x00000000
dcl_literal l6, 0xC1E00000, 0x41600000, 0xC1600000, 0x00000000
cmov_logical r4.xyz_, r3.xzyx, l5, l6
mov r3.x___, r2.w
dcl_literal l7, 0x41E00000, 0x41E00000, 0x41E00000, 0x41E00000
mov r3._y__, l7
mov r3.___w, r4.x
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r2.___w, l8
cmov_logical r3.xy_w, r3.z, r3.xyxw, r2.zwzy
iadd r0.__z_, r3.x, r2.x_neg(xyzw)
dcl_literal l9, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83, 0xFFFFFF83
ilt r0.__z_, r0.z, l9
dcl_literal l10, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r0.___w, l10, r2.x
and r0.__z_, r0.z, r0.w
dcl_literal l11, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2, 0xFFFFFFF2
iadd r4.x___, r2.x, l11
dcl_literal l12, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000
add r4.___w, r3.w, l12
mov r3.x_z_, r2.xxyx
cmov_logical r2, r0.z, r4, r3
dcl_literal l13, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r0.__z_, l13, r2.x
dcl_literal l14, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r0.___w, l14, r2.x
and r0.__z_, r0.z, r0.w
dcl_literal l15, 0xC1600000, 0xC1600000, 0x00000000, 0x00000000
add r3.xy__, r2.zwzz, l15
cmov_logical r0.__zw, r0.z, r3.xxxy, r2.zzzw
dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r2.x___, r2.y, l16
if_logicalnz r2.x
    ftoi r2.x___, r2.y
    dcl_literal l17, 0x00000000, 0x80000000, 0x007FFFFF, 0x00000000
    and r2._yz_, r0.x, l17
    itof r2.__z_, r2.z
    cmov_logical r1._y__, r1.w, r1.y, r2.z
    dcl_literal l18, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r2.__z_, r2.x, l18
    cmov_logical r1.___w, r1.w, r2.x, r2.z
    dcl_literal l19, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
    and r2.x_z_, r1.y, l19
    dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.x___, r2.x, l20
    iadd r2.x___, r2.x, r1.w
    dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r1.___w, r1.w, l21
    iadd r1._y__, r1.y, r1.w
    dcl_literal l22, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r1.___w, r2.x, l22
    dcl_literal l23, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2.x___, l23, r1.w
    dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1._y__, r2.x, l24, r1.y
    dcl_literal l25, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r1.___w, l25, r1.w_neg(xyzw)
    dcl_literal l26, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.x___, r2.z, l26
    dcl_literal l27, 0x00000000, 0x00000000, 0x00000017, 0x00000000
    ilt r2.__zw, l27, r1.w
    dcl_literal l28, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.__z_, r2.z, l28, r1.w
    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.___w, r1.w, l29
    dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.___w, r1.w, l30, r2.z
    ishr r1.___w, r2.x, r1.w
    cmov_logical r1._y__, r2.w, r1.w, r1.y
    ior r0.x___, r2.y, r1.y
endif
dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r1._y_w, r0.zzzw, l31
if_logicalnz r1.y
    ftoi r1._y__, r0.z_abs
    dcl_literal l32, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r0.__z_, r0.z, l32
    inegate r2.x___, r1.y
    cmov_logical r0.__z_, r0.z, r2.x, r1.y
    dcl_literal l33, 0x80000000, 0x007FFFFF, 0x00000000, 0x00000000
    and r2.xy__, r0.y, l33
    itof r1._y__, r2.y
    cmov_logical r1.x___, r1.z, r1.x, r1.y
    dcl_literal l34, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r1._y__, r0.z, l34
    cmov_logical r0.__z_, r1.z, r0.z, r1.y
    dcl_literal l35, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r1._yz_, r1.x, l35
    dcl_literal l36, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1._y__, r1.y, l36
    iadd r1._y__, r1.y, r0.z
    dcl_literal l37, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.__z_, r0.z, l37
    iadd r0.__z_, r1.x, r0.z
    dcl_literal l38, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r1.x___, r1.y, l38
    dcl_literal l39, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r1._y__, l39, r1.x
    dcl_literal l40, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.__z_, r1.y, l40, r0.z
    dcl_literal l41, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r1.x___, l41, r1.x_neg(xyzw)
    dcl_literal l42, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r1._y__, r1.z, l42
    dcl_literal l43, 0x00000000, 0x00000017, 0x00000000, 0x00000000
    ilt r2._yz_, l43, r1.x
    dcl_literal l44, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1.__z_, r2.y, l44, r1.x
    dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, r1.x, l45
    dcl_literal l46, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.x___, r1.x, l46, r1.z
    ishr r1.x___, r1.y, r1.x
    cmov_logical r0.__z_, r2.z, r1.x, r0.z
    ior r0._y__, r2.x, r0.z
endif
dcl_literal l47, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r0._y__, l47, r0.y
mul_ieee r0.x___, r0.x, r0.y
dcl_literal l48, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r1.x___, r0.x, l48
dcl_literal l49, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1._y__, r1.x, l49
and r1._y__, r1.w, r1.y
if_logicalnz r1.y
    ftoi r1._y__, r0.w_abs
    dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r0.___w, r0.w, l50
    inegate r1.__z_, r1.y
    cmov_logical r0.___w, r0.w, r1.z, r1.y
    dcl_literal l51, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF
    and r1._yzw, r0.x, l51
    itof r1.___w, r1.w
    cmov_logical r1.x___, r1.z, r1.x, r1.w
    dcl_literal l52, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r1.___w, r0.w, l52
    cmov_logical r0.___w, r1.z, r0.w, r1.w
    dcl_literal l53, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
    and r1.__zw, r1.x, l53
    dcl_literal l54, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.__z_, r1.z, l54
    iadd r1.__z_, r1.z, r0.w
    dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l55
    iadd r0.___w, r1.x, r0.w
    dcl_literal l56, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r1.x___, r1.z, l56
    dcl_literal l57, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r1.__z_, l57, r1.x
    dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r1.z, l58, r0.w
    dcl_literal l59, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r1.x___, l59, r1.x_neg(xyzw)
    dcl_literal l60, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r1.__z_, r1.w, l60
    dcl_literal l61, 0x00000017, 0x00000000, 0x00000000, 0x00000000
    ilt r2.xy__, l61, r1.x
    dcl_literal l62, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1.___w, r2.x, l62, r1.x
    dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, r1.x, l63
    dcl_literal l64, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.x___, r1.x, l64, r1.w
    ishr r1.x___, r1.z, r1.x
    cmov_logical r0.___w, r2.y, r1.x, r0.w
    ior r0.x___, r1.y, r0.w
endif
mov out0, r0
mend
__half_exp10_f32
mdef(237)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x421A209B, 0x421A209B, 0x421A209B, 0x421A209B
ge r0._y__, r0.x, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x7F800000
and r0.__zw, r0.x, l1
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1.x___, r0.z, l2
and r0._y__, r0.y, r1.x
dcl_literal l3, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78
mul_ieee r1._y__, r0.x, l3
exp_vec r1._y__, r1.y
dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.y, l4, r1.y
dcl_literal l5, 0xC23369F4, 0xC23369F4, 0xC23369F4, 0xC23369F4
lt r1._y__, r0.x, l5
and r1.x___, r1.x, r1.y
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r1.x, l6, r0.y
dcl_literal l7, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r1.x___, r0.x, l7
dcl_literal l8, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1._y__, l8, r0.z
cmov_logical r0._y__, r1.y, r1.x, r0.y
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, r0.x, l9
dcl_literal l10, 0x00000000, 0x7F800000, 0x00000000, 0x00000000
ieq r1._yz_, r0.zzwz, l10
dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.__z_, r0.z, l11
and r0.___w, r1.x, r1.y
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.w, l12, r0.y
dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l13, r0.x
and r0.__zw, r1.zzzy, r0.zzzw
cmov_logical r0._y__, r0.w, r0.x, r0.y
dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.x, l14
dcl_literal l15, 0x421A209A, 0x421A209A, 0x421A209A, 0x421A209A
eq r0.x___, r0.x, l15
cmov_logical r0._y__, r0.z, r0.w, r0.y
dcl_literal l16, 0x7F7FFFB3, 0x7F7FFFB3, 0x7F7FFFB3, 0x7F7FFFB3
cmov_logical r0.x___, r0.x, l16, r0.y
mov out0, r0
mend
__half_exp2_f32
mdef(238)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x43000000, 0x43000000, 0x43000000, 0x43000000
ge r0._y__, r0.x, l0
dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.__z_, r0.x, l1
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.___w, r0.z, l2
and r0._y__, r0.y, r0.w
exp_vec r1.x___, r0.x
dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.y, l3, r1.x
dcl_literal l4, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000
lt r1.x___, r0.x, l4
and r0.___w, r0.w, r1.x
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.w, l5, r0.y
dcl_literal l6, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.___w, l6, r0.z
dcl_literal l7, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.z, l7
dcl_literal l8, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r1.x___, r0.x, l8
cmov_logical r0._y__, r0.w, r1.x, r0.y
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l9
and r0.___w, r0.z, r0.w
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.w, l10, r0.y
dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l11, r0.x
and r0.__z_, r0.z, r0.w
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__half_exp_f32
mdef(239)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x42B17218, 0x42B17218, 0x42B17218, 0x42B17218
ge r0._y__, r0.x, l0
dcl_literal l1, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.__z_, r0.x, l1
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.___w, r0.z, l2
and r0._y__, r0.y, r0.w
dcl_literal l3, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mul_ieee r1.x___, r0.x, l3
exp_vec r1.x___, r1.x
dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.y, l4, r1.x
dcl_literal l5, 0xC2CFF1B5, 0xC2CFF1B5, 0xC2CFF1B5, 0xC2CFF1B5
lt r1.x___, r0.x, l5
and r0.___w, r0.w, r1.x
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.w, l6, r0.y
dcl_literal l7, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.___w, l7, r0.z
dcl_literal l8, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.z, l8
dcl_literal l9, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r1.x___, r0.x, l9
cmov_logical r0._y__, r0.w, r1.x, r0.y
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l10
and r0.___w, r0.z, r0.w
dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.w, l11, r0.y
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l12, r0.x
and r0.__z_, r0.z, r0.w
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__half_log10_f32
mdef(240)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000
ige r0.__z_, r0.y, l1
dcl_literal l2, 0x3F801000, 0x3F801000, 0x3F801000, 0x3F801000
ige r0.___w, l2, r0.y
and r0.__z_, r0.z, r0.w
if_logicalnz r0.z
    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.__z_, r0.x, l3
    dcl_literal l4, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r0.__z_, r0.z, l4
    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.___w, r0.x, l5
    dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
    iadd r1.x___, l6, r0.w
    dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    and r1.x___, r1.x, l7
    dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ixor r1._y__, r1.x, l8
    ior r0.___w, r0.w, r1.y
    dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.x___, r1.x, l9
    iadd r0.__z_, r0.z, r1.x
    itof r0.__z_, r0.z
    dcl_literal l10, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
    add r1.xy__, r0.w, l10
    div_zeroop(infinity) r0.___w, r1.x, r1.y
    mul_ieee r1._y__, r0.w, r0.w
    mul_ieee r1.__z_, r1.y, r1.y
    dcl_literal l11, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
    dcl_literal l12, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, l11, l12
    dcl_literal l13, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, r2.xyxx, l13
    mul_ieee r1.___w, r1.z, r2.x
    dcl_literal l14, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
    mad_ieee r1.__z_, r1.z, r2.y, l14
    mad_ieee r1._y__, r1.y, r1.z, r1.w
    mul_ieee r1.__z_, r1.x, r1.x
    dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mul_ieee r1.___w, r1.z, l15
    dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r1._y__, r1.z, l16, r1.y
    mad_ieee r0.___w, r0.w_neg(xyzw), r1.y, r1.w
    add r0.___w, r1.x_neg(xyzw), r0.w
    dcl_literal l17, 0x3EDE5BD9, 0x3EDE5BD9, 0x3EDE5BD9, 0x3EDE5BD9
    mul_ieee r0.___w, r0.w, l17
    dcl_literal l18, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B
    mad_ieee r0.__z_, r0.z, l18, r0.w_neg(xyzw)
endif
dcl_literal l19, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000
ilt r0.___w, r0.y, l19
dcl_literal l20, 0x3F801000, 0x7F800000, 0x00000000, 0x00000000
ilt r1.xy__, l20, r0.y
ior r0.___w, r0.w, r1.x
if_logicalnz r0.w
    dcl_literal l21, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.___w, r0.x, l21
    itof r0.___w, r0.w
    dcl_literal l22, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
    and r1.x_z_, r0.w, l22
    dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.___w, r1.x, l23
    dcl_literal l24, 0x0000001C, 0x0000001C, 0x0000001C, 0x0000001C
    iadd r0.___w, r0.w, l24
    dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r1.x___, r1.z, l25
    dcl_literal l26, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0.___w, l26, r0.w_neg(xyzw)
    dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r1.__z_, l27, r0.w
    dcl_literal l28, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.___w, r1.z, l28, r0.w
    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.__z_, l29, r0.w
    ishr r1.___w, r1.x, r0.w
    inegate r0.___w, r0.w
    dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l30
    iadd r0.___w, r1.x, r0.w
    cmov_logical r0.___w, r1.z, r1.w, r0.w
    dcl_literal l31, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r1.x___, r0.x, l31
    dcl_literal l32, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000
    and r1.__z_, r1.x, l32
    cmov_logical r0.___w, r1.x, r0.w, r0.x
    log_vec r0.___w, r0.w
    add r0.___w, r1.z, r0.w
    dcl_literal l33, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B
    mul_ieee r0.__z_, r0.w, l33
endif
dcl_literal l34, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0.__z_, r0.y, r0.z, l34
dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l35
dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0._y__, r0.y, l36
and r0._y__, r0.w, r0.y
dcl_literal l37, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.y, l37, r0.z
dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.x, l38
cmov_logical r0._y__, r0.z, r0.x, r0.y
dcl_literal l39, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l39
cmov_logical r0.x___, r1.y, r0.x, r0.y
mov out0, r0
mend
__half_log2_f32
mdef(241)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000
ige r0.__z_, r0.y, l1
dcl_literal l2, 0x3F801000, 0x3F801000, 0x3F801000, 0x3F801000
ige r0.___w, l2, r0.y
and r0.__z_, r0.z, r0.w
if_logicalnz r0.z
    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.__z_, r0.x, l3
    dcl_literal l4, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r0.__z_, r0.z, l4
    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.___w, r0.x, l5
    dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
    iadd r1.x___, l6, r0.w
    dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    and r1.x___, r1.x, l7
    dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ixor r1._y__, r1.x, l8
    ior r0.___w, r0.w, r1.y
    dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.x___, r1.x, l9
    iadd r0.__z_, r0.z, r1.x
    itof r0.__z_, r0.z
    dcl_literal l10, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
    add r1.xy__, r0.w, l10
    div_zeroop(infinity) r0.___w, r1.x, r1.y
    mul_ieee r1._y__, r0.w, r0.w
    mul_ieee r1.__z_, r1.y, r1.y
    dcl_literal l11, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
    dcl_literal l12, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, l11, l12
    dcl_literal l13, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, r2.xyxx, l13
    mul_ieee r1.___w, r1.z, r2.x
    dcl_literal l14, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
    mad_ieee r1.__z_, r1.z, r2.y, l14
    mad_ieee r1._y__, r1.y, r1.z, r1.w
    mul_ieee r1.__z_, r1.x, r1.x
    dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mul_ieee r1.___w, r1.z, l15
    dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r1._y__, r1.z, l16, r1.y
    mad_ieee r0.___w, r0.w_neg(xyzw), r1.y, r1.w
    add r0.___w, r1.x_neg(xyzw), r0.w
    dcl_literal l17, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
    mad_ieee r0.__z_, r0.w_neg(xyzw), l17, r0.z
endif
dcl_literal l18, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000
ilt r0.___w, r0.y, l18
dcl_literal l19, 0x3F801000, 0x7F800000, 0x00000000, 0x00000000
ilt r1.xy__, l19, r0.y
ior r0.___w, r0.w, r1.x
if_logicalnz r0.w
    dcl_literal l20, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.___w, r0.x, l20
    itof r0.___w, r0.w
    dcl_literal l21, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
    and r1.x_z_, r0.w, l21
    dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.___w, r1.x, l22
    dcl_literal l23, 0x0000001C, 0x0000001C, 0x0000001C, 0x0000001C
    iadd r0.___w, r0.w, l23
    dcl_literal l24, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r1.x___, r1.z, l24
    dcl_literal l25, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0.___w, l25, r0.w_neg(xyzw)
    dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r1.__z_, l26, r0.w
    dcl_literal l27, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.___w, r1.z, l27, r0.w
    dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.__z_, l28, r0.w
    ishr r1.___w, r1.x, r0.w
    inegate r0.___w, r0.w
    dcl_literal l29, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l29
    iadd r0.___w, r1.x, r0.w
    cmov_logical r0.___w, r1.z, r1.w, r0.w
    dcl_literal l30, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r1.x___, r0.x, l30
    dcl_literal l31, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000
    and r1.__z_, r1.x, l31
    cmov_logical r0.___w, r1.x, r0.w, r0.x
    log_vec r0.___w, r0.w
    add r0.__z_, r1.z, r0.w
endif
dcl_literal l32, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0.__z_, r0.y, r0.z, l32
dcl_literal l33, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l33
dcl_literal l34, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0._y__, r0.y, l34
and r0._y__, r0.w, r0.y
dcl_literal l35, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.y, l35, r0.z
dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.x, l36
cmov_logical r0._y__, r0.z, r0.x, r0.y
dcl_literal l37, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.__z_, r0.x, l37
cmov_logical r0.x___, r1.y, r0.z, r0.y
mov out0, r0
mend
__half_log_f32
mdef(242)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000
ige r0.__z_, r0.y, l1
dcl_literal l2, 0x3F801000, 0x3F801000, 0x3F801000, 0x3F801000
ige r0.___w, l2, r0.y
and r0.__z_, r0.z, r0.w
if_logicalnz r0.z
    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.__z_, r0.x, l3
    dcl_literal l4, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r0.__z_, r0.z, l4
    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.___w, r0.x, l5
    dcl_literal l6, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
    iadd r1.x___, l6, r0.w
    dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    and r1.x___, r1.x, l7
    dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ixor r1._y__, r1.x, l8
    ior r0.___w, r0.w, r1.y
    dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.x___, r1.x, l9
    iadd r0.__z_, r0.z, r1.x
    itof r0.__z_, r0.z
    dcl_literal l10, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
    add r1.xy__, r0.w, l10
    div_zeroop(infinity) r0.___w, r1.x, r1.y
    mul_ieee r1._y__, r0.w, r0.w
    mul_ieee r1.__z_, r1.y, r1.y
    dcl_literal l11, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
    dcl_literal l12, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, l11, l12
    dcl_literal l13, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.z, r2.xyxx, l13
    mul_ieee r1.___w, r1.z, r2.x
    dcl_literal l14, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
    mad_ieee r1.__z_, r1.z, r2.y, l14
    mad_ieee r1._y__, r1.y, r1.z, r1.w
    mul_ieee r1.__z_, r1.x, r1.x
    dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r1._y__, r1.z, l15, r1.y
    dcl_literal l16, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
    mul_ieee r1.___w, r0.z, l16
    mad_ieee r0.___w, r0.w, r1.y, r1.w
    dcl_literal l17, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r0.___w, r1.z, l17, r0.w_neg(xyzw)
    add r0.___w, r1.x_neg(xyzw), r0.w
    dcl_literal l18, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
    mad_ieee r0.__z_, r0.z, l18, r0.w_neg(xyzw)
endif
dcl_literal l19, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000, 0x3F7FF000
ilt r0.___w, r0.y, l19
dcl_literal l20, 0x3F801000, 0x7F800000, 0x00000000, 0x00000000
ilt r1.xy__, l20, r0.y
ior r0.___w, r0.w, r1.x
if_logicalnz r0.w
    dcl_literal l21, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.___w, r0.x, l21
    itof r0.___w, r0.w
    dcl_literal l22, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
    and r1.x_z_, r0.w, l22
    dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.___w, r1.x, l23
    dcl_literal l24, 0x0000001C, 0x0000001C, 0x0000001C, 0x0000001C
    iadd r0.___w, r0.w, l24
    dcl_literal l25, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r1.x___, r1.z, l25
    dcl_literal l26, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0.___w, l26, r0.w_neg(xyzw)
    dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r1.__z_, l27, r0.w
    dcl_literal l28, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.___w, r1.z, l28, r0.w
    dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.__z_, l29, r0.w
    ishr r1.___w, r1.x, r0.w
    inegate r0.___w, r0.w
    dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l30
    iadd r0.___w, r1.x, r0.w
    cmov_logical r0.___w, r1.z, r1.w, r0.w
    dcl_literal l31, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r1.x___, r0.x, l31
    dcl_literal l32, 0xC1E00000, 0xC1E00000, 0xC1E00000, 0xC1E00000
    and r1.__z_, r1.x, l32
    cmov_logical r0.___w, r1.x, r0.w, r0.x
    log_vec r0.___w, r0.w
    add r0.___w, r1.z, r0.w
    dcl_literal l33, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
    mul_ieee r0.__z_, r0.w, l33
endif
dcl_literal l34, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0.__z_, r0.y, r0.z, l34
dcl_literal l35, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l35
dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0._y__, r0.y, l36
and r0._y__, r0.w, r0.y
dcl_literal l37, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.y, l37, r0.z
dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.x, l38
cmov_logical r0._y__, r0.z, r0.x, r0.y
dcl_literal l39, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l39
cmov_logical r0.x___, r1.y, r0.x, r0.y
mov out0, r0
mend
__half_powr_f32
mdef(243)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x7FFFFFFF, 0x80000000
and r1, r0.xxyy, l0
itof r0.x___, r1.x
dcl_literal l1, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
and r0.x_z_, r0.x, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.x___, r0.x, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r0.__z_, r0.z, l3
dcl_literal l4, 0x00000024, 0x00000024, 0x00000024, 0x00000024
iadd r0.x___, r0.x, l4
dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r0.x___, l5, r0.x_neg(xyzw)
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r0.___w, l6, r0.x
dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.x___, r0.w, l7, r0.x
inegate r0.___w, r0.x
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r0.___w, r0.w, l8
iadd r0.___w, r0.z, r0.w
ishr r0.__z_, r0.z, r0.x
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, l9, r0.x
cmov_logical r0.x___, r0.x, r0.z, r0.w
dcl_literal l10, 0x00800000, 0x2E800000, 0x3F800000, 0x00000000
ilt r2.xyz_, r1.xzxx, l10
cmov_logical r0.x___, r2.x, r0.x, r1.x
dcl_literal l11, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
and r0.x_z_, r0.x, l11
dcl_literal l12, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
ior r0.__z_, r0.z, l12
dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.x___, r0.x, l13
dcl_literal l14, 0x43000000, 0x43000000, 0x43000000, 0x43000000
dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0.___w, r0.z, l14, l15
round_z r2.___w, r0.w
ftoi r0.___w, r0.w
dcl_literal l16, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r0.__z_, r2.w_neg(xyzw), l16, r0.z
add r3.x___, r0.z, cb0[1].x
add r3._y__, r0.z, r3.x_neg(xyzw)
dcl_literal l17, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mul_ieee r3.__z_, r2.w, l17
dcl_literal l18, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.___w, r3.z, l18
dcl_literal l19, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r2.___w, r2.w, l19, r3.w_neg(xyzw)
div_zeroop(infinity) r0.__z_, r0.z, r3.z
dcl_literal l20, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r4.x___, r0.z, l20
mad_ieee r3.x___, r4.x, r3.w, r3.x_neg(xyzw)
mad_ieee r3.x___, r4.x, r2.w, r3.x
add r4.x___, r0.z, r4.x_neg(xyzw)
mad_ieee r3.x___, r4.x, r3.w, r3.x
mad_ieee r2.___w, r4.x, r2.w, r3.x
add r2.___w, r3.y, r2.w_neg(xyzw)
div_zeroop(infinity) r2.___w, r2.w, r3.z
add r3.x___, r0.z, r2.w
dcl_literal l21, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000
dcl_literal l22, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925
mad_ieee r3._y__, r0.z_neg(xyzw), l21, l22
dcl_literal l23, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l23
dcl_literal l24, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l24
dcl_literal l25, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l25
dcl_literal l26, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l26
dcl_literal l27, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l27
mul_ieee r3.__z_, r0.z_neg(xyzw), r0.z
add r0.__z_, r0.z, r3.x_neg(xyzw)
mad_ieee r3.___w, r3.y, r3.z, r3.x
add r3.x___, r3.x, r3.w_neg(xyzw)
mad_ieee r3.x___, r3.y, r3.z, r3.x
add r0.__z_, r2.w, r0.z
add r0.__z_, r3.x, r0.z
add r2.___w, r3.w, r0.z
add r3.x___, r3.w, r2.w_neg(xyzw)
add r0.__z_, r0.z, r3.x
dcl_literal l28, 0x23BBBE88, 0x23BBBE88, 0x23BBBE88, 0x23BBBE88
mul_ieee r3.x___, r2.w, l28
dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r0.__z_, r0.z, l29, r3.x
dcl_literal l30, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.x___, r2.w, l30
add r3._y__, r2.w, r3.x_neg(xyzw)
dcl_literal l31, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mul_ieee r2.___w, r2.w, l31
dcl_literal l32, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000
mad_ieee r3.__z_, r3.x, l32, r2.w_neg(xyzw)
dcl_literal l33, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000
mad_ieee r3.__z_, r3.y, l33, r3.z
dcl_literal l34, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296
mad_ieee r3.x___, r3.x, l34, r3.z
dcl_literal l35, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296
mad_ieee r3.x___, r3.y, l35, r3.x
add r0.__z_, r0.z, r3.x
add r3.x___, r2.w, r0.z
add r2.___w, r2.w, r3.x_neg(xyzw)
add r0.__z_, r0.z, r2.w
dcl_literal l36, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0
iadd r0.___w, r0.w, l36
dcl_literal l37, 0x00000002, 0x00000002, 0x00000002, 0x00000002
ishr r2.___w, r0.w, l37
dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l39, 0x00000000, 0x2FB85A45, 0x312C77EC, 0x31FD14FD
cmov_logical r4, r2.w, l38, l39
dcl_literal l40, 0x00000001, 0x00000002, 0x00000003, 0x00000004
ieq r5, r2.w, l40
dcl_literal l41, 0x31D64899, 0x2F2DABBA, 0x31CDA79E, 0x309E2B87
cmov_logical r4, r5.x, l41, r4
dcl_literal l42, 0x324FDEB4, 0x3201781E, 0x31DB4EC9, 0x31C32597
cmov_logical r4, r5.y, l42, r4
dcl_literal l43, 0x32481340, 0x32D6985C, 0x3230E074, 0x326A4CDF
cmov_logical r4, r5.z, l43, r4
dcl_literal l44, 0x323CD1B9, 0x32CFDEB4, 0x3259D0CE, 0x31458715
cmov_logical r4, r5.w, l44, r4
dcl_literal l45, 0x00000005, 0x00000006, 0x00000007, 0x00000008
ieq r6, r2.w, l45
dcl_literal l46, 0x3211F171, 0x3227F605, 0x32B9C415, 0x325295B5
cmov_logical r4, r6.x, l46, r4
dcl_literal l47, 0x2F4BA83C, 0x30F3AA69, 0x320CB06D, 0x32B97998
cmov_logical r4, r6.y, l47, r4
dcl_literal l48, 0x30D63AA6, 0x33550F2A, 0x3374AE80, 0x3321393E
cmov_logical r4, r6.z, l48, r4
dcl_literal l49, 0x3267EF5A, 0x32AB49CA, 0x3355010B, 0x3374C355
cmov_logical r4, r6.w, l49, r4
dcl_literal l50, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C
ieq r7, r2.w, l50
dcl_literal l51, 0x32BCD1B9, 0x3261151F, 0x325313A6, 0x3320F04D
cmov_logical r4, r7.x, l51, r4
dcl_literal l52, 0x32E4788D, 0x32A76195, 0x3332703B, 0x3349A817
cmov_logical r4, r7.y, l52, r4
dcl_literal l53, 0x332DF384, 0x32B06EF9, 0x33300016, 0x331565B0
cmov_logical r4, r7.z, l53, r4
dcl_literal l54, 0x336A8086, 0x331C70C1, 0x332C00A7, 0x3257990D
cmov_logical r4, r7.w, l54, r4
dcl_literal l55, 0x00000000, 0x0000000D, 0x0000000E, 0x0000000F
ieq r3._yzw, r2.w, l55
dcl_literal l56, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l57, 0x00000000, 0x3CB73CB4, 0x3D35D69B, 0x3D8759C4
cmov_logical r8, r2.w, l56, l57
dcl_literal l58, 0x32F5532E, 0x336633F3, 0x31B86815, 0x33654999
cmov_logical r4, r3.y, l58, r4
dcl_literal l59, 0x32D26089, 0x2FCBA83C, 0x32B3FF57, 0x32E0E014
cmov_logical r4, r3.z, l59, r4
dcl_literal l60, 0x331B1354, 0x330D9D4B, 0x32BCF065, 0x330BBE12
cmov_logical r4, r3.w, l60, r4
dcl_literal l61, 0x00000003, 0x00000003, 0x00000003, 0x00000003
and r2.___w, r0.w, l61
dcl_literal l62, 0x00000040, 0x00000040, 0x00000040, 0x00000040
ieq r0.___w, r0.w, l62
dcl_literal l63, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r9.xyz_, r2.w, l63
cmov_logical r2.___w, r9.x, r4.y, r4.x
cmov_logical r2.___w, r9.y, r4.z, r2.w
cmov_logical r2.___w, r9.z, r4.w, r2.w
dcl_literal l64, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r0.w, l64, r2.w
add r4.x___, r3.x, r2.w
add r3.x___, r3.x, r4.x_neg(xyzw)
add r2.___w, r2.w, r3.x
add r0.__z_, r0.z, r2.w
add r2.___w, r4.x, r0.z
add r3.x___, r4.x, r2.w_neg(xyzw)
dcl_literal l65, 0x3DB31FB7, 0x3DDE4212, 0x3E0462C4, 0x3E19574F
cmov_logical r4, r5.x, l65, r8
dcl_literal l66, 0x3E2E00D1, 0x3E42615E, 0x3E567AF1, 0x3E6A4F72
cmov_logical r4, r5.y, l66, r4
dcl_literal l67, 0x3E7DE0B5, 0x3E88983E, 0x3E92203D, 0x3E9B8926
cmov_logical r4, r5.z, l67, r4
dcl_literal l68, 0x3EA4D3C2, 0x3EAE00D1, 0x3EB7110E, 0x3EC0052B
cmov_logical r4, r5.w, l68, r4
dcl_literal l69, 0x3EC8DDD4, 0x3ED19BB0, 0x3EDA3F5F, 0x3EE2C97D
cmov_logical r4, r6.x, l69, r4
dcl_literal l70, 0x3EEB3A9F, 0x3EF39355, 0x3EFBD42B, 0x3F01FED4
cmov_logical r4, r6.y, l70, r4
dcl_literal l71, 0x3F060828, 0x3F0A064F, 0x3F0DF988, 0x3F11E20E
cmov_logical r4, r6.z, l71, r4
dcl_literal l72, 0x3F15C01A, 0x3F1993E3, 0x3F1D5D9F, 0x3F211D83
cmov_logical r4, r6.w, l72, r4
dcl_literal l73, 0x3F24D3C2, 0x3F28808C, 0x3F2C2411, 0x3F2FBE7F
cmov_logical r4, r7.x, l73, r4
dcl_literal l74, 0x3F335004, 0x3F36D8CB, 0x3F3A58FE, 0x3F3DD0C7
cmov_logical r4, r7.y, l74, r4
dcl_literal l75, 0x3F41404E, 0x3F44A7BA, 0x3F480730, 0x3F4B5ED6
cmov_logical r4, r7.z, l75, r4
dcl_literal l76, 0x3F4EAECF, 0x3F51F73F, 0x3F553847, 0x3F587209
cmov_logical r4, r7.w, l76, r4
dcl_literal l77, 0x3F5BA4A4, 0x3F5ED038, 0x3F61F4E5, 0x3F6512C6
cmov_logical r4, r3.y, l77, r4
dcl_literal l78, 0x3F6829FB, 0x3F6B3A9F, 0x3F6E44CD, 0x3F7148A1
cmov_logical r4, r3.z, l78, r4
dcl_literal l79, 0x3F744635, 0x3F773DA3, 0x3F7A2F04, 0x3F7D1A70
cmov_logical r4, r3.w, l79, r4
cmov_logical r3._y__, r9.x, r4.y, r4.x
cmov_logical r3._y__, r9.y, r4.z, r3.y
cmov_logical r3._y__, r9.z, r4.w, r3.y
dcl_literal l80, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.___w, r0.w, l80, r3.y
add r3._y__, r2.w, r0.w
add r0.___w, r0.w, r3.y_neg(xyzw)
add r0.___w, r2.w, r0.w
add r0.__z_, r0.z, r3.x
add r0.__z_, r0.w, r0.z
add r0.___w, r3.y, r0.z
add r2.___w, r3.y, r0.w_neg(xyzw)
add r0.__z_, r0.z, r2.w
dcl_literal l81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.x___, r0.x, l81
dcl_literal l82, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC
and r2.x___, r2.x, l82
iadd r0.x___, r0.x, r2.x
itof r0.x___, r0.x
add r2.x___, r0.w, r0.x
add r0.x___, r0.x, r2.x_neg(xyzw)
add r0.x___, r0.w, r0.x
add r0.x___, r0.z, r0.x
add r0.__z_, r2.x, r0.x
add r0.___w, r2.x, r0.z_neg(xyzw)
dcl_literal l83, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r2.x___, r0.z, l83
mul_ieee r2.___w, r0.z, r0.y
dcl_literal l84, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.x___, r0.y, l84
mad_ieee r3._y__, r2.x, r3.x, r2.w_neg(xyzw)
add r3.__z_, r0.y, r3.x_neg(xyzw)
mad_ieee r3._y__, r2.x, r3.z, r3.y
add r2.x___, r0.z, r2.x_neg(xyzw)
mad_ieee r3.x___, r2.x, r3.x, r3.y
mad_ieee r2.x___, r2.x, r3.z, r3.x
add r0.x___, r0.x, r0.w
mad_ieee r0.___w, r0.x, r0.y, r2.x
add r0.x___, r0.z, r0.x
add r0.__z_, r2.w, r0.w
add r2.x___, r2.w, r0.z_neg(xyzw)
add r0.___w, r0.w, r2.x
add r2.x___, r0.z, r0.w
round_z r2.___w, r2.x
ftoi r2.x___, r2.x
add r3.x___, r0.z, r2.w_neg(xyzw)
add r0.__z_, r0.z, r3.x_neg(xyzw)
add r0.__z_, r2.w_neg(xyzw), r0.z
add r0.__z_, r0.w, r0.z
add r0.___w, r3.x, r0.z
add r3.x___, r3.x, r0.w_neg(xyzw)
add r0.__z_, r0.z, r3.x
add r0.__z_, r0.w, r0.z
dcl_literal l85, 0x42000000, 0x42000000, 0x00000000, 0x00000000
dcl_literal l86, 0x3F000000, 0xBF000000, 0x00000000, 0x00000000
mad_ieee r3.xy__, r0.z, l85, l86
ftoi r3.xy__, r3.xyxx
dcl_literal l87, 0x00000000, 0x00000000, 0x3F317218, 0x42000000
mul_ieee r3.__zw, r0.z, l87
dcl_literal l88, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, l88, r3.w
cmov_logical r0.___w, r0.w, r3.x, r3.y
itof r3.x___, r0.w
dcl_literal l89, 0x3D000000, 0x3D000000, 0x3D000000, 0x3D000000
mad_ieee r3.x___, r3.x_neg(xyzw), l89, r0.z
dcl_literal l90, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820
dcl_literal l91, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3._y__, r3.x, l90, l91
dcl_literal l92, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mul_ieee r3.x___, r3.x, l92
mul_ieee r3.___w, r3.x, r3.x
mad_ieee r3.x___, r3.w, r3.y, r3.x
dcl_literal l93, 0x00000000, 0x0000001F, 0x00000000, 0x00000003
and r3._y_w, r0.w, l93
iadd r0.___w, r0.w, r3.y_neg(xyzw)
dcl_literal l94, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r4.xyz_, r3.w, l94
dcl_literal l95, 0x00000002, 0x00000002, 0x00000002, 0x00000002
ishr r3._y__, r3.y, l95
dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l97, 0x3F800000, 0x3F82C000, 0x3F858000, 0x3F888000
cmov_logical r5, r3.y, l96, l97
dcl_literal l98, 0x00000001, 0x00000002, 0x00000003, 0x00000004
ieq r6, r3.y, l98
dcl_literal l99, 0x3F8B8000, 0x3F8E8000, 0x3F91C000, 0x3F94C000
cmov_logical r5, r6.x, l99, r5
dcl_literal l100, 0x3F980000, 0x3F9B8000, 0x3F9EC000, 0x3FA24000
cmov_logical r5, r6.y, l100, r5
dcl_literal l101, 0x3FA5C000, 0x3FA98000, 0x3FAD4000, 0x3FB10000
cmov_logical r5, r6.z, l101, r5
dcl_literal l102, 0x3FB50000, 0x3FB8C000, 0x3FBD0000, 0x3FC10000
cmov_logical r5, r6.w, l102, r5
dcl_literal l103, 0x00000005, 0x00000006, 0x00000007, 0x00000000
ieq r7.xyz_, r3.y, l103
dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l105, 0x00000000, 0x39D86988, 0x3AAB0D9F, 0x3A407404
cmov_logical r8, r3.y, l104, l105
dcl_literal l106, 0x3FC54000, 0x3FC98000, 0x3FCE0000, 0x3FD28000
cmov_logical r5, r7.x, l106, r5
dcl_literal l107, 0x3FD74000, 0x3FDBC000, 0x3FE0C000, 0x3FE58000
cmov_logical r5, r7.y, l107, r5
dcl_literal l108, 0x3FEAC000, 0x3FEFC000, 0x3FF50000, 0x3FFA8000
cmov_logical r5, r7.z, l108, r5
cmov_logical r3._y__, r4.x, r5.y, r5.x
cmov_logical r3._y__, r4.y, r5.z, r3.y
cmov_logical r3._y__, r4.z, r5.w, r3.y
dcl_literal l109, 0x3A2E0F1E, 0x3A90E62D, 0x38F4DCE0, 0x3AD3BEA3
cmov_logical r5, r6.x, l109, r8
dcl_literal l110, 0x3ADFC146, 0x39D39B9C, 0x3AD4C982, 0x3AC10C0C
cmov_logical r5, r6.y, l110, r5
dcl_literal l111, 0x3AFB5AA6, 0x3A856AD3, 0x3A41F752, 0x3A8FD607
cmov_logical r5, r6.z, l111, r5
dcl_literal l112, 0x391E6678, 0x3AEEBD1D, 0x398A39F4, 0x3AB13329
cmov_logical r5, r6.w, l112, r5
dcl_literal l113, 0x3A9CA845, 0x3AE6F619, 0x3A923054, 0x3AA07647
cmov_logical r5, r7.x, l113, r5
dcl_literal l114, 0x391F9958, 0x3AEEDE5F, 0x39CDEEC0, 0x3AE41B9D
cmov_logical r5, r7.y, l114, r5
dcl_literal l115, 0x37C6E7C0, 0x3A92E66F, 0x3A95F454, 0x38ECB6D0
cmov_logical r5, r7.z, l115, r5
cmov_logical r3.___w, r4.x, r5.y, r5.x
cmov_logical r3.___w, r4.y, r5.z, r3.w
cmov_logical r3.___w, r4.z, r5.w, r3.w
add r4.x___, r3.y, r3.w
mad_ieee r3.x___, r4.x, r3.x, r3.w
add r3.x___, r3.y, r3.x
dcl_literal l116, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r4, r3.x, l116
dcl_literal l117, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ixor r3.x___, r0.w, l117
imax r0.___w, r0.w, r0.w_neg(xyzw)
dcl_literal l118, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r3.x___, r3.x, l118
dcl_literal l119, 0x00000020, 0x00000020, 0x00000020, 0x00000020
udiv r0.___w, r0.w, l119
inegate r3._y__, r0.w
cmov_logical r0.___w, r3.x, r3.y, r0.w
iadd r0.___w, r0.w, r2.x
itof r0.___w, r0.w
dcl_literal l120, 0x44800000, 0x44800000, 0x44800000, 0x44800000
lt r2.x___, l120, r0.w_abs
ftoi r3.x___, r0.w_abs
dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r0.w, l121
dcl_literal l122, 0x00000400, 0x00000400, 0x00000400, 0x00000400
cmov_logical r2.x___, r2.x, l122, r3.x
inegate r3.x___, r2.x
cmov_logical r0.___w, r0.w, r3.x, r2.x
dcl_literal l123, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r2.x___, r0.w, l123
cmov_logical r2.x___, r4.z, r0.w, r2.x
itof r0.___w, r0.w
dcl_literal l124, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r3.x___, r2.x, l124
itof r3._y__, r4.w
cmov_logical r3._y__, r4.z, r4.x, r3.y
iadd r3.x___, r3.y, r3.x
dcl_literal l125, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF
and r3._y_w, r3.y, l125
dcl_literal l126, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3._y__, r3.y, l126
dcl_literal l127, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r3.___w, r3.w, l127
iadd r2.x___, r3.y, r2.x
dcl_literal l128, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.x___, r2.x, l128
dcl_literal l129, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r3._y__, l129, r2.x
dcl_literal l130, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2.x___, l130, r2.x_neg(xyzw)
dcl_literal l131, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r3.x___, r3.y, l131, r3.x
dcl_literal l132, 0x00000017, 0x00000000, 0x00000000, 0x00000000
ilt r4.x_z_, l132, r2.x
dcl_literal l133, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r3._y__, r4.x, l133, r2.x
dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, r2.x, l134
dcl_literal l135, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x___, r2.x, l135, r3.y
ishr r2.x___, r3.w, r2.x
cmov_logical r2.x___, r4.z, r2.x, r3.x
dcl_literal l136, 0x43960000, 0x43960000, 0x43960000, 0x43960000
lt r0.___w, l136, r0.w
dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.___w, r0.w, l137, r2.x
ior r0.___w, r4.y, r0.w
dcl_literal l138, 0x44800000, 0x44800000, 0x44800000, 0x44800000
lt r2.x___, l138, r2.w_abs
ftoi r3.x___, r2.w_abs
dcl_literal l139, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.___w, r2.w, l139
dcl_literal l140, 0x00000400, 0x00000400, 0x00000400, 0x00000400
cmov_logical r2.x___, r2.x, l140, r3.x
inegate r3.x___, r2.x
cmov_logical r2.x___, r2.w, r3.x, r2.x
dcl_literal l141, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r2.___w, r2.x, l141
dcl_literal l142, 0x7FFFFFFF, 0x0FFFF000, 0x00000000, 0x00000000
and r3.xy__, r0.z, l142
dcl_literal l143, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r3.___w, r3.y, l143, r3.z_neg(xyzw)
dcl_literal l144, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E
mad_ieee r3.___w, r3.y, l144, r3.w
add r3._y__, r0.z, r3.y_neg(xyzw)
dcl_literal l145, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B
lt r3.x___, r3.x, l145
dcl_literal l146, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r3.___w, r3.y, l146, r3.w
dcl_literal l147, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E
mad_ieee r3._y__, r3.y, l147, r3.w
dcl_literal l148, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r0.__z_, r0.z, l148, r3.y
dcl_literal l149, 0x34904540, 0x3A1BECC5, 0x00000000, 0x00000000
dcl_literal l150, 0x3CC2F57D, 0xBC42EEB9, 0x00000000, 0x00000000
mad_ieee r4.xy__, r0.z, l149, l150
dcl_literal l151, 0x37874471, 0x3DDB50CA, 0x00000000, 0x00000000
mad_ieee r4.xy__, r4.xyxx, r0.z, l151
dcl_literal l152, 0x3F7FE378, 0xBEFFE15B, 0x00000000, 0x00000000
mad_ieee r4.xy__, r4.xyxx, r0.z, l152
dcl_literal l153, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378
mad_ieee r0.__z_, r4.y, r0.z, l153
div_zeroop(infinity) r0.__z_, r4.x, r0.z
mul_ieee r3._y__, r3.y, r0.z
mad_ieee r0.__z_, r0.z, r3.z, r3.y
dcl_literal l154, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.__z_, r0.z, l154
dcl_literal l155, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r4, r0.z, l155
cmov_logical r0.__z_, r4.z, r2.x, r2.w
itof r2.x___, r2.x
dcl_literal l156, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.___w, r0.z, l156
itof r3._y__, r4.w
cmov_logical r3._y__, r4.z, r4.x, r3.y
iadd r2.___w, r3.y, r2.w
dcl_literal l157, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
and r3._yz_, r3.y, l157
dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3._y__, r3.y, l158
dcl_literal l159, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r3.__z_, r3.z, l159
iadd r0.__z_, r3.y, r0.z
dcl_literal l160, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.__z_, r0.z, l160
dcl_literal l161, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r3._y__, l161, r0.z
dcl_literal l162, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.__z_, l162, r0.z_neg(xyzw)
dcl_literal l163, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.___w, r3.y, l163, r2.w
dcl_literal l164, 0x00000000, 0x00000017, 0x00000000, 0x00000000
ilt r3._y_w, l164, r0.z
dcl_literal l165, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r3._y__, r3.y, l165, r0.z
dcl_literal l166, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, r0.z, l166
dcl_literal l167, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r0.z, l167, r3.y
ishr r0.__z_, r3.z, r0.z
cmov_logical r0.__z_, r3.w, r0.z, r2.w
dcl_literal l168, 0x43960000, 0x43960000, 0x43960000, 0x43960000
lt r2.x___, l168, r2.x
dcl_literal l169, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.__z_, r2.x, l169, r0.z
ior r0.__z_, r4.y, r0.z
cmov_logical r0.__z_, r3.x, r0.z, r0.w
dcl_literal l170, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.y, l170
cmov_logical r0.__z_, r2.y, r0.w, r0.z
dcl_literal l171, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r0.___w, r0.y, l171
mul_ieee r0.x___, r0.y, r0.x
cmov_logical r0._y__, r0.w, r1.x, r0.z
dcl_literal l172, 0x43000000, 0x43000000, 0x43000000, 0x43000000
lt r0.__z_, l172, r0.x
dcl_literal l173, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r0.x, l173
dcl_literal l174, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000
lt r0.x___, r0.x, l174
dcl_literal l175, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r0.___w, l175, r0.w
and r0.x_z_, r0.xxzx, r0.w
dcl_literal l176, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.z, l176, r0.y
dcl_literal l177, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l177, r0.y
dcl_literal l178, 0x00000000, 0x80000000, 0x80000000, 0x00000000
ine r0._yz_, r1.yywy, l178
inot r1._y_w, r0.zzzy
dcl_literal l179, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l180, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
cmov_logical r3, r1.xzzx, l179, l180
and r2.xy__, r1.ywyy, r3.xwxx
and r0.___w, r3.z, r2.x
dcl_literal l181, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.w, l181, r0.x
and r2.x__w, r0.zzzy, r3.xxxw
and r0.___w, r3.z, r2.x
dcl_literal l182, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.w, l182, r0.x
dcl_literal l183, 0x7F800000, 0x7F800000, 0x3F800000, 0x00000000
ilt r4.xyz_, l183, r1.xzxx
inot r0.___w, r4.x
dcl_literal l184, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
ieq r1.__zw, r1.xxxz, l184
dcl_literal l185, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r1.x___, r1.x, l185
inot r5.xy__, r1.zwzz
and r0.___w, r0.w, r5.x
and r2.x___, r2.w, r0.w
and r0.___w, r4.z, r0.w
ior r2.___w, r4.y, r4.x
and r2.x___, r3.y, r2.x
dcl_literal l186, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r2.x, l186, r0.x
ior r2.x___, r3.x, r1.z
and r2.x___, r3.y, r2.x
dcl_literal l187, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r2.x, l187, r0.x
and r1.x___, r0.y, r1.x
and r2.x___, r5.y, r1.x
and r1.x___, r1.w, r1.x
and r2.x___, r3.z, r2.x
dcl_literal l188, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r2.x, l188, r0.x
dcl_literal l189, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r1.x, l189, r0.x
and r1.x_z_, r0.yyzy, r1.z
and r0._y__, r1.y, r1.x
and r1.x___, r3.z, r1.z
and r0._y__, r3.z, r0.y
and r1.__z_, r2.z, r3.w
dcl_literal l190, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.y, l190, r0.x
and r0._y__, r1.w, r1.z
and r0.___w, r1.w, r0.w
and r1.__z_, r1.y, r0.y
and r0._yz_, r0.z, r0.yywy
and r0.___w, r1.y, r0.w
dcl_literal l191, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r1.z, l191, r0.x
ior r0._y__, r0.y, r0.w
dcl_literal l192, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.y, l192, r0.x
ior r0._y__, r1.x, r0.z
dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.y, l193, r0.x
ior r0._y__, r2.y, r2.w
dcl_literal l194, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l194, r0.x
mov out0, r0
mend
__half_recip_f32
mdef(244)_out(1)_in(1)
mov r0, in0
mov r1.x___, r0.x
dcl_literal l0, 0x00000000, 0x00000000, 0x41E00000, 0x00000000
mov r0.__zw, l0
dcl_literal l1, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF
and r2, r1.x, l1
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1._y__, r2.x, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r1.__z_, r2.x, l3
and r1._y__, r1.y, r1.z
dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.__z_, r2.y, l4
dcl_literal l5, 0xFFFFFF81, 0xFFFFFF9D, 0x00000000, 0x00000000
iadd r0.xy__, r1.z, l5
cmov_logical r0.xy__, r1.y, r0.yzyy, r0.xwxx
dcl_literal l6, 0x41600000, 0x41600000, 0x41600000, 0x41600000
dcl_literal l7, 0xC1600000, 0xC1600000, 0xC1600000, 0xC1600000
cmov_logical r0.__z_, r1.y, l6, l7
dcl_literal l8, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r0.___w, l8, r0.x
dcl_literal l9, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r0.x___, l9, r0.x
and r0.x___, r0.w, r0.x
cmov_logical r0.x___, r0.x, r0.z, r0.y
ftoi r0._y__, r0.x
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r0.x___, r0.x, l10
dcl_literal l11, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r0.__z_, r0.y, l11
cmov_logical r0.___w, r2.y, r0.y, r0.z
dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1._y__, r0.w, l12
itof r1.__z_, r2.w
cmov_logical r1.__z_, r2.y, r2.x, r1.z
iadd r1._y__, r1.z, r1.y
dcl_literal l13, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r1.__zw, r1.z, l13
dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.__z_, r1.z, l14
dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.___w, r1.w, l15
iadd r0.___w, r1.z, r0.w
dcl_literal l16, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, r0.w, l16
dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.__z_, l17, r0.w
dcl_literal l18, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.___w, l18, r0.w_neg(xyzw)
dcl_literal l19, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r1._y__, r1.z, l19, r1.y
dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1.__z_, l20, r0.w
dcl_literal l21, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.___w, r1.z, l21, r0.w
dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0.___w, r0.w, l22
ishr r1.__z_, r1.w, r0.w
dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l23, r0.w
cmov_logical r0.___w, r0.w, r1.z, r1.y
ior r0.___w, r2.z, r0.w
cmov_logical r0.___w, r0.x, r0.w, r1.x
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r0.___w, l24, r0.w
dcl_literal l25, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r1, r0.w, l25
cmov_logical r0._y__, r1.z, r0.y, r0.z
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r0.__z_, r0.y, l26
itof r1.___w, r1.w
cmov_logical r1.__z_, r1.z, r1.x, r1.w
iadd r0.__z_, r1.z, r0.z
dcl_literal l27, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r1.__zw, r1.z, l27
dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.__z_, r1.z, l28
dcl_literal l29, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.___w, r1.w, l29
iadd r0._y__, r1.z, r0.y
dcl_literal l30, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0._y__, r0.y, l30
dcl_literal l31, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.__z_, l31, r0.y
dcl_literal l32, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0._y__, l32, r0.y_neg(xyzw)
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.__z_, r1.z, l33, r0.z
dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1.__z_, l34, r0.y
dcl_literal l35, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0._y__, r1.z, l35, r0.y
dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0._y__, r0.y, l36
ishr r1.__z_, r1.w, r0.y
dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0._y__, l37, r0.y
cmov_logical r0._y__, r0.y, r1.z, r0.z
ior r0._y__, r1.y, r0.y
dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, r1.x, l38
and r0.x___, r0.x, r0.z
cmov_logical r0.x___, r0.x, r0.y, r0.w
mov out0, r0
mend
__half_rsqrt_f32
mdef(245)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000
and r0._yz_, r0.x, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.__z_, r0.z, l1
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.___w, r0.y, l2
and r0.__z_, r0.z, r0.w
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, r0.x, l3
and r0.___w, r0.w, r1.x
ior r0.__z_, r0.z, r0.w
dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l4, r0.y
ior r0.__z_, r0.z, r0.y
if_logicalnz r0.z
    
    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.__z_, r0.x, l5
    itof r0.__z_, r0.z
    
    dcl_literal l6, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r1.xy__, r0.z, l6
    
    dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.__z_, r1.x, l7
    
    dcl_literal l8, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    iadd r0.__z_, r0.z, l8
    
    dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r1.x___, r1.y, l9
    
    dcl_literal l10, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0.__z_, l10, r0.z_neg(xyzw)
    
    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r1._y__, l11, r0.z
    
    dcl_literal l12, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.__z_, r1.y, l12, r0.z
    
    dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1._y__, l13, r0.z
    ishr r1.__z_, r1.x, r0.z
    inegate r0.__z_, r0.z
    
    dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.__z_, r0.z, l14
    iadd r0.__z_, r1.x, r0.z
    cmov_logical r0.__z_, r1.y, r1.z, r0.z
    rsq_vec r0.__z_, r0.z
    
    dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r1.x___, r0.z, l15
    if_logicalz r1.x
        
        dcl_literal l16, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r1._y__, r0.z, l16
        itof r1._y__, r1.y
        
        dcl_literal l17, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
        and r1._yz_, r1.y, l17
        
        dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1._y__, r1.y, l18
        
        dcl_literal l19, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C
        iadd r1._y__, r1.y, l19
        
        dcl_literal l20, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.__z_, r1.z, l20
        
        dcl_literal l21, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r1._y__, l21, r1.y_neg(xyzw)
        
        dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r1.___w, l22, r1.y
        
        dcl_literal l23, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1._y__, r1.w, l23, r1.y
        
        dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r1.___w, l24, r1.y
        ishr r2.x___, r1.z, r1.y
        inegate r1._y__, r1.y
        
        dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1._y__, r1.y, l25
        iadd r1._y__, r1.z, r1.y
        cmov_logical r1._y__, r1.w, r2.x, r1.y
    else
        
        dcl_literal l26, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r0.__z_, r0.z, l26
        
        dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.x___, r1.x, l27
        
        dcl_literal l28, 0x06000000, 0x06000000, 0x06000000, 0x06000000
        iadd r0.__z_, r0.z, l28
        
        dcl_literal l29, 0xFFFFFF8D, 0xFFFFFF8D, 0xFFFFFF8D, 0xFFFFFF8D
        iadd r1.x___, r1.x, l29
        
        dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r1.x___, l30, r1.x
        
        dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r1._y__, r1.x, l31, r0.z
    endif
    
    dcl_literal l32, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
    cmov_logical r0.__z_, r0.w, l32, r1.y
    
    dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
    ior r0.___w, r0.x, l33
    cmov_logical r0.x___, r0.y, r0.w, r0.z
else
    rsq_vec r0.x___, r0.x
endif
mov out0, r0
mend
__half_sin_f32
mdef(246)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
ge r0.__z_, r0.y, l1
dcl_literal l2, 0x47800000, 0x47800000, 0x47800000, 0x47800000
ge r0.___w, l2, r0.y
and r0.__z_, r0.z, r0.w
if_logicalnz r0.z
    dcl_literal l3, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983
    mul_ieee r0.__z_, r0.y, l3
    round_nearest r0.__z_, r0.z
    dcl_literal l4, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r0.___w, r0.z, l4
    add r1.x___, r0.z, r0.w_neg(xyzw)
    dcl_literal l5, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
    mul_ieee r1._y__, r0.z, l5
    dcl_literal l6, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000
    mul_ieee r2.xyz_, r0.z, l6
    dcl_literal l7, 0x00000000, 0x00000000, 0x3FC90000, 0x33A22000
    mad_ieee r1.__zw, r0.w, l7, r2.xxxy_neg(xyzw)
    dcl_literal l8, 0x00000000, 0x00000000, 0x39FDA000, 0x2C340000
    mad_ieee r1.__zw, r0.w, l8, r1.zzzw
    dcl_literal l9, 0x00000000, 0x00000000, 0x3FC90000, 0x33A22000
    mad_ieee r1.__zw, r1.x, l9, r1.zzzw
    dcl_literal l10, 0x00000000, 0x00000000, 0x39FDA000, 0x2C340000
    mad_ieee r1.__zw, r1.x, l10, r1.zzzw
    add r0.__z_, r0.y, r2.x_neg(xyzw)
    add r2.___w, r0.y, r0.z_neg(xyzw)
    add r2.x___, r2.x_neg(xyzw), r2.w
    add r1.__z_, r1.z_neg(xyzw), r2.x
    add r0.__z_, r0.z, r1.z
    add r1.__z_, r2.y_neg(xyzw), r0.z
    add r0.__z_, r0.z, r1.z_neg(xyzw)
    add r0.__z_, r2.y_neg(xyzw), r0.z
    add r0.__z_, r1.w_neg(xyzw), r0.z
    add r0.__z_, r1.z, r0.z
    dcl_literal l11, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
    mad_ieee r1.__z_, r0.w, l11, r2.z_neg(xyzw)
    dcl_literal l12, 0x21188000, 0x21188000, 0x21188000, 0x21188000
    mad_ieee r0.___w, r0.w, l12, r1.z
    dcl_literal l13, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
    mad_ieee r0.___w, r1.x, l13, r0.w
    dcl_literal l14, 0x21188000, 0x21188000, 0x21188000, 0x21188000
    mad_ieee r0.___w, r1.x, l14, r0.w
    add r1.x___, r2.z_neg(xyzw), r0.z
    add r0.__z_, r0.z, r1.x_neg(xyzw)
    add r0.__z_, r2.z_neg(xyzw), r0.z
    add r0.__z_, r1.x, r0.z
    frc r1.x___, r1.y
    dcl_literal l15, 0x40800000, 0x40800000, 0x40800000, 0x40800000
    mul_ieee r1.x___, r1.x, l15
    round_nearest r1.x___, r1.x
    mul_ieee r1._y__, r0.z, r0.z
    mul_ieee r1.__z_, r0.z, r1.y
    dcl_literal l16, 0x2F2EC9D3, 0xAD47D74E, 0x00000000, 0x00000000
    dcl_literal l17, 0xB2D72F34, 0x310F74F6, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.y, l16, l17
    dcl_literal l18, 0x3636DF25, 0xB492923A, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.y, r2.xyxx, l18
    dcl_literal l19, 0xB95009D4, 0x37D00AE2, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.y, r2.xyxx, l19
    dcl_literal l20, 0x3C088887, 0xBAB60B60, 0x00000000, 0x00000000
    mad_ieee r2.xy__, r1.y, r2.xyxx, l20
    mul_ieee r1.___w, r1.z, r2.x
    dcl_literal l21, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
    mad_ieee r1.___w, r0.w, l21, r1.w_neg(xyzw)
    mad_ieee r1.___w, r1.y, r1.w, r0.w
    dcl_literal l22, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB
    mad_ieee r1.__z_, r1.z_neg(xyzw), l22, r1.w
    add r1.__z_, r0.z, r1.z_neg(xyzw)
    dcl_literal l23, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB
    mad_ieee r1.___w, r1.y, r2.y, l23
    mul_ieee r2.x___, r1.y, r1.y
    dcl_literal l24, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r2._y__, r0.z, l24
    dcl_literal l25, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A
    ige r2.__z_, r2.y, l25
    dcl_literal l26, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ige r2.___w, l26, r2.y
    and r2.__z_, r2.z, r2.w
    dcl_literal l27, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000
    iadd r2.___w, r2.y, l27
    and r2.__z_, r2.z, r2.w
    dcl_literal l28, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ilt r2._y__, l28, r2.y
    dcl_literal l29, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000
    cmov_logical r2._y__, r2.y, l29, r2.z
    dcl_literal l30, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r1._y__, r1.y, l30, r2.y_neg(xyzw)
    dcl_literal l31, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r2._y__, r2.y_neg(xyzw), l31
    mul_ieee r0.__z_, r0.w_neg(xyzw), r0.z
    mad_ieee r0.__z_, r1.w, r2.x, r0.z_neg(xyzw)
    add r0.__z_, r1.y, r0.z_neg(xyzw)
    add r0.__z_, r2.y, r0.z_neg(xyzw)
    dcl_literal l32, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
    eq r2, r1.x, l32
    dcl_literal l33, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ge r0.___w, r0.y, l33
    and r2, r2, r0.w
    and r0.___w, r1.z, r2.x
    cmov_logical r0.___w, r2.y, r0.z, r0.w
    cmov_logical r0.___w, r2.z, r1.z_neg(xyzw), r0.w
    cmov_logical r0.__z_, r2.w, r0.z_neg(xyzw), r0.w
else
    dcl_literal l34, 0x3A000000, 0x3A000000, 0x3A000000, 0x3A000000
    ige r0.___w, r0.y, l34
    dcl_literal l35, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
    lt r1.x___, r0.y, l35
    and r0.___w, r0.w, r1.x
    mul_ieee r1.x___, r0.y, r0.y
    mul_ieee r1._y__, r0.y, r1.x
    dcl_literal l36, 0x2F2EC9D3, 0x2F2EC9D3, 0x2F2EC9D3, 0x2F2EC9D3
    dcl_literal l37, 0xB2D72F34, 0xB2D72F34, 0xB2D72F34, 0xB2D72F34
    mad_ieee r1.__z_, r1.x, l36, l37
    dcl_literal l38, 0x3636DF25, 0x3636DF25, 0x3636DF25, 0x3636DF25
    mad_ieee r1.__z_, r1.x, r1.z, l38
    dcl_literal l39, 0xB95009D4, 0xB95009D4, 0xB95009D4, 0xB95009D4
    mad_ieee r1.__z_, r1.x, r1.z, l39
    dcl_literal l40, 0x3C088887, 0x3C088887, 0x3C088887, 0x3C088887
    mad_ieee r1.__z_, r1.x, r1.z, l40
    mul_ieee r1.__z_, r1.y, r1.z
    dcl_literal l41, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB
    mul_ieee r1._y__, r1.y, l41
    mad_ieee r1.x___, r1.x, r1.z_neg(xyzw), r1.y_neg(xyzw)
    add r1.x___, r0.y, r1.x_neg(xyzw)
    cmov_logical r0.__z_, r0.w, r1.x, r0.y
endif
dcl_literal l42, 0x47800000, 0x47800000, 0x47800000, 0x47800000
lt r0.___w, l42, r0.y
dcl_literal l43, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1.x___, r0.y, l43
and r0.___w, r0.w, r1.x
dcl_literal l44, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.__z_, r0.w, l44, r0.z
dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, r0.x, l45
cmov_logical r0.x___, r0.x, r0.z_neg(xyzw), r0.z
dcl_literal l46, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.y, l46
dcl_literal l47, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.x___, r0.z, l47, r0.x
dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l48, r0.y
dcl_literal l49, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l49, r0.x
mov out0, r0
mend
__half_sqrt_f32
mdef(247)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.__z_, r0.y, l1
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l2, r0.y
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l3
and r0.__z_, r0.z, r0.w
sqrt_vec r0.___w, r0.x
dcl_literal l4, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.__z_, r0.z, l4, r0.w
dcl_literal l5, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.___w, r0.x, l5
cmov_logical r0.x___, r0.y, r0.w, r0.z
mov out0, r0
mend
__half_tan_f32
mdef(248)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
ge r0.__z_, r0.y, l1
dcl_literal l2, 0x47800000, 0x47800000, 0x47800000, 0x47800000
ge r0.___w, l2, r0.y
and r0.__z_, r0.z, r0.w
if_logicalnz r0.z
    dcl_literal l3, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983
    mul_ieee r0.__z_, r0.y, l3
    round_nearest r0.__z_, r0.z
    dcl_literal l4, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r0.___w, r0.z, l4
    add r1.x___, r0.z, r0.w_neg(xyzw)
    dcl_literal l5, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
    mul_ieee r1._y__, r0.z, l5
    dcl_literal l6, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000
    mul_ieee r2.xyz_, r0.z, l6
    dcl_literal l7, 0x00000000, 0x00000000, 0x3FC90000, 0x33A22000
    mad_ieee r1.__zw, r0.w, l7, r2.xxxy_neg(xyzw)
    dcl_literal l8, 0x00000000, 0x00000000, 0x39FDA000, 0x2C340000
    mad_ieee r1.__zw, r0.w, l8, r1.zzzw
    dcl_literal l9, 0x00000000, 0x00000000, 0x3FC90000, 0x33A22000
    mad_ieee r1.__zw, r1.x, l9, r1.zzzw
    dcl_literal l10, 0x00000000, 0x00000000, 0x39FDA000, 0x2C340000
    mad_ieee r1.__zw, r1.x, l10, r1.zzzw
    add r0.__z_, r0.y, r2.x_neg(xyzw)
    add r2.___w, r0.y, r0.z_neg(xyzw)
    add r2.x___, r2.x_neg(xyzw), r2.w
    add r1.__z_, r1.z_neg(xyzw), r2.x
    add r0.__z_, r0.z, r1.z
    add r1.__z_, r2.y_neg(xyzw), r0.z
    add r0.__z_, r0.z, r1.z_neg(xyzw)
    add r0.__z_, r2.y_neg(xyzw), r0.z
    add r0.__z_, r1.w_neg(xyzw), r0.z
    add r0.__z_, r1.z, r0.z
    dcl_literal l11, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
    mad_ieee r1.__z_, r0.w, l11, r2.z_neg(xyzw)
    dcl_literal l12, 0x21188000, 0x21188000, 0x21188000, 0x21188000
    mad_ieee r0.___w, r0.w, l12, r1.z
    dcl_literal l13, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
    mad_ieee r0.___w, r1.x, l13, r0.w
    dcl_literal l14, 0x21188000, 0x21188000, 0x21188000, 0x21188000
    mad_ieee r0.___w, r1.x, l14, r0.w
    add r1.x___, r2.z_neg(xyzw), r0.z
    add r0.__z_, r0.z, r1.x_neg(xyzw)
    add r0.__z_, r2.z_neg(xyzw), r0.z
    add r0.__z_, r1.x, r0.z
    frc r1.x___, r1.y
    dcl_literal l15, 0x40800000, 0x40800000, 0x40800000, 0x40800000
    mul_ieee r1.x___, r1.x, l15
    round_nearest r1.x___, r1.x
    dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mul_ieee r1.x___, r1.x, l16
    frc r1.x___, r1.x
    add r1.x___, r1.x, r1.x
    round_nearest r1.x___, r1.x
    add r0.__z_, r0.w_neg(xyzw), r0.z
    mul_ieee r0.___w, r0.z, r0.z
    mul_ieee r1._y__, r0.z, r0.w
    dcl_literal l17, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3
    dcl_literal l18, 0x3EC54587, 0x3EC54587, 0x3EC54587, 0x3EC54587
    mad_ieee r1.__z_, r0.w_neg(xyzw), l17, l18
    mul_ieee r1._y__, r1.y, r1.z
    dcl_literal l19, 0x3C971480, 0x3C971480, 0x3C971480, 0x3C971480
    dcl_literal l20, 0xBF039337, 0xBF039337, 0xBF039337, 0xBF039337
    mad_ieee r1.__z_, r0.w, l19, l20
    dcl_literal l21, 0x3F93F425, 0x3F93F425, 0x3F93F425, 0x3F93F425
    mad_ieee r0.___w, r1.z, r0.w, l21
    div_zeroop(infinity) r0.___w, r1.y, r0.w
    add r0.__z_, r0.z, r0.w
    dcl_literal l22, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    div_zeroop(infinity) r0.___w, l22, r0.z
    dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r1.x___, l23, r1.x
    cmov_logical r0.__z_, r1.x, r0.w_neg(xyzw), r0.z
else
    dcl_literal l24, 0x3A000000, 0x3A000000, 0x3A000000, 0x3A000000
    ige r0.___w, r0.y, l24
    dcl_literal l25, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB, 0x3F490FDB
    lt r1.x___, r0.y, l25
    and r0.___w, r0.w, r1.x
    mul_ieee r1.x___, r0.y, r0.y
    mul_ieee r1._y__, r0.y, r1.x
    dcl_literal l26, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3
    dcl_literal l27, 0x3EC54587, 0x3EC54587, 0x3EC54587, 0x3EC54587
    mad_ieee r1.__z_, r1.x_neg(xyzw), l26, l27
    mul_ieee r1._y__, r1.y, r1.z
    dcl_literal l28, 0x3C971480, 0x3C971480, 0x3C971480, 0x3C971480
    dcl_literal l29, 0xBF039337, 0xBF039337, 0xBF039337, 0xBF039337
    mad_ieee r1.__z_, r1.x, l28, l29
    dcl_literal l30, 0x3F93F425, 0x3F93F425, 0x3F93F425, 0x3F93F425
    mad_ieee r1.x___, r1.z, r1.x, l30
    div_zeroop(infinity) r1.x___, r1.y, r1.x
    add r1.x___, r0.y, r1.x
    cmov_logical r0.__z_, r0.w, r1.x, r0.y
endif
dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, r0.x, l31
cmov_logical r0.x___, r0.x, r0.z_neg(xyzw), r0.z
dcl_literal l32, 0x47800000, 0x47800000, 0x47800000, 0x47800000
lt r0.__z_, l32, r0.y
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.___w, r0.y, l33
and r0.__z_, r0.z, r0.w
dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.z, l34, r0.x
dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.y, l35
dcl_literal l36, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.x___, r0.z, l36, r0.x
dcl_literal l37, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l37, r0.y
dcl_literal l38, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l38, r0.x
mov out0, r0
mend
mdef(249)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
fma r0.x___, r0.x, r1.x, r2.x
mov out0, r0
mend
__hypot_f32
mdef(250)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x7FFFFFFF
and r0.__zw, r0.yyyx, l0
ilt r1.x___, r0.w, r0.z
cmov_logical r1.x___, r1.x, r0.x, r0.y
ige r1._y__, r0.w, r0.z
cmov_logical r0.x___, r1.y, r0.x, r0.y
dcl_literal l1, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000
and r1._yz_, r1.x, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0._y__, r1.z, l2
dcl_literal l3, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r1.___w, r0.y, l3
dcl_literal l4, 0x7FFFFFFF, 0x7F800000, 0x00000000, 0x00000000
and r2.xy__, r0.x, l4
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.__z_, r2.y, l5
dcl_literal l6, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.___w, r2.z, l6
dcl_literal l7, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r3.x___, l7, r0.y
dcl_literal l8, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r3._y__, l8, r2.z
iadd r3.__z_, r2.z, r0.y_neg(xyzw)
dcl_literal l9, 0x0000001C, 0x0000001C, 0x0000001C, 0x0000001C
ilt r3.__z_, l9, r3.z
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r3.___w, r1.y, l10
ior r3.__z_, r3.z, r3.w
inot r3.___w, r3.z
and r3.x___, r3.x, r3.w
dcl_literal l11, 0x42400000, 0xC2400000, 0x00000000, 0x00000000
and r4.xy__, r3.x, l11
dcl_literal l12, 0x00000000, 0x00000000, 0x42C00000, 0xC2C00000
dcl_literal l13, 0x00000000, 0x00000000, 0x42400000, 0xC2400000
cmov_logical r4.__zw, r3.x, l12, l13
cmov_logical r3.xy__, r3.y, r4.zwzz, r4.xyxx
itof r1.___w, r1.w
add r1.___w, r3.x, r1.w
add r4.x___, r1.w, r1.w
dcl_literal l14, 0xC2CC0000, 0xC2CC0000, 0xC2CC0000, 0xC2CC0000
lt r4.x___, r4.x, l14
dcl_literal l15, 0x40000000, 0x40000000, 0x40000000, 0x40000000
dcl_literal l16, 0xC2CC0000, 0xC2CC0000, 0xC2CC0000, 0xC2CC0000
mad_ieee r1.___w, r1.w_neg(xyzw), l15, l16
dcl_literal l17, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
dcl_literal l18, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r1.___w, r1.w, l17, l18
round_neginf r1.___w, r1.w
dcl_literal l19, 0x42800000, 0x42800000, 0x42800000, 0x42800000
min r1.___w, r1.w, l19
itof r2.___w, r2.w
add r2.___w, r3.x, r2.w
add r4._y__, r2.w, r2.w
dcl_literal l20, 0x42FA0000, 0x42FA0000, 0x42FA0000, 0x42FA0000
lt r4._y__, l20, r4.y
dcl_literal l21, 0x40000000, 0x40000000, 0x40000000, 0x40000000
dcl_literal l22, 0xC2FA0000, 0xC2FA0000, 0xC2FA0000, 0xC2FA0000
mad_ieee r2.___w, r2.w, l21, l22
dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r2.___w, r2.w, l23, l24
round_neginf r2.___w, r2.w
dcl_literal l25, 0x42800000, 0x42800000, 0x42800000, 0x42800000
min r2.___w, r2.w, l25
and r4.x___, r3.w, r4.x
add r4.__z_, r3.x, r1.w
add r4.___w, r3.y, r1.w_neg(xyzw)
cmov_logical r3.xy__, r4.x, r4.zwzz, r3.xyxx
dcl_literal l26, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.___w, r2.x, l26, l27
and r4.x___, r4.y, r1.w
add r4._y__, r2.w_neg(xyzw), r3.x
add r4.__z_, r2.w, r3.y
cmov_logical r3.xy__, r4.x, r4.yzyy, r3.xyxx
dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r2.___w, l28, r3.x
if_logicalnz r2.w
    ftoi r4.x___, r3.x
    iadd r0._y__, r0.y, r4.x
    dcl_literal l29, 0x00000000, 0x7FFFFFFF, 0x007FFFFF, 0x00000000
    and r4._yz_, r1.x, l29
    itof r1.x___, r4.z
    dcl_literal l30, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r5.xy__, r1.x, l30
    dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.x___, r5.x, l31
    iadd r1.x___, r1.x, r4.x
    dcl_literal l32, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4.___w, r5.y, l32
    dcl_literal l33, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r1.x___, l33, r1.x_neg(xyzw)
    dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r5.x___, l34, r1.x
    dcl_literal l35, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1.x___, r5.x, l35, r1.x
    dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5.x___, l36, r1.x
    ishr r5._y__, r4.w, r1.x
    inegate r1.x___, r1.x
    dcl_literal l37, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r1.x___, r1.x, l37
    iadd r1.x___, r4.w, r1.x
    cmov_logical r1.x___, r5.x, r5.y, r1.x
    dcl_literal l38, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r4.x___, r4.x, l38
    iadd r4.x___, r4.y, r4.x
    dcl_literal l39, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r0._y__, r0.y, l39
    dcl_literal l40, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r4._y__, l40, r0.y
    dcl_literal l41, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r4.x___, r4.y, l41, r4.x
    dcl_literal l42, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r0._y__, l42, r0.y_neg(xyzw)
    dcl_literal l43, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4._y__, r4.z, l43
    dcl_literal l44, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.__z_, l44, r0.y
    dcl_literal l45, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0._y__, r4.z, l45, r0.y
    ishr r4._y__, r4.y, r0.y
    dcl_literal l46, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r0._y__, l46, r0.y
    cmov_logical r0._y__, r0.y, r4.y, r4.x
    cmov_logical r0._y__, r1.z, r0.y, r1.x
    dcl_literal l47, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r1.x___, l47, r3.x
    dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0._y__, r1.x, l48, r0.y
else
    mov r0._y__, r1.y
endif
if_logicalnz r2.w
    ftoi r1.x___, r3.x
    iadd r1.__z_, r2.z, r1.x
    dcl_literal l49, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x007FFFFF
    and r2.__zw, r0.x, l49
    itof r0.x___, r2.w
    dcl_literal l50, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r4.xy__, r0.x, l50
    dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.x___, r4.x, l51
    iadd r0.x___, r0.x, r1.x
    dcl_literal l52, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4.x___, r4.y, l52
    dcl_literal l53, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0.x___, l53, r0.x_neg(xyzw)
    dcl_literal l54, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4._y__, l54, r0.x
    dcl_literal l55, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.x___, r4.y, l55, r0.x
    dcl_literal l56, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, l56, r0.x
    ishr r4.__z_, r4.x, r0.x
    inegate r0.x___, r0.x
    dcl_literal l57, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.x___, r0.x, l57
    iadd r0.x___, r4.x, r0.x
    cmov_logical r0.x___, r4.y, r4.z, r0.x
    dcl_literal l58, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r1.x___, r1.x, l58
    iadd r1.x___, r2.z, r1.x
    dcl_literal l59, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r1.__z_, r1.z, l59
    dcl_literal l60, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2.__z_, l60, r1.z
    dcl_literal l61, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1.x___, r2.z, l61, r1.x
    dcl_literal l62, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r1.__z_, l62, r1.z_neg(xyzw)
    dcl_literal l63, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.__z_, r2.w, l63
    dcl_literal l64, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r2.___w, l64, r1.z
    dcl_literal l65, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1.__z_, r2.w, l65, r1.z
    ishr r2.__z_, r2.z, r1.z
    dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.__z_, l66, r1.z
    cmov_logical r1.x___, r1.z, r2.z, r1.x
    cmov_logical r0.x___, r2.y, r1.x, r0.x
    dcl_literal l67, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r1.x___, l67, r3.x
    dcl_literal l68, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.x___, r1.x, l68, r0.x
else
    mov r0.x___, r2.x
endif
dcl_literal l69, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r1.x___, r0.y, l69
add r1.__z_, r0.y, r1.x_neg(xyzw)
dcl_literal l70, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r1.__z_, r1.z, l70
dcl_literal l71, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r2._y__, r0.x, l71
add r2.__z_, r0.x, r2.y_neg(xyzw)
dcl_literal l72, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r2.__z_, r2.z, l72
mul_ieee r2.___w, r0.y, r0.y
mul_ieee r3.x___, r0.x, r0.x
mad_ieee r4.x___, r0.y, r0.y, r3.x
dcl_literal l73, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r4._y__, r4.x, l73
mad_ieee r0._y__, r0.y, r0.y, r4.x_neg(xyzw)
mad_ieee r0.x___, r0.x, r0.x, r0.y
mad_ieee r0._y__, r1.x, r1.x, r2.w_neg(xyzw)
dp2_ieee r1.x___, r1.z, r1.x
add r0._y__, r0.y, r1.x
add r0.x___, r0.x, r0.y
mad_ieee r0.x___, r1.z, r1.z, r0.x
mad_ieee r0._y__, r2.y, r2.y, r3.x_neg(xyzw)
dp2_ieee r1.x___, r2.z, r2.y
add r0._y__, r0.y, r1.x
add r0.x___, r0.x, r0.y
mad_ieee r0.x___, r2.z, r2.z, r0.x
add r0.x___, r4.x, r0.x
sqrt_vec r0.x___, r0.x
dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r0._y__, r3.y, l74
if_logicalnz r0.y
    ftoi r0._y__, r3.y
    dcl_literal l75, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r5, r0.x, l75
    dcl_literal l76, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.x___, r5.z, l76
    iadd r1.x___, r1.x, r0.y
    itof r1.__z_, r5.w
    dcl_literal l77, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r2._yz_, r1.z, l77
    dcl_literal l78, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.__z_, r2.y, l78
    iadd r1.__z_, r1.z, r0.y
    dcl_literal l79, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2._y__, r2.z, l79
    dcl_literal l80, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r1.__z_, l80, r1.z_neg(xyzw)
    dcl_literal l81, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r2.__z_, l81, r1.z
    dcl_literal l82, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1.__z_, r2.z, l82, r1.z
    dcl_literal l83, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, l83, r1.z
    ishr r2.___w, r2.y, r1.z
    inegate r1.__z_, r1.z
    dcl_literal l84, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r1.__z_, r1.z, l84
    iadd r1.__z_, r2.y, r1.z
    cmov_logical r1.__z_, r2.z, r2.w, r1.z
    dcl_literal l85, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0._y__, r0.y, l85
    iadd r0._y__, r5.x, r0.y
    dcl_literal l86, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r1.x___, r1.x, l86
    dcl_literal l87, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2._y__, l87, r1.x
    dcl_literal l88, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0._y__, r2.y, l88, r0.y
    dcl_literal l89, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r1.x___, l89, r1.x_neg(xyzw)
    dcl_literal l90, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2._y__, r5.w, l90
    dcl_literal l91, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r2.__z_, l91, r1.x
    dcl_literal l92, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1.x___, r2.z, l92, r1.x
    ishr r2._y__, r2.y, r1.x
    dcl_literal l93, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, l93, r1.x
    cmov_logical r0._y__, r1.x, r2.y, r0.y
    cmov_logical r0._y__, r5.z, r0.y, r1.z
    dcl_literal l94, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r1.x___, l94, r3.y
    dcl_literal l95, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0._y__, r1.x, l95, r0.y
    ior r0.x___, r5.y, r0.y
endif
cmov_logical r0.x___, r2.x, r0.x, r1.y
cmov_logical r0.x___, r3.z, r2.x, r0.x
and r0._y__, r1.w, r4.y
and r0._y__, r3.w, r0.y
dcl_literal l96, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
ieq r1.xy__, r0.wzww, l96
ior r1.x___, r1.y, r1.x
ior r0._y__, r0.y, r1.x
dcl_literal l97, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.y, l97, r0.x
dcl_literal l98, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
ult r1.xy__, l98, r0.wzww
dcl_literal l99, 0x00000000, 0x7F800000, 0x7F800000, 0x00000000
ine r0._yz_, r0.zzwz, l99
and r0._yz_, r1.xxyx, r0.yyzy
ior r0._y__, r0.z, r0.y
dcl_literal l100, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l100, r0.x
mov out0, r0
mend
__ilogb_f32
mdef(251)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7F800000, 0x00000000, 0x00000000
and r0.xy__, r0.x, l0
dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.__z_, r0.x, l1
dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.__z_, r0.z, l2
dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.__z_, r0.z, l3
dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.__z_, l4, r0.z_neg(xyzw)
dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.__z_, r0.z, l5
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.__z_, r0.z, l6
dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r0.__z_, r0.x, r0.z, l7
dcl_literal l8, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.__z_, r0.z_neg(xyzw), l8
dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r0.___w, r0.x, l9
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.x___, r0.x, l10
and r0.___w, r0.w, r1.x
dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0._y__, r0.y, l11
dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0._y__, r0.y, l12
cmov_logical r0._y__, r0.w, r0.z, r0.y
dcl_literal l13, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l13, r0.x
dcl_literal l14, 0x00000000, 0x00000000, 0x00000000, 0x7F800000
ieq r0.x__w, r0.x, l14
ior r0.x___, r0.z, r0.x
dcl_literal l15, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.x___, r0.x, l15, r0.y
dcl_literal l16, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
cmov_logical r0.x___, r0.w, l16, r0.x
mov out0, r0
mend
__ldexp_f32i32
mdef(252)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
itof r0._y__, r0.y
dcl_literal l0, 0x44800000, 0x44800000, 0x44800000, 0x44800000
lt r0.__z_, l0, r0.y_abs
ftoi r0.___w, r0.y_abs
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0._y__, r0.y, l1
dcl_literal l2, 0x00000400, 0x00000400, 0x00000400, 0x00000400
cmov_logical r0.__z_, r0.z, l2, r0.w
inegate r0.___w, r0.z
cmov_logical r0._y__, r0.y, r0.w, r0.z
dcl_literal l3, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r0.__z_, r0.y, l3
dcl_literal l4, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r1, r0.x, l4
cmov_logical r0.__z_, r1.z, r0.y, r0.z
itof r0._y__, r0.y
itof r0.___w, r1.w
cmov_logical r0.___w, r1.z, r1.x, r0.w
dcl_literal l5, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r1.__zw, r0.w, l5
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.__z_, r1.z, l6
dcl_literal l7, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.___w, r1.w, l7
iadd r1.__z_, r1.z, r0.z
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r0.__z_, r0.z, l8
dcl_literal l9, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r1.__z_, r1.z, l9
dcl_literal l10, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2.x___, l10, r1.z_neg(xyzw)
dcl_literal l11, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.__z_, l11, r1.z
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2._y__, r2.x, l12
dcl_literal l13, 0x00000017, 0x00000018, 0x00000000, 0x00000000
ilt r3.xyz_, l13, r2.x
dcl_literal l14, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r2.x___, r3.x, l14, r2.x
dcl_literal l15, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x___, r2.y, l15, r2.x
dcl_literal l16, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r2._y__, l16, r2.x_neg(xyzw)
ishr r2.x___, r1.w, r2.x
ishl r1.___w, r1.w, r2.y
dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.___w, r3.y, l17, r1.w
dcl_literal l18, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ieq r2._y__, r1.w, l18
dcl_literal l19, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ult r1.___w, l19, r1.w
dcl_literal l20, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r2.__z_, r2.x, l20
iadd r2.__z_, r2.x, r2.z
cmov_logical r2.x___, r2.y, r2.z, r2.x
dcl_literal l21, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r2._y__, r2.x, l21
cmov_logical r1.___w, r1.w, r2.y, r2.x
iadd r0.__z_, r0.w, r0.z
dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.__z_, r1.z, l22, r0.z
cmov_logical r0.__z_, r3.z, r1.w, r0.z
dcl_literal l23, 0x43960000, 0x43960000, 0x43960000, 0x43960000
lt r0._y__, l23, r0.y
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.y, l24, r0.z
ior r0.__z_, r1.y, r0.y
dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r0.___w, l25, r0.y
cmov_logical r0._y__, r0.w, r0.z, r0.y
cmov_logical r0._y__, r1.x, r0.y, r0.x
dcl_literal l26, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r0.__z_, r1.x, l26
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__length_2f32
mdef(253)_out(1)_in(1)
mov r0, in0
dp2_ieee r1._y__, r0.xyxx, r0.xyxx
sqrt_vec r0.x___, r1.y
mov out0, r0
mend
__length_4f32
mdef(254)_out(1)_in(1)
mov r0, in0
dp2_ieee r0.x___, r0.xyxx, r0.xyxx
mad_ieee r0.x___, r0.z, r0.z, r0.x
mad_ieee r0.x___, r0.w, r0.w, r0.x
sqrt_vec r0.x___, r0.x
mov out0, r0
mend
__length_f32
mdef(255)_out(1)_in(1)
mov r0, in0
mov r0.x___, r0.x_abs
mov out0, r0
mend
__lgamma_f32
mdef(256)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x007FFFFF, 0x7F800000, 0x00000000
and r1.xyz_, r0.x, l0
add r0._y__, r1.x, r1.x
round_nearest r0._y__, r0.y
dcl_literal l1, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r0.__z_, r1.x, l1, r0.y_neg(xyzw)
dcl_literal l2, 0x00000000, 0x3E800000, 0x3FC90FDB, 0x00000000
mul_ieee r0._yz_, r0.yyzy, l2
mul_ieee r0.___w, r0.z, r0.z
dcl_literal l3, 0x3636DF25, 0xB492923A, 0x00000000, 0x00000000
dcl_literal l4, 0xB95009D4, 0x37D00AE2, 0x00000000, 0x00000000
mad_ieee r2.xy__, r0.w, l3, l4
dcl_literal l5, 0x3C088887, 0xBAB60B60, 0x00000000, 0x00000000
mad_ieee r2.xy__, r0.w, r2.xyxx, l5
dcl_literal l6, 0xBE2AAAAB, 0x3D2AAAAB, 0x00000000, 0x00000000
mad_ieee r2.xy__, r0.w, r2.xyxx, l6
mul_ieee r2.__z_, r0.z, r0.w
mad_ieee r0.__z_, r2.z, r2.x, r0.z
frc r0._y__, r0.y
dcl_literal l7, 0x40800000, 0x40800000, 0x40800000, 0x40800000
mul_ieee r0._y__, r0.y, l7
round_nearest r0._y__, r0.y
dcl_literal l8, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
eq r3, r0.y, l8
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ge r0._y__, r1.x, l9
and r3, r3, r0.y
and r0._y__, r0.z, r3.x
dcl_literal l10, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r2.x___, r0.w_neg(xyzw), l10, l11
mul_ieee r0.___w, r0.w, r0.w
mad_ieee r0.___w, r0.w, r2.y, r2.x
cmov_logical r0._y__, r3.y, r0.w, r0.y
cmov_logical r0._y__, r3.z, r0.z_neg(xyzw), r0.y
cmov_logical r0._y__, r3.w, r0.w_neg(xyzw), r0.y
itof r0.__zw, r1.yyyx
dcl_literal l12, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r0.___w, r0.w, l12
dcl_literal l13, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
and r2.xy__, r0.z, l13
dcl_literal l14, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r0.__zw, r0.w, l14
dcl_literal l15, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.__z_, r0.z, l15
dcl_literal l16, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r0.___w, r0.w, l16
dcl_literal l17, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r0.__z_, l17, r0.z_neg(xyzw)
inegate r1._y__, r0.z
dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1._y__, r1.y, l18
iadd r1._y__, r0.w, r1.y
ishr r0.___w, r0.w, r0.z
dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l19, r0.z
cmov_logical r0.__z_, r0.z, r0.w, r1.y
dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r2.__zw, r1.xxxz, l20
dcl_literal l21, 0x00000000, 0x00000000, 0x7F800000, 0x00000000
ieq r3.xyz_, r1.zxxz, l21
and r0.___w, r2.z, r3.x
cmov_logical r0._y__, r0.w, r0.z, r0.y
dcl_literal l22, 0x00800000, 0x32000000, 0x1C800000, 0x7F800000
ilt r4, r1.x, l22
and r0.__z_, r2.w, r4.y
dcl_literal l23, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r0.___w, r1.x, l23
cmov_logical r0._y__, r0.z, r0.w, r0.y
frc r0.__z_, r1.x
add r0.___w, r1.x, r0.z_neg(xyzw)
dcl_literal l24, 0x00000000, 0x00000000, 0x3F000000, 0x00000000
eq r1._yz_, r0.z, l24
dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ge r0.__z_, r0.w, l25
dcl_literal l26, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r0.___w, r0.w, l26
and r0.__z_, r1.y, r0.z
ior r0.__z_, r3.y, r0.z
dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.z, l27, r0.y
frc r0.__z_, r0.w
dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r0.__z_, r0.z, l28
dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0.__z_, r0.z, l29, l30
cmov_logical r0._y__, r1.z, r0.z, r0.y
dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, r0.x, l31
cmov_logical r0._y__, r0.z, r0.y_neg(xyzw), r0.y
mul_ieee r0.___w, r0.x, r0.y
dcl_literal l32, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.y, l32
dcl_literal l33, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
div_zeroop(infinity) r5._y__, l33, r0.w_abs
dcl_literal l34, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0.___w, r5.y, l34
itof r0.___w, r0.w
dcl_literal l35, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
and r1._yz_, r0.w, l35
dcl_literal l36, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r1.y, l36
dcl_literal l37, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1._y__, r1.z, l37
dcl_literal l38, 0x00000019, 0x00000019, 0x00000019, 0x00000019
iadd r0.___w, r0.w, l38
dcl_literal l39, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r0.___w, l39, r0.w_neg(xyzw)
inegate r1.__z_, r0.w
dcl_literal l40, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1.__z_, r1.z, l40
iadd r1.__z_, r1.y, r1.z
ishr r1._y__, r1.y, r0.w
dcl_literal l41, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l41, r0.w
cmov_logical r6.___w, r0.w, r1.y, r1.z
dcl_literal l42, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r0.___w, r5.y, l42
dcl_literal l43, 0xFFFFFFE7, 0x00000000, 0xFFFFFFE7, 0x00000000
mov r6.x_z_, l43
dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r5.x__w, l44
cmov_logical r1._yz_, r0.w, r6.zzwz, r5.xxyx
dcl_literal l45, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r1.z, l45
iadd r0.___w, r0.w, r1.y
dcl_literal l46, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1._y__, r1.z, l46
dcl_literal l47, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, l47, r0.w
dcl_literal l48, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r1.__z_, l48, r1.y
dcl_literal l49, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r1.__z_, r1.z, l49
dcl_literal l50, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.__z_, r1.z, l50
dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1.__z_, r1.z, l51
iadd r0.___w, r0.w, r2.z
itof r0.___w, r0.w
dcl_literal l52, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r2.__z_, r0.w, l52
ior r1._y__, r1.y, r1.z
dcl_literal l53, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000
add r1._yz_, r1.y, l53
div_zeroop(infinity) r1.__z_, r1.y, r1.z
mul_ieee r2.___w, r1.z, r1.z
mul_ieee r3.x___, r2.w, r2.w
dcl_literal l54, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
dcl_literal l55, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
mad_ieee r5.xy__, r3.x, l54, l55
dcl_literal l56, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
mad_ieee r5.xy__, r3.x, r5.xyxx, l56
mul_ieee r3.___w, r3.x, r5.x
dcl_literal l57, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r3.x___, r3.x, r5.y, l57
mad_ieee r2.___w, r2.w, r3.x, r3.w
mul_ieee r3.x___, r1.y, r1.y
dcl_literal l58, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.___w, r3.x, l58, r2.w
mad_ieee r1.__z_, r1.z, r2.w, r2.z
dcl_literal l59, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1.__z_, r3.x, l59, r1.z_neg(xyzw)
add r1._y__, r1.y_neg(xyzw), r1.z
dcl_literal l60, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0.___w, r0.w, l60, r1.y_neg(xyzw)
dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1._y__, r2.x, l61
dcl_literal l62, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.__z_, r2.y, l62
dcl_literal l63, 0x00000019, 0x00000019, 0x00000019, 0x00000019
iadd r1._y__, r1.y, l63
dcl_literal l64, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r1._y__, l64, r1.y_neg(xyzw)
inegate r2.x___, r1.y
dcl_literal l65, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.x___, r2.x, l65
iadd r2.x___, r1.z, r2.x
ishr r1.__z_, r1.z, r1.y
dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1._y__, l66, r1.y
cmov_logical r6._y__, r1.y, r1.z, r2.x
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r1.___w, l67
cmov_logical r1._yz_, r4.x, r6.xxyx, r1.wwxw
dcl_literal l68, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.___w, r1.z, l68
iadd r1._y__, r1.w, r1.y
dcl_literal l69, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.__z_, r1.z, l69
dcl_literal l70, 0x00000000, 0xFFFFFF81, 0x00000000, 0x004AFB20
iadd r1._y_w, l70, r1.yyyz
dcl_literal l71, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r1.___w, r1.w, l71
dcl_literal l72, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.x___, r1.w, l72
dcl_literal l73, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1.___w, r1.w, l73
iadd r1._y__, r1.y, r2.x
itof r1._y__, r1.y
dcl_literal l74, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r2.x___, r1.y, l74
ior r1.__z_, r1.z, r1.w
dcl_literal l75, 0x00000000, 0x00000000, 0xBF800000, 0x3F800000
add r1.__zw, r1.z, l75
div_zeroop(infinity) r1.___w, r1.z, r1.w
mul_ieee r2._y__, r1.w, r1.w
mul_ieee r2.__z_, r2.y, r2.y
dcl_literal l76, 0x3E1CD04F, 0x00000000, 0x00000000, 0x3E178897
dcl_literal l77, 0x3E638E29, 0x00000000, 0x00000000, 0x3E3A3325
mad_ieee r3.x__w, r2.z, l76, l77
dcl_literal l78, 0x3ECCCCCD, 0x00000000, 0x00000000, 0x3E924925
mad_ieee r3.x__w, r2.z, r3.xxxw, l78
mul_ieee r2.___w, r2.z, r3.x
dcl_literal l79, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r2.__z_, r2.z, r3.w, l79
mad_ieee r2._y__, r2.y, r2.z, r2.w
mul_ieee r2.__z_, r1.z, r1.z
dcl_literal l80, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2._y__, r2.z, l80, r2.y
mad_ieee r1.___w, r1.w, r2.y, r2.x
dcl_literal l81, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1.___w, r2.z, l81, r1.w_neg(xyzw)
add r1.__z_, r1.z_neg(xyzw), r1.w
dcl_literal l82, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r1._y__, r1.y, l82, r1.z_neg(xyzw)
dcl_literal l83, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
mul_ieee r1.__z_, r1.y, l83
cmov_logical r1.___w, r4.y, r1.z, r0.w
mov r1.__z_, r0.x_neg(xyzw)
mov r5.__z_, r0.x
cmov_logical r1.__zw, r0.z, r1.zzzw, r5.zzzw
ftoi r0.___w, r1.z
dcl_literal l84, 0x00000003, 0x00000003, 0x00000003, 0x00000003
ige r2.x___, r0.w, l84
dcl_literal l85, 0x00000007, 0x00000006, 0x00000005, 0x00000004
ige r5, r0.w, l85
round_z r0.___w, r1.z
add r0.___w, r1.z, r0.w_neg(xyzw)
dcl_literal l86, 0x40C00000, 0x40A00000, 0x40800000, 0x40400000
add r6, r0.w, l86
dcl_literal l87, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r2._y__, r5.x, r6.x, l87
mul_ieee r2.__z_, r6.y, r2.y
cmov_logical r2._y__, r5.y, r2.z, r2.y
mul_ieee r2.__z_, r6.z, r2.y
cmov_logical r2._y__, r5.z, r2.z, r2.y
mul_ieee r2.__z_, r6.w, r2.y
cmov_logical r2._y__, r5.w, r2.z, r2.y
dcl_literal l88, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r2.__z_, r0.w, l88
mul_ieee r2.__z_, r2.y, r2.z
cmov_logical r2.___w, r2.x, r2.z, r2.y
dcl_literal l89, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.x___, r2.w, l89
itof r3.x___, r3.x
dcl_literal l90, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF
and r3.x__w, r3.x, l90
dcl_literal l91, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r3.___w, r3.w, l91
dcl_literal l92, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.x___, r3.x, l92
dcl_literal l93, 0x00000019, 0x00000019, 0x00000019, 0x00000019
iadd r3.x___, r3.x, l93
dcl_literal l94, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r3.x___, l94, r3.x_neg(xyzw)
inegate r4.x___, r3.x
dcl_literal l95, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r4.x___, r4.x, l95
iadd r4.x___, r3.w, r4.x
ishr r3.___w, r3.w, r3.x
dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r3.x___, l96, r3.x
cmov_logical r2._y__, r3.x, r3.w, r4.x
dcl_literal l97, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r3.x___, r2.w, l97
dcl_literal l98, 0xFFFFFFE7, 0x00000000, 0x00000000, 0x00000000
mov r2.x_z_, l98
cmov_logical r2.xy__, r3.x, r2.xyxx, r2.zwzz
dcl_literal l99, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.__z_, r2.y, l99
iadd r2.x___, r2.z, r2.x
dcl_literal l100, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2._y__, r2.y, l100
dcl_literal l101, 0xFFFFFF81, 0x00000000, 0x004AFB20, 0x00000000
iadd r2.x_z_, l101, r2.xxyx
dcl_literal l102, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r2.__z_, r2.z, l102
dcl_literal l103, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.___w, r2.z, l103
dcl_literal l104, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r2.__z_, r2.z, l104
iadd r2.x___, r2.x, r2.w
itof r2.x___, r2.x
dcl_literal l105, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r2.___w, r2.x, l105
ior r2._y__, r2.y, r2.z
dcl_literal l106, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000
add r2._yz_, r2.y, l106
div_zeroop(infinity) r2.__z_, r2.y, r2.z
mul_ieee r3.x___, r2.z, r2.z
mul_ieee r3.___w, r3.x, r3.x
dcl_literal l107, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
dcl_literal l108, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
mad_ieee r4.xy__, r3.w, l107, l108
dcl_literal l109, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
mad_ieee r4.xy__, r3.w, r4.xyxx, l109
mul_ieee r4.x___, r3.w, r4.x
dcl_literal l110, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r3.___w, r3.w, r4.y, l110
mad_ieee r3.x___, r3.x, r3.w, r4.x
mul_ieee r3.___w, r2.y, r2.y
dcl_literal l111, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3.x___, r3.w, l111, r3.x
mad_ieee r2.__z_, r2.z, r3.x, r2.w
dcl_literal l112, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.__z_, r3.w, l112, r2.z_neg(xyzw)
add r2._y__, r2.y_neg(xyzw), r2.z
dcl_literal l113, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r2.x___, r2.x, l113, r2.y_neg(xyzw)
dcl_literal l114, 0x00000000, 0x375943FE, 0x3A620FAB, 0x00000000
dcl_literal l115, 0x00000000, 0x3B1F8219, 0x3CD01D14, 0x00000000
mad_ieee r2._yz_, r0.w, l114, l115
dcl_literal l116, 0x00000000, 0x3D11C643, 0x3E53B452, 0x00000000
mad_ieee r2._yz_, r2.yyzy, r0.w, l116
dcl_literal l117, 0x00000000, 0x3E11BDA2, 0x3F1E0B56, 0x00000000
mad_ieee r2._yz_, r2.yyzy, r0.w, l117
dcl_literal l118, 0x00000000, 0x3E172A19, 0x3F1B09B3, 0x00000000
mad_ieee r2._yz_, r2.yyzy, r0.w, l118
dcl_literal l119, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9
mad_ieee r2._y__, r2.y, r0.w, l119
mul_ieee r2._y__, r0.w, r2.y
div_zeroop(infinity) r2._y__, r2.y, r2.z
dcl_literal l120, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0.___w, r0.w, l120, r2.y
add r0.___w, r2.x, r0.w
dcl_literal l121, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r2.x___, l121, r1.z
mul_ieee r2._y__, r2.x, r2.x
dcl_literal l122, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8
dcl_literal l123, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2
mad_ieee r2.__z_, r2.y, l122, l123
dcl_literal l124, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C
mad_ieee r2.__z_, r2.y, r2.z, l124
dcl_literal l125, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD
mad_ieee r2.__z_, r2.y, r2.z, l125
dcl_literal l126, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r2.__z_, r2.y, r2.z, l126
dcl_literal l127, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB
mad_ieee r2._y__, r2.y, r2.z, l127
dcl_literal l128, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D
mad_ieee r2.x___, r2.x, r2.y, l128
dcl_literal l129, 0xBEEC5B0C, 0xBF800000, 0xBFBB16C3, 0xBF000000
add r5, r1.z, l129
dcl_literal l130, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r2._y__, r1.y, l130
mov r1._y__, r1.y_neg(xyzw)
mad_ieee r2.x___, r5.w, r2.y, r2.x
mul_ieee r2._y__, r1.z, r2.y
dcl_literal l131, 0x3FDDA512, 0x41000000, 0x40000000, 0x00000000
ge r6.xyz_, r1.z, l131
dcl_literal l132, 0x40000000, 0x5C800000, 0x41000000, 0x00000000
lt r7.xyz_, r1.z, l132
and r6.xyz_, r6.xyzx, r7.xyzx
cmov_logical r2.x___, r6.y, r2.x, r2.y
cmov_logical r0.___w, r6.z, r0.w, r2.x
dcl_literal l133, 0x3F666666, 0x3F666666, 0x3F666666, 0x3F666666
lt r2.x___, l133, r1.z
dcl_literal l134, 0x3F3B4A23, 0x3E6B851F, 0x3F9D70A4, 0x3FDDA512
lt r8, r1.z, l134
and r2.x___, r2.x, r8.z
dcl_literal l135, 0x3F3B4A23, 0x3E6B851F, 0x00000000, 0x3F9D70A4
ge r9, r1.z, l135
and r2._yzw, r8.xxyw, r9.yyzw
ior r3.x___, r2.x, r2.z
dcl_literal l136, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r3.___w, r2.y, l136
dcl_literal l137, 0x00000002, 0x00000002, 0x00000002, 0x00000002
cmov_logical r3.x___, r3.x, l137, r3.w
dcl_literal l138, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r3.x___, r2.w, l138, r3.x
dcl_literal l139, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r6.x, l139, r3.x
dcl_literal l140, 0x00000000, 0x00000000, 0x00000001, 0x00000002
ieq r6._yzw, r3.x, l140
and r6._yzw, r7.x, r6.yyzw
dcl_literal l141, 0x3F666666, 0x3F666666, 0x3F666666, 0x3F666666
ge r3.x___, l141, r1.z
and r3.___w, r9.x, r3.x
and r3.x___, r1.y, r3.x
dcl_literal l142, 0x3F800000, 0x40000000, 0x00000000, 0x00000000
add r4.xy__, r1.z_neg(xyzw), l142
and r3.___w, r3.w, r4.x
cmov_logical r2._y__, r2.y, r5.x, r3.w
cmov_logical r1.__z_, r2.z, r1.z, r2.y
cmov_logical r1.__z_, r2.x, r5.y, r1.z
cmov_logical r1.__z_, r2.w, r5.z, r1.z
cmov_logical r1.__z_, r6.x, r4.y, r1.z
mul_ieee r2.x___, r1.z, r1.z
dcl_literal l143, 0x00000000, 0x37D383A2, 0x383C2C75, 0x00000000
dcl_literal l144, 0x00000000, 0x39679767, 0x38E28445, 0x00000000
mad_ieee r2._yz_, r2.x, l143, l144
dcl_literal l145, 0x00000000, 0x3A9C54A1, 0x3A05B634, 0x00000000
mad_ieee r2._yz_, r2.x, r2.yyzy, l145
dcl_literal l146, 0x00000000, 0x3BF2027E, 0x3B3D6EC6, 0x00000000
mad_ieee r2._yz_, r2.x, r2.yyzy, l146
dcl_literal l147, 0x00000000, 0x3D89F001, 0x3CA89915, 0x00000000
mad_ieee r2._yz_, r2.x, r2.yyzy, l147
dcl_literal l148, 0x00000000, 0x3D9E233F, 0x3EA51A66, 0x00000000
mad_ieee r2._yz_, r2.x, r2.yyzy, l148
mul_ieee r2.__z_, r2.x, r2.z
mad_ieee r2._y__, r1.z, r2.y, r2.z
dcl_literal l149, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2._y__, r1.z_neg(xyzw), l149, r2.y
add r2._y__, r3.x, r2.y
cmov_logical r0.___w, r6.y, r2.y, r0.w
mul_ieee r2._y__, r1.z, r2.x
dcl_literal l150, 0x39A57B6B, 0xB9A3F927, 0x39AFE9F7, 0x00000000
dcl_literal l151, 0xBAB7F476, 0x3A66F867, 0xBA0D3085, 0x00000000
mad_ieee r5.xyz_, r2.y, l150, l151
dcl_literal l152, 0x3BC7E707, 0xBB7177FE, 0x3B141699, 0x00000000
mad_ieee r5.xyz_, r2.y, r5.xyzx, l152
dcl_literal l153, 0xBD064D47, 0x3C93373D, 0xBC28FCFE, 0x00000000
mad_ieee r5.xyz_, r2.y, r5.xyzx, l153
dcl_literal l154, 0x3EF7B95E, 0xBE17213C, 0x3D845A15, 0x00000000
mad_ieee r5.xyz_, r2.y, r5.xyzx, l154
mad_ieee r2.__z_, r1.z, r5.z, r5.y
dcl_literal l155, 0x31E61C52, 0x31E61C52, 0x31E61C52, 0x31E61C52
mad_ieee r2._y__, r2.y_neg(xyzw), r2.z, l155
mad_ieee r2.x___, r2.x, r5.x, r2.y_neg(xyzw)
add r2.x___, r3.x, r2.x
dcl_literal l156, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD
add r2.x___, r2.x, l156
cmov_logical r0.___w, r6.z, r2.x, r0.w
dcl_literal l157, 0x3C5B3C5E, 0x3B52D5DB, 0x00000000, 0x00000000
dcl_literal l158, 0x3E6A7578, 0x3DD572AF, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, l157, l158
dcl_literal l159, 0x3F7A4BB2, 0x3F44EFDF, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l159
dcl_literal l160, 0x3FBA3AE7, 0x4008392D, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l160
dcl_literal l161, 0x3F2200F4, 0x401D2EBE, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l161
dcl_literal l162, 0xBD9E233F, 0x3F800000, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l162
mul_ieee r2.x___, r1.z, r2.x
div_zeroop(infinity) r2.x___, r2.x, r2.y
dcl_literal l163, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
mad_ieee r1.__z_, r1.z, l163, r2.x
add r1.__z_, r3.x, r1.z
cmov_logical r0.___w, r6.w, r1.z, r0.w
cmov_logical r0.___w, r4.z, r1.y, r0.w
add r1._y__, r1.w, r0.w_neg(xyzw)
dcl_literal l164, 0x00000000, 0x00000000, 0x1C800000, 0x4B000000
ige r1.__zw, r1.x, l164
dcl_literal l165, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1.x___, l165, r1.x
and r1.__zw, r0.z, r1.zzzw
cmov_logical r0.___w, r1.z, r1.y, r0.w
and r1._y__, r4.w, r1.w
dcl_literal l166, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0._y__, r0.y, l166
and r0._y__, r0.z, r0.y
ior r0._y__, r3.y, r0.y
dcl_literal l167, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.y, l167, r0.w
cmov_logical r0._y__, r3.z, r0.x, r0.y
dcl_literal l168, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.__z_, r0.x, l168
dcl_literal l169, 0x3F800000, 0x00000000, 0x00000000, 0x40000000
ieq r0.x__w, r0.x, l169
cmov_logical r0._y__, r1.x, r0.z, r0.y
dcl_literal l170, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r1.y, l170, r0.y
ior r0.x___, r0.w, r0.x
dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l171, r0.y
mov out0, r0
mend
__lgamma_r_2f32f32
mdef(257)_out(1)_in(1)
mov r0, in0
mov r1.x___, r0.x_neg(xyzw)
max r1.__z_, r0.x, r1.x
dcl_literal l0, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r1.___w, r1.z, l0
if_logicalnz r1.w
    
    dcl_literal l1, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r1.___w, r1.z, l1
    itof r1.___w, r1.w
    
    dcl_literal l2, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r2.xy__, r1.w, l2
    
    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.___w, r2.x, l3
    
    dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019
    iadd r1.___w, r1.w, l4
    
    dcl_literal l5, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.x___, r2.y, l5
    
    dcl_literal l6, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r1.___w, l6, r1.w_neg(xyzw)
    
    dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, l7, r1.w
    ishr r2.__z_, r2.x, r1.w
    inegate r1.___w, r1.w
    
    dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r1.___w, r1.w, l8
    iadd r1.___w, r2.x, r1.w
    cmov_logical r1.__z_, r2.y, r2.z, r1.w
    
    dcl_literal l9, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7
    mov r1.___w, l9
else
    
    dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r1.___w, l10
endif
dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.x___, r1.z, l11
iadd r1.___w, r2.x, r1.w
dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r1.___w, l12, r1.w
dcl_literal l13, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.__z_, r1.z, l13
dcl_literal l14, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r2.x___, l14, r1.z
dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r2.x___, r2.x, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r2._y__, r2.x, l16
ior r1.__z_, r1.z, r2.y
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.x___, r2.x, l17
iadd r1.___w, r1.w, r2.x
itof r1.___w, r1.w
dcl_literal l18, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
add r2.xy__, r1.z, l18
div_zeroop(infinity) r1.__z_, r2.x, r2.y
mul_ieee r2._y__, r1.z, r1.z
mul_ieee r2.__z_, r2.y, r2.y
dcl_literal l19, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
dcl_literal l20, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
mad_ieee r3.xy__, r2.z, l19, l20
dcl_literal l21, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
mad_ieee r3.xy__, r2.z, r3.xyxx, l21
mul_ieee r2.___w, r2.z, r3.x
dcl_literal l22, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r2.__z_, r2.z, r3.y, l22
mad_ieee r2._y__, r2.y, r2.z, r2.w
mul_ieee r2.__z_, r2.x, r2.x
dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2._y__, r2.z, l23, r2.y
dcl_literal l24, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r2.___w, r1.w, l24
mad_ieee r1.__z_, r1.z, r2.y, r2.w
dcl_literal l25, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1.__z_, r2.z, l25, r1.z_neg(xyzw)
add r1.__z_, r2.x_neg(xyzw), r1.z
dcl_literal l26, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r1.__z_, r1.w, l26, r1.z_neg(xyzw)
dcl_literal l27, 0x7F800000, 0x7FFFFFFF, 0x7FFFFFFF, 0x00000000
and r2.xyz_, r0.x, l27
frc r1.___w, r2.z
add r2.___w, r2.z, r1.w_neg(xyzw)
dcl_literal l28, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r3.x___, r2.w, l28
frc r3.x___, r3.x
dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r3.x___, r3.x, l29
add r3._y__, r2.z, r2.z
round_nearest r3._y__, r3.y
dcl_literal l30, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r3.__z_, r2.z, l30, r3.y_neg(xyzw)
dcl_literal l31, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
mul_ieee r3._y__, r3.y, l31
frc r3._y__, r3.y
dcl_literal l32, 0x40800000, 0x40800000, 0x40800000, 0x40800000
mul_ieee r3._y__, r3.y, l32
round_nearest r3._y__, r3.y
dcl_literal l33, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
mul_ieee r3.__z_, r3.z, l33
mul_ieee r3.___w, r3.z, r3.z
mul_ieee r4.x___, r3.z, r3.w
dcl_literal l34, 0x00000000, 0x3636DF25, 0xB492923A, 0x00000000
dcl_literal l35, 0x00000000, 0xB95009D4, 0x37D00AE2, 0x00000000
mad_ieee r4._yz_, r3.w, l34, l35
dcl_literal l36, 0x00000000, 0x3C088887, 0xBAB60B60, 0x00000000
mad_ieee r4._yz_, r3.w, r4.yyzy, l36
dcl_literal l37, 0x00000000, 0xBE2AAAAB, 0x3D2AAAAB, 0x00000000
mad_ieee r4._yz_, r3.w, r4.yyzy, l37
mad_ieee r3.__z_, r4.x, r4.y, r3.z
dcl_literal l38, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
dcl_literal l39, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r4.x___, r3.w_neg(xyzw), l38, l39
mul_ieee r3.___w, r3.w, r3.w
mad_ieee r3.___w, r3.w, r4.z, r4.x
dcl_literal l40, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
eq r4, r3.y, l40
dcl_literal l41, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ge r3._y__, r2.z, l41
and r4, r4, r3.y
and r3._y__, r3.z, r4.x
cmov_logical r3._y__, r4.y, r3.w, r3.y
cmov_logical r3._y__, r4.z, r3.z_neg(xyzw), r3.y
cmov_logical r3._y__, r4.w, r3.w_neg(xyzw), r3.y
dcl_literal l42, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r3.__zw, r2.zzzx, l42
dcl_literal l43, 0x00000000, 0x00000000, 0x7F800000, 0x00000000
ieq r4.xyz_, r2.xyzx, l43
and r2.x___, r3.z, r4.x
itof r2._y__, r2.z
dcl_literal l44, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r2._y__, r2.y, l44
dcl_literal l45, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF
and r4.x__w, r2.y, l45
dcl_literal l46, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2._y__, r4.x, l46
dcl_literal l47, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r3.__z_, r4.w, l47
dcl_literal l48, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r2._y__, l48, r2.y_neg(xyzw)
dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r4.x___, l49, r2.y
ishr r4.___w, r3.z, r2.y
inegate r2._y__, r2.y
dcl_literal l50, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2._y__, r2.y, l50
iadd r2._y__, r3.z, r2.y
cmov_logical r2._y__, r4.x, r4.w, r2.y
cmov_logical r2.x___, r2.x, r2.y, r3.y
dcl_literal l51, 0x32000000, 0x1C800000, 0x7F800000, 0x00000000
ilt r5.xyz_, r2.z, l51
and r2._y__, r3.w, r5.x
dcl_literal l52, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r3._y__, r2.z, l52
cmov_logical r2.x___, r2.y, r3.y, r2.x
dcl_literal l53, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ge r2._y__, r2.w, l53
dcl_literal l54, 0x00000000, 0x00000000, 0x3F000000, 0x00000000
eq r3._yz_, r1.w, l54
and r1.___w, r2.y, r3.y
ior r1.___w, r4.y, r1.w
dcl_literal l55, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.___w, r1.w, l55, r2.x
dcl_literal l56, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
dcl_literal l57, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r2.x___, r3.x, l56, l57
cmov_logical r1.___w, r3.z, r2.x, r1.w
dcl_literal l58, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, r0.x, l58
cmov_logical r1.___w, r2.x, r1.w_neg(xyzw), r1.w
mul_ieee r2._y__, r0.x, r1.w
dcl_literal l59, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
div_zeroop(infinity) r3.___w, l59, r2.y_abs
dcl_literal l60, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r2._y__, r3.w, l60
dcl_literal l61, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r3.w, l61
itof r2.___w, r2.w
dcl_literal l62, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF
and r4.x__w, r2.w, l62
dcl_literal l63, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.___w, r4.x, l63
dcl_literal l64, 0x00000019, 0x00000019, 0x00000019, 0x00000019
iadd r2.___w, r2.w, l64
dcl_literal l65, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r4.x___, r4.w, l65
dcl_literal l66, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r2.___w, l66, r2.w_neg(xyzw)
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r4.___w, l67, r2.w
ishr r5.___w, r4.x, r2.w
inegate r2.___w, r2.w
dcl_literal l68, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.___w, r2.w, l68
iadd r2.___w, r4.x, r2.w
cmov_logical r3._y__, r4.w, r5.w, r2.w
dcl_literal l69, 0xFFFFFFE7, 0x00000000, 0x00000000, 0x00000000
mov r3.x_z_, l69
cmov_logical r2._y_w, r2.y, r3.xxxy, r3.zzzw
dcl_literal l70, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.x___, r2.w, l70
iadd r2._y__, r3.x, r2.y
dcl_literal l71, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2._y__, l71, r2.y
dcl_literal l72, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r2.w, l72
dcl_literal l73, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r3.x___, l73, r2.w
dcl_literal l74, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r3.x___, r3.x, l74
dcl_literal l75, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r3._y__, r3.x, l75
ior r2.___w, r2.w, r3.y
dcl_literal l76, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.x___, r3.x, l76
iadd r2._y__, r2.y, r3.x
itof r2._y__, r2.y
dcl_literal l77, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
add r3.xy__, r2.w, l77
div_zeroop(infinity) r2.___w, r3.x, r3.y
mul_ieee r3._y__, r2.w, r2.w
mul_ieee r3.__z_, r3.y, r3.y
dcl_literal l78, 0x3E1CD04F, 0x00000000, 0x00000000, 0x3E178897
dcl_literal l79, 0x3E638E29, 0x00000000, 0x00000000, 0x3E3A3325
mad_ieee r4.x__w, r3.z, l78, l79
dcl_literal l80, 0x3ECCCCCD, 0x00000000, 0x00000000, 0x3E924925
mad_ieee r4.x__w, r3.z, r4.xxxw, l80
mul_ieee r3.___w, r3.z, r4.x
dcl_literal l81, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r3.__z_, r3.z, r4.w, l81
mad_ieee r3._y__, r3.y, r3.z, r3.w
mul_ieee r3.__z_, r3.x, r3.x
dcl_literal l82, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3._y__, r3.z, l82, r3.y
dcl_literal l83, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r3.___w, r2.y, l83
mad_ieee r2.___w, r2.w, r3.y, r3.w
dcl_literal l84, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.___w, r3.z, l84, r2.w_neg(xyzw)
add r2.___w, r3.x_neg(xyzw), r2.w
dcl_literal l85, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r2._y__, r2.y, l85, r2.w_neg(xyzw)
mov r2.___w, r1.z_neg(xyzw)
dcl_literal l86, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
mul_ieee r3.x___, r1.z, l86
cmov_logical r1._y__, r5.x, r3.x, r2.y
dcl_literal l87, 0x00000000, 0x00000000, 0xFFFFFFE7, 0x00000000
mov r0._yz_, l87
cmov_logical r1.xy__, r2.x, r1.xyxx, r0.xyxx
dcl_literal l88, 0x3F666666, 0x3F666666, 0x3F666666, 0x3F666666
ge r0._y__, l88, r1.x
and r2._y__, r2.w, r0.y
dcl_literal l89, 0x3F3B4A23, 0x3E6B851F, 0x00000000, 0x3F9D70A4
ge r3, r1.x, l89
and r0._y__, r0.y, r3.x
dcl_literal l90, 0x3F800000, 0x00000000, 0x00000000, 0x40000000
add r4.x__w, r1.x_neg(xyzw), l90
and r0._y__, r0.y, r4.x
dcl_literal l91, 0x3F3B4A23, 0x3E6B851F, 0x3F9D70A4, 0x3FDDA512
lt r6, r1.x, l91
and r3.xyz_, r3.yzwy, r6.xywx
dcl_literal l92, 0xBEEC5B0C, 0xBF800000, 0xBFBB16C3, 0xBF000000
add r7, r1.x, l92
cmov_logical r0._y__, r3.x, r7.x, r0.y
dcl_literal l93, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r3.x___, r3.x, l93
cmov_logical r0._y__, r3.y, r1.x, r0.y
dcl_literal l94, 0x3F666666, 0x3F666666, 0x3F666666, 0x3F666666
lt r3.___w, l94, r1.x
and r3.___w, r6.z, r3.w
cmov_logical r0._y__, r3.w, r7.y, r0.y
ior r3._y__, r3.y, r3.w
dcl_literal l95, 0x00000002, 0x00000002, 0x00000002, 0x00000002
cmov_logical r3.x___, r3.y, l95, r3.x
cmov_logical r0._y__, r3.z, r7.z, r0.y
dcl_literal l96, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r3.x___, r3.z, l96, r3.x
dcl_literal l97, 0x00000000, 0x3FDDA512, 0x41000000, 0x40000000
ge r3._yzw, r1.x, l97
dcl_literal l98, 0x40000000, 0x5C800000, 0x41000000, 0x00000000
lt r6.xyz_, r1.x, l98
and r3._yzw, r3.yyzw, r6.xxyz
cmov_logical r0._y__, r3.y, r4.w, r0.y
dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r3.y, l99, r3.x
mul_ieee r3._y__, r0.y, r0.y
dcl_literal l100, 0x37D383A2, 0x00000000, 0x00000000, 0x383C2C75
dcl_literal l101, 0x39679767, 0x00000000, 0x00000000, 0x38E28445
mad_ieee r4.x__w, r3.y, l100, l101
dcl_literal l102, 0x3A9C54A1, 0x00000000, 0x00000000, 0x3A05B634
mad_ieee r4.x__w, r3.y, r4.xxxw, l102
dcl_literal l103, 0x3BF2027E, 0x00000000, 0x00000000, 0x3B3D6EC6
mad_ieee r4.x__w, r3.y, r4.xxxw, l103
dcl_literal l104, 0x3D89F001, 0x00000000, 0x00000000, 0x3CA89915
mad_ieee r4.x__w, r3.y, r4.xxxw, l104
dcl_literal l105, 0x3D9E233F, 0x00000000, 0x00000000, 0x3EA51A66
mad_ieee r4.x__w, r3.y, r4.xxxw, l105
mul_ieee r4.___w, r3.y, r4.w
mad_ieee r4.x___, r0.y, r4.x, r4.w
dcl_literal l106, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r4.x___, r0.y_neg(xyzw), l106, r4.x
add r4.x___, r2.y, r4.x
mul_ieee r4.___w, r0.y, r3.y
dcl_literal l107, 0x00000000, 0x39A57B6B, 0xB9A3F927, 0x39AFE9F7
dcl_literal l108, 0x00000000, 0xBAB7F476, 0x3A66F867, 0xBA0D3085
mad_ieee r6._yzw, r4.w, l107, l108
dcl_literal l109, 0x00000000, 0x3BC7E707, 0xBB7177FE, 0x3B141699
mad_ieee r6._yzw, r4.w, r6.yyzw, l109
dcl_literal l110, 0x00000000, 0xBD064D47, 0x3C93373D, 0xBC28FCFE
mad_ieee r6._yzw, r4.w, r6.yyzw, l110
dcl_literal l111, 0x00000000, 0x3EF7B95E, 0xBE17213C, 0x3D845A15
mad_ieee r6._yzw, r4.w, r6.yyzw, l111
mad_ieee r5.x___, r0.y, r6.w, r6.z
dcl_literal l112, 0x31E61C52, 0x31E61C52, 0x31E61C52, 0x31E61C52
mad_ieee r4.___w, r4.w_neg(xyzw), r5.x, l112
mad_ieee r3._y__, r3.y, r6.y, r4.w_neg(xyzw)
add r3._y__, r2.y, r3.y
dcl_literal l113, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD
add r3._y__, r3.y, l113
dcl_literal l114, 0x3C5B3C5E, 0x00000000, 0x00000000, 0x3B52D5DB
dcl_literal l115, 0x3E6A7578, 0x00000000, 0x00000000, 0x3DD572AF
mad_ieee r5.x__w, r0.y, l114, l115
dcl_literal l116, 0x3F7A4BB2, 0x00000000, 0x00000000, 0x3F44EFDF
mad_ieee r5.x__w, r0.y, r5.xxxw, l116
dcl_literal l117, 0x3FBA3AE7, 0x00000000, 0x00000000, 0x4008392D
mad_ieee r5.x__w, r0.y, r5.xxxw, l117
dcl_literal l118, 0x3F2200F4, 0x00000000, 0x00000000, 0x401D2EBE
mad_ieee r5.x__w, r0.y, r5.xxxw, l118
dcl_literal l119, 0xBD9E233F, 0x00000000, 0x00000000, 0x3F800000
mad_ieee r5.x__w, r0.y, r5.xxxw, l119
mul_ieee r4.___w, r0.y, r5.x
div_zeroop(infinity) r4.___w, r4.w, r5.w
dcl_literal l120, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
mad_ieee r0._y__, r0.y, l120, r4.w
add r0._y__, r2.y, r0.y
ftoi r2._y__, r1.x
round_z r4.___w, r1.x
add r4.___w, r1.x, r4.w_neg(xyzw)
dcl_literal l121, 0x375943FE, 0x00000000, 0x00000000, 0x3A620FAB
dcl_literal l122, 0x3B1F8219, 0x00000000, 0x00000000, 0x3CD01D14
mad_ieee r5.x__w, r4.w, l121, l122
dcl_literal l123, 0x3D11C643, 0x00000000, 0x00000000, 0x3E53B452
mad_ieee r5.x__w, r5.xxxw, r4.w, l123
dcl_literal l124, 0x3E11BDA2, 0x00000000, 0x00000000, 0x3F1E0B56
mad_ieee r5.x__w, r5.xxxw, r4.w, l124
dcl_literal l125, 0x3E172A19, 0x00000000, 0x00000000, 0x3F1B09B3
mad_ieee r5.x__w, r5.xxxw, r4.w, l125
dcl_literal l126, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9
mad_ieee r5.x___, r5.x, r4.w, l126
mul_ieee r5.x___, r4.w, r5.x
div_zeroop(infinity) r5.x___, r5.x, r5.w
dcl_literal l127, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r5.x___, r4.w, l127, r5.x
dcl_literal l128, 0x00000007, 0x00000006, 0x00000005, 0x00000004
ige r8, r2.y, l128
dcl_literal l129, 0x40C00000, 0x40A00000, 0x40800000, 0x40400000
add r9, r4.w, l129
dcl_literal l130, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r5.___w, r8.x, r9.x, l130
mul_ieee r6._y__, r9.y, r5.w
cmov_logical r5.___w, r8.y, r6.y, r5.w
mul_ieee r6._y__, r9.z, r5.w
cmov_logical r5.___w, r8.z, r6.y, r5.w
mul_ieee r6._y__, r9.w, r5.w
cmov_logical r5.___w, r8.w, r6.y, r5.w
dcl_literal l131, 0x00000003, 0x00000003, 0x00000003, 0x00000003
ige r2._y__, r2.y, l131
dcl_literal l132, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r4.___w, r4.w, l132
mul_ieee r4.___w, r5.w, r4.w
cmov_logical r6.__z_, r2.y, r4.w, r5.w
dcl_literal l133, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r2._y__, r6.z, l133
dcl_literal l134, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r4.___w, r6.z, l134
itof r4.___w, r4.w
dcl_literal l135, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
and r7.xy__, r4.w, l135
dcl_literal l136, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r4.___w, r7.x, l136
dcl_literal l137, 0x00000019, 0x00000019, 0x00000019, 0x00000019
iadd r4.___w, r4.w, l137
dcl_literal l138, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r5.___w, r7.y, l138
dcl_literal l139, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r4.___w, l139, r4.w_neg(xyzw)
dcl_literal l140, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r6.___w, l140, r4.w
ishr r7.x___, r5.w, r4.w
inegate r4.___w, r4.w
dcl_literal l141, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r4.___w, r4.w, l141
iadd r4.___w, r5.w, r4.w
cmov_logical r0.___w, r6.w, r7.x, r4.w
dcl_literal l142, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r6._y__, l142
cmov_logical r0.__zw, r2.y, r0.zzzw, r6.yyyz
dcl_literal l143, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2._y__, r0.w, l143
iadd r0.__z_, r2.y, r0.z
dcl_literal l144, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.__z_, l144, r0.z
dcl_literal l145, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0.___w, r0.w, l145
dcl_literal l146, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r2._y__, l146, r0.w
dcl_literal l147, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r2._y__, r2.y, l147
dcl_literal l148, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r4.___w, r2.y, l148
ior r0.___w, r0.w, r4.w
dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2._y__, r2.y, l149
iadd r0.__z_, r0.z, r2.y
itof r0.__z_, r0.z
dcl_literal l150, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000
add r6._yz_, r0.w, l150
div_zeroop(infinity) r0.___w, r6.y, r6.z
mul_ieee r2._y__, r0.w, r0.w
mul_ieee r4.___w, r2.y, r2.y
dcl_literal l151, 0x00000000, 0x00000000, 0x3E1CD04F, 0x3E178897
dcl_literal l152, 0x00000000, 0x00000000, 0x3E638E29, 0x3E3A3325
mad_ieee r6.__zw, r4.w, l151, l152
dcl_literal l153, 0x00000000, 0x00000000, 0x3ECCCCCD, 0x3E924925
mad_ieee r6.__zw, r4.w, r6.zzzw, l153
mul_ieee r5.___w, r4.w, r6.z
dcl_literal l154, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r4.___w, r4.w, r6.w, l154
mad_ieee r2._y__, r2.y, r4.w, r5.w
mul_ieee r4.___w, r6.y, r6.y
dcl_literal l155, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2._y__, r4.w, l155, r2.y
dcl_literal l156, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r5.___w, r0.z, l156
mad_ieee r0.___w, r0.w, r2.y, r5.w
dcl_literal l157, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0.___w, r4.w, l157, r0.w_neg(xyzw)
add r0.___w, r6.y_neg(xyzw), r0.w
dcl_literal l158, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0.__z_, r0.z, l158, r0.w_neg(xyzw)
add r0.__z_, r5.x, r0.z
dcl_literal l159, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r0.___w, l159, r1.x
mul_ieee r2._y__, r0.w, r0.w
dcl_literal l160, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8
dcl_literal l161, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2
mad_ieee r4.___w, r2.y, l160, l161
dcl_literal l162, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C
mad_ieee r4.___w, r2.y, r4.w, l162
dcl_literal l163, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD
mad_ieee r4.___w, r2.y, r4.w, l163
dcl_literal l164, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r4.___w, r2.y, r4.w, l164
dcl_literal l165, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB
mad_ieee r2._y__, r2.y, r4.w, l165
dcl_literal l166, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D
mad_ieee r0.___w, r0.w, r2.y, l166
dcl_literal l167, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.__z_, r1.z, l167
mad_ieee r0.___w, r7.w, r1.z, r0.w
mul_ieee r1.x___, r1.x, r1.z
cmov_logical r0.___w, r3.z, r0.w, r1.x
cmov_logical r0.__z_, r3.w, r0.z, r0.w
dcl_literal l168, 0x00000000, 0x00000000, 0x00000001, 0x00000002
ieq r3.x_zw, r3.x, l168
and r3.x_zw, r6.x, r3.xxzw
cmov_logical r0.__z_, r3.x, r4.x, r0.z
cmov_logical r0.__z_, r3.z, r3.y, r0.z
cmov_logical r0._y__, r3.w, r0.y, r0.z
and r0.__z_, r5.y, r2.x
dcl_literal l169, 0x1C800000, 0x4B000000, 0x7F800000, 0x00000000
ige r3.xyz_, r2.z, l169
and r1.x_z_, r2.x, r3.xxyx
dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r1.w, l170
and r0.___w, r1.x, r0.w
ior r0.__z_, r0.z, r0.w
dcl_literal l171, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l172, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.__z_, r0.z, l171, l172
cmov_logical r0._y__, r5.y, r2.w, r0.y
add r0.___w, r1.y, r0.y_neg(xyzw)
cmov_logical r0._y__, r1.x, r0.w, r0.y
dcl_literal l173, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r1.w, l173
dcl_literal l174, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.___w, r0.w, l174
and r0.___w, r2.x, r0.w
dcl_literal l175, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.w, l175, r0.y
cmov_logical r0._y__, r4.z, r0.x, r0.y
dcl_literal l176, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.___w, l176, r2.z
dcl_literal l177, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r1.x___, r0.x, l177
cmov_logical r0._y__, r0.w, r1.x, r0.y
and r0.___w, r5.z, r1.z
dcl_literal l178, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.w, l178, r0.y
dcl_literal l179, 0x3F800000, 0x00000000, 0x00000000, 0x40000000
ieq r0.x__w, r0.x, l179
ior r0.x___, r0.w, r0.x
dcl_literal l180, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x___, r0.x, l180, r0.y
ior r0.x___, r4.y, r3.z
dcl_literal l181, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.x___, r0.x, l181, r0.z
mov r0.x___, r2.x
mov r0.y, r1.x
mov out0, r0
mend
__load_128bit_global
mdef(258)_out(1)_in(1)
mov r0, in0
mov r0, g[r0.x]
mov out0, r0
mend
__load_128bit_local
mdef(259)_out(1)_in(1)
mov r0, in0
lds_load_vec_id(0) r0, r0.x
mov out0, r0
mend
__load_128bit_private
mdef(260)_out(1)_in(1)
mov r0, in0
mov r0, x0[r0.x]
mov out0, r0
mend
__load_128bit_uav
mdef(261)_out(1)_in(1)
mov r0, in0
uav_raw_load_id(0) r0, r0.x
mov out0, r0
mend
__load_32bit_local
mdef(262)_out(1)_in(1)
mov r0, in0
lds_load_id(0) r0.x, r0.x
mov out0, r0
mend
__load_32bit_uav
mdef(263)_out(1)_in(1)
mov r0, in0
uav_raw_load_id(0) r0.x, r0.x
mov out0, r0
mend
__load_64bit_local
mdef(264)_out(1)_in(1)
mov r0, in0
lds_load_vec_id(0) r0.xy__, r0.x
mov out0, r0
mend
__load_64bit_uav
mdef(265)_out(1)_in(1)
mov r0, in0
uav_raw_load_id(0) r0.xy, r0.x
mov out0, r0
mend
__load_96bit_global
mdef(266)_out(1)_in(1)
mov r0, in0
mov r0.xyz_, g[r0.x].xyz
mov out0, r0
mend
__load_96bit_local
mdef(267)_out(1)_in(1)
mov r0, in0
lds_load_vec_id(0) r0.xyz_, r0.x
mov out0, r0
mend
__load_96bit_private
mdef(268)_out(1)_in(1)
mov r0, in0
mov r0.xyz_, x0[r0.x].xyz
mov out0, r0
mend
__load_96bit_uav
mdef(269)_out(1)_in(1)
mov r0, in0
uav_raw_load_id(0) r0.xyz, r0.x
mov out0, r0
mend
__load_hi_64bit_global
mdef(270)_out(1)_in(1)
mov r0, in0
mov r0.xy__, g[r0.x].zw
mov out0, r0
mend
__load_hi_64bit_private
mdef(271)_out(1)_in(1)
mov r0, in0
mov r0.xy__, x0[r0.x].zw
mov out0, r0
mend
__load_lo_64bit_global
mdef(272)_out(1)_in(1)
mov r0, in0
mov r0.xy__, g[r0.x].xy
mov out0, r0
mend
__load_lo_64bit_private
mdef(273)_out(1)_in(1)
mov r0, in0
mov r0.xy__, x0[r0.x].xy
mov out0, r0
mend
__load_w_32bit_global
mdef(274)_out(1)_in(1)
mov r0, in0
mov r0.x, g[r0.x].w
mov out0, r0
mend
__load_w_32bit_private
mdef(275)_out(1)_in(1)
mov r0, in0
mov r0.x, x0[r0.x].w
mov out0, r0
mend
__load_x_32bit_global
mdef(276)_out(1)_in(1)
mov r0, in0
mov r0.x, g[r0.x].x
mov out0, r0
mend
__load_x_32bit_private
mdef(277)_out(1)_in(1)
mov r0, in0
mov r0.x, x0[r0.x].x
mov out0, r0
mend
__load_y_32bit_global
mdef(278)_out(1)_in(1)
mov r0, in0
mov r0.x, g[r0.x].y
mov out0, r0
mend
__load_y_32bit_private
mdef(279)_out(1)_in(1)
mov r0, in0
mov r0.x, x0[r0.x].y
mov out0, r0
mend
__load_z_32bit_global
mdef(280)_out(1)_in(1)
mov r0, in0
mov r0.x, g[r0.x].z
mov out0, r0
mend
__load_z_32bit_private
mdef(281)_out(1)_in(1)
mov r0, in0
mov r0.x, x0[r0.x].z
mov out0, r0
mend
__log10_f32
mdef(282)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x00800000, 0x00000000, 0x00000000
ilt r0._yz_, r0.x, l0
if_logicalnz r0.y
    
    dcl_literal l1, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0._y__, r0.x, l1
    itof r0._y__, r0.y
    
    dcl_literal l2, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF
    and r0._y_w, r0.y, l2
    
    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0._y__, r0.y, l3
    
    dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019
    iadd r0._y__, r0.y, l4
    
    dcl_literal l5, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r0.___w, r0.w, l5
    
    dcl_literal l6, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0._y__, l6, r0.y_neg(xyzw)
    
    dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, l7, r0.y
    ishr r1._y__, r0.w, r0.y
    inegate r0._y__, r0.y
    
    dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0._y__, r0.y, l8
    iadd r0._y__, r0.w, r0.y
    cmov_logical r0._y__, r1.x, r1.y, r0.y
    
    dcl_literal l9, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7
    mov r0.___w, l9
else
    
    dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0.___w, l10
    mov r0._y__, r0.x
endif
dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r0.y, l11
iadd r0.___w, r1.x, r0.w
dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, l12, r0.w
dcl_literal l13, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0._y__, r0.y, l13
dcl_literal l14, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r1.x___, l14, r0.y
dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r1.x___, r1.x, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1._y__, r1.x, l16
ior r0._y__, r0.y, r1.y
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r1.x, l17
iadd r0.___w, r0.w, r1.x
itof r0.___w, r0.w
dcl_literal l18, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
add r1.xy__, r0.y, l18
div_zeroop(infinity) r0._y__, r1.x, r1.y
mul_ieee r1._y__, r0.y, r0.y
mul_ieee r1.__z_, r1.y, r1.y
dcl_literal l19, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
dcl_literal l20, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, l19, l20
dcl_literal l21, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l21
mul_ieee r1.___w, r1.z, r2.x
dcl_literal l22, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r1.__z_, r1.z, r2.y, l22
mad_ieee r1._y__, r1.y, r1.z, r1.w
mul_ieee r1.__z_, r1.x, r1.x
dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r1.___w, r1.z, l23
dcl_literal l24, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1._y__, r1.z, l24, r1.y
mad_ieee r0._y__, r0.y_neg(xyzw), r1.y, r1.w
add r0._y__, r1.x_neg(xyzw), r0.y
dcl_literal l25, 0x3EDE5BD9, 0x3EDE5BD9, 0x3EDE5BD9, 0x3EDE5BD9
mul_ieee r0._y__, r0.y, l25
dcl_literal l26, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B
mad_ieee r0._y__, r0.w, l26, r0.y_neg(xyzw)
dcl_literal l27, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r0.x, l27
dcl_literal l28, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0._y__, r0.w, r0.y, l28
dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.x___, r0.w, l29
and r0.__z_, r0.z, r1.x
dcl_literal l30, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.z, l30, r0.y
dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.x, l31
cmov_logical r0._y__, r0.z, r0.x, r0.y
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l32, r0.w
dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l33
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__log1p_f32
mdef(283)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x40000000, 0x3F800000, 0x00000000
add r0._yz_, r0.x, l0
dcl_literal l1, 0x7F800000, 0x007FFFFF, 0x7FFFFFFF, 0x00000000
and r1.xyz_, r0.z, l1
dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
ior r0.___w, r1.y, l2
dcl_literal l3, 0x43000000, 0x43000000, 0x43000000, 0x43000000
dcl_literal l4, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1._y__, r0.w, l3, l4
round_z r1.___w, r1.y
ftoi r1._y__, r1.y
dcl_literal l5, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mul_ieee r2.x___, r1.w, l5
dcl_literal l6, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r2._y__, r2.x, l6
dcl_literal l7, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r2.__z_, r1.w, l7, r2.y_neg(xyzw)
dcl_literal l8, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r0.___w, r1.w_neg(xyzw), l8, r0.w
add r1.___w, r0.w, cb0[1].x
div_zeroop(infinity) r2.___w, r0.w, r2.x
add r0.___w, r0.w, r1.w_neg(xyzw)
dcl_literal l9, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.x___, r2.w, l9
mad_ieee r1.___w, r3.x, r2.y, r1.w_neg(xyzw)
mad_ieee r1.___w, r3.x, r2.z, r1.w
add r3.x___, r2.w, r3.x_neg(xyzw)
mad_ieee r1.___w, r3.x, r2.y, r1.w
mad_ieee r1.___w, r3.x, r2.z, r1.w
add r0.___w, r0.w, r1.w_neg(xyzw)
div_zeroop(infinity) r0.___w, r0.w, r2.x
add r1.___w, r2.w, r0.w
dcl_literal l10, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000
dcl_literal l11, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925
mad_ieee r2.x___, r2.w_neg(xyzw), l10, l11
dcl_literal l12, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l12
dcl_literal l13, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD
mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l13
dcl_literal l14, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l14
dcl_literal l15, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB
mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l15
dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.x___, r2.w_neg(xyzw), r2.x, l16
mul_ieee r2._y__, r2.w_neg(xyzw), r2.w
add r2.__z_, r2.w, r1.w_neg(xyzw)
mad_ieee r2.___w, r2.x, r2.y, r1.w
add r1.___w, r1.w, r2.w_neg(xyzw)
mad_ieee r1.___w, r2.x, r2.y, r1.w
add r0.___w, r0.w, r2.z
add r0.___w, r1.w, r0.w
add r1.___w, r2.w, r0.w
add r2.x___, r2.w, r1.w_neg(xyzw)
add r0.___w, r0.w, r2.x
dcl_literal l17, 0xFFFFFFBF, 0xFFFFFFBF, 0xFFFFFFBF, 0xFFFFFFBF
iadd r1._y__, r1.y, l17
dcl_literal l18, 0x00000002, 0x00000002, 0x00000002, 0x00000002
ishr r2.x___, r1.y, l18
dcl_literal l19, 0x00000003, 0x00000003, 0x00000003, 0x00000003
and r1._y__, r1.y, l19
dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l21, 0x31B0FC04, 0x33439E0D, 0x32F632DD, 0x32C01163
cmov_logical r3, r2.x, l20, l21
dcl_literal l22, 0x00000001, 0x00000002, 0x00000003, 0x00000004
ieq r4, r2.x, l22
dcl_literal l23, 0x33161BD2, 0x330AE56B, 0x32692B56, 0x32DC55E6
cmov_logical r3, r4.x, l23, r3
dcl_literal l24, 0x3379A11D, 0x33703FEA, 0x335996FA, 0x33614F28
cmov_logical r3, r4.y, l24, r3
dcl_literal l25, 0x30843642, 0x3267A2B6, 0x331D0180, 0x330F3534
cmov_logical r3, r4.z, l25, r3
dcl_literal l26, 0x335C55E6, 0x335ABC7C, 0x3309CE44, 0x332EAE98
cmov_logical r3, r4.w, l26, r3
dcl_literal l27, 0x00000005, 0x00000006, 0x00000007, 0x00000008
ieq r5, r2.x, l27
dcl_literal l28, 0x336F3DE6, 0x336B8475, 0x32AB4A2F, 0x310717B1
cmov_logical r3, r5.x, l28, r3
dcl_literal l29, 0x31E5BF06, 0x337D6027, 0x32F4D8A5, 0x335AEF40
cmov_logical r3, r5.y, l29, r3
dcl_literal l30, 0x336E0ABF, 0x31D8284B, 0x32E108B8, 0x3332FE61
cmov_logical r3, r5.z, l30, r3
dcl_literal l31, 0x32D4D042, 0x336F323E, 0x32ED38DC, 0x31F35344
cmov_logical r3, r5.w, l31, r3
dcl_literal l32, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C
ieq r6, r2.x, l32
dcl_literal l33, 0x337803AF, 0x31983894, 0x33075A1E, 0x32FD7837
cmov_logical r3, r6.x, l33, r3
dcl_literal l34, 0x32778F32, 0x3234BA20, 0x3360E6FA, 0x3204A550
cmov_logical r3, r6.y, l34, r3
dcl_literal l35, 0x33716A65, 0x3317A6AF, 0x33233E4B, 0x33738207
cmov_logical r3, r6.z, l35, r3
dcl_literal l36, 0x333DF5FA, 0x33144D89, 0x32D448E9, 0x331A7886
cmov_logical r3, r6.w, l36, r3
dcl_literal l37, 0x00000000, 0x0000000D, 0x0000000E, 0x0000000F
ieq r2._yzw, r2.x, l37
dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l39, 0x3C7E0540, 0x3CFC14C0, 0x3D3BA2C0, 0x3D785180
cmov_logical r7, r2.x, l38, l39
dcl_literal l40, 0x336CE70F, 0x331AB151, 0x32A71570, 0x3284672B
cmov_logical r3, r2.y, l40, r3
dcl_literal l41, 0x318717B1, 0x336D81F6, 0x330DBADE, 0x324B78B5
cmov_logical r3, r2.z, l41, r3
dcl_literal l42, 0x332D9F9D, 0x32C359F3, 0x32924167, 0x3377D1CF
cmov_logical r3, r2.w, l42, r3
dcl_literal l43, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r8.xyz_, r1.y, l43
cmov_logical r1._y__, r8.x, r3.y, r3.x
cmov_logical r1._y__, r8.y, r3.z, r1.y
cmov_logical r1._y__, r8.z, r3.w, r1.y
add r2.x___, r1.w, r1.y
add r1.___w, r1.w, r2.x_neg(xyzw)
add r1._y__, r1.y, r1.w
add r0.___w, r0.w, r1.y
add r1._y__, r2.x, r0.w
add r1.___w, r2.x, r1.y_neg(xyzw)
dcl_literal l44, 0x3D9A0EB8, 0x3DB78690, 0x3DD49368, 0x3DF13838
cmov_logical r3, r4.x, l44, r7
dcl_literal l45, 0x3E06BBF0, 0x3E14AA94, 0x3E226958, 0x3E2FF980
cmov_logical r3, r4.y, l45, r3
dcl_literal l46, 0x3E3D5C48, 0x3E4A92D4, 0x3E579E48, 0x3E647FBC
cmov_logical r3, r4.z, l46, r3
dcl_literal l47, 0x3E713838, 0x3E7DC8C0, 0x3E851926, 0x3E8B3AE4
cmov_logical r3, r4.w, l47, r3
dcl_literal l48, 0x3E914A0E, 0x3E974714, 0x3E9D3262, 0x3EA30C5E
cmov_logical r3, r5.x, l48, r3
dcl_literal l49, 0x3EA8D56C, 0x3EAE8DEC, 0x3EB43640, 0x3EB9CEBE
cmov_logical r3, r5.y, l49, r3
dcl_literal l50, 0x3EBF57C0, 0x3EC4D19C, 0x3ECA3CA0, 0x3ECF991E
cmov_logical r3, r5.z, l50, r3
dcl_literal l51, 0x3ED4E764, 0x3EDA27BA, 0x3EDF5A6C, 0x3EE47FBE
cmov_logical r3, r5.w, l51, r3
dcl_literal l52, 0x3EE997F2, 0x3EEEA350, 0x3EF3A212, 0x3EF8947A
cmov_logical r3, r6.x, l52, r3
dcl_literal l53, 0x3EFD7AC4, 0x3F012A95, 0x3F0391F2, 0x3F05F397
cmov_logical r3, r6.y, l53, r3
dcl_literal l54, 0x3F084F9C, 0x3F0AA61E, 0x3F0CF735, 0x3F0F42FA
cmov_logical r3, r6.z, l54, r3
dcl_literal l55, 0x3F118986, 0x3F13CAF0, 0x3F16074F, 0x3F183EB9
cmov_logical r3, r6.w, l55, r3
dcl_literal l56, 0x3F1A7144, 0x3F1C9F06, 0x3F1EC813, 0x3F20EC7F
cmov_logical r3, r2.y, l56, r3
dcl_literal l57, 0x3F230C5E, 0x3F2527C2, 0x3F273EC0, 0x3F295169
cmov_logical r3, r2.z, l57, r3
dcl_literal l58, 0x3F2B5FCE, 0x3F2D6A02, 0x3F2F7015, 0x3F317217
cmov_logical r2, r2.w, l58, r3
cmov_logical r2.x___, r8.x, r2.y, r2.x
cmov_logical r2.x___, r8.y, r2.z, r2.x
cmov_logical r2.x___, r8.z, r2.w, r2.x
add r2._y__, r1.y, r2.x
add r2.x___, r2.x, r2.y_neg(xyzw)
add r1._y__, r1.y, r2.x
add r0.___w, r0.w, r1.w
add r0.___w, r1.y, r0.w
add r1._y__, r2.y, r0.w
add r1.___w, r2.y, r1.y_neg(xyzw)
add r0.___w, r0.w, r1.w
dcl_literal l59, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r1.x, l59
dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1.__z_, l60, r1.z
dcl_literal l61, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r1.x___, r1.x, l61
itof r1.x___, r1.x
dcl_literal l62, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r1.___w, r1.x, l62
dcl_literal l63, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mul_ieee r2.x___, r1.x, l63
dcl_literal l64, 0x3F317000, 0x3F317000, 0x3F317000, 0x3F317000
mad_ieee r2._y__, r1.w, l64, r2.x_neg(xyzw)
add r2.__z_, r1.x, r1.w_neg(xyzw)
dcl_literal l65, 0x3F317000, 0x3F317000, 0x3F317000, 0x3F317000
mad_ieee r2._y__, r2.z, l65, r2.y
dcl_literal l66, 0x37C00001, 0x37C00001, 0x37C00001, 0x37C00001
mad_ieee r1.___w, r1.w, l66, r2.y
dcl_literal l67, 0x37C00001, 0x37C00001, 0x37C00001, 0x37C00001
mad_ieee r1.___w, r2.z, l67, r1.w
dcl_literal l68, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r1.x___, r1.x, l68, r1.w
add r1.___w, r2.x, r1.x
add r2.x___, r2.x, r1.w_neg(xyzw)
add r1.x___, r1.x, r2.x
add r2.x___, r1.y, r1.x
add r1._y__, r1.y, r2.x_neg(xyzw)
add r0.___w, r0.w, r1.y
add r0.___w, r1.x, r0.w
add r1.x___, r2.x, r0.w
add r1._y__, r2.x, r1.x_neg(xyzw)
add r2.x___, r1.w, r1.x
add r2._y__, r1.x, r2.x_neg(xyzw)
add r2._y__, r1.w, r2.y
add r2.__z_, r1.w, r2.x_neg(xyzw)
lt r1.___w, r1.w_abs, r1.x_abs
add r1.x___, r1.x, r2.z
cmov_logical r1.x___, r1.w, r2.y, r1.x
add r0.___w, r0.w, r1.y
add r0.___w, r1.x, r0.w
add r0.___w, r2.x, r0.w
div_zeroop(infinity) r0._y__, r0.x, r0.y
mul_ieee r1.x___, r0.y, r0.y
dcl_literal l69, 0x3E178897, 0x3E178897, 0x3E178897, 0x3E178897
dcl_literal l70, 0x3E1CD04F, 0x3E1CD04F, 0x3E1CD04F, 0x3E1CD04F
mad_ieee r1._y__, r1.x, l69, l70
dcl_literal l71, 0x3E3A3325, 0x3E3A3325, 0x3E3A3325, 0x3E3A3325
mad_ieee r1._y__, r1.x, r1.y, l71
dcl_literal l72, 0x3E638E29, 0x3E638E29, 0x3E638E29, 0x3E638E29
mad_ieee r1._y__, r1.x, r1.y, l72
dcl_literal l73, 0x3E924925, 0x3E924925, 0x3E924925, 0x3E924925
mad_ieee r1._y__, r1.x, r1.y, l73
dcl_literal l74, 0x3ECCCCCD, 0x3ECCCCCD, 0x3ECCCCCD, 0x3ECCCCCD
mad_ieee r1._y__, r1.x, r1.y, l74
dcl_literal l75, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r1._y__, r1.x, r1.y, l75
mul_ieee r1.___w, r0.x, r0.x
dcl_literal l76, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r2.x___, r1.w, l76
dcl_literal l77, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1.___w, r1.w_neg(xyzw), l77, r0.x
mad_ieee r1.x___, r1.x, r1.y, r2.x
mad_ieee r0._y__, r0.y_neg(xyzw), r1.x, r2.x
add r0._y__, r0.x, r0.y_neg(xyzw)
dcl_literal l78, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, l78, r0.x
dcl_literal l79, 0x3EB00000, 0x00000000, 0x00000000, 0x00000000
ilt r2.xy__, r0.x, l79
and r1.x___, r1.x, r2.x
dcl_literal l80, 0xBECA0000, 0xBECA0000, 0xBECA0000, 0xBECA0000
ige r1._y__, l80, r0.x
and r1._y__, r2.y, r1.y
ior r1.x___, r1.x, r1.y
cmov_logical r0._y__, r1.x, r0.y, r0.w
dcl_literal l81, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r0.x, l81
dcl_literal l82, 0x24800000, 0x31000000, 0x00000000, 0x00000000
ilt r1.xy__, r0.w, l82
cmov_logical r0._y__, r1.x, r0.x, r0.y
dcl_literal l83, 0x24800000, 0x24800000, 0x24800000, 0x24800000
ige r1.x___, r0.w, l83
itof r0.___w, r0.w
and r1.x___, r1.y, r1.x
cmov_logical r0._y__, r1.x, r1.w, r0.y
dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r0.___w, r0.w, l84
cmov_logical r0._y__, r0.w, r0.x, r0.y
dcl_literal l85, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
eq r0.___w, r0.x, l85
dcl_literal l86, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
lt r0.x___, r0.x, l86
dcl_literal l87, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0._y__, r0.w, l87, r0.y
dcl_literal l88, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.x___, r0.x, l88, r0.y
dcl_literal l89, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0._y__, r0.z, l89
cmov_logical r0.x___, r0.y, r0.z, r0.x
dcl_literal l90, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0._y__, r0.z, l90
cmov_logical r0.x___, r1.z, r0.y, r0.x
mov out0, r0
mend
__log2_f32
mdef(284)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x00800000, 0x00000000, 0x00000000
ilt r0._yz_, r0.x, l0
if_logicalnz r0.y
    
    dcl_literal l1, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0._y__, r0.x, l1
    itof r0._y__, r0.y
    
    dcl_literal l2, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF
    and r0._y_w, r0.y, l2
    
    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0._y__, r0.y, l3
    
    dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019
    iadd r0._y__, r0.y, l4
    
    dcl_literal l5, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r0.___w, r0.w, l5
    
    dcl_literal l6, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0._y__, l6, r0.y_neg(xyzw)
    
    dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, l7, r0.y
    ishr r1._y__, r0.w, r0.y
    inegate r0._y__, r0.y
    
    dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0._y__, r0.y, l8
    iadd r0._y__, r0.w, r0.y
    cmov_logical r0._y__, r1.x, r1.y, r0.y
    
    dcl_literal l9, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7
    mov r0.___w, l9
else
    
    dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0.___w, l10
    mov r0._y__, r0.x
endif
dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r0.y, l11
iadd r0.___w, r1.x, r0.w
dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, l12, r0.w
dcl_literal l13, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0._y__, r0.y, l13
dcl_literal l14, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r1.x___, l14, r0.y
dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r1.x___, r1.x, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1._y__, r1.x, l16
ior r0._y__, r0.y, r1.y
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r1.x, l17
iadd r0.___w, r0.w, r1.x
itof r0.___w, r0.w
dcl_literal l18, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
add r1.xy__, r0.y, l18
div_zeroop(infinity) r0._y__, r1.x, r1.y
mul_ieee r1._y__, r0.y, r0.y
mul_ieee r1.__z_, r1.y, r1.y
dcl_literal l19, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
dcl_literal l20, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, l19, l20
dcl_literal l21, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l21
mul_ieee r1.___w, r1.z, r2.x
dcl_literal l22, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r1.__z_, r1.z, r2.y, l22
mad_ieee r1._y__, r1.y, r1.z, r1.w
mul_ieee r1.__z_, r1.x, r1.x
dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r1.___w, r1.z, l23
dcl_literal l24, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1._y__, r1.z, l24, r1.y
mad_ieee r0._y__, r0.y_neg(xyzw), r1.y, r1.w
add r0._y__, r1.x_neg(xyzw), r0.y
dcl_literal l25, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r0._y__, r0.y_neg(xyzw), l25, r0.w
dcl_literal l26, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r0.x, l26
dcl_literal l27, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0._y__, r0.w, r0.y, l27
dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.x___, r0.w, l28
and r0.__z_, r0.z, r1.x
dcl_literal l29, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.z, l29, r0.y
dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.x, l30
cmov_logical r0._y__, r0.z, r0.x, r0.y
dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l31, r0.w
dcl_literal l32, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l32
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__logb_f32
mdef(285)_out(2)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000
and r0._yz_, r0.x, l0
dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.___w, r0.y, l1
dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l2
dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l3
dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.___w, l4, r0.w_neg(xyzw)
dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l5
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.___w, r0.w, l6
dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r0.___w, r0.y, r0.w, l7
dcl_literal l8, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.___w, r0.w_neg(xyzw), l8
itof r0.___w, r0.w
dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r1.x___, r0.y, l9
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1._y__, r0.y, l10
and r1.x___, r1.x, r1.y
dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.__z_, r0.z, l11
itof r0.__z_, r0.z
dcl_literal l12, 0xC2FE0000, 0xC2FE0000, 0xC2FE0000, 0xC2FE0000
add r0.__z_, r0.z, l12
cmov_logical r0.__z_, r1.x, r0.w, r0.z
dcl_literal l13, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0.__z_, r0.y, r0.z, l13
dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.y, l14
cmov_logical r0.__z_, r0.w, r0.y, r0.z
dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l15, r0.y
cmov_logical r0.x___, r0.y, r0.x, r0.z
mov out0, r0
mov out1, r1
mend
__log_f32
mdef(286)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x00800000, 0x00000000, 0x00000000
ilt r0._yz_, r0.x, l0
if_logicalnz r0.y
    
    dcl_literal l1, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0._y__, r0.x, l1
    itof r0._y__, r0.y
    
    dcl_literal l2, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF
    and r0._y_w, r0.y, l2
    
    dcl_literal l3, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0._y__, r0.y, l3
    
    dcl_literal l4, 0x00000019, 0x00000019, 0x00000019, 0x00000019
    iadd r0._y__, r0.y, l4
    
    dcl_literal l5, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r0.___w, r0.w, l5
    
    dcl_literal l6, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0._y__, l6, r0.y_neg(xyzw)
    
    dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, l7, r0.y
    ishr r1._y__, r0.w, r0.y
    inegate r0._y__, r0.y
    
    dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0._y__, r0.y, l8
    iadd r0._y__, r0.w, r0.y
    cmov_logical r0._y__, r1.x, r1.y, r0.y
    
    dcl_literal l9, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7
    mov r0.___w, l9
else
    
    dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0.___w, l10
    mov r0._y__, r0.x
endif
dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r0.y, l11
iadd r0.___w, r1.x, r0.w
dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, l12, r0.w
dcl_literal l13, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0._y__, r0.y, l13
dcl_literal l14, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r1.x___, l14, r0.y
dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r1.x___, r1.x, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r1._y__, r1.x, l16
ior r0._y__, r0.y, r1.y
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.x___, r1.x, l17
iadd r0.___w, r0.w, r1.x
itof r0.___w, r0.w
dcl_literal l18, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
add r1.xy__, r0.y, l18
div_zeroop(infinity) r0._y__, r1.x, r1.y
mul_ieee r1._y__, r0.y, r0.y
mul_ieee r1.__z_, r1.y, r1.y
dcl_literal l19, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
dcl_literal l20, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, l19, l20
dcl_literal l21, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l21
mul_ieee r1.___w, r1.z, r2.x
dcl_literal l22, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r1.__z_, r1.z, r2.y, l22
mad_ieee r1._y__, r1.y, r1.z, r1.w
mul_ieee r1.__z_, r1.x, r1.x
dcl_literal l23, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r1._y__, r1.z, l23, r1.y
dcl_literal l24, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r1.___w, r0.w, l24
mad_ieee r0._y__, r0.y, r1.y, r1.w
dcl_literal l25, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0._y__, r1.z, l25, r0.y_neg(xyzw)
add r0._y__, r1.x_neg(xyzw), r0.y
dcl_literal l26, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r0._y__, r0.w, l26, r0.y_neg(xyzw)
dcl_literal l27, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r0.x, l27
dcl_literal l28, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0._y__, r0.w, r0.y, l28
dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.x___, r0.w, l29
and r0.__z_, r0.z, r1.x
dcl_literal l30, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.z, l30, r0.y
dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.__z_, r0.x, l31
cmov_logical r0._y__, r0.z, r0.x, r0.y
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l32, r0.w
dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l33
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__ltof_f32
mdef(287)_out(1)_in(1)
mov r0, in0
inot r0.__zw, r0.xxxy
dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r1.x___, r0.z, l1
ult r0.__z_, r1.x, r0.z
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r0.__z_, r0.z, l2
iadd r0.__z_, r0.w, r0.z
dcl_literal l3, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r0.___w, r0.y, l3
cmov_logical r0._y__, r0.w, r0.z, r0.y
cmov_logical r0.x___, r0.w, r1.x, r0.x
dcl_literal l4, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r0.__z_, r0.y, l4
dcl_literal l5, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r1.x___, r0.x, l5
ior r0.__z_, r0.z, r1.x
dcl_literal l6, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0.__z_, r0.z, l6
dcl_literal l7, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1.x___, r0.z, l7
dcl_literal l8, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.x___, r1.x, l8
dcl_literal l9, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l9
dcl_literal l10, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1.x___, l10, r1.x_neg(xyzw)
dcl_literal l11, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l11
dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1.x___, r1.x, l12
dcl_literal l13, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r1.x___, r1.x, l13
dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r0.__z_, r0.z, r1.x, l14
dcl_literal l15, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r1.x___, r0.y, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1._y__, r1.x, l16
dcl_literal l17, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1._y__, r1.y, l17
dcl_literal l18, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1._y__, r1.y, l18
dcl_literal l19, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1._y__, l19, r1.y_neg(xyzw)
dcl_literal l20, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1._y__, r1.y, l20
dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1._y__, r1.y, l21
dcl_literal l22, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r1._y__, r1.y, l22
dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.x___, r1.x, r1.y, l23
iadd r0.__z_, r1.x, r0.z
dcl_literal l24, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r1._y__, r0.x, l24
dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1.__z_, r1.y, l25
dcl_literal l26, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.__z_, r1.z, l26
dcl_literal l27, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.__z_, r1.z, l27
dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1.__z_, l28, r1.z_neg(xyzw)
dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.__z_, r1.z, l29
dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1.__z_, r1.z, l30
dcl_literal l31, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r1.__z_, r1.z, l31
dcl_literal l32, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r1._y__, r1.y, r1.z, l32
iadd r1._y__, r0.z, r1.y
dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r1.__z_, r1.x, l33
cmov_logical r1.x___, r1.z, r0.z, r1.x
dcl_literal l34, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r0.__z_, r0.z, l34
cmov_logical r0.__z_, r0.z, r1.y, r1.x
dcl_literal l35, 0x00000040, 0x00000040, 0x00000040, 0x00000040
imin r1.x___, r0.z, l35
dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r1.x___, r1.x, l36
dcl_literal l37, 0x00000020, 0x00000020, 0x00000020, 0x00000020
imin r1._y__, r1.x, l37
ishl r1._y__, r0.y, r1.y
dcl_literal l38, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r1.__z_, r1.x, l38
dcl_literal l39, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.___w, r1.x, l39
cmov_logical r1.__z_, r1.w, r1.z, r1.x
dcl_literal l40, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r2.x___, l40, r1.z_neg(xyzw)
ishl r1.__z_, r0.x, r1.z
ushr r2.x___, r0.x, r2.x
ior r1._y__, r1.y, r2.x
cmov_logical r1._y__, r1.w, r1.z, r1.y
dcl_literal l41, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.w, l41, r1.z
cmov_logical r0.xy__, r1.x, r1.zyzz, r0.xyxx
dcl_literal l42, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r1.x___, r0.y, l42
dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0._y__, r0.y, l43
dcl_literal l44, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishl r1._y__, r1.x, l44
dcl_literal l45, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r1.x___, r1.x, l45
dcl_literal l46, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r1.__z_, r0.x, l46
ior r1._y__, r1.y, r1.z
dcl_literal l47, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishl r1.__z_, r0.x, l47
dcl_literal l48, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.x___, r0.x, l48
dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r1.__z_, l49, r1.z
dcl_literal l50, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r1.z, l50
ior r1._y__, r1.y, r1.z
dcl_literal l51, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ieq r1.__z_, r1.y, l51
dcl_literal l52, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ult r1._y__, l52, r1.y
dcl_literal l53, 0x000000BE, 0x000000BE, 0x000000BE, 0x000000BE
iadd r1.___w, r0.z_neg(xyzw), l53
dcl_literal l54, 0x0000003F, 0x0000003F, 0x0000003F, 0x0000003F
iadd r0.__z_, l54, r0.z_neg(xyzw)
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1.___w, r1.w, l55
ior r1.x___, r1.x, r1.w
dcl_literal l56, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.___w, r1.x, l56
iadd r1.___w, r1.x, r1.w
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r1.__z_, r1.x, l57
cmov_logical r1.x___, r1.y, r1.z, r1.x
and r0.x___, r0.y, r0.x
dcl_literal l58, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
ilt r0._y__, r0.z, l58
ior r0.x___, r0.x, r0.y
dcl_literal l59, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l59, r1.x
ior r0.x___, r0.w, r0.x
mov out0, r0
mend
__mad_f32
mdef(288)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mad_ieee r0.x___, r0.x, r1.x, r2.x
mov out0, r0
mend
__mad_f64
mdef(289)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
dmad r0.xy__, r0.xy, r1.xy, r2.xy
mov out0, r0
mend
__max_f32
mdef(290)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
max r0.x___, r0.y, r0.x
mov out0, r0
mend
__min_f32
mdef(291)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
min r0.x___, r0.y, r0.x
mov out0, r0
mend
__mix_f32
mdef(292)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
add r0.___w, r0.x_neg(xyzw), r1.x
mad_ieee r0.x___, r0.w, r2.x, r0.x
mov out0, r0
mend
__modf_2f32f32
mdef(293)_out(1)_in(1)
mov r0, in0
mov r1.___w, r0.x
round_z r0._y__, r0.x
add r0.__z_, r0.x, r0.y_neg(xyzw)
dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x00000000
and r1.xyz_, r0.x, l0
ior r0.x___, r0.z, r1.y
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.___w, r1.x, l1
dcl_literal l2, 0x00000000, 0x7F800000, 0x00000000, 0x00000000
ieq r2.xy__, r1.zxzz, l2
and r0.___w, r0.w, r2.x
ior r0.__z_, r0.y, r1.y
cmov_logical r0.xy__, r0.w, r1.wyww, r0.xzxx
cmov_logical r0.xy__, r2.y, r1.ywyy, r0.xyxx
dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l3, r1.x
dcl_literal l4, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r0.z, l4, r0.xyxx
mov out0, r0
mend
__mul_i64
mdef(294)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul r2.xy, r0.yx, r1.xy
iadd r4.x, r2.x, r3.y
imul_high r5.x, r0.x, r1.x
umul r6.x, r4.x, r5.x
umul r7.x, r0.x, r1.x
iadd r0.xy, r7.x0, r6.0x
mov out0, r0
mend
__mul_v2i64
mdef(295)_out(1)_in(2)
mov r0, in0
mov r1, in1
umul r2, r0.yxwz, r1.xyzw
iadd r4.x_z, r2.x0z, r3.y0w
imul_high r5.x_z, r0.x0z, r1.x0z
umul r6.x_z, r4.x0z, r5.x0z
umul r7.x_z, r0.x0z, r1.x0z
iadd r0, r7.x0z0, r6.0x0z
mov out0, r0
mend
__nan_u32
mdef(296)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0.x___, r0.x, l0
dcl_literal l1, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l1
mov out0, r0
mend
__native_cos_f32
mdef(297)_out(1)_in(1)
mov r0, in0
cos_vec r0.x___, r0.x
mov out0, r0
mend
__native_divide_2f32
mdef(298)_out(1)_in(2)
mov r0, in0
mov r1, in1
div_zeroop(infinity) r0.xy__, r0.xy, r1.xy
mov out0, r0
mend
__native_divide_4f32
mdef(299)_out(1)_in(2)
mov r0, in0
mov r1, in1
div_zeroop(infinity) r0, r0, r1
mov out0, r0
mend
__native_divide_f32
mdef(300)_out(1)_in(2)
mov r0, in0
mov r1, in1
div_zeroop(infinity) r0.x___, r0.x, r1.x
mov out0, r0
mend
__native_exp10_2f32
mdef(301)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78
mul_ieee r1.xy__, r0.xy, l0
exp_vec r0.xy__, r1.xy
mov out0, r0
mend
__native_exp10_4f32
mdef(302)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78
mul_ieee r1, r0, l0
exp_vec r0, r1
mov out0, r0
mend
__native_exp10_f32
mdef(303)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x40549A78, 0x40549A78, 0x40549A78, 0x40549A78
mul_ieee r1.x___, r0.x, l0
exp_vec r0.x___, r1.x
mov out0, r0
mend
__native_exp2_2f32
mdef(304)_out(1)_in(1)
mov r0, in0
exp_vec r0.xy__, r0.xy
mov out0, r0
mend
__native_exp2_4f32
mdef(305)_out(1)_in(1)
mov r0, in0
exp_vec r0, r0
mov out0, r0
mend
__native_exp2_f32
mdef(306)_out(1)_in(1)
mov r0, in0
exp_vec r0.x___, r0.x
mov out0, r0
mend
__native_exp_2f32
mdef(307)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mul_ieee r1.xy__, r0.xy, l0
exp_vec r0.xy__, r1.xy
mov out0, r0
mend
__native_exp_4f32
mdef(308)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mul_ieee r1, r0, l0
exp_vec r0, r1
mov out0, r0
mend
__native_exp_f32
mdef(309)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mul_ieee r0._y__, r0.x, l0
exp_vec r0.x___, r0.y
mov out0, r0
mend
__native_log10_2f32
mdef(310)_out(1)_in(1)
mov r0, in0
log_vec r1.xy__, r0.x
dcl_literal l0, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B
mul_ieee r0.xy__, r1.xy, l0
mov out0, r0
mend
__native_log10_4f32
mdef(311)_out(1)_in(1)
mov r0, in0
log_vec r1, r0
dcl_literal l0, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B
mul_ieee r0, r1, l0
mov out0, r0
mend
__native_log10_f32
mdef(312)_out(1)_in(1)
mov r0, in0
log_vec r1.x___, r0.x
dcl_literal l0, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B, 0x3E9A209B
mul_ieee r0.x___, r1.x, l0
mov out0, r0
mend
__native_log2_2f32
mdef(313)_out(1)_in(1)
mov r0, in0
log_vec r0.xy__, r0.xy
mov out0, r0
mend
__native_log2_4f32
mdef(314)_out(1)_in(1)
mov r0, in0
log_vec r0, r0
mov out0, r0
mend
__native_log2_f32
mdef(315)_out(1)_in(1)
mov r0, in0
log_vec r0.x___, r0.x
mov out0, r0
mend
__native_log_2f32
mdef(316)_out(1)_in(1)
mov r0, in0
log_vec r1.xy__, r0.xy
dcl_literal l0, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mul_ieee r0.xy__, r1.xy, l0
mov out0, r0
mend
__native_log_4f32
mdef(317)_out(1)_in(1)
mov r0, in0
log_vec r1, r0
dcl_literal l0, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mul_ieee r0, r1, l0
mov out0, r0
mend
__native_log_f32
mdef(318)_out(1)_in(1)
mov r0, in0
log_vec r1.x___, r0.x
dcl_literal l0, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mul_ieee r0.x___, r1.x, l0
mov out0, r0
mend
__native_powr_2f32
mdef(319)_out(1)_in(2)
mov r0, in0
mov r1, in1
log_vec r2.xy, r0.xy
mul_ieee r3.xy, r1.xy, r2.xy
exp_vec r3.xy, r3.xy
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r4.xy, r0.xy_abs, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy, r4.xy, l1, r3.xy
mov out0, r0
mend
__native_powr_4f32
mdef(320)_out(1)_in(2)
mov r0, in0
mov r1, in1
log_vec r2, r0
mul_ieee r3, r1, r2
exp_vec r3, r3
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r4, r0_abs, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0, r4, l1, r3
mov out0, r0
mend
__native_powr_f32
mdef(321)_out(1)_in(2)
mov r0, in0
mov r1, in1
log_vec r2.x, r0.x
mul_ieee r3.x, r1.x, r2.x
exp_vec r3.x, r3.x
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r4.x, r0.x_abs, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x, r4.x, l1, r3.x
mov out0, r0
mend
__native_recip_2f32
mdef(322)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r0.xy__, l0, r0.xy
mov out0, r0
mend
__native_recip_4f32
mdef(323)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r0, l0, r0
mov out0, r0
mend
__native_recip_f32
mdef(324)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r0.x___, l0, r0.x
mov out0, r0
mend
__native_rsqrt_2f32
mdef(325)_out(1)_in(1)
mov r0, in0
rsq_vec r0.xy__, r0.xy
mov out0, r0
mend
__native_rsqrt_4f32
mdef(326)_out(1)_in(1)
mov r0, in0
rsq_vec r0, r0
mov out0, r0
mend
__native_rsqrt_f32
mdef(327)_out(1)_in(1)
mov r0, in0
rsq_vec r0.x___, r0.x
mov out0, r0
mend
__native_sin_2f32
mdef(328)_out(1)_in(1)
mov r0, in0
sin_vec r0.xy, r0.xy
mov out0, r0
mend
__native_sin_4f32
mdef(329)_out(1)_in(1)
mov r0, in0
sin_vec r0, r0
mov out0, r0
mend
__native_sin_f32
mdef(330)_out(1)_in(1)
mov r0, in0
sin_vec r0.x___, r0.x
mov out0, r0
mend
__native_sqrt_2f32
mdef(331)_out(1)_in(1)
mov r0, in0
sqrt_vec r0.xy__, r0.xy
mov out0, r0
mend
__native_sqrt_4f32
mdef(332)_out(1)_in(1)
mov r0, in0
sqrt_vec r0, r0
mov out0, r0
mend
__native_sqrt_f32
mdef(333)_out(1)_in(1)
mov r0, in0
sqrt_vec r0.x___, r0.x
mov out0, r0
mend
__native_tan_2f32
mdef(334)_out(1)_in(1)
mov r0, in0
sin_vec r1.xy__, r0.xy
cos_vec r2.xy__, r0.xy
div_zeroop(infinity) r0.xy__, r1.xy, r2.xy
mov out0, r0
mend
__native_tan_4f32
mdef(335)_out(1)_in(1)
mov r0, in0
sin_vec r1, r0
cos_vec r2, r0
div_zeroop(infinity) r0, r1, r2
mov out0, r0
mend
__native_tan_f32
mdef(336)_out(1)_in(1)
mov r0, in0
sin_vec r1.x___, r0.x
cos_vec r2.x___, r0.x
div_zeroop(infinity) r0.x___, r1.x, r2.x
mov out0, r0
mend
__nextafter_f32
mdef(337)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__zw, r0.xxxy, l0
and r0.__z_, r0.w, r0.z
ilt r0.___w, r0.x, r0.y
and r0.__z_, r0.z, r0.w
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, l1, r0.x
and r0.___w, r0.w, r1.x
ior r0.__z_, r0.z, r0.w
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l3, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r0.__z_, r0.z, l2, l3
iadd r0.__z_, r0.x, r0.z
dcl_literal l4, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x00000000
and r1.xyz_, r0.xyyx, l4
ine r0.___w, r1.x, r1.y
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r1.___w, r1.x, l5
and r0.___w, r0.w, r1.w
dcl_literal l6, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ior r1.__z_, r1.z, l6
cmov_logical r0.__z_, r0.w, r1.z, r0.z
ieq r0.x___, r0.x, r0.y
ieq r0.___w, r1.x, r1.y
dcl_literal l7, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
ult r1.xy__, l7, r1.xyxx
and r0.___w, r1.w, r0.w
ior r0.x___, r0.x, r0.w
cmov_logical r0.x___, r0.x, r0.y, r0.z
ior r0._y__, r1.y, r1.x
dcl_literal l8, 0x7FC00001, 0x7FC00001, 0x7FC00001, 0x7FC00001
cmov_logical r0.x___, r0.y, l8, r0.x
mov out0, r0
mend
__normalize_2f32
mdef(338)_out(1)_in(1)
mov r0, in0
dp2_ieee r2.x___, r0.xyxx, r0.xyxx
rsq_vec r2._y__, r2.x
mov r2.__zw, r0.xxxy_abs
dcl_literal l7, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
ilt r2.__zw, l7, r2.zzzw
dcl_literal l8, 0x00000000, 0x00000000, 0x00000001, 0x00000001
and r2.__zw, r2.zzzw, l8
iadd r2.__z_, r2.z, r2.w
mul_ieee r2._y_w, r0.xxxy, r2.y
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r2.x___, r2.x, l9
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.xy__, r2.x, l10, r2.ywyy
dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.__z_, l11, r2.z
dcl_literal l12, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r2.z, l12, r2.xyxx
mov r0.__zw, l13
mov out0, r0
mend
__normalize_4f32
mdef(339)_out(1)_in(1)
mov r0, in0
dp2_ieee r2.x___, r0.xyxx, r0.xyxx
mad_ieee r2.x___, r0.z, r0.z, r2.x
mad_ieee r2.x___, r0.w, r0.w, r2.x
rsq_vec r2._y__, r2.x
mov r3, r0_abs
dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r3, l14, r3
dcl_literal l15, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r3, r3, l15
iadd r2.__z_, r3.x, r3.y
iadd r2.__z_, r2.z, r3.z
iadd r2.__z_, r2.z, r3.w
mul_ieee r0, r0, r2.y
dcl_literal l16, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r2.x___, r2.x, l16
dcl_literal l17, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0, r2.x, l17, r0
dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, l18, r2.z
dcl_literal l19, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0, r2.x, l19, r0
mov out0, r0
mend
__normalize_f32
mdef(340)_out(1)_in(1)
mov r0, in0
mov r2.x___, r0.x_abs
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2._y__, r0.x, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r2.__z_, l1, r2.x
and r2._y__, r2.y, r2.z
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
uge r2.x___, l2, r2.x
and r2._y__, r2.y, r2.x
dcl_literal l3, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r2._y__, r2.y, l3, r0.x
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.___w, l4, r0.x
and r2.__z_, r2.z, r2.w
and r2.x___, r2.x, r2.z
dcl_literal l5, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r2.x, l5, r2.y
mov r0._yzw, l6
mov out0, r0
mend
__pown_f32i32
mdef(341)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x80000000, 0x00000001
and r1, r0.xxyy, l0
itof r0.__z_, r1.x
dcl_literal l1, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r0.__zw, r0.z, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.__z_, r0.z, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r0.___w, r0.w, l3
dcl_literal l4, 0x00000024, 0x00000024, 0x00000024, 0x00000024
iadd r0.__z_, r0.z, l4
dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r0.__z_, l5, r0.z_neg(xyzw)
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r2.x___, l6, r0.z
dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.__z_, r2.x, l7, r0.z
inegate r2.x___, r0.z
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.x___, r2.x, l8
iadd r2.x___, r0.w, r2.x
ishr r0.___w, r0.w, r0.z
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l9, r0.z
cmov_logical r0.__z_, r0.z, r0.w, r2.x
dcl_literal l10, 0x00800000, 0x3F800000, 0x00000000, 0x00000000
ilt r2.xy__, r1.x, l10
cmov_logical r0.__z_, r2.x, r0.z, r1.x
dcl_literal l11, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r0.__zw, r0.z, l11
dcl_literal l12, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
ior r0.___w, r0.w, l12
dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.__z_, r0.z, l13
dcl_literal l14, 0x43000000, 0x43000000, 0x43000000, 0x43000000
dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.__z_, r0.w, l14, l15
round_z r2.___w, r2.z
ftoi r2.__z_, r2.z
dcl_literal l16, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r0.___w, r2.w_neg(xyzw), l16, r0.w
add r3.x___, r0.w, cb0[1].x
add r3._y__, r0.w, r3.x_neg(xyzw)
dcl_literal l17, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mul_ieee r3.__z_, r2.w, l17
dcl_literal l18, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.___w, r3.z, l18
dcl_literal l19, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r2.___w, r2.w, l19, r3.w_neg(xyzw)
div_zeroop(infinity) r0.___w, r0.w, r3.z
dcl_literal l20, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r4.x___, r0.w, l20
mad_ieee r3.x___, r4.x, r3.w, r3.x_neg(xyzw)
mad_ieee r3.x___, r4.x, r2.w, r3.x
add r4.x___, r0.w, r4.x_neg(xyzw)
mad_ieee r3.x___, r4.x, r3.w, r3.x
mad_ieee r2.___w, r4.x, r2.w, r3.x
add r2.___w, r3.y, r2.w_neg(xyzw)
div_zeroop(infinity) r2.___w, r2.w, r3.z
add r3.x___, r0.w, r2.w
dcl_literal l21, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000
dcl_literal l22, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925
mad_ieee r3._y__, r0.w_neg(xyzw), l21, l22
dcl_literal l23, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l23
dcl_literal l24, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD
mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l24
dcl_literal l25, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l25
dcl_literal l26, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB
mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l26
dcl_literal l27, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3._y__, r0.w_neg(xyzw), r3.y, l27
mul_ieee r3.__z_, r0.w_neg(xyzw), r0.w
add r0.___w, r0.w, r3.x_neg(xyzw)
mad_ieee r3.___w, r3.y, r3.z, r3.x
add r3.x___, r3.x, r3.w_neg(xyzw)
mad_ieee r3.x___, r3.y, r3.z, r3.x
add r0.___w, r2.w, r0.w
add r0.___w, r3.x, r0.w
add r2.___w, r3.w, r0.w
add r3.x___, r3.w, r2.w_neg(xyzw)
add r0.___w, r0.w, r3.x
dcl_literal l28, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.x___, r2.w, l28
add r3._y__, r2.w, r3.x_neg(xyzw)
dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mul_ieee r2.___w, r2.w, l29
dcl_literal l30, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000
mad_ieee r3.__z_, r3.x, l30, r2.w_neg(xyzw)
dcl_literal l31, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000
mad_ieee r3.__z_, r3.y, l31, r3.z
dcl_literal l32, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296
mad_ieee r3.x___, r3.x, l32, r3.z
dcl_literal l33, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296
mad_ieee r3.x___, r3.y, l33, r3.x
dcl_literal l34, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r0.___w, r0.w, l34, r3.x
add r3.x___, r2.w, r0.w
add r2.___w, r2.w, r3.x_neg(xyzw)
add r0.___w, r0.w, r2.w
dcl_literal l35, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0
iadd r2.__z_, r2.z, l35
dcl_literal l36, 0x00000002, 0x00000002, 0x00000002, 0x00000002
ishr r2.___w, r2.z, l36
dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l38, 0x00000000, 0x2FB85A45, 0x312C77EC, 0x31FD14FD
cmov_logical r4, r2.w, l37, l38
dcl_literal l39, 0x00000001, 0x00000002, 0x00000003, 0x00000004
ieq r5, r2.w, l39
dcl_literal l40, 0x31D64899, 0x2F2DABBA, 0x31CDA79E, 0x309E2B87
cmov_logical r4, r5.x, l40, r4
dcl_literal l41, 0x324FDEB4, 0x3201781E, 0x31DB4EC9, 0x31C32597
cmov_logical r4, r5.y, l41, r4
dcl_literal l42, 0x32481340, 0x32D6985C, 0x3230E074, 0x326A4CDF
cmov_logical r4, r5.z, l42, r4
dcl_literal l43, 0x323CD1B9, 0x32CFDEB4, 0x3259D0CE, 0x31458715
cmov_logical r4, r5.w, l43, r4
dcl_literal l44, 0x00000005, 0x00000006, 0x00000007, 0x00000008
ieq r6, r2.w, l44
dcl_literal l45, 0x3211F171, 0x3227F605, 0x32B9C415, 0x325295B5
cmov_logical r4, r6.x, l45, r4
dcl_literal l46, 0x2F4BA83C, 0x30F3AA69, 0x320CB06D, 0x32B97998
cmov_logical r4, r6.y, l46, r4
dcl_literal l47, 0x30D63AA6, 0x33550F2A, 0x3374AE80, 0x3321393E
cmov_logical r4, r6.z, l47, r4
dcl_literal l48, 0x3267EF5A, 0x32AB49CA, 0x3355010B, 0x3374C355
cmov_logical r4, r6.w, l48, r4
dcl_literal l49, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C
ieq r7, r2.w, l49
dcl_literal l50, 0x32BCD1B9, 0x3261151F, 0x325313A6, 0x3320F04D
cmov_logical r4, r7.x, l50, r4
dcl_literal l51, 0x32E4788D, 0x32A76195, 0x3332703B, 0x3349A817
cmov_logical r4, r7.y, l51, r4
dcl_literal l52, 0x332DF384, 0x32B06EF9, 0x33300016, 0x331565B0
cmov_logical r4, r7.z, l52, r4
dcl_literal l53, 0x336A8086, 0x331C70C1, 0x332C00A7, 0x3257990D
cmov_logical r4, r7.w, l53, r4
dcl_literal l54, 0x00000000, 0x0000000D, 0x0000000E, 0x0000000F
ieq r3._yzw, r2.w, l54
dcl_literal l55, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l56, 0x00000000, 0x3CB73CB4, 0x3D35D69B, 0x3D8759C4
cmov_logical r8, r2.w, l55, l56
dcl_literal l57, 0x32F5532E, 0x336633F3, 0x31B86815, 0x33654999
cmov_logical r4, r3.y, l57, r4
dcl_literal l58, 0x32D26089, 0x2FCBA83C, 0x32B3FF57, 0x32E0E014
cmov_logical r4, r3.z, l58, r4
dcl_literal l59, 0x331B1354, 0x330D9D4B, 0x32BCF065, 0x330BBE12
cmov_logical r4, r3.w, l59, r4
dcl_literal l60, 0x00000003, 0x00000003, 0x00000003, 0x00000003
and r2.___w, r2.z, l60
dcl_literal l61, 0x00000040, 0x00000040, 0x00000040, 0x00000040
ieq r2.__z_, r2.z, l61
dcl_literal l62, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r9.xyz_, r2.w, l62
cmov_logical r2.___w, r9.x, r4.y, r4.x
cmov_logical r2.___w, r9.y, r4.z, r2.w
cmov_logical r2.___w, r9.z, r4.w, r2.w
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r2.z, l63, r2.w
add r4.x___, r3.x, r2.w
add r3.x___, r3.x, r4.x_neg(xyzw)
add r2.___w, r2.w, r3.x
add r0.___w, r0.w, r2.w
add r2.___w, r4.x, r0.w
add r3.x___, r4.x, r2.w_neg(xyzw)
dcl_literal l64, 0x3DB31FB7, 0x3DDE4212, 0x3E0462C4, 0x3E19574F
cmov_logical r4, r5.x, l64, r8
dcl_literal l65, 0x3E2E00D1, 0x3E42615E, 0x3E567AF1, 0x3E6A4F72
cmov_logical r4, r5.y, l65, r4
dcl_literal l66, 0x3E7DE0B5, 0x3E88983E, 0x3E92203D, 0x3E9B8926
cmov_logical r4, r5.z, l66, r4
dcl_literal l67, 0x3EA4D3C2, 0x3EAE00D1, 0x3EB7110E, 0x3EC0052B
cmov_logical r4, r5.w, l67, r4
dcl_literal l68, 0x3EC8DDD4, 0x3ED19BB0, 0x3EDA3F5F, 0x3EE2C97D
cmov_logical r4, r6.x, l68, r4
dcl_literal l69, 0x3EEB3A9F, 0x3EF39355, 0x3EFBD42B, 0x3F01FED4
cmov_logical r4, r6.y, l69, r4
dcl_literal l70, 0x3F060828, 0x3F0A064F, 0x3F0DF988, 0x3F11E20E
cmov_logical r4, r6.z, l70, r4
dcl_literal l71, 0x3F15C01A, 0x3F1993E3, 0x3F1D5D9F, 0x3F211D83
cmov_logical r4, r6.w, l71, r4
dcl_literal l72, 0x3F24D3C2, 0x3F28808C, 0x3F2C2411, 0x3F2FBE7F
cmov_logical r4, r7.x, l72, r4
dcl_literal l73, 0x3F335004, 0x3F36D8CB, 0x3F3A58FE, 0x3F3DD0C7
cmov_logical r4, r7.y, l73, r4
dcl_literal l74, 0x3F41404E, 0x3F44A7BA, 0x3F480730, 0x3F4B5ED6
cmov_logical r4, r7.z, l74, r4
dcl_literal l75, 0x3F4EAECF, 0x3F51F73F, 0x3F553847, 0x3F587209
cmov_logical r4, r7.w, l75, r4
dcl_literal l76, 0x3F5BA4A4, 0x3F5ED038, 0x3F61F4E5, 0x3F6512C6
cmov_logical r4, r3.y, l76, r4
dcl_literal l77, 0x3F6829FB, 0x3F6B3A9F, 0x3F6E44CD, 0x3F7148A1
cmov_logical r4, r3.z, l77, r4
dcl_literal l78, 0x3F744635, 0x3F773DA3, 0x3F7A2F04, 0x3F7D1A70
cmov_logical r4, r3.w, l78, r4
cmov_logical r3._y__, r9.x, r4.y, r4.x
cmov_logical r3._y__, r9.y, r4.z, r3.y
cmov_logical r3._y__, r9.z, r4.w, r3.y
dcl_literal l79, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r2.__z_, r2.z, l79, r3.y
add r3._y__, r2.w, r2.z
add r2.__z_, r2.z, r3.y_neg(xyzw)
add r2.__z_, r2.w, r2.z
add r0.___w, r0.w, r3.x
add r0.___w, r2.z, r0.w
add r2.__z_, r3.y, r0.w
add r2.___w, r3.y, r2.z_neg(xyzw)
add r0.___w, r0.w, r2.w
dcl_literal l80, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.__z_, r0.z, l80
dcl_literal l81, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC
and r2.x___, r2.x, l81
iadd r0.__z_, r0.z, r2.x
itof r0.__z_, r0.z
add r2.x___, r2.z, r0.z
add r0.__z_, r0.z, r2.x_neg(xyzw)
add r0.__z_, r2.z, r0.z
add r0.__z_, r0.w, r0.z
add r0.___w, r2.x, r0.z
add r2.x___, r2.x, r0.w_neg(xyzw)
add r0.__z_, r0.z, r2.x
dcl_literal l82, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, r0.y, l82
inegate r2.__z_, r0.y
cmov_logical r2.x___, r2.x, r2.z, r0.y
dcl_literal l83, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ishr r2.__z_, r2.x, l83
itof r2.__z_, r2.z
dcl_literal l84, 0x43800000, 0x43800000, 0x43800000, 0x43800000
mul_ieee r2.__z_, r2.z, l84
itof r2.___w, r2.x
dcl_literal l85, 0x01000000, 0x01000000, 0x01000000, 0x01000000
ilt r3.x___, l85, r2.x
dcl_literal l86, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r2.x___, r2.x, l86
cmov_logical r2.__z_, r3.x, r2.z, r2.w
ior r2.__z_, r1.z, r2.z
mul_ieee r2.___w, r0.z, r2.z
add r0.__z_, r0.w, r0.z
itof r2.x___, r2.x
and r2.x___, r3.x, r2.x
dcl_literal l87, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r3.x___, r2.x, l87
ior r1.__z_, r1.z, r2.x
cmov_logical r1.__z_, r3.x, r1.z, r2.x
mad_ieee r2.x___, r0.w, r1.z, r2.w
add r1.__z_, r2.z, r1.z
dcl_literal l88, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r2.___w, r0.w, l88
mul_ieee r3.x___, r0.w, r2.z
add r0.___w, r0.w, r2.w_neg(xyzw)
dcl_literal l89, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3._y__, r2.z, l89
add r2.__z_, r2.z, r3.y_neg(xyzw)
mad_ieee r3.__z_, r2.w, r3.y, r3.x_neg(xyzw)
mad_ieee r2.___w, r2.w, r2.z, r3.z
mad_ieee r2.___w, r0.w, r3.y, r2.w
mad_ieee r0.___w, r0.w, r2.z, r2.w
add r0.___w, r2.x, r0.w
add r2.x___, r3.x, r0.w
add r2.__z_, r3.x, r2.x_neg(xyzw)
add r0.___w, r0.w, r2.z
add r2.__z_, r2.x, r0.w
round_z r2.___w, r2.z
ftoi r2.__z_, r2.z
dcl_literal l90, 0x44800000, 0x44800000, 0x44800000, 0x44800000
lt r3.x___, l90, r2.w_abs
ftoi r3._y__, r2.w_abs
dcl_literal l91, 0x00000400, 0x00000400, 0x00000400, 0x00000400
cmov_logical r3.x___, r3.x, l91, r3.y
inegate r3._y__, r3.x
dcl_literal l92, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r3.__z_, r2.w, l92
cmov_logical r3.x___, r3.z, r3.y, r3.x
dcl_literal l93, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r3._y__, r3.x, l93
add r3.__z_, r2.x, r2.w_neg(xyzw)
add r2.x___, r2.x, r3.z_neg(xyzw)
add r2.x___, r2.w_neg(xyzw), r2.x
add r0.___w, r0.w, r2.x
add r2.x___, r3.z, r0.w
add r2.___w, r3.z, r2.x_neg(xyzw)
add r0.___w, r0.w, r2.w
add r0.___w, r2.x, r0.w
dcl_literal l94, 0x3F317218, 0x00000000, 0x00000000, 0x42000000
mul_ieee r2.x__w, r0.w, l94
dcl_literal l95, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x0FFFF000
and r3.__zw, r0.w, l95
dcl_literal l96, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r4.x___, r3.w, l96, r2.x_neg(xyzw)
dcl_literal l97, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E
mad_ieee r4.x___, r3.w, l97, r4.x
add r3.___w, r0.w, r3.w_neg(xyzw)
dcl_literal l98, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B
lt r3.__z_, r3.z, l98
dcl_literal l99, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r4.x___, r3.w, l99, r4.x
dcl_literal l100, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E
mad_ieee r3.___w, r3.w, l100, r4.x
dcl_literal l101, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r4.x___, r0.w, l101, r3.w
dcl_literal l102, 0x00000000, 0x34904540, 0x3A1BECC5, 0x00000000
dcl_literal l103, 0x00000000, 0x3CC2F57D, 0xBC42EEB9, 0x00000000
mad_ieee r4._yz_, r4.x, l102, l103
dcl_literal l104, 0x00000000, 0x37874471, 0x3DDB50CA, 0x00000000
mad_ieee r4._yz_, r4.yyzy, r4.x, l104
dcl_literal l105, 0x00000000, 0x3F7FE378, 0xBEFFE15B, 0x00000000
mad_ieee r4._yz_, r4.yyzy, r4.x, l105
dcl_literal l106, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378
mad_ieee r4.x___, r4.z, r4.x, l106
div_zeroop(infinity) r4.x___, r4.y, r4.x
mul_ieee r3.___w, r3.w, r4.x
mad_ieee r2.x___, r4.x, r2.x, r3.w
dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.___w, l107, r2.w
dcl_literal l108, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r2.x___, r2.x, l108
dcl_literal l109, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r4, r2.x, l109
cmov_logical r2.x___, r4.z, r3.x, r3.y
itof r3.x___, r3.x
dcl_literal l110, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r3._y__, r2.x, l110
itof r3.___w, r4.w
cmov_logical r3.___w, r4.z, r4.x, r3.w
iadd r3._y__, r3.w, r3.y
dcl_literal l111, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
and r4.x_z_, r3.w, l111
dcl_literal l112, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.___w, r4.x, l112
dcl_literal l113, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r4.x___, r4.z, l113
iadd r2.x___, r3.w, r2.x
dcl_literal l114, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.x___, r2.x, l114
dcl_literal l115, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r3.___w, l115, r2.x
dcl_literal l116, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2.x___, l116, r2.x_neg(xyzw)
dcl_literal l117, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r3._y__, r3.w, l117, r3.y
dcl_literal l118, 0x00000000, 0x00000000, 0x00000017, 0x00000000
ilt r4.__zw, l118, r2.x
dcl_literal l119, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r3.___w, r4.z, l119, r2.x
dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, r2.x, l120
dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x___, r2.x, l121, r3.w
ishr r2.x___, r4.x, r2.x
cmov_logical r2.x___, r4.w, r2.x, r3.y
dcl_literal l122, 0x43960000, 0x43960000, 0x43960000, 0x43960000
lt r3.x___, l122, r3.x
dcl_literal l123, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.x___, r3.x, l123, r2.x
ior r2.x___, r4.y, r2.x
dcl_literal l124, 0x42000000, 0x42000000, 0x00000000, 0x00000000
dcl_literal l125, 0x3F000000, 0xBF000000, 0x00000000, 0x00000000
mad_ieee r3.xy__, r0.w, l124, l125
ftoi r3.xy__, r3.xyxx
cmov_logical r2.___w, r2.w, r3.x, r3.y
itof r3.x___, r2.w
dcl_literal l126, 0x3D000000, 0x3D000000, 0x3D000000, 0x3D000000
mad_ieee r0.___w, r3.x_neg(xyzw), l126, r0.w
dcl_literal l127, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820
dcl_literal l128, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3.x___, r0.w, l127, l128
dcl_literal l129, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mul_ieee r0.___w, r0.w, l129
mul_ieee r3._y__, r0.w, r0.w
mad_ieee r0.___w, r3.y, r3.x, r0.w
dcl_literal l130, 0x0000001F, 0x00000003, 0x00000000, 0x00000000
and r3.xy__, r2.w, l130
iadd r2.___w, r2.w, r3.x_neg(xyzw)
dcl_literal l131, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r4.xyz_, r3.y, l131
dcl_literal l132, 0x00000002, 0x00000002, 0x00000002, 0x00000002
ishr r3.x___, r3.x, l132
dcl_literal l133, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l134, 0x3F800000, 0x3F82C000, 0x3F858000, 0x3F888000
cmov_logical r5, r3.x, l133, l134
dcl_literal l135, 0x00000001, 0x00000002, 0x00000003, 0x00000004
ieq r6, r3.x, l135
dcl_literal l136, 0x3F8B8000, 0x3F8E8000, 0x3F91C000, 0x3F94C000
cmov_logical r5, r6.x, l136, r5
dcl_literal l137, 0x3F980000, 0x3F9B8000, 0x3F9EC000, 0x3FA24000
cmov_logical r5, r6.y, l137, r5
dcl_literal l138, 0x3FA5C000, 0x3FA98000, 0x3FAD4000, 0x3FB10000
cmov_logical r5, r6.z, l138, r5
dcl_literal l139, 0x3FB50000, 0x3FB8C000, 0x3FBD0000, 0x3FC10000
cmov_logical r5, r6.w, l139, r5
dcl_literal l140, 0x00000005, 0x00000006, 0x00000007, 0x00000000
ieq r7.xyz_, r3.x, l140
dcl_literal l141, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l142, 0x00000000, 0x39D86988, 0x3AAB0D9F, 0x3A407404
cmov_logical r8, r3.x, l141, l142
dcl_literal l143, 0x3FC54000, 0x3FC98000, 0x3FCE0000, 0x3FD28000
cmov_logical r5, r7.x, l143, r5
dcl_literal l144, 0x3FD74000, 0x3FDBC000, 0x3FE0C000, 0x3FE58000
cmov_logical r5, r7.y, l144, r5
dcl_literal l145, 0x3FEAC000, 0x3FEFC000, 0x3FF50000, 0x3FFA8000
cmov_logical r5, r7.z, l145, r5
cmov_logical r3.x___, r4.x, r5.y, r5.x
cmov_logical r3.x___, r4.y, r5.z, r3.x
cmov_logical r3.x___, r4.z, r5.w, r3.x
dcl_literal l146, 0x3A2E0F1E, 0x3A90E62D, 0x38F4DCE0, 0x3AD3BEA3
cmov_logical r5, r6.x, l146, r8
dcl_literal l147, 0x3ADFC146, 0x39D39B9C, 0x3AD4C982, 0x3AC10C0C
cmov_logical r5, r6.y, l147, r5
dcl_literal l148, 0x3AFB5AA6, 0x3A856AD3, 0x3A41F752, 0x3A8FD607
cmov_logical r5, r6.z, l148, r5
dcl_literal l149, 0x391E6678, 0x3AEEBD1D, 0x398A39F4, 0x3AB13329
cmov_logical r5, r6.w, l149, r5
dcl_literal l150, 0x3A9CA845, 0x3AE6F619, 0x3A923054, 0x3AA07647
cmov_logical r5, r7.x, l150, r5
dcl_literal l151, 0x391F9958, 0x3AEEDE5F, 0x39CDEEC0, 0x3AE41B9D
cmov_logical r5, r7.y, l151, r5
dcl_literal l152, 0x37C6E7C0, 0x3A92E66F, 0x3A95F454, 0x38ECB6D0
cmov_logical r5, r7.z, l152, r5
cmov_logical r3._y__, r4.x, r5.y, r5.x
cmov_logical r3._y__, r4.y, r5.z, r3.y
cmov_logical r3._y__, r4.z, r5.w, r3.y
add r3.___w, r3.x, r3.y
mad_ieee r0.___w, r3.w, r0.w, r3.y
add r0.___w, r3.x, r0.w
dcl_literal l153, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r4, r0.w, l153
dcl_literal l154, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ixor r0.___w, r2.w, l154
imax r2.___w, r2.w, r2.w_neg(xyzw)
dcl_literal l155, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r0.___w, r0.w, l155
dcl_literal l156, 0x00000020, 0x00000020, 0x00000020, 0x00000020
udiv r2.___w, r2.w, l156
inegate r3.x___, r2.w
cmov_logical r0.___w, r0.w, r3.x, r2.w
iadd r0.___w, r0.w, r2.z
itof r0.___w, r0.w
dcl_literal l157, 0x44800000, 0x44800000, 0x44800000, 0x44800000
lt r2.__z_, l157, r0.w_abs
ftoi r2.___w, r0.w_abs
dcl_literal l158, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r0.w, l158
dcl_literal l159, 0x00000400, 0x00000400, 0x00000400, 0x00000400
cmov_logical r2.__z_, r2.z, l159, r2.w
inegate r2.___w, r2.z
cmov_logical r0.___w, r0.w, r2.w, r2.z
dcl_literal l160, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r2.__z_, r0.w, l160
cmov_logical r2.__z_, r4.z, r0.w, r2.z
itof r0.___w, r0.w
dcl_literal l161, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.___w, r2.z, l161
itof r3.x___, r4.w
cmov_logical r3.x___, r4.z, r4.x, r3.x
iadd r2.___w, r3.x, r2.w
dcl_literal l162, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
and r3.xy__, r3.x, l162
dcl_literal l163, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.x___, r3.x, l163
dcl_literal l164, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r3._y__, r3.y, l164
iadd r2.__z_, r3.x, r2.z
dcl_literal l165, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.__z_, r2.z, l165
dcl_literal l166, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r3.x___, l166, r2.z
dcl_literal l167, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2.__z_, l167, r2.z_neg(xyzw)
dcl_literal l168, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.___w, r3.x, l168, r2.w
dcl_literal l169, 0x00000017, 0x00000000, 0x00000000, 0x00000000
ilt r3.x__w, l169, r2.z
dcl_literal l170, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r3.x___, r3.x, l170, r2.z
dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.__z_, r2.z, l171
dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r2.z, l172, r3.x
ishr r2.__z_, r3.y, r2.z
cmov_logical r2.__z_, r3.w, r2.z, r2.w
dcl_literal l173, 0x43960000, 0x43960000, 0x43960000, 0x43960000
lt r0.___w, l173, r0.w
dcl_literal l174, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.___w, r0.w, l174, r2.z
ior r0.___w, r4.y, r0.w
cmov_logical r0.___w, r3.z, r2.x, r0.w
dcl_literal l175, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r2.x___, r1.z, l175
dcl_literal l176, 0x2E800000, 0x2E800000, 0x2E800000, 0x2E800000
ilt r2.x___, r2.x, l176
dcl_literal l177, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r2.__z_, r1.z, l177
mul_ieee r0.__z_, r0.z, r1.z
cmov_logical r0.___w, r2.x, r2.z, r0.w
itof r0._y__, r0.y
dcl_literal l178, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r1.__z_, r0.y, l178
dcl_literal l179, 0x7FFFFFFF, 0x00000000, 0x80000000, 0x00000000
and r2.x_z_, r0.y, l179
cmov_logical r0._y__, r1.z, r1.x, r0.w
dcl_literal l180, 0x43000000, 0x43000000, 0x43000000, 0x43000000
lt r0.___w, l180, r0.z
dcl_literal l181, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r1.__z_, r0.z, l181
dcl_literal l182, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000
lt r0.__z_, r0.z, l182
dcl_literal l183, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r1.__z_, l183, r1.z
and r0.__zw, r0.zzzw, r1.z
dcl_literal l184, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.w, l184, r0.y
dcl_literal l185, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.z, l185, r0.y
dcl_literal l186, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l186, r2.x
inot r0.___w, r0.z
dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r1.__z_, r2.x, l187
inot r2.___w, r1.z
and r0.___w, r0.w, r2.w
dcl_literal l188, 0xFFFFFFFF, 0x00000000, 0x00000000, 0x00000000
dcl_literal l189, 0x00000000, 0xFFFFFFFF, 0x00000000, 0x00000000
cmov_logical r3.xy__, r1.x, l188, l189
dcl_literal l190, 0x00000000, 0x80000000, 0x00000000, 0x00000000
ine r1._y_w, r1.yyyw, l190
inot r2.___w, r1.y
and r3.__zw, r3.xxxy, r2.w
and r3.__z_, r0.w, r3.z
and r1.___w, r0.w, r1.w
and r0.___w, r0.w, r3.y
and r3.__z_, r3.z, r1.w
cmov_logical r0._y__, r3.z, r0.y_neg(xyzw), r0.y
and r3.__z_, r3.y, r1.y
dcl_literal l191, 0x00000000, 0xFFFFFFFF, 0x00000000, 0x00000000
dcl_literal l192, 0xFFFFFFFF, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.xy__, r2.x, l191, l192
dcl_literal l193, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ine r2.x___, r2.z, l193
and r2.__z_, r3.z, r4.y
and r2.__z_, r1.w, r2.z
inot r3.__z_, r2.x
and r2.__z_, r2.z, r3.z
dcl_literal l194, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r2.z, l194, r0.y
and r2.__z_, r3.w, r4.y
and r2.__z_, r1.w, r2.z
and r2.__z_, r3.z, r2.z
dcl_literal l195, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0._y__, r2.z, l195, r0.y
inot r2.__z_, r1.w
and r3._y__, r3.y, r4.y
and r2._y__, r2.y, r3.x
and r3.x___, r2.z, r3.y
and r3._y__, r3.z, r3.x
and r3.x___, r2.x, r3.x
dcl_literal l196, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r3.y, l196, r0.y
and r0.___w, r0.w, r4.y
and r0.___w, r1.w, r0.w
and r0.___w, r2.x, r0.w
cmov_logical r0.x___, r0.w, r0.x, r0.y
dcl_literal l197, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r3.x, l197, r0.x
dcl_literal l198, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r0._y__, r1.x, l198
and r0.___w, r1.y, r0.y
and r0._y__, r2.w, r0.y
ior r3.x___, r4.x, r0.w
inot r0.___w, r0.w
dcl_literal l199, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r3.x, l199, r0.x
dcl_literal l200, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r3.x___, r1.x, l200
dcl_literal l201, 0x00000000, 0x7F800000, 0x00000000, 0x3F800000
ilt r3._y_w, l201, r1.x
and r1.x___, r2.w, r3.x
and r1.x___, r4.y, r1.x
and r1.___w, r1.w, r1.x
and r1.x___, r2.z, r1.x
and r2.__z_, r3.z, r1.w
and r1.___w, r2.x, r1.w
dcl_literal l202, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.x___, r2.z, l202, r0.x
dcl_literal l203, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0.x___, r1.w, l203, r0.x
and r1.___w, r3.z, r1.x
and r1.x___, r2.x, r1.x
dcl_literal l204, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r1.w, l204, r0.x
dcl_literal l205, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r1.x, l205, r0.x
and r1.x___, r1.y, r3.x
inot r1._y__, r3.x
and r1.x___, r4.y, r1.x
and r1.___w, r4.y, r3.y
and r2.__z_, r3.z, r1.x
and r1.x___, r2.x, r1.x
dcl_literal l206, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r2.z, l206, r0.x
dcl_literal l207, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r1.x, l207, r0.x
and r0._y__, r1.z, r0.y
dcl_literal l208, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r0.y, l208, r0.x
and r0._y__, r1.z, r2.y
and r1.x___, r3.z, r0.y
and r0._y__, r2.x, r0.y
dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r1.x, l209, r0.x
inot r1.x___, r3.y
and r1.x___, r1.y, r1.x
and r1.x___, r3.w, r1.x
and r1.x___, r1.z, r1.x
and r1._y__, r3.z, r1.x
and r1.x___, r2.x, r1.x
ior r0._y__, r0.y, r1.y
dcl_literal l210, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.y, l210, r0.x
and r0._y__, r0.z, r0.w
ior r0._y__, r1.w, r0.y
dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r1.x, l211, r0.x
dcl_literal l212, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l212, r0.x
mov out0, r0
mend
__powr_f32
mdef(342)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x7FFFFFFF, 0x80000000
and r1, r0.xxyy, l0
itof r0.x___, r1.x
dcl_literal l1, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
and r0.x_z_, r0.x, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.x___, r0.x, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r0.__z_, r0.z, l3
dcl_literal l4, 0x00000024, 0x00000024, 0x00000024, 0x00000024
iadd r0.x___, r0.x, l4
dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r0.x___, l5, r0.x_neg(xyzw)
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r0.___w, l6, r0.x
dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.x___, r0.w, l7, r0.x
inegate r0.___w, r0.x
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r0.___w, r0.w, l8
iadd r0.___w, r0.z, r0.w
ishr r0.__z_, r0.z, r0.x
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, l9, r0.x
cmov_logical r0.x___, r0.x, r0.z, r0.w
dcl_literal l10, 0x00800000, 0x2E800000, 0x3F800000, 0x00000000
ilt r2.xyz_, r1.xzxx, l10
cmov_logical r0.x___, r2.x, r0.x, r1.x
dcl_literal l11, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
and r0.x_z_, r0.x, l11
dcl_literal l12, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
ior r0.__z_, r0.z, l12
dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.x___, r0.x, l13
dcl_literal l14, 0x43000000, 0x43000000, 0x43000000, 0x43000000
dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0.___w, r0.z, l14, l15
round_z r2.___w, r0.w
ftoi r0.___w, r0.w
dcl_literal l16, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r0.__z_, r2.w_neg(xyzw), l16, r0.z
add r3.x___, r0.z, cb0[1].x
add r3._y__, r0.z, r3.x_neg(xyzw)
dcl_literal l17, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mul_ieee r3.__z_, r2.w, l17
dcl_literal l18, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.___w, r3.z, l18
dcl_literal l19, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r2.___w, r2.w, l19, r3.w_neg(xyzw)
div_zeroop(infinity) r0.__z_, r0.z, r3.z
dcl_literal l20, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r4.x___, r0.z, l20
mad_ieee r3.x___, r4.x, r3.w, r3.x_neg(xyzw)
mad_ieee r3.x___, r4.x, r2.w, r3.x
add r4.x___, r0.z, r4.x_neg(xyzw)
mad_ieee r3.x___, r4.x, r3.w, r3.x
mad_ieee r2.___w, r4.x, r2.w, r3.x
add r2.___w, r3.y, r2.w_neg(xyzw)
div_zeroop(infinity) r2.___w, r2.w, r3.z
add r3.x___, r0.z, r2.w
dcl_literal l21, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000
dcl_literal l22, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925
mad_ieee r3._y__, r0.z_neg(xyzw), l21, l22
dcl_literal l23, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l23
dcl_literal l24, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l24
dcl_literal l25, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l25
dcl_literal l26, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l26
dcl_literal l27, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3._y__, r0.z_neg(xyzw), r3.y, l27
mul_ieee r3.__z_, r0.z_neg(xyzw), r0.z
add r0.__z_, r0.z, r3.x_neg(xyzw)
mad_ieee r3.___w, r3.y, r3.z, r3.x
add r3.x___, r3.x, r3.w_neg(xyzw)
mad_ieee r3.x___, r3.y, r3.z, r3.x
add r0.__z_, r2.w, r0.z
add r0.__z_, r3.x, r0.z
add r2.___w, r3.w, r0.z
add r3.x___, r3.w, r2.w_neg(xyzw)
add r0.__z_, r0.z, r3.x
dcl_literal l28, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.x___, r2.w, l28
add r3._y__, r2.w, r3.x_neg(xyzw)
dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mul_ieee r2.___w, r2.w, l29
dcl_literal l30, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000
mad_ieee r3.__z_, r3.x, l30, r2.w_neg(xyzw)
dcl_literal l31, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000
mad_ieee r3.__z_, r3.y, l31, r3.z
dcl_literal l32, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296
mad_ieee r3.x___, r3.x, l32, r3.z
dcl_literal l33, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296
mad_ieee r3.x___, r3.y, l33, r3.x
dcl_literal l34, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r0.__z_, r0.z, l34, r3.x
add r3.x___, r2.w, r0.z
add r2.___w, r2.w, r3.x_neg(xyzw)
add r0.__z_, r0.z, r2.w
dcl_literal l35, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0
iadd r0.___w, r0.w, l35
dcl_literal l36, 0x00000002, 0x00000002, 0x00000002, 0x00000002
ishr r2.___w, r0.w, l36
dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l38, 0x00000000, 0x2FB85A45, 0x312C77EC, 0x31FD14FD
cmov_logical r4, r2.w, l37, l38
dcl_literal l39, 0x00000001, 0x00000002, 0x00000003, 0x00000004
ieq r5, r2.w, l39
dcl_literal l40, 0x31D64899, 0x2F2DABBA, 0x31CDA79E, 0x309E2B87
cmov_logical r4, r5.x, l40, r4
dcl_literal l41, 0x324FDEB4, 0x3201781E, 0x31DB4EC9, 0x31C32597
cmov_logical r4, r5.y, l41, r4
dcl_literal l42, 0x32481340, 0x32D6985C, 0x3230E074, 0x326A4CDF
cmov_logical r4, r5.z, l42, r4
dcl_literal l43, 0x323CD1B9, 0x32CFDEB4, 0x3259D0CE, 0x31458715
cmov_logical r4, r5.w, l43, r4
dcl_literal l44, 0x00000005, 0x00000006, 0x00000007, 0x00000008
ieq r6, r2.w, l44
dcl_literal l45, 0x3211F171, 0x3227F605, 0x32B9C415, 0x325295B5
cmov_logical r4, r6.x, l45, r4
dcl_literal l46, 0x2F4BA83C, 0x30F3AA69, 0x320CB06D, 0x32B97998
cmov_logical r4, r6.y, l46, r4
dcl_literal l47, 0x30D63AA6, 0x33550F2A, 0x3374AE80, 0x3321393E
cmov_logical r4, r6.z, l47, r4
dcl_literal l48, 0x3267EF5A, 0x32AB49CA, 0x3355010B, 0x3374C355
cmov_logical r4, r6.w, l48, r4
dcl_literal l49, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C
ieq r7, r2.w, l49
dcl_literal l50, 0x32BCD1B9, 0x3261151F, 0x325313A6, 0x3320F04D
cmov_logical r4, r7.x, l50, r4
dcl_literal l51, 0x32E4788D, 0x32A76195, 0x3332703B, 0x3349A817
cmov_logical r4, r7.y, l51, r4
dcl_literal l52, 0x332DF384, 0x32B06EF9, 0x33300016, 0x331565B0
cmov_logical r4, r7.z, l52, r4
dcl_literal l53, 0x336A8086, 0x331C70C1, 0x332C00A7, 0x3257990D
cmov_logical r4, r7.w, l53, r4
dcl_literal l54, 0x00000000, 0x0000000D, 0x0000000E, 0x0000000F
ieq r3._yzw, r2.w, l54
dcl_literal l55, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l56, 0x00000000, 0x3CB73CB4, 0x3D35D69B, 0x3D8759C4
cmov_logical r8, r2.w, l55, l56
dcl_literal l57, 0x32F5532E, 0x336633F3, 0x31B86815, 0x33654999
cmov_logical r4, r3.y, l57, r4
dcl_literal l58, 0x32D26089, 0x2FCBA83C, 0x32B3FF57, 0x32E0E014
cmov_logical r4, r3.z, l58, r4
dcl_literal l59, 0x331B1354, 0x330D9D4B, 0x32BCF065, 0x330BBE12
cmov_logical r4, r3.w, l59, r4
dcl_literal l60, 0x00000003, 0x00000003, 0x00000003, 0x00000003
and r2.___w, r0.w, l60
dcl_literal l61, 0x00000040, 0x00000040, 0x00000040, 0x00000040
ieq r0.___w, r0.w, l61
dcl_literal l62, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r9.xyz_, r2.w, l62
cmov_logical r2.___w, r9.x, r4.y, r4.x
cmov_logical r2.___w, r9.y, r4.z, r2.w
cmov_logical r2.___w, r9.z, r4.w, r2.w
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r0.w, l63, r2.w
add r4.x___, r3.x, r2.w
add r3.x___, r3.x, r4.x_neg(xyzw)
add r2.___w, r2.w, r3.x
add r0.__z_, r0.z, r2.w
add r2.___w, r4.x, r0.z
add r3.x___, r4.x, r2.w_neg(xyzw)
dcl_literal l64, 0x3DB31FB7, 0x3DDE4212, 0x3E0462C4, 0x3E19574F
cmov_logical r4, r5.x, l64, r8
dcl_literal l65, 0x3E2E00D1, 0x3E42615E, 0x3E567AF1, 0x3E6A4F72
cmov_logical r4, r5.y, l65, r4
dcl_literal l66, 0x3E7DE0B5, 0x3E88983E, 0x3E92203D, 0x3E9B8926
cmov_logical r4, r5.z, l66, r4
dcl_literal l67, 0x3EA4D3C2, 0x3EAE00D1, 0x3EB7110E, 0x3EC0052B
cmov_logical r4, r5.w, l67, r4
dcl_literal l68, 0x3EC8DDD4, 0x3ED19BB0, 0x3EDA3F5F, 0x3EE2C97D
cmov_logical r4, r6.x, l68, r4
dcl_literal l69, 0x3EEB3A9F, 0x3EF39355, 0x3EFBD42B, 0x3F01FED4
cmov_logical r4, r6.y, l69, r4
dcl_literal l70, 0x3F060828, 0x3F0A064F, 0x3F0DF988, 0x3F11E20E
cmov_logical r4, r6.z, l70, r4
dcl_literal l71, 0x3F15C01A, 0x3F1993E3, 0x3F1D5D9F, 0x3F211D83
cmov_logical r4, r6.w, l71, r4
dcl_literal l72, 0x3F24D3C2, 0x3F28808C, 0x3F2C2411, 0x3F2FBE7F
cmov_logical r4, r7.x, l72, r4
dcl_literal l73, 0x3F335004, 0x3F36D8CB, 0x3F3A58FE, 0x3F3DD0C7
cmov_logical r4, r7.y, l73, r4
dcl_literal l74, 0x3F41404E, 0x3F44A7BA, 0x3F480730, 0x3F4B5ED6
cmov_logical r4, r7.z, l74, r4
dcl_literal l75, 0x3F4EAECF, 0x3F51F73F, 0x3F553847, 0x3F587209
cmov_logical r4, r7.w, l75, r4
dcl_literal l76, 0x3F5BA4A4, 0x3F5ED038, 0x3F61F4E5, 0x3F6512C6
cmov_logical r4, r3.y, l76, r4
dcl_literal l77, 0x3F6829FB, 0x3F6B3A9F, 0x3F6E44CD, 0x3F7148A1
cmov_logical r4, r3.z, l77, r4
dcl_literal l78, 0x3F744635, 0x3F773DA3, 0x3F7A2F04, 0x3F7D1A70
cmov_logical r4, r3.w, l78, r4
cmov_logical r3._y__, r9.x, r4.y, r4.x
cmov_logical r3._y__, r9.y, r4.z, r3.y
cmov_logical r3._y__, r9.z, r4.w, r3.y
dcl_literal l79, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.___w, r0.w, l79, r3.y
add r3._y__, r2.w, r0.w
add r0.___w, r0.w, r3.y_neg(xyzw)
add r0.___w, r2.w, r0.w
add r0.__z_, r0.z, r3.x
add r0.__z_, r0.w, r0.z
add r0.___w, r3.y, r0.z
add r2.___w, r3.y, r0.w_neg(xyzw)
add r0.__z_, r0.z, r2.w
dcl_literal l80, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.x___, r0.x, l80
dcl_literal l81, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC
and r2.x___, r2.x, l81
iadd r0.x___, r0.x, r2.x
itof r0.x___, r0.x
add r2.x___, r0.w, r0.x
add r0.x___, r0.x, r2.x_neg(xyzw)
add r0.x___, r0.w, r0.x
add r0.x___, r0.z, r0.x
add r0.__z_, r2.x, r0.x
add r0.___w, r2.x, r0.z_neg(xyzw)
dcl_literal l82, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r2.x___, r0.z, l82
mul_ieee r2.___w, r0.z, r0.y
dcl_literal l83, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.x___, r0.y, l83
mad_ieee r3._y__, r2.x, r3.x, r2.w_neg(xyzw)
add r3.__z_, r0.y, r3.x_neg(xyzw)
mad_ieee r3._y__, r2.x, r3.z, r3.y
add r2.x___, r0.z, r2.x_neg(xyzw)
mad_ieee r3.x___, r2.x, r3.x, r3.y
mad_ieee r2.x___, r2.x, r3.z, r3.x
add r0.x___, r0.x, r0.w
mad_ieee r0.___w, r0.x, r0.y, r2.x
add r0.x___, r0.z, r0.x
add r0.__z_, r2.w, r0.w
add r2.x___, r2.w, r0.z_neg(xyzw)
add r0.___w, r0.w, r2.x
add r2.x___, r0.z, r0.w
round_z r2.___w, r2.x
ftoi r2.x___, r2.x
add r3.x___, r0.z, r2.w_neg(xyzw)
add r0.__z_, r0.z, r3.x_neg(xyzw)
add r0.__z_, r2.w_neg(xyzw), r0.z
add r0.__z_, r0.w, r0.z
add r0.___w, r3.x, r0.z
add r3.x___, r3.x, r0.w_neg(xyzw)
add r0.__z_, r0.z, r3.x
add r0.__z_, r0.w, r0.z
dcl_literal l84, 0x42000000, 0x42000000, 0x00000000, 0x00000000
dcl_literal l85, 0x3F000000, 0xBF000000, 0x00000000, 0x00000000
mad_ieee r3.xy__, r0.z, l84, l85
ftoi r3.xy__, r3.xyxx
dcl_literal l86, 0x00000000, 0x00000000, 0x3F317218, 0x42000000
mul_ieee r3.__zw, r0.z, l86
dcl_literal l87, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, l87, r3.w
cmov_logical r0.___w, r0.w, r3.x, r3.y
itof r3.x___, r0.w
dcl_literal l88, 0x3D000000, 0x3D000000, 0x3D000000, 0x3D000000
mad_ieee r3.x___, r3.x_neg(xyzw), l88, r0.z
dcl_literal l89, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820
dcl_literal l90, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3._y__, r3.x, l89, l90
dcl_literal l91, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mul_ieee r3.x___, r3.x, l91
mul_ieee r3.___w, r3.x, r3.x
mad_ieee r3.x___, r3.w, r3.y, r3.x
dcl_literal l92, 0x00000000, 0x0000001F, 0x00000000, 0x00000003
and r3._y_w, r0.w, l92
iadd r0.___w, r0.w, r3.y_neg(xyzw)
dcl_literal l93, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r4.xyz_, r3.w, l93
dcl_literal l94, 0x00000002, 0x00000002, 0x00000002, 0x00000002
ishr r3._y__, r3.y, l94
dcl_literal l95, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l96, 0x3F800000, 0x3F82C000, 0x3F858000, 0x3F888000
cmov_logical r5, r3.y, l95, l96
dcl_literal l97, 0x00000001, 0x00000002, 0x00000003, 0x00000004
ieq r6, r3.y, l97
dcl_literal l98, 0x3F8B8000, 0x3F8E8000, 0x3F91C000, 0x3F94C000
cmov_logical r5, r6.x, l98, r5
dcl_literal l99, 0x3F980000, 0x3F9B8000, 0x3F9EC000, 0x3FA24000
cmov_logical r5, r6.y, l99, r5
dcl_literal l100, 0x3FA5C000, 0x3FA98000, 0x3FAD4000, 0x3FB10000
cmov_logical r5, r6.z, l100, r5
dcl_literal l101, 0x3FB50000, 0x3FB8C000, 0x3FBD0000, 0x3FC10000
cmov_logical r5, r6.w, l101, r5
dcl_literal l102, 0x00000005, 0x00000006, 0x00000007, 0x00000000
ieq r7.xyz_, r3.y, l102
dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l104, 0x00000000, 0x39D86988, 0x3AAB0D9F, 0x3A407404
cmov_logical r8, r3.y, l103, l104
dcl_literal l105, 0x3FC54000, 0x3FC98000, 0x3FCE0000, 0x3FD28000
cmov_logical r5, r7.x, l105, r5
dcl_literal l106, 0x3FD74000, 0x3FDBC000, 0x3FE0C000, 0x3FE58000
cmov_logical r5, r7.y, l106, r5
dcl_literal l107, 0x3FEAC000, 0x3FEFC000, 0x3FF50000, 0x3FFA8000
cmov_logical r5, r7.z, l107, r5
cmov_logical r3._y__, r4.x, r5.y, r5.x
cmov_logical r3._y__, r4.y, r5.z, r3.y
cmov_logical r3._y__, r4.z, r5.w, r3.y
dcl_literal l108, 0x3A2E0F1E, 0x3A90E62D, 0x38F4DCE0, 0x3AD3BEA3
cmov_logical r5, r6.x, l108, r8
dcl_literal l109, 0x3ADFC146, 0x39D39B9C, 0x3AD4C982, 0x3AC10C0C
cmov_logical r5, r6.y, l109, r5
dcl_literal l110, 0x3AFB5AA6, 0x3A856AD3, 0x3A41F752, 0x3A8FD607
cmov_logical r5, r6.z, l110, r5
dcl_literal l111, 0x391E6678, 0x3AEEBD1D, 0x398A39F4, 0x3AB13329
cmov_logical r5, r6.w, l111, r5
dcl_literal l112, 0x3A9CA845, 0x3AE6F619, 0x3A923054, 0x3AA07647
cmov_logical r5, r7.x, l112, r5
dcl_literal l113, 0x391F9958, 0x3AEEDE5F, 0x39CDEEC0, 0x3AE41B9D
cmov_logical r5, r7.y, l113, r5
dcl_literal l114, 0x37C6E7C0, 0x3A92E66F, 0x3A95F454, 0x38ECB6D0
cmov_logical r5, r7.z, l114, r5
cmov_logical r3.___w, r4.x, r5.y, r5.x
cmov_logical r3.___w, r4.y, r5.z, r3.w
cmov_logical r3.___w, r4.z, r5.w, r3.w
add r4.x___, r3.y, r3.w
mad_ieee r3.x___, r4.x, r3.x, r3.w
add r3.x___, r3.y, r3.x
dcl_literal l115, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r4, r3.x, l115
dcl_literal l116, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ixor r3.x___, r0.w, l116
imax r0.___w, r0.w, r0.w_neg(xyzw)
dcl_literal l117, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r3.x___, r3.x, l117
dcl_literal l118, 0x00000020, 0x00000020, 0x00000020, 0x00000020
udiv r0.___w, r0.w, l118
inegate r3._y__, r0.w
cmov_logical r0.___w, r3.x, r3.y, r0.w
iadd r0.___w, r0.w, r2.x
dcl_literal l119, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r2.x___, r0.w, l119
cmov_logical r2.x___, r4.z, r0.w, r2.x
itof r0.___w, r0.w
dcl_literal l120, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r3.x___, r2.x, l120
itof r3._y__, r4.w
cmov_logical r3._y__, r4.z, r4.x, r3.y
iadd r3.x___, r3.y, r3.x
dcl_literal l121, 0x00000000, 0x7F800000, 0x00000000, 0x007FFFFF
and r3._y_w, r3.y, l121
dcl_literal l122, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3._y__, r3.y, l122
dcl_literal l123, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r3.___w, r3.w, l123
iadd r2.x___, r3.y, r2.x
dcl_literal l124, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.x___, r2.x, l124
dcl_literal l125, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r3._y__, l125, r2.x
dcl_literal l126, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2.x___, l126, r2.x_neg(xyzw)
dcl_literal l127, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r3.x___, r3.y, l127, r3.x
dcl_literal l128, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r3._y__, l128, r2.x
dcl_literal l129, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r2.x___, r3.y, l129, r2.x
dcl_literal l130, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r2.x___, r2.x, l130
ishr r3._y__, r3.w, r2.x
dcl_literal l131, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.x___, l131, r2.x
cmov_logical r2.x___, r2.x, r3.y, r3.x
dcl_literal l132, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r0.___w, l132, r0.w
dcl_literal l133, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.___w, r0.w, l133, r2.x
ior r0.___w, r4.y, r0.w
dcl_literal l134, 0x7FFFFFFF, 0x0FFFF000, 0x00000000, 0x00000000
and r3.xy__, r0.z, l134
dcl_literal l135, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r2.x___, r3.y, l135, r3.z_neg(xyzw)
dcl_literal l136, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E
mad_ieee r2.x___, r3.y, l136, r2.x
add r3._y__, r0.z, r3.y_neg(xyzw)
dcl_literal l137, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B
lt r3.x___, r3.x, l137
dcl_literal l138, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r2.x___, r3.y, l138, r2.x
dcl_literal l139, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E
mad_ieee r2.x___, r3.y, l139, r2.x
dcl_literal l140, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r0.__z_, r0.z, l140, r2.x
dcl_literal l141, 0x00000000, 0x34904540, 0x00000000, 0x3A1BECC5
dcl_literal l142, 0x00000000, 0x3CC2F57D, 0x00000000, 0xBC42EEB9
mad_ieee r3._y_w, r0.z, l141, l142
dcl_literal l143, 0x00000000, 0x37874471, 0x00000000, 0x3DDB50CA
mad_ieee r3._y_w, r3.yyyw, r0.z, l143
dcl_literal l144, 0x00000000, 0x3F7FE378, 0x00000000, 0xBEFFE15B
mad_ieee r3._y_w, r3.yyyw, r0.z, l144
dcl_literal l145, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378
mad_ieee r0.__z_, r3.w, r0.z, l145
div_zeroop(infinity) r0.__z_, r3.y, r0.z
mul_ieee r2.x___, r2.x, r0.z
mad_ieee r0.__z_, r0.z, r3.z, r2.x
dcl_literal l146, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.__z_, r0.z, l146
dcl_literal l147, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r4, r0.z, l147
ftoi r0.__z_, r2.w
dcl_literal l148, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r2.x___, l148, r2.w
dcl_literal l149, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r2.___w, r0.z, l149
cmov_logical r0.__z_, r4.z, r0.z, r2.w
dcl_literal l150, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.___w, r0.z, l150
itof r3._y__, r4.w
cmov_logical r3._y__, r4.z, r4.x, r3.y
iadd r2.___w, r3.y, r2.w
dcl_literal l151, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
and r3._yz_, r3.y, l151
dcl_literal l152, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3._y__, r3.y, l152
dcl_literal l153, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r3.__z_, r3.z, l153
iadd r0.__z_, r3.y, r0.z
dcl_literal l154, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.__z_, r0.z, l154
dcl_literal l155, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r3._y__, l155, r0.z
dcl_literal l156, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.__z_, l156, r0.z_neg(xyzw)
dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.___w, r3.y, l157, r2.w
dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r3._y__, l158, r0.z
dcl_literal l159, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.__z_, r3.y, l159, r0.z
dcl_literal l160, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0.__z_, r0.z, l160
ishr r3._y__, r3.z, r0.z
dcl_literal l161, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l161, r0.z
cmov_logical r0.__z_, r0.z, r3.y, r2.w
dcl_literal l162, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.__z_, r2.x, l162, r0.z
ior r0.__z_, r4.y, r0.z
cmov_logical r0.__z_, r3.x, r0.z, r0.w
dcl_literal l163, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.y, l163
cmov_logical r0.__z_, r2.y, r0.w, r0.z
dcl_literal l164, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r0.___w, r0.y, l164
mul_ieee r0.x___, r0.y, r0.x
cmov_logical r0._y__, r0.w, r1.x, r0.z
dcl_literal l165, 0x43000000, 0x43000000, 0x43000000, 0x43000000
lt r0.__z_, l165, r0.x
dcl_literal l166, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r0.x, l166
dcl_literal l167, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000
lt r0.x___, r0.x, l167
dcl_literal l168, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r0.___w, l168, r0.w
and r0.x_z_, r0.xxzx, r0.w
dcl_literal l169, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.z, l169, r0.y
dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l170, r0.y
dcl_literal l171, 0x00000000, 0x80000000, 0x80000000, 0x00000000
ine r0._yz_, r1.yywy, l171
inot r1._y_w, r0.zzzy
dcl_literal l172, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l173, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
cmov_logical r3, r1.xzzx, l172, l173
and r2.xy__, r1.ywyy, r3.xwxx
and r0.___w, r3.z, r2.x
dcl_literal l174, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.w, l174, r0.x
and r2.x__w, r0.zzzy, r3.xxxw
and r0.___w, r3.z, r2.x
dcl_literal l175, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.w, l175, r0.x
dcl_literal l176, 0x7F800000, 0x7F800000, 0x3F800000, 0x00000000
ilt r4.xyz_, l176, r1.xzxx
inot r0.___w, r4.x
dcl_literal l177, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
ieq r1.__zw, r1.xxxz, l177
dcl_literal l178, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r1.x___, r1.x, l178
inot r5.xy__, r1.zwzz
and r0.___w, r0.w, r5.x
and r2.x___, r2.w, r0.w
and r0.___w, r4.z, r0.w
ior r2.___w, r4.y, r4.x
and r2.x___, r3.y, r2.x
dcl_literal l179, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r2.x, l179, r0.x
ior r2.x___, r3.x, r1.z
and r2.x___, r3.y, r2.x
dcl_literal l180, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r2.x, l180, r0.x
and r1.x___, r0.y, r1.x
and r2.x___, r5.y, r1.x
and r1.x___, r1.w, r1.x
and r2.x___, r3.z, r2.x
dcl_literal l181, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r2.x, l181, r0.x
dcl_literal l182, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r1.x, l182, r0.x
and r1.x_z_, r0.yyzy, r1.z
and r0._y__, r1.y, r1.x
and r1.x___, r3.z, r1.z
and r0._y__, r3.z, r0.y
and r1.__z_, r2.z, r3.w
dcl_literal l183, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.y, l183, r0.x
and r0._y__, r1.w, r1.z
and r0.___w, r1.w, r0.w
and r1.__z_, r1.y, r0.y
and r0._yz_, r0.z, r0.yywy
and r0.___w, r1.y, r0.w
dcl_literal l184, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r1.z, l184, r0.x
ior r0._y__, r0.y, r0.w
dcl_literal l185, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.y, l185, r0.x
ior r0._y__, r1.x, r0.z
dcl_literal l186, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.y, l186, r0.x
ior r0._y__, r2.y, r2.w
dcl_literal l187, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l187, r0.x
mov out0, r0
mend
__pow_f32
mdef(343)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x80000000, 0x7FFFFFFF, 0x80000000
and r1, r0.xxyy, l0
itof r0.__z_, r1.x
dcl_literal l1, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r0.__zw, r0.z, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.__z_, r0.z, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r0.___w, r0.w, l3
dcl_literal l4, 0x00000024, 0x00000024, 0x00000024, 0x00000024
iadd r0.__z_, r0.z, l4
dcl_literal l5, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r0.__z_, l5, r0.z_neg(xyzw)
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r2.x___, l6, r0.z
dcl_literal l7, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.__z_, r2.x, l7, r0.z
inegate r2.x___, r0.z
dcl_literal l8, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.x___, r2.x, l8
iadd r2.x___, r0.w, r2.x
ishr r0.___w, r0.w, r0.z
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, l9, r0.z
cmov_logical r0.__z_, r0.z, r0.w, r2.x
dcl_literal l10, 0x00800000, 0x2E800000, 0x3F800000, 0x00000000
ilt r2.xyz_, r1.xzxx, l10
cmov_logical r0.__z_, r2.x, r0.z, r1.x
dcl_literal l11, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r0.__zw, r0.z, l11
dcl_literal l12, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
ior r0.___w, r0.w, l12
dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.__z_, r0.z, l13
dcl_literal l14, 0x43000000, 0x43000000, 0x43000000, 0x43000000
dcl_literal l15, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.___w, r0.w, l14, l15
round_z r3.x___, r2.w
ftoi r2.___w, r2.w
dcl_literal l16, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mul_ieee r3._y__, r3.x, l16
dcl_literal l17, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.__z_, r3.y, l17
dcl_literal l18, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r3.___w, r3.x, l18, r3.z_neg(xyzw)
dcl_literal l19, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
mad_ieee r0.___w, r3.x_neg(xyzw), l19, r0.w
add r3.x___, r0.w, cb0[1].x
div_zeroop(infinity) r4.x___, r0.w, r3.y
add r0.___w, r0.w, r3.x_neg(xyzw)
dcl_literal l20, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r4._y__, r4.x, l20
mad_ieee r3.x___, r4.y, r3.z, r3.x_neg(xyzw)
mad_ieee r3.x___, r4.y, r3.w, r3.x
add r4._y__, r4.x, r4.y_neg(xyzw)
mad_ieee r3.x___, r4.y, r3.z, r3.x
mad_ieee r3.x___, r4.y, r3.w, r3.x
add r0.___w, r0.w, r3.x_neg(xyzw)
div_zeroop(infinity) r0.___w, r0.w, r3.y
add r3.x___, r4.x, r0.w
dcl_literal l21, 0x3E000000, 0x3E000000, 0x3E000000, 0x3E000000
dcl_literal l22, 0x3E124925, 0x3E124925, 0x3E124925, 0x3E124925
mad_ieee r3._y__, r4.x_neg(xyzw), l21, l22
dcl_literal l23, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l23
dcl_literal l24, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD, 0x3E4CCCCD
mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l24
dcl_literal l25, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l25
dcl_literal l26, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB
mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l26
dcl_literal l27, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3._y__, r4.x_neg(xyzw), r3.y, l27
mul_ieee r3.__z_, r4.x_neg(xyzw), r4.x
add r3.___w, r4.x, r3.x_neg(xyzw)
mad_ieee r4.x___, r3.y, r3.z, r3.x
add r3.x___, r3.x, r4.x_neg(xyzw)
mad_ieee r3.x___, r3.y, r3.z, r3.x
add r0.___w, r0.w, r3.w
add r0.___w, r3.x, r0.w
add r3.x___, r4.x, r0.w
add r3._y__, r4.x, r3.x_neg(xyzw)
dcl_literal l28, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.__z_, r3.x, l28
add r3.___w, r3.x, r3.z_neg(xyzw)
dcl_literal l29, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mul_ieee r3.x___, r3.x, l29
dcl_literal l30, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000
mad_ieee r4.x___, r3.z, l30, r3.x_neg(xyzw)
dcl_literal l31, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000, 0x3FB8A000
mad_ieee r4.x___, r3.w, l31, r4.x
dcl_literal l32, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296
mad_ieee r3.__z_, r3.z, l32, r4.x
dcl_literal l33, 0x39A3B296, 0x39A3B296, 0x39A3B296, 0x39A3B296
mad_ieee r3.__z_, r3.w, l33, r3.z
add r0.___w, r0.w, r3.y
dcl_literal l34, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r0.___w, r0.w, l34, r3.z
add r3._y__, r3.x, r0.w
add r3.x___, r3.x, r3.y_neg(xyzw)
add r0.___w, r0.w, r3.x
dcl_literal l35, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0
iadd r2.___w, r2.w, l35
dcl_literal l36, 0x00000002, 0x00000002, 0x00000002, 0x00000002
ishr r3.x___, r2.w, l36
dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l38, 0x00000000, 0x2FB85A45, 0x312C77EC, 0x31FD14FD
cmov_logical r4, r3.x, l37, l38
dcl_literal l39, 0x00000001, 0x00000002, 0x00000003, 0x00000004
ieq r5, r3.x, l39
dcl_literal l40, 0x31D64899, 0x2F2DABBA, 0x31CDA79E, 0x309E2B87
cmov_logical r4, r5.x, l40, r4
dcl_literal l41, 0x324FDEB4, 0x3201781E, 0x31DB4EC9, 0x31C32597
cmov_logical r4, r5.y, l41, r4
dcl_literal l42, 0x32481340, 0x32D6985C, 0x3230E074, 0x326A4CDF
cmov_logical r4, r5.z, l42, r4
dcl_literal l43, 0x323CD1B9, 0x32CFDEB4, 0x3259D0CE, 0x31458715
cmov_logical r4, r5.w, l43, r4
dcl_literal l44, 0x00000005, 0x00000006, 0x00000007, 0x00000008
ieq r6, r3.x, l44
dcl_literal l45, 0x3211F171, 0x3227F605, 0x32B9C415, 0x325295B5
cmov_logical r4, r6.x, l45, r4
dcl_literal l46, 0x2F4BA83C, 0x30F3AA69, 0x320CB06D, 0x32B97998
cmov_logical r4, r6.y, l46, r4
dcl_literal l47, 0x30D63AA6, 0x33550F2A, 0x3374AE80, 0x3321393E
cmov_logical r4, r6.z, l47, r4
dcl_literal l48, 0x3267EF5A, 0x32AB49CA, 0x3355010B, 0x3374C355
cmov_logical r4, r6.w, l48, r4
dcl_literal l49, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C
ieq r7, r3.x, l49
dcl_literal l50, 0x32BCD1B9, 0x3261151F, 0x325313A6, 0x3320F04D
cmov_logical r4, r7.x, l50, r4
dcl_literal l51, 0x32E4788D, 0x32A76195, 0x3332703B, 0x3349A817
cmov_logical r4, r7.y, l51, r4
dcl_literal l52, 0x332DF384, 0x32B06EF9, 0x33300016, 0x331565B0
cmov_logical r4, r7.z, l52, r4
dcl_literal l53, 0x336A8086, 0x331C70C1, 0x332C00A7, 0x3257990D
cmov_logical r4, r7.w, l53, r4
dcl_literal l54, 0x0000000D, 0x0000000E, 0x0000000F, 0x00000000
ieq r8.xyz_, r3.x, l54
dcl_literal l55, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l56, 0x00000000, 0x3CB73CB4, 0x3D35D69B, 0x3D8759C4
cmov_logical r9, r3.x, l55, l56
dcl_literal l57, 0x32F5532E, 0x336633F3, 0x31B86815, 0x33654999
cmov_logical r4, r8.x, l57, r4
dcl_literal l58, 0x32D26089, 0x2FCBA83C, 0x32B3FF57, 0x32E0E014
cmov_logical r4, r8.y, l58, r4
dcl_literal l59, 0x331B1354, 0x330D9D4B, 0x32BCF065, 0x330BBE12
cmov_logical r4, r8.z, l59, r4
dcl_literal l60, 0x00000003, 0x00000003, 0x00000003, 0x00000003
and r3.x___, r2.w, l60
dcl_literal l61, 0x00000040, 0x00000040, 0x00000040, 0x00000040
ieq r2.___w, r2.w, l61
dcl_literal l62, 0x00000001, 0x00000000, 0x00000002, 0x00000003
ieq r3.x_zw, r3.x, l62
cmov_logical r4.x___, r3.x, r4.y, r4.x
cmov_logical r4.x___, r3.z, r4.z, r4.x
cmov_logical r4.x___, r3.w, r4.w, r4.x
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.x___, r2.w, l63, r4.x
add r4._y__, r3.y, r4.x
add r3._y__, r3.y, r4.y_neg(xyzw)
add r3._y__, r4.x, r3.y
add r0.___w, r0.w, r3.y
add r3._y__, r4.y, r0.w
add r4.x___, r4.y, r3.y_neg(xyzw)
dcl_literal l64, 0x3DB31FB7, 0x3DDE4212, 0x3E0462C4, 0x3E19574F
cmov_logical r9, r5.x, l64, r9
dcl_literal l65, 0x3E2E00D1, 0x3E42615E, 0x3E567AF1, 0x3E6A4F72
cmov_logical r9, r5.y, l65, r9
dcl_literal l66, 0x3E7DE0B5, 0x3E88983E, 0x3E92203D, 0x3E9B8926
cmov_logical r9, r5.z, l66, r9
dcl_literal l67, 0x3EA4D3C2, 0x3EAE00D1, 0x3EB7110E, 0x3EC0052B
cmov_logical r5, r5.w, l67, r9
dcl_literal l68, 0x3EC8DDD4, 0x3ED19BB0, 0x3EDA3F5F, 0x3EE2C97D
cmov_logical r5, r6.x, l68, r5
dcl_literal l69, 0x3EEB3A9F, 0x3EF39355, 0x3EFBD42B, 0x3F01FED4
cmov_logical r5, r6.y, l69, r5
dcl_literal l70, 0x3F060828, 0x3F0A064F, 0x3F0DF988, 0x3F11E20E
cmov_logical r5, r6.z, l70, r5
dcl_literal l71, 0x3F15C01A, 0x3F1993E3, 0x3F1D5D9F, 0x3F211D83
cmov_logical r5, r6.w, l71, r5
dcl_literal l72, 0x3F24D3C2, 0x3F28808C, 0x3F2C2411, 0x3F2FBE7F
cmov_logical r5, r7.x, l72, r5
dcl_literal l73, 0x3F335004, 0x3F36D8CB, 0x3F3A58FE, 0x3F3DD0C7
cmov_logical r5, r7.y, l73, r5
dcl_literal l74, 0x3F41404E, 0x3F44A7BA, 0x3F480730, 0x3F4B5ED6
cmov_logical r5, r7.z, l74, r5
dcl_literal l75, 0x3F4EAECF, 0x3F51F73F, 0x3F553847, 0x3F587209
cmov_logical r5, r7.w, l75, r5
dcl_literal l76, 0x3F5BA4A4, 0x3F5ED038, 0x3F61F4E5, 0x3F6512C6
cmov_logical r5, r8.x, l76, r5
dcl_literal l77, 0x3F6829FB, 0x3F6B3A9F, 0x3F6E44CD, 0x3F7148A1
cmov_logical r5, r8.y, l77, r5
dcl_literal l78, 0x3F744635, 0x3F773DA3, 0x3F7A2F04, 0x3F7D1A70
cmov_logical r5, r8.z, l78, r5
cmov_logical r3.x___, r3.x, r5.y, r5.x
cmov_logical r3.x___, r3.z, r5.z, r3.x
cmov_logical r3.x___, r3.w, r5.w, r3.x
dcl_literal l79, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r2.___w, r2.w, l79, r3.x
add r3.x___, r3.y, r2.w
add r2.___w, r2.w, r3.x_neg(xyzw)
add r2.___w, r3.y, r2.w
add r0.___w, r0.w, r4.x
add r0.___w, r2.w, r0.w
add r2.___w, r3.x, r0.w
add r3.x___, r3.x, r2.w_neg(xyzw)
dcl_literal l80, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.__z_, r0.z, l80
dcl_literal l81, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC, 0xFFFFFFDC
and r2.x___, r2.x, l81
iadd r0.__z_, r0.z, r2.x
itof r0.__z_, r0.z
add r2.x___, r2.w, r0.z
add r0.__z_, r0.z, r2.x_neg(xyzw)
add r0.__z_, r2.w, r0.z
add r0.___w, r0.w, r3.x
add r0.__z_, r0.z, r0.w
add r0.___w, r2.x, r0.z
add r2.x___, r2.x, r0.w_neg(xyzw)
dcl_literal l82, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r2.___w, r0.w, l82
mul_ieee r3.x___, r0.w, r0.y
dcl_literal l83, 0x00000000, 0xFFFFF000, 0x7F800000, 0x00000000
and r3._yz_, r0.y, l83
mad_ieee r3.___w, r2.w, r3.y, r3.x_neg(xyzw)
add r4.x___, r0.y, r3.y_neg(xyzw)
mad_ieee r3.___w, r2.w, r4.x, r3.w
add r2.___w, r0.w, r2.w_neg(xyzw)
mad_ieee r3._y__, r2.w, r3.y, r3.w
mad_ieee r2.___w, r2.w, r4.x, r3.y
dcl_literal l84, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3._y__, r3.z, l84
add r0.__z_, r0.z, r2.x
mad_ieee r2.x___, r0.z, r0.y, r2.w
add r0.__z_, r0.w, r0.z
add r0.___w, r3.x, r2.x
add r2.___w, r3.x, r0.w_neg(xyzw)
add r2.x___, r2.x, r2.w
add r2.___w, r0.w, r2.x
round_z r3.x___, r2.w
ftoi r2.___w, r2.w
add r3.__z_, r0.w, r3.x_neg(xyzw)
add r0.___w, r0.w, r3.z_neg(xyzw)
add r0.___w, r3.x_neg(xyzw), r0.w
add r0.___w, r2.x, r0.w
add r2.x___, r3.z, r0.w
add r3.__z_, r3.z, r2.x_neg(xyzw)
add r0.___w, r0.w, r3.z
add r0.___w, r2.x, r0.w
dcl_literal l85, 0x00000000, 0x00000000, 0x42000000, 0x42000000
dcl_literal l86, 0x00000000, 0x00000000, 0x3F000000, 0xBF000000
mad_ieee r3.__zw, r0.w, l85, l86
ftoi r3.__zw, r3.zzzw
dcl_literal l87, 0x3F317218, 0x42000000, 0x00000000, 0x00000000
mul_ieee r4.xy__, r0.w, l87
dcl_literal l88, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.x___, l88, r4.y
cmov_logical r2.x___, r2.x, r3.z, r3.w
itof r3.__z_, r2.x
dcl_literal l89, 0x3D000000, 0x3D000000, 0x3D000000, 0x3D000000
mad_ieee r3.__z_, r3.z_neg(xyzw), l89, r0.w
dcl_literal l90, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820, 0x3DEC9820
dcl_literal l91, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3.___w, r3.z, l90, l91
dcl_literal l92, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mul_ieee r3.__z_, r3.z, l92
mul_ieee r4._y__, r3.z, r3.z
mad_ieee r3.__z_, r4.y, r3.w, r3.z
dcl_literal l93, 0x00000000, 0x0000001F, 0x00000003, 0x00000000
and r4._yz_, r2.x, l93
iadd r2.x___, r2.x, r4.y_neg(xyzw)
dcl_literal l94, 0x00000001, 0x00000002, 0x00000003, 0x00000000
ieq r5.xyz_, r4.z, l94
dcl_literal l95, 0x00000002, 0x00000002, 0x00000002, 0x00000002
ishr r3.___w, r4.y, l95
dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l97, 0x3F800000, 0x3F82C000, 0x3F858000, 0x3F888000
cmov_logical r6, r3.w, l96, l97
dcl_literal l98, 0x00000001, 0x00000002, 0x00000003, 0x00000004
ieq r7, r3.w, l98
dcl_literal l99, 0x3F8B8000, 0x3F8E8000, 0x3F91C000, 0x3F94C000
cmov_logical r6, r7.x, l99, r6
dcl_literal l100, 0x3F980000, 0x3F9B8000, 0x3F9EC000, 0x3FA24000
cmov_logical r6, r7.y, l100, r6
dcl_literal l101, 0x3FA5C000, 0x3FA98000, 0x3FAD4000, 0x3FB10000
cmov_logical r6, r7.z, l101, r6
dcl_literal l102, 0x3FB50000, 0x3FB8C000, 0x3FBD0000, 0x3FC10000
cmov_logical r6, r7.w, l102, r6
dcl_literal l103, 0x00000000, 0x00000005, 0x00000006, 0x00000007
ieq r4._yzw, r3.w, l103
dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l105, 0x00000000, 0x39D86988, 0x3AAB0D9F, 0x3A407404
cmov_logical r8, r3.w, l104, l105
dcl_literal l106, 0x3FC54000, 0x3FC98000, 0x3FCE0000, 0x3FD28000
cmov_logical r6, r4.y, l106, r6
dcl_literal l107, 0x3FD74000, 0x3FDBC000, 0x3FE0C000, 0x3FE58000
cmov_logical r6, r4.z, l107, r6
dcl_literal l108, 0x3FEAC000, 0x3FEFC000, 0x3FF50000, 0x3FFA8000
cmov_logical r6, r4.w, l108, r6
cmov_logical r3.___w, r5.x, r6.y, r6.x
cmov_logical r3.___w, r5.y, r6.z, r3.w
cmov_logical r3.___w, r5.z, r6.w, r3.w
dcl_literal l109, 0x3A2E0F1E, 0x3A90E62D, 0x38F4DCE0, 0x3AD3BEA3
cmov_logical r6, r7.x, l109, r8
dcl_literal l110, 0x3ADFC146, 0x39D39B9C, 0x3AD4C982, 0x3AC10C0C
cmov_logical r6, r7.y, l110, r6
dcl_literal l111, 0x3AFB5AA6, 0x3A856AD3, 0x3A41F752, 0x3A8FD607
cmov_logical r6, r7.z, l111, r6
dcl_literal l112, 0x391E6678, 0x3AEEBD1D, 0x398A39F4, 0x3AB13329
cmov_logical r6, r7.w, l112, r6
dcl_literal l113, 0x3A9CA845, 0x3AE6F619, 0x3A923054, 0x3AA07647
cmov_logical r6, r4.y, l113, r6
dcl_literal l114, 0x391F9958, 0x3AEEDE5F, 0x39CDEEC0, 0x3AE41B9D
cmov_logical r6, r4.z, l114, r6
dcl_literal l115, 0x37C6E7C0, 0x3A92E66F, 0x3A95F454, 0x38ECB6D0
cmov_logical r6, r4.w, l115, r6
cmov_logical r4._y__, r5.x, r6.y, r6.x
cmov_logical r4._y__, r5.y, r6.z, r4.y
cmov_logical r4._y__, r5.z, r6.w, r4.y
add r4.__z_, r3.w, r4.y
mad_ieee r3.__z_, r4.z, r3.z, r4.y
add r3.__z_, r3.w, r3.z
dcl_literal l116, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r5, r3.z, l116
dcl_literal l117, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ixor r3.__z_, r2.x, l117
imax r2.x___, r2.x, r2.x_neg(xyzw)
dcl_literal l118, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r3.__z_, r3.z, l118
dcl_literal l119, 0x00000020, 0x00000020, 0x00000020, 0x00000020
udiv r2.x___, r2.x, l119
inegate r3.___w, r2.x
cmov_logical r2.x___, r3.z, r3.w, r2.x
iadd r2.x___, r2.x, r2.w
dcl_literal l120, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r2.___w, r2.x, l120
cmov_logical r2.___w, r5.z, r2.x, r2.w
itof r2.x___, r2.x
dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r3.__z_, r2.w, l121
itof r3.___w, r5.w
cmov_logical r3.___w, r5.z, r5.x, r3.w
iadd r3.__z_, r3.w, r3.z
dcl_literal l122, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
and r4._yz_, r3.w, l122
dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.___w, r4.y, l123
dcl_literal l124, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r4._y__, r4.z, l124
iadd r2.___w, r3.w, r2.w
dcl_literal l125, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.___w, r2.w, l125
dcl_literal l126, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r3.___w, l126, r2.w
dcl_literal l127, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2.___w, l127, r2.w_neg(xyzw)
dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r3.__z_, r3.w, l128, r3.z
dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r3.___w, l129, r2.w
dcl_literal l130, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r2.___w, r3.w, l130, r2.w
dcl_literal l131, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r2.___w, r2.w, l131
ishr r3.___w, r4.y, r2.w
dcl_literal l132, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.___w, l132, r2.w
cmov_logical r2.___w, r2.w, r3.w, r3.z
dcl_literal l133, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r2.x___, l133, r2.x
dcl_literal l134, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.x___, r2.x, l134, r2.w
ior r2.x___, r5.y, r2.x
dcl_literal l135, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x0FFFF000
and r3.__zw, r0.w, l135
dcl_literal l136, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r2.___w, r3.w, l136, r4.x_neg(xyzw)
dcl_literal l137, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E
mad_ieee r2.___w, r3.w, l137, r2.w
add r3.___w, r0.w, r3.w_neg(xyzw)
dcl_literal l138, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B, 0x3DB8AA3B
lt r3.__z_, r3.z, l138
dcl_literal l139, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r2.___w, r3.w, l139, r2.w
dcl_literal l140, 0x325F473E, 0x325F473E, 0x325F473E, 0x325F473E
mad_ieee r2.___w, r3.w, l140, r2.w
dcl_literal l141, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
mad_ieee r0.___w, r0.w, l141, r2.w
dcl_literal l142, 0x00000000, 0x34904540, 0x3A1BECC5, 0x00000000
dcl_literal l143, 0x00000000, 0x3CC2F57D, 0xBC42EEB9, 0x00000000
mad_ieee r4._yz_, r0.w, l142, l143
dcl_literal l144, 0x00000000, 0x37874471, 0x3DDB50CA, 0x00000000
mad_ieee r4._yz_, r4.yyzy, r0.w, l144
dcl_literal l145, 0x00000000, 0x3F7FE378, 0xBEFFE15B, 0x00000000
mad_ieee r4._yz_, r4.yyzy, r0.w, l145
dcl_literal l146, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378, 0x3F7FE378
mad_ieee r0.___w, r4.z, r0.w, l146
div_zeroop(infinity) r0.___w, r4.y, r0.w
mul_ieee r2.___w, r2.w, r0.w
mad_ieee r0.___w, r0.w, r4.x, r2.w
dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.w, l147
dcl_literal l148, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r4, r0.w, l148
ftoi r0.___w, r3.x
dcl_literal l149, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r2.___w, l149, r3.x
dcl_literal l150, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r3.x___, r0.w, l150
cmov_logical r0.___w, r4.z, r0.w, r3.x
dcl_literal l151, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r3.x___, r0.w, l151
itof r3.___w, r4.w
cmov_logical r3.___w, r4.z, r4.x, r3.w
iadd r3.x___, r3.w, r3.x
dcl_literal l152, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
and r4.x_z_, r3.w, l152
dcl_literal l153, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.___w, r4.x, l153
dcl_literal l154, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r4.x___, r4.z, l154
iadd r0.___w, r3.w, r0.w
dcl_literal l155, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, r0.w, l155
dcl_literal l156, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r3.___w, l156, r0.w
dcl_literal l157, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.___w, l157, r0.w_neg(xyzw)
dcl_literal l158, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r3.x___, r3.w, l158, r3.x
dcl_literal l159, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r3.___w, l159, r0.w
dcl_literal l160, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.___w, r3.w, l160, r0.w
dcl_literal l161, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0.___w, r0.w, l161
ishr r3.___w, r4.x, r0.w
dcl_literal l162, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l162, r0.w
cmov_logical r0.___w, r0.w, r3.w, r3.x
dcl_literal l163, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.___w, r2.w, l163, r0.w
ior r0.___w, r4.y, r0.w
cmov_logical r0.___w, r3.z, r0.w, r2.x
dcl_literal l164, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r2.x___, r0.y, l164
cmov_logical r0.___w, r2.y, r2.x, r0.w
dcl_literal l165, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r2.x___, r0.y, l165
cmov_logical r0.___w, r2.x, r1.x, r0.w
mul_ieee r0._y__, r0.y, r0.z
dcl_literal l166, 0x43000000, 0x43000000, 0x43000000, 0x43000000
lt r0.__z_, l166, r0.y
dcl_literal l167, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r2.x___, r0.y, l167
dcl_literal l168, 0xC3150000, 0xC3150000, 0xC3150000, 0xC3150000
lt r0._y__, r0.y, l168
dcl_literal l169, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r2.x___, l169, r2.x
and r0._yz_, r0.yyzy, r2.x
dcl_literal l170, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.__z_, r0.z, l170, r0.w
dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.y, l171, r0.z
round_neginf r0.__z_, r1.z
ne r0.___w, r0.z, r1.z
eq r0.__z_, r0.z, r1.z
dcl_literal l172, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
lt r2.x___, r1.z, l172
ior r0.___w, r0.w, r2.x
dcl_literal l173, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r2.x___, r3.y, l173
dcl_literal l174, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ige r2.x___, l174, r2.x
dcl_literal l175, 0x7F800000, 0x7F800000, 0x3F800000, 0x00000000
ilt r3.xyz_, l175, r1.xzxx
inot r2._y_w, r3.xxxy
dcl_literal l176, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
ieq r4.xy__, r1.xzxx, l176
inot r4.__zw, r4.xxxy
and r2._y_w, r2.yyyw, r4.zzzw
and r2.x___, r2.x, r2.w
and r0.__zw, r0.zzzw, r2.x
dcl_literal l177, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l178, 0x00000002, 0x00000002, 0x00000002, 0x00000002
cmov_logical r0.___w, r0.w, l177, l178
dcl_literal l179, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r2.x___, r1.z, l179
frc r2.x___, r2.x
dcl_literal l180, 0x3DCCCCCD, 0x3DCCCCCD, 0x3DCCCCCD, 0x3DCCCCCD
lt r3.___w, l180, r2.x
dcl_literal l181, 0x3A83126F, 0x3A83126F, 0x3A83126F, 0x3A83126F
lt r2.x___, r2.x, l181
and r3.___w, r0.z, r3.w
dcl_literal l182, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r3.w, l182, r0.w
dcl_literal l183, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ge r3.___w, r1.z, l183
and r0.__z_, r0.z, r3.w
and r0.__z_, r2.x, r0.z
dcl_literal l184, 0x00000002, 0x00000002, 0x00000002, 0x00000002
cmov_logical r0.__z_, r0.z, l184, r0.w
dcl_literal l185, 0x00000001, 0x00000000, 0x00000002, 0x00000000
ieq r5.xyz_, r0.z, l185
dcl_literal l186, 0x00000000, 0xFFFFFFFF, 0x00000000, 0xFFFFFFFF
dcl_literal l187, 0xFFFFFFFF, 0x00000000, 0xFFFFFFFF, 0x00000000
cmov_logical r6, r1.xxzz, l186, l187
dcl_literal l188, 0x00000000, 0x00000000, 0x80000000, 0x80000000
ine r0.__zw, r1.yyyw, l188
dcl_literal l189, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
eq r1.x___, r1.x, l189
inot r1._yz_, r0.zzwz
and r4.__zw, r6.yyyx, r1.y
and r1.___w, r2.w, r4.z
and r2.x___, r6.w, r4.w
and r1.___w, r5.x, r1.w
cmov_logical r0._y__, r1.w, r0.y_neg(xyzw), r0.y
and r1.___w, r6.x, r0.z
and r1.___w, r6.w, r1.w
and r1.___w, r5.x, r1.w
and r1.___w, r1.z, r1.w
dcl_literal l190, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r1.w, l190, r0.y
and r1.___w, r5.x, r2.x
and r1.___w, r1.z, r1.w
dcl_literal l191, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0._y__, r1.w, l191, r0.y
ior r1.___w, r5.z, r5.y
and r2.x___, r6.w, r6.x
and r2.x___, r1.w, r2.x
and r3.___w, r1.z, r2.x
and r2.x___, r0.w, r2.x
dcl_literal l192, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r3.w, l192, r0.y
and r3.___w, r2.w, r6.x
and r3.___w, r6.w, r3.w
and r3.___w, r5.x, r3.w
and r3.___w, r0.w, r3.w
cmov_logical r0.x___, r3.w, r0.x, r0.y
dcl_literal l193, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r2.x, l193, r0.x
and r0._y__, r0.z, r1.x
and r1.x___, r1.x, r1.y
ior r2.x___, r6.z, r0.y
inot r0._y__, r0.y
dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r2.x, l194, r0.x
and r2.x___, r4.x, r1.y
and r2.x___, r6.w, r2.x
and r3.___w, r5.x, r2.x
and r1.___w, r1.w, r2.x
and r2.x___, r1.z, r3.w
and r3.___w, r0.w, r3.w
dcl_literal l195, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.x___, r2.x, l195, r0.x
dcl_literal l196, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
cmov_logical r0.x___, r3.w, l196, r0.x
and r2.x___, r1.z, r1.w
and r1.___w, r0.w, r1.w
dcl_literal l197, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r2.x, l197, r0.x
dcl_literal l198, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r1.w, l198, r0.x
and r0.__z_, r4.x, r0.z
and r0.__z_, r6.w, r0.z
and r1.___w, r1.z, r0.z
and r0.__z_, r0.w, r0.z
dcl_literal l199, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r1.w, l199, r0.x
dcl_literal l200, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.z, l200, r0.x
and r0.__z_, r4.y, r1.x
dcl_literal l201, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r0.z, l201, r0.x
and r0.__z_, r2.z, r6.y
and r0.__z_, r4.y, r0.z
and r1.x___, r1.z, r0.z
and r0.__z_, r0.w, r0.z
dcl_literal l202, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r1.x, l202, r0.x
and r1.x___, r3.z, r2.y
and r1.x___, r4.y, r1.x
and r1.__z_, r1.z, r1.x
and r0.___w, r0.w, r1.x
and r1.x___, r2.y, r1.y
ior r0.__z_, r0.z, r1.z
dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l203, r0.x
and r0._y__, r3.y, r0.y
and r0.__z_, r3.x, r6.w
ior r0._y__, r0.y, r0.z
and r0.__z_, r6.y, r1.x
and r0.__z_, r6.w, r0.z
and r0.__z_, r2.w, r0.z
and r0.__z_, r5.y, r0.z
ior r0._y__, r0.y, r0.z
dcl_literal l204, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.x___, r0.w, l204, r0.x
dcl_literal l205, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l205, r0.x
mov out0, r0
mend
__radians_f32
mdef(344)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x3C8EFA35, 0x3F800000, 0x00000000, 0x00000000
mul_ieee r0.x___, r0.x, l0
mov out0, r0
mend
__reciprocal_f32
mdef(345)_out(1)_in(1)
mov r0, in0
mov r1.x___, r0.x
dcl_literal l0, 0x00000000, 0x00000000, 0x41E00000, 0x00000000
mov r0.__zw, l0
dcl_literal l1, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF
and r2, r1.x, l1
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1._y__, r2.x, l2
dcl_literal l3, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r1.__z_, r2.x, l3
and r1._y__, r1.y, r1.z
dcl_literal l4, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.__z_, r2.y, l4
dcl_literal l5, 0xFFFFFF81, 0xFFFFFF9D, 0x00000000, 0x00000000
iadd r0.xy__, r1.z, l5
cmov_logical r0.xy__, r1.y, r0.yzyy, r0.xwxx
dcl_literal l6, 0x41600000, 0x41600000, 0x41600000, 0x41600000
dcl_literal l7, 0xC1600000, 0xC1600000, 0xC1600000, 0xC1600000
cmov_logical r0.__z_, r1.y, l6, l7
dcl_literal l8, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r0.___w, l8, r0.x
dcl_literal l9, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r0.x___, l9, r0.x
and r0.x___, r0.w, r0.x
cmov_logical r0.x___, r0.x, r0.z, r0.y
ftoi r0._y__, r0.x
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r0.x___, r0.x, l10
dcl_literal l11, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
iadd r0.__z_, r0.y, l11
cmov_logical r0.___w, r2.y, r0.y, r0.z
dcl_literal l12, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1._y__, r0.w, l12
itof r1.__z_, r2.w
cmov_logical r1.__z_, r2.y, r2.x, r1.z
iadd r1._y__, r1.z, r1.y
dcl_literal l13, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r1.__zw, r1.z, l13
dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.__z_, r1.z, l14
dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.___w, r1.w, l15
iadd r0.___w, r1.z, r0.w
dcl_literal l16, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, r0.w, l16
dcl_literal l17, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.__z_, l17, r0.w
dcl_literal l18, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0.___w, l18, r0.w_neg(xyzw)
dcl_literal l19, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r1._y__, r1.z, l19, r1.y
dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1.__z_, l20, r0.w
dcl_literal l21, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0.___w, r1.z, l21, r0.w
dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0.___w, r0.w, l22
ishr r1.__z_, r1.w, r0.w
dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l23, r0.w
cmov_logical r0.___w, r0.w, r1.z, r1.y
ior r0.___w, r2.z, r0.w
cmov_logical r0.___w, r0.x, r0.w, r1.x
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r0.___w, l24, r0.w
dcl_literal l25, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
and r1, r0.w, l25
cmov_logical r0._y__, r1.z, r0.y, r0.z
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r0.__z_, r0.y, l26
itof r1.___w, r1.w
cmov_logical r1.__z_, r1.z, r1.x, r1.w
iadd r0.__z_, r1.z, r0.z
dcl_literal l27, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r1.__zw, r1.z, l27
dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.__z_, r1.z, l28
dcl_literal l29, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.___w, r1.w, l29
iadd r0._y__, r1.z, r0.y
dcl_literal l30, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0._y__, r0.y, l30
dcl_literal l31, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ilt r1.__z_, l31, r0.y
dcl_literal l32, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
iadd r0._y__, l32, r0.y_neg(xyzw)
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.__z_, r1.z, l33, r0.z
dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r1.__z_, l34, r0.y
dcl_literal l35, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r0._y__, r1.z, l35, r0.y
dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0._y__, r0.y, l36
ishr r1.__z_, r1.w, r0.y
dcl_literal l37, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0._y__, l37, r0.y
cmov_logical r0._y__, r0.y, r1.z, r0.z
ior r0._y__, r1.y, r0.y
dcl_literal l38, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, r1.x, l38
and r0.x___, r0.x, r0.z
cmov_logical r0.x___, r0.x, r0.y, r0.w
mov out0, r0
mend
__remainder_f32
mdef(346)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000, 0x7F800000
and r1, r0.xyxy, l0
dcl_literal l1, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.__z_, r1.w, l1
dcl_literal l2, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ilt r0.___w, r0.z, l2
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.___w, r1.y, l3
and r0.___w, r0.w, r1.w
dcl_literal l4, 0x00000030, 0x00000030, 0x00000030, 0x00000030
iadd r0.__z_, l4, r0.z_neg(xyzw)
and r0.__z_, r0.w, r0.z
itof r0.___w, r0.z
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r2.x___, r0.w, l5
if_logicalnz r2.x
    dcl_literal l6, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x007FFFFF
    and r2._yzw, r0.y, l6
    itof r2.___w, r2.w
    cmov_logical r2._y__, r2.z, r2.y, r2.w
    dcl_literal l7, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r2.___w, r0.z, l7
    cmov_logical r2.__z_, r2.z, r0.z, r2.w
    dcl_literal l8, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r3.xy__, r2.y, l8
    dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.___w, r3.x, l9
    iadd r2.___w, r2.w, r2.z
    dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2.__z_, r2.z, l10
    iadd r2._y__, r2.y, r2.z
    dcl_literal l11, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.__z_, r2.w, l11
    dcl_literal l12, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2.___w, l12, r2.z
    dcl_literal l13, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2._y__, r2.w, l13, r2.y
    dcl_literal l14, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.__z_, l14, r2.z_neg(xyzw)
    dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.___w, r3.y, l15
    dcl_literal l16, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.x___, l16, r2.z
    dcl_literal l17, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.__z_, r3.x, l17, r2.z
    dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2.__z_, r2.z, l18
    ishr r2.___w, r2.w, r2.z
    dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, l19, r2.z
    cmov_logical r2._y__, r2.z, r2.w, r2.y
else
    mov r2._y__, r1.y
endif
dcl_literal l20, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r2.__z_, r2.y, l20
dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.__z_, r2.z, l21
dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r2.___w, r0.x, l22
dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.___w, r2.w, l23
ige r3.x___, r2.z, r2.w
iadd r2.__z_, r2.w, r2.z_neg(xyzw)
itof r2.__z_, r2.z
dcl_literal l24, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB
mul_ieee r2.__z_, r2.z, l24
round_neginf r2.__z_, r2.z
dcl_literal l25, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r3.x, l25, r2.z
ftoi r2.___w, r2.z
dcl_literal l26, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C
imul r3.x___, r2.w, l26
dcl_literal l27, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishr r3.x___, r3.x, l27
dcl_literal l28, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C
imad r3._y__, r2.w, l28, r3.x_neg(xyzw)
dcl_literal l29, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
iadd r3.x___, r3.x, l29
dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r3.x___, r3.x, l30
mul_ieee r3.x___, r2.y, r3.x
dcl_literal l31, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
iadd r3._y__, r3.y, l31
dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r3._y__, r3.y, l32
mul_ieee r3.x___, r3.x, r3.y
dcl_literal l33, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r2.__z_, r2.z, l33
cmov_logical r2._y__, r2.z, r2.y, r3.x
dcl_literal l34, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
dcl_literal l35, 0x39800000, 0x39800000, 0x39800000, 0x39800000
cmov_logical r2.__z_, r2.z, l34, l35
dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r2.y, l36
dcl_literal l37, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.x___, r3.x, l37
dcl_literal l38, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r3.x___, r3.x, l38
dcl_literal l39, 0x38800000, 0x38800000, 0x38800000, 0x38800000
mul_ieee r3._y__, r2.y, l39
dcl_literal l40, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r3.__z_, l40, r3.x
dcl_literal l41, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r3.x___, l41, r3.x
and r3.x___, r3.z, r3.x
dcl_literal l42, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r3.__z_, r3.x, l42
dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r3.___w, l43, r2.w
and r3.x___, r3.x, r3.w
cmov_logical r3.x___, r3.x, r3.y, r2.y
mov r3._y__, r1.x
mov r3.___w, r3.x
dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r4.x___, l44
mov r4._y__, r2.y
mov r4.__z_, r3.z
whileloop
    ige r4.___w, r4.x, r2.w
    break_logicalnz r4.w
    div_zeroop(infinity) r4.___w, r3.y, r3.w
    dcl_literal l45, 0x38800000, 0x38800000, 0x38800000, 0x38800000
    mul_ieee r5.x___, r4.w, l45
    cmov_logical r4.___w, r4.z, r5.x, r4.w
    round_neginf r4.___w, r4.w
    dcl_literal l46, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r5.x___, r4.y, l46
    add r5._y__, r4.y, r5.x_neg(xyzw)
    dcl_literal l47, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r5.__z_, r4.w, l47
    add r5.___w, r4.w, r5.z_neg(xyzw)
    mul_ieee r4.___w, r4.y, r4.w
    mad_ieee r6.x___, r5.x, r5.z, r4.w_neg(xyzw)
    mad_ieee r5.x___, r5.x, r5.w, r6.x
    mad_ieee r5.x___, r5.y, r5.z, r5.x
    mad_ieee r5.x___, r5.y, r5.w, r5.x
    add r5._y__, r3.y, r4.w_neg(xyzw)
    add r5.__z_, r3.y, r5.y_neg(xyzw)
    add r4.___w, r4.w_neg(xyzw), r5.z
    add r4.___w, r5.x_neg(xyzw), r4.w
    add r4.___w, r5.y, r4.w
    dcl_literal l48, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r5.x___, r4.w, l48
    add r5._y__, r4.y, r4.w
    cmov_logical r4.___w, r5.x, r5.y, r4.w
    dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r5.x___, r4.w, l49
    add r5._y__, r4.y, r4.w
    cmov_logical r4.___w, r5.x, r5.y, r4.w
    ge r5.x___, r4.w, r4.y
    add r5._y__, r4.y_neg(xyzw), r4.w
    cmov_logical r3._y__, r5.x, r5.y, r4.w
    mul_ieee r4._y__, r2.z, r4.y
    dcl_literal l50, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    iadd r4.x___, r4.x, l50
    mov r3.___w, r4.y
    dcl_literal l51, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r4.__z_, l51
endloop
mov r2._yzw, r3.wwyw
dcl_literal l52, 0x7F800000, 0x7F800000, 0xFFFFF000, 0x00000000
and r3.xyz_, r2.zwyz, l52
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.xy__, r3.xyxx, l53
dcl_literal l54, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2.___w, r3.y, l54
dcl_literal l55, 0x38800000, 0x38800000, 0x38800000, 0x38800000
mul_ieee r3._y__, r2.y, l55
dcl_literal l56, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r3.___w, l56, r2.w
dcl_literal l57, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r2.___w, l57, r2.w
and r2.___w, r3.w, r2.w
cmov_logical r3._y__, r2.w, r3.y, r2.y
div_zeroop(infinity) r3._y__, r2.z, r3.y
dcl_literal l58, 0x38800000, 0x38800000, 0x38800000, 0x38800000
mul_ieee r3.___w, r3.y, l58
cmov_logical r2.___w, r2.w, r3.w, r3.y
round_neginf r2.___w, r2.w
add r3._y__, r2.y, r3.z_neg(xyzw)
dcl_literal l59, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.___w, r2.w, l59
add r4.x___, r2.w, r3.w_neg(xyzw)
mul_ieee r4._y__, r2.y, r2.w
mad_ieee r4.__z_, r3.z, r3.w, r4.y_neg(xyzw)
mad_ieee r3.__z_, r3.z, r4.x, r4.z
mad_ieee r3.__z_, r3.y, r3.w, r3.z
mad_ieee r3._y__, r3.y, r4.x, r3.z
add r3.__z_, r2.z, r4.y_neg(xyzw)
add r3.___w, r2.z, r3.z_neg(xyzw)
add r3.___w, r4.y_neg(xyzw), r3.w
add r3._y__, r3.y_neg(xyzw), r3.w
add r3._y__, r3.z, r3.y
ftoi r3.__z_, r2.w
dcl_literal l60, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.___w, r3.y, l60
add r4.x___, r2.y, r3.y
dcl_literal l61, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4._y__, r3.z, l61
cmov_logical r3._yz_, r2.w, r4.xxyx, r3.yyzy
dcl_literal l62, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.___w, r3.y, l62
add r4.x___, r2.y, r3.y
dcl_literal l63, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4._y__, r3.z, l63
cmov_logical r3._yz_, r2.w, r4.xxyx, r3.yyzy
ge r2.___w, r3.y, r2.y
add r4.x___, r2.y_neg(xyzw), r3.y
dcl_literal l64, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r4._y__, r3.z, l64
cmov_logical r3._yz_, r2.w, r4.xxyx, r3.yyzy
cmov_logical r2.__z_, r3.x, r3.y, r2.z
dcl_literal l65, 0x41F00000, 0x41F00000, 0x41F00000, 0x41F00000
lt r0.___w, l65, r0.w
ishl r0.__z_, r3.z, r0.z
dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r0.w, l66, r0.z
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.___w, r2.z, l67
and r0.___w, r2.x, r0.w
if_logicalnz r0.w
    dcl_literal l68, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF
    and r3, r2.z, l68
    dcl_literal l69, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ior r0.___w, r3.x, l69
    dcl_literal l70, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    add r0.___w, r0.w, l70
    dcl_literal l71, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.___w, r0.w, l71
    dcl_literal l72, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    iadd r0.___w, l72, r0.w_neg(xyzw)
    dcl_literal l73, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.___w, r0.w, l73
    dcl_literal l74, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ushr r0.___w, r0.w, l74
    dcl_literal l75, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    cmov_logical r0.___w, r3.x, r0.w, l75
    dcl_literal l76, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r0.___w, r0.w_neg(xyzw), l76
    dcl_literal l77, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r2.x___, r3.x, l77
    dcl_literal l78, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ine r2.___w, r3.x, l78
    and r2.x___, r2.x, r2.w
    dcl_literal l79, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.___w, r3.y, l79
    dcl_literal l80, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.___w, r2.w, l80
    cmov_logical r0.___w, r2.x, r0.w, r2.w
    dcl_literal l81, 0x7FFFFFFF, 0x7F800000, 0x007FFFFF, 0x00000000
    and r4.xyz_, r0.y, l81
    dcl_literal l82, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ior r0._y__, r4.x, l82
    dcl_literal l83, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    add r0._y__, r0.y, l83
    dcl_literal l84, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0._y__, r0.y, l84
    dcl_literal l85, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    iadd r0._y__, l85, r0.y_neg(xyzw)
    dcl_literal l86, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0._y__, r0.y, l86
    dcl_literal l87, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ushr r0._y__, r0.y, l87
    dcl_literal l88, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    cmov_logical r0._y__, r4.x, r0.y, l88
    dcl_literal l89, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r0._y__, r0.y_neg(xyzw), l89
    dcl_literal l90, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r2.x___, r4.x, l90
    dcl_literal l91, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ine r2.___w, r4.x, l91
    and r2.x___, r2.x, r2.w
    dcl_literal l92, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.___w, r4.y, l92
    dcl_literal l93, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.___w, r2.w, l93
    cmov_logical r0._y__, r2.x, r0.y, r2.w
    inegate r2.x___, r0.y
    itof r2.___w, r2.x
    itof r4.__z_, r4.z
    cmov_logical r4.x___, r4.y, r4.x, r4.z
    dcl_literal l94, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r4.__z_, r2.x, l94
    cmov_logical r4.__z_, r4.y, r2.x, r4.z
    dcl_literal l95, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r5.xy__, r4.x, l95
    dcl_literal l96, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4.___w, r5.x, l96
    dcl_literal l97, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r4.___w, r4.w, l97
    dcl_literal l98, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r5.x___, r4.z, l98
    iadd r5.x___, r4.x, r5.x
    iadd r4.__z_, r4.w, r4.z
    dcl_literal l99, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r5.__z_, l99, r4.z
    dcl_literal l100, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r5.x___, r5.z, l100, r5.x
    dcl_literal l101, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r4.__z_, l101, r4.z_neg(xyzw)
    dcl_literal l102, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r5._y__, r5.y, l102
    dcl_literal l103, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r5.__z_, l103, r4.z
    dcl_literal l104, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r4.__z_, r5.z, l104, r4.z
    dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r4.__z_, r4.z, l105
    ishr r5.__z_, r5.y, r4.z
    dcl_literal l106, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.__z_, l106, r4.z
    cmov_logical r4.__z_, r4.z, r5.z, r5.x
    dcl_literal l107, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r2.___w, l107, r2.w
    dcl_literal l108, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2.___w, r2.w, l108, r4.z
    inegate r4.__z_, r0.w
    itof r5.x___, r4.z
    itof r3.___w, r3.w
    cmov_logical r3.x___, r3.y, r3.x, r3.w
    dcl_literal l109, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r3.___w, r4.z, l109
    cmov_logical r3._y__, r3.y, r4.z, r3.w
    dcl_literal l110, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
    and r5.__zw, r3.x, l110
    dcl_literal l111, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.___w, r5.z, l111
    iadd r3.___w, r3.w, r3.y
    dcl_literal l112, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3._y__, r3.y, l112
    iadd r3.x___, r3.x, r3.y
    dcl_literal l113, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3._y__, r3.w, l113
    dcl_literal l114, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.___w, l114, r3.y
    dcl_literal l115, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r3.x___, r3.w, l115, r3.x
    dcl_literal l116, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3._y__, l116, r3.y_neg(xyzw)
    dcl_literal l117, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.___w, r5.w, l117
    dcl_literal l118, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.__z_, l118, r3.y
    dcl_literal l119, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3._y__, r4.z, l119, r3.y
    dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r3._y__, r3.y, l120
    ishr r3.___w, r3.w, r3.y
    dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3._y__, l121, r3.y
    cmov_logical r3.x___, r3.y, r3.w, r3.x
    dcl_literal l122, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r3._y__, l122, r5.x
    dcl_literal l123, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r3.x___, r3.y, l123, r3.x
    ior r3.x___, r3.z, r3.x
    iadd r0.___w, r0.w, r2.x
    mov r3._y__, r3.x
    dcl_literal l124, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r3.__z_, l124
    mov r2.x___, r0.w
    whileloop
       
        dcl_literal l125, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ige r3.___w, l125, r2.x
        break_logicalnz r3.w
       
        dcl_literal l126, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r3.___w, r3.z, l126
        ge r4.__z_, r3.y, r2.w
        add r5.x___, r2.w_neg(xyzw), r3.y
        cmov_logical r5.x___, r4.z, r5.x, r3.y
       
        dcl_literal l127, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r5.__z_, r3.w, l127
        cmov_logical r3.__z_, r4.z, r5.z, r3.w
        add r3._y__, r5.x, r5.x
       
        dcl_literal l128, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r2.x___, r2.x, l128
    endloop
    dcl_literal l129, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    ishl r2.x___, r3.z, l129
    ge r3.x___, r3.y, r2.w
    add r2.___w, r2.w_neg(xyzw), r3.y
    cmov_logical r2.___w, r3.x, r2.w, r3.y
    dcl_literal l130, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    iadd r3._y__, r2.x, l130
    cmov_logical r2.x___, r3.x, r3.y, r2.x
    itof r3.x___, r0.y
    dcl_literal l131, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r6, r2.w, l131
    itof r2.___w, r6.w
    cmov_logical r2.___w, r6.z, r6.x, r2.w
    dcl_literal l132, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r3._y__, r0.y, l132
    cmov_logical r0._y__, r6.z, r0.y, r3.y
    dcl_literal l133, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r3._yz_, r2.w, l133
    dcl_literal l134, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3._y__, r3.y, l134
    iadd r3._y__, r3.y, r0.y
    dcl_literal l135, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0._y__, r0.y, l135
    iadd r0._y__, r2.w, r0.y
    dcl_literal l136, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.___w, r3.y, l136
    dcl_literal l137, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3._y__, l137, r2.w
    dcl_literal l138, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0._y__, r3.y, l138, r0.y
    dcl_literal l139, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.___w, l139, r2.w_neg(xyzw)
    dcl_literal l140, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3._y__, r3.z, l140
    dcl_literal l141, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.__z_, l141, r2.w
    dcl_literal l142, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.___w, r3.z, l142, r2.w
    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2.___w, r2.w, l143
    ishr r3._y__, r3.y, r2.w
    dcl_literal l144, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.___w, l144, r2.w
    cmov_logical r0._y__, r2.w, r3.y, r0.y
    dcl_literal l145, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r2.___w, l145, r3.x
    dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0._y__, r2.w, l146, r0.y
    ior r0._y__, r6.y, r0.y
    dcl_literal l147, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ige r0.___w, r0.w, l147
    cmov_logical r2.__z_, r0.w, r0.y, r2.z
    and r0._y__, r2.x, r0.w
    iadd r0.__z_, r0.z, r0.y
    dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0._y__, r2.z, l148
    dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0._y__, r0.y, l149
    dcl_literal l150, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    ilt r0._y__, r0.y, l150
    if_logicalnz r0.y
       
        dcl_literal l151, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
        and r3, r2.z, l151
        itof r0._y__, r3.w
        cmov_logical r0._y__, r3.z, r3.x, r0.y
       
        dcl_literal l152, 0x00000030, 0x00000000, 0x00000000, 0x18000000
       
        dcl_literal l153, 0xFFFFFF9B, 0x00000000, 0x00000000, 0xCD800000
        cmov_logical r2.x__w, r3.z, l152, l153
       
        dcl_literal l154, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
        and r3.x_z_, r0.y, l154
       
        dcl_literal l155, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r0.___w, r3.x, l155
        iadd r0._y_w, r0.yyyw, r2.wwwx
       
        dcl_literal l156, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
        iadd r0.___w, r0.w, l156
       
        dcl_literal l157, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r2.x___, l157, r0.w
       
        dcl_literal l158, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r0._y__, r2.x, l158, r0.y
       
        dcl_literal l159, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r0.___w, l159, r0.w_neg(xyzw)
       
        dcl_literal l160, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2.x___, r3.z, l160
       
        dcl_literal l161, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2.___w, l161, r0.w
       
        dcl_literal l162, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r0.___w, r2.w, l162, r0.w
       
        dcl_literal l163, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        imax r0.___w, r0.w, l163
        ishr r2.x___, r2.x, r0.w
       
        dcl_literal l164, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r0.___w, l164, r0.w
        cmov_logical r0._y__, r0.w, r2.x, r0.y
        ior r2.__z_, r3.y, r0.y
       
        dcl_literal l165, 0x00000000, 0x00000030, 0x00000000, 0x18000000
       
        dcl_literal l166, 0x00000000, 0xFFFFFF9B, 0x00000000, 0xCD800000
        cmov_logical r0._y_w, r4.y, l165, l166
        iadd r0._y_w, r4.wwwx, r0.yyyw
       
        dcl_literal l167, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r2.x___, l167, r0.y
       
        dcl_literal l168, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r0.___w, r2.x, l168, r0.w
       
        dcl_literal l169, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r0._y__, l169, r0.y_neg(xyzw)
       
        dcl_literal l170, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2.x___, l170, r0.y
       
        dcl_literal l171, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r0._y__, r2.x, l171, r0.y
       
        dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        imax r0._y__, r0.y, l172
        ishr r2.x___, r5.y, r0.y
       
        dcl_literal l173, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r0._y__, l173, r0.y
        cmov_logical r2._y__, r0.y, r2.x, r0.w
       
        dcl_literal l174, 0xC2400000, 0xC2400000, 0xC2400000, 0xC2400000
        mov r0._y__, l174
    else
        mov r2._y__, r1.y
       
        dcl_literal l175, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r0._y__, l175
    endif
else
    dcl_literal l176, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0._y__, l176
endif
add r0.___w, r2.z, r2.z
lt r2.x___, r2.y, r0.w
eq r0.___w, r0.w, r2.y
dcl_literal l177, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r0.__z_, r0.z, l177
dcl_literal l178, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.__z_, r0.z, l178
and r0.__z_, r0.w, r0.z
ior r0.__z_, r2.x, r0.z
add r0.___w, r2.y_neg(xyzw), r2.z
cmov_logical r0.__z_, r0.z, r0.w, r2.z
dcl_literal l179, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r0.___w, r0.y, l179
if_logicalnz r0.w
    ftoi r0._y__, r0.y
    dcl_literal l180, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r2, r0.z, l180
    itof r0.___w, r2.w
    cmov_logical r0.___w, r2.z, r2.x, r0.w
    dcl_literal l181, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r2.x___, r0.y, l181
    cmov_logical r0._y__, r2.z, r0.y, r2.x
    dcl_literal l182, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
    and r2.x_z_, r0.w, l182
    dcl_literal l183, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.x___, r2.x, l183
    iadd r2.x___, r2.x, r0.y
    dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0._y__, r0.y, l184
    iadd r0._y__, r0.w, r0.y
    dcl_literal l185, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r0.___w, r2.x, l185
    dcl_literal l186, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2.x___, l186, r0.w
    dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0._y__, r2.x, l187, r0.y
    dcl_literal l188, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r0.___w, l188, r0.w_neg(xyzw)
    dcl_literal l189, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.x___, r2.z, l189
    dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r2.__z_, l190, r0.w
    dcl_literal l191, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.___w, r2.z, l191, r0.w
    dcl_literal l192, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r0.___w, r0.w, l192
    ishr r2.x___, r2.x, r0.w
    dcl_literal l193, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r0.___w, l193, r0.w
    cmov_logical r0._y__, r0.w, r2.x, r0.y
    ior r0.__z_, r2.y, r0.y
endif
dcl_literal l194, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ixor r0._y__, r0.z, l194
cmov_logical r0._y__, r1.z, r0.y, r0.z
dcl_literal l195, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
ilt r0.__zw, l195, r1.xxxy
ior r2.x___, r0.w, r0.z
dcl_literal l196, 0x7FC00001, 0x7FC00001, 0x7FC00001, 0x7FC00001
cmov_logical r0._y__, r2.x, l196, r0.y
dcl_literal l197, 0x00000000, 0x7F800000, 0x7F800000, 0x00000000
ieq r2, r1.yxyx, l197
ior r2.x___, r2.y, r2.x
dcl_literal l198, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r2.x, l198, r0.y
inot r2.xy__, r2.yzyy
and r2.x___, r2.z, r2.x
inot r0.__zw, r0.zzzw
and r0.__z_, r2.x, r0.z
and r0.___w, r1.w, r0.w
and r1.___w, r2.w, r0.w
ior r0.__z_, r0.z, r1.w
cmov_logical r0.x___, r0.z, r0.x, r0.y
ieq r0._y__, r1.x, r1.y
and r0.__z_, r2.y, r0.w
and r0._y__, r0.y, r0.z
cmov_logical r0.x___, r0.y, r1.z, r0.x
mov out0, r0
mend
__remquo_2f32f32
mdef(347)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x80000000, 0x7FFFFFFF, 0x7FFFFFFF, 0x80000000
and r1, r0.xxyy, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
and r0.__zw, r0.yyyx, l1
dcl_literal l2, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.__zw, r0.zzzw, l2
dcl_literal l3, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ilt r2.x___, r0.z, l3
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r2._y__, r1.z, l4
and r2.x___, r2.x, r2.y
dcl_literal l5, 0x00000030, 0x00000030, 0x00000030, 0x00000030
iadd r0.__z_, l5, r0.z_neg(xyzw)
and r0.__z_, r2.x, r0.z
itof r2.x___, r0.z
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r2.__z_, r2.x, l6
if_logicalnz r2.z
    dcl_literal l7, 0x7FFFFFFF, 0x7F800000, 0x007FFFFF, 0x00000000
    and r3.xyz_, r0.y, l7
    itof r2.___w, r3.z
    cmov_logical r2.___w, r3.y, r3.x, r2.w
    dcl_literal l8, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r3.x___, r0.z, l8
    cmov_logical r3.x___, r3.y, r0.z, r3.x
    dcl_literal l9, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r3._yz_, r2.w, l9
    dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3._y__, r3.y, l10
    iadd r3._y__, r3.y, r3.x
    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3.x___, r3.x, l11
    iadd r2.___w, r2.w, r3.x
    dcl_literal l12, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3.x___, r3.y, l12
    dcl_literal l13, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3._y__, l13, r3.x
    dcl_literal l14, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2.___w, r3.y, l14, r2.w
    dcl_literal l15, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3.x___, l15, r3.x_neg(xyzw)
    dcl_literal l16, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3._y__, r3.z, l16
    dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.__z_, l17, r3.x
    dcl_literal l18, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3.x___, r3.z, l18, r3.x
    dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r3.x___, r3.x, l19
    ishr r3._y__, r3.y, r3.x
    dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3.x___, l20, r3.x
    cmov_logical r2.___w, r3.x, r3.y, r2.w
else
    mov r2.___w, r1.z
endif
dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r2.w, l21
dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.x___, r3.x, l22
ige r3._y__, r3.x, r0.w
iadd r0.___w, r0.w, r3.x_neg(xyzw)
itof r0.___w, r0.w
dcl_literal l23, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB
mul_ieee r0.___w, r0.w, l23
round_neginf r0.___w, r0.w
dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.___w, r3.y, l24, r0.w
ftoi r3.x___, r0.w
dcl_literal l25, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C
imul r3._y__, r3.x, l25
dcl_literal l26, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishr r3._y__, r3.y, l26
dcl_literal l27, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C
imad r3.__z_, r3.x, l27, r3.y_neg(xyzw)
dcl_literal l28, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
iadd r3._y__, r3.y, l28
dcl_literal l29, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r3._y__, r3.y, l29
mul_ieee r3._y__, r2.w, r3.y
dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
iadd r3.__z_, r3.z, l30
dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r3.__z_, r3.z, l31
mul_ieee r3._y__, r3.y, r3.z
dcl_literal l32, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r3.__z_, r0.w, l32
cmov_logical r2.___w, r3.z, r2.w, r3.y
dcl_literal l33, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
dcl_literal l34, 0x39800000, 0x39800000, 0x39800000, 0x39800000
cmov_logical r3._y__, r3.z, l33, l34
dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r2.w, l35
dcl_literal l36, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.__z_, r3.z, l36
dcl_literal l37, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r3.__z_, r3.z, l37
dcl_literal l38, 0x38800000, 0x38800000, 0x38800000, 0x38800000
mul_ieee r3.___w, r2.w, l38
dcl_literal l39, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r4.x___, l39, r3.z
dcl_literal l40, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r3.__z_, l40, r3.z
and r3.__z_, r4.x, r3.z
dcl_literal l41, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r4.x___, r3.z, l41
dcl_literal l42, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, l42, r0.w
and r0.___w, r3.z, r0.w
cmov_logical r0.___w, r0.w, r3.w, r2.w
mov r3.__z_, r1.y
mov r3.___w, r0.w
dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r4._y__, l43
mov r4.__z_, r2.w
mov r4.___w, r4.x
whileloop
    ige r5.x___, r4.y, r3.x
    break_logicalnz r5.x
    div_zeroop(infinity) r5.x___, r3.z, r3.w
    dcl_literal l44, 0x38800000, 0x38800000, 0x38800000, 0x38800000
    mul_ieee r5._y__, r5.x, l44
    cmov_logical r5.x___, r4.w, r5.y, r5.x
    round_neginf r5.x___, r5.x
    dcl_literal l45, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r5._y__, r4.z, l45
    add r5.__z_, r4.z, r5.y_neg(xyzw)
    dcl_literal l46, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r5.___w, r5.x, l46
    add r6.x___, r5.x, r5.w_neg(xyzw)
    mul_ieee r5.x___, r4.z, r5.x
    mad_ieee r6._y__, r5.y, r5.w, r5.x_neg(xyzw)
    mad_ieee r5._y__, r5.y, r6.x, r6.y
    mad_ieee r5._y__, r5.z, r5.w, r5.y
    mad_ieee r5._y__, r5.z, r6.x, r5.y
    add r5.__z_, r3.z, r5.x_neg(xyzw)
    add r5.___w, r3.z, r5.z_neg(xyzw)
    add r5.x___, r5.x_neg(xyzw), r5.w
    add r5.x___, r5.y_neg(xyzw), r5.x
    add r5.x___, r5.z, r5.x
    dcl_literal l47, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r5._y__, r5.x, l47
    add r5.__z_, r4.z, r5.x
    cmov_logical r5.x___, r5.y, r5.z, r5.x
    dcl_literal l48, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r5._y__, r5.x, l48
    add r5.__z_, r4.z, r5.x
    cmov_logical r5.x___, r5.y, r5.z, r5.x
    ge r5._y__, r5.x, r4.z
    add r5.__z_, r4.z_neg(xyzw), r5.x
    cmov_logical r3.__z_, r5.y, r5.z, r5.x
    mul_ieee r4.__z_, r3.y, r4.z
    dcl_literal l49, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    iadd r4._y__, r4.y, l49
    mov r3.___w, r4.z
    dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r4.___w, l50
endloop
mov r3.xyz_, r3.wzww
dcl_literal l51, 0x7F800000, 0x7F800000, 0xFFFFF000, 0x00000000
and r4.xyz_, r3.yzxy, l51
dcl_literal l52, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.__zw, r4.xxxy, l52
dcl_literal l53, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r0.___w, r3.w, l53
dcl_literal l54, 0x38800000, 0x38800000, 0x38800000, 0x38800000
mul_ieee r2.___w, r3.x, l54
dcl_literal l55, 0x00000069, 0x00000069, 0x00000069, 0x00000069
ilt r3.___w, l55, r0.w
dcl_literal l56, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
ige r0.___w, l56, r0.w
and r0.___w, r3.w, r0.w
cmov_logical r2.___w, r0.w, r2.w, r3.x
div_zeroop(infinity) r2.___w, r3.y, r2.w
dcl_literal l57, 0x38800000, 0x38800000, 0x38800000, 0x38800000
mul_ieee r3.___w, r2.w, l57
cmov_logical r0.___w, r0.w, r3.w, r2.w
round_neginf r0.___w, r0.w
add r2.___w, r3.x, r4.z_neg(xyzw)
dcl_literal l58, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.___w, r0.w, l58
add r4.x___, r0.w, r3.w_neg(xyzw)
mul_ieee r4._y__, r3.x, r0.w
mad_ieee r4.___w, r4.z, r3.w, r4.y_neg(xyzw)
mad_ieee r4.__z_, r4.z, r4.x, r4.w
mad_ieee r3.___w, r2.w, r3.w, r4.z
mad_ieee r2.___w, r2.w, r4.x, r3.w
add r3.___w, r3.y, r4.y_neg(xyzw)
add r4.x___, r3.y, r3.w_neg(xyzw)
add r4.x___, r4.y_neg(xyzw), r4.x
add r2.___w, r2.w_neg(xyzw), r4.x
add r4.x___, r3.w, r2.w
ftoi r4._y__, r0.w
dcl_literal l59, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r4.x, l59
add r4.__z_, r3.x, r4.x
dcl_literal l60, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.___w, r4.y, l60
cmov_logical r4.xy__, r0.w, r4.zwzz, r4.xyxx
dcl_literal l61, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r4.x, l61
add r4.__z_, r3.x, r4.x
dcl_literal l62, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.___w, r4.y, l62
cmov_logical r4.xy__, r0.w, r4.zwzz, r4.xyxx
ge r0.___w, r4.x, r3.x
add r4.__z_, r3.x_neg(xyzw), r4.x
dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r4.___w, r4.y, l63
cmov_logical r4.xy__, r0.w, r4.zwzz, r4.xyxx
cmov_logical r3._y__, r3.z, r4.x, r3.y
dcl_literal l64, 0x41F00000, 0x41F00000, 0x41F00000, 0x41F00000
lt r0.___w, l64, r2.x
ishl r0.__z_, r4.y, r0.z
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.__z_, r0.w, l65, r0.z
dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.__z_, r3.y, l66
and r0.__z_, r2.z, r0.z
if_logicalnz r0.z
    dcl_literal l67, 0x7FFFFFFF, 0x7F800000, 0x80000000, 0x007FFFFF
    and r4, r3.y, l67
    dcl_literal l68, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ior r0.__z_, r4.x, l68
    dcl_literal l69, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    add r0.__z_, r0.z, l69
    dcl_literal l70, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.__z_, r0.z, l70
    dcl_literal l71, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    iadd r0.__z_, l71, r0.z_neg(xyzw)
    dcl_literal l72, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.__z_, r0.z, l72
    dcl_literal l73, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ushr r0.__z_, r0.z, l73
    dcl_literal l74, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    cmov_logical r0.__z_, r4.x, r0.z, l74
    dcl_literal l75, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r0.__z_, r0.z_neg(xyzw), l75
    dcl_literal l76, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r0.___w, r4.x, l76
    dcl_literal l77, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ine r2.x___, r4.x, l77
    and r0.___w, r0.w, r2.x
    dcl_literal l78, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.x___, r4.y, l78
    dcl_literal l79, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.x___, r2.x, l79
    cmov_logical r0.__z_, r0.w, r0.z, r2.x
    dcl_literal l80, 0x7FFFFFFF, 0x00000000, 0x7F800000, 0x007FFFFF
    and r2.x_zw, r0.y, l80
    dcl_literal l81, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ior r0.___w, r2.x, l81
    dcl_literal l82, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    add r0.___w, r0.w, l82
    dcl_literal l83, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.___w, r0.w, l83
    dcl_literal l84, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    iadd r0.___w, l84, r0.w_neg(xyzw)
    dcl_literal l85, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.___w, r0.w, l85
    dcl_literal l86, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ushr r0.___w, r0.w, l86
    dcl_literal l87, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    cmov_logical r0.___w, r2.x, r0.w, l87
    dcl_literal l88, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r0.___w, r0.w_neg(xyzw), l88
    dcl_literal l89, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r3.___w, r2.x, l89
    dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ine r5.x___, r2.x, l90
    and r3.___w, r3.w, r5.x
    dcl_literal l91, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r5.x___, r2.z, l91
    dcl_literal l92, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r5.x___, r5.x, l92
    cmov_logical r0.___w, r3.w, r0.w, r5.x
    inegate r3.___w, r0.w
    itof r5.x___, r3.w
    itof r2.___w, r2.w
    cmov_logical r2.x___, r2.z, r2.x, r2.w
    dcl_literal l93, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r2.___w, r3.w, l93
    cmov_logical r2.___w, r2.z, r3.w, r2.w
    dcl_literal l94, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r5._yz_, r2.x, l94
    dcl_literal l95, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r5._y__, r5.y, l95
    dcl_literal l96, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r5._y__, r5.y, l96
    dcl_literal l97, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r5.___w, r2.w, l97
    iadd r5.___w, r2.x, r5.w
    iadd r2.___w, r5.y, r2.w
    dcl_literal l98, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r6.x___, l98, r2.w
    dcl_literal l99, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r5.___w, r6.x, l99, r5.w
    dcl_literal l100, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.___w, l100, r2.w_neg(xyzw)
    dcl_literal l101, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r5.__z_, r5.z, l101
    dcl_literal l102, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r6.x___, l102, r2.w
    dcl_literal l103, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.___w, r6.x, l103, r2.w
    dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2.___w, r2.w, l104
    ishr r6.x___, r5.z, r2.w
    dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.___w, l105, r2.w
    cmov_logical r2.___w, r2.w, r6.x, r5.w
    dcl_literal l106, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r5.x___, l106, r5.x
    dcl_literal l107, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2.___w, r5.x, l107, r2.w
    inegate r5.x___, r0.z
    itof r5.___w, r5.x
    itof r4.___w, r4.w
    cmov_logical r4.x___, r4.y, r4.x, r4.w
    dcl_literal l108, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r4.___w, r5.x, l108
    cmov_logical r4._y__, r4.y, r5.x, r4.w
    dcl_literal l109, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r6.xy__, r4.x, l109
    dcl_literal l110, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4.___w, r6.x, l110
    iadd r4.___w, r4.w, r4.y
    dcl_literal l111, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r4._y__, r4.y, l111
    iadd r4.x___, r4.x, r4.y
    dcl_literal l112, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r4._y__, r4.w, l112
    dcl_literal l113, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r4.___w, l113, r4.y
    dcl_literal l114, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r4.x___, r4.w, l114, r4.x
    dcl_literal l115, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r4._y__, l115, r4.y_neg(xyzw)
    dcl_literal l116, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4.___w, r6.y, l116
    dcl_literal l117, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r5.x___, l117, r4.y
    dcl_literal l118, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r4._y__, r5.x, l118, r4.y
    dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r4._y__, r4.y, l119
    ishr r4.___w, r4.w, r4.y
    dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, l120, r4.y
    cmov_logical r4.x___, r4.y, r4.w, r4.x
    dcl_literal l121, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r4._y__, l121, r5.w
    dcl_literal l122, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r4.x___, r4.y, l122, r4.x
    ior r4.x___, r4.z, r4.x
    iadd r0.__z_, r0.z, r3.w
    mov r4._y__, r4.x
    dcl_literal l123, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r4.__z_, l123
    mov r3.___w, r0.z
    whileloop
       
        dcl_literal l124, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ige r4.___w, l124, r3.w
        break_logicalnz r4.w
       
        dcl_literal l125, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r4.___w, r4.z, l125
        ge r5.x___, r4.y, r2.w
        add r5.___w, r2.w_neg(xyzw), r4.y
        cmov_logical r5.___w, r5.x, r5.w, r4.y
       
        dcl_literal l126, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r6.x___, r4.w, l126
        cmov_logical r4.__z_, r5.x, r6.x, r4.w
        add r4._y__, r5.w, r5.w
       
        dcl_literal l127, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r3.___w, r3.w, l127
    endloop
    dcl_literal l128, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    ishl r3.___w, r4.z, l128
    ge r4.x___, r4.y, r2.w
    add r2.___w, r2.w_neg(xyzw), r4.y
    cmov_logical r2.___w, r4.x, r2.w, r4.y
    dcl_literal l129, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    iadd r4._y__, r3.w, l129
    cmov_logical r3.___w, r4.x, r4.y, r3.w
    itof r4.x___, r0.w
    dcl_literal l130, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r6, r2.w, l130
    itof r2.___w, r6.w
    cmov_logical r2.___w, r6.z, r6.x, r2.w
    dcl_literal l131, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r4._y__, r0.w, l131
    cmov_logical r0.___w, r6.z, r0.w, r4.y
    dcl_literal l132, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r4._yz_, r2.w, l132
    dcl_literal l133, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4._y__, r4.y, l133
    iadd r4._y__, r4.y, r0.w
    dcl_literal l134, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l134
    iadd r0.___w, r2.w, r0.w
    dcl_literal l135, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.___w, r4.y, l135
    dcl_literal l136, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r4._y__, l136, r2.w
    dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r4.y, l137, r0.w
    dcl_literal l138, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.___w, l138, r2.w_neg(xyzw)
    dcl_literal l139, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4._y__, r4.z, l139
    dcl_literal l140, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.__z_, l140, r2.w
    dcl_literal l141, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.___w, r4.z, l141, r2.w
    dcl_literal l142, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r2.___w, r2.w, l142
    ishr r4._y__, r4.y, r2.w
    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.___w, l143, r2.w
    cmov_logical r0.___w, r2.w, r4.y, r0.w
    dcl_literal l144, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r2.___w, l144, r4.x
    dcl_literal l145, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r2.w, l145, r0.w
    ior r0.___w, r6.y, r0.w
    dcl_literal l146, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ige r0.__z_, r0.z, l146
    cmov_logical r3._y__, r0.z, r0.w, r3.y
    and r0.__z_, r3.w, r0.z
    iadd r3.__z_, r3.z, r0.z
    dcl_literal l147, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r0.__z_, r3.y, l147
    dcl_literal l148, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.__z_, r0.z, l148
    dcl_literal l149, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    ilt r0.__z_, r0.z, l149
    if_logicalnz r0.z
       
        dcl_literal l150, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
        and r4, r3.y, l150
        itof r0.__z_, r4.w
        cmov_logical r0.__z_, r4.z, r4.x, r0.z
       
        dcl_literal l151, 0x00000030, 0x00000000, 0x18000000, 0x00000000
       
        dcl_literal l152, 0xFFFFFF9B, 0x00000000, 0xCD800000, 0x00000000
        cmov_logical r4.x_z_, r4.z, l151, l152
       
        dcl_literal l153, 0x7F800000, 0x00000000, 0x00000000, 0x007FFFFF
        and r5.x__w, r0.z, l153
       
        dcl_literal l154, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r0.___w, r5.x, l154
        iadd r0.__zw, r0.zzzw, r4.zzzx
       
        dcl_literal l155, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
        iadd r0.___w, r0.w, l155
       
        dcl_literal l156, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r2.___w, l156, r0.w
       
        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r0.__z_, r2.w, l157, r0.z
       
        dcl_literal l158, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r0.___w, l158, r0.w_neg(xyzw)
       
        dcl_literal l159, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2.___w, r5.w, l159
       
        dcl_literal l160, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r3.___w, l160, r0.w
       
        dcl_literal l161, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r0.___w, r3.w, l161, r0.w
       
        dcl_literal l162, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        imax r0.___w, r0.w, l162
        ishr r2.___w, r2.w, r0.w
       
        dcl_literal l163, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r0.___w, l163, r0.w
        cmov_logical r0.__z_, r0.w, r2.w, r0.z
        ior r3._y__, r4.y, r0.z
       
        dcl_literal l164, 0x00000000, 0x00000000, 0x00000030, 0x18000000
       
        dcl_literal l165, 0x00000000, 0x00000000, 0xFFFFFF9B, 0xCD800000
        cmov_logical r0.__zw, r2.z, l164, l165
        iadd r0.___w, r2.x, r0.w
        iadd r0.__z_, r5.y, r0.z
       
        dcl_literal l166, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r2.x___, l166, r0.z
       
        dcl_literal l167, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r0.___w, r2.x, l167, r0.w
       
        dcl_literal l168, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r0.__z_, l168, r0.z_neg(xyzw)
       
        dcl_literal l169, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2.x___, l169, r0.z
       
        dcl_literal l170, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r0.__z_, r2.x, l170, r0.z
       
        dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        imax r0.__z_, r0.z, l171
        ishr r2.x___, r5.z, r0.z
       
        dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r0.__z_, l172, r0.z
        cmov_logical r3.x___, r0.z, r2.x, r0.w
       
        dcl_literal l173, 0xC2400000, 0xC2400000, 0xC2400000, 0xC2400000
        mov r0.__z_, l173
    else
        mov r3.x___, r1.z
       
        dcl_literal l174, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r0.__z_, l174
    endif
else
    dcl_literal l175, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0.__z_, l175
endif
add r0.___w, r3.y, r3.y
lt r2.x___, r3.x, r0.w
eq r0.___w, r0.w, r3.x
dcl_literal l176, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r2.__z_, r3.z, l176
dcl_literal l177, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r2.__z_, r2.z, l177
and r0.___w, r0.w, r2.z
ior r0.___w, r2.x, r0.w
add r2.x___, r3.x_neg(xyzw), r3.y
dcl_literal l178, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r2.__z_, r3.z, l178
cmov_logical r2.x_z_, r0.w, r2.xxzx, r3.yyzy
dcl_literal l179, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r0.___w, r0.z, l179
if_logicalnz r0.w
    ftoi r0.__z_, r0.z
    dcl_literal l180, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r3, r2.x, l180
    itof r0.___w, r3.w
    cmov_logical r0.___w, r3.z, r3.x, r0.w
    dcl_literal l181, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r2.___w, r0.z, l181
    cmov_logical r0.__z_, r3.z, r0.z, r2.w
    dcl_literal l182, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
    and r3.x_z_, r0.w, l182
    dcl_literal l183, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2.___w, r3.x, l183
    iadd r2.___w, r2.w, r0.z
    dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.__z_, r0.z, l184
    iadd r0.__z_, r0.w, r0.z
    dcl_literal l185, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r0.___w, r2.w, l185
    dcl_literal l186, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r2.___w, l186, r0.w
    dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.__z_, r2.w, l187, r0.z
    dcl_literal l188, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r0.___w, l188, r0.w_neg(xyzw)
    dcl_literal l189, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2.___w, r3.z, l189
    dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r3.x___, l190, r0.w
    dcl_literal l191, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.___w, r3.x, l191, r0.w
    dcl_literal l192, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    imax r0.___w, r0.w, l192
    ishr r2.___w, r2.w, r0.w
    dcl_literal l193, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r0.___w, l193, r0.w
    cmov_logical r0.__z_, r0.w, r2.w, r0.z
    ior r2.x___, r3.y, r0.z
endif
dcl_literal l194, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
and r0.__z_, r2.z, l194
dcl_literal l195, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ixor r0.___w, r2.x, l195
cmov_logical r2.x___, r1.x, r0.w, r2.x
ixor r0.___w, r1.w, r1.x
inegate r1.___w, r0.z
cmov_logical r2.__z_, r0.w, r1.w, r0.z
dcl_literal l196, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
ilt r0.__zw, l196, r1.yyyz
ior r1.___w, r0.w, r0.z
dcl_literal l197, 0x7FC00001, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x_z_, r1.w, l197, r2.xxzx
dcl_literal l198, 0x00000000, 0x7F800000, 0x7F800000, 0x00000000
ieq r3, r1.zyzy, l198
ior r1.___w, r3.y, r3.x
dcl_literal l199, 0xFFC00000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x_z_, r1.w, l199, r2.xxzx
inot r3.xy__, r3.yzyy
and r1.___w, r3.z, r3.x
inot r0.__zw, r0.zzzw
and r0.__z_, r1.w, r0.z
and r0.___w, r2.y, r0.w
and r1.___w, r3.w, r0.w
ior r0.__z_, r0.z, r1.w
mov r2._y__, r0.x
dcl_literal l200, 0x00000000, 0x00000000, 0x00000000, 0x00000000
mov r2.___w, l200
cmov_logical r0.x_z_, r0.z, r2.yywy, r2.xxzx
ieq r1.__z_, r1.y, r1.z
and r0.___w, r3.y, r0.w
and r0.___w, r1.z, r0.w
ieq r0._y__, r2.y, r0.y
dcl_literal l201, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l202, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1._y__, r0.y, l201, l202
cmov_logical r0.xy__, r0.w, r1.xyxx, r0.xzxx
mov out0, r0
mend
__rint_f32
mdef(348)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0._y__, r0.x, l0
dcl_literal l1, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l1, r0.y
round_nearest r0.__z_, r0.x
dcl_literal l2, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l2
cmov_logical r0.x___, r0.y, r0.x, r0.z
mov out0, r0
mend
__rootn_f32i32
mdef(349)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
itof r0.__z_, r0.y
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.y, l0
inegate r1.x___, r0.y
cmov_logical r1.x___, r0.w, r1.x, r0.y
dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r0.__z_, l1, r0.z
dcl_literal l2, 0x7FFFFFFF, 0x80000000, 0x80000001, 0x00000001
and r2, r0.xxyy, l2
dcl_literal l3, 0x00000000, 0x00000001, 0x7F800000, 0x80000000
ieq r3, r2.zzxy, l3
dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1._y__, l4, r2.x
inot r1.__z_, r3.z
inot r1.___w, r1.y
and r1.__z_, r1.z, r1.w
dcl_literal l5, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r1.___w, r0.z, l5
dcl_literal l6, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1.___w, l6, r1.w
dcl_literal l7, 0x00000003, 0x00000003, 0x00000003, 0x00000003
ieq r4.x___, r1.x, l7
if_logicalnz r4.x
    dcl_literal l8, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l9, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4.x___, r0.w, l8, l9
    dcl_literal l10, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r4._y__, r0.x, l10
    if_logicalz r4.y
       
        dcl_literal l11, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r4.__z_, r0.x, l11
        itof r4.__z_, r4.z
       
        dcl_literal l12, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
        and r4.__zw, r4.z, l12
       
        dcl_literal l13, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r4.__z_, r4.z, l13
       
        dcl_literal l14, 0x00000030, 0x00000030, 0x00000030, 0x00000030
        iadd r4.__z_, r4.z, l14
       
        dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r4.___w, r4.w, l15
       
        dcl_literal l16, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r4.__z_, l16, r4.z_neg(xyzw)
       
        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r5.x___, l17, r4.z
       
        dcl_literal l18, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r4.__z_, r5.x, l18, r4.z
       
        dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r5.x___, l19, r4.z
        ishr r5._y__, r4.w, r4.z
        inegate r4.__z_, r4.z
       
        dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r4.__z_, r4.z, l20
        iadd r4.__z_, r4.w, r4.z
        cmov_logical r4.__z_, r5.x, r5.y, r4.z
       
        dcl_literal l21, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r4._y__, r4.z, l21
       
        dcl_literal l22, 0xFFFFFFF0, 0xFFFFFFF0, 0xFFFFFFF0, 0xFFFFFFF0
        mov r4.___w, l22
    else
       
        dcl_literal l23, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r4.__z_, r0.x, l23
       
        dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r4.___w, l24
    endif
    dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4._y__, r4.y, l25
    dcl_literal l26, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r4._y__, r4.y, l26
    dcl_literal l27, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r4.__z_, r4.z, l27
    itof r4._y__, r4.y
    dcl_literal l28, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB, 0x3EAAAAAB
    mul_ieee r5.x___, r4.y, l28
    round_nearest r5.x___, r5.x
    dcl_literal l29, 0x40400000, 0x40400000, 0x40400000, 0x40400000
    mad_ieee r4._y__, r5.x_neg(xyzw), l29, r4.y
    ftoi r4._y__, r4.y
    ftoi r5.x___, r5.x
    iadd r4.___w, r5.x, r4.w
    dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    iadd r4._y__, r4.y, l30
    dcl_literal l31, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r4._y__, r4.y, l31
    ior r4._y__, r4.z, r4.y
    dcl_literal l32, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4.__z_, r4.y, l32
    dcl_literal l33, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r4.__z_, r4.z, l33
    dcl_literal l34, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r4._y__, r4.y, l34
    dcl_literal l35, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
    iadd r5.x___, l35, r4.y
    dcl_literal l36, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    and r5.x___, r5.x, l36
    dcl_literal l37, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    ixor r5._y__, r5.x, l37
    ior r4._y__, r4.y, r5.y
    dcl_literal l38, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r5.x___, r5.x, l38
    iadd r4.__z_, r4.z, r5.x
    itof r4.__z_, r4.z
    dcl_literal l39, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
    add r5.xy__, r4.y, l39
    div_zeroop(infinity) r4._y__, r5.x, r5.y
    mul_ieee r5._y__, r4.y, r4.y
    mul_ieee r5.__z_, r5.y, r5.y
    dcl_literal l40, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
    dcl_literal l41, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
    mad_ieee r6.xy__, r5.z, l40, l41
    dcl_literal l42, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
    mad_ieee r6.xy__, r5.z, r6.xyxx, l42
    mul_ieee r5.___w, r5.z, r6.x
    dcl_literal l43, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
    mad_ieee r5.__z_, r5.z, r6.y, l43
    mad_ieee r5._y__, r5.y, r5.z, r5.w
    mul_ieee r5.__z_, r5.x, r5.x
    dcl_literal l44, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mul_ieee r5.___w, r5.z, l44
    dcl_literal l45, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r5._y__, r5.z, l45, r5.y
    mad_ieee r4._y__, r4.y_neg(xyzw), r5.y, r5.w
    add r4._y__, r5.x_neg(xyzw), r4.y
    dcl_literal l46, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820
    mul_ieee r5.x___, r4.z, l46
    mul_ieee r5._y__, r5.x, r5.x
    dcl_literal l47, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
    dcl_literal l48, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
    mad_ieee r5.__z_, r5.y, l47, l48
    dcl_literal l49, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
    mad_ieee r5.__z_, r5.y, r5.z, l49
    dcl_literal l50, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
    mad_ieee r5.__z_, r5.y, r5.z, l50
    dcl_literal l51, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
    mad_ieee r5.__z_, r5.y, r5.z, l51
    mad_ieee r5._y__, r5.y_neg(xyzw), r5.z, r5.x
    mul_ieee r5.x___, r5.x, r5.y
    dcl_literal l52, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
    add r5._y__, r5.y, l52
    div_zeroop(infinity) r5.x___, r5.x, r5.y
    dcl_literal l53, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820, 0x3E6C9820
    mad_ieee r4.__z_, r4.z_neg(xyzw), l53, r5.x
    dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r4.__z_, r4.z_neg(xyzw), l54
    dcl_literal l55, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB
    mul_ieee r5.x___, r4.y, l55
    mul_ieee r5._y__, r5.x, r5.x
    dcl_literal l56, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
    dcl_literal l57, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
    mad_ieee r5.__z_, r5.y, l56, l57
    dcl_literal l58, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
    mad_ieee r5.__z_, r5.y, r5.z, l58
    dcl_literal l59, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
    mad_ieee r5.__z_, r5.y, r5.z, l59
    dcl_literal l60, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
    mad_ieee r5.__z_, r5.y, r5.z, l60
    mad_ieee r5._y__, r5.y_neg(xyzw), r5.z, r5.x
    mul_ieee r5.x___, r5.x, r5.y
    dcl_literal l61, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
    add r5._y__, r5.y, l61
    div_zeroop(infinity) r5.x___, r5.x, r5.y
    dcl_literal l62, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB, 0xBEAAAAAB
    mad_ieee r4._y__, r4.y_neg(xyzw), l62, r5.x
    dcl_literal l63, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r4._y__, r4.y_neg(xyzw), l63
    mul_ieee r4._y__, r4.z, r4.y
    dcl_literal l64, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    div_zeroop(infinity) r4.__z_, l64, r4.y
    cmov_logical r4._y__, r0.w, r4.z, r4.y
    imul r4.x___, r4.w, r4.x
    itof r4.x___, r4.x
    ftoi r4.__z_, r4.x_abs
    dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r4.x___, r4.x, l65
    inegate r4.___w, r4.z
    cmov_logical r4.x___, r4.x, r4.w, r4.z
    dcl_literal l66, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r5, r4.y, l66
    itof r4._y__, r5.w
    cmov_logical r4._y__, r5.z, r5.x, r4.y
    dcl_literal l67, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r4.__z_, r4.x, l67
    cmov_logical r4.x___, r5.z, r4.x, r4.z
    dcl_literal l68, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
    and r4.__zw, r4.y, l68
    dcl_literal l69, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4.__z_, r4.z, l69
    iadd r4.__z_, r4.z, r4.x
    dcl_literal l70, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r4.x___, r4.x, l70
    iadd r4.x___, r4.y, r4.x
    dcl_literal l71, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r4._y__, r4.z, l71
    dcl_literal l72, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r4.__z_, l72, r4.y
    dcl_literal l73, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r4.x___, r4.z, l73, r4.x
    dcl_literal l74, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r4._y__, l74, r4.y_neg(xyzw)
    dcl_literal l75, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4.__z_, r4.w, l75
    dcl_literal l76, 0x00000017, 0x00000000, 0x00000000, 0x00000000
    ilt r5.x_z_, l76, r4.y
    dcl_literal l77, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r4.___w, r5.x, l77, r4.y
    dcl_literal l78, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, r4.y, l78
    dcl_literal l79, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4._y__, r4.y, l79, r4.w
    ishr r4._y__, r4.z, r4.y
    cmov_logical r4.x___, r5.z, r4.y, r4.x
    ior r4.x___, r5.y, r4.x
endif
dcl_literal l80, 0x00000003, 0x00000003, 0x00000003, 0x00000003
ine r1.x___, r1.x, l80
if_logicalnz r1.x
    itof r1.x___, r2.x
    dcl_literal l81, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r4._yz_, r1.x, l81
    dcl_literal l82, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.x___, r4.y, l82
    dcl_literal l83, 0x00000019, 0x00000019, 0x00000019, 0x00000019
    iadd r1.x___, r1.x, l83
    dcl_literal l84, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4._y__, r4.z, l84
    dcl_literal l85, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r1.x___, l85, r1.x_neg(xyzw)
    dcl_literal l86, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4.__z_, l86, r1.x
    dcl_literal l87, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r1.x___, r4.z, l87, r1.x
    dcl_literal l88, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.__z_, l88, r1.x
    ishr r4.___w, r4.y, r1.x
    inegate r1.x___, r1.x
    dcl_literal l89, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r1.x___, r1.x, l89
    iadd r1.x___, r4.y, r1.x
    cmov_logical r1.x___, r4.z, r4.w, r1.x
    dcl_literal l90, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ilt r4._y__, r2.x, l90
    cmov_logical r1.x___, r4.y, r1.x, r2.x
    dcl_literal l91, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7, 0xFFFFFFE7
    and r4._y__, r4.y, l91
    dcl_literal l92, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
    and r4.__zw, r1.x, l92
    dcl_literal l93, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.x___, r4.z, l93
    iadd r1.x___, r1.x, r4.y
    dcl_literal l94, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    ior r4._y__, r4.w, l94
    dcl_literal l95, 0x43000000, 0x43000000, 0x43000000, 0x43000000
    dcl_literal l96, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r4.__z_, r4.y, l95, l96
    ftoi r4.___w, r4.z
    dcl_literal l97, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0, 0xFFFFFFC0
    iadd r4.___w, r4.w, l97
    dcl_literal l98, 0x00000001, 0x00000002, 0x00000003, 0x00000004
    ieq r5, r4.w, l98
    dcl_literal l99, 0x31B0FC04, 0x3C7E0540, 0x00000000, 0x00000000
    and r6.xy__, r5.x, l99
    dcl_literal l100, 0x33439E0D, 0x3CFC14C0, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r5.y, l100, r6.xyxx
    dcl_literal l101, 0x32F632DD, 0x3D3BA2C0, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r5.z, l101, r5.xyxx
    dcl_literal l102, 0x32C01163, 0x3D785180, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r5.w, l102, r5.xyxx
    dcl_literal l103, 0x00000005, 0x00000006, 0x00000007, 0x00000008
    ieq r6, r4.w, l103
    dcl_literal l104, 0x33161BD2, 0x3D9A0EB8, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l104, r5.xyxx
    dcl_literal l105, 0x330AE56B, 0x3DB78690, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l105, r5.xyxx
    dcl_literal l106, 0x32692B56, 0x3DD49368, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l106, r5.xyxx
    dcl_literal l107, 0x32DC55E6, 0x3DF13838, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l107, r5.xyxx
    dcl_literal l108, 0x00000009, 0x0000000A, 0x0000000B, 0x0000000C
    ieq r6, r4.w, l108
    dcl_literal l109, 0x3379A11D, 0x3E06BBF0, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l109, r5.xyxx
    dcl_literal l110, 0x33703FEA, 0x3E14AA94, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l110, r5.xyxx
    dcl_literal l111, 0x335996FA, 0x3E226958, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l111, r5.xyxx
    dcl_literal l112, 0x33614F28, 0x3E2FF980, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l112, r5.xyxx
    dcl_literal l113, 0x0000000D, 0x0000000E, 0x0000000F, 0x00000010
    ieq r6, r4.w, l113
    dcl_literal l114, 0x30843642, 0x3E3D5C48, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l114, r5.xyxx
    dcl_literal l115, 0x3267A2B6, 0x3E4A92D4, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l115, r5.xyxx
    dcl_literal l116, 0x331D0180, 0x3E579E48, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l116, r5.xyxx
    dcl_literal l117, 0x330F3534, 0x3E647FBC, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l117, r5.xyxx
    dcl_literal l118, 0x00000011, 0x00000012, 0x00000013, 0x00000014
    ieq r6, r4.w, l118
    dcl_literal l119, 0x335C55E6, 0x3E713838, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l119, r5.xyxx
    dcl_literal l120, 0x335ABC7C, 0x3E7DC8C0, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l120, r5.xyxx
    dcl_literal l121, 0x3309CE44, 0x3E851926, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l121, r5.xyxx
    dcl_literal l122, 0x332EAE98, 0x3E8B3AE4, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l122, r5.xyxx
    dcl_literal l123, 0x00000015, 0x00000016, 0x00000017, 0x00000018
    ieq r6, r4.w, l123
    dcl_literal l124, 0x336F3DE6, 0x3E914A0E, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l124, r5.xyxx
    dcl_literal l125, 0x336B8475, 0x3E974714, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l125, r5.xyxx
    dcl_literal l126, 0x32AB4A2F, 0x3E9D3262, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l126, r5.xyxx
    dcl_literal l127, 0x310717B1, 0x3EA30C5E, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l127, r5.xyxx
    dcl_literal l128, 0x00000019, 0x0000001A, 0x0000001B, 0x0000001C
    ieq r6, r4.w, l128
    dcl_literal l129, 0x31E5BF06, 0x3EA8D56C, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l129, r5.xyxx
    dcl_literal l130, 0x337D6027, 0x3EAE8DEC, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l130, r5.xyxx
    dcl_literal l131, 0x32F4D8A5, 0x3EB43640, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l131, r5.xyxx
    dcl_literal l132, 0x335AEF40, 0x3EB9CEBE, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l132, r5.xyxx
    dcl_literal l133, 0x0000001D, 0x0000001E, 0x0000001F, 0x00000020
    ieq r6, r4.w, l133
    dcl_literal l134, 0x336E0ABF, 0x3EBF57C0, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l134, r5.xyxx
    dcl_literal l135, 0x31D8284B, 0x3EC4D19C, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l135, r5.xyxx
    dcl_literal l136, 0x32E108B8, 0x3ECA3CA0, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l136, r5.xyxx
    dcl_literal l137, 0x3332FE61, 0x3ECF991E, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l137, r5.xyxx
    dcl_literal l138, 0x00000021, 0x00000022, 0x00000023, 0x00000024
    ieq r6, r4.w, l138
    dcl_literal l139, 0x32D4D042, 0x3ED4E764, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l139, r5.xyxx
    dcl_literal l140, 0x336F323E, 0x3EDA27BA, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l140, r5.xyxx
    dcl_literal l141, 0x32ED38DC, 0x3EDF5A6C, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l141, r5.xyxx
    dcl_literal l142, 0x31F35344, 0x3EE47FBE, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l142, r5.xyxx
    dcl_literal l143, 0x00000025, 0x00000026, 0x00000027, 0x00000028
    ieq r6, r4.w, l143
    dcl_literal l144, 0x337803AF, 0x3EE997F2, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l144, r5.xyxx
    dcl_literal l145, 0x31983894, 0x3EEEA350, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l145, r5.xyxx
    dcl_literal l146, 0x33075A1E, 0x3EF3A212, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l146, r5.xyxx
    dcl_literal l147, 0x32FD7837, 0x3EF8947A, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l147, r5.xyxx
    dcl_literal l148, 0x00000029, 0x0000002A, 0x0000002B, 0x0000002C
    ieq r6, r4.w, l148
    dcl_literal l149, 0x32778F32, 0x3EFD7AC4, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l149, r5.xyxx
    dcl_literal l150, 0x3234BA20, 0x3F012A95, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l150, r5.xyxx
    dcl_literal l151, 0x3360E6FA, 0x3F0391F2, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l151, r5.xyxx
    dcl_literal l152, 0x3204A550, 0x3F05F397, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l152, r5.xyxx
    dcl_literal l153, 0x0000002D, 0x0000002E, 0x0000002F, 0x00000030
    ieq r6, r4.w, l153
    dcl_literal l154, 0x33716A65, 0x3F084F9C, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l154, r5.xyxx
    dcl_literal l155, 0x3317A6AF, 0x3F0AA61E, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l155, r5.xyxx
    dcl_literal l156, 0x33233E4B, 0x3F0CF735, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l156, r5.xyxx
    dcl_literal l157, 0x33738207, 0x3F0F42FA, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l157, r5.xyxx
    dcl_literal l158, 0x00000031, 0x00000032, 0x00000033, 0x00000034
    ieq r6, r4.w, l158
    dcl_literal l159, 0x333DF5FA, 0x3F118986, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l159, r5.xyxx
    dcl_literal l160, 0x33144D89, 0x3F13CAF0, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l160, r5.xyxx
    dcl_literal l161, 0x32D448E9, 0x3F16074F, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l161, r5.xyxx
    dcl_literal l162, 0x331A7886, 0x3F183EB9, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l162, r5.xyxx
    dcl_literal l163, 0x00000035, 0x00000036, 0x00000037, 0x00000038
    ieq r6, r4.w, l163
    dcl_literal l164, 0x336CE70F, 0x3F1A7144, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l164, r5.xyxx
    dcl_literal l165, 0x331AB151, 0x3F1C9F06, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l165, r5.xyxx
    dcl_literal l166, 0x32A71570, 0x3F1EC813, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l166, r5.xyxx
    dcl_literal l167, 0x3284672B, 0x3F20EC7F, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l167, r5.xyxx
    dcl_literal l168, 0x00000039, 0x0000003A, 0x0000003B, 0x0000003C
    ieq r6, r4.w, l168
    dcl_literal l169, 0x318717B1, 0x3F230C5E, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l169, r5.xyxx
    dcl_literal l170, 0x336D81F6, 0x3F2527C2, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l170, r5.xyxx
    dcl_literal l171, 0x330DBADE, 0x3F273EC0, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l171, r5.xyxx
    dcl_literal l172, 0x324B78B5, 0x3F295169, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l172, r5.xyxx
    dcl_literal l173, 0x0000003D, 0x0000003E, 0x0000003F, 0x00000040
    ieq r6, r4.w, l173
    dcl_literal l174, 0x332D9F9D, 0x3F2B5FCE, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.x, l174, r5.xyxx
    dcl_literal l175, 0x32C359F3, 0x3F2D6A02, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.y, l175, r5.xyxx
    dcl_literal l176, 0x32924167, 0x3F2F7015, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.z, l176, r5.xyxx
    dcl_literal l177, 0x3377D1CF, 0x3F317217, 0x00000000, 0x00000000
    cmov_logical r5.xy__, r6.w, l177, r5.xyxx
    round_z r4.__z_, r4.z
    dcl_literal l178, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
    mul_ieee r4.___w, r4.z, l178
    dcl_literal l179, 0x3C000000, 0x3C000000, 0x3C000000, 0x3C000000
    mad_ieee r4._y__, r4.z_neg(xyzw), l179, r4.y
    dcl_literal l180, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r4.__z_, r4.y, l180, r4.w
    div_zeroop(infinity) r4._y__, r4.y, r4.z
    mul_ieee r4.__z_, r4.y, r4.y
    dcl_literal l181, 0x3C4CCCCD, 0x3C4CCCCD, 0x3C4CCCCD, 0x3C4CCCCD
    dcl_literal l182, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB
    mad_ieee r4.___w, r4.z, l181, l182
    mul_ieee r4.__z_, r4.z, r4.w
    mad_ieee r4._y__, r4.y, r4.z, r4.y
    dcl_literal l183, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r1.x___, r1.x, l183
    itof r1.x___, r1.x
    dcl_literal l184, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r4.__z_, r1.x, l184
    add r4.___w, r1.x, r4.z_neg(xyzw)
    dcl_literal l185, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r5.__z_, r0.z, l185
    add r5.___w, r0.z, r5.z_neg(xyzw)
    mul_ieee r6.x___, r0.z, r1.x
    mul_ieee r1.x___, r1.x, r0.z
    mad_ieee r6._y__, r4.z, r5.z, r1.x_neg(xyzw)
    mad_ieee r4.__z_, r4.z, r5.w, r6.y
    mad_ieee r4.__z_, r4.w, r5.z, r4.z
    mad_ieee r4.__z_, r4.w, r5.w, r4.z
    dcl_literal l186, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
    and r4.___w, r5.y, l186
    add r6._y__, r5.y, r4.w_neg(xyzw)
    mul_ieee r6.__z_, r5.y, r0.z
    mad_ieee r6.___w, r4.w, r5.z, r6.z_neg(xyzw)
    mad_ieee r4.___w, r4.w, r5.w, r6.w
    mad_ieee r4.___w, r6.y, r5.z, r4.w
    mad_ieee r4.___w, r6.y, r5.w, r4.w
    dcl_literal l187, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r5.__z_, r1.x, l187
    dcl_literal l188, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
    dcl_literal l189, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    cmov_logical r5.__z_, r5.z, l188, l189
    add r5.__z_, r1.x, r5.z
    round_z r5.__z_, r5.z
    add r1.x___, r1.x, r5.z_neg(xyzw)
    dcl_literal l190, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
    mul_ieee r5.___w, r1.x, l190
    mul_ieee r6._y__, r5.w, r5.w
    dcl_literal l191, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
    dcl_literal l192, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
    mad_ieee r6.___w, r6.y, l191, l192
    dcl_literal l193, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
    mad_ieee r6.___w, r6.y, r6.w, l193
    dcl_literal l194, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
    mad_ieee r6.___w, r6.y, r6.w, l194
    dcl_literal l195, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
    mad_ieee r6.___w, r6.y, r6.w, l195
    mad_ieee r6._y__, r6.y_neg(xyzw), r6.w, r5.w
    mul_ieee r5.___w, r5.w, r6.y
    dcl_literal l196, 0x40000000, 0x40000000, 0x40000000, 0x40000000
    add r6._y__, r6.y_neg(xyzw), l196
    div_zeroop(infinity) r5.___w, r5.w, r6.y
    dcl_literal l197, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
    mad_ieee r5.___w, r1.x_neg(xyzw), l197, r5.w_neg(xyzw)
    dcl_literal l198, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
    mad_ieee r1.x___, r1.x_neg(xyzw), l198, r5.w
    dcl_literal l199, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r1.x___, r1.x_neg(xyzw), l199
    dcl_literal l200, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r5.___w, r6.z, l200
    dcl_literal l201, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
    dcl_literal l202, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    cmov_logical r5.___w, r5.w, l201, l202
    dcl_literal l203, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
    mad_ieee r5.___w, r6.z, l203, r5.w
    round_z r5.___w, r5.w
    dcl_literal l204, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
    mad_ieee r6._y__, r5.w_neg(xyzw), l204, r6.z
    dcl_literal l205, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
    mad_ieee r6.__z_, r5.w_neg(xyzw), l205, r6.y
    mul_ieee r6.___w, r6.z, r6.z
    dcl_literal l206, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
    dcl_literal l207, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
    mad_ieee r7.x___, r6.w, l206, l207
    dcl_literal l208, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
    mad_ieee r7.x___, r6.w, r7.x, l208
    dcl_literal l209, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
    mad_ieee r7.x___, r6.w, r7.x, l209
    dcl_literal l210, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
    mad_ieee r7.x___, r6.w, r7.x, l210
    mad_ieee r6.___w, r6.w_neg(xyzw), r7.x, r6.z
    mul_ieee r6.__z_, r6.z, r6.w
    dcl_literal l211, 0x40000000, 0x40000000, 0x40000000, 0x40000000
    add r6.___w, r6.w_neg(xyzw), l211
    div_zeroop(infinity) r6.__z_, r6.z, r6.w
    dcl_literal l212, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
    mad_ieee r6.__z_, r5.w, l212, r6.z_neg(xyzw)
    add r6._y__, r6.y_neg(xyzw), r6.z
    dcl_literal l213, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r6._y__, r6.y_neg(xyzw), l213
    dcl_literal l214, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
    mad_ieee r4.__z_, r4.z, l214, r4.w
    add r4._y__, r5.x, r4.y
    mad_ieee r4.__z_, r0.z, r4.y, r4.z
    dcl_literal l215, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r4.___w, r4.z, l215
    dcl_literal l216, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
    dcl_literal l217, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    cmov_logical r4.___w, r4.w, l216, l217
    dcl_literal l218, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
    mad_ieee r4.___w, r4.z, l218, r4.w
    round_z r4.___w, r4.w
    dcl_literal l219, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
    mad_ieee r4.__z_, r4.w_neg(xyzw), l219, r4.z
    dcl_literal l220, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
    mad_ieee r5.x___, r4.w_neg(xyzw), l220, r4.z
    mul_ieee r6.__z_, r5.x, r5.x
    dcl_literal l221, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
    dcl_literal l222, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
    mad_ieee r6.___w, r6.z, l221, l222
    dcl_literal l223, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
    mad_ieee r6.___w, r6.z, r6.w, l223
    dcl_literal l224, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
    mad_ieee r6.___w, r6.z, r6.w, l224
    dcl_literal l225, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
    mad_ieee r6.___w, r6.z, r6.w, l225
    mad_ieee r6.__z_, r6.z_neg(xyzw), r6.w, r5.x
    mul_ieee r5.x___, r5.x, r6.z
    dcl_literal l226, 0x40000000, 0x40000000, 0x40000000, 0x40000000
    add r6.__z_, r6.z_neg(xyzw), l226
    div_zeroop(infinity) r5.x___, r5.x, r6.z
    dcl_literal l227, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
    mad_ieee r5.x___, r4.w, l227, r5.x_neg(xyzw)
    add r4.__z_, r4.z_neg(xyzw), r5.x
    dcl_literal l228, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r4.__z_, r4.z_neg(xyzw), l228
    mul_ieee r1.x___, r1.x, r6.y
    mul_ieee r1.x___, r4.z, r1.x
    add r4.__z_, r5.z, r5.w
    add r4.__z_, r4.w, r4.z
    dcl_literal l229, 0x44800000, 0x44800000, 0x44800000, 0x44800000
    lt r4.___w, l229, r4.z_abs
    ftoi r5.x___, r4.z_abs
    dcl_literal l230, 0x00000400, 0x00000400, 0x00000400, 0x00000400
    cmov_logical r4.___w, r4.w, l230, r5.x
    dcl_literal l231, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r4.__z_, r4.z, l231
    inegate r5.x___, r4.w
    cmov_logical r4.__z_, r4.z, r5.x, r4.w
    itof r4.___w, r4.z
    dcl_literal l232, 0x7FFFFFFF, 0x80000000, 0x7F800000, 0x007FFFFF
    and r7, r1.x, l232
    itof r1.x___, r7.w
    cmov_logical r1.x___, r7.z, r7.x, r1.x
    dcl_literal l233, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B, 0xFFFFFF6B
    iadd r5.x___, r4.z, l233
    cmov_logical r4.__z_, r7.z, r4.z, r5.x
    dcl_literal l234, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
    and r5.x_z_, r1.x, l234
    dcl_literal l235, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r5.x___, r5.x, l235
    iadd r5.x___, r5.x, r4.z
    dcl_literal l236, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r4.__z_, r4.z, l236
    iadd r1.x___, r1.x, r4.z
    dcl_literal l237, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r4.__z_, r5.x, l237
    dcl_literal l238, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r5.x___, l238, r4.z
    dcl_literal l239, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1.x___, r5.x, l239, r1.x
    dcl_literal l240, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r4.__z_, l240, r4.z_neg(xyzw)
    dcl_literal l241, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r5.x___, r5.z, l241
    dcl_literal l242, 0x00000000, 0x00000000, 0x00000017, 0x00000000
    ilt r5.__zw, l242, r4.z
    dcl_literal l243, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r5.__z_, r5.z, l243, r4.z
    dcl_literal l244, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.__z_, r4.z, l244
    dcl_literal l245, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.__z_, r4.z, l245, r5.z
    ishr r4.__z_, r5.x, r4.z
    cmov_logical r1.x___, r5.w, r4.z, r1.x
    dcl_literal l246, 0x43960000, 0x43960000, 0x43960000, 0x43960000
    lt r4.__z_, l246, r4.w
    dcl_literal l247, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1.x___, r4.z, l247, r1.x
    ior r1.x___, r7.y, r1.x
    dcl_literal l248, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    eq r4.__z_, r0.z, l248
    cmov_logical r1.x___, r4.z, r2.x, r1.x
    add r4._y__, r5.y, r4.y
    mul_ieee r0.__z_, r0.z, r4.y
    dcl_literal l249, 0x3F317218, 0x3F317218, 0x3F317218, 0x3F317218
    mad_ieee r0.__z_, r6.x, l249, r0.z
    dcl_literal l250, 0x42B17218, 0x42B17218, 0x42B17218, 0x42B17218
    lt r4._y__, l250, r0.z
    dcl_literal l251, 0x00000000, 0x00000000, 0x7F800000, 0xFF800000
    ieq r4.__zw, r0.z, l251
    ior r4._y__, r4.y, r4.z
    dcl_literal l252, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1.x___, r4.y, l252, r1.x
    dcl_literal l253, 0xC2CFF1B5, 0xC2CFF1B5, 0xC2CFF1B5, 0xC2CFF1B5
    ge r0.__z_, l253, r0.z
    ior r0.__z_, r4.w, r0.z
    dcl_literal l254, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.x___, r0.z, l254, r1.x
endif
and r0.__z_, r3.w, r1.z
dcl_literal l255, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l256, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
cmov_logical r5, r2.x, l255, l256
and r0.__z_, r0.z, r5.w
cmov_logical r0.__z_, r0.z, r4.x_neg(xyzw), r4.x
and r3, r3, r5
dcl_literal l257, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r3.x, l257, r0.z
cmov_logical r0.__z_, r3.y, r0.x, r0.z
dcl_literal l258, 0x80000000, 0x00000000, 0x80000001, 0x00000000
ieq r1.x_z_, r2.z, l258
and r1.x_z_, r5.y, r1.xxzx
dcl_literal l259, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.__z_, r1.x, l259, r0.z
dcl_literal l260, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ior r1.x___, r2.y, l260
cmov_logical r0.__z_, r1.z, r1.x, r0.z
and r0.___w, r0.w, r3.z
cmov_logical r0.__z_, r0.w, r2.y, r0.z
dcl_literal l261, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r0.___w, r0.y, l261
and r0.___w, r3.z, r0.w
cmov_logical r0.x___, r0.w, r0.x, r0.z
dcl_literal l262, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.__z_, l262, r2.w
and r0.__z_, r3.w, r0.z
dcl_literal l263, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0._y__, l263, r0.y
ior r0._y__, r0.z, r0.y
ior r0.__z_, r1.y, r1.w
ior r0._y__, r0.y, r0.z
dcl_literal l264, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r0.y, l264, r0.x
mov out0, r0
mend
__round_f32
mdef(350)_out(1)_in(1)
mov r0, in0
frc r0._y__, r0.x_abs
add r0.__z_, r0.x_abs, r0.y_neg(xyzw)
dcl_literal l0, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
lt r0._y__, r0.y, l0
dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.z, l1
cmov_logical r0._y__, r0.y, r0.z, r0.w
dcl_literal l2, 0x00000000, 0x00000000, 0x7FFFFFFF, 0x80000000
and r0.__zw, r0.x, l2
dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r1.x___, r0.z, l3
cmov_logical r0._y__, r1.x, r0.x, r0.y
dcl_literal l4, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l4
dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l5, r0.z
cmov_logical r0.x___, r0.z, r0.x, r0.y
ior r0.x___, r0.w, r0.x
mov out0, r0
mend
__rsqrt_f32
mdef(351)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000
and r0._yz_, r0.x, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.__z_, r0.z, l1
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.___w, r0.y, l2
and r0.__z_, r0.z, r0.w
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, r0.x, l3
and r0.___w, r0.w, r1.x
ior r0.__z_, r0.z, r0.w
dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l4, r0.y
ior r0.__z_, r0.z, r0.y
if_logicalnz r0.z
    
    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.__z_, r0.x, l5
    itof r0.__z_, r0.z
    
    dcl_literal l6, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r1.xy__, r0.z, l6
    
    dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.__z_, r1.x, l7
    
    dcl_literal l8, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    iadd r0.__z_, r0.z, l8
    
    dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r1.x___, r1.y, l9
    
    dcl_literal l10, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0.__z_, l10, r0.z_neg(xyzw)
    
    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r1._y__, l11, r0.z
    
    dcl_literal l12, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.__z_, r1.y, l12, r0.z
    
    dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1._y__, l13, r0.z
    ishr r1.__z_, r1.x, r0.z
    inegate r0.__z_, r0.z
    
    dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.__z_, r0.z, l14
    iadd r0.__z_, r1.x, r0.z
    cmov_logical r0.__z_, r1.y, r1.z, r0.z
    rsq_vec r0.__z_, r0.z
    
    dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    and r1.x___, r0.z, l15
    if_logicalz r1.x
        
        dcl_literal l16, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r1._y__, r0.z, l16
        itof r1._y__, r1.y
        
        dcl_literal l17, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
        and r1._yz_, r1.y, l17
        
        dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1._y__, r1.y, l18
        
        dcl_literal l19, 0x0000000C, 0x0000000C, 0x0000000C, 0x0000000C
        iadd r1._y__, r1.y, l19
        
        dcl_literal l20, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.__z_, r1.z, l20
        
        dcl_literal l21, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r1._y__, l21, r1.y_neg(xyzw)
        
        dcl_literal l22, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r1.___w, l22, r1.y
        
        dcl_literal l23, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1._y__, r1.w, l23, r1.y
        
        dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r1.___w, l24, r1.y
        ishr r2.x___, r1.z, r1.y
        inegate r1._y__, r1.y
        
        dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1._y__, r1.y, l25
        iadd r1._y__, r1.z, r1.y
        cmov_logical r1._y__, r1.w, r2.x, r1.y
    else
        
        dcl_literal l26, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r0.__z_, r0.z, l26
        
        dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.x___, r1.x, l27
        
        dcl_literal l28, 0x06000000, 0x06000000, 0x06000000, 0x06000000
        iadd r0.__z_, r0.z, l28
        
        dcl_literal l29, 0xFFFFFF8D, 0xFFFFFF8D, 0xFFFFFF8D, 0xFFFFFF8D
        iadd r1.x___, r1.x, l29
        
        dcl_literal l30, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r1.x___, l30, r1.x
        
        dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r1._y__, r1.x, l31, r0.z
    endif
    
    dcl_literal l32, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
    cmov_logical r0.__z_, r0.w, l32, r1.y
    
    dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
    ior r0.___w, r0.x, l33
    cmov_logical r0.x___, r0.y, r0.w, r0.z
else
    rsq_vec r0.x___, r0.x
endif
mov out0, r0
mend
__sabs_diff_i16
mdef(352)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
imax r0.___w, r0.w_neg(xyzw), r0.w
dcl_literal l1, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.x___, r0.w, l1
mov out0, r0
mend
__sabs_diff_i32
mdef(353)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
imin r0.___w, r0.y, r0.x
imax r1.x___, r0.y, r0.x
iadd r0.x___, r1.x, r0.w_neg(xyzw)
mov out0, r0
mend
__sabs_diff_i8
mdef(354)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
imax r0.___w, r0.w_neg(xyzw), r0.w
dcl_literal l0, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.x___, r0.w, l0
mov out0, r0
mend
__sabs_i16
mdef(355)_out(1)_in(1)
mov r0, in0
imax r0.x___, r0.x_neg(xyzw), r0.x
mov out0, r0
mend
__sabs_i32
mdef(356)_out(1)_in(1)
mov r0, in0
imax r0.x___, r0.x_neg(xyzw), r0.x
mov out0, r0
mend
__sabs_i8
mdef(357)_out(1)_in(1)
mov r0, in0
imax r0.x___, r0.x_neg(xyzw), r0.x
mov out0, r0
mend
__sadd_sat_i16
mdef(358)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y
dcl_literal l3, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000
imax r0.___w, r0.w, l3
dcl_literal l4, 0x00007FFF, 0x00007FFF, 0x00007FFF, 0x00007FFF
imin r0.x___, r0.w, l4
mov out0, r0
mend
__sadd_sat_i8
mdef(359)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y
dcl_literal l0, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80
imax r0.___w, r0.w, l0
dcl_literal l1, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
imin r1.x___, r0.w, l1
mov r0.x___, r1.x
mov out0, r0
mend
__sadd_sat_u32
mdef(360)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, l6, r0.y
ilt r1._y__, r0.w, r0.x
and r1.x___, r1.x, r1.y
dcl_literal l7, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
cmov_logical r1.x___, r1.x, l7, r0.w
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1._y__, r0.y, l8
ilt r0.___w, r0.x, r0.w
and r0.___w, r1.y, r0.w
dcl_literal l9, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.x___, r0.w, l9, r1.x
mov out0, r0
mend
__sall_i16
mdef(361)_out(1)_in(1)
mov r0, in0
dcl_literal l3, 0x00008000, 0x00008000, 0x00008000, 0x00008000
and r0.__z_, r0.x, l3
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l4, l5
mov out0, r0
mend
__sall_i32
mdef(362)_out(1)_in(1)
mov r0, in0
dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r0.x___, r0.x, l6
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l7, l8
mov out0, r0
mend
__sall_i8
mdef(363)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000080, 0x00000080, 0x00000080, 0x00000080
and r0.__z_, r0.x, l0
dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l1, l2
mov out0, r0
mend
__sany_i16
mdef(364)_out(1)_in(1)
mov r0, in0
dcl_literal l3, 0x00008000, 0x00008000, 0x00008000, 0x00008000
and r0.__z_, r0.x, l3
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l4, l5
mov out0, r0
mend
__sany_i32
mdef(365)_out(1)_in(1)
mov r0, in0
dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r0.x___, r0.x, l6
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l7, l8
mov out0, r0
mend
__sany_i8
mdef(366)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000080, 0x00000080, 0x00000080, 0x00000080
and r0.__z_, r0.x, l0
dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l1, l2
mov out0, r0
mend
__sclz_i16
mdef(367)_out(1)_in(1)
mov r0, in0
dcl_literal l10, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.x, l10
dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.___w, r0.z, l11
dcl_literal l12, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l12
dcl_literal l13, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l13
dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.___w, l14, r0.w_neg(xyzw)
dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l15
dcl_literal l16, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.___w, r0.w, l16
dcl_literal l17, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r0.___w, r0.w, l17
dcl_literal l18, 0x00000010, 0x00000010, 0x00000010, 0x00000010
cmov_logical r0.x___, r0.z, r0.w, l18
mov out0, r0
mend
__sclz_i32
mdef(368)_out(1)_in(1)
mov r0, in0
dcl_literal l19, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r0.__z_, r0.x, l19
dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.z, l20
dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.___w, r0.z, l21
dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l22
dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l23
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.___w, l24, r0.w_neg(xyzw)
dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l25
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.___w, r0.w, l26
dcl_literal l27, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r0.___w, r0.w, l27
dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010
cmov_logical r0.__z_, r0.z, r0.w, l28
dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.___w, r0.x, l29
dcl_literal l30, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1.x___, r0.w, l30
dcl_literal l31, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.x___, r1.x, l31
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l32
dcl_literal l33, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1.x___, l33, r1.x_neg(xyzw)
dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l34
dcl_literal l35, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1.x___, r1.x, l35
dcl_literal l36, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r1.x___, r1.x, l36
dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010
cmov_logical r0.___w, r0.w, r1.x, l37
dcl_literal l38, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ieq r1.x___, r0.z, l38
iadd r0.___w, r0.z, r0.w
cmov_logical r0.x___, r1.x, r0.w, r0.z
mov out0, r0
mend
__sclz_i8
mdef(369)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.x, l0
dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.___w, r0.z, l1
dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l2
dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l3
dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.___w, l4, r0.w_neg(xyzw)
dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l5
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.___w, r0.w, l6
dcl_literal l7, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r0.___w, r0.w, l7
dcl_literal l8, 0x00000010, 0x00000010, 0x00000010, 0x00000010
cmov_logical r0.__z_, r0.z, r0.w, l8
dcl_literal l9, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r0.x___, r0.z, l9
mov out0, r0
mend
__sdiv_i16
mdef(370)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l13, 0x0000FFFF, 0x0000FFFF, 0x00008000, 0x00000000
and r1.xyz_, r0.xyxx, l13
dcl_literal l14, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l14
dcl_literal l15, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
ior r1.___w, r1.x, l15
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l16, 0x00008000, 0x00008000, 0x00008000, 0x00008000
and r1.__z_, r0.w, l16
dcl_literal l17, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
ior r1.___w, r0.w, l17
cmov_logical r0.___w, r1.z, r1.w, r0.w
ixor r1.__z_, r1.x, r0.w
imax r1.x___, r1.x, r1.x_neg(xyzw)
imax r0.___w, r0.w, r0.w_neg(xyzw)
udiv r0.___w, r1.x, r0.w
inegate r1.x___, r0.w
dcl_literal l18, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r1.__z_, r1.z, l18
cmov_logical r0.___w, r1.z, r1.x, r0.w
dcl_literal l19, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.___w, r0.w, l19
dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r1.y, r0.w, l20
mov r0.x___, r0.z
mov out0, r0
mend
__sdiv_i32
mdef(371)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l25, 0, 0, 0, 0
mov r0._y__, r1.x
ilt r1.xy, r0, l25
iadd r0.xy, r0, r1
ixor r0.xy, r0, r1
udiv r0.x, r0.x, r0.y
ixor r1.x, r1.x, r1.y
iadd r0.x, r0.x, r1.x
ixor r0.x, r0.x, r1.x
mov out0, r0
mend
__sdiv_i64
mdef(372)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0.__zw, r1.yyxy
dcl_literal l1, 0x80000000, 0x80000000, 0x00000000, 0x00000000
and r1.xy__, r0.ywyy, l1
inegate r2, r0
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r1.__zw, l2, r2.zzzx
iadd r1.__zw, r1.zzzw, r2.wwwy
cmov_logical r0._y_w, r1.yyyx, r1.zzzw, r0.wwwy
cmov_logical r0.x_z_, r1.xxyx, r2.xxzx, r0.xxzx
ult r1.__z_, r0.w, r0.y
ieq r1.___w, r0.w, r0.y
ult r2.x___, r0.x, r0.z
and r2.x___, r1.w, r2.x
ior r2.x___, r1.z, r2.x
dcl_literal l3, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.x___, r2.x, l3, l4
ieq r2._y__, r0.x, r0.z
and r2._y__, r1.w, r2.y
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.x___, r2.y, l5, r2.x
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r2._yz_, r0.yyzy, l6
and r2.__z_, r2.z, r2.y
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.__z_, r2.z, l7, r0.z
dcl_literal l8, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3.xy__, r0.ywyy, l8
dcl_literal l9, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.__zw, r0.yyyw, l9
dcl_literal l10, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.___w, r0.z, l10
ior r2.___w, r3.z, r2.w
dcl_literal l11, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r2.w, l11
dcl_literal l12, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r0.z, l12
dcl_literal l13, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000
ior r4.xy__, r3.xyxx, l13
dcl_literal l14, 0xBF800000, 0xBF800000, 0x00000000, 0x00000000
add r4.xy__, r4.xyxx, l14
dcl_literal l15, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
and r4.xy__, r4.xyxx, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000
iadd r4.xy__, l16, r4.xyxx_neg(xyzw)
dcl_literal l17, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
and r4.xy__, r4.xyxx, l17
dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.xy__, r4.xyxx, l18
dcl_literal l19, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
iadd r4.xy__, r4.xyxx, l19
dcl_literal l20, 0x00000017, 0x00000017, 0x00000000, 0x00000000
cmov_logical r3.xy__, r3.xyxx, r4.xyxx, l20
dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r2.w, l21
dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l22
dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l23
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l24, r4.x_neg(xyzw)
dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l25
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l26
dcl_literal l27, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l27
dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r2.___w, r2.w, r4.x, l28
dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.z, l29
dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l30
dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l31
dcl_literal l32, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l32, r4.x_neg(xyzw)
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l33
dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l34
dcl_literal l35, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.x___, r4.x, l35
dcl_literal l36, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r4.x, l36
dcl_literal l37, 0x00000017, 0x00000017, 0x00000000, 0x00000000
ieq r4.xy__, r3.xyxx, l37
iadd r2.___w, r3.x, r2.w
cmov_logical r3.x___, r4.x, r2.w, r3.x
dcl_literal l38, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.x___, r2.w, l38
iadd r2.___w, r2.w, r3.z
cmov_logical r2.___w, r4.x, r2.w, r3.x
dcl_literal l39, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r3.x___, r2.w, l39
dcl_literal l40, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.__z_, r2.w, l40
dcl_literal l41, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F
cmov_logical r3.x___, r3.x, r3.z, l41
ult r3.__z_, r0.x, r0.z
and r3.__z_, r1.w, r3.z
ior r1.__z_, r1.z, r3.z
dcl_literal l42, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l43, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.__z_, r1.z, l42, l43
ieq r3.__z_, r0.x, r0.z
and r1.___w, r1.w, r3.z
dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.w, l44, r1.z
dcl_literal l45, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r1.___w, r0.x, l45
ior r1.___w, r3.w, r1.w
dcl_literal l46, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.___w, r1.w, l46
dcl_literal l47, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r0.x, l47
dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r1.w, l48
dcl_literal l49, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l49
dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l50
dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l51, r3.w_neg(xyzw)
dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l52
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l53
dcl_literal l54, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l54
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.___w, r1.w, r3.w, l55
dcl_literal l56, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l56
dcl_literal l57, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l57
dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l58
dcl_literal l59, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l59, r3.w_neg(xyzw)
dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l60
dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l61
dcl_literal l62, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l62
dcl_literal l63, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l63
iadd r1.___w, r3.y, r1.w
cmov_logical r3._y__, r4.y, r1.w, r3.y
dcl_literal l64, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r1.w, l64
iadd r1.___w, r1.w, r3.z
cmov_logical r1.___w, r3.w, r1.w, r3.y
ilt r3._y__, r1.w, r2.w
ieq r3.__z_, r2.w, r1.w
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l65
and r1.__z_, r3.z, r1.z
ior r1.__z_, r3.y, r1.z
iadd r3._y__, r2.w, r1.w_neg(xyzw)
dcl_literal l66, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.__z_, r1.z, r3.y, l66
ilt r3._y__, r3.x, r1.z
iadd r3.__z_, r1.z, r3.x_neg(xyzw)
and r3._y__, r3.y, r3.z
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r3.__z_, r1.z, l67
dcl_literal l68, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3._y__, r3.z, l68, r3.y
dcl_literal l69, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l69
if_logicalnz r1.z
    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r3.y, l70
    dcl_literal l71, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r3.y, l71
    cmov_logical r3.___w, r3.z, r3.w, r3.y
    dcl_literal l72, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r3.y, l72
    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4._y__, l73, r3.w_neg(xyzw)
    ushr r4._y__, r0.z, r4.y
    ishl r3.___w, r0.z, r3.w
    ishl r4.x___, r0.y, r4.x
    ior r4.x___, r4.y, r4.x
    cmov_logical r4.x___, r3.z, r0.z, r4.x
    dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.__z_, r3.z, l74, r3.w
    cmov_logical r3.___w, r3.y, r4.x, r0.y
    cmov_logical r3.__z_, r3.y, r3.z, r0.z
    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.x___, r1.w, l75
    dcl_literal l76, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4._y__, r1.w, l76
    cmov_logical r4._y__, r4.x, r4.y, r1.w
    dcl_literal l77, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.__z_, r1.w, l77
    dcl_literal l78, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4._y__, l78, r4.y_neg(xyzw)
    ushr r4.___w, r0.x, r4.y
    ishl r5.x___, r0.w, r4.z
    ior r4.___w, r4.w, r5.x
    cmov_logical r4.___w, r4.x, r0.x, r4.w
    cmov_logical r4.___w, r1.w, r4.w, r0.w
    ushr r4._y__, r3.z, r4.y
    ishl r4.__z_, r3.w, r4.z
    ior r4._y__, r4.y, r4.z
    cmov_logical r4.x___, r4.x, r3.z, r4.y
    cmov_logical r1.___w, r1.w, r4.x, r3.w
    udiv r4.x___, r4.w, r1.w
    umul r4._y__, r4.x, r1.w
    ilt r4.__z_, r4.w, r4.y
    iadd r5.x___, r4.y, r4.w_neg(xyzw)
    iadd r5.x___, r5.x, r1.w
    dcl_literal l79, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.x___, r5.x, l79
    iadd r4._y__, r4.w, r4.y_neg(xyzw)
    cmov_logical r4._y__, r4.z, r5.x, r4.y
    udiv r1.___w, r4.y, r1.w
    iadd r4._y__, r4.x, r1.w_neg(xyzw)
    iadd r1.___w, r4.x, r1.w
    cmov_logical r1.___w, r4.z, r4.y, r1.w
    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.z, l80
    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r3.z, l81
    dcl_literal l82, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r1.w, l82
    dcl_literal l83, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r1.w, l83
    umul r5.x___, r4.y, r4.w
    umul r4._y__, r4.y, r4.z
    umul r5._y__, r4.x, r4.w
    umul r4.x___, r4.x, r4.z
    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r4.x, l84
    dcl_literal l85, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.y, l85
    iadd r5.__z_, r5.z, r5.w
    iadd r4._y__, r4.y, r5.z
    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r4.y, l86
    iadd r5.x___, r5.x, r5.z
    dcl_literal l87, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r5.y, l87
    iadd r5.x___, r5.x, r5.y
    dcl_literal l88, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4._y__, r4.y, l88
    dcl_literal l89, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r4.x, l89
    ior r4.x___, r4.y, r4.x
    dcl_literal l90, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r3.w, l90
    dcl_literal l91, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r3.w, l91
    umul r5._y__, r5.y, r4.z
    umul r4._y_w, r4.y, r4.zzzw
    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r4.y, l92
    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r4.w, l93
    iadd r4.__z_, r4.z, r4.w
    iadd r4.__z_, r5.y, r4.z
    dcl_literal l94, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.__z_, r4.z, l94
    dcl_literal l95, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r4.y, l95
    ior r4._y__, r4.z, r4.y
    iadd r4.__z_, r4.y, r5.x
    ult r4._y__, r4.z, r4.y
    ult r4.___w, r0.w, r4.z
    ieq r5.x___, r0.w, r4.z
    ult r5._y__, r0.x, r4.x
    and r5._y__, r5.x, r5.y
    ior r4.___w, r4.w, r5.y
    dcl_literal l96, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l97, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4.___w, r4.w, l96, l97
    ieq r5._y__, r0.x, r4.x
    and r5.x___, r5.x, r5.y
    dcl_literal l98, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.___w, r5.x, l98, r4.w
    dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.___w, r4.w, l99
    ior r4._y__, r4.y, r4.w
    dcl_literal l100, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.___w, r1.w, l100
    cmov_logical r1.___w, r4.y, r4.w, r1.w
    iadd r3.__z_, r4.x, r3.z_neg(xyzw)
    ult r4.___w, r4.x, r3.z
    iadd r4.___w, r4.z, r4.w
    iadd r3.___w, r4.w, r3.w_neg(xyzw)
    cmov_logical r3.__zw, r4.y, r3.zzzw, r4.xxxz
    iadd r4._y__, r0.x, r3.z_neg(xyzw)
    ult r3.__z_, r0.x, r4.y
    iadd r3.__z_, r0.w, r3.z
    iadd r4.x___, r3.z, r3.w_neg(xyzw)
else
    mov r4.xy__, r0.wxww
    dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r1.___w, l101
endif
ult r3.__z_, r4.x, r0.y
ieq r3.___w, r4.x, r0.y
ult r4.__z_, r4.y, r0.z
and r4.__z_, r3.w, r4.z
ior r3.__z_, r3.z, r4.z
dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l103, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r3.__z_, r3.z, l102, l103
ieq r4.__z_, r4.y, r0.z
and r3.___w, r3.w, r4.z
dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.__z_, r3.w, l104, r3.z
dcl_literal l105, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.___w, r4.x, l105
dcl_literal l106, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r4.__z_, r4.x, l106
dcl_literal l107, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r4.___w, r4.y, l107
ior r3.___w, r3.w, r4.w
dcl_literal l108, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.___w, r3.w, l108
dcl_literal l109, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r4.___w, r4.y, l109
dcl_literal l110, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.z, l110
dcl_literal l111, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l111
dcl_literal l112, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l112
dcl_literal l113, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l113, r5.x_neg(xyzw)
dcl_literal l114, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l114
dcl_literal l115, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l115
dcl_literal l116, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.x___, r5.x, l116
dcl_literal l117, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.__z_, r4.z, r5.x, l117
dcl_literal l118, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r3.w, l118
dcl_literal l119, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l119
dcl_literal l120, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l120
dcl_literal l121, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l121, r5.x_neg(xyzw)
dcl_literal l122, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l122
dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l123
dcl_literal l124, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.x___, r5.x, l124
dcl_literal l125, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.___w, r3.w, r5.x, l125
dcl_literal l126, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.w, l126
dcl_literal l127, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l127
dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l128
dcl_literal l129, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l129, r5.x_neg(xyzw)
dcl_literal l130, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l130
dcl_literal l131, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l131
dcl_literal l132, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r5.x___, r5.x, l132
dcl_literal l133, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r4.___w, r4.w, r5.x, l133
dcl_literal l134, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r5.x___, r4.z, l134
iadd r3.___w, r4.z, r3.w
cmov_logical r4.__z_, r5.x, r3.w, r4.z
dcl_literal l135, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r5.x___, r3.w, l135
iadd r3.___w, r3.w, r4.w
cmov_logical r3.___w, r5.x, r3.w, r4.z
ilt r4.__z_, r3.w, r2.w
ieq r4.___w, r2.w, r3.w
dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r3.__z_, r3.z, l136
and r3.__z_, r4.w, r3.z
ior r3.__z_, r4.z, r3.z
and r1.__z_, r1.z, r3.z
iadd r3.__z_, r2.w, r3.w_neg(xyzw)
dcl_literal l137, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.__z_, r1.z, r3.z, l137
ilt r3.__z_, r3.x, r1.z
iadd r4.__z_, r1.z, r3.x_neg(xyzw)
and r3.__z_, r3.z, r4.z
dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r4.__z_, r1.z, l138
dcl_literal l139, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.__z_, r4.z, l139, r3.z
dcl_literal l140, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l140
if_logicalnz r1.z
    dcl_literal l141, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.__z_, r3.z, l141
    dcl_literal l142, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.___w, r3.z, l142
    cmov_logical r4.___w, r4.z, r4.w, r3.z
    dcl_literal l143, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r3.z, l143
    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5._y__, l144, r4.w_neg(xyzw)
    ushr r5._y__, r0.z, r5.y
    ishl r4.___w, r0.z, r4.w
    ishl r5.x___, r0.y, r5.x
    ior r5.x___, r5.y, r5.x
    cmov_logical r5.x___, r4.z, r0.z, r5.x
    dcl_literal l145, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.__z_, r4.z, l145, r4.w
    cmov_logical r4.___w, r3.z, r5.x, r0.y
    cmov_logical r4.__z_, r3.z, r4.z, r0.z
    dcl_literal l146, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r5.x___, r3.w, l146
    dcl_literal l147, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5._y__, r3.w, l147
    cmov_logical r5._y__, r5.x, r5.y, r3.w
    dcl_literal l148, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.__z_, r3.w, l148
    dcl_literal l149, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5._y__, l149, r5.y_neg(xyzw)
    ushr r5.___w, r4.y, r5.y
    ishl r6.x___, r4.x, r5.z
    ior r5.___w, r5.w, r6.x
    cmov_logical r5.___w, r5.x, r4.y, r5.w
    cmov_logical r5.___w, r3.w, r5.w, r4.x
    ushr r5._y__, r4.z, r5.y
    ishl r5.__z_, r4.w, r5.z
    ior r5._y__, r5.y, r5.z
    cmov_logical r5.x___, r5.x, r4.z, r5.y
    cmov_logical r3.___w, r3.w, r5.x, r4.w
    udiv r5.x___, r5.w, r3.w
    umul r5._y__, r5.x, r3.w
    ilt r5.__z_, r5.w, r5.y
    iadd r6.x___, r5.y, r5.w_neg(xyzw)
    iadd r6.x___, r6.x, r3.w
    dcl_literal l150, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6.x___, r6.x, l150
    iadd r5._y__, r5.w, r5.y_neg(xyzw)
    cmov_logical r5._y__, r5.z, r6.x, r5.y
    udiv r3.___w, r5.y, r3.w
    iadd r5._y__, r5.x, r3.w_neg(xyzw)
    iadd r3.___w, r5.x, r3.w
    cmov_logical r3.___w, r5.z, r5.y, r3.w
    dcl_literal l151, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r4.z, l151
    dcl_literal l152, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r4.z, l152
    dcl_literal l153, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r3.w, l153
    dcl_literal l154, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r3.w, l154
    umul r6.x___, r5.y, r5.w
    umul r5._y__, r5.y, r5.z
    umul r6._y__, r5.x, r5.w
    umul r5.x___, r5.x, r5.z
    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.__z_, r5.x, l155
    dcl_literal l156, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.___w, r6.y, l156
    iadd r6.__z_, r6.z, r6.w
    iadd r5._y__, r5.y, r6.z
    dcl_literal l157, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.__z_, r5.y, l157
    iadd r6.x___, r6.x, r6.z
    dcl_literal l158, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r6.y, l158
    iadd r6.x___, r6.x, r6.y
    dcl_literal l159, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5._y__, r5.y, l159
    dcl_literal l160, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l160
    ior r5.x___, r5.y, r5.x
    dcl_literal l161, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l161
    dcl_literal l162, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r4.w, l162
    umul r6._y__, r6.y, r5.z
    umul r5._y_w, r5.y, r5.zzzw
    dcl_literal l163, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r5.y, l163
    dcl_literal l164, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.w, l164
    iadd r5.__z_, r5.z, r5.w
    iadd r5.__z_, r6.y, r5.z
    dcl_literal l165, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5.__z_, r5.z, l165
    dcl_literal l166, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r5.y, l166
    ior r5._y__, r5.z, r5.y
    iadd r5.__z_, r5.y, r6.x
    ult r5._y__, r5.z, r5.y
    ult r5.___w, r4.x, r5.z
    ieq r6.x___, r4.x, r5.z
    ult r6._y__, r4.y, r5.x
    and r6._y__, r6.x, r6.y
    ior r5.___w, r5.w, r6.y
    dcl_literal l167, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l168, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r5.___w, r5.w, l167, l168
    ieq r6._y__, r4.y, r5.x
    and r6.x___, r6.x, r6.y
    dcl_literal l169, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r5.___w, r6.x, l169, r5.w
    dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5.___w, r5.w, l170
    ior r5._y__, r5.y, r5.w
    dcl_literal l171, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.___w, r3.w, l171
    cmov_logical r3.___w, r5.y, r5.w, r3.w
    iadd r4.__z_, r5.x, r4.z_neg(xyzw)
    ult r5.___w, r5.x, r4.z
    iadd r5.___w, r5.z, r5.w
    iadd r4.___w, r5.w, r4.w_neg(xyzw)
    cmov_logical r4.__zw, r5.y, r4.zzzw, r5.xxxz
    iadd r4.__z_, r4.y, r4.z_neg(xyzw)
    ult r5.x___, r4.y, r4.z
    iadd r5.x___, r4.x, r5.x
    iadd r4.x___, r5.x, r4.w_neg(xyzw)
    mov r4.xy__, r4.xzxx
else
    dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r3.___w, l172
endif
ult r4.__z_, r4.x, r0.y
ieq r4.___w, r4.x, r0.y
ult r5.x___, r4.y, r0.z
and r5.x___, r4.w, r5.x
ior r4.__z_, r4.z, r5.x
dcl_literal l173, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l174, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r4.__z_, r4.z, l173, l174
ieq r5.x___, r4.y, r0.z
and r4.___w, r4.w, r5.x
dcl_literal l175, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.__z_, r4.w, l175, r4.z
dcl_literal l176, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r4.___w, r4.x, l176
dcl_literal l177, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r5.x___, r4.x, l177
dcl_literal l178, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r5._y__, r4.y, l178
ior r4.___w, r4.w, r5.y
dcl_literal l179, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r4.___w, r4.w, l179
dcl_literal l180, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r5._y__, r4.y, l180
dcl_literal l181, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r5.x, l181
dcl_literal l182, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l182
dcl_literal l183, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l183
dcl_literal l184, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l184, r5.z_neg(xyzw)
dcl_literal l185, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l185
dcl_literal l186, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l186
dcl_literal l187, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.__z_, r5.z, l187
dcl_literal l188, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r5.x___, r5.x, r5.z, l188
dcl_literal l189, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r4.w, l189
dcl_literal l190, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l190
dcl_literal l191, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l191
dcl_literal l192, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l192, r5.z_neg(xyzw)
dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l193
dcl_literal l194, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l194
dcl_literal l195, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.__z_, r5.z, l195
dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.___w, r4.w, r5.z, l196
dcl_literal l197, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r5.y, l197
dcl_literal l198, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l198
dcl_literal l199, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l199
dcl_literal l200, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l200, r5.z_neg(xyzw)
dcl_literal l201, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l201
dcl_literal l202, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l202
dcl_literal l203, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r5.__z_, r5.z, l203
dcl_literal l204, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r5._y__, r5.y, r5.z, l204
dcl_literal l205, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r5.__z_, r5.x, l205
iadd r4.___w, r5.x, r4.w
cmov_logical r5.x___, r5.z, r4.w, r5.x
dcl_literal l206, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r5.__z_, r4.w, l206
iadd r4.___w, r4.w, r5.y
cmov_logical r4.___w, r5.z, r4.w, r5.x
ilt r5.x___, r4.w, r2.w
ieq r5._y__, r2.w, r4.w
dcl_literal l207, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r4.__z_, r4.z, l207
and r4.__z_, r5.y, r4.z
ior r4.__z_, r5.x, r4.z
and r1.__z_, r1.z, r4.z
iadd r4.__z_, r2.w, r4.w_neg(xyzw)
dcl_literal l208, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.__z_, r1.z, r4.z, l208
ilt r4.__z_, r3.x, r1.z
iadd r5.x___, r1.z, r3.x_neg(xyzw)
and r4.__z_, r4.z, r5.x
dcl_literal l209, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r5.x___, r1.z, l209
dcl_literal l210, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.__z_, r5.x, l210, r4.z
dcl_literal l211, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l211
if_logicalnz r1.z
    dcl_literal l212, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r5.x___, r4.z, l212
    dcl_literal l213, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5._y__, r4.z, l213
    cmov_logical r5._y__, r5.x, r5.y, r4.z
    dcl_literal l214, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.__z_, r4.z, l214
    dcl_literal l215, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.___w, l215, r5.y_neg(xyzw)
    ushr r5.___w, r0.z, r5.w
    ishl r5._y__, r0.z, r5.y
    ishl r5.__z_, r0.y, r5.z
    ior r5.__z_, r5.w, r5.z
    cmov_logical r5.__z_, r5.x, r0.z, r5.z
    dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r5.x___, r5.x, l216, r5.y
    cmov_logical r5.xy__, r4.z, r5.xzxx, r0.zyzz
    dcl_literal l217, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r5.__z_, r4.w, l217
    dcl_literal l218, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5.___w, r4.w, l218
    cmov_logical r5.___w, r5.z, r5.w, r4.w
    dcl_literal l219, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r6.x___, r4.w, l219
    dcl_literal l220, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.___w, l220, r5.w_neg(xyzw)
    ushr r6._y__, r4.y, r5.w
    ishl r6.__z_, r4.x, r6.x
    ior r6._y__, r6.y, r6.z
    cmov_logical r6._y__, r5.z, r4.y, r6.y
    cmov_logical r6._y__, r4.w, r6.y, r4.x
    ushr r5.___w, r5.x, r5.w
    ishl r6.x___, r5.y, r6.x
    ior r5.___w, r5.w, r6.x
    cmov_logical r5.__z_, r5.z, r5.x, r5.w
    cmov_logical r4.___w, r4.w, r5.z, r5.y
    udiv r5.__z_, r6.y, r4.w
    umul r5.___w, r5.z, r4.w
    ilt r6.x___, r6.y, r5.w
    iadd r6.__z_, r5.w, r6.y_neg(xyzw)
    iadd r6.__z_, r6.z, r4.w
    dcl_literal l221, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6.__z_, r6.z, l221
    iadd r5.___w, r6.y, r5.w_neg(xyzw)
    cmov_logical r5.___w, r6.x, r6.z, r5.w
    udiv r4.___w, r5.w, r4.w
    iadd r5.___w, r5.z, r4.w_neg(xyzw)
    iadd r4.___w, r5.z, r4.w
    cmov_logical r4.___w, r6.x, r5.w, r4.w
    dcl_literal l222, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r5.x, l222
    dcl_literal l223, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r5.x, l223
    dcl_literal l224, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.x___, r4.w, l224
    dcl_literal l225, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r4.w, l225
    umul r6.__z_, r5.w, r6.y
    umul r5.___w, r5.w, r6.x
    umul r6.___w, r5.z, r6.y
    umul r5.__z_, r5.z, r6.x
    dcl_literal l226, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r7.x___, r5.z, l226
    dcl_literal l227, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r7._y__, r6.w, l227
    iadd r7.x___, r7.x, r7.y
    iadd r5.___w, r5.w, r7.x
    dcl_literal l228, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r7.x___, r5.w, l228
    iadd r6.__z_, r6.z, r7.x
    dcl_literal l229, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.___w, r6.w, l229
    iadd r6.__z_, r6.z, r6.w
    dcl_literal l230, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5.___w, r5.w, l230
    dcl_literal l231, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r5.z, l231
    ior r5.__z_, r5.w, r5.z
    dcl_literal l232, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.y, l232
    dcl_literal l233, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.___w, r5.y, l233
    umul r6.___w, r6.w, r6.x
    umul r6._y__, r5.w, r6.y
    umul r5.___w, r5.w, r6.x
    dcl_literal l234, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.x___, r5.w, l234
    dcl_literal l235, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6._y__, r6.y, l235
    iadd r6.x___, r6.x, r6.y
    iadd r6.x___, r6.w, r6.x
    dcl_literal l236, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r6.x___, r6.x, l236
    dcl_literal l237, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.w, l237
    ior r5.___w, r6.x, r5.w
    iadd r6.x___, r5.w, r6.z
    ult r5.___w, r6.x, r5.w
    ult r6._y__, r4.x, r6.x
    ieq r6.__z_, r4.x, r6.x
    ult r6.___w, r4.y, r5.z
    and r6.___w, r6.z, r6.w
    ior r6._y__, r6.y, r6.w
    dcl_literal l238, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l239, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r6._y__, r6.y, l238, l239
    ieq r6.___w, r4.y, r5.z
    and r6.__z_, r6.z, r6.w
    dcl_literal l240, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r6._y__, r6.z, l240, r6.y
    dcl_literal l241, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r6._y__, r6.y, l241
    ior r5.___w, r5.w, r6.y
    dcl_literal l242, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6._y__, r4.w, l242
    cmov_logical r4.___w, r5.w, r6.y, r4.w
    iadd r5.x___, r5.z, r5.x_neg(xyzw)
    ult r6._y__, r5.z, r5.x
    iadd r6._y__, r6.x, r6.y
    iadd r5._y__, r6.y, r5.y_neg(xyzw)
    cmov_logical r5._y__, r5.w, r5.y, r6.x
    cmov_logical r5.x___, r5.w, r5.x, r5.z
    iadd r5.x___, r4.y, r5.x_neg(xyzw)
    ult r5.__z_, r4.y, r5.x
    iadd r5.__z_, r4.x, r5.z
    iadd r4.x___, r5.z, r5.y_neg(xyzw)
    mov r4._y__, r5.x
else
    dcl_literal l243, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r4.___w, l243
endif
ult r5.x___, r4.x, r0.y
ieq r5._y__, r4.x, r0.y
ult r5.__z_, r4.y, r0.z
and r5.__z_, r5.y, r5.z
ior r5.x___, r5.x, r5.z
dcl_literal l244, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l245, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r5.x___, r5.x, l244, l245
ieq r5.__z_, r4.y, r0.z
and r5._y__, r5.y, r5.z
dcl_literal l246, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r5.x___, r5.y, l246, r5.x
dcl_literal l247, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r5._y__, r4.x, l247
dcl_literal l248, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r5.__z_, r4.x, l248
dcl_literal l249, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r5.___w, r4.y, l249
ior r5._y__, r5.y, r5.w
dcl_literal l250, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r5._y__, r5.y, l250
dcl_literal l251, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r5.___w, r4.y, l251
dcl_literal l252, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r6.x___, r5.z, l252
dcl_literal l253, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r6.x___, r6.x, l253
dcl_literal l254, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l254
dcl_literal l255, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r6.x___, l255, r6.x_neg(xyzw)
dcl_literal l256, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l256
dcl_literal l257, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r6.x___, r6.x, l257
dcl_literal l258, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r6.x___, r6.x, l258
dcl_literal l259, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r5.__z_, r5.z, r6.x, l259
dcl_literal l260, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r6.x___, r5.y, l260
dcl_literal l261, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r6.x___, r6.x, l261
dcl_literal l262, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l262
dcl_literal l263, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r6.x___, l263, r6.x_neg(xyzw)
dcl_literal l264, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l264
dcl_literal l265, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r6.x___, r6.x, l265
dcl_literal l266, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r6.x___, r6.x, l266
dcl_literal l267, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r5._y__, r5.y, r6.x, l267
dcl_literal l268, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r6.x___, r5.w, l268
dcl_literal l269, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r6.x___, r6.x, l269
dcl_literal l270, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l270
dcl_literal l271, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r6.x___, l271, r6.x_neg(xyzw)
dcl_literal l272, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r6.x___, r6.x, l272
dcl_literal l273, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r6.x___, r6.x, l273
dcl_literal l274, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r6.x___, r6.x, l274
dcl_literal l275, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r5.___w, r5.w, r6.x, l275
dcl_literal l276, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r6.x___, r5.z, l276
iadd r5._y__, r5.z, r5.y
cmov_logical r5.__z_, r6.x, r5.y, r5.z
dcl_literal l277, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r6.x___, r5.y, l277
iadd r5._y__, r5.y, r5.w
cmov_logical r5._y__, r6.x, r5.y, r5.z
ilt r5.__z_, r5.y, r2.w
ieq r5.___w, r2.w, r5.y
dcl_literal l278, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r5.x___, r5.x, l278
and r5.x___, r5.w, r5.x
ior r5.x___, r5.z, r5.x
and r1.__z_, r1.z, r5.x
iadd r2.___w, r2.w, r5.y_neg(xyzw)
dcl_literal l279, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.__z_, r1.z, r2.w, l279
ilt r2.___w, r3.x, r1.z
iadd r3.x___, r1.z, r3.x_neg(xyzw)
and r2.___w, r2.w, r3.x
dcl_literal l280, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r3.x___, r1.z, l280
dcl_literal l281, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r3.x, l281, r2.w
dcl_literal l282, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.__z_, r1.z, l282
if_logicalnz r1.z
    dcl_literal l283, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r1.__z_, r2.w, l283
    dcl_literal l284, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.x___, r2.w, l284
    cmov_logical r3.x___, r1.z, r3.x, r2.w
    dcl_literal l285, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r2.w, l285
    dcl_literal l286, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.__z_, l286, r3.x_neg(xyzw)
    ushr r5.__z_, r0.z, r5.z
    ishl r3.x___, r0.z, r3.x
    ishl r5.x___, r0.y, r5.x
    ior r5.x___, r5.z, r5.x
    cmov_logical r5.x___, r1.z, r0.z, r5.x
    dcl_literal l287, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.__z_, r1.z, l287, r3.x
    cmov_logical r0._y__, r2.w, r5.x, r0.y
    cmov_logical r1.__z_, r2.w, r1.z, r0.z
    dcl_literal l288, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.x___, r5.y, l288
    dcl_literal l289, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5.x___, r5.y, l289
    cmov_logical r5.x___, r3.x, r5.x, r5.y
    dcl_literal l290, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.__z_, r5.y, l290
    dcl_literal l291, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.x___, l291, r5.x_neg(xyzw)
    ushr r5.___w, r4.y, r5.x
    ishl r6.x___, r4.x, r5.z
    ior r5.___w, r5.w, r6.x
    cmov_logical r5.___w, r3.x, r4.y, r5.w
    cmov_logical r5.___w, r5.y, r5.w, r4.x
    ushr r5.x___, r1.z, r5.x
    ishl r5.__z_, r0.y, r5.z
    ior r5.x___, r5.x, r5.z
    cmov_logical r3.x___, r3.x, r1.z, r5.x
    cmov_logical r3.x___, r5.y, r3.x, r0.y
    udiv r5.x___, r5.w, r3.x
    umul r5._y__, r5.x, r3.x
    ilt r5.__z_, r5.w, r5.y
    iadd r6.x___, r5.y, r5.w_neg(xyzw)
    iadd r6.x___, r6.x, r3.x
    dcl_literal l292, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6.x___, r6.x, l292
    iadd r5._y__, r5.w, r5.y_neg(xyzw)
    cmov_logical r5._y__, r5.z, r6.x, r5.y
    udiv r3.x___, r5.y, r3.x
    iadd r5._y__, r5.x, r3.x_neg(xyzw)
    iadd r3.x___, r5.x, r3.x
    cmov_logical r3.x___, r5.z, r5.y, r3.x
    dcl_literal l293, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r1.z, l293
    dcl_literal l294, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r1.__z_, r1.z, l294
    dcl_literal l295, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r3.x, l295
    dcl_literal l296, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r3.x, l296
    umul r5.___w, r1.z, r5.z
    umul r1.__z_, r1.z, r5.y
    umul r6.x___, r5.x, r5.z
    umul r5.x___, r5.x, r5.y
    dcl_literal l297, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r5.x, l297
    dcl_literal l298, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.__z_, r6.x, l298
    iadd r6._y__, r6.y, r6.z
    iadd r1.__z_, r1.z, r6.y
    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r1.z, l299
    iadd r5.___w, r5.w, r6.y
    dcl_literal l300, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.x___, r6.x, l300
    iadd r5.___w, r5.w, r6.x
    dcl_literal l301, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r1.__z_, r1.z, l301
    dcl_literal l302, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l302
    ior r1.__z_, r1.z, r5.x
    dcl_literal l303, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r0.y, l303
    dcl_literal l304, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r0._y__, r0.y, l304
    umul r0._y__, r0.y, r5.y
    umul r5.x_z_, r5.x, r5.yyzy
    dcl_literal l305, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r5.x, l305
    dcl_literal l306, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r5.z, l306
    iadd r5._y__, r5.y, r5.z
    iadd r0._y__, r0.y, r5.y
    dcl_literal l307, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r0._y__, r0.y, l307
    dcl_literal l308, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l308
    ior r0._y__, r0.y, r5.x
    iadd r5.x___, r0.y, r5.w
    ult r0._y__, r5.x, r0.y
    ult r5._y__, r4.x, r5.x
    ieq r4.x___, r4.x, r5.x
    ult r5.x___, r4.y, r1.z
    and r5.x___, r4.x, r5.x
    ior r5.x___, r5.y, r5.x
    dcl_literal l309, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l310, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r5.x___, r5.x, l309, l310
    ieq r1.__z_, r4.y, r1.z
    and r1.__z_, r4.x, r1.z
    dcl_literal l311, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.__z_, r1.z, l311, r5.x
    dcl_literal l312, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.__z_, r1.z, l312
    ior r0._y__, r0.y, r1.z
    dcl_literal l313, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r1.__z_, r3.x, l313
    cmov_logical r0._y__, r0.y, r1.z, r3.x
else
    dcl_literal l314, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0._y__, l314
endif
dcl_literal l315, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r3.y, l315
dcl_literal l316, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.x___, r3.y, l316
cmov_logical r3.x___, r1.z, r3.x, r3.y
dcl_literal l317, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r4.x___, l317, r3.x_neg(xyzw)
ushr r4.x___, r1.w, r4.x
ishl r3.x___, r1.w, r3.x
cmov_logical r4.x___, r1.z, r1.w, r4.x
dcl_literal l318, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.z, l318, r3.x
dcl_literal l319, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r3.y, r4.x, l319
cmov_logical r1.__z_, r3.y, r1.z, r1.w
dcl_literal l320, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.___w, r3.z, l320
dcl_literal l321, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3._y__, r3.z, l321
cmov_logical r3._y__, r1.w, r3.y, r3.z
dcl_literal l322, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r4.x___, l322, r3.y_neg(xyzw)
ushr r4.x___, r3.w, r4.x
ishl r3._y__, r3.w, r3.y
cmov_logical r4.x___, r1.w, r3.w, r4.x
dcl_literal l323, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.___w, r1.w, l323, r3.y
dcl_literal l324, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3._y__, r3.z, r4.x, l324
cmov_logical r1.___w, r3.z, r1.w, r3.w
iadd r1.___w, r1.z, r1.w
ult r1.__z_, r1.w, r1.z
dcl_literal l325, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r1.z, l325
iadd r1.__z_, r3.x, r1.z
iadd r1.__z_, r3.y, r1.z
dcl_literal l326, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r3.x___, r4.z, l326
dcl_literal l327, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3._y__, r4.z, l327
cmov_logical r3._y__, r3.x, r3.y, r4.z
dcl_literal l328, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.__z_, l328, r3.y_neg(xyzw)
ushr r3.__z_, r4.w, r3.z
ishl r3._y__, r4.w, r3.y
cmov_logical r3.__z_, r3.x, r4.w, r3.z
dcl_literal l329, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r3.x, l329, r3.y
dcl_literal l330, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3._y__, r4.z, r3.z, l330
cmov_logical r3.x___, r4.z, r3.x, r4.w
iadd r3.x___, r1.w, r3.x
ult r1.___w, r3.x, r1.w
dcl_literal l331, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.___w, r1.w, l331
iadd r1.__z_, r1.z, r1.w
iadd r1.__z_, r3.y, r1.z
dcl_literal l332, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.___w, r2.w, l332
dcl_literal l333, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3._y__, r2.w, l333
cmov_logical r3._y__, r1.w, r3.y, r2.w
dcl_literal l334, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.__z_, l334, r3.y_neg(xyzw)
ushr r3.__z_, r0.y, r3.z
ishl r3._y__, r0.y, r3.y
cmov_logical r3.__z_, r1.w, r0.y, r3.z
dcl_literal l335, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.___w, r1.w, l335, r3.y
dcl_literal l336, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3._y__, r2.w, r3.z, l336
cmov_logical r0._y__, r2.w, r1.w, r0.y
iadd r0._y__, r3.x, r0.y
ult r1.___w, r0.y, r3.x
dcl_literal l337, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.___w, r1.w, l337
iadd r1.__z_, r1.z, r1.w
iadd r1.__z_, r3.y, r1.z
dcl_literal l338, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.___w, r2.x, l338
dcl_literal l339, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.w, l339, r1.z
dcl_literal l340, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r1.w, l340, r0.y
dcl_literal l341, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ieq r0.__z_, r0.z, l341
and r0.__z_, r2.y, r0.z
cmov_logical r0.___w, r0.z, r0.w, r1.z
cmov_logical r0.x___, r0.z, r0.x, r0.y
dcl_literal l342, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r2.z, l342, r0.xwxx
inegate r0.__z_, r0.x
dcl_literal l343, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r0.___w, l343, r0.z
iadd r0.___w, r0.w, r0.y_neg(xyzw)
ixor r1.x___, r1.y, r1.x
cmov_logical r0.xy__, r1.x, r0.zwzz, r0.xyxx
mov out0, r0
mend
__sdiv_i8
mdef(373)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l1, 0x000000FF, 0x000000FF, 0x00000080, 0x00000000
and r1.xyz_, r0.xyxx, l1
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l2
dcl_literal l3, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00
ior r1.___w, r1.x, l3
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l4, 0x00000080, 0x00000080, 0x00000080, 0x00000080
and r1.__z_, r0.w, l4
dcl_literal l5, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00
ior r1.___w, r0.w, l5
cmov_logical r0.___w, r1.z, r1.w, r0.w
ixor r1.__z_, r1.x, r0.w
imax r1.x___, r1.x, r1.x_neg(xyzw)
imax r0.___w, r0.w, r0.w_neg(xyzw)
udiv r0.___w, r1.x, r0.w
inegate r1.x___, r0.w
dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r1.__z_, r1.z, l6
cmov_logical r0.___w, r1.z, r1.x, r0.w
dcl_literal l7, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.___w, r0.w, l7
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r1.y, r0.w, l8
mov r0.x___, r0.z
mov out0, r0
mend
__shadd_i16
mdef(374)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
iadd r0.___w, r0.x, r0.y
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishr r0.x___, r0.w, l2
mov out0, r0
mend
__shadd_i32
mdef(375)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
and r0.___w, r0.y, r0.x
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r0.___w, r0.w, l4
dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishr r1.xy__, r0.xyxx, l5
iadd r1.x___, r1.x, r1.y
iadd r0.x___, r1.x, r0.w
mov out0, r0
mend
__shadd_i8
mdef(376)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
iadd r0.___w, r0.x, r0.y
dcl_literal l0, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishr r0.___w, r0.w, l0
mov r0.x___, r0.w
mov out0, r0
mend
__shl_apple_i64
mdef(377)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ishl r5.x, r0.x, r2.x
ishl r6.x, r0.y, r2.x
ushr r7.x, r0.x, r4.x
cmov_logical r8.x, r2.x, r7.x, l0.z
ior r9.x, r6.x, r8.x
cmov_logical r0.x___, r3.x, l0.z, r5.x
cmov_logical r0._y__, r3.x, r5.x, r9.x
mov out0, r0
mend
__shl_apple_v2i64
mdef(378)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ishl r5.x_z, r0.x0z, r2.x0z
ishl r6.x_z, r0.y0w, r2.x0z
ushr r7.x_z, r0.x0z, r4.x0z
cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z
ior r9.x_z, r6.x0z, r8.x0z
cmov_logical r0.x_z_, r3.x0z, l0.z, r5.x0z
cmov_logical r0._y_w, r3.0x0z, r5.0x0z, r9.0x0z
mov out0, r0
mend
__shl_i64
mdef(379)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ishl r5.x, r0.x, r2.x
ishl r6.x, r0.y, r2.x
ushr r7.x, r0.x, r4.x
cmov_logical r8.x, r2.x, r7.x, l0.z
ior r9.x, r6.x, r8.x
cmov_logical r0.x___, r3.x, l0.z, r5.x
cmov_logical r0._y__, r3.x, r5.x, r9.x
mov out0, r0
mend
__shl_v2i64
mdef(380)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ishl r5.x_z, r0.x0z, r2.x0z
ishl r6.x_z, r0.y0w, r2.x0z
ushr r7.x_z, r0.x0z, r4.x0z
cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z
ior r9.x_z, r6.x0z, r8.x0z
cmov_logical r0.x_z_, r3.x0z, l0.z, r5.x0z
cmov_logical r0._y_w, r3.0x0z, r5.0x0z, r9.0x0z
mov out0, r0
mend
__shr_apple_i64
mdef(381)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ushr r5.x, r0.y, r2.x
ushr r6.x, r0.x, r2.x
ishl r7.x, r0.y, r4.x
cmov_logical r8.x, r2.x, r7.x, l0.z
ior r9.x, r6.x, r8.x
cmov_logical r0.x___, r3.x, r5.x, r9.x
cmov_logical r0._y__, r3.x, l0.z, r5.x
mov out0, r0
mend
__shr_apple_v2i64
mdef(382)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ushr r5.x_z, r0.y0w, r2.x0z
ushr r6.x_z, r0.x0z, r2.x0z
ishl r7.x_z, r0.y0w, r4.x0z
cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z
ior r9.x_z, r6.x0z, r8.x0z
cmov_logical r0.x_z_, r3.x0z, r5.x0z, r9.x0z
cmov_logical r0._y_w, r3.0x0z, l0.z, r5.0x0z
mov out0, r0
mend
__shr_i64
mdef(383)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ushr r5.x, r0.y, r2.x
ushr r6.x, r0.x, r2.x
ishl r7.x, r0.y, r4.x
cmov_logical r8.x, r2.x, r7.x, l0.z
ior r9.x, r6.x, r8.x
cmov_logical r0.x___, r3.x, r5.x, r9.x
cmov_logical r0._y__, r3.x, l0.z, r5.x
mov out0, r0
mend
__shr_v2i64
mdef(384)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ushr r5.x_z, r0.y0w, r2.x0z
ushr r6.x_z, r0.x0z, r2.x0z
ishl r7.x_z, r0.y0w, r4.x0z
cmov_logical r8.x_z, r2.x0z, r7.x0z, l0.z
ior r9.x_z, r6.x0z, r8.x0z
cmov_logical r0.x_z_, r3.x0z, r5.x0z, r9.x0z
cmov_logical r0._y_w, r3.0x0z, l0.z, r5.0x0z
mov out0, r0
mend
__sign_f32
mdef(385)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0._y__, r0.x, l0
mov r0.__z_, r0.x_abs
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.___w, r0.z, l1
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ult r0.__z_, l2, r0.z
and r0._y__, r0.y, r0.w
dcl_literal l3, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0._y__, r0.y, l3, r0.x
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r1.x___, l4, r0.x
and r0.x___, r0.w, r1.x
dcl_literal l5, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r0.x, l5, r0.y
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l6, r0.x
mov out0, r0
mend
__sincos_2f32f32
mdef(386)_out(1)_in(1)
mov r0, in0
mov r0, r0.yxzw
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.__z_, r0.y, l0
dcl_literal l1, 0x32000000, 0x7F800000, 0x00000000, 0x00000000
ige r1.xy__, r0.z, l1
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, r0.z, l2
and r0.__z_, r1.x, r0.z
if_logicalnz r0.z
    mov r0.__z_, r0.y_abs
    dcl_literal l3, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680
    lt r0.___w, r0.z, l3
    if_logicalnz r0.w
       
        dcl_literal l4, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983
        mul_ieee r0.___w, r0.z, l4
        round_nearest r0.___w, r0.w
       
        dcl_literal l5, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
        and r1.x___, r0.w, l5
        add r1.__z_, r0.w, r1.x_neg(xyzw)
       
        dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
        mul_ieee r1.___w, r0.w, l6
       
        dcl_literal l7, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000
        mul_ieee r2.xyz_, r0.w, l7
       
        dcl_literal l8, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.x, l8, r2.xyxx_neg(xyzw)
       
        dcl_literal l9, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.x, l9, r3.xyxx
       
        dcl_literal l10, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.z, l10, r3.xyxx
       
        dcl_literal l11, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.z, l11, r3.xyxx
        add r0.___w, r0.z, r2.x_neg(xyzw)
        add r2.___w, r0.z, r0.w_neg(xyzw)
        add r2.x___, r2.x_neg(xyzw), r2.w
        add r2.x___, r3.x_neg(xyzw), r2.x
        add r0.___w, r0.w, r2.x
        add r2.x___, r2.y_neg(xyzw), r0.w
        add r0.___w, r0.w, r2.x_neg(xyzw)
        add r0.___w, r2.y_neg(xyzw), r0.w
        add r0.___w, r3.y_neg(xyzw), r0.w
        add r0.___w, r2.x, r0.w
       
        dcl_literal l12, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
        mad_ieee r2.x___, r1.x, l12, r2.z_neg(xyzw)
       
        dcl_literal l13, 0x21188000, 0x21188000, 0x21188000, 0x21188000
        mad_ieee r1.x___, r1.x, l13, r2.x
       
        dcl_literal l14, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
        mad_ieee r1.x___, r1.z, l14, r1.x
       
        dcl_literal l15, 0x21188000, 0x21188000, 0x21188000, 0x21188000
        mad_ieee r1.__z_, r1.z, l15, r1.x
        add r2.x___, r2.z_neg(xyzw), r0.w
        add r0.___w, r0.w, r2.x_neg(xyzw)
        add r0.___w, r2.z_neg(xyzw), r0.w
        add r1.x___, r2.x, r0.w
        frc r0.___w, r1.w
       
        dcl_literal l16, 0x40800000, 0x40800000, 0x40800000, 0x40800000
        mul_ieee r0.___w, r0.w, l16
        round_nearest r0.___w, r0.w
        mov r1.__z_, r1.z_neg(xyzw)
    else
       
        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r1.___w, r0.z, l17
       
        dcl_literal l18, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r0.__z_, r0.z, l18
       
        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r0.__z_, r0.z, l19
       
        dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.x___, r0.z, l20
       
        dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r0.__z_, r0.z, l21
       
        dcl_literal l22, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041
        umul r3, l22, r0.z
       
        dcl_literal l23, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041
        umul r4, l23, r2.x
       
        dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2._yz_, r4.yywy, l24
       
        dcl_literal l25, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r5.xy__, r3.ywyy, l25
        iadd r2._yz_, r2.yyzy, r5.xxyx
        iadd r2._yz_, r4.xxzx, r2.yyzy
       
        dcl_literal l26, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r4.x_z_, r2.yyzy, l26
        iadd r3.x_z_, r3.xxzx, r4.xxzx
       
        dcl_literal l27, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l27
       
        dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2._yz_, r2.yyzy, l28
       
        dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r4.xy__, r4.ywyy, l29
        iadd r3.xy__, r3.xzxx, r3.ywyy
        ior r4.xy__, r2.yzyy, r4.xyxx
        iadd r5.__z_, r3.x, r4.y
        ult r2._y__, r5.z, r4.y
       
        dcl_literal l30, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r3.y, l30
        cmov_logical r2._y__, r2.y, r2.z, r3.y
       
        dcl_literal l31, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0
        umul r3, l31, r0.z
       
        dcl_literal l32, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0
        umul r6, l32, r2.x
       
        dcl_literal l33, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__zw, r6.yyyw, l33
       
        dcl_literal l34, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r7.xy__, r3.ywyy, l34
        iadd r2.__zw, r2.zzzw, r7.xxxy
        iadd r2.__zw, r6.xxxz, r2.zzzw
       
        dcl_literal l35, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6.x_z_, r2.zzwz, l35
        iadd r3.x_z_, r3.xxzx, r6.xxzx
       
        dcl_literal l36, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l36
        iadd r3.xy__, r3.xzxx, r3.ywyy
       
        dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2.__zw, r2.zzzw, l37
       
        dcl_literal l38, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF
        and r3.__zw, r6.yyyw, l38
        ior r2.__zw, r2.zzzw, r3.zzzw
        iadd r5._y__, r2.y, r2.z
        ult r2._y__, r5.y, r2.z
       
        dcl_literal l39, 0x00000000, 0x00000000, 0x00000001, 0x00000001
        iadd r3.__zw, r3.xxxy, l39
        cmov_logical r2._y__, r2.y, r3.z, r3.x
        iadd r5.x___, r2.y, r2.w
        ult r2._y__, r5.x, r2.w
        cmov_logical r2._y__, r2.y, r3.w, r3.y
       
        dcl_literal l40, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529
        umul r3, l40, r0.z
       
        dcl_literal l41, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529
        umul r6, l41, r2.x
       
        dcl_literal l42, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__zw, r6.yyyw, l42
       
        dcl_literal l43, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r7.xy__, r3.ywyy, l43
        iadd r2.__zw, r2.zzzw, r7.xxxy
        iadd r2.__zw, r6.xxxz, r2.zzzw
       
        dcl_literal l44, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6.x_z_, r2.zzwz, l44
        iadd r3.x_z_, r3.xxzx, r6.xxzx
       
        dcl_literal l45, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l45
        iadd r3.xy__, r3.xzxx, r3.ywyy
       
        dcl_literal l46, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2.__zw, r2.zzzw, l46
       
        dcl_literal l47, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF
        and r3.__zw, r6.yyyw, l47
        ior r2.__zw, r2.zzzw, r3.zzzw
        iadd r3.___w, r2.y, r2.z
        ult r2._y__, r3.w, r2.z
       
        dcl_literal l48, 0x00000001, 0x00000001, 0x00000000, 0x00000000
        iadd r6.xy__, r3.xyxx, l48
        cmov_logical r2._y__, r2.y, r6.x, r3.x
        iadd r3.__z_, r2.y, r2.w
        ult r2._y__, r3.z, r2.w
        cmov_logical r2._y__, r2.y, r6.y, r3.y
       
        dcl_literal l49, 0x00000000, 0x00000000, 0x0000A2F9, 0x0000836E
        umul r2.__zw, l49, r0.z
       
        dcl_literal l50, 0x0000A2F9, 0x0000836E, 0x00000000, 0x00000000
        umul r3.xy__, l50, r2.x
       
        dcl_literal l51, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r0.__z_, r3.y, l51
       
        dcl_literal l52, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.x___, r2.w, l52
        iadd r0.__z_, r0.z, r2.x
        iadd r0.__z_, r3.x, r0.z
       
        dcl_literal l53, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.x___, r0.z, l53
        iadd r2.x___, r2.z, r2.x
       
        dcl_literal l54, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__z_, r2.w, l54
        iadd r2.x___, r2.x, r2.z
       
        dcl_literal l55, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r0.__z_, r0.z, l55
       
        dcl_literal l56, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.__z_, r3.y, l56
        ior r0.__z_, r0.z, r2.z
        iadd r2._y__, r2.y, r0.z
        ult r0.__z_, r2.y, r0.z
       
        dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r2.x, l57
        cmov_logical r0.__z_, r0.z, r2.z, r2.x
       
        dcl_literal l58, 0xFFFFFF89, 0x00000000, 0xFFFFFF8A, 0x00000000
        iadd r2.x_z_, r1.w, l58
       
        dcl_literal l59, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r6.x___, r2.x, l59
       
        dcl_literal l60, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishl r1.___w, r6.x, l60
        iadd r1.___w, r2.x, r1.w_neg(xyzw)
       
        dcl_literal l61, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.x___, l61, r6.x
       
        dcl_literal l62, 0x00000001, 0x00000002, 0x00000004, 0x00000008
        and r7, r2.x, l62
        inegate r2.___w, r7.x
       
        dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ushr r8.x___, r7.y, l63
       
        dcl_literal l64, 0x00000002, 0x00000002, 0x00000002, 0x00000002
        ushr r8._y__, r7.z, l64
       
        dcl_literal l65, 0x00000003, 0x00000003, 0x00000003, 0x00000003
        ushr r8.__z_, r7.w, l65
        inegate r7.xyz_, r8.xyzx
       
        dcl_literal l66, 0x00000010, 0x00000020, 0x00000040, 0x00000080
        and r8, r2.x, l66
       
        dcl_literal l67, 0x00000004, 0x00000004, 0x00000004, 0x00000004
        ushr r9.x___, r8.x, l67
       
        dcl_literal l68, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r9._yzw, r8.yyzw, l68
        inegate r8, r9
        and r2.x___, r0.z, r2.w
        and r3.xy__, r2.y, r7.xyxx
        ior r2.x___, r2.x, r3.x
        and r7._yzw, r3.zzzw, r7.yyzz
        ior r2.x___, r2.x, r7.y
        ior r2.x___, r7.w, r2.x
        and r9, r5.xxyy, r8.xyyz
        ior r2.x___, r2.x, r9.x
        ior r2.x___, r9.z, r2.x
        and r7._y_w, r5.z, r8.zzzw
        ior r2.x___, r2.x, r7.y
        and r2.___w, r4.x, r8.w
        ior r2.x___, r2.x, r2.w
        and r2.___w, r0.z, r7.x
        ior r2.___w, r3.y, r2.w
        ior r2.___w, r7.z, r2.w
        and r3.x___, r3.w, r8.x
        ior r2.___w, r2.w, r3.x
        ior r2.___w, r9.y, r2.w
        ior r2.___w, r9.w, r2.w
        ior r2.___w, r7.w, r2.w
       
        dcl_literal l69, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ushr r3.x___, l69, r1.w
        and r3.x___, r2.x, r3.x
        inegate r3._y__, r1.w
       
        dcl_literal l70, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
        iadd r6._y__, l70, r3.y
       
        dcl_literal l71, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ult r4._y__, l71, r1.w
       
        dcl_literal l72, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r1.___w, r1.w, l72
       
        dcl_literal l73, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ushr r1.___w, l73, r1.w
        and r1.___w, r2.x, r1.w
        ior r1.___w, r3.x, r1.w
        ushr r1.___w, r1.w, r6.y
        ushr r2.x___, r3.x, r6.y
       
        dcl_literal l74, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        and r2.___w, r2.w, l74
       
        dcl_literal l75, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.___w, r2.w, l75
        ior r2.x___, r2.x, r2.w
        cmov_logical r7.__z_, r4.y, r1.w, r2.x
       
        dcl_literal l76, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r8.x___, r6.x, l76
       
        dcl_literal l77, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ishl r6.__z_, l77, r3.y
       
        dcl_literal l78, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r6.___w, r6.z, l78
       
        dcl_literal l79, 0x00000000, 0x00000020, 0x00000000, 0xFFFFFFFF
        mov r8._yzw, l79
        cmov_logical r6, r6.y, r6, r8
       
        dcl_literal l80, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r1.___w, r6.y, l80
       
        dcl_literal l81, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r1.___w, l81, r1.w
       
        dcl_literal l82, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r2.x___, r1.w, l82
        switch r6.x
        case  0
        and r3.x___, r0.z, r1.w
       
        dcl_literal l83, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000
       
        dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.xy__, r3.x, l83, l84
        if_logicalnz r3.y
            inegate r10.___w, r4.x
           
            dcl_literal l85, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r10._y__, r5.y_neg(xyzw), l85
           
            dcl_literal l86, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
            iadd r6.xy__, r5.zxzz_neg(xyzw), l86
           
            dcl_literal l87, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
            iadd r11._yz_, r3.zzwz_neg(xyzw), l87
           
            dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r11.x___, r2.y_neg(xyzw), l88
            and r3._y__, r0.z, r6.w
            iadd r3._y__, r6.w, r3.y_neg(xyzw)
            mov r10.x___, r6.y
            mov r10.__z_, r6.x
        else
            mov r10.xyz_, r5.xyzx
            mov r10.___w, r4.x
            mov r11.x___, r2.y
            mov r11._yz_, r3.zzwz
            mov r3._y__, r0.z
        endif
        and r8.x___, r2.x, r3.y
        mov r8._yzw, r11.xxyz
        mov r9, r10
        mov r2.___w, r3.x
        break
        case  1
        and r3.x___, r2.y, r1.w
       
        dcl_literal l89, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000
       
        dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.xy__, r3.x, l89, l90
        if_logicalnz r3.y
            inegate r10.___w, r4.x
           
            dcl_literal l91, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r10._y__, r5.y_neg(xyzw), l91
           
            dcl_literal l92, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
            iadd r6.xy__, r5.zxzz_neg(xyzw), l92
           
            dcl_literal l93, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
            iadd r11._yz_, r3.wwzw_neg(xyzw), l93
            and r3._y__, r2.y, r6.w
            iadd r3._y__, r6.w, r3.y_neg(xyzw)
            mov r10.x___, r6.y
            mov r10.__z_, r6.x
            mov r11.xy__, r11.zyzz
        else
            mov r10.xyz_, r5.xyzx
            mov r10.___w, r4.x
            mov r11.xy__, r3.zwzz
            mov r3._y__, r2.y
        endif
        and r11.__z_, r2.x, r3.y
       
        dcl_literal l94, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.___w, l94
        mov r8, r11.wzxy
        mov r9, r10
        mov r2.___w, r3.x
        break
        case  2
        and r3.x___, r3.z, r1.w
       
        dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001
       
        dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l95, l96
        inegate r10.___w, r4.x
       
        dcl_literal l97, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10.xyz_, r5.xyzx_neg(xyzw), l97
       
        dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r6._y__, r3.w_neg(xyzw), l98
        and r4._y__, r3.z, r6.w
        iadd r6.x___, r6.w, r4.y_neg(xyzw)
        mov r5.___w, r4.x
        cmov_logical r10, r3.x, r10, r5
        cmov_logical r11._yz_, r3.x, r6.xxyx, r3.zzwz
        and r11.x___, r2.x, r11.y
       
        dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.___w, l99
        mov r8, r11.wwxz
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  3
        and r3.x___, r3.w, r1.w
       
        dcl_literal l100, 0x00000001, 0x00000001, 0x00000001, 0x00000001
       
        dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l100, l101
        inegate r10.___w, r4.x
       
        dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10.xyz_, r5.xyzx_neg(xyzw), l102
        and r4._y__, r3.w, r6.w
        iadd r4._y__, r6.w, r4.y_neg(xyzw)
        mov r11.xyz_, r5.xyzx
        mov r11.___w, r4.x
        cmov_logical r10, r3.x, r10, r11
        cmov_logical r3.x___, r3.x, r4.y, r3.w
        and r11.___w, r2.x, r3.x
       
        dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.xyz_, l103
        mov r8, r11
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  4
        and r3.x___, r5.x, r1.w
       
        dcl_literal l104, 0x00000001, 0x00000001, 0x00000001, 0x00000001
       
        dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l104, l105
        inegate r10.___w, r4.x
       
        dcl_literal l106, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10._yz_, r5.yyzy_neg(xyzw), l106
        and r4._y__, r5.x, r6.w
        iadd r10.x___, r6.w, r4.y_neg(xyzw)
        mov r11.xyz_, r5.xyzx
        mov r11.___w, r4.x
        cmov_logical r10, r3.x, r10, r11
        and r3.x___, r2.x, r10.x
       
        dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l107
        mov r9._yzw, r10.yyzw
        mov r9.x___, r3.x
        mov r2.___w, r3.y
        break
        case  5
        and r3.x___, r5.y, r1.w
       
        dcl_literal l108, 0x00000001, 0x00000001, 0x00000001, 0x00000001
       
        dcl_literal l109, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l108, l109
        inegate r10.__z_, r4.x
       
        dcl_literal l110, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r10._y__, r5.z_neg(xyzw), l110
        and r4._y__, r5.y, r6.w
        iadd r10.x___, r6.w, r4.y_neg(xyzw)
        mov r4.__zw, r5.yyyz
        cmov_logical r10.x_zw, r3.x, r10.xxyz, r4.zzwx
        and r10._y__, r2.x, r10.x
       
        dcl_literal l111, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r10.x___, l111
       
        dcl_literal l112, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l112
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  6
        and r3.x___, r5.z, r1.w
       
        dcl_literal l113, 0x00000001, 0x00000001, 0x00000001, 0x00000001
       
        dcl_literal l114, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l113, l114
        inegate r4.__z_, r4.x
        and r4.___w, r5.z, r6.w
        iadd r4._y__, r6.w, r4.w_neg(xyzw)
        mov r6.x___, r5.z
        mov r6._y__, r4.x
        cmov_logical r10._yz_, r3.x, r4.yyzy, r6.xxyx
        and r10.x___, r2.x, r10.y
       
        dcl_literal l115, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r10.___w, l115
       
        dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l116
        mov r9, r10.wwxz
        mov r2.___w, r3.y
        break
        case  7
        and r1.___w, r4.x, r1.w
       
        dcl_literal l117, 0x00000001, 0x00000001, 0x00000001, 0x00000001
       
        dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.x___, r1.w, l117, l118
        and r3._y__, r4.x, r6.w
        iadd r3._y__, r6.z, r3.y_neg(xyzw)
        cmov_logical r1.___w, r1.w, r3.y, r4.x
        and r6.___w, r2.x, r1.w
       
        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r6.xyz_, l119
       
        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l120
        mov r9, r6
        mov r2.___w, r3.x
        break
        default
        mov r8.__zw, r3.zzzw
        mov r8._y__, r2.y
        mov r8.x___, r0.z
        mov r9.___w, r4.x
        mov r9.xyz_, r5.xyzx
       
        dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r2.___w, l121
        break
        endswitch
        mov r3, r8
        mov r4, r9
        mov r0.__z_, r2.w
       
        dcl_literal l122, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r5, r3, l122
       
        dcl_literal l123, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r5, r5, l123
       
        dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r6, r5, l124
       
        dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r6, r6, l125
       
        dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r6, r6, l126
       
        dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r6, l127, r6_neg(xyzw)
       
        dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r6, r6, l128
       
        dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r6, r6, l129
       
        dcl_literal l130, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r6, r6, l130
       
        dcl_literal l131, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r5, r5, r6, l131
       
        dcl_literal l132, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r6, r3, l132
       
        dcl_literal l133, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r8, r6, l133
       
        dcl_literal l134, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r8, r8, l134
       
        dcl_literal l135, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l135
       
        dcl_literal l136, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r8, l136, r8_neg(xyzw)
       
        dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l137
       
        dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r8, r8, l138
       
        dcl_literal l139, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r8, r8, l139
       
        dcl_literal l140, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r6, r6, r8, l140
       
        dcl_literal l141, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ieq r8, r5, l141
        iadd r6, r5, r6
        cmov_logical r5, r8, r6, r5
       
        dcl_literal l142, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6, r4, l142
       
        dcl_literal l143, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r6, r6, l143
       
        dcl_literal l144, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r8, r6, l144
       
        dcl_literal l145, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r8, r8, l145
       
        dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l146
       
        dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r8, l147, r8_neg(xyzw)
       
        dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l148
       
        dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r8, r8, l149
       
        dcl_literal l150, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r8, r8, l150
       
        dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r6, r6, r8, l151
       
        dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r8, r4, l152
       
        dcl_literal l153, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r9, r8, l153
       
        dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r9, r9, l154
       
        dcl_literal l155, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r9, r9, l155
       
        dcl_literal l156, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r9, l156, r9_neg(xyzw)
       
        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r9, r9, l157
       
        dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r9, r9, l158
       
        dcl_literal l159, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r9, r9, l159
       
        dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r8, r8, r9, l160
       
        dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ieq r9, r6, l161
        iadd r8, r6, r8
        cmov_logical r6, r9, r8, r6
       
        dcl_literal l162, 0x00000020, 0x00000020, 0x00000020, 0x00000020
        ieq r1.___w, r5.x, l162
       
        dcl_literal l163, 0x00000020, 0x00000040, 0x00000000, 0x00000060
        iadd r2.xy_w, r5.yzyw, l163
        cmov_logical r1.___w, r1.w, r2.x, r5.x
       
        dcl_literal l164, 0x00000040, 0x00000040, 0x00000040, 0x00000040
        ieq r2.x___, r1.w, l164
        cmov_logical r1.___w, r2.x, r2.y, r1.w
       
        dcl_literal l165, 0x00000060, 0x00000060, 0x00000060, 0x00000060
        ieq r2.x___, r1.w, l165
        cmov_logical r1.___w, r2.x, r2.w, r1.w
       
        dcl_literal l166, 0x00000080, 0x00000080, 0x00000080, 0x00000080
        ieq r2.x___, r1.w, l166
       
        dcl_literal l167, 0x00000080, 0x000000A0, 0x000000C0, 0x000000E0
        iadd r5, r6, l167
        cmov_logical r1.___w, r2.x, r5.x, r1.w
       
        dcl_literal l168, 0x000000A0, 0x000000A0, 0x000000A0, 0x000000A0
        ieq r2.x___, r1.w, l168
        cmov_logical r1.___w, r2.x, r5.y, r1.w
       
        dcl_literal l169, 0x000000C0, 0x000000C0, 0x000000C0, 0x000000C0
        ieq r2.x___, r1.w, l169
        cmov_logical r1.___w, r2.x, r5.z, r1.w
       
        dcl_literal l170, 0x000000E0, 0x000000E0, 0x000000E0, 0x000000E0
        ieq r2.x___, r1.w, l170
        cmov_logical r1.___w, r2.x, r5.w, r1.w
       
        dcl_literal l171, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishr r2.x___, r1.w, l171
       
        dcl_literal l172, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishl r2._y__, r2.x, l172
        iadd r2._y__, r1.w, r2.y_neg(xyzw)
        iadd r1.___w, r2.z, r1.w_neg(xyzw)
       
        dcl_literal l173, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.x___, l173, r2.x
       
        dcl_literal l174, 0x00000001, 0x00000002, 0x00000004, 0x00000008
        and r5, r2.x, l174
        inegate r2.__z_, r5.x
       
        dcl_literal l175, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ushr r6.x__w, r5.y, l175
       
        dcl_literal l176, 0x00000002, 0x00000002, 0x00000002, 0x00000002
        ushr r6._y__, r5.z, l176
       
        dcl_literal l177, 0x00000003, 0x00000003, 0x00000003, 0x00000003
        ushr r6.__z_, r5.w, l177
        inegate r5, r6
       
        dcl_literal l178, 0x00000010, 0x00000020, 0x00000040, 0x00000080
        and r6, r2.x, l178
       
        dcl_literal l179, 0x00000004, 0x00000004, 0x00000004, 0x00000004
        ushr r8.x___, r6.x, l179
       
        dcl_literal l180, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r8._y__, r6.y, l180
       
        dcl_literal l181, 0x00000006, 0x00000006, 0x00000006, 0x00000006
        ushr r8.__z_, r6.z, l181
       
        dcl_literal l182, 0x00000007, 0x00000007, 0x00000007, 0x00000007
        ushr r8.___w, r6.w, l182
        inegate r6, r8
        and r2.x__w, r3.xxxy, r2.z
        and r8, r3.yzwz, r5
        ior r2.x__w, r2.xxxw, r8.xxxw
        ior r2.x___, r8.y, r2.x
        ior r2.x___, r8.z, r2.x
        and r8, r4, r6
        ior r2.x___, r2.x, r8.x
        ior r2.x___, r8.y, r2.x
        ior r2.x___, r8.z, r2.x
        ior r8._y_w, r8.w, r2.x
        and r2.x___, r3.w, r5.y
        ior r2.x___, r2.w, r2.x
        and r2.___w, r4.x, r5.z
        ior r2.x___, r2.x, r2.w
        and r9.xyz_, r4.yzwy, r6.xyzx
        ior r2.x___, r2.x, r9.x
        ior r2.x___, r9.y, r2.x
        ior r8.x___, r9.z, r2.x
       
        dcl_literal l183, 0x00000008, 0x00000008, 0x00000008, 0x00000008
        ult r2.x___, r2.y, l183
        if_logicalnz r2.x
            ishl r2.x___, r8.y, r2.y
            ushr r2.x___, r2.x, r2.y
           
            dcl_literal l184, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            iadd r2.___w, l184, r2.y_neg(xyzw)
            ushr r8.___w, r2.x, r2.w
           
            dcl_literal l185, 0x00000018, 0x00000018, 0x00000018, 0x00000018
            iadd r3._y__, r2.y, l185
            ishl r2.x___, r2.x, r3.y
            ushr r3.x___, r2.x, r3.y
        else
            and r2.x___, r3.z, r2.z
            and r2.__z_, r3.w, r5.w
            ior r2.x___, r2.x, r2.z
            and r2.__zw, r4.xxxy, r5.yyyz
            ior r2.x___, r2.x, r2.z
            ior r2.x___, r2.w, r2.x
            and r2.__zw, r4.zzzw, r6.xxxy
            ior r2.x___, r2.x, r2.z
            ior r4._y__, r2.w, r2.x
           
            dcl_literal l186, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            ult r2.x___, l186, r2.y
           
            dcl_literal l187, 0xFFFFFFF8, 0x00000000, 0xFFFFFFF7, 0x00000000
            iadd r4.x_z_, r2.y, l187
            ishl r2.__z_, r8.y, r4.x
            ishl r2.___w, r8.x, r4.z
           
            dcl_literal l188, 0x00000028, 0x00000028, 0x00000028, 0x00000028
            iadd r2._y__, l188, r2.y_neg(xyzw)
            ushr r2._y__, r8.x, r2.y
            ior r4.___w, r2.z, r2.y
            ushr r4.x___, r2.w, r4.z
           
            dcl_literal l189, 0x00000000, 0x00000000, 0x00000000, 0x00000000
            mov r8.__z_, l189
            cmov_logical r8, r2.x, r4.yxzw, r8
            mov r3.xy__, r8.yzyy
        endif
       
        dcl_literal l190, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r2.xy__, r8.w, l190
       
        dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r2.___w, r8.w, l191
       
        dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r2.___w, r2.w, l192
       
        dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.___w, r2.w, l193
       
        dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r2.___w, l194, r2.w_neg(xyzw)
       
        dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.___w, r2.w, l195
       
        dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.___w, r2.w, l196
        inegate r8._y__, r2.w
       
        dcl_literal l197, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        mov r2.__z_, l197
        cmov_logical r2.xy__, r2.x, r2.yzyy, r8.wyww
        iadd r2._y__, r1.w, r2.y
       
        dcl_literal l198, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        iadd r2._y__, r2.y, l198
       
        dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r2._y__, r2.y, l199
        ior r7.x___, r2.x, r2.y
       
        dcl_literal l200, 0x00000008, 0x00000008, 0x00000008, 0x00000008
        ult r2.x___, r3.y, l200
        if_logicalnz r2.x
            ishl r2.x___, r3.x, r3.y
            ushr r2.x___, r2.x, r3.y
           
            dcl_literal l201, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            iadd r2._y__, l201, r3.y_neg(xyzw)
            ushr r2.x___, r2.x, r2.y
        else
           
            dcl_literal l202, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            ult r2.__z_, l202, r3.y
           
            dcl_literal l203, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
            iadd r2.___w, r3.y, l203
            ishl r2.___w, r3.x, r2.w
           
            dcl_literal l204, 0x00000028, 0x00000028, 0x00000028, 0x00000028
            iadd r3._y__, l204, r3.y_neg(xyzw)
            ushr r3._y__, r8.x, r3.y
            ior r2.___w, r2.w, r3.y
            cmov_logical r2.x___, r2.z, r2.w, r3.x
        endif
       
        dcl_literal l205, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8
        iadd r1.___w, r1.w, l205
       
        dcl_literal l206, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r3.xy__, r2.x, l206
       
        dcl_literal l207, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r2.__z_, r2.x, l207
       
        dcl_literal l208, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r2.__z_, r2.z, l208
       
        dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.__z_, r2.z, l209
       
        dcl_literal l210, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r2.__z_, l210, r2.z_neg(xyzw)
       
        dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.__z_, r2.z, l211
       
        dcl_literal l212, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.__z_, r2.z, l212
        inegate r2._y__, r2.z
       
        dcl_literal l213, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        mov r3.__z_, l213
        cmov_logical r2._yz_, r3.x, r3.yyzy, r2.xxyx
        iadd r1.___w, r1.w, r2.z
       
        dcl_literal l214, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        iadd r1.___w, r1.w, l214
       
        dcl_literal l215, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.___w, r1.w, l215
        ior r1.___w, r2.y, r1.w
       
        dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r7._y__, r2.x, r1.w, l216
       
        dcl_literal l217, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r7.z, l217
        mov r2.xy__, r7.xyxx_neg(xyzw)
        cmov_logical r2.xyz_, r0.z, r2.xyzx, r7.xyzx
       
        dcl_literal l218, 0x00000000, 0x00000000, 0xFFFFF000, 0x00000003
        and r2.__zw, r2.xxxz, l218
        add r0.__z_, r2.x, r2.z_neg(xyzw)
       
        dcl_literal l219, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
        mul_ieee r1.x___, r2.x, l219
       
        dcl_literal l220, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000
        mad_ieee r1.___w, r2.z, l220, r1.x_neg(xyzw)
       
        dcl_literal l221, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22
        mad_ieee r1.___w, r2.z, l221, r1.w
       
        dcl_literal l222, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000
        mad_ieee r1.___w, r0.z, l222, r1.w
       
        dcl_literal l223, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22
        mad_ieee r0.__z_, r0.z, l223, r1.w
        utof r0.___w, r2.w
       
        dcl_literal l224, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
        mad_ieee r1.__z_, r2.y, l224, r0.z
    endif
    mul_ieee r2.xy__, r1.xzxx, r1.x
    mul_ieee r0.__z_, r1.x, r2.x
    dcl_literal l225, 0x00000000, 0x00000000, 0x2F2EC9D3, 0xAD47D74E
    dcl_literal l226, 0x00000000, 0x00000000, 0xB2D72F34, 0x310F74F6
    mad_ieee r2.__zw, r2.x, l225, l226
    dcl_literal l227, 0x00000000, 0x00000000, 0x3636DF25, 0xB492923A
    mad_ieee r2.__zw, r2.x, r2.zzzw, l227
    dcl_literal l228, 0x00000000, 0x00000000, 0xB95009D4, 0x37D00AE2
    mad_ieee r2.__zw, r2.x, r2.zzzw, l228
    dcl_literal l229, 0x00000000, 0x00000000, 0x3C088887, 0xBAB60B60
    mad_ieee r2.__zw, r2.x, r2.zzzw, l229
    mul_ieee r1.___w, r0.z, r2.z
    dcl_literal l230, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r1.___w, r1.z, l230, r1.w_neg(xyzw)
    mad_ieee r1.__z_, r2.x, r1.w, r1.z_neg(xyzw)
    dcl_literal l231, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB
    mad_ieee r0.__z_, r0.z_neg(xyzw), l231, r1.z
    add r3.__z_, r1.x, r0.z_neg(xyzw)
    dcl_literal l232, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB
    mad_ieee r0.__z_, r2.x, r2.w, l232
    mul_ieee r1.__z_, r2.x, r2.x
    dcl_literal l233, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r1.x___, r1.x, l233
    dcl_literal l234, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A
    ige r1.___w, r1.x, l234
    dcl_literal l235, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ige r2.__z_, l235, r1.x
    and r1.___w, r1.w, r2.z
    dcl_literal l236, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000
    iadd r2.__z_, r1.x, l236
    and r1.___w, r1.w, r2.z
    dcl_literal l237, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ilt r1.x___, l237, r1.x
    dcl_literal l238, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000
    cmov_logical r1.x___, r1.x, l238, r1.w
    dcl_literal l239, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r1.___w, r2.x, l239, r1.x_neg(xyzw)
    dcl_literal l240, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r1.x___, r1.x_neg(xyzw), l240
    mad_ieee r0.__z_, r0.z, r1.z, r2.y_neg(xyzw)
    add r0.__z_, r1.w, r0.z_neg(xyzw)
    add r1.x___, r1.x, r0.z_neg(xyzw)
    dcl_literal l241, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
    eq r2, r0.w, l241
    dcl_literal l242, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r0.__z_, r0.y, l242
    and r4, r2, r0.z
    mov r3.x___, r3.z_neg(xyzw)
    and r1.__z_, r4.x, r3.x
    mov r3._y__, r1.x_neg(xyzw)
    cmov_logical r0.__zw, r4.y, r3.xxxy, r1.xxxz
    cmov_logical r0.__zw, r4.z, r3.yyyz, r0.zzzw
    mov r3.___w, r1.x
    cmov_logical r0.__zw, r4.w, r3.zzzw, r0.zzzw
    dcl_literal l243, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ge r1.x___, r0.y, l243
    and r2, r2, r1.x
    cmov_logical r0.__zw, r2.x, r3.wwwz, r0.zzzw
    cmov_logical r0.__zw, r2.y, r3.xxxw, r0.zzzw
    cmov_logical r0.__zw, r2.z, r3.yyyx, r0.zzzw
    cmov_logical r0.xy__, r2.w, r3.zyzz, r0.zwzz
else
    dcl_literal l244, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    mov r0.x___, l244
endif
dcl_literal l245, 0x7FC00000, 0x7FC00000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r1.y, l245, r0.yxyy
mov out0, r0
mend
__sinh_f32
mdef(387)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000
and r0._yz_, r0.x, l0
dcl_literal l1, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0.___w, r0.y, l1, l2
round_z r0.___w, r0.w
dcl_literal l3, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r1.x___, r0.w_neg(xyzw), l3, r0.y
dcl_literal l4, 0x42000000, 0x42000000, 0x42000000, 0x42000000
ge r1._y__, r0.w, l4
dcl_literal l5, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.__z_, r0.w, l5
cmov_logical r1._y__, r1.y, r1.z, r0.w
dcl_literal l6, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r1.__z_, r0.w_neg(xyzw), l6, r1.x
mul_ieee r1.___w, r1.z, r1.z
dcl_literal l7, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l8, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r2.x___, r1.w, l7, l8
dcl_literal l9, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r2.x___, r1.w, r2.x, l9
dcl_literal l10, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r2.x___, r1.w, r2.x, l10
dcl_literal l11, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r2.x___, r1.w, r2.x, l11
mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r1.z
mul_ieee r1.__z_, r1.z, r1.w
dcl_literal l12, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r1.___w, r1.w_neg(xyzw), l12
div_zeroop(infinity) r1.__z_, r1.z, r1.w
dcl_literal l13, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r0.___w, r0.w, l13, r1.z_neg(xyzw)
add r0.___w, r1.x_neg(xyzw), r0.w
dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.x___, r0.w_neg(xyzw), l14
dcl_literal l15, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r1.__z_, r1.y, l15
if_logicalnz r1.z
    ftoi r1.__z_, r1.y
    
    dcl_literal l16, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r2.xyz_, r1.x, l16
    if_logicalz r2.y
        itof r1.___w, r2.z
        
        dcl_literal l17, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r3.xy__, r1.w, l17
        
        dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.___w, r3.x, l18
        iadd r1.___w, r1.w, r1.z
        
        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2.___w, r3.y, l19
        
        dcl_literal l20, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r1.___w, l20, r1.w_neg(xyzw)
        
        dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r3.x___, l21, r1.w
        
        dcl_literal l22, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.___w, r3.x, l22, r1.w
        
        dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r3.x___, l23, r1.w
        ishr r3._y__, r2.w, r1.w
        inegate r1.___w, r1.w
        
        dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.___w, r1.w, l24
        iadd r1.___w, r2.w, r1.w
        cmov_logical r1.___w, r3.x, r3.y, r1.w
    else
        
        dcl_literal l25, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r2.___w, r1.x, l25
        
        dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2._y__, r2.y, l26
        iadd r2._y__, r2.y, r1.z
        
        dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.__z_, r1.z, l27
        iadd r1.__z_, r2.w, r1.z
        
        dcl_literal l28, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
        iadd r2._y__, r2.y, l28
        
        dcl_literal l29, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r2.___w, l29, r2.y
        
        dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r1.__z_, r2.w, l30, r1.z
        
        dcl_literal l31, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r2._y__, l31, r2.y_neg(xyzw)
        
        dcl_literal l32, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2.__z_, r2.z, l32
        
        dcl_literal l33, 0x00000000, 0x00000017, 0x00000000, 0x00000000
        ilt r3.xy__, l33, r2.y
        
        dcl_literal l34, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r2._y__, r3.y, l34, r2.y
        ishr r2._y__, r2.z, r2.y
        cmov_logical r1.___w, r3.x, r2.y, r1.z
    endif
    
    dcl_literal l35, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r1._y__, l35, r1.y
    
    dcl_literal l36, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1._y__, r1.y, l36, r1.w
    ior r1.x___, r2.x, r1.y
    
    dcl_literal l37, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    add r0.___w, r1.x, l37
else
    mov r0.___w, r0.w_neg(xyzw)
endif
dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.__z_, r0.z, l38
dcl_literal l39, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1._y__, r0.y, l39
and r0.__z_, r0.z, r1.y
cmov_logical r0.__z_, r0.z, r0.y, r0.w
dcl_literal l40, 0x41AEAC50, 0x41AEAC50, 0x41AEAC50, 0x41AEAC50
lt r0.___w, r0.y, l40
mul_ieee r1._y__, r0.z, r0.z
div_zeroop(infinity) r1._y__, r1.y, r1.x
dcl_literal l41, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r0.__z_, r0.z, l41, r1.y_neg(xyzw)
dcl_literal l42, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r0.__z_, r0.z, l42
cmov_logical r0.__z_, r0.w, r0.z, r1.x
dcl_literal l43, 0x31800000, 0x31800000, 0x31800000, 0x31800000
ilt r0.___w, r0.y, l43
cmov_logical r0.__z_, r0.w, r0.y, r0.z
dcl_literal l44, 0x42B2D4FD, 0x42B2D4FD, 0x42B2D4FD, 0x42B2D4FD
ige r0.___w, r0.y, l44
dcl_literal l45, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ige r1.x___, l45, r0.y
and r0.___w, r0.w, r1.x
dcl_literal l46, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0.__z_, r0.w, l46, r0.z
dcl_literal l47, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l47, r0.y
dcl_literal l48, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.___w, r0.x, l48
cmov_logical r0._y__, r0.y, r0.w, r0.z
dcl_literal l49, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, r0.x, l49
cmov_logical r0.x___, r0.x, r0.y_neg(xyzw), r0.y
mov out0, r0
mend
__sinpi_f32
mdef(388)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7F800000, 0x7FFFFFFF, 0x7FFFFFFF
and r0._yzw, r0.x, l0
add r1.x___, r0.w, r0.w
round_nearest r1.x___, r1.x
dcl_literal l1, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r1._y__, r0.w, l1, r1.x_neg(xyzw)
dcl_literal l2, 0x3E800000, 0x3FC90FDB, 0x00000000, 0x00000000
mul_ieee r1.xy__, r1.xyxx, l2
mul_ieee r1.__z_, r1.y, r1.y
dcl_literal l3, 0x3636DF25, 0xB492923A, 0x00000000, 0x00000000
dcl_literal l4, 0xB95009D4, 0x37D00AE2, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, l3, l4
dcl_literal l5, 0x3C088887, 0xBAB60B60, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l5
dcl_literal l6, 0xBE2AAAAB, 0x3D2AAAAB, 0x00000000, 0x00000000
mad_ieee r2.xy__, r1.z, r2.xyxx, l6
mul_ieee r1.___w, r1.y, r1.z
mad_ieee r1._y__, r1.w, r2.x, r1.y
frc r1.x___, r1.x
dcl_literal l7, 0x40800000, 0x40800000, 0x40800000, 0x40800000
mul_ieee r1.x___, r1.x, l7
round_nearest r1.x___, r1.x
dcl_literal l8, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
eq r3, r1.x, l8
dcl_literal l9, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ge r1.x___, r0.w, l9
and r3, r3, r1.x
and r1.x___, r1.y, r3.x
dcl_literal l10, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r1.___w, r1.z_neg(xyzw), l10, l11
mul_ieee r1.__z_, r1.z, r1.z
mad_ieee r1.__z_, r1.z, r2.y, r1.w
cmov_logical r1.x___, r3.y, r1.z, r1.x
cmov_logical r1.x___, r3.z, r1.y_neg(xyzw), r1.x
cmov_logical r1.x___, r3.w, r1.z_neg(xyzw), r1.x
itof r1._y__, r0.w
dcl_literal l12, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r1._y__, r1.y, l12
dcl_literal l13, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
and r1._yz_, r1.y, l13
dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1._y__, r1.y, l14
dcl_literal l15, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.__z_, r1.z, l15
dcl_literal l16, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r1._y__, l16, r1.y_neg(xyzw)
inegate r1.___w, r1.y
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1.___w, r1.w, l17
iadd r1.___w, r1.z, r1.w
ishr r1.__z_, r1.z, r1.y
dcl_literal l18, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1._y__, l18, r1.y
cmov_logical r1._y__, r1.y, r1.z, r1.w
dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.__zw, r0.wwwy, l19
dcl_literal l20, 0x00000000, 0x00000000, 0x7F800000, 0x00000000
ieq r2.xyz_, r0.yzwy, l20
and r0._y__, r1.z, r2.x
cmov_logical r0._y__, r0.y, r1.y, r1.x
dcl_literal l21, 0x32000000, 0x32000000, 0x32000000, 0x32000000
ilt r0.__z_, r0.w, l21
and r0.__z_, r1.w, r0.z
dcl_literal l22, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r1.x___, r0.w, l22
cmov_logical r0._y__, r0.z, r1.x, r0.y
frc r0.__z_, r0.w
add r1.x___, r0.w, r0.z_neg(xyzw)
dcl_literal l23, 0x00000000, 0x00000000, 0x3F000000, 0x00000000
eq r1._yz_, r0.z, l23
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l24, r0.w
dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ge r0.___w, r1.x, l25
dcl_literal l26, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r1.x___, r1.x, l26
and r0.___w, r1.y, r0.w
ior r0.___w, r2.y, r0.w
dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0._y__, r0.w, l27, r0.y
frc r0.___w, r1.x
dcl_literal l28, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r0.___w, r0.w, l28
dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r0.___w, r0.w, l29, l30
cmov_logical r0._y__, r1.z, r0.w, r0.y
dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l31
dcl_literal l32, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l32
cmov_logical r0._y__, r0.w, r0.y_neg(xyzw), r0.y
dcl_literal l33, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r2.z, l33, r0.y
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__sin_f32
mdef(389)_out(1)_in(1)
mov r0, in0
mov r0._y__, r0.x_abs
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.__z_, r0.x, l0
dcl_literal l1, 0x32000000, 0x32000000, 0x32000000, 0x32000000
ige r0.___w, r0.z, l1
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1.x___, r0.z, l2
and r0.___w, r0.w, r1.x
if_logicalnz r0.w
    
    dcl_literal l3, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680
    lt r0.___w, r0.y, l3
    if_logicalnz r0.w
        
        dcl_literal l4, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983
        mul_ieee r0.___w, r0.y, l4
        round_nearest r0.___w, r0.w
        
        dcl_literal l5, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
        and r1.x___, r0.w, l5
        add r1._y__, r0.w, r1.x_neg(xyzw)
        
        dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
        mul_ieee r1.__z_, r0.w, l6
        
        dcl_literal l7, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000
        mul_ieee r2.xyz_, r0.w, l7
        
        dcl_literal l8, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.x, l8, r2.xyxx_neg(xyzw)
        
        dcl_literal l9, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.x, l9, r3.xyxx
        
        dcl_literal l10, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.y, l10, r3.xyxx
        
        dcl_literal l11, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.y, l11, r3.xyxx
        add r0.___w, r0.y, r2.x_neg(xyzw)
        add r1.___w, r0.y, r0.w_neg(xyzw)
        add r1.___w, r2.x_neg(xyzw), r1.w
        add r1.___w, r3.x_neg(xyzw), r1.w
        add r0.___w, r0.w, r1.w
        add r1.___w, r2.y_neg(xyzw), r0.w
        add r0.___w, r0.w, r1.w_neg(xyzw)
        add r0.___w, r2.y_neg(xyzw), r0.w
        add r0.___w, r3.y_neg(xyzw), r0.w
        add r0.___w, r1.w, r0.w
        
        dcl_literal l12, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
        mad_ieee r1.___w, r1.x, l12, r2.z_neg(xyzw)
        
        dcl_literal l13, 0x21188000, 0x21188000, 0x21188000, 0x21188000
        mad_ieee r1.x___, r1.x, l13, r1.w
        
        dcl_literal l14, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
        mad_ieee r1.x___, r1.y, l14, r1.x
        
        dcl_literal l15, 0x21188000, 0x21188000, 0x21188000, 0x21188000
        mad_ieee r1._y__, r1.y, l15, r1.x
        add r1.___w, r2.z_neg(xyzw), r0.w
        add r0.___w, r0.w, r1.w_neg(xyzw)
        add r0.___w, r2.z_neg(xyzw), r0.w
        add r1.x___, r1.w, r0.w
        frc r0.___w, r1.z
        
        dcl_literal l16, 0x40800000, 0x40800000, 0x40800000, 0x40800000
        mul_ieee r0.___w, r0.w, l16
        round_nearest r0.___w, r0.w
        mov r1._y__, r1.y_neg(xyzw)
    else
        
        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r1.__z_, r0.y, l17
        
        dcl_literal l18, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r1.___w, r0.y, l18
        
        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.___w, r1.w, l19
        
        dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.x___, r1.w, l20
        
        dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r1.___w, r1.w, l21
        
        dcl_literal l22, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041
        umul r3, l22, r1.w
        
        dcl_literal l23, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041
        umul r4, l23, r2.x
        
        dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2._yz_, r4.yywy, l24
        
        dcl_literal l25, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r5.xy__, r3.ywyy, l25
        iadd r2._yz_, r2.yyzy, r5.xxyx
        iadd r2._yz_, r4.xxzx, r2.yyzy
        
        dcl_literal l26, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r4.x_z_, r2.yyzy, l26
        iadd r3.x_z_, r3.xxzx, r4.xxzx
        
        dcl_literal l27, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l27
        
        dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2._yz_, r2.yyzy, l28
        
        dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r4.xy__, r4.ywyy, l29
        iadd r3.xy__, r3.xzxx, r3.ywyy
        ior r4.xy__, r2.yzyy, r4.xyxx
        iadd r5.__z_, r3.x, r4.y
        ult r2._y__, r5.z, r4.y
        
        dcl_literal l30, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r3.y, l30
        cmov_logical r2._y__, r2.y, r2.z, r3.y
        
        dcl_literal l31, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0
        umul r3, l31, r1.w
        
        dcl_literal l32, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0
        umul r6, l32, r2.x
        
        dcl_literal l33, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__zw, r6.yyyw, l33
        
        dcl_literal l34, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r7.xy__, r3.ywyy, l34
        iadd r2.__zw, r2.zzzw, r7.xxxy
        iadd r2.__zw, r6.xxxz, r2.zzzw
        
        dcl_literal l35, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6.x_z_, r2.zzwz, l35
        iadd r3.x_z_, r3.xxzx, r6.xxzx
        
        dcl_literal l36, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l36
        iadd r3.xy__, r3.xzxx, r3.ywyy
        
        dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2.__zw, r2.zzzw, l37
        
        dcl_literal l38, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF
        and r3.__zw, r6.yyyw, l38
        ior r2.__zw, r2.zzzw, r3.zzzw
        iadd r5._y__, r2.y, r2.z
        ult r2._y__, r5.y, r2.z
        
        dcl_literal l39, 0x00000000, 0x00000000, 0x00000001, 0x00000001
        iadd r3.__zw, r3.xxxy, l39
        cmov_logical r2._y__, r2.y, r3.z, r3.x
        iadd r5.x___, r2.y, r2.w
        ult r2._y__, r5.x, r2.w
        cmov_logical r2._y__, r2.y, r3.w, r3.y
        
        dcl_literal l40, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529
        umul r3, l40, r1.w
        
        dcl_literal l41, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529
        umul r6, l41, r2.x
        
        dcl_literal l42, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__zw, r6.yyyw, l42
        
        dcl_literal l43, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r7.xy__, r3.ywyy, l43
        iadd r2.__zw, r2.zzzw, r7.xxxy
        iadd r2.__zw, r6.xxxz, r2.zzzw
        
        dcl_literal l44, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6.x_z_, r2.zzwz, l44
        iadd r3.x_z_, r3.xxzx, r6.xxzx
        
        dcl_literal l45, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l45
        iadd r3.xy__, r3.xzxx, r3.ywyy
        
        dcl_literal l46, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2.__zw, r2.zzzw, l46
        
        dcl_literal l47, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF
        and r3.__zw, r6.yyyw, l47
        ior r2.__zw, r2.zzzw, r3.zzzw
        iadd r3.___w, r2.y, r2.z
        ult r2._y__, r3.w, r2.z
        
        dcl_literal l48, 0x00000001, 0x00000001, 0x00000000, 0x00000000
        iadd r6.xy__, r3.xyxx, l48
        cmov_logical r2._y__, r2.y, r6.x, r3.x
        iadd r3.__z_, r2.y, r2.w
        ult r2._y__, r3.z, r2.w
        cmov_logical r2._y__, r2.y, r6.y, r3.y
        
        dcl_literal l49, 0x00000000, 0x00000000, 0x0000A2F9, 0x0000836E
        umul r2.__zw, l49, r1.w
        
        dcl_literal l50, 0x0000A2F9, 0x0000836E, 0x00000000, 0x00000000
        umul r3.xy__, l50, r2.x
        
        dcl_literal l51, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r1.___w, r3.y, l51
        
        dcl_literal l52, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.x___, r2.w, l52
        iadd r1.___w, r1.w, r2.x
        iadd r1.___w, r3.x, r1.w
        
        dcl_literal l53, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.x___, r1.w, l53
        iadd r2.x___, r2.z, r2.x
        
        dcl_literal l54, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__z_, r2.w, l54
        iadd r2.x___, r2.x, r2.z
        
        dcl_literal l55, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r1.___w, r1.w, l55
        
        dcl_literal l56, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.__z_, r3.y, l56
        ior r1.___w, r1.w, r2.z
        iadd r2._y__, r2.y, r1.w
        ult r1.___w, r2.y, r1.w
        
        dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r2.x, l57
        cmov_logical r1.___w, r1.w, r2.z, r2.x
        
        dcl_literal l58, 0xFFFFFF89, 0x00000000, 0xFFFFFF8A, 0x00000000
        iadd r2.x_z_, r1.z, l58
        
        dcl_literal l59, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r6.x___, r2.x, l59
        
        dcl_literal l60, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishl r1.__z_, r6.x, l60
        iadd r1.__z_, r2.x, r1.z_neg(xyzw)
        
        dcl_literal l61, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.x___, l61, r6.x
        
        dcl_literal l62, 0x00000001, 0x00000002, 0x00000004, 0x00000008
        and r7, r2.x, l62
        inegate r2.___w, r7.x
        
        dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ushr r8.x___, r7.y, l63
        
        dcl_literal l64, 0x00000002, 0x00000002, 0x00000002, 0x00000002
        ushr r8._y__, r7.z, l64
        
        dcl_literal l65, 0x00000003, 0x00000003, 0x00000003, 0x00000003
        ushr r8.__z_, r7.w, l65
        inegate r7.xyz_, r8.xyzx
        
        dcl_literal l66, 0x00000010, 0x00000020, 0x00000040, 0x00000080
        and r8, r2.x, l66
        
        dcl_literal l67, 0x00000004, 0x00000004, 0x00000004, 0x00000004
        ushr r9.x___, r8.x, l67
        
        dcl_literal l68, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r9._yzw, r8.yyzw, l68
        inegate r8, r9
        and r2.x___, r1.w, r2.w
        and r3.xy__, r2.y, r7.xyxx
        ior r2.x___, r2.x, r3.x
        and r7._yzw, r3.zzzw, r7.yyzz
        ior r2.x___, r2.x, r7.y
        ior r2.x___, r7.w, r2.x
        and r9, r5.xxyy, r8.xyyz
        ior r2.x___, r2.x, r9.x
        ior r2.x___, r9.z, r2.x
        and r7._y_w, r5.z, r8.zzzw
        ior r2.x___, r2.x, r7.y
        and r2.___w, r4.x, r8.w
        ior r2.x___, r2.x, r2.w
        and r2.___w, r1.w, r7.x
        ior r2.___w, r3.y, r2.w
        ior r2.___w, r7.z, r2.w
        and r3.x___, r3.w, r8.x
        ior r2.___w, r2.w, r3.x
        ior r2.___w, r9.y, r2.w
        ior r2.___w, r9.w, r2.w
        ior r2.___w, r7.w, r2.w
        
        dcl_literal l69, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ushr r3.x___, l69, r1.z
        and r3.x___, r2.x, r3.x
        inegate r3._y__, r1.z
        
        dcl_literal l70, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
        iadd r6._y__, l70, r3.y
        
        dcl_literal l71, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ult r4._y__, l71, r1.z
        
        dcl_literal l72, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r1.__z_, r1.z, l72
        
        dcl_literal l73, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ushr r1.__z_, l73, r1.z
        and r1.__z_, r2.x, r1.z
        ior r1.__z_, r3.x, r1.z
        ushr r1.__z_, r1.z, r6.y
        ushr r2.x___, r3.x, r6.y
        
        dcl_literal l74, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        and r2.___w, r2.w, l74
        
        dcl_literal l75, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.___w, r2.w, l75
        ior r2.x___, r2.x, r2.w
        cmov_logical r7.__z_, r4.y, r1.z, r2.x
        
        dcl_literal l76, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r8.x___, r6.x, l76
        
        dcl_literal l77, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ishl r6.__z_, l77, r3.y
        
        dcl_literal l78, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r6.___w, r6.z, l78
        
        dcl_literal l79, 0x00000000, 0x00000020, 0x00000000, 0xFFFFFFFF
        mov r8._yzw, l79
        cmov_logical r6, r6.y, r6, r8
        
        dcl_literal l80, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r1.__z_, r6.y, l80
        
        dcl_literal l81, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r1.__z_, l81, r1.z
        
        dcl_literal l82, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r2.x___, r1.z, l82
        switch r6.x
        case  0
        and r3.x___, r1.w, r1.z
        
        dcl_literal l83, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000
        
        dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.xy__, r3.x, l83, l84
        if_logicalnz r3.y
            inegate r10.___w, r4.x
            
            dcl_literal l85, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r10._y__, r5.y_neg(xyzw), l85
            
            dcl_literal l86, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
            iadd r6.xy__, r5.zxzz_neg(xyzw), l86
            
            dcl_literal l87, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
            iadd r11._yz_, r3.zzwz_neg(xyzw), l87
            
            dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r11.x___, r2.y_neg(xyzw), l88
            and r3._y__, r1.w, r6.w
            iadd r3._y__, r6.w, r3.y_neg(xyzw)
            mov r10.x___, r6.y
            mov r10.__z_, r6.x
        else
            mov r10.xyz_, r5.xyzx
            mov r10.___w, r4.x
            mov r11.x___, r2.y
            mov r11._yz_, r3.zzwz
            mov r3._y__, r1.w
        endif
        and r8.x___, r2.x, r3.y
        mov r8._yzw, r11.xxyz
        mov r9, r10
        mov r2.___w, r3.x
        break
        case  1
        and r3.x___, r2.y, r1.z
        
        dcl_literal l89, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000
        
        dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.xy__, r3.x, l89, l90
        if_logicalnz r3.y
            inegate r10.___w, r4.x
            
            dcl_literal l91, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r10._y__, r5.y_neg(xyzw), l91
            
            dcl_literal l92, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
            iadd r6.xy__, r5.zxzz_neg(xyzw), l92
            
            dcl_literal l93, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
            iadd r11._yz_, r3.wwzw_neg(xyzw), l93
            and r3._y__, r2.y, r6.w
            iadd r3._y__, r6.w, r3.y_neg(xyzw)
            mov r10.x___, r6.y
            mov r10.__z_, r6.x
            mov r11.xy__, r11.zyzz
        else
            mov r10.xyz_, r5.xyzx
            mov r10.___w, r4.x
            mov r11.xy__, r3.zwzz
            mov r3._y__, r2.y
        endif
        and r11.__z_, r2.x, r3.y
        
        dcl_literal l94, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.___w, l94
        mov r8, r11.wzxy
        mov r9, r10
        mov r2.___w, r3.x
        break
        case  2
        and r3.x___, r3.z, r1.z
        
        dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l95, l96
        inegate r10.___w, r4.x
        
        dcl_literal l97, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10.xyz_, r5.xyzx_neg(xyzw), l97
        
        dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r6._y__, r3.w_neg(xyzw), l98
        and r4._y__, r3.z, r6.w
        iadd r6.x___, r6.w, r4.y_neg(xyzw)
        mov r5.___w, r4.x
        cmov_logical r10, r3.x, r10, r5
        cmov_logical r11._yz_, r3.x, r6.xxyx, r3.zzwz
        and r11.x___, r2.x, r11.y
        
        dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.___w, l99
        mov r8, r11.wwxz
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  3
        and r3.x___, r3.w, r1.z
        
        dcl_literal l100, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l100, l101
        inegate r10.___w, r4.x
        
        dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10.xyz_, r5.xyzx_neg(xyzw), l102
        and r4._y__, r3.w, r6.w
        iadd r4._y__, r6.w, r4.y_neg(xyzw)
        mov r11.xyz_, r5.xyzx
        mov r11.___w, r4.x
        cmov_logical r10, r3.x, r10, r11
        cmov_logical r3.x___, r3.x, r4.y, r3.w
        and r11.___w, r2.x, r3.x
        
        dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.xyz_, l103
        mov r8, r11
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  4
        and r3.x___, r5.x, r1.z
        
        dcl_literal l104, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l104, l105
        inegate r10.___w, r4.x
        
        dcl_literal l106, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10._yz_, r5.yyzy_neg(xyzw), l106
        and r4._y__, r5.x, r6.w
        iadd r10.x___, r6.w, r4.y_neg(xyzw)
        mov r11.xyz_, r5.xyzx
        mov r11.___w, r4.x
        cmov_logical r10, r3.x, r10, r11
        and r3.x___, r2.x, r10.x
        
        dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l107
        mov r9._yzw, r10.yyzw
        mov r9.x___, r3.x
        mov r2.___w, r3.y
        break
        case  5
        and r3.x___, r5.y, r1.z
        
        dcl_literal l108, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l109, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l108, l109
        inegate r10.__z_, r4.x
        
        dcl_literal l110, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r10._y__, r5.z_neg(xyzw), l110
        and r4._y__, r5.y, r6.w
        iadd r10.x___, r6.w, r4.y_neg(xyzw)
        mov r4.__zw, r5.yyyz
        cmov_logical r10.x_zw, r3.x, r10.xxyz, r4.zzwx
        and r10._y__, r2.x, r10.x
        
        dcl_literal l111, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r10.x___, l111
        
        dcl_literal l112, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l112
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  6
        and r3.x___, r5.z, r1.z
        
        dcl_literal l113, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l114, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l113, l114
        inegate r4.__z_, r4.x
        and r4.___w, r5.z, r6.w
        iadd r4._y__, r6.w, r4.w_neg(xyzw)
        mov r6.x___, r5.z
        mov r6._y__, r4.x
        cmov_logical r10._yz_, r3.x, r4.yyzy, r6.xxyx
        and r10.x___, r2.x, r10.y
        
        dcl_literal l115, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r10.___w, l115
        
        dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l116
        mov r9, r10.wwxz
        mov r2.___w, r3.y
        break
        case  7
        and r1.__z_, r4.x, r1.z
        
        dcl_literal l117, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.x___, r1.z, l117, l118
        and r3._y__, r4.x, r6.w
        iadd r3._y__, r6.z, r3.y_neg(xyzw)
        cmov_logical r1.__z_, r1.z, r3.y, r4.x
        and r6.___w, r2.x, r1.z
        
        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r6.xyz_, l119
        
        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l120
        mov r9, r6
        mov r2.___w, r3.x
        break
        default
        mov r8.__zw, r3.zzzw
        mov r8._y__, r2.y
        mov r8.x___, r1.w
        mov r9.___w, r4.x
        mov r9.xyz_, r5.xyzx
        
        dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r2.___w, l121
        break
        endswitch
        mov r3, r8
        mov r4, r9
        mov r1.__z_, r2.w
        
        dcl_literal l122, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r5, r3, l122
        
        dcl_literal l123, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r5, r5, l123
        
        dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r6, r5, l124
        
        dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r6, r6, l125
        
        dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r6, r6, l126
        
        dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r6, l127, r6_neg(xyzw)
        
        dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r6, r6, l128
        
        dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r6, r6, l129
        
        dcl_literal l130, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r6, r6, l130
        
        dcl_literal l131, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r5, r5, r6, l131
        
        dcl_literal l132, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r6, r3, l132
        
        dcl_literal l133, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r8, r6, l133
        
        dcl_literal l134, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r8, r8, l134
        
        dcl_literal l135, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l135
        
        dcl_literal l136, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r8, l136, r8_neg(xyzw)
        
        dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l137
        
        dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r8, r8, l138
        
        dcl_literal l139, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r8, r8, l139
        
        dcl_literal l140, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r6, r6, r8, l140
        
        dcl_literal l141, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ieq r8, r5, l141
        iadd r6, r5, r6
        cmov_logical r5, r8, r6, r5
        
        dcl_literal l142, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6, r4, l142
        
        dcl_literal l143, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r6, r6, l143
        
        dcl_literal l144, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r8, r6, l144
        
        dcl_literal l145, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r8, r8, l145
        
        dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l146
        
        dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r8, l147, r8_neg(xyzw)
        
        dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l148
        
        dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r8, r8, l149
        
        dcl_literal l150, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r8, r8, l150
        
        dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r6, r6, r8, l151
        
        dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r8, r4, l152
        
        dcl_literal l153, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r9, r8, l153
        
        dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r9, r9, l154
        
        dcl_literal l155, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r9, r9, l155
        
        dcl_literal l156, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r9, l156, r9_neg(xyzw)
        
        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r9, r9, l157
        
        dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r9, r9, l158
        
        dcl_literal l159, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r9, r9, l159
        
        dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r8, r8, r9, l160
        
        dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ieq r9, r6, l161
        iadd r8, r6, r8
        cmov_logical r6, r9, r8, r6
        
        dcl_literal l162, 0x00000020, 0x00000020, 0x00000020, 0x00000020
        ieq r1.___w, r5.x, l162
        
        dcl_literal l163, 0x00000020, 0x00000040, 0x00000000, 0x00000060
        iadd r2.xy_w, r5.yzyw, l163
        cmov_logical r1.___w, r1.w, r2.x, r5.x
        
        dcl_literal l164, 0x00000040, 0x00000040, 0x00000040, 0x00000040
        ieq r2.x___, r1.w, l164
        cmov_logical r1.___w, r2.x, r2.y, r1.w
        
        dcl_literal l165, 0x00000060, 0x00000060, 0x00000060, 0x00000060
        ieq r2.x___, r1.w, l165
        cmov_logical r1.___w, r2.x, r2.w, r1.w
        
        dcl_literal l166, 0x00000080, 0x00000080, 0x00000080, 0x00000080
        ieq r2.x___, r1.w, l166
        
        dcl_literal l167, 0x00000080, 0x000000A0, 0x000000C0, 0x000000E0
        iadd r5, r6, l167
        cmov_logical r1.___w, r2.x, r5.x, r1.w
        
        dcl_literal l168, 0x000000A0, 0x000000A0, 0x000000A0, 0x000000A0
        ieq r2.x___, r1.w, l168
        cmov_logical r1.___w, r2.x, r5.y, r1.w
        
        dcl_literal l169, 0x000000C0, 0x000000C0, 0x000000C0, 0x000000C0
        ieq r2.x___, r1.w, l169
        cmov_logical r1.___w, r2.x, r5.z, r1.w
        
        dcl_literal l170, 0x000000E0, 0x000000E0, 0x000000E0, 0x000000E0
        ieq r2.x___, r1.w, l170
        cmov_logical r1.___w, r2.x, r5.w, r1.w
        
        dcl_literal l171, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishr r2.x___, r1.w, l171
        
        dcl_literal l172, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishl r2._y__, r2.x, l172
        iadd r2._y__, r1.w, r2.y_neg(xyzw)
        iadd r1.___w, r2.z, r1.w_neg(xyzw)
        
        dcl_literal l173, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.x___, l173, r2.x
        
        dcl_literal l174, 0x00000001, 0x00000002, 0x00000004, 0x00000008
        and r5, r2.x, l174
        inegate r2.__z_, r5.x
        
        dcl_literal l175, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ushr r6.x__w, r5.y, l175
        
        dcl_literal l176, 0x00000002, 0x00000002, 0x00000002, 0x00000002
        ushr r6._y__, r5.z, l176
        
        dcl_literal l177, 0x00000003, 0x00000003, 0x00000003, 0x00000003
        ushr r6.__z_, r5.w, l177
        inegate r5, r6
        
        dcl_literal l178, 0x00000010, 0x00000020, 0x00000040, 0x00000080
        and r6, r2.x, l178
        
        dcl_literal l179, 0x00000004, 0x00000004, 0x00000004, 0x00000004
        ushr r8.x___, r6.x, l179
        
        dcl_literal l180, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r8._y__, r6.y, l180
        
        dcl_literal l181, 0x00000006, 0x00000006, 0x00000006, 0x00000006
        ushr r8.__z_, r6.z, l181
        
        dcl_literal l182, 0x00000007, 0x00000007, 0x00000007, 0x00000007
        ushr r8.___w, r6.w, l182
        inegate r6, r8
        and r2.x__w, r3.xxxy, r2.z
        and r8, r3.yzwz, r5
        ior r2.x__w, r2.xxxw, r8.xxxw
        ior r2.x___, r8.y, r2.x
        ior r2.x___, r8.z, r2.x
        and r8, r4, r6
        ior r2.x___, r2.x, r8.x
        ior r2.x___, r8.y, r2.x
        ior r2.x___, r8.z, r2.x
        ior r8._y_w, r8.w, r2.x
        and r2.x___, r3.w, r5.y
        ior r2.x___, r2.w, r2.x
        and r2.___w, r4.x, r5.z
        ior r2.x___, r2.x, r2.w
        and r9.xyz_, r4.yzwy, r6.xyzx
        ior r2.x___, r2.x, r9.x
        ior r2.x___, r9.y, r2.x
        ior r8.x___, r9.z, r2.x
        
        dcl_literal l183, 0x00000008, 0x00000008, 0x00000008, 0x00000008
        ult r2.x___, r2.y, l183
        if_logicalnz r2.x
            ishl r2.x___, r8.y, r2.y
            ushr r2.x___, r2.x, r2.y
            
            dcl_literal l184, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            iadd r2.___w, l184, r2.y_neg(xyzw)
            ushr r8.___w, r2.x, r2.w
            
            dcl_literal l185, 0x00000018, 0x00000018, 0x00000018, 0x00000018
            iadd r3._y__, r2.y, l185
            ishl r2.x___, r2.x, r3.y
            ushr r3.x___, r2.x, r3.y
        else
            and r2.x___, r3.z, r2.z
            and r2.__z_, r3.w, r5.w
            ior r2.x___, r2.x, r2.z
            and r2.__zw, r4.xxxy, r5.yyyz
            ior r2.x___, r2.x, r2.z
            ior r2.x___, r2.w, r2.x
            and r2.__zw, r4.zzzw, r6.xxxy
            ior r2.x___, r2.x, r2.z
            ior r4._y__, r2.w, r2.x
            
            dcl_literal l186, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            ult r2.x___, l186, r2.y
            
            dcl_literal l187, 0xFFFFFFF8, 0x00000000, 0xFFFFFFF7, 0x00000000
            iadd r4.x_z_, r2.y, l187
            ishl r2.__z_, r8.y, r4.x
            ishl r2.___w, r8.x, r4.z
            
            dcl_literal l188, 0x00000028, 0x00000028, 0x00000028, 0x00000028
            iadd r2._y__, l188, r2.y_neg(xyzw)
            ushr r2._y__, r8.x, r2.y
            ior r4.___w, r2.z, r2.y
            ushr r4.x___, r2.w, r4.z
            
            dcl_literal l189, 0x00000000, 0x00000000, 0x00000000, 0x00000000
            mov r8.__z_, l189
            cmov_logical r8, r2.x, r4.yxzw, r8
            mov r3.xy__, r8.yzyy
        endif
        
        dcl_literal l190, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r2.xy__, r8.w, l190
        
        dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r2.___w, r8.w, l191
        
        dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r2.___w, r2.w, l192
        
        dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.___w, r2.w, l193
        
        dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r2.___w, l194, r2.w_neg(xyzw)
        
        dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.___w, r2.w, l195
        
        dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.___w, r2.w, l196
        inegate r8._y__, r2.w
        
        dcl_literal l197, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        mov r2.__z_, l197
        cmov_logical r2.xy__, r2.x, r2.yzyy, r8.wyww
        iadd r2._y__, r1.w, r2.y
        
        dcl_literal l198, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        iadd r2._y__, r2.y, l198
        
        dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r2._y__, r2.y, l199
        ior r7.x___, r2.x, r2.y
        
        dcl_literal l200, 0x00000008, 0x00000008, 0x00000008, 0x00000008
        ult r2.x___, r3.y, l200
        if_logicalnz r2.x
            ishl r2.x___, r3.x, r3.y
            ushr r2.x___, r2.x, r3.y
            
            dcl_literal l201, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            iadd r2._y__, l201, r3.y_neg(xyzw)
            ushr r2.x___, r2.x, r2.y
        else
            
            dcl_literal l202, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            ult r2.__z_, l202, r3.y
            
            dcl_literal l203, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
            iadd r2.___w, r3.y, l203
            ishl r2.___w, r3.x, r2.w
            
            dcl_literal l204, 0x00000028, 0x00000028, 0x00000028, 0x00000028
            iadd r3._y__, l204, r3.y_neg(xyzw)
            ushr r3._y__, r8.x, r3.y
            ior r2.___w, r2.w, r3.y
            cmov_logical r2.x___, r2.z, r2.w, r3.x
        endif
        
        dcl_literal l205, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8
        iadd r1.___w, r1.w, l205
        
        dcl_literal l206, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r3.xy__, r2.x, l206
        
        dcl_literal l207, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r2.__z_, r2.x, l207
        
        dcl_literal l208, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r2.__z_, r2.z, l208
        
        dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.__z_, r2.z, l209
        
        dcl_literal l210, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r2.__z_, l210, r2.z_neg(xyzw)
        
        dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.__z_, r2.z, l211
        
        dcl_literal l212, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.__z_, r2.z, l212
        inegate r2._y__, r2.z
        
        dcl_literal l213, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        mov r3.__z_, l213
        cmov_logical r2._yz_, r3.x, r3.yyzy, r2.xxyx
        iadd r1.___w, r1.w, r2.z
        
        dcl_literal l214, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        iadd r1.___w, r1.w, l214
        
        dcl_literal l215, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.___w, r1.w, l215
        ior r1.___w, r2.y, r1.w
        
        dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r7._y__, r2.x, r1.w, l216
        
        dcl_literal l217, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r7.z, l217
        mov r2.xy__, r7.xyxx_neg(xyzw)
        cmov_logical r2.xyz_, r1.z, r2.xyzx, r7.xyzx
        
        dcl_literal l218, 0x00000000, 0x00000000, 0xFFFFF000, 0x00000003
        and r1.__zw, r2.xxxz, l218
        add r2.__z_, r2.x, r1.z_neg(xyzw)
        
        dcl_literal l219, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
        mul_ieee r1.x___, r2.x, l219
        
        dcl_literal l220, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000
        mad_ieee r2.x___, r1.z, l220, r1.x_neg(xyzw)
        
        dcl_literal l221, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22
        mad_ieee r1.__z_, r1.z, l221, r2.x
        
        dcl_literal l222, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000
        mad_ieee r1.__z_, r2.z, l222, r1.z
        
        dcl_literal l223, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22
        mad_ieee r1.__z_, r2.z, l223, r1.z
        utof r0.___w, r1.w
        
        dcl_literal l224, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
        mad_ieee r1._y__, r2.y, l224, r1.z
    endif
    mul_ieee r1.__zw, r1.xxxy, r1.x
    mul_ieee r2.x___, r1.x, r1.z
    
    dcl_literal l225, 0x00000000, 0x2F2EC9D3, 0xAD47D74E, 0x00000000
    
    dcl_literal l226, 0x00000000, 0xB2D72F34, 0x310F74F6, 0x00000000
    mad_ieee r2._yz_, r1.z, l225, l226
    
    dcl_literal l227, 0x00000000, 0x3636DF25, 0xB492923A, 0x00000000
    mad_ieee r2._yz_, r1.z, r2.yyzy, l227
    
    dcl_literal l228, 0x00000000, 0xB95009D4, 0x37D00AE2, 0x00000000
    mad_ieee r2._yz_, r1.z, r2.yyzy, l228
    
    dcl_literal l229, 0x00000000, 0x3C088887, 0xBAB60B60, 0x00000000
    mad_ieee r2._yz_, r1.z, r2.yyzy, l229
    mul_ieee r2._y__, r2.x, r2.y
    
    dcl_literal l230, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r2._y__, r1.y, l230, r2.y_neg(xyzw)
    mad_ieee r1._y__, r1.z, r2.y, r1.y_neg(xyzw)
    
    dcl_literal l231, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB, 0xBE2AAAAB
    mad_ieee r1._y__, r2.x_neg(xyzw), l231, r1.y
    add r1._y__, r1.x, r1.y_neg(xyzw)
    
    dcl_literal l232, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB, 0x3D2AAAAB
    mad_ieee r2.x___, r1.z, r2.z, l232
    mul_ieee r2._y__, r1.z, r1.z
    
    dcl_literal l233, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r1.x___, r1.x, l233
    
    dcl_literal l234, 0x3E99999A, 0x3E99999A, 0x3E99999A, 0x3E99999A
    ige r2.__z_, r1.x, l234
    
    dcl_literal l235, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ige r2.___w, l235, r1.x
    and r2.__z_, r2.z, r2.w
    
    dcl_literal l236, 0xFF000000, 0xFF000000, 0xFF000000, 0xFF000000
    iadd r2.___w, r1.x, l236
    and r2.__z_, r2.z, r2.w
    
    dcl_literal l237, 0x3F480000, 0x3F480000, 0x3F480000, 0x3F480000
    ilt r1.x___, l237, r1.x
    
    dcl_literal l238, 0x3E900000, 0x3E900000, 0x3E900000, 0x3E900000
    cmov_logical r1.x___, r1.x, l238, r2.z
    
    dcl_literal l239, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mad_ieee r1.__z_, r1.z, l239, r1.x_neg(xyzw)
    
    dcl_literal l240, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r1.x___, r1.x_neg(xyzw), l240
    mad_ieee r1.___w, r2.x, r2.y, r1.w_neg(xyzw)
    add r1.__z_, r1.z, r1.w_neg(xyzw)
    add r1.x___, r1.x, r1.z_neg(xyzw)
    
    dcl_literal l241, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
    eq r2, r0.w, l241
    and r0.___w, r1.y, r2.x
    cmov_logical r0.___w, r2.y, r1.x, r0.w
    cmov_logical r0.___w, r2.z, r1.y_neg(xyzw), r0.w
    cmov_logical r0._y__, r2.w, r1.x_neg(xyzw), r0.w
endif
dcl_literal l242, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l242
cmov_logical r0._y__, r0.w, r0.y_neg(xyzw), r0.y
dcl_literal l243, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.z, l243
dcl_literal l244, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.w, l244, r0.y
dcl_literal l245, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l245, r0.z
dcl_literal l246, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l246
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__smad24_i32
mdef(390)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
dcl_literal l0, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ishl r1.xy__, r0.xyxx, l0
dcl_literal l1, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ishr r1.xy__, r1.xyxx, l1
imad r0.x___, r1.x, r1.y, r0.z
mov out0, r0
mend
__smad_hi_i16
mdef(391)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
imul r1.x___, r0.x, r0.y
dcl_literal l5, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ishr r1.x___, r1.x, l5
iadd r1.x___, r1.x, r0.z
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1._y__, l6, r1.x
dcl_literal l7, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r1.__z_, r1.x, l7
cmov_logical r0.x___, r1.y, r1.z, r1.x
mov out0, r0
mend
__smad_hi_i32
mdef(392)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
dcl_literal l10, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
ishr r1.xy__, r0.xyxx, l10
ixor r1.__z_, r0.y, r0.x
dcl_literal l11, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
ishr r1.__z_, r1.z, l11
ixor r2.xy__, r0.xyxx, r1.xyxx
iadd r1.xy__, r2.xyxx, r1.xyxx_neg(xyzw)
dcl_literal l12, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
and r2.xy__, r1.xyxx, l12
dcl_literal l13, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.xy__, r1.xyxx, l13
umul r1.___w, r1.x, r1.y
umul r1.x___, r1.x, r2.y
umul r1._y__, r2.x, r1.y
umul r2.x___, r2.x, r2.y
dcl_literal l14, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r2._y__, r2.x, l14
dcl_literal l15, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r2.__z_, r1.y, l15
iadd r2._y__, r2.y, r2.z
iadd r1.x___, r1.x, r2.y
dcl_literal l16, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r2._y__, r1.x, l16
iadd r1.___w, r1.w, r2.y
dcl_literal l17, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1._y__, r1.y, l17
iadd r1._y__, r1.w, r1.y
dcl_literal l18, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ishl r1.x___, r1.x, l18
dcl_literal l19, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r1.___w, r2.x, l19
ior r1.x___, r1.x, r1.w
ixor r1.x__w, r1.z, r1.xxxy
iadd r1.x___, r1.x, r1.z_neg(xyzw)
iadd r2.x___, r1.w, r1.z_neg(xyzw)
cmov_logical r1.x___, r1.x, r1.w, r2.x
cmov_logical r1.x___, r1.z, r1.x, r1.y
iadd r0.x___, r1.x, r0.z
mov out0, r0
mend
__smad_hi_i8
mdef(393)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
imul r1.x___, r0.x, r0.y
dcl_literal l0, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ishr r1.x___, r1.x, l0
iadd r1.x___, r1.x, r0.z
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1._y__, l1, r1.x
dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r1.__z_, r1.x, l2
cmov_logical r0.x___, r1.y, r1.z, r1.x
mov out0, r0
mend
__smad_sat_i16
mdef(394)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
imad r1.x___, r0.x, r0.y, r0.y
dcl_literal l3, 0x00007FFF, 0x00007FFF, 0x00007FFF, 0x00007FFF
imin r1.x___, r1.x, l3
dcl_literal l4, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000
imax r0.___w, r1.x, l4
mov r0.x___, r0.w
mov out0, r0
mend
__smad_sat_i32
mdef(395)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
imul r1.x___, r0.x, r0.y
imad r1._y__, r0.x, r0.y, r0.y
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.__z_, l6, r0.y
ilt r1.___w, r1.y, r1.x
and r1.__z_, r1.z, r1.w
dcl_literal l7, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
cmov_logical r1.__z_, r1.z, l7, r1.y
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.___w, r0.y, l8
ilt r1.x___, r1.x, r1.y
and r1.x___, r1.w, r1.x
dcl_literal l9, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.___w, r1.x, l9, r1.z
mov r0.x___, r0.w
mov out0, r0
mend
__smad_sat_i8
mdef(396)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
imad r1.x___, r0.x, r0.y, r0.y
dcl_literal l0, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
imin r1.x___, r1.x, l0
dcl_literal l1, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80
imax r0.___w, r1.x, l1
mov r0.x___, r0.w
mov out0, r0
mend
__smax_i16
mdef(397)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
imax r0.x___, r0.y, r0.x
mov out0, r0
mend
__smax_i32
mdef(398)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
imax r0.x___, r0.y, r0.x
mov out0, r0
mend
__smax_i8
mdef(399)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
imax r0.x___, r0.y, r0.x
mov out0, r0
mend
__smin_i16
mdef(400)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
imin r0.x___, r0.y, r0.x
mov out0, r0
mend
__smin_i32
mdef(401)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
imin r0.x___, r0.y, r0.x
mov out0, r0
mend
__smin_i8
mdef(402)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
imin r0.x___, r0.y, r0.x
mov out0, r0
mend
__smod_i16
mdef(403)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l13, 0x0000FFFF, 0x0000FFFF, 0x00008000, 0x00000000
and r1.xyz_, r0.xyxx, l13
dcl_literal l14, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l14
dcl_literal l15, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
ior r1.___w, r1.x, l15
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l16, 0x00008000, 0x00008000, 0x00008000, 0x00008000
and r1.__z_, r0.w, l16
dcl_literal l17, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000, 0xFFFF0000
ior r1.___w, r0.w, l17
cmov_logical r0.___w, r1.z, r1.w, r0.w
ixor r1.__z_, r1.x, r0.w
imax r1.___w, r1.x, r1.x_neg(xyzw)
imax r2.x___, r0.w, r0.w_neg(xyzw)
udiv r1.___w, r1.w, r2.x
inegate r2.x___, r1.w
dcl_literal l18, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r1.__z_, r1.z, l18
cmov_logical r1.__z_, r1.z, r2.x, r1.w
dcl_literal l19, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, r1.z, l19
imul r0.___w, r0.w, r1.y
iadd r0.___w, r1.x, r0.w_neg(xyzw)
dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.w, l20
mov r0.x___, r0.z
mov out0, r0
mend
__smod_i32
mdef(404)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l25, 0, 0, 0, 0
mov r0._y__, r1.x
ilt r1.xy, r0, l25
iadd r0.xy, r0, r1
ixor r0.xy, r0, r1
udiv r2.x, r0.x, r0.y
umul r2.x, r2.x, r0.y
iadd r0.x, r0.x, r2.x_neg(xyzw)
iadd r0.x, r0.x, r1.x
ixor r0.x, r0.x, r1.x
mov out0, r0
mend
__smod_i64
mdef(405)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0.__zw, r1.yyxy
dcl_literal l1, 0x80000000, 0x80000000, 0x00000000, 0x00000000
and r1.xy__, r0.ywyy, l1
inegate r2, r0
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r1.__zw, l2, r2.zzzx
iadd r1.__zw, r1.zzzw, r2.wwwy
cmov_logical r0._y_w, r1.yyyx, r1.zzzw, r0.wwwy
cmov_logical r0.x_z_, r1.xxyx, r2.xxzx, r0.xxzx
ult r1._y__, r0.w, r0.y
ieq r1.__z_, r0.w, r0.y
ult r1.___w, r0.x, r0.z
and r1.___w, r1.z, r1.w
ior r1.___w, r1.y, r1.w
dcl_literal l3, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.___w, r1.w, l3, l4
ieq r2.x___, r0.x, r0.z
and r2.x___, r1.z, r2.x
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.___w, r2.x, l5, r1.w
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r2.xy__, r0.yzyy, l6
and r2.x___, r2.y, r2.x
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.__z_, r2.x, l7, r0.z
dcl_literal l8, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r2._yz_, r0.yywy, l8
dcl_literal l9, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.xy__, r0.ywyy, l9
dcl_literal l10, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.___w, r0.z, l10
ior r2.___w, r3.x, r2.w
dcl_literal l11, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r2.w, l11
dcl_literal l12, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.x___, r0.z, l12
dcl_literal l13, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000
ior r3.__zw, r2.yyyz, l13
dcl_literal l14, 0x00000000, 0x00000000, 0xBF800000, 0xBF800000
add r3.__zw, r3.zzzw, l14
dcl_literal l15, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
and r3.__zw, r3.zzzw, l15
dcl_literal l16, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000
iadd r3.__zw, l16, r3.zzzw_neg(xyzw)
dcl_literal l17, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
and r3.__zw, r3.zzzw, l17
dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__zw, r3.zzzw, l18
dcl_literal l19, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.__zw, r3.zzzw, l19
dcl_literal l20, 0x00000000, 0x00000017, 0x00000017, 0x00000000
cmov_logical r2._yz_, r2.yyzy, r3.zzwz, l20
dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.__z_, r2.w, l21
dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.__z_, r3.z, l22
dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l23
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.__z_, l24, r3.z_neg(xyzw)
dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l25
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__z_, r3.z, l26
dcl_literal l27, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.__z_, r3.z, l27
dcl_literal l28, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r2.___w, r2.w, r3.z, l28
dcl_literal l29, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.__z_, r3.x, l29
dcl_literal l30, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.__z_, r3.z, l30
dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l31
dcl_literal l32, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.__z_, l32, r3.z_neg(xyzw)
dcl_literal l33, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l33
dcl_literal l34, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__z_, r3.z, l34
dcl_literal l35, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.__z_, r3.z, l35
dcl_literal l36, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.x___, r3.x, r3.z, l36
dcl_literal l37, 0x00000000, 0x00000000, 0x00000017, 0x00000017
ieq r3.__zw, r2.yyyz, l37
iadd r2.___w, r2.y, r2.w
cmov_logical r2._y__, r3.z, r2.w, r2.y
dcl_literal l38, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.__z_, r2.w, l38
iadd r2.___w, r2.w, r3.x
cmov_logical r2._y__, r3.z, r2.w, r2.y
dcl_literal l39, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r2.___w, r2.y, l39
dcl_literal l40, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.x___, r2.y, l40
dcl_literal l41, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F
cmov_logical r2.___w, r2.w, r3.x, l41
ult r3.x___, r0.x, r0.z
and r3.x___, r1.z, r3.x
ior r1._y__, r1.y, r3.x
dcl_literal l42, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l43, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1._y__, r1.y, l42, l43
ieq r3.x___, r0.x, r0.z
and r1.__z_, r1.z, r3.x
dcl_literal l44, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l44, r1.y
dcl_literal l45, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r1.__z_, r0.x, l45
ior r1.__z_, r3.y, r1.z
dcl_literal l46, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.__z_, r1.z, l46
dcl_literal l47, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.x___, r0.x, l47
dcl_literal l48, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3._y__, r1.z, l48
dcl_literal l49, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3._y__, r3.y, l49
dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l50
dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3._y__, l51, r3.y_neg(xyzw)
dcl_literal l52, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l52
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3._y__, r3.y, l53
dcl_literal l54, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3._y__, r3.y, l54
dcl_literal l55, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.__z_, r1.z, r3.y, l55
dcl_literal l56, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3._y__, r3.x, l56
dcl_literal l57, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3._y__, r3.y, l57
dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l58
dcl_literal l59, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3._y__, l59, r3.y_neg(xyzw)
dcl_literal l60, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l60
dcl_literal l61, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3._y__, r3.y, l61
dcl_literal l62, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3._y__, r3.y, l62
dcl_literal l63, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.x___, r3.x, r3.y, l63
iadd r1.__z_, r2.z, r1.z
cmov_logical r2.__z_, r3.w, r1.z, r2.z
dcl_literal l64, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3._y__, r1.z, l64
iadd r1.__z_, r1.z, r3.x
cmov_logical r1.__z_, r3.y, r1.z, r2.z
ilt r2.__z_, r1.z, r2.y
ieq r3.x___, r2.y, r1.z
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1._y__, r1.y, l65
and r1._y__, r3.x, r1.y
ior r1._y__, r2.z, r1.y
iadd r2.__z_, r2.y, r1.z_neg(xyzw)
dcl_literal l66, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1._y__, r1.y, r2.z, l66
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r1.y, l67
if_logicalnz r2.z
    ilt r3.x___, r2.w, r1.y
    iadd r3._y__, r1.y, r2.w_neg(xyzw)
    and r3.x___, r3.x, r3.y
    dcl_literal l68, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1._y__, r1.y, l68
    dcl_literal l69, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1._y__, r1.y, l69, r3.x
    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.x___, r1.y, l70
    dcl_literal l71, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3._y__, r1.y, l71
    cmov_logical r3._y__, r3.x, r3.y, r1.y
    dcl_literal l72, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.__z_, r1.y, l72
    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l73, r3.y_neg(xyzw)
    ushr r3.___w, r0.z, r3.w
    ishl r3._y__, r0.z, r3.y
    ishl r3.__z_, r0.y, r3.z
    ior r3.__z_, r3.w, r3.z
    cmov_logical r3.__z_, r3.x, r0.z, r3.z
    dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.x___, r3.x, l74, r3.y
    cmov_logical r3._y__, r1.y, r3.z, r0.y
    cmov_logical r1._y__, r1.y, r3.x, r0.z
    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.x___, r1.z, l75
    dcl_literal l76, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.__z_, r1.z, l76
    cmov_logical r3.__z_, r3.x, r3.z, r1.z
    dcl_literal l77, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.___w, r1.z, l77
    dcl_literal l78, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.__z_, l78, r3.z_neg(xyzw)
    ushr r4.x___, r0.x, r3.z
    ishl r4._y__, r0.w, r3.w
    ior r4.x___, r4.x, r4.y
    cmov_logical r4.x___, r3.x, r0.x, r4.x
    cmov_logical r4.x___, r1.z, r4.x, r0.w
    ushr r3.__z_, r1.y, r3.z
    ishl r3.___w, r3.y, r3.w
    ior r3.__z_, r3.z, r3.w
    cmov_logical r3.x___, r3.x, r1.y, r3.z
    cmov_logical r1.__z_, r1.z, r3.x, r3.y
    udiv r3.x___, r4.x, r1.z
    umul r3.__z_, r3.x, r1.z
    ilt r3.___w, r4.x, r3.z
    iadd r4._y__, r3.z, r4.x_neg(xyzw)
    iadd r4._y__, r4.y, r1.z
    dcl_literal l79, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4._y__, r4.y, l79
    iadd r3.__z_, r4.x, r3.z_neg(xyzw)
    cmov_logical r3.__z_, r3.w, r4.y, r3.z
    udiv r1.__z_, r3.z, r1.z
    iadd r3.__z_, r3.x, r1.z_neg(xyzw)
    iadd r1.__z_, r3.x, r1.z
    cmov_logical r1.__z_, r3.w, r3.z, r1.z
    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r1.y, l80
    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r1.y, l81
    dcl_literal l82, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r1.z, l82
    dcl_literal l83, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r1.__z_, r1.z, l83
    umul r4.x___, r3.z, r1.z
    umul r3.__z_, r3.z, r3.w
    umul r4._y__, r3.x, r1.z
    umul r3.x___, r3.x, r3.w
    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r3.x, l84
    dcl_literal l85, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r4.y, l85
    iadd r4.__z_, r4.z, r4.w
    iadd r3.__z_, r3.z, r4.z
    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r3.z, l86
    iadd r4.x___, r4.x, r4.z
    dcl_literal l87, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r4.y, l87
    iadd r4.x___, r4.x, r4.y
    dcl_literal l88, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.__z_, r3.z, l88
    dcl_literal l89, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r3.x, l89
    ior r3.x___, r3.z, r3.x
    dcl_literal l90, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.y, l90
    dcl_literal l91, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r3.y, l91
    umul r4._y__, r4.y, r3.w
    umul r1.__z_, r3.z, r1.z
    umul r3.__z_, r3.z, r3.w
    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r3.z, l92
    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r1.__z_, r1.z, l93
    iadd r1.__z_, r3.w, r1.z
    iadd r1.__z_, r4.y, r1.z
    dcl_literal l94, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r1.__z_, r1.z, l94
    dcl_literal l95, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.z, l95
    ior r1.__z_, r1.z, r3.z
    iadd r3.__z_, r1.z, r4.x
    ult r1.__z_, r3.z, r1.z
    ult r3.___w, r0.w, r3.z
    ieq r4.x___, r0.w, r3.z
    ult r4._y__, r0.x, r3.x
    and r4._y__, r4.x, r4.y
    ior r3.___w, r3.w, r4.y
    dcl_literal l96, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l97, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r3.___w, r3.w, l96, l97
    ieq r4._y__, r0.x, r3.x
    and r4.x___, r4.x, r4.y
    dcl_literal l98, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.___w, r4.x, l98, r3.w
    dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3.___w, r3.w, l99
    ior r1.__z_, r1.z, r3.w
    iadd r1._y__, r3.x, r1.y_neg(xyzw)
    ult r3.___w, r3.x, r1.y
    iadd r3.___w, r3.z, r3.w
    iadd r3._y__, r3.w, r3.y_neg(xyzw)
    cmov_logical r3._y__, r1.z, r3.y, r3.z
    cmov_logical r1._y__, r1.z, r1.y, r3.x
    iadd r1.__z_, r0.x, r1.y_neg(xyzw)
    ult r3.x___, r0.x, r1.z
    iadd r3.x___, r0.w, r3.x
    iadd r1._y__, r3.x, r3.y_neg(xyzw)
else
    mov r1._yz_, r0.wwxw
endif
ult r3.x___, r1.y, r0.y
ieq r3._y__, r1.y, r0.y
ult r3.__z_, r1.z, r0.z
and r3.__z_, r3.y, r3.z
ior r3.x___, r3.x, r3.z
dcl_literal l100, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l101, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r3.x___, r3.x, l100, l101
ieq r3.__z_, r1.z, r0.z
and r3._y__, r3.y, r3.z
dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r3.y, l102, r3.x
dcl_literal l103, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3._y__, r1.y, l103
dcl_literal l104, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3.__z_, r1.y, l104
dcl_literal l105, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.___w, r1.z, l105
ior r3._y__, r3.y, r3.w
dcl_literal l106, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3._y__, r3.y, l106
dcl_literal l107, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.___w, r1.z, l107
dcl_literal l108, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.z, l108
dcl_literal l109, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l109
dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l110
dcl_literal l111, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l111, r4.x_neg(xyzw)
dcl_literal l112, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l112
dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l113
dcl_literal l114, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l114
dcl_literal l115, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.__z_, r3.z, r4.x, l115
dcl_literal l116, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.y, l116
dcl_literal l117, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l117
dcl_literal l118, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l118
dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l119, r4.x_neg(xyzw)
dcl_literal l120, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l120
dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l121
dcl_literal l122, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l122
dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r4.x, l123
dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.w, l124
dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l125
dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l126
dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l127, r4.x_neg(xyzw)
dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l128
dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l129
dcl_literal l130, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.x___, r4.x, l130
dcl_literal l131, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.___w, r3.w, r4.x, l131
dcl_literal l132, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r4.x___, r3.z, l132
iadd r3._y__, r3.z, r3.y
cmov_logical r3.__z_, r4.x, r3.y, r3.z
dcl_literal l133, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.x___, r3.y, l133
iadd r3._y__, r3.y, r3.w
cmov_logical r3._y__, r4.x, r3.y, r3.z
ilt r3.__z_, r3.y, r2.y
ieq r3.___w, r2.y, r3.y
dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r3.x___, r3.x, l134
and r3.x___, r3.w, r3.x
ior r3.x___, r3.z, r3.x
and r2.__z_, r2.z, r3.x
iadd r3.x___, r2.y, r3.y_neg(xyzw)
dcl_literal l135, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2.__z_, r2.z, r3.x, l135
dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r3.x___, r2.z, l136
if_logicalnz r3.x
    ilt r3.__z_, r2.w, r2.z
    iadd r3.___w, r2.z, r2.w_neg(xyzw)
    and r3.__z_, r3.z, r3.w
    dcl_literal l137, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, r2.z, l137
    dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.__z_, r2.z, l138, r3.z
    dcl_literal l139, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r2.z, l139
    dcl_literal l140, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r2.z, l140
    cmov_logical r3.___w, r3.z, r3.w, r2.z
    dcl_literal l141, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r2.z, l141
    dcl_literal l142, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4._y__, l142, r3.w_neg(xyzw)
    ushr r4._y__, r0.z, r4.y
    ishl r3.___w, r0.z, r3.w
    ishl r4.x___, r0.y, r4.x
    ior r4.x___, r4.y, r4.x
    cmov_logical r4.x___, r3.z, r0.z, r4.x
    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.__z_, r3.z, l143, r3.w
    cmov_logical r3.___w, r2.z, r4.x, r0.y
    cmov_logical r2.__z_, r2.z, r3.z, r0.z
    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r3.y, l144
    dcl_literal l145, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.x___, r3.y, l145
    cmov_logical r4.x___, r3.z, r4.x, r3.y
    dcl_literal l146, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4._y__, r3.y, l146
    dcl_literal l147, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.x___, l147, r4.x_neg(xyzw)
    ushr r4.__z_, r1.z, r4.x
    ishl r4.___w, r1.y, r4.y
    ior r4.__z_, r4.z, r4.w
    cmov_logical r4.__z_, r3.z, r1.z, r4.z
    cmov_logical r4.__z_, r3.y, r4.z, r1.y
    ushr r4.x___, r2.z, r4.x
    ishl r4._y__, r3.w, r4.y
    ior r4.x___, r4.x, r4.y
    cmov_logical r3.__z_, r3.z, r2.z, r4.x
    cmov_logical r3._y__, r3.y, r3.z, r3.w
    udiv r3.__z_, r4.z, r3.y
    umul r4.x___, r3.z, r3.y
    ilt r4._y__, r4.z, r4.x
    iadd r4.___w, r4.x, r4.z_neg(xyzw)
    iadd r4.___w, r4.w, r3.y
    dcl_literal l148, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.___w, r4.w, l148
    iadd r4.x___, r4.z, r4.x_neg(xyzw)
    cmov_logical r4.x___, r4.y, r4.w, r4.x
    udiv r3._y__, r4.x, r3.y
    iadd r4.x___, r3.z, r3.y_neg(xyzw)
    iadd r3._y__, r3.z, r3.y
    cmov_logical r3._y__, r4.y, r4.x, r3.y
    dcl_literal l149, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r2.z, l149
    dcl_literal l150, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r2.z, l150
    dcl_literal l151, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r3.y, l151
    dcl_literal l152, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r3.y, l152
    umul r4.__z_, r4.x, r3.y
    umul r4.x___, r4.x, r4.y
    umul r4.___w, r3.z, r3.y
    umul r3.__z_, r3.z, r4.y
    dcl_literal l153, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.z, l153
    dcl_literal l154, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l154
    iadd r5.x___, r5.x, r5.y
    iadd r4.x___, r4.x, r5.x
    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r4.x, l155
    iadd r4.__z_, r4.z, r5.x
    dcl_literal l156, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.w, l156
    iadd r4.__z_, r4.z, r4.w
    dcl_literal l157, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.x___, r4.x, l157
    dcl_literal l158, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.z, l158
    ior r3.__z_, r4.x, r3.z
    dcl_literal l159, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.w, l159
    dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.w, l160
    umul r4.___w, r4.w, r4.y
    umul r3._y__, r4.x, r3.y
    umul r4.x___, r4.x, r4.y
    dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r4.x, l161
    dcl_literal l162, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l162
    iadd r3._y__, r4.y, r3.y
    iadd r3._y__, r4.w, r3.y
    dcl_literal l163, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3._y__, r3.y, l163
    dcl_literal l164, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r4.x, l164
    ior r3._y__, r3.y, r4.x
    iadd r4.x___, r3.y, r4.z
    ult r3._y__, r4.x, r3.y
    ult r4._y__, r1.y, r4.x
    ieq r4.__z_, r1.y, r4.x
    ult r4.___w, r1.z, r3.z
    and r4.___w, r4.z, r4.w
    ior r4._y__, r4.y, r4.w
    dcl_literal l165, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l166, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4._y__, r4.y, l165, l166
    ieq r4.___w, r1.z, r3.z
    and r4.__z_, r4.z, r4.w
    dcl_literal l167, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4._y__, r4.z, l167, r4.y
    dcl_literal l168, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, r4.y, l168
    ior r3._y__, r3.y, r4.y
    iadd r2.__z_, r3.z, r2.z_neg(xyzw)
    ult r4._y__, r3.z, r2.z
    iadd r4._y__, r4.x, r4.y
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r3.y, r3.w, r4.x
    cmov_logical r2.__z_, r3.y, r2.z, r3.z
    iadd r2.__z_, r1.z, r2.z_neg(xyzw)
    ult r3._y__, r1.z, r2.z
    iadd r3._y__, r1.y, r3.y
    iadd r1._y__, r3.y, r3.w_neg(xyzw)
    mov r1.__z_, r2.z
endif
ult r2.__z_, r1.y, r0.y
ieq r3._y__, r1.y, r0.y
ult r3.__z_, r1.z, r0.z
and r3.__z_, r3.y, r3.z
ior r2.__z_, r2.z, r3.z
dcl_literal l169, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l170, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.__z_, r2.z, l169, l170
ieq r3.__z_, r1.z, r0.z
and r3._y__, r3.y, r3.z
dcl_literal l171, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r3.y, l171, r2.z
dcl_literal l172, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3._y__, r1.y, l172
dcl_literal l173, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3.__z_, r1.y, l173
dcl_literal l174, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.___w, r1.z, l174
ior r3._y__, r3.y, r3.w
dcl_literal l175, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3._y__, r3.y, l175
dcl_literal l176, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.___w, r1.z, l176
dcl_literal l177, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.z, l177
dcl_literal l178, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l178
dcl_literal l179, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l179
dcl_literal l180, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l180, r4.x_neg(xyzw)
dcl_literal l181, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l181
dcl_literal l182, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l182
dcl_literal l183, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l183
dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.__z_, r3.z, r4.x, l184
dcl_literal l185, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.y, l185
dcl_literal l186, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l186
dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l187
dcl_literal l188, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l188, r4.x_neg(xyzw)
dcl_literal l189, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l189
dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l190
dcl_literal l191, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l191
dcl_literal l192, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r4.x, l192
dcl_literal l193, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.w, l193
dcl_literal l194, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l194
dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l195
dcl_literal l196, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l196, r4.x_neg(xyzw)
dcl_literal l197, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l197
dcl_literal l198, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l198
dcl_literal l199, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.x___, r4.x, l199
dcl_literal l200, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.___w, r3.w, r4.x, l200
dcl_literal l201, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r4.x___, r3.z, l201
iadd r3._y__, r3.z, r3.y
cmov_logical r3.__z_, r4.x, r3.y, r3.z
dcl_literal l202, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.x___, r3.y, l202
iadd r3._y__, r3.y, r3.w
cmov_logical r3._y__, r4.x, r3.y, r3.z
ilt r3.__z_, r3.y, r2.y
ieq r3.___w, r2.y, r3.y
dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.z, l203
and r2.__z_, r3.w, r2.z
ior r2.__z_, r3.z, r2.z
and r2.__z_, r3.x, r2.z
iadd r3.x___, r2.y, r3.y_neg(xyzw)
dcl_literal l204, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2.__z_, r2.z, r3.x, l204
dcl_literal l205, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r3.x___, r2.z, l205
if_logicalnz r3.x
    ilt r3.__z_, r2.w, r2.z
    iadd r3.___w, r2.z, r2.w_neg(xyzw)
    and r3.__z_, r3.z, r3.w
    dcl_literal l206, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, r2.z, l206
    dcl_literal l207, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.__z_, r2.z, l207, r3.z
    dcl_literal l208, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r2.z, l208
    dcl_literal l209, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r2.z, l209
    cmov_logical r3.___w, r3.z, r3.w, r2.z
    dcl_literal l210, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r2.z, l210
    dcl_literal l211, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4._y__, l211, r3.w_neg(xyzw)
    ushr r4._y__, r0.z, r4.y
    ishl r3.___w, r0.z, r3.w
    ishl r4.x___, r0.y, r4.x
    ior r4.x___, r4.y, r4.x
    cmov_logical r4.x___, r3.z, r0.z, r4.x
    dcl_literal l212, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.__z_, r3.z, l212, r3.w
    cmov_logical r3.___w, r2.z, r4.x, r0.y
    cmov_logical r2.__z_, r2.z, r3.z, r0.z
    dcl_literal l213, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r3.y, l213
    dcl_literal l214, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.x___, r3.y, l214
    cmov_logical r4.x___, r3.z, r4.x, r3.y
    dcl_literal l215, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4._y__, r3.y, l215
    dcl_literal l216, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.x___, l216, r4.x_neg(xyzw)
    ushr r4.__z_, r1.z, r4.x
    ishl r4.___w, r1.y, r4.y
    ior r4.__z_, r4.z, r4.w
    cmov_logical r4.__z_, r3.z, r1.z, r4.z
    cmov_logical r4.__z_, r3.y, r4.z, r1.y
    ushr r4.x___, r2.z, r4.x
    ishl r4._y__, r3.w, r4.y
    ior r4.x___, r4.x, r4.y
    cmov_logical r3.__z_, r3.z, r2.z, r4.x
    cmov_logical r3._y__, r3.y, r3.z, r3.w
    udiv r3.__z_, r4.z, r3.y
    umul r4.x___, r3.z, r3.y
    ilt r4._y__, r4.z, r4.x
    iadd r4.___w, r4.x, r4.z_neg(xyzw)
    iadd r4.___w, r4.w, r3.y
    dcl_literal l217, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.___w, r4.w, l217
    iadd r4.x___, r4.z, r4.x_neg(xyzw)
    cmov_logical r4.x___, r4.y, r4.w, r4.x
    udiv r3._y__, r4.x, r3.y
    iadd r4.x___, r3.z, r3.y_neg(xyzw)
    iadd r3._y__, r3.z, r3.y
    cmov_logical r3._y__, r4.y, r4.x, r3.y
    dcl_literal l218, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r2.z, l218
    dcl_literal l219, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r2.z, l219
    dcl_literal l220, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r3.y, l220
    dcl_literal l221, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r3.y, l221
    umul r4.__z_, r4.x, r3.y
    umul r4.x___, r4.x, r4.y
    umul r4.___w, r3.z, r3.y
    umul r3.__z_, r3.z, r4.y
    dcl_literal l222, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.z, l222
    dcl_literal l223, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l223
    iadd r5.x___, r5.x, r5.y
    iadd r4.x___, r4.x, r5.x
    dcl_literal l224, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r4.x, l224
    iadd r4.__z_, r4.z, r5.x
    dcl_literal l225, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.w, l225
    iadd r4.__z_, r4.z, r4.w
    dcl_literal l226, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.x___, r4.x, l226
    dcl_literal l227, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.z, l227
    ior r3.__z_, r4.x, r3.z
    dcl_literal l228, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.w, l228
    dcl_literal l229, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.w, l229
    umul r4.___w, r4.w, r4.y
    umul r3._y__, r4.x, r3.y
    umul r4.x___, r4.x, r4.y
    dcl_literal l230, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r4.x, l230
    dcl_literal l231, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l231
    iadd r3._y__, r4.y, r3.y
    iadd r3._y__, r4.w, r3.y
    dcl_literal l232, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3._y__, r3.y, l232
    dcl_literal l233, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r4.x, l233
    ior r3._y__, r3.y, r4.x
    iadd r4.x___, r3.y, r4.z
    ult r3._y__, r4.x, r3.y
    ult r4._y__, r1.y, r4.x
    ieq r4.__z_, r1.y, r4.x
    ult r4.___w, r1.z, r3.z
    and r4.___w, r4.z, r4.w
    ior r4._y__, r4.y, r4.w
    dcl_literal l234, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l235, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4._y__, r4.y, l234, l235
    ieq r4.___w, r1.z, r3.z
    and r4.__z_, r4.z, r4.w
    dcl_literal l236, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4._y__, r4.z, l236, r4.y
    dcl_literal l237, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, r4.y, l237
    ior r3._y__, r3.y, r4.y
    iadd r2.__z_, r3.z, r2.z_neg(xyzw)
    ult r4._y__, r3.z, r2.z
    iadd r4._y__, r4.x, r4.y
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r3.y, r3.w, r4.x
    cmov_logical r2.__z_, r3.y, r2.z, r3.z
    iadd r2.__z_, r1.z, r2.z_neg(xyzw)
    ult r3._y__, r1.z, r2.z
    iadd r3._y__, r1.y, r3.y
    iadd r1._y__, r3.y, r3.w_neg(xyzw)
    mov r1.__z_, r2.z
endif
ult r2.__z_, r1.y, r0.y
ieq r3._y__, r1.y, r0.y
ult r3.__z_, r1.z, r0.z
and r3.__z_, r3.y, r3.z
ior r2.__z_, r2.z, r3.z
dcl_literal l238, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l239, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.__z_, r2.z, l238, l239
ieq r3.__z_, r1.z, r0.z
and r3._y__, r3.y, r3.z
dcl_literal l240, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r3.y, l240, r2.z
dcl_literal l241, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3._y__, r1.y, l241
dcl_literal l242, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3.__z_, r1.y, l242
dcl_literal l243, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.___w, r1.z, l243
ior r3._y__, r3.y, r3.w
dcl_literal l244, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3._y__, r3.y, l244
dcl_literal l245, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.___w, r1.z, l245
dcl_literal l246, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.z, l246
dcl_literal l247, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l247
dcl_literal l248, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l248
dcl_literal l249, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l249, r4.x_neg(xyzw)
dcl_literal l250, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l250
dcl_literal l251, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l251
dcl_literal l252, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l252
dcl_literal l253, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.__z_, r3.z, r4.x, l253
dcl_literal l254, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.y, l254
dcl_literal l255, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l255
dcl_literal l256, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l256
dcl_literal l257, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l257, r4.x_neg(xyzw)
dcl_literal l258, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l258
dcl_literal l259, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l259
dcl_literal l260, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.x___, r4.x, l260
dcl_literal l261, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r4.x, l261
dcl_literal l262, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.x___, r3.w, l262
dcl_literal l263, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.x___, r4.x, l263
dcl_literal l264, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l264
dcl_literal l265, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.x___, l265, r4.x_neg(xyzw)
dcl_literal l266, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.x___, r4.x, l266
dcl_literal l267, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.x___, r4.x, l267
dcl_literal l268, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.x___, r4.x, l268
dcl_literal l269, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.___w, r3.w, r4.x, l269
dcl_literal l270, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r4.x___, r3.z, l270
iadd r3._y__, r3.z, r3.y
cmov_logical r3.__z_, r4.x, r3.y, r3.z
dcl_literal l271, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.x___, r3.y, l271
iadd r3._y__, r3.y, r3.w
cmov_logical r3._y__, r4.x, r3.y, r3.z
ilt r3.__z_, r3.y, r2.y
ieq r3.___w, r2.y, r3.y
dcl_literal l272, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.z, l272
and r2.__z_, r3.w, r2.z
ior r2.__z_, r3.z, r2.z
and r2.__z_, r3.x, r2.z
iadd r2._y__, r2.y, r3.y_neg(xyzw)
dcl_literal l273, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2._y__, r2.z, r2.y, l273
dcl_literal l274, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.y, l274
if_logicalnz r2.z
    ilt r2.__z_, r2.w, r2.y
    iadd r2.___w, r2.y, r2.w_neg(xyzw)
    and r2.__z_, r2.z, r2.w
    dcl_literal l275, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, r2.y, l275
    dcl_literal l276, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2._y__, r2.y, l276, r2.z
    dcl_literal l277, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.__z_, r2.y, l277
    dcl_literal l278, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r2.___w, r2.y, l278
    cmov_logical r2.___w, r2.z, r2.w, r2.y
    dcl_literal l279, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.x___, r2.y, l279
    dcl_literal l280, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.__z_, l280, r2.w_neg(xyzw)
    ushr r3.__z_, r0.z, r3.z
    ishl r2.___w, r0.z, r2.w
    ishl r3.x___, r0.y, r3.x
    ior r3.x___, r3.z, r3.x
    cmov_logical r3.x___, r2.z, r0.z, r3.x
    dcl_literal l281, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.__z_, r2.z, l281, r2.w
    cmov_logical r0._y__, r2.y, r3.x, r0.y
    cmov_logical r0.__z_, r2.y, r2.z, r0.z
    dcl_literal l282, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2._y__, r3.y, l282
    dcl_literal l283, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r2.__z_, r3.y, l283
    cmov_logical r2.__z_, r2.y, r2.z, r3.y
    dcl_literal l284, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r2.___w, r3.y, l284
    dcl_literal l285, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r2.__z_, l285, r2.z_neg(xyzw)
    ushr r3.x___, r1.z, r2.z
    ishl r3.__z_, r1.y, r2.w
    ior r3.x___, r3.x, r3.z
    cmov_logical r3.x___, r2.y, r1.z, r3.x
    cmov_logical r3.x___, r3.y, r3.x, r1.y
    ushr r2.__z_, r0.z, r2.z
    ishl r2.___w, r0.y, r2.w
    ior r2.__z_, r2.z, r2.w
    cmov_logical r2._y__, r2.y, r0.z, r2.z
    cmov_logical r2._y__, r3.y, r2.y, r0.y
    udiv r2.__z_, r3.x, r2.y
    umul r2.___w, r2.z, r2.y
    ilt r3._y__, r3.x, r2.w
    iadd r3.__z_, r2.w, r3.x_neg(xyzw)
    iadd r3.__z_, r3.z, r2.y
    dcl_literal l286, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r3.__z_, r3.z, l286
    iadd r2.___w, r3.x, r2.w_neg(xyzw)
    cmov_logical r2.___w, r3.y, r3.z, r2.w
    udiv r2._y__, r2.w, r2.y
    iadd r2.___w, r2.z, r2.y_neg(xyzw)
    iadd r2._y__, r2.z, r2.y
    cmov_logical r2._y__, r3.y, r2.w, r2.y
    dcl_literal l287, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r0.z, l287
    dcl_literal l288, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2.___w, r0.z, l288
    dcl_literal l289, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r2.y, l289
    dcl_literal l290, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2._y__, r2.y, l290
    umul r3._y__, r2.w, r2.y
    umul r2.___w, r2.w, r3.x
    umul r3.__z_, r2.z, r2.y
    umul r2.__z_, r2.z, r3.x
    dcl_literal l291, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.z, l291
    dcl_literal l292, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.z, l292
    iadd r3.___w, r3.w, r4.x
    iadd r2.___w, r2.w, r3.w
    dcl_literal l293, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.w, l293
    iadd r3._y__, r3.y, r3.w
    dcl_literal l294, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r3.z, l294
    iadd r3._y__, r3.y, r3.z
    dcl_literal l295, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r2.___w, r2.w, l295
    dcl_literal l296, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r2.z, l296
    ior r2.__z_, r2.w, r2.z
    dcl_literal l297, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.___w, r0.y, l297
    dcl_literal l298, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r0.y, l298
    umul r3.__z_, r3.z, r3.x
    umul r2._y__, r2.w, r2.y
    umul r2.___w, r2.w, r3.x
    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.x___, r2.w, l299
    dcl_literal l300, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2._y__, r2.y, l300
    iadd r2._y__, r3.x, r2.y
    iadd r2._y__, r3.z, r2.y
    dcl_literal l301, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r2._y__, r2.y, l301
    dcl_literal l302, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.___w, r2.w, l302
    ior r2._y__, r2.y, r2.w
    iadd r2.___w, r2.y, r3.y
    ult r2._y__, r2.w, r2.y
    ult r3.x___, r1.y, r2.w
    ieq r3._y__, r1.y, r2.w
    ult r3.__z_, r1.z, r2.z
    and r3.__z_, r3.y, r3.z
    ior r3.x___, r3.x, r3.z
    dcl_literal l303, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l304, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r3.x___, r3.x, l303, l304
    ieq r3.__z_, r1.z, r2.z
    and r3._y__, r3.y, r3.z
    dcl_literal l305, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.x___, r3.y, l305, r3.x
    dcl_literal l306, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3.x___, r3.x, l306
    ior r2._y__, r2.y, r3.x
    iadd r0.__z_, r2.z, r0.z_neg(xyzw)
    ult r3.x___, r2.z, r0.z
    iadd r3.x___, r2.w, r3.x
    iadd r0._y__, r3.x, r0.y_neg(xyzw)
    cmov_logical r0._yz_, r2.y, r0.yyzy, r2.wwzw
    iadd r0.__z_, r1.z, r0.z_neg(xyzw)
    ult r2._y__, r1.z, r0.z
    iadd r2._y__, r1.y, r2.y
    iadd r1._y__, r2.y, r0.y_neg(xyzw)
    mov r1.__z_, r0.z
endif
dcl_literal l307, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0._y__, r1.w, l307
cmov_logical r0.x_z_, r0.y, r0.xxwx, r1.zzyz
dcl_literal l308, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r1.w, r0.xzxx, l308
dcl_literal l309, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r2.x, l309, r0.xyxx
inegate r0.__z_, r0.x
dcl_literal l310, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r0.___w, l310, r0.z
iadd r0.___w, r0.w, r0.y_neg(xyzw)
cmov_logical r0.xy__, r1.x, r0.zwzz, r0.xyxx
mov out0, r0
mend
__smod_i8
mdef(406)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l1, 0x000000FF, 0x000000FF, 0x00000080, 0x00000000
and r1.xyz_, r0.xyxx, l1
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l2
dcl_literal l3, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00
ior r1.___w, r1.x, l3
cmov_logical r1.x___, r1.z, r1.w, r1.x
dcl_literal l4, 0x00000080, 0x00000080, 0x00000080, 0x00000080
and r1.__z_, r0.w, l4
dcl_literal l5, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00, 0xFFFFFF00
ior r1.___w, r0.w, l5
cmov_logical r0.___w, r1.z, r1.w, r0.w
ixor r1.__z_, r1.x, r0.w
imax r1.___w, r1.x, r1.x_neg(xyzw)
imax r2.x___, r0.w, r0.w_neg(xyzw)
udiv r1.___w, r1.w, r2.x
inegate r2.x___, r1.w
dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r1.__z_, r1.z, l6
cmov_logical r1.__z_, r1.z, r2.x, r1.w
dcl_literal l7, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, r1.z, l7
imul r0.___w, r0.w, r1.y
iadd r0.___w, r1.x, r0.w_neg(xyzw)
dcl_literal l8, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.__z_, r0.w, l8
mov r0.x___, r0.z
mov out0, r0
mend
__smoothstep_f32
mdef(407)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
ge r0.___w, r0.x, r0.y
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x00000000
and r1.xyz_, r0.xyzx, l0
add r0.xy__, r0.x_neg(xyzw), r0.zyzz
dcl_literal l1, 0x7F800000, 0x7F800000, 0x7F800000, 0x00000000
ilt r1.xyz_, l1, r1.xyzx
ior r0.__z_, r0.w, r1.x
ior r0.__z_, r1.y, r0.z
ior r0.__z_, r1.z, r0.z
div_zeroop(infinity)_sat r0.x___, r0.x, r0.y
mul_ieee r0._y__, r0.x, r0.x
dcl_literal l2, 0x40000000, 0x40000000, 0x40000000, 0x40000000
dcl_literal l3, 0x40400000, 0x40400000, 0x40400000, 0x40400000
mad_ieee r0.x___, r0.x_neg(xyzw), l2, l3
mul_ieee r0.x___, r0.y, r0.x
dcl_literal l4, 0x7FC00001, 0x7FC00001, 0x7FC00001, 0x7FC00001
cmov_logical r0.x___, r0.z, l4, r0.x
mov out0, r0
mend
__smul24_i32
mdef(408)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l0, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ishl r1.xy__, r0.xyxx, l0
dcl_literal l1, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ishr r1.xy__, r1.xyxx, l1
imul r0.x___, r1.x, r1.y
mov out0, r0
mend
__smul_hi_i16
mdef(409)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y_, r1.x
imul r0.___w, r0.x, r0.y
dcl_literal l2, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ishr r0.x___, r0.w, l2
mov out0, r0
mend
__smul_hi_i32
mdef(410)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y_, r1.x
dcl_literal l4, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
ishr r1.xy__, r0.xyxx, l4
ixor r0.___w, r0.y, r0.x
dcl_literal l5, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
ishr r0.___w, r0.w, l5
ixor r2.xy__, r0.xyxx, r1.xyxx
iadd r1.xy__, r2.xyxx, r1.xyxx_neg(xyzw)
dcl_literal l6, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF
and r1.__zw, r1.xxxy, l6
dcl_literal l7, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.xy__, r1.xyxx, l7
umul r2.x___, r1.x, r1.y
umul r1.xyz_, r1.xzzx, r1.wyww
dcl_literal l8, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.___w, r1.z, l8
dcl_literal l9, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r2._y__, r1.y, l9
iadd r1.___w, r1.w, r2.y
iadd r1.x___, r1.x, r1.w
dcl_literal l10, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.___w, r1.x, l10
iadd r1.___w, r2.x, r1.w
dcl_literal l11, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1._y__, r1.y, l11
iadd r1._y__, r1.w, r1.y
dcl_literal l12, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ishl r1.x___, r1.x, l12
dcl_literal l13, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r1.__z_, r1.z, l13
ior r1.x___, r1.x, r1.z
ixor r1.x_z_, r0.w, r1.xxyx
iadd r1.x__w, r1.xxxz, r0.w_neg(xyzw)
cmov_logical r1.x___, r1.x, r1.z, r1.w
cmov_logical r0.x___, r0.w, r1.x, r1.y
mov out0, r0
mend
__smul_hi_i8
mdef(411)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y_, r1.x
imul r0.___w, r0.x, r0.y
dcl_literal l0, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ishr r0.___w, r0.w, l0
mov r0.x___, r0.w
mov out0, r0
mend
__sqrt_f32
mdef(412)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x7F800000, 0x00000000
and r0._yz_, r0.x, l0
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.__z_, r0.z, l1
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r0.___w, r0.y, l2
and r0.__z_, r0.z, r0.w
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, r0.x, l3
and r0.___w, r0.w, r1.x
ior r0.__z_, r0.z, r0.w
dcl_literal l4, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l4, r0.y
ior r0.__z_, r0.z, r0.y
if_logicalnz r0.z
    
    dcl_literal l5, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.__z_, r0.x, l5
    itof r0.__z_, r0.z
    
    dcl_literal l6, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r1.xy__, r0.z, l6
    
    dcl_literal l7, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.__z_, r1.x, l7
    
    dcl_literal l8, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    iadd r0.__z_, r0.z, l8
    
    dcl_literal l9, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r1.x___, r1.y, l9
    
    dcl_literal l10, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0.__z_, l10, r0.z_neg(xyzw)
    
    dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r1._y__, l11, r0.z
    
    dcl_literal l12, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.__z_, r1.y, l12, r0.z
    
    dcl_literal l13, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1._y__, l13, r0.z
    ishr r1.__z_, r1.x, r0.z
    inegate r0.__z_, r0.z
    
    dcl_literal l14, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.__z_, r0.z, l14
    iadd r0.__z_, r1.x, r0.z
    cmov_logical r0.__z_, r1.y, r1.z, r0.z
    sqrt_vec r0.__z_, r0.z
    
    dcl_literal l15, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r1.xy__, r0.z, l15
    if_logicalz r1.x
        itof r1.__z_, r1.y
        
        dcl_literal l16, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
        and r1.__zw, r1.z, l16
        
        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.__z_, r1.z, l17
        
        dcl_literal l18, 0xFFFFFFF4, 0xFFFFFFF4, 0xFFFFFFF4, 0xFFFFFFF4
        iadd r1.__z_, r1.z, l18
        
        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.___w, r1.w, l19
        
        dcl_literal l20, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r1.__z_, l20, r1.z_neg(xyzw)
        
        dcl_literal l21, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2.x___, l21, r1.z
        
        dcl_literal l22, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.__z_, r2.x, l22, r1.z
        
        dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r2.x___, l23, r1.z
        ishr r2._y__, r1.w, r1.z
        inegate r1.__z_, r1.z
        
        dcl_literal l24, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.__z_, r1.z, l24
        iadd r1.__z_, r1.w, r1.z
        cmov_logical r1.__z_, r2.x, r2.y, r1.z
    else
        
        dcl_literal l25, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r0.__z_, r0.z, l25
        
        dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.x___, r1.x, l26
        
        dcl_literal l27, 0xFA000000, 0xFA000000, 0xFA000000, 0xFA000000
        iadd r0.__z_, r0.z, l27
        
        dcl_literal l28, 0xFFFFFF75, 0xFFFFFF75, 0xFFFFFF75, 0xFFFFFF75
        iadd r1.x___, r1.x, l28
        
        dcl_literal l29, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r1.x___, l29, r1.x_neg(xyzw)
        
        dcl_literal l30, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r1.___w, l30, r1.x
        
        dcl_literal l31, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1._y__, r1.y, l31
        ishr r1.x___, r1.y, r1.x
        cmov_logical r1.__z_, r1.w, r1.x, r0.z
    endif
    
    dcl_literal l32, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
    cmov_logical r0.__z_, r0.w, l32, r1.z
    
    dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
    ior r0.___w, r0.x, l33
    cmov_logical r0.x___, r0.y, r0.w, r0.z
else
    sqrt_vec r0.x___, r0.x
endif
mov out0, r0
mend
__sqrt_f64
mdef(413)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x00000001, 0x3ff00000, 0x000fffff, 0x3ff80000
dcl_literal l2, 0xfff80000, 0x3fe00000, -1, 0
dcl_literal l3, 0x10000000, 256, -128, 0x7FF00000
ilt r10.x, r0.y, l2.0
deq r10.y, r0.xy, l2.00
ult r10.z, r0.y, l3.x
deq r10.w, r0.xy, l3.0w
ior r10.w, r10.w, r10.y
cmov_logical r4.x, r10.z, l3.y, l3.0
cmov_logical r10.z, r10.z, l3.z, l3.0
dldexp  r5.xy, r0.xy, r4.x
dsqrt  r1.xy, r5.xy
mov r1.x, l2.0
drcp_zeroop(infinity) r3.xy, r1.xy
mov r3.x, l2.0
dmad  r4.xy, r1.xy, r1.xy, r5.xy_neg(yw)
dldexp  r4.xy, r4.xy, l2.z
dmad  r1.xy, r4.xy, r3.xy_neg(yw), r1.xy
dmad  r4.xy, r1.xy_neg(yw), r3.xy, l1.0y
dmad  r3.xy, r3.xy, r4.xy, r3.xy
dmad  r4.xy, r1.xy, r1.xy, r5.xy_neg(yw)
dldexp  r4.xy, r4.xy, l2.z
dmad  r1.xy, r4.xy, r3.xy_neg(yw), r1.xy
dmad  r4.xy, r1.xy, r1.xy, r5.xy_neg(yw)
dldexp  r4.xy, r4.xy, l2.z
dmad  r1.xy, r4.xy, r3.xy_neg(yw), r1.xy
dldexp  r1.xy, r1.xy, r10.z
cmov_logical r1.xy, r10.xx, l2.0x, r1.xy
cmov_logical r0.xy, r10.ww, r0.xy, r1.xy
mov out0, r0
mend
__sqrt_f64_7XX
mdef(414)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x00000001, 0x3ff00000, 0x40000000, 0x3fe00000
dcl_literal l2, 0xfff80000, 0x7FF00000, -1, 0
dfrexp r20, r0
iand r21.x, r20.y, l1.x
ishr r20.y, r20.y, l1.x
dldexp r20.xy, l1.0y, r20.y
dldexp r20.zw, r20.zw, r21.x
d2f r21.x, r20.zw
sqrt r21.y, r21.x
iadd r21.y, r21.y, l2.z
rsq r21.z, r21.x
f2d r22.xy, r21.y
f2d r21.xy, r21.z
dmad r23.xy, r22.xy, r21.xy_neg(yw),l1.0y
dmad r21.xy, r21.xy, r23.xy, r21.xy
dmad r22.xy, r20.zw, r21.xy, r22.xy
dmul r22.xy, r22.xy, l1.0w
dmad r23.xy, r22.xy, r21.xy_neg(yw),l1.0y
dmad r21.xy, r21.xy, r23.xy, r21.xy
dmad r22.xy, r20.zw, r21.xy, r22.xy
dmul r22.xy, r22.xy, l1.0w
dadd r21.zw, r22.xy, r22.0y_neg(yw)
dmad r23.xy, r22.0y, r22.0y, r20.zw_neg(yw)
dmul r23.zw, r22.0y, r21.zw
dmad r23.xy, r23.zw, l1.0z, r23.xy
dmad r23.xy, r21.zw, r21.zw, r23.xy
dmul r23.xy, r23.xy_neg(yw), r21.xy
dmad r22.xy, r23.xy, l1.0w, r22.xy
dmul r20.xy, r22.xy, r20.xy
ilt r10.x, r0.y, l2.0
deq r10.y, r0.xy, l2.00
deq r10.w, r0.xy, l2.0y
ixor r10.z, r0.y, r0.y_abs
cmov_logical r20.xy, r10.xx, l2.0x, r20.xy
cmov_logical r20.xy, r10.yy, r10.0z, r20.xy
cmov_logical r0.xy, r10.ww, r0.xy, r20.xy
mov out0, r0
mend
__sra_apple_i64
mdef(415)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ishr r5.x, r0.y, r2.x
ishr r6.x, r0.y, l0.x
ushr r7.x, r0.x, r2.x
ishl r8.x, r0.y, r4.x
cmov_logical r9.x, r2.x, r8.x, l0.z
ior r10.x, r7.x, r9.x
cmov_logical r0.x___, r3.x, r5.x, r10.x
cmov_logical r0._y__, r3.x, r6.x, r5.x
mov out0, r0
mend
__sra_apple_v2i64
mdef(416)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ishr r5.x_z, r0.y0w, r2.x0z
ishr r6.x_z, r0.y0w, l0.x
ushr r7.x_z, r0.x0z, r2.x0z
ishl r8.x_z, r0.y0w, r4.x0z
cmov_logical r9.x_z, r2.x0z, r8.x0z, l0.z
ior r10.x_z, r7.x0z, r9.x0z
cmov_logical r0.x_z_, r3.x0z, r5.x0z, r10.x0z
cmov_logical r0._y_w, r3.0x0z, r6.0x0z, r5.0x0z
mov out0, r0
mend
__sra_i64
mdef(417)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x, r1.x, l0.x
iand r3.x, r1.x, l0.y
iadd r4.x, l0.y, r2_neg(x)
ishr r5.x, r0.y, r2.x
ishr r6.x, r0.y, l0.x
ushr r7.x, r0.x, r2.x
ishl r8.x, r0.y, r4.x
cmov_logical r9.x, r2.x, r8.x, l0.z
ior r10.x, r7.x, r9.x
cmov_logical r0.x___, r3.x, r5.x, r10.x
cmov_logical r0._y__, r3.x, r6.x, r5.x
mov out0, r0
mend
__sra_v2i64
mdef(418)_out(1)_in(2)
mov r0, in0
mov r1, in1
dcl_literal l0, 31, 32, 0, 0
iand r2.x_z, r1.x0z, l0.x
iand r3.x_z, r1.x0z, l0.y
iadd r4.x_z, l0.y, r2_neg(xyz)
ishr r5.x_z, r0.y0w, r2.x0z
ishr r6.x_z, r0.y0w, l0.x
ushr r7.x_z, r0.x0z, r2.x0z
ishl r8.x_z, r0.y0w, r4.x0z
cmov_logical r9.x_z, r2.x0z, r8.x0z, l0.z
ior r10.x_z, r7.x0z, r9.x0z
cmov_logical r0.x_z_, r3.x0z, r5.x0z, r10.x0z
cmov_logical r0._y_w, r3.0x0z, r6.0x0z, r5.0x0z
mov out0, r0
mend
__srhadd_i16
mdef(419)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
iadd r0.___w, r0.x, r0.y
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r0.___w, r0.w, l4
dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishr r0.x___, r0.w, l5
mov out0, r0
mend
__srhadd_i32
mdef(420)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
ior r0.___w, r0.y, r0.x
dcl_literal l8, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r0.___w, r0.w, l8
dcl_literal l9, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishr r1.xy__, r0.xyxx, l9
iadd r1.x___, r1.x, r1.y
iadd r0.x___, r1.x, r0.w
mov out0, r0
mend
__srhadd_i8
mdef(421)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
iadd r1.x___, r0.x, r0.y
dcl_literal l0, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r0.___w, r1.x, l0
dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ishr r0.___w, r0.w, l1
mov r0.x___, r0.w
mov out0, r0
mend
__srotate_i16
mdef(422)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
dcl_literal l8, 0x0000000F, 0x0000FFFF, 0x00000000, 0x00000000
and r1.xy__, r0.yxyy, l8
ishl r0.___w, r1.y, r1.x
dcl_literal l9, 0x00000010, 0x00000010, 0x00000010, 0x00000010
iadd r1.x___, l9, r1.x_neg(xyzw)
ushr r1.x___, r1.y, r1.x
ior r0.___w, r0.w, r1.x
dcl_literal l10, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.___w, r0.w, l10
dcl_literal l11, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ishl r0.___w, r0.w, l11
dcl_literal l12, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ishr r0.x___, r0.w, l12
mov out0, r0
mend
__srotate_i32
mdef(423)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
dcl_literal l16, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
and r0.___w, r0.y, l16
ishl r1.x___, r0.x, r0.w
dcl_literal l17, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r0.___w, l17, r0.w_neg(xyzw)
ushr r0.___w, r0.x, r0.w
ior r0.x___, r1.x, r0.w
mov out0, r0
mend
__srotate_i8
mdef(424)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
dcl_literal l0, 0x00000007, 0x000000FF, 0x00000000, 0x00000000
and r1.xy__, r0.yxyy, l0
ishl r0.___w, r1.y, r1.x
dcl_literal l1, 0x00000008, 0x00000008, 0x00000008, 0x00000008
iadd r1.x___, l1, r1.x_neg(xyzw)
ushr r1.x___, r1.y, r1.x
ior r0.___w, r0.w, r1.x
dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.___w, r0.w, l2
dcl_literal l3, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishl r0.___w, r0.w, l3
dcl_literal l4, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishr r0.x___, r0.w, l4
mov out0, r0
mend
__ssub_sat_i16
mdef(425)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
dcl_literal l3, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000, 0xFFFF8000
imax r0.___w, r0.w, l3
dcl_literal l4, 0x00007FFF, 0x00007FFF, 0x00007FFF, 0x00007FFF
imin r0.x___, r0.w, l4
mov out0, r0
mend
__ssub_sat_i32
mdef(426)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
dcl_literal l6, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, r0.y, l6
ilt r1._y__, r0.w, r0.x
and r1.x___, r1.x, r1.y
dcl_literal l7, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
cmov_logical r1.x___, r1.x, l7, r0.w
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1._y__, l8, r0.y
ilt r0.___w, r0.x, r0.w
and r0.___w, r1.y, r0.w
dcl_literal l9, 0x80000000, 0x80000000, 0x80000000, 0x80000000
cmov_logical r0.x___, r0.w, l9, r1.x
mov out0, r0
mend
__ssub_sat_i8
mdef(427)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
dcl_literal l0, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80, 0xFFFFFF80
imax r0.___w, r0.w, l0
dcl_literal l1, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
imin r0.x___, r0.w, l1
mov out0, r0
mend
__step_f32
mdef(428)_out(1)_in(2)
mov r0, in0
mov r1, in1
lt r0.__z_, r0.y, r0.x
dcl_literal l0, 0x00000000, 0x00000000, 0x00000000, 0x00000000
dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r0.z, l0, l1
mov out0, r0
mend
__store_128bit_global
mdef(429)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x], r1
mend
__store_128bit_local
mdef(430)_out(0)_in(2)
mov r0, in0
mov r1, in1
lds_store_vec_id(0) mem, r0.x, r0.x, r1
mend
__store_128bit_private
mdef(431)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x], r1
mend
__store_128bit_uav
mdef(432)_out(0)_in(2)
mov r0, in0
mov r1, in1
uav_raw_store_id(0) mem0, r0.x, r1
mend
__store_32bit_local
mdef(433)_out(0)_in(2)
mov r0, in0
mov r1, in1
lds_store_id(0) mem, r0.x, r0.x, r1
mend
__store_32bit_uav
mdef(434)_out(0)_in(2)
mov r0, in0
mov r1, in1
uav_raw_store_id(0) mem0.x, r0.x, r1
mend
__store_64bit_local
mdef(435)_out(0)_in(2)
mov r0, in0
mov r1, in1
lds_store_vec_id(0) mem.xy__, r0.x, r0.x, r1
mend
__store_64bit_uav
mdef(436)_out(0)_in(2)
mov r0, in0
mov r1, in1
uav_raw_store_id(0) mem0.xy, r0.x, r1
mend
__store_96bit_global
mdef(437)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].xyz_, r1
mend
__store_96bit_local
mdef(438)_out(0)_in(2)
mov r0, in0
mov r1, in1
lds_store_vec_id(0) mem.xyz_, r0.x, r0.x, r1
mend
__store_96bit_private
mdef(439)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].xyz_, r1
mend
__store_96bit_uav
mdef(440)_out(0)_in(2)
mov r0, in0
mov r1, in1
uav_raw_store_id(0) mem0.xyz, r0.x, r1
mend
__store_hi_64bit_global
mdef(441)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].__zw, r1.00xy
mend
__store_hi_64bit_private
mdef(442)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].__zw, r1.00xy
mend
__store_lo_64bit_global
mdef(443)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].xy__, r1.xy
mend
__store_lo_64bit_private
mdef(444)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].xy__, r1.xy
mend
__store_w_32bit_global
mdef(445)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].w, r1.x
mend
__store_w_32bit_private
mdef(446)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].w, r1.x
mend
__store_x_32bit_global
mdef(447)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].x, r1.x
mend
__store_x_32bit_private
mdef(448)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].x, r1.x
mend
__store_y_32bit_global
mdef(449)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].y, r1.x
mend
__store_y_32bit_private
mdef(450)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].y, r1.x
mend
__store_z_32bit_global
mdef(451)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov g[r0.x].z, r1.x
mend
__store_z_32bit_private
mdef(452)_out(0)_in(2)
mov r0, in0
mov r1, in1
mov x0[r0.x].z, r1.x
mend
__tanh_f32
mdef(453)_out(1)_in(1)
mov r0, in0
mov r0._y__, r0.x_abs
dcl_literal l0, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
mul_ieee r0.__z_, r0.y, l0
dcl_literal l1, 0x4038AA3B, 0x4038AA3B, 0x4038AA3B, 0x4038AA3B
dcl_literal l2, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r0.___w, r0.y, l1, l2
round_z r0.___w, r0.w
dcl_literal l3, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mul_ieee r1.x___, r0.w, l3
dcl_literal l4, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r1.x___, r0.y, l4, r1.x_neg(xyzw)
dcl_literal l5, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r1._y__, r0.w_neg(xyzw), l5, r1.x
mul_ieee r1.__z_, r1.y, r1.y
dcl_literal l6, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l7, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r1.___w, r1.z, l6, l7
dcl_literal l8, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r1.___w, r1.z, r1.w, l8
dcl_literal l9, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r1.___w, r1.z, r1.w, l9
dcl_literal l10, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r1.___w, r1.z, r1.w, l10
mad_ieee r1.__z_, r1.z_neg(xyzw), r1.w, r1.y
mul_ieee r1._y__, r1.y, r1.z
dcl_literal l11, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r1.__z_, r1.z_neg(xyzw), l11
div_zeroop(infinity) r1._y__, r1.y, r1.z
dcl_literal l12, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r1._y__, r0.w, l12, r1.y_neg(xyzw)
add r1.x___, r1.x_neg(xyzw), r1.y
dcl_literal l13, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.x___, r1.x_neg(xyzw), l13
dcl_literal l14, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r1._y__, r0.w, l14
if_logicalnz r1.y
    ftoi r1._y__, r0.w
    
    dcl_literal l15, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r2.xyz_, r1.x, l15
    if_logicalz r2.y
        itof r1.__z_, r2.z
        
        dcl_literal l16, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
        and r1.__zw, r1.z, l16
        
        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r1.__z_, r1.z, l17
        iadd r1.__z_, r1.z, r1.y
        
        dcl_literal l18, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.___w, r1.w, l18
        
        dcl_literal l19, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r1.__z_, l19, r1.z_neg(xyzw)
        
        dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r2.___w, l20, r1.z
        
        dcl_literal l21, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.__z_, r2.w, l21, r1.z
        
        dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r2.___w, l22, r1.z
        ishr r3.x___, r1.w, r1.z
        inegate r1.__z_, r1.z
        
        dcl_literal l23, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.__z_, r1.z, l23
        iadd r1.__z_, r1.w, r1.z
        cmov_logical r1.__z_, r2.w, r3.x, r1.z
    else
        
        dcl_literal l24, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r1.___w, r1.x, l24
        
        dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2._y__, r2.y, l25
        iadd r2._y__, r2.y, r1.y
        
        dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1._y__, r1.y, l26
        iadd r1._y__, r1.w, r1.y
        
        dcl_literal l27, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
        iadd r1.___w, r2.y, l27
        
        dcl_literal l28, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r2._y__, l28, r1.w
        
        dcl_literal l29, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r1._y__, r2.y, l29, r1.y
        
        dcl_literal l30, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r1.___w, l30, r1.w_neg(xyzw)
        
        dcl_literal l31, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2._y__, r2.z, l31
        
        dcl_literal l32, 0x00000000, 0x00000000, 0x00000000, 0x00000017
        ilt r2.__zw, l32, r1.w
        
        dcl_literal l33, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.___w, r2.w, l33, r1.w
        ishr r1.___w, r2.y, r1.w
        cmov_logical r1.__z_, r2.z, r1.w, r1.y
    endif
    
    dcl_literal l34, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
    lt r0.___w, l34, r0.w
    
    dcl_literal l35, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r0.w, l35, r1.z
    ior r1.x___, r2.x, r0.w
endif
dcl_literal l36, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r0.z, l36
dcl_literal l37, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l38, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r0.___w, r0.w, l37, l38
dcl_literal l39, 0xC038AA3B, 0xC038AA3B, 0xC038AA3B, 0xC038AA3B
mad_ieee r0.___w, r0.y, l39, r0.w
round_z r0.___w, r0.w
dcl_literal l40, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mul_ieee r1._y__, r0.w, l40
dcl_literal l41, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
mad_ieee r1._y__, r0.y, l41, r1.y_neg(xyzw)
dcl_literal l42, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r1.__z_, r0.w_neg(xyzw), l42, r1.y
mul_ieee r1.___w, r1.z, r1.z
dcl_literal l43, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l44, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r2.x___, r1.w, l43, l44
dcl_literal l45, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r2.x___, r1.w, r2.x, l45
dcl_literal l46, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r2.x___, r1.w, r2.x, l46
dcl_literal l47, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r2.x___, r1.w, r2.x, l47
mad_ieee r1.___w, r1.w_neg(xyzw), r2.x, r1.z
mul_ieee r1.__z_, r1.z, r1.w
dcl_literal l48, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r1.___w, r1.w_neg(xyzw), l48
div_zeroop(infinity) r1.__z_, r1.z, r1.w
dcl_literal l49, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r1.__z_, r0.w, l49, r1.z_neg(xyzw)
add r1._y__, r1.y_neg(xyzw), r1.z
mov r1.__z_, r1.y_neg(xyzw)
dcl_literal l50, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ne r1.___w, r0.w, l50
if_logicalnz r1.w
    
    dcl_literal l51, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r1.___w, r1.z, l51
    ftoi r0.___w, r0.w
    
    dcl_literal l52, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r2.xyz_, r1.w, l52
    if_logicalz r2.y
        itof r2.___w, r2.z
        
        dcl_literal l53, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r3.xy__, r2.w, l53
        
        dcl_literal l54, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.___w, r3.x, l54
        iadd r2.___w, r2.w, r0.w
        
        dcl_literal l55, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r3.x___, r3.y, l55
        
        dcl_literal l56, 0x00000096, 0x00000096, 0x00000096, 0x00000096
        iadd r2.___w, l56, r2.w_neg(xyzw)
        
        dcl_literal l57, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ilt r3._y__, l57, r2.w
        
        dcl_literal l58, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r2.___w, r3.y, l58, r2.w
        
        dcl_literal l59, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ilt r3._y__, l59, r2.w
        ishr r3.__z_, r3.x, r2.w
        inegate r2.___w, r2.w
        
        dcl_literal l60, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r2.___w, r2.w, l60
        iadd r2.___w, r3.x, r2.w
        cmov_logical r2.___w, r3.y, r3.z, r2.w
    else
        
        dcl_literal l61, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
        and r1.___w, r1.w, l61
        
        dcl_literal l62, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2._y__, r2.y, l62
        iadd r2._y__, r2.y, r0.w
        
        dcl_literal l63, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r0.___w, r0.w, l63
        iadd r0.___w, r1.w, r0.w
        
        dcl_literal l64, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
        iadd r1.___w, r2.y, l64
        
        dcl_literal l65, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        ilt r2._y__, l65, r1.w
        
        dcl_literal l66, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        cmov_logical r0.___w, r2.y, l66, r0.w
        
        dcl_literal l67, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
        iadd r1.___w, l67, r1.w_neg(xyzw)
        
        dcl_literal l68, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r2._y__, r2.z, l68
        
        dcl_literal l69, 0x00000000, 0x00000017, 0x00000000, 0x00000000
        ilt r3.xy__, l69, r1.w
        
        dcl_literal l70, 0x00000018, 0x00000018, 0x00000018, 0x00000018
        cmov_logical r1.___w, r3.y, l70, r1.w
        ishr r1.___w, r2.y, r1.w
        cmov_logical r2.___w, r3.x, r1.w, r0.w
    endif
    ior r1._y__, r2.x, r2.w
    
    dcl_literal l71, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
    add r1.__z_, r1.y, l71
else
    
    dcl_literal l72, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    add r1._y__, r1.z, l72
endif
dcl_literal l73, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.z, l73
dcl_literal l74, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.___w, r0.w, l74
dcl_literal l75, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r1.___w, r0.z, l75
and r0.___w, r0.w, r1.w
cmov_logical r0.__z_, r0.w, r0.z, r1.z
dcl_literal l76, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r0.___w, r0.x, l76
mul_ieee r0.___w, r0.x, r0.w
dcl_literal l77, 0x00000000, 0x00000000, 0x3F800000, 0x41B00000
ge r1.__zw, l77, r0.y
dcl_literal l78, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1._y__, r1.y, l78
div_zeroop(infinity) r0.__z_, r0.z_neg(xyzw), r1.y
cmov_logical r0.__z_, r1.z, r0.z, r0.w
dcl_literal l79, 0x00000000, 0x3F800000, 0x41B00000, 0x00000000
lt r1._yz_, l79, r0.y
and r0.___w, r1.w, r1.y
dcl_literal l80, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.x___, r1.x, l80
dcl_literal l81, 0x40000000, 0x40000000, 0x40000000, 0x40000000
div_zeroop(infinity) r1.x___, l81, r1.x
dcl_literal l82, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.x___, r1.x_neg(xyzw), l82
cmov_logical r0.__z_, r0.w, r1.x, r0.z
dcl_literal l83, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.__z_, r1.z, l83, r0.z
dcl_literal l84, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.y, l84
cmov_logical r0.__z_, r0.w, r0.z, r0.x
dcl_literal l85, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.y, l85
dcl_literal l86, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.__z_, r0.w, l86, r0.z
dcl_literal l87, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r0.___w, r0.x, l87
cmov_logical r0.__z_, r0.w, r0.z_neg(xyzw), r0.z
dcl_literal l88, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ult r0.___w, l88, r0.y
dcl_literal l89, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r1.x___, r0.x, l89
cmov_logical r0.__z_, r0.w, r1.x, r0.z
cmov_logical r0.x___, r0.y, r0.z, r0.x
mov out0, r0
mend
__tanpi_f32
mdef(454)_out(1)_in(1)
mov r0, in0
add r0._y__, r0.x_abs, r0.x_abs
round_nearest r0._y__, r0.y
dcl_literal l0, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r0.__z_, r0.x_abs, l0, r0.y_neg(xyzw)
dcl_literal l1, 0x00000000, 0x3E800000, 0x00000000, 0x3FC90FDB
mul_ieee r0._y_w, r0.yyyz, l1
mul_ieee r1.x___, r0.w, r0.w
mul_ieee r0.___w, r0.w, r1.x
dcl_literal l2, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3
dcl_literal l3, 0x3EC54587, 0x3EC54587, 0x3EC54587, 0x3EC54587
mad_ieee r1._y__, r1.x_neg(xyzw), l2, l3
mul_ieee r0.___w, r0.w, r1.y
dcl_literal l4, 0x3C971480, 0x3C971480, 0x3C971480, 0x3C971480
dcl_literal l5, 0xBF039337, 0xBF039337, 0xBF039337, 0xBF039337
mad_ieee r1._y__, r1.x, l4, l5
dcl_literal l6, 0x3F93F425, 0x3F93F425, 0x3F93F425, 0x3F93F425
mad_ieee r1.x___, r1.y, r1.x, l6
div_zeroop(infinity) r0.___w, r0.w, r1.x
dcl_literal l7, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
mad_ieee r0.__z_, r0.z, l7, r0.w
dcl_literal l8, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r0.___w, l8, r0.z
frc r0._y__, r0.y
dcl_literal l9, 0x40800000, 0x40800000, 0x40800000, 0x40800000
mul_ieee r0._y__, r0.y, l9
round_nearest r0._y__, r0.y
dcl_literal l10, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r1.x___, r0.y, l10
dcl_literal l11, 0x40400000, 0x40400000, 0x40400000, 0x40400000
eq r0._y__, r0.y, l11
frc r1.x___, r1.x
add r1.x___, r1.x, r1.x
round_nearest r1.x___, r1.x
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r1.x___, l12, r1.x
cmov_logical r0.__z_, r1.x, r0.w_neg(xyzw), r0.z
dcl_literal l13, 0x7F800000, 0x7FFFFFFF, 0x7FFFFFFF, 0x00000000
and r1.xyz_, r0.x, l13
itof r0.___w, r1.z
dcl_literal l14, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r0.___w, r0.w, l14
dcl_literal l15, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
and r2.xy__, r0.w, l15
dcl_literal l16, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r0.___w, r2.x, l16
dcl_literal l17, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r1.___w, r2.y, l17
dcl_literal l18, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r0.___w, l18, r0.w_neg(xyzw)
inegate r2.x___, r0.w
dcl_literal l19, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.x___, r2.x, l19
iadd r2.x___, r1.w, r2.x
ishr r1.___w, r1.w, r0.w
dcl_literal l20, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l20, r0.w
cmov_logical r0.___w, r0.w, r1.w, r2.x
dcl_literal l21, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r2.xy__, r1.zxzz, l21
dcl_literal l22, 0x00000000, 0x00000000, 0x00000000, 0x7F800000
ieq r1.xy_w, r1.xyxz, l22
and r1.x___, r2.x, r1.x
cmov_logical r0.__z_, r1.x, r0.w, r0.z
dcl_literal l23, 0x32000000, 0x32000000, 0x32000000, 0x32000000
ilt r0.___w, r1.z, l23
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1.x___, l24, r1.z
and r0.___w, r2.y, r0.w
dcl_literal l25, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r1.__z_, r0.x_abs, l25
cmov_logical r0.__z_, r0.w, r1.z, r0.z
frc r0.___w, r0.x_abs
add r1.__z_, r0.x_abs, r0.w_neg(xyzw)
dcl_literal l26, 0x00000000, 0x3F000000, 0x00000000, 0x00000000
eq r2.xy__, r0.w, l26
dcl_literal l27, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.x___, r0.x, l27
dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ge r0.___w, r1.z, l28
and r0.___w, r2.x, r0.w
ior r0.___w, r1.y, r0.w
dcl_literal l29, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r0.w, l29, r0.z
dcl_literal l30, 0xFF800000, 0xFF800000, 0xFF800000, 0xFF800000
dcl_literal l31, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r0._y__, r0.y, l30, l31
cmov_logical r0._y__, r2.y, r0.y, r0.z
cmov_logical r0.x___, r0.x, r0.y_neg(xyzw), r0.y
dcl_literal l32, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0.x___, r1.w, l32, r0.x
dcl_literal l33, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
cmov_logical r0.x___, r1.x, l33, r0.x
mov out0, r0
mend
__tan_f32
mdef(455)_out(1)_in(1)
mov r0, in0
mov r0._y__, r0.x_abs
dcl_literal l0, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.__z_, r0.x, l0
dcl_literal l1, 0x32000000, 0x32000000, 0x32000000, 0x32000000
ige r0.___w, r0.z, l1
dcl_literal l2, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r1.x___, r0.z, l2
and r0.___w, r0.w, r1.x
if_logicalnz r0.w
    
    dcl_literal l3, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680, 0x4A3FA680
    lt r0.___w, r0.y, l3
    if_logicalnz r0.w
        
        dcl_literal l4, 0x3F22F983, 0x3F22F983, 0x3F22F983, 0x3F22F983
        mul_ieee r0.___w, r0.y, l4
        round_nearest r0.___w, r0.w
        
        dcl_literal l5, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
        and r1.x___, r0.w, l5
        add r1._y__, r0.w, r1.x_neg(xyzw)
        
        dcl_literal l6, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
        mul_ieee r1.__z_, r0.w, l6
        
        dcl_literal l7, 0x3FC90FDA, 0x33A22168, 0x27C234C4, 0x00000000
        mul_ieee r2.xyz_, r0.w, l7
        
        dcl_literal l8, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.x, l8, r2.xyxx_neg(xyzw)
        
        dcl_literal l9, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.x, l9, r3.xyxx
        
        dcl_literal l10, 0x3FC90000, 0x33A22000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.y, l10, r3.xyxx
        
        dcl_literal l11, 0x39FDA000, 0x2C340000, 0x00000000, 0x00000000
        mad_ieee r3.xy__, r1.y, l11, r3.xyxx
        add r0.___w, r0.y, r2.x_neg(xyzw)
        add r1.___w, r0.y, r0.w_neg(xyzw)
        add r1.___w, r2.x_neg(xyzw), r1.w
        add r1.___w, r3.x_neg(xyzw), r1.w
        add r0.___w, r0.w, r1.w
        add r1.___w, r2.y_neg(xyzw), r0.w
        add r0.___w, r0.w, r1.w_neg(xyzw)
        add r0.___w, r2.y_neg(xyzw), r0.w
        add r0.___w, r3.y_neg(xyzw), r0.w
        add r0.___w, r1.w, r0.w
        
        dcl_literal l12, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
        mad_ieee r1.___w, r1.x, l12, r2.z_neg(xyzw)
        
        dcl_literal l13, 0x21188000, 0x21188000, 0x21188000, 0x21188000
        mad_ieee r1.x___, r1.x, l13, r1.w
        
        dcl_literal l14, 0x27C23000, 0x27C23000, 0x27C23000, 0x27C23000
        mad_ieee r1.x___, r1.y, l14, r1.x
        
        dcl_literal l15, 0x21188000, 0x21188000, 0x21188000, 0x21188000
        mad_ieee r1.x___, r1.y, l15, r1.x
        add r1._y__, r2.z_neg(xyzw), r0.w
        add r0.___w, r0.w, r1.y_neg(xyzw)
        add r0.___w, r2.z_neg(xyzw), r0.w
        add r0.___w, r1.y, r0.w
        frc r1._y__, r1.z
        
        dcl_literal l16, 0x40800000, 0x40800000, 0x40800000, 0x40800000
        mul_ieee r1._y__, r1.y, l16
        round_nearest r1._y__, r1.y
        mov r1.x___, r1.x_neg(xyzw)
    else
        
        dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r1.__z_, r0.y, l17
        
        dcl_literal l18, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
        and r1.___w, r0.y, l18
        
        dcl_literal l19, 0x00800000, 0x00800000, 0x00800000, 0x00800000
        ior r1.___w, r1.w, l19
        
        dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.x___, r1.w, l20
        
        dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r1.___w, r1.w, l21
        
        dcl_literal l22, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041
        umul r3, l22, r1.w
        
        dcl_literal l23, 0x0000FE51, 0x000063AB, 0x00003C43, 0x00009041
        umul r4, l23, r2.x
        
        dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2._yz_, r4.yywy, l24
        
        dcl_literal l25, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r5.xy__, r3.ywyy, l25
        iadd r2._yz_, r2.yyzy, r5.xxyx
        iadd r2._yz_, r4.xxzx, r2.yyzy
        
        dcl_literal l26, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r4.x_z_, r2.yyzy, l26
        iadd r3.x_z_, r3.xxzx, r4.xxzx
        
        dcl_literal l27, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l27
        
        dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2._yz_, r2.yyzy, l28
        
        dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r4.xy__, r4.ywyy, l29
        iadd r3.xy__, r3.xzxx, r3.ywyy
        ior r4.xy__, r2.yzyy, r4.xyxx
        iadd r5.__z_, r3.x, r4.y
        ult r2._y__, r5.z, r4.y
        
        dcl_literal l30, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r3.y, l30
        cmov_logical r2._y__, r2.y, r2.z, r3.y
        
        dcl_literal l31, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0
        umul r3, l31, r1.w
        
        dcl_literal l32, 0x0000DB62, 0x00009599, 0x0000F534, 0x0000DDC0
        umul r6, l32, r2.x
        
        dcl_literal l33, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__zw, r6.yyyw, l33
        
        dcl_literal l34, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r7.xy__, r3.ywyy, l34
        iadd r2.__zw, r2.zzzw, r7.xxxy
        iadd r2.__zw, r6.xxxz, r2.zzzw
        
        dcl_literal l35, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6.x_z_, r2.zzwz, l35
        iadd r3.x_z_, r3.xxzx, r6.xxzx
        
        dcl_literal l36, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l36
        iadd r3.xy__, r3.xzxx, r3.ywyy
        
        dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2.__zw, r2.zzzw, l37
        
        dcl_literal l38, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF
        and r3.__zw, r6.yyyw, l38
        ior r2.__zw, r2.zzzw, r3.zzzw
        iadd r5._y__, r2.y, r2.z
        ult r2._y__, r5.y, r2.z
        
        dcl_literal l39, 0x00000000, 0x00000000, 0x00000001, 0x00000001
        iadd r3.__zw, r3.xxxy, l39
        cmov_logical r2._y__, r2.y, r3.z, r3.x
        iadd r5.x___, r2.y, r2.w
        ult r2._y__, r5.x, r2.w
        cmov_logical r2._y__, r2.y, r3.w, r3.y
        
        dcl_literal l40, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529
        umul r3, l40, r1.w
        
        dcl_literal l41, 0x0000FC27, 0x000057D1, 0x00004E44, 0x00001529
        umul r6, l41, r2.x
        
        dcl_literal l42, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__zw, r6.yyyw, l42
        
        dcl_literal l43, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
        and r7.xy__, r3.ywyy, l43
        iadd r2.__zw, r2.zzzw, r7.xxxy
        iadd r2.__zw, r6.xxxz, r2.zzzw
        
        dcl_literal l44, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6.x_z_, r2.zzwz, l44
        iadd r3.x_z_, r3.xxzx, r6.xxzx
        
        dcl_literal l45, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r3._y_w, r3.yyyw, l45
        iadd r3.xy__, r3.xzxx, r3.ywyy
        
        dcl_literal l46, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r2.__zw, r2.zzzw, l46
        
        dcl_literal l47, 0x00000000, 0x00000000, 0x0000FFFF, 0x0000FFFF
        and r3.__zw, r6.yyyw, l47
        ior r2.__zw, r2.zzzw, r3.zzzw
        iadd r3.___w, r2.y, r2.z
        ult r2._y__, r3.w, r2.z
        
        dcl_literal l48, 0x00000001, 0x00000001, 0x00000000, 0x00000000
        iadd r6.xy__, r3.xyxx, l48
        cmov_logical r2._y__, r2.y, r6.x, r3.x
        iadd r3.__z_, r2.y, r2.w
        ult r2._y__, r3.z, r2.w
        cmov_logical r2._y__, r2.y, r6.y, r3.y
        
        dcl_literal l49, 0x00000000, 0x00000000, 0x0000A2F9, 0x0000836E
        umul r2.__zw, l49, r1.w
        
        dcl_literal l50, 0x0000A2F9, 0x0000836E, 0x00000000, 0x00000000
        umul r3.xy__, l50, r2.x
        
        dcl_literal l51, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r1.___w, r3.y, l51
        
        dcl_literal l52, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.x___, r2.w, l52
        iadd r1.___w, r1.w, r2.x
        iadd r1.___w, r3.x, r1.w
        
        dcl_literal l53, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.x___, r1.w, l53
        iadd r2.x___, r2.z, r2.x
        
        dcl_literal l54, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r2.__z_, r2.w, l54
        iadd r2.x___, r2.x, r2.z
        
        dcl_literal l55, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ishl r1.___w, r1.w, l55
        
        dcl_literal l56, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r2.__z_, r3.y, l56
        ior r1.___w, r1.w, r2.z
        iadd r2._y__, r2.y, r1.w
        ult r1.___w, r2.y, r1.w
        
        dcl_literal l57, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r2.x, l57
        cmov_logical r1.___w, r1.w, r2.z, r2.x
        
        dcl_literal l58, 0xFFFFFF89, 0x00000000, 0xFFFFFF8A, 0x00000000
        iadd r2.x_z_, r1.z, l58
        
        dcl_literal l59, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r6.x___, r2.x, l59
        
        dcl_literal l60, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishl r1.__z_, r6.x, l60
        iadd r1.__z_, r2.x, r1.z_neg(xyzw)
        
        dcl_literal l61, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.x___, l61, r6.x
        
        dcl_literal l62, 0x00000001, 0x00000002, 0x00000004, 0x00000008
        and r7, r2.x, l62
        inegate r2.___w, r7.x
        
        dcl_literal l63, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ushr r8.x___, r7.y, l63
        
        dcl_literal l64, 0x00000002, 0x00000002, 0x00000002, 0x00000002
        ushr r8._y__, r7.z, l64
        
        dcl_literal l65, 0x00000003, 0x00000003, 0x00000003, 0x00000003
        ushr r8.__z_, r7.w, l65
        inegate r7.xyz_, r8.xyzx
        
        dcl_literal l66, 0x00000010, 0x00000020, 0x00000040, 0x00000080
        and r8, r2.x, l66
        
        dcl_literal l67, 0x00000004, 0x00000004, 0x00000004, 0x00000004
        ushr r9.x___, r8.x, l67
        
        dcl_literal l68, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r9._yzw, r8.yyzw, l68
        inegate r8, r9
        and r2.x___, r1.w, r2.w
        and r3.xy__, r2.y, r7.xyxx
        ior r2.x___, r2.x, r3.x
        and r7._yzw, r3.zzzw, r7.yyzz
        ior r2.x___, r2.x, r7.y
        ior r2.x___, r7.w, r2.x
        and r9, r5.xxyy, r8.xyyz
        ior r2.x___, r2.x, r9.x
        ior r2.x___, r9.z, r2.x
        and r7._y_w, r5.z, r8.zzzw
        ior r2.x___, r2.x, r7.y
        and r2.___w, r4.x, r8.w
        ior r2.x___, r2.x, r2.w
        and r2.___w, r1.w, r7.x
        ior r2.___w, r3.y, r2.w
        ior r2.___w, r7.z, r2.w
        and r3.x___, r3.w, r8.x
        ior r2.___w, r2.w, r3.x
        ior r2.___w, r9.y, r2.w
        ior r2.___w, r9.w, r2.w
        ior r2.___w, r7.w, r2.w
        
        dcl_literal l69, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ushr r3.x___, l69, r1.z
        and r3.x___, r2.x, r3.x
        inegate r3._y__, r1.z
        
        dcl_literal l70, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
        iadd r6._y__, l70, r3.y
        
        dcl_literal l71, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        ult r4._y__, l71, r1.z
        
        dcl_literal l72, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r1.__z_, r1.z, l72
        
        dcl_literal l73, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ushr r1.__z_, l73, r1.z
        and r1.__z_, r2.x, r1.z
        ior r1.__z_, r3.x, r1.z
        ushr r1.__z_, r1.z, r6.y
        ushr r2.x___, r3.x, r6.y
        
        dcl_literal l74, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        and r2.___w, r2.w, l74
        
        dcl_literal l75, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.___w, r2.w, l75
        ior r2.x___, r2.x, r2.w
        cmov_logical r7.__z_, r4.y, r1.z, r2.x
        
        dcl_literal l76, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r8.x___, r6.x, l76
        
        dcl_literal l77, 0x80000000, 0x80000000, 0x80000000, 0x80000000
        ishl r6.__z_, l77, r3.y
        
        dcl_literal l78, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r6.___w, r6.z, l78
        
        dcl_literal l79, 0x00000000, 0x00000020, 0x00000000, 0xFFFFFFFF
        mov r8._yzw, l79
        cmov_logical r6, r6.y, r6, r8
        
        dcl_literal l80, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r1.__z_, r6.y, l80
        
        dcl_literal l81, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r1.__z_, l81, r1.z
        
        dcl_literal l82, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r2.x___, r1.z, l82
        switch r6.x
        case  0
        and r3.x___, r1.w, r1.z
        
        dcl_literal l83, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000
        
        dcl_literal l84, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.xy__, r3.x, l83, l84
        if_logicalnz r3.y
            inegate r10.___w, r4.x
            
            dcl_literal l85, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r10._y__, r5.y_neg(xyzw), l85
            
            dcl_literal l86, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
            iadd r6.xy__, r5.zxzz_neg(xyzw), l86
            
            dcl_literal l87, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
            iadd r11._yz_, r3.zzwz_neg(xyzw), l87
            
            dcl_literal l88, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r11.x___, r2.y_neg(xyzw), l88
            and r3._y__, r1.w, r6.w
            iadd r3._y__, r6.w, r3.y_neg(xyzw)
            mov r10.x___, r6.y
            mov r10.__z_, r6.x
        else
            mov r10.xyz_, r5.xyzx
            mov r10.___w, r4.x
            mov r11.x___, r2.y
            mov r11._yz_, r3.zzwz
            mov r3._y__, r1.w
        endif
        and r8.x___, r2.x, r3.y
        mov r8._yzw, r11.xxyz
        mov r9, r10
        mov r2.___w, r3.x
        break
        case  1
        and r3.x___, r2.y, r1.z
        
        dcl_literal l89, 0x00000001, 0xFFFFFFFF, 0x00000000, 0x00000000
        
        dcl_literal l90, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.xy__, r3.x, l89, l90
        if_logicalnz r3.y
            inegate r10.___w, r4.x
            
            dcl_literal l91, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
            iadd r10._y__, r5.y_neg(xyzw), l91
            
            dcl_literal l92, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
            iadd r6.xy__, r5.zxzz_neg(xyzw), l92
            
            dcl_literal l93, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
            iadd r11._yz_, r3.wwzw_neg(xyzw), l93
            and r3._y__, r2.y, r6.w
            iadd r3._y__, r6.w, r3.y_neg(xyzw)
            mov r10.x___, r6.y
            mov r10.__z_, r6.x
            mov r11.xy__, r11.zyzz
        else
            mov r10.xyz_, r5.xyzx
            mov r10.___w, r4.x
            mov r11.xy__, r3.zwzz
            mov r3._y__, r2.y
        endif
        and r11.__z_, r2.x, r3.y
        
        dcl_literal l94, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.___w, l94
        mov r8, r11.wzxy
        mov r9, r10
        mov r2.___w, r3.x
        break
        case  2
        and r3.x___, r3.z, r1.z
        
        dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l95, l96
        inegate r10.___w, r4.x
        
        dcl_literal l97, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10.xyz_, r5.xyzx_neg(xyzw), l97
        
        dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r6._y__, r3.w_neg(xyzw), l98
        and r4._y__, r3.z, r6.w
        iadd r6.x___, r6.w, r4.y_neg(xyzw)
        mov r5.___w, r4.x
        cmov_logical r10, r3.x, r10, r5
        cmov_logical r11._yz_, r3.x, r6.xxyx, r3.zzwz
        and r11.x___, r2.x, r11.y
        
        dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.___w, l99
        mov r8, r11.wwxz
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  3
        and r3.x___, r3.w, r1.z
        
        dcl_literal l100, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l101, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l100, l101
        inegate r10.___w, r4.x
        
        dcl_literal l102, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10.xyz_, r5.xyzx_neg(xyzw), l102
        and r4._y__, r3.w, r6.w
        iadd r4._y__, r6.w, r4.y_neg(xyzw)
        mov r11.xyz_, r5.xyzx
        mov r11.___w, r4.x
        cmov_logical r10, r3.x, r10, r11
        cmov_logical r3.x___, r3.x, r4.y, r3.w
        and r11.___w, r2.x, r3.x
        
        dcl_literal l103, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r11.xyz_, l103
        mov r8, r11
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  4
        and r3.x___, r5.x, r1.z
        
        dcl_literal l104, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l105, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l104, l105
        inegate r10.___w, r4.x
        
        dcl_literal l106, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000
        iadd r10._yz_, r5.yyzy_neg(xyzw), l106
        and r4._y__, r5.x, r6.w
        iadd r10.x___, r6.w, r4.y_neg(xyzw)
        mov r11.xyz_, r5.xyzx
        mov r11.___w, r4.x
        cmov_logical r10, r3.x, r10, r11
        and r3.x___, r2.x, r10.x
        
        dcl_literal l107, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l107
        mov r9._yzw, r10.yyzw
        mov r9.x___, r3.x
        mov r2.___w, r3.y
        break
        case  5
        and r3.x___, r5.y, r1.z
        
        dcl_literal l108, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l109, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l108, l109
        inegate r10.__z_, r4.x
        
        dcl_literal l110, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        iadd r10._y__, r5.z_neg(xyzw), l110
        and r4._y__, r5.y, r6.w
        iadd r10.x___, r6.w, r4.y_neg(xyzw)
        mov r4.__zw, r5.yyyz
        cmov_logical r10.x_zw, r3.x, r10.xxyz, r4.zzwx
        and r10._y__, r2.x, r10.x
        
        dcl_literal l111, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r10.x___, l111
        
        dcl_literal l112, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l112
        mov r9, r10
        mov r2.___w, r3.y
        break
        case  6
        and r3.x___, r5.z, r1.z
        
        dcl_literal l113, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l114, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3._y__, r3.x, l113, l114
        inegate r4.__z_, r4.x
        and r4.___w, r5.z, r6.w
        iadd r4._y__, r6.w, r4.w_neg(xyzw)
        mov r6.x___, r5.z
        mov r6._y__, r4.x
        cmov_logical r10._yz_, r3.x, r4.yyzy, r6.xxyx
        and r10.x___, r2.x, r10.y
        
        dcl_literal l115, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r10.___w, l115
        
        dcl_literal l116, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l116
        mov r9, r10.wwxz
        mov r2.___w, r3.y
        break
        case  7
        and r1.__z_, r4.x, r1.z
        
        dcl_literal l117, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        
        dcl_literal l118, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r3.x___, r1.z, l117, l118
        and r3._y__, r4.x, r6.w
        iadd r3._y__, r6.z, r3.y_neg(xyzw)
        cmov_logical r1.__z_, r1.z, r3.y, r4.x
        and r6.___w, r2.x, r1.z
        
        dcl_literal l119, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r6.xyz_, l119
        
        dcl_literal l120, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r8, l120
        mov r9, r6
        mov r2.___w, r3.x
        break
        default
        mov r8.__zw, r3.zzzw
        mov r8._y__, r2.y
        mov r8.x___, r1.w
        mov r9.___w, r4.x
        mov r9.xyz_, r5.xyzx
        
        dcl_literal l121, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        mov r2.___w, l121
        break
        endswitch
        mov r3, r8
        mov r4, r9
        mov r1.__z_, r2.w
        
        dcl_literal l122, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r5, r3, l122
        
        dcl_literal l123, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r5, r5, l123
        
        dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r6, r5, l124
        
        dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r6, r6, l125
        
        dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r6, r6, l126
        
        dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r6, l127, r6_neg(xyzw)
        
        dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r6, r6, l128
        
        dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r6, r6, l129
        
        dcl_literal l130, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r6, r6, l130
        
        dcl_literal l131, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r5, r5, r6, l131
        
        dcl_literal l132, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r6, r3, l132
        
        dcl_literal l133, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r8, r6, l133
        
        dcl_literal l134, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r8, r8, l134
        
        dcl_literal l135, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l135
        
        dcl_literal l136, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r8, l136, r8_neg(xyzw)
        
        dcl_literal l137, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l137
        
        dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r8, r8, l138
        
        dcl_literal l139, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r8, r8, l139
        
        dcl_literal l140, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r6, r6, r8, l140
        
        dcl_literal l141, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ieq r8, r5, l141
        iadd r6, r5, r6
        cmov_logical r5, r8, r6, r5
        
        dcl_literal l142, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ushr r6, r4, l142
        
        dcl_literal l143, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r6, r6, l143
        
        dcl_literal l144, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r8, r6, l144
        
        dcl_literal l145, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r8, r8, l145
        
        dcl_literal l146, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l146
        
        dcl_literal l147, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r8, l147, r8_neg(xyzw)
        
        dcl_literal l148, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r8, r8, l148
        
        dcl_literal l149, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r8, r8, l149
        
        dcl_literal l150, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r8, r8, l150
        
        dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r6, r6, r8, l151
        
        dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
        and r8, r4, l152
        
        dcl_literal l153, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r9, r8, l153
        
        dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r9, r9, l154
        
        dcl_literal l155, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r9, r9, l155
        
        dcl_literal l156, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r9, l156, r9_neg(xyzw)
        
        dcl_literal l157, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r9, r9, l157
        
        dcl_literal l158, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ushr r9, r9, l158
        
        dcl_literal l159, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
        iadd r9, r9, l159
        
        dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        cmov_logical r8, r8, r9, l160
        
        dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
        ieq r9, r6, l161
        iadd r8, r6, r8
        cmov_logical r6, r9, r8, r6
        
        dcl_literal l162, 0x00000020, 0x00000020, 0x00000020, 0x00000020
        ieq r1.___w, r5.x, l162
        
        dcl_literal l163, 0x00000020, 0x00000040, 0x00000000, 0x00000060
        iadd r2.xy_w, r5.yzyw, l163
        cmov_logical r1.___w, r1.w, r2.x, r5.x
        
        dcl_literal l164, 0x00000040, 0x00000040, 0x00000040, 0x00000040
        ieq r2.x___, r1.w, l164
        cmov_logical r1.___w, r2.x, r2.y, r1.w
        
        dcl_literal l165, 0x00000060, 0x00000060, 0x00000060, 0x00000060
        ieq r2.x___, r1.w, l165
        cmov_logical r1.___w, r2.x, r2.w, r1.w
        
        dcl_literal l166, 0x00000080, 0x00000080, 0x00000080, 0x00000080
        ieq r2.x___, r1.w, l166
        
        dcl_literal l167, 0x00000080, 0x000000A0, 0x000000C0, 0x000000E0
        iadd r5, r6, l167
        cmov_logical r1.___w, r2.x, r5.x, r1.w
        
        dcl_literal l168, 0x000000A0, 0x000000A0, 0x000000A0, 0x000000A0
        ieq r2.x___, r1.w, l168
        cmov_logical r1.___w, r2.x, r5.y, r1.w
        
        dcl_literal l169, 0x000000C0, 0x000000C0, 0x000000C0, 0x000000C0
        ieq r2.x___, r1.w, l169
        cmov_logical r1.___w, r2.x, r5.z, r1.w
        
        dcl_literal l170, 0x000000E0, 0x000000E0, 0x000000E0, 0x000000E0
        ieq r2.x___, r1.w, l170
        cmov_logical r1.___w, r2.x, r5.w, r1.w
        
        dcl_literal l171, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishr r2.x___, r1.w, l171
        
        dcl_literal l172, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ishl r2._y__, r2.x, l172
        iadd r2._y__, r1.w, r2.y_neg(xyzw)
        iadd r1.___w, r2.z, r1.w_neg(xyzw)
        
        dcl_literal l173, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ishl r2.x___, l173, r2.x
        
        dcl_literal l174, 0x00000001, 0x00000002, 0x00000004, 0x00000008
        and r5, r2.x, l174
        inegate r2.__z_, r5.x
        
        dcl_literal l175, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        ushr r6.x__w, r5.y, l175
        
        dcl_literal l176, 0x00000002, 0x00000002, 0x00000002, 0x00000002
        ushr r6._y__, r5.z, l176
        
        dcl_literal l177, 0x00000003, 0x00000003, 0x00000003, 0x00000003
        ushr r6.__z_, r5.w, l177
        inegate r5, r6
        
        dcl_literal l178, 0x00000010, 0x00000020, 0x00000040, 0x00000080
        and r6, r2.x, l178
        
        dcl_literal l179, 0x00000004, 0x00000004, 0x00000004, 0x00000004
        ushr r8.x___, r6.x, l179
        
        dcl_literal l180, 0x00000005, 0x00000005, 0x00000005, 0x00000005
        ushr r8._y__, r6.y, l180
        
        dcl_literal l181, 0x00000006, 0x00000006, 0x00000006, 0x00000006
        ushr r8.__z_, r6.z, l181
        
        dcl_literal l182, 0x00000007, 0x00000007, 0x00000007, 0x00000007
        ushr r8.___w, r6.w, l182
        inegate r6, r8
        and r2.x__w, r3.xxxy, r2.z
        and r8, r3.yzwz, r5
        ior r2.x__w, r2.xxxw, r8.xxxw
        ior r2.x___, r8.y, r2.x
        ior r2.x___, r8.z, r2.x
        and r8, r4, r6
        ior r2.x___, r2.x, r8.x
        ior r2.x___, r8.y, r2.x
        ior r2.x___, r8.z, r2.x
        ior r8._y_w, r8.w, r2.x
        and r2.x___, r3.w, r5.y
        ior r2.x___, r2.w, r2.x
        and r2.___w, r4.x, r5.z
        ior r2.x___, r2.x, r2.w
        and r9.xyz_, r4.yzwy, r6.xyzx
        ior r2.x___, r2.x, r9.x
        ior r2.x___, r9.y, r2.x
        ior r8.x___, r9.z, r2.x
        
        dcl_literal l183, 0x00000008, 0x00000008, 0x00000008, 0x00000008
        ult r2.x___, r2.y, l183
        if_logicalnz r2.x
            ishl r2.x___, r8.y, r2.y
            ushr r2.x___, r2.x, r2.y
            
            dcl_literal l184, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            iadd r2.___w, l184, r2.y_neg(xyzw)
            ushr r8.___w, r2.x, r2.w
            
            dcl_literal l185, 0x00000018, 0x00000018, 0x00000018, 0x00000018
            iadd r3._y__, r2.y, l185
            ishl r2.x___, r2.x, r3.y
            ushr r3.x___, r2.x, r3.y
        else
            and r2.x___, r3.z, r2.z
            and r2.__z_, r3.w, r5.w
            ior r2.x___, r2.x, r2.z
            and r2.__zw, r4.xxxy, r5.yyyz
            ior r2.x___, r2.x, r2.z
            ior r2.x___, r2.w, r2.x
            and r2.__zw, r4.zzzw, r6.xxxy
            ior r2.x___, r2.x, r2.z
            ior r4._y__, r2.w, r2.x
            
            dcl_literal l186, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            ult r2.x___, l186, r2.y
            
            dcl_literal l187, 0xFFFFFFF8, 0x00000000, 0xFFFFFFF7, 0x00000000
            iadd r4.x_z_, r2.y, l187
            ishl r2.__z_, r8.y, r4.x
            ishl r2.___w, r8.x, r4.z
            
            dcl_literal l188, 0x00000028, 0x00000028, 0x00000028, 0x00000028
            iadd r2._y__, l188, r2.y_neg(xyzw)
            ushr r2._y__, r8.x, r2.y
            ior r4.___w, r2.z, r2.y
            ushr r4.x___, r2.w, r4.z
            
            dcl_literal l189, 0x00000000, 0x00000000, 0x00000000, 0x00000000
            mov r8.__z_, l189
            cmov_logical r8, r2.x, r4.yxzw, r8
            mov r3.xy__, r8.yzyy
        endif
        
        dcl_literal l190, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r2.xy__, r8.w, l190
        
        dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r2.___w, r8.w, l191
        
        dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r2.___w, r2.w, l192
        
        dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.___w, r2.w, l193
        
        dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r2.___w, l194, r2.w_neg(xyzw)
        
        dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.___w, r2.w, l195
        
        dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.___w, r2.w, l196
        inegate r8._y__, r2.w
        
        dcl_literal l197, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        mov r2.__z_, l197
        cmov_logical r2.xy__, r2.x, r2.yzyy, r8.wyww
        iadd r2._y__, r1.w, r2.y
        
        dcl_literal l198, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        iadd r2._y__, r2.y, l198
        
        dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r2._y__, r2.y, l199
        ior r7.x___, r2.x, r2.y
        
        dcl_literal l200, 0x00000008, 0x00000008, 0x00000008, 0x00000008
        ult r2.x___, r3.y, l200
        if_logicalnz r2.x
            ishl r2.x___, r3.x, r3.y
            ushr r2.x___, r2.x, r3.y
            
            dcl_literal l201, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            iadd r2._y__, l201, r3.y_neg(xyzw)
            ushr r2.x___, r2.x, r2.y
        else
            
            dcl_literal l202, 0x00000008, 0x00000008, 0x00000008, 0x00000008
            ult r2.__z_, l202, r3.y
            
            dcl_literal l203, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
            iadd r2.___w, r3.y, l203
            ishl r2.___w, r3.x, r2.w
            
            dcl_literal l204, 0x00000028, 0x00000028, 0x00000028, 0x00000028
            iadd r3._y__, l204, r3.y_neg(xyzw)
            ushr r3._y__, r8.x, r3.y
            ior r2.___w, r2.w, r3.y
            cmov_logical r2.x___, r2.z, r2.w, r3.x
        endif
        
        dcl_literal l205, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8, 0xFFFFFFE8
        iadd r1.___w, r1.w, l205
        
        dcl_literal l206, 0x00800000, 0x007FFFFF, 0x00000000, 0x00000000
        and r3.xy__, r2.x, l206
        
        dcl_literal l207, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        ior r2.__z_, r2.x, l207
        
        dcl_literal l208, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
        add r2.__z_, r2.z, l208
        
        dcl_literal l209, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.__z_, r2.z, l209
        
        dcl_literal l210, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
        iadd r2.__z_, l210, r2.z_neg(xyzw)
        
        dcl_literal l211, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
        and r2.__z_, r2.z, l211
        
        dcl_literal l212, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishr r2.__z_, r2.z, l212
        inegate r2._y__, r2.z
        
        dcl_literal l213, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
        mov r3.__z_, l213
        cmov_logical r2._yz_, r3.x, r3.yyzy, r2.xxyx
        iadd r1.___w, r1.w, r2.z
        
        dcl_literal l214, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
        iadd r1.___w, r1.w, l214
        
        dcl_literal l215, 0x00000017, 0x00000017, 0x00000017, 0x00000017
        ishl r1.___w, r1.w, l215
        ior r1.___w, r2.y, r1.w
        
        dcl_literal l216, 0x00000000, 0x00000000, 0x00000000, 0x00000000
        cmov_logical r7._y__, r2.x, r1.w, l216
        
        dcl_literal l217, 0x00000001, 0x00000001, 0x00000001, 0x00000001
        iadd r2.__z_, r7.z, l217
        mov r2.xy__, r7.xyxx_neg(xyzw)
        cmov_logical r2.xyz_, r1.z, r2.xyzx, r7.xyzx
        
        dcl_literal l218, 0x00000000, 0x00000000, 0xFFFFF000, 0x00000003
        and r1.__zw, r2.xxxz, l218
        add r2.__z_, r2.x, r1.z_neg(xyzw)
        
        dcl_literal l219, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
        mul_ieee r0.___w, r2.x, l219
        
        dcl_literal l220, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000
        mad_ieee r2.x___, r1.z, l220, r0.w_neg(xyzw)
        
        dcl_literal l221, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22
        mad_ieee r1.__z_, r1.z, l221, r2.x
        
        dcl_literal l222, 0x3FC90000, 0x3FC90000, 0x3FC90000, 0x3FC90000
        mad_ieee r1.__z_, r2.z, l222, r1.z
        
        dcl_literal l223, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22, 0x39FDAA22
        mad_ieee r1.__z_, r2.z, l223, r1.z
        utof r1._y__, r1.w
        
        dcl_literal l224, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
        mad_ieee r1.x___, r2.y, l224, r1.z
    endif
    
    dcl_literal l225, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
    mul_ieee r1._y__, r1.y, l225
    frc r1._y__, r1.y
    add r1._y__, r1.y, r1.y
    round_nearest r1._y__, r1.y
    add r0.___w, r0.w, r1.x
    mul_ieee r1.x___, r0.w, r0.w
    mul_ieee r1.__z_, r0.w, r1.x
    
    dcl_literal l226, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3, 0x3C8CEDD3
    
    dcl_literal l227, 0x3EC54587, 0x3EC54587, 0x3EC54587, 0x3EC54587
    mad_ieee r1.___w, r1.x_neg(xyzw), l226, l227
    mul_ieee r1.__z_, r1.z, r1.w
    
    dcl_literal l228, 0x3C971480, 0x3C971480, 0x3C971480, 0x3C971480
    
    dcl_literal l229, 0xBF039337, 0xBF039337, 0xBF039337, 0xBF039337
    mad_ieee r1.___w, r1.x, l228, l229
    
    dcl_literal l230, 0x3F93F425, 0x3F93F425, 0x3F93F425, 0x3F93F425
    mad_ieee r1.x___, r1.w, r1.x, l230
    div_zeroop(infinity) r1.x___, r1.z, r1.x
    add r0.___w, r0.w, r1.x
    
    dcl_literal l231, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
    div_zeroop(infinity) r1.x___, l231, r0.w
    
    dcl_literal l232, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    lt r1._y__, l232, r1.y
    cmov_logical r0._y__, r1.y, r1.x_neg(xyzw), r0.w
endif
dcl_literal l233, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, r0.x, l233
cmov_logical r0._y__, r0.w, r0.y_neg(xyzw), r0.y
dcl_literal l234, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ieq r0.___w, r0.z, l234
dcl_literal l235, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.w, l235, r0.y
dcl_literal l236, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0.__z_, l236, r0.z
dcl_literal l237, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.x___, r0.x, l237
cmov_logical r0.x___, r0.z, r0.x, r0.y
mov out0, r0
mend
__tgamma_f32
mdef(456)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000000, 0x7FFFFFFF, 0x80000000, 0x7F800000
and r0._yzw, r0.x, l0
frc r1.x___, r0.y
dcl_literal l1, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r1._y__, r0.x, l1
dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
lt r1.__z_, l2, r0.x
and r1.__z_, r1.y, r1.z
dcl_literal l3, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.___w, r0.x, l3
cmov_logical r1.__z_, r1.z, r1.w, r0.x
dcl_literal l4, 0x7FFFFFFF, 0x007FFFFF, 0x00000000, 0x00000000
and r2.xy__, r1.z, l4
dcl_literal l5, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.___w, r2.x, l5
dcl_literal l6, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r1.___w, r1.w, l6
dcl_literal l7, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r2.__z_, l7, r2.y
dcl_literal l8, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r2.__z_, r2.z, l8
dcl_literal l9, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r2.___w, r2.z, l9
ior r2._y__, r2.y, r2.w
dcl_literal l10, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.__z_, r2.z, l10
iadd r1.___w, r1.w, r2.z
itof r1.___w, r1.w
dcl_literal l11, 0x00000000, 0xBF800000, 0x3F800000, 0x00000000
add r2._yz_, r2.y, l11
div_zeroop(infinity) r2.__z_, r2.y, r2.z
mul_ieee r2.___w, r2.z, r2.z
mul_ieee r3.x___, r2.w, r2.w
dcl_literal l12, 0x00000000, 0x3E1CD04F, 0x3E178897, 0x00000000
dcl_literal l13, 0x00000000, 0x3E638E29, 0x3E3A3325, 0x00000000
mad_ieee r3._yz_, r3.x, l12, l13
dcl_literal l14, 0x00000000, 0x3ECCCCCD, 0x3E924925, 0x00000000
mad_ieee r3._yz_, r3.x, r3.yyzy, l14
mul_ieee r3._y__, r3.x, r3.y
dcl_literal l15, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r3.x___, r3.x, r3.z, l15
mad_ieee r2.___w, r2.w, r3.x, r3.y
mul_ieee r3.x___, r2.y, r2.y
dcl_literal l16, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.___w, r3.x, l16, r2.w
dcl_literal l17, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r3._y__, r1.w, l17
mad_ieee r2.__z_, r2.z, r2.w, r3.y
dcl_literal l18, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.__z_, r3.x, l18, r2.z_neg(xyzw)
add r2._y__, r2.y_neg(xyzw), r2.z
dcl_literal l19, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r1.___w, r1.w, l19, r2.y_neg(xyzw)
dcl_literal l20, 0x00000000, 0x3F666666, 0x41C80000, 0x00000000
ge r2._yz_, l20, r2.x
mov r2.___w, r1.w_neg(xyzw)
and r2.___w, r2.y, r2.w
dcl_literal l21, 0x3F3B4A23, 0x3E6B851F, 0x00000000, 0x3F9D70A4
ge r3, r2.x, l21
and r2._y__, r2.y, r3.x
dcl_literal l22, 0x3F800000, 0x40000000, 0x00000000, 0x00000000
add r4.xy__, r2.x_neg(xyzw), l22
and r2._y__, r2.y, r4.x
dcl_literal l23, 0x3F3B4A23, 0x3E6B851F, 0x3F9D70A4, 0x3FDDA512
lt r5, r2.x, l23
and r3.xyz_, r3.yzwy, r5.xywx
dcl_literal l24, 0xBEEC5B0C, 0xBF800000, 0xBFBB16C3, 0xC1C80000
add r6, r2.x, l24
cmov_logical r2._y__, r3.x, r6.x, r2.y
dcl_literal l25, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r3.x___, r3.x, l25
cmov_logical r2._y__, r3.y, r2.x, r2.y
dcl_literal l26, 0x3F666666, 0x00000000, 0x42040000, 0x00000000
lt r4.x_z_, l26, r2.x
and r3.___w, r5.z, r4.x
cmov_logical r2._y__, r3.w, r6.y, r2.y
ior r3._y__, r3.y, r3.w
dcl_literal l27, 0x00000002, 0x00000002, 0x00000002, 0x00000002
cmov_logical r3.x___, r3.y, l27, r3.x
cmov_logical r2._y__, r3.z, r6.z, r2.y
dcl_literal l28, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r3.x___, r3.z, l28, r3.x
dcl_literal l29, 0x3FDDA512, 0x40000000, 0x42240000, 0x42200000
ge r5, r2.x, l29
dcl_literal l30, 0x00000000, 0x40000000, 0x41000000, 0x00000000
lt r3._yz_, r2.x, l30
and r3.__zw, r5.xxxy, r3.yyyz
cmov_logical r2._y__, r3.z, r4.y, r2.y
dcl_literal l31, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r3.z, l31, r3.x
mul_ieee r3.__z_, r2.y, r2.y
dcl_literal l32, 0x37D383A2, 0x383C2C75, 0x00000000, 0x00000000
dcl_literal l33, 0x39679767, 0x38E28445, 0x00000000, 0x00000000
mad_ieee r4.xy__, r3.z, l32, l33
dcl_literal l34, 0x3A9C54A1, 0x3A05B634, 0x00000000, 0x00000000
mad_ieee r4.xy__, r3.z, r4.xyxx, l34
dcl_literal l35, 0x3BF2027E, 0x3B3D6EC6, 0x00000000, 0x00000000
mad_ieee r4.xy__, r3.z, r4.xyxx, l35
dcl_literal l36, 0x3D89F001, 0x3CA89915, 0x00000000, 0x00000000
mad_ieee r4.xy__, r3.z, r4.xyxx, l36
dcl_literal l37, 0x3D9E233F, 0x3EA51A66, 0x00000000, 0x00000000
mad_ieee r4.xy__, r3.z, r4.xyxx, l37
mul_ieee r4._y__, r3.z, r4.y
mad_ieee r4.x___, r2.y, r4.x, r4.y
dcl_literal l38, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r4.x___, r2.y_neg(xyzw), l38, r4.x
add r4.x___, r2.w, r4.x
mul_ieee r4._y__, r2.y, r3.z
dcl_literal l39, 0x39A57B6B, 0xB9A3F927, 0x39AFE9F7, 0x00000000
dcl_literal l40, 0xBAB7F476, 0x3A66F867, 0xBA0D3085, 0x00000000
mad_ieee r6.xyz_, r4.y, l39, l40
dcl_literal l41, 0x3BC7E707, 0xBB7177FE, 0x3B141699, 0x00000000
mad_ieee r6.xyz_, r4.y, r6.xyzx, l41
dcl_literal l42, 0xBD064D47, 0x3C93373D, 0xBC28FCFE, 0x00000000
mad_ieee r6.xyz_, r4.y, r6.xyzx, l42
dcl_literal l43, 0x3EF7B95E, 0xBE17213C, 0x3D845A15, 0x00000000
mad_ieee r6.xyz_, r4.y, r6.xyzx, l43
mad_ieee r4.___w, r2.y, r6.z, r6.y
dcl_literal l44, 0x31E61C52, 0x31E61C52, 0x31E61C52, 0x31E61C52
mad_ieee r4._y__, r4.y_neg(xyzw), r4.w, l44
mad_ieee r3.__z_, r3.z, r6.x, r4.y_neg(xyzw)
add r3.__z_, r2.w, r3.z
dcl_literal l45, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD, 0xBDF8CDCD
add r3.__z_, r3.z, l45
dcl_literal l46, 0x00000000, 0x3C5B3C5E, 0x00000000, 0x3B52D5DB
dcl_literal l47, 0x00000000, 0x3E6A7578, 0x00000000, 0x3DD572AF
mad_ieee r4._y_w, r2.y, l46, l47
dcl_literal l48, 0x00000000, 0x3F7A4BB2, 0x00000000, 0x3F44EFDF
mad_ieee r4._y_w, r2.y, r4.yyyw, l48
dcl_literal l49, 0x00000000, 0x3FBA3AE7, 0x00000000, 0x4008392D
mad_ieee r4._y_w, r2.y, r4.yyyw, l49
dcl_literal l50, 0x00000000, 0x3F2200F4, 0x00000000, 0x401D2EBE
mad_ieee r4._y_w, r2.y, r4.yyyw, l50
dcl_literal l51, 0x00000000, 0xBD9E233F, 0x00000000, 0x3F800000
mad_ieee r4._y_w, r2.y, r4.yyyw, l51
mul_ieee r4._y__, r2.y, r4.y
div_zeroop(infinity) r4._y__, r4.y, r4.w
dcl_literal l52, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
mad_ieee r2._y__, r2.y, l52, r4.y
add r2._y__, r2.w, r2.y
ftoi r2.___w, r2.x
round_z r4._y__, r2.x
add r4._y__, r2.x, r4.y_neg(xyzw)
dcl_literal l53, 0x375943FE, 0x3A620FAB, 0x00000000, 0x00000000
dcl_literal l54, 0x3B1F8219, 0x3CD01D14, 0x00000000, 0x00000000
mad_ieee r5.xy__, r4.y, l53, l54
dcl_literal l55, 0x3D11C643, 0x3E53B452, 0x00000000, 0x00000000
mad_ieee r5.xy__, r5.xyxx, r4.y, l55
dcl_literal l56, 0x3E11BDA2, 0x3F1E0B56, 0x00000000, 0x00000000
mad_ieee r5.xy__, r5.xyxx, r4.y, l56
dcl_literal l57, 0x3E172A19, 0x3F1B09B3, 0x00000000, 0x00000000
mad_ieee r5.xy__, r5.xyxx, r4.y, l57
dcl_literal l58, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9, 0xBD3F8AA9
mad_ieee r4.___w, r5.x, r4.y, l58
mul_ieee r4.___w, r4.y, r4.w
div_zeroop(infinity) r4.___w, r4.w, r5.y
dcl_literal l59, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r4.___w, r4.y, l59, r4.w
dcl_literal l60, 0x00000008, 0x00000007, 0x00000006, 0x00000005
ige r7, r2.w, l60
dcl_literal l61, 0x40E00000, 0x40C00000, 0x40A00000, 0x40800000
add r8, r4.y, l61
dcl_literal l62, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r5.x___, r7.x, r8.x, l62
mul_ieee r5._y__, r8.y, r5.x
cmov_logical r5.x___, r7.y, r5.y, r5.x
mul_ieee r5._y__, r8.z, r5.x
cmov_logical r5.x___, r7.z, r5.y, r5.x
mul_ieee r5._y__, r8.w, r5.x
cmov_logical r5.x___, r7.w, r5.y, r5.x
dcl_literal l63, 0x00000004, 0x00000003, 0x00000000, 0x00000000
ige r6.xy__, r2.w, l63
dcl_literal l64, 0x40400000, 0x40000000, 0x00000000, 0x00000000
add r7.xy__, r4.y, l64
mul_ieee r2.___w, r5.x, r7.x
cmov_logical r2.___w, r6.x, r2.w, r5.x
mul_ieee r4._y__, r7.y, r2.w
cmov_logical r2.___w, r6.y, r4.y, r2.w
dcl_literal l65, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r4._y__, r2.w, l65
dcl_literal l66, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r4._y__, r4.y, l66
dcl_literal l67, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r2.w, l67
dcl_literal l68, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r5.x___, l68, r2.w
dcl_literal l69, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r5.x___, r5.x, l69
dcl_literal l70, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r5._y__, r5.x, l70
ior r2.___w, r2.w, r5.y
dcl_literal l71, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r5.x___, r5.x, l71
iadd r4._y__, r4.y, r5.x
itof r4._y__, r4.y
dcl_literal l72, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
add r5.xy__, r2.w, l72
div_zeroop(infinity) r2.___w, r5.x, r5.y
mul_ieee r5._y__, r2.w, r2.w
mul_ieee r6.x___, r5.y, r5.y
dcl_literal l73, 0x00000000, 0x3E1CD04F, 0x3E178897, 0x00000000
dcl_literal l74, 0x00000000, 0x3E638E29, 0x3E3A3325, 0x00000000
mad_ieee r6._yz_, r6.x, l73, l74
dcl_literal l75, 0x00000000, 0x3ECCCCCD, 0x3E924925, 0x00000000
mad_ieee r6._yz_, r6.x, r6.yyzy, l75
mul_ieee r6._y__, r6.x, r6.y
dcl_literal l76, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r6.x___, r6.x, r6.z, l76
mad_ieee r5._y__, r5.y, r6.x, r6.y
mul_ieee r6.x___, r5.x, r5.x
dcl_literal l77, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r5._y__, r6.x, l77, r5.y
dcl_literal l78, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mul_ieee r6._y__, r4.y, l78
mad_ieee r2.___w, r2.w, r5.y, r6.y
dcl_literal l79, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r2.___w, r6.x, l79, r2.w_neg(xyzw)
add r2.___w, r5.x_neg(xyzw), r2.w
dcl_literal l80, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r2.___w, r4.y, l80, r2.w_neg(xyzw)
add r2.___w, r4.w, r2.w
dcl_literal l81, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.___w, r1.w, l81
mul_ieee r1.___w, r2.x, r1.w
cmov_logical r1.___w, r3.w, r2.w, r1.w
dcl_literal l82, 0x00000000, 0x00000001, 0x00000002, 0x00000000
ieq r6.xyz_, r3.x, l82
and r3.xy_w, r3.y, r6.xyxz
cmov_logical r1.___w, r3.x, r4.x, r1.w
cmov_logical r1.___w, r3.y, r3.z, r1.w
ior r2.___w, r3.w, r3.w
cmov_logical r1.___w, r2.w, r2.y, r1.w
dcl_literal l83, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2._y__, r1.w, l83
dcl_literal l84, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l85, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r2._y__, r2.y, l84, l85
dcl_literal l86, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r2._y__, r1.w, l86, r2.y
round_z r2._y__, r2.y
dcl_literal l87, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r1.___w, r2.y_neg(xyzw), l87, r1.w
dcl_literal l88, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r2.___w, r2.y_neg(xyzw), l88, r1.w
mul_ieee r3.x___, r2.w, r2.w
dcl_literal l89, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l90, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r3._y__, r3.x, l89, l90
dcl_literal l91, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r3._y__, r3.x, r3.y, l91
dcl_literal l92, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r3._y__, r3.x, r3.y, l92
dcl_literal l93, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3._y__, r3.x, r3.y, l93
mad_ieee r3.x___, r3.x_neg(xyzw), r3.y, r2.w
mul_ieee r2.___w, r2.w, r3.x
dcl_literal l94, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r3.x___, r3.x_neg(xyzw), l94
div_zeroop(infinity) r2.___w, r2.w, r3.x
dcl_literal l95, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r2.___w, r2.y, l95, r2.w_neg(xyzw)
add r1.___w, r1.w_neg(xyzw), r2.w
dcl_literal l96, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r1.___w, r1.w_neg(xyzw), l96
ftoi r2.___w, r2.y
dcl_literal l97, 0x80000000, 0x7F800000, 0x007FFFFF, 0x00000000
and r3.xyz_, r1.w, l97
if_logicalz r3.y
    itof r3.___w, r3.z
    
    dcl_literal l98, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r4.xy__, r3.w, l98
    
    dcl_literal l99, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.___w, r4.x, l99
    iadd r3.___w, r3.w, r2.w
    
    dcl_literal l100, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4.x___, r4.y, l100
    
    dcl_literal l101, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r3.___w, l101, r3.w_neg(xyzw)
    
    dcl_literal l102, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4._y__, l102, r3.w
    
    dcl_literal l103, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3.___w, r4.y, l103, r3.w
    
    dcl_literal l104, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, l104, r3.w
    ishr r4.___w, r4.x, r3.w
    inegate r3.___w, r3.w
    
    dcl_literal l105, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3.___w, r3.w, l105
    iadd r3.___w, r4.x, r3.w
    cmov_logical r3.___w, r4.y, r4.w, r3.w
else
    
    dcl_literal l106, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r1.___w, r1.w, l106
    
    dcl_literal l107, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3._y__, r3.y, l107
    iadd r3._y__, r3.y, r2.w
    
    dcl_literal l108, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2.___w, r2.w, l108
    iadd r1.___w, r1.w, r2.w
    
    dcl_literal l109, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r2.___w, r3.y, l109
    
    dcl_literal l110, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3._y__, l110, r2.w
    
    dcl_literal l111, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r1.___w, r3.y, l111, r1.w
    
    dcl_literal l112, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r2.___w, l112, r2.w_neg(xyzw)
    
    dcl_literal l113, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3._y__, r3.z, l113
    
    dcl_literal l114, 0x00000000, 0x00000017, 0x00000000, 0x00000000
    ilt r4.xy__, l114, r2.w
    
    dcl_literal l115, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2.___w, r4.y, l115, r2.w
    ishr r2.___w, r3.y, r2.w
    cmov_logical r3.___w, r4.x, r2.w, r1.w
endif
dcl_literal l116, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r1.___w, l116, r2.y
dcl_literal l117, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r1.___w, r1.w, l117, r3.w
ior r1.___w, r3.x, r1.w
round_z r2._y__, r6.w
add r2._y__, r6.w, r2.y_neg(xyzw)
dcl_literal l118, 0x41C80000, 0x42200000, 0x421C0000, 0x42180000
add r3, r2.y, l118
cmov_logical r6.___w, r2.z, r2.x, r3.x
dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r2.__z_, l119, r6.w
mul_ieee r2.___w, r2.z, r2.z
dcl_literal l120, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8, 0xBAD5C4E8
dcl_literal l121, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2, 0x3A5B3DD2
mad_ieee r4.x___, r2.w, l120, l121
dcl_literal l122, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C, 0xBA1C065C
mad_ieee r4.x___, r2.w, r4.x, l122
dcl_literal l123, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD, 0x3A500CFD
mad_ieee r4.x___, r2.w, r4.x, l123
dcl_literal l124, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r4.x___, r2.w, r4.x, l124
dcl_literal l125, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB, 0x3DAAAAAB
mad_ieee r2.___w, r2.w, r4.x, l125
dcl_literal l126, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D, 0x3ED67F1D
mad_ieee r2.__z_, r2.z, r2.w, l126
dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r2.___w, r5.z, r3.y, l127
mul_ieee r3._y__, r3.z, r2.w
cmov_logical r2.___w, r5.w, r3.y, r2.w
dcl_literal l128, 0x421C0000, 0x42180000, 0x42140000, 0x42100000
ge r5, r2.x, l128
mul_ieee r3._y__, r3.w, r2.w
cmov_logical r2.___w, r5.x, r3.y, r2.w
dcl_literal l129, 0x42140000, 0x42100000, 0x420C0000, 0x42080000
add r7, r2.y, l129
mul_ieee r3._y__, r2.w, r7.x
cmov_logical r2.___w, r5.y, r3.y, r2.w
mul_ieee r3._y__, r7.y, r2.w
cmov_logical r2.___w, r5.z, r3.y, r2.w
mul_ieee r3._y__, r7.z, r2.w
cmov_logical r2.___w, r5.w, r3.y, r2.w
dcl_literal l130, 0x420C0000, 0x42080000, 0x42040000, 0x42000000
ge r5, r2.x, l130
mul_ieee r3._y__, r7.w, r2.w
cmov_logical r2.___w, r5.x, r3.y, r2.w
dcl_literal l131, 0x42040000, 0x42000000, 0x41F80000, 0x41F00000
add r7, r2.y, l131
mul_ieee r3._y__, r2.w, r7.x
cmov_logical r2.___w, r5.y, r3.y, r2.w
mul_ieee r3._y__, r7.y, r2.w
cmov_logical r2.___w, r5.z, r3.y, r2.w
mul_ieee r3._y__, r7.z, r2.w
cmov_logical r2.___w, r5.w, r3.y, r2.w
dcl_literal l132, 0x41F80000, 0x41F00000, 0x41E80000, 0x41E00000
ge r5, r2.x, l132
mul_ieee r3._y__, r7.w, r2.w
cmov_logical r2.___w, r5.x, r3.y, r2.w
dcl_literal l133, 0x41E80000, 0x41E00000, 0x41D80000, 0x41D00000
add r7, r2.y, l133
mul_ieee r2._y__, r2.w, r7.x
cmov_logical r2._y__, r5.y, r2.y, r2.w
mul_ieee r2.___w, r7.y, r2.y
cmov_logical r2._y__, r5.z, r2.w, r2.y
mul_ieee r2.___w, r7.z, r2.y
cmov_logical r2._y__, r5.w, r2.w, r2.y
dcl_literal l134, 0x00000000, 0x41D80000, 0x41D00000, 0x41000000
ge r3._yzw, r2.x, l134
mul_ieee r2.x___, r7.w, r2.y
cmov_logical r2.x___, r3.y, r2.x, r2.y
mul_ieee r2._y__, r3.x, r2.x
cmov_logical r2.x___, r3.z, r2.y, r2.x
dcl_literal l135, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ilt r2._y__, r6.w, l135
dcl_literal l136, 0x4C000000, 0x4C000000, 0x4C000000, 0x4C000000
mul_ieee r6._y__, r6.w, l136
dcl_literal l137, 0xFFFFFFE7, 0x00000000, 0x00000000, 0x00000000
mov r6.x_z_, l137
cmov_logical r2._y_w, r2.y, r6.xxxy, r6.zzzw
dcl_literal l138, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.x___, r2.w, l138
iadd r2._y__, r3.x, r2.y
dcl_literal l139, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
iadd r2._y__, l139, r2.y
dcl_literal l140, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r2.w, l140
dcl_literal l141, 0x004AFB20, 0x004AFB20, 0x004AFB20, 0x004AFB20
iadd r3.x___, l141, r2.w
dcl_literal l142, 0x00800000, 0x00800000, 0x00800000, 0x00800000
and r3.x___, r3.x, l142
dcl_literal l143, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ixor r3._y__, r3.x, l143
ior r2.___w, r2.w, r3.y
dcl_literal l144, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r3.x___, r3.x, l144
iadd r2._y__, r2.y, r3.x
itof r2._y__, r2.y
dcl_literal l145, 0xBF800000, 0x3F800000, 0x00000000, 0x00000000
add r3.xy__, r2.w, l145
div_zeroop(infinity) r2.___w, r3.x, r3.y
mul_ieee r3._y__, r2.w, r2.w
mul_ieee r3.__z_, r3.y, r3.y
dcl_literal l146, 0x3E1CD04F, 0x3E178897, 0x00000000, 0x00000000
dcl_literal l147, 0x3E638E29, 0x3E3A3325, 0x00000000, 0x00000000
mad_ieee r4.xy__, r3.z, l146, l147
dcl_literal l148, 0x3ECCCCCD, 0x3E924925, 0x00000000, 0x00000000
mad_ieee r4.xy__, r3.z, r4.xyxx, l148
mul_ieee r4.x___, r3.z, r4.x
dcl_literal l149, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB, 0x3F2AAAAB
mad_ieee r3.__z_, r3.z, r4.y, l149
mad_ieee r3._y__, r3.y, r3.z, r4.x
mul_ieee r3.__z_, r3.x, r3.x
dcl_literal l150, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r4.x___, r3.z, l150
dcl_literal l151, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mad_ieee r3._y__, r3.z, l151, r3.y
mad_ieee r2.___w, r2.w_neg(xyzw), r3.y, r4.x
add r2.___w, r3.x_neg(xyzw), r2.w
dcl_literal l152, 0xBFB8AA3B, 0xBFB8AA3B, 0xBFB8AA3B, 0xBFB8AA3B
mul_ieee r2.___w, r2.w, l152
frc r3.x___, r2.w_abs
add r3._y__, r2.w_abs, r3.x_neg(xyzw)
dcl_literal l153, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.___w, r2.w, l153
dcl_literal l154, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
dcl_literal l155, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r2.___w, r2.w, l154, l155
mul_ieee r3.__z_, r3.x, r2.w
mad_ieee r2._y__, r3.y, r2.w, r2.y
frc r3._y__, r6.w_abs
add r4.x___, r6.w_abs, r3.y_neg(xyzw)
dcl_literal l156, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r4._y__, r6.w, l156
dcl_literal l157, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
dcl_literal l158, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r4._y__, r4.y, l157, l158
mul_ieee r4.___w, r4.x, r4.y
mul_ieee r5.x___, r3.y, r4.y
dcl_literal l159, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r5._y__, r3.z, l159
mad_ieee r2.___w, r3.x, r2.w, r5.y_neg(xyzw)
dcl_literal l160, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r3.x___, r4.w, l160
mad_ieee r4.x___, r4.x, r4.y, r3.x_neg(xyzw)
mul_ieee r5.__z_, r3.z, r4.w
mad_ieee r5.___w, r5.y, r3.x, r5.z_neg(xyzw)
mad_ieee r5.___w, r5.y, r4.x, r5.w
mad_ieee r3.x___, r2.w, r3.x, r5.w
mad_ieee r3.x___, r2.w, r4.x, r3.x
dcl_literal l161, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r4.x___, r2.y, l161
add r5.___w, r2.y, r4.x_neg(xyzw)
dcl_literal l162, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000, 0xFFFFF000
and r6.x___, r5.x, l162
mad_ieee r3._y__, r3.y, r4.y, r6.x_neg(xyzw)
mul_ieee r4._y__, r2.y, r5.x
mad_ieee r6._y__, r4.x, r6.x, r4.y_neg(xyzw)
mad_ieee r4.x___, r4.x, r3.y, r6.y
mad_ieee r4.x___, r5.w, r6.x, r4.x
mad_ieee r4.x___, r5.w, r3.y, r4.x
mul_ieee r3.__z_, r3.z, r5.x
mad_ieee r5.x___, r5.y, r6.x, r3.z_neg(xyzw)
mad_ieee r5.x___, r5.y, r3.y, r5.x
mad_ieee r5.x___, r2.w, r6.x, r5.x
mad_ieee r2.___w, r2.w, r3.y, r5.x
frc r3._y__, r5.z_abs
add r5.x___, r5.z_abs, r3.y_neg(xyzw)
dcl_literal l163, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r5._y__, r5.z, l163
dcl_literal l164, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
dcl_literal l165, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r5._y__, r5.y, l164, l165
mul_ieee r5.x___, r5.x, r5.y
mul_ieee r3._y__, r3.y, r5.y
mad_ieee r2._y__, r2.y, r4.w, r5.x
frc r4.___w, r4.y_abs
add r5.x___, r4.y_abs, r4.w_neg(xyzw)
dcl_literal l166, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r4._y__, r4.y, l166
dcl_literal l167, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
dcl_literal l168, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r4._y__, r4.y, l167, l168
mul_ieee r4.___w, r4.w, r4.y
mad_ieee r2._y__, r5.x, r4.y, r2.y
frc r4._y__, r3.z_abs
add r5.x___, r3.z_abs, r4.y_neg(xyzw)
dcl_literal l169, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r3.__z_, r3.z, l169
dcl_literal l170, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
dcl_literal l171, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r3.__z_, r3.z, l170, l171
mul_ieee r4._y__, r4.y, r3.z
mad_ieee r2._y__, r5.x, r3.z, r2.y
ge r3.__z_, r4.y_abs, r4.w_abs
cmov_logical r5.x___, r3.z, r4.y, r4.w
cmov_logical r3.__z_, r3.z, r4.w, r4.y
ge r4._y__, r5.x_abs, r3.y_abs
cmov_logical r4.___w, r4.y, r5.x, r3.y
cmov_logical r3._y__, r4.y, r3.y, r5.x
ge r4._y__, r3.z_abs, r3.y_abs
cmov_logical r5.x___, r4.y, r3.z, r3.y
cmov_logical r3._y__, r4.y, r3.y, r3.z
add r3.__z_, r3.x, r4.x
add r3.__z_, r2.w, r3.z
add r3.__z_, r3.y, r3.z
add r3.__z_, r5.x, r3.z
add r3.__z_, r4.w, r3.z
add r4._y__, r4.w, r3.z_neg(xyzw)
add r4._y__, r5.x, r4.y
add r3._y__, r3.y, r4.y
add r3.x___, r3.x, r3.y
add r3.x___, r4.x, r3.x
add r2.___w, r2.w, r3.x
frc r3.x___, r3.z_abs
add r3._y__, r3.z_abs, r3.x_neg(xyzw)
dcl_literal l172, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r3.__z_, r3.z, l172
dcl_literal l173, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
dcl_literal l174, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r3.__z_, r3.z, l173, l174
mul_ieee r3.x___, r3.x, r3.z
mad_ieee r2._y__, r3.y, r3.z, r2.y
dcl_literal l175, 0x00000000, 0x3F317180, 0x3717F7D1, 0x00000000
mul_ieee r3._yz_, r3.x, l175
mul_ieee r4.xy__, r3.yzyy, r3.yzyy
dcl_literal l176, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mul_ieee r4._y__, r4.y, l176
dcl_literal l177, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l178, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r4.___w, r4.x, l177, l178
dcl_literal l179, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r4.___w, r4.x, r4.w, l179
dcl_literal l180, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r4.___w, r4.x, r4.w, l180
dcl_literal l181, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r4.___w, r4.x, r4.w, l181
mad_ieee r4.x___, r4.x_neg(xyzw), r4.w, r3.y
mul_ieee r3._y__, r3.y, r4.x
dcl_literal l182, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
add r4.x___, r4.x, l182
div_zeroop(infinity) r3._y__, r3.y, r4.x
dcl_literal l183, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r3._y__, r3.x_neg(xyzw), l183, r3.y
dcl_literal l184, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r4.x___, r3.x, l184, r4.y_neg(xyzw)
mul_ieee r3.__z_, r3.z, r4.x
dcl_literal l185, 0xC0000000, 0xC0000000, 0xC0000000, 0xC0000000
add r4.x___, r4.x, l185
div_zeroop(infinity) r3.__z_, r3.z, r4.x
dcl_literal l186, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r3.x___, r3.x_neg(xyzw), l186, r3.z
dcl_literal l187, 0x3F317180, 0x3717F7D1, 0x00000000, 0x00000000
mul_ieee r4.xy__, r2.w, l187
mul_ieee r5.xy__, r4.xyxx, r4.xyxx
dcl_literal l188, 0x00000000, 0x00000000, 0x3331BB4C, 0x3331BB4C
dcl_literal l189, 0x00000000, 0x00000000, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r5.__zw, r5.xxxy, l188, l189
dcl_literal l190, 0x00000000, 0x00000000, 0x388AB355, 0x388AB355
mad_ieee r5.__zw, r5.xxxy, r5.zzzw, l190
dcl_literal l191, 0x00000000, 0x00000000, 0xBB360B61, 0xBB360B61
mad_ieee r5.__zw, r5.xxxy, r5.zzzw, l191
dcl_literal l192, 0x00000000, 0x00000000, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r5.__zw, r5.xxxy, r5.zzzw, l192
mad_ieee r5.xy__, r5.xyxx_neg(xyzw), r5.zwzz, r4.xyxx
mul_ieee r4.xy__, r4.xyxx, r5.xyxx
dcl_literal l193, 0xC0000000, 0xC0000000, 0x00000000, 0x00000000
add r5.xy__, r5.xyxx, l193
div_zeroop(infinity) r4.xy__, r4.xyxx, r5.xyxx
dcl_literal l194, 0x3F317180, 0x3717F7D1, 0x00000000, 0x00000000
mad_ieee r4.xy__, r2.w_neg(xyzw), l194, r4.xyxx
mad_ieee r2.___w, r3.y, r4.x, r4.x_neg(xyzw)
add r2.___w, r3.y_neg(xyzw), r2.w
mad_ieee r3._y__, r3.x, r4.y, r4.y_neg(xyzw)
add r3.x___, r3.x_neg(xyzw), r3.y
mad_ieee r3.x___, r2.w, r3.x, r3.x
add r2.___w, r2.w, r3.x
dcl_literal l195, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r2.___w, r2.w, l195
ftoi r3.x___, r2.y
dcl_literal l196, 0x80000000, 0x7F800000, 0x00000000, 0x007FFFFF
and r4.xy_w, r2.w, l196
if_logicalz r4.y
    itof r3._y__, r4.w
    
    dcl_literal l197, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r3._yz_, r3.y, l197
    
    dcl_literal l198, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3._y__, r3.y, l198
    iadd r3._y__, r3.y, r3.x
    
    dcl_literal l199, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.__z_, r3.z, l199
    
    dcl_literal l200, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r3._y__, l200, r3.y_neg(xyzw)
    
    dcl_literal l201, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r5.x___, l201, r3.y
    
    dcl_literal l202, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3._y__, r5.x, l202, r3.y
    
    dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5.x___, l203, r3.y
    ishr r5._y__, r3.z, r3.y
    inegate r3._y__, r3.y
    
    dcl_literal l204, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3._y__, r3.y, l204
    iadd r3._y__, r3.z, r3.y
    cmov_logical r3._y__, r5.x, r5.y, r3.y
else
    
    dcl_literal l205, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r2.___w, r2.w, l205
    
    dcl_literal l206, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.__z_, r4.y, l206
    iadd r3.__z_, r3.z, r3.x
    
    dcl_literal l207, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3.x___, r3.x, l207
    iadd r2.___w, r2.w, r3.x
    
    dcl_literal l208, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3.x___, r3.z, l208
    
    dcl_literal l209, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.__z_, l209, r3.x
    
    dcl_literal l210, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2.___w, r3.z, l210, r2.w
    
    dcl_literal l211, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3.x___, l211, r3.x_neg(xyzw)
    
    dcl_literal l212, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.__z_, r4.w, l212
    
    dcl_literal l213, 0x00000000, 0x00000000, 0x00000000, 0x00000017
    ilt r4._y_w, l213, r3.x
    
    dcl_literal l214, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3.x___, r4.w, l214, r3.x
    ishr r3.x___, r3.z, r3.x
    cmov_logical r3._y__, r4.y, r3.x, r2.w
endif
dcl_literal l215, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r2._y__, l215, r2.y
dcl_literal l216, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2._y__, r2.y, l216, r3.y
ior r2._y__, r4.x, r2.y
dcl_literal l217, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r2.___w, r2.z, l217
dcl_literal l218, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l219, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r2.___w, r2.w, l218, l219
dcl_literal l220, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r2.___w, r2.z, l220, r2.w
round_z r2.___w, r2.w
dcl_literal l221, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r2.__z_, r2.w_neg(xyzw), l221, r2.z
dcl_literal l222, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r3.x___, r2.w_neg(xyzw), l222, r2.z
mul_ieee r3._y__, r3.x, r3.x
dcl_literal l223, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l224, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r3.__z_, r3.y, l223, l224
dcl_literal l225, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r3.__z_, r3.y, r3.z, l225
dcl_literal l226, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r3.__z_, r3.y, r3.z, l226
dcl_literal l227, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r3.__z_, r3.y, r3.z, l227
mad_ieee r3._y__, r3.y_neg(xyzw), r3.z, r3.x
mul_ieee r3.x___, r3.x, r3.y
dcl_literal l228, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r3._y__, r3.y_neg(xyzw), l228
div_zeroop(infinity) r3.x___, r3.x, r3.y
dcl_literal l229, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r3.x___, r2.w, l229, r3.x_neg(xyzw)
add r2.__z_, r2.z_neg(xyzw), r3.x
dcl_literal l230, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r2.__z_, r2.z_neg(xyzw), l230
ftoi r3.x___, r2.w
dcl_literal l231, 0x80000000, 0x7F800000, 0x00000000, 0x007FFFFF
and r4.xy_w, r2.z, l231
if_logicalz r4.y
    itof r3._y__, r4.w
    
    dcl_literal l232, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r3._yz_, r3.y, l232
    
    dcl_literal l233, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3._y__, r3.y, l233
    iadd r3._y__, r3.y, r3.x
    
    dcl_literal l234, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.__z_, r3.z, l234
    
    dcl_literal l235, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r3._y__, l235, r3.y_neg(xyzw)
    
    dcl_literal l236, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r5.x___, l236, r3.y
    
    dcl_literal l237, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3._y__, r5.x, l237, r3.y
    
    dcl_literal l238, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5.x___, l238, r3.y
    ishr r5._y__, r3.z, r3.y
    inegate r3._y__, r3.y
    
    dcl_literal l239, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3._y__, r3.y, l239
    iadd r3._y__, r3.z, r3.y
    cmov_logical r3._y__, r5.x, r5.y, r3.y
else
    
    dcl_literal l240, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r2.__z_, r2.z, l240
    
    dcl_literal l241, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.__z_, r4.y, l241
    iadd r3.__z_, r3.z, r3.x
    
    dcl_literal l242, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3.x___, r3.x, l242
    iadd r2.__z_, r2.z, r3.x
    
    dcl_literal l243, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3.x___, r3.z, l243
    
    dcl_literal l244, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r3.__z_, l244, r3.x
    
    dcl_literal l245, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2.__z_, r3.z, l245, r2.z
    
    dcl_literal l246, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3.x___, l246, r3.x_neg(xyzw)
    
    dcl_literal l247, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.__z_, r4.w, l247
    
    dcl_literal l248, 0x00000000, 0x00000000, 0x00000000, 0x00000017
    ilt r4._y_w, l248, r3.x
    
    dcl_literal l249, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3.x___, r4.w, l249, r3.x
    ishr r3.x___, r3.z, r3.x
    cmov_logical r3._y__, r4.y, r3.x, r2.z
endif
dcl_literal l250, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r2.__z_, l250, r2.w
dcl_literal l251, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.__z_, r2.z, l251, r3.y
ior r2.__z_, r4.x, r2.z
dcl_literal l252, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
add r2.___w, r6.w, l252
dcl_literal l253, 0x00000000, 0x00000000, 0x00000000, 0x00000000
lt r3.x___, r2.w, l253
dcl_literal l254, 0xBF000000, 0xBF000000, 0xBF000000, 0xBF000000
dcl_literal l255, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
cmov_logical r3.x___, r3.x, l254, l255
dcl_literal l256, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B, 0x3FB8AA3B
mad_ieee r3.x___, r2.w, l256, r3.x
round_z r3.x___, r3.x
dcl_literal l257, 0x3F317180, 0x3F317180, 0x3F317180, 0x3F317180
mad_ieee r2.___w, r3.x_neg(xyzw), l257, r2.w
dcl_literal l258, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r3._y__, r3.x_neg(xyzw), l258, r2.w
mul_ieee r3.__z_, r3.y, r3.y
dcl_literal l259, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C, 0x3331BB4C
dcl_literal l260, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E, 0xB5DDEA0E
mad_ieee r4.x___, r3.z, l259, l260
dcl_literal l261, 0x388AB355, 0x388AB355, 0x388AB355, 0x388AB355
mad_ieee r4.x___, r3.z, r4.x, l261
dcl_literal l262, 0xBB360B61, 0xBB360B61, 0xBB360B61, 0xBB360B61
mad_ieee r4.x___, r3.z, r4.x, l262
dcl_literal l263, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB, 0x3E2AAAAB
mad_ieee r4.x___, r3.z, r4.x, l263
mad_ieee r3.__z_, r3.z_neg(xyzw), r4.x, r3.y
mul_ieee r3._y__, r3.y, r3.z
dcl_literal l264, 0x40000000, 0x40000000, 0x40000000, 0x40000000
add r3.__z_, r3.z_neg(xyzw), l264
div_zeroop(infinity) r3._y__, r3.y, r3.z
dcl_literal l265, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1, 0x3717F7D1
mad_ieee r3._y__, r3.x, l265, r3.y_neg(xyzw)
add r2.___w, r2.w_neg(xyzw), r3.y
dcl_literal l266, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
add r2.___w, r2.w_neg(xyzw), l266
ftoi r3._y__, r3.x
dcl_literal l267, 0x80000000, 0x7F800000, 0x00000000, 0x007FFFFF
and r4.xy_w, r2.w, l267
if_logicalz r4.y
    itof r3.__z_, r4.w
    
    dcl_literal l268, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r5.xy__, r3.z, l268
    
    dcl_literal l269, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.__z_, r5.x, l269
    iadd r3.__z_, r3.z, r3.y
    
    dcl_literal l270, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r5.x___, r5.y, l270
    
    dcl_literal l271, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r3.__z_, l271, r3.z_neg(xyzw)
    
    dcl_literal l272, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r5._y__, l272, r3.z
    
    dcl_literal l273, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3.__z_, r5.y, l273, r3.z
    
    dcl_literal l274, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5._y__, l274, r3.z
    ishr r5.__z_, r5.x, r3.z
    inegate r3.__z_, r3.z
    
    dcl_literal l275, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3.__z_, r3.z, l275
    iadd r3.__z_, r5.x, r3.z
    cmov_logical r3.__z_, r5.y, r5.z, r3.z
else
    
    dcl_literal l276, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r2.___w, r2.w, l276
    
    dcl_literal l277, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r4._y__, r4.y, l277
    iadd r4._y__, r4.y, r3.y
    
    dcl_literal l278, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r3._y__, r3.y, l278
    iadd r2.___w, r2.w, r3.y
    
    dcl_literal l279, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81, 0xFFFFFF81
    iadd r3._y__, r4.y, l279
    
    dcl_literal l280, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r4._y__, l280, r3.y
    
    dcl_literal l281, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r2.___w, r4.y, l281, r2.w
    
    dcl_literal l282, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3._y__, l282, r3.y_neg(xyzw)
    
    dcl_literal l283, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4._y__, r4.w, l283
    
    dcl_literal l284, 0x00000000, 0x00000017, 0x00000000, 0x00000000
    ilt r5.xy__, l284, r3.y
    
    dcl_literal l285, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3._y__, r5.y, l285, r3.y
    ishr r3._y__, r4.y, r3.y
    cmov_logical r3.__z_, r5.x, r3.y, r2.w
endif
dcl_literal l286, 0x437E0000, 0x437E0000, 0x437E0000, 0x437E0000
lt r2.___w, l286, r3.x
dcl_literal l287, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
cmov_logical r2.___w, r2.w, l287, r3.z
ior r2.___w, r4.x, r2.w
sqrt_vec r3.x___, r6.w
dcl_literal l288, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.__z_, r1.z, l288
and r1.__z_, r4.z, r1.z
dcl_literal l289, 0x2E800000, 0x2E800000, 0x2E800000, 0x2E800000
mul_ieee r3._y__, r2.y, l289
cmov_logical r2._y__, r1.z, r3.y, r2.y
mul_ieee r2.___w, r2.w, r3.x
div_zeroop(infinity) r3.x___, r2.y, r2.w
mul_ieee r3.x___, r2.z, r3.x
mul_ieee r3.x___, r2.x, r3.x
div_zeroop(infinity) r2._y__, r2.w, r2.y
div_zeroop(infinity) r2.x___, r2.y, r2.x
div_zeroop(infinity) r2.x___, r2.x, r2.z
cmov_logical r1.__z_, r1.z, r2.x, r3.x
cmov_logical r1.__z_, r3.w, r1.z, r1.w
dcl_literal l290, 0x00800000, 0x32000000, 0x00000000, 0x00000000
ilt r2.xy__, r0.y, l290
itof r1.___w, r0.y
dcl_literal l291, 0x00000000, 0x00000000, 0x7F800000, 0x007FFFFF
and r2.__zw, r1.w, l291
dcl_literal l292, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r2.__z_, r2.z, l292
dcl_literal l293, 0x00000018, 0x00000018, 0x00000018, 0x00000018
iadd r2.__z_, r2.z, l293
dcl_literal l294, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r2.___w, r2.w, l294
dcl_literal l295, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r2.__z_, l295, r2.z_neg(xyzw)
dcl_literal l296, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r3.x___, l296, r2.z
dcl_literal l297, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r2.__z_, r3.x, l297, r2.z
dcl_literal l298, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r3.x___, l298, r2.z
ishr r3._y__, r2.w, r2.z
inegate r2.__z_, r2.z
dcl_literal l299, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r2.__z_, r2.z, l299
iadd r2.__z_, r2.w, r2.z
cmov_logical r2.__z_, r3.x, r3.y, r2.z
cmov_logical r2.__z_, r2.x, r2.z, r0.y
dcl_literal l300, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
div_zeroop(infinity) r2.___w, l300, r2.z
ior r0.__z_, r0.z, r2.w
dcl_literal l301, 0x35800000, 0x35800000, 0x35800000, 0x35800000
ige r2.___w, l301, r0.y
cmov_logical r1.__z_, r2.w, r0.z, r1.z
add r3.x___, r0.y, r1.x_neg(xyzw)
dcl_literal l302, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
mul_ieee r3._y__, r3.x, l302
frc r3._y__, r3.y
dcl_literal l303, 0x00000000, 0x00000000, 0x00000000, 0x00000000
eq r3._y__, r3.y, l303
add r3.__z_, r0.y, r0.y
round_nearest r3.__z_, r3.z
dcl_literal l304, 0x40000000, 0x40000000, 0x40000000, 0x40000000
mad_ieee r3.___w, r0.y, l304, r3.z_neg(xyzw)
dcl_literal l305, 0x3E800000, 0x3E800000, 0x3E800000, 0x3E800000
mul_ieee r3.__z_, r3.z, l305
frc r3.__z_, r3.z
dcl_literal l306, 0x40800000, 0x40800000, 0x40800000, 0x40800000
mul_ieee r3.__z_, r3.z, l306
round_nearest r3.__z_, r3.z
dcl_literal l307, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB, 0x3FC90FDB
mul_ieee r3.___w, r3.w, l307
mul_ieee r4.x___, r3.w, r3.w
mul_ieee r4._y__, r3.w, r4.x
dcl_literal l308, 0x00000000, 0x00000000, 0x3636DF25, 0xB492923A
dcl_literal l309, 0x00000000, 0x00000000, 0xB95009D4, 0x37D00AE2
mad_ieee r4.__zw, r4.x, l308, l309
dcl_literal l310, 0x00000000, 0x00000000, 0x3C088887, 0xBAB60B60
mad_ieee r4.__zw, r4.x, r4.zzzw, l310
dcl_literal l311, 0x00000000, 0x00000000, 0xBE2AAAAB, 0x3D2AAAAB
mad_ieee r4.__zw, r4.x, r4.zzzw, l311
mad_ieee r3.___w, r4.y, r4.z, r3.w
dcl_literal l312, 0x3F000000, 0x3F000000, 0x3F000000, 0x3F000000
dcl_literal l313, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
mad_ieee r4._y__, r4.x_neg(xyzw), l312, l313
mul_ieee r4.x___, r4.x, r4.x
mad_ieee r4.x___, r4.x, r4.w, r4.y
dcl_literal l314, 0x00000000, 0x3F800000, 0x40000000, 0x40400000
eq r5, r3.z, l314
dcl_literal l315, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ge r3.__z_, r0.y, l315
and r5, r5, r3.z
and r3.__z_, r3.w, r5.x
cmov_logical r3.__z_, r5.y, r4.x, r3.z
cmov_logical r3.__z_, r5.z, r3.w_neg(xyzw), r3.z
cmov_logical r3.__z_, r5.w, r4.x_neg(xyzw), r3.z
dcl_literal l316, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ine r4.xy__, r0.ywyy, l316
dcl_literal l317, 0x00000000, 0x00000000, 0x7F800000, 0x00000000
ieq r5.xyz_, r0.wyyw, l317
and r0.___w, r4.x, r5.x
dcl_literal l318, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r1.___w, r1.w, l318
dcl_literal l319, 0x7F800000, 0x00000000, 0x007FFFFF, 0x00000000
and r4.x_z_, r1.w, l319
dcl_literal l320, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishr r1.___w, r4.x, l320
dcl_literal l321, 0x00800000, 0x00800000, 0x00800000, 0x00800000
ior r3.___w, r4.z, l321
dcl_literal l322, 0x00000096, 0x00000096, 0x00000096, 0x00000096
iadd r1.___w, l322, r1.w_neg(xyzw)
dcl_literal l323, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ilt r4.x___, l323, r1.w
dcl_literal l324, 0x00000018, 0x00000018, 0x00000018, 0x00000018
cmov_logical r1.___w, r4.x, l324, r1.w
dcl_literal l325, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r4.x___, l325, r1.w
ishr r4.__z_, r3.w, r1.w
inegate r1.___w, r1.w
dcl_literal l326, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1.___w, r1.w, l326
iadd r1.___w, r3.w, r1.w
cmov_logical r1.___w, r4.x, r4.z, r1.w
cmov_logical r0.___w, r0.w, r1.w, r3.z
and r1.___w, r2.y, r4.y
dcl_literal l327, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
mul_ieee r2._y__, r0.y, l327
cmov_logical r0.___w, r1.w, r2.y, r0.w
dcl_literal l328, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ge r1.___w, r3.x, l328
dcl_literal l329, 0x00000000, 0x00000000, 0x3F000000, 0x00000000
eq r3.x_z_, r1.x, l329
and r1.x___, r1.w, r3.x
ior r1.x___, r5.y, r1.x
dcl_literal l330, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.___w, r1.x, l330, r0.w
dcl_literal l331, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
dcl_literal l332, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
cmov_logical r1.x___, r3.y, l331, l332
cmov_logical r0.___w, r3.z, r1.x, r0.w
dcl_literal l333, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1.x___, r0.x, l333
cmov_logical r0.___w, r1.x, r0.w_neg(xyzw), r0.w
mul_ieee r1.___w, r2.z, r0.w
dcl_literal l334, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
div_zeroop(infinity) r1.___w, l334, r1.w
mul_ieee r1.___w, r1.z, r1.w
dcl_literal l335, 0x00000000, 0x80000000, 0x7F800000, 0x007FFFFF
and r3._yzw, r1.w, l335
if_logicalz r3.z
    itof r2._y__, r3.w
    
    dcl_literal l336, 0x7F800000, 0x007FFFFF, 0x00000000, 0x00000000
    and r4.xy__, r2.y, l336
    
    dcl_literal l337, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r2._y__, r4.x, l337
    
    dcl_literal l338, 0xFFFFFFDE, 0xFFFFFFDE, 0xFFFFFFDE, 0xFFFFFFDE
    iadd r2._y__, r2.y, l338
    
    dcl_literal l339, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r4.x___, r4.y, l339
    
    dcl_literal l340, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r2._y__, l340, r2.y_neg(xyzw)
    
    dcl_literal l341, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r4._y__, l341, r2.y
    
    dcl_literal l342, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r2._y__, r4.y, l342, r2.y
    
    dcl_literal l343, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, l343, r2.y
    ishr r4.__z_, r4.x, r2.y
    inegate r2._y__, r2.y
    
    dcl_literal l344, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r2._y__, r2.y, l344
    iadd r2._y__, r4.x, r2.y
    cmov_logical r2._y__, r4.y, r4.z, r2.y
else
    
    dcl_literal l345, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r4.x___, r1.w, l345
    
    dcl_literal l346, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r3.__z_, r3.z, l346
    
    dcl_literal l347, 0xEF000000, 0xEF000000, 0xEF000000, 0xEF000000
    iadd r4.x___, r4.x, l347
    
    dcl_literal l348, 0xFFFFFF5F, 0xFFFFFF5F, 0xFFFFFF5F, 0xFFFFFF5F
    iadd r3.__z_, r3.z, l348
    
    dcl_literal l349, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
    iadd r3.__z_, l349, r3.z_neg(xyzw)
    
    dcl_literal l350, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r3.___w, r3.w, l350
    
    dcl_literal l351, 0x00000000, 0x00000000, 0x00000017, 0x00000000
    ilt r4._yz_, l351, r3.z
    
    dcl_literal l352, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r3.__z_, r4.z, l352, r3.z
    ishr r3.__z_, r3.w, r3.z
    cmov_logical r2._y__, r4.y, r3.z, r4.x
endif
ior r2._y__, r3.y, r2.y
dcl_literal l353, 0x42040000, 0x42040000, 0x42040000, 0x42040000
lt r3._y__, l353, r2.z
and r3._y__, r1.y, r3.y
cmov_logical r1.___w, r3.y, r2.y, r1.w
dcl_literal l354, 0x42040000, 0x42040000, 0x42040000, 0x42040000
ge r2._y__, l354, r2.z
and r2._y__, r1.y, r2.y
mul_ieee r3._y__, r2.z, r1.z
mul_ieee r0.___w, r0.w, r3.y
dcl_literal l355, 0x40490FDB, 0x40490FDB, 0x40490FDB, 0x40490FDB
div_zeroop(infinity) r0.___w, l355, r0.w
cmov_logical r0.___w, r2.y, r0.w, r1.w
div_zeroop(infinity) r1.___w, r1.z, r0.x
dcl_literal l356, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
lt r2._y__, r2.z, l356
and r2._y__, r1.y, r2.y
cmov_logical r0.___w, r2.y, r1.w, r0.w
cmov_logical r0.__z_, r2.w, r0.z, r0.w
cmov_logical r0.__z_, r1.y, r0.z, r1.z
dcl_literal l357, 0x00000000, 0x00000000, 0x80000000, 0x7F800000
and r1.__zw, r0.z, l357
if_logicalz r1.w
    
    dcl_literal l358, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
    and r0.___w, r0.z, l358
    itof r0.___w, r0.w
    
    dcl_literal l359, 0x00000000, 0x7F800000, 0x007FFFFF, 0x00000000
    and r2._yz_, r0.w, l359
    
    dcl_literal l360, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r0.___w, r2.y, l360
    
    dcl_literal l361, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    iadd r0.___w, r0.w, l361
    
    dcl_literal l362, 0x00800000, 0x00800000, 0x00800000, 0x00800000
    ior r2._y__, r2.z, l362
    
    dcl_literal l363, 0x00000096, 0x00000096, 0x00000096, 0x00000096
    iadd r0.___w, l363, r0.w_neg(xyzw)
    
    dcl_literal l364, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ilt r2.__z_, l364, r0.w
    
    dcl_literal l365, 0x00000018, 0x00000018, 0x00000018, 0x00000018
    cmov_logical r0.___w, r2.z, l365, r0.w
    
    dcl_literal l366, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.__z_, l366, r0.w
    ishr r2.___w, r2.y, r0.w
    inegate r0.___w, r0.w
    
    dcl_literal l367, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishl r0.___w, r0.w, l367
    iadd r0.___w, r2.y, r0.w
    cmov_logical r0.___w, r2.z, r2.w, r0.w
else
    
    dcl_literal l368, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
    and r2._y__, r0.z, l368
    
    dcl_literal l369, 0x00000017, 0x00000017, 0x00000017, 0x00000017
    ishr r1.___w, r1.w, l369
    
    dcl_literal l370, 0x0C000000, 0x0C000000, 0x0C000000, 0x0C000000
    iadd r2._y__, r2.y, l370
    
    dcl_literal l371, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99, 0xFFFFFF99
    iadd r1.___w, r1.w, l371
    
    dcl_literal l372, 0x0000007F, 0x0000007F, 0x0000007F, 0x0000007F
    ilt r1.___w, l372, r1.w
    
    dcl_literal l373, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
    cmov_logical r0.___w, r1.w, l373, r2.y
endif
ior r0.___w, r1.z, r0.w
cmov_logical r0.__z_, r2.x, r0.w, r0.z
dcl_literal l374, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.___w, l374, r0.x
and r0.___w, r5.z, r0.w
cmov_logical r0.__z_, r0.w, r0.x, r0.z
dcl_literal l375, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
ilt r0._y__, l375, r0.y
and r0.___w, r5.z, r1.x
ior r0._y__, r0.y, r0.w
dcl_literal l376, 0x7FC00000, 0x7FC00000, 0x7FC00000, 0x7FC00000
ior r0.___w, r0.x, l376
cmov_logical r0._y__, r0.y, r0.w, r0.z
and r0.__z_, r1.y, r3.x
dcl_literal l377, 0xFFC00000, 0xFFC00000, 0xFFC00000, 0xFFC00000
cmov_logical r0._y__, r0.z, l377, r0.y
dcl_literal l378, 0x3F800000, 0x00000000, 0x40000000, 0x00000000
ieq r0.x_z_, r0.x, l378
ior r0.x___, r0.z, r0.x
dcl_literal l379, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
cmov_logical r0.x___, r0.x, l379, r0.y
mov out0, r0
mend
__trunc_f32
mdef(457)_out(1)_in(1)
mov r0, in0
round_z r0.x___, r0.x
mov out0, r0
mend
__uabs_diff_u16
mdef(458)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
imax r0.___w, r0.w_neg(xyzw), r0.w
dcl_literal l1, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.x___, r0.w, l1
mov out0, r0
mend
__uabs_diff_u32
mdef(459)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
umin r0.___w, r0.y, r0.x
umax r1.x___, r0.y, r0.x
iadd r0.x___, r1.x, r0.w_neg(xyzw)
mov out0, r0
mend
__uabs_diff_u8
mdef(460)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
imax r0.___w, r0.w_neg(xyzw), r0.w
dcl_literal l0, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.x___, r0.w, l0
mov out0, r0
mend
__uabs_u16
mdef(461)_out(1)_in(1)
mov r0, in0
mov r0, r0
mov out0, r0
mend
__uabs_u32
mdef(462)_out(1)_in(1)
mov r0, in0
mov r0, r0
mov out0, r0
mend
__uabs_u8
mdef(463)_out(1)_in(1)
mov r0, in0
mov r0, r0
mov out0, r0
mend
__uadd_sat_i32
mdef(464)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y
ult r1.x___, r0.w, r0.x
dcl_literal l10, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r0.x___, r1.x, l10, r0.w
mov out0, r0
mend
__uadd_sat_u16
mdef(465)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y
dcl_literal l5, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
umin r0.x___, r0.w, l5
mov out0, r0
mend
__uadd_sat_u8
mdef(466)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r1.x___, r0.x, r0.y
dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
umin r0.x___, r1.x, l2
mov out0, r0
mend
__uall_u16
mdef(467)_out(1)_in(1)
mov r0, in0
dcl_literal l3, 0x00008000, 0x00008000, 0x00008000, 0x00008000
and r0.__z_, r0.x, l3
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l4, l5
mov out0, r0
mend
__uall_u32
mdef(468)_out(1)_in(1)
mov r0, in0
dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r0.x___, r0.x, l6
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l7, l8
mov out0, r0
mend
__uall_u8
mdef(469)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000080, 0x00000080, 0x00000080, 0x00000080
and r0.__z_, r0.x, l0
dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l1, l2
mov out0, r0
mend
__uany_i16
mdef(470)_out(1)_in(1)
mov r0, in0
dcl_literal l3, 0x00008000, 0x00008000, 0x00008000, 0x00008000
and r0.__z_, r0.x, l3
dcl_literal l4, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l5, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l4, l5
mov out0, r0
mend
__uany_i32
mdef(471)_out(1)_in(1)
mov r0, in0
dcl_literal l6, 0x80000000, 0x80000000, 0x80000000, 0x80000000
and r0.x___, r0.x, l6
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l8, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l7, l8
mov out0, r0
mend
__uany_u8
mdef(472)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x00000080, 0x00000080, 0x00000080, 0x00000080
and r0.__z_, r0.x, l0
dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001
dcl_literal l2, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.z, l1, l2
mov out0, r0
mend
__uclz_u16
mdef(473)_out(1)_in(1)
mov r0, in0
dcl_literal l10, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.x, l10
dcl_literal l11, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.___w, r0.z, l11
dcl_literal l12, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l12
dcl_literal l13, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l13
dcl_literal l14, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.___w, l14, r0.w_neg(xyzw)
dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l15
dcl_literal l16, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.___w, r0.w, l16
dcl_literal l17, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r0.___w, r0.w, l17
dcl_literal l18, 0x00000010, 0x00000010, 0x00000010, 0x00000010
cmov_logical r0.x___, r0.z, r0.w, l18
mov out0, r0
mend
__uclz_u32
mdef(474)_out(1)_in(1)
mov r0, in0
dcl_literal l19, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r0.__z_, r0.x, l19
dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.z, l20
dcl_literal l21, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.___w, r0.z, l21
dcl_literal l22, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l22
dcl_literal l23, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l23
dcl_literal l24, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.___w, l24, r0.w_neg(xyzw)
dcl_literal l25, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l25
dcl_literal l26, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.___w, r0.w, l26
dcl_literal l27, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r0.___w, r0.w, l27
dcl_literal l28, 0x00000010, 0x00000010, 0x00000010, 0x00000010
cmov_logical r0.__z_, r0.z, r0.w, l28
dcl_literal l29, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.___w, r0.x, l29
dcl_literal l30, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1.x___, r0.w, l30
dcl_literal l31, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.x___, r1.x, l31
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l32
dcl_literal l33, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1.x___, l33, r1.x_neg(xyzw)
dcl_literal l34, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l34
dcl_literal l35, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1.x___, r1.x, l35
dcl_literal l36, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r1.x___, r1.x, l36
dcl_literal l37, 0x00000010, 0x00000010, 0x00000010, 0x00000010
cmov_logical r0.___w, r0.w, r1.x, l37
dcl_literal l38, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ieq r1.x___, r0.z, l38
iadd r0.___w, r0.z, r0.w
cmov_logical r0.x___, r1.x, r0.w, r0.z
mov out0, r0
mend
__uclz_u8
mdef(475)_out(1)_in(1)
mov r0, in0
dcl_literal l0, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.x, l0
dcl_literal l1, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.___w, r0.z, l1
dcl_literal l2, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l2
dcl_literal l3, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l3
dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.___w, l4, r0.w_neg(xyzw)
dcl_literal l5, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l5
dcl_literal l6, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.___w, r0.w, l6
dcl_literal l7, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r0.___w, r0.w, l7
dcl_literal l8, 0x00000010, 0x00000010, 0x00000010, 0x00000010
cmov_logical r0.__z_, r0.z, r0.w, l8
dcl_literal l9, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8, 0xFFFFFFF8
iadd r0.x___, r0.z, l9
mov out0, r0
mend
__udiv_i16
mdef(476)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l21, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l21
dcl_literal l22, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l22
udiv r0.___w, r1.x, r0.w
dcl_literal l23, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.___w, r0.w, l23
dcl_literal l24, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r1.y, r0.w, l24
mov r0.x___, r0.z
mov out0, r0
mend
__udiv_i32
mdef(477)_out(1)_in(2)
mov r0, in0
mov r1, in1
udiv r0.x, r0.x, r1.x
mov out0, r0
mend
__udiv_i64
mdef(478)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0.__zw, r1.yyxy
ieq r1.xy__, r0.yxyy, r0.wzww
ult r1.__zw, r0.yyyx, r0.wwwz
and r1.___w, r1.x, r1.w
ior r1.___w, r1.z, r1.w
dcl_literal l1, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.___w, r1.w, l1, l2
and r1._y__, r1.y, r1.x
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, l3, r1.w
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r2.xy__, r0.wzww, l4
and r1.___w, r2.y, r2.x
dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.__z_, r1.w, l5, r0.z
dcl_literal l6, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r2._yz_, r0.wwyw, l6
dcl_literal l7, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.___w, r0.x, l7
dcl_literal l8, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.xy__, r0.wyww, l8
dcl_literal l9, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.__z_, r0.z, l9
ior r3.x___, r3.x, r3.z
dcl_literal l10, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.x___, r3.x, l10
dcl_literal l11, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r0.z, l11
dcl_literal l12, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000
ior r4.xy__, r2.yzyy, l12
dcl_literal l13, 0xBF800000, 0xBF800000, 0x00000000, 0x00000000
add r4.xy__, r4.xyxx, l13
dcl_literal l14, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
and r4.xy__, r4.xyxx, l14
dcl_literal l15, 0x3F800000, 0x3F800000, 0x00000000, 0x00000000
iadd r4.xy__, l15, r4.xyxx_neg(xyzw)
dcl_literal l16, 0x7F800000, 0x7F800000, 0x00000000, 0x00000000
and r4.xy__, r4.xyxx, l16
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.xy__, r4.xyxx, l17
dcl_literal l18, 0xFFFFFFFF, 0xFFFFFFFF, 0x00000000, 0x00000000
iadd r4.xy__, r4.xyxx, l18
dcl_literal l19, 0x00000000, 0x00000017, 0x00000017, 0x00000000
cmov_logical r2._yz_, r2.yyzy, r4.xxyx, l19
dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.x, l20
dcl_literal l21, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l21
dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l22
dcl_literal l23, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l23, r3.w_neg(xyzw)
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l24
dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l25
dcl_literal l26, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l26
dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.x___, r3.x, r3.w, l27
dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l28
dcl_literal l29, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l29
dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l30
dcl_literal l31, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l31, r3.w_neg(xyzw)
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l32
dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l33
dcl_literal l34, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l34
dcl_literal l35, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l35
dcl_literal l36, 0x00000017, 0x00000017, 0x00000000, 0x00000000
ieq r4.xy__, r2.yzyy, l36
iadd r3.x___, r2.y, r3.x
cmov_logical r2._y__, r4.x, r3.x, r2.y
dcl_literal l37, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r3.x, l37
iadd r3.x___, r3.x, r3.z
cmov_logical r2._y__, r3.w, r3.x, r2.y
dcl_literal l38, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r3.x___, r2.y, l38
dcl_literal l39, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.__z_, r2.y, l39
dcl_literal l40, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F
cmov_logical r3.x___, r3.x, r3.z, l40
ult r3.__z_, r0.x, r0.z
and r3.__z_, r1.x, r3.z
ior r1.__z_, r1.z, r3.z
dcl_literal l41, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l42, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.__z_, r1.z, l41, l42
ieq r3.__z_, r0.x, r0.z
and r1.x___, r1.x, r3.z
dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.x, l43, r1.z
ior r1.__z_, r2.w, r3.y
dcl_literal l44, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.__z_, r1.z, l44
dcl_literal l45, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r2.___w, r0.x, l45
dcl_literal l46, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3._y__, r1.z, l46
dcl_literal l47, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3._y__, r3.y, l47
dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l48
dcl_literal l49, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3._y__, l49, r3.y_neg(xyzw)
dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l50
dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3._y__, r3.y, l51
dcl_literal l52, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3._y__, r3.y, l52
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.__z_, r1.z, r3.y, l53
dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3._y__, r2.w, l54
dcl_literal l55, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3._y__, r3.y, l55
dcl_literal l56, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l56
dcl_literal l57, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3._y__, l57, r3.y_neg(xyzw)
dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3._y__, r3.y, l58
dcl_literal l59, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3._y__, r3.y, l59
dcl_literal l60, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3._y__, r3.y, l60
dcl_literal l61, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r2.___w, r2.w, r3.y, l61
iadd r1.__z_, r2.z, r1.z
cmov_logical r2.__z_, r4.y, r1.z, r2.z
dcl_literal l62, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3._y__, r1.z, l62
iadd r1.__z_, r1.z, r2.w
cmov_logical r1.__z_, r3.y, r1.z, r2.z
ilt r2.__z_, r1.z, r2.y
ieq r2.___w, r2.y, r1.z
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l63
and r1.x___, r2.w, r1.x
ior r1.x___, r2.z, r1.x
iadd r2.__z_, r2.y, r1.z_neg(xyzw)
dcl_literal l64, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r2.z, l64
ilt r2.__z_, r3.x, r1.x
iadd r2.___w, r1.x, r3.x_neg(xyzw)
and r2.__z_, r2.z, r2.w
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r2.___w, r1.x, l65
dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r2.w, l66, r2.z
dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l67
if_logicalnz r1.x
    dcl_literal l68, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.___w, r2.z, l68
    dcl_literal l69, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3._y__, r2.z, l69
    cmov_logical r3._y__, r2.w, r3.y, r2.z
    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.__z_, r2.z, l70
    dcl_literal l71, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l71, r3.y_neg(xyzw)
    ushr r3.___w, r0.z, r3.w
    ishl r3._y__, r0.z, r3.y
    ishl r3.__z_, r0.w, r3.z
    ior r3.__z_, r3.w, r3.z
    cmov_logical r3.__z_, r2.w, r0.z, r3.z
    dcl_literal l72, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.___w, r2.w, l72, r3.y
    cmov_logical r3._y__, r2.z, r3.z, r0.w
    cmov_logical r2.___w, r2.z, r2.w, r0.z
    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.__z_, r1.z, l73
    dcl_literal l74, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r1.z, l74
    cmov_logical r3.___w, r3.z, r3.w, r1.z
    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r1.z, l75
    dcl_literal l76, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l76, r3.w_neg(xyzw)
    ushr r4._y__, r0.x, r3.w
    ishl r4.__z_, r0.y, r4.x
    ior r4._y__, r4.y, r4.z
    cmov_logical r4._y__, r3.z, r0.x, r4.y
    cmov_logical r4._y__, r1.z, r4.y, r0.y
    ushr r3.___w, r2.w, r3.w
    ishl r4.x___, r3.y, r4.x
    ior r3.___w, r3.w, r4.x
    cmov_logical r3.__z_, r3.z, r2.w, r3.w
    cmov_logical r1.__z_, r1.z, r3.z, r3.y
    udiv r3.__z_, r4.y, r1.z
    umul r3.___w, r3.z, r1.z
    ilt r4.x___, r4.y, r3.w
    iadd r4.__z_, r3.w, r4.y_neg(xyzw)
    iadd r4.__z_, r4.z, r1.z
    dcl_literal l77, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.__z_, r4.z, l77
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r4.x, r4.z, r3.w
    udiv r1.__z_, r3.w, r1.z
    iadd r3.___w, r3.z, r1.z_neg(xyzw)
    iadd r1.__z_, r3.z, r1.z
    cmov_logical r1.__z_, r4.x, r3.w, r1.z
    dcl_literal l78, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r2.w, l78
    dcl_literal l79, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.w, l79
    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r1.z, l80
    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r1.z, l81
    umul r4.__z_, r3.w, r4.y
    umul r3.___w, r3.w, r4.x
    umul r4.___w, r3.z, r4.y
    umul r3.__z_, r3.z, r4.x
    dcl_literal l82, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.z, l82
    dcl_literal l83, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l83
    iadd r5.x___, r5.x, r5.y
    iadd r3.___w, r3.w, r5.x
    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.w, l84
    iadd r4.__z_, r4.z, r5.x
    dcl_literal l85, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.w, l85
    iadd r4.__z_, r4.z, r4.w
    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.___w, r3.w, l86
    dcl_literal l87, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r3.z, l87
    ior r3.__z_, r3.w, r3.z
    dcl_literal l88, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.y, l88
    dcl_literal l89, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.y, l89
    umul r4.___w, r4.w, r4.x
    umul r4._y__, r3.w, r4.y
    umul r3.___w, r3.w, r4.x
    dcl_literal l90, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r3.w, l90
    dcl_literal l91, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4._y__, r4.y, l91
    iadd r4.x___, r4.x, r4.y
    iadd r4.x___, r4.w, r4.x
    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.x___, r4.x, l92
    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.w, l93
    ior r3.___w, r4.x, r3.w
    iadd r4.x___, r3.w, r4.z
    ult r3.___w, r4.x, r3.w
    ult r4._y__, r0.y, r4.x
    ieq r4.__z_, r0.y, r4.x
    ult r4.___w, r0.x, r3.z
    and r4.___w, r4.z, r4.w
    ior r4._y__, r4.y, r4.w
    dcl_literal l94, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4._y__, r4.y, l94, l95
    ieq r4.___w, r0.x, r3.z
    and r4.__z_, r4.z, r4.w
    dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4._y__, r4.z, l96, r4.y
    dcl_literal l97, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4._y__, r4.y, l97
    ior r3.___w, r3.w, r4.y
    dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4._y__, r1.z, l98
    cmov_logical r1.__z_, r3.w, r4.y, r1.z
    iadd r2.___w, r3.z, r2.w_neg(xyzw)
    ult r4._y__, r3.z, r2.w
    iadd r4._y__, r4.x, r4.y
    iadd r3._y__, r4.y, r3.y_neg(xyzw)
    cmov_logical r3._y__, r3.w, r3.y, r4.x
    cmov_logical r2.___w, r3.w, r2.w, r3.z
    iadd r3.___w, r0.x, r2.w_neg(xyzw)
    ult r2.___w, r0.x, r3.w
    iadd r2.___w, r0.y, r2.w
    iadd r3.__z_, r2.w, r3.y_neg(xyzw)
else
    mov r3.__zw, r0.yyyx
    dcl_literal l99, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r1.__z_, l99
endif
ult r2.___w, r3.z, r0.w
ieq r3._y__, r3.z, r0.w
ult r4.x___, r3.w, r0.z
and r4.x___, r3.y, r4.x
ior r2.___w, r2.w, r4.x
dcl_literal l100, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l101, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.___w, r2.w, l100, l101
ieq r4.x___, r3.w, r0.z
and r3._y__, r3.y, r4.x
dcl_literal l102, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r3.y, l102, r2.w
dcl_literal l103, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3._y__, r3.z, l103
dcl_literal l104, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r4.x___, r3.z, l104
dcl_literal l105, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r4._y__, r3.w, l105
ior r3._y__, r3.y, r4.y
dcl_literal l106, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3._y__, r3.y, l106
dcl_literal l107, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r4._y__, r3.w, l107
dcl_literal l108, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.__z_, r4.x, l108
dcl_literal l109, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.__z_, r4.z, l109
dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l110
dcl_literal l111, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.__z_, l111, r4.z_neg(xyzw)
dcl_literal l112, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l112
dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.__z_, r4.z, l113
dcl_literal l114, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.__z_, r4.z, l114
dcl_literal l115, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.x___, r4.x, r4.z, l115
dcl_literal l116, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.__z_, r3.y, l116
dcl_literal l117, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.__z_, r4.z, l117
dcl_literal l118, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l118
dcl_literal l119, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.__z_, l119, r4.z_neg(xyzw)
dcl_literal l120, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l120
dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.__z_, r4.z, l121
dcl_literal l122, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r4.__z_, r4.z, l122
dcl_literal l123, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r4.z, l123
dcl_literal l124, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r4.__z_, r4.y, l124
dcl_literal l125, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r4.__z_, r4.z, l125
dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l126
dcl_literal l127, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r4.__z_, l127, r4.z_neg(xyzw)
dcl_literal l128, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r4.__z_, r4.z, l128
dcl_literal l129, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r4.__z_, r4.z, l129
dcl_literal l130, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r4.__z_, r4.z, l130
dcl_literal l131, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r4._y__, r4.y, r4.z, l131
dcl_literal l132, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r4.__z_, r4.x, l132
iadd r3._y__, r4.x, r3.y
cmov_logical r4.x___, r4.z, r3.y, r4.x
dcl_literal l133, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r4.__z_, r3.y, l133
iadd r3._y__, r3.y, r4.y
cmov_logical r3._y__, r4.z, r3.y, r4.x
ilt r4.x___, r3.y, r2.y
ieq r4._y__, r2.y, r3.y
dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.___w, r2.w, l134
and r2.___w, r4.y, r2.w
ior r2.___w, r4.x, r2.w
and r1.x___, r1.x, r2.w
iadd r2.___w, r2.y, r3.y_neg(xyzw)
dcl_literal l135, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r2.w, l135
ilt r2.___w, r3.x, r1.x
iadd r4.x___, r1.x, r3.x_neg(xyzw)
and r2.___w, r2.w, r4.x
dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r4.x___, r1.x, l136
dcl_literal l137, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r4.x, l137, r2.w
dcl_literal l138, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l138
if_logicalnz r1.x
    dcl_literal l139, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.x___, r2.w, l139
    dcl_literal l140, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4._y__, r2.w, l140
    cmov_logical r4._y__, r4.x, r4.y, r2.w
    dcl_literal l141, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.__z_, r2.w, l141
    dcl_literal l142, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.___w, l142, r4.y_neg(xyzw)
    ushr r4.___w, r0.z, r4.w
    ishl r4._y__, r0.z, r4.y
    ishl r4.__z_, r0.w, r4.z
    ior r4.__z_, r4.w, r4.z
    cmov_logical r4.__z_, r4.x, r0.z, r4.z
    dcl_literal l143, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.x___, r4.x, l143, r4.y
    cmov_logical r4.xy__, r2.w, r4.xzxx, r0.zwzz
    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.__z_, r3.y, l144
    dcl_literal l145, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.___w, r3.y, l145
    cmov_logical r4.___w, r4.z, r4.w, r3.y
    dcl_literal l146, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r3.y, l146
    dcl_literal l147, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.___w, l147, r4.w_neg(xyzw)
    ushr r5._y__, r3.w, r4.w
    ishl r5.__z_, r3.z, r5.x
    ior r5._y__, r5.y, r5.z
    cmov_logical r5._y__, r4.z, r3.w, r5.y
    cmov_logical r5._y__, r3.y, r5.y, r3.z
    ushr r4.___w, r4.x, r4.w
    ishl r5.x___, r4.y, r5.x
    ior r4.___w, r4.w, r5.x
    cmov_logical r4.__z_, r4.z, r4.x, r4.w
    cmov_logical r3._y__, r3.y, r4.z, r4.y
    udiv r4.__z_, r5.y, r3.y
    umul r4.___w, r4.z, r3.y
    ilt r5.x___, r5.y, r4.w
    iadd r5.__z_, r4.w, r5.y_neg(xyzw)
    iadd r5.__z_, r5.z, r3.y
    dcl_literal l148, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.__z_, r5.z, l148
    iadd r4.___w, r5.y, r4.w_neg(xyzw)
    cmov_logical r4.___w, r5.x, r5.z, r4.w
    udiv r3._y__, r4.w, r3.y
    iadd r4.___w, r4.z, r3.y_neg(xyzw)
    iadd r3._y__, r4.z, r3.y
    cmov_logical r3._y__, r5.x, r4.w, r3.y
    dcl_literal l149, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.x, l149
    dcl_literal l150, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.x, l150
    dcl_literal l151, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r3.y, l151
    dcl_literal l152, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r3.y, l152
    umul r5.__z_, r4.w, r5.y
    umul r4.___w, r4.w, r5.x
    umul r5.___w, r4.z, r5.y
    umul r4.__z_, r4.z, r5.x
    dcl_literal l153, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.x___, r4.z, l153
    dcl_literal l154, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6._y__, r5.w, l154
    iadd r6.x___, r6.x, r6.y
    iadd r4.___w, r4.w, r6.x
    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.x___, r4.w, l155
    iadd r5.__z_, r5.z, r6.x
    dcl_literal l156, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r5.w, l156
    iadd r5.__z_, r5.z, r5.w
    dcl_literal l157, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r4.___w, r4.w, l157
    dcl_literal l158, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.z, l158
    ior r4.__z_, r4.w, r4.z
    dcl_literal l159, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r4.y, l159
    dcl_literal l160, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r4.y, l160
    umul r5.___w, r5.w, r5.x
    umul r5._y__, r4.w, r5.y
    umul r4.___w, r4.w, r5.x
    dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r4.w, l161
    dcl_literal l162, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r5.y, l162
    iadd r5.x___, r5.x, r5.y
    iadd r5.x___, r5.w, r5.x
    dcl_literal l163, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5.x___, r5.x, l163
    dcl_literal l164, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r4.w, l164
    ior r4.___w, r5.x, r4.w
    iadd r5.x___, r4.w, r5.z
    ult r4.___w, r5.x, r4.w
    ult r5._y__, r3.z, r5.x
    ieq r5.__z_, r3.z, r5.x
    ult r5.___w, r3.w, r4.z
    and r5.___w, r5.z, r5.w
    ior r5._y__, r5.y, r5.w
    dcl_literal l165, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l166, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r5._y__, r5.y, l165, l166
    ieq r5.___w, r3.w, r4.z
    and r5.__z_, r5.z, r5.w
    dcl_literal l167, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r5._y__, r5.z, l167, r5.y
    dcl_literal l168, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5._y__, r5.y, l168
    ior r4.___w, r4.w, r5.y
    dcl_literal l169, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5._y__, r3.y, l169
    cmov_logical r3._y__, r4.w, r5.y, r3.y
    iadd r4.x___, r4.z, r4.x_neg(xyzw)
    ult r5._y__, r4.z, r4.x
    iadd r5._y__, r5.x, r5.y
    iadd r4._y__, r5.y, r4.y_neg(xyzw)
    cmov_logical r4._y__, r4.w, r4.y, r5.x
    cmov_logical r4.x___, r4.w, r4.x, r4.z
    iadd r4.x___, r3.w, r4.x_neg(xyzw)
    ult r4.__z_, r3.w, r4.x
    iadd r4.__z_, r3.z, r4.z
    iadd r3.__z_, r4.z, r4.y_neg(xyzw)
    mov r3.___w, r4.x
else
    dcl_literal l170, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r3._y__, l170
endif
ult r4.x___, r3.z, r0.w
ieq r4._y__, r3.z, r0.w
ult r4.__z_, r3.w, r0.z
and r4.__z_, r4.y, r4.z
ior r4.x___, r4.x, r4.z
dcl_literal l171, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l172, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r4.x___, r4.x, l171, l172
ieq r4.__z_, r3.w, r0.z
and r4._y__, r4.y, r4.z
dcl_literal l173, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.x___, r4.y, l173, r4.x
dcl_literal l174, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r4._y__, r3.z, l174
dcl_literal l175, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r4.__z_, r3.z, l175
dcl_literal l176, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r4.___w, r3.w, l176
ior r4._y__, r4.y, r4.w
dcl_literal l177, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r4._y__, r4.y, l177
dcl_literal l178, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r4.___w, r3.w, l178
dcl_literal l179, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.z, l179
dcl_literal l180, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l180
dcl_literal l181, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l181
dcl_literal l182, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l182, r5.x_neg(xyzw)
dcl_literal l183, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l183
dcl_literal l184, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l184
dcl_literal l185, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.x___, r5.x, l185
dcl_literal l186, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.__z_, r4.z, r5.x, l186
dcl_literal l187, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.y, l187
dcl_literal l188, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l188
dcl_literal l189, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l189
dcl_literal l190, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l190, r5.x_neg(xyzw)
dcl_literal l191, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l191
dcl_literal l192, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l192
dcl_literal l193, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.x___, r5.x, l193
dcl_literal l194, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4._y__, r4.y, r5.x, l194
dcl_literal l195, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.x___, r4.w, l195
dcl_literal l196, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.x___, r5.x, l196
dcl_literal l197, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l197
dcl_literal l198, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.x___, l198, r5.x_neg(xyzw)
dcl_literal l199, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.x___, r5.x, l199
dcl_literal l200, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.x___, r5.x, l200
dcl_literal l201, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r5.x___, r5.x, l201
dcl_literal l202, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r4.___w, r4.w, r5.x, l202
dcl_literal l203, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r5.x___, r4.z, l203
iadd r4._y__, r4.z, r4.y
cmov_logical r4.__z_, r5.x, r4.y, r4.z
dcl_literal l204, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r5.x___, r4.y, l204
iadd r4._y__, r4.y, r4.w
cmov_logical r4._y__, r5.x, r4.y, r4.z
ilt r4.__z_, r4.y, r2.y
ieq r4.___w, r2.y, r4.y
dcl_literal l205, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r4.x___, r4.x, l205
and r4.x___, r4.w, r4.x
ior r4.x___, r4.z, r4.x
and r1.x___, r1.x, r4.x
iadd r4.x___, r2.y, r4.y_neg(xyzw)
dcl_literal l206, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r4.x, l206
ilt r4.x___, r3.x, r1.x
iadd r4.__z_, r1.x, r3.x_neg(xyzw)
and r4.x___, r4.x, r4.z
dcl_literal l207, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r4.__z_, r1.x, l207
dcl_literal l208, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.x___, r4.z, l208, r4.x
dcl_literal l209, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l209
if_logicalnz r1.x
    dcl_literal l210, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r4.__z_, r4.x, l210
    dcl_literal l211, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.___w, r4.x, l211
    cmov_logical r4.___w, r4.z, r4.w, r4.x
    dcl_literal l212, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r4.x, l212
    dcl_literal l213, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5._y__, l213, r4.w_neg(xyzw)
    ushr r5._y__, r0.z, r5.y
    ishl r4.___w, r0.z, r4.w
    ishl r5.x___, r0.w, r5.x
    ior r5.x___, r5.y, r5.x
    cmov_logical r5.x___, r4.z, r0.z, r5.x
    dcl_literal l214, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.__z_, r4.z, l214, r4.w
    cmov_logical r4.___w, r4.x, r5.x, r0.w
    cmov_logical r4.__z_, r4.x, r4.z, r0.z
    dcl_literal l215, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r5.x___, r4.y, l215
    dcl_literal l216, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r5._y__, r4.y, l216
    cmov_logical r5._y__, r5.x, r5.y, r4.y
    dcl_literal l217, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.__z_, r4.y, l217
    dcl_literal l218, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5._y__, l218, r5.y_neg(xyzw)
    ushr r5.___w, r3.w, r5.y
    ishl r6.x___, r3.z, r5.z
    ior r5.___w, r5.w, r6.x
    cmov_logical r5.___w, r5.x, r3.w, r5.w
    cmov_logical r5.___w, r4.y, r5.w, r3.z
    ushr r5._y__, r4.z, r5.y
    ishl r5.__z_, r4.w, r5.z
    ior r5._y__, r5.y, r5.z
    cmov_logical r5.x___, r5.x, r4.z, r5.y
    cmov_logical r4._y__, r4.y, r5.x, r4.w
    udiv r5.x___, r5.w, r4.y
    umul r5._y__, r5.x, r4.y
    ilt r5.__z_, r5.w, r5.y
    iadd r6.x___, r5.y, r5.w_neg(xyzw)
    iadd r6.x___, r6.x, r4.y
    dcl_literal l219, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r6.x___, r6.x, l219
    iadd r5._y__, r5.w, r5.y_neg(xyzw)
    cmov_logical r5._y__, r5.z, r6.x, r5.y
    udiv r4._y__, r5.y, r4.y
    iadd r5._y__, r5.x, r4.y_neg(xyzw)
    iadd r4._y__, r5.x, r4.y
    cmov_logical r4._y__, r5.z, r5.y, r4.y
    dcl_literal l220, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r4.z, l220
    dcl_literal l221, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5._y__, r4.z, l221
    dcl_literal l222, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.__z_, r4.y, l222
    dcl_literal l223, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r4.y, l223
    umul r6.x___, r5.y, r5.w
    umul r5._y__, r5.y, r5.z
    umul r6._y__, r5.x, r5.w
    umul r5.x___, r5.x, r5.z
    dcl_literal l224, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.__z_, r5.x, l224
    dcl_literal l225, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.___w, r6.y, l225
    iadd r6.__z_, r6.z, r6.w
    iadd r5._y__, r5.y, r6.z
    dcl_literal l226, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6.__z_, r5.y, l226
    iadd r6.x___, r6.x, r6.z
    dcl_literal l227, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r6.y, l227
    iadd r6.x___, r6.x, r6.y
    dcl_literal l228, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5._y__, r5.y, l228
    dcl_literal l229, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l229
    ior r5.x___, r5.y, r5.x
    dcl_literal l230, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r4.w, l230
    dcl_literal l231, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r6._y__, r4.w, l231
    umul r6._y__, r6.y, r5.z
    umul r5._y_w, r5.y, r5.zzzw
    dcl_literal l232, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r5.y, l232
    dcl_literal l233, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.___w, r5.w, l233
    iadd r5.__z_, r5.z, r5.w
    iadd r5.__z_, r6.y, r5.z
    dcl_literal l234, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r5.__z_, r5.z, l234
    dcl_literal l235, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5._y__, r5.y, l235
    ior r5._y__, r5.z, r5.y
    iadd r5.__z_, r5.y, r6.x
    ult r5._y__, r5.z, r5.y
    ult r5.___w, r3.z, r5.z
    ieq r6.x___, r3.z, r5.z
    ult r6._y__, r3.w, r5.x
    and r6._y__, r6.x, r6.y
    ior r5.___w, r5.w, r6.y
    dcl_literal l236, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l237, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r5.___w, r5.w, l236, l237
    ieq r6._y__, r3.w, r5.x
    and r6.x___, r6.x, r6.y
    dcl_literal l238, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r5.___w, r6.x, l238, r5.w
    dcl_literal l239, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r5.___w, r5.w, l239
    ior r5._y__, r5.y, r5.w
    dcl_literal l240, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.___w, r4.y, l240
    cmov_logical r4._y__, r5.y, r5.w, r4.y
    iadd r4.__z_, r5.x, r4.z_neg(xyzw)
    ult r5.___w, r5.x, r4.z
    iadd r5.___w, r5.z, r5.w
    iadd r4.___w, r5.w, r4.w_neg(xyzw)
    cmov_logical r4.__zw, r5.y, r4.zzzw, r5.xxxz
    iadd r4.__z_, r3.w, r4.z_neg(xyzw)
    ult r5.x___, r3.w, r4.z
    iadd r5.x___, r3.z, r5.x
    iadd r3.__z_, r5.x, r4.w_neg(xyzw)
    mov r3.___w, r4.z
else
    dcl_literal l241, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r4._y__, l241
endif
ult r4.__z_, r3.z, r0.w
ieq r4.___w, r3.z, r0.w
ult r5.x___, r3.w, r0.z
and r5.x___, r4.w, r5.x
ior r4.__z_, r4.z, r5.x
dcl_literal l242, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l243, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r4.__z_, r4.z, l242, l243
ieq r5.x___, r3.w, r0.z
and r4.___w, r4.w, r5.x
dcl_literal l244, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r4.__z_, r4.w, l244, r4.z
dcl_literal l245, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r4.___w, r3.z, l245
dcl_literal l246, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r5.x___, r3.z, l246
dcl_literal l247, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r5._y__, r3.w, l247
ior r4.___w, r4.w, r5.y
dcl_literal l248, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r4.___w, r4.w, l248
dcl_literal l249, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r5._y__, r3.w, l249
dcl_literal l250, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r5.x, l250
dcl_literal l251, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l251
dcl_literal l252, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l252
dcl_literal l253, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l253, r5.z_neg(xyzw)
dcl_literal l254, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l254
dcl_literal l255, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l255
dcl_literal l256, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.__z_, r5.z, l256
dcl_literal l257, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r5.x___, r5.x, r5.z, l257
dcl_literal l258, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r4.w, l258
dcl_literal l259, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l259
dcl_literal l260, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l260
dcl_literal l261, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l261, r5.z_neg(xyzw)
dcl_literal l262, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l262
dcl_literal l263, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l263
dcl_literal l264, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r5.__z_, r5.z, l264
dcl_literal l265, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r4.___w, r4.w, r5.z, l265
dcl_literal l266, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r5.__z_, r5.y, l266
dcl_literal l267, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r5.__z_, r5.z, l267
dcl_literal l268, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l268
dcl_literal l269, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r5.__z_, l269, r5.z_neg(xyzw)
dcl_literal l270, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r5.__z_, r5.z, l270
dcl_literal l271, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r5.__z_, r5.z, l271
dcl_literal l272, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r5.__z_, r5.z, l272
dcl_literal l273, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r5._y__, r5.y, r5.z, l273
dcl_literal l274, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r5.__z_, r5.x, l274
iadd r4.___w, r5.x, r4.w
cmov_logical r5.x___, r5.z, r4.w, r5.x
dcl_literal l275, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r5.__z_, r4.w, l275
iadd r4.___w, r4.w, r5.y
cmov_logical r4.___w, r5.z, r4.w, r5.x
ilt r5.x___, r4.w, r2.y
ieq r5._y__, r2.y, r4.w
dcl_literal l276, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r4.__z_, r4.z, l276
and r4.__z_, r5.y, r4.z
ior r4.__z_, r5.x, r4.z
and r1.x___, r1.x, r4.z
iadd r2._y__, r2.y, r4.w_neg(xyzw)
dcl_literal l277, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r2.y, l277
ilt r2._y__, r3.x, r1.x
iadd r3.x___, r1.x, r3.x_neg(xyzw)
and r2._y__, r2.y, r3.x
dcl_literal l278, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r3.x___, r1.x, l278
dcl_literal l279, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r3.x, l279, r2.y
dcl_literal l280, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l280
if_logicalnz r1.x
    dcl_literal l281, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r1.x___, r2.y, l281
    dcl_literal l282, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.x___, r2.y, l282
    cmov_logical r3.x___, r1.x, r3.x, r2.y
    dcl_literal l283, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.__z_, r2.y, l283
    dcl_literal l284, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r5.x___, l284, r3.x_neg(xyzw)
    ushr r5.x___, r0.z, r5.x
    ishl r3.x___, r0.z, r3.x
    ishl r4.__z_, r0.w, r4.z
    ior r4.__z_, r5.x, r4.z
    cmov_logical r4.__z_, r1.x, r0.z, r4.z
    dcl_literal l285, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.x___, r1.x, l285, r3.x
    cmov_logical r0.___w, r2.y, r4.z, r0.w
    cmov_logical r1.x___, r2.y, r1.x, r0.z
    dcl_literal l286, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3.x___, r4.w, l286
    dcl_literal l287, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r4.__z_, r4.w, l287
    cmov_logical r4.__z_, r3.x, r4.z, r4.w
    dcl_literal l288, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r5.x___, r4.w, l288
    dcl_literal l289, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.__z_, l289, r4.z_neg(xyzw)
    ushr r5._y__, r3.w, r4.z
    ishl r5.__z_, r3.z, r5.x
    ior r5._y__, r5.y, r5.z
    cmov_logical r5._y__, r3.x, r3.w, r5.y
    cmov_logical r5._y__, r4.w, r5.y, r3.z
    ushr r4.__z_, r1.x, r4.z
    ishl r5.x___, r0.w, r5.x
    ior r4.__z_, r4.z, r5.x
    cmov_logical r3.x___, r3.x, r1.x, r4.z
    cmov_logical r3.x___, r4.w, r3.x, r0.w
    udiv r4.__z_, r5.y, r3.x
    umul r4.___w, r4.z, r3.x
    ilt r5.x___, r5.y, r4.w
    iadd r5.__z_, r4.w, r5.y_neg(xyzw)
    iadd r5.__z_, r5.z, r3.x
    dcl_literal l290, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r5.__z_, r5.z, l290
    iadd r4.___w, r5.y, r4.w_neg(xyzw)
    cmov_logical r4.___w, r5.x, r5.z, r4.w
    udiv r3.x___, r4.w, r3.x
    iadd r4.___w, r4.z, r3.x_neg(xyzw)
    iadd r3.x___, r4.z, r3.x
    cmov_logical r3.x___, r5.x, r4.w, r3.x
    dcl_literal l291, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r1.x, l291
    dcl_literal l292, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r1.x___, r1.x, l292
    dcl_literal l293, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.___w, r3.x, l293
    dcl_literal l294, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.x___, r3.x, l294
    umul r5._y__, r1.x, r5.x
    umul r1.x___, r1.x, r4.w
    umul r5.__z_, r4.z, r5.x
    umul r4.__z_, r4.z, r4.w
    dcl_literal l295, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r4.z, l295
    dcl_literal l296, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r6.x___, r5.z, l296
    iadd r5.___w, r5.w, r6.x
    iadd r1.x___, r1.x, r5.w
    dcl_literal l297, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.___w, r1.x, l297
    iadd r5._y__, r5.y, r5.w
    dcl_literal l298, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r5.__z_, r5.z, l298
    iadd r5._y__, r5.y, r5.z
    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r1.x___, r1.x, l299
    dcl_literal l300, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.z, l300
    ior r1.x___, r1.x, r4.z
    dcl_literal l301, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r0.w, l301
    dcl_literal l302, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r0.___w, r0.w, l302
    umul r0.___w, r0.w, r4.w
    umul r5.x___, r4.z, r5.x
    umul r4.__z_, r4.z, r4.w
    dcl_literal l303, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r4.z, l303
    dcl_literal l304, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r5.x, l304
    iadd r4.___w, r4.w, r5.x
    iadd r0.___w, r0.w, r4.w
    dcl_literal l305, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r0.___w, r0.w, l305
    dcl_literal l306, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.z, l306
    ior r0.___w, r0.w, r4.z
    iadd r4.__z_, r0.w, r5.y
    ult r0.___w, r4.z, r0.w
    ult r4.___w, r3.z, r4.z
    ieq r3.__z_, r3.z, r4.z
    ult r4.__z_, r3.w, r1.x
    and r4.__z_, r3.z, r4.z
    ior r4.__z_, r4.w, r4.z
    dcl_literal l307, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l308, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4.__z_, r4.z, l307, l308
    ieq r1.x___, r3.w, r1.x
    and r1.x___, r3.z, r1.x
    dcl_literal l309, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.x___, r1.x, l309, r4.z
    dcl_literal l310, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, r1.x, l310
    ior r0.___w, r0.w, r1.x
    dcl_literal l311, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r1.x___, r3.x, l311
    cmov_logical r0.___w, r0.w, r1.x, r3.x
else
    dcl_literal l312, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    mov r0.___w, l312
endif
dcl_literal l313, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.x___, r2.z, l313
dcl_literal l314, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.x___, r2.z, l314
cmov_logical r3.x___, r1.x, r3.x, r2.z
dcl_literal l315, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.__z_, l315, r3.x_neg(xyzw)
ushr r3.__z_, r1.z, r3.z
ishl r3.x___, r1.z, r3.x
cmov_logical r3.__z_, r1.x, r1.z, r3.z
dcl_literal l316, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.x, l316, r3.x
dcl_literal l317, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r3.x___, r2.z, r3.z, l317
cmov_logical r1.x___, r2.z, r1.x, r1.z
dcl_literal l318, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r2.w, l318
dcl_literal l319, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r2.__z_, r2.w, l319
cmov_logical r2.__z_, r1.z, r2.z, r2.w
dcl_literal l320, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.__z_, l320, r2.z_neg(xyzw)
ushr r3.__z_, r3.y, r3.z
ishl r2.__z_, r3.y, r2.z
cmov_logical r3.__z_, r1.z, r3.y, r3.z
dcl_literal l321, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.z, l321, r2.z
dcl_literal l322, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r2.w, r3.z, l322
cmov_logical r1.__z_, r2.w, r1.z, r3.y
iadd r1.__z_, r1.x, r1.z
ult r1.x___, r1.z, r1.x
dcl_literal l323, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.x___, r1.x, l323
iadd r1.x___, r3.x, r1.x
iadd r1.x___, r2.z, r1.x
dcl_literal l324, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r2.__z_, r4.x, l324
dcl_literal l325, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r2.___w, r4.x, l325
cmov_logical r2.___w, r2.z, r2.w, r4.x
dcl_literal l326, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.x___, l326, r2.w_neg(xyzw)
ushr r3.x___, r4.y, r3.x
ishl r2.___w, r4.y, r2.w
cmov_logical r3.x___, r2.z, r4.y, r3.x
dcl_literal l327, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r2.z, l327, r2.w
dcl_literal l328, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r4.x, r3.x, l328
cmov_logical r2.__z_, r4.x, r2.z, r4.y
iadd r2.__z_, r1.z, r2.z
ult r1.__z_, r2.z, r1.z
dcl_literal l329, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r1.z, l329
iadd r1.x___, r1.x, r1.z
iadd r1.x___, r2.w, r1.x
dcl_literal l330, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r2.y, l330
dcl_literal l331, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r2.___w, r2.y, l331
cmov_logical r2.___w, r1.z, r2.w, r2.y
dcl_literal l332, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r3.x___, l332, r2.w_neg(xyzw)
ushr r3.x___, r0.w, r3.x
ishl r2.___w, r0.w, r2.w
cmov_logical r3.x___, r1.z, r0.w, r3.x
dcl_literal l333, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.__z_, r1.z, l333, r2.w
dcl_literal l334, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.___w, r2.y, r3.x, l334
cmov_logical r0.___w, r2.y, r1.z, r0.w
iadd r0.___w, r2.z, r0.w
ult r1.__z_, r0.w, r2.z
dcl_literal l335, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r1.z, l335
iadd r1.x___, r1.x, r1.z
iadd r1.x___, r2.w, r1.x
dcl_literal l336, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r1._y__, r1.y, l336
dcl_literal l337, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.y, l337, r1.x
dcl_literal l338, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.___w, r1.y, l338, r0.w
dcl_literal l339, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ieq r0.__z_, r0.z, l339
and r0.__z_, r2.x, r0.z
cmov_logical r0._y__, r0.z, r0.y, r1.x
cmov_logical r0.x___, r0.z, r0.x, r0.w
dcl_literal l340, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r1.w, l340, r0.xyxx
mov out0, r0
mend
__udiv_i8
mdef(479)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l9, 0x000000FF, 0x000000FF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l9
dcl_literal l10, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l10
udiv r0.___w, r1.x, r0.w
dcl_literal l11, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.___w, r0.w, l11
dcl_literal l12, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r1.y, r0.w, l12
mov r0.x___, r0.z
mov out0, r0
mend
__uhadd_u16
mdef(480)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
iadd r0.___w, r0.x, r0.y
dcl_literal l3, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ushr r0.x___, r0.w, l3
mov out0, r0
mend
__uhadd_u32
mdef(481)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
and r0.___w, r0.y, r0.x
dcl_literal l6, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r0.___w, r0.w, l6
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ushr r1.xy__, r0.xyxx, l7
iadd r1.x___, r1.x, r1.y
iadd r0.x___, r1.x, r0.w
mov out0, r0
mend
__uhadd_u8
mdef(482)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
iadd r1.x___, r0.x, r0.y
dcl_literal l1, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ushr r0.x___, r1.x, l1
mov out0, r0
mend
__ultof_f32
mdef(483)_out(1)_in(1)
mov r0, in0
dcl_literal l1, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r0.__z_, r0.y, l1
dcl_literal l2, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r0.___w, r0.x, l2
ior r0.__z_, r0.z, r0.w
dcl_literal l3, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r0.__z_, r0.z, l3
dcl_literal l4, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r0.___w, r0.z, l4
dcl_literal l5, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r0.___w, r0.w, l5
dcl_literal l6, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l6
dcl_literal l7, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r0.___w, l7, r0.w_neg(xyzw)
dcl_literal l8, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r0.___w, r0.w, l8
dcl_literal l9, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r0.___w, r0.w, l9
dcl_literal l10, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r0.___w, r0.w, l10
dcl_literal l11, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r0.__z_, r0.z, r0.w, l11
dcl_literal l12, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r0.___w, r0.y, l12
dcl_literal l13, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1.x___, r0.w, l13
dcl_literal l14, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1.x___, r1.x, l14
dcl_literal l15, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l15
dcl_literal l16, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1.x___, l16, r1.x_neg(xyzw)
dcl_literal l17, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1.x___, r1.x, l17
dcl_literal l18, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1.x___, r1.x, l18
dcl_literal l19, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r1.x___, r1.x, l19
dcl_literal l20, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r0.___w, r0.w, r1.x, l20
iadd r0.__z_, r0.w, r0.z
dcl_literal l21, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r1.x___, r0.x, l21
dcl_literal l22, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r1._y__, r1.x, l22
dcl_literal l23, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r1._y__, r1.y, l23
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1._y__, r1.y, l24
dcl_literal l25, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r1._y__, l25, r1.y_neg(xyzw)
dcl_literal l26, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r1._y__, r1.y, l26
dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r1._y__, r1.y, l27
dcl_literal l28, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r1._y__, r1.y, l28
dcl_literal l29, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r1.x___, r1.x, r1.y, l29
iadd r1.x___, r0.z, r1.x
dcl_literal l30, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r1._y__, r0.w, l30
cmov_logical r0.___w, r1.y, r0.z, r0.w
dcl_literal l31, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r0.__z_, r0.z, l31
cmov_logical r0.__z_, r0.z, r1.x, r0.w
dcl_literal l32, 0x00000040, 0x00000040, 0x00000040, 0x00000040
imin r0.___w, r0.z, l32
dcl_literal l33, 0x00000000, 0x00000000, 0x00000000, 0x00000000
imax r0.___w, r0.w, l33
dcl_literal l34, 0x00000020, 0x00000020, 0x00000020, 0x00000020
imin r1.x___, r0.w, l34
ishl r1.x___, r0.y, r1.x
dcl_literal l35, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r1._y__, r0.w, l35
dcl_literal l36, 0x00000020, 0x00000020, 0x00000020, 0x00000020
ige r1.__z_, r0.w, l36
cmov_logical r1._y__, r1.z, r1.y, r0.w
dcl_literal l37, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r1.___w, l37, r1.y_neg(xyzw)
ishl r1._y__, r0.x, r1.y
ushr r1.___w, r0.x, r1.w
ior r1.x___, r1.x, r1.w
cmov_logical r1.x___, r1.z, r1.y, r1.x
dcl_literal l38, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.z, l38, r1.y
cmov_logical r0.xy__, r0.w, r1.yxyy, r0.xyxx
dcl_literal l39, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF, 0x7FFFFFFF
and r0.___w, r0.y, l39
dcl_literal l40, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0._y__, r0.y, l40
dcl_literal l41, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishl r1.x___, r0.w, l41
dcl_literal l42, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r0.___w, r0.w, l42
dcl_literal l43, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r1._y__, r0.x, l43
ior r1.x___, r1.x, r1.y
dcl_literal l44, 0x00000018, 0x00000018, 0x00000018, 0x00000018
ishl r1._y__, r0.x, l44
dcl_literal l45, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r0.x___, r0.x, l45
dcl_literal l46, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ult r1._y__, l46, r1.y
dcl_literal l47, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1._y__, r1.y, l47
ior r1.x___, r1.x, r1.y
dcl_literal l48, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ieq r1._y__, r1.x, l48
dcl_literal l49, 0x80000000, 0x80000000, 0x80000000, 0x80000000
ult r1.x___, l49, r1.x
dcl_literal l50, 0x000000BE, 0x000000BE, 0x000000BE, 0x000000BE
iadd r1.__z_, r0.z_neg(xyzw), l50
dcl_literal l51, 0x0000003F, 0x0000003F, 0x0000003F, 0x0000003F
iadd r0.__z_, l51, r0.z_neg(xyzw)
dcl_literal l52, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ishl r1.__z_, r1.z, l52
ior r0.___w, r0.w, r1.z
dcl_literal l53, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r1.__z_, r0.w, l53
iadd r1.__z_, r0.w, r1.z
cmov_logical r0.___w, r1.y, r1.z, r0.w
dcl_literal l54, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r1._y__, r0.w, l54
cmov_logical r0.___w, r1.x, r1.y, r0.w
and r0.x___, r0.y, r0.x
dcl_literal l55, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82, 0xFFFFFF82
ilt r0._y__, r0.z, l55
ior r0.x___, r0.x, r0.y
dcl_literal l56, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.x___, r0.x, l56, r0.w
mov out0, r0
mend
__umad24_u32
mdef(484)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
dcl_literal l2, 0x00FFFFFF, 0x00FFFFFF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l2
umul r1.x___, r1.x, r1.y
iadd r0.x___, r1.x, r0.z
mov out0, r0
mend
__umad_hi_u16
mdef(485)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
umul r1.x___, r0.x, r0.y
dcl_literal l8, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.x___, r1.x, l8
iadd r1.x___, r1.x, r0.z
dcl_literal l9, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.x___, r1.x, l9
mov out0, r0
mend
__umad_hi_u32
mdef(486)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
dcl_literal l20, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l20
dcl_literal l21, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.__zw, r0.xxxy, l21
umul r2.x___, r1.z, r1.w
umul r1.x_zw, r1.xxzx, r1.yyyw
dcl_literal l22, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.x___, r1.x, l22
dcl_literal l23, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r1._y__, r1.w, l23
iadd r1.x___, r1.x, r1.y
iadd r1.x___, r1.z, r1.x
dcl_literal l24, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.x___, r1.x, l24
iadd r1.x___, r2.x, r1.x
dcl_literal l25, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1._y__, r1.w, l25
iadd r1.x___, r1.x, r1.y
iadd r0.x___, r1.x, r0.z
mov out0, r0
mend
__umad_hi_u8
mdef(487)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
umul r1.x___, r0.x, r0.y
dcl_literal l3, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r1.x___, r1.x, l3
iadd r1.x___, r1.x, r0.z
dcl_literal l4, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.x___, r1.x, l4
mov out0, r0
mend
__umad_sat_u16
mdef(488)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
umul r1.x___, r0.x, r0.y
iadd r1.x___, r1.x, r0.y
dcl_literal l5, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
umin r0.___w, r1.x, l5
mov r0.x___, r0.w
mov out0, r0
mend
__umad_sat_u32
mdef(489)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
umul r1.x___, r0.x, r0.y
iadd r1._y__, r1.x, r0.y
ult r1.x___, r1.y, r1.x
dcl_literal l10, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r0.___w, r1.x, l10, r1.y
mov r0.x___, r0.w
mov out0, r0
mend
__umad_sat_u8
mdef(490)_out(1)_in(3)
mov r0, in0
mov r1, in1
mov r2, in2
mov r0._y__, r1.x
mov r0.__z_, r2.x
umul r1.x___, r0.x, r0.y
iadd r1.x___, r1.x, r0.y
dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
umin r0.___w, r1.x, l2
mov r0.x___, r0.w
mov out0, r0
mend
__umax_u16
mdef(491)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
umax r0.x___, r0.y, r0.x
mov out0, r0
mend
__umax_u32
mdef(492)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
umax r0.x___, r0.y, r0.x
mov out0, r0
mend
__umax_u8
mdef(493)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
umax r0.x___, r0.y, r0.x
mov out0, r0
mend
__umin_u16
mdef(494)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
umin r0.x___, r0.y, r0.x
mov out0, r0
mend
__umin_u32
mdef(495)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
umin r0.x___, r0.y, r0.x
mov out0, r0
mend
__umin_u8
mdef(496)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
umin r0.x___, r0.y, r0.x
mov out0, r0
mend
__umod_i16
mdef(497)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l21, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l21
dcl_literal l22, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l22
udiv r1.__z_, r1.x, r0.w
dcl_literal l23, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, r1.z, l23
umul r0.___w, r0.w, r1.y
iadd r0.___w, r1.x, r0.w_neg(xyzw)
dcl_literal l24, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.__z_, r0.w, l24
mov r0.x___, r0.z
mov out0, r0
mend
__umod_i32
mdef(498)_out(1)_in(2)
mov r0, in0
mov r1, in1
udiv r2.x, r0.x, r1.x
umul r2.x, r2.x, r1.x
iadd r0.x, r0.x, r2.x_neg(xyzw)
mov out0, r0
mend
__umod_i64
mdef(499)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0.__zw, r1.yyxy
ieq r1.xy__, r0.yxyy, r0.wzww
ult r1.__zw, r0.yyyx, r0.wwwz
and r1.___w, r1.x, r1.w
ior r1.___w, r1.z, r1.w
dcl_literal l1, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.___w, r1.w, l1, l2
and r1._y__, r1.y, r1.x
dcl_literal l3, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, l3, r1.w
dcl_literal l4, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ieq r2.xy__, r0.wzww, l4
and r1.___w, r2.y, r2.x
dcl_literal l5, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.__z_, r1.w, l5, r0.z
dcl_literal l6, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r2.xy__, r0.wyww, l6
dcl_literal l7, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.__z_, r0.x, l7
dcl_literal l8, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.xy__, r0.wyww, l8
dcl_literal l9, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r2.___w, r0.z, l9
ior r2.___w, r3.x, r2.w
dcl_literal l10, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r2.___w, r2.w, l10
dcl_literal l11, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.x___, r0.z, l11
dcl_literal l12, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000
ior r3.__zw, r2.xxxy, l12
dcl_literal l13, 0x00000000, 0x00000000, 0xBF800000, 0xBF800000
add r3.__zw, r3.zzzw, l13
dcl_literal l14, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
and r3.__zw, r3.zzzw, l14
dcl_literal l15, 0x00000000, 0x00000000, 0x3F800000, 0x3F800000
iadd r3.__zw, l15, r3.zzzw_neg(xyzw)
dcl_literal l16, 0x00000000, 0x00000000, 0x7F800000, 0x7F800000
and r3.__zw, r3.zzzw, l16
dcl_literal l17, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__zw, r3.zzzw, l17
dcl_literal l18, 0x00000000, 0x00000000, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.__zw, r3.zzzw, l18
dcl_literal l19, 0x00000017, 0x00000017, 0x00000000, 0x00000000
cmov_logical r2.xy__, r2.xyxx, r3.zwzz, l19
dcl_literal l20, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.__z_, r2.w, l20
dcl_literal l21, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.__z_, r3.z, l21
dcl_literal l22, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l22
dcl_literal l23, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.__z_, l23, r3.z_neg(xyzw)
dcl_literal l24, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l24
dcl_literal l25, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__z_, r3.z, l25
dcl_literal l26, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.__z_, r3.z, l26
dcl_literal l27, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r2.___w, r2.w, r3.z, l27
dcl_literal l28, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.__z_, r3.x, l28
dcl_literal l29, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.__z_, r3.z, l29
dcl_literal l30, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l30
dcl_literal l31, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.__z_, l31, r3.z_neg(xyzw)
dcl_literal l32, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.__z_, r3.z, l32
dcl_literal l33, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.__z_, r3.z, l33
dcl_literal l34, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.__z_, r3.z, l34
dcl_literal l35, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.x___, r3.x, r3.z, l35
dcl_literal l36, 0x00000000, 0x00000000, 0x00000017, 0x00000017
ieq r3.__zw, r2.xxxy, l36
iadd r2.___w, r2.x, r2.w
cmov_logical r2.x___, r3.z, r2.w, r2.x
dcl_literal l37, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.__z_, r2.w, l37
iadd r2.___w, r2.w, r3.x
cmov_logical r2.x___, r3.z, r2.w, r2.x
dcl_literal l38, 0x00000030, 0x00000030, 0x00000030, 0x00000030
ige r2.___w, r2.x, l38
dcl_literal l39, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
iadd r3.x___, r2.x, l39
dcl_literal l40, 0x0000000F, 0x0000000F, 0x0000000F, 0x0000000F
cmov_logical r2.___w, r2.w, r3.x, l40
ult r3.x___, r0.x, r0.z
and r3.x___, r1.x, r3.x
ior r1.__z_, r1.z, r3.x
dcl_literal l41, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l42, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r1.__z_, r1.z, l41, l42
ieq r3.x___, r0.x, r0.z
and r1.x___, r1.x, r3.x
dcl_literal l43, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1.x___, r1.x, l43, r1.z
ior r1.__z_, r2.z, r3.y
dcl_literal l44, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r1.__z_, r1.z, l44
dcl_literal l45, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r2.__z_, r0.x, l45
dcl_literal l46, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.x___, r1.z, l46
dcl_literal l47, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.x___, r3.x, l47
dcl_literal l48, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r3.x, l48
dcl_literal l49, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.x___, l49, r3.x_neg(xyzw)
dcl_literal l50, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r3.x, l50
dcl_literal l51, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.x___, r3.x, l51
dcl_literal l52, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.x___, r3.x, l52
dcl_literal l53, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r1.__z_, r1.z, r3.x, l53
dcl_literal l54, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.x___, r2.z, l54
dcl_literal l55, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.x___, r3.x, l55
dcl_literal l56, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r3.x, l56
dcl_literal l57, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.x___, l57, r3.x_neg(xyzw)
dcl_literal l58, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.x___, r3.x, l58
dcl_literal l59, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.x___, r3.x, l59
dcl_literal l60, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.x___, r3.x, l60
dcl_literal l61, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r2.__z_, r2.z, r3.x, l61
iadd r1.__z_, r2.y, r1.z
cmov_logical r2._y__, r3.w, r1.z, r2.y
dcl_literal l62, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.x___, r1.z, l62
iadd r1.__z_, r1.z, r2.z
cmov_logical r1.__z_, r3.x, r1.z, r2.y
ilt r2._y__, r1.z, r2.x
ieq r2.__z_, r2.x, r1.z
dcl_literal l63, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r1.x___, r1.x, l63
and r1.x___, r2.z, r1.x
ior r1.x___, r2.y, r1.x
iadd r2._y__, r2.x, r1.z_neg(xyzw)
dcl_literal l64, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r1.x___, r1.x, r2.y, l64
dcl_literal l65, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2._y__, r1.x, l65
if_logicalnz r2.y
    ilt r2.__z_, r2.w, r1.x
    iadd r3.x___, r1.x, r2.w_neg(xyzw)
    and r2.__z_, r2.z, r3.x
    dcl_literal l66, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r1.x___, r1.x, l66
    dcl_literal l67, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r1.x___, r1.x, l67, r2.z
    dcl_literal l68, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.__z_, r1.x, l68
    dcl_literal l69, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.x___, r1.x, l69
    cmov_logical r3.x___, r2.z, r3.x, r1.x
    dcl_literal l70, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3._y__, r1.x, l70
    dcl_literal l71, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.__z_, l71, r3.x_neg(xyzw)
    ushr r3.__z_, r0.z, r3.z
    ishl r3.x___, r0.z, r3.x
    ishl r3._y__, r0.w, r3.y
    ior r3._y__, r3.z, r3.y
    cmov_logical r3._y__, r2.z, r0.z, r3.y
    dcl_literal l72, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.__z_, r2.z, l72, r3.x
    cmov_logical r3.x___, r1.x, r3.y, r0.w
    cmov_logical r1.x___, r1.x, r2.z, r0.z
    dcl_literal l73, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.__z_, r1.z, l73
    dcl_literal l74, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3._y__, r1.z, l74
    cmov_logical r3._y__, r2.z, r3.y, r1.z
    dcl_literal l75, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.__z_, r1.z, l75
    dcl_literal l76, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3._y__, l76, r3.y_neg(xyzw)
    ushr r3.___w, r0.x, r3.y
    ishl r4.x___, r0.y, r3.z
    ior r3.___w, r3.w, r4.x
    cmov_logical r3.___w, r2.z, r0.x, r3.w
    cmov_logical r3.___w, r1.z, r3.w, r0.y
    ushr r3._y__, r1.x, r3.y
    ishl r3.__z_, r3.x, r3.z
    ior r3._y__, r3.y, r3.z
    cmov_logical r2.__z_, r2.z, r1.x, r3.y
    cmov_logical r1.__z_, r1.z, r2.z, r3.x
    udiv r2.__z_, r3.w, r1.z
    umul r3._y__, r2.z, r1.z
    ilt r3.__z_, r3.w, r3.y
    iadd r4.x___, r3.y, r3.w_neg(xyzw)
    iadd r4.x___, r4.x, r1.z
    dcl_literal l77, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.x___, r4.x, l77
    iadd r3._y__, r3.w, r3.y_neg(xyzw)
    cmov_logical r3._y__, r3.z, r4.x, r3.y
    udiv r1.__z_, r3.y, r1.z
    iadd r3._y__, r2.z, r1.z_neg(xyzw)
    iadd r1.__z_, r2.z, r1.z
    cmov_logical r1.__z_, r3.z, r3.y, r1.z
    dcl_literal l78, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r1.x, l78
    dcl_literal l79, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r1.x, l79
    dcl_literal l80, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.__z_, r1.z, l80
    dcl_literal l81, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r1.__z_, r1.z, l81
    umul r3.___w, r3.y, r1.z
    umul r3._y__, r3.y, r3.z
    umul r4.x___, r2.z, r1.z
    umul r2.__z_, r2.z, r3.z
    dcl_literal l82, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r2.z, l82
    dcl_literal l83, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.__z_, r4.x, l83
    iadd r4._y__, r4.y, r4.z
    iadd r3._y__, r3.y, r4.y
    dcl_literal l84, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4._y__, r3.y, l84
    iadd r3.___w, r3.w, r4.y
    dcl_literal l85, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r4.x, l85
    iadd r3.___w, r3.w, r4.x
    dcl_literal l86, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3._y__, r3.y, l86
    dcl_literal l87, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r2.z, l87
    ior r2.__z_, r3.y, r2.z
    dcl_literal l88, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.x, l88
    dcl_literal l89, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r3.x, l89
    umul r4.x___, r4.x, r3.z
    umul r1.__z_, r3.y, r1.z
    umul r3._y__, r3.y, r3.z
    dcl_literal l90, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r3.y, l90
    dcl_literal l91, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r1.__z_, r1.z, l91
    iadd r1.__z_, r3.z, r1.z
    iadd r1.__z_, r4.x, r1.z
    dcl_literal l92, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r1.__z_, r1.z, l92
    dcl_literal l93, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l93
    ior r1.__z_, r1.z, r3.y
    iadd r3._y__, r1.z, r3.w
    ult r1.__z_, r3.y, r1.z
    ult r3.__z_, r0.y, r3.y
    ieq r3.___w, r0.y, r3.y
    ult r4.x___, r0.x, r2.z
    and r4.x___, r3.w, r4.x
    ior r3.__z_, r3.z, r4.x
    dcl_literal l94, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l95, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r3.__z_, r3.z, l94, l95
    ieq r4.x___, r0.x, r2.z
    and r3.___w, r3.w, r4.x
    dcl_literal l96, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3.__z_, r3.w, l96, r3.z
    dcl_literal l97, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r3.__z_, r3.z, l97
    ior r1.__z_, r1.z, r3.z
    iadd r1.x___, r2.z, r1.x_neg(xyzw)
    ult r3.__z_, r2.z, r1.x
    iadd r3.__z_, r3.y, r3.z
    iadd r3.x___, r3.z, r3.x_neg(xyzw)
    cmov_logical r3.x___, r1.z, r3.x, r3.y
    cmov_logical r1.x___, r1.z, r1.x, r2.z
    iadd r1.__z_, r0.x, r1.x_neg(xyzw)
    ult r2.__z_, r0.x, r1.z
    iadd r2.__z_, r0.y, r2.z
    iadd r1.x___, r2.z, r3.x_neg(xyzw)
else
    mov r1.x_z_, r0.yyxy
endif
ult r2.__z_, r1.x, r0.w
ieq r3.x___, r1.x, r0.w
ult r3._y__, r1.z, r0.z
and r3._y__, r3.x, r3.y
ior r2.__z_, r2.z, r3.y
dcl_literal l98, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l99, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2.__z_, r2.z, l98, l99
ieq r3._y__, r1.z, r0.z
and r3.x___, r3.x, r3.y
dcl_literal l100, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2.__z_, r3.x, l100, r2.z
dcl_literal l101, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.x___, r1.x, l101
dcl_literal l102, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3._y__, r1.x, l102
dcl_literal l103, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.__z_, r1.z, l103
ior r3.x___, r3.x, r3.z
dcl_literal l104, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.x___, r3.x, l104
dcl_literal l105, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r1.z, l105
dcl_literal l106, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.y, l106
dcl_literal l107, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l107
dcl_literal l108, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l108
dcl_literal l109, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l109, r3.w_neg(xyzw)
dcl_literal l110, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l110
dcl_literal l111, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l111
dcl_literal l112, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l112
dcl_literal l113, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r3.w, l113
dcl_literal l114, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.x, l114
dcl_literal l115, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l115
dcl_literal l116, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l116
dcl_literal l117, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l117, r3.w_neg(xyzw)
dcl_literal l118, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l118
dcl_literal l119, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l119
dcl_literal l120, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l120
dcl_literal l121, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.x___, r3.x, r3.w, l121
dcl_literal l122, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l122
dcl_literal l123, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l123
dcl_literal l124, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l124
dcl_literal l125, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l125, r3.w_neg(xyzw)
dcl_literal l126, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l126
dcl_literal l127, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l127
dcl_literal l128, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l128
dcl_literal l129, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l129
dcl_literal l130, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r3.___w, r3.y, l130
iadd r3.x___, r3.y, r3.x
cmov_logical r3._y__, r3.w, r3.x, r3.y
dcl_literal l131, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r3.x, l131
iadd r3.x___, r3.x, r3.z
cmov_logical r3.x___, r3.w, r3.x, r3.y
ilt r3._y__, r3.x, r2.x
ieq r3.__z_, r2.x, r3.x
dcl_literal l132, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.z, l132
and r2.__z_, r3.z, r2.z
ior r2.__z_, r3.y, r2.z
and r2._y__, r2.y, r2.z
iadd r2.__z_, r2.x, r3.x_neg(xyzw)
dcl_literal l133, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2._y__, r2.y, r2.z, l133
dcl_literal l134, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.y, l134
if_logicalnz r2.z
    ilt r3._y__, r2.w, r2.y
    iadd r3.__z_, r2.y, r2.w_neg(xyzw)
    and r3._y__, r3.y, r3.z
    dcl_literal l135, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, r2.y, l135
    dcl_literal l136, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2._y__, r2.y, l136, r3.y
    dcl_literal l137, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3._y__, r2.y, l137
    dcl_literal l138, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.__z_, r2.y, l138
    cmov_logical r3.__z_, r3.y, r3.z, r2.y
    dcl_literal l139, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.___w, r2.y, l139
    dcl_literal l140, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.x___, l140, r3.z_neg(xyzw)
    ushr r4.x___, r0.z, r4.x
    ishl r3.__z_, r0.z, r3.z
    ishl r3.___w, r0.w, r3.w
    ior r3.___w, r4.x, r3.w
    cmov_logical r3.___w, r3.y, r0.z, r3.w
    dcl_literal l141, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3._y__, r3.y, l141, r3.z
    cmov_logical r3.__z_, r2.y, r3.w, r0.w
    cmov_logical r2._y__, r2.y, r3.y, r0.z
    dcl_literal l142, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3._y__, r3.x, l142
    dcl_literal l143, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r3.x, l143
    cmov_logical r3.___w, r3.y, r3.w, r3.x
    dcl_literal l144, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r3.x, l144
    dcl_literal l145, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l145, r3.w_neg(xyzw)
    ushr r4._y__, r1.z, r3.w
    ishl r4.__z_, r1.x, r4.x
    ior r4._y__, r4.y, r4.z
    cmov_logical r4._y__, r3.y, r1.z, r4.y
    cmov_logical r4._y__, r3.x, r4.y, r1.x
    ushr r3.___w, r2.y, r3.w
    ishl r4.x___, r3.z, r4.x
    ior r3.___w, r3.w, r4.x
    cmov_logical r3._y__, r3.y, r2.y, r3.w
    cmov_logical r3.x___, r3.x, r3.y, r3.z
    udiv r3._y__, r4.y, r3.x
    umul r3.___w, r3.y, r3.x
    ilt r4.x___, r4.y, r3.w
    iadd r4.__z_, r3.w, r4.y_neg(xyzw)
    iadd r4.__z_, r4.z, r3.x
    dcl_literal l146, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.__z_, r4.z, l146
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r4.x, r4.z, r3.w
    udiv r3.x___, r3.w, r3.x
    iadd r3.___w, r3.y, r3.x_neg(xyzw)
    iadd r3.x___, r3.y, r3.x
    cmov_logical r3.x___, r4.x, r3.w, r3.x
    dcl_literal l147, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r2.y, l147
    dcl_literal l148, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.y, l148
    dcl_literal l149, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.x, l149
    dcl_literal l150, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.x___, r3.x, l150
    umul r4._y__, r3.w, r3.x
    umul r3.___w, r3.w, r4.x
    umul r4.__z_, r3.y, r3.x
    umul r3._y__, r3.y, r4.x
    dcl_literal l151, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.y, l151
    dcl_literal l152, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r4.z, l152
    iadd r4.___w, r4.w, r5.x
    iadd r3.___w, r3.w, r4.w
    dcl_literal l153, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.w, l153
    iadd r4._y__, r4.y, r4.w
    dcl_literal l154, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r4.z, l154
    iadd r4._y__, r4.y, r4.z
    dcl_literal l155, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.___w, r3.w, l155
    dcl_literal l156, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l156
    ior r3._y__, r3.w, r3.y
    dcl_literal l157, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.z, l157
    dcl_literal l158, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r3.z, l158
    umul r4.__z_, r4.z, r4.x
    umul r3.x___, r3.w, r3.x
    umul r3.___w, r3.w, r4.x
    dcl_literal l159, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r3.w, l159
    dcl_literal l160, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r3.x, l160
    iadd r3.x___, r4.x, r3.x
    iadd r3.x___, r4.z, r3.x
    dcl_literal l161, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.x___, r3.x, l161
    dcl_literal l162, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.w, l162
    ior r3.x___, r3.x, r3.w
    iadd r3.___w, r3.x, r4.y
    ult r3.x___, r3.w, r3.x
    ult r4.x___, r1.x, r3.w
    ieq r4._y__, r1.x, r3.w
    ult r4.__z_, r1.z, r3.y
    and r4.__z_, r4.y, r4.z
    ior r4.x___, r4.x, r4.z
    dcl_literal l163, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l164, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4.x___, r4.x, l163, l164
    ieq r4.__z_, r1.z, r3.y
    and r4._y__, r4.y, r4.z
    dcl_literal l165, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.x___, r4.y, l165, r4.x
    dcl_literal l166, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.x___, r4.x, l166
    ior r3.x___, r3.x, r4.x
    iadd r2._y__, r3.y, r2.y_neg(xyzw)
    ult r4.x___, r3.y, r2.y
    iadd r4.x___, r3.w, r4.x
    iadd r3.__z_, r4.x, r3.z_neg(xyzw)
    cmov_logical r3.__z_, r3.x, r3.z, r3.w
    cmov_logical r2._y__, r3.x, r2.y, r3.y
    iadd r2._y__, r1.z, r2.y_neg(xyzw)
    ult r3.x___, r1.z, r2.y
    iadd r3.x___, r1.x, r3.x
    iadd r1.x___, r3.x, r3.z_neg(xyzw)
    mov r1.__z_, r2.y
endif
ult r2._y__, r1.x, r0.w
ieq r3.x___, r1.x, r0.w
ult r3._y__, r1.z, r0.z
and r3._y__, r3.x, r3.y
ior r2._y__, r2.y, r3.y
dcl_literal l167, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l168, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2._y__, r2.y, l167, l168
ieq r3._y__, r1.z, r0.z
and r3.x___, r3.x, r3.y
dcl_literal l169, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r3.x, l169, r2.y
dcl_literal l170, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.x___, r1.x, l170
dcl_literal l171, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3._y__, r1.x, l171
dcl_literal l172, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.__z_, r1.z, l172
ior r3.x___, r3.x, r3.z
dcl_literal l173, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.x___, r3.x, l173
dcl_literal l174, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r1.z, l174
dcl_literal l175, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.y, l175
dcl_literal l176, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l176
dcl_literal l177, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l177
dcl_literal l178, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l178, r3.w_neg(xyzw)
dcl_literal l179, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l179
dcl_literal l180, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l180
dcl_literal l181, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l181
dcl_literal l182, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r3.w, l182
dcl_literal l183, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.x, l183
dcl_literal l184, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l184
dcl_literal l185, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l185
dcl_literal l186, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l186, r3.w_neg(xyzw)
dcl_literal l187, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l187
dcl_literal l188, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l188
dcl_literal l189, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l189
dcl_literal l190, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.x___, r3.x, r3.w, l190
dcl_literal l191, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l191
dcl_literal l192, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l192
dcl_literal l193, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l193
dcl_literal l194, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l194, r3.w_neg(xyzw)
dcl_literal l195, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l195
dcl_literal l196, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l196
dcl_literal l197, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l197
dcl_literal l198, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l198
dcl_literal l199, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r3.___w, r3.y, l199
iadd r3.x___, r3.y, r3.x
cmov_logical r3._y__, r3.w, r3.x, r3.y
dcl_literal l200, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r3.x, l200
iadd r3.x___, r3.x, r3.z
cmov_logical r3.x___, r3.w, r3.x, r3.y
ilt r3._y__, r3.x, r2.x
ieq r3.__z_, r2.x, r3.x
dcl_literal l201, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2._y__, r2.y, l201
and r2._y__, r3.z, r2.y
ior r2._y__, r3.y, r2.y
and r2._y__, r2.z, r2.y
iadd r2.__z_, r2.x, r3.x_neg(xyzw)
dcl_literal l202, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2._y__, r2.y, r2.z, l202
dcl_literal l203, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2.__z_, r2.y, l203
if_logicalnz r2.z
    ilt r3._y__, r2.w, r2.y
    iadd r3.__z_, r2.y, r2.w_neg(xyzw)
    and r3._y__, r3.y, r3.z
    dcl_literal l204, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2._y__, r2.y, l204
    dcl_literal l205, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2._y__, r2.y, l205, r3.y
    dcl_literal l206, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3._y__, r2.y, l206
    dcl_literal l207, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.__z_, r2.y, l207
    cmov_logical r3.__z_, r3.y, r3.z, r2.y
    dcl_literal l208, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r3.___w, r2.y, l208
    dcl_literal l209, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r4.x___, l209, r3.z_neg(xyzw)
    ushr r4.x___, r0.z, r4.x
    ishl r3.__z_, r0.z, r3.z
    ishl r3.___w, r0.w, r3.w
    ior r3.___w, r4.x, r3.w
    cmov_logical r3.___w, r3.y, r0.z, r3.w
    dcl_literal l210, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r3._y__, r3.y, l210, r3.z
    cmov_logical r3.__z_, r2.y, r3.w, r0.w
    cmov_logical r2._y__, r2.y, r3.y, r0.z
    dcl_literal l211, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r3._y__, r3.x, l211
    dcl_literal l212, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r3.___w, r3.x, l212
    cmov_logical r3.___w, r3.y, r3.w, r3.x
    dcl_literal l213, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r4.x___, r3.x, l213
    dcl_literal l214, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3.___w, l214, r3.w_neg(xyzw)
    ushr r4._y__, r1.z, r3.w
    ishl r4.__z_, r1.x, r4.x
    ior r4._y__, r4.y, r4.z
    cmov_logical r4._y__, r3.y, r1.z, r4.y
    cmov_logical r4._y__, r3.x, r4.y, r1.x
    ushr r3.___w, r2.y, r3.w
    ishl r4.x___, r3.z, r4.x
    ior r3.___w, r3.w, r4.x
    cmov_logical r3._y__, r3.y, r2.y, r3.w
    cmov_logical r3.x___, r3.x, r3.y, r3.z
    udiv r3._y__, r4.y, r3.x
    umul r3.___w, r3.y, r3.x
    ilt r4.x___, r4.y, r3.w
    iadd r4.__z_, r3.w, r4.y_neg(xyzw)
    iadd r4.__z_, r4.z, r3.x
    dcl_literal l215, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r4.__z_, r4.z, l215
    iadd r3.___w, r4.y, r3.w_neg(xyzw)
    cmov_logical r3.___w, r4.x, r4.z, r3.w
    udiv r3.x___, r3.w, r3.x
    iadd r3.___w, r3.y, r3.x_neg(xyzw)
    iadd r3.x___, r3.y, r3.x
    cmov_logical r3.x___, r4.x, r3.w, r3.x
    dcl_literal l216, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r2.y, l216
    dcl_literal l217, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.___w, r2.y, l217
    dcl_literal l218, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r4.x___, r3.x, l218
    dcl_literal l219, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.x___, r3.x, l219
    umul r4._y__, r3.w, r3.x
    umul r3.___w, r3.w, r4.x
    umul r4.__z_, r3.y, r3.x
    umul r3._y__, r3.y, r4.x
    dcl_literal l220, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.y, l220
    dcl_literal l221, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r5.x___, r4.z, l221
    iadd r4.___w, r4.w, r5.x
    iadd r3.___w, r3.w, r4.w
    dcl_literal l222, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.___w, r3.w, l222
    iadd r4._y__, r4.y, r4.w
    dcl_literal l223, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r4.z, l223
    iadd r4._y__, r4.y, r4.z
    dcl_literal l224, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.___w, r3.w, l224
    dcl_literal l225, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3._y__, r3.y, l225
    ior r3._y__, r3.w, r3.y
    dcl_literal l226, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.z, l226
    dcl_literal l227, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.__z_, r3.z, l227
    umul r4.__z_, r4.z, r4.x
    umul r3.x___, r3.w, r3.x
    umul r3.___w, r3.w, r4.x
    dcl_literal l228, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r4.x___, r3.w, l228
    dcl_literal l229, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.x___, r3.x, l229
    iadd r3.x___, r4.x, r3.x
    iadd r3.x___, r4.z, r3.x
    dcl_literal l230, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r3.x___, r3.x, l230
    dcl_literal l231, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.w, l231
    ior r3.x___, r3.x, r3.w
    iadd r3.___w, r3.x, r4.y
    ult r3.x___, r3.w, r3.x
    ult r4.x___, r1.x, r3.w
    ieq r4._y__, r1.x, r3.w
    ult r4.__z_, r1.z, r3.y
    and r4.__z_, r4.y, r4.z
    ior r4.x___, r4.x, r4.z
    dcl_literal l232, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l233, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r4.x___, r4.x, l232, l233
    ieq r4.__z_, r1.z, r3.y
    and r4._y__, r4.y, r4.z
    dcl_literal l234, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r4.x___, r4.y, l234, r4.x
    dcl_literal l235, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r4.x___, r4.x, l235
    ior r3.x___, r3.x, r4.x
    iadd r2._y__, r3.y, r2.y_neg(xyzw)
    ult r4.x___, r3.y, r2.y
    iadd r4.x___, r3.w, r4.x
    iadd r3.__z_, r4.x, r3.z_neg(xyzw)
    cmov_logical r3.__z_, r3.x, r3.z, r3.w
    cmov_logical r2._y__, r3.x, r2.y, r3.y
    iadd r2._y__, r1.z, r2.y_neg(xyzw)
    ult r3.x___, r1.z, r2.y
    iadd r3.x___, r1.x, r3.x
    iadd r1.x___, r3.x, r3.z_neg(xyzw)
    mov r1.__z_, r2.y
endif
ult r2._y__, r1.x, r0.w
ieq r3.x___, r1.x, r0.w
ult r3._y__, r1.z, r0.z
and r3._y__, r3.x, r3.y
ior r2._y__, r2.y, r3.y
dcl_literal l236, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
dcl_literal l237, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r2._y__, r2.y, l236, l237
ieq r3._y__, r1.z, r0.z
and r3.x___, r3.x, r3.y
dcl_literal l238, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r2._y__, r3.x, l238, r2.y
dcl_literal l239, 0x0000000E, 0x0000000E, 0x0000000E, 0x0000000E
ishl r3.x___, r1.x, l239
dcl_literal l240, 0x00000009, 0x00000009, 0x00000009, 0x00000009
ushr r3._y__, r1.x, l240
dcl_literal l241, 0x00000012, 0x00000012, 0x00000012, 0x00000012
ushr r3.__z_, r1.z, l241
ior r3.x___, r3.x, r3.z
dcl_literal l242, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF, 0x007FFFFF
and r3.x___, r3.x, l242
dcl_literal l243, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF, 0x0003FFFF
and r3.__z_, r1.z, l243
dcl_literal l244, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.y, l244
dcl_literal l245, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l245
dcl_literal l246, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l246
dcl_literal l247, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l247, r3.w_neg(xyzw)
dcl_literal l248, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l248
dcl_literal l249, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l249
dcl_literal l250, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l250
dcl_literal l251, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3._y__, r3.y, r3.w, l251
dcl_literal l252, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.x, l252
dcl_literal l253, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l253
dcl_literal l254, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l254
dcl_literal l255, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l255, r3.w_neg(xyzw)
dcl_literal l256, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l256
dcl_literal l257, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l257
dcl_literal l258, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
iadd r3.___w, r3.w, l258
dcl_literal l259, 0x00000017, 0x00000017, 0x00000017, 0x00000017
cmov_logical r3.x___, r3.x, r3.w, l259
dcl_literal l260, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
ior r3.___w, r3.z, l260
dcl_literal l261, 0xBF800000, 0xBF800000, 0xBF800000, 0xBF800000
add r3.___w, r3.w, l261
dcl_literal l262, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l262
dcl_literal l263, 0x3F800000, 0x3F800000, 0x3F800000, 0x3F800000
iadd r3.___w, l263, r3.w_neg(xyzw)
dcl_literal l264, 0x7F800000, 0x7F800000, 0x7F800000, 0x7F800000
and r3.___w, r3.w, l264
dcl_literal l265, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ushr r3.___w, r3.w, l265
dcl_literal l266, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA, 0xFFFFFFFA
iadd r3.___w, r3.w, l266
dcl_literal l267, 0x00000012, 0x00000012, 0x00000012, 0x00000012
cmov_logical r3.__z_, r3.z, r3.w, l267
dcl_literal l268, 0x00000017, 0x00000017, 0x00000017, 0x00000017
ieq r3.___w, r3.y, l268
iadd r3.x___, r3.y, r3.x
cmov_logical r3._y__, r3.w, r3.x, r3.y
dcl_literal l269, 0x0000002E, 0x0000002E, 0x0000002E, 0x0000002E
ieq r3.___w, r3.x, l269
iadd r3.x___, r3.x, r3.z
cmov_logical r3.x___, r3.w, r3.x, r3.y
ilt r3._y__, r3.x, r2.x
ieq r3.__z_, r2.x, r3.x
dcl_literal l270, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2._y__, r2.y, l270
and r2._y__, r3.z, r2.y
ior r2._y__, r3.y, r2.y
and r2._y__, r2.z, r2.y
iadd r2.x___, r2.x, r3.x_neg(xyzw)
dcl_literal l271, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
cmov_logical r2.x___, r2.y, r2.x, l271
dcl_literal l272, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ige r2._y__, r2.x, l272
if_logicalnz r2.y
    ilt r2._y__, r2.w, r2.x
    iadd r2.__z_, r2.x, r2.w_neg(xyzw)
    and r2._y__, r2.y, r2.z
    dcl_literal l273, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.x___, r2.x, l273
    dcl_literal l274, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.x___, r2.x, l274, r2.y
    dcl_literal l275, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2._y__, r2.x, l275
    dcl_literal l276, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r2.__z_, r2.x, l276
    cmov_logical r2.__z_, r2.y, r2.z, r2.x
    dcl_literal l277, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r2.___w, r2.x, l277
    dcl_literal l278, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r3._y__, l278, r2.z_neg(xyzw)
    ushr r3._y__, r0.z, r3.y
    ishl r2.__z_, r0.z, r2.z
    ishl r2.___w, r0.w, r2.w
    ior r2.___w, r3.y, r2.w
    cmov_logical r2.___w, r2.y, r0.z, r2.w
    dcl_literal l279, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2._y__, r2.y, l279, r2.z
    cmov_logical r0.__zw, r2.x, r2.yyyw, r0.zzzw
    dcl_literal l280, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    ige r2.x___, r3.x, l280
    dcl_literal l281, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0, 0xFFFFFFE0
    iadd r2._y__, r3.x, l281
    cmov_logical r2._y__, r2.x, r2.y, r3.x
    dcl_literal l282, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    imin r2.__z_, r3.x, l282
    dcl_literal l283, 0x00000020, 0x00000020, 0x00000020, 0x00000020
    iadd r2._y__, l283, r2.y_neg(xyzw)
    ushr r2.___w, r1.z, r2.y
    ishl r3._y__, r1.x, r2.z
    ior r2.___w, r2.w, r3.y
    cmov_logical r2.___w, r2.x, r1.z, r2.w
    cmov_logical r2.___w, r3.x, r2.w, r1.x
    ushr r2._y__, r0.z, r2.y
    ishl r2.__z_, r0.w, r2.z
    ior r2._y__, r2.y, r2.z
    cmov_logical r2.x___, r2.x, r0.z, r2.y
    cmov_logical r2.x___, r3.x, r2.x, r0.w
    udiv r2._y__, r2.w, r2.x
    umul r2.__z_, r2.y, r2.x
    ilt r3.x___, r2.w, r2.z
    iadd r3._y__, r2.z, r2.w_neg(xyzw)
    iadd r3._y__, r3.y, r2.x
    dcl_literal l284, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    iadd r3._y__, r3.y, l284
    iadd r2.__z_, r2.w, r2.z_neg(xyzw)
    cmov_logical r2.__z_, r3.x, r3.y, r2.z
    udiv r2.x___, r2.z, r2.x
    iadd r2.__z_, r2.y, r2.x_neg(xyzw)
    iadd r2.x___, r2.y, r2.x
    cmov_logical r2.x___, r3.x, r2.z, r2.x
    dcl_literal l285, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2._y__, r0.z, l285
    dcl_literal l286, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2.__z_, r0.z, l286
    dcl_literal l287, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.___w, r2.x, l287
    dcl_literal l288, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2.x___, r2.x, l288
    umul r3.x___, r2.z, r2.x
    umul r2.__z_, r2.z, r2.w
    umul r3._y__, r2.y, r2.x
    umul r2._y__, r2.y, r2.w
    dcl_literal l289, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r2.y, l289
    dcl_literal l290, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r3.___w, r3.y, l290
    iadd r3.__z_, r3.z, r3.w
    iadd r2.__z_, r2.z, r3.z
    dcl_literal l291, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3.__z_, r2.z, l291
    iadd r3.x___, r3.x, r3.z
    dcl_literal l292, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r3.y, l292
    iadd r3.x___, r3.x, r3.y
    dcl_literal l293, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r2.__z_, r2.z, l293
    dcl_literal l294, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2._y__, r2.y, l294
    ior r2._y__, r2.z, r2.y
    dcl_literal l295, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r0.w, l295
    dcl_literal l296, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r3._y__, r0.w, l296
    umul r3._y__, r3.y, r2.w
    umul r2.x_z_, r2.z, r2.xxwx
    dcl_literal l297, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ushr r2.___w, r2.z, l297
    dcl_literal l298, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.x___, r2.x, l298
    iadd r2.x___, r2.w, r2.x
    iadd r2.x___, r3.y, r2.x
    dcl_literal l299, 0x00000010, 0x00000010, 0x00000010, 0x00000010
    ishl r2.x___, r2.x, l299
    dcl_literal l300, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
    and r2.__z_, r2.z, l300
    ior r2.x___, r2.x, r2.z
    iadd r2.__z_, r2.x, r3.x
    ult r2.x___, r2.z, r2.x
    ult r2.___w, r1.x, r2.z
    ieq r3.x___, r1.x, r2.z
    ult r3._y__, r1.z, r2.y
    and r3._y__, r3.x, r3.y
    ior r2.___w, r2.w, r3.y
    dcl_literal l301, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF, 0xFFFFFFFF
    dcl_literal l302, 0x00000001, 0x00000001, 0x00000001, 0x00000001
    cmov_logical r2.___w, r2.w, l301, l302
    ieq r3._y__, r1.z, r2.y
    and r3.x___, r3.x, r3.y
    dcl_literal l303, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    cmov_logical r2.___w, r3.x, l303, r2.w
    dcl_literal l304, 0x00000000, 0x00000000, 0x00000000, 0x00000000
    ilt r2.___w, r2.w, l304
    ior r2.x___, r2.x, r2.w
    iadd r0.__z_, r2.y, r0.z_neg(xyzw)
    ult r2.___w, r2.y, r0.z
    iadd r2.___w, r2.z, r2.w
    iadd r0.___w, r2.w, r0.w_neg(xyzw)
    cmov_logical r0.__zw, r2.x, r0.zzzw, r2.yyyz
    iadd r0.__z_, r1.z, r0.z_neg(xyzw)
    ult r2.x___, r1.z, r0.z
    iadd r2.x___, r1.x, r2.x
    iadd r1.x___, r2.x, r0.w_neg(xyzw)
    mov r1.__z_, r0.z
endif
dcl_literal l305, 0x00000000, 0x00000000, 0x00000000, 0x00000000
ilt r0.__z_, r1.y, l305
cmov_logical r0.xy__, r0.z, r0.xyxx, r1.zxzz
dcl_literal l306, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r1.y, r0.xyxx, l306
dcl_literal l307, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.xy__, r1.w, l307, r0.xyxx
mov out0, r0
mend
__umod_i8
mdef(500)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l9, 0x000000FF, 0x000000FF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l9
dcl_literal l10, 0x00000001, 0x00000001, 0x00000001, 0x00000001
cmov_logical r0.___w, r1.y, r1.y, l10
udiv r1.__z_, r1.x, r0.w
dcl_literal l11, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r1._y__, r1.y, r1.z, l11
umul r0.___w, r0.w, r1.y
iadd r0.___w, r1.x, r0.w_neg(xyzw)
dcl_literal l12, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.__z_, r0.w, l12
mov r0.x___, r0.z
mov out0, r0
mend
__umul24_u32
mdef(501)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
dcl_literal l2, 0x00FFFFFF, 0x00FFFFFF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l2
umul r1.x___, r1.x, r1.y
mov out0, r0
mend
__umul_hi_u16
mdef(502)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y_, r1.x
umul r0.___w, r0.x, r0.y
dcl_literal l3, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r0.x___, r0.w, l3
mov out0, r0
mend
__umul_hi_u32
mdef(503)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y_, r1.x
dcl_literal l14, 0x0000FFFF, 0x0000FFFF, 0x00000000, 0x00000000
and r1.xy__, r0.xyxx, l14
dcl_literal l15, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.__zw, r0.xxxy, l15
umul r0.___w, r1.z, r1.w
umul r1.x_zw, r1.xxzx, r1.yyyw
dcl_literal l16, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.x___, r1.x, l16
dcl_literal l17, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r1._y__, r1.w, l17
iadd r1.x___, r1.x, r1.y
iadd r1.x___, r1.z, r1.x
dcl_literal l18, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.x___, r1.x, l18
iadd r0.___w, r0.w, r1.x
dcl_literal l19, 0x00000010, 0x00000010, 0x00000010, 0x00000010
ushr r1.x___, r1.w, l19
iadd r0.x___, r0.w, r1.x
mov out0, r0
mend
__umul_hi_u8
mdef(504)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y_, r1.x
umul r0.___w, r0.x, r0.y
dcl_literal l1, 0x00000008, 0x00000008, 0x00000008, 0x00000008
ushr r0.x___, r0.w, l1
mov out0, r0
mend
__urhadd_u16
mdef(505)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
iadd r0.___w, r0.x, r0.y
dcl_literal l6, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r0.___w, r0.w, l6
dcl_literal l7, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ushr r0.x___, r0.w, l7
mov out0, r0
mend
__urhadd_u32
mdef(506)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
ior r0.___w, r0.y, r0.x
dcl_literal l10, 0x00000001, 0x00000001, 0x00000001, 0x00000001
and r0.___w, r0.w, l10
dcl_literal l11, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ushr r1.xy__, r0.xyxx, l11
iadd r1.x___, r1.x, r1.y
iadd r0.x___, r1.x, r0.w
mov out0, r0
mend
__urhadd_u8
mdef(507)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
iadd r1.x___, r0.x, r0.y
dcl_literal l2, 0x00000001, 0x00000001, 0x00000001, 0x00000001
iadd r0.___w, r1.x, l2
dcl_literal l3, 0x00000001, 0x00000001, 0x00000001, 0x00000001
ushr r0.x___, r0.w, l3
mov out0, r0
mend
__urotate_u16
mdef(508)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
dcl_literal l13, 0x0000000F, 0x0000FFFF, 0x00000000, 0x00000000
and r1.xy__, r0.yxyy, l13
ishl r0.___w, r1.y, r1.x
dcl_literal l14, 0x00000010, 0x00000010, 0x00000010, 0x00000010
iadd r1.x___, l14, r1.x_neg(xyzw)
ushr r1.x___, r1.y, r1.x
ior r0.___w, r0.w, r1.x
dcl_literal l15, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
and r0.x___, r0.w, l15
mov out0, r0
mend
__urotate_u32
mdef(509)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
dcl_literal l16, 0x0000001F, 0x0000001F, 0x0000001F, 0x0000001F
and r0.___w, r0.y, l16
ishl r1.x___, r0.x, r0.w
dcl_literal l17, 0x00000020, 0x00000020, 0x00000020, 0x00000020
iadd r0.___w, l17, r0.w_neg(xyzw)
ushr r0.___w, r0.x, r0.w
ior r0.x___, r1.x, r0.w
mov out0, r0
mend
__urotate_u8
mdef(510)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__,r1.x
dcl_literal l5, 0x00000007, 0x000000FF, 0x00000000, 0x00000000
and r1.xy__, r0.yxyy, l5
ishl r0.___w, r1.y, r1.x
dcl_literal l6, 0x00000008, 0x00000008, 0x00000008, 0x00000008
iadd r1.x___, l6, r1.x_neg(xyzw)
ushr r1.x___, r1.y, r1.x
ior r0.___w, r0.w, r1.x
dcl_literal l7, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
and r0.x___, r0.w, l7
mov out0, r0
mend
__usub_sat_u16
mdef(511)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
dcl_literal l5, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF, 0x0000FFFF
umin r0.x___, r0.w, l5
mov out0, r0
mend
__usub_sat_u32
mdef(512)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
ult r1.x___, r0.x, r0.y
dcl_literal l10, 0x00000000, 0x00000000, 0x00000000, 0x00000000
cmov_logical r0.__z_, r1.x, l10, r0.w
mov out0, r0
mend
__usub_sat_u8
mdef(513)_out(1)_in(2)
mov r0, in0
mov r1, in1
mov r0._y__, r1.x
iadd r0.___w, r0.x, r0.y_neg(xyzw)
dcl_literal l2, 0x000000FF, 0x000000FF, 0x000000FF, 0x000000FF
umin r0.x___, r0.w, l2
mov out0, r0
mend
mcall(
