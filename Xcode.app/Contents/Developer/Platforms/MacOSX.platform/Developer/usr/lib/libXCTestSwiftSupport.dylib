@(#)PROGRAM:XCTestSwiftSupport  PROJECT:XCTest-20074
XCUIGestureVelocity
__C_Synthesized
XCTestError
NXCTestErrorCode
Code
NXCTestErrorCode
XCTest
XCTIssue
XCUIDeviceProvider
XCTest
XCUITestRunDeviceRequirements
CodingKeys
XCUIRemoteDevice
XCTest
XCUIRemoteDeviceToken
XCUIDeviceSet
XCUIMultiDeviceTestCase
XCTest
XCUIDeviceSetSpecification
XCTest
XCUIDeviceSetSpecificationBuilder
CodingKeys
XCTest
XCTSkip
XCTest
UnwrappingOptional
XCTest
XCUIDeviceType
XCUIDeviceSpecification
OSVersion
XCUIOperatingSystemVersion
CodingKeys
XCUIDeviceInfo
XCTest
ObservedErrorContext
XCTest
RequestResponse
XCTest
XCTBipartiteMatcher
AlternatingPath
AlternatingPathIterator
raise
dictionaryWithObjects:forKeys:count:
activeTestConfiguration
initializeForMultiDevice
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_identifierForSelectorString:
testsToSkip
countByEnumeratingWithState:objects:count:
componentCount
firstComponent
isEqualToString:
isEqual:
numberOfArguments
stringWithFormat:
initWithSelectorString:convention:invocation:customErrorMessage:
methodReturnType
invocationWithMethodSignature:
setSelector:
executeMultiDeviceTestCaseInvocation:
instanceMethodSignatureForSelector:
retainArguments
setArgument:atIndex:
invocation
methodSignature
getArgument:atIndex:
selector
setTarget:
invokeInvocation:withTestMethodConvention:lastObservedErrorIssue:
userInfo
objectForKeyedSubscript:
setSkippedTestContext:
getReturnValue:
shouldExtractMultiDeviceRequirements
shared
deviceSetSpecification
_xctTestIdentifier
setDeviceSetSpecification:forTestIdentifier:
fulfillWithValue:error:
deviceSetForSpecification:withCompletion:
futureWithTimeout:description:block:
value
error
objcTest
localizedDescription
issueWithType:compactDescription:associatedError:
setDidInterruptTest:
recordIssue:
overridesTestMethodName
overriddenTestMethodName
shouldProvideTestInvocationDescriptors
testInvocationDescriptorForSignature:selectorString:inTestClass:usingTestConfiguration:
eventSynthesizer
resetAuthorizationStatusInterface
platform
appearanceMode
setAppearanceMode:
mainScreen
screens
mainScreenOrError:
screensOrError:
screenWithDisplayID:orError:
makeDiagnosticScreenshotAttachmentForDevice
spindumpAttachmentForProcessID:error:
isLocal
supportsPressureInteraction
supportsPointerInteraction
uniqueIdentifier
attachLocalizableStringsData
configuredForUITesting
enableAutomationMode:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
diagnosticAttachmentsForError:
type
setType:
compactDescription
setCompactDescription:
setDetailedDescription:
sourceCodeContext
setSourceCodeContext:
associatedError
setAssociatedError:
attachments
setAttachments:
addAttachment:
copy
detailedDescription
mutableCopy
initWithType:compactDescription:detailedDescription:sourceCodeContext:associatedError:attachments:
init
emitMultiDeviceTestRequirements
.cxx_destruct
testBundleDidFinish:
multiDeviceRequirementsFilePath
iOSDeviceForCoreDeviceWithIdentifier:
sharedTestObservationCenter
addTestObserver:
dealloc
identifierString
initWithStringRepresentation:
testBundleWillStart:
testSuiteWillStart:
testSuite:didRecordIssue:
testSuite:didRecordExpectedFailure:
testSuiteDidFinish:
testCaseWillStart:
testCase:didRecordIssue:
testCase:didRecordExpectedFailure:
testCaseDidFinish:
testSuite:didFailWithDescription:inFile:atLine:
testCase:didFailWithDescription:inFile:atLine:
initWithFilePath:lineNumber:
typeKey:modifierFlags:
screenshotAttachmentWithName:lifetime:
initWithDomain:code:userInfo:
testName
setTestName:
initWithLocation:
initWithExpectedValue:evaluatedExpression:message:sourceCodeContext:
initWithError:evaluatedExpression:message:sourceCodeContext:
initWithException:evaluatedExpression:message:sourceCodeContext:
initWithExplanation:evaluatedExpression:message:sourceCodeContext:
message
addAsyncTeardownBlock:
setIssueMatcher:
setStrict:
setEnabled:
observeErrorsInBlock:
handleIssue:
reason
processInfo
environment
_installErrorObserver
_observeErrors
currentThread
initWithCallStackAddresses:location:
threadDictionary
__swift_objectForKeyedSubscript:
__swift_setObject:forKeyedSubscript:
callStackReturnAddresses
type
objc
exception
unknown
XCTestCase+TestDiscoveryUIAutomationDelegate.m
Invalid parameter not satisfying: %@
testConfiguration.initializeForMultiDevice
TestDiscoveryUIAutomationDelegate: checking %@.%@
TestDiscoveryUIAutomationDelegate: entire class is skipped
TestDiscoveryUIAutomationDelegate: test method is skipped
'%@' is not a valid test method for multi-device testing, it should have no arguments, not %llu arguments
'%@' is not a valid test method for multi-device testing, it should return an object of type XCUIMultiDeviceTestCase
XCTestConfiguration.activeTestConfiguration.initializeForMultiDevice
self.invocation.methodSignature.numberOfArguments == 3
[argument isKindOfClass:[NSInvocation class]]
TestDiscoveryUIAutomationDelegate: executing expected multi-device test selector %@
'%@' is not a valid test method for multi-device testing, it should return an object of type XCUIMultiDeviceTestCase (return type was %@)
Test selector invocation returned valid multi-device test case %@
Not executing complete test, just extracting device requirements.
fetching devices for multi-device test
v24@?0@"XCUIDeviceSet"8@"NSError"16
v16@?0@"XCTPromise"8
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/XCTest/XCTest-20074/Sources/XCUIAutomation/XCTestCore+Extension/XCTestCase+TestDiscoveryUIAutomationDelegate.m
Unable to satisfy device requirements: %@
failed: caught error: "%@"
Test failed but did not produce an error
Multi-device tests are unavailable on older macOS versions.
aggregateSpecifications
testIdentifiersToDeviceSetSpecifications
deviceSpecifications
deviceType
train
operatingSystemVersion
XCUIDevice
@16@0:8
q16@0:8
v24@0:8q16
@24@0:8^@16
@32@0:8q16^@24
@28@0:8i16^@20
B24@0:8^@16
eventSynthesizer
T@"<XCUIEventSynthesizing>",N,R
resetAuthorizationStatusInterface
T@"<XCUIResetAuthorizationStatusOfProtectedResourcesInterface>",N,R
platform
Tq,N,R
appearanceMode
Tq,N
mainScreen
T@"XCUIScreen",N,R
screens
T@"NSArray",N,R
isLocal
TB,N,R
supportsPressureInteraction
supportsPointerInteraction
uniqueIdentifier
T@"NSString",N,R
configuredForUITesting
@"<XCUIEventSynthesizing>"16@0:8
@"<XCUIResetAuthorizationStatusOfProtectedResourcesInterface>"16@0:8
@"XCUIScreen"16@0:8
@"NSArray"16@0:8
@"XCUIScreen"24@0:8^@16
@"NSArray"24@0:8^@16
@"XCUIScreen"32@0:8q16^@24
@"XCTAttachment"16@0:8
@"XCTAttachment"28@0:8i16^@20
@"NSString"16@0:8
B24@0:8@16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
hash
T#,N,R
debugDescription
B24@0:8@"Protocol"16
XCUIIssueDiagnosticsProviding
@24@0:8@16
@"NSArray"24@0:8@"NSError"16
value
shared
T@"XCUIDeviceProvider",N,R
v32@0:8@16@24
v32@0:8@"XCUIDeviceSetSpecification"16@?<v@?@"XCUIDeviceSet"@"NSError">24
v16@0:8
deviceManager
$__lazy_storage_$_aggregateDeviceRequirements
v24@0:8@16
Encoding problem for test run device requirements: 
Test run device requirements:
No multiDeviceRequirementsFilePath in XCTestConfiguration
Wrote requirements to 
Available devices: 
Unable to fully satisfy 
 given available devices 
Acceptable matchings: 
Initial matching: 
Got alternating path 
Updated matching: 
XCTest/XCTBipartiteMatcher.swift
remoteDevicesInfo()
Swift/arm64e-apple-macos.swiftinterface
Duplicate values for key: '
XCTestObservation
v48@0:8@16@24@32Q40
v24@0:8@"NSBundle"16
v24@0:8@"XCTestSuite"16
v32@0:8@"XCTestSuite"16@"XCTIssue"24
v32@0:8@"XCTestSuite"16@"XCTExpectedFailure"24
v24@0:8@"XCTestCase"16
v32@0:8@"XCTestCase"16@"XCTIssue"24
v32@0:8@"XCTestCase"16@"XCTExpectedFailure"24
v48@0:8@"XCTestSuite"16@"NSString"24@"NSString"32Q40
v48@0:8@"XCTestCase"16@"NSString"24@"NSString"32Q40
NSObject
#16@0:8
@24@0:8:16
superclass
description
XCTest/XCTContext_SwiftExtensions.swift
XCTContext.runActivity(named:block:) failed because activities are disallowed in the current configuration.
XCTest.XCUIRemoteDevice
init()
No device matching token found in device set
XCTest.XCUIDeviceSet
underlyingDevice
coreDeviceIdentifier
deviceMap
MultiDevice test case `
XCTest.XCUIMultiDeviceTestCase
deviceSetSpecification
test
objcTest
testName
T@"XCUIDeviceSetSpecification",N,R,VdeviceSetSpecification
T@?,N,R
T@"NSString",N,C
B24@?0@"XCUIDeviceSet"8^@16
XCTest.XCUIDeviceSetSpecification
tokensToSpecifications
_TtC6XCTest33XCUIDeviceSetSpecificationBuilder
specifications
v16@?0@?<v@?@"NSError">8
B16@?0@"XCTIssue"8
v8@?0
XCTest/XCTExpectedFailure_SwiftExtensions.swift
Fatal error
" was caught by XCTExpectFailure but there is currently no issue handler to determine whether it matches the expected failure. XCTExpectFailure can only be called with a throwing closure in contexts where an issue handler is set.
failed: caught error: "
XCTAssertNil failed: threw error "
XCTAssertNotNil failed: threw error "
XCTUnwrap failed: threw error "
XCTAssertTrue failed: threw error "
XCTAssertFalse failed: threw error "
XCTAssertEqual failed: threw error "
XCTAssertNotEqual failed: threw error "
XCTAssertIdentical
XCTAssertNotIdentical
XCTAssertGreaterThan failed: threw error "
XCTAssertGreaterThanOrEqual failed: threw error "
XCTAssertLessThan failed: threw error "
XCTAssertLessThanOrEqual failed: threw error "
XCTAssertThrowsError failed: throwing an unknown exception
XCTAssertThrowsError failed: throwing 
XCTAssertThrowsError failed: threw error "
XCTAssertThrowsError failed: did not throw an error
XCTAssertNoThrow failed: threw error "
 failed: threw error "
XCTest.XCUIDeviceSpecification
token
osVersion
build
hardwareModel
XCUI_MULTI_DEVICE_TVOS_TRAIN
XCUI_MULTI_DEVICE_TVOS_BUILD
XCUI_MULTI_DEVICE_WATCHOS_TRAIN
XCUI_MULTI_DEVICE_WATCHOS_BUILD
XCUI_MULTI_DEVICE_IOS_TRAIN
XCUI_MULTI_DEVICE_IOS_BUILD
XCUI_MULTI_DEVICE_MACOS_TRAIN
XCUI_MULTI_DEVICE_MACOS_BUILD
B16@0:8
@?16@0:8
@"XCTIssue"8@?0
com.apple.dt.xctest.swift-error-observation.last-observed-error
com.apple.dt.xctest.swift-error-observation.observer-count
_swift_willThrow
__isPlatformOrVariantPlatformVersionAtLeast
os_version_check.c
Platform2 == PLATFORM_MACOS && "unexpected platform"
_availability_version_check
kCFAllocatorNull
CFDataCreateWithBytesNoCopy
CFPropertyListCreateWithData
CFPropertyListCreateFromXMLData
CFStringCreateWithCStringNoCopy
CFDictionaryGetValue
CFGetTypeID
CFStringGetTypeID
CFStringGetCString
CFRelease
/System/Library/CoreServices/SystemVersion.plist
ProductVersion
%d.%d.%d
TestDiscoveryUIAutomationDelegate
B16@0:8
@16@0:8
v24@0:8@16
@48@0:8@16@24#32@40
So7NSErrorC
$s10Foundation21_BridgedStoredNSErrorP
$sSY
$s10Foundation18_ErrorCodeProtocolP
So8NSNumberC
$ss21_ObjectiveCBridgeableP
ySo8XCTIssueCG
So8XCTIssueC
So8NSObjectC
SDySo17XCTTestIdentifierC
GSgSg
SgSo7NSErrorCSgIeyByy_
IeghH_
ytIeghHr_
ySS_yptG
3key_
5valuet
SDySS
ySo17XCTTestIdentifierC
ySo17XCTTestIdentifierC
ySo17XCTTestIdentifierC
So10XCUIDevice_p
_pIeggzo_
_SAySo7NSErrorCSgGSgtc
SSSg
ySsG
ySS_
So17XCTTestIdentifierC_
ySo17XCTTestIdentifierC_
So21XCTSkippedTestContextC
_pIeghHzo_
So7NSErrorCSgIeyBy_
_pSgIegg_
_pIgrzo_
_pSg
ypSg
SDySSypG
_pIgzo_
SaySsG
So8NSThreadC
_pXCSg
So7NSArrayC
$ss27ExpressibleByIntegerLiteralP
$ss25ExpressibleByFloatLiteralP
yxq__GG
SDyxShyq_GG
q_Sg
yxq__G
yxq___G
$sST
$sSt
yxq__G
_nsError
rawValue
Code
RawValue
_ErrorType
_ObjectiveCType
_ObjectiveCType
underlyingIssue
value
deviceManager
testIdentifiersToDeviceSetSpecifications
$__lazy_storage_$_aggregateDeviceRequirements
aggregateSpecifications
RawValue
underlyingDevice
coreDeviceIdentifier
deviceMap
deviceSetSpecification
test
objcTest
testName
tokensToSpecifications
specifications
deviceSpecifications
RawValue
skippedTestContext
errorCode
errorCode
errorUserInfo
RawValue
iPhone
iPad
iPodTouch
appleWatch
appleTV
token
deviceType
osVersion
train
build
hardwareModel
operatingSystemVersion
latest
majorVersion
minorVersion
patchVersion
identifier
error
callStackReturnAddresses
IntegerLiteralType
FloatLiteralType
storage
inputMappings
request
response
Element
Iterator
path
index
