name=
From 
L=AUTH 
STARTTLS
MAIL FROM:<
RCPT TO:<
NOOP
QUIT
DATA
SSNT
EHLO 
AUTH=
RSET
HELO 
?333333
MbP?
Y@@(#)PROGRAM:Message  PROJECT:Message-20
messages
flags
mailboxes
previous earliest received date
MailMessageStoreMessageFlagsChanged
MailMessageStoreStructureChanged
MailMessageStoreMessagesAdded
MailMessageStoreMessagesWillBeCompacted
MailMessageStoreMessagesRemoved
MailMessageStoreMessagesAttachmentStorageLocationChanged
MailMessageStoreDidOpen
MailMessageStoreDidClose
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/MessageStores.subproj/MailMessageStore.m
<Unknown File>
Invalid parameter not satisfying: %@
block
Cancelled
Failed
Succeeded
<%@:%p (
result:%@
transfered:%@
failed:%@)>
resultCode
TI,R,N,V_resultCode
failedMessages
T@"NSArray",R,N,V_failedMessages
transferedMessages
T@"NSArray",R,N,V_transferedMessages
+[MFMailMessageStore createEmptyStoreForPath:]
+[MFMailMessageStore storeAtPathIsWritable:]
-[MFMailMessageStore openSynchronously]
-[MFMailMessageStore writeUpdatedMessageDataToDisk]
MAILBOX_DISPLAY_FORMAT
%@ --- %@
<%@: %p (uid=%@)>
destinationMailbox
v12@?0@"MFMailMessageStore"4@"NSArray"8
%@|%lu|%@|%d
com.apple.message.fetchMobileSynchronously
-[MFMailMessageStore _fetchHeaderDataForMessage:downloadIfNecessary:]
-[MFMailMessageStore _rebuildTableOfContentsSynchronously]
messageFlags
messageFlagsMask
MessageIsRead
MessageIsDeleted
MessageIsFlagged
MessageWasRepliedTo
MessageWasForwarded
MessageWasRedirected
MessagePriorityLevel
MessageIsEncrypted
MessageIsSigned
MessageSenderIsVIP
MessageToContainsAccountAddress
MessageCcContainsAccountAddress
MessageToOrCcContainsAccountAddress
MFMessageHasAttachments
MessageIsJunk
MessageIsNotJunk
MessageNumberOfAttachmentsChanged
MessageFontSizeDelta
MessageHighlightTextInTOC
MessageHasBeenViewed
MessageViewedDate
MessageIsServerSearchResult
MessageIsThreadSearchResult
MessageDeliveryInProgress
MessageQueuedForDelivery
MessageNeedsSyncConfirmation
shouldUseICSRepresentation
MessageConversationIsVIP
MessageConversationIsMuted
0x%llx (%s
read
unread
, junk
, not-junk
, deleted
, answered
, forwarded
, redirected
, flagged
, VIP
, encrypted
, signed
, recent
, draft
, server search result
, thread search result
, needs sync
, priority=%x
, partial
, delivery
, temp UID
contextID
T@"NSString",R,N,V_contextID
attachmentsBaseURL
T@"NSURL",C,N,V_attachmentsBaseURL
attachments
T@"NSArray",R,N
readstatus
received-date
from
multipart
plain
mixed
html
related
%@/%@
type
alternative
attachment
inline
-[MFMessageWriter setMessageClassToInstantiate:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Message.subproj/MessageWriter.m
delegate
T@,N,V_delegate
compositionSpecification
T@"NSDictionary",R,N,V_compositionSpecification
shouldWriteAttachmentPlaceholders
TB,N,V_shouldWriteAttachmentPlaceholders
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
flowed
format
delsp
BAD_CHARSET_FORMAT
Some characters in your message could not be converted to the "%@" text encoding. Please choose a different entry from the "Text Encoding" menu.
Delayed
BAD_CHARSET_TITLE
Invalid Text Encoding
UseFormatFlowedForWrapping
&nbsp;
text
charset
filename
message
external-body
local-file
access-type
name
size
x-unix-mode
application
octet-stream
boundary
remote-image
unknown
x-apple-content-length
base64
signed
binary
8bit
7bit
quoted-printable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/DataAccess/MFDAStoreDraftConsumer.m
should not have error and response
got non-successful status code %ld for response
got a successful response with no server id
%s %d : Caught exception %@
serverId
T@"NSString",R,N,V_serverId
error
T@"MFError",R,N,V_error
success
TB,R,N,V_success
-[MFDADeferredStoreDraftOperation initWithCoder:]
[aDecoder allowsKeyedCoding] && "aDecoder must allow keyed coding"
MessageID
FolderID
-[MFDADeferredStoreDraftOperation encodeWithCoder:]
[aCoder allowsKeyedCoding] && "aCoder must allow keyed coding"
%s: consumer returned error: %@
-[MFDADeferredStoreDraftOperation performWithAccount:offlineCache:]
%@ message-id "%@"
x-apple-maildropbanner
x-apple-maildrop
maildrop-thumbnail
Images.zip
class
data-expiration
data-url
data-filename
data-size
bold
italic
fixed
smaller
bigger
x-tad-bigger
x-tad-smaller
fontfamily
color
underline
nofill
excerpt
lang
param
x-fontsize
superscript
subscript
paragraph
signature
heading
footing
comment
no-op
</U>
<SUP>
</SUP>
<SUB>
</SUB>
<SPAN style="
color: %s; 
font-size: %dpt; 
</SPAN>
<BLOCKQUOTE type="cite">
</BLOCKQUOTE>
&lt;
&gt;
&amp;
&nbsp;&nbsp;&nbsp;&nbsp;
<br/>
-[MFMimeEnrichedReader setupFontStackEntry:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Message.subproj/MIME.subproj/MimeEnrichedReader.m
NULL != stackEntry
font-weight: bold
font-style: italic
rgba(%d, %d, %d, 1)
font-family: 
font-face: Helvetica
<%@:%p
_commandStack = %p (%ld entries):
[%@ parameter=%@]
_outputBuffer=%@
_outputString=%@
-------------------------------------------------------------------
<HTML><BODY>
</BODY></HTML>
From 
AppleTextBreakLocale
<SPAN>
 &nbsp; &nbsp;
</SPAN><BR>
System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore
DDURLifier
v4@?0
x-msg://%ul/
MFWebMessageDocument/%ul
baseURL
T@"NSURL",R,V_baseURL
mimeBody
T@"MFMimeBody",R,V_mimeBody
mimePart
T@"MFMimePart",R,V_htmlPart
htmlData
T@"NSData",R,V_htmlData
preferredEncoding
TL,V_preferredEncoding
attachmentManager
T@"MFAttachmentManager",&,N,V_attachmentManager
MFAttachmentDataProviderErrorDomain
T@"NSURL",&,V_url
com.apple.MobileMail.parital
Password
Class
Type
DisplayName
Username
Hostname
AccountInfoDidChange
AccountOfflineStatusDidChange
AuthenticationScheme
SSLEnabled
SSLClientIdentity
SSLEnabledIsEditable
SSLIsDirect
SMIMEEnabled
PerMessageSMIMEEnabled
SMIMESigningEnabled
SMIMEEncryptionEnabled
SMIMESigningIdentity
SMIMEEncryptionIdentity
PortNumber
NumberOfDaysToKeepTrash
DeliveryHostname
DeliverySSLEnabled
DeliveryPortNumber
ManagedTag
mcProfileUUID
MFRestrictMessageTransfersToOtherAccounts
MFRestrictSendingFromExternalProcesses
Prevent Recents Syncing
MFAccountSupportsMailDrop
showAlertNow
dateLastFetchAceDB
OAuth2Token
OAuth2RefreshToken
ASStoreDraftsOnServer
MFServerSSLCertificateIsTrusted
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Accounts.subproj/Account.m
Cannot set persistent account on account with unsaved account properties
Account
%@:%@@%@
NOT 
, error:
v12@?0i4@"NSError"8
failure
v12@?0B4@"NSError"8
PLAIN
-[MFAccount certUIService]
0 && "Must be implemented by subclass"
NO_PASSWORD_PROVIDED_FOR_USER_FORMAT
No password provided for user "%@" on server "%@".
Please go to Mail Account Settings and enter a password.
NO_PASSWORD_PROVIDED_FOR_ACCOUNT_FORMAT
No password provided for "%@".
Please go to Mail Account Settings and enter a password.
PASSWORD_INACCESSIBLE_FOR_ACCOUNT_FORMAT
The password for "%@" cannot be used at this time.
LOGIN_DISABLED_FOR_ACCOUNT_FORMAT
Logins are disabled for "%@".
  account : %@
accountForRenewingCredentials
T@"ACAccount",R
persistentAccount
parentAccount
parentAccountIdentifier
T@"NSString",R
properties
T@"NSDictionary",R
uniqueId
identifier
syncStoreIdentifier
managedTag
username
T@"NSString",&,N
hostname
displayName
sourceApplicationBundleIdentifier
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
Domain
Could not find data for compose attachment.
No Data Found
v8@?0B4
EmailAddresses
ReceiveEmailAliasAddresses
LastEmailAliasesSyncDate
FullUserName
SMTPDisabled
CustomSignature
SMTPAlternateIdentifiers
DraftsMailboxName
SentMessagesMailboxName
TrashMailboxName
ArchiveMailboxName
JunkMailboxName
ArchiveMessages
CachePolicy
DefaultSendingAccount
MFMailDefaultSendingAccountDidChange
defaultAddress
MFNameKey
MailAccounts
MailAccountInvalidateMeetingCache
MailboxUserInfoDidChange
AccountMailboxListingDidChange
MailboxAttributes
MailboxChildren
MailboxName
MailboxExtraAttributes
MailboxPermanentTag
MailAccountContentsDidChange
MailAccountContentsDidChangeUids
MailboxUpdatedWithNoChanges
MailAccountCurrentURLDidChange
MFMailAccountPushedMailboxUidsDidChange
hotmail
icloud
exchange
gmail
netease
yahoo
imap
v12@?0@"NSArray"4@"NSError"8
B8@?0@"MailAccount"4
Outbox
@"MFMailboxUid"8@?0@"MailAccount"4
AccountPath
CachedMailboxenLock
MailAccountDeletionLock
MailAccount LibraryID Lock
@"MFMailMessageStore"8@?0@"MFMailboxUid"4
Library/Mail
%@-%@@%@
SYNCHRONIZING_WITH_FILE_SYSTEM_FORMAT
Synchronizing with file system
B8@?0@"MFMailboxUid"4
i12@?0@"MFMailboxUid"4@"MFMailboxUid"8
Unknown
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
Mailbox names may not include "%@".
RENAME_FAILED
Mail was unable to rename "%@".
DELETE_FAILED_FORMAT
Unable to delete "%@".
-[MailAccount storeClass]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Accounts.subproj/MailAccount.m
RelativePath
plist
-[MailAccount libraryID]
0 && "account must have a library ID"
MFMailboxDictClientCount
MFMailboxDictLock
ChokeLock
-[MailAccount didFinishActionForChokePoint:coalescePoint:withResult:]
Active Dataclasses Lock
OldChildren
NewChildren
<%@:%p (path=%@, %sactive)>
not 
-%@-(%@)
INBOX
Drafts
Sent Messages
Deleted Messages
Archive
Junk
LogDeleteActivity
IncludeDefaultSecurePortNumber
 (%@)
otherAccountIcon
@apple.com
.apple.com
appleAccountIcon
-[MailAccount _setValueInAccountLookAsideProperties:forKey:subKey:]
[dictionary isKindOfClass:[NSDictionary class]]
-[MailAccount archiveDestinationForMailbox:]
[self supportsArchiving] && "only accounts that support archiving should call into this"
ForceSourceIsManaged
shouldArchiveByDefault
TB,R
sourceIsManaged
supportsFastRemoteBodySearch
TB,R,N,V_supportsFastRemoteBodySearch
CacheAllMessages
CacheMessagesAsRead
CacheNoMessages
CacheAllBodies
"%@"
SMTPIdentifier
SMTPCarrierFallbackAllowed
SaveSentMessages
_readMailboxCache
self->_rootMailboxUid
BOOL _readMailboxCache(MailAccount *)
<Unknown Function>
.mboxCache.plist
NSDictionary *_createMailboxDictionary(NSString *, int, NSArray *, NSString *, NSArray *)
mboxes
AccountIcon
SendingIdentities
EncryptionIdentities
MailboxUidDidBecomeInvalidNotification
MFMailboxUidWasRenamedNotification
LastViewedMessageInMailbox
LastViewedMessageInMailboxDate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Accounts.subproj/MailboxUid.m
should not have a path component and a account on the same mailboxuid.
*** Orphaned mailbox %@
INBOX_SPECIAL_MAILBOX_NAME
Inbox
DRAFTS_SPECIAL_MAILBOX_NAME
SENT_MESSAGES_SPECIAL_MAILBOX_NAME
Sent
TRASH_SPECIAL_MAILBOX_NAME
Trash
OUTBOX_SPECIAL_MAILBOX_NAME
ARCHIVE_SPECIAL_MAILBOX_NAME
JUNK_SPECIAL_MAILBOX_NAME
URLString
Notes
<%@:%p (relative path=%@, attributes=0x%x)>
IsDirty
suggestionsLostMessageSearchResultCount
suggestionsLostMessageSearchTimestamp
extraAttributes
T@"NSArray",&,N,V_extraAttributes
permanentTag
T@"NSString",&,N,V_permanentTag
TI,R,N
Td,R,N
Info.plist
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/MailboxPrediction/MFHeuristicsMailboxPredictor.m
[mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNumber class]] || [mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNull class]]
[mergedParams[kOrderParameterKey] isKindOfClass:[NSArray class]]
[mergedParams[kWeightsParameterKey] isKindOfClass:[NSDictionary class]]
Unknown mode: %@
Predicting for message persistentID=%@, subject="%@"
Aggregate: %@
## Ordered Mode:
Raw counts for %@: %@
Found %.0lf hit for **%@** in %@
Ignoring because it is the message's current mailbox.
Ignoring because count (%.0f) is under threshold (%.0f).
## Summed Weighted Mode:
Raw counts for %@:
Found field=%@ in mailbox=%@: weightedHits=%.1lf
## Weighted Mode:
Found %.0lf (weighted=%.1lf) hits for **%@** in %@
Ignoring because weighted (%.0f) is under threshold (%.0f).
Winner: %@ (weighted=%.1lf)
Unknown field: %@
Ignoring mailboxes: %@
v16@?0@"NSString"4@"NSNumber"8^B12
userProfileProvider
T@"<MFUserProfileProvider>",&,N,V_userProfileProvider
library
T@"<MFQueryableLibraryAdapter>",&,N,V_library
parameters
T@"NSDictionary",&,N,V_parameters
mailboxIDCache
T@"NSCache",&,N,V_mailboxIDCache
debugLog
T@"NSMutableString",&,N,V_debugLog
mode
ordered
ignoreUserAddresses
confusionThreshold
orderedThreshold
order
conversationID
recipient
listID
sender
weightedThreshold
weights
limitToRecentMessages
weighted
MFUserCreatedMailboxIDs
Mailboxes
mbox
Local
PERSONAL_MAILBOXES
Local Mailboxes
MAILBOX_EXISTS_FORMAT
The mailbox "%@" already exists.
x-apple-transient-drafts
local
LocalAccountId
%@ (
SEND_MESSAGE_FORMAT
Sending message: %@
NO_SUBJECT
No subject
INTERNAL_DELIVERY_ERROR_FORMAT
This message couldn't be delivered because the following internal error occurred: %@
NO_RECIPIENTS
This message couldn't be delivered because you haven't specified any recipients.
T@"NSDictionary",&,N,V_compositionSpecification
conversationFlags
TQ,N,V_conversationFlags
isUserRequested
TB,N,V_isUserRequested
DeliveryAccounts
ShouldUseAuthentication
DeliveryAccountWillBeRemoved
DeliveryAccountsDidChange
%@:%@
SMTPServers
%@@%@
MaxMessageBytes
Ptr:[%p]
Name:[%@]
Size:[%lu]
MIME:[%@]
Auto-archive:[%s]
Expiration:[%@]
UUID:[%@]
MDType:[%lu]
URL:[%@]
Wrapped URL:[%@]
isBanner:[%@]
--------------
%@-%@-%@-%@-%@
fileName
T@"NSString",C,N,V_fileName
fileSize
Ti,V_fileSize
mimeType
T@"NSString",C,N,V_mimeType
autoArchive
TB,V_autoArchive
directUrl
T@"NSURL",C,N,V_directUrl
wrappedUrl
T@"NSURL",C,N,V_wrappedUrl
expiration
T@"NSDate",C,N,V_expiration
TI,V_flags
UUID
T@"NSString",GUUID,SsetUUID:
isInvalid
TB,V_isInvalid
NO_SMTP_HOST
You have not specified an SMTP server in Mail Preferences. You must specify a server before you can send mail.
SMTP_NO_CONNECTION
The connection to the outgoing server "%@" failed. Additional Outgoing Mail Servers can be configured in Settings > Mail, Contacts, Calendars.
MESSAGE_TOO_LARGE
Your message has size %@, which exceeds %@, the maximum allowed by the server.
FAILED_SEND_TITLE
Cannot Send Mail
MailErrorHandlerDoNotSanitize
X-AOL-OUTBOX-COPY
PIPELINING
8BITMIME
Enable8BITMIME
BINARYMIME
EnableBINARYMIME
ENHANCEDSTATUSCODES
CHUNKING
DisableCHUNKING
SIZE
AUTH
STARTTLS
FAILED_SEND_SSL_NEEDED
Check the SSL setting for the outgoing server "%@".
> BODY=BINARYMIME
> BODY=8BITMIME
BDAT %lu LAST
I8@?0I4
B20@?0r*4L8B12B16
 imapmailbox="%@"
SMTP_INVALID_SENDER_ADDRESS
The sender address "%@" was rejected by the server.
SMTP_SENDING_CONTENT_FAILED
Sending the message content to the server failed.
SMTP_1_BAD_RECIPIENT
The recipient "%@" was rejected by the server.
SMTP_SENDING_CONTENT_LATER
Mail will try to send the message again later.
SMTP_BAD_RECIPIENTS
The recipients were rejected by the server.
SMTP_RECIPIENTS_UNRECOGNIZED
Verify that you have addressed this message correctly. Check your SMTP server settings in Mail Preferences and verify any advanced settings with your system administrator.
SMTP_SENDING_FAILED_TITLE
Unable to Send Email
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Delivery.subproj/SMTPConnection.m
Invalid argument %@
SMTP_GENERIC_ERROR_FORMAT
An error occurred while delivering this message via the SMTP server "%@"
^([0-9]+)([- ])?(.*)$
Unable to init regular expression from %@
-[MFSMTPConnection _readResponseRange:isContinuation:]
[match numberOfRanges] == 4
FAILED_SEND
Check the account settings for the outgoing server "%@".
localhost
SSNT
IPv6:
SMTP
smtp
Class:%@
URL:%@
Entries[%@]
B16@?0@4I8^B12
__MACOSX/
T@"NSURL",&,N,V_url
contents
T@"NSData",&,N,V_contents
T@"NSError",R,&,N,V_error
EEE, d MMM yyyy HH:mm:ss ZZ
en_US_POSIX
ja_JP_TRADITIONAL
REPLY_ATTRIBUTION_SENDER
%@ <%@>
REPLY_ATTRIBUTION
On %@, at %@, %@ wrote:
persistentID
T@"NSString",R,C,N
subject
T@"NSArray",R,C,N
dateReceived
T@"NSDate",R,N
listUnsubscribe
remoteID
mailbox
T@"<ECMailbox>",R,N
Tq,R,N
flagged
TB,R,N
answered
junk
senderVIP
conversationVIP
conversationMuted
messageBody
T@"<ECMimePart>",R,N
TL,R,N
dateReceivedInterval
dateSentInterval
conversationHash
mailboxID
messageIDHash
deleted
knownToHaveAttachments
TB,R,N,GisKnownToHaveAttachments
TI,R,D,N
Tq,R,D,N
v16@?0@"MFMailboxUid"4@"NSMutableSet"8^B12
mailboxToRemoteIdDictionary
T@"NSMutableDictionary",&,N,V_mailboxToRemoteIdDictionary
count
MFMessageKeychainManagerCertificateDeniedDomain
keychainLock
B8@?0^{__SecIdentity=}4
S/MIME Encryption for %@
1.2.840.113635.100.6.7
com.apple.mobilemail.smime
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/NSSetAdditions.m
transform
test
i12@?0@4@8
"%@" : %lu
T@"MFMailMessage",&,N,V_message
libraryID
TI,N,V_libraryID
Tq,N,V_messageIDHash
T@"NSString",C,N,V_subject
subjectPrefixLength
subjectWithoutPrefix
T@"NSString",R,N
references
T@"MFSparseMutable64IndexSet",&,N,V_references
messageIDsBySubject
T@"NSMutableDictionary",&,N,V_messageIDsBySubject
Ti,N,V_mailboxID
conversationIDHash
Tq,N,V_conversationIDHash
conversationFlagsRef
T^Q,N,V_conversationFlagsRef
Td,N,V_dateSentInterval
senderList
T@"NSArray",C,N,V_senderList
toList
T@"NSArray",C,N,V_toList
ccList
T@"NSArray",C,N,V_ccList
bccList
T@"NSArray",C,N,V_bccList
T@"NSString",C,N,V_sender
T@"NSString",C,N,V_to
T@"NSString",C,N,V_cc
T@"NSString",C,N,V_bcc
participants
T@"MFEmailSet",R,N
REPLY_SUBJECT_PREFIX
FORWARD_SUBJECT_PREFIX
Fwd:
%@-%d.%@
%@-%d
&apos;
&quot;
<br>
CRAM-MD5
GSSAPI
KERBEROS_V4
X-APOP
X-KPOP
NTLM
DIGEST-MD5
MFPlainAuthScheme
MFCRAM_MD5AuthScheme
MFNTLMAuthScheme
MFDigestMD5AuthScheme
LOGIN
MESSAGE_AUTH_PLAIN_TEXT
user
pass
MFSignerInfoErrorKey
MFMessageSignerTrustDidChangeNotification
SMIME_DAMAGED_SIG
The digital signature for this message is incorrect. The message may have been tampered with or corrupted since being signed by "%@".
SMIME_UNREADABLE_SIG
There was a problem reading the digital signature for this message.
SMIME_SIG_TITLE
Unable to verify message signature
T@"NSString",R,N,V_sender
commonName
emailAddress
action
Ti,R,N
certificates
T@"MFError",R,N
Metadata Lock
temp-
<%@ %p: library id %@, remote id %@, conversation id %@, %@, subject hash: %@>
@"NSDictionary"4@?0
Attachments
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/LibraryMessage.m
Expected message %@ to be self %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Message.subproj/MFMessageInfoOrderedSet.m
comparator
messageInfo.messageIDHash != 0
Inconsitency: this messageID was in _knownMessageIDs, it must be in _mutableMessageInfos
messageID mismatch, did not find the real duplicate
v12@?0I4^B8
B16@?0@"MFMessageInfo"4I8^B12
@"NSArray"8@?0@"MFMessageInfo"4
<%@: %p> (
| %@
T@?,C,N,V_comparator
duplicatePreferenceComparator
T@?,C,N,V_duplicatePreferenceComparator
uniqueMessageInfos
allMessageInfos
countWithDuplicates
firstMessage
T@"MFMessageInfo",R,N
lastMessage
StoreServerCountChanged
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/LibraryStore.m
messages shouldn't have a zero generation number.
FetchWithoutLimits
oldFlagsByMessage
SUCCESS
FAILED
X-Apple-Content-Length: %lu
I12@?0@"MFMessage"4i8
earliestReceivedDate
T@"NSDate",&,N,V_earliestReceivedDate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Message.subproj/MIME.subproj/MFContentErrorDocument.m
CANNOT_DECODE_MULTIPART_MESSAGE
This message cannot be displayed because of the way it is formatted. Ask the sender to send it again using a different format or email program.
%@/%@
T@"NSError",R,N,V_error
content
-journal
-wal
-shm
VIPCriterion
ThreadNotifyCriterionName
ThreadMuteCriterionName
FlaggedCriterion
UnreadCriterion
ReadCriterion
IncludesMeCriterion
ToMeCriterionName
CcMeCriterionName
HasAttachmentsCriterion
TodayCriterion
(none)
%@Criterion: %@
%@%@  All criteria must be satisfied: %@
%@  Criteria: %@
%@  Name: %@
%@Criterion: %@
%@ Sub-Criterion: 
%@Criterion: %@
%@  Qualifier: %@
%@  Expression: %@
<%@: %p> %@
From
 or 
%lld
criterionType
Ti,N
criterionIdentifier
qualifier
Ti,N,V_qualifier
expression
T@"NSString",C,N
libraryIdentifiers
T@"NSIndexSet",&,N,V_libraryIdentifiers
preferFullTextSearch
TB,N,V_preferFullTextSearch
useFlaggedForUnreadCount
TB,N,V_useFlaggedForUnreadCount
includeRelatedMessages
TB,N,V_includeRelatedMessages
expressionIsSanitized
TB,N,V_expressionIsSanitized
includeRemoteBodyContent
TB,N,V_includeRemoteBodyContent
T@"NSString",&,N,V_name
criteria
T@"NSArray",C,N
Qualifier
Header
Expression
CriterionUniqueId
AllCriteriaMustBeSatisfied
AccountURL
Name
Criteria
DateUnitType
DateIsRelative
    
To or Cc
AnyRecipient
BeginsWith
EndsWith
IsEqualTo
IsNotEqualTo
DoesNotContain
IsLessThan
IsGreaterThan
ASCIIContains
Contains
Body
SenderIsInAddressBook
SenderIsNotInAddressBook
SenderHeader
AnyMessage
DateReceived
DateLastViewed
DateSent
SenderIsInAddressHistory
SenderIsNotInAddressHistory
AnyRecipientIncludesFullName
NoRecipientIncludesFullName
IsDigitallySigned
IsEncrypted
PriorityIsNormal
PriorityIsHigh
PriorityIsLow
AnyAttachment
Mailbox
MessageNumber
ExternalID
Compound
Flag
NotInTrashMailbox
ContainsAttachments
SpotlightSearch
ConversationID
Negation
MessageIdHash
ListIDHash
ToRecipient
CcRecipient
SenderIsMemberOfGroup
SenderIsNotMemberOfGroup
InSpecialMailbox
NotInASpecialMailbox
@"NSArray"8@?0@"MailAccount"4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/MailboxPrediction/MFMobileLibraryAdapter.m
Unexpected mailbox object.
groupBy == MFMessageQueryGroupByMailboxPersistentID
NSNumber variable required, got %@
NSString variable required, got %@
NSSet variable required, got %@
T@"MFMailMessageLibrary",&,N,V_library
accounts
T@"NSArray",&,N,V_accounts
Could not retrieve decrypted data for attachment.
NOT (%@)
SELECT messages.ROWID FROM %@WHERE %@
messages.ROWID IN (%@)
 UNION 
 AND 
 OR 
NULL
date_received
date_last_viewed
messages.ROWID
messages.external_id
cpsearch(subject, '%@', %d)
messages.message_id
%@ %@ %lld
%@ %@ %@
sender LIKE '%%%@%%'
cpsearch(sender, '%@', %d)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/CriterionAdditions.m
Only MessageRuleIsEqualTo is supported for ListIDHashCriterionType
messages.list_id_hash = %lld
mailbox %@ IFNULL((SELECT ROWID FROM mailboxes WHERE url = %@), -1)
cpsearch(IFNULL(sender, '') || ' ' || IFNULL(subject, '') || ' ' || IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
messages.conversation_id IN (%s)
messages.conversation_id NOT IN (%s)
(_to LIKE '%%%@%%' OR cc LIKE '%%%@%%')
cpsearch(IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
(messages.flags & %@) = %@
deleted = '%d'
sender_vip = '%d'
(conversations.flags&1) > 0
(conversations.flags&(1<<1)) > 0
((messages.flags&(63<<10))>>10) BETWEEN 1 AND 62
(messages.flags&(1<<39)) > 0
(messages.flags&(1<<40)) > 0
(messages.flags&(3<<39)) > 0
and64
not and64
%@(messages.flags, %@)
unsupported criterion type %ld
LIKE
NOT LIKE
'%@'
'%%%@%%'
'%@%%'
'%%%@'
SELECT ROWID from mailboxes WHERE url = ?;
SELECT 1 FROM pop_uids WHERE mailbox = ? AND uid = ? AND flags IS NULL;
B12@?0^{sqlite3=}4B8
SELECT uid FROM pop_uids WHERE mailbox = ? AND date_added < ?;
SELECT uid FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ? AND uid = ?;
SELECT COUNT() FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ?;
SELECT flags FROM pop_uids WHERE mailbox = ? AND uid = ?;
TI,R,N,V_currentSize
maximumSize
TI,N,V_maximumSize
maximumLatency
Td,N,V_maximumLatency
string
quoteLevel
MFWebAttachmentSource_AttachmentLock
<%@ %p>, attachments=%@
MESSAGE_AUTH_CRAM_MD5
MD5 Challenge-Response
%02x
com.apple.private.accounts.allaccounts
MessageDeliveryFatalError
MessageDeliveryTransientError
MessageDeliveryPermanentError
MessageDeliveryCancelled
MessageDeliveryConfigurationError
MessageDeliverySucceeded
MessageDeliveryQueued
MessageDeliveryMailDropIncomplete
status: %@, duration:%f, bytesSent: %d, isWifi: %d
status
Ti,N,V_status
duration
Td,N,V_duration
bytesSent
TI,N,V_bytesSent
isWifi
TB,N,V_isWifi
attributes
Ti,N,V_attributes
v12@?0@"MFAccount"4B8
FAILED_LOGIN
The user name or password for "%@" is incorrect.
SMTP_CONNECTION_FAILED_MESSAGE_FORMAT
The %@ server "%@" is not responding. Check your network connection and that you entered the correct information in the "Outgoing Mail Server" field.
Assistant
CONNECTION_FAILED_MESSAGE_FORMAT
The %@ server "%@" is not responding. Check your network connection and that you entered the correct information in the "Incoming Mail Server" field.
CHECKING_CONNECTION
Checking connection
performsValidationInBackground
validationInvocation
T@"MFMonitoredInvocation",R,N
accountIsValid
accountSupportsSSL
account
T@"MFAccount",R,N
summary
meeting
meeting data
meeting metadata
partial
TB,N,GisPartial,V_partial
complete
TB,N,GisComplete,V_complete
dataHolder
T@"MFDataHolder",&,N,V_dataHolder
partName
T@"NSString",&,N,V_partName
MailMessageLibraryConversationHasMerged
MailMessageLibraryNotificationsConversationIDKey
MailMessageLibraryNotificationsOldConversationIDKey
MailMessageLibraryMessagesHaveNewData
MailMessageLibraryNotificationsMessagesKey
MailMessageLibraryWillBecomeUnavailable
MailMessageLibraryDidBecomeAvailable
MailMessageLibraryDidFinishReconciliation
MailMessageLibraryProtectedDataAvailibilityKey
@"MFLibraryMessage"8@?0@"NSNumber"4
_MessageLibraryHandle-%p
Vault
B4@?0
com.apple.message.library
com.apple.message.library.keybag
UPDATE messages SET flags = (flags|:flags) WHERE rowid = :rowid
:flags
:rowid
setting flags
SELECT flags FROM messages WHERE ROWID = ?;
Q12@?0Q4
UPDATE messages SET flags = ((flags | ?) & ?)%@ WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?)
mass updating flags
v20@?0r^v4{_NSRange=II}8^B16
@"MFLibrarySearchableIndexItem"8@?0@"MFLibraryMessage"4
SELECT messages.message_id, messages.conversation_id, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, messages.date_sent FROM messages JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid WHERE subject LIKE ? AND mailbox = ?
%%%@
querying subject references for threads
INSERT INTO threads (message_id, reference, is_originator) VALUES (?, ?, NULL)
inserting THREAD references
v16@?0Q4^B12
UPDATE messages SET conversation_id = ? WHERE rowid = ?
inserting conversation id into message row
INSERT OR IGNORE INTO conversations (conversation_id) VALUES (?)
inserting row into conversations table
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) SELECT ?, reference FROM THREADS WHERE message_id=?
inserting row into conversation_id_message_id table (1)
INSERT OR REPLACE INTO conversation_id_message_id (conversation_id, message_id, date_sent) VALUES (?, ?, ?)
inserting row into conversation_id_message_id table (2)
UPDATE messages SET conversation_id = ? WHERE conversation_id = ?
udpating other conversations to point to this one
UPDATE OR IGNORE conversation_id_message_id SET conversation_id = ? WHERE conversation_id = ?
DELETE FROM conversations WHERE conversation_id = ?
deleting row from conversations table
SELECT protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, protected_messages.subject, remote.ROWID, original.ROWID, original.url, content_type, messages.message_id, messages.external_id, messages.unique_id, messages.list_id_hash FROM messages LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN mailboxes AS remote ON messages.remote_mailbox = remote.ROWID LEFT OUTER JOIN mailboxes AS original ON messages.original_mailbox = original.ROWID WHERE messages.ROWID = ?
preparing statement to add message
fetching fields for message
INSERT INTO messages (remote_id, date_sent, date_received, mailbox, remote_mailbox, original_mailbox, flags, read, flagged, deleted, sender_vip, visible, size, encoding, content_type, message_id, sequence_identifier, external_id, unique_id, list_id_hash) values (:remote_id, :date_sent, :date_received, :mailbox, :remote_mailbox, :original_mailbox, :flags, :read, :flagged, :deleted, :sender_vip, :visible, :size, :encoding, :content_type, :message_id, :sequence_identifier, :external_id, :unique_id, :list_id_hash)
:remote_id
:date_sent
:date_received
:mailbox
:remote_mailbox
:original_mailbox
:read
:flagged
:deleted
:sender_vip
:visible
:size
:encoding
:content_type
:message_id
:sequence_identifier
:external_id
:unique_id
:list_id_hash
inserting message (unprotected)
preparing insert statement
INSERT INTO protected.messages (message_id, sender, subject, _to, cc, bcc) values (%u, %Q, %Q, %Q, %Q, %Q);
INSERT INTO protected.messages (message_id, sender, subject, _to, cc, bcc) values (:message_id, :sender, :subject, :_to, :cc, :bcc)
:sender
:subject
:_to
:bcc
inserting message (protected)
preparing insert statement (protected)
INSERT OR REPLACE INTO pop_uids (mailbox, uid, date_added) VALUES (?, ?, ?);
inserting POP UID
v20@?0q4q12
@"MFMailboxUid"8@?0@"MFLibraryMessage"4
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) VALUES (?, ?)
inserting row into conversation_id_message_id table (3)
UPDATE messages SET message_id = ? WHERE rowid = ?
inserting message_id digest into message row
SELECT message_id FROM messages WHERE rowid = ?
pulling out the faked message-id
loading messages
preparing statement for send messages query
error performing query: %@
SELECT date_received FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 ORDER BY date_received ASC LIMIT 1;
SELECT date_received FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND content_index_transaction_id IS NOT NULL AND flags & 128 = 0 ORDER BY date_received ASC LIMIT 1;
SELECT date_received FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 ORDER BY date_received DESC LIMIT 1;
SELECT rowid, date_received, date_sent, conversation_id, mailbox, flags, message_id FROM messages WHERE mailbox = (SELECT rowid FROM mailboxes WHERE url = ?) AND deleted = '0' AND flags & 128 = 0
attached
not attached
SELECT COUNT(DISTINCT(messages.message_id)) %@;
SELECT mailboxes.url, COUNT(DISTINCT(messages.message_id)) %@ GROUP BY 1;
SELECT conversation_id FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) GROUP BY conversation_id ORDER BY MAX(date_received) LIMIT 1
:url
SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) ORDER BY date_received ASC LIMIT 1
SELECT m.ROWID, pm.sender FROM messages m JOIN protected.messages pm ON (m.ROWID = pm.message_id) WHERE m.conversation_id = :hash ORDER BY m.read, m.date_received
SELECT m.ROWID, pm.sender FROM messages m JOIN protected.messages pm ON (m.ROWID = pm.message_id) WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND m.conversation_id = :hash ORDER BY m.read, m.date_received
 LIMIT %ld
:hash
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' ORDER BY date_received DESC, ROWID DESC LIMIT :limit OFFSET :offset;
:limit
:offset
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN message_data ON selection.message_id = message_data.message_id AND message_data.part = :summaryPartName LEFT OUTER JOIN protected.message_data AS protected_message_data ON message_data.rowid = protected_message_data.rowid;
:summaryPartName
DELETE FROM temp_selected_messages;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0';
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN message_data ON selection.message_id = message_data.message_id AND message_data.part = :summaryPartName LEFT OUTER JOIN protected.message_data AS protected_message_data ON message_data.rowid = protected_message_data.rowid WHERE protected_message_data.data IS NULL;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' AND rowID >= :rowID LIMIT :limit
:rowID
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN message_data ON selection.message_id = message_data.message_id AND message_data.part = :summaryPartName LEFT OUTER JOIN protected.message_data AS protected_message_data ON message_data.rowid = protected_message_data.rowid ORDER BY rowid ASC;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE rowid >= 0 AND rowid <= :maxRowId ORDER BY rowid DESC LIMIT :limit;
:maxRowId
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, NULL, conversation_id, encoding, external_id, messages.message_id, NULL, unique_id FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' AND rowid >= :rowID;
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN message_data ON selection.message_id = message_data.message_id AND message_data.part = :summaryPartName LEFT OUTER JOIN protected.message_data AS protected_message_data ON message_data.rowid = protected_message_data.rowid WHERE protected_message_data.data IS NULL ORDER BY rowid ASC LIMIT :limit;
UPDATE mailboxes SET unread_count = ? WHERE url = ?
updating cached unread count
@8@?0@"NSString"4
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE flags&%llu = 0 AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND mailbox IN (%@)
url='%@'
SELECT ROWID FROM mailboxes WHERE %@
SELECT unread_count FROM mailboxes WHERE url = ?
SELECT flagged_count FROM mailboxes WHERE url = ?
SELECT attachment_count FROM mailboxes WHERE url = ?
SELECT to_cc_count FROM mailboxes WHERE url = ?
SELECT deleted_count FROM mailboxes WHERE url = ?
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND mailbox IN (%@)
SELECT count(*) FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) AND (flags & %llu = 0) AND deleted = '0'
SELECT total_count - deleted_count FROM mailboxes WHERE url = ?
SELECT COUNT(rowid) FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & %llu AND deleted = '0'
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags & %llu = 0) AND (deleted = '0') AND mailbox IN (%@)
SELECT total_count FROM mailboxes WHERE url = ?
SELECT server_unread_count FROM mailboxes WHERE url = ?
UPDATE mailboxes SET server_unread_count = ? WHERE url = ?
updating server unread-only-on-server count
%s FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY messages.date_received LIMIT 1
finding message with earliest date
%s FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND messages.remote_id = ? LIMIT 1
finding message for UID
%s FROM messages %s WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = :url)AND messages.remote_id IN (:beginset
:beginset
SELECT remote_id, flags FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY remote_id DESC
finding maximum remote ID
SELECT remote_id, flags FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY remote_id
SELECT sequence_identifier FROM mailboxes WHERE url = ?
loading mailbox sequence identifier
UPDATE mailboxes SET sequence_identifier = ? WHERE ROWID = ?
setting mailbox sequence identifier
SELECT MIN(sequence_identifier) FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id IN (?
%llu
loading per-message minimum sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE ROWID = ?
setting per-message sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE MAILBOX IN (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id IN(?
setting en masse per-message sequence identifier
SELECT ROWID, remote_id, flags, mailbox, date_received, date_sent, conversation_id, message_id, external_id FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY remote_id
SELECT ROWID, remote_id, flags, mailbox, date_received, date_sent, conversation_id, message_id, external_id FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id >= ? AND remote_id <= ? ORDER BY remote_id
fetching message details
SELECT ROWID, remote_id, flags, mailbox, date_received, date_sent, conversation_id, message_id, external_id FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id >= ? AND remote_id <= ? ORDER BY remote_id DESC LIMIT ?
SELECT messages.ROWID, remote_id, date_received, date_sent, flags, size, NULL, NULL, NULL, NULL, NULL, mailbox, original_mailbox, content_type, NULL, conversation_id, encoding, external_id, messages.message_id, NULL, unique_id FROM messages WHERE messages.ROWID = ? LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, flags, size, NULL, NULL, NULL, NULL, NULL, mailbox, original_mailbox, content_type, NULL, conversation_id, encoding, external_id, messages.message_id, NULL, unique_id FROM messages WHERE messages.ROWID = ? AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, messages.conversation_id, encoding, external_id, messages.message_id, unique_id, conversations.flags, messages.list_id_hash FROM messages JOIN protected.messages AS protected_messages ON messages.ROWID = protected_messages.ROWID LEFT OUTER JOIN message_data ON messages.ROWID = message_data.message_id AND message_data.part = 'summary' LEFT OUTER JOIN protected.message_data AS protected_message_data ON protected_message_data.rowid = message_data.rowid LEFT OUTER JOIN conversations ON messages.conversation_id = conversations.conversation_id WHERE messages.ROWID = ? LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, messages.conversation_id, encoding, external_id, messages.message_id, unique_id, conversations.flags, messages.list_id_hash FROM messages JOIN protected.messages AS protected_messages ON messages.ROWID = protected_messages.ROWID LEFT OUTER JOIN message_data ON messages.ROWID = message_data.message_id AND message_data.part = 'summary' LEFT OUTER JOIN protected.message_data AS protected_message_data ON protected_message_data.rowid = message_data.rowid LEFT OUTER JOIN conversations ON messages.conversation_id = conversations.conversation_id WHERE messages.ROWID = ? AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, NULL, NULL, NULL, NULL, NULL, mailbox, original_mailbox, content_type, messages.conversation_id, encoding, external_id, messages.message_id, NULL, unique_id, conversations.flags, messages.list_id_hash FROM messages LEFT OUTER JOIN conversations ON messages.conversation_id = conversations.conversation_id WHERE messages.ROWID = ? LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, NULL, NULL, NULL, NULL, NULL, mailbox, original_mailbox, content_type, messages.conversation_id, encoding, external_id, messages.message_id, NULL, unique_id, conversations.flags, messages.list_id_hash FROM messages LEFT OUTER JOIN conversations ON messages.conversation_id = conversations.conversation_id WHERE messages.ROWID = ? AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) LIMIT 1
AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) 
%s FROM messages %s WHERE messages.ROWID = ? %sLIMIT 1
finding message for ROWID
SELECT mailbox FROM messages WHERE rowid = ?
Getting mailbox of the current message for filtering conversations
SELECT conversation_id FROM messages WHERE rowid IN (SELECT message_id FROM threads WHERE reference IN (SELECT reference FROM threads WHERE message_id = ?));
Ref Ref Error! Ref!
SELECT conversation_id FROM messages WHERE message_id IN (SELECT reference FROM threads WHERE message_id = ?);
Ref Error!
SELECT messages.conversation_id FROM threads, messages WHERE reference IN (SELECT message_id FROM messages WHERE rowid = ?) AND messages.rowid = threads.message_id;
Deref error!
SELECT conversation_id FROM messages WHERE message_id = ? AND rowid != ?;
Message error!
SELECT threads.message_id, reference FROM threads LEFT OUTER JOIN messages ON reference = messages.message_id WHERE threads.message_id IN (SELECT rowid FROM messages WHERE conversation_id in (SELECT conversation_id FROM messages WHERE rowid = ?)) AND messages.rowid IS NULL
Getting references that do not exist in the DB in this conversation.
SELECT url FROM mailboxes WHERE ROWID = ?;
SELECT rowid FROM mailboxes WHERE url = ?;
-[MFMailMessageLibrary _canSelectMessagesWithOptions:db:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/MailMessageLibrary.m
NULL != db
SELECT conversation_id, sync_key FROM conversations WHERE sync_key NOT NULL
SELECT flags FROM conversations WHERE conversation_id = ?
fetching conversation flags
UPDATE conversations SET flags = ? WHERE conversation_id = ?
setting conversation flags
UPDATE conversations SET flags = ?, sync_key = ? WHERE conversation_id = ?
setting conversation flags and sync key
SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE message_id IN (%@)
finding conversation id
SELECT message_id FROM conversation_id_message_id WHERE conversation_id = ? ORDER BY date_sent DESC LIMIT ?
finding message ids for conversation id
SELECT value FROM properties WHERE key = ?
INSERT OR REPLACE INTO properties (key, value) VALUES (?,?)
DELETE FROM properties WHERE key = ?
%@ property %@
updating
deleting
DELETE FROM messages WHERE ROWID = ?
UPDATE pop_uids SET flags = ? WHERE mailbox = ? AND uid = ?
deleting message
clearing flags in pop_uids
DELETE FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes where url = '%q') AND flags & %d
deleting messages
UPDATE mailboxes SET url = '%q' WHERE url = '%q';
DELETE FROM mailboxes WHERE url = '%q'
deleting mailbox URL
renaming mailbox
DELETE FROM messages WHERE mailbox = %d
deleting all messages from mailbox
DELETE FROM mailboxes WHERE rowid = %d
deleting mailbox row
%@ LIKE '%@%%' ESCAPE '\'
%@ LIKE '%%%@%%' ESCAPE '\'
SELECT url FROM mailboxes WHERE %@
fetching mailboxes for accountURL
DELETE FROM messages WHERE ROWID IN (SELECT ROWID FROM messages WHERE mailbox = %d LIMIT %d)
deleting mailbox
Messages
%@.%@.%@
emlxpart
SELECT rowid FROM message_data WHERE message_id = ? AND part = ?
searching for existing message_data entry
INSERT INTO message_data (message_id, part, partial, complete, length) VALUES (:message_id, :part, :partial, :complete, :length)
UPDATE message_data SET message_id = :message_id, part = :part, partial = :partial, complete = :complete, length = :length WHERE rowid = :rowid
:part
:partial
:complete
:length
inserting message data (unprotected)
INSERT OR REPLACE INTO protected.message_data (message_data_id, data) VALUES (%u, NULL);
INSERT OR REPLACE INTO protected.message_data (message_data_id, data) VALUES (%u, X'%s');
INSERT OR REPLACE INTO protected.message_data (message_data_id, data) VALUES (%u, %Q);
INSERT OR REPLACE INTO protected.message_data (message_data_id, data) VALUES (:message_data_id, :data)
:message_data_id
:data
inserting message data (protected)
INSERT OR REPLACE INTO message_metadata (message_id, key, data) VALUES (:message_id, :key, :data)
:key
inserting metadata
SELECT data FROM message_metadata WHERE message_id = :message_id AND key = :key
fetching metadata
SELECT key, data FROM message_metadata WHERE message_id = :message_id
fetching all metadata
SELECT data FROM protected.message_data WHERE rowid = (SELECT rowid FROM message_data WHERE message_id = ? AND part = ?)
fetching message data
@12@?0r^v4i8
DELETE FROM protected.message_data WHERE message_data_id IN (SELECT rowid FROM message_data WHERE message_id = ? AND (part IS NULL OR part == ? ))
Deleting rows from protected index
Preparing delete statement
DELETE FROM message_data WHERE message_id = ? AND (part IS NULL OR part == ? )
Deleting rows
SELECT complete FROM message_data WHERE message_id = ? and part = ?
SELECT length FROM message_data WHERE message_id = ? AND part IS NULL
fetching data length
addresses AS sender JOIN messages ON sender.ROWID = messages.sender %s
addresses AS recipient JOIN recipients on recipient.ROWID = recipients.address_id JOIN messages ON recipients.message_id = messages.ROWID %s
attachments AS attachment JOIN messages ON attachment.message_id = messages.ROWID %s
mailboxes JOIN messages ON mailboxes.ROWID = messages.mailbox %s
messages %s
@"MFMessageCriterion"8@?0@"MFMessageCriterion"4
%s FROM %s WHERE %s
%s FROM %s WHERE %s%s
 ORDER BY date_received%s, messages.ROWID%s
 DESC
 LIMIT %lu OFFSET %lu
preparing statement for iteration
INSERT INTO accounts (text_id) VALUES (?)
creating an entry for an account
SELECT ROWID FROM accounts WHERE text_id = ? LIMIT 1
getting an account library ID
DELETE FROM accounts WHERE text_id = ?
deleting an account entry
 AND messages.mailbox+0 IN (SELECT ROWID FROM mailboxes WHERE %@) 
INSERT INTO offline_cache_operations (account_id, completed, last_temporary_id, operation_data) VALUES (?, '0', ?, ?)
appending an operation to the offline cache
UPDATE offline_cache_operations SET completed = '1' WHERE rowid = ? 
deleting offline cache operations
SELECT ROWID, last_temporary_id, operation_data FROM offline_cache_operations WHERE account_id = ? AND completed = '0' ORDER BY rowid ASC
getting offline cache operation blob
getting offline cache operations
INSERT INTO offline_cache_replay_data (account_id, replay_data) VALUES (?, ?)
appending replay data to the offline cache
SELECT replay_data FROM offline_cache_replay_data WHERE account_id = ? ORDER BY rowid ASC
getting offline cache replay data blob
processing offline cache replay data
DELETE FROM offline_cache_operations WHERE account_id = ?
DELETE FROM offline_cache_replay_data WHERE account_id = ?
deleting offline cache replay data
UPDATE pop_uids SET del = 1 WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND uid = ?;
setting pop_uid.del = 1
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND del NOT NULL;
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND del =  1;
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?);
SELECT uid FROM pop_uids AS uid LEFT OUTER JOIN messages AS message ON uid.mailbox = message.remote_mailbox AND uid.uid = message.remote_id WHERE uid.mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND message.rowid IS NULL OR (message.flags & 2) > 0;
SELECT message_id FROM messages_deleted
collecting deleted message identifiers
DELETE FROM protected.messages WHERE rowid IN (SELECT * FROM messages_deleted)
DELETE FROM protected.message_data WHERE rowid IN (SELECT * FROM message_data_deleted)
DELETE FROM messages_deleted
DELETE FROM message_data_deleted
cleaning up protected tables
v16@?0@"NSString"4I8^B12
performing data consistency check
i8@?0@"NSString"4
SELECT MAX(rowid) FROM protected.messages
SELECT MAX(rowid) FROM messages
SELECT COUNT(*) FROM messages WHERE conversation_id IS NULL
DELETE FROM messages WHERE rowid > ?
DELETE FROM protected.messages WHERE rowid > ?
repairing database after consistency check failure
INSERT OR REPLACE INTO properties (key, value) VALUES (?, (SELECT MAX(message_id) FROM protected.messages))
checkpoint_protected_messages
checkpointing protected database (message)
INSERT OR REPLACE INTO properties (key, value) VALUES (?, (SELECT MAX(message_data_id) FROM protected.message_data))
checkpoint_protected_message_data
checkpointing protected database (message_data)
DELETE FROM messages WHERE rowid > (SELECT value FROM properties WHERE key = ?)
rolling back after journal merge failure (message)
DELETE FROM message_data WHERE rowid > (SELECT value FROM properties WHERE key = ?)
rolling back after journal merge failure (message_data)
-[MFMailMessageLibrary contentProtectionStateChanged:previousState:]
0 && "Device is unlocked but Protected Data is not available"
-[MFMailMessageLibrary _reconcileAfterKeybagUnlock]
kMFMailMessageLibraryProtectedDataUnreconciled == _protectedDataAvailability
CREATE TEMPORARY TABLE temp_selected_messages (message_id INTEGER);
protected
PRAGMA %@.freelist_count;
PRAGMA %@.page_count;
PRAGMA %@.incremental_vacuum(%d);
main
beginning transaction
committing transaction
rolling back transaction
-[MFMailMessageLibrary _connectionForWriting:]
nil != result
wrapper.writer
-[MFMailMessageLibrary unlockDB:]
connection.db == db
connection wrapper replaced without %@ connection %p being checked in to its pool %p. (%@)
writer
reader
-[MFMailMessageLibrary _activeConnectionWithDB:]
nil != connection
[connection db] == db
Envelope Index
Protected Index
Access to protected data went away during transaction (NOT a crash)
SavedFolders
DELETE FROM conversations WHERE sync_key IS NULL AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE date_sent > ?) AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM messages)
pruning conversation tables
UPDATE messages SET content_index_transaction_id = NULL WHERE content_index_transaction_id > :tid
UPDATE spotlight_tombstones SET transaction_id = NULL WHERE transaction_id > :tid
:tid
invalidating spotlight %@ transaction identifiers
B12@?0@"NSString"4@"NSString"8
tombstone
v16@?0{_NSRange=II}4^B12
UPDATE spotlight_tombstones SET transaction_id = :tid WHERE type = :type AND identifier IN 
DELETE FROM spotlight_tombstones WHERE type = :type AND identifier IN 
:type
assigning spotlight tombstone transaction identifiers
v20@?0^@4{_NSRange=II}8^B16
DELETE FROM spotlight_tombstones WHERE transaction_id < :tid
purging old tombstone identifiers
(:identifier
:identifier
SELECT ROWID FROM messages WHERE
UPDATE messages SET content_index_transaction_id = :tid WHERE
assigning content index transaction identifiers
 ROWID IN (:rowid
%s FROM messages %s WHERE content_index_transaction_id IS NULL AND deleted = '0' %@ ORDER BY date_received DESC, messages.ROWID LIMIT %lu
SELECT type, identifier FROM spotlight_tombstones WHERE transaction_id IS NULL
INSERT OR REPLACE INTO spotlight_tombstones (type, identifier) VALUES (:type, :identifier)
inserting spotlight tombstone
v16@?0@"MFLibraryMessage"4I8^B12
%@.%u
UPDATE messages SET content_index_transaction_id = NULL
 WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE %@)
 WHERE mailbox = %u
resetting content index transaction identifiers
SELECT url FROM mailboxes
getting mailbox URLs
searchableIndex
T@"MFLibrarySearchableIndex",&,N,V_searchableIndex
T@"<MFMailMessageLibraryDelegate>",N
protectedDataAvailability
pendingIndexItemsCount
connection wrapper %p deallocated without %@ connection %p being checked in to its pool %p.
-[_MFLibrarySQLiteConnectionWrapper decrementRefcount]
_refcount > 0
connection
T@"MFProtectedSQLiteConnection",R,N,V_connection
TB,R,N,V_writer
refcount
TI,R,N,V_refcount
invalid
TB,N,V_invalid
transmogrifier
T@?,C,N,V_transmogrifier
SELECT 1 FROM messages WHERE ROWID = ?;
testing for message existence
SELECT length FROM message_data WHERE message_id = ? AND part = ?
DELETE FROM message_data WHERE message_id = ? AND part = ?
DELETE FROM message_data WHERE message_id = ? AND part IS NULL
deleting message data
<%@:%p libraryID=%u uid=%u flags=0x%x>
_IsAllowedToAccessProtectedData
nil != userAgent
UPDATE messages SET flags = :flags, read = :read, flagged = :flagged, deleted = :deleted, sender_vip = :sender_vip, encoding = :encoding, remote_id = :uid WHERE ROWID = :rowid
:uid
sender_vip
, %@ = '%d'
v16@?0@"NSString"4@8^B12
audio
video
INSERT INTO mailboxes (url) values ('%q')
inserting mailbox URL
SELECT messages.conversation_id 
SELECT rowid, date_received, date_sent, messages.conversation_id, mailbox, messages.flags, messages.message_id
SELECT COUNT(DISTINCT(message_id)) 
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, %s, %s, %s, %s, %s, mailbox, original_mailbox, content_type, %s, messages.conversation_id, encoding, external_id, messages.message_id
protected_messages.subject
protected_messages.sender
protected_messages._to
protected_messages.cc
protected_messages.bcc
protected_message_data.data
 JOIN protected.messages AS protected_messages ON messages.ROWID = protected_messages.ROWID
 JOIN mailboxes AS mailbox ON messages.mailbox = mailbox.ROWID
 LEFT OUTER JOIN message_data ON messages.ROWID = message_data.message_id AND message_data.part = 'summary' LEFT OUTER JOIN protected.message_data AS protected_message_data ON protected_message_data.rowid = message_data.rowid
 JOIN conversations AS conversations ON messages.conversation_id = conversations.conversation_id
%s%s%s%s
SELECT ROWID, url FROM mailboxes
selecting mailbox URLs
%@.partial.%@
emlx
%@.%@
SELECT %@ FROM message_data AS a JOIN protected.message_data AS b ON a.rowid = b.rowid AND a.rowid = (SELECT rowid FROM message_data WHERE message_id = ? AND %@)
b.data, a.complete
part = ?
PART IS NULL
b.data
part = ? AND complete IS NOT NULL
part IS NULL AND complete IS NOT NULL
%@ AND partial IS NULL
loading UIDs to delete
_writeDataHolderForMessageAndPart
directory
BOOL _writeDataHolderForMessageAndPart(MFMailMessageLibrary *, LibraryID, NSString *, NSString *, NSString *, MFDataHolder *, BOOL, BOOL)
cannot write partial MIME parts.
-[MFLibrarySearchableIndex init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/LibrarySearchableIndex.m
com.apple.message.searchableIndex
com.apple.message.searchableIndex.indexingQueue
com.apple.message.searchableIndex.dataSource
v8@?0@"NSDictionary"4
[middleware conformsToProtocol:@protocol(MFLibrarySearchableIndexMiddleware)]
==== Searchable Index State ====
  transaction:                    %lld
  active:                         %@ (rc=%lld)
  foreground:                     %@
  client state fetched:           %@
  coalesce timer fired:           %@
  scheduled processing:           %@
  needs refresh:                  %@
  scheduled refresh:              %@
  needs verification:             %@
  scheduled verification:         %@
  indexing batch size:            %lu
  data source batch size:         %lu
  maximum batch size:             %lu
  remaining time budget:          %.4fs
  remaining item overage budget:  %ld
  pending items:                  %lu (%p)
  pending removals:               %lu (%p)
  pending domain removals:        %lu (%p)
Indexed Empty Subjects:
%@-%@
date
budget
com.apple.mobilemail.spotlight.underDailyBudget
com.apple.mobilemail.spotlight.exceededDailyBudget
com.apple.message.resetIndexingBudgetTimer
v8@?0@"NSObject<OS_xpc_object>"4
com.apple.mobilemail.spotlight.verificationFailed
v8@?0I4
com.apple.message.spotlightVerification
DisableSpotlightVerification
SpotlightState.json
v8@?0@"_MFLibrarySearchableIndexClientState"4
suspending
already suspended
still resumed
MFLibrarySearchableIndex
state
pending
resuming
already resumed
still suspended
@"MFLibrarySearchableIndexItem"8@?0@"NSString"4
com.apple.mobilemail.spotlight.indexingTime
@"NSNumber"8@?0@"NSDictionary"4
-[MFLibrarySearchableIndex _indexItems:fromRefresh:]_block_invoke
item != otherItem
@"NSString"8@?0@"MFLibrarySearchableIndexItem"4
B16@?0@"MFLibrarySearchableIndexItem"4I8^B12
B8@?0@"MFLibrarySearchableIndexItem"4
@"NSArray"4@?0
transaction
Tq,R,G_transaction
foreground
TB,N,G_isForeground,S_setForeground:
dataSource
T@"<MFLibrarySearchableIndexDataSource>",N,V_dataSource
yyyy-MM-dd HH:mm:ssZ
<%@: %p> version=%@ date=%@ transaction=%lld
build
Tq,N,V_transaction
transactionValue
T@"NSNumber",R,N
transactionDate
T@"NSDate",&,N,V_transactionDate
systemBuildVersion
T@"NSString",C,N,V_systemBuildVersion
<%@: %p> %@ %@
criterion
T@"MFMessageCriterion",&,N,V_criterion
mailboxIDs
T@"NSIndexSet",C,N,V_mailboxIDs
<%@: %p> %lu added items, %lu removed items, %lu removed domains
addedIndexItems
T@"NSArray",C,N,V_addedIndexItems
removedIdentifiers
T@"NSArray",C,N,V_removedIdentifiers
removedDomainIdentifiers
T@"NSArray",C,N,V_removedDomainIdentifiers
-[MFLibrarySearchableIndexItem init]
T@"NSString",R,C,N,V_identifier
domainIdentifier
T@"MFMailMessage",R,&,N,V_message
searchableItem
T@"CSSearchableItem",R,&,N,V_searchableItem
bodyData
T@"NSData",&,N,V_bodyData
hasCompleteBodyData
TB,N,V_hasCompleteBodyData
v16@?0@"<NSCopying>"4@"NSSet"8^B12
identifiers
purgedIdentifiers
deletedIdentifiers
B16@?0@"NSSet"4@"NSSet"8@"NSSet"12
ProgressiveMimeParseErrorDomain
Data is not as long as reported
Unable to parse Content-type header in top-level part
No Content-type header found in top-level part
Invalid parser state (%d)
HTTP MD5 Digest
realm
nonce
cnonce
digest-uri
response
maxbuf
utf-8
stale
algorithm
md5-sess
cipher-opts
rspauth
auth
auth-int
auth-conf
%08x
Digest session key to server-to-client signing key magic constant
Digest session key to client-to-server signing key magic constant
AUTHENTICATE
:00000000000000000000000000000000
MFWalkUpDAErrorChain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/DataAccess/DAMailAccount.m
error && "Error ref passed in to here must not be NULL."
ExchangeActiveSync
Exchange ActiveSync
Exchange
DAMailAccount_OfflineCacheLock
%@%@
DAChangedFolders
SEARCH_ALL_MAILBOXES
Main
kDAMailAccountAllMailboxesFolderID
com.apple.Preferences
com.apple.dataaccess.dataaccessd
com.apple.Accounts
com.apple.datamigrator
com.apple.managedconfiguration.profiled
v8@?0@"MFOfflineCacheOperation"4
junk e-mail
junk email
should never make account conduits in %@.
folderID must be non-nil
v8@?0@"MFDAFolderChangeResult"4
EASOfflineFolderActions
&<>:;/()+'"\
MAILBOX_NAME_INCLUDES_SPECIAL_CHARACTERS
This account does not allow mailbox names containing "%@".
MCAccountIsManaged
B8@?0@"MFLibraryMessage"4
requested relative path for unsupported mailbox type %d
exchangeAccountIcon
outlookAccountIcon
HatesAppleDesign
Expected a DAMailbox
B8@?0@"MFOfflineCacheOperation"4
reachable
unreachable
SMIME_MISSING_REMOTE_ENCRYPTION_CERT_MESSAGE
An encryption certificate for "%@" could not be found on the server. Without a certificate, you can't encrypt messages sent to this address.
MIME_GENERIC_REMOTE_ENCRYPTION_CERT_MESSAGE
An error occurred while retrieving the encryption certificate.
SMIME_CANT_ENCRYPT_TITLE
Unable to Encrypt
virtualAllSearchMailbox
T@"MFMailboxUid",&,N,V_virtualAllSearchMailbox
<%@:%p (relative path=%@, attributes=0x%x, folderID=%@)>
folderID
T@"NSString",C
MFDAMailAccountConsumer_doneCondition
should have same number of requests and consumers
_MFDAResolveRecipientsConsumer_Lock
T@"NSError",R
DAFolderID
70FB9178-576E-4CAA-A08E-F68D57BFD01E
DAMailboxUid
R %@
S %@
predictor
T@"<MFMailboxPredictor>",&,N,V_predictor
cache
T@"NSCache",&,N,V_cache
cacheKeysByProperty
T@"NSMutableDictionary",&,N,V_cacheKeysByProperty
191AF69B-0088-47D2-AD66-6C9D08949C46
meeting.ics
-[MFDAMessageStore fetchNumMessages:preservingUID:options:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/DataAccess/DAMessageStore.m
[[self library] isKindOfClass:[MFMailMessageLibrary class]]
update consumer queue should be empty at this point.
-[MFDAMessageStore _remoteIDsMatchingSearchText:predicate:limit:filterByDate:handler:]
v12@?0i4@"MFMailMessageStoreSearchResult"8
-[MFDAMessageStore issueFlagUpdates:forMessages:]
should only have LibraryMessages in %s
-[MFDAMessageStore loadMeetingExternalIDForMessage:]
-[MFDAMessageStore loadMeetingDataForMessage:]
-[MFDAMessageStore loadMeetingMetadataForMessage:]
calendar
rfc822
was cancelled
timed out
-[MFDAMessageStore _fetchDataForMimePart:range:isComplete:consumer:]
pending-draft
backedByVirtualAllSearchMailbox
TB,N,V_backedByVirtualAllSearchMailbox
shouldSend
fetchable messages should have non-zero generationNumer
-[_MFDADeferredSetFlagsOperation initWithCoder:]
OnFlags
OffFlags
-[_MFDADeferredSetFlagsOperation encodeWithCoder:]
-[_MFDADeferredSetFlagsOperation performWithAccount:offlineCache:]
[offlineCache selectedMailboxID]
%@ message-id "%@", on-flags %llu, off-flags %llu
-[_MFDADeferredDeleteMessageOperation initWithCoder:]
-[_MFDADeferredDeleteMessageOperation encodeWithCoder:]
-[_MFDADeferredDeleteMessageOperation performWithAccount:offlineCache:]
monitor
T@"MFActivityMonitor",&,N,Vmonitor
T@"MFError",&,N,Verror
IPM.Note
should only reach here in the error case.
done
@"<NSCopying>"8@?0@"MFDAMessage"4
v16@?0@"MFMailboxUid"4@"NSArray"8^B12
latestDateToAdd
T@"NSDate",&,N,VlatestDateToAdd
searchResult
T@"MFMailMessageStoreSearchResult",R,&,N,VsearchResult
succeeded
TB,R,N,V_succeeded
T@"MFError",&,N,V_error
data
T@"NSData",&,N,V_data
store
T@"MFDAMessageStore",&,N,V_store
should not get streaming responses
streamConsumer
T@"<MFDAStreamingContentConsumer>",&,N,V_streamConsumer
hasLocalCopyOfData
TB,N,V_hasLocalCopyOfData
T@"MFMessageLibrary",&,N,V_library
T@"MFMessage",&,N,V_message
progressFilter
T@"MFProgressFilterDataConsumer",&,N,V_progressFilter
expectedLength
TI,N,V_expectedLength
dataWasBase64
TB,R,V_dataWasBase64
fetchSucceeded
TB,R,V_fetchSucceeded
multipart/alternative; boundary="%@"
Unknown remote identifier. No valid longID or serverID found
@sum.size
DAMailMessage
T@"DAMailMessage",R,N,V_DAMailMessage
ASHTTPConnectionErrorDomain
Ti,R,N,V_status
bytesRead
TI,R,N,V_bytesRead
bytesWritten
TI,R,N,V_bytesWritten
%@ Path:%@ Data:%lu Uncompressed:%lu Range:[%lu:%lu]
IO error
Invalid compression level
Invalid or incomplete deflate data
Out of memory
Buffer error
Zlib version mismatch
1.2.8
Archive entry has no contents assigned
v12@?0@"NSData"4@"NSError"8
path
T@"NSString",&,V_path
uncompressedSize
Ti,V_uncompressedSize
compressedRange
T{_NSRange=II},V_compressedRange
isDeflated
TB,V_isDeflated
T@"NSData",&,V_contents
MFFileArchiveErrorDomain
condition
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/RequestQueue.m
nobody should be waiting at -dealloc time
AccountConfigUsernameIncludesDomain
POPAccount
IMAPAccount
service
note
unsupported
null
UTF-8
domain
cellular-data
TestAccountConfiguration
EasySetupHost
mdev.apple.com
EasySetupUseSSL
iphone-services.apple.com
https
http
/iconfig/conf
POST
Apple iPhone MailConfig v%@
User-agent
domain=%@&carriers=%@&version=1
EmailDomains
Protocol
protocol
IMAP
requires
port
authentication
usernameIncludesDomain
Incoming
Outgoing
future
T@"MFFuture",R,N
T@"NSURLResponse",R,N,V_response
attachmentContext
T@"MFAttachmentCompositionContext",&,N,V_attachmentContext
originalConversationId
Tq,N,V_originalConversationId
com.apple.mobilemail.sentMessageSize
MFStreamEventCanAcceptBytes
MFStreamEventHasBytesAvailable
MFStreamEventErrorOccurred
MFStreamEventEndEncountered
MFStreamDispatchQueue
v12@?0@"MFStream"4@"NSString"8
-[MFStream openToHostName:port:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/_NSSocket.m
(nil == _rStream) && (nil == _wStream)
StreamOpen
stream
host
StreamClose
-[MFStream read:maxLength:]
(0 < _length)
 error: 
-[MFStream write:maxLength:]
_streamCanWrite
closed the write half
closed the read half
-[MFStream stream:handleEvent:]
isReadStream
%@ stream %@%@
write
error: 
ended
streamError
isOpen
trust manager said deny
user said deny
v8@?0i4
trust manager said prompt, but we're not allowed to prompt
kSSLProtocolUnknown
kSSLProtocol3
kTLSProtocol1
kTLSProtocol11
kTLSProtocol12
kDTLSProtocol1
kSSLProtocol2
kSSLProtocol3Only
kTLSProtocol1Only
kSSLProtocolAll
unknown-protocol-version(%d)
start SSL
SSL negotiation failed
Connection timed out while negotiating SSL
Failed to set SSL properties
CFReadStreamSetProperty()
set security protocol
SocketTimeout
LowThroughputThreshold
LowThroughput
threshold
low throughput
v8@?0^{__CFReadStream=}4
connect
timeout
Ti,N,V_numTimeoutSecs
allowsTrustPrompt
TB,N,V_allowsTrustPrompt
usesOpportunisticSockets
TB,N,V_usesOpportunisticSockets
disableEphemeralDiffieHellmanCiphers
TB,N,V_disableEphemeralDiffieHellmanCiphers
clientCertificates
T@"NSArray",&,N,V_clientCertificates
accountIdentifier
T@"NSString",C,N,V_accountIdentifier
serverCertificates
remoteHostname
remotePortNumber
sourceIPAddress
T@"NSData",R,N
isReadable
isWritable
isCellularConnection
isValid
MFMailAttachmentUploadLimitKey
MFMailAttachmentMessageLimitKey
MFMailAttachmentMailDropThresholdKey
MFMailAttachmentPlaceholderThresholdKey
MFMailAttachmentPlaceholdersAvailableKey
MFMailAttachmentMailDropAvailableKey
MFMailAttachmentMailDropConfiguredKey
DisableMailDropCellularLimit
MailDropLowerLimit
MailDropShortExp
mailDrop
whitelistedDownloadDomains
.digitalhub.com
.icloud.com
.icloud-content.com
AttachmentPlaceholderLowerLimit
B8@?0@"MFMessageReferenceContext"4
i12@?0@"MFMessageReferenceContext"4@"MFMessageReferenceContext"8
MFReloadNetworkLoggingNotification
LogActivityOnAllPorts
LogActivityOnPort
LogActivityOnHost
logLock
%@ _socket: %p
-[MFConnection _setupSocketWithSettings:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Accounts.subproj/Connection.m
_socket
DONT_KNOW_SERVICE_PORT
Can't determine port to use for the TCP/IP service "%@".
AUTH_NOT_SUPPORTED_FORMAT
The %@ server "%@" doesn't support %@ authentication. Please check your account settings and try again.
AUTH=
-[MFConnection writeBytes:length:dontLogBytesInRange:]
Z_STREAM_ERROR != err
Internal error: -[%@ %@] needs to be implemented in a concrete subclass.
-[MFConnection startCompression]
zlibStream
==== Connection State ====
    Host: %@
    Port Number: %u
    SSL Version: %@
    Socket: %p
    Thread: %p
isFetching
TB,N
lastUsedTime
capabilities
authenticationMechanisms
securityProtocol
hasBytesAvailable
loginDisabled
%@<%@>:%d %s SSL (%s)%s%s%s%@
direct
indirect
 (opportunistic)
 disallows trust prompt
, source application: 
certUIService
T@"NSString",C,N,V_certUIService
T@"NSString",C,N,V_hostname
serviceName
T@"NSString",C,N,V_serviceName
T@"NSArray",C,N,V_clientCertificates
portNumber
TI,N,V_portNumber
usesSSL
TB,N,V_usesSSL
tryDirectSSL
TB,N,V_tryDirectSSLConnection
CONNECTED
READ
READ(encrypted)
WROTE
WROTE(encrypted)
CONNECTION_TIMED_OUT
The connection to the server "%@" on port %d timed out.
HOST_UNREACHABLE
The server "%@" cannot be contacted on port %d.
MF_SSL_CONNECTION_FAILURE
Mail was unable to connect to server "%@" using SSL on port %d. Verify that this server supports SSL and that your account settings are correct.
CONNECTION_REFUSED
The server "%@" refused to allow a connection on port %d.
CONNECTION_FAILED
The mail server "%@" is not responding. Verify that you have entered the correct account info in Mail settings.
SSL_CERT_CHAIN_INVALID_FORMAT
The certificate for the server is invalid.
SSL_BAD_CERT_FORMAT
The format of the certificate for the server is bad.
SSL_UNKNOWN_ROOT_CERT_FORMAT
The root certificate for this server could not be verified.
SSL_NO_ROOT_CERT_FORMAT
There is no root certificate for this server.
SSL_CERT_EXPIRED_FORMAT
The certificate for this server has expired.
SSL_HOST_MISMATCH_MESSAGE
The certificate hostname does not match "%@".
SSL_GENERIC_READ_ERROR
An SSL error occurred while trying to read data from the server "%@". Verify that this server supports SSL and that your account settings are correct.
SSL_ALERT_TITLE_FORMAT
Unable to verify SSL server %@
[Omitted]
SSL_GENERIC_WRITE_ERROR
An SSL error occurred while trying to provide data to the server "%@". Verify that this server supports SSL and that your account settings are correct.
_fillBuffer
attachmentDownloadQueue
T@"MFInvocationQueue",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/MFAttachmentComposeManager.m
attachments already contains %@
v16@?0I4I8I12
v16@?0B4@"NSError"8B12
FetchDataForURL
com.apple.message.MFAttachmentComposeManager
x-attach-compose://%@
x-attach-maildrop-image
MailDrop
@"NSPredicate"8@?0@"NSString"4
@"NSPredicate"8@?0@"MFMessageCriterion"4
MonitoredActivityStarted
MonitoredActivityEnded
MonitoredActivityDidAddActivityTarget
MonitoredActivityDidRemoveActivityTarget
MonitoredActivityPrimaryTargetChanged
MonitoredActivityMessage
NetworkConnectionEstablished
MonitoredActivityDictMessage
MonitoredActivityCurrentCount
MonitoredActivityMaxCount
MonitoredActivityReset
MonitoredActivityCurrentItemProgress
MonitoredActivityOldPrimaryTarget
MonitoredActivityNewPrimaryTarget
MonitoredActivityInvocation
MonitoredActivityReasonCompacting
MonitoredActivityReasonFetching
MonitoredActivityReasonArchiving
MonitoredActivityReasonDeleting
MonitoredActivityReasonJunking
MonitoredActivityReasonMoving
MF_INDETERMINATE_PROGRESS_FORMAT
%@...
RESET
[%@] %@
AddedTarget
RemovedTarget
T@"MFMailboxUid",&,V_mailbox
canBeCancelled
shouldCancel
isRemoteSearch
TB,N,V_isRemoteSearch
v8@?0@"NSNotification"4
Exception raised during monitored invocation of %@, exception: %@
<%@: %p priority: %d target: %@ selector: %s lowPriority: %@>
T@"MFActivityMonitor",R,N,V_monitor
isLowPriority
TB,N,V_isLowPriority
powerAssertionId
T@"NSString",C,N,V_powerAssertionId
downloadPromise
primaryConsumer
v8@?0@"MFFileArchiveDirectory"4
com.apple.mobilemail.MailDropDownload
com.apple.mobilemail.MailDropDownloadWIFIOnly
NetworkConfigurationDidChangeNotification
MFNetworkSimulationBitfieldKey
NetworkSymptonsHasAlternativeAdvice
wi-fi
com.apple.wifi.plist
com.apple.mail.radioPreferences
com.apple.symptoms.hasAlternateAdvice
-[MFNetworkController dealloc]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/MFNetworkController.m
NULL == _telephony
NULL == _store
NULL == _reachability
==== Network Controller State ====
    reachability flags: 0x%02x
    has DNS: %s
    wifi enabled: %s
    data context interface ID: %d
    has cell data: %s
    data status indicator: %@
    roaming allowed: %s
    calls: %lu
    background wifi clients: %lu
awdNetworkDiagnosticReport
T@"AWDMailNetworkDiagnosticsReport",R,N
com.apple.message.mfnetworkcontroller
%s (%d)
InvocationQueue_lock
DebugWorkerThreads
MFInvocationQueue starting invocation %p [%s %s]
MFInvocationQueue finished invocation %p [%s %s] in %5.5fs
==== %@Invocation Queue <%@: %p> ====
Shared 
number of running threads: %d
==== Queued ====
  %@
(empty)
maxThreadCount
TI,N
threadPriorityTrigger
Ti,N,V_threadPriorityTrigger
threadRecycleTimeout
Td,N,V_threadRecycleTimeout
invocationCount
threadCount
TI,R,N,V_numThreads
com.apple.message.InvocationQueueState
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/MainThread.m
Couldn't find signature for target %p selector %@
com.apple.Message
Message
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Message.subproj/MFMessageCollectionInfo.m
Trying to add a messageInfo that has a different conversationHash from this collectionInfo
isEmpty
messagesCount
messageCountWithDuplicates
messageCollectionHash
Tq,R,N,V_messageCollectionHash
stickyPlaceholder
T@"MFMessageInfo",&,N,V_stickyPlaceholder
probe_message_update
probe_message_add
probe_message_delete
CREATE TEMPORARY TRIGGER probe_message_update AFTER UPDATE OF flags ON messages BEGIN SELECT probe_message_update(OLD.ROWID, OLD.flags, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_add AFTER INSERT ON messages BEGIN SELECT probe_message_add(NEW.ROWID, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_delete AFTER DELETE ON messages BEGIN SELECT probe_message_delete(OLD.ROWID, OLD.flags, OLD.message_id, OLD.mailbox); END
ROW: %u; 
Count: %ld -> %ld; 
Flags: %llu -> %llu (
R: %@ -> %@ | 
SR: %@ -> %@ | 
TSR: %@ -> %@ ); 
dup msgs: %lu;
#Update
SELECT message_id FROM messages WHERE message_id = ? AND rowid != ? AND flags&2 > 0 AND mailbox = ? AND (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0)
SELECT unread_count FROM mailboxes WHERE ROWID = ?
Flags: %llu (
R: %@ | 
SR: %@ | 
TSR: %@ ); 
#Add
#Delete
MFMessageErrorDomain
UserFriendlyErrorDescription
RecoveryAttemptorClassName
RequestedWebLoginURLKey
MSG_SERVER_ERROR
The server error encountered was: %@
MFSSLErrorCertificateKey
MFSSLErrorCertificateDigestKey
_MFShortDescription
MFNoErrorLog
Account Is Locked Out
Unrecoverable Server Error
User Cancelled
Internal
Generic
Unknown Service
Authentication Failed
Server Unavailable
Command Failed
Unsupported Feature
Encryption
Signature
User Confirmation Required
Character Set
No Internet Connection
No Host
Socket Read
Invalid Sender
No Recipients
Invalid Recipient
Sender Mailbox Full
Missing Password
Inaccessible Password
Login Disabled
Account In Use
No Delivery Accounts Configured
Missing Identity
Message Rejected
Message Too Large
Data Blocked By Call
Account Needs Web Login
Unknown Error Code %d
_MFMoreInfo
FORWARDED_MESSAGE_PREFIX
Begin forwarded message:
modSequenceNumber
shouldUseMailDrop
TB,N,V_shouldUseMailDrop
_Encoding
MFUIFocusedMessageDidChange
x-apple-msg-load
Library
Mail
&aid=%@
<BR>
Reply-To
Subject
Date
Resent-To
Resent-Cc
Resent-From
&nbsp; 
<B>%@:</B> 
<B>%@</B><BR>
%@<BR>
<%@: %p> min=%lu, max=%lu, remaining=%lu
fetchMinBytes
TI,N,V_fetchMinBytes
fetchMaxBytes
TI,N,V_fetchMaxBytes
minBytesLeft
TI,N,V_minBytesLeft
-[MFDAMailAccountSyncConsumer initWithCurrentTag:accountID:requests:consumers:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/DataAccess/DAMailAccountSyncConsumer.m
requests.count == consumers.count && "Number of requests does not match number of consumers"
we failed to find a sync actions consumer! requests: %@
DOWNLOADING_STATUS
Downloading
T@"NSString",R,N,V_tag
T@,&,N,V_streamConsumer
moreAvailable
TB,R,N,V_moreAvailable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/DataAccess/DAMessageContentConsumer.m
sanity check 
 removal
sanity check 
 removal.
requestedFormat
Ti,N,V_requestedFormat
dataConsumer
T@"<MFCollectingDataConsumer>",&,N,V_dataConsumer
alternatePartConsumer
T@"<MFCollectingDataConsumer>",&,N,V_alternatePartConsumer
consumerFactory
T@"<MFMessageDataConsumerFactory>",&,N,V_consumerFactory
T@"DAMailMessage",R,&,N,V_message
T@"NSMutableData",R,&,N,V_bodyData
timeOfLastActivity
Td,R,N,V_timeOfLastActivity
@"NSNumber"8@?0@"MFMailMessage"4
@"NSString"8@?0@"NSString"4
B8@?0@"NSString"4
=FA=CA=DE{
fileURL
contentID
application/x-apple-placeholder
%@ %lu [%@] @ %@ : %@ [%s]
@"<MFFuture>"8@?0@"NSData"4
AttachmentPlaceholders
^([0-9]+)\.([0-9]+)\.([0-9]+)([ ]+)(.*)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Delivery.subproj/SMTPResponse.m
MF_SMTP_RECIPIENT_UNKNOWN
The recipient "%@" was rejected by the server because the user is unknown.
MF_SMTP_RECIPIENT_RELAYING_NOT_ALLOWED
The recipient "%@" was rejected by the server because it does not allow relaying.
MF_SMTP_RECIPIENT_INVALID_ADDRESS
The recipient "%@" was rejected by the server because it is not a valid email address.
MF_SMTP_SENDING_LIMIT_EXCEEDED
Sending the message failed because you exceeded your sending limit.
NO_PASSWORD_PROVIDED_ERROR
No password provided.
Please go to Mail Account Settings and enter a password.
%d (%d.%d.%d) %@
%d %@
statusClass
TI,R,N,V_statusClass
statusSubject
TI,R,N,V_statusSubject
statusDetail
TI,R,N,V_statusDetail
statusString
T@"NSString",R,N,V_statusString
continuationResponses
T@"NSArray",&,N,V_continuationResponses
sending limit
from address is not one of your addresses
Partial message, part %@ of %@
To read this message, select all of the parts of the message and select the Message --> MIME --> Combine Messages menu item.
number
total
creating vault directory
-[MFDbJournal initWithPath:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/DbJournal.m
creating journal file
setting protection class
opening journal file
BEGIN IMMEDIATE
starting transaction during journal merge
executing SQL statement from journal (%s)
COMMIT
committing transaction after merging journal
ROLLBACK
rolling back transaction after merging journal
-[MFDbJournal mergeWithDatabase:]
0 == [_buffer length]
checkpointBlock
T@?,C,N,V_checkpointBlock
rollbackBlock
T@?,C,N,V_rollbackBlock
%05d.log
DbJournal
MFSearchableIndexQueryOptionFetchAttributes
MFSearchableIndexQueryOptionMaxResultCount
MFSearchableIndexQueryOptionSortAttributes
MFSearchableIndexQueryOptionRankingQueries
MFSearchableIndexQueryOptionProtectionClasses
-[MFLibrarySearchableIndexQuery init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/LibrarySearchableIndexQuery.m
<%@: %p>
v8@?0@"NSArray"4
v8@?0@4
v8@?0@"NSError"4
%s%s%s%s%s
f070
 %@ 
(%@)
%@ = '%@*'%@
progress
T@"NSProgress",R
logPrefixString
T@"NSString",&,N,V_logPrefixString
queryString
T@"NSString",R,C,N,V_queryString
-[MFMessageInfo hash]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Message.subproj/MFMessageInfo.m
0 && "Tried to get the hash of an object that had no UID"
<%@: %p> uid=%u, conversation=%lld, messageID=%lld, received=%u
i12@?0@"MFMessageInfo"4@"MFMessageInfo"8
generationNumber
Tq,R,N,V_generationNumber
TI,N,V_uid
TI,N,V_dateReceivedInterval
TI,N,V_dateSentInterval
Tq,N,V_conversationHash
TI,N,V_mailboxID
uidIsLibraryID
isVIP
TB,N,GisKnownToHaveAttachments
sortUid
TI,N,V_sortUid
sortDateReceivedInterval
TI,N,V_sortDateReceivedInterval
-[MFSparseMutable64IndexSet _incrementStorageIfNecessaryForCount:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/MFSparseMutable64IndexSet.m
newStorage && "Must have been able to reallocate size"
i12@?0r^v4r^v8
<%@: %p> [
%llu,
-[MFDADeferredMessageMoveOperation initWithCoder:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/DataAccess/MFDAMoveResponseConsumer.m
SourceMailbox
DestinationMailbox
SourceRemoteIDs
OriginalFlags
TemporaryIDs
-[MFDADeferredMessageMoveOperation encodeWithCoder:]
%@ source "%@", destination "%@", %lu messages
incomplete
-[_MFDADeferredSelectMailboxOperation initWithCoder:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/DataAccess/MFDAOfflineCache.m
-[_MFDADeferredSelectMailboxOperation encodeWithCoder:]
%@ folder-id "%@"
-[MFOfflineCache initWithLibrary:account:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/MFOfflineCache.m
library && "library must not be nil"
account && "account must not be nil"
TEMP:%u
-[MFOfflineCache _applyReplayContextTransformation:]
_isReplaying && _replayContext
nextTemporaryMessageID
T@"NSString",R,D,N
selectedMailboxID
T@"NSString",C,N,V_selectedMailboxID
translatedIDsByTemporaryID
T@"NSMutableDictionary",R,N,V_translatedIDsByTemporaryID
failureSnapshotsByTemporaryID
T@"NSMutableDictionary",R,N,V_failureSnapshotsByTemporaryID
-[MFOfflineTransferFailureSnapshot initWithCoder:]
RemoteID
MailboxID
MessageFlags
-[MFOfflineTransferFailureSnapshot encodeWithCoder:]
%@ remote-id "%@", mailbox-id "%@", flags %llu
originalRemoteID
T@"NSString",R,N,V_originalRemoteID
originalMailboxID
T@"NSString",R,N,V_originalMailboxID
originalMessageFlags
TQ,R,N,V_originalMessageFlags
-[_MFSelectMailboxReplayContextTransformation initWithCoder:]
-[_MFSelectMailboxReplayContextTransformation encodeWithCoder:]
-[_MFTranslateTemporaryIDReplayContextTransformation initWithCoder:]
TemporaryID
TranslatedID
-[_MFTranslateTemporaryIDReplayContextTransformation encodeWithCoder:]
-[_MFTransferFailureReplayContextTransformation initWithCoder:]
TransferFailureSnapshot
-[_MFTransferFailureReplayContextTransformation encodeWithCoder:]
-[_MFReplaceTemporaryIDForTransferFailureReplayContextTransformation initWithCoder:]
NewTemporaryID
-[_MFReplaceTemporaryIDForTransferFailureReplayContextTransformation encodeWithCoder:]
Input range:%lu:%lu
Input data:%lu
Output data:%lu
MFFileArchiveStatusOK
MFFileArchiveStatusFatal
MFFileArchiveStatusFailed
MFFileArchiveStatusWarn
MFFileArchiveStatusRetry
MFFileArchiveStatusFailedHeaderWrite
MFFileArchiveStatusFailedDataWrite
MFFileArchiveStatusUnknown
Failed to close archive
hdrcharset=UTF-8:zip:compression=deflate
inputData
T@"NSData",&,N,V_inputData
inputRange
T{_NSRange=II},N,V_inputRange
outputData
T@"NSMutableData",&,N,V_outputData
readerBlock
T@?,C,N,V_readerBlock
writerBlock
T@?,C,N,V_writerBlock
MFFileArchiveDomain
T@"NSString",&,N,V_fileName
T@"NSString",&,N,V_mimeType
T@"NSString",C,N,V_contentID
file
XXXXX.%@
B12@?0@"NSURL"4@"NSError"8
B8@?0@"NSError"4
v8@?0@"NSURL"4
/MobileMailAttachments
Could not retrieve RFC822 data for attachment.
GSDeviceName
_SIMULATOR
%@_%@
DEFAULT_SIGNATURE
DEFAULT_SIGNATURE_IPHONE
Sent from my iPhone
SignatureKey
com.apple.mail.MailAccountSignaturesChanged
UseAccountSignatures
<br/><br/>
(?:<br[/]?>){2}
-[MFOfflineCacheOperation setRowid:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/MFOfflineCacheOperation.m
![self hasRowid]
rowid
Tq,N,V_rowid
--%@
SMIME_CANT_DECRYPT_MESSAGE
This message is encrypted.  Install a profile containing your encryption identity to decrypt this message.
%@://%@
x-attach-SMIME
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Authentication.subproj/SecureMimePart.m
The message body should be a MFMimeBody.
SMIME_CANT_DECRYPT_TITLE
Unable to decrypt message
(Unknown)
lastSecCMSError
Tl,R,N,V_SecCMSError
signers
T@"NSArray",R,N,V_signers
SMIME_CANT_SIGN_MESSAGE
An error occurred while trying to sign this message with a certificate from "%@". Verify that your certificate for this address is correct, and that its private key is in your keychain.
application/pkcs7-signature
sha1
micalg
pkcs7-signature
smime.p7s
SMIME_CANT_SIGN_TITLE
Unable to Sign
SMIME_CANT_ENCRYPT_MESSAGE
An error occurred while trying to encrypt your message. Verify that you have valid certificates in your keychain for all of the recipients.
pkcs7-mime
smime.p7m
enveloped-data
smime-type
storagePath
T@"NSString",C,D,N
x-apple-smime-error
x-apple-smime-signers
ShouldSign
ShouldEncrypt
SigningIdentity
EncryptionIdentity
RecipientCertificates
IdentityRef
IdentityError
ErrorsByRecipient
CertificatesByRecipient
MFSecureMIMECompositionManager_lock
com.apple.mobilemail.MFSecureMIMECompositionManagerQueue
-[MFSecureMIMECompositionManager _determineSigningStatusWithSendingAddress:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Authentication.subproj/MFSecureMIMECompositionManager.m
_signingStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithSendingAddress:]
_encryptionStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithNewRecipients:]
-[MFSecureMIMECompositionManager compositionSpecification]
_signingIdentity
_encryptionIdentity
SMIME_MISSING_SIGNING_IDENTITY_FORMAT
You can't send signed messages because a signing identity for the address "%@" could not be found.  Go to the Advanced settings for this account to choose a signing identity.
SMIME_MISSING_ENCRYPTION_IDENTITY_FORMAT
You can't send encrypted messages because an encryption identity for the address "%@" could not be found.  Go to the Advanced settings for this account to choose an encryption identity.
SMIME_OTHER_ENCRYPTION_CERT_ERROR_MESSAGE
An error occurred while searching for an encryption certificate for "%@" in your keychain.
SMIME_MISSING_ENCRYPTION_CERT_MESSAGE
You can't send encrypted messages because an encryption certificate for the address "%@" could not be found.
T@"<MFSecureMIMECompositionManagerDelegate>"
sendingAddress
sendingAccount
T@"MailAccount",R
signingPolicy
Ti,R
encryptionPolicy
signingStatus
encryptionStatus
recipients
T@"NSSet",R
headers
T@"MFMutableMessageHeaders",&,N,V_headers
placeholders
T@"NSArray",&,N,V_placeholders
libraryContent
T@"MFOutgoingLibraryMessageContent",R,N
richtextContent
T@"MFOutgoingRichtextMessageContent",R,N
multipartContent
T@"MFOutgoingMultipartRelatedContent",R,N
libraryMessage
T@"MFLibraryMessage",&,N,V_libraryMessage
textPartsAreHTML
TB,N,V_textPartsAreHTML
plaintextAlternative
T@"MFPlainTextDocument",&,N,V_plaintextAlternative
mixedContent
T@"NSArray",&,N,V_mixedContent
htmlBody
T@"NSString",&,N,V_htmlBody
_MFDAFolderChangeConsumer_Lock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/DataAccess/MFDAFolderChangeConsumer.m
%@ should not be called twice
%@ status %ld, error %@, folderID "%@", folderName "%@"
statusCode
Ti,R,V_statusCode
T@"NSError",R,V_error
T@"NSString",R,V_folderID
folderName
T@"NSString",R,V_folderName
-[_MFDADeferredNewMailboxOperation initWithCoder:]
ParentFolderID
TemporaryFolderID
-[_MFDADeferredNewMailboxOperation encodeWithCoder:]
 (renamed)
folderMap should not contain %@
%@ display-name "%@", parent-folder-id "%@", temporary-folder-id "%@"
-[_MFDADeferredDeleteMailboxOperation initWithCoder:]
-[_MFDADeferredDeleteMailboxOperation encodeWithCoder:]
-[_MFDADeferredModifyMailboxOperation initWithCoder:]
NewParentFolderID
NewDisplayName
-[_MFDADeferredModifyMailboxOperation encodeWithCoder:]
%@ folder-id "%@", new-parent-folder-id "%@", new-display-name "%@"
failed to create deferred operation for folder change %@
T@"<NSCopying>",C,N,V_key
T@"MFWeakObjectCache",W,N,V_cache
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/MFWeakObjectCache.m
couldn't create a weak reference for %@
-[MFSQLiteConnection initWithPath:databaseName:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/MFSQLiteConnection.m
NULL != path
NULL != databaseName
-[MFSQLiteConnection dealloc]
NULL == _db
-[MFSQLiteConnection open]
enabling extended error codes
creating custom and64 function
icusearch
creating custom icusearch function
cpsearch
creating custom cpsearch function
setting busy timeout
PRAGMA page_size = 8192;
setting page_size
PRAGMA auto_vacuum = 2;
setting auto_vacuum
PRAGMA cache_size = 1000;
setting cache_size
PRAGMA journal_mode = WAL;
setting journal_mode
PRAGMA foreign_keys = ON;
setting foreign_keys
opening database %s
-[MFSQLiteConnection preparedStatementForPattern:]
NULL != _db
preparing statement for query "%@"
-[MFSQLiteConnection beginTransactionWithType:]
BEGIN DEFERRED
BEGIN EXCLUSIVE
0 && "unsupported transaction type"
_transactionType >= type
-[MFSQLiteConnection commitTransaction]
-[MFSQLiteConnection rollbackTransaction]
pool
T@"MFSQLiteConnectionPool",W,N
databaseName
T@"NSString",R,N,V_databaseName
T^{sqlite3=},R,N,V_db
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/MFSQLiteConnectionPool.m
maxConcurrentBackgroundReaders > 0
NULL != waitCounter
nil != connectionWrapper
Preemptively terminated active sqlite connection(s) after device lock (NOT a crash)
T@"<MFSQLiteConnectionPoolDelegate>",V_delegate
cacheSize
maxConcurrentBackgroundReaders
TI,R,V_maxConcurrentBackgroundReaders
maxConcurrentWriters
backgroundReadersWaiting
writersWaiting
T@"MFSQLiteConnection",R,N,V_connection
generation
TI,R,N,V_generation
TI,N,V_type
_MFTTRUserPromptLastResponseUserDefaultsKey
_MFTTRUserPromptLastResponseVersionUserDefaultsKey
SELECT value FROM properties WHERE key = 'version'
INSERT OR REPLACE INTO properties (key, value) values ('version', ?)
setting library version
preparing library version insert statement
tables.sql
triggers.sql
_ExecuteSQLFile
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/MFMailMessageLibraryMigrator.m
nil != filename
performing statements from file "%@"
SELECT rowid FROM messages WHERE conversation_id = 0 or conversation_id is NULL
gathering library ids of messages without conversation hashes
updating messages with new conversation hashes
CREATE INDEX message_infos_index ON messages(mailbox, deleted, flags, conversation_id, date_sent, date_received DESC, ROWID DESC);
DROP INDEX message_deleted_index
dropping message deleted index
creating new message_infos_index and dropping message_deleted_index
ALTER TABLE messages ADD COLUMN sender_vip;
adding sender_vip column
DROP INDEX IF EXISTS message_infos_index; CREATE INDEX message_infos_index ON messages(mailbox, deleted, sender_vip, flags, conversation_id, date_sent, date_received DESC, ROWID DESC);
adding sender_vip to message_infos_index
ALTER TABLE messages ADD COLUMN unique_id;
adding unique_id column
ALTER TABLE messages ADD COLUMN content_index_transaction_id INTEGER;
adding content_index_transaction_id column
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id);
adding content_index_transaction_id index
DROP INDEX IF EXISTS message_conversation_id_index;
CREATE INDEX message_conversation_id_index ON messages(conversation_id, mailbox, read, date_received);
DROP INDEX IF EXISTS message_oldest_conversation_index;
CREATE INDEX message_oldest_conversation_index on messages(mailbox, conversation_id, date_received);
replacing conversation indexes
DROP INDEX IF EXISTS message_sequence_identifier_index;
CREATE INDEX message_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);
adding sequence identifier index
ALTER TABLE mailboxes ADD COLUMN flagged_count INTEGER DEFAULT 0; ALTER TABLE mailboxes ADD COLUMN attachment_count INTEGER DEFAULT 0;
altering mailboxes table
update mailboxes set flagged_count = (select count(*) from messages where mailbox = mailboxes.rowid AND flags&16 > 0);
updating flagged_count
update mailboxes set attachment_count = (select count(*) from messages where mailbox = mailboxes.rowid AND (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0);
updating attachment_count
ALTER TABLE mailboxes ADD COLUMN to_cc_count INTEGER DEFAULT 0;
INSERT OR REPLACE INTO properties (key, value) VALUES ('MaxRowIdForMigrationToVersion31', (SELECT MAX(rowid) FROM messages));
adding maxrowid property
ALTER TABLE mailboxes ADD COLUMN server_unread_count INTEGER DEFAULT 0;
UPDATE mailboxes SET flagged_count = (select count(*) FROM messages WHERE mailbox = mailboxes.rowid AND flags&16 > 0 AND flags&2 == 0);
CREATE TABLE conversations (conversation_id INTEGER PRIMARY KEY, flags INTEGER DEFAULT 0, sync_key TEXT);
CREATE TABLE conversation_id_message_id (conversation_id INTEGER, message_id INTEGER, date_sent INTEGER DEFAULT 0, UNIQUE (conversation_id, message_id), FOREIGN KEY (conversation_id) REFERENCES conversations(conversation_id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE INDEX conversation_id_message_id_index ON conversation_id_message_id(conversation_id, message_id); CREATE INDEX message_id_conversation_id_index ON conversation_id_message_id(message_id, conversation_id);
INSERT INTO conversations (conversation_id) SELECT DISTINCT(conversation_id) FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id,date_sent) SELECT conversation_id, message_id, date_sent FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id) SELECT messages.conversation_id, threads.reference FROM messages, threads WHERE messages.rowid = threads.message_id;
creating conversations and conversation_id_message_id tables
DROP INDEX IF EXISTS message_infos_index;
CREATE INDEX message_infos_index ON messages(mailbox, deleted, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
updating message_infos_index covering index
UPDATE mailboxes SET total_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET deleted_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&2 > 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET flagged_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET attachment_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET to_cc_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes counts
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes unread_count
DROP INDEX message_content_index_transaction_id_index;
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id, deleted, date_received DESC, ROWID);
updating message_content_index_transaction_id
CREATE INDEX message_mailbox_content_index ON messages (mailbox, content_index_transaction_id, flags, date_received ASC)
adding message_mailbox_content_index
DELETE FROM spotlight_tombstones
resetting content_index_transaction_id to force a reindex
DROP TABLE IF EXISTS spotlight_tombstones
CREATE TABLE spotlight_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
                                   type INTEGER,
                                   identifier TEXT,
                                   transaction_id INTEGER,
                                   UNIQUE(type, identifier))
CREATE INDEX spotlight_tombstones_transaction_index ON spotlight_tombstones(transaction_id, type, identifier)
adding spotlight tombstones table
UPDATE mailboxes SET server_unread_count = 0 WHERE url LIKE "pop:%";
ALTER TABLE messages ADD COLUMN list_id_hash INTEGER;
adding list_id_hash column
CREATE INDEX message_list_id_hash_index ON messages(list_id_hash);
adding message_list_id_hash_index index
MFRegisterContentProtectionObserver
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/MFContentProtectionObserver.m
nil != observer
NULL != queue
_observationQueue != queue
MFUnregisterContentProtectionObserver
==== MFContentProtectionObserver ====
Recorded state: %@
Unlocked since boot: %s
never
Last lock_status notification: %@ (began observing %@)
Observers:
<%@:%p> (%s)
observer
T@"<MFContentProtectionObserver>",R,N
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
com.apple.message.MFContentProtectionObserver
_NotifyObserversWithContentProtectionState
kMFContentProtectionStateInvalid != state
kMFContentProtectionStateInvalid != _contentProtectionState
disabled
unlocked
locking
locked
-[MFProtectedSQLiteConnection attachProtectedDatabase]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/MFProtectedSQLiteConnection.m
ATTACH DATABASE "%@" AS protected
attaching Protected Index
PRAGMA protected.journal_mode = WAL;
setting journal mode on Protected Index
CREATE TABLE IF NOT EXISTS protected.messages (message_id INTEGER PRIMARY KEY, sender, subject, _to, cc, bcc);
CREATE TABLE IF NOT EXISTS protected.message_data (message_data_id INTEGER PRIMARY KEY, data);
creating Protected Index schema
-[MFProtectedSQLiteConnection detachProtectedDatabase]
DETACH DATABASE protected
detaching Protected Index
isProtectedDatabaseAttached
TB,R,N,V_attached
_IncrementThreadLocalCounterForKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/MFNetworkAssertions.m
[countNumber isKindOfClass:[NSNumber class]]
count < NSUIntegerMax
_MFDisallowNetworkActivityAssertionKey
_DecrementThreadLocalCounterForKey
0 < count
_ThreadLocalAssertionForKey
[number isKindOfClass:[NSNumber class]]
_MFMainThreadNetworkingAllowedAssertionKey
,%lu
MFPowerPluggedInStateDidChange
MFPowerAssertionDidExpire
MFBatterySaverModeDidChange
com.apple.message.MFPowerController.state
com.apple.message.MFPowerController.power
com.apple.mobilemail
+[MFPowerController sharedInstance]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Utilities.subproj/MFPowerController.m
instance != nil
plugged in
unplugged
assertion IS NOT NULL
assertion timer IS NOT nil
com.apple.message.preventSleep
assertion IS NULL
assertion timer IS nil
==== Power State ====
  charging: %@
  low-power mode: %@
  app state: %@
  holding assertion: %@
==== Internal Assertions ====
  %@: %d
Terminated
Background Task Suspended
Background Running
Foreground Running
Process Server
Foreground Running Obscured
MFUpdateAccountsInPlaceKey
persistentStore
T@"ACAccountStore",R
MailServices
InstantiableMailAccountClasses
GmailAccount
YahooAccount
SMTPAccount
MFAccountLoaderErrorDomain
https://www.icloud.com/attachment/
application/zip
https://
filesize
expiration-date
x-mac-auto-archive
${f}
${uk}
x-attach
x-attach-maildrop
MFLocalizedDescriptionKey
MFErrorTitleKey
Could not find a provider for the given URL.
No Provider Found
x-attach://
Could not retrieve library data for attachment.
Invalid attachment URL.
Invalid Attachment URL
messageLibrary
T@"MFMessageLibrary",W,N
com.apple.mobileconfig
com.apple.mobileprovision
com.apple.ical.ics
com.apple.ical.vcs
com.apple.iwork
com.apple.mail.email
MFAttachmentIsSinglePagePDFKey
<%@: %p;
 url: = %@;
 fileName = %@;
 contentID = %@;
 mimeType = %@;
 decodedFileSize = %lu;
 path = %@;
 isMailDrop = %@>
x-uuencode
MFAttachmentIsPlaceholder
MFAttachmentMailDropMetaData
DisableAttachmentFilters
VERSION:1.0
VERSION:2.0
x-attach-RFC822
message/rfc822
message/delivery-status
x-attach-compose
image/
MFAttachmentFileNameKey
MFAttachmentPathKey
MFAttachmentRemoteImageFileNameKey
MFAttachmentUTTypeKey
MFAttachmentMimetypeKey
MFAttachmentDecodedFileSizeKey
MFAttachmentEncodedFileSizeKey
text/html
text/
_MFAttachmentEncodingKey
T@"MFAttachmentManager",N,V_attachmentManager
isContainedInRFC822
isContainedInCompose
downloadProgress
T@"NSProgress",&,N,V_downloadProgress
lastProgressBytes
TI,N,V_lastProgressBytes
lastProgressTime
Td,N,V_lastProgressTime
T@"NSURL",C,N,V_url
part
T@"MFMimePart",&,N,V_part
T@"NSString",R,D
disposition
T@"NSString",C,N,V_disposition
remoteImageFileName
decodedFileSize
encodedFileSize
isDataAvailableLocally
shouldAutoDownload
inferredMimeType
fileUTType
isAutoArchive
TB,R,V_isAutoArchive
isPlaceholder
TB,D
placeholder
T@"MFAttachmentPlaceholder",&,N,V_placeholder
mailDropMetadata
T@"MFMailDropMetadata",&,D,N
fetchCompletionBlock
T@?,C,N,V_fetchCompletionBlock
customConsumer
T@"<MFDataConsumer>",&,N,V_customConsumer
wantsCompletionBlockOffMainThread
TB,N,V_wantsCompletionBlockOffMainThread
apple_ak
enc_base_image
enc_model
B12@?0^{__CFString=}4^{CGImageMetadataTag=}8
kMFMailDropServiceKey
MainAccount
MailDropDeliveryStateKey
contentType
uploadDate
v12@?0@"CKRecordZoneID"4@"NSError"8
v20@?0@"CKRecordID"4@"NSString"8@"CKAsset"12@"NSError"16
v16@?0@"CKRecord"4d8
v12@?0@"CKRecord"4@"NSError"8
@"MFFuture"8@?0@"CKRecord"4
v16@?0@"NSArray"4@"NSArray"8@"NSError"12
v12@?0@"CKRecordZone"4@"NSError"8
Could not get zoneID to create zone.
T@"NSArray",&,N,V_attachments
imageArchiveMetadata
T@"MFMailDropMetadata",&,N,V_imageArchiveMetadata
mailDropState
Ti,N,V_mailDropState
com.apple.largeattachment
mailAttachment
MFAttachmentFilterKey
MFAttachmentCollectionFilterKey
MFAttachmentAttachmentKey
MFAttachmentPrimaryConsumerKey
MFAttachmentMonitorKey
MFAttachmentSyncLockKey
MFAttachmentInvocationURLKey
MFAttachmentInvocationFilterKey
MFAttachmentContentIDKey
MFMailAttachmentCachedSizesChangedNotification
com.apple.mail.attachmentManagerAttachmentArray
com.apple.message.attachmentManager.imagescaling
Invalid attachment URL.  Too few parts.
v16@?0@"NSURL"4@"NSDictionary"8^B12
-[MFAttachmentManager _fetchDataForAttachment:withProvider:syncLock:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/Library.subproj/MFAttachmentManager.m
B8@?0@"MFAttachment"4
v8@?0@"MFAttachment"4
Download Canceled.
Download Canceled
fakeFullPath
T@"NSString",C,N,V_fakeFullPath
fakeURLString
T@"NSString",C,N,V_fakeURLString
fakeIsSpecialMailboxUid
TB,N,V_fakeIsSpecialMailboxUid
T@"NSString",&,N,V_displayName
<_MFMeasuredObject: %lf: %@>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-2596.3.23/MailboxPrediction/_MFMeasuredObject.m
[otherObject isKindOfClass:[_MFMeasuredObject class]]
i12@?0@"_MFMeasuredObject"4@"_MFMeasuredObject"8
object
T@,&,N,V_object
measure
Td,N,V_measure
debugOutput
T@"NSString",&,N,V_debugOutput
modelInfo
T@"NSDictionary",&,N,V_modelInfo
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
mf_dictionaryWithMessagesSortedByStore
allKeys
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
mf_enumerateByStoreUsingBlock:
init
copy
release
dealloc
resultCode
class
transferedMessages
failedMessages
stringWithFormat:
initWithResultCode:failedMessages:transferedMessage:
debugDescription
_resultCode
_failedMessages
_transferedMessages
defaultManager
fileExistsAtPath:isDirectory:
createEmptyStoreForPath:
doesNotRecognizeSelector:
fullPath
account
createEmptyStoreIfNeededForPath:
storeAtPathIsWritable:
retain
alloc
initWithCapacity:
autorelease
setMaxThreadCount:
openSynchronously
invocationWithSelector:target:taskName:priority:canBeCancelled:
addInvocation:
mf_lock
monitor
mf_unlock
defaultCenter
postNotificationName:object:userInfo:
cancel
accountRelativePath
displayName
isEqualToString:
hostname
type
dictionaryWithObjectsAndKeys:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:
distantPast
messagesWereAdded:earliestReceivedDate:
count
totalCount
nonDeletedCountIncludingServerSearch:andThreadSearch:
serverUnreadOnlyOnServerCount
unreadCount
serverMessageCount
allNonDeletedCountIncludingServerSearch:andThreadSearch:
hasMoreFetchableMessages
fetchWindow
copyOfAllMessagesWithOptions:
accountThatMessageIsFrom:
copyOfAllMessages
copyMessagesMatchingText:options:
storeSearchResultMatchingCriterion:limit:error:
mutableCopy
objectAtIndex:
messageFlags
removeObjectAtIndex:
_defaultRouterDestination
mailboxUid
isEqual:
storeForMailboxUid:
appendMessages:unsuccessfulOnes:
array
indexOfObjectIdenticalTo:
addObject:
deleteMessages:moveToTrash:
numberWithBool:
mailboxUidOfType:createIfNeeded:
setFlagsFromDictionary:forMessages:
setFlag:state:forMessages:
store
addObjectsFromArray:
representedAccount
canMoveMessagesFromAccount:toAccount:
moveMessages:fromMailbox:toMailbox:markAsRead:
numberWithUnsignedLongLong:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:
removeObjectsInArray:
shouldRestoreMessagesAfterFailedDelete
replaceObjectsInRange:withObjectsFromArray:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:
appendMessages:unsuccessfulOnes:newMessageIDs:
messageForMessageID:options:
lastViewedMessageID
lastViewedMessageDate
_cachedHeaderDataForMessage:valueIfNotPresent:
_fetchHeaderDataForMessage:downloadIfNecessary:
mimeBody
message
isMessageContentsLocallyAvailable
arrayWithCapacity:
mf_boolForKey:
_updateFlagForMessage:key:value:
mf_addObjectIfAbsent:
setFlagsForAllMessagesFromDictionary:
setNumberOfAttachments:isSigned:isEncrypted:forMessage:
setMessageFlags:
currentMonitor
reset
setMailbox:
addReason:
URLString
numberWithInt:
willPerformActionForChokePoint:coalescePoint:result:
powerAssertionIdentifierWithPrefix:
sharedInstance
retainAssertionWithIdentifier:withAccount:
fetchNumMessages:preservingUID:options:
error
shouldFetchAgainWithError:foregroundRequest:
numberWithInteger:
didFinishActionForChokePoint:coalescePoint:withResult:
releaseAssertionWithIdentifier:
integerValue
fetchMobileSynchronously:preservingUID:options:
preferredEncoding
setPreferredEncoding:
headers
firstHeaderForKey:
setSubject:
arrayWithObjects:count:
messageFlagsDidChange:flags:
_flushAllMessageData
summary
deleteInPlaceForMailbox:
supportsArchiving
preventArchiveForMailbox:
shouldArchiveByDefault
canArchiveForMailbox:
archiveDestinationForMailbox:
_setOrGetBody:forMessage:updateFlags:
calculateAttachmentInfoFromBody:
keyEnumerator
nextObject
objectForKey:
unsignedIntValue
setObject:forKey:
shouldCancel
drain
_setFlagsForMessages:
messageSize
_shouldChangeComponentMessageFlagsForMessage:
_shouldChangeComponentMessageFlags
classForMimePart
copyMessages:toMailbox:markAsRead:deleteOriginals:isDeletion:
headersClass
initWithMailboxUid:readOnly:
openAsynchronously
didOpen
cancelOpen
writeUpdatedMessageDataToDisk
isOpened
storePathRelativeToAccount
isReadOnly
description
isDrafts
allMessageFlagsDidChange:
structureDidChange
messagesWereAdded:
messagesWereCompacted:
messagesWillBeCompacted:
deletedCount:andSize:
serverUnreadCount
shouldGrowFetchWindow
invalidateFetchWindow
growFetchWindow
purgeMessagesBeyondLimit:keepingMessage:
unreadCountMatchingCriterion:
hasMessageForAccount:
indexOfMessage:
copyOfMessagesInRange:
mutableCopyOfAllMessages
copyOfAllMessagesForBodyLoadingFromRowID:limit:
copyMessagesMatchingText:
copyMessagesMatchingCriterion:options:
copyMessagesWithRemoteIDs:options:
copyMessagesWithRemoteIDs:options:inMailbox:
canFetchSearchResults
fetchMessagesMatchingCriterion:limit:
storeSearchResultMatchingSearchText:criterion:limit:error:
remoteIDsFromUniqueRemoteIDs:
canFetchMessageIDs
fetchMessagesWithMessageIDs:andSetFlags:
fetchMessagesWithRemoteIDs:andSetFlags:
finishRoutingMessages:routed:
canCompact
doCompact
deleteMessagesOlderThanNumberOfDays:compact:
undeleteMessages:
messagesWereDeleted:
allowsAppend
messageForRemoteID:
messageForRemoteID:inMailbox:
lastViewedMessageWithOptions:
uniqueRemoteIDsForMessages:
headerDataForMessage:downloadIfNecessary:
hasCachedDataForMimePart:
setFlagsLocallyFromDictionary:forMessages:
willSetFlagsFromDictionary:forMessages:
setFlagsCancelled:forMessages:
setFlagForAllMessages:state:
status
fetchMobileSynchronously:
setPreferredEncoding:forMessage:
storeData:forMimePart:isComplete:
close
setLibrary:
shouldDownloadBodyDataForMessage:
loadMeetingExternalIDForMessage:
loadMeetingDataForMessage:
loadMeetingMetadataForMessage:
shouldSetSummaryForMessage:
shouldDeleteInPlace
shouldArchive
archiveDestination
_rebuildTableOfContentsSynchronously
updateMessages:updateNumberOfAttachments:
messageIdRollCall:
_state
_flags
_mailboxUid
_account
_deletedMessagesSize
_deletedMessageCount
_unreadMessageCount
_generationNumber
_lastFetchCount
_openMonitor
decodeValueOfObjCType:at:
encodeValueOfObjCType:at:
encodeWithCoder:
initWithCoder:
realFlags
appendFormat:
attachments
removeAttachmentForURL:
clearMetadataForAttachment:
attachmentsBaseURL
removeProviderForBaseURL:
mf_UUID
initWithContextID:
contextID
attachmentsForContext:
setAttachmentsBaseURL:
_contextID
_attachmentsBaseURL
dateReceivedAsTimeIntervalSince1970
dateSentAsTimeIntervalSince1970
libraryID
respondsToSelector:
senderAddressComment
localizedCaseInsensitiveCompare:
priority
initWithCompositionSpecification:
setAllowsQuotedPrintable:
range
length
setLength:
done
data
appendData:
reason
isKindOfClass:
setType:
setSubtype:
addSubpart:
createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:charsets:headers:
null
callStackSymbols
callStackReturnAddresses
firstChildPart
subtype
setBodyParameter:forKey:
lastObject
removeLastObject
subparts
disposition
setContentID:
allocWithZone:
isSubclassOfClass:
appendDataForMimePart:toData:withPartData:
createMessageWithString:headers:
createMessageWithPlainTextDocumentsAndAttachments:headers:
createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithHtmlString:attachments:headers:
setDelegate:
allows8BitMimeParts
setAllows8BitMimeParts:
allowsBinaryMimeParts
setAllowsBinaryMimeParts:
allowsQuotedPrintable
setWriteSizeDispositionParameter:
setMessageClassToInstantiate:
delegate
compositionSpecification
shouldWriteAttachmentPlaceholders
setShouldWriteAttachmentPlaceholders:
_messageClassToInstantiate
_allows8BitMimeParts
_allowsBinaryMimeParts
_writeSizeDispositionParameter
_allowsQuotedPrintable
_shouldWriteAttachmentPlaceholders
_delegate
_compositionSpecification
bytes
rawData
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retainCount
zone
hash
superclass
isLastCharacterNewLine
_consumer
_rawData
_count
_lastNewLine
encodedHeaders
dataWithCapacity:
mf_makeImmutable
dataHolderWithData:
addData:
mutableHeaders
setMessageBody:
messageStore
messageBody
messageBodyIfAvailable
messageData
messageData:messageSize:isComplete:downloadIfNecessary:
messageDataHolder
messageDataHolder:messageSize:isComplete:downloadIfNecessary:
setMutableHeaders:
headersIfAvailable
_messageBody
_messageHeaders
string
mf_bestMimeCharsetUsingHint:
standardUserDefaults
boolForKey:
encoding
getFormatFlowedString:insertedTrailingSpaces:encoding:
errorWithDomain:code:localizedDescription:
setShortDescription:
setError:
quotedString:
charsetForEncoding:
mf_bestMimeCharsetForMessageDeliveryUsingSubtype:
charsetName
rangeOfString:
stringByReplacingOccurrencesOfString:withString:
preferredFilename
isImageFile
initWithData:encoding:
setDispositionParameter:forKey:
setDisposition:
isSymbolicLink
symbolicLinkDestination
isRegularFile
regularFileContents
initWithFormat:
fileAttributes
intValue
contentID
mimeType
pathExtension
stringByAppendingPathExtension:
setPreferredFilename:
setFilename:
componentsSeparatedByString:
messageWriter:willGenerateHeadersForMimePart:
bodyParameterForKey:
copyNewMimeBoundary
bodyParameterKeys
setHeader:forKey:
dataUsingEncoding:allowLossyConversion:
mutableCopyWithZone:
mf_appendRFC2231CompliantValue:forKey:
dispositionParameterKeys
dispositionParameterForKey:
contentTransferEncoding
contentDescription
languages
componentsJoinedByString:
contentLocation
messageWriter:willEncodeHeaders:forMimePart:
replaceOccurrencesOfString:withString:options:range:
insertString:atIndex:
appendString:
appendBytes:length:
fileName
mailDropMetadata
flags
isPlaceholder
fetchPlaceholderData
fetchDataSynchronously:stripPrivateMetadata:
setFileName:
mimePart
fileWrapperForcingDownload:
initWithConsumer:
setStandardLineBreak
setAllowSlash:
setPadChar:
mf_lossyDefaultCStringBytes
mf_appendCString:
nextSiblingPart
copyAddressListForResentFrom
copyAddressListForSender
mf_uncommentedAddress
newSignedPartWithData:sender:compositionSpecification:signatureData:
appendHeaderData:andRecipients:
arrayByApplyingSelector:
indexOfObject:
newEncryptedPartWithData:compositionSpecification:encryptedData:
rangeOfString:options:
substringFromIndex:
mf_messageIDStringWithDomainHint:
versionString
initWithBytesNoCopy:length:freeWhenDone:
setMessage:
setContentTransferEncoding:
isReadableText
canBeCancelled
mf_dataByConvertingUnixNewlinesToNetwork
setForTextPart:
serverId
handleResponse:error:
success
_success
_serverId
_error
allowsKeyedCoding
decodeObjectForKey:
encodeObject:forKey:
defaultInstance
protectedDataAvailability
messagesWithMessageIDHeader:
firstObject
fetchLimits
fetchMaxBytes
initWithMessage:mailbox:
performRequests:mailbox:consumers:
setRemoteID:
library
setFlags:forMessage:
performWithAccount:offlineCache:
initWithMessageIDHeader:mailbox:
_messageIDHeader
_folderID
hasPrefix:
setString:
currentFont
UTF8String
parenSet
parseParameterString:
floatValue
initWithFloat:
characterAtIndex:
nowWouldBeAGoodTimeToAppendToTheAttributedString
handleNoParameterCommand:
setupFontStackEntry:
compare:options:
mismatchError:
scannerWithString:
scanHexInt:
scanString:intoString:
stringByAppendingString:
punctuationSet
appendNewLine:
resetStateWithString:outputString:
readTokenInto:
beginCommand:
endCommand:
appendStringToBuffer:
closeUpQuoting
setWantsHTML:
convertRichTextString:intoOutputString:
convertEnrichedString:intoOutputString:
_inputBuffer
_currentIndex
_inputLength
_noFillLevel
_eatOneNewline
_insideComment
_wantsPlainText
_lastQuoteLevel
_commandStack
_outputString
_outputBuffer
_prependHTML
_postpendHTML
_indentWidth
mf_stringFromMimeRichTextString:asHTML:
mf_stringFromMimeEnrichedString:asHTML:
mf_lineBreakBeforeIndex:withinRange:
mf_nextWordFromIndex:forward:
getLineStart:end:contentsEnd:forRange:
rangeOfString:options:range:
substringWithRange:
substringToIndex:
mf_convertFromFlowedText:
newWithPlainTextDocument:encoding:
outputString
addedTrailingSpaces
quotedString
urlMatchesForString:
rangeOfComposedCharacterSequenceAtIndex:
_findLineBreakInRange:maxCharWidthCount:endIsURL:
deleteCharactersInRange:
fragmentCount
getString:quoteLevel:ofFragmentAtIndex:
_outputQuotedParagraph:range:withQuoteLevel:
copyWithZone:
_inputDocument
_encoding
_quotedString
_addedTrailingSpaces
_lineString
currentLocale
localeIdentifier
getCharacters:
initWithCharacters:length:
stringByAppendingPathComponent:
fileSystemRepresentation
initWithString:
initWithName:andDelegate:
isHTML
textHtmlPart
initWithMimePart:
bodyData
_initWithMimePart:htmlData:
lock
topLevelPart
initWithObjects:
attachmentFilename
initWithString:relativeToURL:
absoluteURL
path
lastPathComponent
unlock
attachmentForURL:
mimePartForURL:
setAttachment:forURL:
htmlData
initRegularFileWithContents:
configureFileWrapper:
initWithMimeBody:
initWithMimePart:htmlData:encoding:
attachmentsInDocument
preferredCharacterSet
fileWrapper
baseURL
attachmentManager
setAttachmentManager:
_uniqueId
_baseURL
_mimeBody
_htmlPart
_htmlData
_lock
_partsByURL
_partsByFilename
_preferredEncoding
_attachmentManager
initWithURL:
fileURLWithPath:
errorWithDomain:code:userInfo:
isFileURL
_isFileURL
_path
fileExistsAtPath:
mf_valueForExtendedAttribute:ofItemAtPath:error:
dataWithBytes:length:
mf_setValue:forExtendedAttribute:ofItemAtPath:error:
dictionaryWithCapacity:
numberWithUnsignedLong:
stringByDeletingLastPathComponent
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_fileAttributes:
dictionaryWithDictionary:
createFileAtPath:contents:attributes:
exists
save:
fileHandleForWritingAtPath:
seekToEndOfFile
writeData:
_partialDownload
_setPartialDownload:
dataWithContentsOfFile:
subdataWithRange:
dataProviderWithURL:
dataProviderWithPath:
fetchLocalDataForAttachment:
fetchDataForAttachment:withDataConsumer:completion:
messageForAttachment:
storageLocationForAttachment:withMessage:
errorWithMessage:code:
append:isComplete:
dataWithRange:completion:
setUrl:
_url
_isPartialDownload
code
domain
shouldHealAccounts
accountWithProperties:
setWithObjects:
initWithProperties:
knownSchemes
canAuthenticateAccountClass:connection:
initWithPersistentAccount:
_accountClass
_setAccountProperties:
_newPersistentAccount
setPersistentAccount:
uniqueId
sharedAccountStore
existingAccountWithPersistentAccount:
accountTypeIdentifier
newPersistentAccountWithAccountTypeIdentifier:
supportedDataclassesWithAccountTypeIdentifier:
setWithArray:
setProvisionedDataclasses:
setEnabled:forDataclass:
setAuthenticated:
releaseAllConnections
persistentAccountDidChange:previousAccount:
savePersistentAccountWithAccount:
removePersistentAccountWithAccount:
accountPropertyForKey:
persistentAccount
parentAccount
parentAccountIdentifier
accountProperties
_basicPropertyForKey:persistentAccount:
_setBasicProperty:forKey:persistentAccount:
setAccountProperty:forKey:
setValue:forKey:
removeObjectForKey:
identifier
username
accountDescription
setIdentifier:
setUsername:
setAccountDescription:
accountTypeString
displayedAccountTypeString
accountInfoDidChange
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
setOAuth2Token:refreshToken:error:
excludedAccountPropertyKeys
containsObject:
setPassword:
addressListFromEncodedString:
_queueAccountInfoDidChange
removeAccountPropertyForKey:
usesSSL
password
boolValue
isActive
setActive:
mf_stringWithNoExtraSpaces
isManaged
_boolForAccountInfoKey:defaultValue:
_credentialCreateIfNecessary:
_credentialCreateIfNecessary:error:
credentialWithError:
setCredential:
_password
_passwordWithError:
preferredAuthScheme
requiresPassword
mf_isInaccessibleAccountCredentialError
credentialItemForKey:error:
credentialItemForKey:
setCredentialItem:forKey:error:
setCredentialItem:forKey:
oauthToken
setOauthToken:
setOauthRefreshToken:
accountForRenewingCredentials
persistentStore
errorWithDomain:code:localizedDescription:title:userInfo:
renewCredentialsForAccount:options:completion:
dictionary
setObject:forKeyedSubscript:
_renewCredentialsWithOptions:completion:
openAuthenticationURL:forAccount:shouldConfirm:completion:
defaultSecurePortNumber
defaultPortNumber
portNumber
predefinedValueForKey:
_shouldTryDirectSSLConnectionOnPort:
copyIdentityForPersistentReference:error:
copyClientSSLIdentityForHostName:error:
persistentReferenceForIdentity:error:
properties
requiresAuthentication
schemeWithName:
name
connectionClass
connectionClassForAccountClass:
_newConnection
_connectAndAuthenticate:
setUsesSSL:
setHostname:
setPortNumber:
certUIService
setCertUIService:
clientCertificates
setClientCertificates:
setTryDirectSSL:
tryDirectSSL
secureServiceName
serviceName
setServiceName:
connectionServiceType
setConnectionServiceType:
allowsTrustPrompt
setAllowsTrustPrompt:
setAccountIdentifier:
sourceApplicationBundleIdentifier
setSourceApplicationBundleIdentifier:
defaultConnectionSettings
credentialAccessibility
localizedDescription
customDescriptionForError:authScheme:defaultDescription:
setLocalizedDescription:
connectUsingFallbacksForAccount:
authenticateUsingAccount:
disconnect
reportAuthenticationError:authScheme:
enabledDataclasses
allObjects
isEnabledForDataclass:
setShouldHealAccounts:
newAccountWithDictionary:
authSchemesForAccountClass
accountWithPersistentAccount:
existingAccountForUniqueID:
isPredefinedAccountType
propertiesWhichRequireValidation
displayedShortAccountTypeString
legacyKeychainProtocol
accountPropertiesValueForKey:value:
isCommonPortNumber:
isSSLEditable
saslProfileName
supportedDataclasses
shouldFetchACEDBInfoForError:
savePersistentAccount
removePersistentAccount
accountClass
setValueInAccountProperties:forKey:
removeValueInAccountPropertiesForKey:
valueInAccountPropertiesForKey:
_objectForAccountInfoKey:
canGoOffline
setDisplayName:
supportsMailDrop
_credential
oauth2Token
renewCredentialsWithCompletion:
promptUserForPasswordWithTitle:message:completionHandler:
promptUserForWebLoginWithURL:shouldConfirm:completionHandler:
managedTag
fetchTokensIfNecessary:
releaseAllForcedConnections
validateConnections
setDomain:
setPreferredAuthScheme:
authenticatedConnection
applySettingsAsDefault:
alternateConnectionSettings
insecureConnectionSettings
secureConnectionSettings
syncStoreIdentifier
nameForMailboxUid:
shouldEnableAfterError:
enableAccount
shouldDisplayHostnameInErrorMessages
missingPasswordErrorWithTitle:
inaccessiblePasswordErrorWithTitle:
loginDisabledErrorWithTitle:
isSyncingNotes
copyDiagnosticInformation
_persistentAccount
_persistentAccountLock
_unsavedAccountProperties
_sourceApplicationBundleIdentifier
mf_isMissingAccountCredentialError
addData:forContentID:
isEqualToData:
initWithData:
removeAllObjects
dataForContentID:
rawDataForContentID:
isPlaceholderSerializedRepresentation:
placeholderFromSerializedRepresentation:
dataForPlaceholder:
_dataForAttachment:
attachmentStorageLocation
part
partNumber
initWithData:forContentID:
removeDataForAttachment:
recordPasteboardDataForAttachments:
recordUndoDataForAttachments:
_attachmentsData
_attachmentsPlaceholderData
_attachmentsPasteboardData
_attachmentsUndoData
initWithPID:flags:reason:name:withHandler:
invalidate
initWithName:expiration:preventIdleSleep:
cancelTimer
valid
initWithName:
initWithName:preventIdleSleep:
isValid
_assertion
_timer
mf_stringByExpandingTildeWithSharedResourcesDirectoryInPath
tildeAbbreviatedPath
mf_betterStringByResolvingSymlinksInPath
_addAccountToSortedPaths:
accountID
setDAAccount:
accountsWithTypeIdentifiers:error:
_loadDataAccessAccountsWithError:
existingDAMailAccountForDAAccount:
initWithDAAccount:
_removeLookAsideValuesNotInAccountList:
accountDidLoad
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
disableMailboxListingNotifications
date
_loadAllAccountsWithOptions:error:
_setMailAccounts:saveIfChanged:alreadyLocked:
enableMailboxListingNotifications:
mailAccountsWithError:
reloadAccounts
setMailAccounts:saveIfChanged:
setMaxConcurrentOperationCount:
localAccount
insertObject:atIndex:
_setupSortedPathsForAccounts:
addOperationWithBlock:
waitUntilAllOperationsAreFinished
activeAccountsWithError:
mf_filter:
purgableAccountsWithError:
supportsPurge
mailAccounts
mf_firstObjectPassingTest:
isEquivalentTo:hostname:username:
isAccountClassEquivalentTo:
isHostnameEquivalentTo:
isUsernameEquivalentTo:
activeAccounts
resetMailboxTimer
mf_addressComment
emailAddressesAndAliasesList
mf_uncommentedAddressList
caseInsensitiveCompare:
fullUserName
_accountContainingEmailAddress:matchingAddress:fullUserName:includingInactive:
accountContainingEmailAddress:includingInactive:
senders
accountForHeaders:message:includingInactive:
copyAddressListForTo
copyAddressListForCc
mailboxUidForRelativePath:create:
_setOutboxMailboxUid:
resetSpecialMailboxes
outboxMailboxUid
rootMailboxUid
mutableCopyOfChildren
primaryMailboxUid
mf_map:
initWithPath:
isActiveWithPersistentAccount:
_didBecomeActive:
_invalidateCachedMailboxen
newAccountWithPath:
initWithLibrary:persistentAccount:
deliveryAccountWillBeRemoved:
addObserver:selector:name:object:
setupLibrary
storeClassForMailbox:
initWithBlock:
_setPath:
initWithLibrary:path:
removeObserver:
defaultAccountDirectory
defaultPathNameForAccountWithHostname:username:
defaultPathForAccountWithHostname:username:
setPath:
mf_stringByReallyAbbreviatingSharedResourcesDirectoryWithTildeInPath
_defaultMailAccountForDeliveryIncludingRestricted:
mainBundle
bundleIdentifier
accountWithUniqueId:
restrictedFromSendingExternally
defaultMailAccountForDelivery
deliveryAccount
_deliveryAccountCreateIfNeeded:
initWithBool:
accountWithIdentifier:
primaryDeliveryAccountIsDynamic
emailAddresses
defaultEmailAddress
emailAddressesDictionary
dictionaryWithObjects:forKeys:
receiveEmailAliasAddresses
fromEmailAddressesIncludingDisabled
doubleValue
dateWithTimeIntervalSince1970:
timeIntervalSince1970
initWithDouble:
lastEmailAliasesSyncDate
timeIntervalSinceNow
updateEmailAliases
addEntriesFromDictionary:
_assignSpecialMailboxToAppropriateIvar:forType:
invalidateAccount:
allMailboxUids
allLocalMailboxUids
deleteMailboxes:account:
deleteMailbox:
notificationWithName:object:userInfo:
postNotification:
outboxMessageStore:
deleteAccount:
_deleteHook
_invalidateAndDeleteAccountData:
_asynchronouslyInvalidateAndDeleteAccountData:
saveState
makeObjectsPerformSelector:withObject:
_usesMailboxCache
_writeMailboxCacheWithPrejudice:
canFetch
_mailboxPathPrefix
_loadEntriesFromFileSystemPath:parent:
emptyTrash
sharedInvocationQueue
_synchronizeMailboxListWithFileSystem
isStandardizedMailboxUid
isSelectable
_cachedSpecialMailboxOfType:
_specialMailboxUidWithType:create:
exchangeObjectAtIndex:withObjectAtIndex:
allMailMailboxUid
suggestionsLostMessageSearchTimestamp
suggestionsLostMessageSearchResultCount
sortedArrayUsingComparator:
_setSpecialMailbox:forType:
_canEmptyMessagesFromMailboxUid:
_emptyFrequencyForKey:defaultValue:
_setEmptyFrequency:forKey:
firstEmailAddress
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
_pathComponentForUidName:
mailboxListingNotificationAreEnabled
_resetSpecialMailboxes
mf_isSubdirectoryOfPath:
mailboxUidForFileSystemPath:
pathComponents
renameMailbox:newName:parent:
parent
_renameMailbox:newName:parent:
attributes
depthFirstEnumerator
_uidNameForPathComponent:
setName:
setParent:
flushCriteria
makeObjectsPerformSelector:
mf_makeCompletePath:mode:
renameMailboxes:to:
stringByDeletingPathExtension
_synchronouslyLoadListingForParent:
_deleteMailbox:
_setChildren:forMailboxUid:
_resetAllMailboxURLs:
storeClass
mailboxUidForRelativePath:create:withOption:
childWithName:
childWithExtraAttribute:
childWithPermanentTag:
mailboxPathExtension
hasSuffix:
_childOfMailbox:withComponentName:
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
setChildren:
scheme
user
host
port
_URLScheme
_accountForURL:
_infoForMatchingURL:
_URLForInfo:
absoluteString
URLWithString:
infoForURL:
mailboxUidForInfo:
emptyFrequencyForMailboxType:
setLastEmailAliasesSyncDate:
bundleForClass:
pathForResource:ofType:
propertyListWithData:options:format:error:
standardAccountClass:valueForKey:
libraryIDForAccount:
createLibraryIDForAccount:
cachePolicy
statisticsKind
mf_objectForKey:ofClass:
initWithName:condition:andDelegate:
lockWhenCondition:
unlockWithCondition:
object
setDeliveryAccount:
setWithObject:
mailboxUidForFileSystemPath:create:
stringByStandardizingPath
_removeAccountFromSortedPaths:
setAttributes:
_copyMailboxWithParent:name:attributes:dictionary:
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
replaceObjectAtIndex:withObject:
mf_insertObject:usingSortFunction:context:allowDuplicates:
_cleanInboxDuplication:
contentsOfDirectoryAtPath:error:
_loadMailboxListingIntoCache:attributes:children:parent:
mf_makeDirectoryWithMode:
mailboxCachePath
_writeCustomInfoToMailboxCache:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
stringByAppendingFormat:
_specialMailboxIvarOfType:
setRepresentedAccount:
specialMailboxNameForType:
_setSpecialMailboxName:forType:
_defaultSpecialMailboxNameForType:
accountAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
relativePath
URLPathAllowedCharacterSet
existingAccountWithIdentifier:
initWithName:attributes:forAccount:permanentTag:
initWithName:attributes:forAccount:extraAttributes:
pathRelativeToMailbox:
restrictedFromTransferingMessagesToOtherAccounts
supportsAppend
isMailboxLocalForType:
isMobileMail
valueInAccountLookAsidePropertiesForKey:
setValueInAccountLookAsideProperties:forKey:
_setValueInAccountLookAsideProperties:forKey:subKey:
MCIsManaged
unsupportedContinuationTypes
initialize
setMailAccountLoadOptions:
lastMailAccountsReloadDate
lastMailAccountsReloadError
setMailAccounts:
purgableAccounts
existingAccountWithType:hostname:username:
resetMailboxTimers
updateAutoFetchSettings
allEmailAddressesIncludingFullUserName:includeReceiveAliases:
accountContainingEmailAddress:
accountUsingHeadersFromMessage:
accountThatMessageIsFrom:includingInactive:
addressesThatReceivedMessage:
allActivePrimaryMailboxUids
accountWithPath:
setGlobalPathForAccounts:
defaultMailAccountForDeliveryExcludingRestricted
defaultDeliveryAccount
saveStateForAllAccounts
csAccountTypeString
synchronouslyEmptyMailboxUidType:inAccounts:
URLForInfo:
accountWithURLString:
mailboxUidFromActiveAccountsForURL:
updateEmailAliasesForActiveAccounts
usernameIsEmailAddress
getConfigurationFromServerForEmail:
_accountWithPath:
setDataclassesConsideredActive:
uniqueIdForPersistentConnection
setLastKnownHostname:
setFullUserName:
isPrimaryDeliveryAccountDisabled
setPrimaryDeliveryAccountDisabled:
deliveryAccountAlternates
setDeliveryAccountAlternates:
canUseDeliveryAccount:
setCanUseCarrierDeliveryFallback:
canUseCarrierDeliveryFallback
setDefaultEmailAddress:
setEnabled:forEmailAddress:
pushUpdateForAliasData
setEmailAddresses:
receiveEmailAliasAddressesList
setReceiveEmailAliasAddresses:
fromEmailAddresses
emailAddressesAndAliases
invalidateAndDelete
_shouldConfigureMailboxCache
nowWouldBeAGoodTimeToStartBackgroundSynchronization
fetchMailboxList
canAppendMessages
shouldExpungeMessagesOnDelete
isSpecialMailbox:
mailboxesForSuggestionsLostMessageSearchPriorToTime:
transferDisabledMailboxUids
setMailboxUid:forMailboxType:
setEmptyFrequency:forMailboxType:
displayNameForMailboxUid:
canCreateNewMailboxes
newMailboxNameIsAcceptable:reasonForFailure:
canMailboxBeRenamed:
canMailboxBeDeleted:
moveMailbox:intoParent:
renameMailbox:newName:
resetMailboxURLs
setConnectionError:
connectionError
mailboxUidForURL:
startListeningForNotifications
stopListeningForNotifications
transferNotificationSessionToAccount:
systemDidWake
systemWillSleep
canForwardWithoutDownload
shouldAppearInMailSettings
supportsRemoteAppend
supportsSyncingReadState
supportsMailboxEditing
setCachePolicy:
displayUsername
archiveSentMessages
supportsMessageFlagging
derivesDeliveryAccountInfoFromMailAccount
deleteInPlaceForAllMailboxes
displayNameUsingSpecialNamesForMailboxUid:
loggingIdentifier
meetingStorePersistentID
reconstituteOrphanedMeetingInMessage:
unactionableInvitationICSRepresentationInMessage:summary:
hasEnoughInformationForEasySetup
canReceiveNewMailNotifications
_registerPushNotificationPrefix:forMailboxNames:
addUserFocusMailbox:
removeUserFocusMailbox:
pushedMailboxUids
supportsUserPushedMailboxes
changePushedMailboxUidsAdded:deleted:
_mailboxesWereRemovedFromTree:withFileSystemPaths:
setMailboxCachePath:
_shouldLogDeleteActivity
_readCustomInfoFromMailboxCache:
URLForMessage:
newMailboxWithParent:name:
_localMailboxNameForType:usingDisplayName:
shouldFetchBodiesWhenMovingToTrash
iconString
saveSentFolder
signingIdentityPersistentReferenceForAddress:
setSigningIdentityPersistentReference:forAddress:
encryptionIdentityPersistentReferenceForAddress:
setEncryptionIdentityPersistentReference:forAddress:
secureMIMEEnabled
perMessageEncryptionEnabled
secureCompositionSigningPolicyForAddress:
secureCompositionEncryptionPolicyForAddress:
copyDataForRemoteEncryptionCertificatesForAddress:error:
restrictedFromSyncingRecents
customSignature
setCustomSignature:
supportsThreadOperations
sourceIsManaged
supportsContinuationType:
supportsFastRemoteBodySearch
_nonPersistentPath
_rootMailboxUid
_inboxMailboxUid
_draftsMailboxUid
_sentMessagesMailboxUid
_trashMailboxUid
_archiveMailboxUid
_junkMailboxUid
_cachedMailboxenLock
_deletionLock
_lastConnectionError
_library
_currentChokedActions
_mailboxCachePath
_messageStoresCache
_cachedLibraryID
_cachedLibraryIDLock
_lastKnownHostname
_supportsFastRemoteBodySearch
mf_indexOfMailboxDictionaryWithName:
mf_formattedAddressWithName:email:useQuotes:
arrayByAddingObjectsFromArray:
initWithContentsOfFile:options:error:
handleFailureInFunction:file:lineNumber:description:
initWithObjectsAndKeys:
children
permanentTag
extraAttributes
weakReferenceWithObject:
initWithAccount:
_initWithName:attributes:forAccount:
retainedReference
specialNameForType:
serverUnreadOnlyOnServerCountForMailbox:
unreadCountForMailbox:
unreadCountForMailbox:matchingCriterion:
nonDeletedCountForMailbox:
_mutableChildren
childEnumeratorIncludingHiddenChildren:
_initWithMailbox:includeHiddenChildren:
initWithMailbox:
numberOfDescendants
isEqualToArray:
URLStringNonNil
fullPathNonNil
dictionaryWithObject:forKey:
isStore
sortUsingFunction:context:
reference
removeObject:
topMailbox
rootMailbox
saveUserInfo
removeChild:
isStandardizedMailboxUidType:
isSentMailboxType:
isOutgoingMailboxType:
ancestralAccount
criterion
criterionType
expression
mailboxIDForURLString:
initWithContentsOfFile:
_loadUserInfo
mergeWithUserInfo:
userInfoObjectForKey:
setUserInfoObject:forKey:
URLStringWithAccount:
criterionForMailboxURL:
storeWithMailbox:
addToPostOrderTraversal:
unsignedIntegerValue
numberWithUnsignedInteger:
timeIntervalSinceReferenceDate
numberWithDouble:
isDraftsMailboxType:
displayNameUsingSpecialNames
accountDisplayName
nonDeletedCount
hasChildren
childEnumerator
numberOfChildren
childAtIndex:
indexOfChild:
descendantWithExtraAttribute:
descendantWithPermanentTag:
sortChildren
isContainer
isSpecialMailboxUid
isSentMailboxUid
isOutgoingMailboxUid
isNotesMailboxUid
realFullPath
pathRelativeToMailboxForDisplay:
oldURLString
mailboxID
compareWithMailboxUid:
indexToInsertChildMailboxUid:
isDescendantOfMailbox:
isVisible
userInfoBoolForKey:
setUserInfoBool:forKey:
userInfoDictionary
setUserInfoWithDictionary:
userInfoForSerialization
setCriterion:
isShared
alwaysWriteFullMessageFile
setLastViewedMessageID:
updateSuggestionsLostMessageSearchResultCount:
setExtraAttributes:
setPermanentTag:
_mailboxID
_pathComponent
_attributes
_parent
_children
_representedAccount
_criterion
allCriteriaMustBeSatisfied
_realFullPath
_extraAttributes
_pendingLevel
_type
_userInfo
_permanentTag
_mailboxes
_index
_includeHidden
compare:
setUserProfileProvider:
setMailboxIDCache:
setParameters:
initWithUserProfileProvider:libraryAdapter:
_mergeDefaultParameters:withParameters:
setDebugLog:
debugLog
initWithDebugOutput:
_modeParameterIs:
persistentID
subject
_predictionsForMessage:limit:
measure
setMeasure:
object:withMeasure:
allValues
max:
reverseSortedObjects:limit:
parameters
_summedWeightedPredictionsForMessage:limit:
_orderedModePredictionForMessage:
_weightedModePredictionsForMessage:
_countsForField:message:
_topHitFromMailboxDictionary:message:
mailbox
_removeSpecialMailboxesInCounts:message:
_conversationIDCountsForMessage:
_senderCountsForMessage:
_recipientCountsForMessage:
_listIDCountsForMessage:
conversationID
_limitToRecents
numberWithLongLong:
countMessagesMatchingQuery:variable:groupBy:
firstSenderAddress
lowercaseString
listIDHash
_allowedRecipientsForMessage:
mailboxIDCache
mailboxesMatchingQuery:variable:
_userCreatedMailboxIDs
removeObjectsForKeys:
setObject:
enumerateKeysAndObjectsUsingBlock:
_normalizedTermFrequencyTopHitFromDictionary:withThreshold:
_topHitFromMailboxDictionary:
sortedArrayUsingSelector:
objectAtIndexedSubscript:
_objectWithMeasure:timesHigherThanFollowUpInMeasures:
userProfileProvider
allEmailAddresses
toAddressList
_isAllowedAddress:
ccAddressList
predictMailboxIDsForMessages:limit:diagnostics:
initWithUserProfileProvider:libraryAdapter:parameters:
_userProfileProvider
_parameters
_mailboxIDCache
_debugLog
transientDraftsFolderShouldCreate:
resourceSpecifier
stringByRemovingPercentEncoding
transientDraftsFolder
displayNameAtPath:
newDeliveryWithMessage:
newDeliveryWithHeaders:mixedContent:textPartsAreHTML:
newDeliveryWithHeaders:HTML:plainTextAlternative:other:charsets:
newWithMessage:
deliverSynchronously
stripInternalHeaders
newMessageWriter
setDateSentTimeIntervalSince1970:
originalHeaders
removeHeaderForKey:
headersForDelivery
deliverMessageData:toRecipients:
setStatus:
initWithStatus:
setCanBeCancelled:
newWithHeaders:mixedContent:textPartsAreHTML:
newWithHeaders:HTML:plainTextAlternative:other:charsets:
deliverMessage:
initWithMessage:
initWithHeaders:mixedContent:textPartsAreHTML:
initWithHeaders:HTML:plainTextAlternative:other:charsets:
archiveAccount
setArchiveAccount:
setAccount:
deliveryStatus
deliveryResult
shouldSignMessage
shouldEncryptMessage
deliverAsynchronously
setCellDataOnly:
archive
setCompositionSpecification:
conversationFlags
setConversationFlags:
isUserRequested
setIsUserRequested:
_message
_archiveAccount
_result
_headers
_mixedContent
_textPartsAreHTML
_htmlString
_plainTextAlternative
_otherStringsAndAttachments
_charsets
_threaded
_useCellDataOnly
_isUserRequested
_conversationFlags
initWithArray:
_postDeliveryAccountsHaveChanged
notificationWithName:object:
isMainThread
performSelectorOnMainThread:withObject:waitUntilDone:
deliveryAccounts
accountWithHostname:username:lookForExistingAccounts:
existingAccountWithHostname:username:
_updateAccountDescriptionWithUsername:hostname:
addDeliveryAccount:
deliveryClass
setShouldUseAuthentication:
unsignedLongLongValue
maximumMessageBytes
reloadDeliveryAccounts
removeDeliveryAccount:
accountWithHostname:username:
carrierDeliveryAccount
newDefaultInstance
shouldUseAuthentication
setMaximumMessageBytes:
mailAccountIfAvailable
hasNoReferences
displayHostname
canBeFallbackAccount
supportsOutboxCopy
shouldUseSaveSentForAccount:
isBanner
UUID
directUrlString
laterDate:
fileSize
setFileSize:
setMimeType:
autoArchive
setAutoArchive:
directUrl
setDirectUrl:
wrappedUrlString
wrappedUrl
setWrappedUrl:
expiration
setExpiration:
setFlags:
setUUID:
dataUsingEncoding:
mf_MD5Digest
mf_copyHexString
UUIDString
isPhotoArchive
isExpired
isBannerWithMultiple
merge:
isInvalid
setIsInvalid:
_uuid
_autoArchive
_isInvalid
_fileName
_fileSize
_mimeType
_directUrl
_wrappedUrl
_expiration
authenticatedConnection:
resetConnectionStats
_openConnection
setPercentDone:
supportsBinaryMime
numberOfNewlinesNeedingConversion:
mf_stringRepresentationForBytes:
setUseSaveSent:toFolder:
enableThroughputMonitoring:
mailFrom:recipients:withData:host:errorTitle:errorMessage:serverResponse:displayError:errorCode:
setSupportsOutboxCopy:
checkInConnection:
abort
quit
setMoreInfo:
setDuration:
bytesWritten
setBytesSent:
_connection
_hasParameter:forKeyword:
_supportsSaveSentExtension
_supportsExtension:
saslName
base64EncodeResponseData
setAuthenticationState:
responseForServerData:
justSentPlainTextPassword
mf_encodeBase64WithoutLineBreaks
_sendCommand:length:argument:trailer:
_getReply
authenticationState
lastResponseLine
mf_decodeBase64
errorForResponse:
_connectUsingAccount:
_doHandshakeUsingAccount:
securityProtocol
setSecurityProtocol:
supports8BitMime
mf_copyIDNAEncodedEmailAddress
setTimeout:
writeData:dontLogBytesInRange:
_sendData:progressHandler:
enumerateConvertingNewlinesUsingBlock:
state
_dataForCommand:length:argument:trailer:
supportsChunking
supportsPipelining
dataForMailFrom:
dataForRcptTo:
dataForDataCmd
_sendData:
errorMessageWithAddress:defaultMessage:
sendBData:
sendData:
mailFrom:
rcptTo:
initWithObjects:count:
writeBytes:length:dontLogBytesInRange:
_setLastResponse:
_sendBytes:length:progressHandler:
mutableBytes
_readResponseRange:isContinuation:
setLastResponseLine:
remoteHostname
setContinuationResponses:
readLineIntoData:
initWithPattern:options:error:
initWithBytesNoCopy:length:encoding:freeWhenDone:
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
connectUsingAccount:
timeout
initWithBytes:length:encoding:
isWritable
uppercaseString
lastResponse
domainName
setDomainName:
supportsEnhancedStatusCodes
authenticationMechanisms
authenticateUsingAccount:authenticator:
noop
timeLastCommandWasSent
_lastResponse
_serviceExtensions
_mdata
_domainName
_saveSentMbox
_originalSocketTimeout
_lastCommandTimestamp
_hideLoggedData
_useSaveSent
_dislikesSaveSentMbox
sourceIPAddress
_defaultSettingsWithPort:useSSL:directSSL:
connectionSettingsForAuthentication:secure:insecure:
mf_shortDescription
setSupportsPipelining:
disconnect:
mf_invocationWithSelector:target:object:
connectionExpired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setTimer
_isAppleServiceDeliveryHostname:
registerAppleServiceDeliveryHostname:
setDeliveryClass:
customAuthenticationErrorStringForError:authScheme:
_deliveryClass
_lastTimerSetTime
_supportsPipelining
_supportsOutboxCopy
dataWithContentsOfURL:options:error:
inputWithData:
_rangeOfCentralDirectory:
_centralDirectory:
_entriesFromCentralDictionary:inData:archiveData:
_centralHeader:
archiveEntryWithCentralHeader:archiveData:
_scrubContentDirectory
indexOfObjectPassingTest:
uncompressedSize
archiveDirectory
rangeOfCentralDirectoryInData:
_hasZipSignature:
archiveEntries
inputWithURL:
mainEntry
setMainEntry:
scrubbedArchiveEntries
setArchiveEntry:
contents
setContents:
_entries
_scrubbedEntries
_mainEntry
_contents
setDateFormat:
localeWithLocaleIdentifier:
setLocale:
stringFromDate:
mf_descriptionForMimeHeaders
mf_replyPrefixForSender:
mf_integerForKey:
mf_setBool:forKey:
mf_setInteger:forKey:
mf_addObject:forKey:
listUnsubscribeCommands
listUnsubscribe
from
flagged
read
answered
junk
senderVIP
conversationVIP
conversationMuted
deleted
isKnownToHaveAttachments
dateReceived
remoteID
dateReceivedInterval
dateSentInterval
conversationHash
messageIDHash
mailboxToRemoteIdDictionary
addRemoteID:mailbox:
enumerateMailboxesAndRemoteIDsUsingBlock:
setMailboxToRemoteIdDictionary:
_mailboxToRemoteIdDictionary
mf_waitForLock
_passwordForHost:username:port:keychainProtocol:
_passwordForGenericAccount:service:error:
passwordForServiceName:accountName:synchronizable:error:
passwordForServiceName:accountName:error:
mf_copyUncommentedAddress
_matchSSLClientIdentity:withHostname:
validateSigningIdentity:forAddress:error:
_copyAllIdentitiesWithError:usingBlock:
validateEncryptionIdentity:forAddress:error:
copySMIMESigningPolicyForAddress:
_validateIdentity:forAddress:policy:usage:error:
copySMIMEEncryptionPolicyForAddress:
newTrustManager
actionForSMIMETrust:sender:
initWithObjects:forKeys:count:
_copyCertificateForPersistent:error:
_removeCertificateForPersistent:
_addCertificate:persistent:
_addPersistentMapping:forAddress:
_actionForCertificate:policy:uncommentedAddress:
passwordForHost:username:port:keychainProtocol:
setPassword:forHost:username:port:keychainProtocol:keychainAccessibility:
removePasswordForHost:username:port:keychainProtocol:
passwordForServiceName:accountName:
addPassword:forServiceName:accountName:keychainAccessibility:synchronizable:error:
setPassword:forServiceName:accountName:keychainAccessibility:
removePasswordForServiceName:accountName:
copyAllSigningIdentitiesForAddress:error:
copyAllEncryptionIdentitiesForAddress:error:
copyEncryptionCertificateForAddress:error:
saveEncryptionCertificate:forAddress:
actionForSigningIdentity:address:
actionForEncryptionCertificate:address:
mf_flatten
unionSet:
mf_anyPassingTest:
pairWithFirst:second:
mf_flatMap:
mf_any:
mf_countObjectsPassingTest:
mf_partition:
countForObject:
mf_insertObject:usingComparator:allowDuplicates:
mf_debugDescription
mf_subjectPrefixLength
subjectPrefixLength
senderList
toList
ccList
bccList
sender
setSender:
setSenderList:
setTo:
setToList:
setCc:
setCcList:
setBcc:
setBccList:
subjectWithoutPrefix
participants
setLibraryID:
setMessageIDHash:
references
setReferences:
messageIDsBySubject
setMessageIDsBySubject:
setMailboxID:
conversationIDHash
setConversationIDHash:
conversationFlagsRef
setConversationFlagsRef:
setDateSentInterval:
_sender
_senderList
_toList
_ccList
_bcc
_bccList
_libraryID
_subject
_references
_messageIDsBySubject
_conversationFlagsRef
_messageIDHash
_conversationIDHash
_dateSentInterval
mf_copyStringByEncodingIDNA
compare:options:range:
getFileSystemRepresentation:maxLength:
initWithUTF8String:
getCharacters:range:
stringByReplacingOccurrencesOfString:withString:options:range:
defaultAllowedCharacterSet
mf_containsSubstring:options:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
mf_stringByLocalizingReOrFwdPrefix
mf_fileSystemString
mf_uniqueFilenameWithRespectToFilenames:
mf_stringByEscapingForXML
mf_stringByEscapingHTMLCodes
mf_stringByAddingPercentEscapesUsingEncoding:
mf_stringByReplacingPercentEscapesUsingEncoding:
mf_caseInsensitiveIsEqualToString:
mf_containsSubstring:
mf_stringByTrimmingWhitespaceAndNewlineCharacters
mf_stringWithAttachmentCharacter
mf_stringForMimeTypeFromFileName:
mf_stringByAbbreviatingSharedResourcesDirectoryWithTildeInPath
stringByResolvingSymlinksInPath
stringWithFileSystemRepresentation:length:
stringWithCharacters:length:
mf_canonicalizedAbsolutePath
registerSchemeClass:
authenticatorClass
initWithAuthScheme:account:connection:
authSchemesForAccount:connection:
defaultPortForAccount:
hasEncryption
authenticatorForAccount:connection:
humanReadableName
authScheme
supportsInitialClientResponse
securityLayer
isUsingSSL
couldRetry
setMissingPasswordError
_authScheme
_authenticationState
isVIP
loginDisabled
_justSentPassword
addSMIMETrust:sender:
removeSMIMETrust:sender:
_hasExceptionsForSMIMETrust:sender:
initWithSender:trust:verification:
commonName
emailAddress
action
certificates
copyTrust
addTrustException
removeTrustException
hasTrustException
_status
_trust
_uncommentedSender
initWithLibraryID:
messageID
urlForMailboxID:
mailboxUidForMessage:
_updateUID
numberWithUnsignedInt:
stringValue
commit
setMessage:isPartial:
isMessageContentsLocallyAvailable:
hasTemporaryUid
setSummary:
setSummary:forMessage:
setMessageFlagsWithoutCommitting:
mf_SHA1Digest
dataPathForMessage:
dataPathForMessage:part:
sharedInstanceIfExists
accountForMessage:
originalMailboxID
setData:forMessage:isPartial:
dataConsumerForMessage:part:
copyMessageInfo
setUid:
setUidIsLibraryID:
_initializeMetadata
updateMessage:withMetadata:
metadataForMessage:key:
_attachmentStorageLocation
messageWithLibraryID:options:inMailbox:
_forceLoadOfMessageSummaryFromProtectedStore
loadCachedHeaderValuesFromHeaders:
messageWithLibraryID:
setOriginalMailboxID:
originalMailboxURL
setMessageSize:
uniqueRemoteId
setUniqueRemoteId:
isPartial
setIsPartial:
setHasTemporaryUid:
mailboxName
compareByUidWithMessage:
setMutableInfoFromMessage:
dataPathForMimePart:
markAsViewed
markAsNotViewed
markAsFlagged
markAsNotFlagged
markAsReplied
markAsForwarded
preferredEmailAddressToReplyWith
setRemoteID:flags:size:mailboxID:originalMailboxID:
setMessageData:isPartial:
dataConsumerForMimePart:
isLibraryMessage
setMetadataValue:forKey:
metadataValueForKey:
_remoteID
_uid
_uniqueRemoteId
_size
_originalMailboxID
_messageID
_metadata
_metadataChangedKeys
_metadataLock
_invalidate
comparator
containsIndex:
addIndex:
duplicatePreferenceComparator
indexOfMessageInfo:
sortUid
setSortUid:
sortDateReceivedInterval
setSortDateReceivedInterval:
setObject:atIndexedSubscript:
_addMessageInfoToDuplicates:
removeIndex:
_removeDuplicatesForMessageInfo:
mf_removeObject:usingComparator:
messageInfoAtIndex:
removeMessageInfo:
removeMessageInfoAtIndex:
enumerateIndexesWithOptions:usingBlock:
mf_indexOfObject:usingComparator:
mf_indexWhereObjectWouldBeInserted:usingComparator:
mf_objectEquivalentTo:usingComparator:
allMessageInfos
arrayWithObject:
duplicatesOfMessageInfo:
_duplicateMessageInfosForMessageInfo:
enumerateObjectsWithOptions:usingBlock:
initWithComparator:
addMessageInfo:
removeMessageInfosAtIndexes:
removeAllMessageInfos
indexWhereMessageInfoWouldBeInserted:
messageInfoEquivalentToMessageInfo:
countWithDuplicates
setComparator:
setDuplicatePreferenceComparator:
uniqueMessageInfos
firstMessage
lastMessage
enumerateUniqueMessageInfosWithOptions:usingBlock:
_knownMessageIDs
_mutableMessageInfos
_duplicateMessageInfos
_comparator
_duplicatePreferenceComparator
initWithCriterion:mailbox:readOnly:
initWithCriterion:
removeObserver:name:object:
_queueMessagesAdded:
_queueMessageFlagsChanged:
_queueMessagesWillBeCompacted:
_queueMessagesWereCompacted:
setThreadRecycleTimeout:
totalCountForMailbox:
nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
allNonDeleteCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
setMessageStore:
messagesWithSummariesForMailbox:range:
messageIsDeletedCriterion:
messageIsServerSearchResultCriterion:
andCompoundCriterionWithCriteria:
messagesMatchingCriterion:options:range:
generationNumber
copyMessageInfosForMailbox:
copyOfMessageInfos
copyMessageInfosMatchingCriterion:
copyMessageInfosForConversationsContainingMessagesMatchingCriterion:forMailbox:
copyOfMessagesInRange:options:generation:
copyOfMessagesInRange:options:
addCountsForMessages:shouldUpdateUnreadCount:
messagesWithoutSummariesForMailbox:fromRowID:limit:
initWithType:qualifier:expression:
setCriterionIdentifier:
orCompoundCriterionWithCriteria:
messagesMatchingCriterion:options:
copyMessagesWithRemoteIDs:options:inRemoteMailbox:
copySendersByLibraryIDForConversation:mailbox:limit:
oldestKnownConversationInMailbox:
oldestKnownMessageInMailbox:
serverSearchResultMessagesForMailbox:
dateOfOldestNonIndexedNonSearchResultMessageInMailbox:
dateOfNewestNonSearchResultMessageInMailbox:
dateOfOldestNonSearchResultMessageInMailbox:
setEarliestReceivedDate:
isFatPipe
is4GConnection
is3GConnection
_fetchWindowMultiple
_fetchWindowMinimum
_calculateFetchWindowWithAdditionalMultiple:
userInfo
filterContiguousMessages:forCriterion:options:
filterMessagesByMembership:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
_memberMessagesWithCompactionNotification:
messageWithMessageID:options:inMailbox:
headerDataForMessage:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:
dataForMimePart:inRange:isComplete:withConsumer:downloadIfNecessary:didDownload:
parentPart
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:
_cachedBodyDataContainerForMessage:valueIfNotPresent:
mf_subdataWithRange:
dataForMimePart:isComplete:
_fetchDataForMimePart:range:isComplete:consumer:
dataConsumerForMessage:part:incomplete:
isAttachment
dataForMimePart:inRange:isComplete:downloadIfNecessary:didDownload:
decodedDataForData:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:
initWithData:partial:incomplete:
messageBodyUpdatingFlags:
messageBodyIfAvailableUpdatingFlags:
_copyDataFromMimePart:threshold:downloadIfNecessary:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
deleteBodyDataForMessage:
deleteDataForMessage:
messagesForMailbox:olderThanNumberOfDays:
compactMessages:
setFlagsFromDictionary:forMessagesInMailboxURLString:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
compactMailbox:
mf_canWriteToDirectoryAtPath:
setKeyGenerator:
_cachedHeadersForMessage:valueIfNotPresent:
subarrayWithRange:
purgeMessages:
pep_getInvocation:
handleMessagesAdded:earliestReceivedDate:
retainArguments
_addInvocationToQueue:
handleMessageFlagsChanged:
handleMessagesWillBeCompacted:
handleMessagesCompacted:
hasCompleteDataForMimePart:
defaultLoadOptions
storeWithCriterion:
messageWithLibraryID:options:
copyOfMessageInfosMatchingCriterion:
copyOfMessageInfosForConversationsContainingMessagesMatchingCriterion:
copySendersByLibraryIDForConversation:limit:
oldestKnownConversation
oldestKnownMessage
serverSearchResults
dateOfOldestNonIndexedNonSearchResultMessage
dateOfNewestNonSearchResultMessage
willFetchMessages
bodyFetchRequiresNetworkActivity
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
bodyDataForMessage:isComplete:isPartial:downloadIfNecessary:
updateMetadata
updateUserInfoToLatestValues
_setNeedsAutosave
newObjectCache
_cachedBodyForMessage:valueIfNotPresent:
earliestReceivedDate
_earliestReceivedDate
_serverMessageCount
_fetchWindow
mf_decodeFailedErrorWithUserInfo:
content
initWithSearchString:options:
dataWithData:
matchesUTF8String:matchType:
criteriaFromDefaultsArray:removingRecognizedKeys:
initWithDictionary:andRemoveRecognizedKeysIfMutable:
dictionaryRepresentation
setExpression:
setCriterionType:
setQualifier:
initWithCriterion:expression:
messageRuleQualifierForString:
setAllCriteriaMustBeSatisfied:
setCriteria:
criterionIdentifier
qualifier
includeRemoteBodyContent
criteria
descriptionWithDepth:
_qualifierString
criterionTypeForString:
stringForCriterionType:
stringForMessageRuleQualifier:
mf_commaSeparatedString
uniqueHeaderKeyStringForString:
doesMessageSatisfyCriterion:
_headersRequiredForEvaluation
copyHeadersForKey:
isStructuredHeaderKey:
firstSender
rangeOfString:options:range:locale:
numberOfAttachments
dateSent
longLongValue
_evaluateCompoundCriterion:
_evaluateFlagCriterion:
_evaluateAddressBookCriterion:
_evaluateHeaderCriterion:
_evaluateSenderHeaderCriterion:
_evaluateAccountCriterion:
_evaluateDateCriterion:
_evaluateAddressHistoryCriterion:
_evaluateFullNameCriterion:
_evaluateIsDigitallySignedCriterion:
_evaluateIsEncryptedCriterion:
_evaluatePriorityIsNormalCriterion:
_evaluatePriorityIsHighCriterion:
_evaluatePriorityIsLowCriterion:
_evaluateAttachmentCriterion:
_evaluateConversationIDCriterion:
simplifiedCriterion
simplifyOnce
criterionForConversationID:
setUseFlaggedForUnreadCount:
setDateUnits:
setDateIsRelative:
criteriaFromDefaultsArray:
defaultsArrayFromCriteria:
_updateAddressComments:
criterionForMailbox:
criterionForNotDeletedConversationID:
VIPSenderMessageCriterion
threadNotifyMessageCriterion
threadMuteMessageCriterion
flaggedMessageCriterion
unreadMessageCriterion
readMessageCriterion
includesMeCriterion
toMeCriterion
ccMeCriterion
hasAttachmentsCriterion
todayMessageCriterion
notCriterionWithCriterion:
initWithDictionary:
dateUnits
dateIsRelative
dateFromExpression
isVIPCriterion
libraryIdentifiers
setLibraryIdentifiers:
preferFullTextSearch
setPreferFullTextSearch:
useFlaggedForUnreadCount
includeRelatedMessages
setIncludeRelatedMessages:
expressionIsSanitized
setExpressionIsSanitized:
setIncludeRemoteBodyContent:
_criterionIdentifier
_qualifier
_name
_expression
_criteria
_dateUnitType
_allCriteriaMustBeSatisfied
_dateIsRelative
_includeRelatedMessages
_requiredHeaders
_preferFullTextSearch
_useFlaggedForUnreadCount
_expressionIsSanitized
_includeRemoteBodyContent
_libraryIdentifiers
stringWithCapacity:
setAccounts:
messagesMatchingQuery:variable:limit:
_userCreatedMailboxes
_criterionForQuery:variable:
countMessagesMatchingCriterion:
countMessagesMatchingCriterion:groupBy:
dateWithTimeIntervalSinceNow:
countMessagesMatchingQuery:variable:
initWithAccounts:mailLibrary:
mostRecent:messagesForMailbox:
accounts
_accounts
setMimeBody:
readFromDisk
dataForMimePart:inRange:withConsumer:downloadIfNecessary:
initWithDecryptedMessage:
fixOnce
_criterionForSQL
identifiersMatchingCriterion:
indexSet
indexSetWithIndex:
addIndexes:
mf_intersectIndexes:
isFullTextSearchableCriterion
_evaluateFTSCriterionWithIndex:mailboxIDs:
_resolveWithIndex:mailboxIDs:
arrayWithArray:
_collapsedMessageNumberCriterion:allMustBeSatisfied:collapsedIndexes:
removeObjectsAtIndexes:
hasLibraryIDCriterion
SQLExpressionWithContext:depth:
bestBaseTable
_addCriteriaSatisfyingPredicate:toCollector:
includesCriterionSatisfyingPredicate:restrictive:
criterionByApplyingTransform:
criteriaSatisfyingPredicate:
criterionForSQL
SQLExpressionWithTables:baseTable:protectedDataAvailable:searchableIndex:mailboxIDs:
extractedDateCriterion
extractedUnreadCriterion
currentCalendar
components:fromDate:
setDay:
hour
setHour:
minute
setMinute:
second
setSecond:
dateByAddingComponents:toDate:options:
weekday
setMonth:
setYear:
month
preparedStatement:pattern:
_loadMailboxRowidIfNecessary:
objectEnumerator
performReadTransaction:
performWriteTransaction:
initWithLibrary:URLString:
knownMessageIDsFromSet:
messageIDsAddedBeforeDate:
deleteUIDsNotInArray:
numberOfMessageIDs
deleteAllUIDs
flagsForUID:
_mailboxRowid
initWithMaximumSize:latency:
sizeForItem:
flushIfNecessary
handleItems:
_flush
addItem:
flush
isEmpty
size
maximumSize
setMaximumSize:
maximumLatency
setMaximumLatency:
_maximumSize
_maximumLatency
_timeOfLastFlush
_queue
_currentSize
_range
_quoteLevel
appendString:withQuoteLevel:
archivedRepresentation
appendArchivedRepresentation:
_text
_fragments
_setOfAllSources
sortedArrayUsingFunction:context:
allSources
_attachmentsLock
_attachmentsByURL
sendsPlainTextPasswords
duration
bytesSent
isWifi
setIsWifi:
_isWifi
_bytesSent
_duration
initWithPerformsValidationInBackground:
stop
accountValidator:finishedValidationOfAccount:usedSSL:
validateAccount:useSSL:withCompletion:
_validateAccount:withFallbacks:
validateAccountWithoutFallbacks:withCompletion:
_backgroundValidateAccountFinished:authSchemes:
invoke
_validateAccount:
_validateAccountWithoutFallbacks:
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
performsValidationInBackground
_outgoingServerValid
_incomingServerValid
validateAccount:useSSL:
validateAccountWithoutFallbacks:
cancelValidation
_ispAccountInfo
accountValidationCanceled
validationInvocation
accountIsValid
accountSupportsSSL
_accountValidationActivity
_validationInvocation
_completionBlock
_incomingServerValidationError
_smtpServerValidationError
_incomingServerAuthSchemes
_smtpServerAuthSchemes
shouldTryFallbacksAfterError:
setAllowsFallbacks:
compactMessages:permanently:
setFlagsForMessages:mask:
postFlagsChangedForMessages:flags:oldFlagsByMessage:
initWithLibrary:
flagsChangedForMessages:flags:oldFlagsByMessage:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
updateThreadingInfoForMessage:fromHeaders:
updateAdditionalThreadingInfoForSentMessageWithHeaders:externalConversationID:
messagesNeedingSyncConfirmationForMailbox:
messagesWithoutSummariesForMailbox:
messagesWithSummariesForMailbox:fromRowID:limit:
orderedBatchOfMessagesEndingAtRowId:limit:success:
unreadCountForAggregatedMailboxes:
unreadCountForAggregatedMailboxes:matchingCriterion:
attachmentCountForMailboxes:
deletedCountForMailbox:
nonDeletedCountForAggregatedMailboxes:
nonDeletedCountForAggregatedMailboxes:includeServerSearchResults:includeThreadSearchResults:
setServerUnreadOnlyOnServerCount:forMailbox:
oldestMessageInMailbox:
messageWithRemoteID:inRemoteMailbox:
maximumRemoteIDForMailbox:
minimumRemoteIDForMailbox:
canProvideMinimumRemoteID
sequenceIdentifierForMailbox:
setSequenceIdentifier:forMailbox:
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forMessageWithLibraryID:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
getDetailsForAllMessagesFromMailbox:
getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
removeAllMessagesFromMailbox:removeMailbox:andNotify:
messageWithMessageID:inMailbox:
dataConsumerForMessage:isPartial:
dataConsumerForMessage:
metadataForMessage:
bodyDataForMessage:
sendMessagesMatchingCriterion:to:options:range:
sendMessagesMatchingCriterion:to:options:
messagesMatchingCriterion:options:success:
messagesMatchingCriterion:options:range:success:
libraryExists
isBusy
closeDatabaseConnections
deletePOPUID:inMailbox:
UIDsToDeleteInMailbox:
deletedUIDsInMailbox:
allUIDsInMailbox:
hiddenPOPUIDsInMailbox:
lockDBForWriting
appendOfflineCacheOperation:forAccount:lastTemporaryID:
markOfflineCacheOperationAsComplete:
offlineCacheOperationsForAccount:lastTemporaryID:
appendOfflineCacheReplayData:forAccountID:
consumeOfflineCacheReplayDataForAccount:usingBlock:
deleteOfflineCacheDataForAccount:
updateFlagsForMessagesInPlace:success:
remoteStoreForMessage:
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:
setFlagsForMessages:
postOldFlags:newFlags:forMessage:
storedIntegerPropertyWithName:
setStoredIntegerPropertyWithName:value:
dataProvider
_attachmentDataProvider
partName
isComplete
dataHolder
setData:
setDataHolder:
setPartial:
setComplete:
setPartName:
_dataHolder
_complete
_partial
_partName
unreadCountCriterion
initWithDelegate:maxConcurrentBackgroundReaders:
setCacheSize:
_checkpointDatabase
setCheckpointBlock:
_rollbackToCheckpoint
setRollbackBlock:
_setProtectedDataAvailabilityState:
_reconcileAfterKeybagUnlock
cancelSuspendTimer
setDataSource:
defaultPath
startSuspendTimer
searchableIndex
applicationWillSuspend
applicationWillResume
pendingIndexItemsCount
getWriterDB
unlockDB:
beginTransaction:withType:
removeSearchableItemsForMessages:
updateFlagsForMessages:changes:transformer:
enumerateByteRangesUsingBlock:
itemWithMessage:bodyData:
indexItems:
matchMessageReferenceContext:withCandidateMessageReferenceContexts:
_insertThreadReferences:toMessageWithLibraryID:usingDatabase:
enumerateIndexesWithBlock:
isProtectedDataAvailable:
_addMessageToThreadAtUnlock:
_addThreadingInfoWithContext:usingDatabase:
conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:messageIDHash:
externalConversationID
conversationIdForMessageIds:
firstIndex
flagsForConversationId:
indexGreaterThanIndex:
setFlags:forConversationId:
scheduleBatchOfBudgetedMessageProcessing
addMiddleware:
library:didAddMessages:
library:willAddMessage:
messageDataHolderIsComplete:downloadIfNecessary:
handleSqliteError:format:
copyAddressListForBcc
copyFirstStringValueForKey:
parseContentTypeHeader:type:subtype:
remoteMailboxURL
mf_messageIDSubstring
referencesFromHeaders:
modSequenceNumber
append:
setConversationID:
notifyConversation:hasMergedIntoConversation:
addReferenceForContext:usingDatabase:mergeHandler:
_writeEmlxFile:withBodyData:protectionClass:
_libraryMessageWithLibraryID:wasCached:
setGenerationNumber:
sendersIfCached
toIfCached
ccIfCached
bccIfCached
setMessageInfo:to:cc:bcc:sender:dateReceivedTimeIntervalSince1970:dateSentTimeIntervalSince1970:messageIDHash:conversationID:summary:
setContentType:
setExternalID:
setMessageIDHeader:
moveItemAtPath:toPath:error:
rollbackTransaction:
commitTransaction:
_tellMiddlewareDidAddMessages:
iterateStatement:db:withProgressMonitor:andRowHandler:context:
newMessagesAvailable:
sendMessagesForStatement:db:to:options:timestamp:
sendMessagesMatchingCriterion:to:options:baseTable:
messages
getReaderDB
distantFuture
_firstDateForQuery:inMailbox:
queryForCriterion:db:options:
queryForCriterion:db:options:baseTable:
integerForQuery:withTextArgument:
queryForCriterion:db:options:baseTable:isSubquery:
_libraryIDForOldestKnownMessageInMailbox:
_computeUnreadCountForMailboxes:
_flaggedCountForAggregatedMailboxes:
_attachmentCountForAggregatedMailboxes:
_includesMeCountForAggregatedMailboxes:
countOfRelatedMessagesMatchingCriterion:forConversationsContainingMessagesMatchingCriterion:forMailboxCriterion:
anyObject
_queryForMailboxesIDsFromMailboxes:
flaggedCountForMailbox:
attachmentCountForMailbox:
includesMeCountForMailbox:
_messageForStatement:options:timestamp:isProtectedDataAvailable:
_canSelectMessagesWithOptions:db:
copyMessages
_copyReferenceHashesWithoutMessagesForMessageWithConversation:
_getReferencesForHashesWithOwners:
stringForQuery:monitor:
pathForMailboxURL:
mailboxURLForMessage:
_notifyDidCompact:messages:mailboxes:
writersWaiting
cleanupProtectedTables
sortUsingSelector:
removeSearchableItemsForAccount:mailboxID:
_quotedPrefixLikeSubclauseForColumn:value:
removeSearchableItemsForMailbox:
externalID
dataPathForMessage:type:
initWithLibrary:message:part:partial:incomplete:
cStringUsingEncoding:
_setMessageData:libraryID:part:partial:complete:
_setMessageDataString:forKey:forMessage:
archivedDataWithRootObject:
initWithBytes:length:
unarchiveObjectWithData:
loadData:forMessage:usingBlock:
mf_rangeOfRFC822HeaderData
bodyDataAtPath:headerData:
headerDataAtPath:
dataWithContentsOfFile:options:error:
equalToMailboxIDsFromCriterion:
_activeAccountsClause
queryForCriterion:db:options:baseTable:isSubquery:range:
sendMessagesMatchingQuery:db:to:options:
sendMessagesMatchingCriterion:to:options:baseTable:range:success:
handleMessage:
iterateMessagesMatchingCriterion:withResultHandler:options:withMonitor:
removeSearchableItemsForAccount:
_mailboxesClauseForAccounts:
suspend
resume
refresh
setRowid:
hasRowid
rowid
_indexSetOfMessagesDeleted
removeSearchableItemsWithLibraryIDs:
enumerateObjectsUsingBlock:
mergeWithDatabase:
_handleProtectedDataInconsistencies
checkDataConsistencyWithFailure:
_handleJournalMergeFailure
_activeConnectionWithDB:
attachProtectedDatabase
_handleSQLiteErrorCode:db:
isProtectedDatabaseAttached
interruptConnectionsAfterDelay:
_canAccessProtectedData
cancelTerminationTimer
_reconcileJournal
minusSet:
initWithPath:databaseName:protectedName:
open
migrateWithSQLiteConnection:
_handleFailedMigration
needsSpotlightReindex
removeAllItems
performIncrementalVacuumForSchema:
beginTransactionWithType:
commitTransaction
_handleFullDatabase
_handleJournalWriteFailure
scheduleIncrementalVacuum
rollbackTransaction
clear
_performTransaction:forWriting:
_connectionForWriting:
_activeConnectionWrapper
connection
writerConnection
readerConnection
backgroundReaderConnection
_setActiveConnection:forWriting:
writer
incrementRefcount
decrementRefcount
detachProtectedDatabase
setInvalid:
currentThread
threadDictionary
pool
wrapperWithConnection:forWriting:
_activeConnection
preparedStatementForPattern:
_handleCorruptDatabase
_handleProtectedDataIOError
_handleInvalidDatabaseIOError
_handleDetachedDatabaseIOError
_handleIOError
_handleBusyError
renameOrRemoveDatabase
_removeLibrary:atPath:
attributesOfItemAtPath:error:
_purgeSpotlightTombstonesBeforeTransaction:database:
addedIndexItems
_assignTransaction:forLibraryIDIndexSet:missingLibraryIDIndexSet:database:
_stringsForIndexSet:
removedIdentifiers
_assignTransaction:forSpotlightTombstones:type:database:
removedDomainIdentifiers
_assignTransaction:forLibraryIDs:missingLibraryIDIndexSet:database:
enumerateRangesUsingBlock:
_prepareBatchStatement:pattern:objects:count:
mf_enumerateObjectsInBatchesOfSize:block:
stringWithString:
initWithIndexSet:
lastIndex
getIndexes:maxCount:inIndexRange:
_prepareBatchStatement:pattern:libraryIDs:batchSize:
indexSetWithIndexesInRange:
removeIndexes:
updates
_nonLocalAccountsClause
setTransmogrifier:
setAddedIndexItems:
setRemovedIdentifiers:
setRemovedDomainIdentifiers:
addSpotlightTombstones:type:
_resetTransactionIndexForAccount:mailboxID:
removeItemsForDomainIdentifier:
removeItemsWithIdentifiers:
objectForKey:wasCached:
setSubject:to:cc:bcc:sender:dateReceived:dateSent:messageIDHash:conversationIDHash:summary:withOptions:
setDateReceivedTimeIntervalSince1970:
setListIDHash:
removeLibraryAtPath:
updatesForSearchableIndex:count:
searchableIndex:assignTransaction:updates:
searchableIndex:invalidateItemsGreaterThanTransaction:
verificationDataSamplesForSearchableIndex:
newConnectionForConnectionPool:
contentProtectionStateChanged:previousState:
invalidateAndWait
notifyNewDataAvailableForMessages:
removeMiddleware:
recomputeUnreadCountForMailboxWithURL:
mailboxLocationOfMessageID:usingDatabase:
missingReferencesForConversationContainingMessage:
countOfMessagesMissingFromThreadContainingMessage:
loadMoreMessagesForThreadContainingMessage:hasNoMoreMessages:
stringForQuery:
syncedConversations
setConversationInfo:syncKey:flags:
messageIdsForConversationId:limit:
_quotedLikeSubclauseForColumn:value:
vacuumDataForObsoleteAccountURLString:
attachmentsDirectoryForLibraryID:mailboxID:
queryForCriterion:db:options:range:
sendMessagesMatchingCriterion:to:options:baseTable:range:
iterateMessagesMatchingCriterion:options:handler:
rebuildActiveAccountsClauseWithAccounts:
attachProtectedDatabase:
migrate
pruneConversationTables:
setMailboxPathProvider:
allMailboxURLStrings
_libraryMessageCache
setSearchableIndex:
_connectionPool
_mailboxCache
_mailboxPathProvider
_migrator
_threadLocalHandleKey
_activeAccountClause
_nonLocalAccountClause
_protectedDataAvailability
_protectedJournal
_keyBagQueue
_messagesToThreadAtUnlock
_middleware
_suspendTimer
_searchableIndex
initWithConnection:forWriting:
refcount
invalid
_stack
_writer
_invalid
_refcount
transmogrifier
_messages
_monitor
_transmogrifier
beginResult:
setResultSubject:
setResultSender:
setResultDateRecieved:
setResultUnread:
endResult
setResultSummary:
filter
_block
_cancelled
pathForStorage
_part
_incomplete
initWithUid:mailboxID:messageID:dateReceivedInterval:dateSentInterval:conversationHash:read:knownToHaveAttachments:flagged:isVIP:
filterMessageWithStatement:
initWithMailboxes:
isAllowedToAccessProtectedData
mf_deleteFilesInSortedArray:matchingPrefix:fromDirectory:
mf_indexOfObject:usingSortFunction:context:
attributesOfFileSystemForPath:error:
isForeground
_setForeground:
persistedRemainingIndexingBudget
_persistRemainingIndexingBudgetValue:
initWithCoalescingAction:
_registerDistantFutureSpotlightVerification
_powerStateChanged:
sharedController
addDiagnosticsGenerator:
removeDiagnosticsGenerator:
isPluggedIn
_budgetPersistenceKey
dictionaryForKey:
dateByAddingUnit:value:toDate:options:
earlierDate:
_scheduleResetIndexingBudgetTimer
setRemainingIndexingBudget:shouldPersist:
_queueTransitionActive:
_resetIndexingBudgetTimer
coalesceValue:
initWithCondition:
_processSpotlightVerificationWithCompletion:
_transitionWithBudgetTimeUsed:
_verifySpotlightIndex
fileURLWithPathComponents:
_localClientStateURL
clientStateFromData:
archiveRepresentation
writeToURL:options:error:
removeItemAtURL:error:
powerlog:eventData:
_queueRefresh
_isForeground
_dataSourceScheduleWork:
initWithIdentifier:
_dataSourceAssignTransaction:updates:completion:
removeItemsWithIdentifiers:reasons:
_indexItems:fromRefresh:
_throttleRequestedSize:action:
_coalescingTimerFired
_queueConsumeBudgetElapsedPeriod:
_fetchLastClientState
_stopCoalescingTimer
_scheduleProcessPendingItems
_startCoalescingTimer
_scheduleDataSourceRefresh
_scheduleSpotlightVerification
_consumeBatchOfSize:
_getDomainRemovals:identifierRemovals:
identifiers
_nextTransaction
_invalidateCache
_processRefreshRequestWithCompletion:
removeObjectsInRange:
_dataSourceRequestNeededUpdatesWithCompletion:
_dataSourceVerifyRepresentativeSampleWithCompletion:
removeIdentifier:
indexOfObject:inSortedRange:options:usingComparator:
setBodyData:
_queueConsumeBudgetItemCount:
reasons
indexesOfObjectsPassingTest:
addIdentifiers:withReasons:
domainIdentifier
removeAllIdentifiers
spotlightQueryString
objectForKey:generator:
_localClientState
_saveLocalClientState:
initWithName:dataSource:
_noteNeedsLastClientStateFetch
_transaction
_dataSourceAssignTransaction:forIdentifiers:completion:
_dataSourceInvalidateItemsGreaterThanTransaction:completion:
requestSpotlightDiagnosticsForMessageRowId:
indexedEmptySubjectIdentifers
dataSource
_indexName
_coalescingTimer
_resumeCount
_throttledIndexingBatchSize
_throttledDataSourceBatchSize
_currentMaximumBatchSize
_budgetCoalescer
_remainingIndexingBudget
_remainingIndexingBudgetOverage
_batchIndexingActivity
_pendingItems
_pendingDomainRemovals
_pendingIdentifierRemovals
_indexingQueue
_dataSourceQueue
_searchResultsCache
_isActive
_needsRefresh
_needsVerification
_clientStateFetched
_coalesceTimerFired
_scheduledProcessing
_scheduledRefresh
_scheduledVerification
_dataSource
JSONObjectWithData:options:error:
setSystemBuildVersion:
setTransactionDate:
dataWithJSONObject:options:error:
clientState
setTransaction:
transactionValue
transaction
transactionDate
systemBuildVersion
_transactionValue
_transactionDate
_systemBuildVersion
mailboxIDs
isEqualToIndexSet:
setMailboxIDs:
_mailboxIDs
hasNonFullTextSearchableCriterion
_addedIndexItems
_removedIdentifiers
_removedDomainIdentifiers
initWithMessage:bodyData:
nullFuture
searchableItemWithClientState:
fetchIndexableAttachments
searchableItem
hasCompleteBodyData
setHasCompleteBodyData:
_hasCompleteBodyData
_identifier
_searchableItem
_bodyData
_identifiersPassingReasonsTest:
setWithSet:
purgedIdentifiers
deletedIdentifiers
_reasonsByIdentifier
intersectsSet:
_initializeTopLevelPartWithHeaders:
_continueParsing
progressiveMimeParser:beganMimePart:
progressiveMimeParser:finishedMimePart:
progressiveMimeParser:beganDataForMimePart:
progressiveMimeParser:failedWithError:
_reportError:
setRange:
mf_rangeOfCString:options:range:
_currentBoundary
mf_rangeOfData:options:range:
_continueParsingStartOfPart
_continueParsingHeaders
_continueParsingBody
initWithBodyData:topLevelHeaders:headersToPreserve:
start
setContext:
context
noteDataLengthChanged:
currentPart
_data
_preserveHeaders
_context
_cursor
_lastLength
_topLevelPart
_currentPart
_parserFlags
setSecurityLevel:
securityLevel
setMaxBuffer:
setCryptInfo:
setExpectedResponse:
_maxbuf
_securityLevel
_expectedResponse
_cryptInfo
sharedNetworkObserver
_reachabilityChanged:
addNetworkReachableObserver:selector:
isNetworkReachable
mailboxForFolderID:
backingAccountInfo
initWithDAMailAccount:
localizedStringForKey:value:table:
initWithName:attributes:account:folderID:
virtualAllSearchMailbox
folderID
_loadChildrenForParent:fromMap:intoArray:replacingInbox:withID:
folderName
isRunningInDisallowedBundle
_isUnitTesting
accountConduit
mailboxes
_offlineCache
folderChangeResult
applyToFolderMap:
enumerateOperationsUsingBlock:
_replayOfflineCache:
inboxFolder
sentItemsFolder
deletedItemsFolder
supportsServerDrafts
draftsFolder
parentFolderID
foldersContentsChanged:
_accountConduitClass
accountHierarchyChanged:
sharedConnection
updateFolderListForAccountID:andDataclasses:
_ensureWeHaveLoadedInitialMailboxList
setFolderID:
folderIDForMailbox:
initFolderChangeWithChangeType:folderId:parentFolderId:displayName:dataclass:consumer:
wasSuccessful
_performFolderChange:completion:
hasDeferredOperations
setConsumer:
performFolderChange:isUserRequested:
waitForResult
statusCode
mf_deferredOperation
deferOperation:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
isHotmailAccount
persistentUUID
enabledForDADataclass:
supportsMailboxSearch
supportsEmailFlagging
mailNumberOfPastDaysToSync
folderIDForRelativePath:accountID:
addRequests:mailbox:consumers:
initWithAccount:folderID:
addRequests:consumers:
_deferMailboxRequests:mailbox:offlineCache:
syncAnchorForFolderID:mailbox:
networkActivityStarted:
initWithCurrentTag:accountID:requests:consumers:
performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:
waitUntilDone
setSyncAnchor:forFolderID:mailbox:
moreAvailable
shouldRetryRequest
networkActivityEnded:
initMoveRequestWithMessage:fromFolder:toFolder:
initWithMessageIDs:newRemoteIDsByMessageID:failures:
performMoveRequests:consumer:
nextTemporaryMessageID
initWithMessages:temporaryIDs:sourceMailbox:destinationMailbox:
_relativePathForType:
_relativePathSpecialMailboxUidWithType:create:
supportsDraftFolderSync
shutdown
isCustomerInstall
removeNetworkReachableObserver:
mf_invocationWithSelector:target:
loadMeetingData
reattemptInvitationLinkageForMetaData:inFolderWithId:
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
_inboxFolderID
isEqualToSet:
isBatterySaverModeEnabled
pushedFoldersPrefsChanged:
_updateWatchedFolderIdsAndNotify:
monitorFoldersForUpdates:persistent:
stopMonitoringAllFolders
supportsConversations
performSearchQuery:
cancelSearchQuery:
_watchedFolderIds
_folderIdsForMailboxUids:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
stopMonitoringFoldersForUpdates:
initWithLibrary:account:
deferredOperation
setLastSelectedMailbox:
replayOperationsUsingBlock:
signingIdentityPersistentReference
setSigningIdentityPersistentReference:
encryptionIdentityPersistentReference
setEncryptionIdentityPersistentReference:
initWithEmailAddresses:
performResolveRecipientsRequest:consumer:
waitForResolvedRecipients
resolvedEmailToX509Certs
setFetchMaxBytes:
accountIDForDirectoryName:isAccountDirectory:
finishedInitialMailboxListLoad
syncAnchorForMailbox:
addRequest:mailbox:consumer:
processRequests:mailbox:consumers:
supportsServerSearch
daysToSync
setVirtualAllSearchMailbox:
_accountConduit
_daAccount
_offlineCacheLock
_isNetworkReachable
_cachedAccountID
_cachedAccountPersistentUUID
_cachedDisplayName
_cachedEmailAddress
_cachedEmailAddresses
_cachedIconString
_cachedIsActive
_cachedIsHotmailAccount
_cachedCalendarEnabled
_cachedSecureMIMEEnabled
_cachedPerMessageEncryptionEnabled
_cachedSecureMIMEShouldSign
_cachedSecureMIMEShouldEncrypt
_cachedRestrictMessageTransfersToOtherAccounts
_cachedRestrictSendingFromExternalProcesses
_cachedRestrictSyncingRecents
_cachedIsManaged
_cachedSupportsMailDrop
_cachedArchiveByDefault
_cachedSourceIsManaged
_cachedStoreDraftsOnServer
_cachedInboxFolderID
_cachedSentMessagesFolderID
_cachedTrashFolderID
_cachedJunkFolderID
_cachedDraftsFolderID
_temporaryInbox
_loadedInitialMailboxList
_receivedInitialMailboxUpdate
_doneInitialInboxCheck
_observingPushedFoldersPrefsChanged
_supportsServerSearch
_supportsMessageFlagging
_supportsConversations
_supportsServerDrafts
_daysToSync
_requestQueuesByFolderID
_watchedFolderIdsLock
_userFocusMailboxIds
_folderTag
_virtualAllSearchMailbox
initWithAlwaysReportFailures:
lockWhenCondition:beforeDate:
taskFailed:statusCode:error:
setDone:
actionFailed:forTask:error:
waitUntilDoneBeforeDate:
_doneCondition
_shouldRetryRequest
_alwaysReportFailures
shouldSend
filterRequests:consumers:newConsumers:
bodyFormat
processRequests:consumers:
streaming
streamingDone
initWithData:streaming:streamingDone:
resolvedRecipientsByEmailAddress:
_conditionLock
_resolvedRecipientsByEmailAddress
setPredictor:
setCache:
setCacheKeysByProperty:
_cacheKeyForMessages:
cache
predictor
_propertyKeysForMessage:
_trackCacheKey:forPropertyKey:
cacheKeysByProperty
mf_mapSelector:
initWithPredictor:
invalidatePredictionsAffectedByMessages:
removeAllPredictions
_predictor
_cache
_cacheKeysByProperty
_folderIDForFetching
setMonitor:
initRequestForBodyFormat:withBodySizeLimit:isUserRequested:
isEqualToDate:
setLatestDateToAdd:
backedByVirtualAllSearchMailbox
mailboxSearchQueryWithSearchString:predicate:consumer:
setBodyType:
setCollectionID:
setMIMESupport:
setTruncationSize:
setPriorToDate:
setDeepTraversal:
initWithTimeIntervalSinceNow:
resetDoneCondition
searchResult
daBasicSearchString
daSearchPredicate
_remoteIDsMatchingSearchText:predicate:limit:filterByDate:handler:
initRequestWithSetFlags:unsetFlags:message:
_messageIsSearchResultWithBogusRemoteId:
initRequestWithMessageID:
issueFlagUpdates:forMessages:
mf_invocationWithSelector:target:object1:object2:
bodySize
isMostDefinitelyBase64ed
meetingRequestUUID
setIsGenerated:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
setStreamConsumer:
performFetchMessageSearchResultRequests:consumer:
cancelTaskWithID:
didBeginStreaming
timeOfLastActivity
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
succeeded
hasLocalCopyOfData
setRequestedFormat:
setDataConsumer:
setConsumerFactory:
_fetchBodyDataForSearchResult:folderID:format:streamConsumer:
_fetchBodyDataForNormalMessage:format:part:streamConsumer:
first
initWithHeaderData:encoding:
setStore:
initWithActivityMonitor:
setExpectedLength:
initWithAttachmentName:andMessageServerID:
expectedLength
initWithConsumer:expectedSize:
progressBlock
setProgressBlock:
setProgressFilter:
performFetchAttachmentRequest:consumer:
fetchSucceeded
dataWasBase64
decryptedTopLevelPartForPart:
defaultAlternativeForPart:
copyBodyDataToOffset:resultOffset:downloadIfNecessary:
alternativeAtIndex:
bestAlternativeForPart:
isGenerated
DAMailMessage
longID
_additionalHeadersForAction:ofMessage:
setServerFlagsFromDictionary:forMessages:
wantsLineEndingConversionForMIMEPart:
_downloadHeadersForMessages:
messageCanBeTriaged:
additionalHeadersForReplyOfMessage:
additionalHeadersForForwardOfMessage:
setBackedByVirtualAllSearchMailbox:
_DAFolder
_backedByVirtualAllSearchMailbox
mf_alwaysReportFailures
initRequestForBodyFormat:withBodySizeLimit:
initWithSetFlagsRequest:
initWithDeleteMessageRequest:
consumer
format
partial
onFlags
offFlags
decodeInt64ForKey:
encodeInt64:forKey:
selectedMailboxID
_onFlags
_offFlags
numNewMessages
itemChangeType
initWithDAMailMessage:mailbox:
messageClass
readIsSet
flaggedIsSet
verbIsSet
lastVerb
setGotNewMessagesState:
drainMailbox
receiveSyncActions:
commitSyncActions
mf_groupBy:
serverID
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
latestDateToAdd
doneCondition
timeReceivedLastResponse
changedItem
wantsData
_succeeded
_store
setHasLocalCopyOfData:
streamConsumer
streamingContentConsumer
_streamConsumer
_hasLocalCopyOfData
dataConsumerForPart:
progressFilter
recordBytesWritten:
recordBytesRead:
consumeData:ofContentType:forAttachmentNamed:ofMessageWithServerID:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:sentBytesCount:receivedBytesCount:
_progressFilter
_expectedLength
_accumulatedLength
_dataWasBase64
_fetchSucceeded
shouldBeginStreamingForMailMessage:format:
consumeData:length:format:mailMessage:
didEndStreamingForMailMessage:
searchResultFetchedWithResponses:
setAddressListForSender:
setAddressListForTo:
setAddressListForCc:
transferFailureSnapshotForTemporaryID:
originalRemoteID
translatedIDForTemporaryID:
body
smimeType
meetingRequestMetaData
meetingRequestIsActionable
conversationId
mf_encodeBase64
rfc822Data
messageWithRFC822Data:
valueForKeyPath:
_DAMailMessage
_rfc822CreatedMessage
_mailbox
_externalConversationID
setDAMailAccount:
_DAMailAccount
messageDidSendWithContext:
messageDidSendWithContext:sentBytesCount:receivedBytesCount:
bytesRead
_bytesRead
_bytesWritten
messageIDHeaderInFortyBytesOrLess
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
_folderId
_accountId
_repliedMessageId
_forwardedMessageId
_repliedLongId
_forwardedLongId
archiveEntry
setUncompressedSize:
setIsDeflated:
setCompressedRange:
compressedRange
isDeflated
_inflateError:
promise
finishWithError:
finishWithResult:
inflateWithWriter:
future
result:
initWithContents:path:
compressedSize
inflate
_isDeflated
_uncompressedSize
_compressedRange
willAddRequests:consumers:
_processRequests:consumers:
processRequest:consumer:
addRequest:consumer:
_condition
_requests
_consumers
_waitingOutside
_waitingInside
mf_addressDomain
stringForKey:
setScheme:
setHost:
requestWithURL:
setHTTPMethod:
addValue:forHTTPHeaderField:
setHTTPBody:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didReceiveData:
URLSession:task:didCompleteWithError:
response
_responseBody
_promise
_response
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithRequest:
resultWithTimeout:error:
_currentDeliveryObject
sharedAggregateDictionary
pushValue:forKey:
_deliverSynchronouslyWithCurrentSettings:
setShouldCancel:
notifyUserDeliverySucceeded:
_deliveryAccountForInitializers
deliverSynchronouslyWithCompletion:
attachmentContext
setAttachmentContext:
originalConversationId
setOriginalConversationId:
_htmlBody
_otherHTMLAndAttachments
_deliveryAccount
_attachmentContext
_originalConversationId
networkThread
methodSignatureForSelector:
invocationWithMethodSignature:
setTarget:
setSelector:
performSelector:onThread:withObject:waitUntilDone:
setArgument:atIndex:
getReturnValue:
propertyForKey:
_copyPropertyForKey:
setProperty:forKey:
_createPairWithSocketToHostName:port:
currentRunLoop
scheduleInRunLoop:forMode:
defaultSessionConfiguration
setTLSMinimumSupportedProtocol:
setTLSMaximumSupportedProtocol:
streamTaskWithHostName:port:
startSecureConnection
captureStreams
isOpen
waitUntilDate:
broadcast
removeFromRunLoop:forMode:
invalidateAndCancel
_readBytesFromStream
write:maxLength:
streamError
_closeAndReleaseStream:logMessage:
read:maxLength:
setNetworkThread:
_networkDispatchQueue
stream:handleEvent:
initCallBack:onDispatchQueue:
openToHostName:port:
URLSession:streamTask:didBecomeInputStream:outputStream:
_session
_streamTask
_rStream
_wStream
_properties
_callback
_location
_capacity
_length
_buffer
_streamCanRead
_streamCanWrite
_dispatchedBytesAvailable
_enableThroughputMonitoring
_certificateIsTrustedForAccount:
defaultTrustManager
rawTrustResultForSSLTrust:hostname:service:
_setCertificateIsTrusted:forAccount:
setService:
setTrust:
allowTrust:forHost:service:
showPromptWithOptions:responseBlock:
_waitForSocketOpenAndFlag:
_evaluateTrust:errorPtr:
_negotiatedProtocolVersion
_startSSLHandshakeWithProtocol:errorPtr:
integerForKey:
inAirplaneMode
_bufferedByteCount
serverCertificates
isReadable
connectToHost:withPort:service:
writeBytes:length:
readBytes:length:
setEventHandler:
remotePortNumber
isCellularConnection
usesOpportunisticSockets
setUsesOpportunisticSockets:
disableEphemeralDiffieHellmanCiphers
setDisableEphemeralDiffieHellmanCiphers:
accountIdentifier
_stream
_protocol
_host
_service
_connectionServiceType
_eventHandler
_clientCertificates
_lowThroughputCounter
_numTimeoutSecs
_allowsTrustPrompt
_usesOpportunisticSockets
_socketCanRead
_socketCanWrite
_disableEphemeralDiffieHellmanCiphers
_accountIdentifier
capabilitiesDictionary
placeholdersAvailable
_limitMailDropOverCellular
mailDropAvailableForAccount:
_mailDropLimit
mailDropAvailable
aa_primaryAppleAccount
_isMailDropDevice
mailDropConfigured
mailDropPreferences
valueForKey:
currentUploadLimit
currentMessageLimit
mailDropThreshold
currentPlaceholderThreshold
attachmentCapabilities
currentDownloadLimit
currentUploadLimitForAccount:
mailDropExpiration
mailDropWhitelistedDownloadDomains
intersectSet:
stringArrayForKey:
readLoggingDefaults
_setupSocketWithSettings:
connectUsingSettings:
capabilities
encryptionBufferSize
createEncryptedDataForBytes:length:
errorWithException:
logConnection:type:data:
flushLog
logClasses
setLogClasses:
logAllSocketActivity
setLogAllSocketActivity:
logActivityOnPorts
setLogActivityOnPorts:
logActivityOnHosts
setLogActivityOnHosts:
isFetching
setIsFetching:
setDesiredReadBufferLength:
logReadChars:length:
readBytesIntoData:desiredLength:
startTLSForAccount:
startCompression
hasBytesAvailable
lastUsedTime
connectionSettings
setConnectionSettings:
_securityLayer
_connectionSettings
_socket
_lastUsedTime
_bufferRemainingBytes
_bufferStart
_bufferLength
_desiredBufferLength
_deflater
_inflater
_zbuffer
_readBytesNotLogged
_isFetching
_allowFallbacks
_compressionEnabled
_hostname
_serviceName
_certUIService
_portNumber
_usesSSL
_tryDirectSSLConnection
mf_isUserCancelledError
logBytes:length:
createDecryptedDataForBytes:length:
getBytes:length:
raise
attachmentDownloadQueue
isDataAvailableLocally
_dataProviderForAttachmentURL:error:
customConsumer
addDataConsumer:
initWithMainConsumer:
decodeFilterWithDataConsumer:
encodedFileSize
initWithConsumers:expectedSize:
_callProgressBlockForAttachmentURL:withBytes:expectedSize:
writeToDiskWithData:
_fetchCompletedForAttachment:error:
_fetchInvocationCallUsingBlock:
setPowerAssertionId:
_queueForAttachment:
lastProgressBytes
lastProgressTime
setLastProgressBytes:
setLastProgressTime:
updateProgressWithCurrentBytes:
wantsCompletionBlockOffMainThread
attachmentForURL:error:
addProvider:forBaseURL:
URLByAppendingPathComponent:
initWithURL:attachmentManager:
sharedMappings
MIMETypeForExtension:
setPlaceholder:
setIsPlaceholder:
setContentID:forAttachment:
setDecodedFileSize:
attachmentForCID:
fetchLocalData
attachmentForData:mimeType:fileName:contentID:context:
_composeAttachmentDataProviderForContext:
_fetchDataForAttachment:withProvider:syncLock:
loadAttachmentURL:forContextID:
updateAttachment:withNewData:
recordPasteboardAttachmentsForURLs:forContextID:
recordUndoAttachmentsForURLs:forContextID:
_defaultDownloadQueue
_composeAttachmentURLs
fullResolutionStorageLocationForAttachmentWithMimePart:withMessage:
pathWithComponents:
fullResolutionAttachmentURLForAttachmentURL:
componentsWithURL:resolvingAgainstBaseURL:
fullResolutionAttachmentForAttachment:
compoundPredicateType
subpredicates
initWithType:subpredicates:
expressionForConstantValue:
_daKeysRequiringContainsOperatorType
predicateWithLeftExpression:rightExpression:modifier:type:options:
_daPredicateForKey:value:qualifier:
_daSimplifiedCompoundPredicateOfType:forSubqueries:
_daOrPredicateForAttributes:matchingValue:qualifier:
searchWordsForPhrase:
_daSearchPredicateForCriterion:
_daAttributesForHeaderCriterion
notPredicateWithSubpredicate:
_daWordPredicateWithAttributes:matchingValue:qualifier:
postActivityStarting
mf_clearLocks
postActivityFinished:
numberWithFloat:
userInfoForNotification
postDidChangeWithUserInfo:
_ntsThrottledUserInfoDict
setSupportsPerItemProgress:
percentDone
setStatusMessage:percentDone:
setStatusMessage:percentDone:withKey:
setPercentDone:withKey:
setDisplayName:maxCount:
addActivityTarget:
_lockedAddActivityTarget:
removeActivityTarget:
primaryTarget
setPrimaryTarget:
allTargets
_cancelAssociatedCancelables
cancelMessage
didCancel:
_didChange
currentDesignator
destroyCurrentDesignator
setStatusMessage:withKey:
destroyMonitor
startActivity
finishedActivity:
notifyConnectionEstablished
setMaxCount:
setCurrentCount:
setPercentDoneOfCurrentItem:
gotNewMessagesState
hasReason:
changeCount
setStatusMessage:
statusMessage
startTime
taskName
setTaskName:
setActivityTarget:
activityTarget
addActivityTargets:
activityTargets
addCancelable:
removeCancelable:
setInvocationQueue:
acquireExclusiveAccessKey
relinquishExclusiveAccessKey:
isRemoteSearch
setIsRemoteSearch:
_runningThread
_taskName
_displayName
_statusMessage
_descriptionString
_ourQueue
_percentDone
_key
_canCancel
_shouldCancel
_changeCount
_target
_maxCount
_currentCount
_currentItemPercentDone
_supportsPerItemProgress
_lastTime
_startTime
_gotNewMessagesState
_reasons
_associatedCancelables
_isRemoteSearch
_primaryTarget
_allTargets
methodSignature
numberOfArguments
mf_shouldLogInvocation
setPriority:
retainAssertionWithIdentifier:
addObserverForName:object:queue:usingBlock:
selector
target
invocationWithSelector:target:object1:object2:taskName:priority:canBeCancelled:
setShouldLogInvocation:
isLowPriority
setIsLowPriority:
powerAssertionId
_shouldLogInvocation
_isLowPriority
_powerAssertionId
_defaultDownloadSessionForAttachment:
downloadTaskWithURL:
setTaskDescription:
taskDescription
decodedFileSize
contentDirectoryOfAttachment:withCompletion:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
downloadMainEntryOfAttachment:withCompletion:
_attachments
backgroundSessionConfigurationWithIdentifier:
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
setAllowsCellularAccess:
addNetworkObserverBlock:queue:
_checkKeys:forStore:
_setUpTelephony_nts
_inititializeWifiManager
_setupSymptons
initWithQueue:
_setDataStatus_nts:
_pollDataAndCallStatus_nts
_tearDownTelephony_nts
_isNetworkUp_nts
dataStatus
_simulationOverrideForType:actualValue:
execute
_networkAssertionWithIdentifier:
initWithBlock:queue:
_updateWifiClientType
setReachabilityFlags:
setDnsEnabled:
setWifiEnabled:
setDataInterface:
setCellData:
setDataIndicator:
setRoamingAllowed:
setNumActiveCalls:
setNumBackgroundWifiClients:
networkAssertionWithIdentifier:
airplaneModeChanged
isDataAvailable
isNetworkUp
isOnWWAN
_setFlags:forReachability:
_handleNotification:info:forConnection:
_handleWiFiNotification:
removeNetworkObserver:
addBackgroundWifiClient:
removeBackgroundWifiClient:
awdNetworkDiagnosticReport
_thread
_observers
_dns
_calls
_backgroundWifiClients
_interface
_wiFiPreferences
_hasCellDataCapability
_hasWiFiCapability
_isWiFiEnabled
_isRoamingAllowed
_dataIndicator
_radiosPreferences
_prefsQueue
_symptomsToken
_reachability
_store_source
_telephony
mf_addImmediateObserver:selector:name:object:
mf_removeObservers:
initWithMaxThreadCount:
condition
_drainQueue:
detachNewThreadSelector:toTarget:withObject:
_processInvocation:
totalInvocationCount
runUntilDate:
_adjustThreadPrioritiesIsForeground:
flushAllInvocationQueues
maxThreadCount
invocationCount
threadCount
threadPriorityTrigger
setThreadPriorityTrigger:
threadRecycleTimeout
_items
_numThreads
_maxThreads
_threadPriorityTrigger
_threadRecycleTimeout
_lowPriorityThreads
mf_performOnewaySelectorInMainThread:withObject:withObject:
bundleWithIdentifier:
messagesCount
messageCollectionHash
setConversationHash:
stateForMessages:
initWithHash:comparator:
messageCountWithDuplicates
visibleMessageInfo
mergeWithCollection:
stickyPlaceholder
setStickyPlaceholder:
_messageInfoSet
_stickyPlaceholder
_messageCollectionHash
addProbeWithConnection:
mf_moreInfo
recoveryAttempter
useGenericDescription:
_moreUserInfo
mf_isSMIMEError
mf_shouldBeReportedToUser
mf_shouldFailDownload
validatePriority:
headersForMessage:fetchIfNotAvailable:
setPriorityFromHeaders:
subjectAndPrefixLength:
mailMessageStore
setDateReceivedInterval:
setIsVIP:
setRead:
setFlagged:
setKnownToHaveAttachments:
bestAlternativePart:
contentToOffset:resultOffset:downloadIfNecessary:asHTML:isComplete:
bestAlternativeInPart:
forwardedMessagePrefixWithSpacer:
dataMessageStoreToUse
displayablePriorityForPriority:
setModSequenceNumber:
subjectNotIncludingReAndFwdPrefix
loadMeetingExternalID
loadMeetingMetadata
shouldSetSummary
bestAlternativePart
shouldUseMailDrop
setShouldUseMailDrop:
_messageFlags
_subjectPrefixLength
_modSequenceNumber
_info
_shouldUseMailDrop
synchronize
copyBodyDataToOffset:resultOffset:downloadIfNecessary:isComplete:
textEncoding
htmlContentToOffset:resultOffset:downloadIfNecessary:
mf_dataUsingEncoding:
fileWrapperForDecodedObject:withFileData:
setURL:
isRecognizedClassForContent:
_shouldContinueDecodingProcess
attachmentClass
decodeTextRichtext
decodeTextEnriched
decodeTextHtml
htmlContentToOffset:resultOffset:
htmlContent
decodeTextPlain
decodeTextCalendar
decodeMultipartAppledouble
storeData:inMessage:isComplete:
copyFormattedHeaderValueFromAddressList:
basicHeaders
headersForKey:
_capitalizedKeyForKey:
appendHeaderMarkupForKey:value:toString:
localizedHeaders
localizedHeadersFromEnglishHeaders:
englishHeadersFromLocalizedHeaders:
markupString
mf_copyDateInCommonFormatsWithString:
fetchMinBytes
setFetchMinBytes:
minBytesLeft
setMinBytesLeft:
_fetchMinBytes
_fetchMaxBytes
_minBytesLeft
hasBeenDownloaded
_displayedMimePart
approximateRawSize
shouldDownloadAttachmentOnDisplay
_setTag:
actionsConsumer
initWithItemChangeType:changedItem:serverId:
originalThreadMonitor
handleSyncResponses:
requestType
refreshFolderHierarchyAndWait:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:sentBytesCount:receivedBytesCount:
partialResultsForMailbox:actions:responses:percentComplete:moreAvailable:
_tag
_accountID
_moreAvailable
_receivedFirstItem
_firstSyncBatch
_syncKeyResets
_serverErrors
_syncResponseConsumersByMessageId
_accountHierarchyLock
initWithBytesNoCopy:length:
consumerFactory
setAlternatePartConsumer:
alternatePartConsumer
dataConsumer
requestedFormat
_requestedFormat
_dataConsumer
_alternatePartConsumer
_consumerFactory
_triedCreatingAlternatePartConsumer
_didBeginStreaming
_timeOfLastActivity
myEmailAddresses
analyzeMessages:myEmailAddresses:
initWithMessages:relationships:
orderedSet
sendersOfMessage:
relationOfMessage:toMessage:previousSenders:myEmailAddresses:
isMessage:responseToMessage:previousSenders:myEmailAddresses:
isMessageDraft:
isMessage:forwardOfMessage:myEmailAddresses:
isMessage:sentByAddress:
isMessage:addressedToPreviousSender:
isMessage:addressedToMailingListForMessage:
recipientsOfMessage:
analysisOfConversation:
relationOfMessage:toMessage:
relationOfMessage:
_relationships
fileURLString
useMailDrop
placeholderDirectory
securityScopedURL:
startReadAccess
isFileBundleURL:
initFileURLWithPath:isDirectory:
linkItemAtURL:toURL:error:
writeData:forURL:
dataForFileBundleURL:
_localStoreURLForFileData:contentID:
placeholder
_setJSONDictionary:
_placeholderMagic
rangeOfData:options:range:
_localStoreURLForFileURL:contentID:
getResourceValue:forKey:error:
setFileURLString:
placeholderForFileURL:mimeType:contentID:
fileURL
securityScopedURL:withToken:
futureWithResult:
completionHandlerAdapter
securityScopeForPlaceholderURL:completionBlock:
then:
removePlaceholderForFileURL:
serializedRepresentation
hasPlaceholderRepresentation:
placeholderRepresentations:
placeholderForData:fileName:mimeType:contentID:
placeholderForMediaURL:mimeType:contentID:
removePlaceholder:
removePlaceholderForContentID:
serializedPlaceholderForFileName:fileSize:mimeType:contentID:
serializedPlaceholderForData:fileName:mimeType:contentID:
serializedPlaceholderForURL:mimeType:contentID:
setUseMailDrop:
_jsonDictionary
_updateEnhancedStatusCodesFromLastResponse
failureReason
statusClass
statusSubject
statusDetail
statusString
continuationResponses
_lastResponseLine
_statusClass
_statusSubject
_statusDetail
_statusString
_continuationResponses
decodeText
messageWithRFC822Data:withParentPart:
messageURL
setMessageURL:
initWithMessageData:parentPart:
allManagers
contentToOffset:resultOffset:asHTML:isComplete:
decodeMessageDelivery_status
decodeMessageRfc822
decodeMessagePartial
decodeMessageExternal_body
_resetBuffer
_checkpoint
_processJournalFile:db:
_rollback
checkpointBlock
rollbackBlock
_checkpointBlock
_rollbackBlock
initWithQueryString:options:
discreteProgressWithTotalUnitCount:
addChild:withPendingUnitCount:
becomeCurrentWithPendingUnitCount:
_cancel
resignCurrent
isFinished
completedUnitCount
setTotalUnitCount:
mf_cancelledError
_failedWithError:
_removeAllResultsBlocks
addSuccessBlock:
addFailureBlock:
_operandStringForOperand:
_modifierStringFromModifiers:
mf_stringForQuotingWithCharacter:
queryStringByJoiningQueries:withOperand:
_queryStringForPhrase:attributes:modifiers:
componentsSeparatedByCharactersInSet:
queryWithString:options:
queryStringForPhrase:attributes:modifiers:
progress
logPrefixString
truncatedDescription
_foundItems:
_completed
addResultsBlock:
addCompletionBlock:
queryString
setLogPrefixString:
_progress
_internalProgress
_resultsPromise
_resultsBlocks
_cancellableQuery
_queryString
_logPrefixString
messageIDHeader
initWithMailMessage:clientID:
replyTo
clientID
setClientID:
bodyType
_clientID
initWithRequestType:message:send:
newGenerationNumber
setDeleted:
uidIsLibraryID
generationCompare:
_flagged
_read
_deleted
_uidIsLibraryID
_hasAttachments
_isVIP
_isHighPriority
_dateReceivedInterval
_sortUid
_sortDateReceivedInterval
_conversationHash
_insertionPositionOfIndex:
_incrementStorageIfNecessaryForCount:
_positionOfIndex:
_garbageCollectStorageIfNecessary
_storageSize
_storage
sourceID
destID
resultsForMessageMove:
_messagesIDs
_newRemoteIDsByMessageID
_failures
initWithUnsignedLongLong:
replaceTransferFailureSnapshotTemporaryID:withTemporaryID:
setTranslatedID:forTemporaryID:
initWithOriginalRemoteID:mailboxID:messageFlags:
setTransferFailureSnapshot:forTemporaryID:
originalMessageFlags
_sourceRemoteIDs
_originalFlags
_temporaryRemoteIDs
_sourceMailboxID
_destinationMailboxID
deleteOfflineCacheData
_lastSelectedFolderID
setSelectedMailboxID:
applyToReplayContext:
initWithMailboxID:
_applyReplayContextTransformation:
initWithTemporaryID:translatedID:
translatedIDsByTemporaryID
initWithTemporaryID:transferFailureSnapshot:
failureSnapshotsByTemporaryID
initWithTemporaryID:newTemporaryID:
_accountLibraryID
_deferredOperations
_replayContext
_lastTemporaryMessageID
_isReplaying
_selectedMailboxID
_translatedIDsByTemporaryID
_failureSnapshotsByTemporaryID
_originalRemoteID
_originalMessageFlags
_temporaryID
_translatedID
_snapshot
_newTemporaryID
unregisterBlocks
readerBlock
writerBlock
outputData
inputRange
inputData
setInputRange:
_compressionArchive
_compressContents:withArchive:error:
_errorForArchiveStatus:
registerBlocks:writer:
_compressWithArchive:error:
_compressContents:error:
_compressContents:fileName:withArchive:error:
_compressionCompleteForArchive:error:
_compressionArchiveEntryWithFileName:length:
_decompressionArchive
_decompressArchive:intoArchiveDirectory:error:
_decompressionCompleteForArchive:error:
setInputData:
_decompressContents:inMemoryWithError:mainEntry:
stringWithCString:encoding:
_compressInputWithReader:writer:completion:
compressContents:completion:
_decompressContents:error:mainEntry:
_decompressInputWithReader:writer:mainEntry:completion:
decompressContents:completion:
setOutputData:
setReaderBlock:
setWriterBlock:
_inputData
_outputData
_readerBlock
_writerBlock
_inputRange
attachmentData:fileName:mimeType:contentID:
attachmentData:fileName:mimeType:
_contentID
processInfo
globallyUniqueString
temporaryDirectory
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_temporaryDirectoryUniqueURL
removeItemAtPath:error:
temporaryFileURLWithExtension:
temporaryFileURLWithFileName:
mimeTypeForFileName:
isBundle
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
_stripBundlePath:entryPath:
initWithSecurityScopedURL:withToken:
stopAccess
_attachSecurityScope
startAccessingSecurityScopedResource
coordinateWritingItemAtURL:options:error:byAccessor:
isWritableFileAtPath:
checkPromisedItemIsReachableAndReturnError:
_temporaryReadURL:error:
coordinateReadingItemAtURL:options:error:byAccessor:
isReadableFileAtPath:
stopAccessingSecurityScopedResource
_removeTemporaryReadURL
securityScopeToken
startWriteAccess
_fileCoordinator
_securityScopedURL
_securityScopeToken
_secureReadURL
_securedRead
_secureWriteURL
_securedWrite
messageWithRFC822Data:withParentPart:generateMessageIDHash:
bodyForMessage:fetchIfNotAvailable:updateFlags:
_messageData
_parentPart
_modelSpecificLocalizedStringKeyForKey:
_getValue:
defaultSignature
signature
_setValue:value:
signatureForAccount:
useAccountSignatures
plainTextFromHTMLSnippet:
setSignature:forAccount:
signatureForSendingEmailAddress:
signatureMarkupFormat:
signaturePlainTextFormat:
regularExpressionWithPattern:options:error:
rangeOfFirstMatchInString:options:range:
stripSignatureMarkup:
setSignature:
clearSignature
setUseAccountSignatures:
setSignature:forEmailAddress:
signatureMarkupForSendingEmailAddress:
signaturePlainTextForSendingEmailAddress:
_rowid
SMIMEError
copySigners
contentsForTextSystem
_needsSignatureVerification:
usesKnownSignatureProtocol
dataForMimePart:
signedData
initWithPartData:error:
lastSecCMSError
initWithDomain:code:userInfo:
verifyAgainstSenders:signingError:
signers
_setSigners:
_setSMIMEError:
decryptedMessageBodyIsEncrypted:isSigned:
isContentEncrypted
isContentSigned
mf_convertNetworkLineEndingsToUnix
setMessageClassForStore:
setStoragePath:
setMessageInfoFromMessage:
attachmentURLs
URLByDeletingLastPathComponent
_setDecryptedMessageBody:isEncrypted:isSigned:
decodeMultipartSigned
decodeApplicationPkcs7_mime
_SecCMSError
_digest
_signers
_signedData
_envelopedData
_isEncrypted
initForSigningWithSender:compositionSpecification:error:
initForEncryptionWithCompositionSpecification:error:
_appendBytes:length:
_encoder
_singleShot
initWithSendingAccount:signingPolicy:encryptionPolicy:
_updateSigningStatus_nts
_updateEncryptionStatus_nts
_notifyDelegateEncryptionStatusDidChange:certsByRecipient:errorsByRecipient:identity:error:
_determineEncryptionStatusWithNewRecipients:
_notifyDelegateSigningStatusDidChange:identity:error:
_determineSigningStatusWithSendingAddress:
_determineEncryptionStatusWithSendingAddress:
copySigningIdentityForAccount:sendingAddress:error:
_setSigningIdentityError_nts:
_determineRevocationStatusWithIdentity:sendingAddress:
secureMIMECompositionManager:signingStatusDidChange:context:
copyEncryptionIdentityForAccount:sendingAddress:error:
_setEncryptionIdentityError_nts:
copyEncryptionCertificatesForAccount:recipientAddress:error:
secureMIMECompositionManager:encryptionStatusDidChange:context:
_shouldAllowSend_nts
_shouldSign_nts
_shouldEncrypt_nts
initWithSigningPolicy:encryptionPolicy:
addRecipients:
removeRecipients:
setSendingAddress:
sendingAddress
sendingAccount
signingPolicy
encryptionPolicy
signingStatus
encryptionStatus
recipients
shouldAllowSend
_sendingAccount
_sendingAddress
_signingIdentity
_signingIdentityError
_encryptionIdentity
_encryptionIdentityError
_recipients
_errorsByRecipient
_certificatesByRecipient
_signingPolicy
_encryptionPolicy
_signingStatus
_encryptionStatus
_encryptionStatusSemaphore
_signingStatusSemaphore
_invalidated
setHeaders:
setPlaceholders:
libraryContent
richtextContent
multipartContent
placeholders
_placeholders
setLibraryMessage:
libraryMessage
_libraryMessage
setPlaintextAlternative:
setMixedContent:
textPartsAreHTML
setTextPartsAreHTML:
plaintextAlternative
mixedContent
_plaintextAlternative
setHtmlBody:
htmlBody
folderId
initWithStatusCode:error:folderID:folderName:
folderChange:finishedWithStatus:error:
_folderName
_statusCode
setRenameOnCollision:
setFolderName:
setParentFolderID:
setDataclass:
initWithDisplayName:parentFolderID:temporaryFolderID:
_parentFolderID
_temporaryFolderID
initWithFolderID:
parentFolderId
initWithFolderID:newParentFolderID:newDisplayName:
_newParentFolderID
_newDisplayName
changeType
objectForKey:shouldGenerate:wasCached:
.cxx_destruct
setKey:
weakObjectCacheRefForKey:
_dictionary
_vfsModuleName
initWithPath:databaseName:
setPool:
beginTransaction
databaseName
_poolHolder
_databaseName
_statementCache
_ICUSearchContext
_CPSearchContext
_transactionType
_transactionCount
_connectionWithType:
_semaphoreForConnectionType:waitCounter:
initWithConnection:generation:
generation
_interruptActiveConnections
cacheSize
maxConcurrentReaders
maxConcurrentWriters
backgroundReadersWaiting
maxConcurrentBackgroundReaders
_cacheLock
_cacheSize
_cacheGeneration
_maxConcurrentBackgroundReaders
_maxConcurrentWriters
_checkoutLock
_checkoutMap
_backgroundReaderSemaphore
_backgroundReadersWaiting
_writerSemaphore
_writersWaiting
_terminationTimer
_generation
noteNeedsSpotlightReindex
_needsSpotlightReindex
initWithContentsOfFile:encoding:error:
initWithObserver:queue:
setTimeStyle:
setDateStyle:
dateWithTimeIntervalSinceReferenceDate:
observer
queue
_observerReference
_protectedName
_vfsOnce
_vfsName
_attached
removeAllIndexes
_initDuet
_bundleIdentifier
initWithBundleIDs:states:
applicationStateForApplication:
_applicationStateChanged:
setHandler:
_lowPowerModeChangedNotification:
isLowPowerModeEnabled
_assertionTimeout
_releaseAssertion_nts
assertionDidExpire
_setupAssertionTimer:
_retainAssertion_nts
_setPluggedIn:
isHoldingAssertion
startListeningForBatterySaverNotifications
duetIdentifier
_deleteDuetAttributesForAccountWithUniqueId:
recordDuetEventForAccount:event:
_powerQueue
_pluggedIn
_powerToken
_appState
_appStateMonitor
_identifiers
setPersistentStore:
_accountsStoreChanged:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
accountsWithAccountTypeIdentifiers:completion:
_shouldUpdateAccountsInPlace
_accountWithPersistentAccount:useExisting:
accountClassForPersistentAccount:error:
_accountWithAccountClass:persistentAccount:useExisting:
isDirty
saveVerifiedAccount:withCompletionHandler:
removeAccount:withCompletionHandler:
_accountStoreLock
_accountStore
_accountClassStringWithPersistentAccount:error:
_accountClassForString:error:
loadBundleForAccountClassString:error:
_bundlePathForAccountClassString:
bundleWithPath:
loadAndReturnError:
bundlePath
accountWithPersistentAccount:error:
accountWithAccountTypeIdentifier:error:
query
whitespaceCharacterSet
parseExpiration:
parseURL:intoMetadata:
_domainIsWhitelisted:
_parseWrappedURL:intoMetadata:
_parseDirectURL:intoMetadata:
_parseURLQuery:
parseHeaderValue:forField:
_messageAttachmentStorageLocationsDidChangeNotification:
mf_rowID
partURL
attachmentForURL:withMimeBody:error:
initWithPrimaryLibrary:
attachmentsForMessage:withSchemes:
setMessageLibrary:
mf_lastPartNumber
partWithNumber:
messageLibrary
_messageLibraryHolder
isMailDrop
metadataForAttachment:forKey:
setMetadataForAttachment:toValue:forKey:
isContainedInRFC822
filterWithConsumer:
fetchDataForAttachment:
downloadProgress
fetchLocalData:stripPrivateMetadata:
isContainedInCompose
_dataProvider
filterData:
fetchCompletionBlock
finishWithResult:error:
setFetchCompletionBlock:
fetchDataSynchronouslyForAttachment:
cancelFetchForAttachment:
fetchDataSynchronously:
rangedFilterWithConsumer:range:
setMailDropMetadata:
progressWithTotalUnitCount:
setCompletedUnitCount:
pause
setDownloadProgress:
contentTypeConformsToEventVCS
filterVCSData:
replaceBytesInRange:withBytes:length:
isCached
fileNameByStrippingZipIfNeeded:
_filePathForAttachment:
_fileUTTypeForFileName:
_contentIDForAttachment:
sizeOnDisk
textEncodingGuessWithData:
fileUTType
contentTypeConformsToEventICS
conformsToType:
fetchData
fetchDataToURL:
isMailDropPhotoArchive
resetProgress
filterICSData:
isAvailable
shouldAutoDownload
inferredMimeType
remoteImageFileName
setRemoteImageFileName:
attachmentContentTypeForFileName:
setEncodedFileSize:
textEncodingNameForData:mimeType:
contentTypeConformsToVCard
contentTypeConformsToEvent
contentTypeConformsToProvisionment
contentTypeConformsToMarkup
contentTypeConformsToPassbook
contentTypeConformsToIWork
setPart:
isAutoArchive
setCustomConsumer:
setWantsCompletionBlockOffMainThread:
_isDataAvailableLocally
_placeholder
_downloadProgress
_isAutoArchive
_wantsCompletionBlockOffMainThread
_disposition
_fetchCompletionBlock
_customConsumer
_lastProgressBytes
_lastProgressTime
attachmentsForURLs:error:
objectsAtIndexes:
_processAttachments
containerWithIdentifier:
privateCloudDatabase
initWithRecordType:zoneID:
initWithFileURL:
recordID
_uploadAttachmentsViaCloudKit:zone:records:zippedPhotos:attachmentRecords:images:
scaledImages:
setAttachments:
_recordZoneIDInDatabase:completionHandler:
updateMessageWithAttachmentsSynchronously
initWithRecordIDs:
setRequestedTTL:
setFileNamesByAssetFieldNames:
downloadURL
imageArchiveMetadata
setAssetPublishedBlock:
addOperation:
setImageArchiveMetadata:
initWithRecordsToSave:recordIDsToDelete:
setDatabase:
setQueuePriority:
setQualityOfService:
values
setPerRecordProgressBlock:
setPerRecordCompletionBlock:
_publishRecord:database:attachmentRecords:images:allowsCellularAccess:
join:
setModifyRecordsCompletionBlock:
_mailDropZone
initWithZoneName:ownerName:
initWithZoneID:
saveRecordZone:completionHandler:
fetchRecordZoneWithID:completionHandler:
mailDropState
setMailDropState:
_imageArchiveMetadata
_mailDropState
mf_isValidAttachmentURL
storagePath
mf_partNumbers
_setupAttachment:withMimeBody:error:
setQuery:
attachmentForContentID:preferredSchemes:
tryLockWhenCondition:
totalUnitCount
removeObjectIdenticalTo:
supportedDocumentUTIs
removeProvider:
imageScalingQueue
attachmentForTextAttachment:error:
attachmentForContentID:
fetchDataForAttachment:completion:
_arrayAccessQueue
_providers
_metaDataLock
_imageScalingQueue
mf_isResourceURL
mf_firstPartNumber
initWithAccount:URLString:fullPath:isSpecial:
setFakeURLString:
setFakeFullPath:
setFakeIsSpecialMailboxUid:
fakeURLString
fakeFullPath
fakeIsSpecialMailboxUid
initWithAccount:URLString:fullPath:
_fakeIsSpecialMailboxUid
_fakeFullPath
_fakeURLString
initWithObject:measure:
_object
_measure
initWithDebugOutput:modelInfo:
setDebugOutput:
setModelInfo:
debugOutput
modelInfo
_debugOutput
_modelInfo
StoreEnumeration
MFMessageTransferResult
MFMailMessageStore
_MFMessageFlags
NSCoding
MFAttachmentCompositionContext
MFMessageWriter
_MFOutgoingMessageBody
MFCollectingDataConsumer
MFDataConsumer
NSObject
MFOutgoingMessage
MFDAStoreDraftConsumer
MFDASyncResponseConsumer
MFRequestQueueResponseConsumer
MFDADeferredStoreDraftOperation
MFDAOfflineCacheOperation
MFMimeEnrichedReader
MimeEnrichedReader
FormatFlowedSupportInternal
FormatFlowedSupport
_MFFormatFlowedWriter
MFWebMessageDocument
MFAttachmentDataProvider
MFAttachmentDataProviderProtocol
MFAccount
MFComposeAttachmentDataProvider
MFTaskAssertion
MailAccount
SortedMailboxes
MFMailboxUid
NSCopying
_MFMailboxUidEnumerator
_MFMailboxUidChildrenEnumerator
MFHeuristicsMailboxPredictor
MFMailboxPredictor
LocalAccount
_MFRootlessMailboxUid
MFMailDelivery
DeliveryAccount
MFMailDropMetadata
MFSMTPDelivery
MFSMTPConnection
SMTPAccount
MFFileArchiveDirectory
Goodies
ProtocolAdapter
ECMessage
MFBaseMessage
MFMailMessageStoreSearchResult
MFMessageKeychainManager
Functional
Additions
MFMessageReferenceContext
NSStringUtils
MFDirectoryPathUtils
MFSharedResourcesDirectoryPathUtils
MFAuthScheme
MFSASLAuthenticator
MFPlainAuthScheme
_MFPlainAuthenticator
_MFLoginAuthenticator
MFMessageSigner
MFLibraryMessage
MFMessageInfoOrderedSet
MFLibraryStore
MFContentErrorDocument
MFMessageCriterion
MFMobileLibraryAdapter
MFQueryableLibraryAdapter
MFDecryptedAttachmentDataProvider
LibraryAdditions
PrivateLibraryAdditions
MFSqliteMessageIDStore
MFBufferedQueue
MFPlainTextFragment
MFPlainTextDocument
MailboxPrediction
MFMailboxPredictionMailbox
ECMailbox
MFWebAttachmentSource
MFCRAM_MD5AuthScheme
MFCRAM_MD5Authenticator
MFDeliveryResult
MFAccountValidator
MFMessageLibrary
MFBasicMessageDataSection
MFMessageDataSection
UnreadCountCriterion
MFLibrarySearchableIndexMiddleware
0"1@
MFMailMessageLibrary
MFLibrarySearchableIndexDataSource
MFSQLiteConnectionPoolDelegate
MFContentProtectionObserver
_MFLibrarySQLiteConnectionWrapper
_MFMessageCollector
MessageConsumer
QueryProgressMonitor
_MFBlockIterationHandler
MFSearchResultHandler
_MFDataCollector
MFGuaranteedCollectingDataConsumer
MFMessageDetails
MFMailboxMessageIterationFilter
MFMessageIterationFilter
MFLibrarySearchableIndex
MFDiagnosticsGenerator
_MFLibrarySearchableIndexClientState
_MFLibrarySearchableIndexResultKey
MFLibrarySearchableIndexAdditions
MFLibrarySearchableIndexUpdates
MFLibrarySearchableIndexItem
_MFLibrarySearchableIndexPendingRemovals
MFProgressiveMimeParser
MFDigestMD5AuthScheme
_MFDigestMD5Authenticator
MFDADeferredFolderChangeOperation
DAMailAccount
MFDAMailbox
MFDAMailAccountConsumer
DAActionConsumer
MFDARequestQueue
MFDAMessagePayloadFetchResponseImpl
MFDAMessagePayloadFetchResponse
_MFDAResolveRecipientsConsumer
DAResolveRecipientsConsumer
MFCachingMailboxPredictor
MFDAMessageStore
MFAdditions
_MFDAMessageStoreGetUpdatesRequest
MFDAMailAccountRequest
_MFDAMessageStoreSetFlagsRequest
_MFDAMessageStoreDeleteRequest
_MFDAMessageStoreFetchHeadersRequest
_MFDAMessageStoreFetchRequest
_MFDADeferredSetFlagsOperation
_MFDADeferredDeleteMessageOperation
_MFDAMSBasicConsumer
_MFDAMSUpdateConsumer
MFDASyncActionsConsumer
_MFDAMSSearchResponseConsumer
DASearchQueryConsumer
_MFDAMessageHeaderFetchConsumer
_MFDAMessageBodyFetchConsumer
DAMailAccountStreamConsumerFactory
_MFDALibraryConsumerFactory
MFMessageDataConsumerFactory
_MFDAMessageFetchAttachmentConsumer
DAMessageFetchAttachmentConsumer
_MFDAMessageStoreSearchResultBodyConsumer
DAMailboxFetchSearchResultConsumer
DAMailboxStreamingContentConsumer
MFDAMessage
DADeliveryAccount
MFDADeliveryConsumer
DAMessageSendConsumer
MFDADelivery
MFFileArchiveEntry
MFRequestQueue
MFMessageURLConnectionDelegate
NSURLSessionDelegate
MFOutgoingMessageDelivery
MFStream
NSStreamDelegate
_MFSocket
MFAttachmentCapabilities
MFThreadFuzzyMatcher
MFConnection
MFConnectionSettings
MFAttachmentComposeManager
MFMailDropAttachmentPreviewDataProvider
DASearch
MFActivityMonitor
MFCancelable
_MFActivityMonitorMultiTarget
MailExtensions
MFMonitoredInvocation
MFMailDropAttachmentDataProvider
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
MFNetworkController
RadiosPreferencesDelegate
_MFNetworkObserver
MessageAdditions
MFInvocationQueue
MainThreadMessaging
MFMessageCollectionInfo
MFUnreadCountProbe
MFError
MFMailDataMessageStore
MFMailMessage
MFMailMimePart
MFLocalizedMessageHeaders
MFFetchLimits
MFMailMimeTextAttachment
MFDAMailAccountSyncConsumer
DAMailboxRequestConsumer
MFDAMessageContentConsumer
MFDAStreamingContentConsumer
MFMailMessageRelationshipAnalyzer
MFAttachmentPlaceholder
MFSMTPResponse
DecodeMessage
MFDbJournal
MFLibrarySearchableIndexQuery
NSProgressReporting
MFLibrarySearchableIndexQueryAdditions
MFDADraftMessage
MFDAMessageStoreSaveDraftRequest
MFMessageInfo
MFSparseMutable64IndexSet
NSMutableCopying
MFDAMoveResponseConsumer
DAMessageMoveRequestConsumer
MFDADeferredMessageMoveOperation
MFDAOfflineCache
_MFDADeferredSelectMailboxOperation
MFOfflineCache
MFOfflineCacheReplayContext
MFOfflineTransferFailureSnapshot
_MFSelectMailboxReplayContextTransformation
MFOfflineCacheReplayContextTransformation
_MFTranslateTemporaryIDReplayContextTransformation
_MFTransferFailureReplayContextTransformation
_MFReplaceTemporaryIDForTransferFailureReplayContextTransformation
MFFileArchive
MFAttachmentRaw
MFAttachmentUtilities
MFAttachmentBundle
MFAttachmentSecurityScope
MFRFC822AttachmentDataProvider
MFSignatures
MFOfflineCacheOperation
SMIMESupport
SMIMEDecoding
SMIMEDecodingPrivate
_MFSecCMSDecoder
SMIMEEncoding
_MFSecCMSEncoder
_MFSecDataMessageStore
MFSecureMIMECompositionManager
MFOutgoingMessageContent
MFOutgoingLibraryMessageContent
MFOutgoingRichtextMessageContent
MFOutgoingMultipartRelatedContent
MFDAFolderChangeConsumer
DAFolderChangeConsumer
MFDAFolderChangeResult
_MFDADeferredNewMailboxOperation
_MFDADeferredDeleteMailboxOperation
_MFDADeferredModifyMailboxOperation
_MFWeakObjectCacheRef
MFWeakObjectCache
MFSQLiteConnection
MFSQLiteConnectionPool
_MFSQLiteConnectionWrapper
MFMailMessageLibraryMigrator
_MFContentProtectionObserverWrapper
MFProtectedSQLiteConnection
MFPowerController
MFAccountStore
MFAccountLoader
iTunesSync
MFMailDropMailParser
MFAttachmentLibraryManager
MFMailboxPredictionMessage
MFAttachmentLibraryDataProvider
MFAttachment
MFMailDropMailDelivery
MFAttachmentManager
AttachmentURLUtilities
MFFakeMailboxUid
_MFMeasuredObject
_MFMailboxPredictorDiagnostics
MFMailboxPredictorDiagnostics
v12@0:4@?8
@20@0:4I8@12@16
v8@0:4
@8@0:4
I8@0:4
@"NSArray"
B12@0:4@8
#8@0:4
@28@0:4@8@12B16B20B24
@16@0:4@8B12
B8@0:4
v16@0:4@8@12
v12@0:4@8
v16@0:4^I8^I12
I16@0:4B8B12
v16@0:4I8@12
I12@0:4@8
@16@0:4{_NSRange=II}8
@12@0:4I8
@16@0:4I8I12
@12@0:4@8
@16@0:4@8I12
@20@0:4@8I12@16
i16@0:4@8I12
@20@0:4@8I12^@16
@24@0:4@8@12I16^@20
i20@0:4@8Q12
@16@0:4@8@12
v16@0:4i8B12
v16@0:4@8B12
I28@0:4@8@12@16@20@24
I24@0:4@8@12@16@20
I20@0:4@8@12@16
I16@0:4@8@12
v20@0:4@8B12@16
v24@0:4I8B12B16@20
i20@0:4I8@12I16
i12@0:4I8
B16@0:4L8@12
@20@0:4@8@12B16
i8@0:4
B20@0:4@8@12B16
{?="isReadOnly"b1"hasUnsavedChangesToMessageData"b1"haveOpenLockFile"b1"compacting"b1"cancelInvalidation"b1"forceInvalidation"b1"isWritingChangesToDisk"b1"isTryingToClose"b1"compactOnClose"b1"reserved"b23}
@"MFMailboxUid"
@"MailAccount"
@"MFActivityMonitor"
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@"NSString"
@"NSURL"
v20@0:4@8@12@16
@24@0:4@8@12@16@20
@28@0:4@8@12@16@20@24
@20@0:4@8@12@16
v12@0:4B8
v12@0:4#8
@"NSDictionary"
@"NSData"8@0:4
i12@0:4@8
i12@0:4@"NSData"8
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
L8@0:4
@"MFBufferedDataConsumer"
@"NSData"
B24@0:4^@8^I12^B16B20
@"MFMessageBody"
@"MFMutableMessageHeaders"
v16@0:4@8@"MFError"12
@"MFError"
B16@0:4@8@12
B16@0:4@"DAMailAccount"8@"MFDAOfflineCache"12
^{__CFCharacterSet=}8@0:4
v12@0:4r^{?=@b1b1b1b2}8
v12@0:4^{_CommandStackEntry=^{?}@}8
i12@0:4^@8
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"i"length"i}"bufferedRangeStart"i"bufferedRangeEnd"i}
^{__CFArray=}
@"NSMutableString"
^{__CFString=}
I20@0:4I8{_NSRange=II}12
I16@0:4I8B12
v20@0:4^@8^B12L16
@12@0:4L8
@16@0:4@8L12
I24@0:4{_NSRange=II}8I16B20
v24@0:4@8{_NSRange=II}12I20
@"MFPlainTextDocument"
@20@0:4@8@12L16
v12@0:4L8
@"MFMimeBody"
@"MFMimePart"
@"MFLock"
@"NSMutableDictionary"
@"MFAttachmentManager"
@"NSData"12@0:4@"MFAttachment"8
v20@0:4@8@12@?16
v20@0:4@"MFAttachment"8@"<MFDataConsumer>"12@?<v@?B@"NSError"B>16
@"MFMessage"12@0:4@"MFAttachment"8
@"NSString"16@0:4@"MFAttachment"8@"MFMessage"12
@16@0:4@8i12
B12@0:4B8
B16@0:4@8B12
v20@0:4{_NSRange=II}8@?16
B20@0:4@8@12@16
^v8@0:4
B12@0:4I8
@12@0:4^{_NSZone=}8
@12@0:4B8
@16@0:4B8^@12
@12@0:4^@8
@16@0:4@8^@12
B20@0:4@8@12^@16
B16@0:4@8@?12
B12@0:4@?8
B20@0:4@8@12@?16
B20@0:4@8B12@?16
B12@0:4^@8
v12@0:4I8
^{__CFString=}8@0:4
@"ACAccount"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSCache"
@24@0:4@8d12B20
@"BKSProcessAssertion"
@"NSObject<OS_dispatch_source>"
@16@0:4I8^@12
v20@0:4@8B12B16
@16@0:4B8B12
@24@0:4@8^@12^@16B20
v16@0:4i8@12
@16@0:4#8@12
v16@0:4B8@12
@16@0:4i8B12
@12@0:4i8
@16@0:4d8
v16@0:4@8i12
v16@0:4@8I12
i12@0:4i8
v16@0:4i8i12
B16@0:4@8^@12
#12@0:4@8
@20@0:4@8B12i16
v12@0:4i8
i16@0:4@8@12
@28@0:4@8@12I16@20@24
B24@0:4@8I12@16@20
^@12@0:4i8
B16@0:4@8i12
@24@0:4@8@12I16@20
@28@0:4@8@12I16@20i24
@24@0:4@8@12@16B20
@16@0:4i8@12
B12@0:4i8
{?="cacheDirtyCount"b16"synchronizationThreadIsRunning"b1"cacheHasBeenRead"b1"disableCacheWrite"b1"_UNUSED_"b13}
@"MFMessageLibrary"
@"MFWeakObjectCache"
@24@0:4@8I12@16@20
d8@0:4
@"MFWeakReferenceHolder"
@"NSMutableArray"
@"MFMessageCriterion"
@"NSNumber"
@"NSArray"20@0:4@"NSArray"8I12^@16
@20@0:4d8@16
@20@0:4@8d12
@"<MFUserProfileProvider>"
@"<MFQueryableLibraryAdapter>"
Q8@0:4
v16@0:4Q8
@"MFMessage"
@"DeliveryAccount"
@"MFDeliveryResult"
@"NSDate"
@"MFSMTPConnection"
i44@0:4@8@12@16@20^@24^@28^@32^B36^i40
l8@0:4
i20@0:4r*8I12@?16
i16@0:4@8@?12
@24@0:4r*8I12@16r*20
i24@0:4r*8I12@16r*20
i16@0:4^{_NSRange=II}8^B12
@"MFSMTPResponse"
@"NSMutableData"
@20@0:4I8B12B16
@20@0:4B8@12@16
@"NSTimer"
{_NSRange=II}12@0:4@8
@20@0:4^{CentralDirectory=[4C]SSSSIIS}8@12@16
^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}12@0:4@8
^{CentralDirectory=[4C]SSSSIIS}12@0:4@8
{_NSRange=II}12@0:4i8
@"MFFileArchiveEntry"
@"NSError"
@16@0:4@8#12
@"NSArray"8@0:4
@"NSDate"8@0:4
@"<ECMailbox>"8@0:4
q8@0:4
@"<ECMimePart>"8@0:4
@24@0:4@8@12i16^{__CFString=}20
@24@0:4@8@12i16^v20
v32@0:4@8@12@16i20^v24^v28
v24@0:4@8@12i16^v20
@20@0:4@8@12^@16
@24@0:4@8@12B16^@20
B32@0:4@8@12@16^v20B24^@28
v24@0:4@8@12@16^v20
^{__SecPolicy=}12@0:4@8
^{__SecIdentity=}16@0:4@8^@12
@16@0:4^{__SecIdentity=}8^@12
B16@0:4^{__SecIdentity=}8@12
@16@0:4^@8@?12
B20@0:4^{__SecIdentity=}8@12^@16
B28@0:4^{__SecIdentity=}8@12^{__SecPolicy=}16I20^@24
^{__SecCertificate=}16@0:4@8^@12
@16@0:4^{__SecCertificate=}8^@12
@16@0:4^{__SecCertificate=}8@12
i20@0:4^{__SecCertificate=}8^{__SecPolicy=}12@16
i16@0:4^{__SecIdentity=}8@12
i16@0:4^{__SecCertificate=}8@12
@12@0:4@?8
I12@0:4@?8
v16@0:4q8
^Q8@0:4
v12@0:4^Q8
v16@0:4d8
@"MFMailMessage"
@"MFSparseMutable64IndexSet"
B16@0:4@8I12
@16@0:4q8
#12@0:4#8
B16@0:4#8@12
@"MFConnection"
@"MFAuthScheme"
@"MFAccount"
@20@0:4@8^{__SecTrust=}12i16
^{__SecTrust=}8@0:4
^{__SecTrust=}
v32@0:4r*8Q12I20I24I28
@"NSMutableSet"
I12@0:4I8
v16@0:4I8@?12
@?8@0:4
@24@0:4{_NSRange=II}8I16^I20
@20@0:4{_NSRange=II}8I16
^{__CFDictionary=}20@0:4q8i16
I12@0:4B8
@24@0:4@8^@12B16^B20
B28@0:4@8{_NSRange=II}12^B20@24
@32@0:4@8{_NSRange=II}12^B20B24^B28
B36@0:4@8{_NSRange=II}12^B20@24B28^B32
@20@0:4@8I12B16
@32@0:4@8^@12^B16B20B24^B28
@28@0:4@8^@12^B16B20^B24
@24@0:4@8^B12^B16B20
@20@0:4i8i12@16
@"NSIndexSet"
@20@0:4I8@12I16
@"NSDictionary"20@0:4I8@12I16
I16@0:4I8@12
@"NSArray"20@0:4I8@12I16
@16@0:4I8@12
@"NSArray"16@0:4I8@12
@"MFMailMessageLibrary"
@20@0:4@8B12^@16
@28@0:4^I8I12B16@20@24
v16@0:4^?8@12
@12@0:4^?8
B16@0:4^?8B12
@16@0:4^{?=@@IIBBB}8I12
v12@0:4^{sqlite3=}8
Q12@0:4@8
@20@0:4I8d12
{_NSRange="location"I"length"I}
v20@0:4^@8^I12I16
v20@0:4@8B12@?16
v16@0:4@8@?12
@"MFMonitoredInvocation"
{?="useSSL"b1"incomingServerSupportsSSL"b1"smtpServerSupportsSSL"b1"canceled"b1"performsValidationInBackground"b1"unused"b27}
@44@0:4@8@12@16Q20Q28@36B40
v20@0:4@8q12
@20@0:4@8{_NSRange=II}12
@20@0:4@8I12I16
@20@0:4I8I12^B16
I20@0:4@8B12B16
@20@0:4{_NSRange=II}8@16
@28@0:4I8I12I16^{_NSRange=II}20@24
@20@0:4I8I12@16
v20@0:4@8@12B16
Vv16@0:4@8@?12
v28@0:4@8@12I16{_NSRange=II}20
v20@0:4@8@12I16
@24@0:4@8I12{_NSRange=II}16
@20@0:4@8I12^B16
@28@0:4@8I12{_NSRange=II}16^B24
@20@0:4@8@12I16
v20@0:4@8i12I16
@16@0:4i8^I12
v16@0:4i8@?12
v20@0:4Q8@16
v20@0:4@8Q12
v16@0:4@8^B12
@60@0:4@8@12B16@20@24Q28Q36@44B48B52@56
@16@0:4@8^B12
@20@0:4@8^@12^B16
@24@0:4@8@12B16@20
v28@0:4Q8Q16@24
@"MFAttachmentLibraryDataProvider"
@"MFDataHolder"8@0:4
@"MFDataHolder"
@"MFLibrarySearchableIndexUpdates"16@0:4@"MFLibrarySearchableIndex"8I12
@24@0:4@8q12@20
@"NSArray"24@0:4@"MFLibrarySearchableIndex"8q12@"MFLibrarySearchableIndexUpdates"20
v20@0:4@"MFLibrarySearchableIndex"8q12
@"NSDictionary"12@0:4@"MFLibrarySearchableIndex"8
@"MFSQLiteConnection"12@0:4@"MFSQLiteConnectionPool"8
@20@0:4@8@12@?16
B20@0:4@8@12i16
v24@0:4q8q16
@16@0:4@8^{sqlite3=}12
B20@0:4@8I12^{sqlite3=}16
q20@0:4@8^{sqlite3=}12@?16
v28@0:4^{sqlite3_stmt=}8^{sqlite3=}12@16^?20^v24
v32@0:4^{sqlite3_stmt=}8^{sqlite3=}12@16I20Q24
v24@0:4r*8^{sqlite3=}12@16I20
q12@0:4@8
^{__CFDictionary=}24@0:4q8@16i20
i16@0:4I8^{sqlite3=}12
@20@0:4I8q12
^{__CFDictionary=}12@0:4@8
@12@0:4^{__CFDictionary=}8
i16@0:4@8^B12
B16@0:4I8^{sqlite3=}12
Q16@0:4q8
v24@0:4Q8q16
v28@0:4q8@16Q20
@20@0:4q8I16
v20@0:4B8@12@16
B28@0:4@8I12@16B20B24
@36@0:4@8^{sqlite3=}12I16I20B24{_NSRange=II}28
@28@0:4@8^{sqlite3=}12I16I20B24
@24@0:4@8^{sqlite3=}12I16I20
@28@0:4@8^{sqlite3=}12I16{_NSRange=II}20
@20@0:4@8^{sqlite3=}12I16
v36@0:4@8@12I16I20{_NSRange=II}24^B32
v32@0:4@8@12I16I20{_NSRange=II}24
v24@0:4@8@12I16I20
v24@0:4@8@12I16@20
v20@0:4@8I12@?16
i12@0:4^{sqlite3=}8
B12@0:4^{sqlite3=}8
i16@0:4^{sqlite3=}8i12
v16@0:4@?8B12
^{sqlite3=}8@0:4
@12@0:4^{sqlite3=}8
^{sqlite3_stmt=}16@0:4^{sqlite3=}8@12
i16@0:4^{sqlite3=}8@12
v16@0:4i8^{sqlite3=}12
v28@0:4q8@16i20^{sqlite3=}24
v20@0:4q8^{sqlite3=}16
^{sqlite3_stmt=}24@0:4^{sqlite3=}8@12^@16I20
v28@0:4q8@16^@20^{sqlite3=}24
^{sqlite3_stmt=}24@0:4^{sqlite3=}8@12^I16I20
@16@0:4I8^B12
@28@0:4^{sqlite3_stmt=}8I12Q16B24
@"MFSQLiteConnectionPool"
^{__CFDictionary=}
@"NSObject<OS_dispatch_queue>"
@"<MFMailboxPathProvider>"
@"MFMailMessageLibraryMigrator"
@"MFDbJournal"
@"<MFMailMessageLibraryDelegate>"
@"MFWeakSet"
@"MFLibrarySearchableIndex"
@"MFProtectedSQLiteConnection"
v12@0:4@"NSArray"8
v12@0:4*8
v12@0:4@"MFLibraryMessage"8
@"NSObject<MFMessageIterationFilter>"8@0:4
@28@0:4@8@12@16B20B24
@"MFLibraryMessage"
B12@0:4^{sqlite3_stmt=}8
v20@0:4d8B16
d16@0:4^I8@?12
v24@0:4q8@16@?20
v20@0:4q8@?16
v16@0:4^@8^@12
@"MFCoalescer"
@"NSObject<OS_os_activity>"
@"_MFLibrarySearchableIndexPendingRemovals"
@"MFLazyCache"
@"<MFLibrarySearchableIndexDataSource>"
@"CSSearchableItem"
{?="delegateBeganMimePart"b1"delegateFinishedMimePart"b1"delegateBeganData"b1"delegateFailed"b1"state"b3}
v12@0:4^v8
@"MFDAFolderChangeResult"8@0:4
v12@0:4@"NSMutableDictionary"8
v28@0:4@8@12@16@20@24
v20@0:4@8@12^@16
@"NSObject<ASAccountActorMessages>"
@"DAAccount"
@"MFRecursiveLock"
@"MFDAOfflineCache"
@"MFDAMailbox"
@"NSLock"
@"NSSet"
@"NSCountedSet"
v20@0:4i8@12@16
v20@0:4i8@12@"NSError"16
v20@0:4@8i12@16
@"NSConditionLock"
@"DAMailAccount"
@20@0:4@8B12B16
v12@0:4@"NSDictionary"8
@"MFConditionLock"
@"<MFMailboxPredictor>"
v28@0:4@8@12I16B20@?24
@24@0:4@8@12i16@20
@24@0:4@8i12@16@20
@"DAFolder"
@"MFOfflineCacheOperation<MFDAOfflineCacheOperation>"8@0:4
@20@0:4i8i12B16
@"<MFRequestQueueResponseConsumer>"
@"MFDAMessageStore"
@"<MFRequestQueueResponseConsumer><DAMailAccountStreamConsumerFactory>"
v16@0:4@"DASearchQuery"8@"NSArray"12
v16@0:4@"DASearchQuery"8@"NSError"12
v16@0:4@"DASearchQuery"8@"NSNumber"12
@"MFMailMessageStoreSearchResult"
@"<DAMailboxStreamingContentConsumer>"8@0:4
@"<MFDAStreamingContentConsumer>"
@"<MFCollectingDataConsumer>"12@0:4@"NSString"8
v24@0:4@8@12@16@20
v24@0:4@"NSData"8@"NSString"12@"NSString"16@"NSString"20
v24@0:4i8@12@16B20
v24@0:4i8@"NSString"12@"NSString"16B20
v32@0:4i8@12@16B20I24I28
v32@0:4i8@"NSString"12@"NSString"16B20I24I28
@"MFProgressFilterDataConsumer"
B16@0:4@"DAMailMessage"8i12
v24@0:4*8i12i16@20
v24@0:4*8i12i16@"DAMailMessage"20
v12@0:4@"DAMailMessage"8
@"DAMailMessage"
v20@0:4@8I12I16
@16@0:4^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}8@12
{_NSRange=II}8@0:4
v16@0:4{_NSRange=II}8
v16@0:4@"NSURLSession"8@"NSError"12
v20@0:4@"NSURLSession"8@"NSURLAuthenticationChallenge"12@?<v@?i@"NSURLCredential">16
v12@0:4@"NSURLSession"8
v24@0:4@8@12@16@?20
@"MFPromise"
@"NSURLResponse"
@"<MFDeliveryDelegate>"
@"MFMailDelivery"
@"MFAttachmentCompositionContext"
v16@0:4@"NSStream"8I12
@16@0:4@?8@12
i16@0:4*8I12
i16@0:4r*8I12
@"NSURLSession"
@"NSURLSessionStreamTask"
@"NSInputStream"
@"NSOutputStream"
@"NSCondition"
B16@0:4^{__SecTrust=}8^@12
B12@0:4^B8
v12@0:4^{__CFString=}8
B20@0:4@8I12@16
i16@0:4r*8L12
i16@0:4*8L12
@"MFStream"
@"NSInvocation"
B24@0:4r*8L12{_NSRange=II}16
B20@0:4@8{_NSRange=II}12
v16@0:4r*8L12
B16@0:4@8L12
@"<MFSASLSecurityLayer>"
@"MFConnectionSettings"
@"_MFSocket"
^{z_stream_s=*II*II*^{internal_state}^?^?^viII}
@"MFInvocationQueue"
@20@0:4@8@12i16
v20@0:4@8d12
v24@0:4@8d12i20
v20@0:4d8i16
@"NSThread"
@24@0:4:8@12@16@20
@28@0:4:8@12@16i20B24
@32@0:4:8@12@16@20i24B28
@36@0:4:8@12@16@20@24i28B32
v20@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12@"NSURL"16
v40@0:4@8@12q16q24q32
v40@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12q16q24q32
v32@0:4@8@12q16q24
v32@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12q16q24
v28@0:4@8@12@16@20@?24
v28@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSHTTPURLResponse"16@"NSURLRequest"20@?<v@?@"NSURLRequest">24
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLAuthenticationChallenge"16@?<v@?i@"NSURLCredential">20
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@?<v@?@"NSInputStream">16
v40@0:4@"NSURLSession"8@"NSURLSessionTask"12q16q24q32
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLSessionTaskMetrics"16
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSError"16
{?=ii}8@0:4
B16@0:4I8B12
v16@0:4I8^{__SCNetworkReachability=}12
v16@0:4@8^{__SCDynamicStore=}12
v20@0:4@8@12^{__CTServerConnection=}16
^{__CFRunLoop=}
^{__SCPreferences=}
@"RadiosPreferences"
^{__SCNetworkReachability=}
^{__SCDynamicStore=}
^{__CFRunLoopSource=}
^{__CTServerConnection=}
@24@0:4@8:12@16@20
v20@0:4:8@12@16
@20@0:4q8@?16
@"MFMessageInfoOrderedSet"
@"MFMessageInfo"
@20@0:4@8i12@16
@28@0:4@8i12@16@20@24
I12@0:4i8
@12@0:4^I8
S8@0:4
v68@0:4@8@12@16@20@24d28d36q44q52@60I64
@12@0:4^B8
@20@0:4I8^I12B16
@16@0:4I8^I12
@28@0:4I8^I12B16B20^B24
v36@0:4@8@12@16@20d24B32
v36@0:4@"NSString"8@"NSString"12@"NSArray"16@"NSArray"20d24B32
v44@0:4@8@12@16@20d24B32I36I40
v44@0:4@"NSString"8@"NSString"12@"NSArray"16@"NSArray"20d24B32I36I40
v32@0:4@8@12@16d20B28
@"<MFCollectingDataConsumer>"
@"<MFMessageDataConsumerFactory>"
B24@0:4@8@12@16@20
B12@0:4r*8
B16@0:4@8^{sqlite3=}12
{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}
@"NSProgress"8@0:4
@"NSProgress"
@12@0:4c8
@56@0:4I8I12q16I24I28q32B40B44B48B52
L16@0:4Q8
B16@0:4Q8
Q16@0:4Q8
@"MFOfflineCacheReplayContext"
@24@0:4@8@12Q16
v12@0:4@"MFOfflineCacheReplayContext"8
@"MFOfflineTransferFailureSnapshot"
v16@0:4@?8@?12
v20@0:4@?8@?12@?16
^{archive=}8@0:4
i20@0:4@8^{archive=}12^@16
i16@0:4^{archive=}8^@12
^{archive_entry=}16@0:4@8I12
i24@0:4@8@12^{archive=}16^@20
B20@0:4@8^@12B16
v24@0:4@?8@?12B16@?20
B20@0:4^{archive=}8@12^@16
@"NSFileCoordinator"
v16@0:4@8^v12
^{SecCmsMessageStr=}
^{SecCmsDigestContextStr=}
^{SecCmsSignedDataStr=}
^{SecCmsEnvelopedDataStr=}
@24@0:4@8@12@16^@20
v16@0:4r^v8L12
^{SecCmsEncoderStr=}
^{__SecIdentity=}20@0:4@8@12^@16
@16@0:4i8i12
@20@0:4@8i12i16
v16@0:4^{__SecIdentity=}8@12
v20@0:4i8^{__SecIdentity=}12@16
v28@0:4i8@12@16^{__SecIdentity=}20@24
@"<MFSecureMIMECompositionManagerDelegate>"
^{__SecIdentity=}
v20@0:4@"DAFolderChange"8i12@"NSError"16
@"MFDAFolderChangeResult"
@24@0:4i8@12@16@20
@"<NSCopying>"
@20@0:4@8B12^B16
r*8@0:4
^{sqlite3_stmt=}12@0:4@8
^{sqlite3=}
@16@0:4I8^^i12
@"<MFSQLiteConnectionPoolDelegate>"
@"NSObject<OS_dispatch_semaphore>"
@"MFSQLiteConnection"
@"BKSApplicationStateMonitor"
@20@0:4#8@12B16
@"ACAccountStore"
#16@0:4@8^@12
@"<MFMailboxPredictionMailbox>"8@0:4
@16@0:4^@8B12
@"MFAttachmentPlaceholder"
@"<MFDataConsumer>"
@28@0:4@8@12@16@20B24
B32@0:4@8@12@16@20@24@28
@"MFMailDropMetadata"
@"NSDictionary"8@0:4
[LogMessageTransferTimes] Transferring %lu messages took %4.5f seconds (%4.5f s/msg).
#UnreadCount _unreadMessageCount went negative
Exception raised during message encoding: %@
*** BAD!!! Used old attachments for %@
*** Unexpected object <%@:%p>
#Warning Must be called with a subclass of MFOutgoingMessage.  You provided %@
Unable to encode %@ as a MIME attachment
Ignoring unmatched </%@> command
elapsed time %gs (input length=%ld, output length=%lu)
Bad line break index
#Warning Failed to load DataDetectorsCore.framework (%s)
#Warning NSClassFromString(@"DDURLifier") returned Nil
#Attachments nil path detected in initializer
#Attachments Failed to create file for attachment %@: %@
#Attachments Failed to create directory for attachment %@: %@
Encountered error while fetching credential for %@ (will %screate new credential): %@
Creating new credential for account %@
Credential renewal result: %ld%@%@
Web login result: %@%@%@
No attachment for [%@]
Zero length attachment for [%@]
Acquired task assertion: %{public}@
could not aquire task assertion: %{public}@
Invalidating task assertion: %{public}@
updateAutoFetchSettings was called. Backtrace:
%{public}@
#Warning Returned unhandled email addresses %@
failed to remove path %@
#Warning %@: no library!
#Warning <rdar://problem/17733540> _currentChokedActions: %@
mailboxDict: %@
Removing lookaside properties for accounts with identifiers: %@
Exception while getting all email addresses: %@
Failed to read cached info for account %@: %@
#MailboxPrediction Predicting for message persistentID=%@, subject="%@"
#MailboxPrediction Aggregate: %@
#MailboxPrediction ## Ordered Mode:
#MailboxPrediction Raw counts for %@: %@
#MailboxPrediction Found %.0lf hit for **%@** in %@
#MailboxPrediction Ignoring because it is the message's current mailbox.
#MailboxPrediction Ignoring because count (%.0f) is under threshold (%.0f).
#MailboxPrediction ## Summed Weighted Mode:
#MailboxPrediction Raw counts for %@:
#MailboxPrediction Found field=%@ in mailbox=%@: weightedHits=%.1lf
#MailboxPrediction ## Weighted Mode:
#MailboxPrediction Found %.0lf (weighted=%.1lf) hits for **%@** in %@
#MailboxPrediction Ignoring because weighted (%.0f) is under threshold (%.0f).
#MailboxPrediction Winner: %@ (weighted=%.1lf)
#MailboxPrediction Ignoring mailboxes: %@
Error %@ occurred while trying to append messages to outgoing store. Ignoring and proceeding with delivery...
SMTP error for recipient %@: %@
SMTP delivery:%d valid recipients; invalid recipients = %@
--- Got unexpected EHLO response ESMTP params %@
#Attachments Failed to validate archive central header
#Attachments Failed to validate archive central directory
#Warning failed to create date formatter
#Warning failed to create time formatter
Bad arguments to %@, %@
#Warning SecItemCopyMatching result: %d
SecItemCopyMatching succeeded with empty results
#Warning SecItemAdd result: %ld
#Warning SecItemUpdate result: %ld
#Warning SecItemDelete result: %ld
#SMIMEErrors Found %lu (out of %lu) matching signing identities for "%@"
#SMIMEErrors Found %lu (out of %lu) matching encryption identities for "%@"
#SMIMEErrors SecItemCopyMatching returned %ld
#SMIMEErrors Found no certificates for "%@" (%ld)
#SMIMEErrors Found %s certificate for "%@".
#SMIMEErrors Error saving encryption certificate for "%@": %@
#SMIMEErrors Verification was not good (%ld)
#SMIMEErrors Verification went south (%ld)
#SMIMEErrors Added trust exception for %@
#SMIMEErrors Removed trust exception for %@
#CacheLoads requesting data for MIME part %{public}@:%{public}@
#CacheLoads found full cached data for %{public}@:%{public}@
#CacheLoads found part data in database %{public}@:%{public}@
#CacheLoads extracted part data from full body data in database %{public}@:%{public}@
#CacheLoads downloading part data from server %{public}@:%{public}@
#CacheLoads %@ downloading part data from server %{public}@:%{public}@
#CacheLoads extracted part data from full body data via download %{public}@:%{public}@
#CacheLoads returning cached full body data for %@
#CacheLoads returning cached body data for %@
#CacheLoads returning body data from Library for %@
#CacheLoads fetching body data from network for %@
[LogMessageDeletionTimes] Deleting %lu messages took %4.5f seconds (%4.5f s/msg)
[LogMessageDeletionTimes] Searching for and deleting %lu messages in %@ took: %fs
Error %d on connection %p %@: %s - I/O error %d (%s)
Error %d on connection %p %@: %s
Wrong number of arguments (%d) to and64
wrong number of arguments (%d) to icusearch
#LibraryErrors Renaming database %@ to %@
#LibraryErrors Removing database %@
[LogJunkMailActivity] '%s' is addressed to known full name '%s'
#Warning Unhandled qualifier %ld for type %ld
#Warning Unhandled criterion type %ld
Unsupported header criterion %@
#Warning unsupported qualifier %d in flag criterion
unsupported operator %d
no entry for mailbox %@?
#LibraryErrors access to protected data is allowed
#LibraryErrors access to protected data is not allowed
#LibraryErrors closing database connections after suspend
found message flags discrepancy
#LibraryErrors could not set protection class for %@
#LibraryErrors wrote wrong number of bytes to file %@!
#LibraryErrors failed to open a file for message data at path %@, (error: %d, %s)
adding message references took %.2f (messageID: %d)
#LibraryErrors couldn't load body for %@, aborting
#LibraryErrors couldn't load headers for %@, skipping
#LibraryErrors delegate denied adding message %@
#LibraryErrors failed to find mailbox row for message %@: mailboxURL = %@
#Warning [addMessages] setting conversation id for message with library id %d failed
#LibraryErrors error importing message %@, aborting
#LibraryErrors inserting message failed, rolling back transaction
#Warning [updateThreadingInfoForMessage] updating conversation id for message with library id %d failed
#SQLite #Performance %.3f seconds to load first batch of %lu messages
#SQLite #Performance loaded %d messages in %.3f seconds
#LibraryErrors NULL query
#LibraryErrors criterion %@ couldn't be turned into a query, <db:%p, protected %@>
#LibraryErrors Could not create sqlite statement from criterionType=%ld groupByKey=%lu
#LibraryErrors criterion %ld couldn't be turned into a query, <db:%p, protected %@>
#LibraryErrors could not update sequence identifier for mailbox %@
#LibraryErrors couldn't load message with libraryID %u because protected data is unavailable
#LibraryErrors no message for library ID %u, URL: %@
#LibraryErrors NULL database
#LibraryErrors Error %d performing query: %s
#SQLite #Performance %0.4f seconds to perform query %@
#LibraryErrors Compacted %lu messages (%f seconds)
Vacuuming mailboxes: %@
#LibraryErrors Ignoring metadata storage key %u for message %@ - data too large.
#CacheLoads Loaded data of length %lu for message %@ from file
#CacheLoads loaded data of length %lu for message %@%@ from file
#CacheLoads error loading data from file %@: %@
#LibraryErrors failed to archive offline cache operation %@
#LibraryErrors can't mark %@ as completed because it doesn't have a rowid
#LibraryErrors Exception thrown while unarchiving offline cache operation: %@
#LibraryErrors failed to archive offline cache replay data
#LibraryErrors Posting %@
#LibraryErrors cleanupProtectedTables took %.4f seconds
#LibraryErrors skipping cleaning up protected tables because protected data is not available
#LibraryErrors error getting max rowid (protected.messages)
#LibraryErrors error getting max rowid (messages)
#LibraryErrors found %ld rows with missing conversation id
#LibraryErrors data consistency check took %.4f seconds
#LibraryErrors skipping data consistency check because protected data is not available
#LibraryErrors repairing inconsistent max rowids: %ld/%ld
#LibraryErrors protected data consisteny check failed
#LibraryErrors Key bag locked
#LibraryErrors Key bag unlocked
#LibraryErrors Skipping reconciliation after unlock because Protected Index could not be opened
#LibraryErrors Failed to open %s (error: %d). Retrying %d more times.
#LibraryErrors Aborting reconciliation, protected data is unavailable
#LibraryErrors Database reconciliation took %.4f seconds
#LibraryErrors Updated conversation hashes on %lu messages (%.4f seconds)
#LibraryErrors Opened new sqlite connection %p
#LibraryErrors Starting incremental vacuum for %@ database
#LibraryErrors Skipping incremental vacuum because protected tables are not available
#LibraryErrors Skipping incremental vacuum because free count (%d) is below limit (256)
#LibraryErrors Skipping incremental vacuum because load factor (%.2f) is above threshold (0.85)
#LibraryErrors Error performing incremental vacuum: %s
#LibraryErrors Successfully performed incremental vacuum on %@ database
#LibraryErrors An error occurred while committing the transaction on %p: could not flush journal
#LibraryErrors Warning: getting writer connection on the main thread
Abort if mobilemail
Could not open fd for %@
Could not set protection class on %@
#Warning %@
#Warning Removing mail database and files
#LibraryErrors pruned %d conversations
invalidated %d %{public}@ with transaction ID > %lld
assigning transaction identifier %lld to %lu type %lu tombstones
purging tombstones older than transaction %ld
assigning transaction identifier %lld to %lu messages
#Warning deferring refresh request until we have determined our active non-local accounts
requesting %lu items requiring indexing
recording spotlight type %ld tombstones: %@
reset transaction index for %d messages for account %{public}@ mailboxID %u
#LibraryErrors Exception occurred while message with ID %u: %@
writing out no data since existing data is equally long
not saving message data for non-existent message
#LibraryErrors storage path is nil! _libary: %@ _message: %@ _part: %@ _partial: %@ messageUrl: %@
#LibraryErrors Couldn't make complete path "%@"
#LibraryErrors Exception occurred while writing to "%@": %@
#LibraryErrors Empty message data
#CacheLoads loaded data of length %lu for message %@%@ from database
Error - could not stat path %@
#Warning %@ has no content protection class set
#Warning Could not get content protection class for %@
%@ is in protection class (directory none) 
%@ is in protection class %c
#Warning %@/%@ bytes (free/total)
#Warning failure to get file system size: %@
processing batch of indexable items
#Indexing applied persisted budget: %@
#Indexing persisted budget is out of date (%@), resetting
#Indexing no persisted budget
#Indexing persisting budget value: %@
#Indexing verifying representative sample of items in the datasource are actually indexed
#Indexing datasource couldn't verify
#Indexing Spotlight found everything from the sample
#Indexing Spotlight index is corrupt, items may be missing or duplicated
#Indexing -[MFLibrarySearchableIndex suspend]: %@ (%lld)
#Indexing -[MFLibrarySearchableIndex resume]: %@ (%lld)
#Indexing requesting refresh from data source
#Indexing starting coalescing timer (t=%gs)
#Indexing stopping coalescing timer
#Indexing coalescing timer fired
#Indexing suspending indexing queue
#Indexing resuming indexing queue
#Indexing scheduling processing of pending items
#Indexing processing pending items
#Indexing batch of %lu items took %.4gs to index
consuming %lu items out of a potential %lu
#Indexing requested %lu items to be indexed while inactive
#Indexing requested %lu items to be indexed (%lu new)
#Indexing #MailboxPrediction Canceling before querying Spotlight
#Indexing searching spotlight index for %@
#Indexing #MailboxPrediction Canceling after querying Spotlight
*** Missing rspauth value in server message
*** Bogus rspauth value returned from the server
*** Unexpected character '%c', aborting
*** Duplicate value for %@. Ignoring
*** Unexpected value %@ for %@. Ignoring
*** Unable to parse %@. Ignoring
*** Unable to parse %@. Aborting
*** Parse failure(unexpected character '%c'). Ignoring
*** Missing algorithm=md5-sess in server response
*** SASLPrivacySecurityLevel is not supported.
#Warning warning, %@ got ping for folder ID %@, but can't find mailboxUid with that ID.
performing %lu mailbox requests with account:%@, folder-id %@, anchor %@, user requested %s
mail db had no sync anchor for account:%@, folderID %@.  Will erase local messages, perform full sync.
server returned null sync key for sync of account:%@, folderID %@.  Will erase local messages, perform full sync.
setting sync key %@ for mailbox %@
compacting %lu messages that needed sync confirmation
message %@ has a temporary ID, but we have no deferred operations
message %@ was successfully transferred, but we don't have a new remote ID for it
DAMAilAccount %p is invalidating
DAMailAccount %p is deallocating
watched folder IDs changed: %@
account %@ will NOT start listening for notifications, battery-saver mode is ON
Requesting push for folders: %@
#Warning mailboxForFolderID returned nil (folderId = %@)
Add user focus mailbox: %@
Remove user focus mailbox: %@
%@: Network became %s
reslove recipients task %@ failed with code %ld
#MailboxPrediction Cache hit for %@
#MailboxPrediction Cache miss for %@
About to process remote ids matching searchtext:%@ predicate: %@
Invalid search returned for predicate: %@
Attempted to fetch messages from DA without basic search convertable criteria: %@
Searching for criterion: %@
Predicate is not supported, bailing.
Caller did not supply searchText. Generated basic search text:%@ from criterion:%@
Attempted to fetch messages from DA without searchText
Search result body fetch for message %@ %s
failed to download body for message "%@"
#Warning Error while fetching headers for message %@: %@
#Warning don't know how to fetch data for mime part %@
<%@:%p> set flags %llu, cleared flags %llu on message-id "%@" 
<%@:%p> deleted message-id "%@"
Erasing locally cached messages for folderID %@
Failed erasing messages for folderID %@ - no such local mailbox.
sync confirmed message with remote-id "%@"
received a redundant SyncAddAction for a message with remote-id %@
#Warning Caught exception %@
error syncing folder: %@
DAMessageStore - allMailboxes searchQuery returned result with invalid folderID: %@
#Power [New Message] subject=%@;
#Warning Exception raised while processing requests: %@
#ACE-DB using url %s
#ACE-DB payload is %s
#ACE-DB response is %s
#ACE-DB error retrieving configuration: %s
Account database: failed to parse db file
Account database: couldn't find path to db file
#ACE-DB ignoring service because capability '%s' is not satisfied
#Streams (%p) created
#Streams (%p) deallocated
#Streams (%p) set property %@
#Streams (%p) set property %@ with%s success
#Streams Opening stream (%p) to %@:%ld
#Streams (%p) %@
#Streams (%p) has closed
#Streams (%p) read %lu bytes
#Streams (%p) dispatching MFStreamEventHasBytesAvailable (%ld)
#Streams (%p) dispatching %@%@%@
#Streams (%p) no longer has an open write stream, aborting write of %lu bytes
#Streams (%p) wrote %ld bytes
#Streams (%p) bumped the buffer to %ld bytes
#Streams (%p) buffered %ld bytes
#Streams throughput monitoring is ON for %@
#Streams (%p) dispatching MFStreamEventCanAcceptBytes
#Streams throughput monitoring is OFF for %p
#Network <%{public}@:%p> Got SecTrustResultType %u for %@
*** _NSSocket.m:%s failed; socket=%p error=(%@,%ld)
#Network <%{public}@:%p> SSL handshake completed successfully: %{public}@ %{public}@, %@
low throughput threshold is %d bytes/sec
#Streams %@ received low throughput notification (rstream %p)
#Streams tearing down connection %@ due to low throughput
%{public}s <%{public}@:%p> [%@:%u%{public}@]
%{public}s <%{public}@:%p> [%@:%u%{public}@] %{private, mobilemail:networkData}.*P
#Network %d for %@
Detected server with low-grade DH cipher. Re-trying with DH disabled.
deflateInit2 failed with error %d
inflateInit2 failed with error %d
adding attachment %@
Calling progress block for %@.  %lu/%lu
#Attachments ContextID was nil for filename:%@ contentID:%@
#Attachments Data was nil for filename:%@ contentID:%@
Cannot handle Sender is VIP - should have been taken care of further up
Received unexpected qualifier %d for MessageIsRead criterion.
failed to create DA predicate for criterion: %@
Returning criterion:%@ result:%@
Received unhandled MessageRuleQualifier value:%d - assuming contains
#Warning Activity monitor cancelled on the Main Thread.  Why?
deallocating %p %@
Downloading attachment: %@ using URL session: %@
#Warning Could not create SCDynamicStore
moving to foreground: thread %p already has a qos override!
moving to background: thread %p didn't have a qos override
processing low pri invocation: qos override already existed for %p, just ending it
#Warning Error %d: %s
#UnreadCount [UnreadCount] %@ %s
ERROR: %@/%@
ERROR: %@/%@ - %@
Unexpected flag key "%@"
#Warning Could not open fd for %@
#Warning Could not set protection class on %@
server indicated invalid sync state for task %@ (code %ld).  resetting mailbox sync key.
server has reset the sync state %@ times in the same sync attempt, giving up.
#Attachments Failed to deserialize placeholder
#Attachments Failed to serialize placeholder
#Attachments Failed create placeholder for URL [%@]
#Attachments Failed create placeholder for fileName [%@]
#Attachments Failed obtain data for temporary file
#Attachments Attempted to resolve placeholder for non-existant file: %@
#Attachments Placeholder attachment data write error %@
#Attachments Failed to remove temporary file
#Attachments Failed to create placeholder directory %@
#LibraryErrors appending %lu bytes to journal
#LibraryErrors creating new journal file %@
#LibraryErrors created new journal file %@ (fd: %d)
#LibraryErrors wrote wrong number of version bytes to journal, expected: %lu actual: %ld (error %d: %s)
#LibraryErrors flushing journal fd %d (%lu bytes)
#LibraryErrors wrote wrong number of bytes to journal, expected: %lu actual: %ld (error %d: %s)
#LibraryErrors clearing in-memory journal data
#LibraryErrors processing journal file %@
#LibraryErrors failed to allocate buffer during journal merge
#LibraryErrors read wrong number of version bytes from journal, expected: %lu actual: %zd
#LibraryErrors found journal file of wrong version, expected: %d actual: %lu
#LibraryErrors realloc failed when merging journal with database
#LibraryErrors read wrong number of bytes from journal, expected: %lu actual: %zd
#LibraryErrors Removing journal file %@
#LibraryErrors An error occurred processing %@
#LibraryErrors An error occurred during reconciliation. Rolling back database to last known good state.
#LibraryErrors Error %d %@ at path %@: %s
got %@ with untracked sourceID "%@"
<%@:%p> replaced temporary-id "%@" with "%@" for message move snapshot %@
<%@:%p> temporary-id "%@" became remote ID "%@"
<%@:%p> temporary-id "%@" got last mailbox snapshot %@
<%@:%p> deferring operation %@
<%@:%p> beginning offline cache replay...
<%@:%p> replay finished (%s)
<%@:%p> deleting offline cache data
<%@:%p> selected folder-id "%@"
#Attachments Failed to write entire data buffer
#Attachments Failed to enumerate URL [%@] due to error [%@]
#Attachments Failed to read bundle URL [%@]
#Attachments Failed to archive bundle attachment URL: %@ due to error: %@
#Attachments Failed to read attachment URL: %@
#Attachments Failed to access attachment URL: %@
#Attachments URL is not a bundle: %@
NSFileCoordinator ops can block, the caller should move to a background thread
#Attachments Error accessing secure write URL [%@]
#Attachments Error confirming URL is writeable [%@]
#Attachments Error accessing secure read URL [%@]
#Attachments Error confirming URL is readable [%@]
#Attachments Failed to create temporary read URL [%@] error [%@]
#Attachments Failed to create temporary read directory [%@]
Failed to remove temporary read URL [%@] error [%@]
Failed to remove temporary read directory [%@] error [%@]
#SMIMEErrors Missing signed data!
#SMIMEErrors Missing signature part!
#SMIMEErrors decodeMultipartSigned failed with %@
#SMIMEErrors There was no error while decrypting the message but there was no body either!
#SMIMEErrors decodeApplicationPkcs7_mime failed with %@
#SMIMEErrors SecCmsDecoderCreate returned %ld
#SMIMEErrors SecCmsDecoderUpdate returned %ld for %lu bytes
#SMIMEErrors SecCmsDecoderFinish returned %ld
#SMIMEErrors SecCmsDigestContextStartMultiple failed
#SMIMEErrors -appendData: called on _MFSecCMSDecoder after an error has occurred!
#SMIMEErrors -appendData: called on _MFSecCMSDecoder with no signed or enveloped data!
#SMIMEErrors SecCmsSignedDataSetDigestContext on -done returned %ld
#SMIMEErrors _MFSecCMSDecoder asked to verify with pending error (%ld)
#SMIMEErrors There were no digests in the message
#SMIMEErrors The message sender is missing
#SMIMEErrors SecCmsSignedDataVerifySignerInfo returned %ld for #%d:%@
#SMIMEErrors There was a signing error %@
#SMIMEErrors newSignedPart... failed with %@
#SMIMEErrors newEncryptedPart... failed with %@
#SMIMEErrors Found no identity for "%@"
#SMIMEErrors SecCmsMessageCreate for signing failed
#SMIMEErrors SecCmsSignedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentSignedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for signing returned %ld
#SMIMEErrors SecCmsSignerInfoCreate failed
#SMIMEErrors SecCmsSignerInfoIncludeCerts returned %ld
#SMIMEErrors SecCmsSignedDataAddCertChain returned %ld
#SMIMEErrors SecSMIMEFindBulkAlgForRecipients returned %ld
#SMIMEErrors SecCmsMessageCreate for encryption failed
#SMIMEErrors SecCmsEnvelopedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentEnvelopedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for encryption returned %ld
#SMIMEErrors Failed to create all the required recipients
#SMIMEErrors -appendData: called on _MFSecCMSEncoder after an error has occurred!
#SMIMEErrors SecCmsMessageEncode returned %ld
#SMIMEErrors -appendData: called twice _MFSecCMSEncoder (only once is allowed for now)!
#SMIMEErrors SecCmsEncoderFinish on -done returned %ld
#SMIMEErrors SecIdentityCopyCertificate could not find certificate for %@
#SMIMEErrors SecTrustCreateWithCertificates returned %ld
#SMIMEErrors Revocation check failed with status %ld
#SMIMEErrors SecCertificateCreateWithData() failed for %@
folder with temporary-id "%@" got server-id "%@" and name "%@"%s
folder with temporary-id "%@" could not be created, status code %ld
folder with server-id "%@" could not be deleted, status code %ld
deleted folder with server-id "%@"
folder with server-id "%@" got parent-id "%@" and name "%@"%s
failed to modify folder with server-id "%@", status code %ld
#LibraryErrors Closing sqlite connection %p
#Warning Terminating outstanding connection %p
#Warning Error: migration is not supported for version %d
#Warning Error %d %@: %s
#Warning Error: failed to get contents of "%@": %@
#Warning Error: failed to find "%@"
Key bag transitioning from %@ to %@
Ignoring lock state change from %@ to %@
#LibraryErrors Connection %p is already attached
#LibraryErrors Attached Protected Index on connection %p
#LibraryErrors Connection %p is already detached
#LibraryErrors Detach Protected Index on connection %p
#Warning networking is disallowed on the main thread
Assert if seed or internal build
#Warning networking is disallowed
device is now %@
listening for low-power mode notifications
low-power mode changed to %@
#Assertions [*] cancel power assertion timer
#Assertions [*] schedule %d sec power assertion timer
#Assertions [*] power assertion timer expired
#Assertions [+] %@
#Assertions [-] %@
transitioning from %@ to %@
Missing account type for identifier %@
Failed to fetch accounts for types [%@]: %@
Failed to load account for persistent account "%@"%s%@
Saved account "%@" (%@)
Failed to save account "%@" (%@) error: %@
Nothing to save for account "%@" (%@)
Removed account "%@" (%@)
Failed to remove account "%@" (%@) error: %@
Received %@ notification
Loaded bundle at %@
Ignoring MailServices bundle %@ for %@
#Attachments failed to find a store for message %@, things may behave unexpectedly
#Attachments Failed to fetch data for attachment [%@]
FIXME: calls that come from the main thread should use fetchLocalData
#Attachments Failed to fetch data for attachment [%@] due to %@
#Attachments Failed to fetch candidate placeholder contents for attachment [%@]
#Attachments Unable to obtain data provider for attachemnt [%@] due to %@
UTType [%@] for filename:[%@] via extension:[%@] mimeType:[%@]
UTType [%@] for filename:[%@] could not derive extension
UTType [%@] for filename:[%@] extension:[%@] via mimeType:[%@]
#Attachments UTType for filename:[%@] extension:[%@] mimeType:[%@] indeterminate
UTType [%@] for filename:[%@] via cache
#Attachments Failed to create path %@ for attachment [%@]: %@
#Attachments Failed to create directory %@ for attachment [%@]: %@
#Attachments Unable to read file URL [%@] due to error:%@
#Attachments Unable to read file URL [%@]
#Attachments Mail Drop couldn't create zone. Error: %@
#Attachments Mail Drop couldn't create archive. Error: %@
#Attachments Mail Drop couldn't create record.
Mail Drop attachment: %@
#Attachments Mail Drop error publishing asset. %@
Mail Drop asset URL: %@
Mail Drop progress %f for record:%@
#Attachments Mail Drop error for record:%@
#Attachments Mail Drop complete for record:%@
#Attachments Mail Drop error with upload. %@
Start uploading records to CloudKit database [%@] ...
#Attachments Failure encountered during Mail Drop processing [%@]
Start fetching CloudKit record zone for ID [%@] ...
#Attachments Error encountered while fetching CloudKit record zone [%@]
#Attachments Error encountered while saving CloudKit record zone [%@]
#Attachments failed to get zone identifier from keychain: %@
#Attachments FIXME: Blocking call requested on the main thread
removing attachment %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
