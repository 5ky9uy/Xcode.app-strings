texttone:Incoming-Call-Haptic-US
texttone:Text-Message-Haptic
texttone:Voicemail-Haptic
texttone:New-Mail-Haptic
texttone:Calendar-Haptic
texttone:Reminder-Haptic
texttone:Alarm-Haptic
texttone:Timer-Haptic
texttone:Digital-Touch-Haptic
texttone:System-Notification-Haptic
texttone:App-Notification-Haptic
texttone:Passbook-Haptic
texttone:Hummingbird-Haptic
ringtone
sms-sound-identifier
voicemail-sound-identifier
newmail-sound-identifier
sentmail-sound-identifier
senttweet-sound-identifier
facebookpost-sound-identifier
calendaralert-sound-identifier
reminderalert-sound-identifier
airdrop-invitation-sound-identifier
alarm-sound-identifier
timer-sound-identifier
continuity-keyboard-sound-identifier
-per-account
-watch-alert-policy
watch-prefers-salient-notification
com.apple.ToneLibrary
/Library/Ringtones
Opening
Media/iTunes_Control/Ringtones
Media/iTunes_Control/iTunes/Ringtones.plist
Media/Purchases
Media/Purchases/Ringtones.plist
/System/Library/Audio/UISounds
AlertTones
Modern
nano
AlarmWakeUpRingtones
Album
Artist
Total Time
Genre
Name
GUID
Purchased
Media Kind
Artwork File
Protected Content
Private
File Extension
Ringtones
import_
_TLToneManagerContentsChangedNotification
v4@?0
_TLToneManagerAccessQueue
com.apple.ToneLibrary.lock
Ringtone_US_Haptic.caf
texttone:Incoming-Call-Haptic-UK
Ringtone_UK_Haptic.caf
Alert_Messages_1_Haptic.caf
Alert_Voicemail_Haptic.caf
Alert_Mail_Haptic.caf
Alert_Calendar_Haptic.caf
Alert_ReminderDue_Haptic.caf
Alarm_Haptic.caf
Timer_Haptic.caf
ET_BeginNotification_Haptic.caf
Notification_Haptic.caf
Alert_3rdParty_Haptic.caf
texttone:App-Notification-Remote-Haptic
sms-received1.caf
texttone:Activity-Goal-Behind-Haptic
Alert_ActivityGoalBehind_Haptic.caf
texttone:Activity-Goal-Attained-Haptic
Alert_ActivityGoalAttained_Haptic.caf
texttone:Passbook-Geofence-Haptic
Alert_PassbookGeofence_Haptic.caf
HummingbirdNotification_Haptic.caf
texttone:Incoming-Call-Haptic-Deemphasized-US
RingtoneDucked_US_Haptic.caf
texttone:Incoming-Call-Haptic-Deemphasized-UK
RingtoneDucked_UK_Haptic.caf
texttone:Salient-Notification-Haptic
SalientNotification_Haptic.caf
texttone:Text-Message-Salient-Haptic
Alert_Messages_1_Salient_Haptic.caf
texttone:Voicemail-Salient-Haptic
Alert_Voicemail_Salient_Haptic.caf
texttone:New-Mail-Salient-Haptic
Alert_Mail_Salient_Haptic.caf
texttone:Calendar-Salient-Haptic
Alert_Calendar_Salient_Haptic.caf
texttone:Reminder-Salient-Haptic
Alert_ReminderDue_Salient_Haptic.caf
texttone:Digital-Touch-Salient-Haptic
ET_BeginNotification_Salient_Haptic.caf
texttone:System-Notification-Salient-Haptic
Notification_Salient_Haptic.caf
texttone:App-Notification-Salient-Haptic
Alert_3rdParty_Salient_Haptic.caf
texttone:Go-To-Sleep
GoToSleep_Haptic.caf
texttone:SOS-Countdown-Tick
SOS-Countdown-Tick.caf
system:
itunes:
texttone:
alarmWakeUp:
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0@"NSError"4
v12@?0@"NSDictionary"4@"NSError"8
v12@?0B4@"NSError"8
texttone:Text-Message-Alert-In-Conversation
RINGTONE_PICKER_DEFAULT_RINGTONE_NAME
com.apple.ToneLibrary.TLToneManager.soundCacheAccessQueue
RINGTONE_PICKER_NONE
v16@?0@4@8^B12
%@%@
sound-identifier
sound
_rootDirectory
T@"NSString",R,N
_deviceITunesRingtoneDirectory
_deviceITunesRingtoneInformationPlist
_iTunesRingtoneDirectory
_iTunesRingtoneInformationPlist
_systemRingtoneDirectory
com.apple.springboard
NPSDomainAccessor
Unable to find class %s
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
_TLTonePreferencesDidChangeNotification
_TLAlertWatchPrefersSalientNotificationPreferenceDidChangeLocallyNotification
_TLAlertWatchPrefersSalientNotificationPreferenceDidChangeRemotelyNotification
com.apple.itunesstored.RingtoneAdded
AVItem
/System/Library/PrivateFrameworks/Celestial.framework/Celestial
AVItem_PlaybackProperties
was-affected-by-accidental-tone-deletion
requires-reset-sync-post-accidental-tone-deletion
NPSManager
com.apple.Carousel
Carousel
bundleIdentifier
T@"NSString",R,N,V_bundleIdentifier
name
T@"NSString",R,N,V_name
v16@?0@"NSString"4@"NSString"8@"NSString"12
v16@?0@"NSString"4@"NSDictionary"8^B12
TLVibrationManagerUserGeneratedVibrationsDidChange
usergeneratedvibration:
Pattern
Media/Vibrations/UserGeneratedVibrationPatterns.plist
Unexpected type for %@: %@ (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-380/Library/Vibrations/TLVibrationPersistenceUtilities.m
+[TLVibrationPersistenceUtilities _objectIsValidUserGeneratedVibrationPattern:error:]_block_invoke
key of user generated vibration pattern wrapper
Invalid vibration pattern: %@
name of user generated vibration pattern
user generated vibration pattern wrapper
v16@?0^@4^@8^@12
+[TLVibrationPersistenceUtilities objectIsValidUserGeneratedVibrationPatternsDictionary:error:]_block_invoke
Invalid key object: %@. All key objects need to start with "%@"
key object
root object
<%@: %p
; type = %@
; topic = "%@"
; toneIdentifier = "%@"
; vibrationIdentifier = "%@"
; externalToneFileURL = %@
; externalToneMediaLibraryItemIdentifier = %llu
; has externalVibrationPattern
; audioCategory = "%@"
; audioVolume = %f
; maximumDuration = %f
; shouldRepeat = YES
; shouldIgnoreRingerSwitch = YES
type
topic
toneIdentifier
vibrationIdentifier
externalToneFileURL
externalToneMediaLibraryItemIdentifier
externalVibrationPattern
audioCategory
audioVolume
maximumDuration
shouldRepeat
shouldIgnoreRingerSwitch
hasCustomAudioVolume
Instances of TLAlertConfiguration cannot be mutated once they've been used to make an instance of TLAlert. Please make a copy of the TLAlertConfiguration instead.
supportsSecureCoding
TB,R
_hasCustomAudioVolume
TB,R,N,V_hasCustomAudioVolume
Ti,R,N,V_type
T@"NSString",C,N,V_topic
T@"NSString",C,N,V_toneIdentifier
T@"NSString",C,N,V_vibrationIdentifier
T@"NSURL",C,N,V_externalToneFileURL
TQ,N,V_externalToneMediaLibraryItemIdentifier
T@"NSDictionary",C,N,V_externalVibrationPattern
T@"NSString",C,N,V_audioCategory
Tf,N,V_audioVolume
forPreview
TB,N,GisForPreview,V_forPreview
Td,N,V_maximumDuration
TB,N,V_shouldRepeat
TB,N,V_shouldIgnoreRingerSwitch
tone
Fade In
Fade Out
identifier
T@"NSString",R,N,V_identifier
filePath
T@"NSString",R,N,V_filePath
T@"NSNumber",R,N,V_pid
purchased
TB,R,N,GisPurchased,V_purchased
TB,R,N,GisRingtone,V_ringtone
artworkFile
T@"NSString",R,N,V_artworkFile
duration
TI,R,N,V_duration
protected
TB,R,N,GisProtected,V_protected
private
TB,R,N,GisPrivate,V_private
playbackProperties
T@"NSDictionary",R,N,V_playbackProperties
AVItemPlaybackProperties_RampInDuration
AVItemPlaybackProperties_RampOutDuration
playedToEnd
reachedMaximumDuration
stopped
userInterruption
systemInterruption
failed
????
; soundFileURL = %@
; wasSoundCreated = NO
; soundID = kSystemSoundID_NoneTone
; soundID = %lu
soundFileURL
T@"NSURL",R,N,V_soundFileURL
soundID
TL,R,N
_TLAlertTopicIncomingCallDeemphasized
v12@?0i4@"NSError"8
v8@?0@"TLAlertConfiguration"4
actualSound
T@"TLSystemSound",R,N
previewSound
TLAlertTypeNone
TLAlertTypeIncomingCall
TLAlertTypeTextMessage
TLAlertTypeTextMessageInConversation
TLAlertTypeNewVoicemail
TLAlertTypeNewMail
TLAlertTypeSentMail
TLAlertTypeSentTweet
TLAlertTypeFacebookPost
TLAlertTypePhotoStreamPost
TLAlertTypeCalendarAlert
TLAlertTypeReminderAlert
TLAlertTypeAirDropInvitation
TLAlertTypeAlarm
TLAlertTypeTimer
TLAlertTypeDigitalTouch
TLAlertTypeSystemNotification
TLAlertTypeAppNotification
TLAlertTypeEmergency
TLAlertTypeActivity
TLAlertTypePassbook
TLAlertTypeHummingbird
TLAlertTypeSOS
TLAlertTypeContinuityKeyboard
none
incoming call
text message
text message in conversation
new voicemail
new mail
sent mail
sent tweet
facebook post
photo stream post
calendar alert
reminder alert
airdrop invitation
alarm
timer
digital touch
system notification
app notification
emergency
activity
passbook
hummingbird
continuity keyboard
v8@?0i4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-380/Library/Playback/TLAlertType.m
void _TLAlertTypeValidateConsistencyOfEnumeration()_block_invoke
Built-In-System-Sound-ID-Vibration
SystemCallVibrationIdentifier
SystemTextMessageVibrationIdentifier
SystemNewVoiceMailVibrationIdentifier
SystemNewMailVibrationIdentifier
SystemSentMailVibrationIdentifier
SystemTweetVibrationIdentifier
SystemFacebookPostVibrationIdentifier
SystemCalendarAlertVibrationIdentifier
SystemReminderAlertVibrationIdentifier
SystemAirDropInvitationVibrationIdentifier
SystemAlarmVibrationIdentifier
SystemTimerVibrationIdentifier
SystemContinuityKeyboardVibrationIdentifier
PerAccount
WatchAlertPolicy
vibration:
VIBRATION_PICKER_NONE
_TLVibrationManagerAccessQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-380/Library/Vibrations/TLVibrationManager.m
-[TLVibrationManager dealloc]
*** -[%@ %@] Attempted to mutate the shared vibration manager: %@. Create your own instance of %@ manually if you need to mutate it.
Text-Message-Alert-In-Conversation
UserSelectable
Classic
SOS-Countdown-Tick
SOS-Dial-Start
Vibrations
plist
@"NSDictionary"12@?0@"NSString"4@"NSString"8
Other
VIBRATION_UNKNOWN_NAME
Unexpected exception: %@.
VibrationIdentifier
Vibration
needsRefresh
TB,R,N,V_needsRefresh
allowsAutoRefresh
TB,N,V_allowsAutoRefresh
shouldVibrateForCurrentRingerSwitchState
TB,R,N
shouldVibrateOnRing
shouldVibrateOnSilent
_TLVibrationPreferencesDidChangeNotification
com.apple.springboard.ring-vibrate.changed
com.apple.springboard.silent-vibrate.changed
com.apple.springboard.ringerstate
SBRingerMuted
ring-vibrate
silent-vibrate
playbackBackEnd
Ti,N,V_playbackBackEnd
timeoutTimerSource
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimerSource
beingInterrupted
TB,N,GisBeingInterrupted,V_beingInterrupted
Atoms
Intensity
Looped
VibePattern
OnDuration
OffDuration
It is pretty much impossible to compute the duration of a modern vibration pattern that uses atoms. This is invalid.
_artificiallyRepeatingPropertyListRepresentation
T@,R,N
propertyListRepresentation
contextObject
T@,&,N,V_contextObject
%@.%@
%@.%@.%@
label
T@"NSString",R,N,V_label
%@.%@-%@-%@
AccessQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-380/Library/Playback/BackEnds/SystemSound/TLAlertSystemSoundController.m
-[TLAlertSystemSoundController _assertRunningOnAccessQueue]
Failed to prepare tone sound ID for playback.
true
false
kAudioServicesFlag_SuppressAudio
kAudioServicesFlag_SuppressVibe
%@ | %@
General
Playback
ToneManagement
VibrationManagement
<none>
com.apple.tonelibraryd
TLServiceCommunicationErrorDomain
TLServiceValidationErrorDomain
TLServicePersistenceErrorDomain
%@=%@
v12@?0@"NSSet"4@"NSError"8
HWModelStr
ringtoneStoreAvailable
TB,R,N,GisRingtoneStoreAvailable
alertToneStoreAvailable
TB,R,N,GisAlertToneStoreAvailable
hasVibratorCapability
hasUserGeneratedVibrationsCapability
deviceCodeName
simplifiedDeviceCodeName
SSDeviceAvailableItemKindsChangedNotification
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
SSDevice
SSItemKindRingtone
SSItemKindTone
TLAlertTopicTextMessageInConversation
TLAlertTopicSystemNotificationBluetoothLowEnergy
TLAlertTopicSystemNotificationFindMyDevice
TLAlertTopicAppNotificationRemote
TLAlertTopicActivityGoalAttained
TLAlertTopicActivityGoalBehind
TLAlertTopicPassbookGeofence
TLAlertTopicSOSCountdownTick
TLAlertTopicSOSDialStart
TLAlertTopicAlarmGoToSleep
TLAlertTopicAlarmWakeUp
T@"TLSystemSound",&,N,V_sound
completionHandler
T@?,C,N,V_completionHandler
playbackCompletionType
Ti,N,V_playbackCompletionType
; alert = %@
; isAquired = YES
TLAlertErrorDomain
_TLAlertWatchPrefersSalientToneAndVibrationDidChangeNotification
externalTone:%@-%@
mediaLibrary:%llu-%@
externalVibration:%llu-%@
apple-internal-install
 [%ld]
<%@: %p; type = %@>
; configuration = %@
; toneIdentifier = %@
; vibrationIdentifier = %@
configuration
T@"TLAlertConfiguration",R,N,V_configuration
T@"NSString",R,N,V_toneIdentifier
T@"NSString",R,N,V_vibrationIdentifier
mirror-companion
always-enabled
always-disabled
independent-inferred-from-companion
_TLAlertControllerShouldStopAllAlertsNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-380/Library/Playback/TLAlertController.m
-[TLAlertController _assertRunningOnAccessQueue]
The method +[TLAlert _stopAllAlerts] should not be called from anywere except the %@ process.
Updating the audio volume of %@ is not supported. Please refer to TLAlert_Private.h for more details on the limitations of the audio volume dynamic update API.
Setting up an activation assertion for %@ is not supported.
v8@?0B4
currentItem
currentItem.status
AudioEventQueue
; playingAlert = <%@: %p>
; playingAlert = %@
; alertForAudioEnvironmentSetup = <%@: %p>
; alertForAudioEnvironmentSetup = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-380/Library/Playback/BackEnds/QueuePlayer/TLAlertQueuePlayerController.m
-[TLAlertQueuePlayerController _assertRunningOnAudioEventQueue]
-[TLAlertQueuePlayerController _stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:]
UIApplication
Stopping playing alert: %@
Alarm
playable
Failed to prepare tone asset for playback.
-[TLAlertQueuePlayerController _startPlaybackForAssetWithLoadedProperties:alert:]
Phone
BluetoothLE
LocatePhone
ToneLibrary
Ringtone
-[TLAlertQueuePlayerController _endPreventingAudioSessionDeactivation]
AVSystemController
CMTimeCompare
/System/Library/Frameworks/CoreMedia.framework/CoreMedia
CMTimeMake
CMTimeGetSeconds
CMTimeMakeWithSeconds
kCMTimeZero
alloc
init
initWithITunesRingtonePlistAtPath:
initWithLabel:appendUUIDToLabel:
class
_copySharedResourcesPreferencesDomainForDomain:
initWithDomain:
synchronize
_loadITunesRingtoneInfoPlistAtPath:
_loadAlertToneInfo
_loadToneIdentifierAliasMap
_performBlockInAccessQueue:
performSynchronousBlock:
dealloc
_rootDirectory
stringByAppendingPathComponent:
_iTunesRingtoneDirectory
_copyITunesRingtonesFromManifestPath:mediaDirectoryPath:
_deviceITunesRingtoneInformationPlist
_deviceITunesRingtoneDirectory
addEntriesFromDictionary:
initWithContentsOfFile:
objectForKey:
allKeys
countByEnumeratingWithState:objects:count:
initWithPropertyListRepresentation:filePath:
identifier
setObject:forKey:
defaultCenter
postNotificationName:object:
allValues
UTF8String
defaultManager
_installedTones
filePath
attributesOfItemAtPath:error:
longLongValue
dictionaryWithObjects:forKeys:count:
_addToneEntries:toManifestAtPath:mediaDirectory:shouldSkipReload:
stringByDeletingLastPathComponent
_ensureDirectoryExistsAtPath:
_lockManifestAtPath:
fileURLWithPath:
assetWithURL:
hasProtectedContent
mutableCopy
numberWithBool:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_reloadITunesRingtonesAfterExternalChange
setWithObjects:
_removeTonesFromManifestAtPath:fileNames:shouldSkipReload:alreadyLockedManifest:removedEntries:
removeObjectForKey:
copy
fileSystemRepresentation
bundleForClass:
resourcePath
_systemEmbeddedSoundDirectory
_baseDirectoryForAlertToneSoundFiles
_systemSoundDirectory
_systemWatchSoundDirectory
initWithSoundFileURL:actualSoundID:previewSoundID:
defaultRingtoneIdentifier
isEqualToString:
hasPrefix:
initWithServiceName:
retrieveCurrentTonePreferencesWithCompletionHandler:
setCurrentToneIdentifier:keyedByTopic:forPreferenceKey:completionHandler:
retrieveUserGeneratedVibrationPatternsWithCompletionHandler:
setUserGeneratedVibrationPatterns:withCompletionHandler:
removeAllUserGeneratedVibrationPatternsWithCompletionHandler:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceWithProtocol:
setRemoteObjectInterface:
resume
_newServiceConnection
tl_nonRedundantDescription
remoteObjectProxyWithErrorHandler:
invalidate
currentToneIdentifierForAlertType:topic:
setCurrentToneIdentifier:forAlertType:topic:
length
_systemWideTonePreferenceKeyForAlertType:
stringByAppendingString:
_tonePreferencesFromService
toneWithIdentifierIsValid:
stringWithString:
_currentToneIdentifierForAlertType:topic:
_currentToneWatchAlertPolicyForAlertType:topic:
_defaultToneIdentifierForAlertType:topic:
_setToneIdentifierUsingService:keyedByTopic:forPreferenceKey:
count
_didSetTonePreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:
currentToneIdentifierForAlertType:
nameForToneIdentifier:
currentToneSoundIDForAlertType:topic:
_soundForToneIdentifier:
soundID
currentLocale
caseInsensitiveCompare:
_watchPrefersSalientToneAndVibration
defaultToneIdentifierForAlertType:
filePathForToneIdentifier:
_toneWithIdentifierIsSystemAlertTone:
actualSound
_toneWithIdentifierIsITunesRingtone:
_toneWithIdentifierIsNonDefaultSystemRingtone:
_toneWithIdentifierIsDefaultRingtone:
_toneWithIdentifierIsAlarmWakeUp:
initWithSoundFileURL:soundID:
_filePathForToneIdentifier:isValid:
_fileNameFromToneIdentifier:withPrefix:
_systemRingtoneDirectory
stringByAppendingPathExtension:
_alarmWakeUpRingtoneDirectory
_checkForFileExistenceAtPath:allowingTCCPreflight:
soundFileURL
path
_defaultRingtonePath
previewSound
_nameForToneIdentifier:isValid:
_localizedNameOfToneWithIdentifier:
_defaultRingtoneName
name
lastPathComponent
_toneIdentifierForFileAtPath:isValid:
enumerateKeysAndObjectsUsingBlock:
stringByDeletingPathExtension
_systemNewSoundDirectory
_systemEmbeddedModernSoundDirectory
_toneWithIdentifierIsValid:
arrayWithObjects:count:
addObjectsFromArray:
containsObject:
initWithPath:error:
playbackProperties
setAttribute:forKey:error:
UUID
UUIDString
stringWithFormat:
createFileAtPath:contents:attributes:
_addToneToManifestAtPath:metadata:fileName:mediaDirectory:
_removeToneFromManifestAtPath:fileName:
removeItemAtPath:error:
_evaluateOrphanEntriesCleanupStatusForcingReevaluationIfPreviouslyDone:returningFilePathsForFoundOrphans:wasAffectedByAccidentalToneDeletion:
addObject:
_removeOrphanedPlistEntriesInManifestAtPath:mediaDirectory:
unionSet:
stringByReplacingOccurrencesOfString:withString:
_currentToneWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:
_currentToneWatchAlertPolicyPreferenceKeyForAlertType:topic:
_setCurrentToneWatchAlertPolicy:forAlertType:topic:
boolForKey:
setBool:forKey:
_handleWatchPrefersSalientNotificationDidChange
_watchPrefersSalientNotifications
sharedToneManager
rangeOfString:
substringFromIndex:
pathExtension
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_handleTonePreferencesChangedNotificationForPreferencesKinds:
synchronizeUserDefaultsDomain:keys:
synchronizeNanoDomain:keys:
_iTunesRingtoneInformationPlist
_iTunesToneWithIdentifier:
_installedTonesSize
_aliasForToneIdentifier:
setCurrentToneIdentifier:forAlertType:
currentToneNameForAlertType:
currentToneSoundIDForAlertType:
_previewSoundForToneIdentifier:
_toneIdentifierForFileAtPath:
newAVItemForToneIdentifier:
importTone:metadata:completionBlock:
removeImportedToneWithIdentifier:
_insertPurchasedToneMetadata:fileName:
_transferPurchasedToITunes:
_wasAffectedByAccidentalToneDeletion
_removeOrphanedManifestEntriesReturningFilePathsForFoundOrphans:
_registerDidRequestResetSyncPostAccidentalToneDeletion
_currentToneWatchAlertPolicyForAlertType:
_setCurrentToneWatchAlertPolicy:forAlertType:
_setWatchPrefersSalientNotifications:
_filePathHasSupportedExtensionForRingtone:
_toneIsSettableForAlertType:
_handleDeviceRingtonesChangedNotification
.cxx_destruct
_accessQueue
_iTunesTonesByIdentifier
_iTunesToneIdentifiersByPID
_alertTonesByIdentifier
_toneIdentifierAliasMap
_cachedWatchPrefersSalientNotifications
_hasValidCachedWatchPrefersSalientNotifications
_shouldSkipNextWatchPrefersSalientNotificationsDidChangeNotification
_transientNanoPreferencesDomainAccessor
_shouldUseServiceToAccessTonePreferences
_cachedTonePreferences
_shouldIgnoreNextToneDidChangeNotification
initWithBundleIdentifier:name:
defaultSystemApplication
bundleIdentifier
_bundleIdentifier
_name
_existingPerTopicPreferenceKeyPrefixesWithRegularPreferenceKeys:regularPreferenceKeysCount:
_setValue:forKey:inDomain:usingPreferencesScope:
_enumerateKeysAndValuesWithEligibleKeyPrefixes:inDomain:usingPreferencesScope:withBlock:
substringToIndex:
_synchronizeDomain:usingPreferencesScope:
_copyAllKeysAndValuesFromDomain:usingPreferencesScope:
migratePerTopicPreferencesInDomain:withRegularPreferenceKeys:regularPreferenceKeysCount:intoSinglePerTopicPreferenceWithSuffix:usingPreferencesScope:
tl_errorWithDomain:description:
stringWithUTF8String:
callStackSymbols
isValidVibrationPatternPropertyListRepresentation:
_validateObjectWithError:validationBlock:
_objectIsValidUserGeneratedVibrationPattern:error:
objectIsValidUserGeneratedVibrationPatternsDictionary:error:
userGeneratedVibrationStoreFileURL
isEqualToDictionary:
appendFormat:
appendString:
initWithType:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
decodeObjectOfClasses:forKey:
decodeFloatForKey:
decodeDoubleForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeInt64:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
encodeBool:forKey:
raise:format:
_throwForFrozenInstance
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
_freeze
_performBlockIgnoringFrozenFlag:
setTopic:
setToneIdentifier:
setVibrationIdentifier:
setExternalToneFileURL:
setExternalToneMediaLibraryItemIdentifier:
setExternalVibrationPattern:
setAudioCategory:
setAudioVolume:
setForPreview:
setMaximumDuration:
setShouldRepeat:
setShouldIgnoreRingerSwitch:
_hasCustomAudioVolume
type
topic
toneIdentifier
vibrationIdentifier
externalToneFileURL
externalToneMediaLibraryItemIdentifier
externalVibrationPattern
audioCategory
audioVolume
isForPreview
maximumDuration
shouldRepeat
shouldIgnoreRingerSwitch
_isFrozen
_hasCustomRepeatingFlag
_forPreview
_shouldRepeat
_shouldIgnoreRingerSwitch
_type
_topic
_toneIdentifier
_vibrationIdentifier
_externalToneFileURL
_externalVibrationPattern
_audioCategory
_audioVolume
_externalToneMediaLibraryItemIdentifier
_maximumDuration
boolValue
unsignedIntegerValue
isPurchased
isRingtone
artworkFile
duration
isProtected
isPrivate
_purchased
_ringtone
_protected
_private
_identifier
_filePath
_pid
_artworkFile
_duration
_playbackProperties
_soundID
_shouldDisposeOfSoundID
_soundFileURL
alertWithConfiguration:
playWithCompletionHandler:
configuration
sharedAlertController
stopRepeatedlyPlayingAlert:withOptions:completionHandler:targetQueue:
initWithType:accountIdentifier:
initWithType:toneIdentifier:vibrationIdentifier:
playWithCompletionHandler:targetQueue:
startPlayingRepeatedly
stopPlayingRepeatedlyWithOptions:completionHandler:targetQueue:
_actualSoundID
_previewSoundID
_actualSound
_previewSound
currentToneIdentifierForAlertType:accountIdentifier:
setCurrentToneIdentifier:forAlertType:accountIdentifier:
_currentToneWatchAlertPolicyForAlertType:accountIdentifier:
_setCurrentToneWatchAlertPolicy:forAlertType:accountIdentifier:
_initWithSpecialBehaviors:
_handleVibrationPreferencesDidChangeNotificationForPreferencesKinds:atInitiativeOfVibrationManager:
_handleVibrateOnRingOrSilentDidChangeNotification
_isUnitTestingModeEnabled
refresh
_userGeneratedVibrationPatterns
currentVibrationIdentifierForAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
_systemWideVibrationPatternPreferenceKeyForAlertType:
vibrationWithIdentifierIsValid:
_defaultVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:
_currentVibrationIdentifierForAlertType:topic:
_currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:allowsNoneDefaultToAnyActualVibrationSubstitution:
_currentVibrationWatchAlertPolicyForAlertType:topic:
_currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:
_didSetVibrationPreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:
currentVibrationIdentifierForAlertType:
nameOfVibrationWithIdentifier:
patternForVibrationWithIdentifier:repeating:
_patternForSystemVibrationWithIdentifier:shouldLogAssetPath:
_systemVibrationIdentifiersForSubdirectory:
defaultVibrationIdentifierForAlertType:
noneVibrationPattern
propertyListRepresentation
sharedCapabilitiesManager
deviceCodeName
fileExistsAtPath:isDirectory:
simplifiedDeviceCodeName
_completeSystemVibrationsSubdirectoryForSubdirectory:
pathsForResourcesOfType:inDirectory:
URLForResource:withExtension:subdirectory:
dictionaryWithContentsOfURL:
_localizedNameForVibrationWithIdentifier:
patternForVibrationWithIdentifier:
_nameOfVibrationWithIdentifier:
initWithPropertyListRepresentation:
_artificiallyRepeatingPropertyListRepresentation
allObjects
_retrieveUserGeneratedVibrationPatternsUsingService
_handleUserGeneratedVibrationsDidChangeNotification
_setUserGeneratedVibrationPatternsUsingService:error:
_didChangeUserGeneratedVibrationPatterns
initWithDictionary:
_saveUserGeneratedVibrationPatterns:error:
_removeAllUserGeneratedVibrationPatternsUsingServiceWithError:
_booleanPreferenceForKey:defaultValue:
shouldVibrateOnSilent
shouldVibrateOnRing
_currentVibrationWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:
_currentVibrationWatchAlertPolicyPreferenceKeyForAlertType:topic:
_setCurrentVibrationWatchAlertPolicy:forAlertType:topic:
sharedVibrationManager
setAllowsAutoRefresh:
setCurrentVibrationIdentifier:forAlertType:
currentVibrationNameForAlertType:
currentVibrationPatternForAlertType:
defaultVibrationNameForAlertType:
defaultVibrationPatternForAlertType:
noneVibrationName
allUserSelectableSystemVibrationIdentifiers
allUserGeneratedVibrationIdentifiers
_vibrationIsSettableForAlertType:
addUserGeneratedVibrationPattern:name:error:
setName:forUserGeneratedVibrationWithIdentifier:error:
deleteUserGeneratedVibrationPatternWithIdentifier:error:
_numberOfUserGeneratedVibrations
_removeAllUserGeneratedVibrationsWithError:
shouldVibrateForCurrentRingerSwitchState
_currentVibrationWatchAlertPolicyForAlertType:
_setCurrentVibrationWatchAlertPolicy:forAlertType:
needsRefresh
allowsAutoRefresh
_specialBehaviors
_cachedSystemVibrationIdentifiers
_cachedSystemVibrationCompleteSubdirectories
_cachedUserGeneratedVibrationPatterns
_needsRefresh
_allowsAutoRefresh
playbackBackEnd
setPlaybackBackEnd:
timeoutTimerSource
setTimeoutTimerSource:
isBeingInterrupted
setBeingInterrupted:
_beingInterrupted
_playbackBackEnd
_timeoutTimerSource
floatValue
numberWithFloat:
numberWithInt:
_initWithPropertyListRepresentation:skipValidation:
dictionaryWithDictionary:
_computedDuration
intValue
simpleVibrationPatternWithVibrationDuration:pauseDuration:
complexVibrationPatternWithDurationsForVibrationsAndPauses:
appendVibrationComponentWithDuration:isPause:
contextObject
setContextObject:
_propertyListRepresentation
_complexPatternDescription
_contextObject
objCType
currentThread
threadDictionary
_performSynchronousBlockInSerialQueue:
performAsynchronousBlock:
label
_threadLocalStorageKey
_serialQueue
_label
_prepareForDealloc
_assertRunningOnAccessQueue
_stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:
_playAlert:withCompletionHandler:
_performBlockOnAccessQueue:
_stopRepeatedlyPlayingAlert:withOptions:completionHandler:targetQueue:
_soundForAlert:
_didCompletePlaybackForAlert:completionHandler:playbackCompletionType:error:
_willBeginPlayingAlert:withSoundID:
setSound:
setCompletionHandler:
setPlaybackCompletionType:
initWithKeyOptions:valueOptions:capacity:
_optionsForSystemSoundAlert:
_systemSoundPlaybackDidCompleteForAlert:
sound
playbackCompletionType
_didCompletePlaybackForAlert:withCompletionType:error:
hasVibratorCapability
_soundBehaviorForAlert:
numberWithUnsignedLong:
_vibrationPatternForAlert:
_componentSuppressionFlagsForAlert:
_descriptionForAlertComponentsSuppressionFlags:
completionHandler
playAlert:withCompletionHandler:
stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:
handleActivationAssertionStatusChangeForAlert:updatedStatus:
updateAudioVolumeDynamicallyForAlert:toValue:
_accessQueueLabel
_alertSystemSoundContexts
currentVibrationIdentifierForAlertType:accountIdentifier:
setCurrentVibrationIdentifier:forAlertType:accountIdentifier:
_currentVibrationWatchAlertPolicyForAlertType:accountIdentifier:
_setCurrentVibrationWatchAlertPolicy:forAlertType:accountIdentifier:
initWithFormat:arguments:
errorWithDomain:code:userInfo:
userInfo
_handleStoreAvailableItemKindsChangedNotification:
addObserver:selector:name:object:
_checkRingtoneStoreAvailability
removeObserver:name:object:
_hasTelephonyCapability
currentDevice
getAvailableItemKindsWithBlock:
hasSuffix:
isRingtoneStoreAvailable
isAlertToneStoreAvailable
hasUserGeneratedVibrationsCapability
_isRingtoneStoreAvailable
_isAlertToneStoreAvailable
_deviceCodeNameSimplicationMapping
_sound
_completionHandler
_playbackCompletionType
_relinquish
initWithFormat:
_acquire
initWithAlert:
acquire
relinquish
_alert
_activeAcquisitionCount
_initWithConfiguration:toneIdentifier:vibrationIdentifier:
stopWithOptions:
stopAllAlerts
performBlockOnAudioEventQueue:
_descriptionForDebugging:
playToneAndVibrationForType:
_setWatchPrefersSalientToneAndVibration:
_stopAllAlerts
_queueAudioEventBlockIfNecessary:
stop
_updateAudioVolumeDynamicallyToValue:
_instanceIndex
_configuration
mainBundle
_stopAllAlertsInCurrentProcess
_prepareForPlayingAlert:
_didCompletePlaybackOfAlert:
_queuePlayerController
_playbackBackEndForAlert:
_controllerForPlaybackBackEnd:
_didReachTimeoutForAlert:
numberWithInteger:
integerValue
_systemSoundController
_shouldStopAlertForUserInterruption:
_alertContexts
_destroyQueuePlayer
_updateAudioVolumeDynamicallyForAlert:toValue:
_handleActivationAssertionStatusChangeForAlert:updatedStatus:
_assertRunningOnAudioEventQueue
_beginPreventingAudioSessionDeactivation
_stopPlayback
_didCompletePlaybackWithCompletionType:error:
_reloadPlaybackForPlayingAlertWithToneIdentifier:
_endPreventingAudioSessionDeactivation
sharedApplication
endBackgroundTask:
beginBackgroundTaskWithName:expirationHandler:
_stopPlaybackWithOptions:playerWasAlreadyPausedExternally:
_audioCategoryForAlert:
sharedAVSystemController
getVolume:forCategory:
setVolumeTo:forCategory:
_restoreAudioEnvironment
_prepareAudioEnvironment
_propertyKeysOfInterestForToneAssets
statusOfValueForKey:error:
status
_createQueuePlayerIfNecessary
_startPlaybackForAssetWithLoadedProperties:alert:
loadValuesAsynchronouslyForKeys:completionHandler:
_fallbackToneIdentifierForPlayingAlert
_canPlayToneAsset:
_stopObservingQueuePlayer
removeAllItems
_willBeginPlayingAlert
_shouldVibrateForAlert:
playerItemWithAsset:
insertItem:afterItem:
_startObservingQueuePlayer
vibrationPattern
setVibrationPattern:
play
setRate:withVolumeRampDuration:
pause
_didEndPlayingAlert
sharedInstance
category
categoryOptions
setCategory:withOptions:error:
_audioVolumeForAlert:audioCategory:
_activateAudioSessionIfNeeded
_deactivateAudioSessionIfNeeded
_clientNameForAlert:
_clientPriorityForAlert:
_clientName
_clientPriority
initWithDispatchQueue:
setAllowsExternalPlayback:
_setClientPriority:
_setClientName:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
_queuePlayer:currentItemWasUpdatedFromValue:
_queuePlayer:currentItemStatusWasUpdatedToValue:
observeValueForKeyPath:ofObject:change:context:
seekToTime:
items
currentItem
error
code
_shouldHandleAudioSessionActivationForAlert:
setActive:error:
_startObservingAudioSessionInterruptionNotifications
_stopObservingAudioSessionInterruptionNotifications
setActive:withOptions:error:
_handleAudioSessionInterruptionNotification:
_handleAudioSessionInterruptionOfType:withOptions:
_shouldBypassRingerSwitchPolicyForAlert:
_audioEventQueue
_audioEventQueueLabel
_isObservingQueuePlayer
_queuePlayer
_playingAlert
_playingToneIdentifier
_playingAlertCompletionHandler
_isAudioEnvironmentSetup
_isAlertActivationAssertionAcquired
_alertForAudioEnvironmentSetup
_previousAudioCategory
_previousAudioCategoryOptions
_isAudioSessionActive
_audioSessionDeactivationPreventionRequestsCount
_isObservingAudioSessionInterruptionNotification
localizedStringForKey:value:table:
%{public}@: Could not update ringtones plist
Unable to create file lock.
Unable to take file lock.
Unexpected error while retrieving current tone preferences: %{public}@.
Failed retrieving current tone preferences: %{public}@.
Unexpected error trying to set a tone preference: %{public}@.
Failed setting a tone preference: %{public}@.
currentToneIdentifierForAlertType:%{public}@ topic:@"%{public}@" ==> %{public}@
currentToneIdentifierForAlertType:%{public}@ ==> %{public}@
setCurrentToneIdentifier:@"%{public}@" forAlertType:%{public}@ topic:@"%{public}@"
setCurrentToneIdentifier:@"%{public}@" forAlertType:%{public}@
_soundForToneIdentifier %{public}@ ==> %{public}@
filePathForToneIdentifier: %{public}@ ==> %{public}@
toneWithIdentifierIsValid %{public}@ ==> %{public}@
Failed to update watch alert policy for alert type %{public}@ because it is not settable.
Failed to create directory at path: %{public}@. %{public}@.
*** Assertion failure in %{private}s, %{private}@:%{private}lu.
%{private}@
*** Assertion failure.
Pointers of validation block can't be NULL.
%{public}@: -dealloc. AudioServicesDisposeSystemSoundID for soundID = %{public}lu returned %{public}ld.
%{public}@: -soundID. AudioServicesCreateSystemSoundIDWithOptions for URL %{public}@ produced soundID = %{public}lu and returned %{public}ld.
The minimum value of TLAlertType is expected to be TLAlertTypeNone, i.e. 0. Instead, it was: %{public}ld
The maximum value of TLAlertType is expected to be %{public}ld; instead, it was %{public}ld. You probably forgot to update the definition of _TLAlertTypeMaximumAllowedValue in TLAlertType_Internal.h.
TLAlertType values are expected to be subsequent integer values.
Found no living vibration managers while deallocating %{public}p.
Looking up system vibrations for subdirectory %{public}@ at absolute path: %{public}@.
Using "none" vibration pattern for vibration identifier "%{public}@"
Vibration pattern for identifier "%{public}@" found at path: %{public}@.
Unexpected error while retrieving user generated vibration patterns: %{public}@.
Failed retrieving user generated vibration patterns: %{public}@.
Unexpected error while setting user generated vibration patterns: %{public}@.
Failed setting user generated vibration patterns with error: %{public}@.
Unexpected error while removing user generated vibration patterns: %{public}@.
Failed removing user generated vibration patterns with error: %{public}@.
Expected to be running in access queue.
%{public}@: _playAlert:(%{public}@). Sound: %{public}@.
%{public}@: _playAlert:(%{public}@). Calling AudioServicesPlaySystemSoundWithOptions for soundID: %{public}lu.
%{public}@: _playAlert:(%{public}@). Running completion block for AudioServicesPlaySystemSoundWithOptions for soundID: %{public}lu.
%{public}@: _stopPlayingAlerts:. playbackCompletionType: %{public}@. Calling AudioServicesStopSystemSound for soundID: %{public}lu with inStopNow = true for alert %{public}@.
%{public}@: _stopRepeatedlyPlayingAlert:(%{public}@). Calling AudioServicesStopSystemSound for soundID: %{public}lu with inStopNow = %{public}@.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionBehaviorKey => %{public}lu.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionVibrationPatternKey => non-nil.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionLoopKey => true.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionFlagsKey => %{public}@.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionIgnoreRingerSwitchKey => true.
%{public}@: -acquire.
%{public}@: -relinquish.
%{public}@: was acquired.
%{public}@: was relinquished.
Nothing to be played for alert configuration: %{public}@. Returning a nil alert.
%{public}@: -_playAlert:(%{public}@).
API misuse.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@).
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). Ended background task with name: "%{public}@"; identifier: %{public}lu.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). Began background task with name: "%{public}@"; identifier: %{public}lu.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). %{public}@ is playing. Interrupting it.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). %{public}@ is NOT playing. Skipping it.
%{public}@: -_updateAudioVolumeDynamicallyForAlert. Adjusted volume on %{public}@ for celestial audio category %{public}@ to %{public}f for %{public}@; did succeed: %{public}@.
%{public}@: -_updateAudioVolumeDynamicallyForAlert. Existing volume on %{public}@ for celestial audio category %{public}@ matches requested volume %{public}f for %{public}@.
%{public}@: -_updateAudioVolumeDynamicallyForAlert. This is unsupported for alerts that do not use the alarm audio category: %{public}@. Please file a radar if you need this functionality.
%{public}@: -_handleActivationAssertionStatusChangeForAlert:(%{public}@) updatedStatus:(%{public}@).
%{public}@: -_canPlayToneAsset:(%{public}@). Can't play tone asset because property %{public}@ is not loaded.
%{public}@: -_canPlayToneAsset:(%{public}@). Can't play tone asset because its duration is too short.
%{public}@: -_canPlayToneAsset:(%{public}@). Can play!
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). [_queuePlayer status] == AVPlayerStatusFailed for %{public}@. Destroying player.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). [toneAsset loadValuesAsynchronouslyForKeys:...] for %{public}@.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier: did finish loading values asynchronously for %{public}@.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). Failed to instantiate an AVURLAsset with URL: %{public}@.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). Failed to prepare tone asset for playback. Aborting.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). [_queuePlayer removeAllItems] on %{public}@ before initiating playback.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). inserting %{public}lu player items into %{public}@ for tone asset: %{public}@.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). (iteration #%{public}lu) failed to create AVPlayerItem for tone asset: %{public}@.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). Failed to wrap external vibration pattern as an instance of TLVibrationPattern. Falling back to passing the external vibration pattern through.
Vibration pattern on the _queuePlayer was expected to be nil at this point.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). Leaving [_queuePlayer vibrationPattern] as nil on player %{public}@ because the vibration identifier is %{public}@.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). [_queuePlayer setVibrationPattern:vibrationPattern] on player %{public}@ with a non-nil pattern.
%{public}@: -_startPlaybackForAssetWithLoadedProperties:(%{public}@). [_queuePlayer play] on %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer setRate:withVolumeRampDuration:] with fadeOutDuration %{public}f for %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer pause] for %{public}@.
%{public}@: -_stopPlaybackWithOptions. playerWasAlreadyPausedExternally = YES for %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer removeAllItems] for %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer setVibrationPattern:nil] for %{public}@.
%{public}@: -_willBeginPlayingAlert.
%{public}@: -_willBeginPlayingAlert. Alert activation assertion acquired for %{public}@. Skipping audio environment preparation steps for %{public}@.
%{public}@: -_didEndPlayingAlert.
%{public}@: -_didEndPlayingAlert. Alert activation assertion acquired for %{public}@. Skipping audio environment restoration steps for %{public}@.
%{public}@: -_prepareAudioEnvironment. _alertForAudioEnvironmentSetup = %{public}@
%{public}@: -_prepareAudioEnvironment. Successfully set audio category to %{public}@ for %{public}@.
%{public}@: -_prepareAudioEnvironment. Failed setting audio category to %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_prepareAudioEnvironment. Failed reverting audio category back to %{public}@ with options 0x%{public}x with error: %{public}@.
%{public}@: -_prepareAudioEnvironment. Successfully reverted audio category back to %{public}@ with options 0x%{public}x.
%{public}@: -_prepareAudioEnvironment. Adjusted volume on %{public}@ for celestial audio category %{public}@ to %{public}f for %{public}@; did succeed: %{public}@.
%{public}@: -_prepareAudioEnvironment. Existing volume on %{public}@ for celestial audio category %{public}@ matches requested volume %{public}f for %{public}@.
%{public}@: -_restoreAudioEnvironment.
%{public}@: -_restoreAudioEnvironment. Successfully reverted audio category back to %{public}@ with options 0x%{public}x.
%{public}@: -_restoreAudioEnvironment. Failed reverting audio category back to %{public}@ with options 0x%{public}x with error: %{public}@.
%{public}@: -_createQueuePlayerIfNecessary. clientName = %{public}@. clientPriority = %{public}ld.
%{public}@: -_createQueuePlayerIfNecessary. Client name or priority don't match those of %{public}@. Destroying it.
%{public}@: -_createQueuePlayerIfNecessary. Created queue player: %{public}@.
%{public}@: -_destroyQueuePlayer. Tossing queue player: %{public}@.
%{public}@: -_startObservingQueuePlayer: %{public}@.
%{public}@: -_stopObservingQueuePlayer: %{public}@.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. [removedItem seekToTime:kCMTimeZero].
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. The queue was exhausted prematurely; this can happen if the ringtone asset contains corrupted audio data. Start over with default tone.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. Playback of non repeating tone completed by playing to end.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. Re-inserting that same item again.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. [_queuePlayer status] == AVPlayerStatusFailed.
%{public}@: currentItemStatusWasUpdatedToValue:(%{public}ld) for %{public}@. itemStatus == AVPlayerItemStatusFailed. currentItemErrorCode: %{public}ld.
%{public}@: currentItemStatusWasUpdatedToValue:(%{public}ld) for %{public}@. Tone could not be prepared for playback. Start over with fallback tone.
%{public}@: -_audioVolumeForAlert:. Did retrieve ringer volume successfully for fallback volume value for alert %{public}@: %{public}f.
%{public}@: -_audioVolumeForAlert:. Failed to retrieve ringer volume for fallback volume value for alert %{public}@. Using default value instead: %{public}f.
%{public}@: -_activateAudioSessionIfNeeded. Successfully activated audio session for %{public}@.
%{public}@: -_activateAudioSessionIfNeeded. Failed activating audio session for %{public}@ with error: %{public}@.
%{public}@: -_deactivateAudioSessionIfNeeded. Skipping audio session deactivation because it is currently being prevented.
%{public}@: -_deactivateAudioSessionIfNeeded. About to deactivate audio session for %{public}@.
%{public}@: -_deactivateAudioSessionIfNeeded. Successfully deactivated audio session for %{public}@.
%{public}@: -_deactivateAudioSessionIfNeeded. Failed to deactivate audio session for %{public}@ with error: %{public}@.
%{public}@: -_startObservingAudioSessionInterruptionNotifications. Started observing interruptions for %{public}@.
%{public}@: -_stopObservingAudioSessionInterruptionNotifications. Stopped observing interruptions for %{public}@.
%{public}@: -_handleAudioSessionInterruption. Handling interruption of type: AVAudioSessionInterruptionTypeBegan. Resetting state and marking %{public}@ as interrupted by the system.
%{public}@: -_beginPreventingAudioSessionDeactivation.
Unbalanced calls to -_beginPreventingAudioSessionDeactivation and -_endPreventingAudioSessionDeactivation.
%{public}@: -_endPreventingAudioSessionDeactivation.
%{public}@: -_endPreventingAudioSessionDeactivation. No alert was playing, calling -_deactivateAudioSessionIfNeeded.
%{public}@: Failed to prepare default tone for alert type %{public}@ for playback. All possible fallback cases have been exhausted. Bailing.
v12@0:4@?8
v12@0:4@?<v@?@"NSDictionary"@"NSError">8
v24@0:4@8@12@16@?20
v24@0:4@"NSString"8@"NSString"12@"NSString"16@?<v@?B@"NSError">20
v16@0:4@8@?12
v16@0:4@"NSDictionary"8@?<v@?B@"NSError">12
v12@0:4@?<v@?B@"NSError">8
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
@12@0:4i8
@16@0:4i8@12
^{__CFString=}12@0:4^{__CFString=}8
B16@0:4@8B12
@12@0:4@8
v8@0:4
v12@0:4@8
@16@0:4@8@12
Q8@0:4
B24@0:4@8@12@16@20
B24@0:4@8@12@16B20
B16@0:4@8@12
B28@0:4@8@12B16B20^@24
i12@0:4@8
B20@0:4@8@12@16
v16@0:4@8i12
v20@0:4@8i12@16
L12@0:4i8
L16@0:4i8@12
@16@0:4@8^B12
v20@0:4@8@12@?16
i20@0:4B8^@12^B16
i12@0:4^@8
i12@0:4i8
i16@0:4i8@12
i20@0:4i8@12^B16
v16@0:4i8i12
v20@0:4i8i12@16
v12@0:4B8
B12@0:4i8
v20@0:4@8@12I16
v12@0:4I8
@"TLAccessQueue"
@"NSMutableDictionary"
@"NSDictionary"
@"NPSDomainAccessor"
@"NSString"
v28@0:4^{__CFString=}8r^@12L16@20i24
@16@0:4r^@8L12
v24@0:4@8^{__CFString=}12i16@?20
^{__CFDictionary=}16@0:4^{__CFString=}8i12
v24@0:4^v8^{__CFString=}12^{__CFString=}16i20
v16@0:4^{__CFString=}8i12
B16@0:4^@8@?12
B16@0:4@8^@12
@12@0:4^{_NSZone=}8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
v16@0:4Q8
v12@0:4f8
v16@0:4d8
i8@0:4
f8@0:4
d8@0:4
@"NSURL"
@"NSNumber"
@16@0:4@8L12
L8@0:4
@20@0:4i8@12@16
B16@0:4@?8@12
v20@0:4I8@?12@16
@20@0:4@8L12L16
@"TLSystemSound"
v16@0:4I8@12
@12@0:4I8
@24@0:4i8@12@16B20
@16@0:4@8B12
@20@0:4@8@12^@16
B20@0:4@8@12^@16
B12@0:4^@8
B16@0:4^{__CFString=}8B12
v12@0:4i8
@"NSObject<OS_dispatch_source>"
@24@0:4d8d16
@16@0:4d8
v20@0:4d8B16
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
L12@0:4@8
@12@0:4L8
v16@0:4@"TLAlert"8@?<v@?i@"NSError">12
v28@0:4@8{?=d}12i20@?24
v28@0:4@"NSArray"8{?=d}12i20@?<v@?B>24
v16@0:4@8B12
v16@0:4@"TLAlert"8B12
v16@0:4@8f12
v16@0:4@"TLAlert"8f12
v24@0:4@8I12@?16@20
v16@0:4@8L12
v24@0:4@8@?12i16@20
@"NSMapTable"
@?8@0:4
@"TLAlert"
@20@0:4@8@12@16
v16@0:4{?=d}8
@12@0:4B8
@"TLAlertConfiguration"
@"TLAlertQueuePlayerController"
@"TLAlertSystemSoundController"
v16@0:4@8@12
v20@0:4{?=d}8B16
v24@0:4@8@12@16^v20
f16@0:4@8@12
v16@0:4I8I12
v16@0:4i8@12
@"AVQueuePlayer"
TLServiceAgentInterface
NSObject
TLToneManager
TLSystemApplication
TLPreferencesUtilities
TLVibrationPersistenceUtilities
TLAlertConfiguration
NSCopying
NSSecureCoding
NSCoding
TLITunesTone
TLSystemSound
Deprecated
TLAlertTone
Deprecated_Private
TLVibrationManager
TLAlertContext
TLAlertActivationController
TLVibrationPattern
TLAccessQueue
TLAlertSystemSoundController
TLAlertPlaybackBackEndController
TLExtensions
TLCapabilitiesManager
TLAlertSystemSoundContext
TLAlertActivationAssertion
TLAlert
TLAlertController
TLAlertQueuePlayerController
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
