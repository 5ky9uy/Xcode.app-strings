setValue:forKey:
CAMLParserStartElement:
respondsToSelector:
CAMLParserEndElement:
CAMLParserEndElement:content:
CAMLParser:setValue:forKey:
instancesRespondToSelector:
alloc
initWithBytes:length:encoding:
release
CAMLTypeForKey:
UTF8String
class
valueWithPoint:
valueWithSize:
valueWithRect:
init
setTransformStruct:
valueWithCATransform3D:
valueWithCAPoint3D:
valueWithCAColorMatrix:
numberWithInt:
numberWithDouble:
defaultValueForKey:
didChangeValueForKey:
rangeOfString:
substringToIndex:
isEqualToString:
reloadValueForKeyPath:
implicitAnimationForKeyPath:
_copyRenderLayer:layerFlags:commitFlags:
birthRate
lifetime
emitterDuration
emitterPosition
emitterZPosition
emitterSize
emitterDepth
velocity
scale
spin
spinBias
cullRect
cullMinZ
cullMaxZ
emitterCells
emitterBehaviors
emitterPath
emitterRects
count
countByEnumeratingWithState:objects:count:
rectValue
emitterShape
emitterMode
renderMode
preservesDepth
seed
updateInterval
_colorSpaceDidChange
_renderLayerDefinesProperty:
_renderLayerPropertyAnimationFlags:
CA_automaticallyNotifiesObservers:
_hasRenderLayerSubclass
setEmitterCells:
setBirthRate:
setLifetime:
setEmitterShape:
setEmitterMode:
setEmitterPosition:
setEmitterZPosition:
setEmitterSize:
setEmitterDepth:
setVelocity:
setScale:
setSpin:
setRenderMode:
setPreservesDepth:
setSeed:
setEmitterPath:
setEmitterRects:
setEmitterBehaviors:
setEmitterDuration:
setUpdateInterval:
setSpinBias:
setCullRect:
setCullMinZ:
setCullMaxZ:
valueWithBytes:objCType:
getValue:
CATransform3DValue
addObject:
animationForKey:
CAStateControllerTransition
removeAnimationForKey:
removeAnimationFromLayer:forKey:
layer
_removeTransition:layer:
delegate
retain
stateController:transitionDidStop:completed:
invalidate
dealloc
animationDidStart:
animationDidStop:finished:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
autorelease
retainCount
zone
hash
superclass
description
debugDescription
addAnimation:
transition
beginTime
duration
speed
_controller
_layer
_transition
_beginTime
_duration
_speed
_masterKey
_animations
willChangeValueForKey:
raise:format:
array
_display
_mode
name
deviceName
stringWithFormat:
displays
mainDisplay
TVOutDisplay
automaticallyNotifiesObserversForKey:
_initWithDisplay:
_invalidate
update
displayId
connectionSeed
uniqueId
availableModes
currentMode
setCurrentMode:
preferredMode
colorMode
setColorMode:
bounds
frame
safeBounds
processId
isSupported
isExternal
refreshRate
heartbeatRate
minimumFrameDuration
isOverscanned
overscanAmount
overscanAmounts
overscanAdjustment
setOverscanAdjustment:
isCloned
isCloningSupported
supportsExtendedColors
allowsVirtualModes
setAllowsVirtualModes:
_impl
_allowsVirtualModes
displayLinkWithDisplay:target:selector:
getCFRunLoop
displayLinkWithTarget:selector:
_initWithDisplayLinkItem:
addToRunLoop:forMode:
removeFromRunLoop:forMode:
timestamp
setPaused:
isPaused
setFrameInterval:
frameInterval
targetTimestamp
setPreferredFramesPerSecond:
preferredFramesPerSecond
actualFramesPerSecond
display
setUserInfo:
maximumRefreshRate
userInfo
_initWithMode:display:
width
height
_displayModeWithMode:display:
_setWidth:height:
pixelAspectRatio
isVirtual
.cxx_construct
_dpy
_width
_height
copy
boolValue
charValue
unsignedCharValue
shortValue
unsignedShortValue
intValue
unsignedIntValue
longValue
unsignedLongValue
longLongValue
unsignedLongLongValue
floatValue
doubleValue
transformStruct
copyWithZone:
encodeWithCoder:
initWithCoder:
initWithObject:
decodedObject
initWithCapacity:
objectAtIndex:
encodeObject:forKey:
decodeObjectForKey:
_array
keyEnumerator
nextObject
objectForKey:
setObject:forKey:
_dict
objCType
pointValue
sizeValue
CAPoint3DValue
CAColorMatrixValue
encodeInt:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
decodeIntForKey:
decodeFloatForKey:
containsValueForKey:
decodeDoubleForKey:
_kind
CA_encodeObject:forKey:conditional:
CA_decodeObjectForKey:
_color
archiver:dataForImage:
archiver:formatForImage:
unarchiver:didReadData:forImage:
_image
CA_encodeCGFloatArray:count:forKey:
CA_decodeCGFloatArray:count:forKey:
_pattern
initWithCGPathElement:
addToCGPath:
_type
_points
_path
archiver:willEncodeObject:
archiver:didEncodeObject:
archiver:willReplaceObject:withObject:
archiverWillFinish:
archiverDidFinish:
image_format
image_encode_options
bundleForClass:
objectForKeyedSubscript:
objectAtIndexedSubscript:
setObject:forKeyedSubscript:
fileURLWithPath:
URLWithString:relativeToURL:
URLWithString:
CAMLWriter:typeForObject:
CAMLWriter:IDForObject:
CAMLWriter:URLForResource:
initWithResourceDir:
setImage_format:
setImage_encode_options:
_resource_dir
_serial
_image_format
_image_encode_options
encodeConditionalObject:forKey:
unarchiver:didDecodeObject:
initWithString:
scanFloat:
defaultManager
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:
dictionaryWithCapacity:
dataWithPropertyList:format:options:error:
initForWritingWithMutableData:
lock
setDelegate:
contentsAreFlipped
numberWithBool:
initWithObjectsAndKeys:
finishEncoding
unlock
initWithUTF8String:
isSubclassOfClass:
writerWithData:
encodeObject:
_initWithReference:
addElement:
willAddLayer:
addTransition:
next
state
setState:
elements
setElements:
transitions
setTransitions:
_next
_state
_elements
_transitions
parseContentsOfURL:
error
result
parseBytes:length:
bytes
length
initWithContentsOfURL:
parseData:
stringWithUTF8String:
initWithFormat:arguments:
parser
setBaseURL:
baseURL
parseString:
objectById:
elementValue
setElementValue:
attributeForKey:remove:
willLoadResourceFromURL:
didLoadResource:fromURL:
didFailToLoadResourceFromURL:
parserError:
parserWarning:
_data
initWithType:
filterWithType:
isEnabled
setName:
setEnabled:
setCachesInputImage:
cachesInputImage
type
allocWithZone:
encodeBool:forKey:
decodeBoolForKey:
setElementAttribute:forKey:
filterTypes
filterWithName:
mutableCopyWithZone:
initWithName:
enabled
valueForKey:
setDefaults
CA_copyRenderValue
encodeWithCAMLWriter:
_name
_flags
_attr
_cache
beginPropertyElement:
endElement
mutableCopy
removeObjectIdenticalTo:
foreachLayer:
removeElement:
basedOn
setBasedOn:
nextDelay
setNextDelay:
previousDelay
setPreviousDelay:
isLocked
setLocked:
isInitial
setInitial:
_basedOn
_nextDelay
_previousDelay
_enabled
_locked
_initial
initWithVertexCount:vertices:faceCount:faces:depthNormalization:
_init
_initWithMeshTransform:
dataUsingEncoding:
depthNormalization
_constructWithData:
initWithString:relativeToURL:
URLStringForResource:
initWithFormat:
initWithData:encoding:
setElementContent:
meshTransformWithVertexCount:vertices:faceCount:faces:depthNormalization:
vertexCount
vertexAtIndex:
faceCount
faceAtIndex:
subdivisionSteps
_subdivideToDepth:
CA_interpolateValue:byFraction:
CA_interpolateValues:::interpolator:
CA_distanceToValue:
meshTransformForLayer:
_normalization
_subdivisionSteps
replaceVertexAtIndex:withVertex:
replaceFaceAtIndex:withFace:
meshTransform
setDepthNormalization:
setSubdivisionSteps:
addVertex:
removeVertexAtIndex:
addFace:
removeFaceAtIndex:
_interp
_initWithName:
functionWithName:
inputCount
outputCount
apply:result:
apply:result:parameterFunction:context:
_string
appendString:
initWithControlPoints::::
_getPoints:
functionWithControlPoints::::
getControlPointAtIndex:values:
_priv
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
characterAtIndex:
_solveForInput:
CAMLType
classForCoder
_index
target
setKey:
setAnimation:
setTarget:
setSource:
keyPath
matches:
apply:
_key
CA_prepareRenderValue
getObjects:andKeys:
CA_copyRenderKeyValueArray
initWithInt:
shouldDrawOnMainThread
setNeedsDisplayInRect:
setContentsChanged
setNeedsDisplay
shouldArchiveValueForKey:
contents
setContents:
isDrawingEnabled
_dealloc
levelsOfDetail
levelsOfDetailBias
contentsScale
tileSize
isOpaque
canDrawConcurrently
fadeDuration
prefetchedTiles
fillColor
maximumTileScale
invalidateContents
_canDisplayConcurrently
setLevelsOfDetail:
setLevelsOfDetailBias:
setTileSize:
setNeedsDisplayInRect:levelOfDetail:options:
tiledLayer:canDrawRect:levelOfDetail:
begin
numberWithUnsignedInt:
commit
setNeedsDisplayInRect:levelOfDetail:
canDrawRect:levelOfDetail:
displayInRect:levelOfDetail:options:
setFillColor:
setMaximumTileScale:
setDrawingEnabled:
drawInContext:
initWithFloat:
initWithCharacters:length:
initWithLayer:
isWrapped
setSizeRequisition:
superlayer
setNeedsLayout
font
fontSize
foregroundColor
string
_createStringDict
truncationString
_retainTypesetter
_applyLinesToFunction:info:truncated:
alignmentMode
truncationMode
_createTruncationToken
saveGraphicsState
graphicsContextWithGraphicsPort:flipped:
setCurrentContext:
size
_applyLinesToFunction:info:
restoreGraphicsState
allowsFontSubpixelQuantization
needsDisplayForKey:
_preferredSize
isTruncated
_drawLine:inContext:atPoint:
_prepareContext:
setString:
setFontSize:
setFont:
setForegroundColor:
setWrapped:
setTruncationMode:
setAlignmentMode:
setAllowsFontSubpixelQuantization:
wrapped
setTruncationString:
sharedApplication
userInterfaceLayoutDirection
insertState:atIndex:
states
insertObject:atIndex:
setStates:
indexOfObjectIdenticalTo:
removeObjectAtIndex:
stateTransitions
fromState
toState
addState:
removeState:
stateWithName:
dependentStatesOfState:
stateTransitionFrom:to:
scrollMode
setBounds:
convertPoint:fromLayer:
scrollToPoint:
convertRect:fromLayer:
scrollToRect:
convertRect:toLayer:
_scrollPoint:fromLayer:
_scrollRect:fromLayer:
_visibleRectOfLayer:
setScrollMode:
scrollPoint:
scrollRectToVisible:
visibleRect
animation
setFromState:
setToState:
_fromState
_toState
repeatDuration
autoreverses
repeatCount
timeOffset
fillMode
particleType
lifetimeRange
emissionLatitude
emissionLongitude
emissionRange
velocityRange
xAcceleration
yAcceleration
zAcceleration
mass
massRange
scaleRange
scaleSpeed
orientationLatitude
orientationLongitude
orientationRange
rotation
rotationRange
spinRange
color
redRange
greenRange
blueRange
alphaRange
redSpeed
greenSpeed
blueSpeed
alphaSpeed
minificationFilterBias
contentsFrameCount
contentsFramesPerRow
contentsFramesPerSecond
contentsFrameMode
contentsRect
magnificationFilter
minificationFilter
appendFormat:
emitterCell
setBeginTime:
setDuration:
setSpeed:
setTimeOffset:
setRepeatCount:
setRepeatDuration:
setAutoreverses:
setFillMode:
valueForUndefinedKey:
setValue:forUndefinedKey:
valueForKeyPath:
setValue:forKeyPath:
style
setStyle:
setLifetimeRange:
setEmissionLatitude:
setEmissionLongitude:
setEmissionRange:
setVelocityRange:
setXAcceleration:
setYAcceleration:
setZAcceleration:
setScaleRange:
setScaleSpeed:
setOrientationLatitude:
setOrientationLongitude:
setOrientationRange:
setRotation:
setRotationRange:
setSpinRange:
setColor:
setRedRange:
setRedSpeed:
setGreenRange:
setGreenSpeed:
setBlueRange:
setBlueSpeed:
setAlphaRange:
setAlphaSpeed:
setContentsRect:
setContentsScale:
setMagnificationFilter:
setMinificationFilter:
setMinificationFilterBias:
setParticleType:
setMass:
setMassRange:
setContentsFrameMode:
setContentsFrameCount:
setContentsFramesPerRow:
setContentsFramesPerSecond:
properties
lightWithType:
setSpecularIntensity:
specularIntensity
setPosition:
position
behaviorDidStop:
behavior
CA_setterForProperty:
CA_getterForProperty:
resolveInstanceMethod:
retainWeakReference
allowsWeakReference
_setCARenderBehavior:
_refcount
_uid
springs
forceFields
timeStep
minimumTimeStep
stoppedVelocity
stoppedAngularVelocity
collisionInterval
springScale
drag
angularDrag
reactsToCollisions
setSprings:
setForceFields:
setTimeStep:
setMinimumTimeStep:
setStoppedVelocity:
setStoppedAngularVelocity:
setCollisionInterval:
setSpringScale:
setDrag:
setAngularDrag:
setReactsToCollisions:
springDidStop:
addAnimation:forKey:
_animation
presentsWithTransaction
lowLatency
isMainThread
flush
_didCommitLayer:
drawableProperties
setDrawableProperties:
nativeWindow
layerDidBecomeVisible:
_defersDidBecomeVisiblePostCommit
setPresentsWithTransaction:
_win
isDrawableAvailable
discardContents
setAsynchronous:
isAsynchronous
setLowLatency:
setInputTime:
inputTime
initWithLayer:key:
CAMLParser:formatWarningString:arguments:lineNumber:
CAMLParser:formatErrorString:arguments:lineNumber:
CAMLParser:didFailToFindClassWithName:
initWithContentsOfURL:encoding:error:
CAMLParser:evaluateScriptElement:sourceURL:lineNumber:
absoluteString
CAMLParser:evaluateScriptValue:sourceURL:lineNumber:
CAMLParser:resourceForURL:
CAMLParser:didLoadResource:fromURL:
CAMLParser:didFailToLoadResourceFromURL:
removeTransition:
currentState
setCurrentState:
undoStack
_currentState
_undoStack
_nextTimer
_nextState
_nextSpeed
setKeyPath:
setObject:
setBeforeObject:
object
beforeObject
_keyPath
_object
_beforeObject
_target
setContentsFormat:
drawInLinearMaskContext:
drawLayer:inLinearMaskContext:
_retainColorSpace
initWithDouble:
initWithUnsignedInt:
mainBundle
infoDictionary
anchorPoint
transform
sublayerTransform
anchorPointZ
zPosition
needsLayoutOnGeometryChange
_renderImageCopyFlags
actionForKey:
runActionForKey:object:arguments:
needsDisplayOnBoundsChange
substringFromIndex:
setTransform:
affineTransform
ancestorSharedWithLayer:
ignoresHitTesting
allowsHitTesting
isDoubleSided
masksToBounds
containsPoint:
mask
hitTest:
sublayers
sortsSublayers
initWithLayers:count:retain:
actionForLayer:forKey:
defaultActionForKey:
_implicitAnimationForLayer:keyPath:
modelLayer
setDefaultDuration:
setTimingFunction:
isRemovedOnCompletion
_propertyFlagsForLayer:
arrayWithObjects:count:
setBeginTimeMode:
_copyRenderAnimationForLayer:
_scheduleAnimationTimer
performSelectorOnMainThread:withObject:waitUntilDone:
_cancelAnimationTimer
beginTimeMode
applyForTime:presentationObject:modelObject:
needsDisplay
isHidden
opacity
layoutIfNeeded
displayIfNeeded
shadowOpacity
cornerRadius
shadowOffset
shadowRadius
shadowColor
_renderBackgroundInContext:
_renderForegroundInContext:
_renderSublayersInContext:
_renderBorderInContext:
renderInContext:
backgroundColor
edgeAntialiasingMask
contentsTransform
contentsMultiplyColor
borderWidth
borderColor
displayLayer:
layerWillDraw:
drawsAsynchronously
acceleratesDrawing
clearsContext
drawsMipmapLevels
integerValue
drawLayer:inContext:
layoutSublayers
sizeRequisition
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
setZPosition:
setAffineTransform:
setFrame:
isGeometryFlipped
setGeometryFlipped:
convertPoint:toLayer:
convertTime:fromLayer:
convertTime:toLayer:
cornerContents
setCornerContents:
setEdgeAntialiasingMask:
contentsFormat
contentsGravity
setContentsGravity:
contentsScaling
setContentsScaling:
setSublayers:
setMask:
removeFromSuperlayer
insertSublayer:atIndex:
addSublayer:
insertSublayer:below:
insertSublayer:above:
replaceSublayer:with:
removeAllAnimations
animationKeys
presentationLayer
_contentsFormatDidChange:
needsLayout
preferredFrameSize
maskedCorners
setMaskedCorners:
setAnchorPoint:
setAnchorPointZ:
setHidden:
setDoubleSided:
setOpaque:
setNeedsDisplayOnBoundsChange:
setSublayerTransform:
contentsCenter
setContentsCenter:
cornerContentsCenter
setCornerContentsCenter:
cornerContentsMasksEdges
setCornerContentsMasksEdges:
contentsContainsSubtitles
setContentsContainsSubtitles:
setOpacity:
setBackgroundColor:
setMasksToBounds:
filters
setFilters:
backgroundFilters
setBackgroundFilters:
compositingFilter
setCompositingFilter:
actions
setActions:
setBorderColor:
setBorderWidth:
setCornerRadius:
setContentsMultiplyColor:
setShadowOpacity:
setShadowColor:
setShadowOffset:
setShadowRadius:
setShadowPath:
shadowPath
shouldRasterize
setShouldRasterize:
rasterizationPrefersDisplayCompositing
setRasterizationPrefersDisplayCompositing:
rasterizationScale
setRasterizationScale:
setDrawsAsynchronously:
allowsEdgeAntialiasing
setAllowsEdgeAntialiasing:
allowsGroupOpacity
setAllowsGroupOpacity:
doublePosition
doubleBounds
setFromValue:
isDescendantOf:
motionBlurAmount
behaviors
backgroundColorPhase
velocityStretch
momentOfInertia
coefficientOfRestitution
preloadsCache
allowsDisplayCompositing
wantsExtendedDynamicRangeContent
allowsGroupBlending
hitTestsAsOpaque
literalContentsCenter
invertsShadow
shadowPathIsBounds
instanceMethodForSelector:
setDoublePosition:
setDoubleBounds:
convertDoublePoint:fromLayer:
convertDoublePoint:toLayer:
convertDoubleRect:fromLayer:
convertDoubleRect:toLayer:
hasBeenCommitted
clearHasBeenCommitted
context
setMeshTransform:
regionBeingDrawn
layoutIsActive
layoutBelowIfNeeded
layerBeingDrawn
layerAtTime:
hidden
opaque
doubleSided
isFlipped
setFlipped:
allowsContentsRectCornerMasking
setAllowsContentsRectCornerMasking:
setAllowsHitTesting:
setHitTestsAsOpaque:
setLiteralContentsCenter:
setCanDrawConcurrently:
setClearsContext:
isFrozen
setFrozen:
setNeedsLayoutOnGeometryChange:
setSortsSublayers:
setInvertsShadow:
setShadowPathIsBounds:
setContentsTransform:
contentsDither
setContentsDither:
contentsOpaque
setContentsOpaque:
setMotionBlurAmount:
setPreloadsCache:
setAllowsDisplayCompositing:
setWantsExtendedDynamicRangeContent:
setAllowsGroupBlending:
setBackgroundColorPhase:
setAcceleratesDrawing:
needsLayoutForKey:
lights
setLights:
setBehaviors:
setVelocityStretch:
setMomentOfInertia:
setCoefficientOfRestitution:
getRendererInfo:size:
beginElement:
initWithArray:
value
setValue:
_value
initWithObjects:count:
getObjects:
getObjects:range:
_ivars
contextWithOptions:
remoteContextWithOptions:
server
localContextWithOptions:
serverWithOptions:
addDisplay:
containsObject:
serverIfRunning
removeDisplay:
removeAllDisplays
displayWithName:
displayWithDisplayId:
displayWithUniqueId:
_detectDisplays
_initializeBrightnessNotifications
setRendererFlags:
rendererFlags
setSecure:
isSecure
secureModeViolations
insecureProcessIds
clientPortOfContextId:
taskPortOfContextId:
contextIdHostingContextId:
isMirroringEnabled
setMirroringEnabled:
_mirroringEnabled
addClone:options:
_initWithCADisplayServer:
contextIdAtPosition:
clientPortAtPosition:
convertPoint:toContextId:
convertPoint:fromContextId:
clones
addClone:
removeClone:
removeAllClones
cloneMaster
setBlanked:
isBlanked
willUnblank
setOrientation:
orientation
setOverscanAmount:
setOverscanAmounts:
setInvertsColors:
invertsColors
setGrayscale:
setColorMatrix:scale:rampDuration:
setAccessibilityColorMatrix:scale:
isGrayscale
setContrast:
contrast
setMaximumBrightness:
maximumBrightness
setMinimumRefreshRate:
minimumRefreshRate
setMaximumRefreshRate:
setIdealRefreshRate:
idealRefreshRate
setUsesPreferredModeRefreshRate:
usesPreferredModeRefreshRate
setTag:
setProcessId:
setTVMode:
TVMode
setTVSignalType:
TVSignalType
freeze
setDisablesUpdates:
disablesUpdates
setDisabled:
disabled
firstObject
targetName
save
source
_source
forceField
setLayer:
function
setFunction:
_function
timingFunction
discretizesTime
CA_encodesPropertyConditionally:type:
_setCARenderAnimation:layer:
removedOnCompletion
setRemovedOnCompletion:
setDiscretizesTime:
isAdditive
isCumulative
valueFunction
animationWithKeyPath:
setAdditive:
setCumulative:
setValueFunction:
additive
cumulative
fromValue
toValue
byValue
roundsToInteger
startAngle
endAngle
CA_addValue:multipliedBy:
_timeFunction:
CA_roundToIntegerFromValue:
setToValue:
setByValue:
setRoundsToInteger:
setStartAngle:
setEndAngle:
calculationMode
path
values
keyTimes
timingFunctions
tensionValues
continuityValues
biasValues
rotationMode
setCalculationMode:
setKeyTimes:
setTimingFunctions:
setValues:
setPath:
setTensionValues:
setContinuityValues:
setBiasValues:
setRotationMode:
stiffness
damping
durationForEpsilon:
settlingDuration
setStiffness:
setDamping:
setInitialVelocity:
initialVelocity
sourceLayer
targetsSuperlayer
sourcePoints
appliesScale
appliesRotation
appliesX
appliesY
setSourceLayer:
setSourcePoints:
setTargetsSuperlayer:
setAppliesX:
setAppliesY:
setAppliesScale:
setAppliesRotation:
filter
subtype
startProgress
endProgress
options
transitionFlags
setType:
setSubtype:
setStartProgress:
setEndProgress:
setFilter:
setOptions:
setTransitionFlags:
animations
setAnimations:
fillRule
strokeColor
lineCap
lineJoin
lineWidth
miterLimit
lineDashPattern
lineDashPhase
strokeStart
strokeEnd
setFillRule:
setStrokeColor:
setStrokeStart:
setStrokeEnd:
setLineWidth:
setMiterLimit:
setLineJoin:
setLineCap:
setLineDashPattern:
setLineDashPhase:
contextId
inheritsSecurity
setContextId:
setInheritsSecurity:
instanceCount
instanceTransform
instanceDelay
instanceColor
instanceRedOffset
instanceGreenOffset
instanceBlueOffset
instanceAlphaOffset
setInstanceCount:
setInstanceDelay:
setInstanceTransform:
setInstanceColor:
setInstanceRedOffset:
setInstanceGreenOffset:
setInstanceBlueOffset:
setInstanceAlphaOffset:
initWithAPI:properties:
sharegroup
getMacroContextPrivate
setParameter:to:
fontSmoothingStyle
setFontSmoothingStyle:
_initWithContentsOfURL:type:options:error:
_initWithData:type:options:error:
initWithContentsOfURL:options:error:
_readFromCAMLURL:type:options:error:
_readFromArchiveData:options:error:
_readFromCAMLData:type:options:error:
substitutedClasses
setClass:forClassName:
initForReadingWithData:
_addClassSubstitutions:
finishDecoding
URLByDeletingLastPathComponent
fileURLWithPath:isDirectory:
stringByAppendingPathComponent:
propertyListWithData:options:format:error:
dictionary
allKeys
rootLayer
packageWithContentsOfURL:type:options:error:
packageWithData:type:options:error:
publishedObjectNames
publishedObjectWithName:
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
animationDuration
setAnimationDuration:
animationTimingFunction
setAnimationTimingFunction:
disableActions
setDisableActions:
completionBlock
setCompletionBlock:
addCommitHandler:forPhase:
pushAnimator:
popAnimator
animator
setCommitHandler:
setPresentationHandler:queue:
activate
activateBackground:
synchronize
animatesFromModelValues
setAnimatesFromModelValues:
commitTime
setCommitTime:
disableRunLoopObserverCommits
setDisableRunLoopObserverCommits:
generateSeed
assertInactive
completionItem
numberWithFloat:
statisticsType
dictionaryWithObjectsAndKeys:
groupName
backdropRect
marginWidth
disablesOccludedBackdropBlurs
captureOnly
statisticsInterval
statisticsValues
setGroupName:
setBackdropRect:
setMarginWidth:
setCaptureOnly:
setDisablesOccludedBackdropBlurs:
setStatisticsType:
setStatisticsInterval:
offset
sharpness
invertsShape
setInvertsShape:
setOffset:
setSharpness:
behaviorWithType:
behaviorTypes
spring
layerA
setLayerA:
layerB
setLayerB:
attachmentPointA
setAttachmentPointA:
attachmentPointB
setAttachmentPointB:
restLength
setRestLength:
_layerA
_layerB
_attachmentPointA
_attachmentPointB
_stiffness
_damping
_restLength
_delegate
initWithData:
encodeObject:conditionally:
_writeElementTree:
allObjects
compare:
sortedArrayUsingSelector:
relativePath
isFileURL
pathComponents
subarrayWithRange:
pathWithComponents:
URLPathAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
numberWithChar:
numberWithUnsignedChar:
numberWithShort:
numberWithUnsignedShort:
numberWithLong:
numberWithUnsignedLong:
numberWithLongLong:
numberWithUnsignedLongLong:
CA_shouldArchiveValueForKey:ofObject:
CA_CAMLPropertyForKey:
raise:format:arguments:
willSuspend:
isSuspended
methodForSelector:
hasPrefix:
setScanLocation:
scanInt:
scanLocation
replaceObjectAtIndex:withObject:
defaultCenter
addObserver:selector:name:object:
initWithOptions:localContext:
initRemoteWithOptions:
allContexts
currentContext
localContext
remoteContext
setClientPort:
objectForSlot:
orderAbove:
orderBelow:
createFencePort
setFencePort:
setFencePort:commitHandler:
setFence:count:
invalidateFences
createSlot
createImageSlot:hasAlpha:
createImageSlot:hasAlpha:extendedColors:
deleteSlot:
setObject:forSlot:
colorSpace
setColorSpace:
colorMatchUntaggedContent
setColorMatchUntaggedContent:
setLevel:
level
valid
renderContext
_proxy
colors
locations
startPoint
endPoint
colorMap
setColors:
setLocations:
setStartPoint:
setEndPoint:
setColorMap:
_applyTransition:layer:undo:speed:
_nextStateTimer:
timerWithTimeInterval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
stateController:didSetStateOfLayer:
setState:ofLayer:transitionSpeed:
setInitialStatesOfLayer:transitionSpeed:
setCAStateControllerTransition:
_applyTransitionElement:layer:undo:speed:
stateController:transitionDidStart:speed:
_addAnimation:forKey:target:undo:
stateOfLayer:
setState:ofLayer:
setInitialStatesOfLayer:
removeAllStateChanges
restoreStateChanges:
cancelTimers
_initWithOptions:
_initWithEAGLContext:options:
endFrame
rendererWithEAGLContext:options:
beginFrameAtTime:timeStamp:
updateBounds
addUpdateRect:
nextFrameTime
hasMissingContent
render
setContext:
rendererDidChange:
cStringUsingEncoding:
script
Undefined script value `%s'
null
bool
integer
real
NSArray
NSSet
NSDictionary
string
NSURL
CGPoint
CGSize
CGRect
CGAffineTransform
CATransform3D
CAPoint3D
CAColorMatrix
CGColor
CGImage
CGPath
CGPDFDocument
CGFont
unordered
oldestFirst
oldestLast
backToFront
additive
screen
maximum
cheapColorDodge
point
line
rectangle
cuboid
circle
sphere
path
rectangles
points
outline
surface
volume
sequential
emitterCells
emitterBehaviors
T@"NSArray",C
birthRate
lifetime
emitterPosition
T{CGPoint=ff}
emitterZPosition
emitterSize
T{CGSize=ff}
emitterDepth
emitterShape
T@"NSString",C
emitterMode
renderMode
preservesDepth
velocity
scale
spin
seed
emitterPath
T^{CGPath=}
emitterRects
emitterDuration
spinBias
cullRect
T{CGRect={CGPoint=ff}{CGSize=ff}}
cullMinZ
cullMaxZ
updateInterval
CA_DISABLE_ASYNC
CA_DISABLE_PARALLEL_CG
v4@?0
{CATransform3D=ffffffffffffffff}
CATransform3DValue
T{CATransform3D=ffffffffffffffff},R
(interpolator (factor %g)
(o%d 
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
layer
T@"CALayer",R,N,V_layer
transition
T@"CAStateTransition",R,N,V_transition
beginTime
Td,R,N,V_beginTime
duration
Td,R,N,V_duration
speed
Tf,R,N,V_speed
CAStateControllerTransition
T@"CAStateControllerTransition",W,D
auto
YCbCr
RGBLimitedRange
RGBFullRange
none
scaleContent
insetBounds
CoreAnimation: GetDisplayInfo returned 0x%x
connectionSeed
uniqueId
availableModes
currentMode
preferredMode
bounds
frame
external
overscanned
overscanAmounts
overscanAmount
overscanAdjustment
cloned
cloningSupported
supportsExtendedColors
processId
refreshRate
heartbeatRate
minimumFrameDuration
safeBounds
CADisplayLink
%@: already added to runloop %p, cannot also be added to %p
CAInvalidDisplayMode
mode %@ is not valid for display %@
CoreAnimation: [CADisplay colorMode] is deprecated!
CoreAnimation: [CADisplay setColorMode:] is deprecated!
<CADisplay:%@ %@>
T@"NSArray",R,N
T@"CADisplayMode",&,N
T@"CADisplayMode",R,N
colorMode
T@"NSString",C,N
allowsVirtualModes
TB,V_allowsVirtualModes
T{CGRect={CGPoint=ff}{CGSize=ff}},R,N
name
T@"NSString",R,N
deviceName
displayId
T@"NSString",R
supported
TB,R,GisSupported
Ti,R
TB,R,GisExternal
Td,R
TB,R,GisOverscanned
Tf,R
T{CGSize=ff},R
TB,R,GisCloned
TB,R,GisCloningSupported
TB,R
timestamp
Td,R,N
targetTimestamp
paused
TB,N,GisPaused
frameInterval
Ti,N
preferredFramesPerSecond
display
T@"CADisplay",R,N
userInfo
T@,&,N
maximumRefreshRate
Ti,R,N
undefined
y422
y444
full
limited
<CADisplayMode %d x %d fmt:%s range:%s>
width
TL,R,N
height
pixelAspectRatio
Tf,R,N
isVirtual
TB,R,N
T@"NSString",R,C,N
TVOut
com.apple.CoreAnimation.CAWindowServer.DisplayChanged
com.apple.CoreAnimation.CAWindowServer.DisplayPower
CoreAnimation: rendering error %s
~ContextState
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/ogl/ogl-context.h
!next && "Imbalanced ContextState push/pop"
{CGPoint=ff}
{CGSize=ff}
{CGRect={CGPoint=ff}{CGSize=ff}}
{CGAffineTransform=ffffff}
{?=ffffff}
{CAPoint3D=fff}
{CADoublePoint=dd}
{CADoubleSize=dd}
{CADoubleRect={CADoublePoint=dd}{CADoubleSize=dd}}
public.png
array
dict
{CAColorMatrix=ffffffffffffffffffff}
CoreAnimation: unable to encode NSValue of type %s
kind
CGColorPattern
data
tiling
CGPatternType
CGPatternMatrix
CGPatternBounds
CGPatternStep
CGPatternTiling
CGPatternColored
CGPatternImage
LKCGPathType
LKCGPathPoint0_x
LKCGPathPoint0_y
LKCGPathPoint1_x
LKCGPathPoint1_y
LKCGPathPoint2_x
LKCGPathPoint2_y
LKCGPathSegments
assets/image%d.%@
CAML: Failed to encode image: %s
image_format
T@"NSString",C,V_image_format
image_encode_options
T@"NSDictionary",C,V_image_encode_options
%s: ignoring exception %@
-[NSCoder(CACoderAdditions) CA_encodeObject:forKey:conditional:]
-[NSCoder(CACoderAdditions) CA_decodeObjectForKey:]
CACodingUserInfo
CACodingImageFormat
CACodingImageOptions
%@/assets
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
%@/%s
main.caml
rootDocument
geometryFlipped
index.xml
rootLayer
root
(image [%d %d] [%d] %s
 colormatching-disabled
 (colorspace "%s")
next
T@"CAStateControllerUndo",R,V_next
state
T@"CAState",&,N,V_state
elements
T@"NSMutableArray",&,N,V_elements
transitions
T@"NSMutableArray",&,N,V_transitions
CoreAnimation: triple buffered backing store %p
CABackingStore
<CABackingStore %p>
<CABackingStore %p
 (buffer [%d %d] %s%s)
 volatile
Error while parsing CoreAnimation XML document %@: %@
baseURL
T@"NSURL",&
delegate
T@"<CAMLParserDelegate>",W
error
T@"NSError",R
result
T@,R
(currentTexture 
(blendedTextures
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - non-RGB color model
CG image cache at time %f:
CoreAnimation: warning, CGImageProvider returned multiple blocks
CoreAnimation: copied CGImageRef %p - mipmap generation
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
  %p deadline %f %s%s%s%s%s
mipmaps 
mask 
transient 
unmatched 
partial 
multiplyColor
colorAdd
colorSubtract
colorMonochrome
colorMatrix
colorHueRotate
colorSaturate
colorBrightness
colorContrast
colorInvert
luminanceToAlpha
bias
distanceField
gaussianBlur
lanczosResize
clear
copy
sourceOver
sourceIn
sourceOut
sourceAtop
dest
destOver
destIn
destOut
destAtop
plusL
subtractS
subtractD
multiply
minimum
plusD
normalBlendMode
multiplyBlendMode
screenBlendMode
overlayBlendMode
darkenBlendMode
lightenBlendMode
colorDodgeBlendMode
colorBurnBlendMode
softLightBlendMode
hardLightBlendMode
differenceBlendMode
exclusionBlendMode
subtractBlendMode
divideBlendMode
linearBurnBlendMode
linearDodgeBlendMode
linearLightBlendMode
pinLightBlendMode
pageCurl
vibrantDark
vibrantLight
darkenSourceOver
lightenSourceOver
enabled
cachesInputImage
CAFilterType
CAFilterName
CAFilterEnabled
CAFilterInputs
filter
CAFilter requires `filter' attribute
type
TB,GisEnabled
basedOn
false
true
locked
initial
nextDelay
previousDelay
{%@:%p %@ basedOn %@ %@%s%s}
 initial
 locked
T@"NSString",C,N,V_name
T@"NSString",C,V_basedOn
TB,GisEnabled,V_enabled
T@"NSArray",C,N
Td,V_nextDelay
Td,V_previousDelay
TB,N,GisLocked,V_locked
TB,GisInitial,V_initial
average
Invalid number of numeric values in mesh
Invalid number of arguments to 'v' mesh operator
Invalid number of arguments to 'f' mesh operator
Invalid mesh operator: %c
[%@] [%@] v 
[%@] [%@] f 
meshData
depthNormalization
subdivisionSteps
vertexCount
TL,R
faceCount
CAMeshTransform
%@: trying to replace non-existent vertex %ld
%@: trying to remove non-existent vertex %ld
%@: trying to replace non-existent face %ld
%@: trying to remove non-existent face %ld
(force-field
(layer 0x%lx)
(function 
Unsupported image format '%s' for default colorspace
ARGB8888
XRGB8888
BGRA8888
BGRX8888
XRGB1555
BGRX5551
CbYCrY8
YCbYCr8
LA16
RGBA5
RGBA8
RGBX8
RGBA16
RGBX16
RGBAh
RGBXh
RGBAf
RGB10
RGB10_XR
ARGB10_XR
RGB10A8_2P_XR
UNKNOWN
(replicatorLayer %d)
rotateX
rotateY
rotateZ
scaleX
scaleY
scaleZ
scaleXY
scaleXYZ
translate
translateX
translateY
translateZ
CAValueFunctionName
Unknown function: %@
com.apple.coreanimation.display.%s
com.apple.coreanimation.display
linear
easeIn
easeOut
easeInEaseOut
default
CAMediaTimingFunctionInvalid
unknown timing function name: %@
CAMediaTimingFunctionInvalidControlPoint
no timing function control point with index: %d
(%g %g; %g %g)
No timing function data
Unknown timing function: %@
Ignoring trailing characters
CAMediaTimingFunction
index
CoreAnimation: failed to allocate %ld bytes
CoreAnimation: failed to query region %p (%ld bytes)
CoreAnimation: failed to map %ld bytes (%x)
(shmem %lu bytes)
%a %b %e %H:%M:%S %Z %Y
** Log started %s **
stdout
exported [%d %d] buffer to %s
*** missing x_log_begin() ***
QUARTZCORE_LOG_FILE
X_LOG_FILE
com.apple.coreanimation
CADebug
animations.%@
{%@:%p %@:%p %@}
T@"NSString",C,N,V_key
shadow
pattern
tiled-image
backdrop-copy
blending
transform
mask
group
scaling
plugin
cache
mesh
motion-blur
dest-copy
 (offscreen-flags [
(%slayer [%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
transform-
[%d pass%s
compositing-filters
bg-filters
blend-modes
opacity
filters
sover
rasterize
emitter
 (group-flags [
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
(edgeAntialiasingMask %x)
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
(motionBlurAmount %g)
sublayerTransform
(doubleSided false)
(sortsSublayers false)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(cornerContentsMasksEdges true)
(maskedCorners %x)
(contents %s
backingStore 
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(lodBias %g)
(contentsContainsSubtitles true)
contentsTransform
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsAsOpaque true)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(behaviors 
(subclass 
%s%s
(filter %s
(enabled false)
(inputs 
(%s 
render_contents_background
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/ogl/ogl-layer.cpp
!(l->node->flags & Render::kLayerNodeIgnoreContents)
vibrantDarkSourceOver
vibrantLightSourceOver
vibrantDarkSourceOverReversed
vibrantLightSourceOverReversed
(subpixel-mask-layer
(foregroundColor #%08x)
uncollectable
disableFade
onlyIfNull
removeImmediately
contentsAreFlipped
contents
levelsOfDetail
levelsOfDetailBias
tileSize
CATiledLayerFlags
fillColor
T^{CGColor=}
maximumTileScale
drawingEnabled
TB,GisDrawingEnabled
T@"<CATiledLayerDelegate><CALayerDelegate>",W
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
Basic
Blurs
PerfStates
Frame Duration
render_for_time
Offscreen Passes
Dirty Area
Update
Frame Delay
Backdrop Count
Blur Count
Emitter Count
Particle Count
CPU Freq
GPU Freq
SoC Freq
DRAM Freq
Battery Drain
CPU Power
GPU Power
SoC Power
DRAM Power
/usr/local/lib/libpstatemonitor.dylib
pstate_monitor_connect
pstate_monitor_destroy
pstate_monitor_get_CPU_pstate
pstate_monitor_get_GPU_pstate
pstate_monitor_get_SOC_pstate
pstate_monitor_get_DRAM_pstate
pstate_monitor_get_CPU_watts
pstate_monitor_get_GPU_watts
pstate_monitor_get_SOC_watts
pstate_monitor_get_DRAM_watts
pstate_monitor_get_BatteryDrain_watts
v8@?0^{pstate_monitor=}4
apple-internal-install
CA_DISABLE_WORKAROUNDS
CA_MAX_TEXTURE_UNITS
CA_MAX_TEXTURE_SIZE
Apple
GL_APPLE_fence
GL_APPLE_texture_filter_cubic
GL_APPLE_texture_ycbcr_basic_formats
GL_APPLE_texture_ycbcr_extended_formats
GL_APPLE_texture_xr
GL_APPLE_tile_order_rot
GL_EXT_shader_framebuffer_fetch
GL_EXT_texture_filter_anisotropic
GL_EXT_texture_lod_bias
GL_OES_standard_derivatives
GL_OES_texture_half_float
GL_OES_texture_half_float_linear
GL_OES_texture_float
GL_OES_texture_float_linear
GL_IMG_texture_compression_pvrtc
GL_KHR_texture_compression_astc_ldr
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
#define NOISE_SIZE %d
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: surface %d x %d is too large
DisableColorMatching
CA_DISABLE_COLOR_MATCHING
0x%x
[%u]
 s:[%u x %u] b:[%u x %u] need-clear:%d%s
, memoryless
 s:framebuffer
surf
TMPDIR
/tmp
%s/ca-image-%03d-%s-%d.%s
error: failed to export [%d %d] buffer to %s
(shape-layer
(fillColor 
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(lineWidth %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
(lineJoin %s)
round
bevel
(lineCap %s)
square
start
middle
natural
left
right
center
justified
Helvetica
NSFont
NSGraphicsContext
T@,C
font
Tr^v
fontSize
foregroundColor
wrapped
TB,GisWrapped
truncationMode
alignmentMode
allowsFontSubpixelQuantization
truncationString
truncated
TB,R,GisTruncated
UIApplication
states
T@"NSArray",C,D
stateTransitions
vertically
horizontally
both
scrollMode
visibleRect
T{CGRect={CGPoint=ff}{CGSize=ff}},R
disableGroupOpacity
disableEdgeAA
enablePixelDoubling
enablePixelQuadrupling
ignoresHitTest
displayable
secure
will_commit
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/render/render-context.cpp
!_locked_host_ctx
above
siblingId
CoreAnimation: missing mask layer %p
CoreAnimation: missing sublayer %p
Unattached contexts:
  %x: pid %d [%s]%s%s
 (secure)
 (visible)
== context %x%s%s%s; pid %d [%s] %sat time %f ==
; colorspace "
(secure) 
  <null>
Context %x (pid %d [%s]):
  slot %u:
fromState
toState
<CAStateTransition fromState=%@ toState=%@ %@>
T@"NSString",C,N,V_fromState
T@"NSString",C,N,V_toState
T@"NSArray",C,N,V_elements
pageUnCurl
<unknown>
(%s)
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
TYPE
COUNT
%20s %d
CA_BENCHMARK
LK_BENCHMARK
CoreAnimation: context hosting changed while locked!
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
removed
forwards
backwards
frozen
extended
draw_string
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/ogl/ogl-debug-renderer.cpp
text
add_vertex
_vertices_cur < _vertices_end
sprite
plane
single
random
<%@:%p; 
timeOffset
repeatCount
repeatDuration
autoreverses
fillMode
lifetimeRange
emissionLatitude
emissionLongitude
emissionRange
velocityRange
xAcceleration
yAcceleration
zAcceleration
scaleRange
scaleSpeed
spinRange
color
redRange
greenRange
blueRange
alphaRange
redSpeed
greenSpeed
blueSpeed
alphaSpeed
T@,&
contentsRect
contentsScale
minificationFilter
magnificationFilter
minificationFilterBias
style
T@"NSDictionary",C
particleType
orientationLatitude
orientationLongitude
orientationRange
rotation
rotationRange
mass
massRange
contentsFrameMode
contentsFrameCount
contentsFramesPerRow
contentsFramesPerSecond
stroke
innerStroke
outerStroke
LinearBlurs
high
medium
allowsRecursiveScreenCapture
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
com.apple.CoreAnimation.CAWindowServer.SecureModeViolation
** Render tree at time %f (bounds %d,%d %dx%d) **
CAMachPort
<CAMachPort %p>
<CAMachPort %p mach_port = %u>
CARenderObject
<CARenderObject %p>
slab_alloc
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/util/x-alloc.c
slab->magic == SLAB_MAGIC (bucket_idx)
slab_dealloc
%5s %5s %5s %5s %5s %5s
size
slabs
used
free
%5d %5d %5d %5d %5d %5d
%5s %5d %5d %5d %5d %5d
total
MallocPreScribble
MallocScribble
QuartzCore
unable to register with server: 0x%x
CoreAnimation: NULL color space set on context (%x)
_colorSpaceDidChange
_contentsFormatDidChange:
grad
matrix
rotate
skewX
skewY
shearXY
shearYZ
shearXZ
perspective
Invalid transform: %s (position %d)
saturate
hueRotate
Invalid color matrix: %s (position %d)
Invalid number of numeric values in path: %s
Invalid number of arguments to 'm' path operator: %s
Invalid number of arguments to 'l' path operator: %s
Invalid number of arguments to 'c' path operator: %s
Invalid number of arguments to 'v' path operator: %s
Invalid number of arguments to 'q' path operator: %s
Invalid number of arguments to 't' path operator: %s
Invalid number of arguments to 'y' path operator: %s
Invalid number of arguments to 'h' path operator: %s
Invalid number of arguments to 're' path operator: %s
Invalid path operator: %s
Ignoring trailing characters: %s
Failed to create pattern from image
Failed to open image
Incorrect number of color components (need %d)
Failed to load image
Unable to open pdf document
pdfDocument element must specify src attribute
cannot create font from name: %s
ambient
directional
spot
specularIntensity
position
T{CAPoint3D=fff}
T@"<CABehaviorDelegate>",W
springs
forceFields
timeStep
minimumTimeStep
stoppedVelocity
stoppedAngularVelocity
springScale
drag
angularDrag
reactsToCollisions
collisionInterval
r^v8@?0@4
v12@?0@4r^v8
B8@?0@4
v12@?0@4B8
c8@?0@4
v12@?0@4c8
C8@?0@4
v12@?0@4C8
s8@?0@4
v12@?0@4s8
S8@?0@4
v12@?0@4S8
i8@?0@4
v12@?0@4i8
I8@?0@4
v12@?0@4I8
l8@?0@4
v12@?0@4l8
L8@?0@4
v12@?0@4L8
q8@?0@4
v16@?0@4q8
Q8@?0@4
v16@?0@4Q8
f8@?0@4
v12@?0@4f8
d8@?0@4
v16@?0@4d8
{CGPoint=ff}8@?0@4
v16@?0@4{CGPoint=ff}8
{CGSize=ff}8@?0@4
v16@?0@4{CGSize=ff}8
{CGRect={CGPoint=ff}{CGSize=ff}}8@?0@4
v24@?0@4{CGRect={CGPoint=ff}{CGSize=ff}}8
{CATransform3D=ffffffffffffffff}8@?0@4
v72@?0@4{CATransform3D=ffffffffffffffff}8
{CGAffineTransform=ffffff}8@?0@4
v32@?0@4{CGAffineTransform=ffffff}8
{CAPoint3D=fff}8@?0@4
v20@?0@4{CAPoint3D=fff}8
{CADoublePoint=dd}8@?0@4
v24@?0@4{CADoublePoint=dd}8
{CADoubleSize=dd}8@?0@4
v24@?0@4{CADoubleSize=dd}8
{CADoubleRect={CADoublePoint=dd}{CADoubleSize=dd}}8@?0@4
v40@?0@4{CADoubleRect={CADoublePoint=dd}{CADoubleSize=dd}}8
(dynamics-behavior
(springs 
(forceFields 
(springScale %g)
(drag %g)
(angularDrag %g)
CoreAnimation: user defined spring-functions are unimplemented.
CoreAnimation: %d by %d image is too large for software renderer, ignoring
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CA_DEBUG_TRANSACTIONS
CA_ASSERT_MAIN_THREAD_TRANSACTIONS
CoreAnimation: CA_ASSERT_MAIN_THREAD_TRANSACTIONS is set and an implicit transaction wasn't created on a main thread.
Started implicit transaction for thread %p
UITrackingRunLoopMode
CoreAnimation: new transaction fence disabling existing low latency hint.
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
animation
CAAnimation
{%@:%p %@:%p %@ %@}
T@"CAAnimation",&,N,V_animation
opaque
allowsDisplayCompositing
presentsWithTransaction
drawableProperties
lowLatency
[CAEAGLLayer setInputTime:] - non-zero time already exists!
nativeWindow
T^{_EAGLWindowObject=^?^?^?},R
asynchronous
TB,GisAsynchronous
inputTime
CoreAnimation: ignoring exception: %@
T@"NSString",R,N,V_key
(backdrop-layer %ld
(group "%s")
(scale %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(disablesOccludedBackdropBlurs true)
(statisticsType type%d)
(statisticsInterval %g)
(buffer [%d x %d] scale %g)
collected backdrop group %p buffer %p
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
create_builtin_types
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/api/CAMLObjCContext.mm
!_builtin_types
NSString
CAML warning:%d: 
CAML error:%d: 
No such class `%s'
Unable to open script: %s
Delegate does not support <script>.
Null <script> contents
Delegate does not support script values.
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
com.apple.CARenderServer
unable to find bootstrap server: %x
unable to register bootstrap port %s: %x
com.apple.coreanimation.render-server
CoreAnimation: mach_msg returned 0x%x, server exiting
(pixel-buffer %c%c%c%c [%d %d])
oglFlip
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor #%08x 
%s display:
Total Frames:
Skipped Frames:
Total Cloned Frames:
Skipped Cloned Frames:
(spring
(layerA 0x%lx)
(layerB 0x%lx)
(attachmentPointA [%g %g])
(attachmentPointB [%g %g])
(stiffness %g)
(damping %g)
(restLength %g)
message
CAML
colorspace
kCGColorSpace%s
Unable to create colorspace: %s
sRGB
create_sax_vtable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/utilities/CAMLContext.cpp
!_sax_vtable
<script> element not supported
http://www.apple.com/CoreAnimation/1.0
Unknown namespace URI: %s
Ignoring element `%s'
caml
Root element must be `caml'
Unknown type `%s'
Invalid type `%s' (need `%s')
object
Unknown value element `%s'
`o' element must have `type' attribute
value
Ignoring untyped attribute `%s'
Unknown object id: `%s'
Undefined property value for key `%s'
@index(%d)
@index(
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
CoreAnimation: ignoring invalid path
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
springForce
rubberBandForce
(function %s)
CAImageProvider
<CAImageProvider %p: %u x %u>
T@"CALayer",R,V_layer
currentState
T@"CAState",&,N,V_currentState
undoStack
T@"CAStateControllerUndo",R,V_undoStack
sublayers
objectId
beforeObjectId
beforeObject
keyPath
{%@:%p %@:%p %@ %@ before %@}
T@"NSString",C,N,V_keyPath
T@,&,N,V_object
T@,&,N,V_beforeObject
ji56BO1mUeT7Qg9RO7Er9w
init_alignment
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/utilities/CADeviceInfo.cpp
alignment_values[kCAAlignmentPropertyImageBytes] >= alignment_values[kCAAlignmentPropertyNeededImageBytes]
alignment_values[kCAAlignmentPropertyRowBytes] >= alignment_values[kCAAlignmentPropertyNeededRowBytes]
PurpleFBServer
PurpleFBTVOutServer
IOS_FRAMEBUFFER_PREFIX
PurpleMain
PurpleTVOut
failed to receive purple reply message: %x
failed to send purple message: %x
CA_DISABLED_EXTENSIONS
CoreAnimation: disabling OpenGL extension %s
uniform highp mat4 vertex_matrix;
uniform highp mat4 vertex_velocity_matrix;
uniform highp vec4 texmat0, texmat1, texmat2;
uniform highp vec4 texmatD;
uniform highp vec4 texmatW;
uniform highp vec4 chroma_matrix%d;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color0, vertex_color1;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
attribute mediump vec3 vertex_normal;
varying mediump vec2 velocity;
varying lowp vec4 color0;
varying lowp vec4 color1;
varying highp vec2 texcoord%d_0;
varying highp vec2 texcoord%d_%d;
varying highp vec3 texcoordD;
varying highp vec3 texcoordN;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  highp vec4 vp1 = vertex_position;
  highp vec4 vp0 = vertex_velocity_matrix * vertex_position;
  velocity = (vp1.xy / vp1.w) - (vp0.xy / vp0.w);
  color0 = vertex_color0;
  color1 = vertex_color1;
  texcoord%d_0 = vertex_texcoord%d * texmat%d.xy + texmat%d.zw;
  texcoord%d_%d = texcoord%d_0 * chroma_matrix%d.xy + chroma_matrix%d.zw;
  texcoord%d_%d = texcoord%d_0;
  texcoord%d_%d = (vertex_texcoord%d + vec2(%g, %g)) * texmat%d.xy + texmat%d.zw;
  texcoordD = vec3(gl_Position.xy * texmatD.xy + texmatD.zw * gl_Position.w, gl_Position.w);
  texcoordN = vec3(gl_Position.xy * texmatW.xy + texmatW.zw * gl_Position.w, gl_Position.w * float(NOISE_SIZE));
%Wlowp vec4 R = %s;
%Wlowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
%Wlowp float DaSa = D.a*S.a;
%WS = S/max(S.a, 0.005);
%WD = D/max(D.a, 0.005);
%WR.rgb += %s * DaSa;
%WR.rgb += %s;
%WR.a += DaSa;
%WR.rgb = min(R.rgb, R.a);
inline_color_shader
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/ogl/ogl-gl.cpp
opaque && "4DLUT must be opaque!"
    lowp vec4 c = s%d, t;
    lowp vec3 c = s%d.rgb, t;
    c = c / max(s%d.a, .005);
    c = c.r * colorP%d[%d].rgb;
    c = c.r * colorP%d[%d].rgb + colorP%d[%d].rgb;
    c = c.r * colorP%d[%d].rgb + c.g * colorP%d[%d].rgb + c.b * colorP%d[%d].rgb;
    c = c.r * colorP%d[%d].rgb + c.g * colorP%d[%d].rgb + c.b * colorP%d[%d].rgb + colorP%d[%d].rgb;
    t = abs(c);
    t = pow(t, colorP%d[%d].rgb);
    t = pow(t, colorP%d[%d].rgba);
    c.a = c.a < 0.0 ? t.a * -1.0 : t.a;
    c.r = c.r < 0.0 ? t.r * -1.0 : t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? 0.0 : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r)
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? 0.0 : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g)
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? 0.0 : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b)
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? 0.0 : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a)
    c.r = c.r < 0.0 ? t.r * -1.0: t.r; c.g = c.g < 0.0 ? t.g * -1.0 : t.g; c.b = c.b < 0.0 ? t.b * -1.0 : t.b;
    t.r = t.r < -colorP%d[%d].r / colorP%d[%d].r ? colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r
    t.g = t.g < -colorP%d[%d].g / colorP%d[%d].g ? colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g
    t.b = t.b < -colorP%d[%d].b / colorP%d[%d].b ? colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b
    t.a = t.a < -colorP%d[%d].a / colorP%d[%d].a ? colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r : pow(colorP%d[%d].r * t.r + colorP%d[%d].r,colorP%d[%d].r);
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g : pow(colorP%d[%d].g * t.g + colorP%d[%d].g,colorP%d[%d].g);
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b : pow(colorP%d[%d].b * t.b + colorP%d[%d].b,colorP%d[%d].b);
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a : pow(colorP%d[%d].a * t.a + colorP%d[%d].a,colorP%d[%d].a);
    t.r = t.r < colorP%d[%d].r ? colorP%d[%d].r * t.r + colorP%d[%d].r : pow (colorP%d[%d].r * t.r + colorP%d[%d].r, colorP%d[%d].r) + colorP%d[%d].r;
    t.g = t.g < colorP%d[%d].g ? colorP%d[%d].g * t.g + colorP%d[%d].g : pow (colorP%d[%d].g * t.g + colorP%d[%d].g, colorP%d[%d].g) + colorP%d[%d].g;
    t.b = t.b < colorP%d[%d].b ? colorP%d[%d].b * t.b + colorP%d[%d].b : pow (colorP%d[%d].b * t.b + colorP%d[%d].b, colorP%d[%d].b) + colorP%d[%d].b;
    t.a = t.a < colorP%d[%d].a ? colorP%d[%d].a * t.a + colorP%d[%d].a : pow (colorP%d[%d].a * t.a + colorP%d[%d].a, colorP%d[%d].a) + colorP%d[%d].a;
    c = c * colorP%d[%d].rgb + colorP%d[%d].rgb;
    c.r = texture2D(color_lut, vec2(c.r, colorP%d[%d].r)).r;
    c.g = texture2D(color_lut, vec2(c.g, colorP%d[%d].g)).r;
    c.b = texture2D(color_lut, vec2(c.b, colorP%d[%d].b)).r;
    c.%c = texture2D(texture%d, vec2(c.%c*%f, %f)).r;
    mediump vec2 c_st = vec2(c.r * %g + %g, 0.5);
    c = texture2D(texture%d, c_st).rgb;
    c = c * %g + %g;
    c = texture3D(texture%d, c).rgb;
    c.b = c.b * %g;
    lowp float b_mix = fract(c.b);
    c.b = floor(c.b) * %g;
    mediump vec2 c_st = vec2(c.r, c.g);
    c_st.r = c_st.r * %g + %g;
    c_st.g = c_st.g * %g * %g + %g * %g + c.b;
    lowp vec3 c0 = texture2D(texture%d, c_st).rgb;
    lowp vec3 c1 = texture2D(texture%d, c_st + vec2(0., %g)).rgb;
    c = mix(c0, c1, b_mix);
    mediump vec3 c_stp = c.rgb;
    c.a = c.a * %g;
    lowp float a_mix = fract(c.a);
    c.a = floor(c.a) * %g;
    c_stp.r = c_stp.r * %g + %g;
    c_stp.g = c_stp.g * %g + %g;
    c_stp.b = c_stp.b * %g * %g + %g * %g + c.a;
    lowp vec3 c0 = texture3D(texture%d, c_stp).rgb;
    lowp vec3 c1 = texture3D(texture%d, c_stp + vec3(0., 0., %g)).rgb;
    c = vec4(mix(c0, c1, a_mix), 1.);
    c = c * vec3(%g) + vec3(%g);
    c = texture3D(texture%d, c).bgr;
    c.r = c.r * %g + %g;
    c = texture2D(texture%d, vec2(c.r, 0.5)).bgr;
    s%d.rgb = c * s%d.a;
    s%d = vec4(c.rgb, 1.);
mediump
lowp
2DRect
#extension GL_OES_standard_derivatives : require
#extension GL_EXT_shader_framebuffer_fetch : require
uniform lowp vec4 function_arg;
uniform mediump float noise_scale;
uniform %s sampler%s texture%d;
uniform lowp sampler%s texture%d;
uniform lowp vec4 blend_color0;
uniform lowp vec4 blend_color1;
uniform mediump vec4 colorP%d[%d];
uniform lowp sampler2D color_lut;
uniform mediump mat3 ycbcr_matrix%d;
uniform mediump vec3 ycbcr_bias%d;
uniform mediump vec4 render_state;
uniform lowp vec3 color_matrix[3];
uniform lowp vec3 color_matrix[4];
uniform lowp vec4 color_matrix[5];
uniform lowp vec4 color_dodge;
uniform lowp vec4 color_lighten;
uniform lowp float reversed;
uniform lowp vec4 color_burn;
uniform lowp vec4 color_darken;
void main(void) {
CA_EMPTY_SHADERS
  gl_FragData[0] = vec4(0.0);
  gl_FragData[1] = vec4(0.0);
  return;
highp vec2 texcoord0_0 = vec2(gl_PointCoord.s, 1.0 - gl_PointCoord.t);
  lowp vec4 d%d = texture%sProj(texture%d, texcoordD);
  lowp vec4 d%d = gl_LastFragData[%d];
texcoord
  mediump vec2 tc%d_%d = radialCoord(texcoord%d_%d);
  %s vec4 %c%d = texture%s(texture%d, %s%d_%d);
  %s vec4 %c%d;
    highp vec4 f;
    f.xy = fract(%s%d_0 / texmat%d.xy);
    f.xy = fract(%s%d_0);
    f.zw = vec2(1.) - f.xy;
    f = f.xzxz * f.yyww;
    %c%d = texture%s (texture%d, %s%d_%d) * f.w;
    %c%d = texture%s (texture%d, %s%d_%d) * f.z + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.y + %c%d;
    %c%d = texture%s (texture%d, %s%d_%d) * f.x + %c%d;
  lowp vec4 s%d = vec4(t%d.rgb, 1.);
  lowp vec4 s%d = t%d.yxwz;
  lowp vec4 s%d = vec4(t%d.yxw, 1.);
  lowp vec4 s%d = t%d.zyxw;
  lowp vec4 s%d = vec4(t%d.zyx, 1.);
  lowp vec4 s%d = vec4(0., 0., 0., t%d.a);
  lowp vec4 s%d = squareImage(%s%d_0);
  lowp vec4 s%d = circleImage(%s%d_0);
  lowp vec4 s%d = vec4(0.);
  lowp vec4 s%d = vec4(t%d.r);
  lowp vec4 s%d = vec4(t%d.a);
  lowp vec4 s%d = vec4(clamp(ycbcr_matrix%d * vec3(t%d.r + ycbcr_bias%d.x, t%d.ba + ycbcr_bias%d.yz), 0., 1.), 1.);
  lowp vec4 s%d = t%d*vec4(2.0) + vec4(-0.75);
  s%d = vec4(s%d.zyx, 1.0);
  lowp vec4 s%d = t%d; s%d.rgb = t%d.rgb * t%d.a;
  lowp vec4 s%d = renderImage(t%d.r);
  lowp vec4 s%d = vec4(1.) - t%d;
  lowp vec4 s%d = vec4(t%d.rrr, 1.h);
  lowp vec4 s%d = t%d.rrrg;
  lowp vec4 s%d = d0;
  lowp vec4 s1 = color0;
  lowp vec4 s2;
    lowp vec4 S = s1, D = d0;
    s2 = R; s1 = d0;
  gl_FragData[0] = %s;
    mediump vec3 n = texture%sProj(texture%d, texcoordN).xyz;
    n = (n - .5) * noise_scale;
    lowp vec3 c = gl_FragData[0].rgb + n*gl_FragData[0].a;
    gl_FragData[0].rgb = 
clamp(c, 0., gl_FragData[0].a);
min(c, gl_FragData[0].a);
    lowp vec4 S = gl_FragData[%d];
    lowp vec4 D = d%d;
    gl_FragData[%d] = R;
gl_FragData[0] = %s;
%08x %08x vertex shader:
%s%s---
%08x %08x fragment shader:
%s%s---
texture%d
color_lut
vertex_matrix
blend_color0
blend_color1
vertex_velocity_matrix
texmat0
texmat1
texmat2
texmatD
noise_scale
texmatW
colorP0
colorP1
colorP2
ycbcr_matrix0
ycbcr_matrix1
ycbcr_matrix2
ycbcr_bias0
ycbcr_bias1
ycbcr_bias2
chroma_matrix0
chroma_matrix1
chroma_matrix2
render_state
color_matrix
offset
weight
axis
divide
minmax
bgcolor
args
threshold
color_dodge
color_lighten
reversed
color_burn
color_darken
function_arg
GL_NO_ERROR
GL_INVALID_ENUM
GL_INVALID_VALUE
GL_INVALID_OPERATION
GL_STACK_OVERFLOW
GL_STACK_UNDERFLOW
GL_OUT_OF_MEMORY
GL_INVALID_FRAMEBUFFER_OPERATION;
vec4(0.)
S + D*(1. - S.a)
S*D.a
S*(1. - D.a)
S*D.a + D*(1. - S.a)
S*(1. - D.a) + D
D*S.a
D*(1. - S.a)
S*(1. - D.a) + D*S.a
S*(1. - D.a) + D*(1. - S.a)
S + D
D - S
S - D
S + D*(1 - S)
min(S, D)
max(S, D)
D.rgb*S.a + S.rgb*D.a
D.rgb*S.a + S.rgb*(D.a - 2.*D.rgb)
S + D;
R.a = min(1., R.a);
R.rgb = R.a - S.a - D.a + R.rgb
mixLin(D, blend_color0, S)
soverLin(blend_color0, D, S)
soverLinGray(blend_color0, D, S)
D*(1. - S.a) + S*(1. - D.a) + D*S
mix(2.*D.rgb*S.rgb, 2.*(S.rgb*D.a + D.rgb*(S.a - S.rgb)) - S.a*D.a, step(.5*D.a, D.rgb))
min(D.rgb*S.a, S.rgb*D.a)
max(D.rgb*S.a, S.rgb*D.a)
mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005), step(.005, S.a - S.rgb))
step(.005, S.rgb) * (D.a*S.a - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005))
2.*D.rgb*S.rgb - (D.rgb / max(D.a, .005))*D.rgb*(2.*S.rgb - S.a)
mix(2.*D.rgb*S.rgb, S.a*D.a - 2.*(D.a - D.rgb)*(S.a - S.rgb), step(.5*S.a, S.rgb))
abs(D.rgb*S.a - S.rgb*D.a)
S.rgb*D.a - D.rgb*S.a
S.rgb*D.a / max(D.rgb*S.a, .005)
D.rgb*S.a - D.a*(S.a - S.rgb)
D.rgb*S.a - D.a*(S.a - 2.*S.rgb)
mix(min(D.rgb*S.a, 2.*S.rgb*D.a), max(D.rgb*S.a, 2.*S.rgb*D.a - D.a*S.a), step(.5*S.a, S.rgb))
vibrantDark(S, D)
vibrantLight(S, D)
vibrantDarkReversed(S, D)
vibrantLightReversed(S, D)
darkenSover(S, D)
lightenSover(S, D)
setLum(setSat(S.rgb, sat(D.rgb)), lum(D.rgb))
setLum(setSat(D.rgb, sat(S.rgb)), lum(D.rgb))
setLum(S.rgb, lum(D.rgb))
setLum(D.rgb, lum(S.rgb))
color0
s0 / s0.a
color0 * s0
color0 * (s0 / s0.a)
color0 * s0 * s1.a
color0 * s0 * (1.0 - s1.a)
mix(s1, s0, color0.a)
mix(color0, s0, function_arg.x)
mix(color0 * s0.a, s0, function_arg.x)
mix(s1, s0, s2.a)
mix(s1, s0, clamp(s2.a*function_arg.x, 0., 1.))
color0 * s0.a
color0 * (1.0 - s0.a)
scaleAlpha(s0, color0, function_arg.x)
vec4(color0.rgb * color0.a, color0.a)
mix(s1, d0, s0.a)
mix(s1, s2, s0.a)
mixLin(s1, s2, vec4(s0.aaa, s0.a*s0.a))
mixLin(s1, s2, vec4(s0.rgb, s0.g*s0.g))
mixLin(s1, s2, vec4(s0.rgb, (s0.r + s0.g + s0.b) / 3.0))
precompLin(d0, color1, color0, vec4(s0.aaa, s0.a*s0.a))
precompLin(d0, color1, color0, vec4(s0.rgb, s0.g*s0.g))
precompLin(d0, color0, s1, vec4(s0.rgb, s0.g*s0.g))
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2], s0.a)
vec4(s0.r * color_matrix[0] + s0.g * color_matrix[1] + s0.b * color_matrix[2] + s0.a * color_matrix[3], s0.a)
colorMatrix4x4Bias(s0)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2], 1.)
vec4((s0.r / s0.a) * color_matrix[0] + (s0.g / s0.a) * color_matrix[1] + (s0.b / s0.a) * color_matrix[2] + color_matrix[3], 1.)
colorMatrix4x4BiasDivideAlpha(s0)
perlinBias(s0, function_arg.x)
vec4(color0.rgb + s0.rgb * (1.0 - color0.a), color0.a + s0.a * (1.0 - color0.a))
vibrantDark(s0, d0)
vibrantLight(s0, d0)
gl_FragData[0].aaaa
vertex_position
vertex_color0
vertex_color1
vertex_texcoord0
vertex_texcoord1
vertex_texcoord2
vertex_point_size
fill
unknown
axial
radial
butt
miter
targetId
target
CALayer
<CAStateTransitionElement target=<%@: %p> key=%@ %@>
T@"CALayer",W,N,V_target
Td,N
(cfobject %p)
"%s"
v8@?0L4
(emitter-behavior %s
(values 
position.x
position.y
position.z
velocity.x
velocity.y
velocity.z
color.red
color.green
color.blue
color.alpha
register_group
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/ogl/ogl-performance-hud.cpp
group_index < _num_groups
register_counter
counter_index < _num_counters
counter_type != kCounterTypeNone
set_limit
set_display_mode
set_peak_mode
set_global
to_string
buffer
%.2fms
%lld
0x%llx
<1%%
%lld%%
%.2fW
%lldmW
0 && "unsupported counter type!"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/ogl/ogl-debug-renderer.h
draw_graph2d
_history
(match-move-animation
(timingFunction 
(keyPath 
(sourceLayer 0x%lx)
(sourcePoints 
T@"<CALinearMaskLayerDelegate><CALayerDelegate>",W,D
(compressed-image [%d %d] [%d] %s
PVRTC_4
PVRTC_2
ASTC_4x4
ASTC_5x4
ASTC_5x5
ASTC_6x5
ASTC_6x6
ASTC_8x5
ASTC_8x6
ASTC_8x8
ASTC_10x5
ASTC_10x6
ASTC_10x8
ASTC_10x10
ASTC_12x10
ASTC_12x12
RGBA10XR
Gray8
bottom
topLeft
topRight
bottomLeft
bottomRight
resize
resizeAspect
resizeAspectFill
nearest
cubic
trilinear
lanczos
stretch
repeat
onOrderIn
onOrderOut
CALAYER_ALLOWS_EDGE_ANTIALIASING
CALayerAllowsEdgeAntialiasing
UIViewEdgeAntialiasing
CALAYER_ALLOWS_GROUP_OPACITY
CALayerAllowsGroupOpacity
UIViewGroupOpacity
CALayerInvalid
layer %@ is a part of cycle in its layer tree
-[CALayer _initWithReference:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/api/CALayer.mm
[layer isKindOfClass:[self class]]
position = CGPoint (%g %g); 
bounds = CGRect (%g %g; %g %g); 
delegate = %@; 
contents = %@; 
sublayers = (
%s%@
mask = %@; 
%s = %s; 
; animations = [
%@=%@
layer %@ has a superlayer; so cannot be added to a context
cannot add layer to one context while visible in another
%@ - changing property %@ in transform-only layer, will have no effect
CALayerReadOnly
attempting to modify read-only layer %@
CALayer bounds contains NaN: [%g %g; %g %g]
CALayerInvalidGeometry
CALayer position contains NaN: [%g %g]
CoreAnimation: zPosition should be within (-FLT_MAX, FLT_MAX) range.
%@ - calling -hitTest: on transform-only layer
may only -hitTest: a layer or its presentation layer
CALayerInvalidTree
expecting model layer not copy: %@
replaced layer %@ is not a sublayer of %@
actions
-[%@ display]: Ignoring bogus layer size (%f, %f), contentsScale %f, backing store size (%f, %f)
onDraw
context
onLayout
zPosition
anchorPoint
anchorPointZ
T{CATransform3D=ffffffffffffffff}
hidden
TB,GisHidden
doubleSided
TB,GisDoubleSided
TB,GisGeometryFlipped
superlayer
T@"CALayer",R
T@"CALayer",&
masksToBounds
contentsGravity
contentsCenter
contentsFormat
TB,GisOpaque
needsDisplayOnBoundsChange
drawsAsynchronously
edgeAntialiasingMask
allowsEdgeAntialiasing
backgroundColor
cornerRadius
borderWidth
borderColor
allowsGroupOpacity
compositingFilter
backgroundFilters
shouldRasterize
rasterizationScale
shadowColor
shadowOpacity
shadowOffset
shadowRadius
shadowPath
Tr^{CGPath=}
T@"<CALayerDelegate>",W
cornerContents must be a CGImageRef for now!
animations
[CALayer allowsContentsRectCornerMasking] is deprecated!
[CALayer setAllowsContentsRectCornerMasking:] is deprecated!
meshTransform
T@"CAMeshTransform",C
needsLayoutOnGeometryChange
canDrawConcurrently
acceleratesDrawing
TB,GisFrozen
allowsHitTesting
hitTestsAsOpaque
clearsContext
contentsOpaque
contentsContainsSubtitles
allowsContentsRectCornerMasking
literalContentsCenter
contentsScaling
T{CGAffineTransform=ffffff}
contentsDither
contentsMultiplyColor
invertsShadow
shadowPathIsBounds
cornerContents
cornerContentsCenter
cornerContentsMasksEdges
maskedCorners
motionBlurAmount
sortsSublayers
preloadsCache
rasterizationPrefersDisplayCompositing
allowsGroupBlending
sizeRequisition
backgroundColorPhase
behaviors
velocityStretch
momentOfInertia
coefficientOfRestitution
wantsExtendedDynamicRangeContent
CALayerAnimations
CALayerAnimationKeys
%s (CALayer)
unable to decode object of type %d
CoreAnimation: serialization error from context %x
CoreAnimation: unhandled combiner function: %d
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
CAImageQueue
(image-queue%s%s%s
 async
 protected
 changed
(generation 0x%08x)
(rotationFlags %d)
(samples
iosurface
unconsumed
displayed
consumed
flushed
(0x%llx %s [%d %d; rot %d] %f (generation 0x%08x) %s%s%s)
 opaque
 flipped
CA_LOG_IMAGE_QUEUE_FRAMES
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx)
<CAImageQueue %p>
portrait
portraitUpsideDown
landscapeLeft
landscapeRight
NTSC_M
PAL_BGHID
composite
component
digital
captureDisplay
disableScaling
disableRotation
disableOverscan
disableYUV
replayContexts
noReplayScaling
kCADisplayName
kCADisplayDeviceName
kCADisplayId
kCADisplayFrameCount
kCADisplaySkippedFrameCount
kCADisplayClonedFrameCount
kCADisplaySkippedClonedFrameCount
contextId
hostProcessId
hostContextId
disableUpdatesOnMainDisplay
B8@?0@"CAWindowServerDisplay"4
[CAWindowServer setSecure:] is deprecated! Please call setSecure: on the specific CAWindowServerDisplay!
[CAWindowServer isSecure] is deprecated! Please call isSecure on the specific CAWindowServerDisplay!
<CAWindowServer:%p %@>
displays
T@"NSArray",R
mirroringEnabled
TB,GisMirroringEnabled,V_mirroringEnabled
rendererFlags
TB,GisSecure
CAWindowServerDisplay
%@: can't clone a display to nil
%@: can't clone a display to itself
%@: can't clone a display that's a clone
%@: %@ is already a clone
clones
cloneMaster
%@: can't remove a nil clone display
%@: %@ is not our clone
[CAWindowServerDisplay setOverscanAmount:] is deprecated. Please use -setOverscanAmounts:!
[CAWindowServerDisplay overscanAmount] is deprecated. Please use -overscanAmounts!
[CAWindowServerDisplay overscanAmount] - horizontal and vertical overscan amounts are not equal!
[CAWindowServerDisplay setMinimumRefreshRate:] is deprecated!
[CAWindowServerDisplay minimumRefreshRate] is deprecated!
[CAWindowServerDisplay setMaximumRefreshRate:] is deprecated!
[CAWindowServerDisplay maximumRefreshRate] is deprecated!
[CAWindowServerDisplay setIdealRefreshRate:] is deprecated!
[CAWindowServerDisplay idealRefreshRate] is deprecated!
[CAWindowServerDisplay setUsesPreferredModeRefreshRate:] is deprecated!
[CAWindowServerDisplay usesPreferredModeRefreshRate] is deprecated!
CoreAnimation: [CAWindowServerDisplay setColorMode:] is deprecated!
[CAWindowServerDisplay allowsVirtualModes] is deprecated!
[CAWindowServerDisplay setAllowsVirtualModes:] is deprecated!
%@: setTVMode: is deprecated!
%@: TVMode is deprecated!
%@: Ignoring call to setTVSignalType: in simulator.
<CAWindowServerDisplay:%p %@ %gx%g>
T@"NSSet",R
T@"CAWindowServerDisplay",R
blanked
TB,GisBlanked
orientation
invertsColors
grayscale
TB,GisGrayscale
contrast
maximumBrightness
idealRefreshRate
usesPreferredModeRefreshRate
TVMode
TVSignalType
disablesUpdates
disabled
CA_CLONE_DISPLAY
CA_MAIN_DISPLAY_SCALE
CA_EXTERNAL_DISPLAY_SCALE
Type `%s' has no property setter
source
T@"CAStateElement",&,N,V_source
CAForceFieldName
CAForceFieldEnabled
CAForceFieldLayer
CAForceFieldFunction
function
CAValueFunction
T@"CAValueFunction",&
non-zero
absolute
relative
discrete
paced
cubicPaced
autoReverse
fade
moveIn
push
reveal
fromRight
fromLeft
fromTop
fromBottom
timingFunction
T@"CAMediaTimingFunction",&
T@"<CAAnimationDelegate>",&
removedOnCompletion
TB,GisRemovedOnCompletion
beginTimeMode
discretizesTime
TB,GisAdditive
cumulative
TB,GisCumulative
valueFunction
fromValue
toValue
byValue
roundsToInteger
startAngle
endAngle
values
keyTimes
timingFunctions
calculationMode
tensionValues
continuityValues
biasValues
rotationMode
CoreAnimation: mass must be greater than 0.
CoreAnimation: stiffness must be greater than 0.
CoreAnimation: damping must be greater than or equal to 0.
stiffness
damping
initialVelocity
settlingDuration
sourceLayer
T@"CALayer",W
targetsSuperlayer
sourcePoints
appliesX
appliesY
appliesScale
appliesRotation
subtype
startProgress
endProgress
options
transitionFlags
CAAnimationImmutable
attempting to modify read-only animation %@
unknown animation calculation mode: %@
~Server
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/windowserver/windowserver-server.cpp
_shutdown_called
CoreAnimation: updates deferred for too long
PerfWarnings
PerfTimeThreshold
PerfInputDelayThreshold
PerfOffscreenThreshold
WarningTime
UpdateTime
UpdateInputTime
UpdateInputDelay
UpdateCreationTime
UpdateRenderTime
UpdatePrepareLayerCount
UpdatePrepareLayer0Count
RenderOffscreenPasses
RenderShaderCompiles
LayerTree
com.apple.CoreAnimation.CAWindowServer.Performance
%s display%s:
  %x: level %g; pid %d [%s]%s%s
== context %x; level %g; pid %d [%s] %sat time %f ==
Server: %s
CoreAnimation: timed out freeze semaphore
** Render #%d tree at time %f **
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%d %d %d %d) (%g %g %g %g))
(normal %d (%g %g %g))
CADisplayTimer
<CADisplayTimer %p>
even-odd
fillRule
strokeColor
strokeStart
strokeEnd
lineWidth
miterLimit
lineCap
lineJoin
lineDashPhase
lineDashPattern
(surface %x [%d %d] 
(beginTime %f)
(duration %f)
(autoreverses true)
(fillMode %s)
(speed %f)
(timeOffset %f)
(%s %f)
kCADebugOptionsDidChange
CA_COLOR_FLUSH
CA_COLOR_COPY
CA_COLOR_OPAQUE
CA_COLOR_NO_WAIT
CA_AUTO_FLUSH
CA_PRINT_TREE
CA_PRINT_OBJECTS
CA_LOG_IMPLICIT_TRANSACTIONS
CA_LOG_MEMORY_USAGE
CA_LOG_IMAGE_COPIES
CA_PRINT_PERF
CA_DISABLE_OCCLUSION_CULLING
CA_DISABLE_DIRTY_REGIONS
CA_LOG_TRIPLE_BUFFERING
CA_COLOR_SUBPIXEL
CA_DISABLE_RENDER
CA_ALWAYS_RENDER
CA_COLOR_OFFSCREEN
CA_COLOR_DETACHED
CA_COLOR_CACHED
CA_DISABLE_DETACHED
CA_PRINT_ANIMATIONS
CA_COLOR_MATCHED
CA_COLOR_UNTAGGED
CA_PRINT_BACKDROPS
CA_COLOR_BACKDROPS
CA_PRINT_SHADERS
CA_PRINT_OFFSCREENS
CA_DUMP_SURFACES_PER_DRAW
CA_DISABLE_COLORMATCH_UNTAGGED
CA_VSYNC_SIGNPOST
CA_PERF_HUD
CA_DISABLE_LOW_LATENCY
CA_COLOR_ACTIVE_REGIONS
CA_DUMP_SURFACES
CA_IQ_INTERPOLATION
%d transactions
; %d %s (%.3gs duration, %.3gfps frame rate, %.3g %s, %.2gs gap)
frames
pass
passes
; %d cache miss%s
; %.3g MP area
; %.3g MP drawn (%.3g overdraw)
; %.3g MB uploaded
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
inheritsSecurity
(distance-field-layer
inner-stroke
outer-stroke
(renderMode %s)
(invertsShape true)
(offset %g)
(sharpness %g)
instanceCount
instanceDelay
instanceTransform
instanceColor
instanceRedOffset
instanceGreenOffset
instanceBlueOffset
instanceAlphaOffset
90cw
90ccw
180cw
180ccw
fontSmoothingStyle
%@ = 
%llu
CGPoint (%g %g)
CGSize (%g %g)
CADoublePoint (%g %g)
CADoubleSize (%g %g)
CADoubleRect (%g %g; %g %g)
CGRect (%g %g; %g %g)
CAPoint3D (%g %g %g)
CGAffineTransform (%g %g; %g %g; %g %g)
CATransform3D (%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g)
<undefined>
hw.cpu64bit_capable
com.apple.coreanimation-archive
com.apple.coreanimation-bundle
com.apple.coreanimation-xml
publishedObjects
assets
stylesDocument
publishedObjectNames
TB,R,GisGeometryFlipped
LKState
LKStateAddAnimation
LKStateAddElement
LKStateElement
LKStateRemoveAnimation
LKStateRemoveElement
LKStateSetValue
LKStateSetProperty
LKStateTransition
LKStateTransitionElement
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
    [%d %d; %d x %d]
  applying %d merged group filters (lst %p)
(vector
 %.10g
disableActions
animationDuration
animationTimingFunction
animationDelegate
commitTime
completionBlock
animatesFromModelValues
@"CAAnimation"12@?0@"CALayer"4@"NSString"8
CATransactionInvalidThread
May not mark the main thread as a background transaction
+[CATransaction synchronize] called within transaction
setAnimationDuration:
setAnimationTimingFunction:
setCompletionBlock:
setDisableActions:
setAnimatesFromModelValues:
setCommitTime:
setDisableRunLoopObserverCommits:
disableRunLoopObserverCommits
setInputTime:
setLowLatency:
(frameInterval %f)
(discretizesTime true)
(additive true)
(cumulative true)
(removedOnCompletion false)
(from 
(to 
(by 
linearPaced
(calculationMode %s)
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(velocity %g)
type1
time
redAverage
greenAverage
blueAverage
luminanceStandardDeviation
groupName
backdropRect
marginWidth
disablesOccludedBackdropBlurs
captureOnly
statisticsType
statisticsInterval
T@"<CABackdropLayerDelegate><CALayerDelegate>",W,D
invertsShape
sharpness
wave
alignToMotion
valueOverLife
colorOverLife
light
attractor
simpleAttractor
enablde
behavior
CAEmitterBehavior requires `behavior' attribute
(array
CoreAnimation: failed to send fence reply: %x
CoreAnimation: timed out fence %x
CoreAnimation: attempt to check-in to unknown fence port: %x
CoreAnimation: failed to receive fence reply: %x
CASpringName
CASpringEnabled
CASpringLayerA
CASpringLayerB
CASpringAttachmentPointA
CASpringAttachmentPointB
CASpringFunction
CASpringDelegate
CASpringStiffness
CASpringDamping
CASpringRestLength
attachmentPointA
attachmentPointB
restLength
layerA
layerB
T@"<CASpringDelegate>",W
cameraIris
cameraIrisHollowOpen
cameraIrisHollowClose
<?xml version="1.0" encoding="UTF-8"?>
 %S="%S"%s
<%S%s
</%S>
T@"<CAMLWriterDelegate>",W
matrix(%@)
CGImageSource
NSValue
perspective(%g) 
translate(%g, %g, %g) 
rotate(%gdeg) 
rotate(%gdeg, 0, 1, 0) 
rotate(%gdeg, 1, 0, 0) 
shearYZ(%gdeg) 
shearXZ(%gdeg) 
shearXY(%gdeg) 
scale(%g) 
scale(%g, %g, %g) 
xmlns
&amp;
&lt;
&gt;
&quot;
&apos;
%@ %c
unhandled getter type: %d
unhandled setter type: %d
__CACodingContents
sublayers array %@ contains non-layer %@
[%@ initWithCoder]: ignoring exception %@
CADoublePoint
CADoubleSize
CADoubleRect
origin
origin.x
origin.y
size.width
size.height
rotation.z
rotation.x
rotation.y
scale.xy
scale.x
scale.y
scale.z
translation
translation.x
translation.y
translation.z
CA_LOG_CLASS_DESCRIPTIONS
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
classDescription_locked
/BuildRoot/Library/Caches/com.apple.xbs/Sources/QuartzCore_Sim/QuartzCore-453.34/LayerKit/api/CAObject.mm
info != NULL
v@:^v
^v@:
v@:@
v@:@?
@?@:
v@:B
v@:c
v@:C
v@:s
v@:S
v@:i
v@:I
v@:l
v@:L
v@:q
v@:Q
v@:f
v@:d
v@:{CGPoint=ff}
{CGPoint=ff}@:
v@:{CGSize=ff}
{CGSize=ff}@:
v@:{CGRect={CGPoint=ff}{CGSize=ff}}
{CGRect={CGPoint=ff}{CGSize=ff}}@:
v@:{CATransform3D=ffffffffffffffff}
{CATransform3D=ffffffffffffffff}@:
v@:{CGAffineTransform=ffffff}
{CGAffineTransform=ffffff}@:
v@:{CAPoint3D=fff}
{CAPoint3D=fff}@:
v@:{CADoublePoint=dd}
{CADoublePoint=dd}@:
v@:{CADoubleSize=dd}
{CADoubleSize=dd}@:
v@:{CADoubleRect={CADoublePoint=dd}{CADoubleSize=dd}}
{CADoubleRect={CADoublePoint=dd}{CADoubleSize=dd}}@:
UIApplicationDidEnterBackgroundNotification
suckEffect
(proxy %d 0x%llx)
port_name
port_number
client_port_number
displayName
definesDisplayBounds
displayFilter
bitsPerComponentHint
TI,R,D
T@"CALayer",&,D
colorSpace
T^{CGColorSpace=},D
colorMatchUntaggedContent
TB,D
T@"NSString",C,D
T@"NSDictionary",R,D
level
Tf,D
TB,D,GisSecure
valid
TB,R,D
CoreAnimation: [CAContext setFence:count:] is deprecated. Ignoring!
(pattern [%g %g %g %g] [%g %g]
(cell 
colors
locations
startPoint
endPoint
colorMap
trying to read state of nil layer.
trying to set state of nil layer.
trying to set state not in given layer.
"%@" "%@"
T@"NSObject<CAStateControllerDelegate>",W
rippleEffect
rgb(
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
kCARendererColorSpace
kCARendererDeepBuffers
kCARendererFlags
T@"CAContext",&
T@"<CARendererDelegate>",W
<nil>
@UUUUUU
?ffffff
vH7B
W4vC
9Y>)F$
MbP?-C
]r2<
 9^;Q
ARGB
555Lyuv2svuy
800A800LABGR
AhGRAfGR
80AL
1555r46l
61C2h0C2
k01rr03wa04w8a3b
FZ*+@t%6?t%6
ffffff
@ffffff
@ffffff
5@ffffff
Mb`?
?Z*+
;?t%6
5@t%6?6L
)c|@
='F=<
{V>3+
?333333
@+z4@
MbP?
33s?
"@B{
?UUUUUU
?UUUUUU
C333@ffffff
veTD6* 
udSD6* 
ucSD6* 
tcRC6*
sbRC5)
raQB4)
p`PA4(
~n^N@3'
{k[L>1&
vgXI;/%
qbTF9-#
xj\OB5+!
|pcVI=2(
|rf[OC8.$
xpf\RG=2)!
~{vqjc[RH?6-$
vuutsrpnkgb\VOG?7/' 
edccba`^[XTOIC=6/(!
TSSRRQPNLIFB=82-'!
DDDCCBA@>;952.)$ 
666654431/-+($!
****))('&%#!

uX='
|eL5"
ueR>+
mljgaXL>/!
LKJHC=5+!
00/-+'"
\YO;"
#{2i
<dsH3fQ
XUb)
Z%R3.
jN2]
0q%Z
b%alC]
_Fw~
\XU8*N
|H*;
Z'ue89
^_H1
o)p_j
PM\T
KXSl(^A
CVI1
$LWLc
}BCu
xGnHu
LSn2
=&FJ
s0.ot
W ^ ]
)PXHw
Oy2^
d>#~!
yDBi
j%^G~
6Lq;j~Q{2Q
[]Hk
K+:A
57yK
Cfq*L
JS.d
8Op(PLZr
(7j?
-NgkpWj
^TQ`
+!dS
Z3|{g(
2`1"L4D
'c`c^
AV!b
"{!$
mgJ0
(E%Hq9
Flb5xI
oz|iK
4abUN
Aj?k
|<1L
f =b
;iS1q
,~Q)
q|yuw
juW9
m>[#
+yM_
OWvg{
cC#b
6IWpg
8Q`
"&Vu
eC5,
8 So"
+oCfD
]!ij
+X^>&F}%
=:W1v;
V"w
g[\*
o:V[
SpHx)L
t'Ze
21wC#K
OLuf
4!@Eik\
[Vi=
S7y=
.Ujv2W
LR7/3
pnxaV 
^<Ign%
GCSK
~UKy
p,ml)DE
DE?x
WJ~g
es-8R
?^8U)zj
Q1~:7
GA?33
>33s
?nil
array
backdrop-group
backdrop-layer
backdrop-state
basic-animation
cf-object
compressed-image
context
distance-field-layer
dynamics-behavior
emitter-behavior
emitter-cell
emitter-layer
emitter-state
filter
force-field
function
gradient-layer
group-animation
handle
image
image-provider
image-queue
interpolator
keyframe-animation
key-value
layer
layer-host
match-move-animation
mesh-transform
path
pattern
pixel-buffer
plugin-layer
proxy
proxy-layer
replicator-layer
shape-image
shape-layer
shmem
spring
spring-animation
string
subpixel-mask-layer
surface
timing
transition
transition-animation
vector
ffffff
Mb0?
~}|{zyxwutsrqponmljihgfedcba`_^\[ZYXWVUTSRQPONMLKJIHHGFEDCBA@?>==<;:9887654332100/.--,++*)(('&&%$$##"!!  

 $'*-0257:<>@BDFGIKMNPQSTVWYZ\]^`abdefgijklmopqrstuvwyz{|}~
@Q1~
?UUUUUU
?UUUUUU
xyzw
DDDD
lowp vec4 mixLin(lowp vec4 D, lowp vec4 S, lowp vec4 M) {
  D.rgb = D.rgb / max(D.a, .005);
  D.rgb = D.rgb*D.rgb;
  S.rgb = S.rgb / max(S.a, .005);
  S.rgb = S.rgb*S.rgb;
  lowp vec4 R = mix(D, S, M);
  R.rgb = sqrt(max(R.rgb, 0.))*R.a;
  return R;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  return vibrantLightenSover(s0 * blend_color1,
                             vibrantColorDodge(s0 * blend_color0, d0));
lowp vec4 vibrantDarkReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorDodge(s0 * blend_color0,
                           vibrantLightenSover(s0 * blend_color1, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  return vibrantDarkenSover(s0 * blend_color1,
                            vibrantColorBurn(s0 * blend_color0, d0));
lowp vec4 vibrantLightReversed(lowp vec4 s0, lowp vec4 d0) {
  return vibrantColorBurn(s0 * blend_color0,
                          vibrantDarkenSover(s0 * blend_color1, d0));
lowp vec3 colorSort(lowp vec3 c) {
  lowp vec3 cs = (c.r > c.g) ? c : c.grb;
  cs = (cs.g > cs.b) ? cs : cs.rbg;
  cs = (cs.r > cs.g) ? cs : cs.grb;
  return cs;
lowp float lum(lowp vec3 c) {
  return dot(c, vec3(0.3, 0.59, 0.11));
lowp vec3 clipColor(lowp vec3 c) {
  lowp float l = lum(c);
  lowp vec3 cs = colorSort(c);
  c = cs.b < 0.0 ? l + (c - l) * (l / (l - cs.b)) : c;
  c = cs.r > 1.0 ? l + (c - l) * ((1.0 - l) / (cs.r - l)) : c;
  return c;
lowp vec3 setLum(lowp vec3 c, lowp float l) {
  lowp float d = l - lum(c);
  return clipColor(c + d);
lowp float sat(lowp vec3 c) {
  lowp vec3 cs = colorSort(c);
  return cs.r - cs.b;
lowp vec3 setSat(lowp vec3 c, lowp float s) {
  lowp vec3 cs = colorSort(c);
  lowp vec3 fmax = cs.r == c.r ? vec3(1.,0.,0.) :    cs.r == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = c - fmax * c;
  lowp vec3 fmid = cs.g == c.r ? vec3(1.,0.,0.) :    cs.g == c.g ? vec3(0.,1.,0.) : vec3(0.,0.,1.);
  c = cs.r > cs.b ? fmax * s + fmid * ((cs.g - cs.b) * s / (cs.r - cs.b)) :    vec3(0.0);
  return c;
lowp vec4 scaleAlpha(lowp vec4 s, lowp vec4 c, lowp float x) {
  c = c * s.a * x;
  c.rgb = clamp (c.rgb, 0., c.a);
  return c;
lowp vec4 precompLin(lowp vec4 d, lowp vec4 b, lowp vec4 S, lowp vec4 M) {
  lowp vec4 D = d + b * (1. - d.a);
  R = mixLin(D, R, M);
  lowp float x = max(max(M.r, M.g), M.b);
  R = max(R - D * (1. - x), 0.);
  R = R + d * (1. - R.a);
  return R;
lowp vec4 colorMatrix4x4Bias(lowp vec4 s) {
  s.rgb = s.rgb / max(s.a, .005);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + s.a * color_matrix[3]
    + color_matrix[4];
  s.rgb = s.rgb * s.a;
  return s;
lowp vec4 colorMatrix4x4BiasDivideAlpha(lowp vec4 s) {
  s = vec4(s.rgb / s.a, 1.0);
  s = s.r * color_matrix[0] + s.g * color_matrix[1]
    + s.b * color_matrix[2] + color_matrix[3]
    + color_matrix[4];
  return s;
lowp vec4 perlinBias(lowp vec4 s, lowp float a) {
  s.rgb = s.rgb / (a * (s.a - s.rgb) + s.a);
  return s;
lowp vec4 vibrantLightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorDodge(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  R.rgb += mix(S.aaa, D.rgb*S.a*S.a/max(S.a - S.rgb, .005),
               step(.005, S.a - S.rgb));
  R.a += D.a*S.a;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantDark(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorDodge(s0 * color_dodge,
                               vibrantLightenSover(s0 * color_lighten, d0));
  else
    return vibrantLightenSover(s0 * color_lighten,
                               vibrantColorDodge(s0 * color_dodge, d0));
lowp vec4 vibrantDarkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 vibrantColorBurn(lowp vec4 S, lowp vec4 D) {
  lowp vec4 R = D*(1. - S.a) + S*(1. - D.a);
  lowp float dasa = D.a*S.a;
  R.rgb += step(.005, S.rgb)
           * (dasa - S.a*S.a*(D.a - D.rgb)/max(S.rgb, .005));
  R.a += dasa;
  R.rgb = clamp(R.rgb, 0.0, R.a);
  return R;
lowp vec4 vibrantLight(lowp vec4 s0, lowp vec4 d0) {
  if (reversed != 0.0)
    return vibrantColorBurn(s0 * color_burn,
                              vibrantDarkenSover(s0 * color_darken, d0));
  else
    return vibrantDarkenSover(s0 * color_darken,
                              vibrantColorBurn(s0 * color_burn, d0));
lowp vec4 soverLin(lowp vec4 S, lowp vec4 D, lowp vec4 M) {
  S = S + D*(1. - S.a);
  return mixLin(D, S, M);
lowp vec4 soverLinGray(lowp vec4 S, lowp vec4 D, lowp vec4 M) {
  S = S*M.a*M.a;
  return S + D*(1. - S.a);
lowp vec4 darkenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
lowp vec4 lightenSover(lowp vec4 S, lowp vec4 D) {
  lowp float y = 1. - dot(D.rgb, vec3(.2125, .7154, .0721));
  S = S * (y * y) * (y * y);
  return D*(1. - S.a) + S;
    mediump float ll = dot(velocity, velocity);
    mediump float rl = inversesqrt(max(ll, 1e-4));
    lowp vec4 mv = vec4(velocity*rl*.5+.5, min(ll*rl*.004, 1.), 1.);
    gl_FragData[1] = mv * gl_FragData[0].a;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
void main () {
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec3 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
void main () {
  lowp vec4 q0, q1, q2, q3, q4, q5;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  acc = (q2 + q3) * weight.x;
  acc = (q1 + q4) * weight.y + acc;
  acc = (q0 + q5) * weight.z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform highp vec4 texmat0;
uniform highp vec2 axis;
varying highp vec2 texcoord0;
void main () {
  highp vec2 d = texcoord0;
  highp vec2 c = mix(d, floor(d), axis);
  highp float x = dot(floor(d) - d, axis) + 1.0;
  highp float y = 1.0 - x;
  highp vec4 xy = vec4(x, y, x, y);
  highp vec4 w = vec4(-0.29216512, -0.41086841, -0.41086841, -0.29216512);
  w = w*xy + vec4(1.02524562, 0.78286595, 0.78286595, 1.02524562);
  w = w*xy + vec4(-0.52422910, 1.04059357, 1.04059357, -0.52422910);
  w = w*xy + vec4(-0.20885140, -2.41189213, -2.41189213, -0.20885140);
  w = w*xy*xy + vec4(0.0, 1.0, 1.0, 0.0);
  mediump vec4 weight = w;
  highp vec2 p = c * texmat0.xy + texmat0.zw;
  highp vec2 pdelta = axis * texmat0.xy;
  lowp vec4 q0, q1, q2, q3;
  mediump vec4 acc;
  q0 = texture2DRect(texture0, p - 0.5*pdelta);
  q1 = texture2DRect(texture0, p + 0.5*pdelta);
  q2 = texture2DRect(texture0, p + 1.5*pdelta);
  q3 = texture2DRect(texture0, p + 2.5*pdelta);
  acc = q0 * weight.x;
  acc = q1 * weight.y + acc;
  acc = q2 * weight.z + acc;
  acc = q3 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  mediump vec4 acc;
  acc = q3 * weight.x;
  acc = q2 * weight.y + acc;
  acc = q4 * weight.y + acc;
  acc = q1 * weight.z + acc;
  acc = q5 * weight.z + acc;
  acc = q0 * weight.w + acc;
  acc = q6 * weight.w + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  mediump vec4 acc;
  acc = q6 * weight[0].x;
  acc = q5 * weight[0].y + acc;
  acc = q7 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q8 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q9 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q10 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q11 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q12 * weight[1].z + acc;
  gl_FragData[0] = acc;
uniform lowp sampler2D texture0;
uniform highp vec2 offset[8];
varying highp vec2 texcoord0;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7;
  q0 = texture2D(texture0, texcoord0 + offset[0]);
  q1 = texture2D(texture0, texcoord0 + offset[3]);
  q2 = texture2D(texture0, texcoord0 + offset[5]);
  q3 = texture2D(texture0, texcoord0 + offset[6]);
  q4 = texture2D(texture0, texcoord0 - offset[0]);
  q5 = texture2D(texture0, texcoord0 - offset[3]);
  q6 = texture2D(texture0, texcoord0 - offset[5]);
  q7 = texture2D(texture0, texcoord0 - offset[6]);
  mediump vec4 acc;
  acc = q0;
  acc += q1;
  acc += q2;
  acc += q3;
  acc += q4;
  acc += q5;
  acc += q6;
  acc += q7;
  acc *= 1.0/8.0;
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q5, q6, q7, q8;
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q4, q5, q6, q7, q8, q9;
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q3, q4, q5, q6, q7, q8, q9, q10;
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q2, q3, q4, q5, q6, q7, q8, q9, q10, q11;
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12;
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
uniform lowp sampler2DRect texture0;
uniform mediump vec4 weight[2];
uniform lowp float divide;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
void main() {
  lowp vec4 q0, q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  q5 = texture2DRect(texture0, texcoord5);
  q6 = texture2DRect(texture0, texcoord6);
  q7 = texture2DRect(texture0, texcoord7);
  q8 = texture2DRect(texture0, texcoord8);
  q9 = texture2DRect(texture0, texcoord9);
  q10 = texture2DRect(texture0, texcoord10);
  q11 = texture2DRect(texture0, texcoord11);
  q12 = texture2DRect(texture0, texcoord12);
  q13 = texture2DRect(texture0, texcoord13);
  highp vec4 acc;
  acc = q6 * weight[0].x;
  acc = q7 * weight[0].x + acc;
  acc = q5 * weight[0].y + acc;
  acc = q8 * weight[0].y + acc;
  acc = q4 * weight[0].z + acc;
  acc = q9 * weight[0].z + acc;
  acc = q3 * weight[0].w + acc;
  acc = q10 * weight[0].w + acc;
  acc = q2 * weight[1].x + acc;
  acc = q11 * weight[1].x + acc;
  acc = q1 * weight[1].y + acc;
  acc = q12 * weight[1].y + acc;
  acc = q0 * weight[1].z + acc;
  acc = q13 * weight[1].z + acc;
  if (divide != 0.0)
    acc /= max(0.001, acc.a);
  gl_FragData[0] = acc;
const int samples = MOTION_BLUR_SAMPLES;
uniform highp vec4 texmat0;
uniform lowp sampler2DRect texture0;
uniform lowp sampler2DRect texture1;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  lowp vec4 mv = texture2DRect(texture1, texcoord0_0);
  mv.xyz /= max(mv.w, .005);
  if (!(mv.z > 0.)) {
    gl_FragData[0] = texture2DRect(texture0, texcoord0_0);
    return;
  highp vec2 v = 250. * mv.z * (2. * mv.xy - 1.) * texmat0.xy;
  highp vec2 texcoord_lo = texcoord0_0 - v * .5;
  mediump vec4 acc = vec4(0.);
  for (int i = 0; i < samples; i++)
    acc = texture2DRect(texture0, texcoord_lo + v * (float(i)/float(samples))) + acc;
  gl_FragData[0] = acc / float(samples) * color0;
uniform lowp sampler2DRect texture0;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  lowp vec4 p = texture2DRect(texture0, texcoord0_0);
  p = texcoord0_0.x < minmax.x || texcoord0_0.x > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color0;
uniform lowp sampler2DRect texture0;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
uniform highp vec3 map;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  highp float t = dot(texcoord0_0, texcoord0_0);
  t = t * inversesqrt(t + 1e-6) * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(t, map.z));
  p = t < minmax.x || t > minmax.y ? bgcolor : p;
  gl_FragData[0] = p * color0;
uniform lowp sampler2DRect texture0;
uniform highp vec2 minmax;
uniform lowp vec4 bgcolor;
uniform highp vec4 map;
uniform highp vec2 dir;
uniform highp vec4 args;
varying highp vec2 texcoord0_0;
varying lowp vec4 color0;
void main() {
  highp float frag_l_sq = dot(texcoord0_0, texcoord0_0);
  highp float r = args.x;
  highp float r_sq = r * r;
  highp float r_sgn = args.y;
  highp float dir_l = args.z;
  highp float dir_l_sq = dir_l * dir_l;
  highp float t_denom = args.w;
  highp float par_l = dot(texcoord0_0, dir);
  highp float t;
  highp float in_b;
  if (map.w != 0.0) {
    t = (frag_l_sq - r_sq) / (2.0 * (r + par_l));
    in_b = step(minmax.x, t) - step(minmax.y, t);
    in_b *= step(-r_sgn * r, r_sgn * t);
  } else {
    highp float perp_l_sq = frag_l_sq - par_l * par_l;
    highp float d = frag_l_sq + dir_l_sq * (r_sq - perp_l_sq) +                    2.0 * par_l * dir_l * r;
    highp float d_m = step(0.0, d);
    highp float sqrt_d = sqrt(d * d_m);
    highp float b = par_l * dir_l + r;
    highp float t1 = (b - sqrt_d) * t_denom;
    highp float t2 = (b + sqrt_d) * t_denom;
    highp float t1_v = step(minmax.x, t1) - step(minmax.y, t1);
    highp float t2_v = step(minmax.x, t2) - step(minmax.y, t2);
    t1_v *= step(-r_sgn * r, r_sgn * t1);
    t2_v *= step(-r_sgn * r, r_sgn * t2);
    in_b = step(0.5, t1_v + t2_v) * d_m;
    t = mix(t1 * t1_v + t2 * t2_v, max(t1, t2), step(1.5, t1_v + t2_v));
  t = t * map.x + map.y;
  lowp vec4 p = texture2DRect(texture0, vec2(t, map.z));
  gl_FragData[0] = mix(bgcolor, p, in_b) * color0;
uniform lowp sampler2DRect texture0;
uniform float threshold;
varying highp vec2 texcoord0;
varying highp vec2 texcoord1;
varying highp vec2 texcoord2;
varying highp vec2 texcoord3;
varying highp vec2 texcoord4;
void main() {
  lowp vec4 q0, q1, q2, q3, q4;
  q0 = texture2DRect(texture0, texcoord0);
  q1 = texture2DRect(texture0, texcoord1);
  q2 = texture2DRect(texture0, texcoord2);
  q3 = texture2DRect(texture0, texcoord3);
  q4 = texture2DRect(texture0, texcoord4);
  if (!(q0.a < threshold)) {
    gl_FragData[0] = vec4(0.);
  } else {
    lowp float max_a = max(max(q1.a, q2.a), max(q3.a, q4.a));
    gl_FragData[0] = vec4(step(threshold, max_a));
lowp vec2 radialCoord(highp vec2 uv) {
  highp float t = dot(uv, uv) + 1e-6;
  return vec2(t * inversesqrt(t), .5);
lowp vec4 squareImage(mediump vec2 uv) {
  mediump vec2 d, w, s;
  w = max(fwidth(uv), 1e-4);
  s = clamp((w * .5 + (1. - abs(uv))) / w, 0., 1.);
  mediump float l = s.x * s.y;
  return vec4(l);
lowp vec4 circleImage(mediump vec2 uv) {
  mediump vec2 dudv; mediump float d, w, s;
  d = max(dot(uv, uv), 1e-4);
  d = d * inversesqrt(d);
  dudv = max(fwidth(uv), 1e-4);
  w = max(dudv.x, dudv.y);
  mediump float l = clamp((w * .5 + (1. - d)) / w, 0., 1.);
  return vec4(l);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/fwidth(d);
  return vec4(clamp(e+.5, 0., 1.));
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump float e = (render_state.z - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  return vec4((e * -2. + 3.) * e * e);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/fwidth(d);
  e = clamp(e+.5, 0., 1.);
  return vec4((1. - e.x) * e.y);
lowp vec4 renderImage(mediump float d) {
  d = d*render_state.x;
  mediump vec2 e = (render_state.zw - d)/render_state.y;
  e = clamp(e+.5, 0., 1.);
  e = (e * -2. + 3.) * e * e;
  return vec4((1. - e.x) * e.y);
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
uniform highp vec2 offset[4];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 + offset[0] * texmat0.xy;
  texcoord1 = t0 + offset[1] * texmat0.xy;
  texcoord2 = t0 + offset[2] * texmat0.xy;
  texcoord3 = t0 + offset[3] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2;
varying highp vec2 texcoord3, texcoord4, texcoord5;
uniform highp vec2 offset[3];
void main () {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0 + offset[0] * texmat0.xy;
  texcoord4 = t0 + offset[1] * texmat0.xy;
  texcoord5 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec2 axis;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0;
void main () {
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = vertex_texcoord0 - 0.5 * axis;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6;
uniform highp vec2 offset[3];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[2] * texmat0.xy;
  texcoord1 = t0 - offset[1] * texmat0.xy;
  texcoord2 = t0 - offset[0] * texmat0.xy;
  texcoord3 = t0;
  texcoord4 = t0 + offset[0] * texmat0.xy;
  texcoord5 = t0 + offset[1] * texmat0.xy;
  texcoord6 = t0 + offset[2] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12;
uniform highp vec2 offset[6];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[5] * texmat0.xy;
  texcoord1 = t0 - offset[4] * texmat0.xy;
  texcoord2 = t0 - offset[3] * texmat0.xy;
  texcoord3 = t0 - offset[2] * texmat0.xy;
  texcoord4 = t0 - offset[1] * texmat0.xy;
  texcoord5 = t0 - offset[0] * texmat0.xy;
  texcoord6 = t0;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0;
varying highp vec2 texcoord0;
void main() {
  texcoord0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4, texcoord5, texcoord6, texcoord7;
varying highp vec2 texcoord8, texcoord9, texcoord10, texcoord11;
varying highp vec2 texcoord12, texcoord13;
uniform highp vec2 offset[7];
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0 - offset[6] * texmat0.xy;
  texcoord1 = t0 - offset[5] * texmat0.xy;
  texcoord2 = t0 - offset[4] * texmat0.xy;
  texcoord3 = t0 - offset[3] * texmat0.xy;
  texcoord4 = t0 - offset[2] * texmat0.xy;
  texcoord5 = t0 - offset[1] * texmat0.xy;
  texcoord6 = t0 - offset[0] * texmat0.xy;
  texcoord7 = t0 + offset[0] * texmat0.xy;
  texcoord8 = t0 + offset[1] * texmat0.xy;
  texcoord9 = t0 + offset[2] * texmat0.xy;
  texcoord10 = t0 + offset[3] * texmat0.xy;
  texcoord11 = t0 + offset[4] * texmat0.xy;
  texcoord12 = t0 + offset[5] * texmat0.xy;
  texcoord13 = t0 + offset[6] * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute lowp vec4 vertex_color;
attribute highp vec2 vertex_texcoord0, vertex_texcoord1, vertex_texcoord2;
varying highp vec2 texcoord0, texcoord1, texcoord2, texcoord3;
varying highp vec2 texcoord4;
void main() {
  highp vec2 t0 = vertex_texcoord0 * texmat0.xy + texmat0.zw;
  gl_Position = vertex_matrix * vertex_position;
  texcoord0 = t0;
  texcoord1 = t0 - vec2(1., 0.) * texmat0.xy;
  texcoord2 = t0 + vec2(1., 0.) * texmat0.xy;
  texcoord3 = t0 - vec2(0., 1.) * texmat0.xy;
  texcoord4 = t0 + vec2(0., 1.) * texmat0.xy;
uniform highp mat4 vertex_matrix;
uniform highp vec4 texmat0;
attribute highp vec4 vertex_position;
attribute highp float vertex_texcoord0;
attribute highp float vertex_point_size;
attribute lowp vec4 vertex_color;
varying lowp vec4 color0;
void main() {
  gl_Position = vertex_matrix * vertex_position;
  gl_PointSize = vertex_point_size;
  color0 = vertex_color;
SSSSSSSSSSSSSS
SSSSSSSSSSSSSS
contentsCenter
contents
opacity
zPosition
anchorPoint
anchorPointZ
motionBlurAmount
contentsScale
transform
sublayerTransform
contentsTransform
contentsRect
cornerContents
cornerContentsCenter
filters
backgroundFilters
compositingFilter
meshTransform
behaviors
magnificationFilter
minificationFilter
minificationFilterBias
name
backgroundColor
cornerRadius
borderWidth
borderColor
isDoubleSided
contentsMultiplyColor
velocityStretch
mass
momentOfInertia
coefficientOfRestitution
shouldRasterize
preloadsCache
rasterizationPrefersDisplayCompositing
rasterizationScale
allowsEdgeAntialiasing
allowsGroupOpacity
allowsDisplayCompositing
allowsGroupBlending
wantsExtendedDynamicRangeContent
cornerContentsMasksEdges
allowsHitTesting
hitTestsAsOpaque
literalContentsCenter
contentsContainsSubtitles
shadowOpacity
shadowColor
shadowOffset
shadowRadius
shadowPath
invertsShadow
shadowPathIsBounds
actionForLayer:forKey:
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
_layoutSublayersOfLayer:
animationDidStart:
animationDidStop:finished:
ffffff
y?xwwwww
@333333
?ffffff
?aqua
?black
blue
?fuchsia
?gray
?green
lime
maroon
navy
?olive
purple
?red
silver
@?teal
?white
?yellow
resize
size
type
resizeAspect
sprite
radius
rasterizationScale
redRange
strokeStart
name
endPoint
repeatCount
sphere
simpleAttractor
sizeRequisition
inputTime
oldestLast
single
screen
renderMode
circle
none
oldestFirst
onOrderOut
screenBlendMode
instanceRedOffset
endProgress
surface
strokeColor
instanceGreenOffset
commitTime
inputEndAngle
onOrderIn
inputPoint1
cornerContents
cornerContentsCenter
inputPoint0
inputPosition
inputHardEdges
fade
cornerContentsMasksEdges
cube
force
center
topLeft
instanceCount
instanceColor
compositingFilter
cornerRadius
constraints
coneAngle
timeOffset
contentsRect
contents
contentsCenter
contentsFrameMode
contentsFrameCount
font
inputBias
dest
discrete
redSpeed
clear
inputFrontColor
discretizesTime
cubic
scale
start
strokeEnd
contentsDither
clearsContext
rectangle
style
contentsFormat
direction
contentsScale
fontSize
destIn
startPoint
nearest
image
rectangles
darkenSourceOver
statisticsType
sharpness
contentsContainsSubtitles
startProgress
function
opaque
darkenBlendMode
middle
ignoresOffscreenGroups
duration
mass
directionLatitude
directionLongitude
borderColor
inputDither
transitionFlags
transition
reactsToCollisions
behaviors
tileSize
coefficientOfRestitution
trackingMode
seed
speed
exclusionBlendMode
margin
inputSize
inputScale
color
cullRect
inputStartAngle
foregroundColor
completionBlock
appliesY
appliesX
colors
instanceTransform
spin
trilinear
down
tableRows
emitterDuration
contentsFramesPerSecond
inputBounds
inputBackEnabled
emitterPosition
stiffness
inputFrontEnabled
additive
enabled
resizeAspectFill
appliesRotation
removedOnCompletion
repeatDuration
inputColor
filter
scrollMode
spinBias
backdropRect
coneEdgeSoftness
filters
inputShadowColor
bias
superlayer
inputColor1
emitterRects
inputShadowBounds
inputColor0
spot
line
emitterZPosition
colorInvert
colorHueRotate
ambient
cullMinZ
cumulative
origin
linear
contentsTransform
minificationFilter
timeStep
normalBlendMode
endAngle
targetsSuperlayer
emissionLongitude
fillMode
minificationFilterBias
distanceField
fillColor
forceFields
instanceBlueOffset
instanceAlphaOffset
orientationRange
topRight
orientationLatitude
orientationLongitude
inputNormalizeEdges
contextId
inputLinear
linearBurnBlendMode
mask
backToFront
springs
position
justification
cheapScreen
subtype
inputAngle
birthRate
scaleRange
maskedCorners
lanczos
shapeTransform
rasterizationPrefersDisplayCompositing
offset
cuboid
lanczosResize
tensionValues
flattened
lineJoin
emitterMode
inputBackColor1
inputAmount
inputBackColor0
sourceOut
cheapColorDodge
cubicPaced
sourceLayer
overlayBlendMode
sourceOver
falloffDistance
fromLeft
inputReversed
emitterSize
sourceIn
imageBlendMode
inputColorMatrix
right
anchorPoint
colorBurnBlendMode
imageRotation
timingFunctions
sourcePoints
roundsToInteger
colorMonochrome
colorDodgeBlendMode
timingFunction
contentsOpaque
disableActions
frozen
fromRight
random
transform
backgroundColor
colorOverLife
backgroundColorPhase
wantsExtendedDynamicRangeContent
hidden
destAtop
massRange
backgroundFilters
plane
anchorPointZ
colorSaturate
colorSubtract
locations
planar
drawableProperties
statisticsInterval
shouldRasterize
softLightBlendMode
disableRunLoopObserverCommits
cheapAdditive
inputAspectRatio
vibrantDarkSourceOver
alphaRange
falloff
imageNormalAngle
subtractD
justified
startAngle
contentsFramesPerRow
gradient
sortsSublayers
differenceBlendMode
zPosition
translation
momentOfInertia
colorContrast
meshTransform
emitterShape
disablesOccludedBackdropBlurs
tableColumns
allowsFontSubpixelQuantization
spinRange
contentsScaling
damping
spacing
tableColumn
subtractS
divideBlendMode
animations
appliesScale
colorMatrix
alignToMotion
shadowOffset
destOver
animatesFromModelValues
keyTimes
wrappedDirection
emitterCells
animationTimingFunction
emissionRange
cullMaxZ
emissionLatitude
copy
instanceDelay
inputIntermediateBitDepth
luminance
bounds
hardLightBlendMode
point
radial
sublayers
xAcceleration
shadowRadius
wrappedOrigin
shadowColor
toValue
colorOverDistance
beginTime
points
inputQuality
biasValues
needsDisplayOnBoundsChange
value
volume
calculationMode
borderWidth
moveIn
paced
sequential
bleedAmount
delegate
frameInterval
values
inheritsSecurity
subtractBlendMode
zAcceleration
left
collisionInterval
contentsGravity
tableRow
continuityValues
drag
vibrantDarkSourceOverReversed
rotation
vibrantDark
outline
springScale
aligned
options
greenRange
wrapped
scaleSpeed
flip
invertsShape
lifetime
marginWidth
identity
proxyProperties
alignedCube
preferredFramesPerSecond
rotationMode
fromValue
levelsOfDetailBias
height
truncationMode
cheapMaximum
emitterPath
doubleSided
frequency
linearDodgeBlendMode
animationDelegate
groupName
colorMap
emitterBehaviors
opacity
string
light
beginTimeMode
animationDuration
valueFunction
wave
contentsMultiplyColor
layoutManager
lightenBlendMode
destOut
drawingEnabled
colorAdd
pluginType
byValue
vertical
push
magnificationFilter
inputDensity
acceleratesDrawing
plusL
keyPath
array
alphaSpeed
needsLayoutOnGeometryChange
linearLightBlendMode
fromTop
sublayerTransform
multiplyColor
colorBrightness
width
fontSmoothingStyle
axial
floating
lineWidth
cachesInputImage
valueOverLife
masksToBounds
layoutFlags
blueRange
vibrantLight
motionBlurAmount
allowsHitTesting
vibrantLightSourceOver
allowsEdgeAntialiasing
luminanceToAlpha
ambientIntensity
miterLimit
alignmentMode
appliesAlpha
captureOnly
inputRadius
restLength
autoreverses
actions
alignedFlip
fromBottom
updateInterval
pluginId
lineDashPattern
plusD
fillRule
particleType
rotationRange
canDrawConcurrently
attractor
velocityRange
attractorType
lineCap
edgeAntialiasingMask
valueOverDistance
lifetimeRange
reveal
greenSpeed
preloadsCache
bottomLeft
levelsOfDetail
yAcceleration
shadowPathIsBounds
vibrantLightSourceOverReversed
emitterDepth
pinLightBlendMode
diffuseIntensity
blueSpeed
multiplyBlendMode
preservesDepth
lineDashPhase
invertsShadow
truncationString
minimum
hitTestsAsOpaque
sourceAtop
unordered
autoresizingMask
horizontal
gaussianBlur
velocityStretch
shadowOpacity
pluginFlags
geometryFlipped
stoppedVelocity
intensity
velocity
bottom
allowsDisplayCompositing
both
literalContentsCenter
windowServerAware
stoppedAngularVelocity
drawsAsynchronously
multiply
horizontally
lightenSourceOver
path
attachmentPointB
minimumTimeStep
bottomRight
shadowPath
lowLatency
allowsGroupBlending
vertically
maximum
angularDrag
allowsGroupOpacity
maximumTileScale
attachmentPointA
pageCurl
pluginGravity
@(#)PROGRAM:QuartzCore  PROJECT:QuartzCore-453.34
CAEmitterLayer
CAEmitterLayerPrivate
CATransform3DAdditions
CAStateControllerTransition
CAAnimationDelegate
NSObject
CAStateController
CADisplay
CADisplayLink
CADisplayLinkPrivate
CADisplayMode
CACodingProxy
NSCoding
LKNSArrayCodingProxy
LKNSDictionaryCodingProxy
LKNSValueCodingProxy
LKCGColorCodingProxy
LKCGImageCodingProxy
CACGPatternCodingProxy
CACGPathCodingSegment
CACGPathCodingProxy
CAIOSurfaceCodingProxy
CADebuggingArchiverDelegate
NSKeyedArchiverDelegate
CACodingCAMLWriterDelegate
CAMLWriterDelegate
CACoderAdditions
CAStateControllerUndo
CAStateRecorder
CAMLParser
CAFilter
NSCopying
NSMutableCopying
CAState
CAMeshTransform
CAMutableMeshTransform
CAMeshInterpolator
CAValueFunction
CAMediaTimingFunction
CAMediaTimingFunctionPrivate
CAMediaTimingFunctionBuiltin
CAStateRemoveAnimation
CARenderValue
CATiledLayer
CATiledLayerPrivate
CAColorMatrixAdditions
CATextLayer
CATextLayerPrivate
CAScrollLayer
CALayerScrolling
CAStateTransition
CAEmitterCell
CAMediaTiming
CAEmitterCellPrivate
CAPropertyInfo
CALight
CABehavior
CADynamicsBehavior
CAStateAddAnimation
CAEAGLLayer
EAGLDrawable
CAEAGLLayerPrivate
CAStateControllerAnimation
CAPoint3DAdditions
CAStateControllerLayer
CAStateAddElement
CAStateTransitionElement
CALinearMaskLayer
CALayer
CALayerPrivate
CALayerFunctions
CAActionAdditions
CAAction
CAStateSetValue
CALayerArray
CAWindowServer
CAWindowServerDisplay
CATransformLayer
CAStateElement
CAForceField
CAAnimation
CAAnimationPrivate
CAPropertyAnimation
CABasicAnimation
CAKeyframeAnimation
CASpringAnimation
CAMatchMoveAnimation
CATransition
CAAnimationGroup
CAAnimatableValue
CAShapeLayer
CALayerHost
CAReplicatorLayer
CASmoothedTextLayer
CAPackage
CATransaction
CATransactionPrivate
CATransactionInternal
CATransactionCompletionItem
CABackdropLayer
CADistanceFieldLayer
CAEmitterBehavior
CASpring
CAMLWriter
_CAObjectInternal
CASuspendNotification
CAContext
CAContextImpl
CASlotProxy
CAStateRemoveElement
CAGradientLayer
CAGradientLayerPrivate
CARenderer
CARendererPrivate
@12@0:4@8
B8@0:4
B12@0:4#8
v12@0:4@8
^{Layer=^^?{Atomic={?=i}}{Data={Vec4<float>=ffff}CCCCb3b3b4b4b4b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1{Vec2<double>=dd}{Rect=dddd}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::TypedArray<CA::Render::Layer> >=^{TypedArray<CA::Render::Layer>}}^{Layer}{Ref<CA::Render::Layer::Ext>=^{Ext}}{Ref<CA::Render::TypedArray<CA::Render::Animation> >=^{TypedArray<CA::Render::Animation>}}{Ref<CA::Render::Handle>=^{Handle}}}20@0:4^{Transaction=^{Shared}i^{HashTable<CA::Layer *, unsigned int *>}^{SpinLock}I^{Level}^{List<void (^)()>}^{Command}^{Deleted}^{List<const void *>}^{Context}^{HashTable<CA::Layer *, CA::Layer *>}^{__CFRunLoop}^{__CFRunLoopObserver}^{LayoutList}^{List<CA::Layer *>}{Atomic={?=i}}b1b1b1b1b1b1}8I12^I16
v8@0:4
B12@0:4I8
I12@0:4I8
@8@0:4
f8@0:4
v12@0:4f8
{CGPoint=ff}8@0:4
v16@0:4{CGPoint=ff}8
{CGSize=ff}8@0:4
v16@0:4{CGSize=ff}8
v12@0:4B8
I8@0:4
v12@0:4I8
v12@0:4^{CGPath=}8
^{CGPath=}8@0:4
d8@0:4
v16@0:4d8
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
{CATransform3D=ffffffffffffffff}8@0:4
@72@0:4{CATransform3D=ffffffffffffffff}8
v12@0:4@"CAAnimation"8
v16@0:4@8B12
v16@0:4@"CAAnimation"8B12
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v16@0:4@8@12
@"CAStateController"
@"CALayer"
@"CAStateTransition"
@"NSString"
@"NSMutableArray"
@12@0:4^{Display=^^?@^{__CFString}^{__CFString}III^{__CFString}{ModeSet={vector<CA::WindowServer::Display::Mode, std::__1::allocator<CA::WindowServer::Display::Mode> >=^{Mode}^{Mode}{__compressed_pair<CA::WindowServer::Display::Mode *, std::__1::allocator<CA::WindowServer::Display::Mode> >=^{Mode}}}}{Mode=(?={?=b16b16b24b1b2b2}Q)}{Mode=(?={?=b16b16b24b1b2b2}Q)}{Bounds=iiii}{Bounds=iiii}{Vec2<float>=ff}iIiddI{DisplayShmemInfo=^^?{SpinLock={?=i}}^{Shmem}^{DisplayTimings}}b1b1b1b1b1b1b1b1}8
i8@0:4
@16@0:4@8:12
@12@0:4^{DisplayLinkItem=^{Display}^v:^vii{Mutex={_opaque_pthread_mutex_t=l[40c]}}{Condition={_opaque_pthread_cond_t=l[24c]}}^{_opaque_pthread_t}@{Ref<CA::Display::DisplayLink>=^{DisplayLink}}^{List<const __CFString *>}QQQQQ{Atomic={?=i}}b1b1}8
v12@0:4i8
@20@0:4@8@12:16
@20@0:4{Mode=(?={?=b16b16b24b1b2b2}Q)}8@16
{Mode=(?={?=b16b16b24b1b2b2}Q)}8@0:4
v16@0:4L8L12
L8@0:4
{Mode="u"(?="s"{?="width"b16"height"b16"refresh_rate"b24"is_virtual"b1"pixel_format"b2"color_range"b2}"uint64"Q)}
@"CADisplay"
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@"NSArray"
@"NSDictionary"
(?="point"{CGPoint="x"f"y"f}"size"{CGSize="width"f"height"f}"rect"{CGRect="origin"{CGPoint="x"f"y"f}"size"{CGSize="width"f"height"f}}"transform"{CATransform3D="m11"f"m12"f"m13"f"m14"f"m21"f"m22"f"m23"f"m24"f"m31"f"m32"f"m33"f"m34"f"m41"f"m42"f"m43"f"m44"f}"point3d"{CAPoint3D="x"f"y"f"z"f}"dpoint"{CADoublePoint="x"d"y"d}"dsize"{CADoubleSize="width"d"height"d}"drect"{CADoubleRect="origin"{CADoublePoint="x"d"y"d}"size"{CADoubleSize="width"d"height"d}}"color_matrix"{CAColorMatrix="m11"f"m12"f"m13"f"m14"f"m15"f"m21"f"m22"f"m23"f"m24"f"m25"f"m31"f"m32"f"m33"f"m34"f"m35"f"m41"f"m42"f"m43"f"m44"f"m45"f})
^{CGColor=}
^{CGImage=}
^{CGPattern=}
@12@0:4r^{CGPathElement=i^{CGPoint}}8
[3{CGPoint="x"f"y"f}]
^{CGPath=}
@16@0:4@8@12
@16@0:4@"NSKeyedArchiver"8@12
v16@0:4@"NSKeyedArchiver"8@12
v20@0:4@8@12@16
v20@0:4@"NSKeyedArchiver"8@12@16
v12@0:4@"NSKeyedArchiver"8
@"NSString"16@0:4@"CAMLWriter"8@12
@"NSURL"16@0:4@"CAMLWriter"8@12
v20@0:4@8@12B16
v20@0:4r^f8L12@16
B20@0:4^f8L12@16
v12@0:4@"CAStateElement"8
v12@0:4@"CALayer"8
@"CAStateControllerUndo"
@"CAState"
B16@0:4r*8L12
@16@0:4@8B12
^{_CAMLParserData=}
@12@0:4^{_NSZone=}8
^{Object=^^?{Atomic={?=i}}}8@0:4
v12@0:4@?8
@28@0:4L8r^{CAMeshVertex={CGPoint=ff}{CAPoint3D=fff}}12L16r^{CAMeshFace=[4I][4f]}20@24
{CAMeshVertex={CGPoint=ff}{CAPoint3D=fff}}12@0:4L8
{CAMeshFace=[4I][4f]}12@0:4L8
@12@0:4i8
@16@0:4@8f12
@24@0:4@8@12@16r^{ValueInterpolator=dddddddddB}20
f12@0:4@8
v32@0:4L8{CAMeshVertex={CGPoint=ff}{CAPoint3D=fff}}12
v28@0:4{CAMeshVertex={CGPoint=ff}{CAPoint3D=fff}}8
v12@0:4L8
v44@0:4L8{CAMeshFace=[4I][4f]}12
v40@0:4{CAMeshFace=[4I][4f]}8
^{Interpolator=^^?{Atomic={?=i}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{Ref<CA::Render::Object>=^{Object}}{ValueInterpolator=dddddddddB}}
B16@0:4r^d8^d12
B24@0:4r^d8^d12^?16^v20
@24@0:4f8f12f16f20
v12@0:4^d8
v16@0:4L8[2f]12
^{CAMediaTimingFunctionPrivate=[2f][2f]}
f12@0:4f8
^{KeyValueArray=^^?{Atomic={?=i}}I[1^{Object}]}8@0:4
v32@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8i24@28
v28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8i24
B28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8i24
^{CGColor=}8@0:4
v12@0:4^{CGColor=}8
{CAColorMatrix=ffffffffffffffffffff}8@0:4
@88@0:4{CAColorMatrix=ffffffffffffffffffff}8
^{__CTTypesetter=}8@0:4
^{__CTLine=}8@0:4
v16@0:4^?8^v12
v20@0:4^?8^v12^B16
v24@0:4^{__CTLine=}8^{CGContext=}12{CGPoint=ff}16
v12@0:4^{CGContext=}8
r^v8@0:4
v12@0:4^v8
^{CATextLayerPrivate=}
v16@0:4@8I12
v20@0:4{CGPoint=ff}8@16
v28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8@24
{CGRect={CGPoint=ff}{CGSize=ff}}12@0:4@8
v12@0:4@"NSString"8
[2^v]
@"NSArray"8@0:4
v20@0:4{CAPoint3D=fff}8
{CAPoint3D=fff}8@0:4
^?12@0:4r^{_CAPropertyInfo=I[2:]b16b16*^{__CFString}}8
v12@0:4^{Behavior=^^?{Atomic={?=i}}I{Ref<CA::Render::String>=^{String}}IIb8b8{Ref<const CA::Render::Behavior>=^{Behavior}}}8
@"CAAnimation"
@"NSDictionary"8@0:4
v12@0:4@"NSDictionary"8
^{_EAGLWindowObject=^?^?^?}8@0:4
v12@0:4^{Transaction=^{Shared}i^{HashTable<CA::Layer *, unsigned int *>}^{SpinLock}I^{Level}^{List<void (^)()>}^{Command}^{Deleted}^{List<const void *>}^{Context}^{HashTable<CA::Layer *, CA::Layer *>}^{__CFRunLoop}^{__CFRunLoopObserver}^{LayoutList}^{List<CA::Layer *>}{Atomic={?=i}}b1b1b1b1b1b1}8
^{_CAEAGLNativeWindow={_EAGLWindowObject=^?^?^?}^{CAEAGLBuffer}II{Atomic={?=i}}{Atomic={?=i}}{SpinLock={?=i}}^{_CAImageQueue}@d^{x_list_struct}I^{CAEAGLBuffer}^{CAEAGLBuffer}III^{CAEAGLBuffer}@{Atomic={?=i}}b1b1b1b1}
@20@0:4{CAPoint3D=fff}8
@"NSTimer"
v12@0:4^{CALinearMaskContext=}8
^{CGColorSpace=}8@0:4
v72@0:4{CATransform3D=ffffffffffffffff}8
{CGAffineTransform=ffffff}8@0:4
v32@0:4{CGAffineTransform=ffffff}8
{CGPoint=ff}20@0:4{CGPoint=ff}8@16
{CGRect={CGPoint=ff}{CGSize=ff}}28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8@24
d20@0:4d8@16
@16@0:4{CGPoint=ff}8
B16@0:4{CGPoint=ff}8
r^{CGPath=}8@0:4
{_CALayerIvars="refcount"i"magic"I"layer"^v"unused1"[8^v]}
{CADoublePoint=dd}8@0:4
v24@0:4{CADoublePoint=dd}8
{CADoubleRect={CADoublePoint=dd}{CADoubleSize=dd}}8@0:4
v40@0:4{CADoubleRect={CADoublePoint=dd}{CADoubleSize=dd}}8
{CADoublePoint=dd}28@0:4{CADoublePoint=dd}8@24
{CADoubleRect={CADoublePoint=dd}{CADoubleSize=dd}}44@0:4{CADoubleRect={CADoublePoint=dd}{CADoubleSize=dd}}8@40
^v8@0:4
@16@0:4d8
B16@0:4^{_CARenderRendererInfo=iII}8L12
v20@0:4@"NSString"8@12@"NSDictionary"16
@20@0:4^@8L12B16
@12@0:4I8
v12@0:4^@8
v20@0:4^@8{_NSRange=II}12
I20@0:4^{?=L^@^L[5L]}8^@12I16
{_CALayerArrayIvars="layers"^@"count"I"capacity"I"mutations"L"retained"B}
^{CAWindowServerImpl=^{__CFArray}I}
@12@0:4^{Server=^^?{SpinLock={?=i}}{Mutex={_opaque_pthread_mutex_t=l[40c]}}@^{Display}^{__CFString}^{ContextItem}II^{ContextItem}I{SpinLock={?=i}}^{PendingOperation}^{Context}^{Shape}I^{Context}^{Renderer}ddd^{__CFDictionary}b1b1b1b1b1b1b1b1}8
I16@0:4{CGPoint=ff}8
{CGPoint=ff}20@0:4{CGPoint=ff}8I16
v24@0:4^f8f12d16
v16@0:4^f8f12
^{CAWindowServerDisplayImpl={Mutex={_opaque_pthread_mutex_t=l[40c]}}^{Server}}
@"CAStateElement"
@"CAValueFunction"
B16@0:4I8i12
B16@0:4^{Animation=^^?{Atomic={?=i}}f{Ref<CA::Render::Timing>=^{Timing}}{Ref<CA::Render::Vector>=^{Vector}}^{__CFString}IIIII}8@12
I12@0:4@8
v24@0:4d8@16@20
^{Animation=^^?{Atomic={?=i}}f{Ref<CA::Render::Timing>=^{Timing}}{Ref<CA::Render::Vector>=^{Vector}}^{__CFString}IIIII}12@0:4@8
d16@0:4d8
@16@0:4@8i12
@24@0:4@8@12@16^@20
v20@0:4@8@12^@16
v24@0:4@8@12@16^@20
#20@0:4@8@12@16
#16@0:4@8@12
^{_CAPackageData=@@@BB@@}
@?8@0:4
v16@0:4@?8i12
v16@0:4@?8@12
{CGPoint="x"f"y"f}
v12@0:4^{_CAMLWriterElement=^{_CAMLWriterElement}^{_CAMLWriterElement}^{_CAMLWriterElement}^^{_CAMLWriterElement}^v^{__CFString}^{_CAMLWriterAttribute}^^{_CAMLWriterAttribute}^{__CFString}I}8
^{_CAMLWriterPriv=^{__CFData}^{__CFURL}@^{_CAMLWriterElement}^{__CFString}^{__CFSet}ib1b1b1}
v16@0:4I8@?12
v16@0:4I8I12
I20@0:4{CGSize=ff}8B16
I24@0:4{CGSize=ff}8B16B20
v12@0:4^{CGColorSpace=}8
^{Context=}8@0:4
^{Context=I^{Context}{Mutex={_opaque_pthread_mutex_t=l[40c]}}{Weak<const void *>=@}III@^{Context}^{CGColorSpace}i^{__CFDictionary}III^{ObjectCache}@If^{Commit}{Generic=^^?^{Context}}b1b1b1b1b1}
^{Proxy=^^?{Atomic={?=i}}Q}
v20@0:4@8@12f16
v16@0:4@8f12
v24@0:4@8@12@16@20
v24@0:4@8@12@16f20
^{_CAStateControllerData=@^{__CFDictionary}@@}
v20@0:4d8^{?=IiqQdq{CVSMPTETime=ssIIIssss}QQ}16
^{CARendererPriv=@{Weak<id>=@}@^{Context}^{Renderer}{CGRect={CGPoint=ff}{CGSize=ff}}^{CGColorSpace}^{Update}I[2I][2I]Ib8I[0c]}
(interpolator (factor %g)
(o%d 
CoreAnimation: GetDisplayInfo returned 0x%x
CoreAnimation: rendering error %s
CAML: Failed to encode image: %s
CAMLEncodeLayerTreeToPathWithOptions failed to create output dirs at %s
CAMLEncodeLayerTreeToPathWithOptions options must be a CFDictionary
(image [%d %d] [%d] %s
 colormatching-disabled
 (colorspace "%s")
CoreAnimation: triple buffered backing store %p
(currentTexture 
(blendedTextures
CoreAnimation: copied CGImageRef %p - mask size
CoreAnimation: copied CGImageRef %p - color matching
CoreAnimation: copied CGImageRef %p - needs color matching
CoreAnimation: copied CGImageRef %p - non-RGB color model
CG image cache at time %f:
CoreAnimation: warning, CGImageProvider returned multiple blocks
CoreAnimation: copied CGImageRef %p - mipmap generation
CoreAnimation: copied CGImageRef %p - bad decode array
CoreAnimation: copied CGImageRef %p - bad mask
CoreAnimation: copied CGImageRef %p - bad mask image format (%d bpp, %d bpc)
CoreAnimation: copied CGImageRef %p - non-native format (%d)
CoreAnimation: copied CGImageRef %p - format not supported by hardware
CoreAnimation: copied CGImageRef %p - no data pointer
CoreAnimation: copied CGImageRef %p - bad image alignment
CoreAnimation: copied CGImageRef %p - bad row alignment
CoreAnimation: copied CGImageRef %p - RGB mask (bug!)
CoreAnimation: ignored CGImageRef %p - bad RGB 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - decode or mask
CoreAnimation: copied CGImageRef %p - bad RGB image format (%d bpp, %d bpc, %d info)
CoreAnimation: ignored CGImageRef %p - bad grayscale 16-is-half format (%d bpp, %d bpc, %d info)
CoreAnimation: copied CGImageRef %p - bad grayscale image format (%d bpp, %d bpc, %d info)
  %p deadline %f %s%s%s%s%s
(force-field
(layer 0x%lx)
(function 
Unsupported image format '%s' for default colorspace
(replicatorLayer %d)
CoreAnimation: failed to allocate %ld bytes
CoreAnimation: failed to query region %p (%ld bytes)
CoreAnimation: failed to map %ld bytes (%x)
(shmem %lu bytes)
exported [%d %d] buffer to %s
 (offscreen-flags [
(%slayer [%.10g %.10g %.10g] [%.10g %.10g %.10g %.10g] [%g %g %g]
[%d pass%s
 (group-flags [
(name 
(hidden true)
(masksToBounds true)
(geometryFlipped true)
(edgeAntialiasingMask %x)
(contentsGravity %s)
(contentsOpaque true)
(contentsDither false)
(contentsMultiplyColor %.3g %.3g %.3g %.3g)
(motionBlurAmount %g)
(doubleSided false)
(sortsSublayers false)
(opacity %g)
(cornerRadius %g)
(backgroundColor 
(backgroundColor (%.3g %.3g %.3g %.0g))
(borderWidth %g)
(borderColor 
(borderColor (%.3g %.3g %.3g %.0g))
(cornerContents 
(cornerContentsMasksEdges true)
(maskedCorners %x)
(contents %s
(contentsScaling repeat)
(magnificationFilter %s)
(minificationFilter %s)
(lodBias %g)
(contentsContainsSubtitles true)
(contentsRect 
(contentsCenter 
(cornerContentsCenter 
(literalContentsCenter true)
(contentsScale %g)
(shouldRasterize true)
(rasterizationPrefersDisplayCompositing true)
(rasterizationScale %g)
(preloadsCache true)
(allowsDisplayCompositing true)
(allowsEdgeAntialiasing true)
(wantsExtendedDynamicRangeContent true)
(allowsGroupOpacity true)
(allowsGroupBlending false)
(allowsHitTesting false)
(hitTestsAsOpaque true)
(shadowColor (%.3g %.3g %.3g %.0g))
(shadowOpacity %g)
(shadowRadius %g)
(shadowOffset [%g %g])
(shadowPath 
(invertsShadow true)
(shadowPathIsBounds true)
(mask 
(sublayers 
(filters 
(backgroundFilters 
(compositingFilter 
(meshTransform 
(animations 
(behaviors 
(subclass 
%s%s
(filter %s
(enabled false)
(inputs 
(%s 
(subpixel-mask-layer
(foregroundColor #%08x)
CoreAnimation: failed to add monotonic cube ((%g, %g) (%g, %g) (%g, %g) (%g, %g))
CoreAnimation: maximum %d texture units
CoreAnimation: maximum texture %d pixels
CoreAnimation: unsupported graphics hardware
; need three or more texture units
CoreAnimation: %d by %d image is too large for GPU, ignoring
CoreAnimation: image stride is too large for GPU, ignoring
CoreAnimation: surface %d x %d is too large
[%u]
 s:[%u x %u] b:[%u x %u] need-clear:%d%s
 s:framebuffer
error: failed to export [%d %d] buffer to %s
(shape-layer
(fillColor 
(fillColor %.3g %.3g %.3g %.3g)
(strokeColor 
(strokeColor %.3g %.3g %.3g %.3g)
(strokeStart %g)
(strokeEnd %g)
(lineWidth %g)
(miterLimit %g)
(dashPhase %g)
(dashPattern 
(fillRule evenOdd)
(lineJoin %s)
(lineCap %s)
CoreAnimation: missing mask layer %p
CoreAnimation: missing sublayer %p
== context %x%s%s%s; pid %d [%s] %sat time %f ==
  slot %u:
(%s)
(%s [%g %g %g %g; %g %g %g %g; %g %g %g %g; %g %g %g %g])
(%s [%g %g %g %g %g %g])
** Render objects at time %f **
%20s %s
%20s %d
CoreAnimation: context hosting changed while locked!
CoreAnimation: LayerHost trying to host itself or one of its ancestors (context id %d)
(layer-host %x
(inherits-security true)
CoreAnimation: insecure context %x - pid %u [%s].
Cannot host %x in context %x - pid %u [%s].
** Render tree at time %f (bounds %d,%d %dx%d) **
%5s %5s %5s %5s %5s %5s
%5d %5d %5d %5d %5d %5d
%5s %5d %5d %5d %5d %5d
CoreAnimation: NULL color space set on context (%x)
(dynamics-behavior
(springs 
(forceFields 
(springScale %g)
(drag %g)
(angularDrag %g)
CoreAnimation: user defined spring-functions are unimplemented.
CoreAnimation: %d by %d image is too large for software renderer, ignoring
CoreAnimation: warning, deleted thread with uncommitted CATransaction; created by:
CoreAnimation: warning, deleted thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
CoreAnimation: CA_ASSERT_MAIN_THREAD_TRANSACTIONS is set and an implicit transaction wasn't created on a main thread.
CoreAnimation: new transaction fence disabling existing low latency hint.
CoreAnimation: invalid commit handler phase! Defaulting to pre-commit.
CoreAnimation: warning, encountered thread with uncommitted CATransaction; created by:
CoreAnimation: warning, encountered thread with uncommitted CATransaction; set CA_DEBUG_TRANSACTIONS=1 in environment to log backtraces, or set CA_ASSERT_MAIN_THREAD_TRANSACTIONS=1 to abort when an implicit transaction isn't created on a main thread.
(backdrop-layer %ld
(group "%s")
(scale %g)
(marginWidth %g)
(backdropRect [%g %g; %g %g])
(captureOnly true)
(disablesOccludedBackdropBlurs true)
(statisticsType type%d)
(statisticsInterval %g)
(buffer [%d x %d] scale %g)
collected backdrop group %p buffer %p
Filter merging aborted: layer.bounds == blur.inputBounds
(transition %s
CAML warning:%d: 
CAML error:%d: 
CA:Render:Server:port_set (): mach_port_mod_refs () returned error 0x%x
unable to find bootstrap server: %x
unable to register bootstrap port %s: %x
CoreAnimation: mach_msg returned 0x%x, server exiting
(pixel-buffer %c%c%c%c [%d %d])
CAImageProvider: %.3gMB cached (%.3gMB purgeable); idle %.3gs -> %.3gs
(image-provider [%d %d] [%d %d] [%d %d]
(fillColor #%08x 
(spring
(layerA 0x%lx)
(layerB 0x%lx)
(attachmentPointA [%g %g])
(attachmentPointB [%g %g])
(stiffness %g)
(damping %g)
(restLength %g)
%f %x "%s" (%p): replacing %p (eval %u; frames %u):
%f %x "%s" (%p): adding %p:
%f %x "%s" (%p): not adding %p:
%f %x "%s" (%p): removing all:
%p (eval %u; frames %u):
%f %x "%s" (%p): removing %p (eval %u; frames %u):
%f %x "%s" (%p): collecting %p (t %f; speed %g; eval %u; frames %u):
CoreAnimation: ignoring invalid path
(path
%g %g m
%g %g l
%g %g %g %g q
%g %g %g %g %g %g c
(function %s)
failed to receive purple reply message: %x
failed to send purple message: %x
CoreAnimation: disabling OpenGL extension %s
%08x %08x vertex shader:
%s%s---
%08x %08x fragment shader:
%s%s---
(cfobject %p)
"%s"
(emitter-behavior %s
(values 
(match-move-animation
(timingFunction 
(keyPath 
(sourceLayer 0x%lx)
(sourcePoints 
(compressed-image [%d %d] [%d] %s
cornerContents must be a CGImageRef for now!
unable to decode object of type %d
CoreAnimation: serialization error from context %x
CoreAnimation: unhandled combiner function: %d
CoreAnimation: Warning! CAImageQueueSetOwner() is deprecated and does nothing. Please stop calling this method.
(image-queue%s%s%s
(generation 0x%08x)
(rotationFlags %d)
(samples
(0x%llx %s [%d %d; rot %d] %f (generation 0x%08x) %s%s%s)
CAImageQueue %p: frame %f (%llx) used %d: %f (%llx)
CoreAnimation: updates deferred for too long
== context %x; level %g; pid %d [%s] %sat time %f ==
CoreAnimation: timed out freeze semaphore
** Render #%d tree at time %f **
CoreAnimation: invalid mesh transform - too few edges
CoreAnimation: invalid mesh transform - vertex index
CoreAnimation: invalid mesh transform - paired edge
(meshTransform [invalid])
(meshTransform
(vertex %d (%g %g) (%g %g %g))
(face %d (%d %d %d %d) (%d %d %d %d) (%g %g %g %g))
(normal %d (%g %g %g))
(surface %x [%d %d] 
(beginTime %f)
(duration %f)
(autoreverses true)
(fillMode %s)
(speed %f)
(timeOffset %f)
(%s %f)
CoreAnimation buffers: currently %.3gMB; maximum %.3gMB
(distance-field-layer
(renderMode %s)
(invertsShape true)
(offset %g)
(sharpness %g)
backdrop 0x%lx; update %d; group %p "%s" size %zu; [%d %d; %d x %d]:
  copying to surface [%d %d; %d x %d] scale %g:
    [%d %d; %d x %d]
  applying %d merged group filters (lst %p)
(vector
 %.10g
(frameInterval %f)
(discretizesTime true)
(additive true)
(cumulative true)
(removedOnCompletion false)
(from 
(to 
(by 
(calculationMode %s)
(keyTimes 
(timingFunctions 
(path 
(type %s)
(subtype %s)
(filter 
(options 
(mass %g)
(velocity %g)
(array
CoreAnimation: failed to send fence reply: %x
CoreAnimation: timed out fence %x
CoreAnimation: attempt to check-in to unknown fence port: %x
CoreAnimation: failed to receive fence reply: %x
creating class description for %s
  %s: %s
    type %d: %s flags 0x%x
(proxy %d 0x%llx)
(pattern [%g %g %g %g] [%g %g]
(cell 
CGBitmapContextSetData failed, bpc %zu, bpp %zu, info %u
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
