initWithURLResponse:data:
error
status
errorCode
responseDictionary
httpResponse
code
localizedDescription
message
errorMessage
userInfo
mutableCopy
setObject:forKeyedSubscript:
allHeaderFields
objectForKeyedSubscript:
errorWithDomain:code:userInfo:
setError:
integerValue
version
alloc
initWithBase64EncodedString:options:
cert
dsid
clubID
_clubID
bypassToken
srpData
propertyListWithData:options:format:error:
recoveryData
metadata
fmipRecoveryData
smsVerificationCodeLength
countByEnumeratingWithState:objects:count:
numberWithInt:
addObject:
accountInfo
smsTargetsInfo
countrySMSCodes
bskb
length
enumerateByteRangesUsingBlock:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
sha1Digest
hexString
initWithFormat:
enumeratePeersWithBlock:
isEqual:
peerIDs
peerIDForKeybagDigest:
fileSystemRepresentation
init
URLByAppendingPathComponent:
URLByAppendingPathExtension:
class
openDBWithURL:truncate:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
bytes
UTF8String
appendBytes:length:
initWithBytes:length:
initWithUTF8String:
recordID
setDb:
initWithURL:recordID:
addItem:withKey:forClass:error:
removeItemWithKey:error:
enumerateKeysAndItemsUsingBlock:
resetDBWithKeybag:
closeDB
sqliteExec:
keybag
keybagDigest
manifestHash
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
.cxx_destruct
setRecordID:
_url
_recordID
defaultStore
stringForKey:
kvsUUID
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLForViewName:
migrateView:
count
viewName
dictionaryForKey:
addItem:error:
lastPathComponent
initWithContentsOfURL:
resetWithKeybag:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
pathExtension
isEqualToString:
stringByDeletingPathExtension
migrateBTree:keyClass:
migrateFromKVS
initWithViewName:recordID:
backupDict
backupData
closeStore
_viewName
statusCode
localizedStringForStatusCode:
dictionary
initWithLocaleIdentifier:
setLocale:
setDateFormat:
dateFromString:
longLongValue
dateWithTimeIntervalSinceNow:
localString
_parsePlistFromData:error:
initWithData:encoding:
_responseDictionary
_error
_httpResponse
numberWithBool:
isEqualToNumber:
stingray
validateInput
appleID
iCloudPassword
authToken
errorWithCode:error:format:
baseURL
recordLabel
protocolVersion
command
stringWithFormat:
dataUsingEncoding:
base64EncodedStringWithOptions:
useRecoveryPET
authorizationHeaderWithUser:password:authType:
urlRequest
bodyDictionary
dataWithPropertyList:format:options:error:
setHTTPBody:
setHTTPMethod:
lowercaseString
stringByAppendingFormat:
recoveryPassphrase
escrowRecord
initWithInfo:
iCloudEnv
authorizationHeader
urlString
metadataHash
protocol
countryDialCode
countryCode
phoneNumber
challengeCode
iCDP
silentAttempt
fmipRecovery
blob
setBlob:
baseRootCertVersions
setBaseRootCertVersions:
trustedRootCertVersions
setTrustedRootCertVersions:
setBypassToken:
fmipUUID
setFmipUUID:
_stingray
_iCDP
_silentAttempt
_useRecoveryPET
_fmipRecovery
_recoveryPassphrase
_iCloudEnv
_dsid
_authToken
_baseURL
_escrowRecord
_metadata
_metadataHash
_protocol
_command
_countryDialCode
_countryCode
_phoneNumber
_challengeCode
_appleID
_iCloudPassword
_recordLabel
_blob
_baseRootCertVersions
_trustedRootCertVersions
_bypassToken
_fmipUUID
stringByAppendingString:
responseClass
udid
osVersion
osName
buildVersion
frameworkIdentifier
frameworkVersion
productType
productVersion
systemInfoDictionary
objectForKey:
bundleForClass:
bundleURL
initWithContentsOfFile:
frameworkInfoDictionary
clientInfoHeader
userAgentHeader
serialNumber
wifiMacAddress
systemDictionary
frameworkDictionary
aa_primaryAppleAccount
aa_isPrimaryEmailVerified
aa_personID
credentialForAccount:error:
token
propertiesForDataclass:
dataclassProperties
posixDateFormatter
date
stringFromDate:
setDictionary:forKey:
synchronize
cachedKeychainURL
removeItemAtURL:error:
enumerateKeysAndObjectsUsingBlock:
_getProtectedKeychainAndKeybagDigestFromKVS:
_storeProtectedKeychainInKVS:keybagDigest:
_storeVeeTwoBackupInKVS:forViewName:withKeyStore:
removeObjectForKey:
_removeCachedKeychain
boolForKey:
setBool:forKey:
setString:forKey:
dataForKey:
setData:forKey:
additionalStoreWithIdentifier:
UUID
UUIDString
compare:
dictionaryRepresentation
hasPrefix:
hasSuffix:
_getKeychainItemForKey:status:
iCloudEnvironment
verifyCertificateWithInfo:completionBlock:
_backupFullKeychain
_pushCachedKeychainToKVS
setNeedInitialBackup:
_backupKeychainFully:
_backupEnabled
_setAutobackupEnabled:
_usesEscrow
_checkEscrowTrust
_consumeFullBackup
_consumeBackupJournal
_removeKeychainItemForKey:
_removeKVSKeybag
_removeMetadata
_removeProtectedKeychain
_setBackupEnabled:iCDP:
_removeVeeTwoBackup
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:options:
characterAtIndex:
stringWithCharacters:length:
_createBackupKeybagWithPassword:
_saveKeychainItem:forKey:
derDataFromDict:
storeDERBackupInKVS:
_getICDPBackupFromKVSForView:
_getDERBackupFromKVS
_getLastBackupTimestamp
_iCDPBackupEnabled
_setUsesEscrow:
_removeUsesEscrow
_setMetadata:
_setBackupUUID:
_getBackupUUID
_setKVSKeybag:
_KVSKeybag
_setEMCSBackup:keybag:
_EMCSBackup
_EMCSBackupDictForKeybagDigest:
garbageCollectEMCSBackupsExcluding:
_backupKeychain
_disableBackup
disableiCDPBackup
normalizeSMSTarget:error:
setCacheDirURL:
_stateCapture
copyKVSState
cacheDirURL
valueForEntitlement:
processIdentifier
getAccountInfoWithInfo:reply:
enableWithInfo:reply:
recoverWithInfo:reply:
stashRecoveryDataWithInfo:reply:
disableWithInfo:reply:
updateMetadataWithInfo:reply:
cachePassphraseWithInfo:reply:
uncachePassphraseWithInfo:reply:
changeSMSTargetWithInfo:reply:
startSMSChallengeWithInfo:reply:
getCountrySMSCodesWithInfo:reply:
backupWithInfo:reply:
backOffDateWithInfo:reply:
setBackOffDateWithInfo:reply:
cachePassphraseWithInfoAsync:
uncachePassphraseWithInfoAsync:
notificationOccurred:
stateCaptureWithReply:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
connectionQueue
_setQueue:
resume
needInitialBackup
_handleKVStoreChangedNotification:
boolValue
intValue
allObjects
getAccountInfoWithInfo:completionBlock:
dictionaryWithDictionary:
massageIncomingMetadataFromInfo:
secureBackupDate
substringFromIndex:
filteriCDPRecords:
hasRecoveryKey
listSMSTargetsWithInfo:completionBlock:
objectAtIndexedSubscript:
forceICDP
callStackSymbols
name
reason
synchronizeWithCompletionHandler:
synchronizeKVS
_getAccountInfoWithInfo:reply:
_stashRecoveryDataWithInfo:reply:
KVSError
setKVSError:
setICloudEnvironment:
massageOutgoingMetadataFromInfo:
cachedPassphrase
initWithDomain:code:userInfo:
initWithCapacity:
domain
storeRecordWithInfo:completionBlock:
timeIntervalSinceNow
deleteRecordWithInfo:completionBlock:
garbageCollectEscrowRecords:
backupWithInfo:garbageCollect:reply:
restoreBackup:withName:keybagDigest:keybag:password:
distantPast
cachedRecordID
unsignedIntegerValue
restoreEMCSBackup:keybag:password:
recoverRecordWithInfo:completionBlock:
setCachedRecordIDPassphrase:
setCachedRecordID:
_restoreKeychainWithBackupBag:password:keybagDigest:
recordIDForSilentAttempt:passphraseLength:
cachedRecordIDPassphrase
substringToIndex:
uncacheRecordIDPassphrase
_recoverWithInfo:reply:
deleteAlliCDPRecordsWithInfo:reply:
timeIntervalSinceReferenceDate
updateRecordMetadataWithInfo:completionBlock:
stringByAppendingPathComponent:
storeCachedPassphrase:
setCachedPassphraseFD:
setCachedRecordIDPassphraseFD:
initWithLength:
mutableBytes
cachedPassphraseFD
cachedPassphraseForFD:
cachedRecordIDPassphraseFD
setCachedPassphrase:
startSMSChallengeWithInfo:completionBlock:
getCountrySMSCodesWithInfo:completionBlock:
changeSMSTargetWithInfo:completionBlock:
listener:shouldAcceptNewConnection:
cachedManifestURL
getStingrayMetadataWithInfo:error:
backupAllowed
setBackupAllowed:
restoreEMCSBackup:withPassword:
recoverStingrayWithInfo:error:
iCDPKeybag
_needInitialBackup
_cacheDirURL
_iCDPKeybag
_KVSError
_connectionQueue
_cachedRecordID
_cachedPassphraseFD
_cachedRecordIDPassphraseFD
_iCloudEnvironment
allKeys
setWithArray:
isEqualToSet:
errorWithCode:format:
copy
URLWithString:
initWithURL:
ak_addDeviceUDIDHeader
currentRequest
originalRequest
setURL:
protectionSpace
authenticationMethod
serverTrust
host
delegate
setPinningFailure:
ephemeralSessionConfiguration
set_appleIDContext:
setTimeoutIntervalForResource:
setHTTPAdditionalHeaders:
sessionConfig
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithRequest:completionHandler:
finishTasksAndInvalidate
pinningFailure
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
credential
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
performRequestWithHandler:
setUrlString:
_pinningFailure
_responseClass
_urlString
initWithString:
scanUnsignedLongLong:
numberWithUnsignedLongLong:
_certVersion:
numberWithUnsignedLong:
_rootTrustedVersionsForRootType:inEnvironment:
unsignedLongLongValue
_saveBypassToken:
_removeBypassToken
_getBypassToken
_rootBaseVersionsForRootType:inEnvironment:
_rootCurrentVersionForRootType:inEnvironment:
errorWithDomain:code:format:
initWithRequest:
encodedEscrowRecordWithPublicKey:error:
srpInitBlob
srpRecoveryBlobFromData:
decodedEscrowRecordFromData:
decodedLabel
escrowDate
updateRecordWithInfo:completionBlock:
initFileURLWithPath:isDirectory:
arrayWithObjects:count:
enableTransactions
serviceListener
setDelegate:
codeForNSError:
codeForErrno:
dictionaryWithObjectsAndKeys:
sanitizedError:
errorWithCode:URL:format:
errorWithCode:error:URL:format:
errorForNSError:path:format:
timeZoneForSecondsFromGMT:
setTimeZone:
legacyDateFormatter
setTimeStyle:
setDateStyle:
localTimeZone
dataWithBytes:length:
dataWithLength:
label
cStringUsingEncoding:
setRecoveryBlob:
srpResponseForEscrowBlob:withKey:
recoveryResponseForBlob:
initWithBytes:length:encoding:
setEscrowDate:
setDecodedLabel:
recoveryBlob
setEscrowBlob:
escrowBlob
dealloc
ccses
_decodedLabel
_escrowDate
_recoveryBlob
_label
_escrowBlob
initWithFormat:arguments:
Error returned from iCloud: %@
HTTP Error: %@
got bad dict from iCloud: %@
iCloud gave us junk for metadata: %@
SOSBackupSliceKeyBagCreateFromData() failed: %@
found peer %@
could not find peer id for peer %@
No peer for digest %@ found
opening %@ failed: %s
table create for %@ failed: %s
opening %@
sqlite3_prepare(insert) for %@ failed: %s
sqlite3_bind_text for %@ failed: %s
sqlite3_bind_blob64 for %@ failed: %s
sqlite3_step for %@ failed: %s
sqlite3_finalize for %@ failed: %s
sqlite3_prepare(delete) for %@ failed: %s
sqlite3_changes for remove %@ in %@ != 1
sqlite3_prepare_v2(%s) for %@ failed: %s
%s: %@
%@ on %@ failed: %s
table drop for %@ failed: %s
create table for %@ failed: %s
vacuum for %@ failed: %s
closing %@
sqlite3_close for %@ failed: %d
could not create %@: %@
creating db for view %@
no keybag digest found, migrating view %@
unexpected item type for kSecBackupEventAdd: %@
unexpected item type for kSecBackupEventRemove: %@
CFPropertyListCreateDERData failed: %@
unexpected item type for resetWithKeybag: %@
reset manifest for view %@
backup keybag peers: %@
failed to add item %@
migrating %@
migrating %@ failed, resetting local backup db to empty
could not reset store with keybag: %@
unexpected key size: %zd, corrupt btree at %@
duplicate key, corrupt btree at %@
failed to add item: %@
seq failed: %s
migrated %lu item%s in class %@
not a btree file 
could not open %@: %s 
Escrow response not a dictionary: %@
Error processing plist: %@
Error from escrow proxy: %ld, %@
Got retry-after header: %@
will be available for retry after %@
unexpected response from escrow proxy: URL: %@, headers: %@, data: %@
No user signed in: %@ %@
Missing base URL
Missing label
Missing required parameters AppleID: %@
%@iCloud password:
Missing required parameters passphrase: %@
data: %@
sms target: %@
Missing DSID
Missing parameters
getting dsid
got dsid: %@
account email not verified
getting auth token
Error accessing auth token: %@
got auth token
getting escrowURL
got escrowURL
getting iCloud env
got iCloud env
No iCloud account yet
SecItemAdd() returned %ld
SecItemDelete() returned %ld
SecItemCopyMatching() returned %ld
Storing keychain in KVS @%@
NSUbiquitousKeyValueStore synchronize failed
backing up view %@ in KVS
error removing keychain: %@
error creating DER from plist: %@
Storing DER keychain in KVS @%@
backing up peer ID %@
using backup key: %@
SOSCCCopyMyPeerInfo() failed: %@
Couldn't back up view %@: backup is%s nil, keybag is%s nil
skipping empty backup for view %@
getting registered backup names failed: %@
Removing backup record from @%@
Retrieving keychain from @%@
Removing view-based backup from @%@
Changing backup status %u->%u
Changing escrow usage %u->%u
Changing metadata old: %@
new: %@
Removing metadata: %@
Overwriting keybag in KVS! Old digest: %@
Saving keybag in KVS digest: %@
Saving EMCS backup
looking for non-tagged EMCS backup
looking for old-style EMCS backup
Found non-tagged EMCS backup with more recent timestamp
garbage collecting backup %@
Removing keybag from KVS digest: %@
Can't get escrow cert from keychain
Attempt to back up when backup not enabled
Escrow cert is newer than trust policy; ignoring for now.
Escrow no longer trusted
consuming full backup
consuming backup for view %@
calling SecItemBackupWithChanges()
got backup manifest event: %s (ok=%d)
SecKeychainBackupWithChanges: unexpected event: %d
SecItemBackupWithChanges() returned %s
SecKeychainBackupWithChanges: no journal file, skipping %@
SecKeychainBackupWithChanges for view %@ failed: %@
Handling events for view %@ failed: %@
SecItemBackupSetConfirmedManifest for view %@ failed: %@
SecItemBackupWithRegisteredBackups() returned %s
SecItemBackupWithRegisteredBackups failed: %@
got backup manifest event: %s
forcing KVS push
attempt to enable backup with non-decimal digits in SMS target: %@
capturing KVS state
Error serializing dictionary for State Capture: %@
captured %zd bytes of KVS data
calloc() failed?
could not get KVS dictionary representation
no uuid, could not create cache file URL
no uuid, could not create manifest file URL
sbd listener begin from pid %d (%@)
connection attempt from pid %d missing entitlement: %@
got notification: %@
Backing up EMCS in response to keychain changed
Backup returned %@
Performing initial backup
ignoring circle changed notification
handling notification %@
NSUbiquitousKeyValueStore failed
KVS store changed notification %@
no keybag found in iCloudIdentity backup: %@
Looking for keybag peer with backup key digest %@ for record ID %@
record id %@ cannot recover iCloudIdentity backup!
In %s
calling getAccountInfoWithInfo: in daemon
getAccountInfoWithInfo: in daemon came back
getAccountInfoWithInfo failed: %@
got %ld records
found a kEscrowServiceStingrayLabel
Could not find stingray metadata!
escrowService getAccountInfoWithInfo: returned %@
getAccountInfoWithInfo: error: %ld
got %lu records
found a kEscrowServiceLabel
found an iCDP label
could not create peer info from data: %@
unexpected label: %@
backup enabled
account uses escrow
calling listSMSTargets: in daemon
listSMSTargets: came back
escrowService listSMSTargetsWithInfo: returned %@
listSMSTargets: error: %ld
account does not use escrow
account does not use escrow, says backup is enabled, but has no backup timestamp
backup not enabled
%s caught exception: %@: %@
calling synchronizeWithCompletionHandler
got error back from synchronizeWithCompletionHandler: %@
Unknown passphrase type: %d
SecRKRegisterBackupPublicKey() failed: %@
SecRKCreateRecoveryKey() failed
Backup already enabled
attempted to store stingray identities, with invalid parameters: %@, %@nil iCloud password, %@nil iCloud identity data
FORCING ICDP + MULTIPLE ICSC
Missing cached passphrase
attempted to enable backup, with invalid parameters: %@nil recovery password, %@, %@, %@nil iCloud password
SecPasswordGenerate() failed: %@
could not create backup bag password
could not create backup keybag
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() failed: %@
SOSPeerInfoGetPeerID() failed
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() called got peer ID: %@, backup key: %@, digest: %@
SOSPeerInfoCopyBackupKey() returned no backup public key for peer: %@
SOSPeerInfoCopyEncodedData failed: %@
SOSCCRegisterSingleRecoverySecret() failed: %@
escrowService storeRecordWithInfo: returned: %@
PCSBackupSetupNewDeviceSecret() failed: %@
found record %@ from %@
garbage collecting escrow record with ID %@, from %@
deleting escrow record failed: %@
failed creating backup semaphore: %s
CFPropertyListCreateWithDERData() failed: %@
%@: %ld item%s
obj for key %@ does not respond to count!
backup is not a dictionary!
SOSBSKBCopyEncoded() failed: %@
SOSBackupSliceKeyBagCreateDirect() failed: %@
using peerID %@ from backup keybag peers: %@
SecItemBackupRestore for view %@ failed: %@
SecItemBackupRestore for view %@ succeeded
restoring view-based backup for keybag digest %@
skipping KeychainV0-tomb in view-based backups
Retrieving backup for view %@ from %@
restoring backup view %@
Can't restore legacy backup with no keybag
Can't find protected keychain; nothing to restore
restoring legacy backup
looking for record for silent attempt of passphrase length %lu
found preferred record: %@ from %@
checking escrow record: %@ from %@
found clean record with passlen: %lu
escrow passphrase length (%lu) longer than silent attempt passphrase (%lu), skipping
%@ newer than %@
escrow record not same platform, skipping
found silent attempt record with id %@
found backup from %@, keybag digest %@, metadataDigest %@, uuid %@
Found matching backup from this device, skipping keychain restore
Backup does not match this device's last backup uuid (%@)
escrowService stingray recoverRecordWithInfo: returned: %@
=== Escrow record ===
Time of escrow: %@
Escrow version: %@
Keybag digest: %@
backup data version does not match version in escrow
escrowService iDMS recoverRecordWithInfo: returned: %@
=== Escrow record ===
Time of escrow: %@
Escrow version: %@
caching recordID %@
FMiP recovery attempt successful
invalid/malformed recovery key
attempted to recover with empty passphrase
silent attempt failed: no valid record found
escrowService recoverRecordWithInfo: returned: %@
silent attempt succeeded for record ID %@
backup keybag digest does not match version in escrow: %@
PCSBackupRecoveryUsingDeviceSecret() returned %@
escrowService deleteRecordWithInfo: returned: %@
missing parameter: %s metadataHash, %s backOffDate, %s encodedMetadata
encodedMetadata not base64
metadata could not be decoded: %@
missing kSecureBackupClientMetadataKey
SOSCCRegisterRecoveryPublicKey(NULL) failed: %@
update metadata only supported for stingray records
attempted to update stingray metadata, with invalid parameters: %@, %@ metadata hash
updateRecordMetadataWithInfo: returned: %@
attempt to set empty passphrase
error opening temp file: %s
error unlinking temp file: %s
error serializing data: %@
error truncating temp file: %s
error writing temp file: %s
writing temp file count = %ld, expected = %lu
saving uuid %@
error closing temp file: %s
fstat(%d) failed: %s
error reading temp file: %s
reading temp file count = %ld, expected = %zd
error deserializing temp file: %@
fetched uuid %@
uncaching recordID %@
escrowService startSMSChallengeWithInfo: returned: %@
escrowService getCountrySMSCodesWithInfo: returned: %@
attempted to change SMS target, but backup is not enabled
attempted to change SMS target, but not using escrow
attempted to change SMS target, with invalid parameters: %@, %@, %@nil iCloud password
escrowService changeSMSTargetWithInfo: returned: %@
tracing %@ %@ %lld
retry-after date has not passed, throttling calls to escrow proxy until %@
clearing retry-after date
redirect: current URL = %@, original URL = %@, new URL = %@, response headers = %@
in %s
authenticationMethod = %@
trying CompatibilityEscrowProxyService policy
trying EscrowProxyService policy
url session: %@
escrow proxy request returned
starting escrow proxy request
response dict: %@
response retry after date = %@
Certificate pinning error
%s: returned error: %@
NULL escrow proxy policy
SecTrustSetPolicies failed: %d
SecTrustEvaluate() failed: %d
SecTrustEvaluate() passed
SecTrustEvaluate() failed, trustResult %u: %@, properties: %@
SecItemAdd() for bypass token returned %ld
SecItemDelete() for bypass token returned %ld
SecItemCopyMatching() for bypass token returned %ld
in getAccountInfoWithInfo:
calling iCloud accountInfoRequest
Can't get iCloud environment
empty base version array for root type %u in %@ environment
empty cert version array for root type %u in %@ environment
Platform trust versions: %@
Requesting cert for versions: %@
Error getting cert: %@
Certificate encoding error: %@
Error extracting public key from cert: %@
enrollRequest dsid != %@, certResponse.dsid = %@
Error enrolling version: %ld status: %ld (%@)
Missing bypass token (might not be hooked up in iCloud yet)
Missing certificate data
Current Trust Version: %@; Current Cert Version: %@
Cert is newer than trust policy
Cert does not match our trust policy: %@
cert URL = %@
Unable to create SecCertificateRef from response data: %@
Error copying escrow trust policy
SecTrustCreateWithCertificates failed: %ld
Error copying root cert array
SecTrustEvaluate() trust result = %u
SecTrustEvaluate failed: %ld
SecTrustCopyProperties() = %@
SecTrustEvaluate result: %lu
Error extracting public key from certificate
running as uid %d, gid %d
resuming listener
No code for POSIX error: %s (%d)
invalid request: %@
can't process recovery blob with no username
username could not be converted to cstring
ccses_srp_challenge_process failed
error serializing escrow data: %@
Escrow data too long: %lu
Could not create keys: %@
SecKeyCopyPublicKey() failed
Escrow error encrypting data
Local SRP verify failed
Error decoding secret
Error deserializing data: %@
SecKey_cylon_process_blob failed
Server Start Fails
ccses_unpack_clubh_recover_req_pkt Fails
ccsrp_server_verify_session failed
clubh_srp_init_resp_t pkt too small: len=%lu
clubh_srp_init_resp_check_hdr failed=%d
clubh_srp_init_resp_t sect %d is malformed
clubh_recover_resp_t pkt too small: len=%lu
clubh_recovery_rec_t pkt too small: len=%lu
clubh_recovery_rec_check_hdr failed=%d
clubh_recovery_rec_t sect %d is malformed
clubh_key_escrow_data_t pkt too small: len=%u
clubh_key_escrow_data_check_hdr failed=%d
clubh_key_escrow_data_t sect %d is malformed
clubh_recover_req_pkt_t too small: %lu
clubh_recover_req_pkt_check_hdr failed=%d
clubh_recover_req_pkt_t sect %d is malformed
uuid
X-Apple-Request-UUID
version
status
message
errorMessage
errorCode
Ti,R,N
T@"NSString",R,N
clubCert
dsid
clubID
Ti,R,N,V_clubID
cert
T@"NSData",R,N
phoneNumberToken
bypassToken
respBlob
srpData
fmipRecoveryData
recoveryData
metadata
T@"NSDictionary",R,N
smsChallengeLength
smsVerificationCodeLength
T@"NSNumber",R,N
metadataList
label
recordStatus
encodedMetadata
silentAttemptAllowed
SecureBackupRemainingAttempts
remainingAttempts
coolOffEnd
SecureBackupCoolOffEnd
recoveryStatus
SecureBackupRecoveryStatus
triggerUpdate
SecureBackupTriggerUpdate
accountInfo
T@"NSArray",R,N
smsTargetsInfo
countrySMSCodes
com.apple.sbd
0123456789ABCDEF
v20@?0r^v4{_NSRange=II}8^B16
%@ (%@)
v8@?0^{__OpaqueSOSPeerInfo=}4
recovery key (%@)
backup
sqlite3
INSERT OR IGNORE INTO items (hash, class, data) VALUES (?, ?, ?);
DELETE FROM items where hash = ?;
SELECT hash from items ORDER BY hash;
SELECT digest from keybag;
SELECT data from keybag;
SELECT hash, class, data from items;
-[SecureBackupSQLite sqliteExec:]
DROP TABLE items; DROP TABLE keybag;
INSERT INTO keybag (digest, recordID, data) VALUES (?, ?, ?);
VACUUM;
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
keybag
T@"NSData",R
keybagDigest
manifestHash
T^{sqlite3=},V_db
T@"NSURL",R,V_url
recordID
T@"NSString",C,V_recordID
Unexpected item type for kSecBackupEventAdd
data
class
Unexpected item type for kSecBackupEventRemove
v16@?0@"NSData"4@"NSString"8@"NSData"12
Unexpected item type for resetWithKeybag
com.apple.securebackup.record
com.apple.securebackup.keychain
BEGIN TRANSACTION;
keybag.plist
SAVEPOINT migrate_start;
manifest
KeychainV0-tomb
ROLLBACK TO migrate_start;
COMMIT TRANSACTION;
viewName
T@"NSString",R,C,V_viewName
T@"NSURL",R,C,V_url
T@"<SecureBackupDB>",R,V_db
backupData
backupDict
T@"NSDictionary",R
pragma journal_mode = WAL;CREATE TABLE IF NOT EXISTS items(hash BLOB PRIMARY KEY NOT NULL,class TEXT NOT NULL, data BLOB NOT NULL );CREATE TABLE IF NOT EXISTS keybag(digest BLOB PRIMARY KEY NOT NULL,recordID TEXT NOT NULL,data BLOB NOT NULL,timestamp DATETIME DEFAULT CURRENT_TIMESTAMP);
EscrowProxyErrorDomain
Escrow response not a dictionary
Retry-After
en_US_POSIX
EEE, dd MMM yyyy HH:mm:ss Z
retryAfterDate
unexpected response from escrow proxy: URL: %@, headers: %@, data: %@
responseDictionary
T@"NSDictionary",R,N,V_responseDictionary
error
T@"NSError",&,N,V_error
httpResponse
T@"NSHTTPURLResponse",R,N,V_httpResponse
No valid user found
Missing base URL
Missing label
command
%@:%@
%@ %@
Basic
X-MobileMe-Recovery-PET
X-MobileMe-AuthToken
POST
/escrowproxy/api/%@
recordLabel
recoveryPassphrase
escrowRecord
T@"NSDictionary",R,V_escrowRecord
T@"NSDictionary",R,V_metadata
metadataHash
T@"NSString",R,C,V_metadataHash
protocol
T@"NSNumber",R,V_protocol
T@"NSString",R,C,V_command
countryDialCode
T@"NSString",R,C,V_countryDialCode
countryCode
T@"NSString",R,C,V_countryCode
phoneNumber
T@"NSString",R,C,V_phoneNumber
challengeCode
T@"NSString",R,C,V_challengeCode
appleID
T@"NSString",R,C,V_appleID
iCloudPassword
T@"NSString",R,C,V_iCloudPassword
T@"NSString",R,C,V_dsid
authToken
T@"NSString",R,C,V_authToken
T@"NSString",R,C,V_recordID
baseURL
T@"NSString",R,C,V_baseURL
iCloudEnv
T@"NSString",R,C,V_iCloudEnv
T@"NSString",R,C,V_recordLabel
T@"NSString",R,C,V_recoveryPassphrase
stingray
TB,R,V_stingray
iCDP
TB,R,V_iCDP
silentAttempt
TB,R,V_silentAttempt
useRecoveryPET
TB,R,V_useRecoveryPET
fmipRecovery
TB,R,V_fmipRecovery
blob
T@"NSData",&,V_blob
baseRootCertVersions
T@"NSArray",&,V_baseRootCertVersions
trustedRootCertVersions
T@"NSArray",&,V_trustedRootCertVersions
T@"NSString",C,V_bypassToken
fmipUUID
T@"NSString",C,V_fmipUUID
Missing required parameters
/escrowproxy/api/get_club_cert
GETCLUB
ENROLL
countryISOCode
%@.%@
blobDigest
Missing DSID
SRP_INIT
smsChallengeCode
RECOVER
DELETE
UPDATE_RECORD
oldMetadata
newMetadata
/escrowproxy/api/update_blob
GENERATE_SMS_CHALLENGE
/escrowproxy/api/get_records
GETRECORDS
ALTER_SMS_TARGET
Missing parameters
GET_SMS_TARGETS
GET_COUNTRY_SMS_CODES
%@;%@;%@
UNKNOWN
%@/%@
<%@> <%@> <%@>
CloudServices/%@ (%@ %@ (%@))
Simulator
Support
%@/System/Library/CoreServices/SystemVersion.plist
CFBundleVersion
escrowProxyUrl
com.apple.security.keychainchanged
com.apple.securebackupd.access
com.apple.security.itembackup
com.apple.sbd.kvstorechange
com.apple.securebackup.enabled
com.apple.icdpbackup.enabled
com.apple.icdp.backup
DERBackup
com.apple.securebackup.timestamp
SecureBackupService
SecureBackupPublicKeybag
SecureBackupEscrowCert
BackupKeybag
BackupKeybagDigest
BackupBagPassword
BackupVersion
BackupUUID
EMCSBackup
EMCSBackupDict
com.apple.sbd.emcs
BackupUsesEscrow
secureEscrowServiceCnt
disabledKeychainRecoveryCnt
attemptRecoverEscrowPasswdCnt
keychainBackedUpCnt
SecureBackupMetadataTimestamp
escrowPassphraseType
v16@?0@"NSString"4@"NSDictionary"8^B12
 not
v8@?0^{__CFString=}4
timestamp
%@-%@
v12@?0@"NSDictionary"4@"NSError"8
Attempt to back up when backup not enabled
Escrow cert no longer trusted
com.apple.EscrowSecurityAlert.server
v16@?0i4^v8^v12
true
false
attempt to enable backup with non-decimal digits in SMS target: %@
com.apple.sbd.connectionQueue
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}8@?0^{os_state_hints_s=I*II}4
backup enabled
iCDP backup enabled
uses escrow
backup timestamp
keybag digest
%@.%@-tomb
creator
peerIDs
%@ (direct keybag)
backups
sbd KVS data
plist
application-identifier
v8@?0@"NSError"4
com.apple.EscrowSecurityAlert.reset
iCloudIdentity-tomb
no keybag found in iCloudIdentity backup:
-[SecureBackupDaemon getStingrayMetadataWithInfo:error:]
Could not find stingray metadata
-[SecureBackupDaemon _getAccountInfoWithInfo:reply:]
kPCSMetadataiCDP
KVS not available
KVS synchronizeWithCompletionHandler failed
-[SecureBackupDaemon _stashRecoveryDataWithInfo:reply:]
-[SecureBackupDaemon enableWithInfo:reply:]
SecRKRegisterBackupPublicKey() failed
SecRKCreateRecoveryKey() failed
attempted to store stingray identities, with invalid parameters: %@, %@nil iCloud password, %@nil iCloud identity data
Missing cached passphrase
attempted to enable backup, with invalid parameters: %@nil recovery password, %@, %@, %@nil iCloud password
SecPasswordGenerate() failed
could not create backup bag password
could not create backup keybag
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() failed
SOSPeerInfoGetPeerID() failed
SOSPeerInfoCopyBackupKey() returned no backup public key for peer
SOSCCRegisterSingleRecoverySecret() failed
PCSBackupSetupNewDeviceSecret() failed
-[SecureBackupDaemon backupWithInfo:garbageCollect:reply:]
v16@?0@4@8^B12
v8@?0^{__CFError=}4
%@-tomb
Can't restore legacy backup with no keybag
Can't find protected keychain; nothing to restore
could not create DER data from dict
device_platform
_SecKeychainRestoreBackup() returned %ld
before we saved timestamps
attempted restore with backup = %snil, keybag = %snil
non-
backup data version does not match version in escrow
-[SecureBackupDaemon _recoverWithInfo:reply:]
invalid/malformed recovery key
attempted to recover with empty passphrase
silent attempt failed: no valid record found
backup keybag digest does not match version in escrow
-[SecureBackupDaemon deleteAlliCDPRecordsWithInfo:reply:]
-[SecureBackupDaemon backOffDateWithInfo:reply:]
-[SecureBackupDaemon setBackOffDateWithInfo:reply:]
have
missing
missing parameter: %s metadataHash, %s backOffDate, %s encodedMetadata
encodedMetadata not base64
metadata could not be decoded
missing kSecureBackupClientMetadataKey
-[SecureBackupDaemon disableWithInfo:reply:]
-[SecureBackupDaemon updateMetadataWithInfo:reply:]
 metadata only supported for stingray records
attempted to update stingray metadata, with incomplete metadata hash
-[SecureBackupDaemon cachePassphraseWithInfo:reply:]
-[SecureBackupDaemon uncachePassphraseWithInfo:reply:]
-[SecureBackupDaemon startSMSChallengeWithInfo:reply:]
-[SecureBackupDaemon getCountrySMSCodesWithInfo:reply:]
-[SecureBackupDaemon changeSMSTargetWithInfo:reply:]
attempted to change SMS target, but backup is not enabled
attempted to change SMS target, but not using escrow
attempted to change SMS target with invalid parameters
cacheDirURL
T@"NSURL",&,V_cacheDirURL
cachedKeychainURL
T@"NSURL",R,&
cachedManifestURL
iCDPKeybag
T@"NSData",R,V_iCDPKeybag
KVSError
T@"NSError",&,V_KVSError
forceICDP
TB,R
connectionQueue
T@"NSObject<OS_dispatch_queue>",R,&,V_connectionQueue
needInitialBackup
TB,V_needInitialBackup
cachedPassphrase
T@"NSString",C,N
cachedRecordIDPassphrase
cachedRecordID
T@"NSString",C,N,V_cachedRecordID
cachedPassphraseFD
Ti,V_cachedPassphraseFD
cachedRecordIDPassphraseFD
Ti,V_cachedRecordIDPassphraseFD
backupAllowed
iCloudEnvironment
T@"NSString",C,N,V_iCloudEnvironment
com.apple.cloudkeychain
com.apple.icdp
EMCSBackupUUID
Reset
Remove
Complete
unknown
ForceICDP
com.apple.sbd.backupAllowed
retry-after date has not passed, throttling calls to escrow proxy until %@
-[LakituRequest URLSession:task:didReceiveChallenge:completionHandler:]
Content-Type
application/x-apple-plist
Authorization
X-MMe-Client-Info
v16@?0@"NSData"4@"NSURLResponse"8@"NSError"12
Certificate pinning error, please see rdar://problem/15631298
Certificate pinning error
-[LakituRequest performRequestWithHandler:]
urlString
T@"NSString",C,V_urlString
pinningFailure
TB,V_pinningFailure
urlRequest
T@"NSMutableURLRequest",R
responseClass
T#,R,V_responseClass
protocolVersion
T@"NSNumber",R
v4@?0
EscrowService
EscrowServiceBypassToken
Issuer Name
value
2.5.4.5
Error getting account info
v12@?0@"LakituResponse"4@"NSError"8
Can't get iCloud environment
Can't get base cert versions for root type %u in %@ environment
Can't get cert versions for root type %u in %@ environment
Unauthorized
Unexpected error getting club cert
Unexpected error with encoded certificate
Unexpected error with certificate
Mismatched user credential
Error authenticating
Error deserializing data
Error deleting record
Error updating metadata
SMS challenge error
Unable to change SMS Target
Unable to get target list
Unable to get country SMS code list
Missing certificate data
Cert is newer than trust policy
Cert does not match our trust policy
PROD
/AppleInternal/Library/CloudServices/iCloudDevCert.der
Error creating SecCertificateRef
Error copying escrow trust policy
Error copying root cert array
SecTrustEvaluate failed: %u
Unable to extract public key
daemon
SecureBackupPassphrase
SecureBackupSMSTarget
SecureBackupSynchronize
SecureBackupCountrySMSCodes
SecureBackupVerifcationToken
SecureBackupUseCachedPassphrase
SecureBackupMetadata
ClientMetadata
SecureBackupStingrayMetadataHash
SecureBackupStingrayMetadata
SecureBackupEscrowTimestamp
SecureBackupEscrowDate
SecureBackupEscrowDigest
SecureBackupAuthenticationAppleID
SecureBackupAuthenticationPassword
SecureBackupAuthenticationAuthToken
SecureBackupAuthenticationEscrowProxyURL
SecureBackupAuthenticationDSID
SecureBackupAuthenticationiCloudEnvironment
SecureBackupRecoveryKey
SecureBackupUsesRandomPassphrase
SecureBackupUsesComplexPassphrase
SecureBackupUsesNumericPassphrase
SecureBackupNumericPassphraseLength
SecureBackupEnabled
SecureBackupAccountIsHighSecurity
SecureBackupRecoveryRequiresVerificationToken
SecureBackupRecoveryVerificationTokenLength
SecureBackupLastBackupTimestamp
SecureBackupLastBackupDate
SecureBackupEscrowTrustStatus
peerInfo
peerInfoSerialNumber
SecureBackupiCDPRecords
SecureBackupAlliCDPRecords
valid
invalid
SecureBackupErrorDomain
EscrowServiceErrorDomain
SecureBackupiCloudIdentityData
SecureBackupIDMSData
SecureBackupIDMSRecovery
SecureBackupFMiPDataKey
SecureBackupFMiPUUIDKey
SecureBackupFMiPRecoveryKey
SecureBackupContainsiCloudIdentity
SecureBackupUsesMultipleiCSCs
SecureBackupUsesRecoveryKey
SecureBackupSilentRecoveryAttempt
SecureBackupContainsiCDPData
SecureBackupiCloudDataProtectionEnabled
SecureBackupiCloudDataProtectionDeleteAllRecords
SecureBackupBackOffDate
CloudServicesErrorDomain
clubh_key_escrow_data_t pkt too small: len=%u
clubh_key_escrow_data_check_hdr failed=%d
clubh_key_escrow_data_t sect %d is malformed
operation
exception_code
com.apple.ReportCrash.SimulateCrash
v8@?0@"NSObject<OS_xpc_object>"4
result
EscrowServicePassphrase
EscrowServiceNewPassphrase
EscrowServiceEscrowData
date
com.apple.protectedcloudstorage.record
com.apple.icdp.record
EscrowServiceCertificate
EscrowServiceAuthenticationAppleID
EscrowServiceAuthenticationPassword
EscrowServiceAuthenticationAuthToken
EscrowServiceAuthenticationEscrowProxyURL
EscrowServiceAuthenticationiCloudEnvironment
EscrowServiceAuthenticationDSID
EscrowServiceSMSChallengeCode
EscrowServiceAccountInfo
EscrowServiceSMSTargetInfo
EscrowServiceCountrySMSCodes
isHSAEnabled
recoveryRequiresChallengeCode
recoveryChallengeCodeLength
challengeDevices
EscrowOperationStatus
EscrowOperationSucceeded
EscrowServiceUseRecoveryPET
EscrowServiceFMiPData
EscrowServiceFMiPRecovery
EscrowServiceFMiPUUID
dd-MM-yyyy HH:mm:ss
yyyy-MM-dd HH:mm:ss
%s.%@
Escrow data too long
Could not create keys
SecKeyCopyPublicKey() failed
Escrow error encrypting data
Local SRP verify failed
T@"NSString",R,C,V_label
T@"NSDictionary",R,&,V_escrowRecord
decodedLabel
T@"NSString",C,V_decodedLabel
escrowDate
T@"NSDate",C,V_escrowDate
escrowBlob
T@"NSData",&,V_escrowBlob
recoveryBlob
T@"NSData",&,V_recoveryBlob
EscrowGenericResponse
EscrowCertificateResponse
EscrowEnrollmentResponse
EscrowSRPResponse
EscrowRecoveryResponse
EscrowDeleteResponse
EscrowUpdateMetadataResponse
EscrowUpdateBlobResponse
EscrowSMSChallengeResponse
EscrowAccountInfoResponse
EscrowChangeSMSTargetResponse
EscrowListSMSTargetsResponse
EscrowGetCountrySMSCodesResponse
SecureBackup
SecureBackupSQLite
SecureBackupDB
NSObject
SecureBackupViewStore
LakituResponse
EscrowGenericRequest
SRPClientRequest
EscrowPasswordAuthenticatedRequest
EscrowCertificateRequest
EscrowEnrollmentRequest
EscrowSRPRequest
EscrowRecoveryRequest
EscrowDeleteRequest
EscrowUpdateMetadataRequest
EscrowUpdateBlobRequest
EscrowSMSChallengeRequest
EscrowAccountInfoRequest
EscrowChangeSMSTargetRequest
EscrowListSMSTargetsRequest
EscrowGetCountrySMSCodesRequest
SBDeviceInfo
Internal
SecureBackupProtocol
SecureBackupDaemon
NSXPCListenerDelegate
LakituRequest
NSURLSessionDelegate
EscrowService
CloudServicesError
POSIXDate
SBDate
SESWrapper
@16@0:4@8@12
i8@0:4
@8@0:4
v12@0:4@?8
@12@0:4@8
^{sqlite3=}16@0:4@8B12
@16@0:4@"NSURL"8@"NSString"12
B24@0:4@8@12@16^@20
B24@0:4@"NSData"8@"NSData"12@"NSString"16^@20
B16@0:4@8^@12
B16@0:4@"NSData"8^@12
v12@0:4@?<v@?@"NSData"@"NSString"@"NSData">8
v12@0:4@8
v12@0:4@"NSData"8
v8@0:4
B12@0:4@8
B12@0:4@"NSString"8
@"NSData"8@0:4
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
^{sqlite3=}8@0:4
v12@0:4^{sqlite3=}8
^{sqlite3=}
@"NSURL"
@"NSString"
B16@0:4@8@12
@"<SecureBackupDB>"
@16@0:4@8^@12
@"NSDictionary"
@"NSError"
@"NSHTTPURLResponse"
@"NSError"8@0:4
@"NSDictionary"8@0:4
@20@0:4@8@12@16
@"NSNumber"
@"NSData"
@"NSArray"
v16@0:4@8@12
@16@0:4@8^i12
v20@0:4@8@12@16
@12@0:4^@8
v16@0:4B8B12
v12@0:4B8
@12@0:4B8
v16@0:4@8@?12
v16@0:4@"NSDictionary"8@?<v@?@"NSDictionary"@"NSError">12
v16@0:4@"NSDictionary"8@?<v@?@"NSError">12
v12@0:4@"NSDictionary"8
v12@0:4@"NSString"8
v12@0:4@?<v@?@"NSDictionary"@"NSError">8
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}8@0:4
v20@0:4@8B12@?16
@28@0:4@8@12@16@20@24
@16@0:4@8^I12
i12@0:4@8
@12@0:4i8
v12@0:4i8
@"NSObject<OS_dispatch_queue>"
v16@0:4@"NSURLSession"8@"NSError"12
v20@0:4@8@12@?16
v20@0:4@"NSURLSession"8@"NSURLAuthenticationChallenge"12@?<v@?i@"NSURLCredential">16
v12@0:4@"NSURLSession"8
v28@0:4@8@12@16@20@?24
v24@0:4@8@12@16@?20
@12@0:4^{__SecCertificate=}8
@16@0:4I8@12
l12@0:4@8
l12@0:4l8
@16@0:4i8@12
@20@0:4i8@12@16
@24@0:4i8@12@16@20
@20@0:4@8i12@16
@16@0:4^{__SecKey=}8^@12
@16@0:4@8^{__SecKey=}12
^{ccses_crypto_t=^{ccdigest_info}(?=(?=^I^{cczp}(?=^I^{cczp}))^{?}(?=(?=^I^{cczp})^{?}))^{ccmode_ecb}^{ccmode_ecb}^{ccmode_cbc}^{ccmode_cbc}{ccrng_system_state=^?i}^{ccrng_state}IIII}
^{ccsrp_ctx={ccsrp_ctx_header=^{ccdigest_info}(?=(?=^I^{cczp}(?=^I^{cczp}))^{?}(?=(?=^I^{cczp})^{?}))^{ccrng_state}{?=b1b1b1b16}[19C][1I]}}
@"NSDate"
@(#)PROGRAM:com.apple.sbd  PROJECT:CloudServices-222.50.31
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.sbd</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.sbd3</string>
<key>com.apple.escrowservice.access</key>
<true/>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.securebackup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.iaaccounts</key>
<true/>
<key>com.apple.private.keychain-backup-client</key>
<true/>
<key>com.apple.private.protectedcloudstorage.keysyncing</key>
<true/>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.sbd.emcs</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>com.apple.sbd</string>
<string>com.apple.lakitu</string>
<string>com.apple.ProtectedCloudStorage.backup</string>
<string>com.apple.ProtectedCloudStorage</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
<key>platform-application</key>
<true/>
<key>restore-keychain</key>
<true/>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
