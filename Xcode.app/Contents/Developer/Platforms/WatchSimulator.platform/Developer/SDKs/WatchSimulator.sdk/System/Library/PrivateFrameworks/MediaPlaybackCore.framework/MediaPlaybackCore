<%@ %p setupDuration:%f error:%@>
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
error
T@"NSError",&,N,V_error
setupDuration
Td,N,V_setupDuration
MPCAppleMusicPlaybackIntentTracklistTokenStoreIDs
supportsSecureCoding
TB,R
storeIDs
T@"NSArray",C,N,V_storeIDs
 kind=%@
 title=%@
 source=%@
v8@?0@"NSError"4
tracklistDataSource
T@"<MPCPlaybackIntentDataSource>",R,N
kind
Ti,N,V_kind
tracklistSource
Ti,N,V_tracklistSource
tracklistToken
T@"<NSSecureCoding>",&,N,V_tracklistToken
artworkSource
Ti,N,V_artworkSource
artworkToken
T@"<NSSecureCoding>",&,N,V_artworkToken
shuffleMode
Ti,N,V_shuffleMode
playActivityFeatureName
T@"NSString",C,N,V_playActivityFeatureName
playActivityRecommendationData
T@"NSData",C,N,V_playActivityRecommendationData
title
T@"NSString",C,N,V_title
com.apple.MediaPlaybackCore.MPCAppleMusicPlaybackIntentDataSource.operationQueue
v12@?0@"MPStoreItemMetadata"4^B8
v4@?0
v12@?0@"NSDictionary"4@"NSError"8
currentItem
state
parentAppBundleID
systemPlayer
T@"MPCPlayer",R,N,V_systemPlayer
commandCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
applicationPlayer
T@"MPCPlayer",&,N,V_applicationPlayer
com.apple.MediaPlaybackCore.MPCPlaybackHistoryObserver.operationQueue
player
T@"MPCPlayer",R,N,V_player
MPCQueueFeederContentItemIdentifierCollectionDidChangeNotification
MPC_contentItemIdentifierCollection
T@"MPCContentItemIdentifierCollection",R,N
MediaPlaybackCoreErrorDomain
SIM_VOLUME
v12@?0@"MPCPlayerItemContainer"4@"NSError"8
v12@?0@"MPQueueFeeder"4@"NSError"8
v8@?0@"NSArray"4
v8@?0@"MPIdentifierSet"4
v8@?0@"MPModelGenericObject"4
playback_archive
MPCPlayerStateRestorationPlaylistManagerID
MPCPlayerStateRestorationPreviousAttemptPlaylistManagerID
MPCPlayerRestorationPreviousAttemptCount
MPCPlayerStateRestorationPlaylistManagerCoderData
PlaybackLogging
Failed decoding playlist manager %lu times. Skipping.
v12@?0@"MPPlaybackContext"4@"NSError"8
activeRouteName
currentContainer
T@"MPCMediaPlayerLegacyAVController",&,N,V_player
playerObserver
T@"MPCMediaPlayerLegacyNowPlayingObserver",&,N,V_playerObserver
reportingController
T@"MPCMediaPlayerLegacyReportingController",&,N,V_reportingController
avController
T@"MPAVController",R,N
recentStationsController
T@"RadioRecentStationsController",&,N
iAmTheiPod
TB,N,V_iAmTheiPod
hardQueueItemCount
TI,R,N
pictureInPictureSupported
TB,N
fallbackPlaybackIntent
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
music
T@"MPCMediaPlayerLegacyPlayer",W,N,V_player
reportingPlaybackObserver
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
jinglePlayActivityReportingController
T@"MPCJinglePlayActivityReportingController",&,N,V_jinglePlayActivityReportingController
fallbackPlaybackContext
T@"MPPlaybackContext",&,N,V_fallbackPlaybackContext
mpcPlayer
T@"MPCMediaPlayerLegacyPlayer",W,N,V_mpcPlayer
playlistManagerUUID
T@"NSUUID",&,N,V_playlistManagerUUID
MPCAVPlaylistManagerDisableQueueModificationsDidChange
playlistManagerArchiveVersion
hardQueueSourceContexts
hardQueueInsertionIndex
repeatPlaylistIdentifier
softQueueFeeder
disableSoftQueueFaulting
maximumModifiedPlaylistIterationIndex
ignoreSoftQueueInvalidation
ignoreHardQueueInvalidation
softQueueModifications
v16@?0@"_MPCAVItemSourceContext"4I8^B12
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlaylistManager.accessQueue
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlaylistManager.musicPlayerControllerAccessQueue
ignoreUpNextDisabled
com.apple.Music
UpNextDisabled
-[MPCMediaPlayerLegacyPlaylistManager addPlaybackContext:toQueueWithInsertionType:completionHandler:]
Could not add tracks to Up Next
v12@?0I4@"NSError"8
-[MPCMediaPlayerLegacyPlaylistManager clearHardQueue]
-[MPCMediaPlayerLegacyPlaylistManager clearSoftQueue]
-[MPCMediaPlayerLegacyPlaylistManager setDisableQueueModifications:]
-[MPCMediaPlayerLegacyPlaylistManager moveItemAtPlaybackIndex:toPlaybackIndex:intoHardQueue:]
-[MPCMediaPlayerLegacyPlaylistManager removeItemAtPlaybackIndex:]
com.apple.mobileipod.playbackQueueDidChangeNotification
-[MPCMediaPlayerLegacyPlaylistManager _prepareToQueuePlaybackIndex:selectionDirection:]
-[MPCMediaPlayerLegacyPlaylistManager queueFeeder:didChangeContentsWithPreferredStartIndex:error:]
keepingCurrentItem because currentItem was found after invalidation at index %lu.
not keepingCurrentItem because currentItem was not found in active queue feeder.
keepingCurrentItem because preferredStartIndex (%lu) was still currentItem.
not keepingCurrentItem because currentItem was not at the preferredStartIndex (%lu).
keepingCurrentItem because queue changes were not for the active queue feeder.
v8@?0@"MPMusicPlayerControllerQueue"4
allowsUserVisibleUpcomingItems
TB,R,N
canSeek
canSkipToPreviousItem
playbackMode
Ti,R,N
userCanChangeShuffleAndRepeatType
T@"MPQueueFeeder",&,N,V_softQueueFeeder
T@"NSMutableArray",&,N,V_hardQueueSourceContexts
lastPlayedSoftQueueItem
T@"MPAVItem",&,N,V_lastPlayedSoftQueueItem
nextCurrentIndex
Ti,N,V_nextCurrentIndex
Ti,N,V_hardQueueInsertionIndex
repeatPlaylistIdentifer
T@"_MPCAVItemSourceContext",C,N,V_repeatPlaylistIdentifer
T@"_MPCAVPlaylistIteration",&,N,V_softQueueModifications
disableQueueModifications
TB,N,V_disableQueueModifications
hardQueuePlaylistIndexRange
T{_NSRange=II},R,N
softQueuePlaylistIndexRange
queueFeeder
identifier
%@ queueFeeder:%@ itemIdentifier:%@
itemIdentifier
T@"<MPAVItemQueueIdentifier>",&,N,V_itemIdentifier
T@"MPQueueFeeder",&,N,V_queueFeeder
sourceContexts
iterationIndex
count
indexToFaultIn
T@"MPSparseArray",&,N,V_sourceContexts
TI,N,V_iterationIndex
TI,N,V_count
TI,N,V_indexToFaultIn
v8@?0@"MPModelObject"4
artworkCatalog
durationSnapshot
explicit
modelGenericObjectRepresentation
composerName
avItem
T@"MPAVItem",R,N,V_avItem
v24@?0q4r^@12I16^B20
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
requiredPropertiesForStaticMediaClips
T@"MPPropertySet",R,N
request
T@"MPModelRequest",C,N,V_request
startItemIdentifiers
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
com.apple.MediaPlayer.MPCReportingController.accessQueue
parentReportingController
T@"MPCReportingController",W,N
childReportingControllers
T@"NSArray",R,C,N
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
com.apple.MPCFoundation.MPCJinglePlayActivityReportingController.accessSerialQueue
play-activity-feed-post-all-play-starts
playActivityController
T@"SSVPlayActivityController",R,N,V_playActivityController
shouldReportAggregateTimePlayActivityEvents
TB,N,V_shouldReportAggregateTimePlayActivityEvents
shouldReportPlayActivityEvents
TB,N,V_shouldReportPlayActivityEvents
mpcReporting_quickPlay
TB,R,N,GmpcReporting_isQuickPlay
T@"MPAVController",R,N,V_player
offline
TB,N,GisOffline,V_offline
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
storeAccountID
TQ,N,V_storeAccountID
storeFrontID
T@"NSString",C,N,V_storeFrontID
equivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
eventDuration
Td,N,V_eventDuration
overrideItemType
TI,N,V_overrideItemType
lyricsID
T@"NSString",C,N,V_lyricsID
itemGenericObject
T@"MPModelGenericObject",&,N,V_itemGenericObject
shouldReportPlayEventsToStore
TB,N,V_shouldReportPlayEventsToStore
trackInfo
T@"NSData",C,N,V_trackInfo
modelPlayEvent
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
featureName
T@"NSString",C,N,V_featureName
recommendationData
T@"NSData",C,N,V_recommendationData
requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleIdentifier
requestingBundleVersion
T@"NSString",C,N,V_requestingBundleVersion
SSVMutablePlayActivityEvent
Unable to find class %s
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
T@"MPQueueFeeder",R,N,V_queueFeeder
T@"MPRemoteCommandCenter",&,N,V_commandCenter
videoLayer
T@"AVPlayerLayer",R,N,V_videoLayer
T@"NSString",R,C,N,V_activeRouteName
T@"MPCPlayerItemContainer",N,V_currentContainer
T@"MPCPlayerItem",N,V_currentItem
nowPlayingInfoHandlers
playbackErrorObservers
playbackIntentObservers
shouldRestorePlaybackState
TB,N,V_shouldRestorePlaybackState
restoringPlaybackState
TB,R,N,GisRestoringPlaybackState,V_restoringPlaybackState
syncingNowPlayingInfo
TB,R,N,GisSyncingNowPlayingInfo,V_syncingNowPlayingInfo
mediaRemoteMuxer
T@"MPCMediaRemoteMuxer",W,N,V_mediaRemoteMuxer
T@"NSString",C,N,V_parentAppBundleID
Ti,N,V_state
modelSong
T@"MPModelSong",&,N,V_modelSong
visibleDuration
Td,N,V_visibleDuration
T@"MPCPlayerQueueRequest",C,N
responseHandler
T@?,C,N
T@"MPCPlayerQueueRequest",C,N,V_request
T@?,C,N,V_responseHandler
playlistManager
T@"MPCMediaPlayerLegacyPlaylistManager",R,N,V_playlistManager
results
v16@?0@4@"NSDictionary"8^B12
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
playActivityEvent
T@"SSVPlayActivityEvent",C,N,V_playActivityEvent
shouldReportToStore
TB,N,V_shouldReportToStore
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
v8@?0B4
v12@?0@"NSArray"4@"NSError"8
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
T@"MPCPlayer",&,N,V_player
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
mpcReporting_equivalencySourceAdamID
Tq,R,N
mpcReporting_isValidReportingItem
mpcReporting_itemType
mpcReporting_jingleTimedMetadata
T@"NSData",R,C,N
mpcReporting_requestingBundleIdentifier
T@"NSString",R,C,N
mpcReporting_requestingBundleVersion
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_trackInfo
<%@ %p itemType:%@
 identifiers: {
%@: %@
v16@?0I4@8^B12
MPCContentItemIdentifierCollectionItemType
MPCContentItemIdentifierCollectionIdentifierTypeNumberToIdentifier
identifierCount
itemType
TI,R,N,V_itemType
TI,D,N
adamID
globalPlaylistID
stationID
stationStringID
stationHash
mediaLibraryPersistentID
storeCloudID
storeSubscriptionAdamID
unknown
album
album-artist
artist
composer
genre
music-video
playlist
radio-station
song
activity
apple-editor
curator
uploaded-audio
uploaded-video
modelPlayEventRepresentation
T@"MPModelPlayEvent",R,N,V_modelPlayEventRepresentation
container
T@"MPCPlayerItemContainer",W,N,V_container
userInfo
T@"NSDictionary",C,N,V_userInfo
TB,R,N,GisExplicit,V_explicit
representations
T@"NSArray",C,N
T@"MPModelGenericObject",R,N,V_modelGenericObjectRepresentation
albumName
T@"NSString",C,N,V_albumName
artistName
T@"NSString",C,N,V_artistName
T@"NSString",C,N,V_composerName
T{?=dddddfB},R,N,V_durationSnapshot
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.accessQueue
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.internalQueue
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.responseQueue
v12@?0@"SSLookupResponse"4@"NSError"8
storeBagDictionary
T@"NSDictionary",C
T@"NSArray",C
response
T@"MPCStoreContentMetadataResponse",R
allowsStoreContainerImport
TB,N,V_allowsStoreContainerImport
playEvent
T@"MPModelPlayEvent",&,N,V_playEvent
repeatType
Ti,N,V_repeatType
MPCAVItemContentItemIdentifierCollectionDidChangeNotification
class
stringWithFormat:
isValidReportingEvent
reportingEventType
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
.cxx_destruct
error
setError:
setupDuration
setSetupDuration:
_error
_setupDuration
encodeObject:forKey:
init
setWithObjects:
decodeObjectOfClasses:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
storeIDs
setStoreIDs:
_storeIDs
mutableCopy
numberWithInteger:
length
insertString:atIndex:
copy
tracklistDataSourceForSource:
tracklistDataSource
errorWithDomain:code:userInfo:
configureContainer:forPlaybackIntent:completionHandler:
populateContainer:forPlaybackIntent:completionHandler:
_legacyAlternativeRepresentationForPlaybackIntent:player:
alloc
artworkCatalog
configureContainer:completionHandler:
populateItemsForContainer:completionHandler:
_legacyRepresentationForPlayer:
kind
setKind:
title
setTitle:
tracklistSource
setTracklistSource:
tracklistToken
setTracklistToken:
artworkSource
setArtworkSource:
artworkToken
setArtworkToken:
shuffleMode
setShuffleMode:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
_resolvedTracklistDataSource
_kind
_title
_tracklistSource
_tracklistToken
_artworkSource
_artworkToken
_shuffleMode
_playActivityFeatureName
_playActivityRecommendationData
setName:
setMaxConcurrentOperationCount:
count
contextWithBagType:
initWithURLBagContext:
setStoreBagDictionary:
response
newItem
artistName
setArtistName:
name
collectionName
setAlbumName:
offers
countByEnumeratingWithState:objects:count:
assets
previewURL
URLAssetWithURL:options:
initWithURLAsset:
arrayWithObjects:count:
setRepresentations:
appendItem:
enumerateContainerItemsUsingBlock:
setCompletionBlock:
addOperation:
loadWithCompletionBlock:
populateRepresentationsForItem:completionHandler:
_operationQueue
setMediaRemoteMuxer:
commandCenter
stopMediaRemoteSync
_registerForPlayer:
localOrigin
initWithOrigin:bundle:
_setActivePlayer:
_unregisterForPlayer:
_removeSupportedCommands
dealloc
_updateSupportedCommandsForPlayer:
isEqualToString:
objectForKey:
null
integerValue
parentAppBundleID
_updateParentApplication:
stopSyncingNowPlayingInfo
startSyncingNowPlayingInfo
_performCommandEvent:completion:
updateSupportedCommandsForCommandCenter:muxer:action:
_activeCommands
removeTarget:
mediaRemoteOptions
objectForKeyedSubscript:
performCommandEvent:completion:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
origin
initWithSystemPlayer:
invalidateSupportedCommandsForPlayer:
setApplicationPlayer:
observeValueForKeyPath:ofObject:change:context:
systemPlayer
applicationPlayer
_activePlayer
_systemPlayer
_commandCenter
_applicationPlayer
removeObserver:forKeyPath:context:
_handleChangeFromItem:toItem:
container
modelPlayEventRepresentation
modelGenericObjectRepresentation
itemType
album
playlist
artist
radioStation
identifiers
hasCommonIdentifierWithIdentifierSet:
changeRepeatModeCommand
currentRepeatType
setItemGenericObject:
setRepeatType:
setPlayEvent:
setAllowsStoreContainerImport:
newOperationWithResponseHandler:
initWithPlayer:
player
_lastRecordedPlayEvent
_player
MPC_contentItemIdentifierCollection
weakToWeakObjectsMapTable
sharedInstance
setCategory:error:
avPlayer
setVolume:
beginUsingVideoLayer
setMpcPlayer:
setManagesAirPlayBehaviors:
setShouldResetQueueWhenReachingEnd:
defaultCenter
sharedController
registerPlayer:
_playerDidPausePlaybackForLeaseEndNotification:
addObserver:selector:name:object:
setCommandCenter:
setPlaybackQueueDataSource:
setEnabled:
_availableRoutesDidChangeNotification:
_currentItemChangedNotification:
_playbackStateChangedNotification:
_repeatShuffleTypeChangedNotification:
_contentsDidChangeNotification:
_playerPlaybackErrorNotification:
_soundCheckEnabledChangedNotification:
standardUserDefaults
setIAmTheiPod:
removeObserver:
_displayPlaybackState
playbackIntentObservers
player:willAddPlaybackIntent:withOptions:
player:didAddPlaybackIntent:withOptions:error:
setShouldStartPlayback:
setShouldRestartPlayback:
_playlistManager
playlistFeeder
initWithQueueFeeder:
_reloadPlayerWithPlaybackContext:completionHandler:
addPlaybackContext:toQueueWithInsertionType:completionHandler:
command
contentItemID
mediaRemoteCommandType
play
pause
togglePlayback
feeder
currentItem
isAd
canSkipItem:
jumpToItemWithContentID:
isRequestingDefermentToPlaybackQueuePosition
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
type
beginSeek:
endSeek
positionTime
setCurrentTime:
_handleInsertIntoQueueCommandEvent:completionHandler:
insertAfterContextItemID
_indexForStringIdentifier:
moveItemAtPlaybackIndex:toPlaybackIndex:intoHardQueue:
repeatType
preservesRepeatMode
setMusicRepeatType:
activeRepeatType
shuffleType
setShuffleType:
preservesShuffleMode
setMusicShuffleType:
activeShuffleType
removeItemAtPlaybackIndex:
_handleSetQueueCommandEvent:completionHandler:
durationIsValid
durationInSeconds
currentTime
firstObject
dispatchCommandEvent:completion:
endPlayback
recordLyricsViewEvent:
modelSong
initWithBlock:
setSong:
initWithIdentifiers:block:
lyrics
lyricsID
setLyricsID:
modelPlayEvent
setModelPlayEvent:
featureName
setFeatureName:
recommendationData
setRecommendationData:
reportingPlaybackObserver
newPlayActivityEventForSource:
setEventType:
visibleDuration
setItemEndTime:
newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
reportingController
recordReportingEvents:
preservePlaybackStateImmediately
shouldRestorePlaybackState
UUID
supportsStateRestoration
initForWritingWithMutableData:
encodedData
setPlaylistManagerUUID:
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
writeToURL:options:error:
removeItemAtURL:error:
UUIDString
setObject:forKey:
stringForKey:
playlistManagerUUID
integerForKey:
setInteger:forKey:
synchronize
initWithContentsOfURL:options:error:
dataForKey:
initForReadingWithData:
decodeObjectForKey:
finishDecoding
initWithUUIDString:
setPlaylistManager:
setAutoPlayWhenLikelyToKeepUp:
finalizeStateRestorationWithCompletionHandler:
setFallbackPlaybackContext:
isEnabled
videoLayer
routingController
pickedRoute
isDeviceRoute
routeName
sharedAVSystemController
numberWithBool:
setAttribute:forKey:error:
_refreshIAmTheiPod
removeObserver:name:object:
hardQueuePlaylistIndexRange
_shouldVendContentItemForOffset:
currentIndex
_nowplayingContentItemForIndex:
_nowplayingContentItemIdentifierForIndex:
playbackQueue
createPlaybackContextWithCompletion:
insertionPosition
isRequestingImmediatePlayback
disableQueueModifications
preventsHardQueueModificationsForItem:
supportsAddToQueue
code
verifyWithError:
contextID
setSiriReferenceIdentifier:
_updateSupportedCommandsForCommandCenter:target:action:
mediaRemoteMuxer
playCommand
hasTargets
removeTarget:action:
addTarget:action:
pauseCommand
stopCommand
togglePlayPauseCommand
nextTrackCommand
previousTrackCommand
canSeek
changePlaybackPositionCommand
seekForwardCommand
seekBackwardCommand
setCanBeControlledByScrubbing:
canSkipToPreviousItem
userCanChangeShuffleAndRepeatType
changeShuffleModeCommand
advanceRepeatModeCommand
advanceShuffleModeCommand
setCurrentRepeatType:
setCurrentShuffleType:
setPlaybackQueueCommand
insertIntoPlaybackQueueCommand
addObject:
setSupportedInsertionPositions:
reorderQueueCommand
removeFromPlaybackQueueCommand
setDelegate:
createRadioStationCommand
skipForwardCommand
numberWithInt:
setPreferredIntervals:
skipBackwardCommand
prefersSeekOverSkip
willChangeValueForKey:
didChangeValueForKey:
invalidatePlaybackQueue
_notifySupportedCommandsChanged
avItem
queueFeeder
_currentItemInvalidedCommandsNotification:
schedulePlaybackStatePreservation
initWithAVItem:
setContainer:
playbackErrorObservers
playerDidPauseForLeaseEnd:
userInfo
_playerItemForAVItem:
player:didFailToPlayItem:error:
reloadWithPlaybackContext:completionHandler:
updateForSoundCheckDefaultsChange
isMainThread
isSupported
itemForPlaylistIndex:
queueRequestOperationClass
contentItemForOffset:
childContentItemAtIndex:ofItem:
remoteCommand:isSupportedForContentItemIdentifier:
remoteCommand:isEnabledForContentItemIdentifier:
currentContainer
state
addPlaybackIntent:withOptions:completion:
clearPlaybackQueueWithCompletion:
pictureInPictureSupported
setPictureInPictureSupported:
registerWithPlaybackLeaseController:
isRestoringPlaybackState
restorePlaybackStateCompletionHandler:
setFallbackPlaybackIntent:
isMediaRemoteSyncing
isSyncingNowPlayingInfo
activeRouteName
avController
setRecentStationsController:
recentStationsController
startPictureInPicture
hardQueueItemCount
contentItemIdentifierForOffset:
fallbackPlaybackIntent
setPlayer:
playerObserver
setPlayerObserver:
setReportingController:
iAmTheiPod
_avItemToPlayerItemWeakMap
_currentContainer
_currentItem
_isRestoringPlaybackState
_hasReceivedAddPlaybackIntent
_mediaRemoteSync
_iAmTheiPod
_fallbackPlaybackIntent
_playerObserver
_reportingController
initWithController:
currentDevice
defaultStore
initWithWritingStyle:
setShouldReportPlayActivityEvents:
setShouldReportAggregateTimePlayActivityEvents:
addChildReportingController:
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
initWithPlayer:reportingController:
networkType
setOffline:
activeAccount
uniqueIdentifier
unsignedLongLongValue
setStoreAccountID:
setStoreFrontID:
setSBEnabled:
_accountStoreDidChangeNotification:
_cloudServiceControllerSubscriptionStatusDidChangeNotification:
_cloudServiceControllerCloudLibraryEnabledDidChangeNotification:
_networkTypeDidChangeNotification:
_storefrontDidChangeNotification:
beginObservingSubscriptionLease
beginObservingSubscriptionStatus
beginObservingCloudLibraryEnabled
preheatSubscriptionLeaseRequestsWithCompletionHandler:
endObservingSubscriptionLease
endObservingSubscriptionStatus
endObservingCloudLibraryEnabled
setReportingPlaybackObserver:
jinglePlayActivityReportingController
setJinglePlayActivityReportingController:
_rtcReportingController
_reportingPlaybackObserver
_jinglePlayActivityReportingController
_playbackUserDefaultsEQPresetDidChangeNotification:
playWithOptions:
_connectAVPlayer
musicEQPreset
_setEQPreset:
_registerForPlaylistManager:
_queueModificationsDidChangeNotification
_unregisterForPlaylistManager:
playItemAtIndex:withOptions:
isAssetLoaded
defaultItemEQPresetType
setupEQPresetWithDefaultPreset:
postNotificationName:object:
playlistManagerClass
fallbackPlaybackContext
mpcPlayer
_fallbackPlaybackContext
_mpcPlayer
_playlistManagerUUID
_commonInit
decodeIntegerForKey:
decodeBoolForKey:
sourceContexts
enumerateObjectsUsingBlock:
restoreState:
indexSet
setDisableQueueModifications:
encodeInteger:forKey:
encodeBool:forKey:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
queueFeederClass
setPlaybackContextUniqueIdentifier:
_handleConfiguredQueueFeeder:fromPlaybackContext:
itemCount
arrayWithCapacity:
setQueueFeeder:
identifierAtIndex:queueFeeder:
setItemIdentifier:
_softQueuePlaylistIndexRangeIncludingCurrentItem:
_hardQueuePlaylistIndexRangeIncludingCurrentItem:
_insertSoftQueueSourceContext:atIndex:
playlistIdentifier
_playlistIndexOfItemIdentifier:
indexOfObject:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
addObjectsFromArray:
_prepareToQueuePlaybackIndex:selectionDirection:
queueCoordinator
reloadItemsKeepingCurrentItem:
_notifyQueueFeederContentsChanged
reloadWithPlaybackContext:requireFinalTracklist:completionHandler:
_removeHardQueueItems
_itemIsSoftQueueItem:
itemIdentifier
indexOfItemWithIdentifier:
_playlistIterationForQueueFeeder:withMaxQueueIndexToPreload:
removeObjectAtIndex:
setCount:
_itemIsHardQueueItem:
_hardQueueIndexForIndex:
objectAtIndex:
_removeSoftQueueSourceContextAtIndex:
insertObject:atIndex:
_removeSourceContextAtIndex:
playlistIndexOfItem:
_sourceContextForPlaylistIndex:
handlePlaybackFailureForItem:
queueIdentifier
indexOfItemWithIdentifier:queueFeeder:
addIndex:
delegate
playlistManager:didFailLoadingAllItemsForQueueFeeder:
_itemForPlaylistIndex:
_metadataItemForSourceContext:
_invalidateCachedMusicPlayerControllerQueue
containsObject:
removeObject:
items
applyVolumeNormalizationForItem:
player:currentItemWillChangeFromItem:
player:currentItemDidChangeToItem:
_softQueueSourceContextForIndex:
playlistIndexOfItemIdentifier:
removeObjectsInRange:
removeAllObjects
clearHardQueue
removeAllIndexes
setPlaylistFeeder:startIndex:keepPlaying:
repeatMode
setRepeatMode:
_playbackIndexForDelta:fromIndex:ignoreElapsedTime:totalItemCount:didReachEnd:
replaceObjectsInRange:withObjectsFromArray:
postNotificationName:object:userInfo:
playlistIndexOfIndex:inPlaylistFeeder:
_updateMaximumQueueDepthForItemIndex:inQueueFeeder:
queueFeederDidInvalidateRealShuffleType:
_willFinishReloadWithQueueFeeder:fromPlaybackContext:
containsIndex:
uuid
_updateMusicPlayerControllerQueueWithCompletionHandler:
removals
_indexOfMediaItem:
queueDescriptorsToPrepend
playbackContext
queueInsertions
allKeys
reverseObjectEnumerator
mediaItemForIdentifier:
persistentID
valueForProperty:
initWithMediaItems:uuid:
siriReferenceIdentifier
_softQueueIndexForIndex:
_itemForSourceContext:
_queueFeeder:itemForIdentifier:
setPlaylistIdentifier:
metadataItemForIdentifier:
setSourceContexts:
indexToFaultIn
setIndexToFaultIn:
replaceObjectAtIndex:withObject:
itemForIdentifier:
removeObjectAtIndex:returningRemovedObject:
hasItemForIndex:
numberWithUnsignedInteger:
unsignedIntegerValue
keyForObject:
identifierAtIndex:
allowsUserVisibleUpcomingItems
playbackMode
clearSoftQueue
softQueueFeeder
softQueuePlaylistIndexRange
displayIndexForItem:
displayCountForItem:
metadataItemForPlaylistIndex:
player:currentItemDidChangeFromItem:toItem:
playlistFeederForPlaylistIndex:
playlistIndexOfQueueIdentifier:inPlaylistFeeder:
setCurrentIndex:selectionDirection:
playlistIndexWithDelta:fromIndex:ignoreElapsedTime:didReachEnd:
playlistItemCount
queueFeeder:didChangeContentsWithPreferredStartIndex:error:
queueFeeder:didChangeContentsWithReplacementPlaybackContext:
queueCoordinator:itemToFollowItem:
currentQueueUUID
musicPlayerControllerQueueForUUID:
requestMusicPlayerControllerQueueWithCompletionHandler:
setMusicPlayerControllerQueue:withCompletionHandler:
setSoftQueueFeeder:
hardQueueSourceContexts
setHardQueueSourceContexts:
lastPlayedSoftQueueItem
setLastPlayedSoftQueueItem:
nextCurrentIndex
setNextCurrentIndex:
hardQueueInsertionIndex
setHardQueueInsertionIndex:
repeatPlaylistIdentifer
setRepeatPlaylistIdentifer:
softQueueModifications
setSoftQueueModifications:
_ignoreNextIndexChanges
_disableSoftQueueFaulting
_ignoreSoftQueueInvalidation
_ignoreHardQueueInvalidation
_maximumModifiedPlaylistIterationIndex
_minimumPlaylistIndex
_maximumPlaylistIndex
_failedSoftQueueIndexes
_identifiersToIndexes
_accessQueue
_musicPlayerControllerAccessQueue
_currentMusicPlayerControllerQueue
_disableQueueModifications
_softQueueFeeder
_hardQueueSourceContexts
_lastPlayedSoftQueueItem
_nextCurrentIndex
_hardQueueInsertionIndex
_repeatPlaylistIdentifer
_softQueueModifications
copyWithZone:
_itemIdentifier
_queueFeeder
iterationIndex
setIterationIndex:
_sourceContexts
_iterationIndex
_count
_indexToFaultIn
_artworkDidChangeNotification:
_titlesDidChangeNotification:
_durationAvailablityDidChangeNotification:
_modelGenericObjectDidChangeNotification:
_explicitDidChangeNotification:
_timeDidJumpNotification:
_rateDidChangeNotification:
mainTitle
modelGenericObject
_stringForPlaylistIdentifier:
setContentItemID:
copyWithBlock:
copyWithIdentifiers:block:
isExplicitTrack
artworkCatalogForPlaybackTime:
playlistEntry
song
shouldShowComposer
composer
_updateSnapshot
rate
timeIntervalSinceReferenceDate
timeOfSeekableStart
timeOfSeekableEnd
durationIfAvailable
playerItem
_playerRate
isAlwaysLive
durationSnapshot
albumName
isExplicit
composerName
_snapshot
_avItem
_additionalKeysForNowPlayingItem:
nowPlayingInfoHandlers
additionalNowPlayingInfoKeysForPlayerItem:
addEntriesFromDictionary:
identifierForIdentifierType:
predicateWithProperty:equalToInt64:
_MPC_ML3QueryWithEntityClass:predicate:options:
hasEntities
predicateWithProperty:equalToInteger:
predicateMatchingPredicates:
anyEntityPersistentID
predicateWithProperty:equalToValue:
longLongValue
enumeratePersistentIDsAndProperties:ordered:usingBlock:
playlistWithPersistentID:
collectionWithPersistentID:groupingType:verifyExistence:
itemWithPersistentID:verifyExistence:
libraryDataProvider
library
queryWithLibrary:predicate:orderingTerms:usingSections:options:
MPC_entityWithContentItemIdentifierCollection:options:
decodeObjectOfClass:forKey:
requiredPropertiesForStaticMediaClips
request
setRequest:
startItemIdentifiers
setStartItemIdentifiers:
_request
_startItemIdentifiers
playbackIntentWithStartItemIdentifiers:
initWithCapacity:
setParentReportingController:
_recordReportingEvents:
parentReportingController
childReportingControllers
removeChildReportingController:
_childReportingControllers
_parentReportingController
_applicationWillTerminateNotification:
sharedApplication
playActivityEvent
eventType
shouldReportToStore
eventDate
date
_captureNonCatalogAggregatePlayActivityEventWithNonCatalogAggregateEndTime:
storeAccountID
storeFrontID
timeIntervalSinceNow
deviceName
isSBEnabled
isOffline
sourceType
endReasonType
itemEndTime
itemStartTime
sharedBagLoadingController
boolValue
reasonHintType
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
requestAccessToBagUsingBlock:
recordPlayActivityEvents:withCompletionHandler:
_clearNonCatalogAggregatePlayActivityEventData
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
setDeviceName:
setEventDate:
setItemDuration:
setItemType:
setSourceType:
acquirePendingPlayActivityEventsForStoreAccountID:completionHandler:
playActivityController
shouldReportAggregateTimePlayActivityEvents
shouldReportPlayActivityEvents
_accessSerialQueue
_nonCatalogAggregatePlayDuration
_nonCatalogAggregateStartTime
_nonCatalogDeviceName
_nonCatalogOffline
_nonCatalogSBEnabled
_nonCatalogSourceType
_nonCatalogStoreAccountID
_nonCatalogStoreFrontID
_shouldReportAggregateTimePlayActivityEvents
_shouldReportPlayActivityEvents
_playActivityController
subscriptionStatus
MP_capabilities
isCloudLibraryEnabled
mpcReporting_isQuickPlay
_playerItemDidChangeNotification:
_playerItemWillChangeNotification:
_playerPlaybackStateDidChangeNotification:
_playerDidReloadWithPlaybackContextNotification:
_playerWillReloadWithPlaybackContextNotification:
_playerDidSetCurrentTimeNotification:
_playerWillSetCurrentTimeNotification:
eventDuration
itemGenericObject
overrideItemType
trackInfo
systemTimeZone
setEventTimeZone:
hasVideo
isArtistUploadedContent
tvEpisode
movie
originalIdentifierSet
storeSubscriptionAdamID
storeAdamID
setAdamID:
storeCloudAlbumID
setCloudAlbumID:
globalPlaylistID
setGlobalPlaylistID:
storeCloudID
setCloudPlaylistID:
cloudVersionHash
setPlaylistVersionHash:
performWithoutEnforcement:
radioStationStringID
setStationStringID:
radioStationHash
setStationHash:
radioStationID
setStationID:
setContainerType:
setContainerIDs:
setSubscriptionAdamID:
setRadioAdamID:
storePurchasedAdamID
setPurchasedAdamID:
subscriptionAdamID
purchasedAdamID
setCloudID:
equivalencySourceAdamID
setEquivalencySourceAdamID:
setItemIDs:
userAgent
setBuildVersion:
setMediaType:
setTrackInfo:
requestingBundleIdentifier
setRequestingBundleIdentifier:
requestingBundleVersion
setRequestingBundleVersion:
setTimedMetadata:
setPlayActivityEvent:
shouldReportPlayEventsToStore
setShouldReportToStore:
_reportPlaybackEndedForTimeoutWithItem:
mpcReporting_isValidReportingItem
setEndReasonType:
_itemStartTimeForItem:
setItemStartTime:
_itemEndTimeForItem:withProposedEndTime:
_setLastPlayEventEndTimeForCurrentItem:
object
status
didAttemptToLoadAsset
userChangedItemsDuringPlayback
setReasonHintType:
mpcReporting_shouldUseRelativeTimePositions
didHitPlaybackTimeoutEndingPlayback:withCurrentItem:
didTransitionItemForBan:
willHitPlaybackTimeoutEndingPlayback:withCurrentItem:
willTransitionItemForBan:
_currentJingleReportingTimedMetadata
_hasPendingContainerChange
_hasSetLastPlayEventTimeStamp
_isReloadingWithPlaybackContext
_isScrubbing
_itemForCurrentTimeChange
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeStamp
_shouldReportAsPlaying
_startTimeForCurrentTimeChange
_offline
_SBEnabled
_storeFrontID
_storeAccountID
_playerItemDurationIfAvailable
mpcReporting_equivalencySourceAdamID
mpcReporting_itemType
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_trackInfo
setEventDuration:
setOverrideItemType:
setShouldReportPlayEventsToStore:
_shouldReportPlayEventsToStore
_overrideItemType
_lyricsID
_itemGenericObject
_trackInfo
_modelPlayEvent
_featureName
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_equivalencySourceAdamID
_eventDuration
setShouldRestorePlaybackState:
initWithOptions:
addPointer:
pointerAtIndex:
removePointerAtIndex:
allObjects
registerNowPlayingInfoHandler:
registerPlaybackErrorObserver:
registerPlaybackIntentObserver:
unregisterNowPlayingInfoHandler:
unregisterPlaybackErrorObserver:
unregisterPlaybackIntentObserver:
setState:
setCurrentItem:
setCurrentContainer:
setParentAppBundleID:
_nowPlayingInfoHandlers
_playbackErrorObservers
_playbackIntentObservers
_shouldRestorePlaybackState
_restoringPlaybackState
_syncingNowPlayingInfo
_state
_videoLayer
_activeRouteName
_mediaRemoteMuxer
_parentAppBundleID
setModelSong:
setVisibleDuration:
_modelSong
_visibleDuration
responseHandler
finishWithError:
initWithPlaylistManager:
initWithDataSource:
initWithRequest:avController:
setResults:
finish
setResponseHandler:
execute
_responseHandler
playlistManager
section
item
numberOfSections
sectionAtIndex:
numberOfItemsInSection:
itemAtIndexPath:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
_hardQueueRange
_softQueueRange
initWithRequest:
_controllerContentsDidChangeNotification:
_controllerDidChangeItemNotification:
_invalidate
isNSDictionary__
initWithStorePlatformDictionary:
_enumerateStoreItemMetadataItemsWithMetadata:block:
enumerateKeysAndObjectsUsingBlock:
itemKind
childrenStoreIDs
childStorePlatformDictionaryForStoreID:
initWithStorePlatformDictionary:parentStoreItemMetadata:
initWithLookupDictionaries:
_lookupDictionaries
_shouldReportToStore
_playActivityEvent
currentThread
qualityOfService
setQualityOfService:
_finishChangeRequestOperationWithError:
playEvent
deviceLibraryPersistentID
deviceMediaLibrary
setMediaLibrary:
setShouldIncludeNonLibraryEntities:
numberWithLongLong:
predicateWithValue:forProperty:
addFilterPredicate:
playbackHistoryPlaylist
lastObject
subarrayWithRange:
removeItems:atFilteredIndexes:completionBlock:
addItems:completionBlock:
recordPlayEventForAlbumPersistentID:
allowsStoreContainerImport
appendSection:
setShouldLibraryAdd:
setModelObjects:
recordPlayEventForPlaylistPersistentID:
performWithResponseHandler:
mpcReporting_jingleTimedMetadata
playbackItemMetadata
appendString:
appendFormat:
enumerateIdentifiersUsingBlock:
_setIdentifier:forIdentifierType:
_copyWithZone:class:
allocWithZone:
initWithItemType:
isNSNumber__
isNSString__
initWithKeyOptions:valueOptions:capacity:
mutableCopyWithZone:
identifierCount
_identifierTypeToIdentifier
_itemType
setIdentifier:forIdentifierType:
playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:
playableContentManager:initializePlaybackQueueWithCompletionHandler:
playableContentManager:initializePlaybackQueueWithContentItems:completionHandler:
playableContentManager:didUpdateContext:
setUserInfo:
_explicit
_container
_userInfo
_modelPlayEventRepresentation
representations
comparePlaybackOrder:
setComposerName:
_albumName
_artistName
_composerName
_modelGenericObjectRepresentation
_durationSnapshot
insertItem:afterEntity:
removeItem:
removeAllItems
storeBagDictionary
initWithBagDictionary:
initWithURLBagDictionary:
objectsAtIndexes:
initWithPlatformContext:
setPersonalizationStyle:
setKeyProfile:
setItemIdentifiers:
setValue:forRequestParameter:
storeFrontSuffix
setStoreFrontSuffix:
responseDictionary
setResponseBlock:
_response
_storeBagDictionary
_allowsStoreContainerImport
_playEvent
_repeatType
MPCReportingMescalSetupCompletionEvent
MPCReportingEvent
NSObject
MPCAppleMusicPlaybackIntentTracklistToken
NSSecureCoding
NSCoding
MPCPlaybackIntent
MPCAppleMusicPlaybackIntentDataSource
MPCPlaybackIntentDataSource
MPCMediaRemoteMuxer
MPCPlaybackHistoryObserver
MPCContentItemIdentifierCollectionAdditions
MPCMediaPlayerLegacyPlayer
MPNowPlayingPlaybackQueueDataSource
MPRemoteCommandDelegate_Private
MPCMediaPlayerLegacyReportingController
MPCMediaPlayerLegacyAVController
MPCMediaPlayerLegacyPlaylistManager
MPCQueueBehaviorManaging
MPQueueBehaviorManaging
_MPCAVItemSourceContext
MPAVItemPlaylistIdentifier
NSCopying
_MPCAVPlaylistIteration
MPCMediaPlayerLegacyItem
MediaPlayerLegacy
MPCMediaPlayerLegacyNowPlayingObserver
MPCQuickPlayPlaybackIntentDataSource
MPCModelPlaybackIntentTracklistToken
MPCReportingController
MPCJinglePlayActivityReportingController
MPCMediaLibraryPlaybackIntentDataSource
MPCModelPlaybackIntentDataSource
MPCReportingAdditions
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
MPCMediaPlayerLegacyItemContainer
MPCAdditions
MPCPlaybackContextCreating
MPCPlayer
MPCMediaRemoteMuxerDelegate
MPCReportingLyricsViewEvent
MPCMediaPlayerLegacyQueueRequestOperation
MPCPlayerQueueRequestOperation
MPCMediaPlayerLegacyPlayerQueueLazySectionedCollectionDataSource
MPLazySectionedCollectionDataSource
MPCMediaPlayerLegacyPlayerQueueResponse
MPCStoreContentMetadataResponse
MPCReportingPlaybackActivityEvent
MPCPlaybackHistoryRecordChangeRequestOperation
MPCPlayerQueueRequest
MPCPlayerQueueResponse
MPCContentItemIdentifierCollection
NSMutableCopying
MPCMutableContentItemIdentifierCollection
MPCPlayableContentDelegate
MPPlayableContentDelegate
MPCPlayerEntity
MPCPlayerItem
MPCPlayerItemContainer
MPCStoreContentMetadataOperation
MPCPlaybackHistoryRecordChangeRequest
B8@0:4
I8@0:4
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v8@0:4
v12@0:4@8
d8@0:4
v16@0:4d8
@"NSError"
v12@0:4@"NSCoder"8
@12@0:4@8
@12@0:4@"NSCoder"8
@"NSArray"
@12@0:4i8
v16@0:4@8@?12
i8@0:4
v12@0:4i8
@"<MPCPlaybackIntentDataSource>"
@"NSString"
@"<NSSecureCoding>"
@"NSData"
v20@0:4@8@12@?16
v20@0:4@"MPCPlayerItemContainer"8@"MPCPlaybackIntent"12@?<v@?@"NSError">16
v16@0:4@"MPCPlayerItem"8@?<v@?@"NSError">12
@16@0:4@8@12
@16@0:4@"MPCPlaybackIntent"8@"MPCPlayer"12
@"NSOperationQueue"
v24@0:4@8@12@16^v20
@"MPCPlayer"
@"MPRemoteCommandCenter"
v16@0:4@8@12
@"MPModelPlayEvent"
@"MPNowPlayingContentItem"12@0:4i8
@16@0:4i8@12
@"MPNowPlayingContentItem"16@0:4i8@"MPNowPlayingContentItem"12
B16@0:4@8@12
B16@0:4@"MPRemoteCommand"8@"NSString"12
v20@0:4@8I12@?16
v12@0:4@?8
v12@0:4B8
B12@0:4i8
v20@0:4@8@12:16
@"NSMapTable"
@"MPCMediaPlayerLegacyItemContainer"
@"MPCMediaPlayerLegacyItem"
@"MPCPlaybackIntent"
@"MPCMediaPlayerLegacyAVController"
@"MPCMediaPlayerLegacyNowPlayingObserver"
@"MPCMediaPlayerLegacyReportingController"
@"MPRTCReportingController"
@"MPCMediaPlayerLegacyPlayer"
@"MPCReportingPlaybackObserver"
@"MPCJinglePlayActivityReportingController"
v12@0:4I8
@"MPPlaybackContext"
@"NSUUID"
B12@0:4@"MPAVItem"8
v20@0:4@8i12@?16
{_NSRange=II}8@0:4
v20@0:4i8i12B16
I12@0:4@8
v20@0:4@8@12@16
i12@0:4@8
i16@0:4i8@12
i16@0:4@8@12
i16@0:4i8i12
v16@0:4i8i12
B20@0:4@8i12B16
i24@0:4i8i12B16^B20
v20@0:4@8I12@16
B16@0:4@8@?12
i12@0:4i8
{_NSRange=II}12@0:4B8
v16@0:4@8i12
@16@0:4@8I12
@12@0:4I8
I16@0:4@8@12
@16@0:4I8@12
@"NSMutableIndexSet"
@"MPMutableBidirectionalDictionary"
@"NSObject<OS_dispatch_queue>"
@"MPMusicPlayerControllerQueue"
@"MPQueueFeeder"
@"NSMutableArray"
@"MPAVItem"
@"_MPCAVItemSourceContext"
@"_MPCAVPlaylistIteration"
@12@0:4^{_NSZone=}8
@"<MPAVItemQueueIdentifier>"
@"MPSparseArray"
{?=dddddfB}8@0:4
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"isLiveContent"B}
@20@0:4#8@12I16
@"MPModelRequest"
@"MPIdentifierSet"
@"MPCReportingController"
v20@0:4Q8@?16
v28@0:4@8Q12I20@?24
@16@0:4d8
@"SSVPlayActivityController"
v16@0:4B8@12
d20@0:4@8d12
d12@0:4@8
Q8@0:4
v16@0:4Q8
@"MPAVController"
q8@0:4
v16@0:4q8
@"MPModelGenericObject"
v12@0:4@?<v@?@"MPPlaybackContext"@"NSError">8
v20@0:4@"MPRemoteCommandCenter"8@"MPCMediaRemoteMuxer"12:16
@"NSPointerArray"
@"MPCPlayerItem"
@"AVPlayerLayer"
@"MPCPlayerItemContainer"
@"MPCMediaRemoteMuxer"
@"MPModelSong"
@"MPCPlayerQueueRequest"8@0:4
v12@0:4@"MPCPlayerQueueRequest"8
@?8@0:4
@?<v@?@"MPCPlayerQueueResponse"@"NSError">8@0:4
v12@0:4@?<v@?@"MPCPlayerQueueResponse"@"NSError">8
@"MPCPlayerQueueRequest"
I12@0:4I8
@12@0:4@"NSIndexPath"8
@"NSArray"8@0:4
B12@0:4@"<MPLazySectionedCollectionDataSource>"8
{_NSRange="location"I"length"I}
@"MPCMediaPlayerLegacyPlaylistManager"
@"SSVPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@12@0:4@?8
@16@0:4^{_NSZone=}8#12
v16@0:4@8I12
v20@0:4@"MPPlayableContentManager"8@"NSIndexPath"12@?<v@?@"NSError">16
v16@0:4@"MPPlayableContentManager"8@?<v@?@"NSError">12
v20@0:4@"MPPlayableContentManager"8@"NSArray"12@?<v@?@"NSError">16
v16@0:4@"MPPlayableContentManager"8@"MPPlayableContentManagerContext"12
@"NSDictionary"
@"MPCStoreContentMetadataResponse"
Configuring container: %{public}@ for playbackIntent: %{public}@
Populating container: %{public}@ for playbackIntent: %{public}@
Add representations for item: %{public}@
Setting active player: %{public}@
%{public}@ setting parentApplicationBundleID: %{public}@
Skipping playback state preservation for player: %{public}@
Failed to encode playlist manager with exception: %{public}@
Could not open caches url: %{public}@
Failed to write queue archive: %{public}@
Playlist manager has already been restored, skipping restoration
Decoding playlist manager with UUID: %@ [attempt %lu]
Could not open caches url for read: %{public}@
Could not fetch playlist manager archive: %{public}@
Found playlist manager in userDefaults, clearing out
Failed to decode playlist manager with exception: %{public}@
%{public}@ receieved a playback intent while a restore was in flight. Ignoring queue restoration
Could not find playlist manager data to restore, deferring
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Add to playback context failed: %ld
Play queue verification failed with error: %ld
Create playback context failed with error: %ld
Reload with playback context failed with error: %ld
Error setting up playback queue with context. %{public}@
Attempting reload with fallback playback context
Failed with fallback reload with error: %{public}@
Setting %@ EQ to %d
Setting up EQ for %@
%{public}@ Beginning queue restoration.
%{public}@ finalizing queue restoration.
%{public}@ did not find any queue feeders that support state restoration.
%{public}@ playbackContext: %{public}@ insertionType: %d
Refusing hard queue insert for currentItem: %{public}@ soft queue: %{public}@
Setting hard queue with insertion type: %d without a soft queue, using %{public}@ to create a soft queue
Could not find index to append to queue
Hard queue insertion index set to %ld
%{public}@
Ignoring disabling Up Next
Setting disable up next to %d
Moving sourceContext:%{public}@ to index: %lu
%{public}@ skipping because queue modifications are disabled
sourceIndex: %ld
destinationIndex: %ld
Removing last hard queue item
ENDING PLAYBACK -- We failed to load assets for all of the items in the queue. Failed index count: %lu soft queue count: %lu
Preparing to queue index: %ld
Skipping past _hardQueueInsertionIndex: %ld
Popping hard queue source context for range %{public}@
Clearing hard queue because we have skipped over the tracks
Adjusting _nextCurrentIndex to %ld
Adjusting _hardQueueInsertionIndex to %ld
Setting min playlist index to %ld
Setting max playlist index to %ld
Invalidating: %{public}@
Invalidating soft queue, dropping iteration modifications
Soft queue invalidated when we're ignorning changes
%{public}@ invalidated with an error or to 0 items: %{public}@
Setting min playlist index to %lu
Setting max playlist index to %lu
Current queue has been invalidated, preparing to queue index: %lu
Reloading queue coordinator %{public}@
ENDING PLAYBACK -- We have failed all items in the queue at least once.
ENDING PLAYBACK -- We have failed to play the item on repeat at least once.
%{public}@ couldn't find an media item for %{public}@
keeping current hard queue item %{public}@
Requesting source context for index >= NSNotFound, returning nil
Queue Feeder: %{public}@ couldn't find item for queue index: %{public}@
Soft queue faulting disabled for playlist index: %ld
Reporting event not recorded due to it being invalid: %{public}@
[MPCReportingController] Recording reporting events: %@
[MPCReportingPlaybackObserver] Item will change from: %@ to: %@
%{public}@: Invalid identifier (%{public}@: %{public}@) provided for type: %{public}@. Undefined results when using this identifier.
@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
