MbP?
dealloc
stringWithFormat:
exceptionWithName:reason:userInfo:
raise
description
dictionaryRepresentation
dictionary
setObject:forKey:
numberWithFloat:
timeIntervalsCount
clearTimeIntervals
timeIntervalsAtIndex:
addTimeIntervals:
class
allocWithZone:
init
isMemberOfClass:
copyWithZone:
timeIntervals
setTimeIntervals:count:
setThumbnailsWidth:
setHasThumbnailsWidth:
hasThumbnailsWidth
setThumbnailsHeight:
setHasThumbnailsHeight:
hasThumbnailsHeight
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
thumbnailsWidth
thumbnailsHeight
_timeIntervals
_thumbnailsHeight
_thumbnailsWidth
_has
setContext:
numberWithInt:
numberWithBool:
numberWithDouble:
alloc
release
setLocation:
setHasLocation:
hasLocation
setLength:
setHasLength:
hasLength
setIncludeMetadata:
setHasIncludeMetadata:
hasIncludeMetadata
setArtworkWidth:
setHasArtworkWidth:
hasArtworkWidth
setArtworkHeight:
setHasArtworkHeight:
hasArtworkHeight
setIncludeLyrics:
setHasIncludeLyrics:
hasIncludeLyrics
setIncludeSections:
setHasIncludeSections:
hasIncludeSections
setIncludeInfo:
setHasIncludeInfo:
hasIncludeInfo
setIncludeLanguageOptions:
setHasIncludeLanguageOptions:
hasIncludeLanguageOptions
hasContext
location
length
includeMetadata
artworkWidth
artworkHeight
includeLyrics
includeSections
includeInfo
includeLanguageOptions
context
_artworkHeight
_artworkWidth
_context
_length
_location
_includeInfo
_includeLanguageOptions
_includeLyrics
_includeMetadata
_includeSections
setProperties:
numberWithUnsignedLongLong:
setControllerID:
setHasControllerID:
hasControllerID
hasProperties
controllerID
properties
_controllerID
_properties
autorelease
setNowPlayingUpdates:
setArtworkUpdates:
setVolumeUpdates:
setKeyboardUpdates:
setUnderlyingCodableMessage:
underlyingCodableMessage
nowPlayingUpdates
artworkUpdates
volumeUpdates
keyboardUpdates
initWithNowPlayingUpdates:artworkUpdates:volumeUpdates:keyboardUpdates:
type
setToken:
setStartTime:
setHasStartTime:
hasStartTime
setEndTime:
setHasEndTime:
hasEndTime
hasToken
startTime
endTime
token
_endTime
_startTime
_token
setBuffer:
setTime:
hasBuffer
hasTime
setGain:
setHasGain:
hasGain
buffer
time
gain
_gain
_buffer
_time
device
initWithRole:device:
open
removePeer
updatePeer
updateMediaRemotePairedDevice:
retain
pairedPeerDevices
mediaRemotePairedDevices
isEqualToString:
countByEnumeratingWithState:objects:count:
enumerateKeysAndObjectsUsingBlock:
pairingManager
setInvalidationHandler:
setInterruptionHandler:
peerDeviceFromPairedPeer:
addObject:
getPairedPeersWithOptions:completion:
invalidate
info
objectForKey:
identifier
UUIDString
name
model
initWithUUIDString:
setIdentifier:
setName:
setModel:
peerIdentifier
mutableCopy
setInfo:
savePairedPeer:options:completion:
removePairedPeer:options:completion:
mainBundle
bundleIdentifier
isKindOfClass:
boolValue
systemPairingAvailable
globalPairingQueue
setDispatchQueue:
initializePairingSession:
shouldRetry
shouldAutoRetryPairingExchange:
addPeer
pairedPeerDevice
pairedPeerFromPeerDevice:
initWithMaxLowPriorityMessagesAllowed:
weakRefWithObject:
object
UUID
initWithReply:queue:
initWithMessage:createDataBlock:
push:
messagePurgedCallbacks
invoke:
_processNextMessages:
removeObjectForKey:
peek
data
readPosition
setReadPosition:
isFinished
message
messageSentCallbacks
enqueueMessage:reply:queue:createDataBlock:
processNextMessages:
reply:
stop
_pendingMessageQueue
_pendingReplyQueue
_stopped
_queue
copy
reply
queue
_reply
canPurge
_data
_message
_dataBlock
_readPosition
priority
_purge
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
removeObject:
firstObject
objectAtIndex:
removeObjectAtIndex:
count
_messages
_lowPriorityMessagesCount
_maxLowPriorityMessagesAllowed
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
initWithDictionary:
unsignedLongValue
initWithSettings:
initWithFormat:packetCapacity:maximumPacketSize:
initWithFormatSettings:packetCapacity:maximumPacketSize:
formatSettings
_formatSettings
packetCapacity
packetCount
setPacketCount:
packetDescriptions
setSupportedCommands:
removeAllObjects
initWithCapacity:
addSupportedCommand:
supportedCommandsCount
clearSupportedCommands
supportedCommandAtIndex:
supportedCommandType
supportedCommands
_supportedCommands
initWithQueue:
initWithDistributedName:localName:queue:
notifyToken
observerWithQueue:
userInfoForLocalNotification
numberWithUnsignedInt:
defaultCenter
onNotification:
addObserver:selector:name:object:
removeObserver:name:object:
initWithName:callback:
_callback
_name
allKeys
_handleNotification:
removeObserver:
userInfo
postNotificationName:object:userInfo:
initWithNotificationCenter:queue:mappings:createUserInfoTransform:
_mapping
_notificationCenter
_userInfoTransform
nowPlayingInfo
setNowPlayingInfo:
playbackQueue
setPlaybackQueue:
displayID
setDisplayID:
displayName
setDisplayName:
playbackState
isPlaying
setPlaybackState:
initWithNowPlayingState:
_nowPlayingInfo
setState:
state
initWithConnectionState:
encryptionType
setHiliteMode:
hiliteMode
initWithHiliteMode:
setPlaybackQueueContext:
hasNowPlayingInfo
hasSupportedCommands
hasPlaybackQueue
hasDisplayID
hasDisplayName
setHasPlaybackState:
hasPlaybackState
hasPlaybackQueueContext
playbackQueueContext
_displayID
_displayName
_playbackQueue
_playbackQueueContext
_playbackState
sharedServiceClient
service
sharedAVSystemController
setAttribute:forKey:error:
sharedManager
localClient
setCanBeNowPlayingApp:
isOverrideApp
setIsOverrideApp:
registerForNowPlayingNotificationsWithQueue:
unregisterForNowPlayingNotifications
clientForOrigin:
setParentApplication:
parentApplication
setVideoThumbnailsCallback:
setAudioAmplitudeSamplesCallback:
propertyListWithData:options:format:error:
URLWithString:
setObject:forKeyedSubscript:
date
nowPlayingArtwork
objectForKeyedSubscript:
initWithImageData:mimeType:
absoluteString
addEntriesFromDictionary:
MR_isEqualToNowPlayingInfo:
dataWithPropertyList:format:options:error:
setNowPlayingArtwork:
serviceQueue
setLanguageTag:
setCharacteristics:
addCharacteristics:
characteristicsCount
clearCharacteristics
characteristicsAtIndex:
characteristicsType
setType:
setHasType:
hasType
hasLanguageTag
hasIdentifier
languageTag
characteristics
_characteristics
_identifier
_languageTag
_type
setImageData:
initWithData:
imageData
setAlbum:
setArtist:
setTitle:
setRadioStationHash:
setRadioStationName:
setArtworkDataDigest:
numberWithLongLong:
hasAlbum
hasArtist
setDuration:
setHasDuration:
hasDuration
setElapsedTime:
setHasElapsedTime:
hasElapsedTime
setPlaybackRate:
setHasPlaybackRate:
hasPlaybackRate
repeatMode
setRepeatMode:
setHasRepeatMode:
hasRepeatMode
repeatModeAsString:
StringAsRepeatMode:
shuffleMode
setShuffleMode:
setHasShuffleMode:
hasShuffleMode
shuffleModeAsString:
StringAsShuffleMode:
setTimestamp:
setHasTimestamp:
hasTimestamp
hasTitle
setUniqueIdentifier:
setHasUniqueIdentifier:
hasUniqueIdentifier
setIsExplicitTrack:
setHasIsExplicitTrack:
hasIsExplicitTrack
setIsMusicApp:
setHasIsMusicApp:
hasIsMusicApp
setRadioStationIdentifier:
setHasRadioStationIdentifier:
hasRadioStationIdentifier
hasRadioStationHash
hasRadioStationName
hasArtworkDataDigest
setIsAlwaysLive:
setHasIsAlwaysLive:
hasIsAlwaysLive
setIsAdvertisement:
setHasIsAdvertisement:
hasIsAdvertisement
album
artist
duration
elapsedTime
playbackRate
timestamp
title
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationHash
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
_duration
_elapsedTime
_radioStationIdentifier
_timestamp
_uniqueIdentifier
_album
_artist
_artworkDataDigest
_playbackRate
_radioStationHash
_radioStationName
_repeatMode
_shuffleMode
_title
_isAdvertisement
_isAlwaysLive
_isExplicitTrack
_isMusicApp
setSampleRate:
setHasSampleRate:
hasSampleRate
sampleRate
_sampleRate
setMotion:
setButtons:
hasMotion
motion
hasButtons
buttons
initWithGameControllerEvent:controllerID:
initWithButtons:controllerID:
event
shouldLog
_eventInitialized
_hasEvent
_gcEvent
_priority
initWithGameControllerProperties:controllerID:
initWithProperties:
initWithControllerID:
setInputModeFlags:
inputModeFlags
initWithInputMode:
inputMode
setIsPlaying:
clear
_isPlaying
setMetadata:
setArtworkData:
setAvailableLanguageOptions:
setCurrentLanguageOptions:
setLyrics:
setSections:
setParentIdentifier:
setAncestorIdentifier:
setQueueIdentifier:
addAvailableLanguageOptions:
addCurrentLanguageOptions:
addSections:
availableLanguageOptionsCount
clearAvailableLanguageOptions
availableLanguageOptionsAtIndex:
currentLanguageOptionsCount
clearCurrentLanguageOptions
currentLanguageOptionsAtIndex:
sectionsCount
clearSections
sectionsAtIndex:
availableLanguageOptionsType
currentLanguageOptionsType
sectionsType
hasMetadata
hasArtworkData
hasInfo
hasLyrics
hasParentIdentifier
hasAncestorIdentifier
hasQueueIdentifier
metadata
artworkData
availableLanguageOptions
currentLanguageOptions
lyrics
sections
parentIdentifier
ancestorIdentifier
queueIdentifier
_ancestorIdentifier
_artworkData
_availableLanguageOptions
_currentLanguageOptions
_info
_lyrics
_metadata
_parentIdentifier
_queueIdentifier
_sections
setHasState:
hasState
stateAsString:
StringAsState:
_state
setEvent:
setVirtualDeviceID:
setHasVirtualDeviceID:
hasVirtualDeviceID
hasEvent
virtualDeviceID
_virtualDeviceID
_event
setSubtitle:
setAlbumName:
setTrackArtistName:
setAlbumArtistName:
setDirectorName:
setLocalizedContentRating:
setCollectionIdentifier:
setProfileIdentifier:
setArtworkMIMEType:
setAssetURL:
setComposer:
setGenre:
setContentIdentifier:
setRadioStationString:
setPurchaseInfoData:
setAppMetricsData:
setSeriesName:
hasSubtitle
setIsContainer:
setHasIsContainer:
hasIsContainer
setIsPlayable:
setHasIsPlayable:
hasIsPlayable
setPlaybackProgress:
setHasPlaybackProgress:
hasPlaybackProgress
hasAlbumName
hasTrackArtistName
hasAlbumArtistName
hasDirectorName
setSeasonNumber:
setHasSeasonNumber:
hasSeasonNumber
setEpisodeNumber:
setHasEpisodeNumber:
hasEpisodeNumber
setReleaseDate:
setHasReleaseDate:
hasReleaseDate
setPlayCount:
setHasPlayCount:
hasPlayCount
hasLocalizedContentRating
setIsExplicitItem:
setHasIsExplicitItem:
hasIsExplicitItem
setPlaylistType:
setHasPlaylistType:
hasPlaylistType
setRadioStationType:
setHasRadioStationType:
hasRadioStationType
setArtworkAvailable:
setHasArtworkAvailable:
hasArtworkAvailable
setInfoAvailable:
setHasInfoAvailable:
hasInfoAvailable
setLanguageOptionsAvailable:
setHasLanguageOptionsAvailable:
hasLanguageOptionsAvailable
setNumberOfSections:
setHasNumberOfSections:
hasNumberOfSections
setLyricsAvailable:
setHasLyricsAvailable:
hasLyricsAvailable
setEditingStyleFlags:
setHasEditingStyleFlags:
hasEditingStyleFlags
setIsStreamingContent:
setHasIsStreamingContent:
hasIsStreamingContent
setIsCurrentlyPlaying:
setHasIsCurrentlyPlaying:
hasIsCurrentlyPlaying
hasCollectionIdentifier
hasProfileIdentifier
hasArtworkMIMEType
hasAssetURL
hasComposer
setDiscNumber:
setHasDiscNumber:
hasDiscNumber
hasGenre
setChapterCount:
setHasChapterCount:
hasChapterCount
setTotalDiscCount:
setHasTotalDiscCount:
hasTotalDiscCount
setTotalTrackCount:
setHasTotalTrackCount:
hasTotalTrackCount
setTrackNumber:
setHasTrackNumber:
hasTrackNumber
hasContentIdentifier
setIsSharable:
setHasIsSharable:
hasIsSharable
setIsBanned:
setHasIsBanned:
hasIsBanned
setIsLiked:
setHasIsLiked:
hasIsLiked
setIsInWishList:
setHasIsInWishList:
hasIsInWishList
hasRadioStationString
setITunesIdentifier:
setHasITunesIdentifier:
hasITunesIdentifier
setITunesSubscriptionIdentifier:
setHasITunesSubscriptionIdentifier:
hasITunesSubscriptionIdentifier
setITunesArtistIdentifier:
setHasITunesArtistIdentifier:
hasITunesArtistIdentifier
setITunesAlbumIdentifier:
setHasITunesAlbumIdentifier:
hasITunesAlbumIdentifier
hasPurchaseInfoData
setDefaultPlaybackRate:
setHasDefaultPlaybackRate:
hasDefaultPlaybackRate
setDownloadState:
setHasDownloadState:
hasDownloadState
setDownloadProgress:
setHasDownloadProgress:
hasDownloadProgress
hasAppMetricsData
hasSeriesName
setMediaType:
setHasMediaType:
hasMediaType
setMediaSubType:
setHasMediaSubType:
hasMediaSubType
subtitle
isContainer
isPlayable
playbackProgress
albumName
trackArtistName
albumArtistName
directorName
seasonNumber
episodeNumber
releaseDate
playCount
localizedContentRating
isExplicitItem
playlistType
radioStationType
artworkAvailable
infoAvailable
languageOptionsAvailable
numberOfSections
lyricsAvailable
editingStyleFlags
isStreamingContent
isCurrentlyPlaying
collectionIdentifier
profileIdentifier
artworkMIMEType
assetURL
composer
discNumber
genre
chapterCount
totalDiscCount
totalTrackCount
trackNumber
contentIdentifier
isSharable
isBanned
isLiked
isInWishList
radioStationString
iTunesIdentifier
iTunesSubscriptionIdentifier
iTunesArtistIdentifier
iTunesAlbumIdentifier
purchaseInfoData
defaultPlaybackRate
downloadState
downloadProgress
appMetricsData
seriesName
mediaType
mediaSubType
_iTunesAlbumIdentifier
_iTunesArtistIdentifier
_iTunesIdentifier
_iTunesSubscriptionIdentifier
_releaseDate
_albumArtistName
_albumName
_appMetricsData
_artworkMIMEType
_assetURL
_chapterCount
_collectionIdentifier
_composer
_contentIdentifier
_defaultPlaybackRate
_directorName
_discNumber
_downloadProgress
_downloadState
_editingStyleFlags
_episodeNumber
_genre
_localizedContentRating
_mediaSubType
_mediaType
_numberOfSections
_playCount
_playbackProgress
_playlistType
_profileIdentifier
_purchaseInfoData
_radioStationString
_radioStationType
_seasonNumber
_seriesName
_subtitle
_totalDiscCount
_totalTrackCount
_trackArtistName
_trackNumber
_artworkAvailable
_infoAvailable
_isBanned
_isContainer
_isCurrentlyPlaying
_isExplicitItem
_isInWishList
_isLiked
_isPlayable
_isSharable
_isStreamingContent
_languageOptionsAvailable
_lyricsAvailable
setLastSupportedMessageType:
lastSupportedMessageType
initWithLastSupportedMessageType:
initWithDeviceInfo:
deviceInfo
supportedProtocolMessages
_supportedProtocolMessages
handlerReturnStatusCount
clearHandlerReturnStatus
handlerReturnStatusAtIndex:
addHandlerReturnStatus:
setErrorCode:
setHasErrorCode:
hasErrorCode
handlerReturnStatus
setHandlerReturnStatus:count:
errorCode
_handlerReturnStatus
_errorCode
infoDictionary
initWithName:
bytes
packetsFromMessage:completion:
initForWritingWithMutableData:
encodeWithCoder:
finishEncoding
UTF8String
initWithBytes:length:
initForReadingWithData:
initWithCoder:
setSupportedFormats:
setDefaultFormat:
addSupportedFormats:
supportedFormatsCount
clearSupportedFormats
supportedFormatsAtIndex:
supportedFormatsType
hasDefaultFormat
supportedFormats
defaultFormat
_defaultFormat
_supportedFormats
setFormatSettings:
setContents:
setPacketDescriptions:
addPacketDescriptions:
packetDescriptionsCount
clearPacketDescriptions
packetDescriptionsAtIndex:
packetDescriptionsType
hasFormatSettings
setPacketCapacity:
setHasPacketCapacity:
hasPacketCapacity
setMaximumPacketSize:
setHasMaximumPacketSize:
hasMaximumPacketSize
setHasPacketCount:
hasPacketCount
hasContents
maximumPacketSize
contents
_maximumPacketSize
_packetCapacity
_packetCount
_contents
_packetDescriptions
substringToIndex:
uppercaseString
stringByReplacingCharactersInRange:withString:
respondsToSelector:
valueForKey:
methodForSelector:
mr_valueForPotentiallyUndefinedKey:
setValue:forKey:
setDictionaryKeyToProtobufKeyMapping:
createDictionaryFromProtobuf:
createProtobufFromDictionary:
.cxx_destruct
dictionaryKeyToProtobufKeyMapping
protobufClass
setProtobufClass:
dictionaryValueToProtobufValueTransformer
setDictionaryValueToProtobufValueTransformer:
protobufValueToDictionaryValueTransformer
setProtobufValueToDictionaryValueTransformer:
_protobufKeyToDictionaryKeyMapping
_dictionaryKeyToProtobufKeyMapping
_protobufClass
_dictionaryValueToProtobufValueTransformer
_protobufValueToDictionaryValueTransformer
unsignedIntValue
addDeviceIDs:
deviceIDsCount
deviceIDsAtIndex:
initWithDeviceIDs:errorCode:
deviceIDs
protobuf
setDescriptor:
descriptor
initWithProtobuf:
initWithDescriptor:
_descriptor
setDeviceID:
deviceID
initWithDeviceID:errorCode:
initWithRecordingState:
setDataBlock:
_initializeDataIfNecessary
dataBlock
initWithBuffer:time:gain:
setDeviceIdentifier:
deviceIdentifier
initWithErrorCode:deviceIdentifier:
addPackets:
packets
initWithName:packets:
_packets
setPlayerIndex:
setVendorName:
playerIndex
vendorName
buttonAUpDelay
setButtonAUpDelay:
profile
setProfile:
_playerIndex
_vendorName
_profile
_buttonAUpDelay
setPairingData:
hasPairingData
setStatus:
setHasStatus:
hasStatus
setIsRetrying:
setHasIsRetrying:
hasIsRetrying
setIsUsingSystemPairing:
setHasIsUsingSystemPairing:
hasIsUsingSystemPairing
pairingData
status
isRetrying
isUsingSystemPairing
_pairingData
_status
_isRetrying
_isUsingSystemPairing
_object
_objectAddress
setKey:
setData:
hasKey
hasData
_key
setText:
hasText
actionType
setActionType:
setHasActionType:
hasActionType
actionTypeAsString:
StringAsActionType:
text
_actionType
_text
_handleDeviceInfoChanged:
updateWithService:
setNetService:
TXTRecordData
_createDeviceInfoFromTXTRecordData:
_televisionDeviceInfoDidChange:oldDevice:
_teardownCustomOrigin
setDelegate:
hostName
port
inputStream
outputStream
isPaired
_scheduleClientStateUpdatesConfigMessage
observerWithDistributedName:localName:queue:
setVolumeControlNotificationObserver:
dataWithBytes:length:
initWithKey:data:
connection
sendMessage:
_registerOriginCallbacks
_callClientConnectionStateCallback:
_callClientGameControllerInputModeCallback
voiceRecordingState
setVoiceRecordingState:
_callClientRecordingStateCallback
_callCientHiliteModeCallback
setPairingCallback:
setPairingCallbackQueue:
setConnectionStateCallback:
setConnectionStateCallbackQueue:
setGameControllerInputModeCallback:
setGameControllerInputModeCallbackQueue:
setGameControllerPropertiesCallback:
setGameControllerPropertiesCallbackQueue:
setTextInputCallback:
setTextInputCallbackQueue:
setRecordingStateCallback:
setRecordingStateCallbackQueue:
setNameCallback:
setNameCallbackQueue:
setPairingAllowedCallback:
setPairingAllowedCallbackQueue:
setHiliteModeCallback:
setHiliteModeCallbackQueue:
setCustomDataCallback:
setCustomDataCallbackQueue:
setConnectionState:error:
_cleanUp
_initializeConnection
_loadDeviceInfo
cryptoSession
_openSecuritySession
_setupCustomOrigin
disconnect:
_errorForCurrentState
initWithDeviceDescriptor:
error
sendMessage:queue:reply:
isSupported:
initWithTouchEvent:virtualDeviceID:
initWithButtonEvent:
initWithHIDEvent:
decryptedTextUsingCryptoSession:
attributes
initWithText:attributes:
_sendTextInputMessageWithActionType:text:
dictionaryFromTXTRecordData:
initWithData:encoding:
_handleCryptoPairingMessage:
_handleSetStateMessage:
_handleNotificationMessage:
_handleSetArtworkMessage:
setGameControllerInputMode:
_handleSetVolumeControlAvailabilityMessage:
_handleKeyboardMessage:
_handleTransactionMessage:
_callClientGameControllerPropertiesCallback:controller:
_handleDeviceInfoUpdateMessage:
_handleSetConnectionStateMessage:
_handleHiliteModeMessage:
_handleGenericMessage:
getInputStream:outputStream:
mainRunLoop
initWithInputStream:outputStream:runLoop:
setConnection:
streamsAreValid
isValid
setCustomOrigin:
_handleRemoteCommand:withOptions:completion:
currentSettings
televisionTimeoutDuration
setDeviceInfo:
setSupportedMessages:
hasExchangedMessage
initWithPairingData:status:isRetrying:isUsingSystemPairing:state:
setDataExchangeBlock:
_callClientPairingCallback:
setPromptForSetupCodeBlock:
setExchangeCompleteBlock:
setCryptoSession:
errorWithDomain:code:userInfo:
textInputCallback
wantsNowPlayingNotifications
wantsNowPlayingArtworkNotifications
wantsVolumeNotifications
setIsCoalescingClientStateUpdatesConfigMessages:
initWithRequest:
initWithEvent:
initWithActionType:text:
setIsCallingClientCallback:
standardCredentials
characterCount
initWithCommand:options:
sendError
results
handlePairingExchangeData:completion:
handlePairingFailureWithStatus:
_updateNowPlayingInfo
notifications
_updateNowPlayingInfoArtwork
volumeControlAvailable
setEditing:
_callClientTextInputCallback:type:
sendTransaction:withData:forOrigin:
initWithDevice:
_callClientNameCallback
_callClientAllowsPairingCallback
code
_callCientCustomDataCallback:name:
clientConnection:didReceiveMessage:
clientDidDisconnect:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
conformsToProtocol:
retainCount
zone
superclass
debugDescription
initWithNetService:
setWantsNowPlayingNotifications:
setWantsNowPlayingArtworkNotifications:
setWantsVolumeNotifications:
customOrigin
setPairingCallback:withQueue:
setConnectionStateCallback:withQueue:
setGameControllerInputModeCallback:withQueue:
setGameControllerPropertiesCallback:withQueue:
setTextEditingCallback:withQueue:
setVoiceRecordingStateCallback:withQueue:
setNameCallback:withQueue:
setPairingAllowedCallback:withQueue:
setHiliteModeCallback:withQueue:
setCustomDataCallback:withQueue:
connect
unpair
registerTouchDeviceWithDescriptor:replyQueue:completion:
sendTouchEvent:toVirtualDeviceWithID:
sendButtonEvent:
sendHIDEvent:
getTextEditingSessionWithReplyQueue:completion:
insertTextIntoActiveTextEditingSessionWithText:
setTextOnActiveTextEditingSessionWithText:
deleteBackwardInActiveTextEditingSession
clearActiveTextEditingSessionData
registerGameControllerWithProperties:queue:completion:
unregisterGameController:
sendGameControllerEvent:controllerID:
registerVoiceInputDeviceWithDescriptor:replyQueue:completion:
processVoiceInputAudioDataForDeviceID:withBuffer:time:gain:
exitHiliteMode
wake
sendCustomData:withName:
ping:callback:withQueue:
_setupCustomOriginWithReplyQueue:completion:
netService
supportedMessages
volumeControlNotificationObserver
pairingCallback
pairingCallbackQueue
connectionStateCallback
connectionState
connectionStateCallbackQueue
gameControllerInputModeCallback
gameControllerInputMode
gameControllerInputModeCallbackQueue
gameControllerPropertiesCallback
gameControllerPropertiesCallbackQueue
recordingStateCallback
recordingStateCallbackQueue
textInputCallbackQueue
nameCallback
nameCallbackQueue
pairingAllowedCallback
pairingAllowedCallbackQueue
hiliteModeCallback
hiliteModeCallbackQueue
customDataCallback
customDataCallbackQueue
isCoalescingClientStateUpdatesConfigMessages
isCallingClientCallback
_serialQueue
_workerQueue
_customOrigin
_nowPlayingArtwork
_cachedServerDisconnectError
_wantsNowPlayingNotifications
_wantsNowPlayingArtworkNotifications
_wantsVolumeNotifications
_hiliteMode
_isCoalescingClientStateUpdatesConfigMessages
_isCallingClientCallback
_deviceInfo
_netService
_connection
_supportedMessages
_volumeControlNotificationObserver
_pairingCallback
_pairingCallbackQueue
_connectionStateCallback
_connectionState
_connectionStateCallbackQueue
_gameControllerInputModeCallback
_gameControllerInputMode
_gameControllerInputModeCallbackQueue
_gameControllerPropertiesCallback
_gameControllerPropertiesCallbackQueue
_recordingStateCallback
_recordingStateCallbackQueue
_textInputCallback
_textInputCallbackQueue
_nameCallback
_nameCallbackQueue
_pairingAllowedCallback
_pairingAllowedCallbackQueue
_hiliteModeCallback
_hiliteModeCallbackQueue
_customDataCallback
_customDataCallbackQueue
handleFailureInFunction:file:lineNumber:description:
pairedDevices
setVolumeControlAvailable:
initWithAvailableFlag:
setAbsolute:
setHasAbsolute:
hasAbsolute
setIntegratedDisplay:
setHasIntegratedDisplay:
hasIntegratedDisplay
setScreenSizeWidth:
setHasScreenSizeWidth:
hasScreenSizeWidth
setScreenSizeHeight:
setHasScreenSizeHeight:
hasScreenSizeHeight
absolute
integratedDisplay
screenSizeWidth
screenSizeHeight
_screenSizeHeight
_screenSizeWidth
_absolute
_integratedDisplay
removeCommandHandlerBlockForKey:
addCommandHandlerBlock:forKey:
setReceivesSupportedCommandsNotifications:
setCommand:
setOptions:
command
options
raise:format:
initWithDomain:code:userInfo:
close
encryptData:withError:
decryptData:withError:
deleteIdentityWithError:
role
delegate
_device
_role
_delegate
setHasVolumeControlAvailable:
hasVolumeControlAvailable
_volumeControlAvailable
setHasCommand:
hasCommand
commandAsString:
StringAsCommand:
hasOptions
_command
_options
setReport:
hasReport
report
_report
serializationDate
_serializationDate
setPrompt:
setInputTraits:
hasPrompt
hasInputTraits
prompt
inputTraits
_inputTraits
_prompt
setHasNowPlayingUpdates:
hasNowPlayingUpdates
setHasArtworkUpdates:
hasArtworkUpdates
setHasVolumeUpdates:
hasVolumeUpdates
setHasKeyboardUpdates:
hasKeyboardUpdates
_artworkUpdates
_keyboardUpdates
_nowPlayingUpdates
_volumeUpdates
write
updateWithValue:
defaultManager
createFileAtPath:contents:attributes:
appendString:
writeToFile:atomically:encoding:error:
initWithPath:
addMessage:data:
_path
_entries
numberWithUnsignedInteger:
setAvg:
setMin:
setMax:
total
setTotal:
values
setValues:
_avg
_min
_max
_total
_values
setX:
setY:
setPhase:
setFinger:
phase
finger
getBytes:length:
longLongValue
setPackets:
packetsCount
clearPackets
packetsAtIndex:
packetsType
setHasName:
hasName
initWithUTF8String:
setHidEventData:
hidEventData
buttonEvent
weakObjectsPointerArray
allObjects
allTelevisions
null
addPointer:
setCount:
televisionWithName:
registerTelevision:
clearTelevisions
_televisionsPointerArray
allValues
openInState:
_handlePairingFailureWithError:
setInputKey:
setInputNonce:
setOutputKey:
setOutputNonce:
_onQueuePerformPairingExchangeWithInputData:error:
domain
_onQueueInitializePairingSessionWithState:
pairingSession:didPrepareExchangeData:
shouldAutoRetry
retry
initWithLength:
mutableBytes
appendBytes:length:
subdataWithRange:
extendedPeerInfo
stringWithCString:encoding:
peerDeviceFromPeer:
deviceFromPeer:
passcode
pairingSession:showSetupCode:
pairingSessionHideSetupCode:
pairingSession:promptForSetupCodeWithDelay:completion:
_delegateDidEnterPasscode:
_handlePairingCompleteWithError:
pairingSession:didCompleteExchangeWithError:
dataWithBytesNoCopy:length:
_handleSetupExchangeComplete
_onQueueDeriveEncryptionKeys
_generateSetupCodeWithMaximumLength:
_displaySetupCode:
_hideSetupCode
_promptForSetupCodeWithDelay:
inputKey
inputNonce
outputKey
outputNonce
_credentials
_pairingSession
_pairingDelegate
_hasExchangedMessage
_inputKey
_inputNonce
_outputKey
_outputNonce
getCString:maxLength:encoding:
arrayWithObjects:count:
containsObject:
timeIntervalSinceDate:
doubleValue
floatValue
setContentItems:
contentItems
setRevision:
revision
playbackQueueClient
requestedContext
addRequestedPlaybackQueue:forRequest:withContext:
invalidateSourcePlaybackQueue
sourceContext
getSubscribedSourceContentItems:
initWithData:forKey:
setRequestCallback:
addCreateItemCallback:prepend:
addCreateChildItemCallback:prepend:
addMetadataCallback:prepend:
addLanguageOptionsCallback:prepend:
addInfoCallback:prepend:
addLyricsCallback:prepend:
addArtworkCallback:prepend:
initWithIdentifier:publicKey:privateKey:
publicKey
privateKey
_publicKey
_privateKey
recordingState
setRecordingState:
initWithDeviceID:
_deviceID
_recordingState
setJpegData:
hasJpegData
jpegData
_jpegData
_parseBuffer:
_parseTimestamp:
_parseGain:
setFormatSettingsPlistData:
setStartOffset:
setVariableFramesInPacket:
setDataByteSize:
_copyWithZone:usingConcreteClass:
formatSettingsPlistData
dataByteSize
startOffset
variableFramesInPacket
mutableCopyWithZone:
setPairingSession:
setPairingDelegate:
addObjectsFromArray:
setShowSetupCodeBlock:
setHideSetupCodeBlock:
_useSystemPairing
_openSecuritySessionInState:useSystemPairing:completion:
useTelevisionSystemPairing
pairingSession
pairingDelegate
initWithMediaRemoteService:
setRoutingNotificationObservers:
setExternalScreenTypeNotificationObservers:
setOriginNotificationObservers:
setVoiceInputNotificationObservers:
initWithObjects:
setNowPlayingNotificationObservers:
removeOrigin:
fetchPickableRoutesForCategory:completion:
sendPackets:forOrigin:
origin
intValue
metadataCallbacks
languageOptionsCallbacks
infoCallbacks
lyricsCallbacks
artworkCallbacks
numberWithLong:
createChildItemCallbacks
createItemCallbacks
invalidateRequestedPlaybackQueue
isRegisteredForNowPlayingNotifications
setReceivesRoutesChangedNotifications:
setReceivesExternalScreenTypeChangedNotifications:
setReceivesOriginChangedNotifications:
setReceivesVoiceInputRecordingStateNotifications:
registeredOrigins
registerOrigin:withCompletion:
unregisterOrigin:withCompletion:
unregisterAllOriginsWithCompletion:
fetchPickableRoutesWithCategory:completion:
nowPlayingNotificationObservers
routingNotificationObservers
originNotificationObservers
voiceInputNotificationObservers
receivesExternalScreenTypeChangedNotifications
receivesSupportedCommandsNotifications
receivesRoutesChangedNotifications
receivesOriginChangedNotifications
receivesPlaybackErrorNotifications
setReceivesPlaybackErrorNotifications:
receivesVoiceInputRecordingStateNotifications
externalScreenTypeNotificationObservers
_registeredNowPlayingObservers
_registeredOrigins
_routingClientController
_transactionSources
_televisionPairedDevicesChangedObserver
_televisionIsPairingAllowedChangedObserver
_receivesExternalScreenTypeChangedNotifications
_receivesSupportedCommandsNotifications
_receivesRoutesChangedNotifications
_receivesOriginChangedNotifications
_receivesPlaybackErrorNotifications
_receivesVoiceInputRecordingStateNotifications
_nowPlayingNotificationObservers
_routingNotificationObservers
_originNotificationObservers
_voiceInputNotificationObservers
_service
_externalScreenTypeNotificationObservers
commandHandlerBlocks
addSourcePlaybackQueue:forRequest:
requestCallback
transactionCallbacksForName:
videoThumbnailsCallback
audioAmplitudeSamplesCallback
endLyricsEventCallback
beginLyricsEventCallback
setUserData:
hasUserData
userData
_userData
setUsagePage:
setUsage:
setButtonDown:
usagePage
usage
buttonDown
setHasHiliteMode:
hasHiliteMode
setLocalizedTitle:
setLocalizedShortTitle:
preferredIntervalsCount
clearPreferredIntervals
preferredIntervalAtIndex:
addPreferredInterval:
supportedRatesCount
clearSupportedRates
supportedRateAtIndex:
addSupportedRate:
setEnabled:
setHasEnabled:
hasEnabled
setActive:
setHasActive:
hasActive
preferredIntervals
setPreferredIntervals:count:
hasLocalizedTitle
hasLocalizedShortTitle
setMinimumRating:
setHasMinimumRating:
hasMinimumRating
setMaximumRating:
setHasMaximumRating:
hasMaximumRating
supportedRates
setSupportedRates:count:
setPresentationStyle:
setHasPresentationStyle:
hasPresentationStyle
setSkipInterval:
setHasSkipInterval:
hasSkipInterval
setNumAvailableSkips:
setHasNumAvailableSkips:
hasNumAvailableSkips
setSkipFrequency:
setHasSkipFrequency:
hasSkipFrequency
setCanScrub:
setHasCanScrub:
hasCanScrub
enabled
active
localizedTitle
localizedShortTitle
minimumRating
maximumRating
presentationStyle
skipInterval
numAvailableSkips
skipFrequency
canScrub
_preferredIntervals
_supportedRates
_canScrub
_localizedShortTitle
_localizedTitle
_maximumRating
_minimumRating
_numAvailableSkips
_presentationStyle
_skipFrequency
_skipInterval
_active
_enabled
setHasUsagePage:
hasUsagePage
setHasUsage:
hasUsage
setHasButtonDown:
hasButtonDown
_usage
_usagePage
_buttonDown
bundleWithIdentifier:
localizations
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
objectAtIndexedSubscript:
pathForResource:ofType:inDirectory:forLocalization:
initWithContentsOfFile:
localizedStringForKey:value:table:
setAttributes:
setEncryptedTextCyphertext:
hasAttributes
hasEncryptedTextCyphertext
encryptedTextCyphertext
_attributes
_encryptedTextCyphertext
request
setAuthenticationToken:
setSendCommandMessage:
setSendCommandResultMessage:
setGetStateMessage:
setSetStateMessage:
setSetArtworkMessage:
setRegisterHIDDeviceMessage:
setRegisterHIDDeviceResultMessage:
setSendHIDEventMessage:
setSendHIDReportMessage:
setSendVirtualTouchEventMessage:
setNotificationMessage:
setContentItemsChangedNotificationMessage:
setDeviceInfoMessage:
setClientUpdatesConfigMessage:
setVolumeControlAvailabilityMessage:
setGameController:
setRegisterGameController:
setRegisterGameControllerResponse:
setUnregisterGameController:
setRegisterForGameControllerEvents:
setKeyboardMessage:
setGetKeyboardMessage:
setTextInputMessage:
setGetVoiceInputDevicesMessage:
setGetVoiceInputDevicesResponseMessage:
setRegisterVoiceInputDeviceMessage:
setRegisterVoiceInputDeviceResponseMessage:
setSetRecordingStateMessage:
setSendVoiceInputMessage:
setPlaybackQueueRequest:
setTransactionPackets:
setCryptoPairingMessage:
setGameControllerProperties:
setReadyStateMessage:
setConnectionState:
setSendButtonEventMessage:
setSetHiliteModeMessage:
setWakeDeviceMessage:
setGenericMessage:
setSendPackedVirtualTouchEventMessage:
setSendLyricsEventMessage:
typeAsString:
StringAsType:
hasAuthenticationToken
hasSendCommandMessage
hasSendCommandResultMessage
hasGetStateMessage
hasSetStateMessage
hasSetArtworkMessage
hasRegisterHIDDeviceMessage
hasRegisterHIDDeviceResultMessage
hasSendHIDEventMessage
hasSendHIDReportMessage
hasSendVirtualTouchEventMessage
hasNotificationMessage
hasContentItemsChangedNotificationMessage
hasDeviceInfoMessage
hasClientUpdatesConfigMessage
hasVolumeControlAvailabilityMessage
hasGameController
hasRegisterGameController
hasRegisterGameControllerResponse
hasUnregisterGameController
hasRegisterForGameControllerEvents
hasKeyboardMessage
hasGetKeyboardMessage
hasTextInputMessage
hasGetVoiceInputDevicesMessage
hasGetVoiceInputDevicesResponseMessage
hasRegisterVoiceInputDeviceMessage
hasRegisterVoiceInputDeviceResponseMessage
hasSetRecordingStateMessage
hasSendVoiceInputMessage
hasPlaybackQueueRequest
hasTransactionPackets
hasCryptoPairingMessage
hasGameControllerProperties
hasReadyStateMessage
hasConnectionState
hasSendButtonEventMessage
hasSetHiliteModeMessage
hasWakeDeviceMessage
hasGenericMessage
hasSendPackedVirtualTouchEventMessage
hasSendLyricsEventMessage
authenticationToken
sendCommandMessage
sendCommandResultMessage
getStateMessage
setStateMessage
setArtworkMessage
registerHIDDeviceMessage
registerHIDDeviceResultMessage
sendHIDEventMessage
sendHIDReportMessage
sendVirtualTouchEventMessage
notificationMessage
contentItemsChangedNotificationMessage
deviceInfoMessage
clientUpdatesConfigMessage
volumeControlAvailabilityMessage
gameController
registerGameController
registerGameControllerResponse
unregisterGameController
registerForGameControllerEvents
keyboardMessage
getKeyboardMessage
textInputMessage
getVoiceInputDevicesMessage
getVoiceInputDevicesResponseMessage
registerVoiceInputDeviceMessage
registerVoiceInputDeviceResponseMessage
setRecordingStateMessage
sendVoiceInputMessage
playbackQueueRequest
transactionPackets
cryptoPairingMessage
gameControllerProperties
readyStateMessage
sendButtonEventMessage
setHiliteModeMessage
wakeDeviceMessage
genericMessage
sendPackedVirtualTouchEventMessage
sendLyricsEventMessage
_authenticationToken
_clientUpdatesConfigMessage
_contentItemsChangedNotificationMessage
_cryptoPairingMessage
_deviceInfoMessage
_gameController
_gameControllerProperties
_genericMessage
_getKeyboardMessage
_getStateMessage
_getVoiceInputDevicesMessage
_getVoiceInputDevicesResponseMessage
_keyboardMessage
_notificationMessage
_playbackQueueRequest
_readyStateMessage
_registerForGameControllerEvents
_registerGameController
_registerGameControllerResponse
_registerHIDDeviceMessage
_registerHIDDeviceResultMessage
_registerVoiceInputDeviceMessage
_registerVoiceInputDeviceResponseMessage
_sendButtonEventMessage
_sendCommandMessage
_sendCommandResultMessage
_sendHIDEventMessage
_sendHIDReportMessage
_sendLyricsEventMessage
_sendPackedVirtualTouchEventMessage
_sendVirtualTouchEventMessage
_sendVoiceInputMessage
_setArtworkMessage
_setHiliteModeMessage
_setRecordingStateMessage
_setStateMessage
_textInputMessage
_transactionPackets
_unregisterGameController
_volumeControlAvailabilityMessage
_wakeDeviceMessage
hasDescriptor
setHasX:
hasX
setHasY:
hasY
setHasPhase:
hasPhase
phaseAsString:
StringAsPhase:
setHasFinger:
hasFinger
_finger
_phase
setBundleIdentifier:
setParentApplicationBundleIdentifier:
setTintColor:
setProcessIdentifier:
setHasProcessIdentifier:
hasProcessIdentifier
hasBundleIdentifier
hasParentApplicationBundleIdentifier
setProcessUserIdentifier:
setHasProcessUserIdentifier:
hasProcessUserIdentifier
nowPlayingVisibility
setNowPlayingVisibility:
setHasNowPlayingVisibility:
hasNowPlayingVisibility
nowPlayingVisibilityAsString:
StringAsNowPlayingVisibility:
hasTintColor
processIdentifier
parentApplicationBundleIdentifier
processUserIdentifier
tintColor
_bundleIdentifier
_nowPlayingVisibility
_parentApplicationBundleIdentifier
_processIdentifier
_processUserIdentifier
_tintColor
initWithSuiteName:
_boolValueForKey:usingDefaultValue:
synchronize
integerForKey:
_doubleValueForKey:usingDefaultValue:
setBool:forKey:
boolForKey:
setDouble:forKey:
doubleForKey:
usePeerToPeerTelevisionConnections
useNoDelayOptionForTelevisionSockets
useDebugAVRouteWithoutVolumeControl
hasTelevisionSocketQOSLevelSet
televisionSocketQOSLevel
televisionNowPlayingInfoCoalesceDuration
televisionNowPlayingInfoArtworkCoalesceDuration
televisionDisconnectWaitDuration
televisionDisconnectSleepDuration
televisionSleepAssertionOnClientConnectDuration
bluetoothDeviceResumeDuration
broadcastCommandWaitDuration
isTelevisionPairingAllowed
setTelevisionPairingAllowed:
_userDefaults
_televisionPairingAllowed
setHasPlayerIndex:
hasPlayerIndex
hasVendorName
setHasButtonAUpDelay:
hasButtonAUpDelay
setHasProfile:
hasProfile
profileAsString:
StringAsProfile:
setHasStartOffset:
hasStartOffset
setHasVariableFramesInPacket:
hasVariableFramesInPacket
setHasDataByteSize:
hasDataByteSize
_startOffset
_dataByteSize
_variableFramesInPacket
bundleIdentifer
commandHandlerStatuses
allowsKeyedCoding
encodeInt32:forKey:
encodeObject:forKey:
responseData
decodeInt32ForKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
initWithPID:bundleIdentifier:statuses:
initWithPID:bundleIdentifier:responseData:
_commandHandlerStatuses
_responseData
_pid
_bundleIdentifer
setHasDeviceIdentifier:
hasDeviceIdentifier
_deviceIdentifier
localizedModelName
systemBuildVersion
applicationBundleIdentifier
applicationBundleVersion
protocolVersion
allowsPairing
supportsSystemPairing
connected
setLocalizedModelName:
setSystemBuildVersion:
setApplicationBundleIdentifier:
setApplicationBundleVersion:
setProtocolVersion:
setAllowsPairing:
setSupportsSystemPairing:
setConnected:
archivedDataWithRootObject:
unarchiveObjectWithData:
standardUserDefaults
fileExistsAtPath:
unarchiveObjectWithFile:
removeItemAtPath:error:
setTotalLength:
setHasTotalLength:
hasTotalLength
totalLength
_totalLength
hasRevision
_revision
_pickableRoutesDidChangeNotification:
_cacheFetchedPickableRoutes:forCategory:
_flushPendingCompletionHandlersWithPickableRoutes:forCategory:
mediaRemoteService
_mediaRemoteService
_pendingCompletionHandlersForCategories
_cachedRoutesForCategories
hasFormatSettingsPlistData
_formatSettingsPlistData
setSourceID:
setContextID:
setSystemAppPlaybackQueueData:
setDestinationAppDisplayID:
setStationURL:
setContentItemID:
setLanguageOption:
hasSourceID
setExternalPlayerCommand:
setHasExternalPlayerCommand:
hasExternalPlayerCommand
setRating:
setHasRating:
hasRating
setNegative:
setHasNegative:
hasNegative
setPlaybackPosition:
setHasPlaybackPosition:
hasPlaybackPosition
hasContextID
setTrackID:
setHasTrackID:
hasTrackID
setRadioStationID:
setHasRadioStationID:
hasRadioStationID
hasSystemAppPlaybackQueueData
hasDestinationAppDisplayID
setSendOptions:
setHasSendOptions:
hasSendOptions
setRequestDefermentToPlaybackQueuePosition:
setHasRequestDefermentToPlaybackQueuePosition:
hasRequestDefermentToPlaybackQueuePosition
setShouldOverrideManuallyCuratedQueue:
setHasShouldOverrideManuallyCuratedQueue:
hasShouldOverrideManuallyCuratedQueue
hasStationURL
setShouldBeginRadioPlayback:
setHasShouldBeginRadioPlayback:
hasShouldBeginRadioPlayback
setPlaybackQueueInsertionPosition:
setHasPlaybackQueueInsertionPosition:
hasPlaybackQueueInsertionPosition
hasContentItemID
setPlaybackQueueOffset:
setHasPlaybackQueueOffset:
hasPlaybackQueueOffset
setPlaybackQueueDestinationOffset:
setHasPlaybackQueueDestinationOffset:
hasPlaybackQueueDestinationOffset
hasLanguageOption
sourceID
externalPlayerCommand
rating
negative
playbackPosition
contextID
trackID
radioStationID
systemAppPlaybackQueueData
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
playbackQueueOffset
playbackQueueDestinationOffset
languageOption
_playbackPosition
_radioStationID
_trackID
_contentItemID
_contextID
_destinationAppDisplayID
_languageOption
_playbackQueueDestinationOffset
_playbackQueueInsertionPosition
_playbackQueueOffset
_rating
_sendOptions
_sourceID
_stationURL
_systemAppPlaybackQueueData
_externalPlayerCommand
_negative
_requestDefermentToPlaybackQueuePosition
_shouldBeginRadioPlayback
_shouldOverrideManuallyCuratedQueue
initWithSendError:results:
_results
pairingSession:promptForSetupCodeWithCompletion:
dataExchangeBlock
showSetupCodeBlock
hideSetupCodeBlock
promptForSetupCodeBlock
exchangeCompleteBlock
_dataExchangeBlock
_showSetupCodeBlock
_hideSetupCodeBlock
_promptForSetupCodeBlock
_exchangeCompleteBlock
unsignedIntegerValue
applicationProxyForIdentifier:
entitlements
setNotifications:
addNotification:
notificationsCount
clearNotifications
notificationAtIndex:
notificationType
_notifications
appendData:
writeLength
actualLength
writePosition
isReadComplete
initWithBytesNoCopy:length:freeWhenDone:
encodeInteger:forKey:
decodeIntForKey:
merge:
isWriteComplete
isComplete
setWriteLength:
_writePosition
_writeLength
hasMorePacketsToPacketize
hasMorePacketsToUnpacketize
packetize:packageSize:completion:
unpacketize:completion:
_incomingPackets
_outgoingPackets
isActive
_begin
_processMessage:
initWithName:forOrigin:withQueue:
sendPackets:
_packetizer
_origin
_originSources
_query:
transaction:didReceivePackets:completion:
_transactionEnded
_calculateMemory
transactionDidEnd:
transactionRequestingMemorySize:
initWithName:fromMessage:withDelegate:
send:toConnection:completion:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
setGravity:
setUserAcceleration:
gravity
userAcceleration
setButtonA:
setButtonX:
setButtonPause:
setDpadX:
setDpadY:
setButtonB:
setButtonY:
setLeftShoulder:
setRightShoulder:
setLeftThumbstickX:
setLeftThumbstickY:
setRightThumbstickX:
setRightThumbstickY:
setLeftTrigger:
setRightTrigger:
hasButtonA
buttonA
hasButtonX
buttonX
hasButtonPause
buttonPause
hasDpadX
dpadX
hasDpadY
dpadY
hasButtonB
buttonB
hasButtonY
buttonY
hasLeftShoulder
leftShoulder
hasRightShoulder
rightShoulder
hasLeftThumbstickX
leftThumbstickX
hasLeftThumbstickY
leftThumbstickY
hasRightThumbstickX
rightThumbstickX
hasRightThumbstickY
rightThumbstickY
hasLeftTrigger
leftTrigger
hasRightTrigger
rightTrigger
initWithNotifications:
initWithNotification:
initWithArtworkData:
initWithUnderlyingCodableMessage:identifier:error:
sharedLogger
logMessage:protocolMessage:
callbackWithBlock:queue:
addCallback:
currentProtocolVersion
protocolMessageWithProtobufData:
protobufData
setError:
_protobufData
_underlyingCodableMessage
_error
_messageSentCallbacks
_messagePurgedCallbacks
_lastSupportedMessageType
hasLocalizedModelName
hasSystemBuildVersion
hasApplicationBundleIdentifier
hasApplicationBundleVersion
setHasProtocolVersion:
hasProtocolVersion
setHasLastSupportedMessageType:
hasLastSupportedMessageType
setHasSupportsSystemPairing:
hasSupportsSystemPairing
setHasAllowsPairing:
hasAllowsPairing
setHasConnected:
hasConnected
_protocolVersion
_applicationBundleIdentifier
_applicationBundleVersion
_localizedModelName
_systemBuildVersion
_allowsPairing
_connected
_supportsSystemPairing
isAbsolute
isIntegratedDisplay
screenSize
setDeviceDescriptor:
deviceDescriptor
setScreenSize:
_deviceDescriptor
decodeObjectForKey:
allowEmptySelection
encodeBool:forKey:
defaultLanguageOption
languageOptions
decodeBoolForKey:
setAllowEmptySelection:
setDefaultLanguageOption:
setLanguageOptions:
addLanguageOptions:
hasHidEventData
_hidEventData
pINEntrySeparatorIndexesCount
clearPINEntrySeparatorIndexes
pINEntrySeparatorIndexesAtIndex:
addPINEntrySeparatorIndexes:
autocapitalizationType
setAutocapitalizationType:
setHasAutocapitalizationType:
hasAutocapitalizationType
autocapitalizationTypeAsString:
StringAsAutocapitalizationType:
keyboardType
setKeyboardType:
setHasKeyboardType:
hasKeyboardType
keyboardTypeAsString:
StringAsKeyboardType:
returnKeyType
setReturnKeyType:
setHasReturnKeyType:
hasReturnKeyType
returnKeyTypeAsString:
StringAsReturnKeyType:
setAutocorrection:
setHasAutocorrection:
hasAutocorrection
setSpellchecking:
setHasSpellchecking:
hasSpellchecking
setEnablesReturnKeyAutomatically:
setHasEnablesReturnKeyAutomatically:
hasEnablesReturnKeyAutomatically
setSecureTextEntry:
setHasSecureTextEntry:
hasSecureTextEntry
setValidTextRangeLocation:
setHasValidTextRangeLocation:
hasValidTextRangeLocation
setValidTextRangeLength:
setHasValidTextRangeLength:
hasValidTextRangeLength
pINEntrySeparatorIndexes
setPINEntrySeparatorIndexes:count:
autocorrection
spellchecking
enablesReturnKeyAutomatically
secureTextEntry
validTextRangeLocation
validTextRangeLength
_pINEntrySeparatorIndexes
_validTextRangeLength
_validTextRangeLocation
_autocapitalizationType
_keyboardType
_returnKeyType
_autocorrection
_enablesReturnKeyAutomatically
_secureTextEntry
_spellchecking
writeData
insertObject:atIndex:
addPlaybackQueue:forRequest:withContext:
getSubscribedContentItems:
initWithOrigin:queue:
playbackQueueLyricsCallbacks
getSubscribedRequestedContentItems:
setBeginLyricsEventCallback:
setEndLyricsEventCallback:
_requestCallback
_createItemCallbacks
_createChildItemCallbacks
_metadataCallbacks
_languageOptionCallbacks
_infoCallbacks
_lyricsCallbacks
_artworkCallbacks
_requestedClient
_sourceClient
_beginLyricsEventCallback
_endLyricsEventCallback
_notifyRestoreClientStateForLaunch
green
blue
alpha
setRed:
setGreen:
setBlue:
setAlpha:
bundleProxyForIdentifier:
bundleURL
bundleWithURL:
componentsJoinedByString:
initWithFormat:
initWithString:
arrayWithArray:
_OnQueue_setContext:
setItem:
setRequest:
initWithItem:request:
readData:
getSubscribedContentItemsIdentifiers:forRequest:
_cache
_lookup
item
_item
_request
setHasInputModeFlags:
hasInputModeFlags
inputModeFlagsAsString:
StringAsInputModeFlags:
_inputModeFlags
setHasDpadX:
setHasDpadY:
setHasButtonA:
setHasButtonB:
setHasButtonX:
setHasButtonY:
setHasLeftShoulder:
setHasRightShoulder:
setHasLeftThumbstickX:
setHasLeftThumbstickY:
setHasRightThumbstickX:
setHasRightThumbstickY:
setHasLeftTrigger:
setHasRightTrigger:
setHasButtonPause:
_buttonA
_buttonB
_buttonPause
_buttonX
_buttonY
_dpadX
_dpadY
_leftShoulder
_leftThumbstickX
_leftThumbstickY
_leftTrigger
_rightShoulder
_rightThumbstickX
_rightThumbstickY
_rightTrigger
createNowPlayingArtworkFromXPCDictionary:
bindToXPCDictionary:
copyImageData
isEqualToData:
mimeType
_imageData
_mimeType
_avSystemControllerServerConnectionDiedNotification:
_registerDefaultCallbacks
addTransactionCallback:forName:
canBeNowPlayingApp
initWithOrigin:
applicationPickedRoutes
setTransactionCallback:forName:
setApplicationPickedRoutes:
routeDiscoveryMode
setRouteDiscoveryMode:
_canBeNowPlayingApp
_isOverrideApp
_notifyDidLaunchToken
_commandHandlerBlocks
_transactionCallbacks
_applicationPickedRoutes
_routeDiscoveryMode
_parentApplication
_videoThumbnailsCallback
_audioAmplitudeSamplesCallback
_playbackQueueClient
_BoolValue
hasCurrentLanguageOptions
hasAvailableLanguageOptions
longValue
sharedClient
setRecordingStateCallback:forDeviceID:
_recordingStateChangedNotification:
_deviceIDToCallbackMap
initWithMachServiceName:options:
postNotificationName:object:
resume
invokeEventsForController:beacuseElement:
eventForController:element:
sendEventBlock
send
setLastDownEvent:
lastDownEvent
controllerID:setValue:forElement:
setSendEventBlock:
defaultGameControllerDaemonProxy
replyConnectedHosts:
_openConnection
addEmulatedControllerWithProperties:
removeEmulatedController:
controllerID:setValue:forElement:withUpDelay:
controllerID:setDigitizerX:digitizerY:withTimeStamp:touchDown:
controllerID:setArrayValueX:y:z:forElement:
_delayEvent:setValue:forElement:withUpDelay:
addController:
removeController:
controllerWithUDID:setData:
controllerWithUDID:setValue:forElement:
microControllerWithDigitizerX:withY:withTimeStamp:touchDown:
microControllerWithUDID:setDigitizerX:digitizerY:withTimeStamp:touchDown:
_delayedEvents
integerValue
_events
_sendEventBlock
_lastDownEvent
clearDeviceIDs
setDeviceIDs:count:
_deviceIDs
dataUsingEncoding:
initWithState:encryptedTextCyphertext:attributes:
encryptedMessageWithState:text:attributes:usingCryptoSession:
setController:
controller
gameController:propertiesDidChange:
sendGameControllerEvent:
_handleGameControllerDidChange:
_remote
_controller
setUserProvided:
setHasUserProvided:
hasUserProvided
userProvided
_userProvided
_openStream:
forceDisconnect
removeFromRunLoop:forMode:
createHeader:
_flush
_setQOSPropertiesOnStream:
hasBytesAvailable
read:maxLength:
processData:
_disconnectClient
streamError
_preProcessMessage:data:
hasSpaceAvailable
write:maxLength:
setProperty:forKey:
scheduleInRunLoop:forMode:
_adjustTimestamp:
stream:handleEvent:
parser:didParseMessage:
registeredToNowPlayingUpdates
setRegisteredToNowPlayingUpdates:
registeredToNowPlayingArtworkUpdates
setRegisteredToNowPlayingArtworkUpdates:
registeredVolumeControlAvailabilityUpdates
setRegisteredVolumeControlAvailabilityUpdates:
registeredKeyboardUpdates
setRegisteredKeyboardUpdates:
_parser
_runLoop
_messageQueue
_firstClientNanoseconds
_firstDeviceTicks
_disconnected
_registeredToNowPlayingUpdates
_registeredToNowPlayingArtworkUpdates
_registeredVolumeControlAvailabilityUpdates
_registeredKeyboardUpdates
_inputStream
_outputStream
_voiceRecordingState
_cryptoSession
streamStatus
setIncludesPeerToPeer:
endDiscovery
searchForServicesOfType:inDomain:
resolveWithTimeout:
televisionController:didRemoveTelevision:
televisionController:didDiscoverTelevision:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
beginDiscovery
isDiscovering
_serviceBrowser
_discoveredTelevisions
_resolvingServices
_discovering
initWithCallbackBlock:queue:
callbackBlock
_callbackBlock
discoveryCallback
setDiscoveryCallback:
removalCallback
setRemovalCallback:
_discoveryCallback
_removalCallback
languageOptionsCount
clearLanguageOptions
languageOptionsAtIndex:
languageOptionsType
setHasAllowEmptySelection:
hasAllowEmptySelection
hasDefaultLanguageOption
_defaultLanguageOption
_languageOptions
_allowEmptySelection
setHasDeviceID:
hasDeviceID
setHasRecordingState:
hasRecordingState
recordingStateAsString:
StringAsRecordingState:
_originClients
setHasRed:
hasRed
setHasGreen:
hasGreen
setHasBlue:
hasBlue
setHasAlpha:
hasAlpha
_alpha
_blue
_green
_red
initWithPairingData:status:
_screenSize
initWithTitle:prompt:
isEditing
_editing
_buttons
_motion
hasDataBlock
addContentItem:
contentItemsCount
clearContentItems
contentItemAtIndex:
contentItemType
_contentItems
hasImageData
setHasTime:
encodeInt:forKey:
initWithPrimaryAppDisplayID:secondaryAppDisplayID:
primaryApplicationDisplayID
secondaryApplicationDisplayID
shouldPrepareAppPlaybackQueue
creatorProcessID
_primaryApplicationDisplayID
_secondaryApplicationDisplayID
_shouldPrepareAppPlaybackQueue
_creatorProcessID
setPrimaryApplicationDisplayID:
setSecondaryApplicationDisplayID:
setShouldPrepareAppPlaybackQueue:
hasDeviceDescriptor
hasGravity
hasUserAcceleration
_gravity
_userAcceleration
setCharacterCount:
_randomPasscode
setPasscode:
appendFormat:
_characterCount
_passcode
setShouldLog:
_shouldLog
idx (%tu) is out of range (%tu)
%@ %@
timeIntervals
thumbnailsWidth
thumbnailsHeight
timeIntervalsCount
TI,R,N
T^d,R,N
hasThumbnailsWidth
TB,N
Tf,N,V_thumbnailsWidth
hasThumbnailsHeight
Tf,N,V_thumbnailsHeight
location
length
includeMetadata
artworkWidth
artworkHeight
includeLyrics
includeSections
includeInfo
includeLanguageOptions
context
hasLocation
Ti,N,V_location
hasLength
Ti,N,V_length
hasIncludeMetadata
TB,N,V_includeMetadata
hasArtworkWidth
Td,N,V_artworkWidth
hasArtworkHeight
Td,N,V_artworkHeight
hasIncludeLyrics
TB,N,V_includeLyrics
hasIncludeSections
TB,N,V_includeSections
hasIncludeInfo
TB,N,V_includeInfo
hasIncludeLanguageOptions
TB,N,V_includeLanguageOptions
hasContext
TB,R,N
T@"_MRPlaybackQueueContextProtobuf",&,N,V_context
controllerID
properties
hasControllerID
TQ,N,V_controllerID
hasProperties
T@"_MRGameControllerPropertiesProtobuf",&,N,V_properties
nowPlayingUpdates
artworkUpdates
volumeUpdates
keyboardUpdates
startTime
endTime
token
hasStartTime
Td,N,V_startTime
hasEndTime
Td,N,V_endTime
hasToken
T@"_MRLyricsTokenProtobuf",&,N,V_token
buffer
time
gain
hasBuffer
T@"_MRAudioBufferProtobuf",&,N,V_buffer
hasTime
T@"_MRAudioTimeProtobuf",&,N,V_time
hasGain
Td,N,V_gain
PairingSessionSetFlags
CoreUtils
Cannot remove peer, No device available
Cannot update peer, No device available
v16@?0@"NSString"4@8^B12
v4@?0
v12@?0@"NSArray"4@"NSError"8
CUPairedPeer
CUPairingManager Invalidation
CUPairingManager Interuption
v8@?0@"NSError"4
Does not have required entitlements
com.apple.security.exception.mach-lookup.global-name
com.apple.PairingManager
com.apple.PairingManager.RemovePeer
com.apple.PairingManager.Read
com.apple.PairingManager.Write
v16@?0@4@8^B12
com.apple.mediaremoted
CUPairingManager
com.apple.MediaRemote.MRCoreUtilsSystemPairingSession.GlobalQueue
reply
T@?,R,N,V_reply
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
data
T@"NSData",R,N
message
T@"MRProtocolMessage",R,N
readPosition
Ti,N,V_readPosition
finished
TB,R,N,GisFinished
canPurge
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/Television/MRTelevisionMessageQueue.m
<Unknown File>
Removing unfinished message. This is bad
B8@?0I4
AVAudioFormat
AVFoundation
AVAudioCompressedBuffer
T@"AVAudioCompressedBuffer",R,N,V_buffer
formatSettings
T@"NSDictionary",R,N,V_formatSettings
_MRLogForCategory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/Utility/MRLog.m
category < MRLoggingCategoryCOUNT
MediaRemote
NowPlaying
Television
AudioInputPlugin
com.apple.mediaremote
supportedCommand
supportedCommands
T@"NSMutableArray",&,N,V_supportedCommands
nowPlayingInfo
T@"NSDictionary",R,N
T@"NSArray",R,N
playbackQueue
T^v,R,N
displayID
T@"NSString",R,N
displayName
playbackState
state
hiliteMode
playbackQueueContext
hasNowPlayingInfo
T@"_MRNowPlayingInfoProtobuf",&,N,V_nowPlayingInfo
hasSupportedCommands
T@"_MRSupportedCommandsProtobuf",&,N,V_supportedCommands
hasPlaybackQueue
T@"_MRPlaybackQueueProtobuf",&,N,V_playbackQueue
hasDisplayID
T@"NSString",&,N,V_displayID
hasDisplayName
T@"NSString",&,N,V_displayName
hasPlaybackState
TI,N,V_playbackState
hasPlaybackQueueContext
T@"_MRPlaybackQueueContextProtobuf",&,N,V_playbackQueueContext
MRMediaRemoteMediaTypeMusic
MRMediaRemoteMediaTypePodcast
MRMediaRemoteMediaTypeAudioBook
MRMediaRemoteMediaTypeITunesU
kMRMediaRemoteMediaTypeITunesRadio
kMRMediaRemoteNowPlayingInfoTypeAudio
kMRMediaRemoteNowPlayingInfoTypeVideo
kMRMediaRemoteNowPlayingInfoDidChangeNotification
kMRMediaRemoteOriginNowPlayingInfoDidChangeNotification
kMRMediaRemoteOriginUserInfoKey
kMRMediaRemoteOriginDataUserInfoKey
kMRMediaRemoteNowPlayingApplicationDidChangeNotification
kMRMediaRemoteNowPlayingApplicationDisplayNameDidChangeNotification
kMRMediaRemoteNowPlayingApplicationDidRegister
kMRMediaRemoteNowPlayingApplicationDidUnregister
kMRMediaRemoteNowPlayingApplicationClientStateDidChange
kMRMediaRemoteNowPlayingApplicationDisplayNameUserInfoKey
kMRMediaRemoteNowPlayingApplicationIsPlayingDidChangeNotification
kMRMediaRemoteNowPlayingApplicationIsPlayingUserInfoKey
kMRMediaRemoteNowPlayingApplicationPIDUserInfoKey
kMRMediaRemoteNowPlayingApplicationPlaybackStateDidChangeNotification
kMRMediaRemoteAnyApplicationIsPlayingDidChangeNotification
kMRMediaRemoteAnyApplicationIsPlayingUserInfoKey
kMRMediaRemoteNowPlayingInfoAlbum
kMRMediaRemoteNowPlayingInfoAlbumiTunesStoreAdamIdentifier
kMRMediaRemoteNowPlayingInfoArtist
kMRMediaRemoteNowPlayingInfoArtistiTunesStoreAdamIdentifier
kMRMediaRemoteNowPlayingInfoArtworkData
kMRMediaRemoteNowPlayingInfoArtworkMIMEType
kMRMediaRemoteNowPlayingInfoAssetURL
kMRMediaRemoteNowPlayingInfoAvailableLanguageOptionsData
kMRMediaRemoteNowPlayingInfoChapterNumber
kMRMediaRemoteNowPlayingInfoComposer
kMRMediaRemoteNowPlayingInfoCollectionIdentifier
kMRMediaRemoteNowPlayingInfoCurrentLanguageOptionsData
kMRMediaRemoteNowPlayingInfoDefaultPlaybackRate
kMRMediaRemoteNowPlayingInfoDiscNumber
kMRMediaRemoteNowPlayingInfoDownloadProgress
kMRMediaRemoteNowPlayingInfoDownloadState
kMRMediaRemoteNowPlayingInfoDuration
kMRMediaRemoteNowPlayingInfoElapsedTime
kMRMediaRemoteNowPlayingInfoExternalContentIdentifier
kMRMediaRemoteNowPlayingInfoGenre
kMRMediaRemoteNowPlayingInfoIsAdvertisement
kMRMediaRemoteNowPlayingInfoIsAlwaysLive
kMRMediaRemoteNowPlayingInfoIsBanned
kMRMediaRemoteNowPlayingInfoIsExplicitTrack
kMRMediaRemoteNowPlayingInfoIsInWishList
kMRMediaRemoteNowPlayingInfoIsLiked
kMRMediaRemoteNowPlayingInfoIsMusicApp
kMRMediaRemoteNowPlayingInfoIsSharable
kMRMediaRemoteNowPlayingInfoIsVideosApp
kMRMediaRemoteNowPlayingInfoMediaType
kMRMediaRemoteNowPlayingInfoPlaybackRate
kMRMediaRemoteNowPlayingInfoProhibitsSkip
kMRMediaRemoteNowPlayingInfoPurchaseInfoData
kMRMediaRemoteNowPlayingInfoQueueIndex
kMRMediaRemoteNowPlayingInfoRadioStationHash
kMRMediaRemoteNowPlayingInfoRadioStationIdentifier
kMRMediaRemoteNowPlayingInfoRadioStationName
kMRMediaRemoteNowPlayingInfoRadioStationStringIdentifier
kMRMediaRemoteNowPlayingInfoRepeatMode
kMRMediaRemoteNowPlayingInfoShuffleMode
kMRMediaRemoteNowPlayingInfoStartTime
kMRMediaRemoteNowPlayingInfoTimestamp
kMRMediaRemoteNowPlayingInfoTitle
kMRMediaRemoteNowPlayingInfoTotalChapterCount
kMRMediaRemoteNowPlayingInfoTotalDiscCount
kMRMediaRemoteNowPlayingInfoTotalQueueCount
kMRMediaRemoteNowPlayingInfoTotalTrackCount
kMRMediaRemoteNowPlayingInfoTrackNumber
kMRMediaRemoteNowPlayingInfoUniqueIdentifier
kMRMediaRemoteNowPlayingInfoiTunesStoreIdentifier
kMRMediaRemoteNowPlayingInfoiTunesStoreSubscriptionAdamIdentifier
kMRMediaRemoteNowPlayingInfoExternalProfileIdentifier
kMRMediaRemoteNowPlayingInfoPlaybackProgress
kMRMediaRemoteNowPlayingInfoAppMetrics
kMRMediaRemoteNowPlayingPlaybackQueueDidChangeNotification
kMRMediaRemoteNowPlayingExternalTouchBarInvocationNotification
com.apple.MediaRemote.nowPlayingInfoDidChange
com.apple.MediaRemote.nowPlayingApplicationDidChange
com.apple.MediaRemote.nowPlayingApplicationIsPlayingDidChange
com.apple.mobileipod.playbackQueueDidChangeNotification
com.apple.MediaRemote.externalTouchBarInvocation
com.apple.MediaRemote.anyApplicationIsPlayingDidChange
kMRMediaRemoteNowPlayingInfoSupportsIsBanned
kMRMediaRemoteNowPlayingInfoSupportsFastForward15Seconds
kMRMediaRemoteNowPlayingInfoSupportsIsLiked
kMRMediaRemoteNowPlayingInfoSupportsRewind15Seconds
kMRMediaRemoteNowPlayingInfoSupportsWishlisting
kMRMediaRemoteMediaTypeImage
kMRMediaRemoteMediaTypeAudio
kMRMediaRemoteMediaTypeVideo
AVSystemController
Celestial
AVSystemController_CanBeNowPlayingAppAttribute
MRMediaRemoteSetNowPlayingApplicationDisplayIDForOrigin
MRMediaRemoteSetNowPlayingApplicationDisplayName
MRMediaRemoteSetNowPlayingApplicationPlaybackStateForOrigin
MRMediaRemoteGetPlaybackState
MRMediaRemoteGetPlaybackStateForClient
v12@?0^{__CFDictionary=}4^v8
v8@?0^v4
MRMediaRemoteSetNowPlayingInfoForOriginWithMergePolicy
Playing
Paused
Stopped
Interrupted
Unknown
AlwaysVisible
NeverVisible
VisibleWhenBackgrounded
Undefined
v16@?0{?=^{__CFData}^vC}4
image/jpeg
type
languageTag
characteristics
identifier
hasType
Ti,N,V_type
hasLanguageTag
T@"NSString",&,N,V_languageTag
T@"NSMutableArray",&,N,V_characteristics
hasIdentifier
T@"NSString",&,N,V_identifier
album
artist
duration
elapsedTime
playbackRate
repeatMode
shuffleMode
timestamp
title
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationHash
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
hasAlbum
T@"NSString",&,N,V_album
hasArtist
T@"NSString",&,N,V_artist
hasDuration
Td,N,V_duration
hasElapsedTime
Td,N,V_elapsedTime
hasPlaybackRate
Tf,N,V_playbackRate
hasRepeatMode
Ti,N,V_repeatMode
hasShuffleMode
Ti,N,V_shuffleMode
hasTimestamp
Td,N,V_timestamp
hasTitle
T@"NSString",&,N,V_title
hasUniqueIdentifier
TQ,N,V_uniqueIdentifier
hasIsExplicitTrack
TB,N,V_isExplicitTrack
hasIsMusicApp
TB,N,V_isMusicApp
hasRadioStationIdentifier
Tq,N,V_radioStationIdentifier
hasRadioStationHash
T@"NSString",&,N,V_radioStationHash
hasRadioStationName
T@"NSString",&,N,V_radioStationName
hasArtworkDataDigest
T@"NSData",&,N,V_artworkDataDigest
hasIsAlwaysLive
TB,N,V_isAlwaysLive
hasIsAdvertisement
TB,N,V_isAdvertisement
None
(unknown: %i)
Albums
Songs
sampleRate
hasSampleRate
Td,N,V_sampleRate
event
T^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})},R,N
TQ,R,N
inputMode
T@"NSDictionary",&,N,V_nowPlayingInfo
T@"NSArray",&,N,V_supportedCommands
isPlaying
TB,N,V_isPlaying
T^v,N,V_playbackQueue
metadata
artworkData
info
availableLanguageOptions
currentLanguageOptions
lyrics
sections
parentIdentifier
ancestorIdentifier
queueIdentifier
hasMetadata
T@"_MRContentItemMetadataProtobuf",&,N,V_metadata
hasArtworkData
T@"NSData",&,N,V_artworkData
hasInfo
T@"NSString",&,N,V_info
T@"NSMutableArray",&,N,V_availableLanguageOptions
T@"NSMutableArray",&,N,V_currentLanguageOptions
hasLyrics
T@"_MRLyricsItemProtobuf",&,N,V_lyrics
T@"NSMutableArray",&,N,V_sections
hasParentIdentifier
T@"NSString",&,N,V_parentIdentifier
hasAncestorIdentifier
T@"NSString",&,N,V_ancestorIdentifier
hasQueueIdentifier
T@"NSString",&,N,V_queueIdentifier
hasState
Ti,N,V_state
Recording
NotRecording
virtualDeviceID
hasVirtualDeviceID
TQ,N,V_virtualDeviceID
hasEvent
T@"_MRVirtualTouchEventProtobuf",&,N,V_event
subtitle
isContainer
isPlayable
playbackProgress
albumName
trackArtistName
albumArtistName
directorName
seasonNumber
episodeNumber
releaseDate
playCount
localizedContentRating
isExplicitItem
playlistType
radioStationType
artworkAvailable
infoAvailable
languageOptionsAvailable
numberOfSections
lyricsAvailable
editingStyleFlags
isStreamingContent
isCurrentlyPlaying
collectionIdentifier
profileIdentifier
artworkMIMEType
assetURL
composer
discNumber
genre
chapterCount
totalDiscCount
totalTrackCount
trackNumber
contentIdentifier
isSharable
isBanned
isLiked
isInWishList
radioStationString
iTunesIdentifier
iTunesSubscriptionIdentifier
iTunesArtistIdentifier
iTunesAlbumIdentifier
purchaseInfoData
defaultPlaybackRate
downloadState
downloadProgress
appMetricsData
seriesName
mediaType
mediaSubType
hasSubtitle
T@"NSString",&,N,V_subtitle
hasIsContainer
TB,N,V_isContainer
hasIsPlayable
TB,N,V_isPlayable
hasPlaybackProgress
Tf,N,V_playbackProgress
hasAlbumName
T@"NSString",&,N,V_albumName
hasTrackArtistName
T@"NSString",&,N,V_trackArtistName
hasAlbumArtistName
T@"NSString",&,N,V_albumArtistName
hasDirectorName
T@"NSString",&,N,V_directorName
hasSeasonNumber
Ti,N,V_seasonNumber
hasEpisodeNumber
Ti,N,V_episodeNumber
hasReleaseDate
Td,N,V_releaseDate
hasPlayCount
Ti,N,V_playCount
hasLocalizedContentRating
T@"NSString",&,N,V_localizedContentRating
hasIsExplicitItem
TB,N,V_isExplicitItem
hasPlaylistType
Ti,N,V_playlistType
hasRadioStationType
Ti,N,V_radioStationType
hasArtworkAvailable
TB,N,V_artworkAvailable
hasInfoAvailable
TB,N,V_infoAvailable
hasLanguageOptionsAvailable
TB,N,V_languageOptionsAvailable
hasNumberOfSections
Ti,N,V_numberOfSections
hasLyricsAvailable
TB,N,V_lyricsAvailable
hasEditingStyleFlags
Ti,N,V_editingStyleFlags
hasIsStreamingContent
TB,N,V_isStreamingContent
hasIsCurrentlyPlaying
TB,N,V_isCurrentlyPlaying
hasCollectionIdentifier
T@"NSString",&,N,V_collectionIdentifier
hasProfileIdentifier
T@"NSString",&,N,V_profileIdentifier
hasArtworkMIMEType
T@"NSString",&,N,V_artworkMIMEType
hasAssetURL
T@"NSString",&,N,V_assetURL
hasComposer
T@"NSString",&,N,V_composer
hasDiscNumber
Ti,N,V_discNumber
hasGenre
T@"NSString",&,N,V_genre
hasChapterCount
Ti,N,V_chapterCount
hasTotalDiscCount
Ti,N,V_totalDiscCount
hasTotalTrackCount
Ti,N,V_totalTrackCount
hasTrackNumber
Ti,N,V_trackNumber
hasContentIdentifier
T@"NSString",&,N,V_contentIdentifier
hasIsSharable
TB,N,V_isSharable
hasIsBanned
TB,N,V_isBanned
hasIsLiked
TB,N,V_isLiked
hasIsInWishList
TB,N,V_isInWishList
hasRadioStationString
T@"NSString",&,N,V_radioStationString
hasITunesIdentifier
Tq,N,V_iTunesIdentifier
hasITunesSubscriptionIdentifier
Tq,N,V_iTunesSubscriptionIdentifier
hasITunesArtistIdentifier
Tq,N,V_iTunesArtistIdentifier
hasITunesAlbumIdentifier
Tq,N,V_iTunesAlbumIdentifier
hasPurchaseInfoData
T@"NSData",&,N,V_purchaseInfoData
hasDefaultPlaybackRate
Tf,N,V_defaultPlaybackRate
hasDownloadState
Ti,N,V_downloadState
hasDownloadProgress
Tf,N,V_downloadProgress
hasAppMetricsData
T@"NSData",&,N,V_appMetricsData
hasSeriesName
T@"NSString",&,N,V_seriesName
hasMediaType
Ti,N,V_mediaType
hasMediaSubType
Ti,N,V_mediaSubType
T@"NSData",&,N,V_nowPlayingInfo
deviceInfo
supportedProtocolMessages
T@"MRSupportedProtocolMessages",R,N
errorCode
handlerReturnStatus
hasErrorCode
TI,N,V_errorCode
handlerReturnStatusCount
T^I,R,N
kMRMediaRemoteFrameworkErrorDomain
com.apple.MediaRemote.connectionQueue
com.apple.MediaRemote.clientCallbackQueue
com.apple.MediaRemote.browsableContentQueue
com.apple.MediaRemote.voiceInputQueue
com.apple.mediaremoted.xpc
MRXPC_MESSAGE_ID_KEY
v8@?0@"NSObject<OS_xpc_object>"4
MRXPC_VOICE_RECORDING_ENDPOINT_AVAILABLE_KEY
MRXPC_TELEVISION_ENDPOINT_AVAILABLE_KEY
MRXPC_AGENT_ENDPOINT_AVAILABLE_KEY
MRXPC_COMMAND_SEND_ERROR_KEY
MRXPC_COMMAND_STATUSES_DATA_KEY
MRXPC_COMMAND_APP_PROCESSID_KEY
MRXPC_COMMAND_APP_DISPLAYID_KEY
MRXPC_COMMAND_INFO_ARRAY_DATA_KEY
MRXPC_ERROR_CODE_KEY
MRXPC_NOWPLAYING_APP_ENABLED_KEY
MRXPC_NOWPLAYING_APP_OVERRIDE_ENABLED_KEY
MRXPC_NOWPLAYING_DISPLAYID_KEY
MRXPC_NOWPLAYING_MERGE_POLICY_KEY
MRXPC_NOWPLAYING_ORIGIN_UID_KEY
MRXPC_NOWPLAYING_INFO_DATA_KEY
MRXPC_NOWPLAYING_INFO_INCLUDE_ARTWORK_KEY
MRXPC_NOWPLAYING_PID_KEY
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_REQUEST_KEY
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_CONTEXT_KEY
MRXPC_LYRICS_EVENT_DATA
MRXPC_PLAYBACK_QUEUE_REQUESTS_DATA
MRXPC_NOWPLAYING_DISPLAYNAME_KEY
MRXPC_APP_IS_PLAYING_KEY
MRXPC_PLAYBACK_STATE_KEY
MRXPC_NOWPLAYING_CLIENT_ARRAY_DATA_KEY
MRXPC_NOWPLAYING_CLIENT_VISIBILITY_KEY
MRXPC_COLOR_DATA_KEY
MRXPC_SOURCE_ID_KEY
MRXPC_AUDIO_AMPLITUDE_SAMPLES_COUNT_KEY
MRXPC_AUDIO_AMPLITUDE_ARRAY_DATA_KEY
MRXPC_AVAILABLE_ORIGINS_DATA_KEY
MRXPC_ROUTE_DISCOVERY_MODE_KEY
MRXPC_ROUTE_CATEGORY_KEY
MRXPC_ROUTES_DATA_KEY
MRXPC_ROUTE_OPTIONS_KEY
MRXPC_ROUTE_PASSWORD_KEY
MRXPC_ROUTE_DESCRIPTION_DATA_KEY
MRXPC_ROUTE_HAS_VOLUME_CONTROL_KEY
MRXPC_ROUTE_EXTERNAL_SCREEN_TYPE_KEY
MRXPC_ROUTE_NAME_KEY
MRXPC_VOLUME_VALUE_KEY
MRXPC_VOLUME_OPTIONS_KEY
MRXPC_GAMECONTROLLER_INPUT_MODE_KEY
MRXPC_TELEVISION_PAIRED_DEVICES
MRXPC_TELEVISION_PAIRED_DEVICE
MRXPC_TELEVISION_LOGGING_KEY
MRXPC_CUSTOM_DATA_NAME_KEY
MRXPC_CUSTOM_DATA_KEY
MRXPC_TELEVISION_PAIRED_DEVICE_ID
MRXPC_VOICE_INPUT_DEVICES_DATA_KEY
MRXPC_VOICE_INPUT_DESCRIPTOR_DATA_KEY
MRXPC_VOICE_INPUT_DEVICE_ID_KEY
MRXPC_VOICE_DATA_PROTOBUF_DATA_KEY
MRXPC_VOICE_RECORDING_STATE
MRXPC_AGENT_CALL_ID_KEY
MRXPC_KEEP_ALIVE_KEY
MRXPC_NOTIFICATION_NAME_KEY
MRXPC_NOTIFICATION_USERINFO_DATA_KEY
MRXPC_NOTIFICATION_DELAY
MRXPC_BUNDLE_ID_KEY
MRXPC_INDEXPATH_DATA_KEY
MRXPC_CONTENT_NOW_PLAYING_IDENTIFIERS_KEY
MRXPC_CONTENT_SUPPORTS_PLAYBACK_PROGRESS_KEY
MRXPC_CONTENT_CHILD_ITEMS_COUNT_KEY
MRXPC_RANGE_BEGIN_KEY
MRXPC_RANGE_LENGTH_KEY
MRXPC_CONTENT_API_MASK_KEY
MRXPC_BUNDLE_ID_ARRAY_DATA_KEY
MRXPC_CONTENT_IDENTIFIERS
MRXPC_CONTENT_CHILD_ITEMS_DATA_KEY
MRXPC_COMMAND_KEY
MRXPC_COMMAND_OPTIONS_KEY
v8@?0^{__CFArray=}4
v16@?0^v4^v8^{__CFError=}12
MRXPC_TRANSACTION_NAME
v16@?0@"NSArray"4^{_MROrigin=}8@?<v@?I>12
v12@?0^{__CFArray=}4^{__CFError=}8
v8@?0^{__CFError=}4
MRXPC_CLIENT_ERROR_DATA_KEY
MRXPC_AGENT_NUMBER_ACTIVE_CALLS_KEY
MRXPC_APPLICATION_ACTIVITY_DATA_KEY
MRXPC_ORIGIN_DATA_KEY
supportedFormats
defaultFormat
T@"NSMutableArray",&,N,V_supportedFormats
hasDefaultFormat
T@"_MRAudioFormatSettingsProtobuf",&,N,V_defaultFormat
packetCapacity
maximumPacketSize
packetCount
contents
packetDescriptions
hasFormatSettings
T@"_MRAudioFormatSettingsProtobuf",&,N,V_formatSettings
hasPacketCapacity
Tq,N,V_packetCapacity
hasMaximumPacketSize
Tq,N,V_maximumPacketSize
hasPacketCount
Tq,N,V_packetCount
hasContents
T@"NSData",&,N,V_contents
T@"NSMutableArray",&,N,V_packetDescriptions
has%@
@4@?0
v16@?0@"NSString"4@"NSString"8^B12
dictionaryKeyToProtobufKeyMapping
T@"NSDictionary",C,N,V_dictionaryKeyToProtobufKeyMapping
protobufClass
T#,&,N,V_protobufClass
dictionaryValueToProtobufValueTransformer
T@?,C,N,V_dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
T@?,C,N,V_protobufValueToDictionaryValueTransformer
deviceIDs
descriptor
T@"MRVirtualVoiceInputDeviceDescriptor",R,N
deviceID
T@"MRAudioBuffer",R,N
T{?=dd},R,N
Tf,R,N
deviceIdentifier
name
packets
MRGameControllerInputModeNone |
MRGameControllerInputModeCaptureMotion |
MRGameControllerInputModeCaptureButtons |
MRGameControllerInputModeCaptureDigitizer
MRGameControllerEventNone
MRGameControllerEventMotion
MRGameControllerEventButtons
MRGameControllerEventButtonsExtended
MRGameControllerEventDigitizer
Unknown Event: Did you remember to use the event initializers?
Game Controller Event: {
buttonA:%lf
buttonX:%lf
buttonPause:%lf
Buttons: {
dpadX:%lf
dpadY:%lf
buttonB:%lf
buttonY:%lf
leftShoulder:%lf
rightShoulder:%lf
leftThumbstickX:%lf
leftThumbstickY:%lf
rightThumbstickX:%lf
rightThumbstickY:%lf
leftTrigger:%lf
rightTrigger:%lf
Extended Buttons: {
Digitizer: { 
x: %lf 
y: %lf 
touchDown: %@ 
true
false
Motion: {
Gravity: %@ 
UserAcceleration: %@
Acceleration: {
x:%lf y:%lf z:%lf
MRGameControllerPlayerIndex1
MRGameControllerPlayerIndex2
MRGameControllerPlayerIndex3
MRGameControllerPlayerIndex4
MRGameControllerPlayerIndexUnset
playerIndex
TI,N,V_playerIndex
vendorName
T@"NSString",C,N,V_vendorName
buttonAUpDelay
Td,N,V_buttonAUpDelay
profile
Ti,N,V_profile
pairingData
status
isRetrying
isUsingSystemPairing
hasPairingData
T@"NSData",&,N,V_pairingData
hasStatus
Ti,N,V_status
hasIsRetrying
TB,N,V_isRetrying
hasIsUsingSystemPairing
TB,N,V_isUsingSystemPairing
object
T@,R,N
hasKey
T@"NSString",&,N,V_key
hasData
T@"NSData",&,N,V_data
text
actionType
hasText
T@"NSString",&,N,V_text
hasActionType
Ti,N,V_actionType
Insert
Delete
Clear
kMRCredentialRequirementTypeUserInfoKey
kMRCredentialRequirementCharacterCountUserInfoKey
kMRTelevisionRemoteNowPlayingArtworkChanged
MR_EXTERN CFStringRef const kMRMediaRemoteErrorTelevisionPairingLockOutDelayUserInfoKey;
com.apple.MediaRemote.MRTelevision.SerialQueue
com.apple.MediaRemote.MRTelevision.WorkerQueue
<%@ %p "%@">
v8@?0@"MRProtocolMessage"4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/Television/MRTelevision.m
incorrect reply
v8@?0@"NSArray"4
v16@?0I4^{__CFDictionary=}8@?<v@?^{__CFArray=}>12
v12@?0C4^{_MROrigin=}8
v12@?0@"MRCryptoPairingSession"4@"NSData"8
v12@?0^{__CFString=}4B8
v20@?0@"MRCryptoPairingSession"4d8@?<v@?@"NSString">16
v12@?0@"MRCryptoPairingSession"4@"NSError"8
Failed to register custom origin
v8@?0C4
incorrect reply type
v12@?0^v4@?<v@?^v^{__CFError=}>8
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
netService
T@"NSNetService",&,N,V_netService
connection
T@"MRTelevisionClientConnection",&,N,V_connection
customOrigin
T^{_MROrigin=},N
supportedMessages
T@"MRSupportedProtocolMessages",&,N,V_supportedMessages
nowPlayingArtwork
T@"NSData",C,N,V_nowPlayingArtwork
T@"NSMutableDictionary",&,N,V_nowPlayingInfo
volumeControlNotificationObserver
T@"MSVDistributedNotificationObserver",&,N,V_volumeControlNotificationObserver
pairingCallback
T@?,C,N,V_pairingCallback
pairingCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingCallbackQueue
connectionStateCallback
T@?,C,N,V_connectionStateCallback
connectionState
TI,R,N,V_connectionState
connectionStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionStateCallbackQueue
gameControllerInputModeCallback
T@?,C,N,V_gameControllerInputModeCallback
gameControllerInputMode
TI,N,V_gameControllerInputMode
gameControllerInputModeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_gameControllerInputModeCallbackQueue
gameControllerPropertiesCallback
T@?,C,N,V_gameControllerPropertiesCallback
gameControllerPropertiesCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_gameControllerPropertiesCallbackQueue
recordingStateCallback
T@?,C,N,V_recordingStateCallback
recordingStateCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordingStateCallbackQueue
textInputCallback
T@?,C,N,V_textInputCallback
textInputCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_textInputCallbackQueue
nameCallback
T@?,C,N,V_nameCallback
nameCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_nameCallbackQueue
pairingAllowedCallback
T@?,C,N,V_pairingAllowedCallback
pairingAllowedCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pairingAllowedCallbackQueue
hiliteModeCallback
T@?,C,N,V_hiliteModeCallback
hiliteModeCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_hiliteModeCallbackQueue
customDataCallback
T@?,C,N,V_customDataCallback
customDataCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_customDataCallbackQueue
isCoalescingClientStateUpdatesConfigMessages
TB,N,V_isCoalescingClientStateUpdatesConfigMessages
isCallingClientCallback
TB,N,V_isCallingClientCallback
hostName
port
Ti,R,N
T^v,R,N,V_deviceInfo
inputStream
T@"NSInputStream",R,N
outputStream
T@"NSOutputStream",R,N
wantsNowPlayingNotifications
TB,N,V_wantsNowPlayingNotifications
wantsNowPlayingArtworkNotifications
TB,N,V_wantsNowPlayingArtworkNotifications
wantsVolumeNotifications
TB,N,V_wantsVolumeNotifications
paired
TB,R,N,GisPaired
TB,R,N,V_hiliteMode
CFStringRef MRTelevisionCopyUniqueIdentifier(MRTelevisionRef)
<Unknown Function>
Invalid parameter not satisfying: %@
device
CFStringRef MRTelevisionCopyName(MRTelevisionRef)
CFStringRef MRTelevisionCopyHostName(MRTelevisionRef)
CFStringRef MRTelevisionCopySystemBuildVersion(MRTelevisionRef)
int64_t MRTelevisionGetNetworkPort(MRTelevisionRef)
STOP USING THIS MICHAEL!
void MRTelevisionSetNameCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionNameCallback)
void MRTelevisionSetName(MRTelevisionRef, CFStringRef)
MROriginRef MRTelevisionCopyCustomOrigin(MRTelevisionRef)
void MRTelevisionSetWantsNowPlayingUpdates(MRTelevisionRef, _Bool)
void MRTelevisionSetWantsNowPlayingArtworkUpdates(MRTelevisionRef, _Bool)
void MRTelevisionSetWantsVolumeControlAvailabilityUpdates(MRTelevisionRef, _Bool)
_Bool MRTelevisionIsConnected(MRTelevisionRef)
void MRTelevisionConnect(MRTelevisionRef)
void MRTelevisionDisconnect(MRTelevisionRef)
MRTelevisionConnectionState MRTelevisionGetConnectionState(MRTelevisionRef)
void MRTelevisionSetConnectionStateCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionConnectionStateCallback)
v12@?0I4^{__CFError=}8
v16@?0{?=II}4@?<v@?^{__CFString=}B>12
void MRTelevisionSetPairingCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionPairingCallback)
void MRTelevisionRegisterVirtualTouchDevice(MRTelevisionRef, MRVirtualTouchDeviceDescriptorRef, dispatch_queue_t, MRTelevisionTouchDeviceIDCallback)
replyQ
completion
v16@?0Q4@"NSError"12
void MRTelevisionSendVirtualTouchEvent(MRTelevisionRef, MRHIDTouchEvent, MRVirtualTouchDeviceID)
void MRTelevisionSendButtonEvent(MRTelevisionRef, MRHIDButtonEvent)
void MRTelevisionSendHIDEvent(MRTelevisionRef, IOHIDEventRef)
void MRTelevisionGetCurrentTextEditingSession(MRTelevisionRef, dispatch_queue_t, void (^)(MRTextEditingSessionRef, CFErrorRef))
callback
v12@?0@"MRTextEditingSession"4@"NSError"8
void MRTelevisionSetTextEditingCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionTextInputCallback)
void MRTelevisionTextEditingInsert(MRTelevisionRef, MRTextEditingSessionRef, CFStringRef)
void MRTelevisionTextEditingSetText(MRTelevisionRef, MRTextEditingSessionRef, CFStringRef)
void MRTelevisionTextEditingDeleteBackward(MRTelevisionRef, MRTextEditingSessionRef)
void MRTelevisionTextEditingClearText(MRTelevisionRef, MRTextEditingSessionRef)
void MRTelevisionRegisterGameController(MRTelevisionRef, MRGameControllerProfile, dispatch_queue_t, MRTelevisionGameControllerIDCallback)
void MRTelevisionRegisterGameControllerWithProperties(MRTelevisionRef, MRGameControllerPropertiesRef, dispatch_queue_t, MRTelevisionGameControllerIDCallback)
void MRTelevisionUnregisterGameController(MRTelevisionRef, MRGameControllerID)
void MRTelevisionSetGameControllerInputModeCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionGameControllerInputModeCallback)
void MRTelevisionSetGameControllerPropertiesCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionGameControllerPropertiesCallback)
void MRTelevisionSendGameControllerEvent(MRTelevisionRef, MRGameControllerEvent, MRGameControllerID)
MRGameControllerInputMode MRTelevisionGetGameControllerInputMode(MRTelevisionRef)
void MRTelevisionRegisterVirtualVoiceInputDevice(MRTelevisionRef, MRVirtualVoiceInputDeviceDescriptorRef, dispatch_queue_t, void (^)(MRVirtualVoiceInputDeviceID, CFErrorRef))
v12@?0I4@"NSError"8
void MRTelevisionSetVoiceRecordingStateCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionRecordingStateCallback)
MRVoiceRecordingState MRTelevisionGetVoiceRecordingState(MRTelevisionRef)
void MRTelevisionProcessVirtualVoiceInputAudioData(MRTelevisionRef, MRVirtualVoiceInputDeviceID, MRAudioBufferRef, MRAudioTime, float)
_Bool MRTelevisionIsPairingAllowed(MRTelevisionRef)
void MRTelevisionSetPairingAllowedCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionPairingAllowedCallback)
_Bool MRTelevisionIsPaired(MRTelevisionRef)
void MRTelevisionUnpair(MRTelevisionRef)
void MRTelevisionGetPairedTelevisions(void (^)(CFArrayRef))
void MRTelevisionDeletePairedDevice(CFStringRef)
void MRTelevisionSetHiliteModeCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionHiliteModeCallback)
void MRTelevisionRequestHiliteModeExit(MRTelevisionRef)
_Bool MRTelevisionGetHiliteMode(MRTelevisionRef)
void MRTelevisionWake(MRTelevisionRef)
void MRTelevisionSetCustomDataCallback(MRTelevisionRef, dispatch_queue_t, MRTelevisionCustomDataCallback)
void MRTelevisionSendCustomData(MRTelevisionRef, CFStringRef, CFDataRef)
void MRTelevisionPing(MRTelevisionRef, CFTimeInterval, dispatch_queue_t, MRTelevisionPingCallback)
volumeControlAvailable
absolute
integratedDisplay
screenSizeWidth
screenSizeHeight
hasAbsolute
TB,N,V_absolute
hasIntegratedDisplay
TB,N,V_integratedDisplay
hasScreenSizeWidth
Tf,N,V_screenSizeWidth
hasScreenSizeHeight
Tf,N,V_screenSizeHeight
kMRMediaRemoteOptionSourceID
kMRMediaRemoteOptionMediaType
kMRMediaRemoteOptionIsExternalPlayerCommand
kMRMediaRemoteOptionSkipInterval
kMRMediaRemoteOptionPlaybackRate
kMRMediaRemoteOptionRating
kMRMediaRemoteOptionIsNegative
kMRMediaRemoteOptionPlaybackPosition
kMRMediaRemoteOptionRepeatMode
kMRMediaRemoteOptionShuffleMode
kMRMediaRemoteOptionSendOptionsNumber
kMRMediaRemoteOptionContextID
kMRMediaRemoteOptionDestinationAppDisplayID
kMRMediaRemoteOptionTrackID
kMRMediaRemoteOptionContentItemID
kMRMediaRemoteOptionPlaybackQueueOffset
kMRMediaRemoteOptionStationID
kMRMediaRemoteOptionStationHash
kMRMediaRemoteOptionStationURL
kMRMediaRemoteOptionShouldBeginRadioPlayback
kMRMediaRemoteOptionSystemAppPlaybackQueueData
kMRMediaRemoteOptionRequestDefermentToPlaybackQueuePosition
kMRMediaRemoteOptionPlaybackQueueInsertionPosition
kMRMediaRemoteOptionInsertAfterContentItemID
kMRMediaRemoteOptionPlaybackQueueDestinationOffset
kMRMediaRemoteOptionBookmarkiTunesDestination
kMRMediaRemoteOptionAffiliateIdentifier
kMRMediaRemoteOptionLanguageOptionData
kMRMediaRemoteOptionChangeLanguageOptionSetting
kMRMediaRemoteOptionRemoteControlInterfaceIdentifier
kMRMediaRemoteOptionCommandBroadcasted
kMRMediaRemoteOptionInterruptionEvent
kMRMediaRemoteOptionPredefinedPlaybackRate
kMRMediaRemoteOptionPlaybackProgress
kMRMediaRemoteSupportedCommandsDidChangeNotification
kMRMediaRemoteRegisteredCommandHandlersDidChangeNotification
kMRMediaRemoteSystemAppDidSkipTrackNotification
v12@?0I4^{__CFArray=}8
%08x
Play
Pause
TogglePlayPause
Stop
NextTrack
PreviousTrack
AdvanceShuffleMode
AdvanceRepeatMode
BeginFastForward
EndFastForward
BeginRewind
EndRewind
ToggleRecord
SkipForward
SkipBackward
ChangePlaybackRateCommand
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
SeekToPlaybackPosition
SetRepeatMode
SetShuffleMode
EnableLanguageOption
DisableLanguageOption
NextChapter
PreviousChapter
NextAlbum
PreviousAlbum
NextPlaylist
PreviousPlaylist
NextInContext
PreviousInContext
Menu
Select
UpArrow
DownArrow
BacklightOff
ResetPlaybackTimeout
BuyTrack
BuyAlbum
PreOrderAlbum
CancelDownload
CreateRadioStation
SetPlaybackQueue
PresentUpNext
SetSleepTimer
InsertIntoPlaybackQueue
PresentSharingOptions
AddNowPlayingItemToLibrary
AddItemToLibrary
ReorderPlaybackQueue
RemoveFromPlaybackQueue
PlayItemInPlaybackQueue
BanTrack
AddTrackToWishList
RemoveTrackFromWishList
Rewind15Seconds
FastForward15Seconds
Rewind30Seconds
FastForward30Seconds
<Unrecognized Command>
Success
NoSuchContent
CommandFailed
NoActionableNowPlayingItem
UIKitLegacy
SkipAdProhibited
QueueIsUserCurated
UserModifiedQueueDisabled
UserQueueModificationNotSupportedForCurrentItem
<Unknown>
com.apple.MRMediaRemote.elapsedTimeDidChange
v8@?0i4
com.apple.MRMediaRemote.playbackSpeedDidChange
com.apple.MRMediaRemote.repeatModeDidChange
com.apple.MRMediaRemote.shuffleModeDidChange
JUST_GOT_SPLASH_BEATS!
use %@ instead
%@ is abstract
T^v,R,N,V_device
role
TI,R,N,V_role
valid
TB,R,N,GisValid
pairedDevices
delegate
T@"<MRCryptoPairingSessionDelegate>",N,V_delegate
T@"_MRLyricsEventProtobuf",&,N,V_event
hasVolumeControlAvailable
TB,N,V_volumeControlAvailable
command
options
hasCommand
Ti,N,V_command
hasOptions
T@"_MRCommandOptionsProtobuf",&,N,V_options
ChangePlaybackRate
ChangeRepeatMode
ChangeShuffleMode
report
T@"NSString",&,N,V_virtualDeviceID
hasReport
T@"NSData",&,N,V_report
serializationDate
T@"NSDate",R,N,V_serializationDate
prompt
inputTraits
hasPrompt
T@"NSString",&,N,V_prompt
hasInputTraits
T@"_MRTextInputTraitsProtobuf",&,N,V_inputTraits
hasNowPlayingUpdates
TB,N,V_nowPlayingUpdates
hasArtworkUpdates
TB,N,V_artworkUpdates
hasVolumeUpdates
TB,N,V_volumeUpdates
hasKeyboardUpdates
TB,N,V_keyboardUpdates
Type: %@ Entry: %@
v16@?0@"NSString"4@"MRTelevisionMessageMetricsEntry"8^B12
Max: %lu
 Min: %lu
 Avg: %lu
 Total: %lu
 Values: %@
TI,N,V_avg
TI,N,V_min
TI,N,V_max
total
TI,N,V_total
values
T@"NSMutableArray",N,V_values
T{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI},R,N
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lul
Priority: %lul
Message: x: %u y: %u phase: %u deviceID: %u
%@://%@/%@
%llu
library
multiverse
store
mediaremoteuti
hasName
TQ,N,V_name
T@"NSMutableArray",&,N,V_packets
MRXPC_NOWPLAYING_PLAYBACK_QUEUE_KEY
MRXPC_NOWAPLAYING_CLIENT_DATA_KEY
MRXPC_COMMAND_APP_OPTIONS_KEY
MRXPC_VIDEO_THUMBNAILS_REQ_DATA_KEY
MRXPC_VIDEO_THUMBNAILS_ARRAY_DATA_KEY
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/ProtocolMessages/MRLegacySendHIDEventMessage.m
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lu
Priority: %lu
Message: %@
buttonEvent
T{_MRHIDButtonEvent=IIB},R,N
allTelevisions
Crypto Session Shutting down
chacha20_poly1305_encrypt_all_64x64
Session not open
Encrypted data has an invalid length
chacha20_poly1305_decrypt_all_64x64
PairingSessionDeleteIdentity
PairingSessionSetKeychainInfo
com.apple.MediaRemote.pairing
Media Remote Pairing Identity
Paired TV Remote Peer
Cannot add peer, No device available
Cannot update peer, No pairing session available
PairingSessionCopyPeerIdentifier
Cannot add peer, No peer Identifier available
PairingSessionUpdatePeerInfo
PairingSessionDeletePeer
Could not find peer
PairingSessionCopyPeers
Pairing Session Delay
Pairing Session NULL setup code
v8@?0@"NSString"4
PairingSessionCreate
No pairing session
PairingSessionExchange
PairingSessionSetSetupCode
Failed to set setup code on pairing session (OSStatus = %d)
Pairing Session is not available
MediaRemote-Read-Encryption-Key
MediaRemote-Write-Encryption-Key
PairingSessionDeriveKey
MediaRemote-Salt
inputKey
T@"NSData",&,N,V_inputKey
inputNonce
T@"NSMutableData",&,N,V_inputNonce
outputKey
T@"NSData",&,N,V_outputKey
outputNonce
T@"NSMutableData",&,N,V_outputNonce
pairedPeerDevice
pairedPeerDevices
mediaRemotePairedDevices
T@"NSMutableDictionary",R,N
peerIdentifier
TI,R,N,V_state
hasExchangedMessage
TB,R,N,V_hasExchangedMessage
OSStatus _MRCUPSShowSetupCodeCallback(PairingFlags, char *, size_t, void *)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/Cryptography/MRCoreUtilsPairingSession.m
NULL context
void _MRCUPSHideSetupCodeCallback(void *)
OSStatus _MRCUPSPromptForSetupCodeCallback(PairingFlags, int32_t, void *)
kMRNowPlayingPlaybackQueueChangedNotification
_kMRNowPlayingPlaybackQueueChangedNotification
kMRPlaybackQueueContentItemsChangedNotification
_kMRPlaybackQueueContentItemsChangedNotification
_kMRPlaybackQueueContextDataUserInfoKey
kMRPlaybackQueueDataSourceChangedNotification
_kMRPlaybackQueueDataSourceChangedNotification
kMRPlaybackQueueChangedNotification
NULL
MRMediaRemoteRequestNowPlayingPlaybackQueue_block_invoke
v12@?0^v4^{__CFError=}8
T@"NSString",R,N,V_identifier
publicKey
T@"NSData",R,N,V_publicKey
privateKey
T@"NSData",R,N,V_privateKey
PQso
MRSystemAppPlaybackQueueDestroy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/RemoteControl/MRRemotePlaybackQueue.m
queryData: %p, shuffleMode: %@, repeatMode: %@
stationID: %lld
stationStringID: %@
shuffleMode: %@, trackIDs: %@
seedTrack: %@
<MRSystemAppPlaybackQueue %p, type: %@, %@>
MRSystemAppPlaybackQueueGetType
MRSystemAppPlaybackQueueIsRequestingImmediatePlayback
MRSystemAppPlaybackQueueSetIsRequestingImmediatePlayback
MRSystemAppPlaybackQueueShouldOverrideManuallyCuratedQueue
MRSystemAppPlaybackQueueSetShouldOverrideManuallyCuratedQueue
MRSystemAppPlaybackQueueGetLocalQueryData
queue->type == MRSystemAppPlaybackQueueTypeLocalMediaQuery
MRSystemAppPlaybackQueueSetLocalQueryData
MRSystemAppPlaybackQueueGetLocalQueryFirstItemMultiverseIDData
MRSystemAppPlaybackQueueSetLocalQueryFirstItemMultiverseIDData
MRSystemAppPlaybackQueueGetLocalQueryFirstItemPID
MRSystemAppPlaybackQueueSetLocalQueryFirstItemPID
MRSystemAppPlaybackQueueGetLocalQueryShuffleMode
MRSystemAppPlaybackQueueSetLocalQueryShuffleMode
MRSystemAppPlaybackQueueGetLocalQueryRepeatMode
MRSystemAppPlaybackQueueSetLocalQueryRepeatMode
MRSystemAppPlaybackQueueSetRadioStationIDType
queue->type == MRSystemAppPlaybackQueueTypeRadioStation
MRSystemAppPlaybackQueueGetRadioStationIntegerPID
MRSystemAppPlaybackQueueSetRadioStationIntegerPID
queue->radioStationQueue.stationIDType == MRSystemAppRadioStationIDTypeIntegerPID
MRSystemAppPlaybackQueueSetRadioStationStringIdentifier
queue->radioStationQueue.stationIDType == MRSystemAppRadioStationIDTypeStationStringID
MRSystemAppPlaybackQueueCopyGenericTrackIdentifiers
_MRSystemAppPlaybackQueueTypeIsTracklistType(queue->type)
MRSystemAppPlaybackQueueSetGenericTrackIdentifiers
MRSystemAppPlaybackQueueGetTracklistShuffleMode
MRSystemAppPlaybackQueueSetTracklistShuffleMode
MRSystemAppPlaybackQueueGetTracklistRepeatMode
MRSystemAppPlaybackQueueSetTracklistRepeatMode
MRSystemAppPlaybackQueueCopyGeniusSeedTrack
queue->type == MRSystemAppPlaybackQueueTypeGenius
MRSystemAppPlaybackQueueSetGeniusSeedTrack
head
tail
bplist
PQty
PQip
PQqd
PQmv
PQfi
PQsm
PQrm
PQsy
PQsi
PQss
PQst
PQts
PQtr
PQgs
LocalMediaQuery
RadioStation
iTunesStoreTracklist
QuickPlay
GenericTracklist
Genius
<%@ %p %u, recordingState=%@, descriptor=%@>
TI,R,N,V_deviceID
T@"MRVirtualVoiceInputDeviceDescriptor",C,N,V_descriptor
recordingState
TI,N,V_recordingState
jpegData
hasJpegData
T@"NSData",&,N,V_jpegData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/VoiceInput/MRAudioDataBlock.m
invalid buffer size for decoding voice input message (%lu > (%lu * %lu))
packet descriptions exceed maximum packet capacity (%lu > %lu)
T@"MRAudioBuffer",R,N,V_buffer
T{?=dd},R,N,V_time
Tf,R,N,V_gain
protobuf
T@"_MRAudioDataBlockProtobuf",R,N
T@"MRAudioBuffer",&,D,N
T{?=dd},D,N
Tf,D,N
v12@?0@"MRCryptoPairingSession"4@"NSString"8
v8@?0@"MRCryptoPairingSession"4
pairingSession
T@"MRCoreUtilsPairingSession",&,N,V_pairingSession
pairingDelegate
T@"MRCryptoPairingSessionBlockDelegate",&,N,V_pairingDelegate
usingSystemPairing
TB,R,N,GisUsingSystemPairing
com.apple.MediaRemote
com.apple.MediaRemote.MRMediaRemoteServiceClient
@"NSDictionary"8@?0@"NSDictionary"4
v8@?0I4
v16@?0@"NSNumber"4@"MRTransactionSource"8^B12
externalScreenTypeNotificationObservers
T@"NSArray",&,N,V_externalScreenTypeNotificationObservers
nowPlayingNotificationObservers
T@"NSArray",&,N,V_nowPlayingNotificationObservers
routingNotificationObservers
T@"NSArray",&,N,V_routingNotificationObservers
originNotificationObservers
T@"NSArray",&,N,V_originNotificationObservers
voiceInputNotificationObservers
T@"NSArray",&,N,V_voiceInputNotificationObservers
service
T^{MRMediaRemoteService=},R,N,V_service
serviceQueue
T@"NSObject<OS_dispatch_queue>",R,N
registeredForNowPlayingNotifications
TB,R,N,GisRegisteredForNowPlayingNotifications
receivesExternalScreenTypeChangedNotifications
TB,N,V_receivesExternalScreenTypeChangedNotifications
receivesSupportedCommandsNotifications
TB,N,V_receivesSupportedCommandsNotifications
receivesRoutesChangedNotifications
TB,N,V_receivesRoutesChangedNotifications
receivesOriginChangedNotifications
TB,N,V_receivesOriginChangedNotifications
receivesPlaybackErrorNotifications
TB,N,V_receivesPlaybackErrorNotifications
receivesVoiceInputRecordingStateNotifications
TB,N,V_receivesVoiceInputRecordingStateNotifications
registeredOrigins
com.apple.MediaRemote.serviceClientRemoteCommandCallback
userData
hasUserData
T@"NSData",&,N,V_userData
hasHiliteMode
TB,N,V_hiliteMode
enabled
active
preferredInterval
localizedTitle
localizedShortTitle
minimumRating
maximumRating
supportedRate
presentationStyle
skipInterval
numAvailableSkips
skipFrequency
canScrub
hasEnabled
TB,N,V_enabled
hasActive
TB,N,V_active
preferredIntervalsCount
preferredIntervals
hasLocalizedTitle
T@"NSString",&,N,V_localizedTitle
hasLocalizedShortTitle
T@"NSString",&,N,V_localizedShortTitle
hasMinimumRating
Tf,N,V_minimumRating
hasMaximumRating
Tf,N,V_maximumRating
supportedRatesCount
supportedRates
T^f,R,N
hasPresentationStyle
Ti,N,V_presentationStyle
hasSkipInterval
Ti,N,V_skipInterval
hasNumAvailableSkips
Ti,N,V_numAvailableSkips
hasSkipFrequency
Ti,N,V_skipFrequency
hasCanScrub
Ti,N,V_canScrub
usagePage
usage
buttonDown
hasUsagePage
TI,N,V_usagePage
hasUsage
TI,N,V_usage
hasButtonDown
TB,N,V_buttonDown
strings
attributes
encryptedTextCyphertext
hasAttributes
T@"_MRTextEditingAttributesProtobuf",&,N,V_attributes
hasEncryptedTextCyphertext
T@"NSData",&,N,V_encryptedTextCyphertext
NotEditing
DidBeginEditing
Editing
TextDidChange
DidEndEditing
Response
<MRColor %p red = %f, green = %f, blue = %f, alpha = %f>
request
authenticationToken
sendCommandMessage
sendCommandResultMessage
getStateMessage
setStateMessage
setArtworkMessage
registerHIDDeviceMessage
registerHIDDeviceResultMessage
sendHIDEventMessage
sendHIDReportMessage
sendVirtualTouchEventMessage
notificationMessage
contentItemsChangedNotificationMessage
deviceInfoMessage
clientUpdatesConfigMessage
volumeControlAvailabilityMessage
gameController
registerGameController
registerGameControllerResponse
unregisterGameController
registerForGameControllerEvents
keyboardMessage
getKeyboardMessage
textInputMessage
getVoiceInputDevicesMessage
getVoiceInputDevicesResponseMessage
registerVoiceInputDeviceMessage
registerVoiceInputDeviceResponseMessage
setRecordingStateMessage
sendVoiceInputMessage
playbackQueueRequest
transactionPackets
cryptoPairingMessage
gameControllerProperties
readyStateMessage
sendButtonEventMessage
setHiliteModeMessage
wakeDeviceMessage
genericMessage
sendPackedVirtualTouchEventMessage
sendLyricsEventMessage
hasAuthenticationToken
T@"NSString",&,N,V_authenticationToken
TQ,N,V_timestamp
hasSendCommandMessage
T@"_MRSendCommandMessageProtobuf",&,N,V_sendCommandMessage
hasSendCommandResultMessage
T@"_MRSendCommandResultMessageProtobuf",&,N,V_sendCommandResultMessage
hasGetStateMessage
T@"_MRGetStateMessageProtobuf",&,N,V_getStateMessage
hasSetStateMessage
T@"_MRSetStateMessageProtobuf",&,N,V_setStateMessage
hasSetArtworkMessage
T@"_MRSetArtworkMessageProtobuf",&,N,V_setArtworkMessage
hasRegisterHIDDeviceMessage
T@"_MRRegisterHIDDeviceMessageProtobuf",&,N,V_registerHIDDeviceMessage
hasRegisterHIDDeviceResultMessage
T@"_MRRegisterHIDDeviceResultMessageProtobuf",&,N,V_registerHIDDeviceResultMessage
hasSendHIDEventMessage
T@"_MRSendHIDEventMessageProtobuf",&,N,V_sendHIDEventMessage
hasSendHIDReportMessage
T@"_MRSendHIDReportMessageProtobuf",&,N,V_sendHIDReportMessage
hasSendVirtualTouchEventMessage
T@"_MRSendVirtualTouchEventMessageProtobuf",&,N,V_sendVirtualTouchEventMessage
hasNotificationMessage
T@"_MRNotificationMessageProtobuf",&,N,V_notificationMessage
hasContentItemsChangedNotificationMessage
T@"_MRPlaybackQueueProtobuf",&,N,V_contentItemsChangedNotificationMessage
hasDeviceInfoMessage
T@"_MRDeviceInfoMessageProtobuf",&,N,V_deviceInfoMessage
hasClientUpdatesConfigMessage
T@"_MRClientUpdatesConfigurationProtobuf",&,N,V_clientUpdatesConfigMessage
hasVolumeControlAvailabilityMessage
T@"_MRVolumeControlAvailabilityProtobuf",&,N,V_volumeControlAvailabilityMessage
hasGameController
T@"_MRGameControllerMessageProtobuf",&,N,V_gameController
hasRegisterGameController
T@"_MRRegisterGameControllerMessageProtobuf",&,N,V_registerGameController
hasRegisterGameControllerResponse
T@"_MRRegisterGameControllerResponseMessageProtobuf",&,N,V_registerGameControllerResponse
hasUnregisterGameController
T@"_MRUnregisterGameControllerMessageProtobuf",&,N,V_unregisterGameController
hasRegisterForGameControllerEvents
T@"_MRRegisterForGameControllerEventsMessageProtobuf",&,N,V_registerForGameControllerEvents
hasKeyboardMessage
T@"_MRKeyboardMessageProtobuf",&,N,V_keyboardMessage
hasGetKeyboardMessage
T@"_MRGetKeyboardSessionProtobuf",&,N,V_getKeyboardMessage
hasTextInputMessage
T@"_MRTextInputMessageProtobuf",&,N,V_textInputMessage
hasGetVoiceInputDevicesMessage
T@"_MRGetVoiceInputDevicesMessageProtobuf",&,N,V_getVoiceInputDevicesMessage
hasGetVoiceInputDevicesResponseMessage
T@"_MRGetVoiceInputDevicesResponseMessageProtobuf",&,N,V_getVoiceInputDevicesResponseMessage
hasRegisterVoiceInputDeviceMessage
T@"_MRRegisterVoiceInputDeviceMessageProtobuf",&,N,V_registerVoiceInputDeviceMessage
hasRegisterVoiceInputDeviceResponseMessage
T@"_MRRegisterVoiceInputDeviceResponseMessageProtobuf",&,N,V_registerVoiceInputDeviceResponseMessage
hasSetRecordingStateMessage
T@"_MRSetRecordingStateMessageProtobuf",&,N,V_setRecordingStateMessage
hasSendVoiceInputMessage
T@"_MRSendVoiceInputMessageProtobuf",&,N,V_sendVoiceInputMessage
hasPlaybackQueueRequest
T@"_MRPlaybackQueueRequestProtobuf",&,N,V_playbackQueueRequest
hasTransactionPackets
T@"_MRTransactionMessageProtobuf",&,N,V_transactionPackets
hasCryptoPairingMessage
T@"_MRCryptoPairingMessageProtobuf",&,N,V_cryptoPairingMessage
hasGameControllerProperties
T@"_MRGameControllerPropertiesMessageProtobuf",&,N,V_gameControllerProperties
hasReadyStateMessage
T@"_MRSetReadyStateMessageProtobuf",&,N,V_readyStateMessage
hasConnectionState
T@"_MRSetConnectionStateMessageProtobuf",&,N,V_connectionState
hasSendButtonEventMessage
T@"_MRSendButtonEventMessageProtobuf",&,N,V_sendButtonEventMessage
hasSetHiliteModeMessage
T@"_MRSetHiliteModeMessageProtobuf",&,N,V_setHiliteModeMessage
hasWakeDeviceMessage
T@"_MRWakeDeviceMessageProtobuf",&,N,V_wakeDeviceMessage
hasGenericMessage
T@"_MRGenericMessageProtobuf",&,N,V_genericMessage
hasSendPackedVirtualTouchEventMessage
T@"_MRSendPackedVirtualTouchEventMessageProtobuf",&,N,V_sendPackedVirtualTouchEventMessage
hasSendLyricsEventMessage
T@"_MRSendLyricsEventMessageProtobuf",&,N,V_sendLyricsEventMessage
SendCommand
SendCommandResult
GetState
SetState
SetArtwork
RegisterHIDDevice
RegisterHIDDeviceResult
SendHIDEvent
SendHIDReport
SendVirtualTouchEvent
Notification
ContentItemsChangedNotification
DeviceInfo
ClientUpdatesConfiguration
VolumeControlAvailabilityNotification
GameController
RegisterGameController
RegisterGameControllerResponse
UnregisterGameController
RegisterForGameControllerEvents
Keyboard
GetKeyboardSession
TextInput
GetVoiceInputDevices
GetVoiceInputDevicesResponse
RegisterVoiceInputDevice
RegisterVoiceInputDeviceResponse
SetVoiceInputRecordingState
SendVoiceInput
GetPlaybackQueue
Transaction
CryptoPairing
GameControllerProperties
SetReadyStateMessage
DeviceInfoUpdate
SetDisconnectingStateMessage
SendButtonEvent
SetHiliteMode
WakeDevice
GenericMessage
SendPackedVirtualTouchEvent
SendLyricsEvent
hasDescriptor
T@"_MRVoiceInputDeviceDescriptorProtobuf",&,N,V_descriptor
phase
finger
hasX
Td,N,V_x
hasY
Td,N,V_y
hasPhase
Ti,N,V_phase
hasFinger
Ti,N,V_finger
Began
Moved
Stationary
Ended
Cancelled
processIdentifier
bundleIdentifier
parentApplicationBundleIdentifier
processUserIdentifier
nowPlayingVisibility
tintColor
hasProcessIdentifier
Ti,N,V_processIdentifier
hasBundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
hasParentApplicationBundleIdentifier
T@"NSString",&,N,V_parentApplicationBundleIdentifier
hasProcessUserIdentifier
Ti,N,V_processUserIdentifier
hasNowPlayingVisibility
Ti,N,V_nowPlayingVisibility
hasTintColor
T@"_MRColorProtobuf",&,N,V_tintColor
usePeerToPeerTelevisionConnections
useNoDelayOptionForTelevisionSockets
useDebugAVRouteWithoutVolumeControl
hasTelevisionSocketQOSLevelSet
televisionSocketQOSLevel
televisionPairingAllowed
TB,N,GisTelevisionPairingAllowed,V_televisionPairingAllowed
televisionTimeoutDuration
Td,R,N
televisionNowPlayingInfoCoalesceDuration
televisionNowPlayingInfoArtworkCoalesceDuration
televisionDisconnectWaitDuration
televisionDisconnectSleepDuration
televisionSleepAssertionOnClientConnectDuration
bluetoothDeviceResumeDuration
broadcastCommandWaitDuration
useTelevisionSystemPairing
MRTelevisionIncludePeerToPeer
MRTelevisionUseNoDelayOptionForTelevisionSockets
UseDebugAVRouteWithoutVolumeControl
MRTelevisionSocketsQOSLevel
kMRSettingsTelevisionTimeoutSecondsDurationDefaultsKey
kMRSettingsTelevisionNowPlayingInfoCoalesceDurationDefaultsKey
kMRSettingsTelevisionNowPlayingInfoArtworkCoalesceDurationDefaultsKey
kMRSettingsTelevisionDisconnectWaitDurationDefaultsKey
kMRSettingsTelevisionDisconnectSleepDurationDefaultsKey
kMRSettingsTelevisionSleepAssertionOnClientConnectDurationDefaultsKey
kMRSettingsBluetoothDeviceResumeDurationDefaultsKey
kMRSettingsBroadcastCommandWaitDurationDefaultsKey
kMRSettingsTelevisionSystemPairingDefaultsKey
hasPlayerIndex
hasVendorName
T@"NSString",&,N,V_vendorName
hasButtonAUpDelay
Ti,N,V_buttonAUpDelay
hasProfile
B239
Extended
startOffset
variableFramesInPacket
dataByteSize
hasStartOffset
Tq,N,V_startOffset
hasVariableFramesInPacket
TI,N,V_variableFramesInPacket
hasDataByteSize
TI,N,V_dataByteSize
MRBroadcastCommandResponse: %@ %d %@
kMRBroadcastCommandPIDKey
kMRBroadcastCommandBundleIdentifierKey
kMRBroadcastCommandHandlerStatusesKey
kMRBroadcastCommandResponseDataKey
coder must support key-value coding
supportsSecureCoding
TB,R
responseData
T@"NSData",R,N,V_responseData
commandHandlerStatuses
Ti,R,N,V_pid
bundleIdentifer
T@"NSString",R,N,V_bundleIdentifer
hasDeviceIdentifier
TI,N,V_deviceIdentifier
kMRTelevisionServicePairedDevicesDidChangeNotification
kMRTelevisionServicePairedDevicesDidChangeDistributedNotification
kMRTelevisionServiceIsPairingAllowedDidChangeNotification
kMRTelevisionServiceIsPairingAllowedDidChangeDistributedNotification
MediaRemote_ExtendedInfo
MediaRemote_PeerIdentifier
MediaRemote_PeerName
com.apple.mediaremote.televisionService
kMRDeviceInfoDidChangeNotification
kMRPairedDeviceUserInfoKey
kMRPairedDeviceUserInfoDataKey
MediaRemote-GeneratedDeviceID
MediaRemoteTelevisionDeviceInfo.plist
%@/%@
totalLength
hasTotalLength
TQ,N,V_totalLength
revision
hasRevision
T@"NSString",&,N,V_revision
Connecting
Connected
Disconnected
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/AirPlay/MRAVRoutingClientController.m
mediaRemoteService
T^{MRMediaRemoteService=},R,N,V_mediaRemoteService
MRAVRoutingActiveCategoryName
formatSettingsPlistData
hasFormatSettingsPlistData
T@"NSData",&,N,V_formatSettingsPlistData
sourceID
externalPlayerCommand
rating
negative
playbackPosition
contextID
trackID
radioStationID
systemAppPlaybackQueueData
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
playbackQueueOffset
playbackQueueDestinationOffset
languageOption
hasSourceID
T@"NSString",&,N,V_sourceID
T@"NSString",&,N,V_mediaType
hasExternalPlayerCommand
TB,N,V_externalPlayerCommand
Tf,N,V_skipInterval
hasRating
Tf,N,V_rating
hasNegative
TB,N,V_negative
hasPlaybackPosition
Td,N,V_playbackPosition
hasContextID
T@"NSString",&,N,V_contextID
hasTrackID
TQ,N,V_trackID
hasRadioStationID
Tq,N,V_radioStationID
hasSystemAppPlaybackQueueData
T@"NSData",&,N,V_systemAppPlaybackQueueData
hasDestinationAppDisplayID
T@"NSString",&,N,V_destinationAppDisplayID
hasSendOptions
TI,N,V_sendOptions
hasRequestDefermentToPlaybackQueuePosition
TB,N,V_requestDefermentToPlaybackQueuePosition
hasShouldOverrideManuallyCuratedQueue
TB,N,V_shouldOverrideManuallyCuratedQueue
hasStationURL
T@"NSString",&,N,V_stationURL
hasShouldBeginRadioPlayback
TB,N,V_shouldBeginRadioPlayback
hasPlaybackQueueInsertionPosition
Ti,N,V_playbackQueueInsertionPosition
hasContentItemID
T@"NSString",&,N,V_contentItemID
hasPlaybackQueueOffset
Ti,N,V_playbackQueueOffset
hasPlaybackQueueDestinationOffset
Ti,N,V_playbackQueueDestinationOffset
hasLanguageOption
T@"NSData",&,N,V_languageOption
sendError
results
dataExchangeBlock
T@?,C,N,V_dataExchangeBlock
showSetupCodeBlock
T@?,C,N,V_showSetupCodeBlock
hideSetupCodeBlock
T@?,C,N,V_hideSetupCodeBlock
promptForSetupCodeBlock
T@?,C,N,V_promptForSetupCodeBlock
exchangeCompleteBlock
T@?,C,N,V_exchangeCompleteBlock
kMRMediaRemoteCommandInfoPreferredIntervalsKey
kMRMediaRemoteCommandInfoIsActiveKey
kMRMediaRemoteCommandInfoLocalizedTitleKey
kMRMediaRemoteCommandInfoLocalizedShortTitleKey
kMRMediaRemoteCommandInfoMinimumRatingKey
kMRMediaRemoteCommandInfoMaximumRatingKey
kMRMediaRemoteCommandInfoSupportedPlaybackRates
kMRMediaRemoteCommandInfoPresentationStyleKey
kMRMediaRemoteCommandInfoCanBeControlledByScrubbingKey
kMRMediaRemoteCommandInfoSupportedInsertionPositions
kMRMediaRemoteCommandInfoPreservesShuffleModeKey
kMRMediaRemoteCommandInfoPreservesRepeatModeKey
kMRMediaRemoteCommandInfoPurchaseCommandState
kMRMediaRemoteCommandInfoRepeatMode
kMRMediaRemoteCommandInfoShuffleMode
kMRMediaRemoteCommandInfoNumberOfAvailableSkips
kMRMediaRemoteCommandInfoSkipFrequency
kMRMediaRemoteCommandInfoSkipInterval
kMRMediaRemoteCommandInfoPlaybackQueueType
kMRMediaRemoteCommandInfoSpecializedQueues
kCommandInfoCommandKey
kCommandInfoEnabledKey
kCommandInfoOptionsKey
MRMediaRemoteCommandInfo
<MRMediaRemoteCommandInfo: %p, %@, enabled = %d, options = %@>
com.apple.mobileipod
SiriShouldRouteCommandsToLegacyMusicApplication
No Error
Invalid Operation
Operation not permitted
Client does not exist
Origin does not exist
Unsupported operation
Failed to set picked route
Failed to remove custom origin
The application activity does not exist
The app has not setup a browsable content endpoint
The requested browsable content API is not supported by the application.
The notfication has not been whitelisted by the server.
Operation requires a client callback to have been registered.
Operation requires a client data source to have been registered.
Requested data is out of date and should be requested again
The device's enforced volume limit has been exceeded. The system will ignore the volume adjustment until overridden.
Volume value is out of range (must be between 0.0 and 1.0, where 1.0 is the loudest).
Volume is already at the maximum value.
Volume is already muted.
Voice input endpoint does not exist.
The voice input device is not registered or does not exist.
Encryption failure.
Failed to connect to remote television.
Authentication token is invalid.
Recording session is already in progress on this device.
The device is not currently recording.
The client has disconnected.
The server has disconnected.
The connection has been cancelled by the client.
Pairing functionality is locked due to security reasons.
The client's operating system version is too old.
The client's application version is too old.
The client's application cancelled the operation.
Unknown Error
_kMRErrorRepErrorCodeKey
_kMRErrorRepErrorDomainKey
_kMRErrorRepErrorUserInfoKey
notification
notifications
T@"NSMutableArray",&,N,V_notifications
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/Core/MRTransaction.m
Appending packets with different properties
Appending packets has too muchd data
kMRTransactionpacketDataKey
kMRTransactionPacketKeyKey
kMRTransactionPacketTotalLengthKey
kMRTransactionPacketIdentifierKey
Trying to send more data than exists
Write Position: %lu greater than data length %lu
Coder must support key-value coding
Total length less than actual length
writePosition
TI,R,N,V_writePosition
writeLength
TI,N,V_writeLength
actualLength
TI,R,N,V_totalLength
readComplete
TB,R,N,GisReadComplete
writeComplete
TB,R,N,GisWriteComplete
T@"NSData",R,&,N,V_data
T@"NSString",R,&,N,V_key
complete
TB,R,N,GisComplete
T@"_MRTransactionPacketProtobuf",R,N
hasMorePacketsToPacketize
hasMorePacketsToUnpacketize
MRXPC_TRANSACTION_DATA_REQUESTED_SIZE
MRXPC_TRANSACTION_DATA
MRXPC_TRANSACTION_ENDED
TB,R,N,GisActive
com.apple.MediaRemote.transactionSourceQueue
TQ,R,N,V_name
com.apple.MediaRemote.transactionDestinationQueue
com.apple.MediaRemote.transactionQueue
T@"<MRTransactionDelegate>",N,V_delegate
ContentItemMetadataChanged
ContentItemInfoChanged
ContentItemLyricsChanged
ContentItemLanguageOptionsChanged
ContentItemSectionsChanged
ContentItemArtworkChanged
@16@?0@"NSDictionary"4@"NSString"8@12
@16@?0@"PBCodable"4@"NSString"8@12
T@"NSMutableArray",R,N
unimplemented protocol message type
Message Sent: 
Message Purged: 
<Message Type: %@
Timestamp: %llu
Error: %@
Identifier: %@
Type: %lul
Priority: %lul
Message: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/ProtocolMessages/MRProtocolMessage.m
Message does not have a valid type. Did you forget to implement the type method?
underlyingCodableMessage
T@"PBCodable",&,N,V_underlyingCodableMessage
T@"NSString",C,N,V_identifier
error
T@"NSError",C,N,V_error
protobufData
encryptionType
priority
shouldLog
messageSentCallbacks
T@"MSVMultiCallback",R,N,V_messageSentCallbacks
messagePurgedCallbacks
T@"MSVMultiCallback",R,N,V_messagePurgedCallbacks
lastSupportedMessageType
TI,R,N,V_lastSupportedMessageType
localizedModelName
systemBuildVersion
applicationBundleIdentifier
applicationBundleVersion
protocolVersion
supportsSystemPairing
allowsPairing
connected
T@"NSString",&,N,V_uniqueIdentifier
T@"NSString",&,N,V_name
hasLocalizedModelName
T@"NSString",&,N,V_localizedModelName
hasSystemBuildVersion
T@"NSString",&,N,V_systemBuildVersion
hasApplicationBundleIdentifier
T@"NSString",&,N,V_applicationBundleIdentifier
hasApplicationBundleVersion
T@"NSString",&,N,V_applicationBundleVersion
hasProtocolVersion
TQ,N,V_protocolVersion
hasLastSupportedMessageType
TI,N,V_lastSupportedMessageType
hasSupportsSystemPairing
TB,N,V_supportsSystemPairing
hasAllowsPairing
TB,N,V_allowsPairing
hasConnected
TB,N,V_connected
deviceDescriptor
T@"MRVirtualTouchDeviceDescriptor",R,C,N
(System Media Application)
com.apple.Music
com.apple.NanoMusic
public.main-program-content
public.auxiliary-content
public.subtitles.forced-only
public.accessibility.transcribes-spoken-dialog
public.accessibility.describes-music-and-sound
public.accessibility.describes-video
public.easy-to-read
public.translation
public.translation.dubbed
public.translation.voice-over
kMRLanguageOptionLanguageTag
kMRLanguageOptionType
KMRLanguageOptionCharacteristics
kMRLanguageOptionDefaultSelection
kMRLanguageOptionAllowEmptySelection
kMRLanguageOptions
kMRLanguageOptionDisplayName
kMRLanguageOptionIdentifier
__AUTO__
MRLanguageOptionTypeAudible
MRLanguageOptionTypeLegible
hidEventData
hasHidEventData
T@"NSData",&,N,V_hidEventData
autocapitalizationType
keyboardType
returnKeyType
autocorrection
spellchecking
enablesReturnKeyAutomatically
secureTextEntry
validTextRangeLocation
validTextRangeLength
PINEntrySeparatorIndexes
hasAutocapitalizationType
Ti,N,V_autocapitalizationType
hasKeyboardType
Ti,N,V_keyboardType
hasReturnKeyType
Ti,N,V_returnKeyType
hasAutocorrection
TB,N,V_autocorrection
hasSpellchecking
TB,N,V_spellchecking
hasEnablesReturnKeyAutomatically
TB,N,V_enablesReturnKeyAutomatically
hasSecureTextEntry
TB,N,V_secureTextEntry
hasValidTextRangeLocation
TQ,N,V_validTextRangeLocation
hasValidTextRangeLength
TQ,N,V_validTextRangeLength
pINEntrySeparatorIndexesCount
pINEntrySeparatorIndexes
T^Q,R,N
Words
Sentences
AllCharacters
Default
ASCIICapable
NumbersAndPunctuation
NumberPad
PhonePad
NamePhonePad
EmailAddress
DecimalPad
Twitter
WebSearch
Alphabet
PasscodePad
Google
Join
Next
Route
Search
Send
Yahoo
Done
EmergencyCall
Continue
com.apple.MRMediaRemote.restoreClientStateForLaunch
requestedContext
sourceContext
requestCallback
T@?,C,N
createItemCallbacks
createChildItemCallbacks
metadataCallbacks
languageOptionsCallbacks
infoCallbacks
lyricsCallbacks
T@"NSArray",R,N,V_lyricsCallbacks
artworkCallbacks
beginLyricsEventCallback
endLyricsEventCallback
kMRNowPlayingClientDataUserInfoKey
kMRNowPlayingClientUserInfoKey
point = {%f, %f}
phase = %@
timestamp = %llu
finger = %u
usagePage = %u
usage = %u
down = %s
kMRMediaRemoteApplicationFinishedLoadingContentNotification
kMRMediaRemoteApplicationInvalidatedBrowsableContentDataSourceNotification
kMRMediaRemoteBrowsableContentNowPlayingIdentifiersUpdatedNotification
kMRMediaRemoteContentItemsUpdatedNotification
kMRMediaRemoteApplicationInitiatedPlaybackOfContentItemNotification
kMRMediaRemoteBrowsableContentErrorLocalizedDescriptionKey
kMRMediaRemoteBrowsableContentErrorCodeKey
kMRMediaRemoteBrowsableContentErrorDomainKey
kMRMediaRemoteIndexPathDataUserInfoKey
kMRMediaRemoteBrowsableContentBundleIdentifierUserInfoKey
kMRMediaRemoteBrowsableContentEndpointChangedNotification
kMRMediaRemoteBrowsableContentAPIChangedNotification
Boolean MRMediaRemoteApplicationSupportsBrowsableContent(CFStringRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/BrowsableContent/MRBrowsableContent.m
bundleID
v8@?0B4
v12@?0Q4
BeginLoadingContent
PlaybackProgress
ContentFetching
InitiatePlayback
InitializePlaybackQueue
ContextChanges
(%@)
(None)
com.apple.developer.playable-content
UIBrowsableContentSupportsSectionedBrowsing
UIBrowsableContentSupportsImmediatePlayback
T^v,N
item
T^{_MRContentItem=},N,V_item
T^v,N,V_request
inputModeFlags
hasInputModeFlags
Ti,N,V_inputModeFlags
Motion
Buttons
Digitizer
dpadX
dpadY
buttonA
buttonB
buttonX
buttonY
leftShoulder
rightShoulder
leftThumbstickX
leftThumbstickY
rightThumbstickX
rightThumbstickY
leftTrigger
rightTrigger
buttonPause
hasDpadX
Tf,N,V_dpadX
hasDpadY
Tf,N,V_dpadY
hasButtonA
Tf,N,V_buttonA
hasButtonB
Tf,N,V_buttonB
hasButtonX
Tf,N,V_buttonX
hasButtonY
Tf,N,V_buttonY
hasLeftShoulder
Tf,N,V_leftShoulder
hasRightShoulder
Tf,N,V_rightShoulder
hasLeftThumbstickX
Tf,N,V_leftThumbstickX
hasLeftThumbstickY
Tf,N,V_leftThumbstickY
hasRightThumbstickX
Tf,N,V_rightThumbstickX
hasRightThumbstickY
Tf,N,V_rightThumbstickY
hasLeftTrigger
Tf,N,V_leftTrigger
hasRightTrigger
Tf,N,V_rightTrigger
hasButtonPause
Tf,N,V_buttonPause
MRXPC_NOWPLAYING_ARTWORK_DATA_KEY
imageData
T@"NSData",R,C,N,V_imageData
mimeType
T@"NSString",R,C,N,V_mimeType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/Core/MRMediaRemoteOriginClient.m
origin
AVController_ServerConnectionDiedNotification
v16@?0@"MRTransactionDestination"4@"NSArray"8@?<v@?I>12
T^{_MROrigin=},R,N,V_origin
canBeNowPlayingApp
TB,N,V_canBeNowPlayingApp
isOverrideApp
TB,N,V_isOverrideApp
T@"NSDictionary",C,N,V_nowPlayingInfo
T@"MRNowPlayingArtwork",&,N,V_nowPlayingArtwork
routeDiscoveryMode
TI,N,V_routeDiscoveryMode
T@"NSArray",C,N,V_supportedCommands
applicationPickedRoutes
T@"NSArray",C,N,V_applicationPickedRoutes
parentApplication
T@"NSString",C,N,V_parentApplication
commandHandlerBlocks
T@"NSArray",R,C,N
videoThumbnailsCallback
T@?,C,N,V_videoThumbnailsCallback
audioAmplitudeSamplesCallback
T@?,C,N,V_audioAmplitudeSamplesCallback
playbackQueueClient
T@"MRPlaybackQueueOriginClient",R,N,V_playbackQueueClient
MRTelevisionGenericMessageSetNameKey
kMRMediaRemoteUpdatedContentItemsUserInfoKey
kMRMediaRemoteUpdatedNowPlayingIdentifiersInfoKey
kMRMediaRemoteUpdatedContentItemsDataUserInfoKey
MRContentItemCreate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/BrowsableContent/MRContentItem.m
identifier != NULL
kMRVirtualVoiceInputDeviceIDUserInfoKey
kMRVirtualVoiceInputRecordingStateUserInfoKey
kMRVirtualVoiceInputRecordingStateDidChangeNotification
com.apple.MRVVIClient
com.apple.GameController.gamecontrollerd
v16@?0@"NSNumber"4@"MRGameControllerDelayedEvent"8^B12
lastDownEvent
TQ,N,V_lastDownEvent
sendEventBlock
T@?,C,N,V_sendEventBlock
kMRGameControllerDaemonProxyInterrupted
kMRGameControllerDaemonProxyGameControllerDidChangeNotification
kMRGameControllerDaemonProxyGameControllerPropertiesUserInfoKey
deviceIDsCount
T@"MRTextEditingAttributes",R,N
controller
T@"NSObject",&,N,V_controller
Ti,R,N,V_profile
T@"<MREmulatedGameControllerDelegate>",N,V_delegate
userProvided
T@"NSString",&,N,V_lyrics
hasUserProvided
TB,N,V_userProvided
@"NSData"8@?0@"MRProtocolMessage"4
InputStream
OutputStream
Message received
i12@?0@"NSData"4i8
SocketSetQoS
T@"NSInputStream",R,N,V_inputStream
T@"NSOutputStream",R,N,V_outputStream
streamsAreValid
registeredToNowPlayingUpdates
TB,N,V_registeredToNowPlayingUpdates
registeredToNowPlayingArtworkUpdates
TB,N,V_registeredToNowPlayingArtworkUpdates
registeredVolumeControlAvailabilityUpdates
TB,N,V_registeredVolumeControlAvailabilityUpdates
registeredKeyboardUpdates
TB,N,V_registeredKeyboardUpdates
voiceRecordingState
TI,N,V_voiceRecordingState
T@"<MRTelevisionClientConnectionDelegate>",N,V_delegate
cryptoSession
T@"MRCryptoPairingSession",&,N,V_cryptoSession
_mediaremotetv._tcp.
UniqueIdentifier
Name
ModelName
SystemBuildVersion
AllowPairing
local
T@"<MRTelevisionDelegate>",N,V_delegate
discovering
TB,R,N,GisDiscovering,V_discovering
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/Television/MRTelevisionController.m
callbackBlock
T@?,R,N,V_callbackBlock
discoveryCallback
T@"_MRTelevisionControllerBlockCallback",&,N,V_discoveryCallback
removalCallback
T@"_MRTelevisionControllerBlockCallback",&,N,V_removalCallback
allowEmptySelection
defaultLanguageOption
languageOptions
hasAllowEmptySelection
TB,N,V_allowEmptySelection
hasDefaultLanguageOption
T@"_MRLanguageOptionProtobuf",&,N,V_defaultLanguageOption
T@"NSMutableArray",&,N,V_languageOptions
hasDeviceID
TI,N,V_deviceID
hasRecordingState
Ti,N,V_recordingState
com.apple.MediaRemote.MRMediaRemoteOriginClientManager
green
blue
alpha
hasRed
Tf,N,V_red
hasGreen
Tf,N,V_green
hasBlue
Tf,N,V_blue
hasAlpha
Tf,N,V_alpha
Tl,R,N
retrying
TB,R,N,GisRetrying
TB,R,N,GisAbsolute,V_absolute
TB,R,N,GisIntegratedDisplay,V_integratedDisplay
screenSize
T(_MRHIDSize={?=ff}[2f]),R,N,V_screenSize
TB,D,N,GisAbsolute
TB,D,N,GisIntegratedDisplay
T(_MRHIDSize={?=ff}[2f]),D,N
kMRMediaRemoteApplicationDidReportPlaybackErrorNotification
kMRMediaRemotePlaybackErrorApplicationUserInfoKey
kMRMediaRemotePlaybackErrorUserInfoKey
kMRMediaRemotePlaybackErrorReasonUserInfoKey
_kMRMediaRemotePlaybackErrorDataUserInfoKey
com.apple.LegacyMusic
<%@ %p "%@" secure=%@>
T@"NSString",R,N,V_title
T@"NSString",R,N,V_prompt
T{_MRTextInputTraits=IIIII{?=ii}BB[10l]I},R,N,V_inputTraits
T@"NSString",C,D,N
T{_MRTextInputTraits=IIIII{?=ii}BB[10l]I},D,N
<%@ %p text="%@", attribs=%@>
TI,R,N,V_uniqueIdentifier
T@"NSString",R,N,V_text
editing
TB,R,N,GisEditing,V_editing
T@"MRTextEditingAttributes",R,N,V_attributes
TB,D,N,GisEditing
T@"MRTextEditingAttributes",&,D,N
motion
buttons
hasMotion
T@"_MRGameControllerMotionProtobuf",&,N,V_motion
hasButtons
T@"_MRGameControllerButtonsProtobuf",&,N,V_buttons
dataBlock
hasDataBlock
T@"_MRAudioDataBlockProtobuf",&,N,V_dataBlock
kMRMediaRemoteExternalScreenTypeDidChangeNotification
kMRMediaRemotePickableRoutesDidChangeNotification
kMRMediaRemoteRouteStatusDidChangeNotification
kMRMediaRemotePickedRouteVolumeControlAvailabilityDidChangeNotification
kMRMediaRemoteWillPresentRouteAuthenticationPromptNotification
kMRMediaRemoteRouteDescriptionUserInfoKey
kMRMediaRemoteExternalScreenTypeUserInfoKey
kMRMediaRemoteRouteStatusUserInfoKey
kMRMediaRemoteRouteIsLocalDeviceRouteKey
com.apple.MediaRemote.externalScreenTypeDidChange
com.apple.MediaRemote.pickableRoutesDidChange
com.apple.MediaRemote.willPresentRouteAuthenticationPrompt
queue must be non-nil
handler must be non-nil
void MRMediaRemoteGetSavedAVRoutePassword(CFStringRef, dispatch_queue_t, void (^)(CFStringRef))
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/AirPlay/MRAVRouting.m
Disabled
Presence Scan
Detailed Scan
contentItem
contentItems
T@"NSMutableArray",&,N,V_contentItems
hasImageData
T@"NSData",&,N,V_imageData
Td,N,V_time
kMRApplicationActivityHasBegunNotification
kMRApplicationActivityHasEndedNotification
kMRApplicationActivityStatusDidChangeNotification
kMRApplicationActivityUserInfoKey
kMRApplicationActivityUserInfoDataKey
<%@ %p id=%@, primary=%@, secondary=%@, status=%@, creatorPID=%d, shouldPrepareAppPlaybackQueue=%@>
primaryApplicationDisplayID
secondaryApplicationDisplayID
shouldPrepareAppPlaybackQueue
creatorProcessID
T@"NSUUID",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_primaryApplicationDisplayID
T@"NSString",R,N,V_secondaryApplicationDisplayID
TB,R,N,V_shouldPrepareAppPlaybackQueue
Ti,R,N,V_status
Ti,R,N,V_creatorProcessID
TB,D,N
Ti,D,N
Initializing
Failed
hasDeviceDescriptor
T@"_MRVirtualTouchDeviceDescriptorProtobuf",&,N,V_deviceDescriptor
gravity
userAcceleration
hasGravity
T@"_MRGameControllerAccelerationProtobuf",&,N,V_gravity
hasUserAcceleration
T@"_MRGameControllerAccelerationProtobuf",&,N,V_userAcceleration
kMRMediaRemoteAvailableOriginsDidChangeNotification
kMRMediaRemoteActiveOriginDidChangeNotification
com.apple.MediaRemote.availableOriginsDidChange
com.apple.MediaRemote.activeOriginDidChange
MROrigin
v8@?0^{_MROrigin={__CFRuntimeBase=I[4C]}i^{__CFString}iI}4
<MROriginRef %p displayName = '%@' originType = %i uniqueIdentifier = %li>
%.1u
TI,N,V_type
characterCount
TI,N,V_characterCount
passcode
T@"NSString",C,N,V_passcode
MRProtocolMessageLogging
TB,N,V_shouldLog
<%@ %p, supportedFormats = %@, defaultFormat = %@>
T@"NSArray",R,N,V_supportedFormats
T@"NSDictionary",R,N,V_defaultFormat
T@"_MRVoiceInputDeviceDescriptorProtobuf",R,N
T@"NSArray",C,D,N
T@"NSDictionary",C,D,N
void MRVirtualVoiceInputDeviceDescriptorSetSupportedFormats(MRVirtualVoiceInputDeviceDescriptorRef, CFArrayRef)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MediaRemote_Sim/MediaRemote-693.6/MediaRemote/Framework/VoiceInput/MRVirtualVoiceInputDeviceDescriptor.m
unsupported type
void MRVirtualVoiceInputDeviceDescriptorSetDefaultAudioFormat(MRVirtualVoiceInputDeviceDescriptorRef, CFDictionaryRef)
_MRVideoThumbnailRequestProtobuf
NSCopying
_MRPlaybackQueueRequestProtobuf
_MRGameControllerPropertiesMessageProtobuf
MRClientUpdatesConfigMessage
_MRLyricsEventProtobuf
_MRAudioDataBlockProtobuf
MRCoreUtilsSystemPairingSession
MRTelevisionMessageQueue
MRMessageCallback
MRMessageData
MRPendingMessageQueue
MRAudioBuffer
_MRSupportedCommandsProtobuf
MRNowPlayingAppDidChangeNotificationObserver
MRNowPlayingAppIsPlayingDidChangeNotificationObserver
MRAnyAppIsPlayingDidChangeNotificationObserver
MRExternalScreenTypeDidChangeNotificationObserver
MRNotification
MRNotificationRemitter
MRSetStateMessage
MRSetReadyStateMessage
MRSetConnectionStateMessage
MRSetHiliteModeMessage
MRWakeDeviceMessage
_MRSetStateMessageProtobuf
_MRLanguageOptionProtobuf
_MRNowPlayingInfoProtobuf
_MRAudioTimeProtobuf
MRGameControllerMessage
MRGameControllerPropertiesMessage
MRRegisterGameControllerMessage
MRRegisterGameControllerResponseMessage
MRUnregisterGameControllerMessage
MRRegisterForGameControllerEventsMessage
_MRGetKeyboardSessionProtobuf
MRTelevisionNowPlayingState
_MRContentItemProtobuf
_MRSetRecordingStateMessageProtobuf
_MRSendVirtualTouchEventMessageProtobuf
_MRContentItemMetadataProtobuf
MRDeviceInfoMessage
MRDeviceInfoUpdateMessage
_MRSendCommandResultMessageProtobuf
MRGetKeyboardSessionMessage
_MRGetStateMessageProtobuf
_MRVoiceInputDeviceDescriptorProtobuf
_MRAudioBufferProtobuf
MRAdditions
MRProtobufSerialization
MRGetVoiceInputDevicesMessage
MRGetVoiceInputDevicesResponseMessage
MRRegisterVoiceInputDeviceMessage
MRRegisterVoiceInputDeviceResponseMessage
MRSetRecordingStateMessage
MRSendVoiceInputMessage
MRRegisterHIDDeviceResultMessage
MRTransactionMessage
MRGameControllerProperties
_MRCryptoPairingMessageProtobuf
MRWeakRef
_MRGenericMessageProtobuf
_MRTextInputMessageProtobuf
MRTelevision
MRTelevisionClientConnectionDelegate
NSObject
MRVolumeControlAvailabilityMessage
_MRVirtualTouchDeviceDescriptorProtobuf
MRCryptoPairingSession
_MRSendLyricsEventMessageProtobuf
_MRVolumeControlAvailabilityProtobuf
_MRSendCommandMessageProtobuf
_MRSendHIDReportMessageProtobuf
MRSendCommandMessage
_MRTextEditingAttributesProtobuf
_MRClientUpdatesConfigurationProtobuf
MRTelevisionMessageMetrics
MRTelevisionMessageMetricsEntry
MRSendVirtualTouchEventMessage
MRSendPackedVirtualTouchEventMessage
_MRTransactionMessageProtobuf
MRLegacySendHIDEventMessage
MRTelevisionManager
MRCoreUtilsPairingSession
MRMediaRemoteAdditions
MRCryptoPairingIdentity
MRVirtualVoiceInputDevice
_MRSetArtworkMessageProtobuf
MRAudioDataBlock
NSMutableCopying
MRMutableAudioDataBlock
MRTelevisionPairingSession
MRMediaRemoteServiceClient
_MRLyricsTokenProtobuf
MRSendButtonEventMessage
_MRSetHiliteModeMessageProtobuf
_MRCommandInfoProtobuf
_MRSendButtonEventMessageProtobuf
_MRKeyboardMessageProtobuf
MRPlaybackQueueRequestMessage
_MRMediaRemoteMessageProtobuf
_MRRegisterVoiceInputDeviceMessageProtobuf
_MRVirtualTouchEventProtobuf
_MRRegisterGameControllerMessageProtobuf
_MRNowPlayingClientProtobuf
MRUserSettings
_MRGameControllerPropertiesProtobuf
_MRSendPackedVirtualTouchEventMessageProtobuf
_MRAudioStreamPacketDescriptionProtobuf
MRBroadcastCommandResponse
NSSecureCoding
NSCoding
_MRRegisterHIDDeviceResultMessageProtobuf
_MRGameControllerAccelerationProtobuf
_MRSetReadyStateMessageProtobuf
_MRTransactionPacketProtobuf
_MRPlaybackQueueContextProtobuf
_MRSetConnectionStateMessageProtobuf
MRAVRoutingClientController
_MRAudioFormatSettingsProtobuf
_MRCommandOptionsProtobuf
MRSendCommandResultMessage
MRCryptoPairingSessionBlockDelegate
MRCryptoPairingSessionDelegate
_MRNotificationMessageProtobuf
MRTransactionPacket
MRTransactionPacketizer
MRTransactionSourceOrigin
MRTransactionSource
MRTransactionDestination
MRTransaction
MRNotificationMessage
MRSetArtworkMessage
MRProtocolMessage
MRSupportedProtocolMessages
_MRDeviceInfoMessageProtobuf
MRRegisterHIDDeviceMessage
MRSendLyricsEventMessage
MRLanguageOption
MRLanguageOptionGroup
_MRSendHIDEventMessageProtobuf
_MRTextInputTraitsProtobuf
MRPlaybackQueueOriginClient
_MRRegisterGameControllerResponseMessageProtobuf
MRPlaybackQueueClient
MRContentItemRequest
_MRRegisterForGameControllerEventsMessageProtobuf
_MRGameControllerButtonsProtobuf
MRNowPlayingArtwork
MRNowPlayingArtworkImage
MRMediaRemoteOriginClient
MRGenericMessage
MRContentItemAdditions
MRVVIClient
MRGameControllerDaemonProxy
GameControllerDaemonListener
GameControllerDaemonControllerListener
GameControllerDaemonRequestListener
MRGameControllerDelayedEvents
MRGameControllerDelayedEvent
_MRGetVoiceInputDevicesResponseMessageProtobuf
MRKeyboardMessage
_MRWakeDeviceMessageProtobuf
MREmulatedGameController
_MRLyricsItemProtobuf
MRTelevisionClientConnection
NSStreamDelegate
MSVMessageParserDelegate
MRTelevisionController
NSNetServiceBrowserDelegate
NSNetServiceDelegate
_MRTelevisionControllerBlockCallback
_MRBlockSupportingTelevisionController
MRTelevisionDelegate
MRTextInputMessage
_MRLanguageOptionGroupProtobuf
_MRVoiceInputDevice
MRMediaRemoteOriginClientManager
_MRColorProtobuf
_MRRegisterVoiceInputDeviceResponseMessageProtobuf
MRCryptoPairingMessage
_MRGetVoiceInputDevicesMessageProtobuf
_MRUnregisterGameControllerMessageProtobuf
MRVirtualTouchDeviceDescriptor
MRMutableVirtualTouchDeviceDescriptor
MRTextEditingAttributes
MRMutableTextEditingAttributes
MRTextEditingSession
MRMutableTextEditingSession
_MRGameControllerMessageProtobuf
_MRSendVoiceInputMessageProtobuf
_MRPlaybackQueueProtobuf
_MRVideoThumbnailProtobuf
MRApplicationActivity
MRMutableApplicationActivity
_MRRegisterHIDDeviceMessageProtobuf
_MRGameControllerMotionProtobuf
MRPasscodeCredentials
MRProtocolMessageLogger
MRVirtualVoiceInputDeviceDescriptor
MRMutableVirtualVoiceInputDeviceDescriptor
@12@0:4^{_NSZone=}8
v8@0:4
I8@0:4
^d8@0:4
v16@0:4d8
d12@0:4I8
v16@0:4^d8I12
v12@0:4f8
v12@0:4B8
B8@0:4
@8@0:4
B12@0:4@8
v12@0:4@8
f8@0:4
{?="list"^d"count"I"size"I}
{?="thumbnailsHeight"b1"thumbnailsWidth"b1}
v12@0:4i8
i8@0:4
d8@0:4
@"_MRPlaybackQueueContextProtobuf"
{?="artworkHeight"b1"artworkWidth"b1"length"b1"location"b1"includeInfo"b1"includeLanguageOptions"b1"includeLyrics"b1"includeMetadata"b1"includeSections"b1}
v16@0:4Q8
Q8@0:4
@"_MRGameControllerPropertiesProtobuf"
{?="controllerID"b1}
@24@0:4B8B12B16B20
@"_MRLyricsTokenProtobuf"
{?="endTime"b1"startTime"b1}
@"_MRAudioBufferProtobuf"
@"_MRAudioTimeProtobuf"
{?="gain"b1}
@12@0:4^{PairingSessionPrivate=}8
^v8@0:4
^{NSMutableDictionary=#}8@0:4
^v12@0:4@8
@12@0:4^v8
@12@0:4I8
v24@0:4@8@?12@16@?20
v12@0:4@?8
@"MRPendingMessageQueue"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
@16@0:4@?8@12
@?8@0:4
@16@0:4@8@?12
@"NSData"
@"MRProtocolMessage"
@"NSMutableArray"
@20@0:4@8L12L16
@"AVAudioCompressedBuffer"
@"NSDictionary"
#8@0:4
@12@0:4@8
@"NSString"
@24@0:4@8@12@16@?20
@"NSNotificationCenter"
@"NSArray"
@12@0:4B8
v12@0:4I8
@"_MRNowPlayingInfoProtobuf"
@"_MRPlaybackQueueProtobuf"
@"_MRSupportedCommandsProtobuf"
{?="playbackState"b1}
{?="type"b1}
@12@0:4i8
i12@0:4@8
v16@0:4q8
q8@0:4
{?="duration"b1"elapsedTime"b1"radioStationIdentifier"b1"timestamp"b1"uniqueIdentifier"b1"playbackRate"b1"repeatMode"b1"shuffleMode"b1"isAdvertisement"b1"isAlwaysLive"b1"isExplicitTrack"b1"isMusicApp"b1}
{?="sampleRate"b1"timestamp"b1}
@20@0:4r^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})}8Q12
@20@0:4^{?=fff}8Q12
^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})}8@0:4
{?="type"i""(?="motion"{?="gravity"{?="x"d"y"d"z"d}"userAcceleration"{?="x"d"y"d"z"d}}"buttons"{?="buttonA"f"buttonX"f"buttonPause"f}"extendedButtons"{?="buttons"{?="buttonA"f"buttonX"f"buttonPause"f}"dpadX"f"dpadY"f"buttonB"f"buttonY"f"leftShoulder"f"rightShoulder"f"leftThumbstickX"f"leftThumbstickY"f"rightThumbstickX"f"rightThumbstickY"f"leftTrigger"f"rightTrigger"f}"digitizer"{?="x"f"y"f"touchDown"B"timestamp"Q})}
@20@0:4^v8Q12
@16@0:4Q8
v12@0:4^v8
@"_MRLyricsItemProtobuf"
@"_MRContentItemMetadataProtobuf"
{?="state"b1}
@"_MRVirtualTouchEventProtobuf"
{?="virtualDeviceID"b1}
{?="duration"b1"elapsedTime"b1"iTunesAlbumIdentifier"b1"iTunesArtistIdentifier"b1"iTunesIdentifier"b1"iTunesSubscriptionIdentifier"b1"radioStationIdentifier"b1"releaseDate"b1"startTime"b1"chapterCount"b1"defaultPlaybackRate"b1"discNumber"b1"downloadProgress"b1"downloadState"b1"editingStyleFlags"b1"episodeNumber"b1"mediaSubType"b1"mediaType"b1"numberOfSections"b1"playCount"b1"playbackProgress"b1"playbackRate"b1"playlistType"b1"radioStationType"b1"seasonNumber"b1"totalDiscCount"b1"totalTrackCount"b1"trackNumber"b1"artworkAvailable"b1"infoAvailable"b1"isAdvertisement"b1"isAlwaysLive"b1"isBanned"b1"isContainer"b1"isCurrentlyPlaying"b1"isExplicitItem"b1"isInWishList"b1"isLiked"b1"isPlayable"b1"isSharable"b1"isStreamingContent"b1"languageOptionsAvailable"b1"lyricsAvailable"b1}
@"MRSupportedProtocolMessages"
^I8@0:4
I12@0:4I8
v16@0:4^I8I12
{?="list"^I"count"I"size"I}
{?="errorCode"b1}
@"_MRAudioFormatSettingsProtobuf"
{?="maximumPacketSize"b1"packetCapacity"b1"packetCount"b1}
v12@0:4#8
@16@0:4@8I12
@"MRVirtualVoiceInputDeviceDescriptor"
@16@0:4I8I12
@32@0:4@8{?=dd}12f28
{?=dd}8@0:4
@"MRAudioDataBlock"
@20@0:4I8Q12
@20@0:4Q8@16
{?="state"b1"status"b1"isRetrying"b1"isUsingSystemPairing"b1}
{?="timestamp"b1"actionType"b1}
v16@0:4@8@12
v16@0:4@"MRTelevisionClientConnection"8@"MRProtocolMessage"12
v12@0:4@"MRTelevisionClientConnection"8
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
^{_MROrigin=}8@0:4
v12@0:4^{_MROrigin=}8
v16@0:4I8@12
v16@0:4@?8@12
v20@0:4@8@12@?16
v40@0:4{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}8Q32
v20@0:4{_MRHIDButtonEvent=IIB}8
v12@0:4^{__IOHIDEvent=}8
v16@0:4@8@?12
v20@0:4^v8@12@?16
v20@0:4r^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})}8Q12
v36@0:4I8@12{?=dd}16f32
v24@0:4d8@?16@20
v20@0:4^v8Q12
v16@0:4@8I12
v20@0:4I8@12@?16
v16@0:4^v8^v12
^{_MROrigin=}
@"NSNetService"
@"MRTelevisionClientConnection"
@"MSVDistributedNotificationObserver"
{?="screenSizeHeight"b1"screenSizeWidth"b1"absolute"b1"integratedDisplay"b1}
@16@0:4I8^v12
v12@0:4l8
@16@0:4@8^@12
B12@0:4^@8
@"<MRCryptoPairingSessionDelegate>"
@"_MRLyricsEventProtobuf"
{?="volumeControlAvailable"b1}
@"_MRCommandOptionsProtobuf"
{?="command"b1}
@16@0:4I8@12
@"NSDate"
@"_MRTextInputTraitsProtobuf"
{?="artworkUpdates"b1"keyboardUpdates"b1"nowPlayingUpdates"b1"volumeUpdates"b1}
@40@0:4{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}8Q32
{_MRHIDTouchEvent=(_MRHIDPoint={?=ff}[2f])IQI}8@0:4
{?="name"b1}
@12@0:4^{__IOHIDEvent=}8
{_MRHIDButtonEvent=IIB}8@0:4
^{__IOHIDEvent=}
@"NSPointerArray"
l12@0:4@8
l16@0:4d8
@"MRPasscodeCredentials"
^{PairingSessionPrivate=}
{?="context"^v"showSetupCode_f"^?"hideSetupCode_f"^?"promptForSetupCode_f"^?"copyIdentity_f"^?"findPeer_f"^?"savePeer_f"^?"resumeRequest_f"^?"resumeResponse_f"^?}
@"NSMutableData"
@20@0:4@8@12@16
@16@0:4^{_NSZone=}8#12
@"MRAudioBuffer"
{?="timestamp"d"sampleRate"d}
v24@0:4{?=dd}8
v20@0:4I8B12@?16
@"MRCoreUtilsPairingSession"
@"MRCryptoPairingSessionBlockDelegate"
v16@0:4^{_MROrigin=}8@?12
v24@0:4Q8@16^{_MROrigin=}20
^{MRMediaRemoteService=}8@0:4
@"MRAVRoutingClientController"
^{MRMediaRemoteService=}
@20@0:4{_MRHIDButtonEvent=IIB}8
{?="hiliteMode"b1}
^f8@0:4
f12@0:4I8
v16@0:4^f8I12
{?="list"^f"count"I"size"I}
{?="canScrub"b1"command"b1"maximumRating"b1"minimumRating"b1"numAvailableSkips"b1"presentationStyle"b1"repeatMode"b1"shuffleMode"b1"skipFrequency"b1"skipInterval"b1"active"b1"enabled"b1}
{?="usage"b1"usagePage"b1"buttonDown"b1}
@"_MRTextEditingAttributesProtobuf"
@"_MRClientUpdatesConfigurationProtobuf"
@"_MRSetConnectionStateMessageProtobuf"
@"_MRCryptoPairingMessageProtobuf"
@"_MRDeviceInfoMessageProtobuf"
@"_MRGameControllerMessageProtobuf"
@"_MRGameControllerPropertiesMessageProtobuf"
@"_MRGenericMessageProtobuf"
@"_MRGetKeyboardSessionProtobuf"
@"_MRGetStateMessageProtobuf"
@"_MRGetVoiceInputDevicesMessageProtobuf"
@"_MRGetVoiceInputDevicesResponseMessageProtobuf"
@"_MRKeyboardMessageProtobuf"
@"_MRNotificationMessageProtobuf"
@"_MRPlaybackQueueRequestProtobuf"
@"_MRSetReadyStateMessageProtobuf"
@"_MRRegisterForGameControllerEventsMessageProtobuf"
@"_MRRegisterGameControllerMessageProtobuf"
@"_MRRegisterGameControllerResponseMessageProtobuf"
@"_MRRegisterHIDDeviceMessageProtobuf"
@"_MRRegisterHIDDeviceResultMessageProtobuf"
@"_MRRegisterVoiceInputDeviceMessageProtobuf"
@"_MRRegisterVoiceInputDeviceResponseMessageProtobuf"
@"_MRSendButtonEventMessageProtobuf"
@"_MRSendCommandMessageProtobuf"
@"_MRSendCommandResultMessageProtobuf"
@"_MRSendHIDEventMessageProtobuf"
@"_MRSendHIDReportMessageProtobuf"
@"_MRSendLyricsEventMessageProtobuf"
@"_MRSendPackedVirtualTouchEventMessageProtobuf"
@"_MRSendVirtualTouchEventMessageProtobuf"
@"_MRSendVoiceInputMessageProtobuf"
@"_MRSetArtworkMessageProtobuf"
@"_MRSetHiliteModeMessageProtobuf"
@"_MRSetRecordingStateMessageProtobuf"
@"_MRSetStateMessageProtobuf"
@"_MRTextInputMessageProtobuf"
@"_MRTransactionMessageProtobuf"
@"_MRUnregisterGameControllerMessageProtobuf"
@"_MRVolumeControlAvailabilityProtobuf"
@"_MRWakeDeviceMessageProtobuf"
{?="timestamp"b1"errorCode"b1"type"b1}
@"_MRVoiceInputDeviceDescriptorProtobuf"
{?="x"b1"y"b1"finger"b1"phase"b1}
@"_MRColorProtobuf"
{?="nowPlayingVisibility"b1"processIdentifier"b1"processUserIdentifier"b1}
B16@0:4@8B12
d16@0:4@8B12
@"NSUserDefaults"
{?="buttonAUpDelay"b1"playerIndex"b1"profile"b1}
{?="startOffset"b1"dataByteSize"b1"variableFramesInPacket"b1}
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@20@0:4i8@12@16
{?="deviceIdentifier"b1"errorCode"b1}
{?="totalLength"b1}
@12@0:4^{MRMediaRemoteService=}8
{?="playbackPosition"b1"radioStationID"b1"trackID"b1"playbackQueueDestinationOffset"b1"playbackQueueInsertionPosition"b1"playbackQueueOffset"b1"playbackRate"b1"rating"b1"repeatMode"b1"sendOptions"b1"shuffleMode"b1"skipInterval"b1"externalPlayerCommand"b1"negative"b1"requestDefermentToPlaybackQueuePosition"b1"shouldBeginRadioPlayback"b1"shouldOverrideManuallyCuratedQueue"b1}
v16@0:4@"MRCryptoPairingSession"8@"NSData"12
v16@0:4@"MRCryptoPairingSession"8@"NSString"12
v12@0:4@"MRCryptoPairingSession"8
v24@0:4@8d12@?20
v24@0:4@"MRCryptoPairingSession"8d12@?<v@?@"NSString">20
v16@0:4@"MRCryptoPairingSession"8@"NSError"12
@16@0:4@8@12
v20@0:4@8I12@?16
@24@0:4Q8^{_MROrigin=}16@20
@"MRTransactionPacketizer"
v16@0:4@8^{_MROrigin=}12
@24@0:4Q8@16@20
@"<MRTransactionDelegate>"
@"PBCodable"
@"NSError"
@"MSVMultiCallback"
B12@0:4I8
{?="protocolVersion"b1"lastSupportedMessageType"b1"allowsPairing"b1"connected"b1"supportsSystemPairing"b1}
@"MRVirtualTouchDeviceDescriptor"
^Q8@0:4
Q12@0:4I8
v16@0:4^Q8I12
{?="list"^Q"count"I"size"I}
{?="validTextRangeLength"b1"validTextRangeLocation"b1"autocapitalizationType"b1"keyboardType"b1"returnKeyType"b1"autocorrection"b1"enablesReturnKeyAutomatically"b1"secureTextEntry"b1"spellchecking"b1}
@16@0:4^{_MROrigin=}8@12
v16@0:4@?8B12
v20@0:4^v8^v12^v16
@"MRPlaybackQueueClient"
@16@0:4@8^v12
@16@0:4^{_MRContentItem=}8^v12
v12@0:4^{_MRContentItem=}8
^{_MRContentItem=}8@0:4
^{_MRContentItem=}
{?="inputModeFlags"b1}
{?="buttonA"b1"buttonB"b1"buttonPause"b1"buttonX"b1"buttonY"b1"dpadX"b1"dpadY"b1"leftShoulder"b1"leftThumbstickX"b1"leftThumbstickY"b1"leftTrigger"b1"rightShoulder"b1"rightThumbstickX"b1"rightThumbstickY"b1"rightTrigger"b1}
@12@0:4^{_MROrigin=}8
v20@0:4@?8Q12
@"MRNowPlayingArtwork"
@"MRPlaybackQueueOriginClient"
v16@0:4@?8I12
v12@0:4@"NSArray"8
^{NSObject=#}12@0:4^v8
v12@0:4^{NSObject=#}8
v28@0:4I8f12i16d20
v20@0:4I8f12i16
v32@0:4I8f12f16Q20B28
v28@0:4I8f12f16f20i24
B28@0:4I8f12i16d20
v28@0:4f8f12Q16B24
@"NSXPCConnection"
@"MRGameControllerDelayedEvents"
@20@0:4Q8i16
v20@0:4Q8i16
^{NSMutableDictionary=#}
@24@0:4I8@12@16@20
@20@0:4I8@12@16
@"MRTextEditingAttributes"
v12@0:4^{?=i(?={?={?=ddd}{?=ddd}}{?=fff}{?={?=fff}ffffffffffff}{?=ffBQ})}8
^{NSObject=#}8@0:4
@"MRGameControllerDaemonProxy"
@"<MREmulatedGameControllerDelegate>"
^{NSObject=#}
{?="userProvided"b1}
v16@0:4@"NSStream"8I12
v16@0:4@"MSVMessageParser"8@"NSData"12
@"MSVMessageParser"
@"NSRunLoop"
@"MRTelevisionMessageQueue"
@"NSInputStream"
@"NSOutputStream"
@"<MRTelevisionClientConnectionDelegate>"
@"MRCryptoPairingSession"
v12@0:4@"NSNetServiceBrowser"8
v16@0:4@"NSNetServiceBrowser"8@"NSDictionary"12
v20@0:4@8@12B16
v20@0:4@"NSNetServiceBrowser"8@"NSString"12B16
v20@0:4@"NSNetServiceBrowser"8@"NSNetService"12B16
v12@0:4@"NSNetService"8
v16@0:4@"NSNetService"8@"NSDictionary"12
v16@0:4@"NSNetService"8@"NSData"12
v20@0:4@8@12@16
v20@0:4@"NSNetService"8@"NSInputStream"12@"NSOutputStream"16
@"NSNetServiceBrowser"
@"NSMutableSet"
@"<MRTelevisionDelegate>"
v16@0:4@"MRTelevisionController"8@"MRTelevision"12
@"_MRTelevisionControllerBlockCallback"
@"_MRLanguageOptionProtobuf"
{?="allowEmptySelection"b1}
{?="deviceID"b1"recordingState"b1}
{?="alpha"b1"blue"b1"green"b1"red"b1}
{?="deviceID"b1"errorCode"b1}
@16@0:4@8l12
@28@0:4@8l12B16B20I24
l8@0:4
(_MRHIDSize={?=ff}[2f])8@0:4
(_MRHIDSize=""{?="width"f"height"f}"data"[2f])
v16@0:4(_MRHIDSize={?=ff}[2f])8
{_MRTextInputTraits=IIIII{?=ii}BB[10l]I}8@0:4
{_MRTextInputTraits="autocapitalizationType"I"autocorrectionType"I"spellcheckingType"I"keyboardType"I"returnKeyType"I"validTextRange"{?="location"i"length"i}"enablesReturnKeyAutomatically"B"secureTextEntry"B"PINEntrySeparatorIndexes"[10l]"PINEntrySeparatorIndexesCount"I}
v84@0:4{_MRTextInputTraits=IIIII{?=ii}BB[10l]I}8
@"_MRGameControllerButtonsProtobuf"
@"_MRGameControllerMotionProtobuf"
@"_MRAudioDataBlockProtobuf"
{?="location"b1}
{?="time"b1}
@"NSUUID"
@"_MRVirtualTouchDeviceDescriptorProtobuf"
@"_MRGameControllerAccelerationProtobuf"
[CryptoPairingSession(CoreUtils-System)] Pairing Device %@
[CryptoPairingSession(CoreUtils-System)] Unpairing Device %@
[CryptoPairingSession(CoreUtils-System)] Pairing Manager not available due to lacking entitlements
WARNING: Unexpected type for now playing key %{public}@ (is %{public}@, should be %{public}@). Removing from now playing info dictionary.
Atempting to add recursive notifications: %@
Mapping Notification: %@ -> %@
Mapping UserInfo: %@ -> %@
MediaRemote: NULL origins are invalid for %s. Please provide either the local origin or a custom origin for this API. This will become an error condition in future builds.
Process %d is requesting now playing info.
Process %d is requesting now playing info for origin %@.
Setting artwork data of size: %lu
Setting identical now playing info, skipping update.
Clearing now playing info
Got artwork data of length: %lu
MediaRemote server disconnected.
No client-side XPC message destination routed for message with ID %lu.
Warning: Tried to stop a service that isn't running.
Setting television endpoint
Requesting playback Queue=%@ Context=%@ Client=%@ Origin=%@
Returning playback Queue=%@ Context=%@ error=%@
Didn't receive any available origins from the reply.
Didn't receive any pickable routes from the reply.
Error while requesting to load browsable content: %@
Creating Transaction Destination with name: %llu
WARNING: Unable to serialize content items property list data. %@
Client XPC message with ID %lu not handled.
No client module registered to receive message: %@
Client-side browsable content message with ID %lu not handled.
No browsable content endpoint registered to receive message: %@
WARNING: Client endpoint returned nil when requesting now playing identifiers
Client endpoint returned nil when requesting child content items.
Voice recording client message %lu not handled
No voice recording endpoint registered to receive message: %@
Television client message %lu not handled
No television endpoint registered to receive message: %@
No callback for television custom data
Agent client message %lu not handled
No agent endpoint registered to receive message: %@
Reestasblishing recording endpoint.
Reestasblishing television endpoint.
Reestasblishing agent endpoint.
MediaRemote reply error: %s
Encountered unknown protobuf key (%@) while converting to a dictionary; skipping.
Unknown MRGameControllerEventType: %d
Attempting to Connect to television %@ but we are already in connection state %d. Returning...
Connecting to television %@...
Failed to initialize IO streams for TV net service: %{public}@
Error loading device info for TV %@. %@{public}
Error opening security session for TV %@. %{public}@
Failed to register custom origin for TV. %@
Received Register HID Device result with error %{public}@ and identifier: %@
Error registering HID device. %{public}@
Error fetching text editing session. %{public}@
Received Register Game Controller response with controllerID: %llu
Error registering Game Controller device. %{public}@
Cannot send Game Controller event without a type
Connection error while sending voice input data. %{public}@
Connection error while sending wake message. %{public}@
Connection error while sending custom data message. %{public}@
Connection error while sending ping message. %{public}@
decoded txtData: %@
Unknown message attempting to be handled
Television server disconnected: %@
Calling NetService:getInputStream:outputStream with service %{public}@
Successful NetService:getInputStream:outputStream with service: %{public}@ input: %@ output: %@
Registering custom origin ID %u "%@"...
Successfully registered custom origin: %@
Failed to register custom origin.
Got current deviceInfo %@
Received device info: %{public}@
Error fetching device info
Error fetching device info. %{public}@
No Connection for data exchange callback.
Session mismatch for data exchange callback %@ %@
No Connection for prompt setup callback
Session mismatch for prompt setup callback %@ %@
Pairing session locked out.
No Connection for exchange complete callback.
Error with pairing session exchange. %@ %{public}@
Opening cryptography session %{public}@...
Failed to unregister custom origin.
Connection error while sending playback queue request message. %{public}@
Connection error while sending begin lyrics event message. %{public}@
Error sending text input message. %{public}@
Calling Client Registered Connection State Callback: %u with error: %@
Calling Client Registered Game Controller Input Mode Callback: %u
Calling Client Registered Game Controller Properties Callback
Calling Client Registered Recording State Callback: %u
Calling Client Registered Text Input Callback: %u
Calling Client Registered Pairing Callback
Calling Client Registered Name Callback with %@
Calling Client Registered pairing allowed Callback with %@
Calling Client Registered hilite mode Callback with %@
Calling Client Registered custom data Callback
Received command %d %@
Received command result with send error %d with results: %{public}@
Error sending remote command to device. %{public}@
Processing %lld bytes of crypto pairing data
Failed to handle crypto pairing data. %@
Handling pairing failure with OSStatus = %d
ERROR: Received crypto pairing message without an active pairing session
Unknown callback event for keyboard message: %{public}@
Device info changed %@ -> %@
Got elapsed time change.
Registered for elapsed time changes.
Unregistered for elapsed time changes.
Got playback speed change.
Registered for playback speed changes.
Unregistered for playback speed changes.
Got repeat mode change.
Registered for repeat mode changes.
Unregistered for repeat mode changes
Got shuffle mode change.
Registered for shuffle mode changes.
Unregistered for shuffle mode changes
Adding Playback Queue %@ to xpc message
WARNING: Unable to serialize playback queue
WARNING: Unable to serialize playback queue context
WARNING: Unable to serialize content items
Created playback queue %@ from xpc message
[CryptoPairingSession(CoreUtils)] Failed to handle pairing exchange. %{public}@
[CryptoPairingSession(CoreUtils)] Error while encrypting data: %{public}@
[CryptoPairingSession(CoreUtils)] Error while decrypting data: %{public}@
[CryptoPairingSession(CoreUtils)] Error initializing pairing session during identity deletion. %{public}@
[CryptoPairingSession(CoreUtils)] Error deleting identity. %{public}@
[CryptoPairingSession(CoreUtils)] Error initializing pairing session. %{public}@
[CryptoPairingSession(CoreUtils)] Failed to begin pairing exchange. %{public}@
[CryptoPairingSession(CoreUtils)] Pairing device %@...
Duplicate record found for identifier %s dumping pairing
[CryptoPairingSession(CoreUtils)] Unpairing device %@
[CryptoPairingSession(CoreUtils)] Updating Peer %@
[CryptoPairingSession(CoreUtils)] Error updating peer (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Found empty extended info entry, removing it
[CryptoPairingSession(CoreUtils)] Could not delete empty entry with status %lu
[CryptoPairingSession(CoreUtils)] Requesting delegate to prompt for setup code with delay = %f
[CryptoPairingSession(CoreUtils)] Error initializing pairing session (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Failed to resume pairing process after setting setup code. %{public}@
[CryptoPairingSession(CoreUtils)] Exchange complete. Proceeding to verify step.
[CryptoPairingSession(CoreUtils)] Failed to record successfully paired peer
[CryptoPairingSession(CoreUtils)] Error initializing verify session. %{public}@
[CryptoPairingSession(CoreUtils)] Failed to prepare data for verify exchange. %@
[CryptoPairingSession(CoreUtils)] Verify complete. Deriving encryption keys.
[CryptoPairingSession(CoreUtils)] Failed to derive input key (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Failed to derive output key (OSStatus = %d)
[CryptoPairingSession(CoreUtils)] Successfully derived encryption keys.
MediaRemote: NULL origins are invalid for %s. Please provide either the local origin, active origin, or a custom origin for this API. 
ContentItems Changed %@ for origin %@
Sending update for changed items %@ for origin %@
[CryptoPairingSession(MRTelevisionPairingSession)] Unpairing Device %@
[CryptoPairingSession(MRTelevisionPairingSession)] Opening Security Session in State = %ld usingSystemPairing = %s
[CryptoPairingSession(MRTelevisionPairingSession)] System pairing success.
[CryptoPairingSession(MRTelevisionPairingSession)] Legacy pairing success.
Registered for now playing notifications
Unregistered for now playing notifications
Error code %d while registering custom origin
Error code %d while removing custom origin
Requesting item %@ with %@ at indexPath %@
Error %@ handling request %@ at indexPath %@. Trying next callback...
Service client's connection was interrupted. Reregistering custom origins with the media remote service.
Got %{public}@ command for origin %{public}@.
Got origin %{public}@ change with origin: %{public}@.
Received Media Remote client notification %{public}@
Suppressing %{public}@ -- client process did not ask to receive these notifications.
Receieved Playback Queue Request %@ for Origin %@
Error requesting playback queue %@
Received lyrics event %@ for Origin %@
Got Legacy DeviceID %@ from userDefaults
Opening Legacy DeviceID file: %@
Got Legacy DeviceID %@ from file %@
Removing Legacy DeviceID file %@
[MRTransactionPacketizer] Purging incoming packets: %@
[MRTransactionPacketizer] Purging outgoing packets: %@
[MRTransactionPacketizer] Adding packets %@
[MRTransactionPacketizer] Total current packets %@
[MRTransactionPacketizer] Packetizer has %lu bytes avaialable
[MRTransactionPacketizer] Packetizer packet %@ of length %lu and writePosition %lu set writeLength to %lu
[MRTransactionPacketizer] Packetizer packet %@ has been completely processed
[MRTransactionPacketizer] Packetizer packet %@ has been partially processed
[MRTransactionPacketizer] Packetizer is ready to send packets %@
[MRTransactionPacketizer] Packetizer received new incoming packets: %@
[MRTransactionPacketizer] Partial Packet with actual length %lu and identifier %@ encountered. Merging with new packet of length %lu
[MRTransactionPacketizer] Completed partial packet with identifier %@
[MRTransactionPacketizer] Partial packet with identifier %@ is still partial with actual length of %lu. Need %lu bytes to complete
[MRTransactionPacketizer] Completed packet
[MRTransactionPacketizer] Storing partial packet with actual length %lu identifier %@. Need %lu bytes to complete
[MRTransactionPacketizer] Packetizer sending completed packets %@
[MRTransactionSource] Adding packets %@
[MRTransactionSource] Total current packets %@
[MRTransactionSource] Beginning Source %@ with origin %@
[MRTransactionSource] Source %@ received initial reply
[MRTransactionSource] Source %@ processing message...
[MRTransactionSource] Source %@ sending packets %@ for total of %lu bytes
[MRTransactionSource] Source %@ received reply
[MRTransactionSource] Source %@ adding end signal
[MRTransactionSource] Source %@ could not extract reply
[MRTransactionSource] Source %@ could not extract connection
[MRTransactionSource] Source %@ received interrupted/invalid connection to query
[MRTransactionSource] Transaction: %@ purging packets: %@
[MRTransactionSource] Source %@ adding new source origin %@
[MRTransactionSource] Source %@ removing source origin %@
[MRTransactionDestination] Destination %llu replying
[MRTransactionDestination] Destination %llu could not extract reply
[MRTransactionDestination] Destination %llu could not extract connection
[MRTransactionDestination] Destination %llu recieved %lu bytes from origin: %@ and extracted %lu packets
[MRTransactionDestination] Destination %llu received interrupted/invalid connection
[MRTransaction] New Transaction: %@ for origin %@
[MRTransaction] Transaction %@ sending %@ from origin %@
[MRTransaction] Transaction %@ received response
[MRTransaction] Transaction %@ attempted to send empty bytes from origin %@
[MRTransaction] Transaction %@ received %@ packets for a total of %lu bytes 
[MRTransaction] Transaction %@ received interrupted/invalid connection
[MRTransaction] Transaction %@ begin querying...
[MRTransaction] Transaction %@ received end signal received
[MRTransaction] Transaction %@ querying for %lu bytes
[MRTransaction] Transaction %@ could not create reply to qeury
[MRTransaction] Transaction %@ could not extract connection to query
MRLanguageOptionsCreateFromExternalRepresentation: Expecting  CFDataRef but instead found CFArrayRef of CFDataRef. Please fix by using 'MRLanguageOptionsCreateExternalRepresentation' to serialize any CFArrayRef of MRLanguageOptionRefs
MRLanguageOptionsCreateFromExternalRepresentation: After deserializing was expecting an CFArrayRef of MRLanguageOptionRef but instead found CFArrayRef of CFDataRef. Please fix by using 'MRLanguageOptionsCreateExternalRepresentation' to serialize any CFArrayRef of MRLanguageOptionRefs
MRLanguageOptionGroupsCreateFromExternalRepresentation: Expecting  CFDataRef but instead found CFArrayRef of CFDataRef. Please fix by using 'MRLanguageOptionGroupsCreateExternalRepresentation' to serialize any CFArrayRef of MRLanguageOptionGroupRefs
MRLanguageOptionGroupsCreateFromExternalRepresentation: After deserializing was expecting CFDataRef but instead found CFArrayRef of CFDataRef. Please fix by using 'MRLanguageOptionGroupsCreateExternalRepresentation' to serialize any CFArrayRef of MRLanguageOptionGroupRefs
mediaremoted launched, restoring state.
AVSystemController server connection died.
MRContentItemSetAvailableLanguageOptions: Expecting a CFArrayRef of MRLanguageOptionGroupRefs but instead found a CFArrayRef of CFDataRef. Please fix.
MRContentItemSetCurrentLanguageOptions: Expecting a CFArrayRef of MRLanguageOptionRefs but instead found a CFArrayRef of CFDataRef. Please fix.
Attempting to Merge a ContentItem with itself %@
Trying to Merge incompatible ContentItems %@ != %@
[GameControllerDaemonProxy] invalidated connection to com.apple.GameController.gamecontrollerd
[GameControllerDaemonProxy] interrupted connection to com.apple.GameController.gamecontrollerd
[GameControllerDaemonProxy] Premptive Delayed event
[GameControllerDaemonProxy] Delayed event initiated
[GameControllerDaemonProxy] Sending delayed event
[EmulatedGameController] Cannot create GameControllerDaemonProxy
[EmulatedGameController] Cannot create emulated controller
[TelevisionConnection] Dealloc
[TelevisionConnection] Trying to send unencrypted message that requires encryptions. Killing message
[TelevisionConnection] Received raw data of length: %lld
[TelevisionConnection] %@ Error: %@
[TelevisionConnection] Stream ended. Disconnecting...
[TelevisionConnection] Crypto Error. Disconnecting...
[TelevisionConnection] Unknown message received
[TelevisionConnection] Attempting respond to message after disconnect. Ignoring.
[TelevisionConnection] Wrote %ld bytes to socket
[TelevisionConnection] Successfully set _kCFStreamSocketSetNoDelay = %@
[TelevisionConnection] Failed to set _kCFStreamSocketSetNoDelay property.
[TelevisionConnection] Failed to set socket QOS (errno = %d)
[TelevisionConnection] Successfully set socket QOS to %d.
[TelevisionConnection] Failed to set QOS properties on stream %@. No native socket was retrievable.
Configuring Television NetServiceBrowser with includesPeerToPeer = %@
Beginning network service search for %@...
Stopping network service search.
Found service %@
Removing service %@
Resolved service %@
TxtData did change for service %@
Sending Lyrics Event: %@ for Origin: %@ for Client: %@
Setting active origin: %@
[TelevisionMessageLogger] %@ : %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
