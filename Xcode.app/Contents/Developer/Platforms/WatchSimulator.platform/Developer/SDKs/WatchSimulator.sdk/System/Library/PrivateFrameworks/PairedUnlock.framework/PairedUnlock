sharedConnection
isPasscodeSet
unlockScreenType
alloc
init
hasPasscode
setHasPasscode:
isLocked
setIsLocked:
isUnlockOnly
setIsUnlockOnly:
didGetPasscodeStateProtobuf
initWithService:
addDelegate:queue:
didCompleteRequest:
setProtobufAction:forIncomingRequestsOfType:
setProtobufAction:forIncomingResponsesOfType:
getPasscodeState:
didGetPasscodeState:
didUnlock:
startPasscodeAction:
disableOnlyRemoteUnlock:
removeLockout:
setShouldNotifyNextUnlock:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
removeObjectForKey:
errorHandlerForRequest:
removeErrorHandlerForRequest:
countByEnumeratingWithState:objects:count:
isDefaultPairedDevice
isConnected
setMessageID:
setSuccess:
data
initForWritingWithMutableData:
setRequiresSecureCoding:
encodeObject:forKey:
finishEncoding
setErrorData:
_sendResponse:toRequestID:data:error:
_sendRequest:data:reliably:expectResponse:handler:error:
initWithProtobufData:type:isResponse:
copy
numberWithUnsignedShort:
setResponseHandler:forRequestMessageID:
_sendProtobuf:reliably:expectsResponse:responseIdentifier:error:
dictionary
numberWithBool:
numberWithInt:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
initWithData:
context
outgoingResponseIdentifier
errorData
initForReadingWithData:
class
decodeObjectOfClass:forKey:
isKindOfClass:
success
messageID
responseHandlerForRequestMessageID:
removeResponseHandlerForRequestMessageID:
unlockDeviceWithPasscode:outError:
sharedUnlockManager
_notifyPairResult:error:handler:
enableUnlockWithDevice:fromKey:withPasscode:completionHandler:
errorWithDomain:code:userInfo:
setActionID:
setPasscodeType:
boolValue
setShouldNotify:
stringWithFormat:
disableUnlockWithDevice:
setErrorHandler:forRequest:
_notifyStateHasPasscode:isLocked:isOnlyRemoteUnlock:reliably:completionHandler:
dataWithBytesNoCopy:length:
base64EncodedStringWithOptions:
changePasscodeFrom:to:outError:
storePasscodeBlob:withLabel:
isPasscodeModificationAllowed
synchronizeUserDefaultsDomain:keys:
length
_createAndStoreNewPasscodeWithCurrentPasscode:
getPasscodeBlobWithLabel:
_retrieveUnlockOnlyPasscode
deletePasscodeBlobWithLabel:
actionID
_sendResultOfMessage:requestID:success:error:
disableOnlyRemoteUnlockWithCompletionHandler:
passcodeType
peer:remoteDeviceRequestsPasscodeAction:type:existingPasscode:completionHandler:
defaultManager
removeItemAtPath:error:
peerRemoteDeviceDidUnlock:
respondsToSelector:
shouldNotify
peer:wantsNotificationOfNextUnlock:
incomingResponseIdentifier
peer:didNotifyStateHasPasscode:isPasscodeLocked:isUnlockOnly:error:
syncPasscodeState
peer:didPairForUnlock:error:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
pairForUnlockWithPasscode:completionHandler:
requestRemoteDevicePasscodeAction:type:completionHandler:
requestRemoteDeviceUnlockNotification
requestRemoteDeviceDisableOnlyRemoteUnlock
requestRemoteDeviceRemoveLockout:
unpairForUnlockWithCompletionHandler:
getRemoteDeviceState:
notifyCurrentState
enableOnlyRemoteUnlockWithPasscode:completionHandler:
notifyThisDeviceDidUnlock
.cxx_destruct
delegate
setDelegate:
isUnlockEnabled
setUnlockEnabled:
keyStore
setKeyStore:
responseHandlers
setResponseHandlers:
errorHandlers
setErrorHandlers:
handlerManagementQueue
setHandlerManagementQueue:
_service
_idsQueue
_unlockEnabled
_delegate
_keyStore
_responseHandlers
_errorHandlers
_handlerManagementQueue
dictionaryRepresentation
numberWithUnsignedInt:
setObject:forKey:
allocWithZone:
copyWithZone:
setHasPasscodeType:
hasPasscodeType
readFrom:
writeTo:
copyTo:
mergeFrom:
_actionID
_passcodeType
_has
_hasPasscode
_isLocked
_isUnlockOnly
_initWithDomain:
stringWithUTF8String:
_bindProperty:withDefaultKey:toDefaultValue:options:
_store
objectForKey:
_bindAndRegisterDefaults
deviceLockDefaultForKey:
setDeviceLockDefault:forKey:
_attributesForPasscodeBlobWithLabel:
dictionaryWithObjects:forKeys:count:
newKeyWithLabel:allowAccessWhenLocked:
storeEncryptionKey:withLabel:allowAccessWhenLocked:
hasKeyWithLabel:isPublic:
deleteKeyWithLabel:
decryptBlob:withKeyLabel:
encryptBlob:withKeyLabel:
getEncryptionKeyWithLabel:
bytes
dataWithBytes:length:
stringByAppendingPathComponent:
distantPast
timeIntervalSinceReferenceDate
_loadLockControllerDefaultsJournalIfNecessary
_persistentStateQueue_updateBlockTimeAndPendingWipe
_persistentStateQueue_loadLockState
_persistentStateQueue_cancelSpeculativeFailureCharge
_persistentStateQueue_clearBlockedState
deviceLockStateMayHaveChangedForModel:
_persistentStateQueue_beginSpeculativeFailureCharge
_persistentStateQueue_unlockSucceeded
_persistentStateQueue_unlockFailedWithError:
synchronizeDefaults
_evaluatePendingWipe
timeUntilUnblockedSinceReferenceDate
_persistentStateQueue_evaluatePendingWipe
numberOfFailedPasscodeAttempts
intValue
_persistentStateQueue_shouldWipeDeviceOrBlockForSeconds:withFailureCount:
setPendingWipe:
_persistentStateQueue_shouldPermanentlyBlockOrSetUnblockTimeForSecondsToBlock:
setBlockedForPasscode:
effectiveBoolValueForSetting:
valueForFeature:
_isDeviceWipePreferenceEnabled
_persistentStateQueue_getMaxFailureCount
_secondsToBlockForNumberOfFailedAttempts:
setNumberOfFailedPasscodeAttempts:
updateLockControllerDefaultsWithBlock:journaled:
_loadLockControllerDefaults:
callStackSymbols
deviceLockModelRequestsDeviceWipe:
pendingWipe
blockedForPasscode
_journaledDefaultsAndTypes
count
initWithCapacity:
blockStateGeneration
longLongValue
dictionaryWithContentsOfFile:
bs_safeObjectForKey:ofType:
_loadLockControllerDefaultsJournalFromOldJournal:
_copyLockControllerDefaults
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:atomically:
setAttributes:ofItemAtPath:error:
numberWithLongLong:
setBlockStateGeneration:
_updateLockControllerDefaultsJournal
performPasswordTest:
notePasscodeEntryBegan
notePasscodeEntryCancelled
notePasscodeUnlockSucceeded
notePasscodeUnlockFailedWithError:
synchronize
clearBlockedState
refreshBlockedState
noteNewMkbDeviceLockStateInfo:options:
isTemporarilyBlocked
isPermanentlyBlocked
persistentStateQueue
_securityDefaults
_journalPath
_persistentStateQueue
_speculativePasscodeFailureChargeOutstanding
_originalDefaultsForRollback
_pendingWipe
_permanentlyBlocked
_unblockTime
_originalUnblockTime
queueNameWithSuffix:
initWithDelegate:
UTF8String
invalidate
dealloc
initWithMachServiceName:options:
checkIn
pairForUnlockWithPasscode:
unpairForUnlock
enableOnlyRemoteUnlockWithPasscode:
disableOnlyRemoteUnlock
requestRemoteDevicePasscodeAction:type:
requestRemoteDeviceRemoveLockout
didCompletePasscodeAction:error:
getRemoteDeviceState
interfaceWithProtocol:
setRemoteObjectInterface:
didPairForUnlock:error:
didUnpairForUnlock:error:
didEnableOnlyRemoteUnlock:error:
didDisableOnlyRemoteUnlock:error:
remoteDeviceDidCompletePasscodeAction:error:
remoteDeviceDidUnlock
remoteDeviceDidRemoveLockout:error:
didGetRemoteDeviceHasPasscode:isLocked:isUnlockOnly:error:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setConnection:
setInvalidationHandler:
resume
remoteObjectProxyWithErrorHandler:
connection
remoteObjectProxy
setRemoteDeviceRemoveLockoutHandler:
setGetRemoteDevicePasscodeStateHandler:
unlockConnection:didPairForUnlock:error:
delegateIfRespondsToSelector:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:remoteDeviceDidCompletePasscodeAction:error:
unlockConnectionRemoteDeviceDidUnlock:
getRemoteDevicePasscodeStateHandler
unlockConnection:remoteDeviceDidNotifyStateHasPasscode:isPasscodeLocked:isUnlockOnly:
remoteDeviceRemoveLockoutHandler
unlockScreenTypeWithOutSimplePasscodeType:
_connection
_connectionQueue
_delegateQueue
_getRemoteDevicePasscodeStateHandler
_remoteDeviceRemoveLockoutHandler
_shouldNotify
_refreshStateAndNotify:
_refreshStateForMkbState:notify:
hasErrorData
_errorData
_messageID
_success
PUPasscodeState
PUPeer
IDSServiceDelegate
NSObject
PUProtoStartPasscodeAction
NSCopying
PUProtoGetPasscodeState
PUProtoDidGetPasscodeState
PUSecurityDefaults
PUKeyStore
PUProtoRemoveLockout
PUUserAuthenticationJournal
PUUserAuthenticationModel
PUUnlockServer
PUUnlockClient
PUConnection
PUProtoDidUnlock
PUProtoSetShouldNotifyNextUnlock
PUProtoRequestDisableOnlyRemoteUnlock
PUUserAuthenticationSEP
PUProtoRequestCompleted
B8@0:4
@8@0:4
v28@0:4@8@12@16@20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@8@12@16@20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@8@12
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@8@12@16B20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@8@12@16B20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@8@12@16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@8
v12@0:4@"IDSService"8
v20@0:4@8@12@?16
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
@12@0:4@8
@?12@0:4@8
v16@0:4@?8@12
v24@0:4S8@12B16@20
@32@0:4S8@12B16B20@?24^@28
v24@0:4S8@12@16^@20
@28@0:4@8B12B16@20^@24
v16@0:4@8@?12
v20@0:4i8i12@?16
v8@0:4
v12@0:4@?8
v28@0:4B8B12B16B20@?24
v20@0:4B8@12@?16
v12@0:4B8
@"IDSService"
@"NSObject<OS_dispatch_queue>"
@"<PUPeerDelegate>"
@"PUKeyStore"
@"NSMutableDictionary"
@12@0:4^{_NSZone=}8
v12@0:4I8
{?="passcodeType"b1}
@16@0:4@8B12
v20@0:4@8@12B16
B16@0:4@8B12
@16@0:4@8@12
B16@0:4@8@12
i12@0:4i8
v12@0:4@?<v@?^B>8
v12@0:4@"NSError"8
v16@0:4@"NSDictionary"8@"NSDictionary"12
@"<PUUserAuthenticationModelDelegate>"8@0:4
v12@0:4@"<PUUserAuthenticationModelDelegate>"8
d8@0:4
i8@0:4
B16@0:4^i8i12
B12@0:4i8
@16@0:4@?8B12
@"PUSecurityDefaults"
@"NSString"
@"NSDictionary"
@"<PUUserAuthenticationModelDelegate>"
v12@0:4@"NSString"8
v16@0:4i8i12
v16@0:4B8@12
v16@0:4B8@"NSError"12
v24@0:4B8B12B16@20
v24@0:4B8B12B16@"NSError"20
r*12@0:4@8
@?8@0:4
@"NSXPCConnection"
@"<PUConnectionDelegate>"
v16@0:4@8B12
@"NSData"
com.apple.paired-unlock
IsUnlockOnly
ShouldDisableOnlyRemoteUnlock
token
tokenKey
com.apple.pairedunlock.ids
com.apple.private.alloy.pairedunlock
com.apple.pairedunlock.handlermanagement
v4@?0
error
v12@?0B4@"NSError"8
v12@?0@4@"NSError"8
Requested
FAILED to request
 (%@)
v8@?0@"NSError"4
DisableWristDetection
com.apple.Carousel
CSLDisableWristDetectionChangedNotification
v20@?0B4@"NSError"8@"NSString"12@"NSString"16
/var/mobile/Library/Carousel/LockoutStateJournal.plist
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
keyStore
T@"PUKeyStore",&,N,V_keyStore
responseHandlers
T@"NSMutableDictionary",&,N,V_responseHandlers
errorHandlers
T@"NSMutableDictionary",&,N,V_errorHandlers
handlerManagementQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_handlerManagementQueue
delegate
T@"<PUPeerDelegate>",N,V_delegate
unlockEnabled
TB,N,GisUnlockEnabled,V_unlockEnabled
%@ %@
actionID
passcodeType
TI,N,V_actionID
hasPasscodeType
TB,N
TI,N,V_passcodeType
hasPasscode
isLocked
isUnlockOnly
TB,N,V_hasPasscode
TB,N,V_isLocked
TB,N,V_isUnlockOnly
com.apple.nanosystemsettings
erase-data-enabled
PUDefaultKeyBlockedForPasscode
PUDefaultKeyNumberOfFailedPasscodeAttempts
PUDefaultKeyDeviceLockPendingWipe
PUDefaultKeyUnblockTimeIntervalSinceReferenceDate
PUDefaultKeyDeviceLockBlockStateGeneration
com.apple.pairedunlock
pendingWipe
blockedForPasscode
numberOfFailedPasscodeAttempts
unblockTimeSinceReferenceDate
blockStateGeneration
T@"NSNumber",&,D,N
PairedUnlock
passcode
CSLDeviceLockFailedAttempts
CSLDeviceLockInLockout
LockoutStateJournal.plist
/var/mobile/Library/PairedUnlock/
com.apple.pairedunlock.lockjournal
T@"<PUUserAuthenticationModelDelegate>",W,N
temporarilyBlocked
TB,R,N,GisTemporarilyBlocked
permanentlyBlocked
TB,R,N,GisPermanentlyBlocked
timeUntilUnblockedSinceReferenceDate
Td,R,N
T@"<PUUserAuthenticationModelDelegate>",W,N,V_delegate
com.apple.pairedunlock.passcode-actions
com.apple.pairedunlock.removed-lockout
connection
%@-%@
Unlock manager connection interrupted
Unlock manager connection INVALIDATED
PairedUnlock connection failed to check in, error = %@!
simple-passcode
getRemoteDevicePasscodeStateHandler
T@?,C,N,V_getRemoteDevicePasscodeStateHandler
remoteDeviceRemoveLockoutHandler
T@?,C,N,V_remoteDeviceRemoveLockoutHandler
T@"<PUConnectionDelegate>",W,V_delegate
shouldNotify
TB,N,V_shouldNotify
pairedunlock
com.apple.PairedUnlock
messageID
success
errorData
TI,N,V_messageID
TB,N,V_success
hasErrorData
TB,R,N
T@"NSData",&,N,V_errorData
Incoming unhandled protobuf: <%@>
Send of message with id:%@ FAILED with error: %@
Connected devices changed, connected = %@, devices = %@
Sending result of message %i (%@) as RESPONSE
Sending result of message %i (%@) as REQUEST
Send protobuf FAILED with error %@
Sent protobuf SUCCEEDED: <%@> with ID: %@
Received protobuf: <%@> with identifier: %@
Calling response handler for message of type %i
Missing handler for message of type %i!
Starting unlock pair
Attempted to pair with incorrect passcode
Attempted to pair while passcode locked
%@ notification of next unlock%@
%@ disabling only remote unlock%@
Generated random passcode.
Successfully changed to random passcode; storing
Successfully stored random passcode
FAILED to store new passcode! Bailing back to old one
FAILED to change passcode back! SOMETHING IS HORRIBLY WRONG
FAILED to change passcode
FAILED to generate random passcode
Unlock pairing succeeded; notifying other device of new state
ERROR notifying paired device that we
re in only-remote-unlock mode: %@
Unlock pairing with new passcode FAILED (%@), bailing back to the old one
Successfully changed passcode back. You are now at least no worse off than you were.
FAILED to change passcode back! SOMETHING IS EVEN MORE HORRIBLY WRONG.
replacing empty passcode
enableUnlockWithDevice returned success %@ %@ in state %@
Resetting passcode state = %@
ERROR notifying paired device that we
re out of only-remote-unlock mode: %@
FAILED to change passcode back!
FAILED to find passcode entry in keychain!
Failed to remove existing passcode: %@
Got request to disable only remote unlock; currently unlocked, so starting that now
Disabled only remote unlock
FAILED to disable unly remote unlock: %@
Got request to disable only remote unlock; currently locked, so waiting until next unlock to do so
Got notification of remote device unlock. protobuf: <%@> identifier: %@
successfully paired for unlocking
failed to pair for unlocking: %@
PUUserAuthenticationJournal notePasscodeEntryBegan
PUUserAuthenticationJournal notePasscodeEntryCancelled
PUUserAuthenticationJournal notePasscodeUnlockSucceeded
PUUserAuthenticationJournal notePasscodeUnlockFailedWithError
Updating block time
Beginning speculative charge. Has failure charge outstanding=%s
set failed passcode attempts %d (secondsToBlock=%d)
Canceling speculative charge
Unlock succeeded. Reverting speculative charge
Unlock failed.  Not reverting speculative charge
A passcode attempt failed without a corresponding speculative failure charge. Callstack %@
Wiping device
Loading lock state. pendingWipe=%s permanentlyBlocked=%s
Clearing lock state.
Loading journal key %@ found object %@ of type %@ but expected type %@. Aborting journal loading.
journalGeneration = %lld defaultsGeneration = %lld. Updating defaults from journal
Importing old journal
failed attempts = %@
in lockout = %@
zPLR
zPLR
