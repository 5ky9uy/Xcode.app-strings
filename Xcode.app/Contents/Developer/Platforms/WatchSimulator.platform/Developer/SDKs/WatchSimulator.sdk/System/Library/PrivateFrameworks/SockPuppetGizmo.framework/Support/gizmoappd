%@ %@
identifier
-[SPProtoObjectMessage writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/Generated/SPProtoObjectMessage.m
nil != self->_identifier
T@"NSString",&,N,V_identifier
playerItemIdentifiers
-[SPProtoAudioFileQueuePlayerSetItems writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/Generated/SPProtoAudioFileQueuePlayerSetItems.m
T@"NSMutableArray",&,N,V_playerItemIdentifiers
rate
-[SPProtoAudioFileQueuePlayerSetRate writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/Generated/SPProtoAudioFileQueuePlayerSetRate.m
Tf,N,V_rate
upsertWithItems
destroy
setRate
replaceCurrentItem
setStatus
advanceToNextItem
appendItem
removeItem
removeAllItems
setCurrentItem
hasUpsertWithItems
TB,R,N
T@"SPProtoAudioFileQueuePlayerSetItems",&,N,V_upsertWithItems
hasDestroy
T@"SPProtoObjectMessage",&,N,V_destroy
hasSetRate
T@"SPProtoAudioFileQueuePlayerSetRate",&,N,V_setRate
hasReplaceCurrentItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_replaceCurrentItem
hasSetStatus
T@"SPProtoAudioFilePlayerStatus",&,N,V_setStatus
hasAdvanceToNextItem
T@"SPProtoObjectMessage",&,N,V_advanceToNextItem
hasAppendItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_appendItem
hasRemoveItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_removeItem
hasRemoveAllItems
T@"SPProtoObjectMessage",&,N,V_removeAllItems
hasSetCurrentItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_setCurrentItem
containedIdentifier
-[SPProtoAudioFilePlayerUpdateContainedIdentifier writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/Generated/SPProtoAudioFilePlayerUpdateContainedIdentifier.m
hasContainedIdentifier
T@"NSString",&,N,V_containedIdentifier
status
errorDomain
errorCode
errorDict
hasIdentifier
hasStatus
TB,N
Ti,N,V_status
hasErrorDomain
T@"NSString",&,N,V_errorDomain
hasErrorCode
Tq,N,V_errorCode
hasErrorDict
T@"NSData",&,N,V_errorDict
upsertWithAsset
getCurrentTime
notifyTimeJumped
notifyDidPlayToEndTime
notifyFailedToPlayToEndTime
setItemCurrentTime
hasUpsertWithAsset
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_upsertWithAsset
hasGetCurrentTime
T@"SPProtoObjectMessage",&,N,V_getCurrentTime
hasNotifyTimeJumped
T@"SPProtoObjectMessage",&,N,V_notifyTimeJumped
hasNotifyDidPlayToEndTime
T@"SPProtoObjectMessage",&,N,V_notifyDidPlayToEndTime
hasNotifyFailedToPlayToEndTime
T@"SPProtoObjectMessage",&,N,V_notifyFailedToPlayToEndTime
hasSetItemCurrentTime
T@"SPProtoAudioFilePlayerItemSetCurrentTime",&,N,V_setItemCurrentTime
duration
title
albumTitle
artist
-[SPProtoAudioFilePlayerAssetUpdateMetaData writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/Generated/SPProtoAudioFilePlayerAssetUpdateMetaData.m
hasURL
T@"NSString",&,N,V_uRL
hasDuration
Td,N,V_duration
hasTitle
T@"NSString",&,N,V_title
hasAlbumTitle
T@"NSString",&,N,V_albumTitle
hasArtist
T@"NSString",&,N,V_artist
upsertWithMetaData
hasUpsertWithMetaData
T@"SPProtoAudioFilePlayerAssetUpdateMetaData",&,N,V_upsertWithMetaData
currentTime
-[SPProtoAudioFilePlayerItemSetCurrentTime writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/Generated/SPProtoAudioFilePlayerItemSetCurrentTime.m
hasCurrentTime
Td,N,V_currentTime
asset
playerItem
queuePlayer
hasAsset
T@"SPProtoAudioFilePlayerAsset",&,N,V_asset
hasPlayerItem
T@"SPProtoAudioFilePlayerItem",&,N,V_playerItem
hasQueuePlayer
T@"SPProtoAudioFileQueuePlayer",&,N,V_queuePlayer
plist
audioFilePlayerMessage
hasPlist
T@"SPProtoSockPuppetPlist",&,N,V_plist
hasAudioFilePlayerMessage
T@"SPProtoAudioFilePlayerMessage",&,N,V_audioFilePlayerMessage
com.apple.gizmoappd.processAssertionQueue
com.apple.watchkit.activeClientIdentifiersQueue
v8@?0@"NSDictionary"4
v4@?0
v8@?0B4
-[SPPlugInExtension startProcessAssertionTimer:]
-[SPPlugInExtension startProcessAssertionTimer:]_block_invoke
-[SPPlugInExtension cancelProcessAssertionTimer:]
v12@?0B4B8
-[SPPlugInExtension _takeProcessAssertion:completion:]_block_invoke
FG_IN
SXPC
%@-%@-%@
-[SPPlugInExtension _takeProcessAssertion:completion:]_block_invoke_3
-[SPPlugInExtension _takeProcessAssertion:completion:]_block_invoke_5
-[SPPlugInExtension releaseProcessAssertion:]
-[SPPlugInExtension releaseProcessAssertion:]_block_invoke_2
-[SPPlugInExtension releaseProcessAssertionOnComplicationEndWake]_block_invoke
-[SPPlugInExtension _logAssertions]
-[SPPlugInExtension takeBringUpAssertionForPID:]
BRINGUP-%@-%@
-[SPPlugInExtension takeBringUpAssertionForPID:]_block_invoke_2
-[SPPlugInExtension takeBringUpAssertionForPID:]_block_invoke
-[SPPlugInExtension releaseBringUpAssertion]
-[SPPlugInExtension takeAppProcessAssertionForBackgroundUIUpdate]
-[SPPlugInExtension takeAppProcessAssertionForBackgroundUIUpdate]_block_invoke
WK_APP_BGUI-%@-%@
-[SPPlugInExtension takeAppProcessAssertionForBackgroundUIUpdate]_block_invoke_3
-[SPPlugInExtension releaseAppProcessAssertionForBackgroundUIUpdate:]
-[SPPlugInExtension startAppProcessAssertionForBackgroundUIUpdateTimer:]_block_invoke
-[SPPlugInExtension startAppProcessAssertionForBackgroundUIUpdateTimer:]
-[SPPlugInExtension cancelAppProcessAssertionForBackgroundUIUpdateTimer:]
plugin
T@"<PKPlugIn>",&,N,V_plugin
connection
T@"NSXPCConnection",&,N,V_connection
processAssertions
T@"NSMutableDictionary",&,V_processAssertions
bringupAssertion
T@"BKSProcessAssertion",&,V_bringupAssertion
appProcessAssertion
T@"BKSProcessAssertion",&,V_appProcessAssertion
serverIdentifier
T@"NSString",C,N,V_serverIdentifier
processAssertionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processAssertionQueue
processAssertionTimers
T@"NSMutableDictionary",&,V_processAssertionTimers
processAssertionLogStrings
T@"NSMutableArray",&,N,V_processAssertionLogStrings
appProcessAssertionTimers
T@"NSMutableDictionary",&,V_appProcessAssertionTimers
applicationHasStarted
TB,N,V_applicationHasStarted
applicationIsActive
TB,N,V_applicationIsActive
notificationUIIsActive
TB,N,V_notificationUIIsActive
isSettingUpDirectXPC
TB,N,V_isSettingUpDirectXPC
applicationDebugging
TB,N,V_applicationDebugging
backgroundUpdating
TB,N,V_backgroundUpdating
appRunningInBackground
TB,N,V_appRunningInBackground
keepComplicationExtensionAwake
TB,N,V_keepComplicationExtensionAwake
extendComplicationExtensionAwake
TB,N,V_extendComplicationExtensionAwake
cpuMonitoredComplicationWake
TB,N,V_cpuMonitoredComplicationWake
retryCount
Ti,N,V_retryCount
handlesBackgroundTasks
Ti,N,V_handlesBackgroundTasks
activeClientIdentifiers
T@"NSMutableSet",&,V_activeClientIdentifiers
hasBGWorkoutProcessingInfoPlistEntry
TB,N,V_hasBGWorkoutProcessingInfoPlistEntry
hasBGWorkoutProcessingInfoPlistEntryOnceToken
Tl,N,V_hasBGWorkoutProcessingInfoPlistEntryOnceToken
com.apple.watchkit.extensions
com.apple.watchkit.pendingCalls
-[SPGizmoPlugInManagerConcurrencyManager setExtension:forAppIdentifier:]_block_invoke
%@.y
%@.n
-[SPGizmoPlugInManagerConcurrencyManager setExtensionForAppIdentifier:clientIdentifier:appIsActive:]_block_invoke
-[SPGizmoPlugInManagerConcurrencyManager extensionForAppIdentifierIsAppActive:]_block_invoke
-[SPGizmoPlugInManagerConcurrencyManager setExtensionForAppIdentifier:clientIdentifier:notificationUIIsActive:]_block_invoke
-[SPGizmoPlugInManagerConcurrencyManager extensionForAppIdentifierIsNotificationUIActive:]_block_invoke
com.apple.watchkit.handlesbgtcache
-[SPGizmoPlugInManagerConcurrencyManager handlesBackgroundTasksCacheDirectory]_block_invoke
-[SPGizmoPlugInManagerConcurrencyManager beginPendingCalls:forServerIdentifier:]_block_invoke
<__NSMallocBlock__: %p>
%@ = <%@: %p> active=%d pid=%d
-[SPGizmoPlugInManagerConcurrencyManager logState]
-[SPGizmoPlugInManagerConcurrencyManager clearLastKnownPidForExtensionWithIdentifier:]_block_invoke
-[SPGizmoPlugInManagerConcurrencyManager setLastKnownPid:forExtensionWithIdentifier:]_block_invoke
-[SPGizmoPlugInManagerConcurrencyManager lastKnownPidForExtensionWithIdentifier:]_block_invoke
-[SPGizmoPlugInManagerConcurrencyManager appStateInfosForAppBundleIDs:]_block_invoke
extensions
T@"NSMutableDictionary",&,V_extensions
extensionsQueue
T@"NSObject<OS_dispatch_queue>",&,V_extensionsQueue
extensionIsDebugging
T@"NSMutableDictionary",&,V_extensionIsDebugging
extensionHandlesBackgroundTasks
T@"NSMutableDictionary",&,V_extensionHandlesBackgroundTasks
extensionsBackgroundUpdating
T@"NSMutableSet",&,V_extensionsBackgroundUpdating
appsRunningInBackground
T@"NSMutableSet",&,V_appsRunningInBackground
extensionComplicationAwake
T@"NSMutableDictionary",&,V_extensionComplicationAwake
extensionComplicationExtend
T@"NSMutableDictionary",&,V_extensionComplicationExtend
extensionComplicationCPUMonitoredWake
T@"NSMutableDictionary",&,V_extensionComplicationCPUMonitoredWake
extensionsBeingLoaded
T@"NSMutableSet",&,V_extensionsBeingLoaded
extensionsCreatingNotificationUI
T@"NSMutableSet",&,V_extensionsCreatingNotificationUI
extensionsAppIsActive
T@"NSMutableDictionary",&,V_extensionsAppIsActive
extensionsNotificationUIIsActive
T@"NSMutableDictionary",&,V_extensionsNotificationUIIsActive
extensionsSettingUpDirectXPC
T@"NSMutableSet",&,V_extensionsSettingUpDirectXPC
extensionsLastKnownPid
T@"NSMutableDictionary",&,V_extensionsLastKnownPid
extensionsLaunchArgs
T@"NSMutableDictionary",&,V_extensionsLaunchArgs
extensionsLaunchEnv
T@"NSMutableDictionary",&,V_extensionsLaunchEnv
extensionsLastBeginWorkout
T@"NSMutableDictionary",&,V_extensionsLastBeginWorkout
extensionsWithFGGPU
T@"NSMutableSet",&,V_extensionsWithFGGPU
pendingCalls
T@"NSMutableDictionary",&,V_pendingCalls
didBeginPendingTimestamps
T@"NSMutableDictionary",&,V_didBeginPendingTimestamps
pendingCallsQueue
T@"NSObject<OS_dispatch_queue>",&,V_pendingCallsQueue
com.apple.watchkit.native.send
com.apple.watchkit.plugin.cache
-[SPGizmoPlugInManager isNativePlugin:]_block_invoke
-[SPGizmoPlugInManager appRemoteLaunchWithIdentifier:launchEnv:launchArgs:]
-[SPGizmoPlugInManager appRemoteTerminateWithIdentifier:]
-[SPGizmoPlugInManager loadAndBeginUsingPlugIn:completion:]
-[SPGizmoPlugInManager loadAndBeginUsingPlugIn:completion:]_block_invoke_2
-[SPGizmoPlugInManager loadAndBeginUsingPlugIn:completion:]_block_invoke
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v12@?0@"NSSet"4@"NSError"8
-[SPGizmoPlugInManager beginUsingExtension:serverIdentifier:completion:]
-[SPGizmoPlugInManager beginUsingExtension:serverIdentifier:completion:]_block_invoke
-[SPGizmoPlugInManager beginUsingExtension:serverIdentifier:completion:]_block_invoke_2
v12@?0@"<PKPlugIn>"4I8
v8@?0@"NSError"4
-[SPGizmoPlugInManager plugInExited:completion:]_block_invoke
-[SPGizmoPlugInManager plugInExited:completion:]_block_invoke_2
-[SPGizmoPlugInManager plugInExited:completion:]_block_invoke_3
-[SPGizmoPlugInManager removeLocalConnectionWithIdentifier:clientIdentifier:]
-[SPGizmoPlugInManager removeLocalConnectionWithIdentifier:clientIdentifier:]_block_invoke
-[SPGizmoPlugInManager removeLocalConnectionWithIdentifier:clientIdentifier:]_block_invoke_2
-[SPGizmoPlugInManager updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:]
-[SPGizmoPlugInManager killExtensionProcessForApplicationWithIdentifier:]
-[SPGizmoPlugInManager fetchExtensionCapabilitiesForAppBundleID:handlesBackgroundTasks:]
SendContext
v8@?0@"<SPRemoteInterfaceProtocol>"4
-[SPGizmoPlugInManager sendToPlugin:clientIdentifier:takeProcessAssertion:call:]_block_invoke
-[SPGizmoPlugInManager sendToPlugin:clientIdentifier:takeProcessAssertion:call:]_block_invoke_2
v8@?0@"SPPlugInExtension"4
-[SPGizmoPlugInManager updateExtension:hasForegroundGPU:completion:]
UpdateExtensionIsInFG
-[SPGizmoPlugInManager sendInterfaceInfo:forAppIdentifier:]
/Library/Preferences/com.apple.UIKit
UIPreferredContentSizeCategoryName
-NSForceRightToLeftWritingDirection
-[SPGizmoPlugInManager sendDataToCompanion:serverIdentifier:clientIdentifier:]
-[SPGizmoPlugInManager sendPlistToNativeExtension:serverIdentifier:clientIdentifier:]
-[SPGizmoPlugInManager appDidFinishLaunching:clientIdentifier:completion:]
-[SPGizmoPlugInManager appDidResetContents:clientIdentifier:]
-[SPGizmoPlugInManager appDidBecomeActive:clientIdentifier:completion:]
-[SPGizmoPlugInManager appWillResignActive:clientIdentifier:completion:]
-[SPGizmoPlugInManager app:updateState:suspendedUnderLock:clientIdentifier:]
-[SPGizmoPlugInManager app:beginWorkout:clientIdentifier:]
-[SPGizmoPlugInManager app:handleSerializedNSUserActivity:clientIdentifier:]
-[SPGizmoPlugInManager appDidBeginBackgroundGlanceUpdate:clientIdentifier:]
-[SPGizmoPlugInManager appDidEndBackgroundGlanceUpdate:clientIdentifier:]
-[SPGizmoPlugInManager appDidEndBackgroundGlanceUpdate:clientIdentifier:]_block_invoke
-[SPGizmoPlugInManager appDidBeginBackgroundBARTask:clientIdentifier:completion:]
-[SPGizmoPlugInManager appDidEndBackgroundBARTask:clientIdentifier:]
-[SPGizmoPlugInManager appDidEndBackgroundBARTask:clientIdentifier:]_block_invoke
-[SPGizmoPlugInManager app:didReceiveNotification:clientIdentifier:withCompletionHandler:]
-[SPGizmoPlugInManager appWillEnterForeground:clientIdentifier:withVisibleViewControllerID:]
-[SPGizmoPlugInManager appDidEnterBackground:clientIdentifier:withVisibleViewControllerID:]
-[SPGizmoPlugInManager appDidEnterBackground:clientIdentifier:withVisibleViewControllerID:]_block_invoke_2
-[SPGizmoPlugInManager appDidEnterBackground:clientIdentifier:withVisibleViewControllerID:]_block_invoke
-[SPGizmoPlugInManager app:handleWatchTaskKeys:returnToPrimaryUI:visibleVCID:clientIdentifier:]
-[SPGizmoPlugInManager notificationUIDidBecomeActive:clientIdentifier:]
-[SPGizmoPlugInManager notificationUIWillResignActive:clientIdentifier:]
-[SPGizmoPlugInManager notificationUIWillResignActive:clientIdentifier:]_block_invoke
-[SPGizmoPlugInManager didActivateDataConnection:clientIdentifier:]
-[SPGizmoPlugInManager willDeactivateDataConnection:clientIdentifier:]
-[SPGizmoPlugInManager sendNativeComplicationRequest:serverIdentifier:clientIdentifier:completion:]
-[SPGizmoPlugInManager wkAppStateUpdated:]
-[SPGizmoPlugInManager wkAppStateUpdated:]_block_invoke
-[SPGizmoPlugInManager releaseViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoPlugInManager activateViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoPlugInManager deactivateViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoPlugInManager didAppearViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoPlugInManager willDisappearViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoPlugInManager sendData:identifier:clientIdentifiers:]
ExtensionDelegateDidChange
-[SPGizmoPlugInManager fetchNotificationForNotificationID:completion:]
-[SPGizmoPlugInManager allowBackgroundUIUpdate:]_block_invoke
v12@?0@"NSString"4@"NSError"8
-[SPGizmoPlugInManager allowBackgroundUIUpdate:]
discovery
T@"NSMutableDictionary",&,V_discovery
nativePlugInIdentifiers
T@"NSMutableArray",&,N,V_nativePlugInIdentifiers
nonNativePluginIdentifiers
T@"NSMutableArray",&,N,V_nonNativePluginIdentifiers
sendQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sendQueue
pluginCacheQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pluginCacheQueue
discoveryCancelationCompletions
T@"NSMutableDictionary",&,N,V_discoveryCancelationCompletions
discoveryTokensWaitingForDisposal
T@"NSMutableArray",&,N,V_discoveryTokensWaitingForDisposal
concurrencyManager
T@"SPGizmoPlugInManagerConcurrencyManager",&,N,V_concurrencyManager
assertionType
postDarwinNotificationOfActiveUIStateChange
object
objects
T@"NSMutableArray",&,N,V_objects
cacheIdentifier
permanentCache
transientCache
-[SPProtoCacheSyncData writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/Generated/SPProtoCacheSyncData.m
nil != self->_cacheIdentifier
self->_permanentCache != nil
self->_transientCache != nil
T@"NSString",&,N,V_cacheIdentifier
T@"SPProtoCacheAssets",&,N,V_permanentCache
T@"SPProtoCacheAssets",&,N,V_transientCache
com.apple.watchkit.errors
SPErrorNoErrorMessage
SPErrorUnknownMessage
SPErrorBadGizmoAppURLMessage
SPErrorAppURLMessage
SPErrorApplicationIconNotFoundMessage
SPErrorInvalidBundleNoGizmoBinaryMessage
SPErrorMissingCompanionAppIdentifierMessage
SPErrorApplicationVerificationMessage
SPErrorHostPrincipalForPluginNotFoundMessage
SPErrorFailedToTerminateGizmoAppMessage
SPErrorPlistToDataErrorMessage
SPErrorGizmoInstallNeverFinishedErrorMessage
SPErrorGizmoLaunchCanceledErrorMessage
SPErrorIDSErrorTypeNoSpaceErrorMessage
SPErrorDeviceIsLockedMessage
SPErrorBuildAndRunLaunchFailedCantFindApplicationMessage
SPErrorInstallationErrorMessage
SPErrotInstallationErrorPluginNotFoundMessage
SPErrorInstallationErrorIncorrectPluginURLMessage
SPErrorInstallationErrorMissingWatchAppBundleURLMessage
SPErrorInstallationErrorCantCreateStagingDirectoryMessage
SPErrorInstallationErrorMissingCFBundleDisplayNameMessage
SPErrorInstallationErrorMissingCFBundleNameMessage
SPErrorInstallationErrorMissingInfoDictionaryMessage
SPErrorInstallationErrorCantDetermineSizeOfFileToInstallMessage
SPErrorInstallationErrorBOMCopierFailedMessage
SPErrorInstallationErrorMissingIconsFromInfoPListMessage
SPErrorInstallationErrorFailedToSendAllChunksMessage
SPErrorInstallationErrorMissingFileToTransferMessage
SPErrorInstallationErrorTriedToReadNonExistentDataMessage
SPErrorInstallationErrorFailedToSerializeInstallPacketMessage
SPErrorInstallationErrorUnknownBetaApplicationMessage
SPErrorInstallationErrorEmptyProfileDataMessage
SPErrorInstallationErrorInvalidEntitlementsMessage
SPErrorBuildAndRunLaunchFailedGlancesNotSupportedMessage
SPErrorWK1AppsCantReceiveContextsMessage
IDS no space error
PKPlugin beginUsing: never called back
Secure transport required, but no first unlock yet.
Profile removal  error.
Profile install  error.
WatchKit app not found.
-[SPGizmoAppLauncher launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:]
-[SPGizmoAppLauncher launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:]_block_invoke
v12@?0B4@"NSError"8
-[SPGizmoAppLauncher _launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:]
CLKRemoteComplicationReloadDarwinNotification
Xcode requested termination
completion
expireDate
-[SPGizmoAppLauncher checkProgressOfTerminateRequest:]
mostRecentLaunchedAppIdentifier
T@"NSString",C,N,V_mostRecentLaunchedAppIdentifier
mostRecentLaunchedAppMode
T@"NSString",C,N,V_mostRecentLaunchedAppMode
+[SPUtils localizedStringForSystemLanguage:fromBundlePath:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/SockPuppetCommon/SPUtils.m
[[NSLocale preferredLanguages] firstObject] != nil
SIMULATOR_ROOT
Localizable
 [%013.06f]
+[SPUtils companionConnectionClientIdentifier:isNotification:]
%02x%02x%02x%02x
+[SPUtils UIColorFromString:]
CFBundleIdentifier
v12@?0@"LSBundleProxy"4^B8
SPFontAttributes
SPFont
supportsSecureCoding
TB,R
font
T@"UIFont",&,N,V_font
strings
com.apple.demo-settings
StoreDemoMode
FProgramNumber
DemoProgramNumber_block_invoke
LSApplicationProxy
Unable to find class %s
/System/Library/PrivateFrameworks/MobileCoreServices.framework/MobileCoreServices
LSApplicationWorkspace
Color
+[SPIDSProtobuf protobufWithSPPlist:identifier:]
+[SPProtoSerializer dictionaryWithSPPlist:]
+[SPProtoSerializer arrayWithSPPlist:]
T@"NSString",&,N,V_key
state
TI,N,V_state
size
TI,N,V_size
accessDate
Td,N,V_accessDate
assets
T@"NSMutableArray",&,N,V_assets
T@"SPAssetCacheAssets",&,N,V_permanentCache
T@"SPAssetCacheAssets",&,N,V_transientCache
messageType
cacheType
assetKey
gizmoCacheIdentifier
assetData
syncData
Ti,N,V_messageType
Ti,N,V_cacheType
hasAssetKey
T@"NSString",&,N,V_assetKey
hasGizmoCacheIdentifier
T@"NSString",&,N,V_gizmoCacheIdentifier
hasAssetData
T@"NSData",&,N,V_assetData
hasSyncData
T@"SPProtoCacheSyncData",&,N,V_syncData
/Library/Caches/
com.apple.watchkit.imagecache
-[SPGizmoCacheManager cacheDirectory]_block_invoke
-[SPGizmoCacheManager deleteCache:]
-[SPGizmoCacheManager getData:cacheIdentifier:completion:]
-[SPGizmoCacheManager addData:cacheIdentifier:completion:]
-[SPGizmoCacheManager deleteData:cacheIdentifier:completion:]
-[SPGizmoCacheManager clearAllCachedImages:cacheIdentifier:completion:]
-[SPGizmoCacheManager setupCacheWithIdentifier:completion:]_block_invoke
-[SPGizmoCacheManager cacheAssets:cacheType:cacheIdentifier:]
-[SPGizmoCacheManager sendCacheReply:cacheIdentifier:]
-[SPGizmoCacheManager sendCacheReply:cacheIdentifier:]_block_invoke
companionAppServer
T@"SPCompanionAppServer",W,V_companionAppServer
-[SPProtoCacheAsset writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/Generated/SPProtoCacheAsset.m
nil != self->_key
TQ,N,V_size
com.apple.private.alloy.sockpuppet
com.apple.private.alloy.sockpuppet.classd
com.apple.companionappd
com.apple.gizmoappd
com.apple.sockpuppet.glance.updated
com.apple.sockpuppet.applications.updated
com.apple.sockpuppet.activeComplications
com.apple.sockpuppet.complications.updated
com.apple.sockpuppet.extensionActiveUIStateDidChange
com.apple.sockpuppet.runningWatchKitAppsDidChange
lgbl
SPServerHoldCompanionExtensionProcessAssertion
SPPluginBundleIdKey
SPContainerAppBundleId
SPApplicationVersion
SPApplicationShortVersion
activeComplications
com.apple.watchkit
WKAppBundleIdentifier
com.apple.watchkit.notify.first_unlock
WKStoreIdentifier
com.apple.Bridge
WKLowDiskSpace
WKInstallCandidateKey
WKInstallDataSentKey
WKBetaAppKey
Watch
WKWatchKitVersion
iTunesMetadata.plist
xcode
system
trust-changed
SPApplicationTeamID
SPApplicationUniqueID
WKMobileDeviceInstallsAppOnGizmo
SPApplicationBundleID
SPApplicationTrustState
/System/Library/Frameworks/WatchKit.framework
appStateOwnedBySystem
SPAlwaysInstallKey
workout
btSupport
type
objectData
receiver
-[SPProtoSockPuppetIDSObject writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-740.1.26/Generated/SPProtoSockPuppetIDSObject.m
nil != self->_objectData
Ti,N,V_type
T@"NSData",&,N,V_objectData
hasReceiver
T@"NSString",&,N,V_receiver
rvidx
rvna
mpau
mpaa
mpas
mpav
mpal
mpcd
mpce
mpcE
arau
arap
araa
araA
arad
aram
arcd
arce
CompBGGlanceUpdate
ccID
com.apple.stocks.watchapp
com.apple.TapToRadar.watchkitapp
com.apple.weather.watchapp
.select
.pop
.popR
.page
.segue
.pickerSettle
.pickerFocus
.pickerClearFocus
.dontDismiss.
_launchWithActionItemID_
.null
destination
present
rowName
contextID
SPIsValidImageFilePath
.Marco
.Polo
.PolD
.PolL
.idx
.PolDE
.tald
.scd
.ecd
.bcd
.sgd
.egd
.bgd
.sex
.eex
.bex
.sap
.eap
.bap
notification
glance
complication
nativecomplication
nsuseractivity
actionItemID
.SPNoAction
activity
location
gestureRecognizers
precedingGestureRecognizers
gestureReference
base
tapGesture
panGesture
longPressGesture
swipeGesture
action
property
enabled
locInObject
transInObject
objectBounds
velocity
spec
numTaps
minDur
move
direction
reqfail
gview
gdesc
gtask
install
touch
update
numberOfTapsRequired
cancelsTouchesInView
delaysTouchesBegan
delaysTouchesEnded
minimumPressDuration
allowableMovement
ctask
ready
delta
idle
time
focus
bktaskapp
bktasksnapshot
bktaskwc
bktasksurlsession
bknull
bkuserInfoKey
WK_APP_LAUNCHED_BY_XCODE
Interface.plist
Interface-notification.plist
categories
default
dynamic
static
SPCoalescedBulletinsDescFormat
SPBulletinShortCutActionItemID
SPNotificationWantsSashBlur
SPNotificationCustomSashColor
SPNotificationCustomTitleColor
watchkit
WKCompanionAppBundleIdentifier
WKWatchKitApp
WKExtensionDelegateClassName
WKBackgroundModes
workout-processing
3cts
3cik
3cbtk
3gia
active
CLKComplicationSupportedFamilies
CLKComplicationPrincipalClass
SPComplicationsApplicationBundleID
SPComplicationsExtensionBundleID
CLKComplicationDefaultImagesAssetName
NativeComplications
Tl,N,V_messageType
TI,N,V_cacheType
T@"SPAssetCacheSyncData",&,N,V_syncData
error
TI,N,V_error
subtype
cacheMessage
text
ndouble
nfloat
nint64
nint32
nuint64
nuint32
nbool
hasSubtype
Ti,N,V_subtype
hasCacheMessage
T@"SPProtoCacheMessage",&,N,V_cacheMessage
hasKey
hasText
T@"NSString",&,N,V_text
hasNdouble
Td,N,V_ndouble
hasNfloat
Tf,N,V_nfloat
hasNint64
Tq,N,V_nint64
hasNint32
Ti,N,V_nint32
hasNuint64
TQ,N,V_nuint64
hasNuint32
TI,N,V_nuint32
hasNbool
TB,N,V_nbool
hasObject
T@"NSData",&,N,V_object
com.apple.companionappd.transportMessagesAccess
com.apple.watchkit.transportSend
com.apple.companionappd.retainedIDSMessageContexts
-[SPTransport enableWiFiIfNeededForDataOfSize:]
-[SPTransport disableWiFiIfNeededForDataOfSize:]
-[SPTransport _sendPlist:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:]
com.apple.watchkit.blockedOutgoingMessage
sendPlist1
application
length
secure
insecure
propertyList
timeOut
securityType
retryExpiration
lastSendAttemptDate
tryGeneration
-[SPTransport _sendData:forApplication:idsPriority:installer:withCompletion:]
sendData
%@.installer
-[SPTransport service:account:identifier:didSendWithSuccess:error:]_block_invoke
ARE NOT
 Unblocking now.
-[SPTransport serviceSpaceDidBecomeAvailable:]
-[SPTransport service:account:incomingData:fromID:context:]
-[SPTransport _sendProtobuf:sender:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:]
sendPlist2
sender
protobuf
-[SPTransport saveForPossibleResend:]
-[SPTransport incomingSecureProtobuf:]
-[SPTransport incomingInsecureProtobuf:]
-[SPTransport incomingProtobuf:]
-[SPTransport temporarilyRetainIDSMessageContext:]_block_invoke_2
-[SPTransport handleDataProtectionSendFailureOrRetryFailureOnService:account:identifier:error:]
-[SPTransport removeOutgoingMessageBlockIfIdentiferMatches:sendError:]
succeeded
failed with error %@
secureRemoteService
T@"IDSService",&,V_secureRemoteService
insecureRemoteService
T@"IDSService",&,V_insecureRemoteService
delegate
T@"<SPTransportDelegate>",&,V_delegate
messages
T@"NSMutableDictionary",&,V_messages
messagesAccessQueue
T@"NSObject<OS_dispatch_queue>",&,V_messagesAccessQueue
canSend
TB,V_canSend
wifiThresholdCount
Tq,V_wifiThresholdCount
wifiEnabled
TB,V_wifiEnabled
wifiTimer
T@"NSObject<OS_dispatch_source>",&,N,V_wifiTimer
retainedIDSMessageContextsQueue
T@"NSObject<OS_dispatch_queue>",&,V_retainedIDSMessageContextsQueue
retainedIDSMessageContexts
T@"NSMutableArray",&,N,V_retainedIDSMessageContexts
outgoingMessageBlockedUntil
T@"NSString",&,V_outgoingMessageBlockedUntil
blockedOutgoingMessagesQueue
T@"NSObject<OS_dispatch_queue>",&,V_blockedOutgoingMessagesQueue
T@"NSObject<OS_dispatch_queue>",&,V_sendQueue
IDSSimulatorSupportSetSimulatedDeviceNetworkingState
/System/Library/PrivateFrameworks/IDSSimulatorSupport.framework/IDSSimulatorSupport
block
endpoint
expirationDate
-[SPGizmoAppServer init]
com.apple.gizmoappd.appmanager
com.apple.gizmoappd.queue
com.apple.gizmoappd.lastAppResetDatesAccess
com.apple.notifyd.matching
v8@?0@"NSObject<OS_xpc_object>"4
com.apple.distnoted.matching
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
NCSSettingsChangedNotification
com.apple.language.changed
v8@?0i4
-[SPGizmoAppServer _setupSignalHandlers]_block_invoke
-[SPGizmoAppServer _setupSignal:handler:]
B16@?0@"NSDictionary"4I8^B12
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]_block_invoke_2
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]_block_invoke
v12@?0@"NSString"4@"NSString"8
com.apple.gizmoappd.appmanager.allow
%@:%@
-[SPGizmoAppServer updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:]_block_invoke
-[SPGizmoAppServer sendPlist:securityType:]
-[SPGizmoAppServer sendSPPlist:receiver:securityType:]_block_invoke
Got IDSErrorTypeIncompatibleDestinationVersion error %@. Killing %@
Got continous send errors for more than %1.0f secs. Killing %@
-[SPGizmoAppServer performBlockForClientIdentifiers:serverIdentifier:block:]
-[SPGizmoAppServer performBlockForClientIdentifiers:serverIdentifier:block:]_block_invoke
-[SPGizmoAppServer sendData:orPlist:serverIdentifier:clientIdentifiers:reply:]_block_invoke
-[SPGizmoAppServer sendData:orPlist:serverIdentifier:clientIdentifiers:reply:]_block_invoke_2
v12@?0@"NSXPCConnection"4@"NSString"8
-[SPGizmoAppServer setupDirectExtensionXPCConnectionWithIdentifier:clientIdentifier:]
-[SPGizmoAppServer sendPlistToNativeExtension:serverIdentifier:clientIdentifier:]
-[SPGizmoAppServer appDidFinishLaunching:clientIdentifier:completion:]
-[SPGizmoAppServer appDidFinishLaunching:clientIdentifier:completion:]_block_invoke
-[SPGizmoAppServer appDidFinishLaunching:clientIdentifier:completion:]_block_invoke_3
-[SPGizmoAppServer appDidResetContents:clientIdentifier:]
-[SPGizmoAppServer appDidBecomeActive:clientIdentifier:completion:]
-[SPGizmoAppServer appWillResignActive:clientIdentifier:completion:]
-[SPGizmoAppServer app:updateState:suspendedUnderLock:clientIdentifier:]
-[SPGizmoAppServer app:beginWorkout:clientIdentifier:]
-[SPGizmoAppServer app:handleSerializedNSUserActivity:clientIdentifier:]
-[SPGizmoAppServer appDidBeginBackgroundGlanceUpdate:clientIdentifier:]
-[SPGizmoAppServer appDidEndBackgroundGlanceUpdate:clientIdentifier:]
-[SPGizmoAppServer appDidBeginBackgroundBARTask:clientIdentifier:completion:]
-[SPGizmoAppServer appDidEndBackgroundBARTask:clientIdentifier:]
-[SPGizmoAppServer app:didReceiveNotification:clientIdentifier:withCompletionHandler:]
-[SPGizmoAppServer appWillEnterForeground:clientIdentifier:withVisibleViewControllerID:]
-[SPGizmoAppServer appDidEnterBackground:clientIdentifier:withVisibleViewControllerID:]
-[SPGizmoAppServer app:handleWatchTaskKeys:returnToPrimaryUI:visibleVCID:clientIdentifier:]
-[SPGizmoAppServer notificationUIDidBecomeActive:clientIdentifier:]
-[SPGizmoAppServer notificationUIWillResignActive:clientIdentifier:]
-[SPGizmoAppServer didActivateDataConnection:clientIdentifier:]
-[SPGizmoAppServer willDeactivateDataConnection:clientIdentifier:]
-[SPGizmoAppServer duetAppDidBecomeActive:clientIdentifier:]
-[SPGizmoAppServer duetAppWillResignActive:clientIdentifier:]
-[SPGizmoAppServer createViewController:className:properties:contextID:info:gestureDescriptions:serverIdentifier:clientIdentifier:]
-[SPGizmoAppServer releaseViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoAppServer activateViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoAppServer deactivateViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoAppServer didAppearViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoAppServer willDisappearViewController:serverIdentifier:clientIdentifier:]
-[SPGizmoAppServer receiveNavigationReply:serverIdentifier:clientIdentifier:]
-[SPGizmoAppServer rootInterfaceController:serverIdentifier:performActionWithItemID:forNotificationID:userInfo:clientIdentifier:completionHandler:]
-[SPGizmoAppServer sendSetViewController:key:property:value:serverIdentifier:clientIdentifiers:]_block_invoke
-[SPGizmoAppServer sendSetViewController:key:property:value:serverIdentifier:clientIdentifiers:]_block_invoke_2
-[SPGizmoAppServer sendSetViewController:values:serverIdentifier:clientIdentifiers:]_block_invoke
-[SPGizmoAppServer sendSetViewController:values:serverIdentifier:clientIdentifiers:]_block_invoke_2
-[SPGizmoAppServer sendPushPagingScrollTableRow:row:seguesByRowName:rowNamesAndContextIDs:serverIdentifier:clientIdentifiers:]_block_invoke
-[SPGizmoAppServer sendPushPagingScrollTableRow:row:seguesByRowName:rowNamesAndContextIDs:serverIdentifier:clientIdentifiers:]_block_invoke_2
-[SPGizmoAppServer sendNativeComplicationRequest:serverIdentifier:clientIdentifier:completion:]
-[SPGizmoAppServer startGizmoAppStillActivePingTimer:]_block_invoke_4
dummy
-[SPGizmoAppServer addPassesData:serverIdentifier:clientIdentifier:]_block_invoke
-[SPGizmoAppServer sockPuppetDataFromDictionary:]
-[SPGizmoAppServer handleIncomingProtoPlist:]
incomingData
-[SPGizmoAppServer incomingData:]
-[SPGizmoAppServer handleIncomingPlist:]
SPUserNotificationAddressBook
SPUserNotificationCalendar
SPUserNotificationLocation
SPUserNotificationPhotos
SPUserNotificationReminders
SPUserNotificationMicrophone
SPUserNotificationNotification
/System/Library/PrivateFrameworks/SockPuppetGizmo.framework
-[SPGizmoAppServer notifyClientsCompanionDaemonRestarted]
-[SPGizmoAppServer notifyClientsExtensionTerminated:]
-[SPGizmoAppServer notifyClientsExtensionTerminated:]_block_invoke
Extension terminated - killing gizmo apps
-[SPGizmoAppServer app:activeWorkoutStatusDidChange:]
-[SPGizmoAppServer sendXPCEndpoint:identifier:clientIdentifiers:]_block_invoke
-[SPGizmoAppServer wakeAppForBackgroundUIUpdate:]_block_invoke
-AppleLanguages
-AppleTextDirection
-AppleLocale
-NSDoubleLocalizedStrings
-[SPGizmoAppServer launchApplication:withTransactionID:backlightTime:launchMode:launchEnv:launchArgs:]_block_invoke_3
-[SPGizmoAppServer terminateApplication:withTransactionID:]_block_invoke
-[SPGizmoAppServer getApplicationRunningStatus:withTransactionID:]_block_invoke
-[SPGizmoAppServer requestFirstUnlockStatus]
-[SPGizmoAppServer fetchExtensionUIActiveStateForBundleID:completion:]
-[SPGizmoAppServer fetchExtensionCapabilitiesForAppBundleID:completion:]
-[SPGizmoAppServer sendContextData:toAppWithIdentifier:completion:]
keys:
 data, len: %lu, %@
 %@: %@,
 %@ : ***
-[SPGizmoAppServer decodeOutData:]
can't decode data
 %@,
-[SPGizmoAppServer _notifyFirstUnlockStatus:]
-[SPGizmoAppServer _notifyComplicationFirstUnlockChanged:]
UserInfo
-[SPGizmoAppServer applicationIDsFromLaunchServicesXPCEvent:isPlaceHolder:]
bundleIDs
isPlaceholder
-[SPGizmoAppServer activeWorkoutStatusDidChange]
-[SPGizmoAppServer activeWorkoutStatusDidChange]_block_invoke
applicationListener
T@"NSXPCListener",&,V_applicationListener
applicationManagerListener
T@"NSXPCListener",&,V_applicationManagerListener
localConnections
T@"NSMutableDictionary",&,V_localConnections
pendingDatasForDroppedConnections
T@"NSMutableDictionary",&,N,V_pendingDatasForDroppedConnections
gizmoApplicationsUpdateTimer
T@"NSObject<OS_dispatch_source>",&,N,V_gizmoApplicationsUpdateTimer
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
currentActiveApp
T@"NSString",C,V_currentActiveApp
dateOfFirstContinuousSendError
T@"NSDate",&,N,V_dateOfFirstContinuousSendError
lastAppResetDates
T@"NSMutableDictionary",&,N,V_lastAppResetDates
lastAppResetDatesAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_lastAppResetDatesAccessQueue
lastExtensionTerminatedDates
T@"NSMutableDictionary",&,N,V_lastExtensionTerminatedDates
gizmoAppStillActivePingTimers
T@"NSMutableDictionary",&,N,V_gizmoAppStillActivePingTimers
appStateMonitors
T@"NSMutableDictionary",&,N,V_appStateMonitors
currentWKWorkoutAppBundleID
T@"NSString",C,N,V_currentWKWorkoutAppBundleID
timingTest_IDSSendTime
Td,N,V_timingTest_IDSSendTime
timingTest_IDSSendSize
TI,N,V_timingTest_IDSSendSize
timingTest_IDSReceiveTime
Td,N,V_timingTest_IDSReceiveTime
timingTest_lastServerIdentifier
T@"NSString",&,N,V_timingTest_lastServerIdentifier
timingTest_lastClientIdentifier
T@"NSArray",&,N,V_timingTest_lastClientIdentifier
unlockedSinceBoot
TB,N,V_unlockedSinceBoot
companionCapabilities
T@"NSDictionary",&,V_companionCapabilities
companionCapabilitiesSema
T@"NSObject<OS_dispatch_semaphore>",&,V_companionCapabilitiesSema
_handleComplicationSettingsChangeNotification
SPComplicationVendorsDidChangeNotification
_handleLangueChangedNotification
_handleAppConduitApplicationsChangedNotificaiton
BSBundleIDForXPCConnection
/System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
SP-transport
com.apple.watchkit.powerlog.queue
count
eventsByBundleID
T@"NSMutableDictionary",&,V_eventsByBundleID
logUpdateTimer
T@"NSObject<OS_dispatch_source>",&,N,V_logUpdateTimer
logQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_logQueue
cmsg
SPContainerAppLocalizedName
SPApplicationsDomain
SPProfilesDomain
SPApplicationIdentifier
SPApplicationName
SPApplicationURL
SPApplicationPath
SPApplicationInstallStatus
SPGlancePresent
SPGlanceInstalled
SPLongLookPresent
Interface-glance.plist
0000000000
com.apple.watchkit.applicationManagerConnectionsQueue
+[SPGizmoAppManager removeAllStateFromDefaultsIfNeeded]
PlugIns
self ENDSWITH '.appex'
Info.plist
-[SPGizmoAppManager setActiveComplications:]
-[SPGizmoAppManager activeComplicationsWithCompletion:]
-[SPGizmoAppManager applicationsWithBundlefIDsWereInstalled:]
-[SPGizmoAppManager applicationsWithBundlefIDsWereUninstalled:]
NSExtensionAttributes
applicationManagerConnections
T@"NSMutableDictionary",&,V_applicationManagerConnections
applicationManagerConnectionsQueue
T@"NSObject<OS_dispatch_queue>",&,V_applicationManagerConnectionsQueue
updateSema
T@"NSObject<OS_dispatch_semaphore>",&,V_updateSema
com.apple.watchkit.spdaemonmanager.transactionQueue
-[SPDaemonManager beginTransaction]_block_invoke
-[SPDaemonManager endTransaction]_block_invoke
refCount
Ti,N,V_refCount
TB,N,V_active
transactionTimer
T@"NSObject<OS_dispatch_source>",&,N,V_transactionTimer
transactionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_transactionQueue
transactionObservers
T@"NSMutableSet",&,N,V_transactionObservers
extension_loading
bg_app_refresh
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
setIdentifier:
class
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
identifier
_identifier
removeAllObjects
alloc
addObject:
count
objectAtIndex:
addPlayerItemIdentifiers:
countByEnumeratingWithState:objects:count:
playerItemIdentifiersCount
clearPlayerItemIdentifiers
playerItemIdentifiersAtIndex:
playerItemIdentifiersType
playerItemIdentifiers
setPlayerItemIdentifiers:
_playerItemIdentifiers
numberWithFloat:
rate
setRate:
_rate
setUpsertWithItems:
setDestroy:
setSetRate:
setReplaceCurrentItem:
setSetStatus:
setAdvanceToNextItem:
setAppendItem:
setRemoveItem:
setRemoveAllItems:
setSetCurrentItem:
hasUpsertWithItems
hasDestroy
hasSetRate
hasReplaceCurrentItem
hasSetStatus
hasAdvanceToNextItem
hasAppendItem
hasRemoveItem
hasRemoveAllItems
hasSetCurrentItem
upsertWithItems
destroy
setRate
replaceCurrentItem
setStatus
advanceToNextItem
appendItem
removeItem
removeAllItems
setCurrentItem
_advanceToNextItem
_appendItem
_destroy
_removeAllItems
_removeItem
_replaceCurrentItem
_setCurrentItem
_setRate
_setStatus
_upsertWithItems
setContainedIdentifier:
hasContainedIdentifier
containedIdentifier
_containedIdentifier
numberWithInt:
numberWithLongLong:
setErrorDomain:
setErrorDict:
hasIdentifier
setStatus:
setHasStatus:
hasStatus
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDict
status
errorDomain
errorCode
errorDict
_errorCode
_errorDict
_errorDomain
_status
_has
setUpsertWithAsset:
setGetCurrentTime:
setNotifyTimeJumped:
setNotifyDidPlayToEndTime:
setNotifyFailedToPlayToEndTime:
setSetItemCurrentTime:
hasUpsertWithAsset
hasGetCurrentTime
hasNotifyTimeJumped
hasNotifyDidPlayToEndTime
hasNotifyFailedToPlayToEndTime
hasSetItemCurrentTime
upsertWithAsset
getCurrentTime
notifyTimeJumped
notifyDidPlayToEndTime
notifyFailedToPlayToEndTime
setItemCurrentTime
_getCurrentTime
_notifyDidPlayToEndTime
_notifyFailedToPlayToEndTime
_notifyTimeJumped
_setItemCurrentTime
_upsertWithAsset
numberWithDouble:
setURL:
setTitle:
setAlbumTitle:
setArtist:
hasURL
setDuration:
setHasDuration:
hasDuration
hasTitle
hasAlbumTitle
hasArtist
duration
title
albumTitle
artist
_duration
_albumTitle
_artist
_title
_uRL
setUpsertWithMetaData:
hasUpsertWithMetaData
upsertWithMetaData
_upsertWithMetaData
setCurrentTime:
setHasCurrentTime:
hasCurrentTime
currentTime
_currentTime
setAsset:
setPlayerItem:
setQueuePlayer:
hasAsset
hasPlayerItem
hasQueuePlayer
asset
playerItem
queuePlayer
_asset
_playerItem
_queuePlayer
setPlist:
setAudioFilePlayerMessage:
hasPlist
hasAudioFilePlayerMessage
plist
audioFilePlayerMessage
_audioFilePlayerMessage
_plist
_initWithPKPlugin:
sharedPlugInManager
wkAppStateUpdated:
setHandler:
bundleWithURL:
infoDictionary
objectForKeyedSubscript:
isKindOfClass:
containsObject:
_bareExtensionServiceConnection
setConnection:
setInterruptionHandler:
setInvalidationHandler:
resume
remoteObjectProxy
removeObject:
extensionVendor
_hostWillEnterForegroundForContextUUID:completion:
_hostDidBecomeActiveForContextUUID:completion:
_hostWillResignActiveForContextUUID:completion:
_hostDidEnterBackgroundForContextUUID:completion:
notifyActive
takeProcessAssertion:
takeProcessAssertion
notifyInactiveWithCompletion:
name
releaseProcessAssertion:
setObject:forKeyedSubscript:
_takeProcessAssertion:completion:
processAssertionQueue
applicationStateForApplication:
numberWithUnsignedInt:
pluginConnection
processIdentifier
UUID
UUIDString
invalidate
_logAssertions
_tellExtensionAboutExtensionStateBasedOnAssertions
initWithPID:flags:reason:name:withHandler:
releaseBringUpAssertion
startProcessAssertionTimer:
cancelProcessAssertionTimer:
_tellExtensionAboutExtensionStateBasedOnAssertionsExceptFor:completion:
arrayWithCapacity:
allKeys
componentsJoinedByString:
setWithArray:
mutableCopy
arrayWithObjects:count:
intersectsSet:
updateExtension:hasForegroundGPU:completion:
serverIdentifier
appProcessAssertion
releaseAppProcessAssertionForBackgroundUIUpdate:
sharedAppServer
wakeAppForBackgroundUIUpdate:
initWithBundleIdentifier:flags:reason:name:withHandler:
setAppProcessAssertion:
startAppProcessAssertionForBackgroundUIUpdateTimer:
cancelAppProcessAssertionForBackgroundUIUpdateTimer:
doneWithBackgroundUIUpdates:
initWithPlugin:serverIdentifier:
hasBGWorkoutProcessingInfoPlistEntry
addActiveClientIdentifier:
removeActiveClientIdentifier:
removeAllActiveClientIdientifiers
activeClientIdentifierCount
applicationActivate
applicationDeactivate
notificationUIActivate
notificationUIDeactivate
releaseProcessAssertionOnComplicationEndWake
takeBringUpAssertionForPID:
takeAppProcessAssertionForBackgroundUIUpdate
plugin
setPlugin:
connection
processAssertions
setProcessAssertions:
bringupAssertion
setBringupAssertion:
setServerIdentifier:
setProcessAssertionQueue:
processAssertionTimers
setProcessAssertionTimers:
processAssertionLogStrings
setProcessAssertionLogStrings:
appProcessAssertionTimers
setAppProcessAssertionTimers:
applicationHasStarted
setApplicationHasStarted:
applicationIsActive
setApplicationIsActive:
notificationUIIsActive
setNotificationUIIsActive:
isSettingUpDirectXPC
setIsSettingUpDirectXPC:
applicationDebugging
setApplicationDebugging:
backgroundUpdating
setBackgroundUpdating:
appRunningInBackground
setAppRunningInBackground:
keepComplicationExtensionAwake
setKeepComplicationExtensionAwake:
extendComplicationExtensionAwake
setExtendComplicationExtensionAwake:
cpuMonitoredComplicationWake
setCpuMonitoredComplicationWake:
retryCount
setRetryCount:
handlesBackgroundTasks
setHandlesBackgroundTasks:
activeClientIdentifiers
setActiveClientIdentifiers:
setHasBGWorkoutProcessingInfoPlistEntry:
hasBGWorkoutProcessingInfoPlistEntryOnceToken
setHasBGWorkoutProcessingInfoPlistEntryOnceToken:
_applicationHasStarted
_applicationIsActive
_notificationUIIsActive
_isSettingUpDirectXPC
_applicationDebugging
_backgroundUpdating
_appRunningInBackground
_keepComplicationExtensionAwake
_extendComplicationExtensionAwake
_cpuMonitoredComplicationWake
_hasBGWorkoutProcessingInfoPlistEntry
_plugin
_connection
_processAssertions
_bringupAssertion
_appProcessAssertion
_serverIdentifier
_processAssertionQueue
_processAssertionTimers
_processAssertionLogStrings
_appProcessAssertionTimers
_retryCount
_handlesBackgroundTasks
_activeClientIdentifiers
_hasBGWorkoutProcessingInfoPlistEntryOnceToken
boolValue
removeObjectForKey:
numberWithBool:
integerValue
handlesBackgroundTasksCacheDirectory
defaultManager
stringByAppendingPathComponent:
createFileAtPath:contents:attributes:
removeItemAtPath:error:
setWithObject:
extensionForAppIdentifier:
_extensionForAppIdentifierHandlesBackgroundTasks:
pathWithComponents:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
date
timeIntervalSinceNow
array
copy
dictionaryWithCapacity:
active
intValue
dictionaryWithObjects:forKeys:count:
setExtension:forAppIdentifier:
removeExtensionForAppIdentifier:
setExtensionForAppIdentifier:isDebugging:
setExtensionForAppIdentifier:handlesBackgroundTasks:
setExtensionForAppIdentifier:isBackgroundUpdating:
extensionForAppIdentifierIsBackgroundUpdating:
setExtensionForAppIdentifier:isRunningInBackground:
extensionForAppIdentifierIsRunningInBackground:
setExtensionForAppIdentifier:keepComplicationExtensionAwake:extendAssertion:cpuMonitored:
setExtensionForAppIdentifier:isCreatingNotificationUI:
extensionForAppIdentifierIsCreatingNotificationUI:
setExtensionForAppIdentifier:clientIdentifier:appIsActive:
extensionForAppIdentifierIsAppActive:
setExtensionForAppIdentifier:clientIdentifier:notificationUIIsActive:
extensionForAppIdentifierIsNotificationUIActive:
extensionForAppIdentifierIsDebugging:
setExtensionForAppIdentifier:isSettingUpDirectXPC:
extensionForAppIdentifierHandlesBackgroundTasks:
setExtensionForAppIdentifier:isBeingLoaded:
extensionForAppIdentifierIsBeingLoaded:
setExtensionForAppIdentifier:launchArgs:
extensionForAppIdentifierLaunchArgs:
setExtensionForAppIdentifier:launchEnv:
extensionForAppIdentifierLaunchEnv:
setExtensionForAppIdentifierDidGetBeginWorkout:
extensionForAppIdentifierDidGetBeginWorkoutRecently:
callsArePendedForServerIdentifier:
setExtensionForAppIdentifier:extensionHasFGGPU:
extensionForAppIdentifierExtensionHasFGGPU:
beginPendingCalls:forServerIdentifier:
addPendingCallIfCallsArePended:forServerIdentifier:
pendingCallsForServerIdentifier:
fetchAndClearPendingCallsForServerIdentifier:
didBeginPendingCallsDateForServerIdentifier:
logState
clearLastKnownPidForExtensionWithIdentifier:
setLastKnownPid:forExtensionWithIdentifier:
lastKnownPidForExtensionWithIdentifier:
appStateInfosForAppBundleIDs:
extensions
setExtensions:
extensionsQueue
setExtensionsQueue:
extensionIsDebugging
setExtensionIsDebugging:
extensionHandlesBackgroundTasks
setExtensionHandlesBackgroundTasks:
extensionsBackgroundUpdating
setExtensionsBackgroundUpdating:
appsRunningInBackground
setAppsRunningInBackground:
extensionComplicationAwake
setExtensionComplicationAwake:
extensionComplicationExtend
setExtensionComplicationExtend:
extensionComplicationCPUMonitoredWake
setExtensionComplicationCPUMonitoredWake:
extensionsBeingLoaded
setExtensionsBeingLoaded:
extensionsCreatingNotificationUI
setExtensionsCreatingNotificationUI:
extensionsAppIsActive
setExtensionsAppIsActive:
extensionsNotificationUIIsActive
setExtensionsNotificationUIIsActive:
extensionsSettingUpDirectXPC
setExtensionsSettingUpDirectXPC:
extensionsLastKnownPid
setExtensionsLastKnownPid:
extensionsLaunchArgs
setExtensionsLaunchArgs:
extensionsLaunchEnv
setExtensionsLaunchEnv:
extensionsLastBeginWorkout
setExtensionsLastBeginWorkout:
extensionsWithFGGPU
setExtensionsWithFGGPU:
pendingCalls
setPendingCalls:
didBeginPendingTimestamps
setDidBeginPendingTimestamps:
pendingCallsQueue
setPendingCallsQueue:
_extensions
_extensionsQueue
_extensionIsDebugging
_extensionHandlesBackgroundTasks
_extensionsBackgroundUpdating
_appsRunningInBackground
_extensionComplicationAwake
_extensionComplicationExtend
_extensionComplicationCPUMonitoredWake
_extensionsBeingLoaded
_extensionsCreatingNotificationUI
_extensionsAppIsActive
_extensionsNotificationUIIsActive
_extensionsSettingUpDirectXPC
_extensionsLastKnownPid
_extensionsLaunchArgs
_extensionsLaunchEnv
_extensionsLastBeginWorkout
_extensionsWithFGGPU
_pendingCalls
_didBeginPendingTimestamps
_pendingCallsQueue
pluginCacheQueue
applicationProxyForIdentifier:
isWatchKitApp
plugInKitPlugins
protocol
isEqualToString:
isNativePlugin:
setExtensionWithServerIdentifier:isDebugging:isNative:
defaultHost
code
domain
dispatchSyncToMainThread:
anyObject
uuid
beginUsingExtension:serverIdentifier:completion:
loadAndBeginUsingPlugIn:completion:
plugInExited:completion:
sendCacheRequest:identifier:
sendData:identifier:clientIdentifiers:
sendData:identifier:clientIdentifiers:reply:
sendPlistFromNativeExtension:identifier:clientIdentifiers:
sendSetViewController:key:property:value:identifier:clientIdentifiers:
sendSetViewController:values:identifier:clientIdentifiers:
sendPushPagingScrollTableRow:row:seguesByRowName:rowNamesAndContextIDs:identifier:clientIdentifiers:
fetchNotificationForNotificationID:completion:
requestTimingData:timingMetaData:
launchCompanionAppForGizmoAppWithIdentifier:withUserInfoData:reply:
remoteInterfaceDidDeactivate:
extensionWithIdentifier:gotUnknownInterfaceController:
extensionDidBeginNotificationUICreation:
extensionDidEndNotificationUICreation:
sendXPCEndpoint:identifier:clientIdentifiers:
allowBackgroundUIUpdate:
extensionDelegateDidChange:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
setHostPrincipal:withProtocol:
continuouslyDiscoverPlugInsForAttributes:flags:found:
notificationBlock
setNotificationBlock:
plugInPrincipal
extensionDidBeginUsingWithLaunchEnv:launchArgs:completion:
beginUsing:
extensionWillEndUsing
notifyClientsExtensionTerminated:
endUsing:
cancelDiscoveryForPluginWithIdentifer:completion:
cancelPlugInDiscovery:
setExtensionIsDebugging:isNative:
_kill:
receiveContextData:
sendToPlugin:clientIdentifier:call:
sendToPlugin:clientIdentifier:takeProcessAssertion:call:
sendInterfaceInfo:forAppIdentifier:
extensionHasForegroundGPU
extensionDoesNotHaveForegroundGPU:
standardUserDefaults
persistentDomainForName:
preferredContentSizeCategory:
bundleURL
isInstalled
localizations
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
firstObject
layoutDirection:
length
receiveData:fromIdentifier:
receivePlist:fromIdentifier:
appDidFinishLaunching:clientIdentifier:completion:
applicationDidFinishConnecting:
appDidBecomeActive:clientIdentifier:completion:
applicationDidBecomeActive:
appWillResignActive:clientIdentifier:completion:
applicationWillResignActive:
applicationUpdateState:suspendedUnderLock:clientIdentifier:
applicationBeginWorkout:clientIdentifier:
applicationHandleSerializedNSUserActivity:clientIdentifier:
applicationDidReceiveNotification:clientIdentifier:withCompletionHandler:
applicationWillEnterForeground:withVisibleViewControllerID:
applicationDidEnterBackground:withVisibleViewControllerID:
dataInterfaceDidBecomeActive:
dataInterfaceWillResignActive:
receiveNativeComplicationRequest:completion:
unsignedIntValue
createViewController:className:properties:contextID:info:gestureDescriptions:clientIdentifier:
releaseViewController:clientIdentifier:
activateViewController:clientIdentifier:
deactivateViewController:clientIdentifier:
didAppearViewController:clientIdentifier:
willDisappearViewController:clientIdentifier:
receiveNavigationReply:clientIdentifier:
rootInterfaceController:performActionWithItemID:forNotificationID:userInfo:clientIdentifier:completionHandler:
sendSetViewController:key:property:value:serverIdentifier:clientIdentifiers:
sendSetViewController:values:serverIdentifier:clientIdentifiers:
sendPushPagingScrollTableRow:row:seguesByRowName:rowNamesAndContextIDs:serverIdentifier:clientIdentifiers:
objectAtIndexedSubscript:
sendData:serverIdentifier:clientIdentifiers:
sendData:orPlist:serverIdentifier:clientIdentifiers:reply:
concurrencyManager
extensionDelegateHandlesBackgroudTasks:
errorWithCode:
isApplicationCompanionConnectionClientIdentifier:
setupDirectExtensionXPCConnectionWithIdentifier:clientIdentifier:
_activeWorkoutApplicationIdentifierWithCompletion:
path
sendDataToCompanion:serverIdentifier:clientIdentifier:
sendPlistToNativeExtension:serverIdentifier:clientIdentifier:
appDidFinishLaunching:clientIdentifier:
appDidResetContents:clientIdentifier:
appDidBecomeActive:clientIdentifier:
appWillResignActive:clientIdentifier:
app:updateState:suspendedUnderLock:clientIdentifier:
app:beginWorkout:clientIdentifier:
app:handleSerializedNSUserActivity:clientIdentifier:
appDidBeginBackgroundGlanceUpdate:clientIdentifier:
appDidEndBackgroundGlanceUpdate:clientIdentifier:
appDidBeginBackgroundBARTask:clientIdentifier:completion:
appDidEndBackgroundBARTask:clientIdentifier:
app:didReceiveNotification:clientIdentifier:withCompletionHandler:
appWillEnterForeground:clientIdentifier:withVisibleViewControllerID:
appDidEnterBackground:clientIdentifier:withVisibleViewControllerID:
app:handleWatchTaskKeys:returnToPrimaryUI:visibleVCID:clientIdentifier:
notificationUIDidBecomeActive:clientIdentifier:
notificationUIWillResignActive:clientIdentifier:
didActivateDataConnection:clientIdentifier:
willDeactivateDataConnection:clientIdentifier:
processCacheDictionary:serverIdentifier:completion:
processCacheDictionary:serverIdentifier:
startBacklightAssertion:clientIdentifier:reason:
renewBacklightAssertion:clientIdentifier:
releaseBacklightAssertion:clientIdentifier:
ping
resetTimingInfo
retreiveTimingInfo:
addPassesData:serverIdentifier:clientIdentifier:
releaseViewController:serverIdentifier:clientIdentifier:
createViewController:className:properties:contextID:info:gestureDescriptions:serverIdentifier:clientIdentifier:
activateViewController:serverIdentifier:clientIdentifier:
deactivateViewController:serverIdentifier:clientIdentifier:
didAppearViewController:serverIdentifier:clientIdentifier:
willDisappearViewController:serverIdentifier:clientIdentifier:
receiveNavigationReply:serverIdentifier:clientIdentifier:
rootInterfaceController:serverIdentifier:performActionWithItemID:forNotificationID:userInfo:clientIdentifier:completionHandler:
duetAppDidBecomeActive:clientIdentifier:
duetAppWillResignActive:clientIdentifier:
sendNativeComplicationRequest:serverIdentifier:clientIdentifier:completion:
clearPluginCacheForIdentifier:
purgePlugInCache
appRemoteLaunchWithIdentifier:launchEnv:launchArgs:
appRemoteTerminateWithIdentifier:
removeLocalConnectionWithIdentifier:clientIdentifier:
updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:
killExtensionProcessForApplicationWithIdentifier:
fetchExtensionUIActiveStateForBundleID:uiIsActive:uiActiveInBackground:doingNotificationControllerCreation:
fetchExtensionCapabilitiesForAppBundleID:handlesBackgroundTasks:
sendContextData:toAppWithIdentifier:completion:
discovery
setDiscovery:
nativePlugInIdentifiers
setNativePlugInIdentifiers:
nonNativePluginIdentifiers
setNonNativePluginIdentifiers:
sendQueue
setSendQueue:
setPluginCacheQueue:
discoveryCancelationCompletions
setDiscoveryCancelationCompletions:
discoveryTokensWaitingForDisposal
setDiscoveryTokensWaitingForDisposal:
setConcurrencyManager:
_discovery
_nativePlugInIdentifiers
_nonNativePluginIdentifiers
_sendQueue
_pluginCacheQueue
_discoveryCancelationCompletions
_discoveryTokensWaitingForDisposal
_concurrencyManager
receiveProtoData:fromIdentifier:
applicationDidTerminate:
applicationIsStillActive
applicationHandleWatchTaskKeys:returnToPrimaryUI:visibleVCID:clientIdentifier:
didDisappearAfterModalPresentationViewController:clientIdentifier:
didAppearAfterModalDismissalViewController:clientIdentifier:
replyTimingData:
hasPrefix:
initWithCapacity:
objectsCount
clearObjects
objectType
objects
setObjects:
_objects
setCacheIdentifier:
setPermanentCache:
setTransientCache:
cacheIdentifier
permanentCache
transientCache
_cacheIdentifier
_permanentCache
_transientCache
localizedStringForSystemLanguage:fromBundlePath:
errorWithDomain:code:userInfo:
isValidationErrorCode:
_launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:
_terminateAppWithIdentifier:launchModeToTerminate:completion:
sharedTileNavigationService
navigateToClockAnimated:completion:
addEntriesFromDictionary:
bundleProxyForIdentifier:
sequenceNumber
numberWithUnsignedInteger:
cacheGUID
sharedService
openApplication:options:withResult:
terminateApplication:forReason:andReport:withDescription:
checkProgressOfTerminateRequest:
dateWithTimeIntervalSinceNow:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
userInfo
compare:
sharedInstance
launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:
terminateAppWithIdentifier:completion:
getRunningStatusForAppWithIdentifier:completion:
mostRecentLaunchedAppIdentifier
setMostRecentLaunchedAppIdentifier:
mostRecentLaunchedAppMode
setMostRecentLaunchedAppMode:
_mostRecentLaunchedAppIdentifier
_mostRecentLaunchedAppMode
initWithBundleIDs:states:
processInfo
initForWritingWithMutableData:
encodeObject:forKey:
finishEncoding
unarchiveObjectWithData:
subpathsOfDirectoryAtPath:error:
objectEnumerator
nextObject
attributesOfItemAtPath:error:
fileSize
stringWithUTF8String:
bundleWithPath:
sharedApplication
userInterfaceLayoutDirection
URLQueryAllowedCharacterSet
formUnionWithCharacterSet:
removeCharactersInString:
uniqueNumber
stringByAppendingString:
hasSuffix:
methodForSelector:
instanceMethodForSelector:
cStringUsingEncoding:
colorWithWhite:alpha:
colorWithRed:green:blue:alpha:
defaultWorkspace
_validatedAppProxyForBundleProxy:
bundleIdentifier
watchKitVersion
enumerateBundlesOfType:block:
serializeObject:
deserializeObject:
userVolumeBlockSize
folderSizeAtPath:volumeBlockSize:
appExtensionFirstUnlock
machTime
isRunningInF5DemoMode
isRunningInF201DemoMode
isRunningInAnyDemoMode
isRTL
SPURLQueryAllowedCharacterSet
companionConnectionClientIdentifier:isNotification:
isNotificationCompanionConnectionClientIdentifier:
dispatchAsyncToMainThread:
subclassForObject:overridesSelector:fromSuperclass:
UIColorFromString:
installedApplications
setFont:
fontDescriptor
fontAttributes
font
decodeObjectForKey:
fontDescriptorWithFontAttributes:
fontWithDescriptor:size:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
unarchiver:didDecodeObject:
unarchiver:willReplaceObject:withObject:
unarchiverWillFinish:
unarchiverDidFinish:
initWithFont:
_font
arrayWithObject:
pathForResource:ofType:inDirectory:forLocalization:
dictionaryWithContentsOfFile:
objectForKey:
localizedStringForKey:value:table:
rangeOfString:
substringFromIndex:
floatValue
substringToIndex:
colorWithAlphaComponent:
setObjectData:
setReceiver:
setType:
data
initWithProtobufData:type:isResponse:
cacheRequestWithProtoData:identifier:
protobufWithSPPlist:identifier:
toProto:
setCacheMessage:
initWithData:
type
cacheMessage
fromProto:
setKey:
objCType
setSubtype:
setNbool:
setNint64:
unsignedIntegerValue
setNuint64:
charValue
setNint32:
shortValue
longValue
setNfloat:
doubleValue
setNdouble:
longLongValue
subtype
nbool
nint64
nuint64
numberWithUnsignedLongLong:
nint32
numberWithChar:
numberWithShort:
nfloat
ndouble
setText:
setObject:
spPlistWithDictionary:
spPlistWithArray:
protoSPObjectWithString:forKey:
protoSPObjectWithNumber:forKey:
protoSPObjectWithData:forKey:
protoSPObjectWithDictionary:forKey:
protoSPObjectWithArray:forKey:
protoSPObjectWithObject:forKey:
text
numberWithSPProtoSockPuppetObject:
object
arrayWithSPPlist:
dictionaryWithSPPlist:
dataWithObject:
objectWithData:
timeIntervalSinceReferenceDate
size
setSize:
state
setState:
accessDate
setAccessDate:
initWithName:size:state:accessDate:
_key
_state
_size
_accessDate
assets
addAssets:
addAsset:
setAssets:
_assets
setAssetKey:
setGizmoCacheIdentifier:
setAssetData:
setSyncData:
hasAssetKey
hasGizmoCacheIdentifier
hasAssetData
hasSyncData
messageType
setMessageType:
cacheType
setCacheType:
assetKey
gizmoCacheIdentifier
assetData
syncData
_assetData
_assetKey
_cacheType
_gizmoCacheIdentifier
_messageType
_syncData
cacheDirectory
_sp_stringByEncodingIllegalFilenameCharacters
cacheDirectoryWithCacheIdentifier:
processCacheMessage:connectionIdentifier:completion:
initWithDictionary:
setupCacheWithIdentifier:completion:
getData:cacheIdentifier:completion:
addData:cacheIdentifier:completion:
deleteData:cacheIdentifier:completion:
clearAllCachedImages:cacheIdentifier:completion:
assetPath:cacheIdentifier:cacheType:
dataWithContentsOfFile:
dictionaryWithObject:forKey:
setAttributes:ofItemAtPath:error:
numberWithInteger:
numberWithLong:
sendCacheReply:cacheIdentifier:
writeToFile:options:error:
cacheDirectoryWithCacheIdentifier:cacheType:
contentsOfDirectoryAtPath:error:
cacheAssets:cacheType:cacheIdentifier:
fileExistsAtPath:isDirectory:
initFileURLWithPath:isDirectory:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
getResourceValue:forKey:error:
timeIntervalSinceDate:
lastPathComponent
stringByRemovingPercentEncoding
sendProtobuf:sender:timeOut:securityType:withCompletion:
deleteCache:
processCacheMessageData:connectionIdentifier:
processCacheDictionary:connectionIdentifier:completion:
companionAppServer
setCompanionAppServer:
_companionAppServer
hasReceiver
objectData
receiver
_objectData
_receiver
_type
mainBundle
bundlePath
stringByStandardizingPath
error
setError:
_error
setHasSubtype:
hasSubtype
hasCacheMessage
hasKey
hasText
setHasNdouble:
hasNdouble
setHasNfloat:
hasNfloat
setHasNint64:
hasNint64
setHasNint32:
hasNint32
setHasNuint64:
hasNuint64
setNuint32:
setHasNuint32:
hasNuint32
setHasNbool:
hasNbool
hasObject
nuint32
_ndouble
_nint64
_nuint64
_cacheMessage
_nfloat
_nint32
_nuint32
_object
_subtype
_text
_nbool
initWithService:
setSecureRemoteService:
setInsecureRemoteService:
secureRemoteService
incomingSecureProtobuf:
setProtobufAction:forIncomingRequestsOfType:
insecureRemoteService
incomingInsecureProtobuf:
addDelegate:queue:
setPreferInfraWiFi:
killWiFiTimer
startWiFiTimer
wifiTimeOut
_sendPlist:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:
null
outgoingMessageBlockedUntil
dataWithPropertyList:format:options:error:
logEvent:withName:
delegate
logDataSent:application:
serviceForTransport:
accounts
sendData:fromAccount:toDestinations:priority:options:identifier:error:
serviceName
saveForPossibleResend:
setOutgoingMessageBlockedUntil:
messages
_sendData:forApplication:idsPriority:installer:withCompletion:
removeOutgoingMessageBlockIfIdentiferMatches:sendError:
handleDataProtectionSendFailureOrRetryFailureOnService:account:identifier:error:
outgoingResponseIdentifier
didReceiveSecureData
incomingData:
temporarilyRetainIDSMessageContext:
_sendProtobuf:sender:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:
uncompressedData
sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
dateOfFirstUnlock
context
incomingProtobuf:
unsignedLongValue
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setTransportDelegate:
enableWiFiIfNeededForDataOfSize:
disableWiFiIfNeededForDataOfSize:
isWiFiEnabled
isWiFiRequiredForSize:
keepWiFiAliveIfNeeded
sendPlist:timeOut:securityType:withCompletion:
sendData:forApplication:idsPriority:installer:withCompletion:
setDelegate:
setMessages:
messagesAccessQueue
setMessagesAccessQueue:
canSend
setCanSend:
wifiThresholdCount
setWifiThresholdCount:
wifiEnabled
setWifiEnabled:
wifiTimer
setWifiTimer:
retainedIDSMessageContextsQueue
setRetainedIDSMessageContextsQueue:
retainedIDSMessageContexts
setRetainedIDSMessageContexts:
blockedOutgoingMessagesQueue
setBlockedOutgoingMessagesQueue:
_canSend
_wifiEnabled
_secureRemoteService
_insecureRemoteService
_delegate
_messages
_messagesAccessQueue
_wifiTimer
_retainedIDSMessageContextsQueue
_retainedIDSMessageContexts
_outgoingMessageBlockedUntil
_blockedOutgoingMessagesQueue
_wifiThresholdCount
removeAllStateFromDefaultsIfNeeded
_setupSignalHandlers
initWithMachServiceName:
setApplicationListener:
applicationListener
setApplicationManagerListener:
applicationManagerListener
setLocalConnections:
applicationIDsFromLaunchServicesXPCEvent:isPlaceHolder:
applicationsWithBundlefIDsWereInstalled:
applicationsWithBundlefIDsWereUninstalled:
activeWorkoutStatusDidChange
_notifyFirstUnlockStatus:
requestFirstUnlockStatus
currentRunLoop
localConnections
_setupSignal:handler:
_saveSendTimeAndSize:
timingTest_IDSSendTime
setTimingTest_IDSSendTime:
setTimingTest_IDSSendSize:
timingTest_IDSReceiveTime
setTimingTest_IDSReceiveTime:
setTimingTest_lastServerIdentifier:
setTimingTest_lastClientIdentifier:
pendingDatasForDroppedConnections
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
removeObjectsForKeys:
isPaired
_xpcConnection
extensionDidTerminate
companionDaemonDidRestart
extensionGotUnknownControllerID:
receiveData:reply:
receiveData:
receivePlistFromExtension:
receiveSetViewController:key:property:value:
receiveSetViewController:values:
receivePushPagingScrollTableRow:row:seguesByRowName:rowNamesAndContextIDs:
fetchConnectionIdentifierWithReply:
receiveXPCEndpoint:
appBeginBackgroundUIUpdate
appActiveWorkoutStatusDidChange:
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
_localConnectionIdentifierForServerIdentifier:clientIdentifier:
sendPlist:securityType:
currentActiveApp
cancelGizmoAppStillActivePingTimer:
setCurrentActiveApp:
endTransaction
auditToken
setActiveComplications:
activeComplicationsWithCompletion:
fetchExtensionUIActiveStateForBundleID:completion:
fetchWatchKitApplicationStateInfo:
fetchExtensionCapabilitiesForAppBundleID:completion:
addXPCConnection:withIdentifier:
removeXPCConnection:
componentsSeparatedByString:
lastObject
logDictionary:
sendSPPlist:receiver:securityType:
clearLastResetDateForApp:
clearDateOfFirstContinuousSendError
appWithIdentifierIsKnownWatchKitApp:
shouldResetAppOnError:
restartAppContents:
lastAppResetDates
_serverIdentifierForLocalConnectionIdentifier:
_clientIdentifierForLocalConnectionIdentifier:
addPendingDataForDroppedConnection:typeKey:localConnectionIdentifier:
logStringArray:
decodeOutData:
performBlockForClientIdentifiers:serverIdentifier:block:
appStateMonitors
_notifyRunningWKAppsDidChange
beginTransaction
startGizmoAppStillActivePingTimer:
applicationInfoForApplication:completion:
timingTest_IDSSendSize
sockPuppetDataFromDictionary:
timingTest_lastServerIdentifier
timingTest_lastClientIdentifier
addPassData:completion:
handleIncomingProtoPlist:
appBundleIDFromPlist:
handleIncomingPlist:
propertyListWithData:options:format:error:
companionCapabilities
unlockedSinceBoot
setUnlockedSinceBoot:
notifyClientsCompanionDaemonRestarted
launchApplication:withTransactionID:backlightTime:launchMode:launchEnv:launchArgs:
terminateApplication:withTransactionID:
getApplicationRunningStatus:withTransactionID:
setCompanionCapabilities:
_saveReceiveTimeWithServerIdentifier:clientIdentifier:
setLastResetDateForApp:
debugLogLevel
stringWithString:
appendFormat:
app:activeWorkoutStatusDidChange:
listener:shouldAcceptNewConnection:
cancelGizmoApplicationsUpdateTimer
_notifyComplicationFirstUnlockChanged:
setPendingDatasForDroppedConnections:
gizmoApplicationsUpdateTimer
setGizmoApplicationsUpdateTimer:
queue
setQueue:
dateOfFirstContinuousSendError
setDateOfFirstContinuousSendError:
setLastAppResetDates:
lastAppResetDatesAccessQueue
setLastAppResetDatesAccessQueue:
lastExtensionTerminatedDates
setLastExtensionTerminatedDates:
gizmoAppStillActivePingTimers
setGizmoAppStillActivePingTimers:
setAppStateMonitors:
currentWKWorkoutAppBundleID
setCurrentWKWorkoutAppBundleID:
companionCapabilitiesSema
setCompanionCapabilitiesSema:
_unlockedSinceBoot
_applicationListener
_applicationManagerListener
_localConnections
_pendingDatasForDroppedConnections
_gizmoApplicationsUpdateTimer
_queue
_currentActiveApp
_dateOfFirstContinuousSendError
_lastAppResetDates
_lastAppResetDatesAccessQueue
_lastExtensionTerminatedDates
_gizmoAppStillActivePingTimers
_appStateMonitors
_currentWKWorkoutAppBundleID
_timingTest_IDSSendSize
_timingTest_lastServerIdentifier
_timingTest_lastClientIdentifier
_companionCapabilities
_companionCapabilitiesSema
_timingTest_IDSSendTime
_timingTest_IDSReceiveTime
watchKitApplicationsChangedExternally
assetsCount
clearAssets
assetsAtIndex:
assetsType
cancelLogUpdateTimer
startLogUpdateTimer
newEventFromEvent:usingLogEvent:
updatePowerLogs
eventsByBundleID
setEventsByBundleID:
logUpdateTimer
setLogUpdateTimer:
logQueue
setLogQueue:
_eventsByBundleID
_logUpdateTimer
_logQueue
setPersistentDomain:forName:
synchronize
predicateWithFormat:
filteredArrayUsingPredicate:
pathComponents
applicationProxyForIdentifier:placeholder:
initWithDomain:
synchronizeUserDefaultsDomain:keys:
arrayForKey:
newlyInstalledApplicationIsAWatchKitApplication:
stopUsingExtensionIfNecessaryForApplicationWithIdentifier:
pluginKitDictionary
applicationManagerConnections
extensionInfoPListInGizmoApplication:
needsToUpdateComplicationInfoInAppliationInfo:withComplicationsInfo:
identifierForPluginProxy:
sendStatusData:
setApplicationManagerConnections:
applicationManagerConnectionsQueue
setApplicationManagerConnectionsQueue:
updateSema
setUpdateSema:
_applicationManagerConnections
_applicationManagerConnectionsQueue
_updateSema
setWithCapacity:
daemonManagerDidBeginXPCTransaction
daemonManagerWillEndXPCTransaction
addTransactionObserver:
removeTransactionObserver:
refCount
setRefCount:
setActive:
transactionTimer
setTransactionTimer:
transactionQueue
setTransactionQueue:
transactionObservers
setTransactionObservers:
_active
_refCount
_transactionTimer
_transactionQueue
_transactionObservers
characterSetWithCharactersInString:
invertedSet
stringByAddingPercentEncodingWithAllowedCharacters:
SPProtoObjectMessage
NSCopying
SPProtoAudioFileQueuePlayerSetItems
SPProtoAudioFileQueuePlayerSetRate
SPProtoAudioFileQueuePlayer
SPProtoAudioFilePlayerUpdateContainedIdentifier
SPProtoAudioFilePlayerStatus
SPProtoAudioFilePlayerItem
SPProtoAudioFilePlayerAssetUpdateMetaData
SPProtoAudioFilePlayerAsset
SPProtoAudioFilePlayerItemSetCurrentTime
SPProtoAudioFilePlayerMessage
SPProtoSockPuppetMessage
SPPlugInExtension
SPGizmoPlugInManagerConcurrencyManager
SPCompanionAppServerProtocol
NSObject
SPGizmoPlugInManager
SPGizmoAppServerProtocol
SPGizmoPlugInManagerRemoteInterfaceStub
SPRemoteInterfaceProtocol
SPProtoSockPuppetPlist
SPProtoCacheSyncData
SPError
SPGizmoAppLauncher
SPUtils
SPFont
NSSecureCoding
NSCoding
NSKeyedUnarchiverDelegate
SPIDSProtobuf
SPProtoSerializer
SPCacheAsset
SPAssetCacheAssets
SPAssetCacheSyncData
SPProtoCacheMessage
SPGizmoCacheManager
SPProtoCacheAsset
SPProtoSockPuppetIDSObject
SPCacheMessage
SPProtoSockPuppetObject
0"2@
SPTransport
IDSServiceDelegate
SPGizmoApplicationProtocol
SPGizmoApplicationManagerProtocol
SPGizmoApplicationManagerServerProtocol
SPGizmoAppServer
SPTransportDelegate
NSXPCListenerDelegate
SPProtoCacheAssets
SPPowerLog
SPGizmoAppManager
SPDaemonManager
SPLogs
SPExtras
@12@0:4^{_NSZone=}8
@8@0:4
B12@0:4@8
v12@0:4@8
I8@0:4
v8@0:4
@"NSString"
#8@0:4
@12@0:4I8
@"NSMutableArray"
f8@0:4
v12@0:4f8
B8@0:4
@"SPProtoObjectMessage"
@"SPProtoAudioFilePlayerUpdateContainedIdentifier"
@"SPProtoAudioFileQueuePlayerSetRate"
@"SPProtoAudioFilePlayerStatus"
@"SPProtoAudioFileQueuePlayerSetItems"
v12@0:4i8
v12@0:4B8
v16@0:4q8
i8@0:4
q8@0:4
@"NSData"
{?="errorCode"b1"status"b1}
@"SPProtoAudioFilePlayerItemSetCurrentTime"
v16@0:4d8
d8@0:4
{?="duration"b1}
@"SPProtoAudioFilePlayerAssetUpdateMetaData"
{?="currentTime"b1}
@"SPProtoAudioFilePlayerAsset"
@"SPProtoAudioFilePlayerItem"
@"SPProtoAudioFileQueuePlayer"
@"SPProtoAudioFilePlayerMessage"
@"SPProtoSockPuppetPlist"
@16@0:4@8@12
v12@0:4@?8
v16@0:4B8@?12
v16@0:4@8@?12
l8@0:4
v12@0:4l8
@"<PKPlugIn>"
@"NSXPCConnection"
@"NSMutableDictionary"
@"BKSProcessAssertion"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@12@0:4@8
v16@0:4@8@12
v16@0:4@8B12
v16@0:4@8i12
v24@0:4@8B12B16B20
v20@0:4@8@12B16
i12@0:4@8
v16@0:4@?8@12
B16@0:4@?8@12
v16@0:4i8@12
v16@0:4@"NSData"8@"NSString"12
v20@0:4@8@12@16
v20@0:4@"NSData"8@"NSString"12@"NSArray"16
v24@0:4@8@12@16@?20
v24@0:4@"NSData"8@"NSString"12@"NSArray"16@?<v@?@"NSData">20
v20@0:4@8@"NSString"12@"NSArray"16
v32@0:4@8@12@16@20@24@28
v32@0:4@"NSString"8@"NSString"12@"NSString"16@20@"NSString"24@"NSArray"28
v24@0:4@8@12@16@20
v24@0:4@"NSString"8@"NSArray"12@"NSString"16@"NSArray"20
v32@0:4@8i12@16@20@24@28
v32@0:4@"NSString"8i12@"NSDictionary"16@"NSArray"20@"NSString"24@"NSArray"28
v16@0:4@"NSString"8@?<v@?@"NSDictionary"@"NSData"@"NSData"@"NSError">12
v16@0:4@"NSString"8@"NSDictionary"12
v20@0:4@8@12@?16
v20@0:4@"NSString"8@"NSData"12@?<v@?@"NSDictionary"@"NSError"i@"NSString">16
v12@0:4@"NSString"8
v16@0:4@"NSString"8@"NSString"12
v20@0:4@"NSXPCListenerEndpoint"8@"NSString"12@"NSArray"16
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v20@0:4@"NSData"8@"NSString"12@"NSString"16
v20@0:4@8@"NSString"12@"NSString"16
v20@0:4@"NSString"8@"NSString"12@?<v@?>16
v20@0:4@"NSString"8@"NSString"12@?<v@?B>16
v24@0:4@8i12B16@20
v24@0:4@"NSString"8i12B16@"NSString"20
v20@0:4@"NSString"8@"NSDictionary"12@"NSString"16
v20@0:4@"NSString"8@"NSData"12@"NSString"16
v24@0:4@"NSString"8@"NSData"12@"NSString"16@?<v@?I>20
v20@0:4@"NSString"8@"NSString"12@"NSString"16
v28@0:4@8@12B16@20@24
v28@0:4@"NSString"8@"NSDictionary"12B16@"NSString"20@"NSString"24
v20@0:4@"NSDictionary"8@"NSString"12@?<v@?@"NSDictionary">16
v16@0:4@"NSDictionary"8@"NSString"12
v20@0:4@8@12i16
v20@0:4@"NSString"8@"NSString"12i16
v20@0:4@"NSArray"8@"NSString"12@"NSString"16
v40@0:4@8@12@16@20@24@28@32@36
v40@0:4@"NSString"8@"NSString"12@"NSArray"16@"NSNumber"20@"NSDictionary"24@"NSDictionary"28@"NSString"32@"NSString"36
v36@0:4@8@12@16@20@24@28@?32
v36@0:4@"NSString"8@"NSString"12@"NSString"16@"NSString"20@"NSDictionary"24@"NSString"28@?<v@?>32
v24@0:4@"NSDictionary"8@"NSString"12@"NSString"16@?<v@?@"NSDictionary">20
v24@0:4@8^B12^B16^B20
v16@0:4@8^i12
v24@0:4@8@12B16@?20
v20@0:4@8B12@?16
@"SPGizmoPlugInManagerConcurrencyManager"
v24@0:4@8B12@16@20
v24@0:4@"NSDictionary"8B12@"NSString"16@"NSString"20
v16@0:4@8@"NSString"12
v20@0:4i8B12@16
v20@0:4i8B12@"NSString"16
v12@0:4@"NSData"8
v12@0:4@?<v@?>8
v20@0:4@"NSData"8@"NSString"12@?<v@?I>16
v36@0:4@8@12@16@20@24@28@32
v36@0:4@"NSString"8@"NSString"12@"NSArray"16@"NSNumber"20@"NSDictionary"24@"NSDictionary"28@"NSString"32
v32@0:4@8@12@16@20@24@?28
v32@0:4@"NSString"8@"NSString"12@"NSString"16@"NSDictionary"20@"NSString"24@?<v@?>28
v16@0:4@"NSDictionary"8@?<v@?@"NSDictionary">12
v12@0:4@"NSDictionary"8
v20@0:4@"NSDictionary"8@"NSArray"12@?<v@?@"NSDictionary">16
v12@0:4@?<v@?B>8
@"SPProtoCacheAssets"
@12@0:4i8
B12@0:4i8
Q16@0:4@8I12
@16@0:4B8B12
B20@0:4@8:12#16
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
#20@0:4@8@12@16
#20@0:4@"NSKeyedUnarchiver"8@"NSString"12@"NSArray"16
@16@0:4@"NSKeyedUnarchiver"8@12
v20@0:4@"NSKeyedUnarchiver"8@12@16
v12@0:4@"NSKeyedUnarchiver"8
@"UIFont"
@24@0:4@8I12I16@20
v12@0:4I8
@"SPAssetCacheAssets"
@"SPProtoCacheSyncData"
@16@0:4@8I12
@20@0:4@8@12I16
@20@0:4@8I12@16
@"SPCompanionAppServer"
Q8@0:4
v16@0:4Q8
@"SPAssetCacheSyncData"
@"SPProtoCacheMessage"
{?="ndouble"b1"nint64"b1"nuint64"b1"nfloat"b1"nint32"b1"nuint32"b1"subtype"b1"nbool"b1}
v28@0:4@8@12@16@20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@8@12@16B20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@8@12@16B20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
B16@0:4q8
v28@0:4@8d12i20@?24
v36@0:4@8d12i20@24I28@?32
v28@0:4@8@12i16@20@?24
B32@0:4@8@12d16i24@?28
B40@0:4@8@12d16i24@28I32@?36
B24@0:4@8@12@16@20
@"IDSService"
@"<SPTransportDelegate>"
@"NSObject<OS_dispatch_source>"
v16@0:4@"NSData"8@?<v@?@"NSData">12
v24@0:4@"NSString"8@"NSString"12@"NSString"16@20
v16@0:4@"NSString"8@"NSArray"12
v24@0:4@8i12@16@20
v24@0:4@"NSString"8i12@"NSDictionary"16@"NSArray"20
v12@0:4@?<v@?@"NSString"@"NSString">8
v16@0:4B8B12
v12@0:4@"NSXPCListenerEndpoint"8
v12@0:4@"NSArray"8
v12@0:4@?<v@?@"NSArray">8
v16@0:4@"NSString"8@?<v@?BBB@"NSError">12
v12@0:4@?<v@?@"NSDictionary"@"NSError">8
v16@0:4@"NSString"8@?<v@?@"NSDictionary"@"NSError">12
v20@0:4@"NSData"8@"NSString"12@?<v@?@"NSError">16
v16@0:4I8@12
v16@0:4I8@"NSString"12
v12@0:4@"IDSProtobuf"8
@"NSDate"8@0:4
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@16@0:4i8@?12
v28@0:4@8@12@16@20@?24
v20@0:4@8B12B16
@16@0:4@8^B12
@"NSXPCListener"
@"NSDate"
@"NSArray"
@"NSDictionary"
@"NSObject<OS_dispatch_semaphore>"
%{public}s:%d: passed a nil assertion for %{public}@
%{public}s:%d: timeout assertion %{public}@ for %{public}@
%{public}s:%d: timeout assertionExpiry:%.1f sec, timer:%p, processAssertion:%{public}@, active:%d, started:%d, backgroundUpdating:%d, keepComplicationExtensionAwake:%d
%{public}s:%d: assertion: %{public}@ for %{public}@
%{public}s:%d: takeProcessAssertion:%{public}@, active:%d, forceKeepComplicationAwake=%d, keepComplicationExtensionAwake:%d, _BackgroundUpdating=%d, _notificationUIIsActive=%d, _isSettingUpDirectXPC=%d
%{public}s:%d: %{public}@ Background state for %{public}@ _backgroundUpdating %i _keepComplicationExtensionAwake %i _complicationAssertion %{public}@ _extendComplicationExtensionAwake %i _cpuMonitoredComplicationWake %i
%{public}s:%d: %{public}@ will take new complication assertion
%{public}s:%d: Taking BAR assertion for %{public}@
%{public}s:%d: unable to take assertion for %{public}@ because we don't have a pid for it. xpcConnection=%p
%{public}s:%d: We shouldn't be trying to take a complication udpate assertion here: %{public}@
%{public}s:%d: Acquired process assertion %{public}@ for application %{public}@ pluginIdentifier %{public}@ pid %d, active:%d, _backgroundUpdating:%d
%{public}s:%d: Releasing assertion %{public}@
%{public}s:%d: Releasing previous assertion for type %d %{public}@ for %{public}@
%{public}s:%d: Will release existing complication assertion %{public}@ after a new one is acquired
%{public}s:%d: %{public}@ Acquired complication assertion %{public}@ (_cpuMonitoredComplicationWake %i) for application %{public}@ pluginIdentifier %{public}@ pid %d
%{public}s:%d: _keepComplicationExtensionAwake == NO, releasing complication assertion %{public}@
%{public}s:%d: %{public}@ Failed to acquire complication assertion for application %{public}@ pluginIdentifier %{public}@ pid %d
%{public}s:%d: Failed to acquire process assertion for application %{public}@ pluginIdentifier %{public}@ pid %d
%{public}s:%d: telling extension about extension state before releasing %{public}@
%{public}s:%d: releaseProcessAssertion %{public}@
%{public}s:%d: %{public}@ releaseProcessAssertionOnComplicationEndWake %{public}@ _complicationAssertion %{public}@
%{public}s:%d: Assertions for %{public}@: {
%{public}@
%{public}s:%d: Asked to take bringup assertion for %{public}@ with pid %d, but we already have one, so doing nothing
%{public}s:%d: Taking bringup assertion for %{public}@ with pid %d
%{public}s:%d: acquired bring-up assertion %{public}@ for extension %{public}@ with pid %d
%{public}s:%d: failed to acquire bring-up assertion for extension %{public}@ with pid %d. This may just be because the process isn't running anymore
%{public}s:%d: releasing bring-up assertion %{public}@
%{public}s:%d: taking app assertion for BGUI update: %{public}@
%{public}s:%d: previousAssertion for %{public}@ is %{public}@
%{public}s:%d: Acquired process assertion %{public}@ for application %{public}@
%{public}s:%d: Failed to acquire process assertion for application %{public}@ for background UI update
%{public}s:%d: releasing previousAssertion %{public}@ for %{public}@
%{public}s:%d: releasing app process assertion %{public}@ for BGUI update: %{public}@
%{public}s:%d: Released app process assertion %{public}@ for application %{public}@
%{public}s:%d: timeout appProcessAssertion %{public}@ for %{public}@
%{public}s:%d: timeout assertionExpiry:%.1f sec, timer:%p, appProcessAssertion: %{public}@
%{public}s:%d: _extensions already has an entry for %{public}@. this really shouldn't happen. newValue is same as the old=%d
%{public}s:%d: clientIdentifier %{public}@ for app %{public}@ marked not active, but we have no record of it being active to remove
%{public}s:%d: appIdentifier=%{public}@, clientIdentifier=%{public}@, appIsActive=%d, _extensionsAppIsActive=%{public}@
%{public}s:%d: appIdentifier=%{public}@, _extensionsAppIsActive=%{public}@
%{public}s:%d: clientIdentifier %{public}@ for app %{public}@ marked not active for notification UI, but we have no record of it being active to remove
%{public}s:%d: appIdentifier=%{public}@, clientIdentifier=%{public}@, appIsActive=%d, _extensionsNotificationUIIsActive=%{public}@
%{public}s:%d: appIdentifier=%{public}@, _extensionsNotificationUIIsActive=%{public}@
%{public}s:%d: failed to create directory at %{public}@, error: %{public}@
%{public}s:%d: called for %{public}@ when we already had %lu pended calls. This shouldn't happen
%{public}s:%d: concurrencyManager pending calls=%{public}@ ]
%{public}s:%d: concurrencyManager pending calls did begin=%{public}@ ]
%{public}s:%d: concurrencyManager extensions per app identifier=%{public}@ ]
%{public}s:%d: concurrencyManager extensions being loaded=%{public}@ ]
%{public}s:%d: clearing last known pid for extension %{public}@
%{public}s:%d: storing pid %d for extension %{public}@
%{public}s:%d: no last known pid for %{public}@
%{public}s:%d: last known pid for %{public}@ is %d
%{public}s:%d: plugin for app %{public}@ has no PID yet
%{public}s:%d: isNativePlugin:%{public}@ - known YES
%{public}s:%d: isNativePlugin:%{public}@ - known NO
%{public}s:%d: isNativePlugin:%{public}@ - lookup %{public}@
%{public}s:%d: appRemoteLaunchWithIdentifier:%{public}@
%{public}s:%d: appRemoteTerminateWithIdentifier:%{public}@
%{public}s:%d: loadAndBeginUsingPlugIn:%{public}@
%{public}s:%d: _discovery already has an entry for %{public}@, but we got here somehow. this shouldn't have happened. bailing
%{public}s:%d: Got error from continuous discovery for %{public}@:%{public}@
%{public}s:%d: Got non-cancel error from continuous discovery for %{public}@:%{public}@
%{public}s:%d: discovered new version of plugin %{public}@, plugin:%{public}@
%{public}s:%d: existing plugin %{public}@, plugin:%{public}@
%{public}s:%d: halt existing plugin:%{public}@ serverIdentifier:%{public}@
%{public}s:%d: start new plugin:%{public}@ for %{public}@
%{public}s:%d: No plugin found for %{public}@
%{public}s:%d: beginUsingExtension:%{public}@, active:%d, retry:%d of %d
%{public}s:%d: plugin active - serverIdentifier:%{public}@
%{public}s:%d: plugin %{public}@, notificationBlock: active=%d
%{public}s:%d: extensionDidBeginUsingWithLaunchEnv:%{public}@, handlesBackgroundTasks: %li
%{public}s:%d: plugin not active - serverIdentifier:%{public}@, could not activate plugin. Retry in %.2f seconds
%{public}s:%d: could not activate plugin %{public}@. Retry in %.2f seconds
%{public}s:%d: could not activate plugin %{public}@ serverIdentifier: %{public}@ (error:%{public}@)
%{public}s:%d: plugInExited:%{public}@
%{public}s:%d: plugInExited:%{public}@ extension: %{public}@
%{public}s:%d: cancelDiscoveryForPluginWithIdentifer:%{public}@, extension:%{public}@, active:%d
%{public}s:%d: endUsing, identifier:%{public}@ serverIdentifier %{public}@ (error: %{public}@)
%{public}s:%d: removeLocalConnectionWithIdentifier:%{public}@, client:%{public}@
%{public}s:%d: removeLocalConnectionWithIdentifier:%{public}@, client:%{public}@, count=0, pluginActive=%d
%{public}s:%d: updateLocalConnectionsWithConnection:%{public}@, client:%{public}@
%{public}s:%d: killing extension with pid %d for %{public}@ with -[NSExtension _kill:]
%{public}s:%d: couldn't kill extension for %{public}@ with -[NSExtension _kill:] because we don't have an XPC connection to it
%{public}s:%d: fetchExtensionCapabilitiesForAppBundleID:%{public}@, handlesBackgroundTasks:%d
%{public}s:%d: sendToPlugin:%{public}@, client:%{public}@, pending:%d(%p)
%{public}s:%d: serverIdentifier should not be nil here! clientIdentifier=%{public}@
%{public}s:%d: calls for extension %{public}@ are pended, but it's not currently being loaded
%{public}s:%d: We had more than %d pended calls for %{public}@ (%lu total), so will attempt to force a load of the plugin
%{public}s:%d: no date recorded for first pended call for %{public}@
%{public}s:%d: The first pended call for %{public}@ was more than %1.0f seconds ago, so will attempt to force a load of the plugin
%{public}s:%d: plugin %{public}@ appears to be stuck loading. trying to force it to quit
%{public}s:%d: got plugInExited: callback for %{public}@
%{public}s:%d: after waiting for %1.1f secs, endUsing: callback for %{public}@ never fired. Giving up and hoping the next load attempt works
%{public}s:%d: completion - extension:%{public}@, serverIdentifier:%{public}@, clientIdentifier:%{public}@, pending:%d
%{public}s:%d: Got nil extension for %{public}@. Just dropping %lu pended calls
%{public}s:%d: for %{public}@ callsArePendedForServerIdentifier returned YES, but addPendingCallIfCallsArePended returned no. this shouldn't happen!
%{public}s:%d: updating extension for %{public}@ with hasForegroundGPU=%d
%{public}s:%d: sendInterfaceInfo:%{public}@
%{public}s:%d: Unable to locate app bundle for %{public}@ to determine layout direction. (installed:%d)
%{public}s:%d: sendDataToCompanion:%{public}@, client:%{public}@, data:%d
%{public}s:%d: %{public}@, client:%{public}@
%{public}s:%d: appDidFinishLaunching:%{public}@, client:%{public}@
%{public}s:%d: got reset for %{public}@, but this is only for WK1 apps
%{public}s:%d: appDidBecomeActive:%{public}@, client:%{public}@
%{public}s:%d: appWillResignActive:%{public}@, client:%{public}@
%{public}s:%d: app:%{public}@ client:%{public}@ state:%ld
%{public}s:%d: app:%{public}@ client:%{public}@ workoutDict:%{public}@
%{public}s:%d: app:%{public}@ client:%{public}@ 
%{public}s:%d: appDidBeginBackgroundGlanceUpdate:%{public}@ client:%{public}@
%{public}s:%d: Unable to find a native plugin for identifier %{public}@
%{public}s:%d: appDidEndBackgroundGlanceUpdate:%{public}@ client:%{public}@
%{public}s:%d: Not releasing assertion %{public}@ isBGUpdating=%d
%{public}s:%d: did begin Bar task: %{public}@ client:%{public}@
%{public}s:%d: did end Bar task: %{public}@ client:%{public}@
%{public}s:%d: Not releasing assertion %{public}@ isBackgroundUpdating=%d
%{public}s:%d: Extension for %{public}@ is nil.
%{public}s:%d: app:%{public}@ didReceiveNotification:, client:%{public}@
%{public}s:%d: app:%{public}@, client:%{public}@
%{public}s:%d: Not releasing assertion %{public}@ isActive=%d
%{public}s:%d: This is here for protocol implementation, but should never be called. It was called for application=%{public}@, visibleVCID=%{public}@, clientIdentifier=%{public}@
%{public}s:%d: serverIdentifier=%{public}@, clientIdentifier=%{public}@
%{public}s:%d: Not releasing assertion %{public}@ notificationUIIsActive=%d
%{public}s:%d: didActivateDataConnection:%{public}@, client:%{public}@
%{public}s:%d: willDeactivateDataConnection:%{public}@, client:%{public}@
%{public}s:%d: %{public}@ Received SPNativeComplicationBeginWake %{public}@  %{public}@ %{public}@ pluginIdentifier %{public}@ extend %i cpuLimit %i
%{public}s:%d: %{public}@ Received SPNativeComplicationEndWake %{public}@ %{public}@ pluginIdentifier %{public}@
%{public}s:%d: %{public}@ Received request %{public}@ %{public}@ %{public}@ pluginIdentifier %{public}@
%{public}s:%d: %{public}@ appState is BKSApplicationStateForegroundRunning=%d, BKSApplicationStateForegroundRunningObscured=%d
%{public}s:%d: Ignoring release request for empty viewControllerIdentifier (client identifier = %{public}@)
%{public}s:%d: Ignoring activation request for empty viewControllerIdentifier (client identifier = %{public}@)
%{public}s:%d: Ignoring deactivation request for empty viewControllerIdentifier (client identifier = %{public}@)
%{public}s:%d: Not sending didAppear message to empty viewControllerIdentifier (client identifier = %{public}@)
%{public}s:%d: Not sending willDisappear message to empty viewControllerIdentifier (client identifier = %{public}@)
%{public}s:%d: extension -> app sendData:%d, identifier:%{public}@ clientIdentifiers:%{public}@
%{public}s:%d: We were asked for notification %{public}@ for a WK2 app, but this should only ever be called for WK1 apps
%{public}s:%d: Got error back from -[HKHealthStore _activeWorkoutApplicationIdentifierWithCompletion:]: %{public}@
%{public}s:%d: App %{public}@ doesn't have an active workout, so not running app in BG
%{public}s:%d: Asked to allow bg ui update for %{public}@, but no "%{public}@" entry in "%{public}@" was found for %{public}@
%{public}s:%d: Assertion %{public}@ is of an unknown type
%{public}s:%d: Posting %{public}@
%{public}s:%d: launching app with identifier %{public}@, launchMode %{public}@, launchEnv %{public}@, launchArgs %{public}@
%{public}s:%d: got error %{public}@ launching %{public}@
%{public}s:%d: Glances are no longer supported
%{public}s:%d: launching app %{public}@ with openApplicationOptions %{public}@
%{public}s:%d: Failed to terminate app with bundle ID %{public}@ after %1.1f secs. Giving up.
%{public}s:%d: Failed to localize key "%{public}@" in bundle at %{public}@. bundleExists=%d
%{public}s:%d: isApplication and isNotification can't both be true
%{public}s:%d: Error - unable to parse string '%{public}@' as UIColor method or hex value
%{public}s:%d: Demo mode enabled = %d, Demo program number = %d
%{public}s:%d: failed to serialize spList
%{public}s:%d: SPProtoSerializerTypeString, text field is empty
%{public}s:%d: SPProtoSerializerTypeData, object field is empty
%{public}s:%d: SPProtoSerializerTypeObject, object field is empty
%{public}s:%d: failed to delete cache, error: %{public}@
%{public}s:%d: cache id: %{public}@, type: %d, asset key: %{public}@
%{public}s:%d: image not found for cache id: %{public}@, asset key: %{public}@
%{public}s:%d: failed to delete asset at: %{public}@, error: %{public}@
%{public}s:%d: failed to write asset at: %{public}@, error: %{public}@
%{public}s:%d: cache id: %{public}@, type: %d
%{public}s:%d: cache id: %{public}@
%{public}s:%d: error, permCache == nil, cache id: %{public}@
%{public}s:%d: error, transCache == nil, cache id: %{public}@
%{public}s:%d: should not be called with completion
%{public}s:%d: done, cache id: %{public}@
%{public}s:%d: failed to create directory at: %{public}@, error: %{public}@
%{public}s:%d: contentsOfDirectoryAtURL failed at: %{public}@, error: %{public}@
%{public}s:%d: removeItemAtPath failed at: %{public}@, error: %{public}@
%{public}s:%d: NSURLContentModificationDateKey failed at: %{public}@, for: %{public}@, error: %{public}@
%{public}s:%d: NSURLFileSizeKey failed at: %{public}@, for: %{public}@, error: %{public}@
%{public}s:%d: SPProtoSerializer failed
%{public}s:%d: sendPlist, sendPlist failed, error : %{public}@
%{public}s:%d: Error - SPIsValidImageFilePath() failed for file path: %{public}@
%{public}s:%d: we will try to use wifi
%{public}s:%d: don't need wifi anymore
%{public}s:%d: Currently blocking outgoing messages on %{public}@
%{public}s:%d: canSend == NO
%{public}s:%d: propertyList == nil
%{public}s:%d: dataWithPropertyListe error: (%{public}@)
%{public}s:%d: IDS outgoingData == nil
%{public}s:%d: sendPlist, Error - could not send data on service (%{public}@) for %{public}@ (%{public}@)
%{public}s:%d: sent message with identifier %{public}@ for %{public}@ on %{public}@ service
%{public}s:%d: Blocking further sends until %{public}@ succeeds or fails
%{public}s:%d: Error - could not send data on service (%{public}@) for %{public}@ (%{public}@)
%{public}s:%d: Got success sending message with identifier %{public}@ on %{public}@ service
%{public}s:%d: Got failure sending message with identifier (%{public}@) on service (%{public}@). sends currently %{public}@ blocked until send of this message.%{public}@ error: %{public}@
%{public}s:%d: identifier (%{public}@), serviceName (%{public}@), success: %d error, domain: %{public}@, code: %ld
%{public}s:%d: Error - cannot find completion block for (%{public}@) serviceName: (%{public}@)
%{public}s:%d: Error - cannot find message for (%{public}@) serviceName: (%{public}@)
%{public}s:%d: 
%{public}s:%d: received data msg with identifier %{public}@ on %{public}@ service
%{public}s:%d: IDS incomingData == nil,  account: %{public}@, serviceName: %{public}@, fromID: %{public}@, context: %{public}@
%{public}s:%d: isXcodeCommand, setting IDSSendMessageOptionBypassDuetKey=YES
%{public}s:%d: # # # # %{public}@ size=%d
%{public}s:%d: First unlock was %1.0f seconds ago (less than %1.0f seconds), so saving for possible resend upon failure
%{public}s:%d: received protobuf msg with identifier %{public}@ on secure service
%{public}s:%d: received protobuf msg with identifier %{public}@ on insecure service
%{public}s:%d: %lu retained IDSMessageContexts
%{public}s:%d: Got data protection class send failure, but we've done first unlock. Giving up after %1.0f seconds
%{public}s:%d: Got error re-trying to send the message we're blocked on, but we've done first unlock. Giving up after %1.0f seconds. %{public}@
%{public}s:%d: Got data protection class send failure, but we've done first unlock. Will try again in %1.0f seconds
%{public}s:%d: Got error re-trying to send the message we're blocked on, but we've done first unlock. Will try again in %1.0f seconds. %{public}@
%{public}s:%d: we were blocked on %{public}@ and it %{public}@. unblocking
%{public}s:%d: flushing _blockedOutgoingMessagesQueue
%{public}s:%d: ******* SPGizmoAppServer, init started
%{public}s:%d: Running in F5 demo mode
%{public}s:%d: Running in F201 demo mode
%{public}s:%d: SPGizmoAppServer - init done
%{public}s:%d: ======== Gizmo Daemon gizmoappd
%{public}s:%d: -------- Installed Applications
%{public}s:%d: -------- XPC Connected Applications
%{public}s:%d: %{public}@
%{public}s:%d: --------
%{public}s:%d: *** Could not set up signal handler for %d.
%{public}s:%d: shouldAcceptNewConnection - applicationListener
%{public}s:%d: Got connection request on applicationListener from %{public}@ with pid %d before we were paired. Refusing
%{public}s:%d: connection interrupted - %{public}@
%{public}s:%d: connection to app with bundle ID %{public}@ interrupted. Killing extension
%{public}s:%d: connection invalidated - %{public}@
%{public}s:%d: shouldAcceptNewConnection - applicationManagerListener
%{public}s:%d: Got error %{public}@ while checking entitlement for process %{public}@ with pid %d
%{public}s:%d: process %{public}@ with pid %d is not entitled. Rejecting connection
%{public}s:%d: applicationManagerListener connection interrupted
%{public}s:%d: applicationManagerListener connection invalidated
%{public}s:%d: registering connection - %{public}@
%{public}s:%d: delayed block for %{public}@
%{public}s:%d: delayed receiveXPCEndpoint for %{public}@
%{public}s:%d: GizD:->IDS propertyList=%{private}@
%{public}s:%d: sendPlist, spPlistWithDictionary failed
%{public}s:%d: Got WatchKit error %{public}@
%{public}s:%d: got error %{public}@ for receiver %{public}@
%{public}s:%d: Got IDSErrorTypeIncompatibleDestinationVersion error %{public}@. Killing %{public}@
%{public}s:%d: Got continous send errors for more than %1.0f secs. Killing %{public}@
%{public}s:%d: sendSPPlist failed and it's been more than %1.0f seconds since the last reset of %{public}@, so resetting app contents
%{public}s:%d: sendSPPlist failed, but it's been less than %1.0f seconds since the last reset of %{public}@, so just dropping the failure
%{public}s:%d: We shouldn't be passed a NULL block here
%{public}s:%d: no local connection for %{public}@. will hold data for %1.0f secs to try for delivery when connection comes up
%{public}s:%d: GizD:->GizF application=%{public}@ clientIdentifiers=%{public}@ data=%{private}@
%{public}s:%d: plist variant doesn't support a reply
%{public}s:%d: clientIdentifier: %{public}@
%{public}s:%d: shouldn't be called for WK1 app %{public}@
%{public}s:%d: GizD:<-GizF serverIdentifier=%{public}@ clientIdentifier=%{public}@
%{public}s:%d: started BKSApplicationStateMonitor for %{public}@
%{public}s:%d: app with bundle ID %{public}@ was terminated. Killing extension
%{public}s:%d: app with bundle ID %{public}@ was terminated. Requesting termination of extension on companion
%{public}s:%d: App reset is only for WK1 apps. got reset for %{public}@
%{public}s:%d: GizD:<-GizF %{public}s serverIdentifier=%{public}@ clientIdentifier=%{public}@ state=%ld
%{public}s:%d: Called WK1 app %{public}@. Ignoring
%{public}s:%d: GizD:<-GizF %{public}s serverIdentifier=%{public}@ clientIdentifier=%{public}@ workoutDict=%{public}@
%{public}s:%d: GizD:<-GizF %{public}s serverIdentifier=%{public}@ clientIdentifier=%{public}@ dataSize=%lu
%{public}s:%d: Background update tasks are only supported on Wk3
%{public}s:%d: GizD<-GizF application=%{public}@
%{public}s:%d: Got notification for Wk1 app %{public}@. this should never have happened. Ignoring
%{public}s:%d: Called Wk1 app %{public}@. this should never have happened. Ignoring
%{public}s:%d: Called Wk2 app %{public}@. this should never have happened. Ignoring
%{public}s:%d: GizD:->GizF application=%{public}@ clientIdentifiers=%{public}@
%{public}s:%d: couldn't find a connection for localConnectionIdentifier %{public}@
%{public}s:%d: %{public}@ ignoring sendNativeComplicationRequest call for non-native plugin
%{public}s:%d: sending SPGizmoAppStillActivePingCommand for %{public}@
%{public}s:%d: ERROR: failed to add pass (%{public}@)
%{public}s:%d: ERROR: SPProtoSerializer spPlistWithDictionary failed
%{public}s:%d: ERROR: SPProtoSockPuppetMessage data failed
%{public}s:%d: Error - could not initialize protoPlist
%{public}s:%d: Error - could not deserialize protoPlist
%{public}s:%d: Error - could not deserialize data (%{public}@)
%{public}s:%d: IDS > GizD plist=%{private}@
%{public}s:%d: Companion daemon restarted - resetting gizmo apps
%{public}s:%d: Companion app extension died - killing gizmo app %{public}@
%{public}s:%d: received notification of extension %{public}@ terminated less than 1.0 secs ago. ignoring
%{public}s:%d: FAH: workout status for %{public}@ did change to %d
%{public}s:%d: Caching endpoint, no local connection for identifier=%{public}@ clientIdentifier=%{public}@, known client identifiers:%{public}@
%{public}s:%d: Couldn't determine clientIdentifier from connectionIdentifier %{public}@
%{public}s:%d: Successfully launched app with identifier %{public}@
%{public}s:%d: Failed to launch app with identifier %{public}@. Got error %{public}@
%{public}s:%d: Successfully terminated app with identifier %{public}@
%{public}s:%d: Failed to terminate app with identifier %{public}@
%{public}s:%d: app with identifier is running status = %d
%{public}s:%d: requestFirstUnlockStatus
%{public}s:%d: calling completion for %{public}@ with uiActive=%d, uiActiveInBackground=%d, inNotificationCreation=%d
%{public}s:%d: calling completion for appBundleID %{public}@ with handlesBackgroundTasks=%ld
%{public}s:%d: sending context to app %{public}@
%{public}s:%d: %{public}@ is a WatchKit 1 app and can't receive contexts
%{public}s:%d: unknown proto data
%{public}s:%d: unlocked=%d
%{public}s:%d: Error: Missing NSXPCConnection for key %{public}@
%{public}s:%d: Didn't get any user info from applicationRegistered
%{public}s:%d: User info was not a dictionary for applicationRegistered
%{public}s:%d: Failed to convert user info XPC dictionary to CF dictionary for applicationRegistered
%{public}s:%d: FAH: received kHKHealthDaemonActiveWorkoutServersDidUpdateNotification
%{public}s:%d: FAH: appIdentifier is %{public}@, _currentWKWorkoutAppBundleID is %{public}@
%{public}s:%d: %{public}@ posted SPComplicationVendorsDidChangeNotification due to settings change
%{public}s:%d: %{public}@ posted SPComplicationVendorsDidChangeNotification due to language change
%{public}s:%d: %{public}@ posted SPComplicationVendorsDidChangeNotification due to the set of installed applications changing
%{public}s:%d: Found application state in %{public}@ even though we are no longer in charge of it.
%{public}s:%d: Clearing out the installation state as it is now being tracked by the System.
%{public}s:%d: Semaphore timed out! Please file a radar.
%{public}s:%d: %{public}@ syncing domain %{public}@ with bundleIDs%{public}@
%{public}s:%d: %{public}@ fetching domain %{public}@ returned bundleIDs %{public}@
%{public}s:%d: applicationWithBundleIDsWereInstalled - Processing apps: %{public}@
%{public}s:%d: applicationsWithBundlefIDsWereUninstalled - Processing apps: %{public}@
%{public}s:%d: calling xpc_transaction_begin()
%{public}s:%d: calling xpc_transaction_end()
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>FAKETEAMID.</string>
<key>com.apple.bulletinboard.utilities</key>
<true/>
<key>com.apple.carousel.backlightaccess</key>
<true/>
<key>com.apple.frontboard.debugapplications</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.nanopassd.connect</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.sockpuppet</string>
<string>com.apple.private.alloy.sockpuppet.classd</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.sockpuppet</string>
<string>com.apple.private.alloy.sockpuppet.classd</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>CopyInstalledAppsForLaunchServices</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>CopyGuestContainerPath</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.gizmo.NanoPassbookService</string>
<string>com.apple.misagent</string>
<string>com.apple.carousel.tilenavigation</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>gizmoappd</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
