%@ %@
identifier
metadata
hasIdentifier
TB,R,N
T@"NSString",&,N,V_identifier
hasMetadata
T@"_NMRContentItemMetadata",&,N,V_metadata
timestamp
hasTimestamp
TB,N
Td,N,V_timestamp
state
payload
digest
nowPlayingInfo
applicationInfo
supportedCommands
playbackQueue
hasState
Ti,N,V_state
hasPayload
T@"NSData",&,N,V_payload
hasDigest
T@"NSData",&,N,V_digest
hasNowPlayingInfo
T@"NSData",&,N,V_nowPlayingInfo
hasApplicationInfo
T@"NSData",&,N,V_applicationInfo
hasSupportedCommands
T@"NSData",&,N,V_supportedCommands
hasPlaybackQueue
T@"NSData",&,N,V_playbackQueue
com.apple.NanoMediaRemote
com.apple.private.nanomediaremote
NMRCompanionCloudAvailabilityDidChangeNotification
NMRCompanionSpecializedQueueInfoDidChangeNotification
NMRCompanionNowPlayingApplicationIconDidChangeNotification
idx (%tu) is out of range (%tu)
command
enabled
active
preferredInterval
localizedTitle
localizedShortTitle
minimumRating
maximumRating
supportedRate
repeatMode
shuffleMode
presentationStyle
hasCommand
Ti,N,V_command
hasEnabled
TB,N,V_enabled
hasActive
TB,N,V_active
preferredIntervalsCount
TI,R,N
preferredIntervals
T^d,R,N
hasLocalizedTitle
T@"NSString",&,N,V_localizedTitle
hasLocalizedShortTitle
T@"NSString",&,N,V_localizedShortTitle
hasMinimumRating
Tf,N,V_minimumRating
hasMaximumRating
Tf,N,V_maximumRating
supportedRatesCount
supportedRates
T^f,R,N
hasRepeatMode
Ti,N,V_repeatMode
hasShuffleMode
Ti,N,V_shuffleMode
hasPresentationStyle
Ti,N,V_presentationStyle
Unknown
Play
Pause
TogglePlayPause
Stop
NextTrack
PreviousTrack
AdvanceShuffleMode
AdvanceRepeatMode
BeginFastForward
EndFastForward
BeginRewind
EndRewind
Rewind15Seconds
FastForward15Seconds
Rewind30Seconds
FastForward30Seconds
SkipForward
SkipBackward
ChangePlaybackRate
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
SeekToPlaybackPosition
ChangeRepeatMode
ChangeShuffleMode
NextChapter
PreviousChapter
NextAlbum
PreviousAlbum
NextPlaylist
PreviousPlaylist
BanTrack
AddTrackToWishList
RemoveTrackFromWishList
NextInContext
PreviousInContext
ResetPlaybackTimeout
SetPlaybackQueue
AddNowPlayingItemToLibrary
CreateRadioStation
AddItemToLibrary
InsertIntoPlaybackQueue
(unknown: %i)
None
Albums
Songs
jpegData
originalDigest
hasJpegData
T@"NSData",&,N,V_jpegData
hasOriginalDigest
T@"NSData",&,N,V_originalDigest
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
companionBundleIdentifier
T@"NSString",C,N
watchBundleIdentifier
localizedDisplayName
playbackState
TI,N
iconDigest
T@"NSData",C,N
v4@?0
com.apple.NanoMediaRemote.XPCQueue
v8@?0@"NSError"4
v8@?0@"NSDictionary"4
v12@?0I4^{__CFArray=}8
v8@?0@"NSData"4
supportedCommand
T@"NSMutableArray",&,N,V_supportedCommands
NanoMusicCore
NanoMediaRemote
NanoAudioControl
NanoMusicSync
com.apple.nanomusic
@16@?0@"NSDictionary"4@"NSString"8@12
@16@?0@"PBCodable"4@"NSString"8@12
iconData
bundleID
hasIconData
T@"NSData",&,N,V_iconData
hasBundleID
T@"NSString",&,N,V_bundleID
title
artist
album
duration
hasTitle
T@"NSString",&,N,V_title
hasArtist
T@"NSString",&,N,V_artist
hasAlbum
T@"NSString",&,N,V_album
hasDuration
Td,N,V_duration
errorCode
handlerReturnStatuses
T@"NSArray",R,N
serializationDate
T@"NSDate",R,N
hasProperNetworkConditionsToPlayMedia
canShowCloudMusic
hasHasProperNetworkConditionsToPlayMedia
TB,N,V_hasProperNetworkConditionsToPlayMedia
hasCanShowCloudMusic
TB,N,V_canShowCloudMusic
width
height
hasWidth
Td,N,V_width
hasHeight
Td,N,V_height
v16@?0@4@8^B12
com.apple.NanoMediaRemote.sendCommand.UIRoundTripDelay
com.apple.NanoMediaRemote.sendCommand.failedWithTimeout
com.apple.NanoMediaRemote.sendCommand.failedToSend
queueType
radioStationID
hasQueueType
TI,N,V_queueType
hasRadioStationID
T@"NSString",&,N,V_radioStationID
options
T@"NSDictionary",R,N
sourceID
mediaType
externalPlayerCommand
skipInterval
playbackRate
rating
negative
playbackPosition
contextID
trackID
radioStationHash
systemAppPlaybackQueueData
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
hasSourceID
T@"NSString",&,N,V_sourceID
hasMediaType
T@"NSString",&,N,V_mediaType
hasExternalPlayerCommand
TB,N,V_externalPlayerCommand
hasSkipInterval
Tf,N,V_skipInterval
hasPlaybackRate
Tf,N,V_playbackRate
hasRating
Tf,N,V_rating
hasNegative
TB,N,V_negative
hasPlaybackPosition
Td,N,V_playbackPosition
hasContextID
T@"NSString",&,N,V_contextID
hasTrackID
TQ,N,V_trackID
Tq,N,V_radioStationID
hasRadioStationHash
T@"NSString",&,N,V_radioStationHash
hasSystemAppPlaybackQueueData
T@"NSData",&,N,V_systemAppPlaybackQueueData
hasDestinationAppDisplayID
T@"NSString",&,N,V_destinationAppDisplayID
hasSendOptions
TI,N,V_sendOptions
hasRequestDefermentToPlaybackQueuePosition
TB,N,V_requestDefermentToPlaybackQueuePosition
hasShouldOverrideManuallyCuratedQueue
TB,N,V_shouldOverrideManuallyCuratedQueue
hasStationURL
T@"NSString",&,N,V_stationURL
hasShouldBeginRadioPlayback
TB,N,V_shouldBeginRadioPlayback
hasPlaybackQueueInsertionPosition
Ti,N,V_playbackQueueInsertionPosition
hasContentItemID
T@"NSString",&,N,V_contentItemID
location
contentItem
hasLocation
Ti,N,V_location
contentItems
T@"NSMutableArray",&,N,V_contentItems
elapsedTime
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
storeAdamID
hasElapsedTime
Td,N,V_elapsedTime
hasUniqueIdentifier
TQ,N,V_uniqueIdentifier
hasIsExplicitTrack
TB,N,V_isExplicitTrack
hasIsMusicApp
TB,N,V_isMusicApp
hasRadioStationIdentifier
Tq,N,V_radioStationIdentifier
hasRadioStationName
T@"NSString",&,N,V_radioStationName
hasArtworkDataDigest
T@"NSData",&,N,V_artworkDataDigest
hasIsAlwaysLive
TB,N,V_isAlwaysLive
hasIsAdvertisement
TB,N,V_isAdvertisement
hasStoreAdamID
Tq,N,V_storeAdamID
has%@
@4@?0
v16@?0@"NSString"4@"NSString"8^B12
v16@?0@"NSString"4@8^B12
dictionaryKeyToProtobufKeyMapping
T@"NSDictionary",C,N,V_dictionaryKeyToProtobufKeyMapping
protobufClass
T#,&,N,V_protobufClass
dictionaryValueToProtobufValueTransformer
T@?,C,N,V_dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
T@?,C,N,V_protobufValueToDictionaryValueTransformer
nowPlayingInfoData
T@"NSData",R,N
applicationInfoData
supportedCommandsData
playbackQueueData
jpegArtwork
icon
T@"NSString",R,N
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
T@"NSNumber",R,N
specializedQueues
T@"NSMutableArray",&,N,V_specializedQueues
com.apple.NanoMediaRemote.PlaybackQueue
v16@?0@"_NMRContentItem"4I8^B12
v12@?0^v4^v8
v12@?0^v4I8
v16@?0@4I8^B12
delegate
T@"<NMRPlaybackQueueDelegate>",W,N,V_delegate
observedRange
T{?=ii},N,V_observedRange
fullPlaybackQueueData
Playback queue with range %d -> %zd
  ContentItem identifier=%@, hasMetadata=%d, title=%@
hasOptions
T@"_NMRCommandOptionsProtobuf",&,N,V_options
knownDigest
hasKnownDigest
T@"NSData",&,N,V_knownDigest
hasNowPlayingInfoDigest
T@"NSData",&,N,V_nowPlayingInfoDigest
hasApplicationInfoDigest
T@"NSData",&,N,V_applicationInfoDigest
hasSupportedCommandsDigest
T@"NSData",&,N,V_supportedCommandsDigest
hasPlaybackQueueDigest
T@"NSData",&,N,V_playbackQueueDigest
hasCompanionBundleIdentifier
T@"NSString",&,N,V_companionBundleIdentifier
hasLocalizedDisplayName
T@"NSString",&,N,V_localizedDisplayName
hasPlaybackState
TI,N,V_playbackState
hasWatchBundleIdentifier
T@"NSString",&,N,V_watchBundleIdentifier
hasIconDigest
T@"NSData",&,N,V_iconDigest
%@.%@.idsQueue
com.apple.private.alloy.mediaremote
@"NSString"8@?0B4
ID: %@, QueueOne: %@, BypassDuet: %@, FireAndForget: %@, ForceLocal: YES, %zd byte payload
an UNHANDLED
T@"<NMRIDSMessageCenterDelegate>",W,N,V_delegate
messageType
TS,N,V_messageType
target
T@,W,N,V_target
action
T:,N,V_action
NMRIDSMessageTypeUnknown
NMRIDSMessageTypeMediaRemoteCommandRequest
NMRIDSMessageTypeMediaRemoteCommandResponse
NMRIDSMessageTypeMediaRemoteGetState
NMRIDSMessageTypeMediaRemoteSetState
NMRIDSMessageTypeMediaRemoteGetArtwork
NMRIDSMessageTypeMediaRemoteSetArtwork
NMRIDSMessageTypeGetCloudAvailability
NMRIDSMessageTypeSetCloudAvailability
NMRIDSMessageTypeGetSpecializedQueueInfo
NMRIDSMessageTypeSetSpecializedQueueInfo
NMRIDSMessageType(%zd)
handlerReturnStatus
hasErrorCode
TI,N,V_errorCode
handlerReturnStatusCount
T^I,R,N
NMRAugmentedNowPlayingInfoArtworkDataDigest
NMRAugmentedNowPlayingInfoCompanionItemPersistentID
NMRAugmentedNowPlayingInfoAlbumPersistentID
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
alloc
init
setIdentifier:
setMetadata:
class
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasIdentifier
hasMetadata
readFrom:
writeTo:
copyTo:
.cxx_destruct
identifier
metadata
_identifier
_metadata
numberWithDouble:
setTimestamp:
setHasTimestamp:
hasTimestamp
timestamp
_timestamp
_has
numberWithInt:
setPayload:
setDigest:
setNowPlayingInfo:
setApplicationInfo:
setSupportedCommands:
setPlaybackQueue:
setState:
setHasState:
hasState
hasPayload
hasDigest
hasNowPlayingInfo
hasApplicationInfo
hasSupportedCommands
hasPlaybackQueue
state
payload
digest
nowPlayingInfo
applicationInfo
supportedCommands
playbackQueue
_applicationInfo
_digest
_nowPlayingInfo
_payload
_playbackQueue
_state
_supportedCommands
dealloc
exceptionWithName:reason:userInfo:
raise
numberWithBool:
numberWithFloat:
preferredIntervalsCount
clearPreferredIntervals
preferredIntervalAtIndex:
addPreferredInterval:
setLocalizedTitle:
supportedRatesCount
clearSupportedRates
supportedRateAtIndex:
addSupportedRate:
setLocalizedShortTitle:
command
setCommand:
setHasCommand:
hasCommand
commandAsString:
StringAsCommand:
setEnabled:
setHasEnabled:
hasEnabled
setActive:
setHasActive:
hasActive
preferredIntervals
setPreferredIntervals:count:
hasLocalizedTitle
hasLocalizedShortTitle
setMinimumRating:
setHasMinimumRating:
hasMinimumRating
setMaximumRating:
setHasMaximumRating:
hasMaximumRating
supportedRates
setSupportedRates:count:
repeatMode
setRepeatMode:
setHasRepeatMode:
hasRepeatMode
repeatModeAsString:
StringAsRepeatMode:
shuffleMode
setShuffleMode:
setHasShuffleMode:
hasShuffleMode
shuffleModeAsString:
StringAsShuffleMode:
setPresentationStyle:
setHasPresentationStyle:
hasPresentationStyle
enabled
active
localizedTitle
localizedShortTitle
minimumRating
maximumRating
presentationStyle
_preferredIntervals
_supportedRates
_command
_localizedShortTitle
_localizedTitle
_maximumRating
_minimumRating
_presentationStyle
_repeatMode
_shuffleMode
_active
_enabled
isEqualToString:
setJpegData:
setOriginalDigest:
hasJpegData
hasOriginalDigest
jpegData
originalDigest
_jpegData
_originalDigest
companionBundleIdentifier
length
setCompanionBundleIdentifier:
watchBundleIdentifier
setWatchBundleIdentifier:
localizedDisplayName
setLocalizedDisplayName:
playbackState
setPlaybackState:
iconDigest
setIconDigest:
initWithData:
data
initWithProtobufData:
protobufData
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
_protobuf
initWithMachServiceName:options:
refreshMediaRemoteStateIfNecessary
sendMediaRemoteCommand:withCommandOptions:commandResultHandler:
prewarmCompanionSystemMusicApp
fetchCompanionCloudAvailabilityWithCompletionHandler:
fetchCompanionSpecializedQueueInfoWithCompletionHandler:
fetchTrackAssetAvailabilityForTrackPID:completionHandler:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
resume
_proxy
localizedDescription
remoteObjectProxyWithErrorHandler:
sharedClient
_serverConnection
_serverConnectionQueue
mutableCopy
setObject:forKeyedSubscript:
numberWithUnsignedInt:
objectForKeyedSubscript:
unsignedIntValue
dictionaryWithObjects:forKeys:count:
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
removeAllObjects
addObject:
count
objectAtIndex:
initWithCapacity:
addSupportedCommand:
supportedCommandsCount
clearSupportedCommands
supportedCommandAtIndex:
supportedCommandType
doubleValue
boolValue
floatValue
intValue
arrayWithCapacity:
protobufFromDictionary:
dictionaryFromProtobuf:
externalPlayerCommand
negative
mediaType
playbackPosition
playbackRate
skipInterval
sourceID
radioStationHash
radioStationID
systemAppPlaybackQueueData
shouldOverrideManuallyCuratedQueue
trackID
contentItemID
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
rating
contextID
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
setDictionaryKeyToProtobufKeyMapping:
setProtobufClass:
setDictionaryValueToProtobufValueTransformer:
setProtobufValueToDictionaryValueTransformer:
setIconData:
setBundleID:
hasIconData
hasBundleID
iconData
bundleID
_bundleID
_iconData
protobufDataFromDictionary:
dictionaryFromProtobufData:
allKeys
album
artist
duration
elapsedTime
isExplicitTrack
title
uniqueIdentifier
isMusicApp
isAlwaysLive
radioStationName
radioStationIdentifier
isAdvertisement
storeAdamID
artworkDataDigest
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
unsignedLongLongValue
validateUniqueIdentifier:error:
setTitle:
setArtist:
setAlbum:
hasTitle
hasArtist
hasAlbum
setDuration:
setHasDuration:
hasDuration
_duration
_album
_artist
_title
_initWithErrorCode:handlerReturnStatuses:
setErrorCode:
addHandlerReturnStatus:
errorCode
array
handlerReturnStatusCount
handlerReturnStatusAtIndex:
date
messageWithErrorCode:handlerReturnStatuses:
handlerReturnStatuses
serializationDate
setHasProperNetworkConditionsToPlayMedia:
setHasHasProperNetworkConditionsToPlayMedia:
hasHasProperNetworkConditionsToPlayMedia
setCanShowCloudMusic:
setHasCanShowCloudMusic:
hasCanShowCloudMusic
hasProperNetworkConditionsToPlayMedia
canShowCloudMusic
_canShowCloudMusic
_hasProperNetworkConditionsToPlayMedia
setWidth:
setHasWidth:
hasWidth
setHeight:
setHasHeight:
hasHeight
width
height
_height
_width
integerValue
setQueueType:
setRadioStationID:
addSpecializedQueues:
enumerateKeysAndObjectsUsingBlock:
specializedQueues
queueType
hasRadioStationID
timeIntervalSinceDate:
setHasQueueType:
hasQueueType
_queueType
_radioStationID
initWithCommand:options:
setOptions:
options
messageWithCommand:options:
numberWithUnsignedLongLong:
numberWithLongLong:
setSourceID:
setMediaType:
setRadioStationHash:
setSystemAppPlaybackQueueData:
setDestinationAppDisplayID:
setContextID:
setStationURL:
setContentItemID:
hasSourceID
hasMediaType
setExternalPlayerCommand:
setHasExternalPlayerCommand:
hasExternalPlayerCommand
setSkipInterval:
setHasSkipInterval:
hasSkipInterval
setPlaybackRate:
setHasPlaybackRate:
hasPlaybackRate
setRating:
setHasRating:
hasRating
setNegative:
setHasNegative:
hasNegative
setPlaybackPosition:
setHasPlaybackPosition:
hasPlaybackPosition
hasContextID
setTrackID:
setHasTrackID:
hasTrackID
setHasRadioStationID:
hasRadioStationHash
hasSystemAppPlaybackQueueData
hasDestinationAppDisplayID
setSendOptions:
setHasSendOptions:
hasSendOptions
setRequestDefermentToPlaybackQueuePosition:
setHasRequestDefermentToPlaybackQueuePosition:
hasRequestDefermentToPlaybackQueuePosition
setShouldOverrideManuallyCuratedQueue:
setHasShouldOverrideManuallyCuratedQueue:
hasShouldOverrideManuallyCuratedQueue
hasStationURL
setShouldBeginRadioPlayback:
setHasShouldBeginRadioPlayback:
hasShouldBeginRadioPlayback
setPlaybackQueueInsertionPosition:
setHasPlaybackQueueInsertionPosition:
hasPlaybackQueueInsertionPosition
hasContentItemID
_playbackPosition
_trackID
_contentItemID
_contextID
_destinationAppDisplayID
_mediaType
_playbackQueueInsertionPosition
_playbackRate
_radioStationHash
_rating
_sendOptions
_skipInterval
_sourceID
_stationURL
_systemAppPlaybackQueueData
_externalPlayerCommand
_negative
_requestDefermentToPlaybackQueuePosition
_shouldBeginRadioPlayback
_shouldOverrideManuallyCuratedQueue
addContentItem:
contentItemsCount
clearContentItems
contentItemAtIndex:
contentItemType
setLocation:
setHasLocation:
hasLocation
location
contentItems
setContentItems:
_contentItems
_location
setRadioStationName:
setArtworkDataDigest:
setElapsedTime:
setHasElapsedTime:
hasElapsedTime
setUniqueIdentifier:
setHasUniqueIdentifier:
hasUniqueIdentifier
setIsExplicitTrack:
setHasIsExplicitTrack:
hasIsExplicitTrack
setIsMusicApp:
setHasIsMusicApp:
hasIsMusicApp
setRadioStationIdentifier:
setHasRadioStationIdentifier:
hasRadioStationIdentifier
hasRadioStationName
hasArtworkDataDigest
setIsAlwaysLive:
setHasIsAlwaysLive:
hasIsAlwaysLive
setIsAdvertisement:
setHasIsAdvertisement:
hasIsAdvertisement
setStoreAdamID:
setHasStoreAdamID:
hasStoreAdamID
_elapsedTime
_radioStationIdentifier
_storeAdamID
_uniqueIdentifier
_artworkDataDigest
_radioStationName
_isAdvertisement
_isAlwaysLive
_isExplicitTrack
_isMusicApp
substringToIndex:
uppercaseString
stringByReplacingCharactersInRange:withString:
valueForKey:
methodForSelector:
nmr_valueForPotentiallyUndefinedKey:
validateValue:forKey:error:
setValue:forKey:
dictionaryKeyToProtobufKeyMapping
protobufClass
dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
_protobufKeyToDictionaryKeyMapping
_dictionaryKeyToProtobufKeyMapping
_protobufClass
_dictionaryValueToProtobufValueTransformer
_protobufValueToDictionaryValueTransformer
_initWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:
messageWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:
nowPlayingInfoData
applicationInfoData
supportedCommandsData
playbackQueueData
_initWithJPEGArtwork:originalDigest:
messageWithJPEGArtwork:originalDigest:
jpegArtwork
_initWithIcon:originalDigest:bundleID:
messageWithIcon:originalDigest:bundleID:
icon
_initWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:
setNowPlayingInfoDigest:
setApplicationInfoDigest:
setSupportedCommandsDigest:
setPlaybackQueueDigest:
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
messageWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:
_initWithIconWidth:height:bundleID:
messageWithIconWidth:height:bundleID:
specializedQueuesCount
clearSpecializedQueues
specializedQueuesAtIndex:
specializedQueuesType
setSpecializedQueues:
_specializedQueues
_refreshCurrentPlaybackQueueFromMediaRemote
_mediaRemotePlaybackQueueWithRange:includeMetadata:
objectAtIndexedSubscript:
containsObject:
enumerateObjectsUsingBlock:
_metadataForItemWithIdentifier:
playbackQueueDidChange:
playbackQueue:contentItemsDidChange:
observedRange
_needsUpdateForMediaRemoteQueue:
_updateWithMediaRemoteQueue:metadataQueue:
_rangeOfItemsNeedingMetadataForMediaRemoteQueue:
_itemWithIdentifier:
_needsMetadataForMediaRemoteItem:
beginObservingMediaRemotePlaybackQueueForOrigin:
fullPlaybackQueueData
copyFullMediaRemotePlaybackQueueIncludingMetadata:
copyMediaRemotePlaybackQueueWithRange:includeMetadata:
deltaPlaybackQueueDataFromPreviousData:invalidatedMetadataIdentifiers:
updateWithData:
_updateMetadataWithMediaRemoteItems:
delegate
setDelegate:
setObservedRange:
_currentPlaybackQueue
_mediaRemoteOrigin
_observingMediaRemote
_serialQueue
_delegate
_observedRange
appendString:
hasOptions
_options
setKnownDigest:
hasKnownDigest
hasNowPlayingInfoDigest
hasApplicationInfoDigest
hasSupportedCommandsDigest
hasPlaybackQueueDigest
knownDigest
_applicationInfoDigest
_knownDigest
_nowPlayingInfoDigest
_playbackQueueDigest
_supportedCommandsDigest
bytes
dataWithBytes:length:
isEqualToData:
hasCompanionBundleIdentifier
hasLocalizedDisplayName
setHasPlaybackState:
hasPlaybackState
hasWatchBundleIdentifier
hasIconDigest
_companionBundleIdentifier
_iconDigest
_localizedDisplayName
_playbackState
_watchBundleIdentifier
setTarget:
setAction:
setMessageType:
numberWithUnsignedShort:
mainBundle
bundleIdentifier
UTF8String
initWithService:
addDelegate:queue:
_sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:isResponse:additionalOptions:resultingMessageIdentifier:error:
context
outgoingResponseIdentifier
initWithProtobufData:type:isResponse:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
type
target
action
messageCenter:messageWithIdentifier:didSendWithSuccess:error:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setMessageHandlerTarget:action:forIncomingMessagesOfType:
startHandlingMessages
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:expectReply:queueOneIdentifier:resultingMessageIdentifier:error:
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:inReplyTo:resultingMessageIdentifier:error:
_idsQueue
_idsService
_messageHandlers
messageType
_messageType
_target
_action
clearHandlerReturnStatus
setHasErrorCode:
hasErrorCode
handlerReturnStatus
setHandlerReturnStatus:count:
_handlerReturnStatus
_errorCode
_NMRContentItem
NSCopying
_NMRMediaRemoteGetArtworkMessage
_NMRMediaRemoteSetStateMessageProfobuf
_NMRCommandInfoProtobuf
_NMRMediaRemoteSetArtworkMessage
NMRNowPlayingApplicationInfo
NMRMediaRemoteProtobufCodable
NSObject
NMRServiceInterface
_NMRClient
_NMRSupportedCommandsProtobuf
_NMRMediaRemoteSetIconMessage
Validation
_NMRContentItemMetadata
NMRSendCommandResultMessage
_NMRCloudAvailabilityProtobuf
_NMRMediaRemoteGetIconMessage
_NMRSpecializedQueueProtobuf
NMRCloudAvailabilityMessage
NMRSendCommandMessage
_NMRCommandOptionsProtobuf
_NMRPlaybackQueue
_NMRNowPlayingInfoProtobuf
NMRAdditions
NMRProtobufSerialization
NMRMediaRemoteSetStateMessage
NMRMediaRemoteSetArtworkMessage
NMRMediaRemoteSetIconMessage
NMRMediaRemoteGetStateMessage
NMRMediaRemoteGetArtworkMessage
NMRMediaRemoteGetIconMessage
_NMRSpecializedQueueInfoProtobuf
NMRPlaybackQueue
_NMRSendCommandMessageProtobuf
_NMRMediaRemoteGetStateMessageProfobuf
_NMRNowPlayingApplicationStateProtobuf
NMRIDSMessageCenter
IDSServiceDelegate
_NMRIDSMessageHandler
_NMRSendCommandResultMessageProtobuf
@12@0:4^{_NSZone=}8
B8@0:4
@8@0:4
B12@0:4@8
v12@0:4@8
I8@0:4
v8@0:4
@"NSString"
@"_NMRContentItemMetadata"
v16@0:4d8
v12@0:4B8
d8@0:4
{?="timestamp"b1}
v12@0:4i8
i8@0:4
@"NSData"
{?="timestamp"b1"state"b1}
@12@0:4i8
i12@0:4@8
^d8@0:4
d12@0:4I8
v16@0:4^d8I12
v12@0:4f8
^f8@0:4
f12@0:4I8
v16@0:4^f8I12
f8@0:4
{?="list"^d"count"I"size"I}
{?="list"^f"count"I"size"I}
{?="command"b1"maximumRating"b1"minimumRating"b1"presentationStyle"b1"repeatMode"b1"shuffleMode"b1"active"b1"enabled"b1}
@12@0:4@8
@12@0:4@"NSData"8
@"NSData"8@0:4
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v12@0:4I8
@"_NMRNowPlayingApplicationStateProtobuf"
v20@0:4I8@12@?16
v20@0:4I8@"NSDictionary"12@?<v@?@"NSDictionary">16
v12@0:4@?8
v12@0:4@?<v@?@"NSData">8
v16@0:4@8@?12
v16@0:4@"NSNumber"8@?<v@?i>12
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@12@0:4I8
@"NSMutableArray"
B16@0:4^@8^@12
{?="duration"b1}
@16@0:4I8@12
@"_NMRSendCommandResultMessageProtobuf"
{?="canShowCloudMusic"b1"hasProperNetworkConditionsToPlayMedia"b1}
{?="height"b1"timestamp"b1"width"b1}
{?="queueType"b1}
@"_NMRCloudAvailabilityProtobuf"
@"_NMRSendCommandMessageProtobuf"
v16@0:4Q8
v16@0:4q8
Q8@0:4
q8@0:4
{?="playbackPosition"b1"radioStationID"b1"trackID"b1"playbackQueueInsertionPosition"b1"playbackRate"b1"rating"b1"repeatMode"b1"sendOptions"b1"shuffleMode"b1"skipInterval"b1"externalPlayerCommand"b1"negative"b1"requestDefermentToPlaybackQueuePosition"b1"shouldBeginRadioPlayback"b1"shouldOverrideManuallyCuratedQueue"b1}
{?="location"b1}
{?="duration"b1"elapsedTime"b1"radioStationIdentifier"b1"storeAdamID"b1"timestamp"b1"uniqueIdentifier"b1"playbackRate"b1"repeatMode"b1"shuffleMode"b1"isAdvertisement"b1"isAlwaysLive"b1"isExplicitTrack"b1"isMusicApp"b1}
v12@0:4#8
@?8@0:4
@"NSDictionary"
@24@0:4@8@12@16@20
@"_NMRMediaRemoteSetStateMessageProfobuf"
@16@0:4@8@12
@"_NMRMediaRemoteSetArtworkMessage"
@20@0:4@8@12@16
@"_NMRMediaRemoteSetIconMessage"
@"_NMRMediaRemoteGetStateMessageProfobuf"
@"_NMRMediaRemoteGetArtworkMessage"
@28@0:4d8d16@24
@"_NMRMediaRemoteGetIconMessage"
v12@0:4^{_MROrigin=}8
^v12@0:4B8
^v20@0:4{?=ii}8B16
v16@0:4^v8^v12
{?=ii}12@0:4^v8
B12@0:4^v8
B12@0:4^{_MRContentItem=}8
{?=ii}8@0:4
v16@0:4{?=ii}8
@"_NMRPlaybackQueue"
^{_MROrigin=}
@"<NMRPlaybackQueueDelegate>"
{?="location"i"length"i}
@"_NMRCommandOptionsProtobuf"
{?="timestamp"b1"command"b1}
{?="playbackState"b1}
v28@0:4@8@12@16@20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@8@12@16@20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@8@12
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@8@12@16B20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@8@12@16B20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@8@12@16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@"IDSService"8
v20@0:4@8@12@?16
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
v20@0:4@8:12S16
B52@0:4@8S12I16d20B28B32B36@40^@44^@48
B48@0:4@8S12I16d20B28B32@36^@40^@44
@"IDSService"
@"NSMutableDictionary"
@"<NMRIDSMessageCenterDelegate>"
S8@0:4
v12@0:4S8
:8@0:4
v12@0:4:8
^I8@0:4
I12@0:4I8
v16@0:4^I8I12
{?="list"^I"count"I"size"I}
{?="timestamp"b1"errorCode"b1}
Failed to get remote object proxy (%@).
Encountered unknown protobuf key (%@) while converting to a dictionary; skipping.
Building delta queue from previous data
Previous data empty, serialize the full queue with all metadata
Location different, include new items in delta
Count different, include new items in delta
Found an item that didn't match up (index %zd), include new items in delta
Found an item missing metadata (index %zd)
Found an item with invalidated metadata (index %zd)
Nothing changed, delta queue is empty
Built delta queue: %@
Got a new queue item that didn't include metadata, and we don't have any cached metadata for this item, identifier: %@
Updated with new data, queue is now: %@
Requesting playback queue information for range: %ld -> %ld
Playback queue hasn't changed, no need to schedule an update
Got new queue with range: %ld -> %ld
Queue changed, range of items needing metadata is %ld -> %ld
Got new empty queue
Requested queue of range: %ld -> %ld
Result indices are %zd through %zd
Created queue: %@
Updated with new mediaRemote info, queue is now %@
No need to update content item (identifier: %@), not currently in queue
Successfully requested delivery of %@ message (%@).
Failed to request delivery of %@ message (%@) with error "%@".
Received %@ %@ message (ID: %@, %zd byte payload).
Successfully sent message (ID: %@).
Failed to send message (ID: %@) with error "%@".
zPLR
zPLR
