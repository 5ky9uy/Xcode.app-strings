alloc
init
copy
_setFocusedBundleIDs:forClient:
addObjectsFromArray:
enumerateKeysAndObjectsUsingBlock:
allObjects
clientDictionary
setObject:forKeyedSubscript:
removeObjectForKey:
carouselDuetSession
setFocusedBundleIDs:forClient:
_allFocusedBundleIDs
.cxx_destruct
queue
setQueue:
setClientDictionary:
_queue
_clientDictionary
isDocked
createDockStatusViewController
setProvider:
provider
observer
description
className
unsafe_observer
stringWithFormat:
setObserver:
setUnsafe_observer:
setClassName:
_observer
_unsafe_observer
_className
array
addObject:
enumerateObjectsUsingBlock:
componentsJoinedByString:
isSleepImminent
lock
count
_startObserving
class
unlock
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
mutableCopy
lastObject
removeLastObject
removeObject:
canSleep
sleepImminent
systemWake
_observeWithAction:
_canSleep
_sleepImminent
_systemWake
initWithQueue:canSleepBlock:sleepImminentBlock:wakeBlock:
sharedInstance
addObserver:
removeObserver:
_stopObserving
_lock
_observers
_observersToNotifyArray
_systemSleepObserver
initWithQueue:canSleepBlock:sleepImminentBlock:willWakeBlock:wakeBlock:
_startPowerMonitoring
_stopPowerMonitoring
dealloc
setSleepImminent:
setSleepImminentAndCallBlocksIfNecessary:
_systemPowerChanged:notificationID:
canSleepBlock
setCanSleepBlock:
sleepImminentBlock
setSleepImminentBlock:
wakeBlock
setWakeBlock:
willWakeBlock
_systemPowerConnection
_systemPowerPort
_systemPowerNotifier
_canSleepBlock
_sleepImminentBlock
_wakeBlock
_willWakeBlock
initWithOptions:capacity:
sharedConnection
defaultCenter
_restrictionsDidChange
addObserver:selector:name:object:
_reloadRestrictions:
containsObject:
restrictedApps
restrictedApplications:didChangeRestricted:unrestricted:
_reloadRestrictionsOnMainQueue
type
ratingRank
applicationRestrictionsManager
isApplicationRestricted:
setApplication:restricted:
_checkApplication:restrictedByMaxRating:
bundleIdentifier
_applicationBundle:setRestricted:newlyRestrictedBlock:newlyUnrestrictedBlock:
integerValue
allApplicationsInfo
countByEnumeratingWithState:objects:count:
applicationProxyForIdentifier:placeholder:
isRestricted
isRemovedSystemApp
minusSet:
effectiveValueForSetting:
_filterRestrictedBundleIDsByMaxRatingFromSet:oldMaxRating:newMaxRating:
_filterRestrictedBundleIDsFromSet:
_notifyObserversDidChangeRestricted:unrestricted:
applicationInfoWithBundleIdentifier:
_applicationInfo:setRestrictedByMaxRating:newlyRestrictedBlock:newlyUnrestrictedBlock:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
setApplicationRestrictionsManager:
installedApplicationsDidChange:removed:modified:
cameraBundleIdentifier
setCameraBundleIdentifier:
_restrictedApps
_maxRatingNumber
_applicationRestrictionsManager
_cameraBundleIdentifier
initWithIdentifier:description:timeout:
releaseAssertion
isAsserted
takeAssertion
_identifier
_description
_timeout
_count
initWithFireInterval:leewayInterval:serviceIdentifier:queue:handler:
schedule
initWithFireInterval:leewayInterval:shouldWakeDevice:serviceIdentifier:queue:handler:
initWithIdentifier:leeway:
_fireTimer
cancel
_calculatedWallClockFireTime
scheduleInSeconds:
_scheduleWithFireTime:wallClockFireTime:rawScheduleTime:rawScheduleDelta:
timeIntervalSinceReferenceDate
timeIntervalSince1970
isScheduled
cancelWake
scheduleWithFireTime:
_scheduleWake
_unschedule
_relinquishPowerAssertion
_rawTimeIntervalRemaining
_rawTimeRemaining
scheduleWake:
_rescheduleAfterSystemWake
initWithAssertionType:assertionName:
take
relinquish
_manuallyFireTimer
_takePowerAssertion
scheduledTimerWithFireInterval:leewayInterval:serviceIdentifier:queue:handler:
scheduleWithDate:
timeRemaining
setScheduled:
fireInterval
setFireInterval:
leewayInterval
setLeewayInterval:
shouldWakeDevice
setShouldWakeDevice:
serviceIdentifier
setServiceIdentifier:
handler
setHandler:
_dispatchTimer
_schedulingMutex
_scheduledWake
_powerAssertion
_wallClockFireTime
_rawScheduleTime
_rawScheduleDelta
_powerAssertionTaken
_scheduledWithWallTime
_scheduled
_shouldWakeDevice
_serviceIdentifier
_handler
_fireInterval
_leewayInterval
scheduleSoftWake:
cancelSoftWake
sharedScheduler
initWithAssertionType:assertionName:timeout:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
numberWithInt:
_assertionID
_assertionType
_assertionName
_adjustAssertionCountWithIncrement:
workLoop
canClaim
claimWithAssertionType:assertionName:
releaseClaim
thread
mutex
condition
_assertionCount
_assertionDesired
_claimState
_thread
_condition
_mutex
isInternalInstall
arrayWithCapacity:
assertionCount
presentThreadErrorDialogWithThreadCount:assertionCount:threadsDescription:
setPoolDelegate:
claimThreadWithAssertionType:assertionName:
currentDevice
puic_deviceVariant
edgeInsets
_edgeInsets
backlightProviderIsScreenOn
backlightProviderWillScreenBeOn
backlightProviderIsScreenBlanked
screenOn
willBeOn
screenBlanked
setOverride:
setPriority:
overriderWithOverride:andPriority:
priority
override
_priority
_override
indexOfObject:inSortedRange:options:usingComparator:
insertObject:atIndex:
removeObjectAtIndex:
reverseObjectEnumerator
preHandleButton:eventType:firstDownTime:lastUpTime:
keyWindow
_firstResponderForWindow:
_walkResponderChainToHandleButton:eventType:firstDownTime:lastUpTime:firstResponder:
postHandleButton:eventType:firstDownTime:lastUpTime:
firstResponder
rootViewController
becomeFirstResponder
handleButton:eventType:firstDownTime:lastUpTime:
handleButton:eventType:
nextResponder
addButtonHandlerOverride:withPriority:
removeButtonHandlerOverride:
postCSLButton:eventType:firstDownTime:lastUpTime:
dateWithTimeIntervalSinceReferenceDate:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
setUnitsStyle:
setAllowedUnits:
stringFromDate:
date
stringFromDate:toDate:
_cancelWake
identifier
setIdentifier:
leeway
setLeeway:
_wakeDate
_leeway
initWithName:
newLogoHandle:
setLogoHandleVendor:
assertionWithName:
_logoHandle
navigateToClockAnimated:
_source
_didSuspend
_timeoutAssertion
initWithIdentifier:timeout:
_timeoutTimer
v4@?0
com.apple.Carousel.CSLPIDuetSession
v16@?0@"NSArray"4@"NSArray"8^B12
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
clientDictionary
T@"NSMutableDictionary",&,N,V_clientDictionary
CSLPIDockDidDockNotification
CSLPIDockDidUndockNotification
<%@, observer=%@, original=<%@: 0x%lx>>
<nil>
observer
T@"<CSLPISystemSleepGlobalObserverObserver>",W,N,V_observer
unsafe_observer
T@,N,V_unsafe_observer
className
T@"NSString",C,N,V_className
v16@?0@4I8^B12
%@ :
B16@?0@"CSLPIWeakSystemSleepObserver"4I8^B12
v16@?0@"NSMutableArray"4I8^B12
B4@?0
sleepImminent
TB,R,GisSleepImminent
-[CSLPISystemSleepObserver init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CarouselFrameworks_Sim/Carousel-605.8.11/CarouselPlugins/Timer/CSLPISystemSleepObserver.m
false
CSLPISystemSleepObserver-IOPowerManagement
TB,GisSleepImminent,V_sleepImminent
canSleepBlock
T@?,C,N,V_canSleepBlock
sleepImminentBlock
T@?,C,N,V_sleepImminentBlock
wakeBlock
T@?,C,N,V_wakeBlock
willWakeBlock
T@?,R,N,V_willWakeBlock
v8@?0@"NSString"4
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
applicationRestrictionsManager
T@"<CSLApplicationRestrictionsManagerProtocol>",W,N,V_applicationRestrictionsManager
cameraBundleIdentifier
T@"NSString",&,N,V_cameraBundleIdentifier
restrictedApps
T@"NSSet",R,N
-[CSLPIRecursivePreventSleepAssertion init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CarouselFrameworks_Sim/Carousel-605.8.11/CarouselPlugins/Power/CSLPIRecursivePreventSleepAssertion.m
asserted
TB,R,N,GisAsserted
-[CSLPITimer initWithFireInterval:leewayInterval:shouldWakeDevice:serviceIdentifier:queue:handler:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CarouselFrameworks_Sim/Carousel-605.8.11/CarouselPlugins/Timer/CSLPITimer.m
serviceIdentifier != nil
handler != nil
-[CSLPITimer init]
<%@: %@ %@ %@, int:%0.1fs leeway:%.1fs>
wallclock 
NoIdleSleepAssertion
fireInterval
Td,N,V_fireInterval
leewayInterval
Td,N,V_leewayInterval
shouldWakeDevice
TB,N,V_shouldWakeDevice
serviceIdentifier
T@"NSString",C,N,V_serviceIdentifier
handler
T@?,C,N,V_handler
scheduled
TB,N,GisScheduled,V_scheduled
CSLPIMedicalIDButtonPressed
CSLPIMedicalIDStayOnKey
AssertType
AssertName
TimeoutSeconds
TimeoutAction
TimeoutActionRelease
com.apple.Carousel.CSLPITimedPowerAssertionRootQueue
<thread %p>: n=%@ s=%d
power_assertion_worker_thread
-[CSLPIPowerAssertionThread releaseClaim]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CarouselFrameworks_Sim/Carousel-605.8.11/CarouselPlugins/Power/CSLPIBalancedPowerAssertion.m
_claimState == ClaimState_Claimed
thread
T^{_opaque_pthread_t=l^{__darwin_pthread_handler_rec}[4088c]},R,N,V_thread
mutex
T{_opaque_pthread_mutex_t=l[40c]},R,N,V_mutex
condition
T{_opaque_pthread_cond_t=l[24c]},R,N,V_condition
-[CSLPIBalancedPowerAssertion initWithAssertionType:assertionName:]
assertionType != NULL
assertionName != NULL
edgeInsets
T{UIEdgeInsets=ffff},R,N,V_edgeInsets
CSLPIBacklightWillTurnOn
CSLPIBacklightDidTurnOn
CSLPIBacklightWillTurnOff
CSLPIBacklightDidTurnOff
priority
Tf,N,V_priority
override
T@"<CSLPIButtonHandlerOverride>",W,N,V_override
i12@?0@"CSLPIButtonHandlerOverrider"4@"CSLPIButtonHandlerOverrider"8
v16@?0@"CSLPIButtonHandlerOverrider"4I8^B12
success
FAILURE
en_US_POSIX
HH:mm:ss MM/dd
%@ (in %@)
-[CSLPIScheduledSystemWake init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CarouselFrameworks_Sim/Carousel-605.8.11/CarouselPlugins/Power/CSLPIScheduledSystemWake.m
%@ wake at %@ with %ld leeway
<%@: %@>
identifier
T@"NSString",C,N,V_identifier
leeway
Ti,N,V_leeway
TB,R,N,GisScheduled
-[CSLPIDispatchTimer init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CarouselFrameworks_Sim/Carousel-605.8.11/CarouselPlugins/Timer/CSLPIDispatchTimer.m
timer: %@, %.2f-%.2f seconds
-[CSLPIRecursiveSystemActivityAssertion init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CarouselFrameworks_Sim/Carousel-605.8.11/CarouselPlugins/Power/CSLPIRecursiveSystemActivityAssertion.m
CSLPIDuetSession
CSLPIDock
CSLPIWeakSystemSleepObserver
CSLPISystemSleepGlobalObserver
CSLPISystemSleepObserver
CSLPIRestrictedApplications
MCProfileConnectionObserver
NSObject
CSLPIRecursivePreventSleepAssertion
CSLPITimer
CSLPISystemSleepGlobalObserverObserver
CSLPISoftWakeScheduler
CSLPISoftWakeSchedulerProtocol
CSLPIMedicalID
CSLPITimedPowerAssertion
CSLPIPowerAssertionThread
CSLPIPowerAssertionThreadPool
CSLPIBalancedPowerAssertion
CSLPIControlCenterPageLayoutAttributes
CSLPIBacklight
CSLPIButtonHandlerOverrider
CSLPIButtonHandler
CSLPIScheduledSystemWake
CSLPILogoAssertion
CSLPIDispatchTimer
CSLPIRecursiveSystemActivityAssertion
@8@0:4
v16@0:4@8@12
v8@0:4
v12@0:4@8
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
B8@0:4
@"<CSLPISystemSleepGlobalObserverObserver>"
@"NSString"
B12@0:4I8
@"NSRecursiveLock"
@"NSMutableArray"
@"CSLPISystemSleepObserver"
@24@0:4@8@?12@?16@?20
@28@0:4@8@?12@?16@?20@?24
v12@0:4B8
v16@0:4I8^v12
@?8@0:4
v12@0:4@?8
^{IONotificationPort=}
v16@0:4@"MCProfileConnection"8@"NSDictionary"12
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
B16@0:4@8i12
B24@0:4@8B12@?16@?20
B24@0:4@8i12@?16@?20
v20@0:4@8@12@16
@"NSHashTable"
@"NSMutableSet"
@"NSNumber"
@"<CSLApplicationRestrictionsManagerProtocol>"
@24@0:4@8@12d16
@36@0:4d8d16@24@28@?32
@40@0:4d8d16B24@28@32@?36
v16@0:4d8
v40@0:4Q8d16Q24Q32
d8@0:4
Q8@0:4
@"CSLPIDispatchTimer"
{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}
@"CSLPIScheduledSystemWake"
@"CSLPIBalancedPowerAssertion"
v12@0:4@"NSDate"8
@24@0:4^{__CFString=}8^{__CFString=}12d16
^{__CFString=}
B16@0:4^{__CFString=}8^{__CFString=}12
^{_opaque_pthread_t=l^{__darwin_pthread_handler_rec}[4088c]}8@0:4
{_opaque_pthread_mutex_t=l[40c]}8@0:4
{_opaque_pthread_cond_t=l[24c]}8@0:4
^{_opaque_pthread_t=l^{__darwin_pthread_handler_rec}[4088c]}
{_opaque_pthread_cond_t="__sig"l"__opaque"[24c]}
@16@0:4^{__CFString=}8^{__CFString=}12
i8@0:4
@"CSLPIPowerAssertionThread"
{UIEdgeInsets=ffff}8@0:4
{UIEdgeInsets="top"f"left"f"bottom"f"right"f}
@16@0:4@8f12
f8@0:4
v12@0:4f8
@"<CSLPIButtonHandlerOverride>"
v16@0:4@8f12
v32@0:4I8I12Q16Q24
@12@0:4@8
B36@0:4I8I12Q16Q24@32
@16@0:4@8i12
v12@0:4i8
@"NSDate"
@"CSLUILogoHandle"
v16@0:4Q8
@"NSObject<OS_dispatch_source>"
@20@0:4@8d12
sleep imminent (%@)
system wake (%@)
########## DBG_CODE: (%d)
Entering method
Reloading restrictions: No application manager set
Reloading restrictions: maxRankNumber %@
Reloading restrictions: appBundleIdentifier %@ isRestricted %s
Reloading restrictions: newlyRestrictedIdentifiers %@ newlyUnrestrictedIdentifiers %@
Max rating number: %@ added: %@ removed: %@ modified: %@
Modified appInfo %@
Notifying observers of change
No changes to notify about
%@ attempting to schedule timer %.2f seconds into the future (too far)
scheduling %@ %stimer at %@, leeway:%.1fs
%@ %stimer fired: scheduled %@, leeway:%.1fs
defering sleep: %@ at %@, leeway:%.1fs
Error creating power assertion %@; name=%@; type=%@
<%p> creating power assertion thread %d for "%@" (%d assertions) see <rdar://problem/27617702>
power assertion name length (%d) is more than %d characters: %s
button event not handled! button: %@, type: %@, firstResponder: %@
WORKAROUND: nil firstResponder, attempted to set to %@ (%@)
ERROR: nil firstResponder, nil rootViewController
%@ handled %@ %@
scheduling system wake: %@
canceling system wake: %@
zPLR
zPLR
zPLR
zPLR
