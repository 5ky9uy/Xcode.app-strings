alloc
init
objectForKeyedSubscript:
count
firstObject
addObject:
addObjectsFromArray:
arrayWithCapacity:
userInfo
achievementCompletionEventWithAchievement:
goalCompletionEventWithActivitySummary:
coalescedRequests:
coalescedNotificationEvents:withActivitySummary:
standardUserDefaults
boolForKey:
persistentDomainForName:
objectForKey:
boolValue
setObject:forKey:
archivedDataWithRootObject:
initForReadingWithData:
setRequiresSecureCoding:
class
decodeObjectOfClass:forKey:
removeObject:
countByEnumeratingWithState:objects:count:
showSedentaryAlertOfType:withTimeoutDate:withActiveHourCount:withTotalCount:experimentInstance:
hideSedentaryActivityAlert
showCoachingAlertRequests:
showAchievementDefinitionAlertForIdentifier:
fetchWellnessComplicationOnCurrentClockFaceWithCompletion:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
registerForActivityAlerts:notificationTypes:
unregisterForActivityAlerts:
.cxx_destruct
_sedentaryObservers
_coachingObservers
_achievementDefinitionAlertObservers
_carouselServiceObservers
_queue
registerForDaemonReady:
addSettingsObserver:
_setScheduledAlertDate:previouslySnoozed:
_nextFireDate
coachingSubmanagerDelegate
currentDate
deepBreathingSettingForKey:
doubleValue
_alertInterval
firstOnWristTodayDate
currentCalendar
_dateOfLastIntervalReset
laterDate:
dateByAddingTimeInterval:
compare:
component:fromDate:
isDate:inSameDayAsDate:
startOfDayForDate:
numberWithBool:
scheduleTaskForSubmanager:withIdentifier:atDate:
cancelScheduledTaskForSubmanager:withIdentifier:
_rescheduleAlert
submanagerIdentifier
requestWithSubmanagerIdentifier:userInfo:
setDelayable:
arrayWithObjects:count:
timeIntervalSinceReferenceDate
dictionaryWithObjects:forKeys:count:
_resetIntervalStartDate
actions
dismissReason
daemonReady:
settingsDidChange:
privacySettingsDidChange:
muteCoachingPreferenceSettingDidChange:
wristOnStateChangedTo:
coachingAlertRequestsForPollingReason:activityAlertsMuted:alertsEnabled:
coachingAlertRequestsWhenForcedWithArguments:
coachingAlertRequestsWereProcessed:acceptedRequests:
coachingAlertRequestDidCompleteWithResponse:
requiresMoveGoal
requiresCoachingConditionsOnRequests
setCoachingSubmanagerDelegate:
initWithHealthDaemon:bridgeSettings:
_healthDaemon
_bridgeSettings
initWithCategory:domainName:profile:
dictionary
setObject:forKeyedSubscript:
addEntriesFromDictionary:
copy
setDate:forKey:error:
dateForKey:error:
setData:forKey:error:
dataForKey:error:
setQuantity:unit:forKey:error:
quantityForKey:unit:error:
setNumber:forKey:error:
numberForKey:error:
setString:forKey:error:
stringForKey:error:
setValuesWithDictionary:error:
valuesForKeys:error:
allValuesWithError:
_dataStore
setUnderlyingQueue:
setDate:
queryActivityStartingFromDate:toDate:toQueue:withHandler:
numberOfSteps
setNumberOfRecentSteps:
queryPedometerDataFromDate:toDate:withHandler:
type
numberWithInt:
setAtHome:
setAtWork:
visits
numberWithUnsignedInt:
setLocationVisitCount:
fetchLocationOfInterestAtCurrentLocationWithHandler:
hk_error:format:
makeCoachingConditionWithMotionActivityManager:pedometer:routineGateway:notificationDate:nowDate:completion:
initWithHealthDaemon:bridgeSettings:dataLogger:
array
initWithCapacity:
_setNeedsPollForReason:
registerClientWithName:taskHandler:
addWristEventObserver:
unregisterClientWithName:
removeWristEventObserver:
healthDatabase
removeProtectedDataObserver:
currentActivitySummaryHelper
removeObserver:
removeSettingsObserver:
alertSuppressionService
unregisterAlertSuppressionObserver:
_unregisterForDataCollection
dealloc
date
activitySummary
setActivitySummary:
isEqualToString:
uuid
UUIDString
logCoachingResponse:
_setNeedsPollForReason:completion:
hk_error:description:
allValues
subarrayWithRange:
setForced:
_pollingQueue_updateCoachingConditionSynchronouslyIfNeeded
setCoachingCondition:
_coalesceAndAlertRequestsFromDictionary:
fetchActivityAlertSuppressionStateWithCompletion:
_pollingQueue_persistFutureScheduledRunDate:forTaskIdentifier:
setStartDate:
setEndDate:
addTask:withName:forClientNamed:
taskWithName:forClientNamed:
removeTaskWithName:forClientNamed:
_pollingQueue_removeFutureScheduledRunDateForTaskIdentifier:
mostRecentOnWristDate
_gizmoWristOnChangedTo:
updateFirstWristOnForDate:
_performScheduledRunIfNeededUponOnWrist
logWristOnNowIsFirst:
logWristOffNow
addProtectedDataObserver:
addObserver:
registerAlertSuppressionObserver:
_registerForDataCollection
isProtectedDataAvailable
_performScheduledRunIfNeededUponUnlock
quantityTypeForIdentifier:
primaryProfile
healthDataCollectionManager
_pertinentTypesForDataCollection
startDataCollectionForType:observer:collectionInterval:
stopDataCollectionForType:observer:
activitySummaryIndexForAggdRingCountReportingForDate:
_sendAggdYesterdayRingCompletionsForActivitySummaryIndex:
_activitySummaryQueue_sendAggdActivityIsSetupIfNeeded
_pollingQueue_needsPollForScheduledRun
_saveAggdRingCompletionsIfNeeded
hk_gregorianCalendarWithUTCTimeZone
dateByAddingUnit:value:toDate:options:
activeEnergyBurnedGoal
_isZero
temporaryProfile
initWithProfile:
activitySummariesWithPredicate:handler:
hk_isDatabaseAccessibilityError
_standHoursCompletionPercentage
_exerciseTimeCompletionPercentage
_activeEnergyCompletionPercentage
_deepBreathingDuration
secondUnit
doubleValueForUnit:
_isDataLoading
_performPollAfterMoveGoalCheckWithCompletion:
numberWithUnsignedInteger:
_pollingDelayForPollingReason:
_pollingQueue_performPollWithCompletion:isMoveGoalSet:
mutableCopy
removeObjectForKey:
enumerateKeysAndObjectsUsingBlock:
integerValue
_priorityForPollingReason:
sortedArrayUsingComparator:
wristState
removeAllObjects
allObjects
_sortedPollingReasonsByPriority:
unsignedIntegerValue
_pollingQueue_perform3StepHandshakeForPollingReason:moveGoalIsSet:activityAlertsMuted:
enumerateObjectsUsingBlock:
_pollingQueue_clearPersistedFutureScheduledRunDatesUpToDate:
fetchActivityAlertSuppressionStateForReason:completion:
timeIntervalSinceDate:
routineGateway
_pollingQueue_notifyFitnessFriendsAboutAlertRequests:
experimentalCondition
generateDailyProgressAlertExperimentInstance
setExperimentInstance:
experimentInstance
testShouldSkipDailyProgressAlert
logSkippedCoachingRequest:
userCharacteristicsManager
characteristicTypeForIdentifier:
userCharacteristicForType:error:
setWheelchairUser:
_attachActivitySummaryToRequests:
_attachIsWheelchairUserToRequests:
_filteredRequestsFromArray:
shouldDelayNotificationsUntilSettled
delayable
arrayByExcludingObjectsInArray:
_presentDelayableRequests:fromMonitor:
initWithTaskName:activityMonitorType:duration:timeout:handler:
start
fitnessFriendsManager
showNotifications:
settingForKey:
_areCoachingAlertsMuted
suppressActivityAlertsForIdentifier:suppressionReason:timeoutUntilDate:
invalidateActivityAlertSuppressionForIdentifier:
wristStateChangedToOnWrist
wristStateChangedToOffWrist
wristStateDetectionDisabled
database:protectedDataDidBecomeAvailable:
currentActivitySummaryHelper:didUpdateTodayActivitySummary:changedFields:
currentActivitySummaryHelper:didUpdateYesterdayActivitySummary:changedFields:
alertSuppressionInvalidatedForSuppressionId:reason:
requestPollForSubmanager:
isTaskScheduledForSubmanager:withIdentifier:
mostRecentOnWristDateForSubmanager:
coachingPreferences
mostRecentCoachingCondition
currentActivitySummary
initWithSubmanagers:healthDaemon:alertNotifier:backgroundTaskScheduler:wristEventsManager:bridgeSettings:dataLogger:testConditionProvider:
setCurrentDateOverride:
pollNowWithCompletion:
forceCoachingNowWithArguments:completion:
_alertNotifier
_backgroundTaskScheduler
_wristEventsManager
_dataLogger
_coachingPreferences
_motionActivityManager
_pedometer
_mostRecentCoachingCondition
_testConditionProvider
_pollingReasons
_pollingQueue
_submanagers
_activitySummaryQueue
_currentActivitySummary
_currentDateOverride
_lastAggdSubmittedActivitySummaryIndex
_aggdActivitySetupSent
_activityAlarmMonitors
objectAtIndexedSubscript:
automotive
unknown
stationary
running
walking
cycling
startDate
setAutomotive:
setSedentary:
dictionaryRepresentation
stringWithFormat:
numberWithUnsignedLongLong:
allocWithZone:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnWrist:
setHasOnWrist:
hasOnWrist
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
onWrist
_timestamp
_onWrist
_has
_queue_resetDailyGoalTypesMetToday
_clearAllDailyGoalTypesMetToday
_allGoalTypesArray
_allGoalTypesKeyStringArray
_valueForGoalKeyString:
_setValue:forGoalKeyString:
_userDefaultsDomain
_isDailyGoalTypeMetToday:
_addGoalTypeToDailyGoalTypesMetToday:
_allGoalTypesMetToday
_addDailyGoalTypePreviouslyMetToday:
isAppleInternalInstall
_addDailyGoalTypeMetToday:
_resetDailyGoalTypesMetToday
_areAllDailyGoalTypesMetToday
_areGoalCompletionAlertsEnabled
runForCaloriesWithPreviousBurnToday:currentBurnToday:calorieGoalToday:
runForBriskMinutesWithPreviousMinutesToday:currentMinutesToday:
runForStandingHoursWithPreviousHoursToday:currentHoursToday:
concludeRunWithSuccess:
resetDailyGoalCompletions
_goalTypesToFire
weakObjectsHashTable
initWithHealthDaemon:
registerForLaunchNotification:
_settingsDidChange
_privacySettingsDidChange
_muteCoachingPreferenceSettingsDidChange
objectEnumerator
nextObject
settingDefaultForKey:
settingForKey:defaultSetting:
privacySettingDefaultForKey:
privacySettingForKey:defaultSetting:
deepBreathingSettingDefaultForKey:
deepBreathingSettingForKey:defaultSetting:
_settingForKey:defaultSetting:inDomain:
numberWithDouble:
daemonDidReceiveNotification:
privacySettingForKey:
_allObservers
_observerQueue
_observers
valueForKey:
identifier
notifyAchievementDefinitions:
achievementDefinitionsDidExpire:
initWithAlertNotifier:
_notifier
setAwdCodableData:
setAwdMetricId:
setHasAwdMetricId:
hasAwdMetricId
hasAwdCodableData
awdMetricId
awdCodableData
_awdCodableData
_awdMetricId
numberWithLongLong:
setCacheIndex:
setHasCacheIndex:
hasCacheIndex
setEnergyBurned:
setHasEnergyBurned:
hasEnergyBurned
setBriskMinutes:
setHasBriskMinutes:
hasBriskMinutes
setActiveHours:
setHasActiveHours:
hasActiveHours
setStepCount:
setHasStepCount:
hasStepCount
setEnergyBurnedGoal:
setHasEnergyBurnedGoal:
hasEnergyBurnedGoal
setWalkingAndRunningDistance:
setHasWalkingAndRunningDistance:
hasWalkingAndRunningDistance
setEnergyBurnedGoalDate:
setHasEnergyBurnedGoalDate:
hasEnergyBurnedGoalDate
setHasStartDate:
hasStartDate
setHasEndDate:
hasEndDate
cacheIndex
energyBurned
briskMinutes
activeHours
stepCount
energyBurnedGoal
walkingAndRunningDistance
energyBurnedGoalDate
endDate
_activeHours
_briskMinutes
_cacheIndex
_endDate
_energyBurned
_energyBurnedGoal
_energyBurnedGoalDate
_startDate
_stepCount
_walkingAndRunningDistance
_userDefaultsIntegerForKey:
_dateForKey:
_setDate:forKey:
numberWithInteger:
sharedBehavior
isCoachingEventLoggingEnabled
categoryTypeForIdentifier:
categorySampleWithType:value:startDate:endDate:metadata:
dataProvenanceManager
defaultLocalDataProvenance
healthDataManager
insertDataObjects:withProvenance:creationDate:error:
firstWristOnDateToday
components:fromDate:
minute
progressUpdateInterval
setMinute:
dateFromComponents:
setFirstWristOnDateToday:
_setUserDefaultsInteger:forKey:
_saveWristOnCoachingEventWithActualWristOnDate:adjustedWristOnDate:
_sendAggdSettings
logFirstWristOnSettings
_sendAggdSetting:
dailyProgressAlertCountToday
dailyProgressStandAlertCountToday
dailyProgressScheduledFireDate
setDailyProgressScheduledFireDate:
clearFirstWristOnDateToday
incrementDailyProgressAlertCountForTypes:
lastIntervalResetDate
setLastIntervalResetDate:
clearLastIntervalReset
setLocationUUID:
hasLocationUUID
locationType
setLocationType:
setHasLocationType:
hasLocationType
locationTypeAsString:
StringAsLocationType:
setUncertaintyMillis:
setHasUncertaintyMillis:
hasUncertaintyMillis
setConfidenceMillis:
setHasConfidenceMillis:
hasConfidenceMillis
setRecentVisitCount:
setHasRecentVisitCount:
hasRecentVisitCount
locationUUID
uncertaintyMillis
confidenceMillis
recentVisitCount
_confidenceMillis
_recentVisitCount
_uncertaintyMillis
_locationType
_locationUUID
setExperimentIdentifier:
hasExperimentIdentifier
setTestCondition:
setHasTestCondition:
hasTestCondition
experimentIdentifier
testCondition
_testCondition
_experimentIdentifier
setExperimentalCondition:
hasExperimentalCondition
_experimentalCondition
_startHIDListener
_stopHIDListener
_notifyObserversDidReceiveOnWristEvent:
hidHandler:didReceiveWristDetectEvent:
_hidQueue_forceWristDetect:
intValue
unsignedLongLongValue
_hidQueue_handleHIDEvent:sender:
_hidQueue_handleOnWristEventWithProximityMask:
addHIDHandlerObserver:
removeHIDHandlerObserver:
forceWristDetectAfterDelay:
_handleHIDServiceRegister:refcon:
_handleHIDEvent:sender:
_hidEventQueue
_ioHIDEventSystemClientRef
_ioHIDWristProximityService
_ioHIDWristProximityServiceID
setDwelltimeMs:
setHasDwelltimeMs:
hasDwelltimeMs
setDismissReason:
setHasDismissReason:
hasDismissReason
dismissReasonAsString:
StringAsDismissReason:
scrollBehavior
setScrollBehavior:
setHasScrollBehavior:
hasScrollBehavior
scrollBehaviorAsString:
StringAsScrollBehavior:
dwelltimeMs
_dwelltimeMs
_dismissReason
_scrollBehavior
setWeightKg:
setHasWeightKg:
hasWeightKg
setHeightCm:
setHasHeightCm:
hasHeightCm
setBiologicalSex:
setHasBiologicalSex:
hasBiologicalSex
setAgeYears:
setHasAgeYears:
hasAgeYears
weightKg
heightCm
biologicalSex
ageYears
_ageYears
_biologicalSex
_heightCm
_weightKg
objectAtIndex:
addPast:
addFuture:
pastsCount
clearPasts
pastAtIndex:
futuresCount
clearFutures
futureAtIndex:
pastType
futureType
pasts
setPasts:
futures
setFutures:
_futures
_pasts
initWithPrimaryProfile:
sharedDiagnosticManager
healthDaemon
defaultCenter
_powerSavingModeDidChange
addObserver:selector:name:object:
_heartQueue_stopEverything
_unregisterObservedTypes
_startHeartRateStreaming
_stopHeartRateStreaming
_startPassiveHeartRate
isInBackground
hasActiveWorkout
_registerObservedTypes
addObserver:forDataType:
removeObserver:forDataType:
sampleType
device
localIdentifier
containsObject:
quantity
unitFromString:
feedCatherine:confidence:
_heartQueue_startHeartRateStreaming
allServicesFromHealthDaemon:error:
healthServiceManager
connectHealthService:healthDatabase:sessionHandler:error:
_heartQueue_startFallbackTimer
_heartQueue_arbitrateHardware
_heartQueue_resetFallbackTimerIfActive
_heartQueue_handleServiceStatus:status:
_startHeartRateSessions:withHandler:
_heartQueue_startActiveHeartRate
_heartQueue_stopFallbackTimer
_fetchHeartRatePairings:
_heartQueue_shouldEnablePlatinum
_heartQueue_stopHeartRateManager
_heartQueue_cancelSessions
disconnectHealthService:
_powerSavingModeEnabled
domain
observedType
samplesAdded:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
diagnosticDescription
initWithPrimaryProfile:bridgeSettings:
_setCatherineFeeder:
_setBridgeSettings:
beginUpdatesWithHandler:
stopPerformingUpdatesWithErrorEncountered:
shouldCollectForObserverState:
setSessionActivityType:isIndoor:clientUUID:
_heartQueue_configureHeartRateManager
healthLitePowerLog:
lastClientUUID
setLastClientUUID:
_heartQueue
_fallbackTimer
_heartRateMode
_seekingHeartRate
_heartRateEnabled
_activeSessions
_activeIdentifiers
_catherineFeeder
_localDeviceEntity
_currentActivityType
_isIndoor
_lastClientUUID
setUserCharacteristics:
setAchievementStatistics:
setFirstCalendarItemOfDay:
setEnableStandReminders:
setHasEnableStandReminders:
hasEnableStandReminders
setProgressUpdateFrequency:
setHasProgressUpdateFrequency:
hasProgressUpdateFrequency
setEnableGoalCompletions:
setHasEnableGoalCompletions:
hasEnableGoalCompletions
setEnableAchievements:
setHasEnableAchievements:
hasEnableAchievements
setEnableWeeklySummary:
setHasEnableWeeklySummary:
hasEnableWeeklySummary
setTimeZoneOffset:
setHasTimeZoneOffset:
hasTimeZoneOffset
setNumberOfEvents:
setHasNumberOfEvents:
hasNumberOfEvents
setEventBusyTime:
setHasEventBusyTime:
hasEventBusyTime
setDaysSinceFirstCalorieGoal:
setHasDaysSinceFirstCalorieGoal:
hasDaysSinceFirstCalorieGoal
hasUserCharacteristics
hasAchievementStatistics
setWellnessComplicationOnWatchFace:
setHasWellnessComplicationOnWatchFace:
hasWellnessComplicationOnWatchFace
hasFirstCalendarItemOfDay
enableStandReminders
progressUpdateFrequency
enableGoalCompletions
enableAchievements
enableWeeklySummary
timeZoneOffset
numberOfEvents
eventBusyTime
daysSinceFirstCalorieGoal
userCharacteristics
achievementStatistics
wellnessComplicationOnWatchFace
firstCalendarItemOfDay
_daysSinceFirstCalorieGoal
_eventBusyTime
_numberOfEvents
_progressUpdateFrequency
_timeZoneOffset
_achievementStatistics
_firstCalendarItemOfDay
_userCharacteristics
_enableAchievements
_enableGoalCompletions
_enableStandReminders
_enableWeeklySummary
_wellnessComplicationOnWatchFace
nl_dateByAddingDays:toDate:
nl_dateByAddingHours:toDate:
nl_dateByAddingMinutes:toDate:
nl_dateByAddingSeconds:toDate:
initWithState:
delegate
timerState
canStartTimer
canStopTimer
startingTimer
stoppingTimer
didStartTimer
didStopTimer
state
failedToStartTimer
failedToStopTimer
setDelegate:
setState:
_delegate
_state
defaultManager
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
localizedDescription
closeFile
data
_appendData:error:
lock
unlock
length
_nameOfNextLogFile
stringByAppendingPathComponent:
createFileAtPath:contents:attributes:
fileHandleForWritingAtPath:
removeItemAtPath:error:
fileDescriptor
setAttributes:ofItemAtPath:error:
hk_error:description:underlyingError:
hk_writeValue:size:error:
UTF8String
initWithLength:
replaceBytesInRange:withBytes:
bytes
offsetInFile
writeData:
truncateFileAtOffset:
reason
_executeAtomically:
_sortedListOfLogFiles
reverseObjectEnumerator
stringByDeletingPathExtension
initWithString:
scanInteger:
contentsOfDirectoryAtPath:error:
sortedArrayUsingSelector:
readDataOfLength:
initWithData:
dataWithBytesNoCopy:length:freeWhenDone:
fileURLWithPath:
fileHandleForReadingFromURL:error:
_enumerateLogFile:fileHandle:mapping:length:handler:error:
hk_readValue:ofSize:error:
_enumerateLogWithVersion:fileHandle:mapping:size:headerLength:handler:error:
mutableBytes
_enumerateLogFromMapping:size:headerLength:handler:error:
timeIntervalSinceNow
_enumerateLogWithFileHandle:handler:error:
enumerateLogFileEntries:handler:error:
initWithPath:
addLogMessage:metricId:error:
path
setPath:
logLock
setLogLock:
fileHandle
setFileHandle:
_path
_logLock
_fileHandle
_settingForKey:defaultSetting:
setSettingValue:forKey:
setPrivacySettingValue:forKey:
_registerForSettingsNotificationForKey:
_unregisterForSettingsNotificationForKey:
_settings
isAvailable
stopUpdates
startUpdatesFromRecord:handler:
querySwimUpdatesFromRecord:handler:
lastObject
quantitySamplesFromSwimData:toSwimData:startDate:endDate:
createCollectorsForCurrentHardware:
sensorDatumClass
beginUpdatesFromDatum:withHandler:
fetchHistoricalSensorDataSinceDatum:databaseIdentifier:completion:
hkObjectsFromSensorData:baseSensorDatum:startDate:endDate:
_swimTracker
distance
meterUnit
quantityWithUnit:doubleValue:
localDevice
quantitySampleWithType:quantity:startDate:endDate:device:metadata:
strokeCount
countUnit
setLocation:
hasLocation
setArrivalDate:
setHasArrivalDate:
hasArrivalDate
location
arrivalDate
_arrivalDate
_location
exceptionWithName:reason:userInfo:
raise
addViews:
setCalendarItem:
viewsCount
clearViews
viewsAtIndex:
setActivityCache:
setAchievement:
setWeeklySummaryDetail:
goalTypesCount
clearGoalTypes
goalTypesAtIndex:
addGoalTypes:
setResponseFlags:
viewsType
alertType
setAlertType:
setHasAlertType:
hasAlertType
alertTypeAsString:
StringAsAlertType:
setDndEnabled:
setHasDndEnabled:
hasDndEnabled
setFailedPosting:
setHasFailedPosting:
hasFailedPosting
testAction
setTestAction:
setHasTestAction:
hasTestAction
testActionAsString:
StringAsTestAction:
hasCalendarItem
hasActivityCache
hasAchievement
hasWeeklySummaryDetail
goalTypes
setGoalTypes:count:
hasResponseFlags
dndEnabled
failedPosting
calendarItem
views
setViews:
activityCache
achievement
weeklySummaryDetail
responseFlags
_goalTypes
_achievement
_activityCache
_alertType
_calendarItem
_responseFlags
_testAction
_views
_weeklySummaryDetail
_dndEnabled
_failedPosting
_trackingOffWristEvents
_shouldPauseWorkouts
_pauseActiveWorkouts
_stopTrackingOffWristEvents
_incrementOffWristCount
_shouldTrackOffWristEvents
_handleOnWristEvent
_handleOffWristEvent
hasAnyActiveWorkouts
pauseAllActiveWorkoutsWithCompletion:
initWithHealthDaemon:hidHandler:
_forceHIDUpdate
_hidHandler
_consecutiveOffWristEvents
_lastOffWristDetectionDate
setWalking:
setHasWalking:
hasWalking
setHasAutomotive:
hasAutomotive
setCycling:
setHasCycling:
hasCycling
setRunning:
setHasRunning:
hasRunning
setOther:
setHasOther:
hasOther
setWorkout:
setHasWorkout:
hasWorkout
setHeartRate:
setHasHeartRate:
hasHeartRate
setActiveCalories:
setHasActiveCalories:
hasActiveCalories
setDuration:
setHasDuration:
hasDuration
setUnknown:
setHasUnknown:
hasUnknown
other
workout
heartRate
activeCalories
duration
_activeCalories
_automotive
_cycling
_duration
_heartRate
_other
_running
_unknown
_walking
_workout
setViewOnWake:forApplicationIdentifier:uniqueSessionIdentifier:
setViewOnWakeWhileActive:forApplicationIdentifier:uniqueSessionIdentifier:
activityType
setActivityType:
setHasActivityType:
hasActivityType
activityTypeAsString:
StringAsActivityType:
setDurationMs:
setHasDurationMs:
hasDurationMs
setTotalEnergyBurned:
setHasTotalEnergyBurned:
hasTotalEnergyBurned
setTotalDistance:
setHasTotalDistance:
hasTotalDistance
setTotalSteps:
setHasTotalSteps:
hasTotalSteps
durationMs
totalEnergyBurned
totalDistance
totalSteps
_durationMs
_totalDistance
_totalEnergyBurned
_totalSteps
_activityType
hk_startOfFitnessWeekBeforeDate:
hk_startOfDateBySubtractingDays:fromDate:
hk_activitySummaryDateComponentsFromDate:
_activitySummariesByRemovingIncompleteFirstWeekIfNecessary:
_recommendedNewWeeklyGoalForActivitySummaries:
dateComponentsForCalendar:
weekday
activeEnergyBurned
kilocalorieUnit
_isMoveGoalAchievedForActivitySummary:
enumerateObjectsWithOptions:usingBlock:
calendarWithIdentifier:
_gregorianDateComponents
earlierDate:
isEqualToDate:
_numberOfInvalidDaysFromActivitySummaries:forExpectedNumberOfSamples:
arrayWithArray:
_numberOfDaysGoalAchievedInSummaries:
_numberOfDaysInMostRecentWinningStreakForSummariesOrderedByDate:
_numSamplesWithEnergyBurnGreaterThanTheGoalByPercent:forSummaries:
_activitySummariesSortedByEnergyBurn:
_averageEnergyBurnFromActivitySummaries:forNumberOfSamples:
weeklyGoalRecommendationInCaloriesForDate:inHealthDaemon:error:
setConsecutiveStandingHoursGoalsMet:
setHasConsecutiveStandingHoursGoalsMet:
hasConsecutiveStandingHoursGoalsMet
setConsecutiveBriskMinuteGoalsMet:
setHasConsecutiveBriskMinuteGoalsMet:
hasConsecutiveBriskMinuteGoalsMet
setCurrentCalorieGoalConsecutiveCompleteDays:
setHasCurrentCalorieGoalConsecutiveCompleteDays:
hasCurrentCalorieGoalConsecutiveCompleteDays
setConsecutiveCompleteDays:
setHasConsecutiveCompleteDays:
hasConsecutiveCompleteDays
consecutiveStandingHoursGoalsMet
consecutiveBriskMinuteGoalsMet
currentCalorieGoalConsecutiveCompleteDays
consecutiveCompleteDays
_consecutiveBriskMinuteGoalsMet
_consecutiveCompleteDays
_consecutiveStandingHoursGoalsMet
_currentCalorieGoalConsecutiveCompleteDays
setDefinitionIdentifier:
achievementType
setAchievementType:
setHasAchievementType:
hasAchievementType
achievementTypeAsString:
StringAsAchievementType:
setCompletedDate:
setHasCompletedDate:
hasCompletedDate
setValue:
setHasValue:
hasValue
hasDefinitionIdentifier
workoutActivityType
setWorkoutActivityType:
setHasWorkoutActivityType:
hasWorkoutActivityType
workoutActivityTypeAsString:
StringAsWorkoutActivityType:
completedDate
value
definitionIdentifier
_completedDate
_value
_achievementType
_definitionIdentifier
_workoutActivityType
application
setApplication:
setHasApplication:
hasApplication
applicationAsString:
StringAsApplication:
_application
removeObserver:name:object:
dateWithTimeIntervalSinceReferenceDate:
_cancelScheduledAlert
_shouldCoachAllGoals
setWithArray:
intersectsSet:
_unprotectedUserDefaultsDidSync:
alertSuppressionStatusDidChange:
_taskIsScheduled
_cancelScheduledTask
_hasMoveGoal
wantsToAlert
alertsAreSuppressed
initWithProfile:wristEventsManager:backgroundTaskScheduler:
_activityGoalIsSet
initWithHealthDaemon:achievementDataStore:bridgeSettings:dailyGoalDetectionDelegate:
setDailyGoalDetectionDelegate:
setDataStore:
minuteUnit
createAchievementPredicateEnvironment
workouts
setDataSource:
_systemTimeZoneChanged:
systemTimeZoneDidChange
_workoutDataType
retrieveDatabaseIdentifierFromProfile:error:
hk_UUIDWithData:
runDatabaseIdentifierCheckWithCurrentDatabaseIdentifier:identifierChanged:error:
commit:
setFirstWeekday:
activityData
today
yesterday
dates
setCurrentDate:
setCalendar:
currentLocale
setCurrentLocale:
cached_lastWorkoutAnchor
workoutsEndingAfterAnchor:newAnchor:
setAddedWorkout:
runForTriggers:withEnvironment:
initWithWorkout:
UUID
_setExcludedWorkoutUUIDs:
timeIntervalSince1970
nanoSyncManager
isPairingActivated
_achievementTypeListWithOptions:
_queue_performDatabaseIdentifierCheck
_queue_activitySummariesAreAvailable
caloriesBurnedLastCheckedActivitySummaryIndex
briskMinutesLastCheckedActivitySummaryIndex
standingHoursLastCheckedActivitySummaryIndex
_activitySummaryIndex
behavior
runForNewWorkouts
runForNewMoveData
runForNewExerciseData
runForNewStandData
runForNewCombinedActivityData
_triggerNameListWithTriggers:
logUpdatedValues
_queue_runAchievementDetectionForTriggers:
uncommittedAchievements
_isNextDayScheduledAchievement:
_storeAggregateStatisticsForAchievements:
stringByAppendingString:
caloriesBurnedFirstCheckedActivitySummaryIndex
sharedLoader
achievementDefinitionForIdentifier:
isPresentedOnFollowingDay
_queue_runForNewData
_runAfterDelay:
addAchievement:
_predicateForWorkoutsOfActivityType:
_fetchWorkoutsSortedByEndDateWithPredicate:error:
_predicateForSamplesEndingAfterDate:untilDate:
entityEnumeratorWithProfile:
setPredicate:
setOrderingProperties:
setOrderingDirections:
enumerateWithError:handler:
_setUpTriggers
workoutType
samplesWithType:profile:encodingOptions:predicate:limit:anchor:error:
mostRecentSampleWithType:profile:encodingOptions:predicate:anchor:error:
appleExerciseTime
appleStandHours
predicateMatchingAllPredicates:
_didUpdateTodayOrYesterdayFields:
_applyRunOptions:
_areAchievementNotificationsEnabled
unalertedAchievements
_wasAchievementEarnedToday:
_achievement:isNewerThanDaysAgo:now:
_markAlertRequestsProcessed:
_sortCoachingAlertRequests:
achievementWithDefinitionIdentifier:completedDate:value:workoutActivityType:
markAchievementAlerted:
_lastScheduledWristOnTaskDate
_delayAfterWristOnForNextDayScheduledAchievements
_setLastScheduledWristOnTaskDate:
componentsJoinedByString:
isDefinitionWithIdentifierRemotelyDefined:
compareDisplayOrderOfDefinition:
sortUsingComparator:
activitySummaryIndexToday
energyBurnedGoalYesterday
energyBurnedGoalToday
caloriesBurnedYesterday
caloriesBurnedToday
briskMinutesYesterday
briskMinutesToday
standingHoursYesterday
standingHoursToday
stepsTakenYesterday
stepsTakenToday
mostRecentWorkoutAnchor
workoutsOfType:
workoutsInDateRangeStart:end:
injectAchievement:
setHealthDaemon:
achievementEngine
setAchievementEngine:
achievementDataStore
setAchievementDataStore:
achievementDefinitions
setAchievementDefinitions:
dailyGoalDetectionDelegate
lastRunDate
setLastRunDate:
queue
setQueue:
_runOptionsLock
_pendingRunCount
_nextRunOptions
_needsRunWhenProtectedDataAvailable
_predicateEnvironment
_yesterdayActivitySummary
_todayActivitySummary
_minuteUnit
_kcalUnit
_countUnit
_statisticsCollectedForDidRunForData
_performedDatabaseIdentifierCheck
_achievementEngine
_achievementDataStore
_achievementDefinitions
_dailyGoalDetectionDelegate
_lastRunDate
sharedInstance
initWithHandler:
observerForBacklightOffWithHandler:
backlightDidChange:from:to:
backlightDidTurnOn:forReason:
backlightDidTurnOff:forReason:
_handler
_alertSuppressionQueue_refreshActivityAlertSuppression
_fetchActivityAlertSuppressionStateForReason:completion:
_clientExistsWithId:
_invalidateClientsWithIds:
_addActivityAlertSuppressionClientWithIdentifier:suppressionReason:timeoutUntilDate:
_maxClientSuppressionEndTimeForReason:
_currentDate
dictionaryWithDictionary:
removeObjectsForKeys:
_notifyAfterBacklightOffForSuppressionId:reason:
_notifyObserversOfInvalidationForSuppressionId:reason:
_performInvalidationBehaviorIfAnyForClientWithId:
_deleteClientsWithIds:
_isEmptyClientsList
_cleanupClientsWithTimeoutBefore:
_maxClientSuppressionEndTime
_alertSuppressionQueue_restartActivityAlertSuppressionTimer
_alertSuppressionQueue_cancelActivityAlertSuppressionTimer
_alertSuppressionQueue_startActivityAlertSuppressionTimerWithDuration:
isEqualToNumber:
_alertSuppressionQueue
_alertSuppressionObserverQueue
_backlightQueue
_alertSuppressionTimerSource
_backlightObservers
_alertSuppressionObservers
_handleWristStateChangeNotificationIfWristDetectionEnabled
_fetchErrorHandledWristDetectionStateWithCompletion:
onWristMonitor
requestWristDetectionDisabledStatusWithCompletion:
_wristStateFromGizmoManagerState:
_internalQueue_handleOnWristMonitorStateChanged:
setChangeHandler:
_backgroundTaskWristEventFired
_stringFromNLWristState:
_notifyObserver:forWristState:
_handleWristStateChangeNotification
_wristStateChangedTo:
_fetchWristDetectionStateWithCompletion:
_wristStateFromCLSOnWristState:
getWristState:
_internalQueue_handleGizmoOnWristState
_internalQueue_handleGizmoOffWristState
_internalQueue_handleGizmoDisabledWristState
_internalQueue_notifyWristEventObserversForWristState:async:force:
_internalQueue_cancelDebounceTimer
dateByAddingComponents:toDate:options:
_internalQueue_scheduleTaskAtDate:
syncHealthDataWithOptions:reason:completion:
setSecond:
initialize
initWithHealthDaemon:backgroundTaskScheduler:
_unitTesting_notifyWristEventObserversForOnWristState:
_onWristMonitor
_internalQueue
_wristDetectionStateChangeQueue
_lastNotifiedState
_wristDetectionStateErrorCounter
_lastMonitorOnWristState
initWithHealthDaemon:bridgeSettings:wristManager:dataLogger:testConditionProvider:
_sedentaryTimerState
_registerForFakeStandTriggerNotifications
_queue_fireReminderNotificationIfRequiredOfType:forHourWithStartDate:force:
startSedentaryTimerIfPossible
stopSedentaryTimer
_queue_processCachedSedentaryHourSamples
_queue_stopSedentaryTimerIfRequired
_registerDaemonLaunchForSedentaryTimerFiredNotification
_checkIfSedentaryTimerNeedsStart
_timer
isActive
_queue_startSedentaryTimerIfRequired
pairingID
_canStartSedentaryTimer
_queue_stopSedentaryTimer
_queue_stopTimerHandlerWithError:
stopTimerWithHandler:
code
_timerStopped
_queue_startTimer
_queue_registerTimerHandler
_startDateForSedentaryTimer
_queue_startTimerHandlerWithError:
startTimerWithStartTime:periodInterval:reminderInterval:autoReschedule:handler:
_timerStarted
_checkIfSedentaryTimerNeedsStop
_queue_processDataObjectsInArray:
registerForAlarmsWithHandler:
alarmType
didWake
_roundedDateForDate:
logStandHourDidStand:date:
_saveMissedHourDetailsIntoDBWithStartDate:
_saveActiveHourDetailsIntoDBWithStartDate:
_queue_fireCongratulatoryNotificationIfRequiredForHourWithStartDate:
_shouldFireReminderForHourWithStartDate:
_numberOfActiveHoursToday
_timeoutDateForSedentaryTimerAlertOfType:withHourStartDate:
generateSedentaryAlertExperimentInstance
_queue_showSedentaryAlertOfType:withTimeoutDate:experimentInstance:
invalidate
_queue_isReminderNotificationRequiredOfType:forHourWithStartDate:
_queue_fireReminderNotificationImmediatelyOfType:forHourWithStartDate:
_fireReminderNotificationImmediatelyIfRequiredOfType:forHourWithStartDate:force:
_shouldFireCongratulatoryAlertForHourWithStartDate:
categorySampleWithType:value:startDate:endDate:device:metadata:
_saveSedentaryHourDataIfRequired:
_cacheSedentaryHourStartDate:state:
_keyFromDate:
allKeys
_dateFromKey:
_dataExistsForHourStart:
performReadTransactionWithHealthDatabase:error:usingBlock:
_saveSedentaryHourDataObjects:error:
countOfSamplesWithType:profile:matchingPredicate:withError:
healthDeviceManager
currentDeviceEntityWithError:
persistAndNotifyDataObjects:device:error:
stringValue
_isSedentaryTimerNotificationEnabled
_numberOfAwakeHoursToday
testShouldSkipSedentaryAlert
initWithSubmanagerIdentifier:UUID:userInfo:
testConditionDidChange:
_sedentaryTimer
_healthDatabase
_wristManager
_sedentaryTimerStateEngine
_retryInCaseOfErrorCounter
_reminderInterval
_currentExperimentInstance
_alarmMonitor
_notifyToken
isExerciseMinuteAvailable
_exerciseMinuteDataStore
startUpdatesWithHandler:
queryExerciseMinutesFromRecord:handler:
briskMinuteDataType
_shouldSkipInitialResults
_queue_lastReceivedSecondaryContext
recordId
recordID
_primaryContextExistsForDomain:profile:
_hasEstablishedSecondaryContext
_didMigrateFromOldBriskMinuteCalculation
_queue_updateLastReceivedSecondaryContext:
_appendSecondaryContextWithValue:forKey:
requiresSampleAggregation
willPersistHKObjects:
_queue_aggregationInterval
sourceId
supportsSecureCoding
encodeWithCoder:
initWithCoder:
setFrom:
setTo:
hasFrom
hasTo
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
from
_from
_mode
batteryState
setBatteryState:
setHasBatteryState:
hasBatteryState
batteryStateAsString:
StringAsBatteryState:
_batteryState
newSensorDatumBuffer
stopOdometerUpdates
odometerActivity
startOdometerUpdatesForActivity:withHandler:
addSensorDatum:
hkObjectsFromSensorDatum:context:
_odometer
_currentSensorDatumBuffer
setBufferAggregationInterval:
_generateHKObjectsFromOdometerData:toOdometerData:
setObjectCreationBlock:
setSensorDatumComparisonBlock:
setPoorTiming:
setHasPoorTiming:
hasPoorTiming
setAlreadyDoing:
setHasAlreadyDoing:
hasAlreadyDoing
poorTiming
alreadyDoing
_alreadyDoing
_poorTiming
setIsBusy:
setHasIsBusy:
hasIsBusy
isBusy
_isBusy
setStandHourTimestamp:
setHasStandHourTimestamp:
hasStandHourTimestamp
setDidStand:
setHasDidStand:
hasDidStand
standHourTimestamp
didStand
_standHourTimestamp
_didStand
setActiveSeconds:
setHasActiveSeconds:
hasActiveSeconds
setEventTimestamp:
setHasEventTimestamp:
hasEventTimestamp
setHeight:
setHasHeight:
hasHeight
setWeight:
setHasWeight:
hasWeight
setAge:
setHasAge:
hasAge
activeSeconds
eventTimestamp
height
weight
_eventTimestamp
_activeSeconds
_age
_height
_weight
isRunningStoreDemoMode
_beginSessionTransaction
_queue_endSessionWithReason:
_shouldUseHealthLiteSession
_queue_alertClientSessionDidReceiveHeartRate:
_queue_deactivate
deepBreathingServerDidDeactivate:
_endSessionTransaction
remoteObjectProxyWithErrorHandler:
clientWithErrorHandler:
sessionDidReceiveHeartRate:
sessionDidReceiveError:
_transactionIdentifier
startSessionWithStartDate:completion:
startScoringSession
endSessionWithEndReason:
deactivate
sessionUUID
initWithClient:sessionConfiguration:daemon:delegate:
_queue_alertClientSessionDidReceiveError:
healthLiteQueue
setHealthLiteQueue:
client
daemon
sessionConfiguration
serverState
setServerState:
_healthLiteQueue
_client
_daemon
_sessionConfiguration
_serverState
isNatalimeterAvailable
_calorimeter
startAbsoluteNatalimetryDataUpdatesWithHandler:
queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:
stopAbsoluteNatalimetryDataUpdates
setMaxDatumDuration:
basalNatalies
defaultCollectionInterval
natalies
goalTypeAtIndex:
addGoalType:
setFeatures:
setEventType:
setHasEventType:
hasEventType
setRecommendedGoal:
setHasRecommendedGoal:
hasRecommendedGoal
setNewGoal:
setHasNewGoal:
hasNewGoal
hasFeatures
eventType
recommendedGoal
newGoal
features
_eventType
_features
_newGoal
_recommendedGoal
setTypeIdentifier:
setHasTypeIdentifier:
hasTypeIdentifier
setInSession:
setHasInSession:
hasInSession
setMinDelayUs:
setHasMinDelayUs:
hasMinDelayUs
setMaxDelayUs:
setHasMaxDelayUs:
hasMaxDelayUs
setMeanDelayUs:
setHasMeanDelayUs:
hasMeanDelayUs
setStdDelayUs:
setHasStdDelayUs:
hasStdDelayUs
setSampleCount:
setHasSampleCount:
hasSampleCount
setIndexInSession:
setHasIndexInSession:
hasIndexInSession
typeIdentifier
inSession
minDelayUs
maxDelayUs
meanDelayUs
stdDelayUs
sampleCount
indexInSession
_indexInSession
_maxDelayUs
_meanDelayUs
_minDelayUs
_sampleCount
_stdDelayUs
_typeIdentifier
_inSession
_registerForForceShowSummaryNotification
_queue_forceShowSummary
_scheduleAlertIfRequired
weeklySummaryInfoForDate:inHealthDaemon:error:
_queue_coachingAlertRequest
_areWeeklySummaryNotificationsEnabled
_shouldShowWeeklySummary
_shouldScheduleWeeklySummary
setMostRecentWeeklySummaryAlertDate:withHealthDaemon:
mostRecentWeeklySummaryAlertDateWithHealthDaemon:
_energyBurnedGoalExistsBeforeDate:
_delayAfterWristOnForSummaryPresentation
calorieGoal
anySampleOfType:profile:encodingOptions:predicate:error:
_userDefaultsDomainWithHealthDaemon:
_forceShow
_forceShowNotifyToken
serverWithClient:profile:error:
setNanoHealthPlugin:
nanoHealthPlugin
registerServer:notificationTypes:
coachingManager
testConditionProvider
finchManager
runFinchNowWithTactic:skip:completion:
resetFinchRequestStoreTypes:completion:
unregisterServerForNotifications:
serverWithClient:plugin:error:
registerForUpdatesOfTypes:
runCoachingManagerWithCompletion:
forceCoachingWithArguments:completion:
setExperimentalCondition:completion:
remote_registerForAchievementNotificationsAndFetchUnalertedCountWithCompletion:
remote_fetchAchievementsWithCompletedDateBetweenStart:end:completion:
remote_markAchievementsAlerted:completion:
remote_fetchNumberOfUnviewedAchievementsWithCompletion:
remote_markAchievementAsViewed:completion:
remote_fetchHiddenUnearnedAchievementDefinitionIdentifiersAmongIdentifiers:completion:
remote_registerForAchievementDefinitionNotificationsWithCompletion:
remote_fetchUnviewedAchievementDefinitionIdentifiersWithCompletion:
remote_markAchievementDefinitionIdentifierAlertViewed:completion:
remote_fetchAchievementAssetsServerURLWithCompletion:
remote_setAchievementAssetsServerURL:completion:
remote_updateAllAchievementAssetsWithCompletion:
remote_addAchievement:completion:
remote_runAchievementsFixupAsDryRun:completion:
remote_setCurrentActivityCacheOverrideDate:timeZone:completion:
remote_deleteAchievementWithUUID:completion:
remote_deleteAllAchievementsWithCompletion:
remote_nextScheduledAchievementDefinitionAlertTaskDateWithCompletion:
remote_achievementAssetAvailabilityOnPairedDeviceForIdentifiers:completion:
remote_resetAchievementDefinitionAlertedStates:availabilityStates:completion:
coachingAlertDidCompleteWithResponse:completion:
serverInterface
clientInterface
_nanoHealthPlugin
sourceRevision
source
_isLocalDevice
_reportAndReset
ingestionTracker:didGenerateLatencyEvent:
reset
initWithSampleType:
appendSamples:atTime:inSession:
dataTypeCode
_sumx
_sumxx
_minDelay
_maxDelay
_count
_reportIndex
_dataTypeCode
testActionForCodableAlertType:
initWithSuiteName:
addSuiteNamed:
synchronize
_queue_readDataCollectionSetting
_registerForSettingChangeNotifications
initWithComponentId:
addRoutineObserver:
currentDevice
setBatteryMonitoringEnabled:
batteryStateDidChange:
_registerForActivityAppLaunchNotifications
_isDataLogEnabled
_logDirectoryPath
_queue_startTrackingAfterDaemonReady
workoutManager
addWorkoutEventObserver:
removeRoutineObserver:
removeWorkoutEventObserver:
_queue_logActivityAppDidLaunch
homeDirectoryPath
_queue_logCodable:metricId:
_onQueueIfEnabled:
setMostRecentGoal:
setNumTimesGoalAchieved:
setSelectedGoal:
responseOptions
_queue_updateEvent:withExperimentInstance:
_queue_updateEvent:withAchievement:
_queue_updateEvent:withWeeklySummaryInfo:lastResponseInfo:recommendedGoal:
_queue_updateEvent:withGoalTypes:
_queue_codableActivityCacheForActivitySummary:
_queue_concurrentCalendarItemForDate:
_queue_fetchAndLogCurrentLocationOfInterest
availability
predicateForEventsWithStartDate:endDate:calendars:
isAllDay
_queue_concurrentCalendarItemFromEvent:
enumerateEventsMatchingPredicate:usingBlock:
failed
presentationDate
dwelltime
responseUserInfo
_queue_updateEvent:withResponseOptionsFromActions:
logExperimentalCondition:
consecutiveBriskMinutesGoalsMet
compareStartDateWithEvent:
components:fromDate:toDate:options:
oldestSampleWithType:profile:encodingOptions:predicate:error:
_creationDate
_dateAsDays:
year
_dateComponentsAsAge:
meterUnitWithMetricPrefix:
gramUnitWithMetricPrefix:
timeZone
secondsFromGMT
_queue_codableUserCharacteristics
_queue_daysSinceFirstCalorieGoal
_queue_updateAchievementStatisticsForWristOnSettings:
_queue_updateCalendarSummaryForWristOnSettings:
_queue_logFirstWristOnSettings
logLocationOfInterest:
uncertainty
confidence
_queue_logExperimentalCondition:
filterWithOperatorType:comparisonDate:
filterByCombiningFilters:compoundType:
entityEnumeratorWithType:profile:
setFilter:
enumerateIncludingDeletedObjects:error:handler:
_queue_stepsFromDate:toDate:
currentWorkoutActivityType
sessionId
setSessionUUID:
_queue_startTracking
_queue_endTracking
_queue_logWorkoutEvent:workoutManager:
bundleIdentifier
_queue_logWorkout:
hasLoadedActivitySummaries
logActivitySummary:
getAWDTimestamp
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
routineGateway:scenarioTriggeredWithTypes:currentLocation:
workoutManager:didReceiveEvent:
initWithHealthDaemon:coachingAlertNotifier:testConditionProvider:bridgeSettings:
_lastUploadedActivityCacheIndex
_eventStore
_log
_activityNotifyToken
_managedConfigurationNotifyToken
_settingChangeNotifyToken
_dataCollectionEnabled
_awdServerConnection
_logSettingsAtNextUnlock
_daemonReady
_lastBatteryState
_ingestionTrackers
dictionaryWithCapacity:
initWithCalendarIdentifier:
deepBreathingWeeklySummaryInfoForDate:inHealthDaemon:error:
_setMostRecentWeeklySummaryAlertDate:withHealthDaemon:
_weeklySummaryHasData
_mostRecentWeeklySummaryAlertDateWithHealthDaemon:
eventTypeAsString:
StringAsEventType:
hasSessionUUID
_sessionUUID
setHasMostRecentGoal:
hasMostRecentGoal
setHasNumTimesGoalAchieved:
hasNumTimesGoalAchieved
setHasSelectedGoal:
hasSelectedGoal
mostRecentGoal
numTimesGoalAchieved
selectedGoal
_mostRecentGoal
_numTimesGoalAchieved
_selectedGoal
com.apple.nanolifestyle.NLMockCoachingSubmanager
/AppleInternal/Library/Frameworks/NanoHealthInternal.framework/NanoHealthInternal
kNLFinchManagerIdentifier
EnableStandReminders
ProgressUpdateFrequency
EnableGoalCompletions
EnableAchievements
EnableWeeklySummary
ReminderFrequency
InternalABTestingConditionOverride
AppleInternalDataCollectionEnabled
SeedStudyDataCollectionEnabled
AllowInternalABTesting
cachedSedentaryHours
sedentaryTimerMostRecentRemindedHour
sedentaryTimerMostRecentReminderExperimentInstance
sedentaryTimerMostRecentCongratulatedHour
sedentaryTimerMostRecentMovedHour
presentWeeklySummaryImmediately
com.apple.managedconfiguration.defaultsdidchange
NLDisableActivityAlerts
queue
v4@?0
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
NLDeepBreathingCoachingSubmanagerDateOfLastIntervalReset
NLDeepBreathingReminderAlertFireDate
NLDeepBreathingReminderSnoozed
NLDeepBreathingReminderAlertEarliestAllowedFireDate
DeepBreathingReminder
coachingSubmanagerDelegate
T@"<NLCoachingSubmanagerDelegate>",W,N
T@"<NLCoachingSubmanagerDelegate>",W,N,VcoachingSubmanagerDelegate
com.apple.nanolifestyle.NLCoachingManager
v12@?0@"NSArray"4@"NSError"8
v12@?0@"CMPedometerData"4@"NSError"8
v12@?0@"HDRoutineLocationOfInterest"4@"NSError"8
Timeout fetching motion activity data
Timeout fetching pedometer data
Timeout fetching routine data
pollingQueue
activitySummaryQueue
v12@?0@"NSString"4@"HDBackgroundTask"8
NLCoachingManagerForceCoaching
Activity alerts suppressed (workout in progress)
v8@?0B4
com.apple.nanolifestyle.rings.completed
com.apple.nanolifestyle.settings.ActivitySetup
v24@?0@"NSArray"4@"NSDictionary"8q12@"NSError"20
not 
NLCoachingManagerScheduledRunDates
v16@?0@"NSString"4@"NSDate"8^B12
i12@?0@"NSNumber"4@"NSNumber"8
No polling reasons
Not on wrist, polling skipped
NLCoachingManagerPerformPoll
Protected data not available
v16@?0@"NSNumber"4I8^B12
Polling did not complete
v12@?0@"NLCoachingCondition"4@"NSError"8
com.apple.nanolifestyle.coachingManager
v16@?0@"NLActivityAlarmMonitor"4B8@"NSError"12
v24@?0d4d12@"CMMotionActivity"20
%@ %@
timestamp
onWrist
hasTimestamp
TB,N
TQ,N,V_timestamp
hasOnWrist
TB,N,V_onWrist
com.apple.nanolifestyle.coaching.goalCompletion
NanoLifestyleEnableFitnessDataCollectionSettingDidChangeNotification
observerQueue
NanoLifestylePreferencesChangedNotification
NanoLifestylePrivacyPreferencesChangedNotification
NanoLifestyleMuteCoachingAlertsPrefChangedNotification
identifier
awdMetricId
awdCodableData
hasAwdMetricId
TI,N,V_awdMetricId
hasAwdCodableData
TB,R,N
T@"NSData",&,N,V_awdCodableData
cacheIndex
energyBurned
briskMinutes
activeHours
stepCount
energyBurnedGoal
walkingAndRunningDistance
energyBurnedGoalDate
startDate
endDate
hasCacheIndex
Tq,N,V_cacheIndex
hasEnergyBurned
Tq,N,V_energyBurned
hasBriskMinutes
Tq,N,V_briskMinutes
hasActiveHours
Tq,N,V_activeHours
hasStepCount
Tq,N,V_stepCount
hasEnergyBurnedGoal
Tq,N,V_energyBurnedGoal
hasWalkingAndRunningDistance
Tq,N,V_walkingAndRunningDistance
hasEnergyBurnedGoalDate
Tq,N,V_energyBurnedGoalDate
hasStartDate
Tq,N,V_startDate
hasEndDate
Tq,N,V_endDate
com.apple.nanolifestyle.coaching.progress
NLDailyGoalProgressManagerFirstWristOnDateToday
NLDailyGoalProgressManagerDateOfLastIntervalReset
NLDailyGoalProgressManagerAlertCount
NLDailyGoalProgressManagerStandAlertCount
NLDailyGoalProgressManagerScheduledFireDate
com.apple.nanolifestyle.setting.%@.wriston
locationUUID
locationType
uncertaintyMillis
confidenceMillis
recentVisitCount
hasLocationUUID
T@"NSString",&,N,V_locationUUID
hasLocationType
Ti,N,V_locationType
hasUncertaintyMillis
Tq,N,V_uncertaintyMillis
hasConfidenceMillis
Tq,N,V_confidenceMillis
hasRecentVisitCount
Tq,N,V_recentVisitCount
Unknown
Home
Work
(unknown: %i)
experimentIdentifier
testCondition
hasExperimentIdentifier
T@"NSString",&,N,V_experimentIdentifier
hasTestCondition
Tq,N,V_testCondition
experimentalCondition
hasExperimentalCondition
T@"NLAWDHealthKitExperimentalCondition",&,N,V_experimentalCondition
observer_queue
hid_event_queue
Placement
DeviceUsagePage
DeviceUsage
dwelltimeMs
dismissReason
scrollBehavior
hasDwelltimeMs
TQ,N,V_dwelltimeMs
hasDismissReason
Ti,N,V_dismissReason
hasScrollBehavior
Ti,N,V_scrollBehavior
AutoDismissNotDisplayed
AutoDismissDisplayed
CrownPressed
SwipeToDismiss
ActionButton
DismissButton
Other
Mute
Timeout
DoNotDisturb
Snooze
PositiveAction
UnknownReason
None
Bottom
weightKg
heightCm
biologicalSex
ageYears
hasWeightKg
Tq,N,V_weightKg
hasHeightCm
Tq,N,V_heightCm
hasBiologicalSex
Tq,N,V_biologicalSex
hasAgeYears
Tq,N,V_ageYears
past
future
pasts
T@"NSMutableArray",&,N,V_pasts
futures
T@"NSMutableArray",&,N,V_futures
healthlite_event
bundleid
action
client_connected
client_disconnected
start_passive
start_active
stop_updates
heartrate
observers
NanoLifestyleSessionTrackerAppPreferencesChangedNotification
HDWorkoutManagerDidChangeCurrentWorkout
count/min
enabled
disabled
v20@?0I4i8B12@"NSError"16
v20@?0@"HKHealthService"4i8B12@"NSError"16
v8@?0@"NSArray"4
com.apple.nanolifestyle.sessiontrackerapp
EnablePowerSavingMode
Heart rate manager not available on simulator.
lastClientUUID
T@"NSUUID",&,N,V_lastClientUUID
enableStandReminders
progressUpdateFrequency
enableGoalCompletions
enableAchievements
enableWeeklySummary
timeZoneOffset
numberOfEvents
eventBusyTime
daysSinceFirstCalorieGoal
userCharacteristics
achievementStatistics
wellnessComplicationOnWatchFace
firstCalendarItemOfDay
hasEnableStandReminders
TB,N,V_enableStandReminders
hasProgressUpdateFrequency
Tq,N,V_progressUpdateFrequency
hasEnableGoalCompletions
TB,N,V_enableGoalCompletions
hasEnableAchievements
TB,N,V_enableAchievements
hasEnableWeeklySummary
TB,N,V_enableWeeklySummary
hasTimeZoneOffset
Tq,N,V_timeZoneOffset
hasNumberOfEvents
Tq,N,V_numberOfEvents
hasEventBusyTime
Tq,N,V_eventBusyTime
hasDaysSinceFirstCalorieGoal
Tq,N,V_daysSinceFirstCalorieGoal
hasUserCharacteristics
T@"NLAWDHealthKitUserCharacteristics",&,N,V_userCharacteristics
hasAchievementStatistics
T@"NLAWDHealthKitAchievementStatistics",&,N,V_achievementStatistics
hasWellnessComplicationOnWatchFace
TB,N,V_wellnessComplicationOnWatchFace
hasFirstCalendarItemOfDay
T@"NLAWDHealthKitConcurrentCalendarItem",&,N,V_firstCalendarItemOfDay
state
Ti,N,V_state
delegate
T@"<NLSedentaryTimerStateEngineDelegate>",W,N,V_delegate
*** Unable to create log name.
*** Error creating log file at %@
*** Error setting protection class for %@, %@
*** Error writing journal version %ld.
BuildVersion
*** Error writing os build %@.
*** Wrote wrong number of bytes to log, expected: %lu, actual: %llu (error %d: %s)
*** Exception writing to log: %@
%05ld.log
*** Log file too short for expected data, Offset: %lu Length: %ld, fileSize: %llu
*** Unknown entry (%lu bytes at offset %llu) found in log, stopping.
*** Log file too short for expected data, Offset: %lu Length: %d, fileSize: %ld
*** Unknown entry (%d bytes at offset %lu) found in log, stopping.
*** Error opening log file %@, %@
*** Log file fstat failed: %s
*** Could not read the version from the log.
Unable to read build length from log file
Unable to read build number from log file
path
T@"NSString",C,N,V_path
logLock
T@"NSLock",&,N,V_logLock
fileHandle
T@"NSFileHandle",&,N,V_fileHandle
location
arrivalDate
hasLocation
T@"NLAWDHealthKitRoutineLocation",&,N,V_location
hasArrivalDate
Tq,N,V_arrivalDate
idx (%tu) is out of range (%tu)
alertType
dndEnabled
failedPosting
testAction
calendarItem
views
activityCache
achievement
weeklySummaryDetail
goalTypes
responseFlags
hasAlertType
Ti,N,V_alertType
hasDndEnabled
TB,N,V_dndEnabled
hasFailedPosting
TB,N,V_failedPosting
hasTestAction
Ti,N,V_testAction
hasCalendarItem
T@"NLAWDHealthKitConcurrentCalendarItem",&,N,V_calendarItem
T@"NSMutableArray",&,N,V_views
hasActivityCache
T@"NLAWDHealthKitActivityCache",&,N,V_activityCache
hasAchievement
T@"NLAWDHealthKitAchievement",&,N,V_achievement
hasWeeklySummaryDetail
T@"NLAWDHealthKitWeeklySummaryDetail",&,N,V_weeklySummaryDetail
goalTypesCount
TI,R,N
T^I,R,N
hasResponseFlags
T@"NLAWDHealthKitNotificationResponseFlags",&,N,V_responseFlags
GoalProgress
GoalCompletion
StandAlert
WeeklyGoal
StandActive
StandSuccess
Achievement
DeepBreathing
DeepBreathingWeekly
Allow
Ignore
walking
automotive
cycling
running
other
workout
heartRate
activeCalories
duration
unknown
hasWalking
TI,N,V_walking
hasAutomotive
TI,N,V_automotive
hasCycling
TI,N,V_cycling
hasRunning
TI,N,V_running
hasOther
TI,N,V_other
hasWorkout
TI,N,V_workout
hasHeartRate
TI,N,V_heartRate
hasActiveCalories
TI,N,V_activeCalories
TI,N,V_briskMinutes
hasDuration
TI,N,V_duration
hasUnknown
TI,N,V_unknown
activityType
durationMs
totalEnergyBurned
totalDistance
totalSteps
hasActivityType
Ti,N,V_activityType
hasDurationMs
Tq,N,V_durationMs
hasTotalEnergyBurned
Tq,N,V_totalEnergyBurned
hasTotalDistance
Tq,N,V_totalDistance
hasTotalSteps
Tq,N,V_totalSteps
AmericanFootball
Archery
AustralianFootball
Badminton
Baseball
Basketball
Bowling
Boxing
Climbing
Cricket
CrossTraining
Curling
Cycling
Dance
DanceInspiredTraining
Elliptical
EquestrianSports
Fencing
Fishing
FunctionalStrengthTraining
Golf
Gymnastics
Handball
Hiking
Hockey
Hunting
Lacrosse
MartialArts
MindAndBody
MixedMetabolicCardioTraining
PaddleSports
Play
PreparationAndRecovery
Racquetball
Rowing
Rugby
Running
Sailing
SkatingSports
SnowSports
Soccer
Softball
Squash
StairClimbing
SurfingSports
Swimming
TableTennis
Tennis
TrackAndField
TraditionalStrengthTraining
Volleyball
Walking
WaterFitness
WaterPolo
WaterSports
Wrestling
Yoga
Barre
CoreTraining
CrossCountrySkiing
DownhillSkiing
Flexibility
HighIntensityIntervalTraining
JumpRope
Kickboxing
Pilates
Snowboarding
Stairs
StepTraining
WheelchairWalk
WheelchairRun
HandCycling
Wheelchair
i12@?0@"HKActivitySummary"4@"HKActivitySummary"8
v16@?0@"HKActivitySummary"4I8^B12
consecutiveStandingHoursGoalsMet
consecutiveBriskMinuteGoalsMet
currentCalorieGoalConsecutiveCompleteDays
consecutiveCompleteDays
hasConsecutiveStandingHoursGoalsMet
Tq,N,V_consecutiveStandingHoursGoalsMet
hasConsecutiveBriskMinuteGoalsMet
Tq,N,V_consecutiveBriskMinuteGoalsMet
hasCurrentCalorieGoalConsecutiveCompleteDays
Tq,N,V_currentCalorieGoalConsecutiveCompleteDays
hasConsecutiveCompleteDays
Tq,N,V_consecutiveCompleteDays
achievementType
completedDate
value
definitionIdentifier
workoutActivityType
hasAchievementType
Ti,N,V_achievementType
hasCompletedDate
Tq,N,V_completedDate
hasValue
Tq,N,V_value
hasDefinitionIdentifier
T@"NSString",&,N,V_definitionIdentifier
hasWorkoutActivityType
Ti,N,V_workoutActivityType
FirstSessionOfType
BestSessionCalories
SevenWorkoutsInWeek
OneTimeStepCountMilestone
StepCountMilestone
BestDailyCalories
BestDailyBriskMinutes
DailyGoalExceeded50
DailyGoalExceeded100
DailyGoalExceeded200
DailyGoalExceeded300
DailyGoalComplete
DailyGoalCompleteWeek
DailyGoalCompleteMonth
DailyGoalComplete10Weeks
DailyGoalLongestStreak
DailyGoalLifetimeMilestone
application
hasApplication
Ti,N,V_application
ActivityMonitorApp
ProgressUpdateAfterWristOn
submanagerIdentifier
NLNanoAchievementDefinitionAlertSuppressor
SuppressionTimerAfterWristOn
T@"<HDAchievementDefinitionAlertSuppressorDelegate>",W,N
T@"<HDAchievementDefinitionAlertSuppressorDelegate>",W,N,Vdelegate
UUID
NLAchievementManagerRunForNewData
Exception caught when evaluating achievement predicates: %@
com.apple.health.achievements
.didrun
%@.earned.%@.workout.%lu
%@.earned.%@
.value
.completioninterval
B20@?0@"HKObject"4q8^@16
i12@?0@"HKWorkout"4@"HKWorkout"8
Last run: %@
HKAchievementTypeDailyGoalCompleteWeek_HKDailyGoalTypeAll
AchievementTenMinutesAfterWristOn
NLAchievementManagerLastScheduledWristOnTaskDate
NLAchievementManagerScheduledAchievementDelay
workouts
steps
move
exercise
stand
none
day changed
workout added
move goal achieved
move goal multiple achieved
exercise goal achieved
stand goal achieved
all goals achieved
i12@?0@"NLCoachingAlertRequest"4@"NLCoachingAlertRequest"8
healthDaemon
T@"<HDHealthDaemon>",W,N,V_healthDaemon
achievementEngine
T@"HDAchievementEngine",&,N,V_achievementEngine
achievementDataStore
T@"HDAchievementDataStore",&,N,V_achievementDataStore
achievementDefinitions
T@"HDAchievementDefinitions",&,N,V_achievementDefinitions
dailyGoalDetectionDelegate
T@"<HDDailyGoalDetectionDelegate>",&,N,V_dailyGoalDetectionDelegate
lastRunDate
T@"NSDate",&,N,V_lastRunDate
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
NLAlertSuppressionReason
NLAlertSuppressionClientTimeout
NLAlertSuppressionClients
alertSuppressionQueue
alertSuppressionObserverQueue
backlightQueue
v8@?0@"_NLCoachingBacklightObserver"4
com.apple.nanolifestyle.NLGizmoWristEventsManager
GizmoWristEventsManagerGizmoOffWristEvent
lastGizmoOnDate
firstGizmoOnTodayDate
internalQueue
wristDetectionQueue
v12@?0B4@"NSError"8
OFF Wrist
ON Wrist
Wrist Detection Disabled
v8@?0i4
 UNKNOWN
Off-wrist
wristState
mostRecentOnWristDate
T@"NSDate",R
firstOnWristTodayDate
SedentaryTimerDataObjectsTransaction
SedentaryTimerStartTransaction
SedentaryTimerStopTransaction
v8@?0@"NSError"4
com.apple.nanolifestyle.sedentaryTimer
settled
moving
B12@?0@"HDSQLiteDatabase"4^@8
T@"<NLSedentaryTimerAlertDelegate>",W,N,V_delegate
com.apple.nanolifestyle.fakestand
com.apple.locationd.sedentarytimer
hasMigrated
supportsSecureCoding
TB,R
from
mode
start_date
end_date
hasFrom
T@"NLAWDHealthKitRoutineLocation",&,N,V_from
hasTo
T@"NLAWDHealthKitRoutineLocation",&,N,V_to
hasMode
Ti,N,V_mode
Automotive
Pedestrian
batteryState
hasBatteryState
Ti,N,V_batteryState
Unplugged
Charging
Full
v12@?0@"CMOdometerData"4@"NSError"8
@"NSArray"12@?0@"NSArray"4@"CMOdometerData"8
i12@?0@"CMOdometerData"4@"CMOdometerData"8
poorTiming
alreadyDoing
hasPoorTiming
TB,N,V_poorTiming
hasAlreadyDoing
TB,N,V_alreadyDoing
isBusy
hasIsBusy
TB,N,V_isBusy
standHourTimestamp
didStand
hasStandHourTimestamp
Tq,N,V_standHourTimestamp
hasDidStand
TB,N,V_didStand
activeSeconds
eventTimestamp
height
weight
TI,N,V_energyBurned
hasActiveSeconds
TI,N,V_activeSeconds
TI,N,V_energyBurnedGoal
hasEventTimestamp
TQ,N,V_eventTimestamp
TI,N,V_biologicalSex
hasHeight
TI,N,V_height
hasWeight
TI,N,V_weight
hasAge
TI,N,V_age
HealthLite
EnableDemoMode
com.apple.DeepBreathing
DeepBreathingSessionServerTransaction
%@.%@
healthLiteQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_healthLiteQueue
client
T@"<NSXPCProxyCreating>",R,N,V_client
daemon
T@"<HDHealthDaemon>",R,N,V_daemon
T@"<HDDeepBreathingSessionServerDelegate>",R,W,N,V_delegate
sessionConfiguration
T@"_HKDeepBreathingSessionConfiguration",R,N,V_sessionConfiguration
serverState
Ti,N,V_serverState
sessionUUID
T@"NSUUID",R
v12@?0@"CMNatalieData"4@"NSError"8
eventType
goalType
recommendedGoal
newGoal
features
hasEventType
TI,N,V_eventType
TI,N,V_dismissReason
hasRecommendedGoal
TI,N,V_recommendedGoal
hasNewGoal
TI,N,V_newGoal
TQ,N,V_duration
hasFeatures
T@"NLAWDHealthKitCoachingFeatureGroup",&,N,V_features
typeIdentifier
inSession
minDelayUs
maxDelayUs
meanDelayUs
stdDelayUs
sampleCount
indexInSession
hasTypeIdentifier
Tq,N,V_typeIdentifier
hasInSession
TB,N,V_inSession
hasMinDelayUs
Tq,N,V_minDelayUs
hasMaxDelayUs
Tq,N,V_maxDelayUs
hasMeanDelayUs
Tq,N,V_meanDelayUs
hasStdDelayUs
Tq,N,V_stdDelayUs
hasSampleCount
Tq,N,V_sampleCount
hasIndexInSession
Tq,N,V_indexInSession
com.apple.nanolifestyle.NLWeeklySummaryManager.mondayafterwriston
com.apple.nanolifestyle.coaching.weeklySummary
mostRecentWeeklySummaryAlertDate
NLWeeklySummaryManagerPresentationDelay
NLForceShowWeeklySummaryNotification
NLWeeklySummaryShowEveryDay
Test provider not available
nanoHealthPlugin
T@"NLNanoHealthPlugin",W,N,V_nanoHealthPlugin
T@"<NLIngestionTrackerDelegate>",W,N,V_delegate
dataTypeCode
Ti,R,N,V_dataTypeCode
NLDataLogEnabled
DataLogs
v12@?0@"EKEvent"4^B8
v16@?0B4B8@"NSError"12
B24@?0@"HKQuantitySample"4@"HKDeletedObject"8q12^@20
EKEventStore
Unable to find class %s
/System/Library/Frameworks/EventKit.framework/EventKit
NLDeepBreathingWeeklySummary
com.apple.nanolifestyle.coaching.deepBreathingWeeklySummary
mostRecentDeepBreathingWeeklySummaryAlertDate
NLDeepBreathingWeeklySummarySubmanagerPresentationDelay
NLForceShowDeepBreathingWeeklySummaryNotification
NLDeepBreathingWeeklySummaryShowEveryDay
Ti,N,V_eventType
hasSessionUUID
T@"NSString",&,N,V_sessionUUID
NotStarted
Ended
mostRecentGoal
numTimesGoalAchieved
selectedGoal
hasMostRecentGoal
Tq,N,V_mostRecentGoal
hasNumTimesGoalAchieved
Tq,N,V_numTimesGoalAchieved
hasSelectedGoal
Tq,N,V_selectedGoal
NLCoachingAlertRequestCoalescer
NLCoachingAlertNotifier
NLActivitySedentaryAlertObserver
NSObject
NLActivityCoachingAlertObserver
NLActivityAchievementDefinitionAlertObserver
NLActivityCarouselServiceProvider
NLDeepBreathingCoachingSubmanager
HDHealthDaemonReadyObserver
NLBridgeSettingsObserver
NLCoachingSubmanager
NLMockKeyValueDomain
CoachingConditionGenerator
NLCoachingManager
NLWristStateObserver
HDDatabaseProtectedDataObserver
HDCurrentActivitySummaryHelperObserver
HDNanoAlertSuppressionObserver
NLCoachingSubmanagerDelegate
NLAWDHealthKitWristEvent
NSCopying
NLDailyGoalCompletionManager
HDDailyGoalDetectionDelegate
NLBridgeSettings
NLNanoAchievementDefinitionAlertNotifier
HDAchievementDefinitionAlertNotifier
NLLogCodableLogMessage
NLAWDHealthKitActivityCache
NLCoachingPreferences
NLAWDHealthKitRoutineLocation
NLAWDHealthKitExperimentalCondition
NLAWDHealthKitExperimentalConditionEvent
NLHIDHandler
NLAWDHealthKitNotificationView
NLAWDHealthKitUserCharacteristics
NLAWDHealthKitCoachingFeatureGroup
NLHeartRateManager
HDDataObserver
HDDiagnosticObject
NLAWDHealthKitWristOnSettings
NanoHealth
NLSedentaryTimerStateEngine
NLDataLog
NLMockBridgeSettings
NLSwimmingDataCollector
_NLSwimmingDistanceDataCollector
_NLSwimmingStrokesDataCollector
NLAWDHealthKitRoutineLocationVisitEvent
NLAWDHealthKitNotificationEvent
NLWorkoutAutopauseManager
NLHIDHandlerObserver
NLAWDHealthKitCoachingFeatures
NLViewOnWakeService
HDViewOnWakeService
NLAWDHealthKitWorkout
NLWeeklyGoalRecommendationEngine
NLAWDHealthKitAchievementStatistics
NLAWDHealthKitAchievement
NLAWDHealthKitApplicationLaunchEvent
NLAWDHealthKitActivityCacheEvent
NLDailyGoalProgressManager
NLNanoAchievementDefinitionAlertSuppressor
HDAchievementDefinitionAlertSuppressor
NLAchievementManager
HDAchievementEngineDelegate
_HKAchievementPredicateWorkoutsEnvironmentDataSource
_NLCoachingBacklightObserver
CSLSBacklightObserver
NLAlertSuppressionManager
HDNanoAlertSuppressionService
NLGizmoWristEventsManager
NLSedentaryTimer
NLSedentaryTimerStateEngineDelegate
NLTestConditionObserver
NLAppleExerciseTimeDataCollector
NLAppleExerciseTimeDataCollectorExtensions
HDSensorDatum
NSSecureCoding
NSCoding
NLAWDHealthKitRoutineTransitionEvent
NLAWDHealthKitBatteryStateEvent
NLOdometerDataCollector
_NLDistanceCyclingDataCollector
_NLDistanceWheelchairDataCollector
NLOdometerDataCollectorExtensions
NLAWDHealthKitNotificationResponseFlags
NLAWDHealthKitConcurrentCalendarItem
NLAWDHealthKitStandHourEvent
NLAWDHealthKitActivityRingEvent
NLDeepBreathingSessionServer
_HKDeepBreathingSessionServer
HDDeepBreathingSessionServer
NLCalorimetryDataCollector
_NLActiveEnergyDataCollector
_NLBasalEnergyDataCollector
NLCalorimetryDataCollectorExtensions
NLAWDHealthKitCoachingEvent
NLAWDHealthKitIngestionLatencyEvent
NLWeeklySummaryManager
NLNanoHealthServer
NLNanoHealthServerInterface
HKExtendedServerInterface
NLActivityAlertResponder
NLIngestionTracker
NLDataLogger
HDRoutineObserver
HDWorkoutEventObserver
NLIngestionTrackerDelegate
NLDeepBreathingWeeklySummarySubmanager
NLAWDHealthKitWorkoutSessionEvent
NLAWDHealthKitWeeklySummaryDetail
@12@0:4@8
@16@0:4@8@12
v28@0:4i8@12i16i20@24
v28@0:4i8@"NSDate"12i16i20@"NLExperimentInstance"24
v8@0:4
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v12@0:4@8
v12@0:4@"NSArray"8
v12@0:4@"NSString"8
v12@0:4@?8
v12@0:4@?<v@?BB@"NSError">8
v16@0:4@8I12
@"NSMutableSet<NLActivitySedentaryAlertObserver>"
@"NSMutableSet<NLActivityCoachingAlertObserver>"
@"NSMutableSet<NLActivityAchievementDefinitionAlertObserver>"
@"NSMutableSet<NLActivityCarouselServiceProvider>"
@"NSObject<OS_dispatch_queue>"
v12@0:4@"<HDHealthDaemon>"8
v12@0:4@"NLBridgeSettings"8
v12@0:4B8
@20@0:4I8B12^B16
@"NSArray"20@0:4I8B12^B16
@"NSArray"12@0:4@"NSArray"8
v16@0:4@8@12
v16@0:4@"NSArray"8@"NSArray"12
v12@0:4@"NLCoachingAlertResponse"8
@"<NLCoachingSubmanagerDelegate>"8@0:4
v12@0:4@"<NLCoachingSubmanagerDelegate>"8
d8@0:4
v16@0:4@8B12
@"<HDHealthDaemon>"
@"NLBridgeSettings"
@"<NLCoachingSubmanagerDelegate>"
@20@0:4i8@12@16
B20@0:4@8@12^@16
@16@0:4@8^@12
B24@0:4@8@12@16^@20
@20@0:4@8@12^@16
B16@0:4@8^@12
@12@0:4^@8
@"NSMutableDictionary"
v32@0:4@8@12@16@20@24@?28
q12@0:4@8
v16@0:4@"<HDHealthDatabase>"8B12
v20@0:4@8@12I16
v20@0:4@"HDCurrentActivitySummaryHelper"8@"HKActivitySummary"12I16
v16@0:4@8i12
v16@0:4@"NSString"8i12
v12@0:4@"<NLCoachingSubmanager>"8
v20@0:4@8@12@16
v20@0:4@"<NLCoachingSubmanager>"8@"NSString"12@"NSDate"16
B16@0:4@8@12
B16@0:4@"<NLCoachingSubmanager>"8@"NSString"12
v16@0:4@"<NLCoachingSubmanager>"8@"NSString"12
@"NSDate"12@0:4@"<NLCoachingSubmanager>"8
@"NSDate"8@0:4
@"NLCoachingPreferences"8@0:4
@"NLCoachingCondition"8@0:4
@"HKActivitySummary"8@0:4
@40@0:4@8@12@16@20@24@28@32@36
v16@0:4@8@?12
B16@0:4q8
d12@0:4I8
v12@0:4I8
v16@0:4I8@?12
i12@0:4I8
v16@0:4@?8B12
@20@0:4I8B12B16
@"NLCoachingAlertNotifier"
@"HDBackgroundTaskScheduler"
@"NLGizmoWristEventsManager"
@"NLDataLogger"
@"NLCoachingPreferences"
@"CMMotionActivityManager"
@"CMPedometer"
@"NLCoachingCondition"
@"<NLTestConditionProvider>"
@"NSMutableSet"
@"NSDictionary"
@"HKActivitySummary"
@"NSDate"
@"NSMutableArray"
@12@0:4^{_NSZone=}8
v16@0:4Q8
Q8@0:4
{?="timestamp"b1"onWrist"b1}
v32@0:4d8d16d24
v24@0:4d8d16
v16@0:4I8I12
B12@0:4I8
B12@0:4r*8
@20@0:4@8@12@16
@"NSHashTable"
@"NSData"
{?="awdMetricId"b1}
v16@0:4q8
q8@0:4
{?="activeHours"b1"briskMinutes"b1"cacheIndex"b1"endDate"b1"energyBurned"b1"energyBurnedGoal"b1"energyBurnedGoalDate"b1"startDate"b1"stepCount"b1"walkingAndRunningDistance"b1}
i8@0:4
i12@0:4@8
v16@0:4i8@12
v12@0:4i8
@12@0:4i8
@"NSString"
{?="confidenceMillis"b1"recentVisitCount"b1"uncertaintyMillis"b1"locationType"b1}
{?="testCondition"b1}
@"NLAWDHealthKitExperimentalCondition"
{?="timestamp"b1}
v16@0:4d8
v16@0:4^{__IOHIDServiceClient=}8^v12
v16@0:4^{__IOHIDEvent=}8^v12
B12@0:4^B8
^{__IOHIDEventSystemClient=}
^{__IOHIDServiceClient=}
{?="dwelltimeMs"b1"endDate"b1"startDate"b1"dismissReason"b1"scrollBehavior"b1}
{?="ageYears"b1"biologicalSex"b1"heightCm"b1"weightKg"b1}
@12@0:4I8
v16@0:4@"NSArray"8@"NSNumber"12
v16@0:4@"NSArray"8@"HKSampleType"12
v20@0:4I8B12@16
@"NSObject<OS_dispatch_source>"
@"CMCatherineFeeder"
@"HDDeviceEntity"
@"NSUUID"
@"NLAWDHealthKitAchievementStatistics"
@"NLAWDHealthKitConcurrentCalendarItem"
@"NLAWDHealthKitUserCharacteristics"
{?="daysSinceFirstCalorieGoal"b1"eventBusyTime"b1"numberOfEvents"b1"progressUpdateFrequency"b1"timeZoneOffset"b1"timestamp"b1"enableAchievements"b1"enableGoalCompletions"b1"enableStandReminders"b1"enableWeeklySummary"b1"wellnessComplicationOnWatchFace"b1}
@16@0:4i8@12
@"<NLSedentaryTimerStateEngineDelegate>"
B20@0:4@8@?12^@16
B28@0:4^v8L12L16@?20^@24
B32@0:4@8@12^v16L20@?24^@28
B36@0:4I8@12^v16L20L24@?28^@32
B20@0:4@8L12^@16
@"NSLock"
@"NSFileHandle"
v20@0:4@8@12@?16
@24@0:4@8@12@16@20
@"CMSwimTracker"
@"NLAWDHealthKitRoutineLocation"
{?="arrivalDate"b1"timestamp"b1}
^I8@0:4
I12@0:4I8
v16@0:4^I8I12
{?="list"^I"count"I"size"I}
@"NLAWDHealthKitAchievement"
@"NLAWDHealthKitActivityCache"
@"NLAWDHealthKitNotificationResponseFlags"
@"NLAWDHealthKitWeeklySummaryDetail"
{?="endDate"b1"startDate"b1"timestamp"b1"alertType"b1"testAction"b1"dndEnabled"b1"failedPosting"b1}
v16@0:4@"NLHIDHandler"8B12
@"NLHIDHandler"
{?="activeCalories"b1"automotive"b1"briskMinutes"b1"cycling"b1"duration"b1"heartRate"b1"other"b1"running"b1"unknown"b1"walking"b1"workout"b1}
v20@0:4B8@12@16
v20@0:4B8@"NSString"12@"NSString"16
{?="durationMs"b1"endDate"b1"startDate"b1"timestamp"b1"totalDistance"b1"totalEnergyBurned"b1"totalSteps"b1"activityType"b1}
d20@0:4@8@12^@16
d16@0:4@8i12
I12@0:4@8
I20@0:4d8@16
d12@0:4@8
I16@0:4@8I12
{?="consecutiveBriskMinuteGoalsMet"b1"consecutiveCompleteDays"b1"consecutiveStandingHoursGoalsMet"b1"currentCalorieGoalConsecutiveCompleteDays"b1}
{?="completedDate"b1"value"b1"achievementType"b1"workoutActivityType"b1}
{?="timestamp"b1"application"b1}
@"<HDAchievementDefinitionAlertSuppressorDelegate>"8@0:4
v12@0:4@"<HDAchievementDefinitionAlertSuppressorDelegate>"8
@"<HDAchievementDefinitionAlertSuppressorDelegate>"
@"HKQuantity"8@0:4
@20@0:4q8^q16
@"NSArray"20@0:4q8^q16
@"NSArray"12@0:4@"NSNumber"8
@"NSArray"16@0:4@"NSDate"8@"NSDate"12
B20@0:4@8I12@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"_HKAchievementPredicateEnvironment"
@"HKUnit"
@"HDAchievementEngine"
@"HDAchievementDataStore"
@"HDAchievementDefinitions"
@"<HDDailyGoalDetectionDelegate>"
@12@0:4@?8
v20@0:4@8i12i16
v20@0:4@"NSString"8i12i16
v16@0:4@"NSString"8I12
v12@0:4@"<HDNanoAlertSuppressionObserver>"8
v20@0:4@8i12@16
v20@0:4@"NSString"8i12@"NSDate"16
v12@0:4@?<v@?B>8
v16@0:4i8@?12
v16@0:4i8@?<v@?B>12
I12@0:4i8
v20@0:4I8B12B16
@"CSLSOnWristMonitor"
v12@0:4@"<NLTestConditionProvider>"8
@28@0:4@8@12@16@20@24
B16@0:4i8@12
v20@0:4i8@12B16
v20@0:4i8@12@16
@"CMSedentaryTimer"
@"<HDHealthDatabase>"
@"NLSedentaryTimerStateEngine"
@"NLExperimentalCondition"
@"NLExperimentInstance"
@"NLActivityAlarmMonitor"
@"<NLSedentaryTimerAlertDelegate>"
@"CMExerciseMinute"
@"NSUUID"8@0:4
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
{?="endDate"b1"startDate"b1"timestamp"b1"mode"b1}
{?="timestamp"b1"batteryState"b1}
@"CMOdometer"
@"HDLiveDataCollectorBuffer"
{?="alreadyDoing"b1"poorTiming"b1}
{?="endDate"b1"startDate"b1"isBusy"b1}
{?="standHourTimestamp"b1"timestamp"b1"didStand"b1}
{?="eventTimestamp"b1"timestamp"b1"activeSeconds"b1"age"b1"biologicalSex"b1"briskMinutes"b1"energyBurned"b1"energyBurnedGoal"b1"height"b1"weight"b1}
v16@0:4@"NSDate"8@?<v@?B@"NSError">12
@"<NSXPCProxyCreating>"
@"<HDDeepBreathingSessionServerDelegate>"
@"_HKDeepBreathingSessionConfiguration"
@"CMNatalimeter"
@"NLAWDHealthKitCoachingFeatureGroup"
{?="duration"b1"eventTimestamp"b1"timestamp"b1"dismissReason"b1"eventType"b1"newGoal"b1"recommendedGoal"b1}
{?="endDate"b1"indexInSession"b1"maxDelayUs"b1"meanDelayUs"b1"minDelayUs"b1"sampleCount"b1"startDate"b1"stdDelayUs"b1"timestamp"b1"typeIdentifier"b1"inSession"b1}
v12@0:4@?<v@?@"NSArray"@"NSError">8
v16@0:4@"NSArray"8@?<v@?B@"NSError">12
v16@0:4@"NLExperimentalCondition"8@?<v@?B@"NSError">12
v20@0:4@8i12@?16
v20@0:4@"NSString"8i12@?<v@?B@"NSError">16
v12@0:4@?<v@?i@"NSError">8
v20@0:4@"NSDate"8@"NSDate"12@?<v@?@"NSArray"@"NSError">16
v16@0:4@"_HKAchievement"8@?<v@?@"_HKAchievement"@"NSError">12
v16@0:4@"NSArray"8@?<v@?@"NSArray"@"NSError">12
v12@0:4@?<v@?B@"NSError">8
v16@0:4@"NSString"8@?<v@?B@"NSError">12
v12@0:4@?<v@?@"NSURL"@"NSError">8
v16@0:4@"NSURL"8@?<v@?B@"NSError">12
v16@0:4@"_HKAchievement"8@?<v@?B@"NSError">12
v16@0:4B8@?12
v16@0:4B8@?<v@?@"NSArray"B@"NSError">12
v20@0:4@"NSDate"8@"NSTimeZone"12@?<v@?B@"NSError">16
v16@0:4@"NSUUID"8@?<v@?B@"NSError">12
v12@0:4@?<v@?@"NSDate"@"NSError">8
v20@0:4B8B12@?16
v20@0:4B8B12@?<v@?B@"NSError">16
v16@0:4@"NLCoachingAlertResponse"8@?<v@?B@"NSError">12
@"NLNanoHealthPlugin"
v24@0:4@8d12B20
@"<NLIngestionTrackerDelegate>"
i12@0:4i8
v20@0:4@8I12@16
v20@0:4@"HDRoutineGateway"8I12@"HDRoutineLocationOfInterest"16
v16@0:4@"HDWorkoutManager"8@"_HKWorkoutEvent"12
v16@0:4@"NLIngestionTracker"8@"NLAWDHealthKitIngestionLatencyEvent"12
v28@0:4@8@12@16d20
v16@0:4B8@12
v16@0:4@8L12
@"EKEventStore"
@"NLDataLog"
@"AWDServerConnection"
{?="timestamp"b1"activityType"b1"eventType"b1}
{?="mostRecentGoal"b1"numTimesGoalAchieved"b1"selectedGoal"b1}
%@ in %@ with alertType: %ld and timeout: %@
%@ resetting interval start date to %@
%@ interval is set to 0. Returning early.
%@ has never been on wrist. Returning early.
%@ interval is %f, base date is %@, now is %@, fire date is %@
_setScheduledAlertDate %@
%@ scheduled fire date %@ was from a different day than today. Not showing deep breathing reminder.
%@ actual fire date %@ is before the scheduled fire date of (%@). Not showing deep breathing reminder.
%@ deep breathing session ended, resetting alert interval.
Response %@ received for fake sedentary timer submanager
Response %{public}@ received for missing submanager %{public}@
Response received: %@
Coaching submanager %@ added forced requests %@
Submanager %@ requested poll
Submanager %@ added scheduled task with identifier %@ at %@
Submanager %@ canceled scheduled task with identifier %@
Watch went %{public}@ wrist, notifying submanagers
Submitting activity summary index %ld
Not submitting activity summary index %ld - already submitted
Protected data is now available, and we tried to run earlier. Running now.
Watch on wrist, and we tried to run earlier. Running now.
aggd: activity setup <- %ld
Error fetching activity summary: %{public}@
No activity summary found for yesterday and error was nil
aggd: rings completed <- %ld
Activity summary is now loaded, performing poll if it's set
Poll was requested for reason %ld
Polling reasons are %@, pollingDelay=%.1lf
Will perform poll after move goal check
Performing poll; move goal is %{public}@set and %{public}@loaded
Needs to poll for scheduled date %@
Persisted future scheduled run date for %@, scheduled dates are now %@
Removed future scheduled run date for task %@, scheduled dates are now %@
Cleared future scheduled run dates, scheduled dates are now %@
Skipping poll, no polling reasons
Skipping poll, not on wrist
Skipping poll, activity alerts are suppressed due to a workout in progress
Coaching manager performing 3-step handshake for reasons %@
Coaching manager tried to do a scheduled run, but protected data wasn't available. Holding off until unlock.
Poll finished for scheduled run
Poll finished successfully
Poll finished unsuccessfully
Error estimating condition: %@
Coaching submanager %{public}@ added requests %{public}@
Alerts are not enabled for coaching submanager %{public}@
Error %@ in %@.
 Error %@ in %@.
Goal type %ld was previously met today
Attempted to add goal type %ld that was already added; existing set is %@
Goal type %ld was just met
Calorie burn today went from %f to %f; goal is %f
Calorie burn today updated
Brisk minutes today went from %f to %f
Brisk minutes today updated
Standing hours today went from %ld to %ld
Standing hours today updated
Concluded daily goal completion detection run unsuccessfully. Resetting daily goal types met today and removing any goal types we might have tried to fire.
Requesting poll for %ld completed goal types
 %@ in %@.
Bridge settings changed notification received from launchd
Bridge privacy settings changed notification received from launchd
Bridge mute coaching settings changed notification received from launchd
Received achievement definitons to notify for alert: %@
Sending definiton alert notifier: %@
Error when trying to read data from key value domain for key %@. Error: %@.
Error when trying to save data to key value domain: %{public}@. %@:%@
Saving coaching event, category sample = %@.
Could not save coaching event to HealthKit database: %@
Need to shift %@
Set minutes %@
Moved forward an hour %@
Updating first wrist-on date today to %@
Adding wrist-on coaching event
Resetting interval start date to %@
[HID] Notifying observers of wrist event %@
Requested forceWristDetect, but valid event was returned so we're not starting detection.
%@, UNIT_TESTING only.
[NLHRM] Not setting workout activity type to %lu since it is not the most recent client.
[NLHRM] HealthLite not available.
[NLHRM] Feeding %.0f to Catherine.
[NLHRM] BTLE HR not found, %@ in %@
[NLHRM] Heart rate setting changed to %s.
[NLHRM] Heart rate is disabled due to privacy.
[NLHRM] Found %ld heart rate pairings. <%f>
[NLHRM] Heart rate service %@ connected <%f>.
[NLHRM] Heart rate timer fired <%f>.
[NLHRM] Starting heart rate timer <%f>.
[NLHRM] Resetting heart rate timer <%f>.
[NLHRM] Stopping heart rate timer <%f>.
[NLHRM] PowerLog %@: %@
Power saving mode preference changed; updating platinum status.
[SEDT] %@ for state: %ld returns: %ld
[NLLog] *** Error creating log directory %@: %@
[NLLog] *** Added %lu of %lu entries, error: %@
[NLLog] Creating new log file %@
[NLLog] Error setting F_NOCACHE on file at %@: %s
[NLLog] *** Failed to set up log file, deleting %@, error: %@
[NLLog] *** Failed to delete log file %@, error: %@
[Log] *** Encountered log index %ld. Dropping entry
[Log] Processed file size %lluK.
[NLDL] Processed file size %luK.
*** Log file could not be mapped: %d
*** Unexpected log version %u at path %@
[NLDL] Map load time: %0.2f
[NLDL] *** Map load time: %0.2f, error: %@
[NLDL] Load time: %0.2f
[NLDL] *** Load time: %0.2f, error: %@
Registering for swimming data updates
[AUTO] Pausing active workouts
[AUTO] Encountered wrist on event, resetting _consecutiveOffWristEvents from %ld
[AUTO] %@: Incrementing off wrist event count from %ld
Error fetching activity caches for the past 4 weeks: %@
Interval is set to 0. Returning early.
Has never been on wrist. Returning early.
Progress update interval is %f, base date is %@, now is %@, tentative fire date is %@, resulting next fire date is %@
Scheduled fire date %@ was from a different day than today. Not showing progress update.
Actual fire date %@ is sooner than the scheduled fire date of (%@). Not showing progress update.
Protected data became available, rescheduling progress update
Achievement alert suppression task fired
Watch went on wrist, rescheduling achievement definition alert if needed
Watch wrist state detection disabled, rescheduling achievement definition alert if needed
A move goal has been set; notifying definition alert suppression observers that we're no longer suppressed
Scheduled achievement alert suppression task for %f
Went to reschedule achievement alert suppression task, but nobody wanted to alert
Performing database identifier check
Failed to run database identifier check: %{public}@
Failed to retrieve last database identifier: %{public}@
Achievements Manager returning early because remaining run count (%i) > 0 and intervalSinceLastRun (%f) < Max Delay (%f)
Attempted to run, but protected data unavailable. Holding off.
NanoSync pairing is not activated, cancelling run
Current date %@ is before the reference date. Avoiding running achievement detection until we have a sane date.
Will run for %{public}@
Activity summary has no move goal set: %@
It's a new day. Today activity summary index went from %ld to %ld.
Activity summaries not ready! Yesterday summary: %{public}@ isLoading: %d; Today summary: %{public}@ isLoading: %d
Detected triggers %{public}@
{public}%@
Finished achievement detection run
Encountered error trying to commit, will try again next time protected data is available. %{public}@
Will notify for %ld achievements: %@
Will not notify for achievements since they're all scheduled for the next day: %@
Error fetching workouts of type %{public}@
Error fetching workouts from date %{public}@ to %{public}@: %{public}@
Error fetching workouts after anchor %ld: %{public}@
Error fetching most recent workout: %{public}@
Returned nil activity cache from %@
Missing achievement in userInfo dictionary for alert request %@
%@ in %@
%@ does not have a completion block passed in.
In %@. Current date %@ is later than alert suppression timeout date %@ for reason: %@. Why does the timeout date still exist?
Alert suppression state for %@ = %ld
Workout ended for client %@
maxTimeoutDate = %@
[WRIST] init gizmo timer manager.
[WRIST] on-wrist state changed notif received in %@
[WRIST] wrist detection state changed notif received in %@
[WRIST] %@:%@
[WRIST] error %@ in getting wristDetectionState from Carousel.
[WRIST] Firing a fake wrist state notification.
[WRIST] Notifying we are in %@ state to new observer %@
[WRIST] Wrist detection state is ENABLED.
[WRIST] Wrist detection state is DISABLED or UNKNOWN.
[WRIST] %@ with wrist monitor: %p
[WRIST] gizmo wrist state is %s
[WRIST] gizmo wrist state is ON
[WRIST] cancelling debounce timer if exists.
[WRIST] Debounce timer is already running with end date %@.
[WRIST] scheduling debounce timer for %@
[WRIST] ignoring duplicate wrist state %@
[WRIST] send gizmo wrist state %@ to registered observers.
[SEDT] init sedentaryTimer.
[SEDT] fake stand notification triggered
[SEDT] Failed to register for fake stand trigger notifications
[SEDT] Experimental condition changed to %@ reminderInterval=%.1lf old interval=%.1lf
[SEDT] %@ initial state is %ld
[SEDT] sedentaryTimer CoreMotion FiredNotification from launchd
[SEDT] device just PAIRED.
[SEDT] device just UNPAIRED
%@: %ld. isFitnessTrackingON: %ld, isDevicePaired: %ld, isOnWrist: %ld
[SEDT] %@
[SEDT] Method: %@ in class: %@
[SEDT] Successfully stopped sedentarytimer.
[SEDT] Timer seems to have already been stopped.
[SEDT] Error stopping sedentaryTimer: %ld, timer state: %ld
[SEDT] sedentaryTimer NOT isActive. so startTimer.
[SEDT] sedentaryTimer IS isActive. so register.
[SEDT] parameters passed into sedentaryTimer start method:- startDate %@, periodInterval %f, reminderInterval %f, autoReschedule %d
[SEDT] Successfully started sedentaryTimer.
[SEDT] Timer seems to have already been started.
[SEDT] Error starting sedentaryTimer: %ld, timer state: %ld
[SEDT] sedentaryTimer: %@ in class: %@
[SEDT] sedentaryTimer handler called with data.
[SEDT] sedentaryTimer Reminder object received. %@
[SEDT] sedentaryTimer didWake reminder object received.
[SEDT] sedentaryTimer Active Reminder object received. %@
[SEDT] sedentaryTimer Final object received. %@
[SEDT] sedentaryTimer Reset object received. %@
[SEDT] sedentaryTimer MAX object received. %@
[SEDT] lastremindeddate is %@, lastmoveddate is %@, startdate is %@
[SEDT] method: %@. RemindedThisHour: %ld, MovedThisHour: %ld, ShouldFire: %ld
[SEDT] method: %@ not firing alert as the reminder is not for this hour.
[SEDT] method: %@, %ld, %ld, ShouldFire: %ld
[SEDT] already fired reminder/reset this hour, don't fire reminder alert
[SEDT] gizmo not on wrist for %ldmins, don't fire reminder alert
[SEDT] protected data unavailable, don't fire reminder alert
[SEDT] already completed daily goal, don't fire reminder alert
[SEDT] sedentaryTimer is on wrist, show reminder alert.
[SEDT] sedentaryTimer is not on wrist, don't fire reminder alert.
[SEDT] sedentaryTimer firing after delay %.1f seconds (%@) %@
[SEDT] %@. StartDate is %@. Timeout date is %@
[SEDT] protected data unavailable, don't fire congratulatory alert
[SEDT] already completed daily goal, don't fire congratulatory alert
[SEDT] Firing congratulatory alert.
[SEDT] Not firing congratulatory alert.
[SEDT] sedentaryTimer saving missed hour object %@
[SEDT] device locked. caching sedentaryTimer missed hour start date %@
[SEDT] sedentaryTimer saving active hour object if required %@
[SEDT] device locked. caching sedentaryTimer active hour date object %@
[SEDT] %@ oldDict is %@, newDict is %@
[SEDT] Device unlocked. Save sedentaryTimer cached hours if required.
[SEDT] Device unlocked. Saving sedentaryTimer cached hour %@.
[SEDT] Database locked, will try to save cached value next time DB unlocks.
[SEDT] Error: %@ in %@
Error counting missed hour data samples %@
[SEDT] DB doesn't have any data for hour %@. Saving %@
[SEDT] sedentaryTimer: %@ : %ld
[SEDT] sedentaryTimer: %@ : %@
[SEDT] %@. Not firing sedentary reminder as alerts are disabled for testing.
[SEDT] %@. Not firing sedentary reminder as they are turned OFF in Bridge.
[SEDT] %@ Not firing alert as protected data is not available.
[SEDT] %@. Not firing sedentary reminder as skipped by test configuration.
Registering for update handlers from %{public}@
Secondary context implies content has not been migrated. Skipping (%ld) samples. %@
Detected that we have not established a secondary context
%{public}@: Registering for odometer updates
%{public}@: Received odometer data :: %@
%{public}@: Ignoring data received out of context :: %@
Discarding new pedometer data (%@ -> %@)
%@{public}: Discarding new pedometer data (%@ -> %@)
start session with start date: %@, configuration: %@
%@ called on server that has already been started. Returning early.
start scoring session
ending session with endReason=%@
returning fake heartrate for simulator
not using healthlite, returning no heartrate
%@ deactivate
(%@) error fetching client proxy: %@
%{public}@: Registering for update handlers from %{public}@
Error registering for %s: %d
healthd has launched and protected data is available, scheduling summary if needed.
healthd has launched, but protected data isn't available yet. Holding off scheduling summary if needed.
Protected data became available, scheduling summary if needed
Error when fetching weekly summary and recommended goal, will try again when protected data becomes available again
Protected data unavailable, holding off on showing the weekly summary until unlock
Marking weekly summary as last alerted at %@
overrideMondayCheck = %ld
It isMonday indeed, hasWeeklySummaryBeenShownToday: %ld, energyBurnGoalExistsBeforeToday: %ld, hasBeenOnWristToday: %ld
returns %ld
Current date is %@, wrist on date is %@, showWeeklySummary = %ld
Scheduled task already exists for weekly summary.
Error when trying to read data from key value domain. Error: %@.
Error when trying to save data to key value domain: %{public}@. mostRecentWeeklySummaryAlertDate:%@
%@ in %@: poll completion
%@ in %@: forced coaching completed
%@ in %@: %@
Error: %@. Method: %@ in class: %@
Error: %@. Couldn't show achievement definition alert for %@
[NLDL] Activity app launch detected
[NLDL] Failed to register for activity app launch
[NLDL] Error fetching calorie goal: %@
[NLDL] Failed to get date of birth: %@
[NLDL] Failed to get biological sex: %@
[NLDL] Failed to get height: %@
[NLDL] Failed to get weight: %@
Error registering for managed configuration notifications: %d
[NLDL] Read data collection setting: %@
[NLDL] samplesAdded: %ld type=%@ source=%@
[NLDL] Error writing to log: %@
[NLDL] Submitted metric %x ignored
[NLDL] Submitted metric %x accepted
[NLDL] No HealthKit metric container for metric %x
[NLDL] Unexpected HKDailyGoalTypeAll while converting to goal type
forcing weekly summary
Error when fetching deep breathing weekly summary, will try again when protected data becomes available again: %@
Protected data unavailable, holding off on showing the deep breathing weekly summary until unlock
weeklySummaryEnabled: %ld, hasData: %ld
isMonday == TRUE, hasWeeklySummaryBeenShownToday: %ld, hasBeenOnWristToday: %ld
%@ returns %ld
N@333333
@@(#)PROGRAM:NanoHealthDaemon  PROJECT:NanoLifestyle-1
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
