com.apple.nanopreferencessync.initialSyncCompletion
com.apple.nanoprefsyncd
past-initial-sync
com.apple.nanoprefsync
com.apple.nanoprefsync.NPSManager.%p
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v4@?0
nil file path
v8@?0@"NSError"4
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
domain
T@"NSString",&,N,V_domain
true
false
NSData
NSURL
NSString
com.apple.NanoPreferencesSync
Daemon
Framework
DomainAccessor
init
stringWithFormat:
UTF8String
setInterruptionHandler:
setInvalidationHandler:
invalidate
unsafe_invalidate
dealloc
backupUserDefaultsDomain:keys:container:
backupFileAtPath:withCompletionHandler:
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceWithProtocol:
alloc
initWithMachServiceName:options:
setRemoteObjectInterface:
internalQueue
setXpcConnection:
resume
copy
initWithSet:copyItems:
connection
remoteObjectProxy
addBarrierBlock:
raise:format:
remoteObjectProxyWithErrorHandler:
initialize
synchronizeUserDefaultsDomain:keys:
synchronizeUserDefaultsDomain:keys:container:
backupUserDefaultsDomain:keys:
synchronizeNanoDomain:keys:
backupFileAtPath:
.cxx_destruct
setInternalQueue:
xpcConnection
_internalQueue
_xpcConnection
setObject:forKey:
objectForKey:
stringForObject:
arrayForObject:
dictionaryForObject:
dataForObject:
stringArrayForObject:
integerForKey:keyExistsAndHasValidFormat:
longForKey:keyExistsAndHasValidFormat:
floatForKey:keyExistsAndHasValidFormat:
doubleForKey:keyExistsAndHasValidFormat:
boolForKey:keyExistsAndHasValidFormat:
integerForObject:existsAndHasValidFormat:
longForObject:existsAndHasValidFormat:
floatForObject:existsAndHasValidFormat:
doubleForObject:existsAndHasValidFormat:
boolForObject:existsAndHasValidFormat:
URLForObject:
numberWithInteger:
numberWithLongLong:
numberWithFloat:
numberWithDouble:
numberWithBool:
objectForURL:
setWithArray:
copyDomainList
initWithDomain:
synchronize
removeObjectForKey:
stringForKey:
arrayForKey:
dictionaryForKey:
dataForKey:
stringArrayForKey:
integerForKey:
longForKey:
floatForKey:
doubleForKey:
boolForKey:
URLForKey:
setInteger:forKey:
setLong:forKey:
setFloat:forKey:
setDouble:forKey:
setBool:forKey:
setURL:forKey:
dictionaryRepresentation
copyKeyList
domain
setDomain:
_domain
stringValue
countByEnumeratingWithState:objects:count:
integerValue
longLongValue
floatValue
doubleValue
length
compare:options:range:
boolValue
unarchiveObjectWithData:
stringByExpandingTildeInPath
fileURLWithPath:
isFileURL
archivedDataWithRootObject:
isFileReferenceURL
absoluteURL
path
stringByAbbreviatingWithTildeInPath
self: (%p)
Connection interrupted
Connection invalidated
domain: (%@); keys: (%@); container: (%@); appGroupContainer: (%@)
domain: (%@); keys: (%@); container: (%@)
domain: (%@); keys: (%@)
filePath: (%@)
error: (%@)
File backup completed
domain: (%@)
self: (%@)
v20@0:4@8@12@16
v20@0:4@"NSString"8@"NSSet"12@"NSString"16
v16@0:4@8@?12
v16@0:4@"NSString"8@?<v@?>12
v24@0:4@8@12@16@20
v24@0:4@"NSString"8@"NSSet"12@"NSString"16@"NSString"20
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v8@0:4
v16@0:4@8@12
v12@0:4@8
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@12@0:4@8
i12@0:4@8
q12@0:4@8
f12@0:4@8
d12@0:4@8
i16@0:4@8^B12
q16@0:4@8^B12
f16@0:4@8^B12
d16@0:4@8^B12
B16@0:4@8^B12
v16@0:4i8@12
v20@0:4q8@16
v16@0:4f8@12
v20@0:4d8@16
v16@0:4B8@12
@"NSString"
NPSGizmoServerProtocol
NPSServerProtocol
NSObject
NPSManager
NPSDomainAccessor
NPSDomainAccessorUtils
zPLR
