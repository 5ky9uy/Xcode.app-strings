sharedInstance
assertQueueIsNotCurrent
init
alloc
initWithDelegate:queue:delegateContext:
performBlock:
release
performBlock:waitUntilDone:
dealloc
state
startAdvertisingOfType:withData:withOptions:
stopAdvertisingOfType:
startScanningForType:withData:mask:peers:withOptions:
startScanningForType:withData:mask:withOptions:
startScanningForType:withData:mask:peers:
startScanningForType:withData:mask:
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:peers:boostedScan:duplicates:
startScanningForType:withData:mask:boostedScan:duplicates:
stopScanningForType:
initWithDelegate:queue:
startScanningForType:withData:peers:withOptions:
startScanningForType:withData:withOptions:
startScanningForType:withData:mask:peers:withOptions:boostedScan:
startScanningForType:withData:mask:withOptions:boostedScan:
connectToPeer:
disconnectFromPeer:
startTrackingPeer:
stopTrackingPeer:
startTrackingPeer:forType:
stopTrackingPeer:forType:
_internal
_performBlock:wait:
_setAutoReconnect:
setupAccountWithLoginID:serviceName:accountType:accountConfig:authToken:password:transactionID:
addAccountWithLoginID:serviceName:uniqueID:accountType:accountInfo:
_removeAccount:
_removeAndDeregisterAccount:
updateAccount:withAccountInfo:
enableAccount:
disableAccount:
setLoginID:forAccount:
authTokenChanged:forAccount:
passwordChanged:forAccount:
authenticationChangedForAccount:
authenticateAccount:
passwordUpdatedForAccount:
updateAuthorizationCredentials:token:forAccount:
validateProfileForAccount:
addAliases:toAccount:
removeAliases:fromAccount:
validateAliases:forAccount:
unvalidateAliases:forAccount:
registerAccount:
unregisterAccount:
_reregisterAndReidentify:account:
deactivateAndPurgeIdentifyForAccount:
hardDeregister
triggerFinalDeregister
iCloudSignInHackWithUserName:password:
iCloudSignOutHack
iCloudSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iCloudUpdateForUserName:accountInfo:
iCloudSignOut
kickGetDependentForAccount:
idsiCloudSignInDataMigratorForID:
reRegisterWithUserID:action:service:
startLocalSetup
stopLocalSetup
localSetupUnpair
localSetupUnpairStart
localSetupCompleted
addPairedDevice:
connectPairedDevice:
deletePairedDevice:
getLocalDeviceInfo
getPairedDeviceInfo
getDeliveryStats
initialLocalSyncStartedForServices:
initialLocalSyncCompletedForServices:
setAllowedTrafficClasses:
dropAllMessagesWithoutAnyAllowedClassifier
addPairedDeviceWithID:requestID:
connectPairedDeviceWithID:requestID:
setupCompletedForPairedDeviceWithID:requestID:
switchActivePairedDeviceWithID:requestID:
deletePairedDeviceWithID:requestID:
unpairStartForDeviceWithID:requestID:
stopLocalPairingForDeviceWithID:requestID:
unpairDeviceWithID:requestID:
getPairingDevicesWithRequestID:
getPairedDevicesWithRequestID:
setAllowedTrafficClassifiersForDevice:classifiers:requestID:
dropAllMessagesWithoutAnyAllowedClassifierForDevice:requestID:
reunionSyncStartedForServices:requestID:
reunionSyncCompletedForServices:requestID:
updateSubServices:forService:deviceUniqueID:
setPairedDeviceInfo:
incomingAccountSyncMessage:
rollKeys
sendMessageWithSendParameters:
cancelItemWithIdentifier:service:
sendPersistedFile:userInfo:toDestinations:usingAccountWithUniqueID:identifier:
sendServerMessage:command:usingAccountWithUniqueID:
setPreferInfraWiFi:service:
setLinkPreferences:service:
startOTRTest:priority:
testCloudQRConnection:
acknowledgeOutgoingMessageWithGUID:alternateCallbackID:forAccountWithUniqueID:
acknowledgeMessageWithGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:
acknowledgeMessageWithStorageGUID:realGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:broadcastID:connectionType:
sendAppAckWithGUID:toDestination:forAccountWithUniqueID:connectionType:
setListenerServices:commands:capabilities:
registerForNotificationsOnServices:
xpcObject:objectContext:
openSocketWithOptions:
closeSocketWithOptions:
setNSUUID:onDeviceWithUniqueID:forService:
setupNewSessionWithConfiguration:
cleanupSession:
sendInvitation:withOptions:
sendInvitation:withData:declineOnError:
cancelInvitation:
cancelInvitation:withData:
cancelInvitation:withRemoteEndedReasonOverride:
acceptInvitation:
acceptInvitation:withData:
declineInvitation:
declineInvitation:withData:
endSession:
endSession:withData:
sendSessionMessage:toSession:
setAudioEnabled:forSessionWithUniqueID:
setMuted:forSessionWithUniqueID:
setPreferences:forSessionWithUniqueID:
setInviteTimetout:forSessionWithUniqueID:
acknowledgeSessionID:clientID:
continuityClientInstanceCreated
continuityStartAdvertisingOfType:withData:withOptions:
continuityStopAdvertisingOfType:
continuityStartScanningForType:withData:mask:
continuityStartScanningForType:withData:mask:peers:
continuityStartScanningForType:withData:mask:boostedScan:duplicates:
continuityStartScanningForType:withData:mask:peers:boostedScan:duplicates:
continuityStopScanningForType:
continuityConnectToPeer:
continuityDisconnectFromPeer:
continuityStartTrackingPeer:forType:
continuityStopTrackingPeer:forType:
reportiMessageSpam:toURI:
reportiMessageUnknownSender:messageID:messageServerTimestamp:toURI:
reportiMessageSpamCheckUnknown:count:requestID:
homeKitGetServiceUserIDs
homeKitGetAdminAccessTokensWithServiceUserID:accessoryID:pairingToken:
homeKitGetConsentTokensWithServiceUserID:accessoryIDs:adminID:
homeKitGetUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:
homeKitRefreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:
appleCareSignInUserName:DSID:authToken:requestID:
appleCareSignOutUserWithRequestID:
registrationControlSetRegistrationStateForRegistrationType:toState:requestID:
registrationControlGetRegistrationStateForRegistrationType:requestID:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
autorelease
retainCount
zone
hash
superclass
description
debugDescription
initWithProtocol:
length
stringGUID
copy
setCurXPCMessagePriority:
removeListener:
defaultCenter
removeObserver:name:object:
_localObjectCleanup
_remoteObjectCleanup
isNonUIInstall
_blockUntilSendQueueIsEmpty
services
commands
capabilities
_connectToDaemonWithLaunch:services:commands:capabilities:
connectToDaemonWithLaunch:
_setServices:
_setCommands:
_setCapabilities:
containsObject:
count
setByAddingObjectsFromSet:
unionSet:
enumerateKeysAndObjectsUsingBlock:
isEqualToSet:
unsignedIntValue
connectToDaemonWithLaunch:services:commands:capabilities:
disconnectFromDaemon
addObject:
setWithObject:
hasListenerForID:
setServices:forListenerID:
setCommands:forListenerID:
setObject:forKey:
numberWithUnsignedInt:
_listenerSetUpdated
addListenerID:services:commands:
objectForKey:
numberWithUnsignedInteger:
removeObjectForKey:
_performBlock:
servicesForListenerID:
commandsForListenerID:
capabilitiesForListenerID:
numberWithInt:
isValid
listener
isSetupComplete
_noteDisconnected
setTarget:
invalidate
_disconnectFromDaemonWithForce:
connectToDaemon
systemIsShuttingDown
_autoReconnect
defaultBroadcaster
broadcastProxyForTarget:messageContext:protocol:
sendXPCObject:
_imMethodSignatureForSelector:
isQueueCurrent
curXPCMessagePriority
broadcastProxyForTarget:messageContext:protocol:priority:
invokeWithTarget:
retainArguments
_applicationWillTerminate
_setApplicationWillTerminate
_handleDaemonException:
_makeConnectionWithLaunch:completionBlock:
_setServices:commands:capabilities:
addedDelegateForService:
addListenerID:services:
removeListenerID:
setCapabilities:forListenerID:shouldLog:
listenerID
isConnecting
isConnected
blockUntilConnected
_noteSetupComplete
remoteObjectExists
localObjectExists
localObject
_agentDidLaunchNotification:
localObjectDiedNotification:
remoteObjectDiedNotification:
sendXPCObject:objectContext:
methodSignatureForSelector:
forwardInvocation:
systemApplicationDidSuspend
systemApplicationDidEnterBackground
systemApplicationWillEnterForeground
systemApplicationDidResume
_remoteMessageQueue
delegate
setDelegate:
_delegate
_remoteObject
_localObject
_daemonListener
_protocol
_listenerID
_ivarQueue
_daemonConnectedGroup
_connectionID
_listenerServices
_services
_cachedServices
_listenerCommands
_commands
_cachedCommands
_listenerCapabilities
_cachedCapabilities
_lastUpdateCaps
_hasCheckedForDaemon
_preventReconnect
_acquiringDaemonConnection
_hasBeenSuspended
_curXPCMessagePriority
_notificationServices
deletePairedDevice:withCompletionBlock:queue:
initWithObjects:
getPairedDeviceInfoWithCompletionBlock:queue:
getDeliveryStatsWithCompletionBlock:queue:
isDefaultPairedDevice
setAllowedTrafficClassifiers:
allowedTrafficClassifiers
initWithDomain:code:userInfo:
initWithBlock:queue:
scheduleTimeoutWithResponseHandler:timeoutInterval:timeoutBlock:
initWithRequestTimer:
addHandler:
isEqualToString:
initWithInteger:
initWithObjectsAndKeys:
__mainThreadPostNotificationName:object:userInfo:
object
userInfo
service
integerValue
_postNotificationForService:availability:
_handleServiceMonitorNotification:
addObserver:selector:name:object:
_isValidServiceType:
initWithService:
monitor
_startListeningToMonitor:
containerForService:create:
hasListenerID:
addListenerID:
listeners
_stopListeningToMonitor:
serviceAvailability
hasListenerID:forService:
addListenerID:forService:
removeListenerID:forService:
availabilityForListenerID:forService:
_availabilityHandlers
removeObject:
setMonitor:
_monitor
_listeners
stringWithFormat:
UTF8String
connectionComplete:
setupCompleteWithInfo:
daemonConnected
daemonDisconnected
messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:
dataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:
messageIdentifier:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:
messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
messageIdentifier:forTopic:toIdentifier:hasBeenDeliveredWithContext:
protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:
OTRTestCallback:time:error:
accountAdded:
accountRemoved:
accountUpdated:
accountsChanged:forTopic:
accountEnabled:onService:
accountDisabled:onService:
setupCompleteForAccount:transactionID:setupError:
account:accountInfoChanged:
account:registrationStatusInfoChanged:
account:aliasesChanged:
account:vettedAliasesChanged:
account:profileChanged:
account:loginChanged:
account:displayNameChanged:
registrationFailedForAccount:needsDeletion:
refreshRegistrationForAccount:
account:dependentDevicesUpdated:
account:dependentDevicesUpdatedUponReconnect:
account:localDeviceAdded:
account:localDeviceRemoved:
IDQueryCompletedWithFromURI:idStatusUpdates:service:success:error:
sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:
sessionAcceptReceived:fromID:withData:
sessionDeclineReceived:fromID:withData:
sessionCancelReceived:fromID:withData:
sessionMessageReceived:fromID:withData:
sessionEndReceived:fromID:withData:
sessionStarted:
sessionEnded:withReason:error:
session:invitationSentToTokens:shouldBreakBeforeMake:
session:audioEnabled:
session:muted:
openedSocket:forHandlerID:error:
localDeviceInfo:
pairedDeviceInfo:
deliveryStats:
device:nsuuidChanged:
device:pairingDeleted:
device:pairingAdded:
continuityDidUpdateState:
continuityDidLosePeer:
continuityDidLosePeer:forType:
continuityDidStartTrackingPeer:error:
continuityDidStartTrackingPeer:forType:error:
continuityDidStopTrackingPeer:
continuityDidStopTrackingPeer:forType:
continuityDidStartAdvertisingOfType:
continuityDidStopAdvertisingOfType:
continuityDidFailToStartAdvertisingOfType:withError:
continuityDidStartScanningForType:
continuityDidStopScanningForType:
continuityDidFailToStartScanningForType:withError:
continuityDidDiscoverType:withData:fromPeer:
continuityDidDiscoverPeerWithData:fromPeer:
continuityDidConnectToPeer:withError:
continuityDidDisconnectFromPeer:withError:
serviceUserIDs:error:
adminAccessTokens:error:
consentTokens:error:
userAccessTokens:error:
refreshUserAccessTokens:error:
deviceIdentifierDidChange:
didSwitchActivePairedDevice:
didSwitchActivePairedDevice:forService:wasHandled:
deactivatePairedDevices
localPairingResponseForRequestID:withError:
localPairingResponseForRequestID:withError:pairedDevices:
applecareResponseForRequestID:withError:
registrationControlResponseForRequestID:withError:
registrationControlStatusResponseForRequestID:requestID:withError:
iMessageReportSpamCheckUnknownResponseForRequestID:status:abusive:delay:withError:
_callHandlersWithBlockOnIvarQueue:
_performSyncBlock:
weakObjectsHashTable
allObjects
_copyForEnumerating
countByEnumeratingWithState:objects:count:
_callHandlersWithBlockOnIvarQueue:cleanup:
mutableCopy
enumerateObjectsUsingBlock:
removeObjectAtIndex:
_removeAccountOnIvarQueue:
_callHandlersWithBlock:
isEqualToIgnoringCase:
_stringForKey:
initWithDictionary:
_uniqueIDForDevice:
boolValue
numberWithBool:
initWithArray:
_internalDidSwitchActivePairedDevice:forService:
addIndex:
removeObjectsAtIndexes:
flushCache
allKeys
_callHandlersAsyncWithBlock:
_internalSwitchActivePairedDevice:forAccount:
removeAllObjects
__postSetupComplete
_currentMessageContext
selector
invocationWithMethodSignature:
setSelector:
_setTemporaryMessageContext:
hasPostedSetupComplete
deviceIdentifier
_hidingDisconnect
_setHidingDisconnect:
removeHandler:
accountDictionariesForService:
enabledAccountsForService:
dependentDevicesForAccount:
switchActivePairedDevice:forAccount:
_handlers
_topicToAccountDictionaries
_topicToEnabledAccounts
_accountToDevices
_accountToActiveDeviceUniqueID
_deviceIdentifier
_setupComplete
_postedSetupComplete
_setupInfoComplete
_connectionComplete
initWithAccount:destinations:transportType:delegateContext:
assertQueueIsCurrent
initWithAccount:destinations:transportType:uniqueID:delegateContext:
initWithAccount:destinations:options:delegateContext:
socket
uniqueID
stringByAppendingString:
setDelegate:queue:
sendInvitationWithOptions:
initWithBool:
sendInvitationWithData:declineOnError:
setPreferences:
getPreferences
cancelInvitationWithRemoteEndedReasonOverride:
cancelInvitationWithData:
acceptInvitationWithData:
declineInvitationWithData:
cancelInvitation
acceptInvitation
declineInvitation
endSession
endSessionWithData:
sendSessionMessage:
setAudioEnabled:
getAudioEnabled
setMuted:
getMuted
sendData:error:
setInviteTimeout:
inviteTimeout
sessionEndedReason
shouldUseSocketForTransport
MTUForAddressFamily:
initWithAccount:destinations:transportType:
_initWithAccount:destinations:transportType:uniqueID:
initWithAccount:destinations:options:
sessionID
destination
sendInvitation
sendInvitationWithData:
setStreamPreferences:
_streamPreferences
setIsAudioEnabled:
isAudioEnabled
setIsMuted:
isMuted
setInvitationTimeOut:
invitationTimeOut
weakToStrongObjectsMapTable
setQueue:
queue
_cacheForService:
addEntriesFromDictionary:
idStatusUpdatedForDestinations:service:
_callDelegatesWithBlock:
_purgeIDStatusCache
___oldDealloc
addDelegate:queue:
removeDelegate:
_connect
invalidateTimeoutAndReturnHandlerForRequestID:
block
initWithDisconnectedBlockAndNoTimeout:
_requestTimer
_disconnectedBlock
initWithService:delegate:queue:
setDestinations:
_initWithAccount:commands:indirectDelegateCallouts:
initWithAccount:commands:indirectDelegateCallouts:delegateContext:
initWithAccount:commands:
account
isActive
sendProtobuf:toDestinations:priority:options:identifier:error:
sendMessage:toDestinations:priority:options:identifier:error:
sendData:toDestinations:priority:options:identifier:error:
_connectionWithAccount:commands:indirectDelegateCallouts:
initWithAccount:
sendMessage:toDestinations:options:identifier:error:
_block
_queue
initWithHandler:queue:
handler
setHandler:
_handler
initWithSet:copyItems:
getLocalDeviceInfoWithCompletionBlock:queue:
_deleteCompletion
_localCompletion
_pairedCompletion
_deliveryStatsCompletion
_allowedTrafficClassifiers
initWithService:delegateContext:
strongToWeakObjectsMapTable
_initWithService:onIDSQueue:
accounts
enabledAccounts
serviceName
accountWithLoginID:service:
accountWithUniqueID:
setupAccountWithLoginID:aliases:password:completionHandler:
setupAccountWithLoginID:password:completionHandler:
setupAccountWithLoginID:authToken:profileID:selfHandle:completionHandler:
setupAccountWithLoginID:authToken:profileID:selfHandle:aliases:completionHandler:
setupAccountWithSetupParameters:aliases:completionHandler:
addAccount:
_initWithService:
removeAccount:
copyStringGUIDForObject:
weakRefWithObject:
daemonListener
daemonController
devices
_callDelegatesWithBlock:group:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:
objectAtIndex:
setDataToEncrypt:
setWantsResponse:
setFromID:
doubleValue
setTimeout:
setEnforceRemoteTimeouts:
setAccessToken:
setHomeKitPayload:
setSubService:
setFakeMessage:
setDisableAliasValidation:
setCommand:
setWantsAppAck:
setWantsDeliveryStatus:
setDeliveryStatusContext:
setMessageUUID:
setAlternateCallbackID:
setEncryptPayload:
setCompressPayload:
setLocalDelivery:
setAllowCloudDelivery:
setRequireBluetooth:
setUseDictAsTopLevel:
setExpectsPeerResponse:
setPeerResponseIdentifier:
setAlwaysSkipSelf:
priority
setBypassDuet:
setNonWaking:
setFireAndForget:
setBypassStorage:
callStackSymbols
setActivityContinuation:
setQueueOneIdentifier:
setForceEncryptionOff:
setDuetIdentifiersOverride:
setInterestingRegistrationProperties:
setRequireAllRegistrationProperties:
setRequireLackOfRegistrationProperties:
setIdentifier:
setAccountUUID:
_activeDevice
destinations
_replaceSentinelInSendParameters:withCurrentActiveDevice:
alternateCallbackID
identifier
dictionaryRepresentation
data
setPriority:
setProtobuf:
_sendWithParameters:options:loggingType:loggingDataSize:
dataWithPropertyList:format:options:error:
setMessage:
setData:
connection:isActiveChanged:
connection:devicesChanged:
connection:nearbyDevicesChanged:
connection:connectedDevicesChanged:
setDaemonDeathResend:
_resendPendingSends
_handleLastCallForPendingIdentifier:callbackID:
initWithDictionary:boostContext:
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
connection:identifier:didSendWithSuccess:error:context:
connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
_shouldAcceptIncomingType:forTopic:toIdentifier:fromID:validateAliases:
connection:identifier:hasBeenDeliveredWithContext:
storageGuid
outgoingResponseIdentifier
broadcastTime
timeIntervalSinceReferenceDate
numberWithDouble:
broadcastID
connectionType
pushTopic
aliasStrings
_stripFZIDPrefix
registrationStatus
accountType
_stripPotentialTokenURIWithToken:
suppressedDevices
pushToken
isEqualToData:
connection:incomingMessage:fromID:
connection:incomingMessage:fromID:context:
connection:incomingTopLevelMessage:fromID:messageContext:
wantsAppAck
connection:incomingData:fromID:context:
connection:incomingAccessoryData:fromID:context:
connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:
setContext:
connection:incomingProtobuf:fromID:context:
connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:
account:isActiveChanged:
account:devicesChanged:
account:nearbyDevicesChanged:
account:connectedDevicesChanged:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:
setDelegateCapabilities:
sendServerMessage:command:
_messageContext
_delegateContext
_delegateToInfo
_account
_serviceToken
_pendingSends
_delegateCapabilities
_indirectDelegateCallouts
_accessDelegateIdentifiersInCriticalSectionWithBlock:
identifierForServiceDelegate:
isAwaitingAcknowledgement
awaitAcknowledgementFromServiceDelegate:
stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:
stopAwaitingAcknowledgementFromAllServiceDelegates
_delegateIdentifiers
_delegateIdentifiersMutex
UUIDString
setActiveConnection:forKey:
hasActiveConnection:forKey:
removeActiveConnection:forKey:
_activeConnectionMap
_writeLock
_daemonDied:
nsuuid
deviceConnectionKey
dictionaryWithDictionary:
_cleanupCompletionBlock
_close
close
dictionaryWithObjects:forKeys:count:
objectForKeyedSubscript:
open
setObject:forKeyedSubscript:
initWithDevice:options:completionHandler:queue:
inputStream
outputStream
setStreamPairWithInputStream:outputStream:
updateConnectionWithOptions:error:
_nsuuid
_isDefaultPairedDevice
_service
_streamName
_connectionUUID
_socket
_mtu
_openSocketCompletionHandler
_openSocketCompletionHandlerQueue
_openSocketCompletionHandlerID
_inputStreamForSocket
_outputStreamForSocket
_hasTimedOut
_awdMetrics
_loadCachedAccounts
_updateLocalAccountVisibility
initWithSet:
minusSet:
intersectSet:
accountController:accountRemoved:
accountController:accountAdded:
accountController:accountUpdated:
intValue
_initWithDictionary:uniqueID:serviceName:
setAccountInfo:
_setIsEnabled:
__imSetByApplyingBlock:
_loadCachedAccountsWithDictionaries:
addObjectsFromArray:
_updateDelegatesWithOldAccounts:newAccounts:
internalAccounts
loginID
dictionaryWithObjectsAndKeys:
lowercaseString
arrayByApplyingSelector:
_setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:
__imArrayByApplyingBlock:
accountInfo
_isEnabled
aliases
accountController:accountEnabled:
accountController:accountDisabled:
_cachedAccounts
_enabledAccounts
_transactionIDToHandlersMap
_accountsLoaded
_isLocalAccountVisible
initWithDictionary:uniqueID:serviceName:delegateContext:
initWithLoginID:uniqueID:serviceName:delegateContext:
displayName
setLoginID:
primaryServiceName
isUserDisabled
canSend
nearbyDevices
profileInfo
vettedAliases
setPassword:
setAuthToken:
updateAccountWithAccountInfo:
nextRegistrationDate
dateRegistered
registeredURIs
registrationCertificate
regionID
regionBasePhoneNumber
regionServerContext
profileID
addRegistrationDelegate:queue:
removeRegistrationDelegate:
authenticateAccount
passwordUpdated
updateAuthorizationCredentials:token:
validateProfile
addAliases:
removeAliases:
validateAliases:
unvalidateAliases:
registerAccount
unregisterAccount
_reregisterAndReidentify:
deactivateAndPurgeIdentify
_callNearbyDevicesChanged
_reloadCachedDevices
initWithDictionary:uniqueID:serviceName:
initWithLoginID:uniqueID:serviceName:
initWithString:
isLocallyPaired
uniqueIDOverride
initWithFormat:
identities
componentsSeparatedByString:
objectAtIndexedSubscript:
getServiceUserIDsWithCompletionBlock:queue:
getAdminAccessTokensWithWithServiceUserID:accessoryID:pairingToken:completionBlock:queue:
getConsentTokensWithServiceUserID:accessoryIDs:adminID:completionBlock:queue:
getUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:completionBlock:queue:
refreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:completionBlock:queue:
_getServiceUserIDsCompletion
_getAdminAccessTokensCompletion
_getConsentTokensCompletion
_getUserAccessTokensCompletion
_refreshUserAccessTokensCompletion
_loadCachedDevices
_objectForKey:
registrationInfo
_initWithDictionary:
_setAccount:
_isiCloudPairingService
supportsiCloudPairing
_updateDependentDevicesWithDevicesInfo:
isNearby
_callDevicesChanged
connectedDevices
registrationWithServiceType:accountType:value:
_keychainRegistration
arrayWithObject:
_registeredURIs
_callRegistrationDelegatesWithBlock:
_setObject:forKey:
isInTransientRegistrationState
_callConnectedDevicesChanged
_callCloudConnectedDevicesChanged
_accountConfig
_uniqueID
_devices
_suppressedDevices
_registrationDelegateToInfo
_devicesLoaded
initWithService:serviceDomain:delegateContext:
initWithService:commands:delegateContext:
setManuallyAckMessages:
initWithService:commands:
setProtobufAction:forProtobufType:isResponse:
protobufActionForType:isResponse:
sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
sendData:fromAccount:toDestinations:priority:options:identifier:error:
sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:
sendData:priority:options:identifier:error:
sendResourceAtURL:metadata:fromAccount:toDestinations:priority:options:identifier:error:
sendAckForMessageWithContext:
cancelIdentifier:error:
sendServerMessage:command:fromAccount:
serviceDomain
iCloudAccount
deviceForFromID:
deviceForUniqueID:
devicesForBTUUID:
uriForFromID:
setPreferInfraWiFi:
setLinkPreferences:
startOTRTest:
setPretendingToBeFull:
isPretendingToBeFull
testCloudQRConnection
updateSubServices:forDevice:
datagramConnectionForSessionDestination:error:
datagramConnectionForSocketDescriptor:error:
streamConnectionForSessionDestination:error:
streamConnectionForSocketDescriptor:error:
datagramChannelForSessionDestination:error:
datagramChannelForSocketDescriptor:error:
checkMessageSize:priority:
internal
initWithService:serviceDomain:
initWithService:manuallyAckMessages:
setProtobufAction:forIncomingRequestsOfType:
setProtobufAction:forIncomingResponsesOfType:
protobufActionForIncomingRequestsOfType:
protobufActionForIncomingResponsesOfType:
sendMessage:fromAccount:toDestinations:options:identifier:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
maxHomeKitPayloadSize
updateSubServices:
initWithResponseHandler:timeoutBlock:systemTimer:
responseHandler
timeoutBlock
systemTimer
killSystemTimer
_responseHandler
_timeoutBlock
_systemTimer
_criticalFindRequestContextWithResponseHandler:
_handleSystemTimerFired:
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
_accessRequestContextMapInCriticalSectionWithBlock:
allValues
_criticalInvokeTimeoutBlockForRequestID:
_criticalInvalidateTimeoutAndReturnHandlerForRequestID:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
invalidateTimeoutsAndReturnHandlersForAllRequests
_requestContextMap
_requestContextMapLock
initWithBlock:
incrementAccessCount
_cleanupBlock
_accessCount
_setupIDSWakeListenerForService:
receivedIDSSimulatorSupportData:serviceName:messageIdentifier:
unarchiveObjectWithData:error:
initWithProtobufData:type:isResponse:
UUID
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:options:error:
setAttributes:ofItemAtPath:error:
service:account:identifier:hasBeenDeliveredWithContext:
archivedDataWithRootObject:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:account:incomingMessage:fromID:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingAccessoryData:fromAccessoryID:context:
service:account:incomingAccessoryReportMessage:controllerID:accessoryID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:incomingUnhandledProtobuf:fromID:context:
_stopAwaitingQuickSwitchAcknowledgementFromDelegateWithIdentifier:
serviceAllowedTrafficClassifiersDidReset:
resendSubServicesToDaemonForCurrentDevice
service:token:time:error:
lock
unlock
_acknowledgementBlockWithDelegateIdentifier:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:devicesChanged:
_isDroppingMessages
_logConnectionMap
service:activeAccountsChanged:
_callDelegatesForDevicesChanged
_setupNewConnectionForAccount:
_callIsActiveChanged
_tearDownConnectionForUniqueID:
setWantsManualAck:
fileURLWithPath:
removeItemAtURL:error:
type
isResponse
keyRepresentationForType:isResponse:
pointerValue
hasSuffix:
setArgument:atIndex:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
setBoostContext:
serviceSpaceDidBecomeAvailable:
_filteredAccountsFrom:
_addIdentity:
isEqualToArray:
valueWithPointer:
__imFirstObject
_appearsToBeEmail
_appearsToBePhoneNumber
anyObject
_sendSimulatorMessage:fromAccount:toDestinations:priority:options:identifier:error:
dataWithContentsOfFile:options:error:
attributesOfItemAtPath:error:
lastPathComponent
removeItemAtPath:error:
_sendSimulatorProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
numberWithUnsignedShort:
_sendSimulatorData:fromAccount:toDestinations:priority:options:identifier:error:
_sendingAccountForAccount:
containsString:
_handlePretendingToBeFullWithIdentifier:
isFileURL
fileSystemRepresentation
dictionary
path
fromID
initWithDestination:
initWithSocketDescriptor:
_processAccountSet:
canSendMessageWithAccount:toDestinations:
manuallyAckMessages
_accountController
_uniqueIDToConnection
_rerouteService
_protobufSelectors
_lastIsActiveSet
_subServices
_pretendingToBeFull
_everHadDelegate
_manuallyAckMessages
_listenerCaps
_connection
_idsSimulatorSupportDataHandlerToken
_acknowledgementTracker
domain
code
errorWithDomain:code:userInfo:
getFileSystemRepresentation:maxLength:
stringWithFileSystemRepresentation:length:
linkItemAtPath:toPath:error:
copyItemAtPath:toPath:error:
__sendMessage:queue:reply:failBlock:waitForReply:
_disconnectFromQueryService
_requestCacheForService:completionBlock:
_requestCachedStatusForDestinations:service:listenerID:completionBlock:
_requestStatusForDestinations:service:listenerID:completionBlock:
initialize
mainBundle
bundleIdentifier
executablePath
_nearbyStateChanged
_connectedStateChanged
_cloudConnectedStateChanged
name
modelIdentifier
linkedUserURIs
supportsSMSRelay
supportsMMSRelay
supportsPhoneCalls
deviceColor
enclosureColor
locallyPresent
isCloudConnected
productBuildVersion
pairingProtocolVersion
minCompatibilityVersion
maxCompatibilityVersion
isHSATrusted
isInternalInstall
unsignedIntegerValue
supportsHandoff
initWithUUIDString:
supportsTethering
dictionaryWithObject:forKey:
closeSocket:
productName
productVersion
fullDescription
lastActivityDate
serviceMinCompatibilityVersion
setNSUUID:
supportsApplePay
socketForDomain:
openSocketWithOptions:completionHandler:onQueue:
closeStreamPairWithInputStream:outputStream:
closeSocketForDomain:
_info
_nearbyToken
_nearby
_connected
_immutableCloudConnected
_cloudConnected
_purgeIDStatusCacheAfter:
_reroutedPrototypeService:
_cachedStatusForDestination:service:
_updateCacheWithDictionary:service:
_delegateMapForListenerID:service:
_callDelegatesWithBlock:delegateMap:
_idStatusForDestinations:service:listenerID:allowRenew:completionBlock:
_refreshIDStatusForDestinations:service:listenerID:allowRefresh:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
initWithDelegateContext:queueController:
_isListenerWithID:listeningToService:
_setCurrentIDStatus:forDestination:service:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
_hasCacheForService:
_currentCachedIDStatusForDestination:service:listenerID:
_warmupQueryCacheForService:
_flushQueryCacheForService:
addDelegate:forService:listenerID:queue:
removeDelegate:forService:listenerID:
_idStatusCache
_transactionIDToBlockMap
_connectionQueue
_listenerIDToServicesMap
openSocketForDomain:transportType:
numberWithInteger:
operatingSystemVersion
establishStreamPairWithOptions:completionHandler:onQueue:
cleanupStreamPairWithInputStream:outputStream:
openSocketForDomain:
_linkID
_flags
_networkType
_connectionType
_RATType
_maxMTU
_remoteNetworkType
_remoteConnectionType
_remoteRATType
_maxBitrate
initWithDummyInformation
initWithLinkID:flags:networkType:connectionType:RATType:MTU:remoteNetworkType:remoteConnectionType:remoteRATType:maxBitrate:
linkID
flags
networkType
RATType
maxMTU
remoteNetworkType
remoteConnectionType
remoteRATType
setRATType:
setMTU:
setMaxBitrate:
maxBitrate
_verboseFunctionalLogging
_socketDescriptor
_eventHandler
_readHandler
_hasMetadata
_sentFirstReadLinkInfo
_receivedPreConnectionData
_waitForPreConnectionDataForConnected
_startCalled
_startAutomatically
_osChannelFD
_pathEvaluator
_cellularLink
_linkContexts
_defaultLinkID
_preConnectionData
_sendingMetadata
numberWithChar:
arrayWithObjects:count:
numberWithUnsignedChar:
addNewIDSDataChannelLinkWithAttributes:
removeIDSDataChannelLinkContext:
selectDefaultLink:
dataWithBytes:length:
processMetadataForDatagram:size:datagramInfo:
readDatagramWithCompletionHandler:
sendEventConnectedWithDummyLinkInfo
setChannelPreferences:
writeDatagrams:datagramSizes:datagramInfo:datagramCount:completionHandler:
removeObjectsInRange:
bytes
sendMetadata
connectedLinks
defaultLink
underlyingFileDescriptor
start
writeDatagram:datagramSize:flags:completionHandler:
setEventHandler:
setReadHandler:
readyToRead
initSocketWithDevice:options:completionHandler:queue:
initStreamWithDevice:options:completionHandler:queue:
acAccountWithProfileID:username:accountStore:
_newNSUUIDArrayFromCBUUIDStrings:
initWithCapacity:
initWithName:contextKey:
timeIntervalSinceNow
_refreshIDStatusForDestination:service:listenerID:
_refreshIDStatusForDestinations:service:listenerID:
_currentIDStatusForDestination:service:listenerID:
_currentIDStatusForDestinations:service:listenerID:
requestIDStatusForDestinations:service:listenerID:queue:completionBlock:
requestIDStatusForDestination:service:listenerID:queue:completionBlock:
_queueController
_callDelegateWithBlock:
_handleReconnect
continuity:didStartAdvertisingOfType:
continuity:didStopAdvertisingOfType:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didStartScanningForType:
continuity:didStopScanningForType:
continuity:didFailToStartScanningForType:withError:
continuity:didDiscoverType:withData:fromPeer:
continuity:didLosePeer:type:
continuity:didStartTrackingPeer:type:error:
continuity:didStopTrackingPeer:type:
_state
_initWithAccount:destinations:options:delegateContext:
_broadcastNewSessionToDaemon
_cleanupSocketPairConnections
_setupSocketPairToDaemon
initWithSocket:queue:delegate:
session:didReceiveData:
sendData:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationAcceptFromID:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationDeclineFromID:
session:receivedInvitationCancelFromID:withData:
session:receivedInvitationCancelFromID:
session:receivedSessionMessageFromID:withData:
session:receivedSessionEndFromID:withData:
session:invitationSentToTokens:
sessionEnded:
connection:didReceiveData:
connectionDidClose:
_initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:
_setupUnreliableSocketPairConnection
boostContext
_boostContext
_accountID
_destinations
_unreliableSocketPairConnection
_transportType
_isAudioEnabled
_isMuted
_isLegacy
_inviteTimeout
_connectionCountHint
_needsToWaitForPreConnectionData
_disallowCellularInterface
_disallowWifiInterface
_preferredAddressFamily
_preferCellularForCallSetup
_clientUUID
_disableEncryption
_shouldUseSocketForTransport
_enableSingleChannelDirectMode
_alwaysSkipSelf
_sessionEndedReason
_preferences
_sessionConfig
_contextKey
_invalidateNextQueryTimer
_nextQuery:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
initWithTimeIntervalSinceNow:
idStatusUpdatedForDestinations:
_scheduleNextQuery:
date
timeIntervalSinceDate:
removeObjectsInArray:
_serviceName
_destinationsToQuery
_nextQueryTimer
_timeOfDeath
_numberOfQueriesDone
_isDead
sharedInstanceForBagType:
updateAvailability
_updateAvailability
_postAvailability:
_availability
_token
v4@?0
Warning
-[IDSContinuity startTrackingPeer:]
IDSFoundation
%s is deprecated, please use startTrackingPeer:forType:
-[IDSContinuity stopTrackingPeer:]
%s is deprecated, please use stopTrackingPeer:forType:
state
Ti,R
__kIDSDaemonDidConnectNotification
__kIDSDaemonWillConnectNotification
__kIDSDaemonDidDisconnectNotification
__k_IDSDaemonDidDisconnectNotification
__k_IDSDaemonDidConnectNotification
__kIDSDaemonConnectionLostNotification
IDSDaemonControllerContext
com.apple.IDSDaemonControllerIvarQueue
com.apple.IDSDaemonControllerQueue
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Exception returned from daemon: %@
com.apple.private.alloy.pbbridge
com.apple.private.alloy.accountssync
Registration
Sending down new services %@ commands %@ capabilities %d. sendServices %@ sendCommands %@ sendCaps %@
DaemonController
Sending down new services %@ commands %@ capabilities %d
v16@?0@4@8^B12
Set services: %@  (Previous: %@)
Set commands: %@  (Previous: %@)
Updating capabilities: %d  (Previous: %d)
Disconnecting from daemon - no listeners
-[IDSDaemonController addedDelegateForService:]_block_invoke
%s: adding delegate on service %@ _notificationServices %@
Adding listener with ID: %@    services: %@   commands %@
Removing listener with ID: %@    services (count): %@   commands (count): %@   capabilities %@
Tried to remove non existent listener with ID: %@
services
Set %@: %@  for listener ID: %@
commands
setCapabilities %d for listenerID %@ has no ID
setCapabilities %d for listenerID %@ is not a valid listener
setCapabilities %d for listenerID %@ - listener map already contains our capabilities
Set caps: %d  for listener ID: %@
Cleaning up daemonConnectedGroup %p
Cleaning up LOCAL object
Cleaning up REMOTE object
Disconnected from agent (local)...
 ... disconnection from agent (local) being handled by ivarQueue
Disconnected from agent (remote)...
 ... disconnection from agent (remote) being handled by ivarQueue
Will auto reconnect...
 ...auto reconnecting
xpc-object
object
object-context
System application did suspend
System application did enter background
System application did enter foreground
System application did resume
_autoReconnect
TB,S_setAutoReconnect:,V_autoReconnect
_remoteMessageQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_remoteMessageQueue
delegate
T@,N,V_delegate
isConnecting
TB,R,N
listenerID
T@"NSString",R,N,V_listenerID
listener
T@"IDSDaemonListener",R,&,N,V_daemonListener
curXPCMessagePriority
Ti,N,V_curXPCMessagePriority
__kIDSKeyRollingCompleteNotification
IDSLocalSetup
IDSLocalSetupStart
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice %@
NRPairing
Asked to pair device with cbuuid: %@
DemoModeConfig
12345678-0000-DADA-DADA-DEADBEEEEEEE
IDSConnectPairedDevice %@
IDSDeletePairedDevice
%s %@
IDSDeletePairedDeviceWithCompletion
%s %@ %p %p
v8@?0@"NSDictionary"4
IDSGetPairedDevicesWithCompletionBlock
IDSGetPairedDevices
%s is DEPRECATED! Please use IDSGetPairedDevicesWithCompletionBlock
IDSInitialLocalSyncStarted
%s is DEPRECATED! Please use IDSInitialLocalSyncStartedForServices
IDSInitialLocalSyncCompleted
%s is DEPRECATED! Please use IDSInitialLocalSyncCompletedForServices
IDSInitialLocalSyncStartedForServices
IDSInitialLocalSyncCompletedForServices
AccountSync
Local setup - received incoming sync message
IDSSetAllowedTrafficClassifiersForDevice
%s: invalid device %@
IDSGetAllowedTrafficClassifiersForDevice
IDSDropAllMessagesWithoutAnyAllowedTrafficClassifier
com.apple.madrid
com.apple.ess
com.apple.private.ac
com.apple.private.alloy.facetime
com.apple.private.alloy.bulletinboard
com.apple.private.alloy.photostream
com.apple.private.alloy.maps
com.apple.private.alloy.screensharing
com.apple.private.alloy.sms
com.apple.private.alloy.multiplex1
IDSReportSpam
IDSReportiMessageSpam - %@  (toURI: %@)
IDSReportiMessageUnknownSender - %@, %@, %@  (toURI: %@)
IDSCheckiMessageUnknownSender (toURI: %@ Count: %@)
__IDSServiceAvailabilityDidChangeNotification
availability
service
ServiceAvailability
%@ posting availability change notification (%@) - available: %d
%@ creating monitor for service: %@
%@ adding listener `%@` for service: %@
%@ removing listener `%@` for service: %@
%@ no more listeners for service: %@
monitor
T@"IDSServiceMonitor",&,N,V_monitor
listeners
T@"NSMutableSet",R,&,N,V_listeners
IDSDaemonListener-ivarQueue: %@
IDSDaemonListenerContext
v8@?0@"<IDSDaemonListenerProtocol>"4
Exception: %@ in handler: %@ while executing a block
IDSDaemonListener _removeAccountOnIvarQueue %@ was told of an account without a unique id or service name: %@
v16@?0@4I8^B12
IDSDaemonListener accountAdded %@ was told of an account without a unique id or service name: %@
-[IDSDaemonListener accountAdded:]
%s: %@
IDSDaemonListener accountRemoved %@ was told of an account without a unique id or service name: %@
-[IDSDaemonListener accountRemoved:]
IDSDaemonListener accountEnabled was told of an account without a unique id %@ or service %@
Incoming account enabled: %@
IDSDaemonListener accountDisabled was told of an account without a unique id %@ or service %@
Incoming account disabled: %@
com.apple.private.alloy.voicemailsync
VoicemailSync
Account info changed %@
IDSDaemonListener accountInfoChanged %@ was told of an account without a unique id or service name: %@
ActiveID
Found active device in dependent devices update, updating activeDevice ID to %@ for %@
Dependent devices updated, setting %@ to (isActive: %@)
Current devices for account %@: %@
Found existing local device, removing %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Local device added, updating activeDevice ID to %@
New devices for account %@: %@
v16@?0@"NSDictionary"4I8^B12
Active device was removed, clearing active uniqueID %@
Refresh registration for account %@
NSUUID
No device ID can't update nsuuid, bailing...
Device unique ID %@
IDSService-oversized
We found a match ! %@
IsActive
Calling didSwitch for topic %@
DidSwitch callback for %@ (handler %@) was handled %@
Unhandled didSwitch callback for topic %@
Updating isActive state for all accounts %@
New active unique ID is nil
Account unique ID is nil, can't switch active device ID
Switching active device to %@ for account %@
Active paired device switched, updating activeDevice ID to %@
Unsetting active device unique ID due to quick switch or new pairing start
Setup complete with info
serviceInfo
Deferred setup on ivar queue, got accounts %@
Services all disappeared, removing all accounts
enabledAccountsInfo
Deferred setup on ivar queue, got enabled accounts %@
AccountEnabled
Notified account enabled %@ for service %@
Services all disappeared, removing all enabled accounts
dependentDevices
Deferred setup on ivar queue, got dependent devices %@
Services all disappeared, removing all dependent devices
deviceIdentifier
Device identifier from daemon: %@
activeDeviceUniqueID
Active device uniqueID from daemon: %@ map %@
Setup info is not complete, waiting...
Connection is not complete, waiting...
Connection complete, notifying
Connection complete
DaemonListener
XPC object received %@:%@
Exception: %@ in handler: %@ while executing: %@
Device identifier changing from %@ to %@
Unnecessary invocation of deviceIdentifierDidChange:
isSetupComplete
hasPostedSetupComplete
T@"NSString",R,&,N
_hidingDisconnect
TB,N,S_setHidingDisconnect:
direction
session:
IDSSession
Received invalid options %@, bailing
socket
Ti,R,N
sessionID
T@"NSString",R,N
destination
isAudioEnabled
TB,N
isMuted
invitationTimeOut
Ti,N
sessionEndedReason
TI,R,N
IDQuery
IDSIDQueryController
Received IDQueryCompletedWithFromURI %@ idStatusUpdates %@ service %@ success %@ error %@
IDSIDQuery
v16@?0@"NSString"4@"NSDictionary"8^B12
Updated local cache to %@
Notifying delegate %@ about ID status update
v8@?0@"<IDSIDQueryControllerDelegate>"4
addListener:forService:
ListenerID is empty, bailing...
Service name is empty, bailing...
%@ -> %@
Final map after add %@
removeListenerID:forService:
Final map after remove %@
WatchPairing
void IDSSimulatedLocalPairingAddPairedDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
%s  (simulatorDeviceID: %@)
IDSSimulatorLocalPairingAddPairedDevice
IDSSimulatorSupport
Failed to soft link IDSSimulatorLocalPairingAddPairedDevice
void IDSSimulatedLocalPairingDeletePairedDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
IDSSimulatorLocalPairingDeletePairedDevice
Failed to soft link IDSSimulatorLocalPairingDeletePairedDevice
void IDSSimulatedLocalPairingSwitchActivePairedDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
IDSSimulatorLocalPairingSwitchActivePairedDevice
Failed to soft link IDSSimulatorLocalPairingSwitchActivePairedDevice
IDSBatchIDQueryControllerQueue
com.apple.IDSDaemonRequestConnectionQueue
v8@?0@"NSObject<OS_xpc_object>"4
portName
setupInfo
setup-request
response
Connection
 => Found response with %d keys
Failed IDSDaemonRequestConnection, no reply
IDSSendMessageOptionTimeout
IDSSendMessageOptionSkipPayloadCheck
IDSSendMessageOptionTopLevelDictionary
IDSSendMessageOptionDataToEncrypt
IDSSendMessageOptionWantsResponse
IDSSendMessageOptionFromID
IDSSendMessageOptionCommand
IDSSendMessageOptionWantsDeliveryStatus
IDSSendMessageOptionDeliveryStatusContext
IDSSendMessageOptionUUID
IDSSendMessageOptionAlternateCallbackIdentifier
IDSSendMessageOptionEncryptPayload
IDSSendMessageOptionCompressPayload
IDSSendMessageOptionFireAndForget
IDSSendMessageOptionWantsClientAcknowledgement
IDSSendMessageOptionLocalDelivery
IDSSendMessageOptionForceLocalDelivery
IDSSendMessageOptionRequireBluetooth
IDSSendMessageOptionDuet
IDSSendMessageOptionExpectsPeerResponse
IDSSendMessageOptionPeerResponseIdentifier
IDSSendMessageOptionOpportunisticDuet
IDSSendMessageOptionTethering
IDSSendMessageOptionActivityContinuation
IDSSendMessageOptionNSURLSession
IDSSendMessageOptionMapTile
IDSSendMessageOptionNonWaking
IDSSendMessageOptionBypassDuet
IDSSendMessageOptionFakeMessage
IDSSendMessageOptionRequireAllRegistrationProperties
IDSSendMessageOptionRequireLackOfRegistrationProperties
IDSSendMessageOptionInterestingRegistrationProperties
IDSSendMessageOptionQueueOneIdentifier
IDSSendMessageOptionDuetIdentifiersOverride
IDSSendMessageOptionSockPuppet
IDSSendMessageOptionEnforceRemoteTimeouts
IDSSendMessageOptionAccessToken
IDSSendMessageOptionHomeKitMessage
IDSSendMessageOptionDisableAliasValidation
IDSSendMessageOptionForceEncryptionOff
IDSSendMessageOptionSubServiceKey
IDSSendMessageOptionAllowCloudDeliveryKey
IDSSendMessageOptionAlwaysSkipSelfKey
IDSIncomingMessagePushPayload
IDSIncomingMessageDecryptedData
IDSIncomingMessageOriginalEncryptionType
IDSIncomingMessageShouldShowPeerErrors
_internal
T@"_IDSConnection",R,&,N
account
T@"IDSAccount",R,&,N
isActive
block
T@,R,N,V_block
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
handler
T@?,C,N,V_handler
-[IDSPairedDeviceManager setAllowedTrafficClassifiers:]_block_invoke
%s: received new traffic classifiers %@
Cannot save invalid device info: %@
Received paired device info, sending to daemon for saving
Cannot delete empty CBUUID, cbuuid: %@
-[IDSPairedDeviceManager deletePairedDevice:withCompletionBlock:queue:]_block_invoke
%s: device CBUUID: %@
-[IDSPairedDeviceManager getLocalDeviceInfoWithCompletionBlock:queue:]
%s: Empty completion block/queue
Querying local device info from IDSD asynchronously
-[IDSPairedDeviceManager getPairedDeviceInfoWithCompletionBlock:queue:]
Querying paired device info from IDSD asynchronously
-[IDSPairedDeviceManager getDeliveryStatsWithCompletionBlock:queue:]
Received pairing added notification from daemon, device: %@, added: %@
Received pairing removed notification from daemon, device: %@, deleted: %@
Invoking pairingDelete completion block
Received local device info from daemon, device: %@
Invoking localDeviceInfo completion block
Received paired device info from daemon, device: %@
Invoking pairedDeviceInfo completion block
allowedTrafficClassifiers
T@"NSSet",&,N
Found existing IDSAccountController %@ for service %@
Tried to create IDSAccountController with empty service, ignoring...
Couldn't find existing IDSAccountController adding new one %@
AccountController
    %@ -> %p
Deallocing IDSAccountController %@
%p will be removed from account controller map automatically
* Request to setup account with loginID: %@   auth token: %@  profileID: %@    service: %@
* Request to setup account with loginID: %@   auth token: %@  profileID: %@  aliases: %@  service: %@
* Request to setup account with aliases: %@ and parameters:
  => password : REDACTED
  => %@ : %@
* Request to add account: %@   service: %@
* Request to remove account: %@   service: %@
* Request to enable account: %@   service: %@
* Request to disable account: %@   service: %@
accounts
T@"NSSet",R,&,N
_IDSConnection
Account delegate has been cleaned up via weak references %p
setCapabilities %u  %@, result = %@
QueueOneIdentifier not a string! [%@]
callstack %@
IDSActivityContinuationIdentifier
IDSOpportunisticDuetIdentifier
Warning, missing %@ to add to %s
_pendingSends
IDSConnection
unknown type
Client request to send %@ on service: %{public}@   guid: %{public}@   to destinations: %@   options: %@    size: %d] (%lu pending)
Cannot send to empty destination set
Cannot send with an inactive account
Cannot send payload of this size
Invalid address: %@
protobuf
sendPayload - could not find account uniqueID! self: %@ account: %@
Could not find account uniqueID!
Cannot send empty message
%@ unable to plist-serialize dictionary %@ !!
URGENT
Default
Sync
Client request to send %{public}@ message (dictionary) service: %{public}@  to destinations: %@   options: %@]
message (dictionary)
sendPayload - could not plist serialize dictionary.
Could not plist serialize dictionary or otherwise empty payload
data
%@ asked to send server message %@ with command %@ - invalid value!
v8@?0@"<IDSConnectionDelegate>"4
%@ not connecting to identityservicesd - no serviceName for account %@
Failed to connect to identityservicesd; %@ %@
%@ resending %@ alternate %@ due to daemon disconnection.
v16@?0@"NSString"4@"IDSSendParameters"8^B12
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@   lastCall: %@
IDS sending success is NO though error is unset
Unknown error
  => <%@:%p> finished handling message guid: %@  (connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:)
  => <%@:%p> finished handling message guid: %@  (connection:identifier:didSendWithSuccess:error:context:)
%@ identifier %@ callbackID %@ willSendToDests count %@ skipped count %@  map count %@
  => <%@:%p> finished handling message guid: %@  (connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:)
app-level ack
%@ received app-level ack with identifier %@ context %@
Ignoring %@ for topic %@ my topic is %@
com.apple.private.alloy.electrictouch
Ignoring %@ to: %@ it is not to my aliases: %@ account uuid: %@
Ignoring %@, account is not configured: %@    isActive: %@  isRegistered: %@  isLocal: %@
Ignoring %@ for topic %@ because fromID %@ is a suppressed IDSDevice.
message
%@ received message: %@  topic %@  from: %@  to: %@   payload items: %d
%@ received data: %@ topic %@  from: %@  to: %@
Accessory data commands are only supported on AppleID accounts, This one is not for me.
%@ received Accessory data: %@ topic %@  from: %@  to: %@
accessoryReportMessage
%@ received Accessory Report Message: %@ topic %@  from: %@  to: %@
(unknown)
Client received protobuf from daemon %@ for topic: %@  messageID: %@  fromID: %@
 => Handed protobuf ID %@ to delegate: %@
Ack'ing message %@ to daemon that client got it
session invitation
Received incoming invitation %@ forTopic %@ sessionID %@ toIdentifier %@ fromID %@ transportType %@
com.apple.private.alloy.bluetoothregistry
com.apple.private.alloy.bluetoothregistryclassc
com.apple.private.alloy.continuity.auth
com.apple.private.alloy.coreduet
com.apple.private.alloy.nsurlsessionproxy
com.apple.private.alloy.otaupdate
com.apple.private.alloy.systemsettings
com.apple.private.alloy.timesync
com.apple.private.alloy.timezonesync
com.apple.private.alloy.wifi.networksync
com.apple.private.alloy.fmf
v8@?0@"NSMutableSet"4
-[IDSQuickSwitchAcknowledgementTracker awaitAcknowledgementFromServiceDelegate:]
%@ %s  (serviceDelegate: %@)
-[IDSQuickSwitchAcknowledgementTracker identifierForServiceDelegate:]
%@ (%p)
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:]
%@ %s  (delegateIdentifier: %@)
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromAllServiceDelegates]
%@ %s
isAwaitingAcknowledgement
Unacknowledged IDSServiceDelegate objects: %@
void IDSLocalPairingAddPairedDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
cbuuid
%s (%s: %@)   (%s: %p)   (%s: %p)
%s received nil requestID. Cannot call daemon. This should never happen!
void IDSLocalPairingConnectPairedDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
void IDSLocalPairingSetupCompletedForPairedDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
void IDSLocalPairingSwitchActivePairedDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
void IDSLocalPairingDeletePairedDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
void IDSLocalPairingUnpairStartForDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
void IDSLocalPairingStopForDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
void IDSLocalPairingUnpairForDevice(NSUUID *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
void IDSLocalPairingGetPairingDevicesWithCompletionBlock(IDSLocalPairingPairedDevicesCompletionBlock, dispatch_queue_t)
%s (%s: %p)   (%s: %p)
void IDSLocalPairingGetPairedDevicesWithCompletionBlock(IDSLocalPairingPairedDevicesCompletionBlock, dispatch_queue_t)
void IDSLocalPairingSetAllowedTrafficClassifiersForDevice(NSSet *, IDSDevice *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
classifiers
deviceUniqueID
%s (%s: %@)   (%s: %@)   (%s: %p)   (%s: %p)
void IDSLocalPairingGetAllowedTrafficClassifiersForDevice(IDSDevice *, IDSLocalPairingTrafficClassifiersCompletionBlock, dispatch_queue_t)
void IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier(IDSDevice *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
void IDSLocalPairingReunionSyncStartedForServices(NSArray *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
void IDSLocalPairingReunionSyncCompletedForServices(NSArray *, IDSLocalPairingCompletionBlock, dispatch_queue_t)
_IDSDeviceConnection was created without an IDSDevice %@ or service %@
IDSDeviceConnection
<%p> Init connection socket %d with options: %@  device: %@  (%@)  (name %@) service %@ connectionUUID %@
completionHandlerID
protocol
<%p> _IDSDeviceConnection has timed out waiting for a socket.
Socket open timed out
<%p> Updating stream pair: %@:%@
Cannot change priority when not connected
<%p> Updated socket traffic class: %d
Could not set traffic class for underlying socket
Invalid priority level specified
Options dictionary contains no valid options
<%p> Closing socket: %d (name %@)
<%p> Closing socket: skipped, a new connection for this %@
object-type
device-socket
<%p> World, id[%@] !=? id[%@]
<%p> xpc object: [%@] context: [%@]
error
Received XPC Response/Socket: %d    Error: %@
Error: %@
<%p> Opened socket: %d (Success: %@ ) %@ (%@)
Open socket request already timed out, closing %d.
Daemon died, closing socket: %d
%@_%@
TI,R,N,V_mtu
inputStream
T@"NSInputStream",R,&,N
outputStream
T@"NSOutputStream",R,&,N
IDSAccountController created with service %@ serviceToken %@
Adding listener with ID %@ topics %@
Daemon disconnected, we'll need to reload accounts for service: %@
IDSAccountController
Updating delegates of account changes
v8@?0@"<IDSAccountControllerDelegate>"4
Accounts
Re-loading cached accounts for service: %@ with dictionaries %@
Account loaded was of unknown account type %d, ignoring...
@8@?0@4
Old account set %@
New account set %@
New enabled accounts set %@
Requesting setup of account: %@   service: %@  transaction: %@  accountConfig: %@
Request to setup account with loginID: %@   auth token: %@  profileID: %@  aliases: %@  selfURI: %@
status
We have a real account registered, hiding local account
We don't have a real account registered, adding and enabling local account
Client request to enable account ID: %@
Client request to disable account ID: %@
Account added was of unknown account type %d, bailing...
**** Account added has no uniqueID **** %@
Received account removed %@ for topic %@
Did not find an existing account to remove with unique ID %@
**** Account removed has no uniqueID **** %@
Received account updated %@ for topic %@
Did not find an existing account to update with unique ID %@, creating one
Account updated was of unknown account type %d, ignoring...
Could not create IDSAccount with info %@
**** Account updated has no uniqueID **** %@
Received accounts changed %@ for topic %@  service: %@  (Cached: %@)
v12@?0@4^B8
No uniqueID for account %@, ignoring...
Did not find an existing account to update with unique ID %@
Account changed was of unknown account type %d, ignoring...
Original accounts %@
Accounts Modified %@
Removing accounts %@
Setup complete - no transaction ID, bailing...
SetupCompleteForAccount %@ transactionID %@ setupError %@
Setup handler block %p for transactionID %@
Account setup completed but we don't have an account, ignoring...
IDSAccountController-setupCompleteQueue
Setup completed for account %@ isActive %@ setupError %@
Account enabled - no unique ID, bailing...
Account enabled - no service, bailing...
Received account enabled %@ on service %@
Adding enabled account %@
Did not find an existing account to enable with unique ID %@
Account disabled - no unique ID, bailing...
Account disabled - no service, bailing...
Received account disabled %@ on service %@
Removing enabled account %@
Did not find an existing account to disable with unique ID %@
internalAccounts
enabledAccounts
serviceName
Hard deregistering, %@
Triggering final deregister, %@
Creating new IDSAccount %p with config %@ uniqueID %@ serviceName %@
Created new IDSAccount %p with loginID %@ uniqueID %@ serviceName %@
IDSAccount: %p [Service: %@  User: %@  ID: %@  Type: %@  Active: %@  Registration Status: %@]
Client requesting to register account: %@
Client requesting to unregister account: %@
Client requesting to reregister (with reidentify %@) account: %@
Client requesting to deactivate and purge identify account: %@
aliases
T@"NSArray",R,&,N
aliasStrings
vettedAliases
profileInfo
T@"NSDictionary",R,&,N
accountInfo
T@"NSDictionary",&,N
accountType
uniqueID
displayName
registrationStatus
registeredURIs
T@"NSArray",R,N
registrationCertificate
T@"NSData",R,N
dateRegistered
T@"NSDate",R,N
nextRegistrationDate
pushToken
regionID
regionBasePhoneNumber
regionServerContext
T@"NSDictionary",R,N
profileID
primaryServiceName
isUserDisabled
loginID
T@"NSString",&,N
canSend
devices
nearbyDevices
IDSiCloudSignInHack
iCloud sign in hack with userName %@ password %@
iCloud sign out hack
Kicking get dependent
idsiCloudSignInDataMigratorForID: %@
device:%@
No cloudID Provided
urn:ck:%@
Client request for IDSCopyLocalDeviceUniqueID: %@
Required Field Is Empty
A required Field Is Empty
ServiceUserID and AdminID can not be the same
Tried to create an account with empty service name, bailing...
Tried to create an account with unknown account type %d, bailing...
No account type specified, setting to Apple ID
com.apple.private.alloy.icloudpairing
New account info %@ for %@
Adding IDSDevice %@
Devices updated %d
ReloadAccounts
Devices before %@
Devices after %@
v8@?0@"<IDSAccountDelegate>"4
Local account, ignoring request for keychain registration
phone-number-registration
next-registration-date
registration-date
uris
Registered URIs for %@ with service type %@ account type %d
Registration cert for %@ with service type %@ account type %d
ids-registration-cert
Push token for %@ with service type %@ account type %d
push-token
<%p:%@:%@:%@:%@:%@:%@>
%@ not connecting to identityservicesd - no serviceName for config %@
Account %@ received registration status changed: %@
v8@?0@"<IDSAccountRegistrationDelegate>"4
Account %@ received aliases changed: %@
Account received %@ vetted aliases changed
Account received %@ profile changed: %@
Account %@ received login changed: %@
Account received %@ displayName changed: %@
Account received %@ dependentDevicesUpdated %@
Account received %@ dependentDevicesUpdatedUponReconnect (devices count: %@)
Account received %@ localDeviceAdded %@
Devices updated %@
Account received %@ localDeviceRemoved %@
Account %@ received request to refresh registration
pushTopic
isInTransientRegistrationState
suppressedDevices
_isEnabled
TB,N,S_setIsEnabled:
T@"_IDSService",R,&,N
T@"NSSet",R,C,N
T@"NSArray",R,C,N
LinkType
PacketsPerSecond
InputBytesPerSecond
OutputBytesPerSecond
Intent
com.apple.registration
saveviewRegTimeout
iCloud
iCloud sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iCloud sign out
iCloud update for userName %@ accountInfo %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1025.8.9/IDS/Client/IDSDaemonRequestTimer.m
<Unknown File>
The request context map should be empty after canceling all countdowns.
%@-idswake
_IDSService
Client received event %s on service %@
v12@?0@"NSObject<OS_xpc_object>"4@"NSObject<OS_xpc_object>"8
com.apple.private.ids.prototype
IDSSimulatorSupportRegisterDataHandler
v16@?0@"NSString"4@"NSData"8@"NSString"12
Couldn't soft link IDSSimulatorSupportRegisterDataHandler(). Just failing here
Call made to deprecated IDSService API with service domain %@
IDSConnection/IDSAccountController delegates have been cleaned up via weak references %p
IDSSimulatorSupportUnregisterDataHandler
Couldn't soft link IDSSimulatorSupportUnregisterDataHandler(). Just failing here
IDSService deallocating with serviceName %@
Failed to deserialize data %p. error: %@
options
senderDeviceID
type
pbType
pbIsResponse
Failed to create IDSProtobuf from data %p
fileData
fileName
fileAttrs
Failed to create staging directory at %@ from data %p:%@
Failed to write file data to %@ from data %@: %@
Failed to set file attributes for %@ to %@ from data %p: %@
ackedMsgID
ackedSubService
v8@?0@"<IDSServiceDelegate>"4
IDSSimulatorSupportSendDataWithOptions
Failed to to archive ack dict %@ for message %@ on service %@ subservice %@
Failed to send ack for message %@ on service %@ subservice %@
v20@?0B4@"NSString"8@"NSError"12@"NSDictionary"16
Couldn't soft link IDSSimulatorSupportSendData(). Just failing here
v16@?0@4@"IDSConnection"8^B12
IDSService
%@: OTRTestCallback: token is %@, setupTime is %.6f, error==nil is %d
v8@?0@"<IDSServiceDelegatePrivate>"4
ACKTracker
%@ Switched active paired device for service name %@. deviceUniqueID: %@
Ignoring didSwitch callback for %@, mine is %@
%@ Update cache with active device
v8@?0@"NSString"4
%@ Pre didSwitch call back block
v8@?0B4
%@ Notifying delegate %p of active device switch to %@ (delegateIdentifier %@)
%@ Pre devicesChanged call back block
%@ Notifying delegate %p of devices changing (devices %@)
%@ Group notify
Stopped suspending traffic to the daemon.
Connection map:
   %@ => %@
v16@?0@"NSString"4@"IDSConnection"8^B12
Tearing down connection for %@
activeAccountsChanged, oldSet: %@  newSet: %@
Calling active accounts changed %@ with delegate %p
*** dropping devicesChanged callback!
incomingData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Calling out to IDSService delegate %p for incomingData if it responds.
Done for IDSService delegate %p for incomingData - doesRespondToSelector? %@
Context %@ WantsAppAck %@ AppAckGuid %@ storageGuid %@
Sending app-level ack dispatch called for message %@
Calling out to IDSService delegate %p for incomingAccessoryData if it responds.
Done for IDSService delegate %p for incomingAccessoryData - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingAccessoryReportMessage if it responds.
Done for IDSService delegate %p for incomingAccessoryReportMessage - doesRespondToSelector? %@
incomingMessage on connection %@ account %@ from ID %@  from device: %@  sender-side-identifier: %@
Consumed sandbox extension [%@] handle [%llu] for resource [%@]
No sandbox extension for received resource [%@]
Remove file success: %@, error: %@ (accessed %d)
v8@?0i4
Calling out to IDSService delegate %p for incomingResource if it responds.
Done for IDSService delegate %p for incomingResource - doesRespondToSelector? %@
Done for IDSService delegate %p for incomingResource with metadata - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage if it responds.
Done for IDSService delegate %p for incomingMessage - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage with context if it responds.
Done for IDSService delegate %p for incomingMessage with context - doesRespondToSelector? %@
Incoming protobuf %@, routing to selector/delegate. sender-side-identifier %@
service:account:fromID:context:
Found selector %@ fullSelector %@ for key 0x%x
 => Delgate %p responds to: %@, passing along protobuf: %p
   * Done handling
No selector for key 0x%x = type(%u) isResponse(%@), notifying delegates
 => Delgate %p responds unhandled protobuf passing along protobuf: %p
No delegate was registered that could handle protobuf %@
reroute-service
Calling out to IDSService delegate %p for incomingTopLevelMessage if it responds.
Done for IDSService delegate %p for incomingTopLevelMessage - doesRespondToSelector? %@
isActiveChanged on connection %@ isActive %@
devicesChanged on connection %@ account %@ all devices %@ num delegates: %lu
connectedDevicesChanged on connection %@ account %@ devices %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@
%@ got identifier %@ callbackID %@ willSendToDestinations %@ skippedDests %@ regPropsToDests (count) %@
%@ got identifier %@ didSendWithSuccess %@  error %@ num delegates: %lu
%@ got identifier %@ hasBeenDeliveredWithContext %@
Sending up options to client: %@
Filtering account %@ with aliases %@  isActive? %@  canSend? %@
Ignoring sub-services update, couldn't find active device
Ignoring sub-services update, couldn't find uniqueID for device %@
Triggering Internal resend of Sub Services to daemon
Attempting To Send message from account %@ to destinations %@
com.apple.private.alloy.idscredentials
Attempting to send on a non local account, this message is allowed to progress
Attempting to send to more than 1 destination, this message will fail in the daemon if necessary
Attempting to send to a remote destination from a local account, this is permited if proxy is permitted and will fail in the daemon if not
v12@?0@"IDSAccount"4^B8
Failed to delete file at %@ after sending
simID
originalSimDestination
IDSSimulatorSupportGetCurrentConnectedSimulatorID
Out of space
Sending AccessoryData Now
sendAccessoryData - Could not find connection for account %@
sendAccessoryData - All accounts %@
Could not find valid account
sendServerMessage - Could not find connection for account %@
sendServerMessage - All accounts %@
device:
FromID %@, strippedURI %@, token %@
Comparing device token %@ to token %@
Did not find a device matching the token %@
setPreferInfraWiFi: %@
setLinkPreferences: %@
Received invalid link preferences
forceOTRNegotiation
sendResourceAtURL - resourceURL not a file %@
Sending non-file resource unsupported
Attempted to link or copy file %@ destination %@ (%s to %@)
sendResourceAtURL - unable to link or copy file %@
Unable to link or copy file
sendResourceAtURL - IDSSendMessageOptionLocalDeliveryKey not set to YES - forcing to true
sendResourceAtURL - resourceURL %@  isFileURL %@  localDelivery %@
resourceTransferMessageDict
com.apple.identityservices.send
Issued sandbox extension [%s] for file [%@]
Failed to issue sandbox extension for linked/copied file [%@]
Issued sandbox extension [%s] for original file [%@]
Failed to issue sandbox extension for original file [%@]
Call made to manually ack a message, however this service does not support manually acking of messages
Unable to create stream connection with destination
Creating datagram channel with destination %@ => %@
Unable to create datagram channel with destination
Creating datagram channel with socket %d => %@
Unable to create datagram channel with socket descriptor
iCloudAccount
serviceDomain
T@"NSString",R,C,N
pretendingToBeFull
TB,N,GisPretendingToBeFull
manuallyAckMessages
TB,N,V_manuallyAckMessages
IDSSimulatorSupportErrorDomain
IDSSimulatorSupportOptionSetMessageIdentifier
_idsSimulatorSupportOptionsFromIDSSendOptions()
Failed to decode data of %lu bytes to a uuid string
.XXXX
sendResourceAtURL - can't allocate %ld bytes for new file path
sendResourceAtURL - failed to link and failed to copy file %@ => %@ (error %@)
com.apple.springboard
Clearing out _connection, we're disconnecting
Forcing a disconnect, terminating connection
No service %@, bailing...
No block %p, bailing...
Cache request for service %@
transactionID map after ADD %@
service-cache-request
transactionID
is-springboard
Sending cache request for service %@ transactionID %@
cache
transactionID map after REMOVE %@
Could not create message for cache query
No listenerID %@, bailing...
Cached ID status request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No destinations, not issuing query...
cached-id-status-query
destinations
Received cached id status (destinations: %@) (service: %@)
ID status renewal request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
id-status-query
Received id status (destinations: %@) (service: %@)
No message to send %@, ignoring...
Query service disconnected
Error requesting client: %s
No connection to send message on
Unknown account type
Unknown service
Empty user name
Empty service name
Process not entitled
Component disconnected
Component crashed
Remote user isn't registered
Attachment send failed
Encryption failed
Message send failed
Invalid caller id
Payload is too big to send
Unknown exception
Timed out
Replaced
Device Unpaired
Bluetooth required
No space
Cannot read resource
Data protection class unavailable
Database filled up
Revision lock forced failure
Service version not compatible
Destination device is no longer the active device
Destination device for this message was inactive for an extended period
A over C encryption is not available at this time
Class A encryption keys are not available at this time
No error
Invalid state
Operation failed
%@-%@
v16@?0i4Q8
[%@ %p:   Name: %@   Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   Handles: %@   linkedUserURIs: %@   nsuuid: %@   supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isCloudConnected: %@  isActive: %@  isLocallyPaired: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
[%@ %p:   Name: %@   Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   nsuuid: %@   supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isActive: %@  isLocallyPaired: %@  isHSATrusted: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
all 0s
Client request to set uuid %@ on device %@
  => Device doesn't support it, ignoring
IDSDevice
Open socket %d info %@ with options: %@
Failed, already have an open connection
Already have open connection %d
CLosing socket: %d
%@ - wrong socket %d (we have %d)
Updating stream pair: %@:%@
%@ - wrong streams %@ and %@ (we have %@ and %@)
World, id[%@] !=? id[%@]
xpc object: [%@] context: [%@]
Closing socket %d for domain %@
modelIdentifier
productName
productVersion
productBuildVersion
name
nearby
TB,R,N,GisNearby
connected
TB,R,N,GisConnected
cloudConnected
TB,R,N,GisCloudConnected
locallyPresent
isDefaultPairedDevice
isLocallyPaired
pairingProtocolVersion
minCompatibilityVersion
maxCompatibilityVersion
serviceMinCompatibilityVersion
supportsiCloudPairing
supportsTethering
supportsHandoff
supportsApplePay
T@"NSData",R,&,N
identities
nsuuid
T@"NSUUID",&,N,SsetNSUUID:
supportsSMSRelay
supportsMMSRelay
supportsPhoneCalls
deviceColor
enclosureColor
linkedUserURIs
isHSATrusted
lastActivityDate
T@"NSDate",R,&,N
uniqueIDOverride
_IDSIDQueryControllerConnectionQueue
_IDSIDQueryControllerQueue
Purging idStatusCache
set-id-status
Sending ID status update (%d) for service %@ destination %@
No destinations, bailing...
No service, bailing...
No listenerID, bailing...
No query complete block, bailing...
Received results for service: %@  updates %@
v16@?0@"NSDictionary"4@"NSString"8@"NSString"12
No completion block, bailing...
No queue, bailing...
No listener ID, bailing...
_warmupQueryCacheForService:  (service: %@)
No service name, bailing...
Received cache for service %@, %d count
_flushQueryCacheForService:  (service: %@)
addDelegate:forService:listenerID:queue:  (delegate: %p)   (service: %@)   (listenerID: %@)   (queue: %p)
No delegate, bailing...
No queue provided, bailing...
Listeners after ADD %@
removeDelegate:forService:listenerID:  (delegate: %p)   (service: %@)   (listenerID: %@)
Listeners after REMOVE %@
openStreamPairWithOptions for %d - %s %s [%s]!
v12@?0i4@"NSError"8
openSocketForDomain:transportType: please switch to openSocketWithOptions:completionHandler:onQueue:!
isCloudConnected
operatingSystemVersion
T{?=iii},R,N
event-type
connected-link
disconnected-link
disconnected-link-ids
rat-changed
default-link
default-link-id
rssi-key
preconnection-data-key
mtu-changed
info-report-events-key
error-key
preference-default-link-selection
preference-baseband-registration
preference-baseband-queue-flush-payload
preference-baseband-queue-flush
preference-pre-connection-data
preference-wait-for-pre-connection-data
preference-update-qos
preference-update-qos-is-good
preference-discard-link-ids
preference-query-information
preference-max-bitrate
linkid-key
baseband-registration-key
baseband-notification-operation-key
max-bitrate-key
<LinkContext %p> linkID %d flags %08X networkType %u connectionType %ld maxMTU %u RATType %lu maxBitrate %u (remote networkType %u connectionType %ld RATType %lu)
linkID
Tc,R
flags
TC,R
networkType
connectionType
RATType
maxMTU
TS,R
remoteNetworkType
remoteConnectionType
remoteRATType
maxBitrate
TI,R,V_maxBitrate
com.apple.ids
DatagramChannelFunctionalLogging
IDSDataChannels
<%p> Creating with socket %d
<%p> Creating with destination %@
%@%u
-dealloc called for %@
<%p> channelFD %d connected %@ eventHandler %p readHandler %p auto %@
<%p> socket %d connected %@ eventHandler %p readHandler %p connetion %@
<%p> socket %d connected %@ eventHandler %p readHandler %p
-underlyingFileDescriptor called for %@
<%@> first read, will send dummy link information
<%@> dummy link information
<%@>  removeIDSDataChannelLinkContext:%u, linkContexts %@
<%@> Can't find the linkContext of linkID %u, linkContexts %@
<%@> sent IDSDataChannelEventDisconnected, linkID %u, linkContexts %@
ids-datachannels-maxbitrate-over-relays
Got kIDSDataChannelMaxBitrateOverRelaysKeyBag %u
DatagramChannelMaxBitrate
Couldn't get kIDSDataChannelMaxBitrateOverRelaysKeyBag and DatagramChannelMaxBitrate default value.
<%@> got connectedLinkID %d (link family:%u) (mtu:%u) (l-conn:%u) (l-RAT:%u) (r-conn:%u) (r-RAT:%u), Current LinkContexts %@
<%@> sent IDSDataChannelEventConnected, current link contexts %@
can't find link %d for the default
got PacketLinkID %d
kClientChannelMetadataType_PacketLinkID should be 1 byte, not %u bytes, field: %u
got trafficClass %u
kClientChannelMetadataType_TrafficClassKey should be %d bytes, not %u bytes, field: %u
kClientChannelMetadataType_LinkConnected should be 4 bytes, not %u bytes, field: %u
got disconnectedLinkID %d
kClientChannelMetadataType_LinkDisconnected should be 1 byte, not %u bytes, field: %u
got defaultLinkID %d
kClientChannelMetadataType_DefaultLinkID should be 1 byte, not %u bytes, field: %u
got ratType %u
kClientChannelMetadataType_RATChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_RATChanged should be 1 bytes, not %u bytes, field: %u
got preConnectionDataSize %u
kClientChannelMetadataType_PreConnectionDataSizeKey should be 1 bytes, not %u bytes, field: %u
got preConnectionData, called IDSDataChannelEventPreConnectionData event
kClientChannelMetadataType_PreConnectionDataKey should know its size
<%@> sent IDSDataChannelEventRSSI (%u, %u, %u)
kClientChannelMetadataType_QueryRSSI should be %u, not %u bytes, field: %u
kClientChannelMetadataType_MaxBitrateKey should be %u, not %u bytes, field: %u
got MTU %u
kClientChannelMetadataType_CellularMTUChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_CellularMTUChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_InfoReportKey report %@
kClientChannelMetadataType_InfoReportKey should be bigger than %u bytes.
Unknown metadata type: %u
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld [%02x%02x%02x%02x ...]
<%@> read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read failed %d calling event handler %p
v16@?0^@4I8i12
<%@> read nonfatal failure errno %d
<%@> read failed errno %d calling event handler %p
<%@> read returned 0 bytes errno %d calling event handler %p
-invalidate called for %@
-start called for %@
<%@> got connected and calls event handler %p
<%@> does not have readHandler!
<%@> got error %@ and calls event handler %p
<%@> got disconnected with error %@ and calls event handler %p
v12@?0i4^{__CFError=}8
Failed to malloc %ld bytes
<%@> write details: datagramSize %ld metadataSize %ld
<%@> write error_number %d calling completion handler %p dataCreateTime %0.6lf writeTime %0.6lf [%013.6lf]
<%@> write failed error_number %d calling completion handler %p
Failed to send write bytes (%d)
<%@> attempt to write with no connection, calling completion handler %p
No connection
<%@> write failed to send all bytes %d < %d
Failed to send all bytes (%d < %d)
<%@> write failed connection terminated %d
Connection terminated
<%@> write nonfatal failure errno %d
<%@> write failed errno %d
Failed to send (errno %d)
-setEventHandler called for %@
-setReadHandler called for %@
<%@> -readyToReady called with no handler
<%@> write details: metadataSize %ld
<%@> write error_number %d calling setChannelPreferences
<%@> write failed error_number %d calling setChannelPreferences
<%@> write done for setChannelPreferences
<%@> setChannelPreferences dictionary: %@
<%@> IDSDataChannelPreferencePreConnectionDataKey - %@, _waitForPreConnectionDataForConnected? %@
<%@> client channel connection is not ready. Wait to send preConnectionData
<%@> IDSDataChannelPreferenceDefaultLinkSelectionKey - linkID:%d
<%@> IDSDataChannelPreferenceBasebandRegistrationKey - linkID:%d, reg_key:%u registerOperation:%u
<%@> IDSDataChannelPreferenceBasebandQueueFlushKey - %@
<%@> IDSDataChannelPreferenceDiscardLinkIDsKey - %@
<%@> IDSDataChannelPreferenceUpdateQualityOfServiceKey - LinkID: %d, %@
<%@> IDSDataChannelPreferenceQueryInformationKey - queryType: %d
<%@> IDSDataChannelPreferenceSetMaxBitrateKey - maxBitrate: %u for LinkID: %d
<%@> kClientChannelMetadataType_BasebandQueueFlushPayloadSizeKey %u
<%@> kClientChannelMetadataType_DiscardLinkIDsKey the maximum of links is %d
<%@> kClientChannelMetadataType_PreConnectionDataSizeKey %u
<%@> kClientChannelMetadataType_PreConnectionDataKey %@
<%@> kClientChannelMetadataType_UpdateQoSIsGoodKey IsGood:%@ LinkID:%d
<%@> kClientChannelMetadataType_QueryRSSI
<%@> kClientChannelMetadataType_MaxBitrateKey maxBitrate:%u LinkID:%d
connectedLinks
T@"NSArray",R
defaultLink
T@"IDSDataChannelLinkContext",R
IDSDataChannelsQueue
Unable to create input and output stream
T@"_IDSDeviceConnection",R,&,N
FTPasswordManager
FTServices
v12@?0@"NSArray"4@"NSError"8
Unable to create an NSUUID from this CBUUID: %@
IDSIDQueryControllerQueue
Adding listener ID: %@   for service: %@
Removing listener ID: %@   for service: %@
Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
Client requesting to warmup the query cache for service: %@
Client requesting to flush the query cache for service: %@
** BLOCKING Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
IDSLookupQueue
  => Done: %f
** BLOCKING Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destination %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destination %@  on service: %@   from listenerID: %@
v8@?0@"<IDSContinuityDelegate>"4
Ti,R,V_state
com.apple.private.alloy.phonecontinuity
_IDSSession
Disconnected from daemon, notifying client of session %@
%@: Empty unique ID
%@: Empty account ID
%@: Empty destinations set
Setting up session delegate %p
%@ - existing socket pair, ignoring request to create
Setting up socket pair to daemon
Error creating socketpair
%@ - %@ %d (%s)
Error getting socket flags from socketFD[0]
Error setting O_NONBLOCK flag on socketFD[0]
Error getting socket flags from socketFD[1]
Error setting O_NONBLOCK flag on socketFD[1]
Error setting SO_NOSIGPIPE on socketFD[0]
Error setting SO_NOSIGPIPE on socketFD[1]
Error setting SO_SNDBUF size on socketFD[0]
Error setting SO_SNDBUF size on socketFD[1]
Error setting SO_RCVBUF size on socketFD[0]
Error setting SO_RCVBUF size on socketFD[1]
session-socket
socket-type
raw-socket
Sending Session Invitation with options %@
Sending Session Invitation with data (%lu bytes), declineOnError %@
Sending Session Invitation Cancel
Sending Session Invitation Cancel with data (%lu bytes)
Sending Session Invitation Cancel with Reason %u
Sending Session Invitation Accept
Sending Session Invitation Accept with data (%lu bytes)
Sending Session Invitation Decline
Sending Session Invitation Decline with data (%lu bytes)
%@ - Session not connected can't send data yet, ignoring...
%@ - No socket pair connection setup, ignoring...
%@ - No data to send, ignoring...
Sending data Client -> Daemon  (hash: %lu)  (length: %lu)
Session accept received fromID %@ sessionID %@ with data %@
Ignoring accept, session doesn't match %@ vs. %@
v8@?0@"<IDSSessionDelegate>"4
Session decline received fromID %@ sessionID %@ with data %@
Ignoring decline, session doesn't match %@ vs. %@
Session cancel received fromID %@ sessionID %@ with data %@
Ignoring cancel, session doesn't match %@ vs. %@
Session message received fromID %@ sessionID %@ with data %@
Ignoring message, session doesn't match %@ vs. %@
Session end received fromID %@ sessionID %@ with data %@
Ignoring end, session doesn't match %@ vs. %@
Session %@ invitation sent to tokens %@ shouldBreakBeforeMake %@
Ignoring session:invitationSentToTokens:, session doesn't match %@ vs. %@
Session started %@
Ignoring session started, session doesn't match %@ vs. %@
Session ended %@ with reason %d error %@
Ignoring session ended, session doesn't match %@ vs. %@
Session audio enabled ? %@
Ignoring audioEnabled, session doesn't match %@ vs. %@
Session muted ? %@
Ignoring muted, session doesn't match %@ vs. %@
session-device-socket
Ignoring socket, session doesn't match %@ vs. %@
UNRL: Received data Daemon -> Client  (data hash: %lu)  (length: %lu)
TI,R,N,V_state
inviteTimeout
boostContext
T@,&,N,V_boostContext
IDSInternalQueue
IDSInternalQueueControllerContext
IDSInternalQueue - assertQueueIsCurrent failed %@. The only acceptable callstack includes dealloc.
IDSInternalQueue - assertQueueIsNotCurrent failed %@. The only acceptable callstack includes dealloc.
com.apple.identityservices.error
Client request to invalidate: %@
Scheduling next batch in %f
setDestinations %@
We're dead, bailing
Already issued maximum number of queries, bailing
Destinations are the same, bailing
Setting time of death to %@
Received cached positive results %@
Received 0 cached results, query all destinations
Returning cached results to delegate %p
Returning cached results to delegate %p for service %@
No delegate %p or queue %p
 * Next query timer hit: %@
We're dead, not querying: %@
We've reached the max number of queries for this batch, not adding anymore: %@
We've reached the max number of queries, not adding anymore: %@
Received results %@
Returning results to delegate %p
Returning results to delegate %p for service %@
We've reached the max number of queries, not rescheduling query timer: %@
Invalidating next query timer: %@
batch-query-max
batch-query-time-to-live
batch-query-first-interval
batch-query-interval
batch-query-size
__kIDSServiceMonitorAvailabilityDidChangeNotification
kiMessageChangedNotification
kFaceTimeChangedNotification
kCallingChangedNotification
kScreenSharingChangedNotification
%s is deprecated, please use startTrackingPeer:forType:
%s is deprecated, please use stopTrackingPeer:forType:
Exception returned from daemon: %@
Sending down new services %@ commands %@ capabilities %d. sendServices %@ sendCommands %@ sendCaps %@
Sending down new services %@ commands %@ capabilities %d
Set services: %@  (Previous: %@)
Set commands: %@  (Previous: %@)
Updating capabilities: %d  (Previous: %d)
Disconnecting from daemon - no listeners
%s: adding delegate on service %@ _notificationServices %@
Adding listener with ID: %@    services: %@   commands %@
Removing listener with ID: %@    services (count): %@   commands (count): %@   capabilities %@
Tried to remove non existent listener with ID: %@
Set %@: %@  for listener ID: %@
setCapabilities %d for listenerID %@ has no ID
setCapabilities %d for listenerID %@ is not a valid listener
setCapabilities %d for listenerID %@ - listener map already contains our capabilities
Set caps: %d  for listener ID: %@
Cleaning up daemonConnectedGroup %p
Cleaning up LOCAL object
Cleaning up REMOTE object
Disconnected from agent (local)...
 ... disconnection from agent (local) being handled by ivarQueue
Disconnected from agent (remote)...
 ... disconnection from agent (remote) being handled by ivarQueue
Will auto reconnect...
 ...auto reconnecting
System application did suspend
System application did enter background
System application did enter foreground
System application did resume
IDSLocalSetupStart
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice %@
Asked to pair device with cbuuid: %@
IDSConnectPairedDevice %@
%s %@
%s %@ %p %p
%s is DEPRECATED! Please use IDSGetPairedDevicesWithCompletionBlock
%s is DEPRECATED! Please use IDSInitialLocalSyncStartedForServices
%s is DEPRECATED! Please use IDSInitialLocalSyncCompletedForServices
Local setup - received incoming sync message
%s: invalid device %@
IDSReportiMessageSpam - %@  (toURI: %@)
IDSReportiMessageUnknownSender - %@, %@, %@  (toURI: %@)
IDSCheckiMessageUnknownSender (toURI: %@ Count: %@)
%@ posting availability change notification (%@) - available: %d
%@ creating monitor for service: %@
%@ adding listener `%@` for service: %@
%@ removing listener `%@` for service: %@
%@ no more listeners for service: %@
Exception: %@ in handler: %@ while executing a block
IDSDaemonListener _removeAccountOnIvarQueue %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountAdded %@ was told of an account without a unique id or service name: %@
%s: %@
IDSDaemonListener accountRemoved %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountEnabled was told of an account without a unique id %@ or service %@
Incoming account enabled: %@
IDSDaemonListener accountDisabled was told of an account without a unique id %@ or service %@
Incoming account disabled: %@
Account info changed %@
IDSDaemonListener accountInfoChanged %@ was told of an account without a unique id or service name: %@
Found active device in dependent devices update, updating activeDevice ID to %@ for %@
Dependent devices updated, setting %@ to (isActive: %@)
Current devices for account %@: %@
Found existing local device, removing %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Local device added, updating activeDevice ID to %@
New devices for account %@: %@
Active device was removed, clearing active uniqueID %@
Refresh registration for account %@
No device ID can't update nsuuid, bailing...
Device unique ID %@
We found a match ! %@
Calling didSwitch for topic %@
DidSwitch callback for %@ (handler %@) was handled %@
Unhandled didSwitch callback for topic %@
Updating isActive state for all accounts %@
New active unique ID is nil
Account unique ID is nil, can't switch active device ID
Switching active device to %@ for account %@
Active paired device switched, updating activeDevice ID to %@
Unsetting active device unique ID due to quick switch or new pairing start
Setup complete with info
Deferred setup on ivar queue, got accounts %@
Services all disappeared, removing all accounts
Deferred setup on ivar queue, got enabled accounts %@
Notified account enabled %@ for service %@
Services all disappeared, removing all enabled accounts
Deferred setup on ivar queue, got dependent devices %@
Services all disappeared, removing all dependent devices
Device identifier from daemon: %@
Active device uniqueID from daemon: %@ map %@
Setup info is not complete, waiting...
Connection is not complete, waiting...
Connection complete, notifying
Connection complete
XPC object received %@:%@
Exception: %@ in handler: %@ while executing: %@
Device identifier changing from %@ to %@
Unnecessary invocation of deviceIdentifierDidChange:
Received invalid options %@, bailing
Received IDQueryCompletedWithFromURI %@ idStatusUpdates %@ service %@ success %@ error %@
Updated local cache to %@
Notifying delegate %@ about ID status update
addListener:forService:
ListenerID is empty, bailing...
Service name is empty, bailing...
%@ -> %@
Final map after add %@
removeListenerID:forService:
Final map after remove %@
%s  (simulatorDeviceID: %@)
Failed to soft link IDSSimulatorLocalPairingAddPairedDevice
Failed to soft link IDSSimulatorLocalPairingDeletePairedDevice
Failed to soft link IDSSimulatorLocalPairingSwitchActivePairedDevice
 => Found response with %d keys
Failed IDSDaemonRequestConnection, no reply
%s: received new traffic classifiers %@
Cannot save invalid device info: %@
Received paired device info, sending to daemon for saving
Cannot delete empty CBUUID, cbuuid: %@
%s: device CBUUID: %@
%s: Empty completion block/queue
Querying local device info from IDSD asynchronously
Querying paired device info from IDSD asynchronously
Received pairing added notification from daemon, device: %@, added: %@
Received pairing removed notification from daemon, device: %@, deleted: %@
Invoking pairingDelete completion block
Received local device info from daemon, device: %@
Invoking localDeviceInfo completion block
Received paired device info from daemon, device: %@
Invoking pairedDeviceInfo completion block
Found existing IDSAccountController %@ for service %@
Tried to create IDSAccountController with empty service, ignoring...
Couldn't find existing IDSAccountController adding new one %@
    %@ -> %p
Deallocing IDSAccountController %@
%p will be removed from account controller map automatically
* Request to setup account with loginID: %@   auth token: %@  profileID: %@    service: %@
* Request to setup account with loginID: %@   auth token: %@  profileID: %@  aliases: %@  service: %@
* Request to setup account with aliases: %@ and parameters:
  => password : REDACTED
  => %@ : %@
* Request to add account: %@   service: %@
* Request to remove account: %@   service: %@
* Request to enable account: %@   service: %@
* Request to disable account: %@   service: %@
Account delegate has been cleaned up via weak references %p
setCapabilities %u  %@, result = %@
QueueOneIdentifier not a string! [%@]
callstack %@
Client request to send %@ on service: %{public}@   guid: %{public}@   to destinations: %@   options: %@    size: %d] (%lu pending)
sendPayload - could not find account uniqueID! self: %@ account: %@
%@ unable to plist-serialize dictionary %@ !!
Client request to send %{public}@ message (dictionary) service: %{public}@  to destinations: %@   options: %@]
sendPayload - could not plist serialize dictionary.
%@ asked to send server message %@ with command %@ - invalid value!
%@ not connecting to identityservicesd - no serviceName for account %@
Failed to connect to identityservicesd; %@ %@
%@ resending %@ alternate %@ due to daemon disconnection.
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@   lastCall: %@
IDS sending success is NO though error is unset
  => <%@:%p> finished handling message guid: %@  (connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:)
  => <%@:%p> finished handling message guid: %@  (connection:identifier:didSendWithSuccess:error:context:)
%@ identifier %@ callbackID %@ willSendToDests count %@ skipped count %@  map count %@
  => <%@:%p> finished handling message guid: %@  (connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:)
%@ received app-level ack with identifier %@ context %@
Ignoring %@ for topic %@ my topic is %@
Ignoring %@ to: %@ it is not to my aliases: %@ account uuid: %@
Ignoring %@, account is not configured: %@    isActive: %@  isRegistered: %@  isLocal: %@
Ignoring %@ for topic %@ because fromID %@ is a suppressed IDSDevice.
%@ received message: %@  topic %@  from: %@  to: %@   payload items: %d
%@ received data: %@ topic %@  from: %@  to: %@
Accessory data commands are only supported on AppleID accounts, This one is not for me.
%@ received Accessory data: %@ topic %@  from: %@  to: %@
%@ received Accessory Report Message: %@ topic %@  from: %@  to: %@
Client received protobuf from daemon %@ for topic: %@  messageID: %@  fromID: %@
 => Handed protobuf ID %@ to delegate: %@
Ack'ing message %@ to daemon that client got it
Received incoming invitation %@ forTopic %@ sessionID %@ toIdentifier %@ fromID %@ transportType %@
%@ %s  (serviceDelegate: %@)
%@ %s  (delegateIdentifier: %@)
%@ %s
Unacknowledged IDSServiceDelegate objects: %@
%s (%s: %@)   (%s: %p)   (%s: %p)
%s received nil requestID. Cannot call daemon. This should never happen!
%s (%s: %p)   (%s: %p)
%s (%s: %@)   (%s: %@)   (%s: %p)   (%s: %p)
_IDSDeviceConnection was created without an IDSDevice %@ or service %@
<%p> Init connection socket %d with options: %@  device: %@  (%@)  (name %@) service %@ connectionUUID %@
<%p> _IDSDeviceConnection has timed out waiting for a socket.
<%p> Updating stream pair: %@:%@
<%p> Updated socket traffic class: %d
<%p> Closing socket: %d (name %@)
<%p> Closing socket: skipped, a new connection for this %@
<%p> World, id[%@] !=? id[%@]
<%p> xpc object: [%@] context: [%@]
Received XPC Response/Socket: %d    Error: %@
<%p> Opened socket: %d (Success: %@ ) %@ (%@)
Open socket request already timed out, closing %d.
Daemon died, closing socket: %d
IDSAccountController created with service %@ serviceToken %@
Adding listener with ID %@ topics %@
Daemon disconnected, we'll need to reload accounts for service: %@
Updating delegates of account changes
Re-loading cached accounts for service: %@ with dictionaries %@
Account loaded was of unknown account type %d, ignoring...
Old account set %@
New account set %@
New enabled accounts set %@
Requesting setup of account: %@   service: %@  transaction: %@  accountConfig: %@
Request to setup account with loginID: %@   auth token: %@  profileID: %@  aliases: %@  selfURI: %@
We have a real account registered, hiding local account
We don't have a real account registered, adding and enabling local account
Client request to enable account ID: %@
Client request to disable account ID: %@
Account added was of unknown account type %d, bailing...
**** Account added has no uniqueID **** %@
Received account removed %@ for topic %@
Did not find an existing account to remove with unique ID %@
**** Account removed has no uniqueID **** %@
Received account updated %@ for topic %@
Did not find an existing account to update with unique ID %@, creating one
Account updated was of unknown account type %d, ignoring...
Could not create IDSAccount with info %@
**** Account updated has no uniqueID **** %@
Received accounts changed %@ for topic %@  service: %@  (Cached: %@)
No uniqueID for account %@, ignoring...
Did not find an existing account to update with unique ID %@
Account changed was of unknown account type %d, ignoring...
Original accounts %@
Accounts Modified %@
Removing accounts %@
Setup complete - no transaction ID, bailing...
SetupCompleteForAccount %@ transactionID %@ setupError %@
Setup handler block %p for transactionID %@
Account setup completed but we don't have an account, ignoring...
Setup completed for account %@ isActive %@ setupError %@
Account enabled - no unique ID, bailing...
Account enabled - no service, bailing...
Received account enabled %@ on service %@
Adding enabled account %@
Did not find an existing account to enable with unique ID %@
Account disabled - no unique ID, bailing...
Account disabled - no service, bailing...
Received account disabled %@ on service %@
Removing enabled account %@
Did not find an existing account to disable with unique ID %@
Hard deregistering, %@
Triggering final deregister, %@
Creating new IDSAccount %p with config %@ uniqueID %@ serviceName %@
Created new IDSAccount %p with loginID %@ uniqueID %@ serviceName %@
Client requesting to register account: %@
Client requesting to unregister account: %@
Client requesting to reregister (with reidentify %@) account: %@
Client requesting to deactivate and purge identify account: %@
iCloud sign in hack with userName %@ password %@
iCloud sign out hack
Kicking get dependent
idsiCloudSignInDataMigratorForID: %@
Client request for IDSCopyLocalDeviceUniqueID: %@
Tried to create an account with empty service name, bailing...
Tried to create an account with unknown account type %d, bailing...
No account type specified, setting to Apple ID
New account info %@ for %@
Adding IDSDevice %@
Devices updated %d
Devices before %@
Devices after %@
Local account, ignoring request for keychain registration
Registered URIs for %@ with service type %@ account type %d
Registration cert for %@ with service type %@ account type %d
Push token for %@ with service type %@ account type %d
%@ not connecting to identityservicesd - no serviceName for config %@
Account %@ received registration status changed: %@
Account %@ received aliases changed: %@
Account received %@ vetted aliases changed
Account received %@ profile changed: %@
Account %@ received login changed: %@
Account received %@ displayName changed: %@
Account received %@ dependentDevicesUpdated %@
Account received %@ dependentDevicesUpdatedUponReconnect (devices count: %@)
Account received %@ localDeviceAdded %@
Devices updated %@
Account received %@ localDeviceRemoved %@
Account %@ received request to refresh registration
iCloud sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iCloud sign out
iCloud update for userName %@ accountInfo %@
Client received event %s on service %@
Call made to deprecated IDSService API with service domain %@
IDSConnection/IDSAccountController delegates have been cleaned up via weak references %p
IDSService deallocating with serviceName %@
%@: OTRTestCallback: token is %@, setupTime is %.6f, error==nil is %d
%@ Switched active paired device for service name %@. deviceUniqueID: %@
Ignoring didSwitch callback for %@, mine is %@
%@ Update cache with active device
%@ Pre didSwitch call back block
%@ Notifying delegate %p of active device switch to %@ (delegateIdentifier %@)
%@ Pre devicesChanged call back block
%@ Notifying delegate %p of devices changing (devices %@)
%@ Group notify
Stopped suspending traffic to the daemon.
Connection map:
   %@ => %@
Tearing down connection for %@
activeAccountsChanged, oldSet: %@  newSet: %@
Calling active accounts changed %@ with delegate %p
*** dropping devicesChanged callback!
incomingData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Calling out to IDSService delegate %p for incomingData if it responds.
Done for IDSService delegate %p for incomingData - doesRespondToSelector? %@
Context %@ WantsAppAck %@ AppAckGuid %@ storageGuid %@
Sending app-level ack dispatch called for message %@
Calling out to IDSService delegate %p for incomingAccessoryData if it responds.
Done for IDSService delegate %p for incomingAccessoryData - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingAccessoryReportMessage if it responds.
Done for IDSService delegate %p for incomingAccessoryReportMessage - doesRespondToSelector? %@
incomingMessage on connection %@ account %@ from ID %@  from device: %@  sender-side-identifier: %@
Consumed sandbox extension [%@] handle [%llu] for resource [%@]
No sandbox extension for received resource [%@]
Remove file success: %@, error: %@ (accessed %d)
Calling out to IDSService delegate %p for incomingResource if it responds.
Done for IDSService delegate %p for incomingResource - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingResource with metadata
 if it responds.
Done for IDSService delegate %p for incomingResource with metadata - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage if it responds.
Done for IDSService delegate %p for incomingMessage - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage with context if it responds.
Done for IDSService delegate %p for incomingMessage with context - doesRespondToSelector? %@
Incoming protobuf %@, routing to selector/delegate. sender-side-identifier %@
Found selector %@ fullSelector %@ for key 0x%x
 => Delgate %p responds to: %@, passing along protobuf: %p
   * Done handling
No selector for key 0x%x = type(%u) isResponse(%@), notifying delegates
 => Delgate %p responds unhandled protobuf passing along protobuf: %p
No delegate was registered that could handle protobuf %@
Calling out to IDSService delegate %p for incomingTopLevelMessage if it responds.
Done for IDSService delegate %p for incomingTopLevelMessage - doesRespondToSelector? %@
isActiveChanged on connection %@ isActive %@
devicesChanged on connection %@ account %@ all devices %@ num delegates: %lu
connectedDevicesChanged on connection %@ account %@ devices %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@
%@ got identifier %@ callbackID %@ willSendToDestinations %@ skippedDests %@ regPropsToDests (count) %@
%@ got identifier %@ didSendWithSuccess %@  error %@ num delegates: %lu
%@ got identifier %@ hasBeenDeliveredWithContext %@
Sending up options to client: %@
Filtering account %@ with aliases %@  isActive? %@  canSend? %@
Ignoring sub-services update, couldn't find active device
Ignoring sub-services update, couldn't find uniqueID for device %@
Triggering Internal resend of Sub Services to daemon
Attempting To Send message from account %@ to destinations %@
Attempting to send on a non local account, this message is allowed to progress
Attempting to send to more than 1 destination, this message will fail in the daemon if necessary
Attempting to send to a remote destination from a local account, this is permited if proxy is permitted and will fail in the daemon if not
Sending AccessoryData Now
sendAccessoryData - Could not find connection for account %@
sendAccessoryData - All accounts %@
sendServerMessage - Could not find connection for account %@
sendServerMessage - All accounts %@
FromID %@, strippedURI %@, token %@
Comparing device token %@ to token %@
Did not find a device matching the token %@
setPreferInfraWiFi: %@
setLinkPreferences: %@
Received invalid link preferences
forceOTRNegotiation
sendResourceAtURL - resourceURL not a file %@
Attempted to link or copy file %@ destination %@ (%s to %@)
sendResourceAtURL - unable to link or copy file %@
sendResourceAtURL - IDSSendMessageOptionLocalDeliveryKey not set to YES - forcing to true
sendResourceAtURL - resourceURL %@  isFileURL %@  localDelivery %@
Issued sandbox extension [%s] for file [%@]
Failed to issue sandbox extension for linked/copied file [%@]
Issued sandbox extension [%s] for original file [%@]
Failed to issue sandbox extension for original file [%@]
Call made to manually ack a message, however this service does not support manually acking of messages
Creating datagram channel with destination %@ => %@
Creating datagram channel with socket %d => %@
sendResourceAtURL - can't allocate %ld bytes for new file path
sendResourceAtURL - failed to link and failed to copy file %@ => %@ (error %@)
Clearing out _connection, we're disconnecting
Forcing a disconnect, terminating connection
No service %@, bailing...
No block %p, bailing...
Cache request for service %@
transactionID map after ADD %@
Sending cache request for service %@ transactionID %@
transactionID map after REMOVE %@
Could not create message for cache query
No listenerID %@, bailing...
Cached ID status request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No destinations, not issuing query...
Received cached id status (destinations: %@) (service: %@)
ID status renewal request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
Received id status (destinations: %@) (service: %@)
No message to send %@, ignoring...
Query service disconnected
Error requesting client: %s
No connection to send message on
Client request to set uuid %@ on device %@
  => Device doesn't support it, ignoring
Open socket %d info %@ with options: %@
Failed, already have an open connection
CLosing socket: %d
%@ - wrong socket %d (we have %d)
Updating stream pair: %@:%@
%@ - wrong streams %@ and %@ (we have %@ and %@)
World, id[%@] !=? id[%@]
xpc object: [%@] context: [%@]
Closing socket %d for domain %@
Purging idStatusCache
Sending ID status update (%d) for service %@ destination %@
No destinations, bailing...
No service, bailing...
No listenerID, bailing...
No query complete block, bailing...
Received results for service: %@  updates %@
No completion block, bailing...
No queue, bailing...
No listener ID, bailing...
_warmupQueryCacheForService:  (service: %@)
No service name, bailing...
Received cache for service %@, %d count
_flushQueryCacheForService:  (service: %@)
addDelegate:forService:listenerID:queue:  (delegate: %p)   (service: %@)   (listenerID: %@)   (queue: %p)
No delegate, bailing...
No queue provided, bailing...
Listeners after ADD %@
removeDelegate:forService:listenerID:  (delegate: %p)   (service: %@)   (listenerID: %@)
Listeners after REMOVE %@
<%p> Creating with socket %d
<%p> Creating with destination %@
-dealloc called for %@
-underlyingFileDescriptor called for %@
<%@> first read, will send dummy link information
<%@> dummy link information
<%@>  removeIDSDataChannelLinkContext:%u, linkContexts %@
<%@> Can't find the linkContext of linkID %u, linkContexts %@
<%@> sent IDSDataChannelEventDisconnected, linkID %u, linkContexts %@
Got kIDSDataChannelMaxBitrateOverRelaysKeyBag %u
Couldn't get kIDSDataChannelMaxBitrateOverRelaysKeyBag and DatagramChannelMaxBitrate default value.
<%@> got connectedLinkID %d (link family:%u) (mtu:%u) (l-conn:%u) (l-RAT:%u) (r-conn:%u) (r-RAT:%u), Current LinkContexts %@
<%@> sent IDSDataChannelEventConnected, current link contexts %@
can't find link %d for the default
got PacketLinkID %d
kClientChannelMetadataType_PacketLinkID should be 1 byte, not %u bytes, field: %u
got trafficClass %u
kClientChannelMetadataType_TrafficClassKey should be %d bytes, not %u bytes, field: %u
kClientChannelMetadataType_LinkConnected should be 4 bytes, not %u bytes, field: %u
got disconnectedLinkID %d
kClientChannelMetadataType_LinkDisconnected should be 1 byte, not %u bytes, field: %u
got defaultLinkID %d
kClientChannelMetadataType_DefaultLinkID should be 1 byte, not %u bytes, field: %u
got ratType %u
kClientChannelMetadataType_RATChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_RATChanged should be 1 bytes, not %u bytes, field: %u
got preConnectionDataSize %u
kClientChannelMetadataType_PreConnectionDataSizeKey should be 1 bytes, not %u bytes, field: %u
got preConnectionData, called IDSDataChannelEventPreConnectionData event
kClientChannelMetadataType_PreConnectionDataKey should know its size
<%@> sent IDSDataChannelEventRSSI (%u, %u, %u)
kClientChannelMetadataType_QueryRSSI should be %u, not %u bytes, field: %u
kClientChannelMetadataType_MaxBitrateKey should be %u, not %u bytes, field: %u
got MTU %u
kClientChannelMetadataType_CellularMTUChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_CellularMTUChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_InfoReportKey report %@
kClientChannelMetadataType_InfoReportKey should be bigger than %u bytes.
Unknown metadata type: %u
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld [%02x%02x%02x%02x ...]
<%@> read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read failed %d calling event handler %p
<%@> read nonfatal failure errno %d
<%@> read failed errno %d calling event handler %p
<%@> read returned 0 bytes errno %d calling event handler %p
-invalidate called for %@
-start called for %@
<%@> got connected and calls event handler %p
<%@> does not have readHandler!
<%@> got error %@ and calls event handler %p
<%@> got disconnected with error %@ and calls event handler %p
<%@> write details: datagramSize %ld metadataSize %ld
<%@> write error_number %d calling completion handler %p dataCreateTime %0.6lf writeTime %0.6lf [%013.6lf]
<%@> write failed error_number %d calling completion handler %p
<%@> attempt to write with no connection, calling completion handler %p
<%@> write failed to send all bytes %d < %d
<%@> write failed connection terminated %d
<%@> write nonfatal failure errno %d
<%@> write failed errno %d
-setEventHandler called for %@
-setReadHandler called for %@
<%@> -readyToReady called with no handler
<%@> write details: metadataSize %ld
<%@> write error_number %d calling setChannelPreferences
<%@> write failed error_number %d calling setChannelPreferences
<%@> write done for setChannelPreferences
<%@> setChannelPreferences dictionary: %@
<%@> IDSDataChannelPreferencePreConnectionDataKey - %@, _waitForPreConnectionDataForConnected? %@
<%@> client channel connection is not ready. Wait to send preConnectionData
<%@> IDSDataChannelPreferenceDefaultLinkSelectionKey - linkID:%d
<%@> IDSDataChannelPreferenceBasebandRegistrationKey - linkID:%d, reg_key:%u registerOperation:%u
<%@> IDSDataChannelPreferenceBasebandQueueFlushKey - %@
<%@> IDSDataChannelPreferenceDiscardLinkIDsKey - %@
<%@> IDSDataChannelPreferenceUpdateQualityOfServiceKey - LinkID: %d, %@
<%@> IDSDataChannelPreferenceQueryInformationKey - queryType: %d
<%@> IDSDataChannelPreferenceSetMaxBitrateKey - maxBitrate: %u for LinkID: %d
<%@> kClientChannelMetadataType_BasebandQueueFlushPayloadSizeKey %u
<%@> kClientChannelMetadataType_DiscardLinkIDsKey the maximum of links is %d
<%@> kClientChannelMetadataType_PreConnectionDataSizeKey %u
<%@> kClientChannelMetadataType_PreConnectionDataKey %@
<%@> kClientChannelMetadataType_UpdateQoSIsGoodKey IsGood:%@ LinkID:%d
<%@> kClientChannelMetadataType_QueryRSSI
<%@> kClientChannelMetadataType_MaxBitrateKey maxBitrate:%u LinkID:%d
Unable to create an NSUUID from this CBUUID: %@
Adding listener ID: %@   for service: %@
Removing listener ID: %@   for service: %@
Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
Client requesting to warmup the query cache for service: %@
Client requesting to flush the query cache for service: %@
** BLOCKING Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
  => Done: %f
** BLOCKING Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destination %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destination %@  on service: %@   from listenerID: %@
Disconnected from daemon, notifying client of session %@
%@: Empty unique ID
%@: Empty account ID
%@: Empty destinations set
Setting up session delegate %p
%@ - existing socket pair, ignoring request to create
Setting up socket pair to daemon
%@ - %@ %d (%s)
Sending Session Invitation with options %@
Sending Session Invitation with data (%lu bytes), declineOnError %@
Sending Session Invitation Cancel
Sending Session Invitation Cancel with data (%lu bytes)
Sending Session Invitation Cancel with Reason %u
Sending Session Invitation Accept
Sending Session Invitation Accept with data (%lu bytes)
Sending Session Invitation Decline
Sending Session Invitation Decline with data (%lu bytes)
%@ - Session not connected can't send data yet, ignoring...
%@ - No socket pair connection setup, ignoring...
%@ - No data to send, ignoring...
Sending data Client -> Daemon  (hash: %lu)  (length: %lu)
Session accept received fromID %@ sessionID %@ with data %@
Ignoring accept, session doesn't match %@ vs. %@
Session decline received fromID %@ sessionID %@ with data %@
Ignoring decline, session doesn't match %@ vs. %@
Session cancel received fromID %@ sessionID %@ with data %@
Ignoring cancel, session doesn't match %@ vs. %@
Session message received fromID %@ sessionID %@ with data %@
Ignoring message, session doesn't match %@ vs. %@
Session end received fromID %@ sessionID %@ with data %@
Ignoring end, session doesn't match %@ vs. %@
Session %@ invitation sent to tokens %@ shouldBreakBeforeMake %@
Ignoring session:invitationSentToTokens:, session doesn't match %@ vs. %@
Session started %@
Ignoring session started, session doesn't match %@ vs. %@
Session ended %@ with reason %d error %@
Ignoring session ended, session doesn't match %@ vs. %@
Session audio enabled ? %@
Ignoring audioEnabled, session doesn't match %@ vs. %@
Session muted ? %@
Ignoring muted, session doesn't match %@ vs. %@
Ignoring socket, session doesn't match %@ vs. %@
UNRL: Received data Daemon -> Client  (data hash: %lu)  (length: %lu)
Client request to invalidate: %@
Scheduling next batch in %f
setDestinations %@
We're dead, bailing
Already issued maximum number of queries, bailing
Destinations are the same, bailing
Setting time of death to %@
Received cached positive results %@
Received 0 cached results, query all destinations
Returning cached results to delegate %p
Returning cached results to delegate %p for service %@
No delegate %p or queue %p
 * Next query timer hit: %@
We're dead, not querying: %@
We've reached the max number of queries for this batch, not adding anymore: %@
We've reached the max number of queries, not adding anymore: %@
Received results %@
Returning results to delegate %p
Returning results to delegate %p for service %@
We've reached the max number of queries, not rescheduling query timer: %@
Invalidating next query timer: %@
IDSContinuity
IDSDaemonProtocol
NSObject
IDSDaemonController
IDSServiceAvailabilityController
IDSServiceContainer
IDSDaemonListenerProtocol
IDSDaemonListener
IDSSession
IDSAppleCareDaemonResponseListener
IDSBatchIDQueryController
IDSConnection
IDSDaemonResponseHandler
_IDSCompletionHandler
IDSPairedDeviceManager
IDSRegistrationControlDaemonResponseListener
IDSAccountController
_IDSConnection
IDSAccountDelegate
IDSQuickSwitchAcknowledgementTracker
_IDSDeviceConnectionActiveMap
_IDSDeviceConnection
_IDSAccountController
IDSAccount
_IDSGenericCompletionHandler
IDSHomeKitManager
IDSReportiMessageSpamDaemonResponseListener
_IDSAccount
IDSService
IDSDaemonRequestContext
0"1@
IDSDaemonRequestTimer
IDSAutoCleanup
_IDSService
IDSAccountControllerDelegate
IDSConnectionDelegatePrivate
IDSConnectionDelegate
_IDSDevice
_IDSIDQueryController
IDSDevice
_IDSDataChannelLinkContext
IDSDataChannelLinkContext
_IDSDatagramChannel
IDSDatagramChannel
IDSDeviceConnection
IDSLocalPairingDaemonResponseListener
IDSIDQueryController
_IDSContinuity
_IDSSession
IDSBaseSocketPairConnectionDelegate
IDSInternalQueueController
_IDSBatchIDQueryController
IDSIDQueryControllerDelegate
IDSServiceMonitor
@16@0:4@8@12
v8@0:4
i8@0:4
v20@0:4i8@12@16
v12@0:4i8
v24@0:4i8@12@16@20
v28@0:4i8@12@16@20@24
v32@0:4i8@12@16@20@24B28
v28@0:4i8@12@16@20B24
v36@0:4i8@12@16@20@24B28B32
v32@0:4i8@12@16@20B24B28
v12@0:4@8
v16@0:4@8i12
@"_IDSContinuity"
v36@0:4@8@12i16@20@24@28@32
v36@0:4@"NSString"8@"NSString"12i16@"NSDictionary"20@"NSString"24@"NSString"28@"NSString"32
v28@0:4@8@12@16i20@24
v28@0:4@"NSString"8@"NSString"12@"NSString"16i20@"NSDictionary"24
v12@0:4@"NSString"8
v16@0:4@8@12
v16@0:4@"NSString"8@"NSDictionary"12
v16@0:4@"NSString"8@"NSString"12
v20@0:4@8@12@16
v20@0:4@"NSString"8@"NSString"12@"NSString"16
v16@0:4@"NSArray"8@"NSString"12
v16@0:4@"NSNumber"8@"NSString"12
v32@0:4@8@12@16@20@24@28
v32@0:4@"NSString"8@"NSString"12@"NSString"16@"NSDictionary"20@"NSNumber"24@"NSArray"28
v20@0:4@"NSString"8@"NSNumber"12@"NSString"16
v12@0:4@"NSArray"8
v12@0:4@"NSSet"8
v20@0:4@"NSString"8@"NSArray"12@"NSString"16
v20@0:4@"NSArray"8@"NSString"12@"NSString"16
v12@0:4@"NSDictionary"8
v28@0:4@8@12@16@20@24
v28@0:4@"NSURL"8@"NSDictionary"12@"NSArray"16@"NSString"20@"NSString"24
v20@0:4@"NSDictionary"8@"NSNumber"12@"NSString"16
v16@0:4B8@12
v16@0:4B8@"NSString"12
v16@0:4@"NSDictionary"8@"NSString"12
v16@0:4@"NSString"8i12
v28@0:4@"NSString"8@"NSString"12@"NSNumber"16@"NSNumber"20@"NSNumber"24
v48@0:4@8@12@16@20@24@28q32q40
v48@0:4@"NSString"8@"NSString"12@"NSString"16@"NSNumber"20@"NSNumber"24@"NSNumber"28q32q40
v28@0:4@8@12@16q20
v28@0:4@"NSString"8@"NSString"12@"NSString"16q20
v20@0:4@8@12I16
v20@0:4@"NSSet"8@"NSSet"12I16
v16@0:4@"NSObject<OS_xpc_object>"8@"NSDictionary"12
v20@0:4@8@12B16
v20@0:4@"NSString"8@"NSData"12B16
v16@0:4@"NSString"8@"NSData"12
v16@0:4@8I12
v16@0:4@"NSString"8I12
v16@0:4@"NSData"8@"NSString"12
v16@0:4i8@12
v16@0:4i8@"NSString"12
v20@0:4i8@"NSData"12@"NSDictionary"16
v20@0:4i8@"NSData"12@"NSData"16
v24@0:4i8@"NSData"12@"NSData"16@"NSArray"20
v28@0:4i8@12@16B20B24
v28@0:4i8@"NSData"12@"NSData"16B20B24
v32@0:4i8@"NSData"12@"NSData"16@"NSArray"20B24B28
v24@0:4@8@12@16@20
v24@0:4@"NSString"8@"NSString"12@"NSNumber"16@"NSString"20
v20@0:4@"NSString"8@"NSString"12@"NSData"16
v24@0:4@"NSString"8@"NSString"12@"NSString"16@"NSArray"20
v20@0:4@"NSString"8@"NSString"12@"NSArray"16
v24@0:4@"NSString"8@"NSString"12@"NSString"16@"NSString"20
v20@0:4i8i12@16
v20@0:4i8i12@"NSString"16
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v16@0:4@?8B12
v12@0:4@?8
B16@0:4B8@?12
v12@0:4B8
v24@0:4B8@12@16I20
B12@0:4B8
B24@0:4B8@12@16I20
B12@0:4I8
B20@0:4@8@12@16
B16@0:4@8@12
@12@0:4@8
I12@0:4@8
B20@0:4I8@12B16
@"IMRemoteObject<IDSDaemonProtocol>"
@"IMLocalObject"
@"IDSDaemonListener"
@"NSProtocolChecker"
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSMutableDictionary"
@"NSSet"
@"NSMutableSet"
@16@0:4@8B12
i16@0:4@8@12
@"IDSServiceMonitor"
v36@0:4@8@12@16@20@24@28@32
v36@0:4@"NSDictionary"8@"NSString"12@"NSDictionary"16@"NSString"20@"NSString"24@"NSString"28@"NSDictionary"32
v32@0:4@"NSData"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24@"NSDictionary"28
v40@0:4@8@12@16@20@24@28@32@36
v40@0:4@"NSString"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24@"NSString"28@"NSString"32@"NSDictionary"36
v36@0:4@8@12@16i20@24B28@32
v36@0:4@"NSString"8@"NSString"12@"NSString"16i20@"NSError"24B28@"NSDictionary"32
v32@0:4@"NSString"8@"NSString"12@"NSString"16@"NSArray"20@"NSArray"24@"NSDictionary"28
v24@0:4@"NSString"8@"NSString"12@"NSString"16@"NSDictionary"20
v32@0:4@"NSDictionary"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24@"NSDictionary"28
v24@0:4@8d12@20
v24@0:4@"NSString"8d12@"NSError"20
v20@0:4@"NSString"8@"NSString"12@"NSError"16
v16@0:4@"NSString"8@"NSArray"12
v16@0:4@"NSString"8@"NSNumber"12
v28@0:4@8@12@16B20@24
v28@0:4@"NSString"8@"NSDictionary"12@"NSString"16B20@"NSError"24
v32@0:4@"NSDictionary"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24@"NSNumber"28
v20@0:4@8I12@16
v20@0:4@"NSString"8I12@"NSError"16
v20@0:4@"NSString"8@"NSSet"12B16
v16@0:4@8B12
v16@0:4@"NSString"8B12
v20@0:4@"NSObject<OS_xpc_object>"8@"NSString"12@"NSError"16
v16@0:4@"NSString"8@"NSError"12
v20@0:4@8i12@16
v20@0:4@"NSString"8i12@"NSError"16
v16@0:4i8@"NSError"12
v20@0:4i8@"NSData"12@"NSString"16
v16@0:4@"NSArray"8@"NSError"12
v20@0:4@8@12^B16
v20@0:4@"NSString"8@"NSString"12^B16
v20@0:4@"NSString"8@"NSError"12@"NSArray"16
v20@0:4i8@"NSString"12@"NSError"16
v32@0:4@8i12B16d20@28
v32@0:4@"NSString"8i12B16d20@"NSError"28
v16@0:4@?8@?12
@"NSHashTable"
@20@0:4@8@12i16
@24@0:4@8@12i16@20
@20@0:4@8@12@16
v12@0:4I8
B16@0:4@8^@12
I12@0:4I8
@"_IDSSession"
@12@0:4@?8
@"IDSDaemonRequestTimer"
@"_IDSBatchIDQueryController"
@20@0:4@8@12B16
B32@0:4@8@12i16@20^@24^@28
B28@0:4@8@12@16^@20^@24
@"_IDSConnection"
@16@0:4@?8@12
@?8@0:4
v20@0:4@8@?12@16
v16@0:4@?8@12
@"_IDSCompletionHandler"
v24@0:4@8@12@16@?20
v20@0:4@8@12@?16
v28@0:4@8@12@16@20@?24
v32@0:4@8@12@16@20@24@?28
@"_IDSAccountController"
v16@0:4@"IDSAccount"8B12
v16@0:4@"IDSAccount"8@"NSArray"12
@24@0:4@8@12B16@20
v24@0:4:8@?12@?16@?20
v28@0:4:8@?12@?16@?20@24
@24@0:4@8@12@16I20
B28@0:4@8@12@16@20B24
@"NSMapTable"
@"IDSAccount"
{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:4@8@12@?16@20
@"NSInputStream"
@"NSOutputStream"
@"_IDSAccount"
v28@0:4@8@12@16@?20@24
v32@0:4@8@12@16@20@?24@28
@"_IDSGenericCompletionHandler"
@24@0:4@8@12@16@20
@"NSDictionary"
@"NSMutableArray"
B16@0:4I8i12
v16@0:4:8S12
:12@0:4S8
B36@0:4@8@12@16i20@24^@28^@32
B32@0:4@8@12@16@20^@24^@28
B28@0:4@8i12@16^@20^@24
@16@0:4@8^@12
@16@0:4i8^@12
@"_IDSService"
@20@0:4@8@?12@16
@"IDSDaemonResponseHandler"
@"IMTimer"
@24@0:4@8d12@?20
v16@0:4@"IDSAccountController"8@"IDSAccount"12
v32@0:4@8@12@16i20@24B28
v32@0:4@"IDSConnection"8@"NSString"12@"NSString"16i20@"NSError"24B28
v32@0:4@"IDSConnection"8@"NSString"12@"NSString"16@"NSArray"20@"NSArray"24@"NSDictionary"28
v24@0:4@"IDSConnection"8@"NSDictionary"12@"NSString"16@20
v40@0:4@"IDSConnection"8@"IDSAccount"12@"NSString"16@"NSString"20@"NSNumber"24@"NSDictionary"28@"NSData"32@36
v24@0:4@"IDSConnection"8@"NSDictionary"12@"NSString"16@"IDSMessageContext"20
v24@0:4@"IDSConnection"8@"NSData"12@"NSString"16@"IDSMessageContext"20
v28@0:4@"IDSConnection"8@"NSString"12@"NSString"16@"NSString"20@"IDSMessageContext"24
v24@0:4@"IDSConnection"8@"IDSProtobuf"12@"NSString"16@"IDSMessageContext"20
v16@0:4@"IDSConnection"8B12
v16@0:4@"IDSConnection"8@"NSArray"12
v28@0:4@8@12B16@20@24
v28@0:4@"IDSConnection"8@"NSString"12B16@"NSError"20@"IDSMessageContext"24
v20@0:4@"IDSConnection"8@"NSString"12@16
v20@0:4@"IDSConnection"8@"NSDictionary"12@"NSString"16
@?12@0:4@8
v20@0:4:8S12B16
:16@0:4S8B12
v12@0:4^@8
B40@0:4@8@12@16@20i24@28^@32^@36
@"IDSAccountController"
@"NSObject<OS_xpc_object>"
@"IDSQuickSwitchAcknowledgementTracker"
v16@0:4@8@?12
@28@0:4@8@12@?16@?20B24
i12@0:4@8
@"CUTWeakReference"
v16@0:4d8
v28@0:4@8@12@16B20@?24
B32@0:4@8@12@16B20@24@?28
B28@0:4@8@12@16@20@?24
i20@0:4@8@12@16
{?=iii}8@0:4
i16@0:4@8i12
@"_IDSDevice"
@48@0:4c8C12C16i20I24S28C32i36I40I44
c8@0:4
C8@0:4
S8@0:4
v12@0:4S8
@"_IDSDataChannelLinkContext"
@"NSObject<OS_nw_connection>"
@"NSObject<OS_nw_path_evaluator>"
@"IDSDataChannelLinkContext"
@"NSData"
@12@0:4i8
v12@0:4c8
v12@0:4*8
v20@0:4*8L12^{?=cS}16
v28@0:4r^^v8^I12{?=cS}16i20@?24
v24@0:4r^v8I12{?=cS}16@?20
@"_IDSDatagramChannel"
@"_IDSDeviceConnection"
@"_IDSIDQueryController"
@"IDSInternalQueueController"
v16@0:4@"IDSBaseSocketPairConnection"8@"NSData"12
v12@0:4@"IDSBaseSocketPairConnection"8
@36@0:4@8@12i16I20B24@28@32
@28@0:4@8@12i16@20@24
@"IDSBaseSocketPairConnection"
@16@0:4*8^v12
@"NSArray"
@"NSTimer"
@"NSDate"
@@(#)PROGRAM:IDS  PROJECT:IDS-
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
