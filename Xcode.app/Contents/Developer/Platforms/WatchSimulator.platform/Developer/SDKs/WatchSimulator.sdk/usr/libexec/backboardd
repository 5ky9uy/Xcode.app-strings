0C(knN
MbP?
6*? 
alloc
class
initWithName:display:
autorelease
setLockBacklight:
initWithOverlayDescriptor:level:
_setType:
release
dealloc
_loadImages
init
setKeyPath:
setValues:
setCalculationMode:
setRepeatCount:
setDuration:
contentLayer
addAnimation:forKey:
descriptor
display
addObserver:forKeyPath:options:context:
_createImageAtIndex:
layer
_bounds
setBounds:
setPosition:
setContents:
removeAllAnimations
removeObserver:forKeyPath:
_unloadImages
descriptionBuilderWithMultilinePrefix:
appendUnsignedInteger:withName:
_useLightBackground
array
addObject:
retain
bundleForClass:
_scale
stringWithFormat:
URLForResource:withExtension:subdirectory:
isEqualToString:
_setBounds:
overlayWithLevel:display:
_startAnimating
_stopAnimating
_prepareContentLayerForPresentation:
_cleanUpContentLayer
observeValueForKeyPath:ofObject:change:context:
background
setBackground:
_background
_images
initWithServiceName:onQueue:
stringByAppendingString:
UTF8String
initForMessage:
sharedInstance
_newFenceHandle
sendReply:
_newAssertionForTriggerPort:
queue_handleMessage:client:
_requestFenceQueue
_createAssertionQueue
begin
initWithCapacity:
setObject:forKey:
remoteContextWithOptions:
commit
initWithFlag:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
createFencePort
initWithPort:
rawPort
localDefaults
fenceArbiterTimeoutInterval
setFlag:
port
invalidate
getFlag
isUsable
copy
initFromReceiveRight:
_initWithCAFence:preFence:preFenceTrigger:notObservable:
_server
_context
_transactionLock
_fenceLock
_fenceSemaphore
_fenceRunning
_fenceInvalid
_fenceInvalidSemaphore
_caFencePort
_caFence
_preFenceReceiveRight
_preFenceGenerationToken
_preFenceTriggerReceiveRight
displayLink
timestamp
duration
_thread_positionWithinCurrentFrameAtTime:duration:
setPaused:
countByEnumeratingWithState:objects:count:
removeAllObjects
isPaused
_thread_dispatchPendingEvents:
currentTime
_thread_shouldDispatchUsingDisplayLinkAtTime:
_thread_dispatchEventBlockAtNextVSync:
_thread_dispatchEventBlockImmediately:
_thread_displayLinkFired:
_thread_scheduleEventWithBlock:event:clientTaskPort:
setCurrentTime:
_blocks
_dispatchingTouchesOnDisplayLink
_currentTime
setEntitlementCache:
synchronizeALSPreferencesAndDisplayBrightness
startSystemAppCheckInServer
allowSystemAppCheckIn
migrateIfNecessaryWithCompletion:
startMonitoringSecureDrawing
sharedServer
drain
isTouchPad
_queue_touchPadsDetected:
watchServicesMatching:additionBlock:removalBlock:
_queue_handleEvent:fromTouchPad:
_currentTouchPads
displayUUID
isEqual:
_queue_sendCancelEventForTouchPad:
enumerateObjectsUsingBlock:
containsObject:
removeObject:
count
setTouchCount:
setCurrentDestination:
_queue_touchPadRemoved:
watchForRemoval:
contextID
maxForce
currentDestination
destinationForEvent:onDisplay:
userEventOccurredOnDisplay:
_queue_sendEvent:fromTouchPad:toDestination:
senderID
isTouchPadEvent:fromDigitizer:
handleEvent:fromTouchPad:
sendCancelEventForDisplay:
sendCancelEventForAllDisplays
_touchPadQueue
numberWithInt:
dictionaryWithObjectsAndKeys:
arrayWithObject:
_thread_startRunLoop
initWithTarget:selector:object:
start
description
arrayWithObjects:count:
performSelector:onThread:withObject:waitUntilDone:modes:
displayLinkClass
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
distantFuture
runMode:beforeDate:
_performBlock:
scheduleEvent:fromDigitizer:toClient:
sendEvent:toClient:
performAsync:
performSync:
_displayLink
_thread
builderWithObject:
state
appendObject:withName:
build
_handleEvent:
_gestureRecognizers
_addGestureRecognizer:
_removeGestureRecognizer:
setState:
delegate
setDelegate:
_recognizers
_state
_delegate
addGestureRecognizer:
removeGestureRecognizer:
_queue
clientRequestedProximityMode:processID:clientPort:
requestEstimatedProximityEventsWithTimeout:
resetCalibration
isObjectWithinProximity
setEventClientWithBundleID:
isDetectionActive
setUILocked:objectInProximity:
setPocketTouchesExpected:
hasEntitlement:forAuditToken:
initWithBytesNoCopy:length:freeWhenDone:
setWithObject:
bs_secureDecodedFromData:withAdditionalClasses:
mutableCopy
isKindOfClass:
bs_containsObjectPassingTest:
properties
deferredProperties
clientID
pidForBundleID:
setPid:
setDeferrals:forClient:pid:
systemAppControlsFocusOnMainDisplay:
setForegroundApplicationOnMainDisplay:pid:
getCString:maxLength:encoding:
setWithObjects:
bs_secureObjectFromData:ofClasses:
resetTimer:mode:
notifyOnNextUserEvent
lastUserEventTime
isSafeToResetIdleTimer
setCurrentUserInterfaceOrientation:
lastEffectiveInterfaceOrientation
effectiveDeviceOrientation
systemAppSetOrientationEventsClient:wantsOrientationEvents:auditToken:
lockDeviceOrientation:deviceOrientation:
unlockDeviceOrientation:
isDeviceOrientationLocked:
bksAccelerometerClientRequestedAccelerometerEvents:updateInterval:xThreshold:yThreshold:zThreshold:auditToken:
bksAccelerometerClientRequestedOrientationEvents:enabled:passiveEvents:auditToken:
initWithClientPort:identifier:invalidationHandler:
beginImplicitDisplayBrightnessUpdateTransaction
setDisplayBrightness:permanently:
displayBrightness
displayBrightnessCurve
setDisplayBrightnessCurve:
restoreSystemDisplayBrightness
setAutoBrightnessEnabled:
setEventRouters:
propertiesWithClientID:pid:displayUUID:contextID:
setKeyCommandDescriptors:forEventFocusProperties:
numberWithBool:
bs_map:
resetButtonCombos:
_setSenderID:
_setDisplayUUID:
initWithDisplayUUID:senderID:
copyHIDService
eventSource
auditTokenRepresentsSystemApp:
deviceClass
bounds
dictionary
level
setLevel:
setLayer:
setBackgroundColor:
addSublayer:
_animationForContentLayerCrossfading:
setOpacity:
keyPath
_animationForBackgroundLayerCrossfading:
_cleanup
animationWithKeyPath:
applyToCAAnimation:
numberWithDouble:
setFromValue:
setToValue:
setBeginTimeMode:
setBeginTime:
setFillMode:
contextId
animationDidStart:
animationDidStop:finished:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retainCount
zone
hash
superclass
debugDescription
disablesDisplayUpdates
_presentWithAnimationSettings:
_dismissWithAnimationSettings:
_freeze
_backgroundLayer
_outstandingAnimationsCount
_lightBackground
_contentLayer
simulatePhoneButton
sharedInstanceWithHIDEventSystem:
defaultCenter
postNotificationName:object:
updateDeviceOrientation:
destinationForFocusedEventWithDisplay:
sendRight
infoForService:event:
reusableDescriptorWithEventType:
destinationForDescriptor:onDisplay:
reusableVendorDefinedDescriptorWithPage:usage:
handleEvent:
handleProximityEvent:fromSender:
isSystemAppEvent
destinationForFocusedEventWithProperties:
initWithPid:clientID:
handleFailureInFunction:file:lineNumber:description:
intValue
initWithHIDEventDescriptor:senderInfo:
senderInfo
dataLength
data
appendPointer:withName:
_fillWithHIDEvent:descriptor:senderInfo:
initWithHIDEventVendorDefinedDescriptor:senderInfo:
setDataLength:
setData:
_event
_dataLength
_data
isTokenSet
appendBool:withName:
token
unsetToken
_revertToFirstBoot
_semaphoreExists
setDescriptor:
setSenderInfo:
_descriptor
_senderInfo
_queue_infoForAccessibilityDigitizer:event:
infoForSimulatorSenderID:
infoForDigitizer:event:
_completeDigitizerInit
_completeKeyboardInit
numberWithUnsignedLongLong:
appendFloat:withName:
keyboardType
isCapsLockOn
hasOrbCapability
watchServiceForRemoval:removalBlock:
initWithHIDService:
primaryUsagePage
primaryUsage
receivedFirstEvent
setExternalKeyboardEventSource
setKeyboardLayout:
supportsPreciseLocations
_setReceivedFirstEvent:
touchCount
setTouchPad:
keyDownCount
setKeyDownCount:
shouldSwallowEvents
setSwallowEvents:
setCapsLockOn:
capsLockRomanSwitchMode
setCapsLockRomanSwitchMode:
countryCode
setCountryCode:
setKeyboardType:
keyboardLayout
keyboardLanguage
setKeyboardLanguage:
_gsKeyboard
isImmediatelyUsable
isInitiallyUsable
_hidService
_displayUUID
_eventSource
_senderID
_primaryUsagePage
_primaryUsage
_authenticated
_receivedFirstEvent
_determinedMaxForce
_maxForce
_supportsPreciseLocations
_touchPad
_swallowEvents
_capsLockOn
_capsLockRomanSwitchMode
_countryCode
_immediatelyUsable
_initiallyUsable
_touchCount
_currentDestination
_keyDownCount
_keyboardType
_keyboardLayout
_keyboardLanguage
__gsKeyboard
initWithPid:sendRight:queue:
initWithPid:sendRight:queue:processName:
_deathByPid
clientDied:
_queue_performDelegateCallout:
initWithPID:queue:deathHandler:
_deathBySendRight
initWithSendRight:queue:deathHandler:
_queue_invalidate
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
appendInt:withName:
succinctDescription
initWithPid:sendRight:
_queue_delegate
_queue_sendRight
_queue_pidWatcher
_queue_portWatcher
_queue_procName
_queue_pid
_queue_invalidated
displays
uniqueId
mainDisplay
setUsesPreferredModeRefreshRate:
setIdealRefreshRate:
setBlanked:
serial
serviceClass:
willUnblank
contextIdAtPosition:
convertPoint:toContextId:
serverIfRunning
contextIdHostingContextId:
clientPortOfContextId:
taskPortOfContextId:
dictionaryWithObjects:forKeys:count:
serverWithOptions:
setRendererFlags:
displayId
displayWithDisplayId:
isExternal
forceMirroredOrientation
setOrientation:
updateSettings
updatePreferencesIfNeeded
prepareForRestart
flush
synchronize
name
displayWithUniqueId:
displayWithName:
_initWithPersistenceData:
image
progressIndicatorProperties
activate
setFrame:
setName:
setHidden:
blackColor
CGColor
_animationForKeyPath:withSettings:
_persistenceCoordinator
saveOverlay:
_applyProgressIndicatorPropertiesToKernelIfNecessary
destroyOverlay:
_persistenceData
setImage:
isSpringAnimation
style
position
_imageRef
mapTableWithKeyOptions:valueOptions:
_installDefaultRouters
_descriptorForHIDEvent:
cachedDescriptorsToRouterDestinations
objectForKey:
queue_routerDestinationForDescriptor:
destinationForSystemApplicationWithDisplay:
defaultEventRouters
descriptorWithPage:usage:
descriptorWithEventType:
routerDestinationForDescriptor:
systemAppDestinationWithDisplay:
setCachedDescriptorsToRouterDestinations:
_cachedDescriptorsToRouterDestinations
bs_secureDecodedFromData:
setReplayCloneContextIDs:
setCloneMirroringMode:
setVirtualDisplayClientPID:
setCloneRotationDisabled:
isTethered
ignoreTetheringPreferences
setOrientationNotificationDisabled:
noteInterfaceOrientationChangedWithInterfaceOrientation:
usesDisplayPortTethering
isSteveNoteRotationEnabled
objectAtIndex:
orientation
removeOverlay:withAnimationSettings:
applyOverlay:withAnimationSettings:
activeOverlayWithDescriptor:
freezeOverlay:
bs_secureEncoded
bs_bytesForMIG
bs_lengthForMIG
isShowingBootUI
dismissSustainedOverlayWithAnimationSettings:
activeOverlays
isShowingNonBootUIOverlays
sustainOverlay
dataWithBytesNoCopy:length:freeWhenDone:
_classesRequiredToDecode
type
setBundleID:
setOptions:
setQueue:
setPortDeathWatcher:
setJobLabel:
deleteAllJobsWithLabelPrefix:
bundleInfoOverrides
URLWithString:
applicationProxyForIdentifier:
isInstalled
_noteLaunchFailed:
applicationType
bundleURL
path
initWithPath:
executablePath
processInfo
environment
arrayWithObjects:
removeObjectsForKeys:
setObject:forKeyedSubscript:
GSEventPortNameForBundleID:
UIRemoteApplicationPortNameForBundleID:
createJobWithLabel:bundleIdentifier:path:containerPath:arguments:environment:standardOutputPath:standardErrorPath:machServices:threadPriority:waitForDebugger:denyCreatingOtherJobs:runAtLoad:disableASLR:systemApp:
pidForLabel:
deleteJobWithLabel:
lastExitReasonForLabel:
_noteExited:
initWithPort:queue:deathHandler:
_noteLaunchSucceeded
alternateSystemAppDidFailToLaunch:
alternateSystemAppDidLaunch:
alternateSystemAppExited:withReason:
deleteAllJobs
initWithBundleId:options:queue:
launch
terminate
bundleID
options
jobLabel
queue
portDeathWatcher
_bundleID
_options
_jobLabel
_portDeathWatcher
interfaceOrientation
lockBacklight
isInterstitial
_wrapInCATransaction:
animates
setOverlayType:
appendFloat:withName:decimalPrecision:
appendBodySectionWithName:multilinePrefix:block:
setAnimates:
presentWithAnimationSettings:
freeze
dismissWithAnimationSettings:
_setPersistenceCoordinator:
_type
_level
_visible
_disablesDisplayUpdates
_animates
initWithHIDEventKeyboardDescriptor:
gestureRecognizer:didChangeState:
initWithHIDEventKeyboardDescriptors:
_possibleRecognizers
_beganRecognizers
ping
isAlive
hidSystem
setHidSystem:
_hidSystem
isValid
requestedMode
setRequestedMode:
_requestedMode
sensorConfiguredForWatch
initWithHardware:
allValues
baseMode
lowLevelDescriptionForMode:pocketTouchesExpected:
_queue_effectiveMode
_queue_cancelEstimatedProximityEventShutoffTimerAndResetMode:
setMode:pocketTouchesExpected:
numberWithUnsignedInt:
removeObjectForKey:
estimatedProxPowerAssertionID
setEstimatedProxPowerAssertionID:
_queue_cancelEstimatedProximityEventShutoffTimer
_existingClientForPID:
_queue_updateProximityDetectionMode
_removeClient:
_updateProximityDetectionMode
_createClientForPID:sendRight:queue:
_addClient:
_queue_addClient:
_queue_removeClient:
requestProximityMode:
_effectiveMode
_updateClientPID:clientPort:withDetectionMode:
setEventsClientWithBundleID:
_queue_requestEstimatedProximityEventsWithTimeout:
_disableProximityDetection
isProximityDetectionInActiveMode
_enableProximityDetectionWithMode:
estimatedProxShutoffTimer
setEstimatedProxShutoffTimer:
sensorHardware
setSensorHardware:
isDisabled
setDisabled:
_currentMode
_pidToClients
_clientQueue
_pocketTouchesExpected
_disabled
_estimatedProxShutoffTimer
_estimatedProxPowerAssertionID
_sensorHardware
setWithSet:
encodeFloat:forKey:
encodeInteger:forKey:
encodeObject:forKey:
decodeFloatForKey:
decodeIntegerForKey:
decodeObjectForKey:
_initWithDescriptor:overlayType:imageData:level:
classesRequiredToDecode
supportsSecureCoding
encodeWithCoder:
initWithCoder:
overlayType
_overlayType
_image
_imageData
shouldCacheResultForToken:
hasCacheResultForToken:andEntitlement:result:
cacheResult:forToken:andEntitlement:
hasEntitlement:forConnection:
entitlementCache
_entitlementCache
initWithHIDEventSystem:
initWithNonRetainingPort:
bootstrapLookUpPortWithName:
copyClientForTaskPort:
copyClientForDestination:
keyboardManager:keyboardAttached:
keyboardManager:keyboardDetached:
anyObject
_shouldMatchKeyCommandsWithKeyCode:gsKeyboard:
keyCommandDescriptorForEvent:gsKeyboard:
destinationsForFocusedKeyCommandDescriptor:withDisplay:
attachedKeyboards
firstObject
isOpen
initWithFloat:
floatValue
notificationWithName:object:
postNotification:
performSelectorOnMainThread:withObject:waitUntilDone:
initWithObjectsAndKeys:
lock
copyPropertyForKey:
unlock
setProperty:forKey:
isAlsSupported
unsignedCharValue
setBacklightLocked:forReason:
registerNotificationBlock:
isDigitizerSignpostsEnabled
observeDefault:onQueue:withBlock:
addObserverForName:object:queue:usingBlock:
enumerateDigitizersForDisplay:usingBlock:
accessAsynchronously:
enumerateDigitizersForAllDisplaysUsingBlock:
setTaskPort:
setContextID:
setShouldSendAmbiguityRecommendations:
setTouchStreamIdentifier:
addTouchStreamClient:toDisplayUUID:
accessSynchronously:
touchStreamClientForReference:
ambiguityRecommendation
dispatchMode
setDispatchMode:
setAmbiguityRecommendation:
parent
shouldSendAmbiguityRecommendations
taskPort
enumerateClients:
digitizer:touchingPathMaskDidChange:
shouldCancelTouchesDeliveredToContextId:withInitialTouchTimestamp:
touchStreamInfoForDisplayUUID:createIfNeeded:
infoForDigitizerService:createIfNeeded:
getServicesMatching:
mainQueue
enumerateTouchStreamsForAllDisplaysUsingBlock:
watchForNextServiceMatching:additionBlock:
touchStreamIdentifier
string
stringByAppendingFormat:
rect
_exclusiveTouchNormalizedSubRectInReferenceSpace
shouldDeliverTouchesToContextIds:count:
valueForKey:
objectAtIndexedSubscript:
boolValue
digitizerServiceDidDetach:
initWithHIDEventKeyboardDescriptor:senderInfo:
wantsAccelerometerEvents
_passesThresholdForX:y:z:
_shouldSendSampleEventWithTimestamp:samplingInterval:
_setLastAccelerometerEventTimestamp:
handleAccelerometerEventWithTimestamp:x:y:z:samplingInterval:
handleOrientationEvent:orientationLocked:
reusableKeyboardDescriptorWithPage:usage:
systemApp
finishedStartup
_clearTimer
_scheduleTimerWithTimeInterval:
_userEventOccurredInIdleMode
_userEventOccurredInPresenceMode
_didUnIdle
_currentTimeout
_lastUserEvent
_lastResetTimerRequest
_timer
_isIdle
_shouldNotify
_safeToResetIdleTimer
initWithSystemAppSentinel:firstBootToken:alternateSystemAppManager:
initWithOptions:capacity:
_systemAppDidFinishLaunching:
addObserver:selector:name:object:
_queue_finishBootingIfNecessaryAndTellObservers:
isFirstBoot
alternateSystemApp
bundleIdentifier
allObjects
firstBootDetectorDidFinishFirstBoot:
addObserver:
removeObserver:
systemAppSentinel
setSystemAppSentinel:
alternateSystemAppManager
setAlternateSystemAppManager:
_systemAppSentinel
_firstBootToken
_alternateSystemAppManager
_queue_observers
_queue_infoForService:event:
_queue_simulatorServiceForSenderID:
_queue_accessibilityServiceForSenderID:
_queue_addInfo:
_queue_serviceRemoved:
_serviceRemoved:
initWithSenderID:
_senderToInfoMap
allKeys
setALSEnabled:
ALSUserPreferences
setALSUserPreferences:
ALSEpoch
setALSEpoch:
keyboard
_queue_keyboardsDetected:
_queue_keyboardRemoved:
_queue_usableKeyboardAttached:
_queue_watchForGestures:
_queue_stopWatchingForGestures:
_queue_usableKeyboardDetached:
initWithSmartKeyboard:
_attachedKeyboards
_usableKeyboards
_calloutQueue
deferredPropertiesForProperties:
setClientID:
deferrals
setDeferrals:
_clientID
_deferrals
_sendEventRecord:
deviceHasDiscreteProximityHardware
reallyResetCalibration
reallySetMode:pocketTouchesExpected:
_setPocketTouchesExpected:
isDeviceOrientationLocked
orientationManager:deviceOrientationMayHaveChanged:isDeviceOrientationLocked:
setWantsAccelerometerEvents:
setAccelerometerUpdateInterval:
setXThreshold:
setYThreshold:
setZThreshold:
_handleAccelerometerRequestForPort:auditToken:updateBlock:
setWantsOrientationEvents:
setPassiveOrientationEvents:
_lock_systemAppSetOrientationEventsClient:wantsOrientationEvents:auditToken:
_updateSettings
isOrientationEventsEnabled
_lock_clearSystemAppOrientationClient
_lock_existingClientForPort:
accelerometerUpdateInterval
xThreshold
yThreshold
zThreshold
wantsOrientationEvents
passiveOrientationEvents
_lock
_lock_accelerometerClients
_lock_cachedClients
_lock_systemAppOrientationClient
_lock_orientationManager
_lock_samplingInterval
_setBlockingSystemApp:
blockSystemApp
setPendingOpenResultBlock:
setPendingExitBlock:
setOpenBundleId:
setAlternateSystemApp:
_queue_cleanupAfterApp
terminateAlternateSystemApp:forReason:andReport:withDescription:completion:
unblockSystemApp
blockSystemAppForAlternateSystemAppWithCompletion:
openAlternateSystemApp:options:withResult:andExitBlock:
terminateAnyAlternateSystemApp
unblockSystemAppForAlternateSystemAppWithCompletion:
isBlockingSystemApp
openBundleId
pendingOpenResultBlock
pendingExitBlock
_blockingSystemApp
_alternateSystemApp
_openBundleId
_pendingOpenResultBlock
_pendingExitBlock
isDitheringEnabled
setDitheringEnabled:
initWithFormat:
_postDisplayPortNotificationCode:
_setTetherState:
_handleDemoModeChanged
_serviceExists:
_reverseTetheringActive
isOrientationNotificationDisabled
_tetherState
_lastOrientationCode
_orientationNotificationsDisabled
currentUserInterfaceOrientation
TVOutDisplay
currentMode
width
height
_writeCurrentScreenSizeToAggregated:
setTvOutMode:
startListeningForSettingsChanges
stopListeningForSettingsChanges
server
availableModes
currentCarPlayExternalDevice
screenIDs
defaultManager
fileExistsAtPath:
dictionaryWithContentsOfFile:
objectForKeyedSubscript:
setTag:
clones
_queue_addClone:
removeClone:
disableCloneMirroring
disableCAOverscan
isSteveNoteOverscanEnabled
disableCAScaling
disableCAYUV
addClone:options:
forceCloneMirroring
setProcessId:
_queue_updateWirelessCloneDisplay
tvOutMode
_tetherSettingChanged:
removeObserver:name:object:
_queue_updateLayerKitSettings
_queue_setInitialTVModeIfNeeded
replayCloneContextIDs
_handleIapServerConnectionDied
isCloneRotationDisabled
_workQueue
_queue_replayCloneContextIDs
_queue_currentVirtualDisplayClientPID
_queue_starkSimulatorAttached
_queue_currentCloneMirroringMode
_queue_cloneRotationDisabled
_queue_forceTVOutMode
_cloneRotationDisabled
_tvOutMode
reportAndKillInsecureProcesses
isSecureModeEnabled
systemApplicationBundleIdentifier
initWithInsecureProcessIds:
sendActions:withResult:
setSecureModeEnabled:
_secureModeEnabled
setContentsScale:
doItHide
progressIndicatorWithStyle:position:
setProgressIndicatorProperties:
doItShowKernel
doItShow
_layer
stringByAppendingPathComponent:
bundleWithPath:
load
principalClass
initialize
_accessibilityProcessExternHIDEvent:
_accessibilitySetEventTapCallback:
_accessibilityEventTapCallback
_accessibilitySetHIDEventTapCallback:
_accessibilityHIDEventTapCallback
_displayConvertFromCAScreen:
_displayConvertToCAScreen:
_displayConvertFromCAScreen:withDisplayIntegerId:
_displayConvertToCAScreen:withDisplayIntegerId:
_objectWithinProximity
_isDisplayBacklightOff
_eventRoutingClientConnectionManager
_setCapsLockLightOn:
initWithConnection:
connectDate
setConnectDate:
checkedIn
setCheckedIn:
pendingCheckIn
setPendingCheckIn:
setFinishedStartup:
setBundleIdentifier:
bundlePath
setBundlePath:
_bundlePath
_connectDate
_checkedIn
_pendingCheckIn
_finishedStartup
_bundleIdentifier
_pid
_lastAccelerometerEventTimestamp
_xThreshold
_yThreshold
_zThreshold
_passiveOrientationEvents
_wantsOrientationEvents
_wantsAccelerometerEvents
_accelerometerUpdateInterval
strongToStrongObjectsMapTable
lock_bootstrapSystemApp
pingSystemApp:timeout:
lock_blockSystemApp
lock_unblockSystemApp
objectEnumerator
lock_updatePrimarySystemApp
_noteSystemAppChanged
setHideAppleLogoOnLaunch:
refreshEffectiveDeviceOrientation
date
_handleRelaunchRequestFromSystemApp:withOptions:
timeIntervalSinceNow
server:systemAppConnected:
server:systemAppCheckedIn:completion:
server:systemAppWantsRestart:
server:systemAppDisconnected:
server:systemAppFinishBooting:
server:systemApp:hasActions:
_systemApp
_connectedSystemApps
_checkinCompletionsBySystemApp
_readyForSystemApp
_systemAppBlocked
_updateExpirationTimeWithIntervalSinceNow:
_setHandlersForAndResumeSource:
_beginUpdateTransaction
initWithClientPort:identifier:invalidationHandler:delay:
initWithDelay:identifier:invalidationHandler:
_setTimerWithTimeIntervalSinceNow:
_sourceFired:
_invalidateAndReleaseSource:
beginUpdateTransaction
endUpdateTransaction
_endUpdateTransaction
initWithIdentifier:
_invalidationHandler
_port
_portSource
_timerSource
_identifier
_updateTransactionActive
_expirationTime
externalDefaults
springBoardDefaults
brightness
brightnessCurve
_displayBrightnessChanged
_commitDisplayBrightness
setBrightness:
systemDisplayBrightness
setBrightnessCurve:
_numPendingTransactions
_commitPending
_systemDisplayBrightness
_shouldRestoreSystemBrightness
_notificationObserver
_lastOrientation
setLockedHIDMode:
lockedHIDMode
_HIDDetectionModeForDetectionMode:pocketTouchesExpected:
initWithInt:
sensorConfiguredForHandheld
_lockedHIDMode
initWithProgressBarVisibility:createContext:contextLevel:appearance:
setVisible:
_puiProgressWindow
_defaultCombos
_clearButtonCombos
_takeStackshotForReason:
takeStackshotForReason:
setParent:
addClient:
removeClient:
setDisplayUUID:
clients
_clients
initWithMachServiceName:
setXpcListener:
setClientConnection:
resume
auditToken
tokenFromAuditToken:
hasEntitlement:
didBlockSystemAppForAlternateSystemApp
didUnblockSystemAppForAlternateSystemApp
alternateSystemAppWithBundleID:failedToOpenWithResult:
alternateSystemAppWithBundleID:didExitWithReason:
alternateSystemAppWithBundleIDDidOpen:
alternateSystemAppWithBundleIDDidTerminate:
interfaceWithProtocol:
setRemoteObjectInterface:
blockSystemAppForAlternateSystemApp
openAlternateSystemAppWithBundleID:
terminateAlternateSystemAppWithBundleID:
unblockSystemAppForAlternateSystemApp
setExportedInterface:
setExportedObject:
_handleInterruptedOrInvalidatedConnection
setInterruptionHandler:
setInvalidationHandler:
_queue_listener:shouldAcceptNewConnection:
remoteObjectProxy
errorWithDomain:code:userInfo:
listener:shouldAcceptNewConnection:
xpcListener
clientConnection
_xpcListener
_clientConnection
_keyboard
initWithServiceName:
connection
sendMessage:toConnection:withMessagePacker:replyHandler:replyQueue:
bs_performSynchronously:timeout:
_queue_handleConnect:forClient:
_queue_handleCheckIn:forClient:
_queue_handleRestart:forClient:
_queue_handleFinishBooting:forClient:
_queue_handleActions:forClient:
_queue_handlePing:forClient:
_sendReplyForMessage:messagePacker:
setWithArray:
queue_shouldAcceptNewConnection:
queue_newClientForConnection:
queue_clientAdded:
queue_clientRemoved:
_queue_migrateBackBoard
timeIntervalSinceReferenceDate
_queue_removeUnusedFiles
migrateDefaultsIfNecessary
fileSystemRepresentation
stringByExpandingTildeInPath
_queue_moveRestoredFileAtPath:
stringByDeletingPathExtension
removeItemAtPath:error:
moveItemAtPath:toPath:error:
_setQueue:
setObservesFocusDeferralChanges:
focusedDeferralPropertiesUpdatedWithProperties:
setClasses:forSelector:argumentIndex:ofReply:
processIdentifier
currentConnection
_propertiesGroupedByPidForProperties:
keyEnumerator
evaluateUpdatedDeferralPropertiesForProperties:
_listener
_remoteFocusObservers
_cachedDeferralProperties
eventDestination
setSendRight:
setEventDestination:
_setObjectWithinProximity:notify:
_sendProxEvent:toDestination:objectWithinProximity:
setProximityDetectionInActiveMode:
setBaseMode:
setObjectWithinProximity:
configureBaseModeForALS
setPropertyValue:forKey:HIDService:
_proximityDetectionInActiveMode
_baseMode
_eventDestination
_initWithDeviceOrientationManager:
hashTableWithWeakObjects
_queue_setUpdateInterval:
_queue_setInterruptEventThresholds:
_queue_resetDeviceOrientation
ignoreAccelerometerAndOrientationEvents
_systemAppDidExit:
_queue_setOrientationEventsEnabled:
_queue_setCurrentUserInterfaceOrientation:
_queue_isOrientationLocked
_queue_isDeviceLockedForAllTypes:
_queue_lockDeviceOrientation:deviceOrientation:
_queue_unlockDeviceOrientationForType:
_queue_updateDeviceOrientation:
startDeviceOrientationUpdatesToQueue:withHandler:
deviceOrientationBlocking
stopDeviceOrientationUpdates
_queue_updateDeviceOrientationFromCoreMotion:
numberWithFloat:
_queue_updateDeviceOrientationSynchronously
_queue_setEffectiveDeviceOrientation:affectingLastEffectiveInterfaceOrientation:
_queue_setLastUnambiguousDeviceOrientation:
_queue_setCurrentRawAccelerometerDeviceOrientation:
_queue_noteEffectiveOrRawDeviceOrientationDidChange:
_queue_postDeviceOrientationLockChangedNotification
_queue_isDeviceLockedForAtLeastOneType:
interruptEventThresholds
setInterruptEventThresholds:
updateInterval
setUpdateInterval:
setOrientationEventsEnabled:
currentRawAccelerometerDeviceOrientation
isDeviceOrientationLockedForType:
_systemAppDidCheckin:
_observerCalloutQueue
_queue_updateInterval
_queue_interruptEventThresholds
_queue_isOrientationEventsEnabled
_queue_lastUnambiguousRawAccelerometerDeviceOrientation
_queue_currentUserInterfaceOrientation
_queue_currentRawAccelerometerDeviceOrientation
_queue_lastEffectiveInterfaceOrientation
_queue_effectiveDeviceOrientation
_queue_orientationLocksEnabled
_queue_ignoreAccelerometerAndOrientationEventsForTesting
_queue_orientationManager
connectionWithConnection:
task
_connection
_task
setSystemAppEvent:
_systemAppEvent
_sendRight
_contextID
setValid:
reference
setReference:
_touchStreamIdentifier
_shouldSendAmbiguityRecommendations
_dispatchMode
_ambiguityRecommendation
_valid
_reference
_parent
_taskPort
enumeratorAtPath:
hasSuffix:
initWithContentsOfFile:options:error:
_fileNameForOverlay:
_filePathForOverlay:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileURLWithPath:isDirectory:
setResourceValue:forKey:error:
createFileAtPath:contents:attributes:
stringByAppendingPathExtension:
rebuildPersistentOverlays
_rootPersistencePath
initWithFirstBootDetector:
currentOverlayWithLevel:
_firstBootDetector
_systemAppChanged:
object
lock_setSystemApp:
_cachedEntitlementResults
_queue_pidForBundleID:
clientForTaskPort:
clientForDestination:
_clientConnectionAdded:
_clientConnectionRemoved:
_hidEventSystem
_taskPortToClientConnectionMapping
_pidToClientConnectionMapping
_pidToBundleIDMapping
_hidConnectionToBKConnection
_connectionQueue
initWithKeyOptions:valueOptions:capacity:
_noteSystemAppDidExit:
initWithString:
isCycle
appendFormat:
_clientWithPid:clientID:
_updateDeferralPropertiesForAllDisplays
_propertiesWithFocusStartingWithProperties:
_destinationForFocusDeferralProperties:display:applyPolicy:
_startingPointOfFocusChainOnDisplay:
_focusPropertiesWithDisplay:
descriptorMatchSpecifiesDescriptor:withEventFocusProperties:
isTextualDescriptor
addUniqueDestinationToSet:destination:
_propertiesWithFocusStartingWithProperties:depth:iterationBlock:
orderedSet
_visitFocusClient:propertyStack:didEncounterCycleWithProperties:
conciseDescription
_visitFocusClient:propertyStack:currentDeferralProperties:
clientQueue
_pidToClientMapping
_foregroundAppBundleID
_foregroundAppPID
_systemAppControlsFocusOnMainDisplay
_focusServer
hidEventDescriptors
describes:
matchesDescriptor:
routerWithDestination:
addHIDEventDescriptors:
integerValue
clearDescriptorsForPID:
_descriptorMap
_initWithPersistenceCoordinator:orientationManager:backlightManager:windowServer:
_updateWindowServerUpdatesForOverlays:
_queue_updateStateForActiveOverlayChange
_queue_setOverlaysDisablingUpdates:
_queue_freezeOverlay:
_queue_setLockedOrientation:
_queue_setBacklightLocked:
disablesUpdates
setDisablesUpdates:
overlaysDisablingUpdates
backlightLocked
lockedOrientation
_windowServer
_orientationManager
_backlightManager
_activeOverlays
_overlaysDisablingUpdates
_lockedOrientation
_backlightLocked
initWithAdditionAction:removalAction:
removalAction
additionAction
_removalAction
_additionAction
_initWithHIDEventSystem:
_starkSimulatorAttached:
_starkSimulatorDetached:
_queue_addOneShotMatchingDictionary:withMatchingAction:
_queue_watchForAndFireAction:forCurrentlyAttachedServicesMatching:
_queue_addMatchingDictionary:withMatchingAction:
_queue_serviceInfosAdded:matchingActions:
addObjectsFromArray:
_queue_actionsForMatchingDictionary:
_queue_serviceInfoRemoved:
_servicesAdded:matchingDictionary:
_matchingDictionaryToActionMapping
_oneShotMatchingDictionaryToActionMapping
_serviceToRemovalNotificationMapping
_serviceInfoToRemovalActionsMapping
_starkSimulatorAttached
_starkSimulatorServiceInfo
initWithSystemAppSentinel:alternateSystemAppManager:bootUIOverlayVendor:renderOverlayManager:
_systemAppFinishedLaunching:
_systemAppExited:
hideAppleLogoOnLaunch
_queue_removeUnderlay
_queue_addUnderlay
_queue_updateOverlay
appendObject:withName:skipIfNil:
_queue_removeOverlayWithAnimationSettings:
_queue_addOverlay
_setInterstitial:
_bootUIOverlayVendor
_renderOverlayManager
_overlay
_isOverlaySustained
_underlay
startServer
open
systemPropertyForKey:
setSystemProperty:forKey:
injectHIDEvent:
injectGSEvent:
digitizerInfoForService:
removeDigitizerInfoForService:
digitizerServiceToInfoMapping
setDigitizerServiceToInfoMapping:
touchStreams
setTouchStreams:
_digitizerServiceToInfoMapping
_touchStreams
initWithQueue:
_arbiterInfo
_displayInfoForDisplay:createIfNeeded:
enumerateKeysAndObjectsUsingBlock:
perDisplayInfo
setPerDisplayInfo:
referenceToTouchStreamClientsMapping
setReferenceToTouchStreamClientsMapping:
previousVendedTouchStreamReference
setPreviousVendedTouchStreamReference:
_perDisplayInfo
_referenceToTouchStreamClientsMapping
_previousVendedTouchStreamReference
policyByCombiningPolicies:
ipc_addPolicy:
selector
getArgument:atIndex:
_xpcConnection
matchSharingTouchesPolicy:orCancelTouchesPolicy:orCombinedPolicy:
reducePolicyToObjectWithBlock:
invoke
assertionEndpoint
_policy
policyExcludingPolicy:
_queue_setPolicy:
policyIncludingPolicy:
setObject:atIndexedSubscript:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
_assertionConnections
contents
bounds
_background
%@.%d%@
darkspinny
lightspinny
@%dx
.png
background
TI,N,V_background
.requestFence
.createAssertion
v8@?0@"NSObject<OS_xpc_object>"4
v4@?0
-[BKFenceArbiterServer queue_handleMessage:client:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKFenceArbiter.m
<Unknown File>
_caFencePort should be MACH_PORT_NULL
_caFence should be nil
_preFenceReceiveRight should be nil
_preFenceTriggerReceiveRight should be nil
could not recv notify msg
failed to set up MACH_NOTIFY_NO_SENDERS result=%i
previous notification port should be MACH_PORT_NULL
_caFencePort must be a valid port number
_caFence should not be nil
systemAnimationFence failure: _preFenceReceiveRight
systemAnimationFence failure: _preFenceTriggerReceiveRight
systemAnimationFence failure: preFence {caFence=%x preFence=%x preFenceTrigger=%x}
systemAnimationFence failure: preFenceTrigger {caFence=%x preFence=%x preFenceTrigger=%x}
systemAnimationAssertion failure: preFence
currentTime
Td,N,V_currentTime
BKTouchPadQueue
v8@?0@"NSArray"4
v12@?0@"BKHIDServiceInfo"4^B8
v8@?0@"BKHIDServiceInfo"4
v16@?0@"BKHIDServiceInfo"4I8^B12
TouchPad
currentTouchPads
T@"NSMutableSet",R,N,G_currentTouchPads,V_currentTouchPads
DeviceUsagePage
DeviceUsage
DeviceUsagePairs
__81-[BKDigitizerEventSchedulerWithDisplayLink scheduleEvent:fromDigitizer:toClient:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDigitizerEventSchedulerWithDisplayLink.m
event
v8@?0B4
displayLink
T@"CADisplayLink",R,N,V_displayLink
State
v12@?0@4^B8
state
Ti,N,V_state
gestureRecognizers
T@"NSSet",R,N,G_gestureRecognizers
delegate
T@"<BKGestureRecognizerDelegate>",N,V_delegate
Possible
Began
Ended
BKGestureRecognizerEngine
_BKHIDXXGetBacklightFactor
_BKHIDXXSetBacklightFactorPending
_BKHIDXXSetBacklightFactorWithFadeDuration
_BKHIDXXSetBacklightFactorWithFadeDurationAsync
_BKHIDXXSetMinimumBrightnessLevelWithFadeDuration
_BKHIDXXAmbientLightSensorExists
_BKHIDXXAmbientLightSensorDisableAutoBrightness
_BKHIDXXAmbientLightSensorEnableAutoBrightness
_CoreHIDRequestProximityDetectionMode
_BKHIDXXRequestProximityDetectionMode
_BKHIDXXRequestEstimatedProximityEvents
_BKHIDXXResetProximityCalibration
_BKHIDXXSetProximityEventsClient
_BKHIDXXSetHIDUILockedState
_BKHIDXXSetPocketTouchesExpected
kern_return_t _BKHIDXXSetVolumeAndPowerButtonPrecedence(mach_port_t, uint8_t, audit_token_t)
B8@?0@4
v12@?0@"BKSEventFocusDeferral"4^B8
_BKHIDXXSystemAppControlsFocusOnMainDisplay
_BKHIDXXSetForegroundApplicationOnMainDisplay
_BKHIDXXCancelTouchesOnAllDisplays
_BKHIDXXCancelTouchesOnDisplay
_BKHIDXXSetHitTestRegionsForDisplay
_BKHIDXXApplyButtonDefinitions
_BKHIDXXTouchStreamCreate
_BKHIDXXTouchStreamSetEventDispatchMode
_BKHIDXXTouchStreamInvalidate
_BKHIDXXResetUserEventTimer
_BKHIDXXNotifyOnNextUserEvent
_BKHIDXXGetLastUserEventTime
_BKHIDXXSetDeviceInterfaceOrientation
_BKHIDXXSetOrientationClient
_BKHIDXXLockOrientation
_BKHIDXXUnlockOrientation
_BKHIDXXIsOrientationLockedWithOrientation
PID %d
_BKHIDXXSetDisplayBrightnessValue
_BKHIDXXSetDisplayBrightnessCurveValue
_BKHIDXXRestoreSystemDisplayBrightness
_BKHIDXXSetAutoDisplayBrightnessEnabled
_BKHIDXXSetEventRouters
_BKHIDXXSetStackshotCombos
@8@?0@4
_BKHIDXXSetTouchHand
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKHIDServiceInfoSimulator.m
There is no hidServices in the simulator
BKSDisplayRenderOverlayDescriptor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDisplayBootUIRenderOverlay.m
Invalid condition not satisfying: %@
descriptor != nil
[descriptor isKindOfClass: BKSDisplayRenderOverlayDescriptorClass]
DeviceColorMapPolicy
Already have a context
Content layer not set
Couldn't create remote context
opacity
%x (%u)
contextID
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
contentLayer
T@"CALayer",R,N,V_contentLayer
lightBackground
TB,R,N,G_useLightBackground,V_lightBackground
T{CGRect={CGPoint=ff}{CGSize=ff}},N,G_bounds,S_setBounds:
<CFRunLoopSource MIG Server> {port = %u, subsystem = %p, context = %p}
<CFRunLoopSource MIG Server> mach_msg send error in reply: %s
BKHIDSystemOpenedNotification
com.apple.backboard.hidEventQueue
v16@?0@4I8^B12
BKHIDZone
com.apple.backboard.hid.services
AirPlay
Transport
com.apple.button.lisa.rotate.ccw
com.apple.button.lisa.rotate.cw
void _BKHID_zoneAllocator_Release(const void *)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKHIDSystem.m
BKHIDZone allocator is a singleton and should never be released
BKHIDZoneAllocator
Placement
Built-In
descriptor
sender
dataLength
dataPtr
TI,N,V_dataLength
data
T*,N,V_data
backboardd.firstboot_check
isTokenSet
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKHIDEvent.m
Invalid parameter not satisfying: %@
senderInfo
hidEvent
T@"BKSHIDEventDescriptor",N,V_descriptor
T@"BKHIDServiceInfo",N,V_senderInfo
BKDigitizerSwizzler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKHIDServiceInfo.m
hidService
displayUUID
PrimaryUsagePage
PrimaryUsage
Authenticated
senderID
eventSource
0x%x
primaryUsagePage
primaryUsage
authenticated
receivedFirstEvent
maxForce
touchCount
TI,N,V_touchCount
currentDestination
T@"BKEventDestination",&,N,V_currentDestination
touchPad
TB,N,GisTouchPad,V_touchPad
Tf,R,N
supportsPreciseLocations
TB,R,N
keyDownCount
TI,N,V_keyDownCount
swallowEvents
TB,N,GshouldSwallowEvents,V_swallowEvents
capsLockOn
TB,N,GisCapsLockOn,V_capsLockOn
capsLockRomanSwitchMode
TB,N,V_capsLockRomanSwitchMode
countryCode
TC,N,V_countryCode
keyboardType
TI,N,V_keyboardType
keyboardLayout
T@"NSString",C,N,V_keyboardLayout
keyboardLanguage
T@"NSString",C,N,V_keyboardLanguage
_gsKeyboard
T^{__GSKeyboard=},R,N,V__gsKeyboard
immediatelyUsable
TB,R,N,GisImmediatelyUsable,V_immediatelyUsable
initiallyUsable
TB,R,N,GisInitiallyUsable,V_initiallyUsable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKEventClient.m
use initWithPid:...
<%@: (pid: %d) %p>
v8@?0@"<BKEventClientDelegate>"4
_queue_invalidated
name
port
T@"<BKEventClientDelegate>",N
Ti,R,N,V_queue_pid
sendRight
T@"BSMachPortSendRight",R,&,N,V_queue_sendRight
v16@?0@"CADisplay"4I8^B12
com.apple.backboardd.libnotify-workaround
com.apple.springboard.hasBlankedScreen
void BKDisplayStartWindowServer()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDisplay.m
No window server display found
CADisplay
CGImageRef BKDisplayCaptureImage(CADisplay *)
display != nil
[display isKindOfClass: CADisplayClass]
com.apple.backboard.display.services
TVOut
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDisplayRenderOverlayImage.m
_context == nil
BKDisplayRenderOverlayImage:%@
kern.progressoptions
image
T^{CGImage=},R,N
cachedDescriptorsToRouterDestinations
T@"NSMapTable",&,N,V_cachedDescriptorsToRouterDestinations
_BKDisplayXXSetScreenBlanked
_BKDisplayXXWillUnblank
_BKDisplayXXSetReplayCloneContextIDs
_BKDisplayXXSetCloneMirroringMode
_BKDisplayXXSetVirtualDisplayClientPID
_BKDisplayXXDisplayIsTethered
_BKDisplayXXTetherPrefsNeedImmediateUpdate
_BKDisplayXXSetTetheredOrientationNotificationsDisabled
_BKDisplayXXUpdateTetheredDisplayOrientationIfNecessaryWithInterfaceOrientation
_BKDisplayXXUpdateMirroredDisplayOrientationWithInterfaceOrientation
_BKDisplayXXSetRefreshRateSettings
_BKDisplayXXApplyRenderOverlay
_BKDisplayXXRemoveRenderOverlay
_BKDisplayXXFreezeRenderOverlay
_BKDisplayXXRenderOverlay
_BKDisplayXXDismissInterstitialRenderOverlay
_BKDisplayXXSetSecureMode
v12@?0@"BKDisplayRenderOverlay"4^B8
AlternateSystemApplication:
-[BKAlternateSystemApp launch]
System
Internal
%@%@[%#04x]
MallocStackLogging
MallocGuardEdges
MallocCheckHeapStart
MallocCheckHeapAbort
MallocErrorAbort
MallocScribble
DYLD_INSERT_LIBRARIES
NSZombieEnabled
NSDeallocateZombies
SQLITE_AUTO_TRACE
.jail.
FB_PORT_PREFIX
com.apple.frontboard.systemappservices
com.apple.frontboard.workspace
-[BKAlternateSystemApp _noteLaunchFailed:]
-[BKAlternateSystemApp _noteLaunchSucceeded]
-[BKAlternateSystemApp _noteExited:]
bundleID
options
T@"NSString",C,N,V_bundleID
T@"NSDictionary",C,N,V_options
jobLabel
T@"NSString",C,N,V_jobLabel
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
portDeathWatcher
T@"BSPortDeathWatcher",&,N,V_portDeathWatcher
T@"<BKAlternateSystemAppDelegate>",N,V_delegate
com.apple.PreBoard
OverrideURL
file:///Applications/PreBoard.app
OverrideAppType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDisplayRenderOverlay.m
Must dismiss before releasing
Can't freeze a hidden overlay
level
visible
T@"NSString",R,C,N
display
T@"CADisplay",R,&,N
interfaceOrientation
Ti,R,N
lockBacklight
progressIndicatorProperties
T@"BKSDisplayProgressIndicatorProperties",R,N
interstitial
TB,R,N,GisInterstitial
persistenceCoordinator
T@"BKDisplayRenderOverlayPersistenceCoordinator",&,N,G_persistenceCoordinator,S_setPersistenceCoordinator:,V_persistenceCoordinator
type
Ti,N,S_setType:,V_type
scale
Tf,R,N,G_scale,V_scale
T@"BKSDisplayRenderOverlayDescriptor",R,&,N,V_descriptor
Tf,R,N,V_level
disablesDisplayUpdates
TB,R,N,V_disablesDisplayUpdates
animates
TB,N,V_animates
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKButtonComboPressGestureRecognizer.m
keyboardDescriptors
hidSystem
T@"BKHIDSystemInterface",&,N,V_hidSystem
-[BKGSEventSystem _handleEvent:]
%d (%@)
requestedMode
valid
TB,R,N,GisValid
Ti,V_requestedMode
AssertType
NoIdleSleepAssertion
AssertLevel
AssertName
com.apple.backboardd.pocketDetection
-[BKProximitySensorInterface _queue_requestEstimatedProximityEventsWithTimeout:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKProximitySensorInterface.m
IsBKProximityDetectionModeSupportedForClientRequests(proxMode)
-[BKProximitySensorInterface clientRequestedProximityMode:processID:clientPort:]
estimatedProxShutoffTimer
T@"NSObject<OS_dispatch_source>",&,N,V_estimatedProxShutoffTimer
estimatedProxPowerAssertionID
TI,N,V_estimatedProxPowerAssertionID
sensorHardware
T@"BKProximitySensorHardwareBase",&,N,V_sensorHardware
disabled
TB,N,GisDisabled,V_disabled
<unknown>
none
standard
passive
passiveMonitoring
passiveEngaged
active
estimated
locked
supportsSecureCoding
TB,R
Tf,N,V_level
overlayType
Ti,N,V_overlayType
T@"BKSDisplayRenderOverlayDescriptor",&,N,V_descriptor
T^{CGImage=},N,V_image
LIGetHeaderForUncompressedBitmapData
/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
### Failed to Soft Linked: /System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
LICreateImageFromUncompressedBitmapData
LICreateUncompressedBitmapDataFromImageWithOptions
imageData
com.apple.backboard.securityManager
entitlementCache
T@"<BKEntitlementCache>",&,D,N
BKSendGSEvent
BKKeyboardDispatchQueue
DOWN
DisplayBrightnessFactor
DisplayBrightnessFactorPending
DisplayBrightnessFadePeriod
DisplayBrightnessFactorWithFade
com.apple.backboardd.backlight.changed
BacklightCapability
Brightness
v12@?0@"NSString"4@8
BrightnessMinPhysicalWithFade
BrightnessMinPhysical
Commit
DisplayInitialBrightness
DisplayBrightness
BrightnessCurveLevel
DisplayBackLightArchitecture
FreezeBrightnessEnable
FreezeBrightnessRequestors
FreezeBrightnessPeriod
FreezeBrightness
digitizerSignpostsEnabled
v8@?0@"NSNotification"4
v16@?0@"BKHIDServiceInfo"4^{?=^{?}^{?}^{?}C[300{?=IIC}]^{BKDelayedEventClient}Id^{?}@^{BKPendingUpdateEvent}}8@"BKDigitizerTouchStreamAggregate"12
v8@?0@"BKDigitizerArbiterInfo"4
Update
___arbiter_BKDigitizerHandleUpdateEventForDigitizerWithInfo_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDigitizer.m
pathID:%ld >= MAX_PATH_COUNT
v20@?0^{__IOHIDEvent=}4I8l12^B16
void _arbiter_BKDigitizerHandleUpdateEventForDigitizerWithInfo(IOHIDEventRef, BKHIDServiceInfo *, BKDigitizerInfo *, BKDigitizerTouchStreamAggregate *)
pending/removed items don't match: %@/%@
BKDigitizerLogPathCollectionEvent
pathCollectionEvent
v8@?0@"BKDigitizerTouchStreamClient"4
Digitizer
_arbiter_BKDigitizerHandlePathCollectionEventForDigitizerWithInfo
clientEvent
pathEvents
v12@?0@"NSString"4@"BKDigitizerTouchStreamAggregate"8
DisplayIntegrated
Cancel
System gestures no longer possible
unspecified
sending
stealing
ignoring
process
defer
CFIndex BKDigitizerUpdateGenerationCount(IOHIDEventRef)
passing a NULL IOHIDEventRef is not recommended
generation: %ld%@
[%lu] pathID:%lu mask:%lX
 <client port:%x contextID:%x pathIDMask:%lX>
createSystemGestureEventFromPathCollectionEvent
shiftDigitizerLocationToHitContext
BKDisplayGetMainWindowServerDisplay()
BKPendingUpdateEvent *_arbiter_BKDigitizerSaveClientExpectingEventUpdates(IOHIDEventRef, BKHIDServiceInfo *, BKDigitizerInfo *, mach_port_t, uint32_t)
must be a digitizer event
this is Unix, that can't happen
too many clients
___arbiter_BKDigitizerSaveClientExpectingEventUpdates_block_invoke
pathID (%ld) >= MAX_PATH_COUNT
v16@?0^{__IOHIDEvent=}4I8^B12
hitTestPathCollectionEvent
void hitTestPathCollectionEvent(BKHIDServiceInfo *, BKDigitizerInfo *, const IOHIDEventRef, NSInteger *, BKContextInfo *, BKPointTriple (*)[10], BKHandHitInfo *, BOOL *)
shouldn't be hit testing an update subevent
v16@?0@"BKSHitTestRegion"4I8^B12
maxClientPortContextPairCount > hostingChainClientCount
_policy
pathCollectionEventTouchingPathCount
updatePathZGradientInfoForPathCollectionEvent
createHandHIDEventFromPathCollectionForClient
MACH_PORT_VALID(clientTaskPort)
needs to be shifted for proper hitTesting: (%f %f) -> (%f, %f)
needs the precise location: (%f %f) -> (%f, %f)
has a zGradient: %f
down
hall-effect-sensor
closed
open
UsagePage
Usage
SetButtonPriority
SetButtonProperties
engaged
disengaged
com.apple.backboardd.idletimer
_firstBootToken
systemAppSentinel
T@"BKSystemAppSentinel",&,N,V_systemAppSentinel
alternateSystemAppManager
T@"BKAlternateSystemAppManager",&,N,V_alternateSystemAppManager
firstBoot
TB,R,N,GisFirstBoot
BKHIDServiceInfoCache
cache
v16@?0@"NSString"4I8^B12
DisplayBrightnessAuto
BKALSWeightMax
DisplayBrightnessAutoWeightMax
BKALSWeightMin
DisplayBrightnessAutoWeightMin
BKALSIntPeriod
ALSIntPeriod
BKALSIntPeriodOrientationEnabled
ALSIntPeriodOrientationEnabled
BKALSIntPeriodOrientationLandscape
ALSIntPeriodOrientationLandscape
BKALSIntPeriodOrientationPortrait
ALSIntPeriodOrientationPortrait
BKALSIntPeriodOrientationPortraitInv
ALSIntPeriodOrientationPortraitInv
BKHIDSessionLogLevel
LogLevel
BKALSFadeSlope
DisplayBrightnessFadeSlope
BKHIDALSInternalSettings
ALSInternalSettings
ALSEnabled
ALSUserPreference
ALSResetCurve
BOOL BKSmartKeyboardEventIsOragamiFolded(BKVendorDefinedEvent *, BOOL *)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKSmartKeyboardEventDecoder_Internal.h
vendorEvent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKButtonPressGestureRecognizer.m
keyboardDescriptor
T@"BKSHIDEventKeyboardDescriptor",&,N,V_descriptor
BKKeyboardManagerQueue
BKKeyboardManagerCalloutQueue
v16@?0@"BKGestureRecognizer"4I8^B12
_attachedKeyboards
_usableKeyboards
attachedKeyboards
T@"NSArray",R,C,N
T@"<BKKeyboardManagerDelegate>",N,V_delegate
IdleTimer
Backlight
Button
ProximitySensor
Accelerometer
Keyboard
RenderOverlay
BootUI
SystemAppSentinel
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKEventFocusClient.m
pid > 0
clientID
deferrals
T@"NSString",C,N,V_clientID
T@"NSSet",&,N,V_deferrals
-[BKDigitizerEventSchedulerBase scheduleEvent:fromDigitizer:toClient:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDigitizerEventScheduler.m
digitizer
not supported on this platform
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKAccelerometerInterface.m
this object should not be deallocated
v8@?0@"BKAccelerometerClient"4
eventsEnabled
clients
systemAppOrientationClient
v12@?0@"BKAccelerometerClient"4^B8
BKAlternateSystemAppManagerDidBlockSystemApp
BKAlternateSystemAppManagerDidUnblockSystemApp
com.apple.backboardd.altsysapp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKAlternateSystemAppManager.m
dealloc'ing without calling the exit block
dealloc'ing without calling the open result block
openBundleId
T@"NSString",C,N,V_openBundleId
pendingOpenResultBlock
T@?,C,N,V_pendingOpenResultBlock
pendingExitBlock
T@?,C,N,V_pendingExitBlock
alternateSystemApp
T@"BKAlternateSystemApp",&,N,V_alternateSystemApp
blockingSystemApp
TB,N,GisBlockingSystemApp,S_setBlockingSystemApp:,V_blockingSystemApp
BKTetherControllerTetherStateChangedNotification
com.apple.mobile.demo_mode_changed
com.apple.mobile.demo.mode-%d
com.apple.backboardd.deviceinterfaceorientation
displayport
orientationNotificationDisabled
TB,N,GisOrientationNotificationDisabled,V_orientationNotificationsDisabled
BKStarkSimulatorDidConnectNotification
BKStarkSimulatorDidDisconnectNotification
com.apple.backboardd.BKTVOutController.workQueue
currentMode
Wireless
IPHONE_TVOUT_EXTENDED_PROPERTIES
stark
display-mirroring
com.apple.TVOut.preferredMode.hres
com.apple.TVOut.preferredMode.vres
com.apple.iapd.videoout.SettingsChanged
kIAPDServerDiedNotification
cloneRotationDisabled
TB,N,GisCloneRotationDisabled,V_cloneRotationDisabled
tvOutMode
Ti,V_tvOutMode
replayCloneContextIDs
T@"NSSet",&,N
availableModes
PurpleTVOut
com.apple.CoreAnimation.CAWindowServer.SecureModeViolation
v8@?0i4
secureModeEnabled
TB,GisSecureModeEnabled,V_secureModeEnabled
FBSSystemService
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
### Failed to Soft Linked: /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptionKeyActions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDisplayRenderOverlayPinkForTesting.m
Already have a _context
Testing
System/Library/AccessibilityBundles/BackBoard.axbundle
checkedIn
pendingCheckIn
finishedStartup
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
bundlePath
T@"NSString",C,N,V_bundlePath
Ti,R,N,V_pid
connectDate
T@"NSDate",&,N,V_connectDate
TB,N,V_pendingCheckIn
TB,N,V_checkedIn
TB,N,V_finishedStartup
wantsOrientationEvents
passiveEvents
wantsAccelerometerEvents
lastAccelerometerEventTimestamp
Td,N,G_lastAccelerometerEventTimestamp,S_setLastAccelerometerEventTimestamp:,V_lastAccelerometerEventTimestamp
TB,N,V_wantsAccelerometerEvents
accelerometerUpdateInterval
Td,N,V_accelerometerUpdateInterval
xThreshold
Tf,N,V_xThreshold
yThreshold
Tf,N,V_yThreshold
zThreshold
Tf,N,V_zThreshold
passiveOrientationEvents
TB,N,V_passiveOrientationEvents
TB,N,V_wantsOrientationEvents
BKSystemAppSentinelChangedSystemAppNotification
BKSystemApplicationDidFinishLaunchingNotification
BKSystemApplicationDidExitNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKSystemAppSentinel.m
this shouldn't dealloc
systemAppBlocked
systemApp
connectedSystemApps
v12@?0@"BKSystemApplication"4^B8
BKDisplayBrightnessDidChangeNotification
implicit
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDisplayBrightnessInterface.m
There shouldn't be a negative number of pending transactions
lastOrientation
_wrapRunLoopWithAutoreleasePoolHandler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKAutoreleasePoolRunLoopSupport.m
count > 0
com.apple.backboard.client
com.apple.backboardd.replacesystemapp
com.apple.backboard.displaybrightness
com.apple.backboardd.lastUserEventTime
com.apple.backboardd.proximityDetection
com.apple.backboardd.estimatedProximityDetection
com.apple.backboardd.hostCanRequireTouchesFromHostedContent
com.apple.backboardd.cancelsTouchesInHostedContent
com.apple.backboardd.virtualDisplay
com.apple.backboardd.replayClone
com.apple.multitasking.systemappassertions
com.apple.multitasking.unlimitedassertions
com.apple.multitasking.newsstandassertions
com.apple.backboardd.launchapplications
com.apple.springboard.launchapplications
com.apple.backboardd.debugapplications
com.apple.springboard.debugapplications
com.apple.multitasking.termination
com.apple.UIKit.vends-view-services
ReceiverProximityReset
InputDetectionMode
lockedWakeAndMuteMonitoring
faceExpected
facePresent
faceMonitoring
faceExpectedFromMonitoring
pocketTouchesExpected
pocketTouchesExpectedAndFaceMonitoring
BK:%@ HID:%@
lockedHIDMode
Ti,V_lockedHIDMode
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKHIDServiceInfoAccessibility.m
There is no hidServices available for accessibility
puiProgressWindow
com.apple.backboard.watchdog
Retrieving stackshot via backboardd
T@"NSMutableArray",R,N,V_clients
T@"NSString",C,N,V_displayUUID
com.apple.backboard.altsysapp
com.apple.backboard.altsysappserver
v12@?0Q4
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
clientConnection
T@"NSXPCConnection",&,N,V_clientConnection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKHIDServiceInfoUnknown.m
There is no hidServices available for this unknown sender
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKSmartKeyboardGestureRecognizer.m
keyboard
T@"BKHIDServiceInfo",R,N,V_keyboard
.calloutQueue
v8@?0@?<v@?>4
-[BKSystemApplicationServer queue_handleMessage:client:]
T@"<BKSystemApplicationServerDelegate>",N,V_delegate
com.apple.backboardd.migration
/tmp/RestoreRunning
~/Library/Calendar/Calendar.sqlitedb.restored
~/Library/AddressBook/AddressBook.sqlitedb.restored
~/Library/AddressBook/AddressBookImages.sqlitedb.restored
~/Library/SpringBoard/IconState.plist.restored
~/Library/Preferences/com.apple.springboard.plist.restored
com.apple.backboardd.hid.focus-server
com.apple.backboard.hid.focus
v12@?0@"BKSEventFocusDeferralProperties"4^B8
prox
TRUE
FALSE
ALSRequiresProx
com.apple.backboard.proximity.changed
eventDestination
T@"BKEventDestination",&,V_eventDestination
objectWithinProximity
TB,GisObjectWithinProximity,V_objectWithinProximity
proximityDetectionInActiveMode
TB,GisProximityDetectionInActiveMode,V_proximityDetectionInActiveMode
baseMode
Ti,V_baseMode
com.apple.backboardd.orientationManager
com.apple.backboardd.orientationManager.observerCallout
ThresholdX
ThresholdY
ThresholdZ
ThresholdPeriod
Shake
ReportInterval
v12@?0@"CMDeviceOrientation"4@"NSError"8
com.apple.backboardd.orientation
com.apple.backboardd.rawOrientation
com.apple.backboardd.unambiguousOrientation
com.apple.backboardd.orientationlock
interruptEventThresholds
Tf,N
updateInterval
Td,N
orientationEventsEnabled
TB,N,GisOrientationEventsEnabled
currentUserInterfaceOrientation
Ti,N
currentRawAccelerometerDeviceOrientation
lastEffectiveInterfaceOrientation
effectiveDeviceOrientation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKHIDClientConnection.m
The connection %@ doesn't have a pid set
The connection %@ doesn't have a bundleID
IOHIDEventSystemConnectionRef
taskPort
isSystemAppEvent
T@"NSString",R,C,N,V_clientID
T@"BSMachPortSendRight",&,N,V_sendRight
TI,N,V_contextID
systemAppEvent
TB,N,GisSystemAppEvent,V_systemAppEvent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDigitizerTouchStreamClient.m
dealloc without previous -invalidate
isValid
dispatchMode
ambiguityRecommendation
TB,GisValid,V_valid
reference
TI,N,V_reference
parent
T@"BKDigitizerTouchStreamAggregate",N,V_parent
TI,N,V_taskPort
touchStreamIdentifier
TC,N,V_touchStreamIdentifier
shouldSendAmbiguityRecommendations
TB,N,V_shouldSendAmbiguityRecommendations
TC,N,V_dispatchMode
TC,N,V_ambiguityRecommendation
TMPDIR
/tmp
%@|%@
main
libitmap
com.apple.backboard.entitlement.cache
BKHIDEventSystemClientConnectionQueue
TaskPort->ClientConnection
pid->ClientConnection
pid->bundleID
HIDConnection->BKConnection
systemAppControlsFocusOnMainDisplay
pidToClientMapping
source -> destination -- client
(pid:%d clientID:%@ display:%@ contextID:%X) -> (pid:%d clientID:%@ display:%@ contextID:%X) %@ clientID:%@ pid:%d
**cycle** 
(none)
clientQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_clientQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDisplayRenderOverlayManager.m
windowServer
backlightManager
orientationManager
activeOverlays
v16@?0@"CAWindowServerDisplay"4I8^B12
T@"NSMutableSet",R,&,N,V_activeOverlays
overlaysDisablingUpdates
T@"NSMutableSet",R,&,N,V_overlaysDisablingUpdates
lockedOrientation
Ti,R,N,V_lockedOrientation
backlightLocked
TB,R,N,V_backlightLocked
removalAction
T@?,R,C,V_removalAction
additionAction
T@?,R,C,V_additionAction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKHIDServiceManager.m
hidEventSystem
BKHIDServiceManager
Got a removal for a service: %@, but we don't have him in the infoCache
hideAppleLogoOnLaunch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKBootUIPresenter.m
Must dismiss overlay / underlay before releasing
_overlay
_underlay
showingBootUI
TB,R,N,GisShowingBootUI
digitizerServiceToInfoMapping
T@"NSMapTable",&,N,V_digitizerServiceToInfoMapping
touchStreams
T@"BKDigitizerTouchStreamAggregate",&,N,V_touchStreams
BKDigitizerInfoArbiterDispatchQueue
-[BKDigitizerArbiterInfo digitizerServiceDidDetach:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-113.1.2/megatrond/BKDigitizerInfoArbiter.m
-[BKDigitizerArbiterInfo _displayInfoForDisplay:createIfNeeded:]
v16@?0@"NSString"4@"BKDigitizerArbiterInfoPerDisplay"8^B12
perDisplayInfo
T@"NSMutableDictionary",&,N,V_perDisplayInfo
referenceToTouchStreamClientsMapping
T@"NSMapTable",&,N,V_referenceToTouchStreamClientsMapping
previousVendedTouchStreamReference
TI,N,V_previousVendedTouchStreamReference
com.apple.backboardd.TouchDeliveryPolicyServer
@12@?0I4I8
@16@?0I4d8
@8@?0@"NSArray"4
@8@?0@"BKSTouchDeliveryPolicy"4
T@"BKSTouchDeliveryPolicy",&,S_queue_setPolicy:,V_policy
Can't find the image for the spinny: %{public}@
-----------> %p: bounds of display changed: size.width: %f size.height: %f, updating spinny position
%{public}@ - %s Ignoring unknown message type %d.
waited 100ms for critical section lock - request fence begin
starting up fence thread %i
waited 100ms in fence %i set up for previous transaction to finish
waited 100ms for critical section lock - fence %i set up
fence thread %i configured with {caFence=%x preFence=%x preFenceTrigger=%x}
preFenceTimeoutInterval set to %llims
notify msg came in for an unexpected type (%i) on %x for %x
fence thread %i listening for no more senders on %x for %x
fence thread %i sleeping till next event
fence thread %i waking for event
waited 100ms while waiting for critical section lock - fence %i check
fence thread %i timed out after %llims {caFence=%x preFence=%x preFenceTrigger=%x}
fence thread %i synchronization successful on %x
fence thread %i detected no more senders for %x but generation token is out of date - looping again
shutting down fence thread %i
waited 100ms while waiting for critical section lock - request fence ready
returning fence handle {caFence=%x preFence=%x preFenceTrigger=%x}
failed to acquire fence handle : failed to copy caFence {caFence=%x preFence=%x preFenceTrigger=%x}
waited 100ms while waiting for fence invalidation
waited 100ms while waiting for critical section lock - request fence invalidated
failed to acquire fence handle : not running
waited 100ms for critical section lock - create assertion begin
successfully returned assertion=%x for triggerPort=%x
failed to acquire assertion for triggerPort=%x (does not match current port)
failed to acquire assertion for triggerPort=%x
starting %{public}s...
%{public}s exiting...
TouchPad was removed: %{public}@
Found a new touchpad %{public}@
backboardd touchpad: Cancel (%{public}@)
cannot set event router thread priority (error %d)
%s ERROR: pid %d requested invalid proximity detection mode: %d
%s ERROR: invalid port for pid %d
Entitlement %@ required to use %s
Error unarchiving deferrals
Decoded event focus deferrals contains unexpected non-BKSEventFocusDeferral elements: %{public}@
Warning, I couldn't find the pid for the properties of this deferral: %{public}@ - dropping it on the floor
Warning, I couldn't find the pid for the deferred properties of this deferral: %{public}@ - dropping it on the floor
Error unarchiving hittestRegions
Error unarchiving event routers
Decoded event routers contains unexpected non-BKSHIDEventRouter elements: %{public}@
Error unarchiving key commands
Error unarchiving stackshot combos
Decoded stackshot combos contains malformatted elements: %{public}@
Entitlement %{public}@ required to use %{public}s; ignoring request from pid %d
Only system apps with entitlement %{public}@ may use %{public}s; ignoring request from pid %d
Only system apps with entitlement %{public}@ or processes with entitlement %{public}@ may use %{public}s; ignoring request from pid %d
Car service added: %{public}@
Car service removed: %{public}@
Dropping event (type %d) on the floor because the hid system is not fully initialized
BKHID: Couldn't open hid system - destroying
BKHID: Couldn't create hid system
BKHID: Unable to open Indigo HID system
Got an orientation event from a GSEvent: %d
Received a GSEvent that is not designated as being routed to frontmost (type %d), forwarding to the System App
biometric event occurred; notifying user event timer
game controller event occurred; notifying user event timer
Redirecting HID event (of type: %u) to destination: %{public}@
Got an external interaction event meant for display: %{public}@, %{public}@
Got an external interaction event of type %d, but there is no destination set for it
Couldn't find the digitizer HID service, this is probably bad
Failed to create semaphore %{public}s for first boot token. Error = %d
Failed to delete semaphore %{public}s for first boot token. Error = %d
BKEventClient died (pid): %{public}@
BKEventClient died (port): %{public}@
Setting main screen size to %{public}@
Actually swapping the size because the display orientation is %f radians - new size:  %{public}@
Setting usesPreferredModeRefreshRate to %d for display %{public}@
Setting idealRefreshRate to %f for display %{public}@
Set Blanked: %@
will unblank
Disabling framebuffer changes on display (%d) at boot until we are ready for them.
Got back scale: %f from BSMainScreenScale() assuming scale 1
[BKDisplayRenderOverlay] No CADisplay found for UUID: %{public}@
[BKDisplayRenderOverlay] Unable to capture display image for display! %{public}@
No image
Setting progress indicator (style = %d) for overlay at position (%u, %u).
Unable to apply kernel progress indicator - error %d.
Successfully applied kernel progress indicator.
Error unarchiving contextIDs
Updating external display interface orientation to %{public}@
%s: app = %{public}@
Using built-in information for bundle ID %{public}@: URL="%{public}@" appType="%{public}@"
%s: launch failed
%s: launch succeeded but PID unknown
Unable to obtain a task name port right for pid %i: %{public}s (%d)
%s: app = %{public}@ error = %{public}@ (%d)
%s: self = %{public}@ exitReason = %llu
Presenting overlay: %{public}@ with animation settings: %{public}@
Freezing overlay: %{public}@
Dismissing render overlay %{public}@ with animation settings: %{public}@
GSEventResetIdleTimer received from %d
%s Unknown GSEvent, type = %d; Ignoring.
Updating proximity detection mode. clients = %{public}@
updating current mode:(%{public}@), but we are still locked in mode:(%{public}@)]
Updated mode to (%{public}@). Prevailing client = %{public}@
Adding client: %{public}@
Not adding invalid client: %{public}@
Removing client: %{public}@
Estimated prox shutting off
Releasing estimated prox power assertion
Ignoring request for estimated prox events: we're not locked
Restarting estimated prox timer with timeout %gs
Starting estimated prox timer with timeout %gs
%s - Unable to take estimated prox power assertion - returned %#x
Acquired estimated prox power assertion with id: %d
Trying to enable estimated proximity events, but we already have a power assertion taken out with id: %d
Estimated prox shutoff timer fired
pid %d requesting mode %{public}@
client requested 'none' mode; unregistering: %{public}@
client requested 'none' mode but we're not tracking this client... ignoring request
Set client prox mode: %{public}@
client sendRight is invalid: %{public}@
disabling/locking proximity detection
enabling proximity detection
Setting pocket touches expected: %@
Requested uilock state: %d; object in proximity: %d
%s ERROR sending event type %d: %{public}s (0x%X)
BKEventPortForSystemApp: system app port invalid!
#BKSendHIDEvent: Sending event to client connection: %{public}@
#BKSendHIDEvent: IOHIDEventSystemConnectionDispatchEvent error:0x%X -- %{public}@ event dropped
KeyCode: %ld up/down: %@ destination: %@ keyDownCount: %ld
Sending event to purple system app port because backlight is dim or off
...or not sending the system app the event. I can't find him
Unicode: %{public}@ destination: %{public}@
Setting backlight factor pending: %f
Setting backlight factor: %f with fade duration %f
Setting minimum brightness level: %f with fade duration %f
Locking backlight to current value: %@ for reason: %{public}@
Setting hittest regions to: %{public}@ for digitizer: %{public}@
transition (%{public}@, %{public}@) -> (%{public}@, %{public}@) shouldNotify:%@ didNotify:%@
BKDigitizer: got an event update with generation:%ld but I can't find any pending items waiting for an update: %{public}@
remainingUpdatesMask for path %ld is zero, but we got updates:%lX
Sending update event gen:%ld %p to client port: 0x%x contextID: 0x%x
backboardd %{public}@: count %ld display %{public}@ generation:%ld
    Path index %ld
        pathID %d childType %d
          update generation:%ld will:%lX did:%lX
        digitizer points: (precise) %f %f (rounded) %f %f
        hitTest point: %f %f
        is touching: %d; is in range: %ld
    touchCountChanging: %d; rangeCountChanging: %d; collectionMask: 0x%lx; touchingPathCount: %d
    systemGesturePossible: %@ isCancelling: %@
not sending event to touch stream client %{public}@
backboardd Digitizer: Assuming system gestures are possible (%{public}@)
backboardd Digitizer: Assuming system gestures are not possible (lost race with SpringBoard) (%{public}@)
TDPS said this context should cancel: %x
Sending no longer possible to latent client: %x
Sending this event with hitContextID: %x
Digitizer attached: %{public}@
******************* SUPER BAD ****************** no multitouchHIDService
using %{public}@
backboardd Digitizer: %@ (<%p> - %{public}@) causedByTouchStream: %{public}@
received cancel without child paths from senderID:0x%llX
Touch entered exclusive touch region of this touch region: %{public}@ exclusiveHitTestRegion: %{public}@, so no longer a candidate for hit testing
Touch moved from this hittestRegion: %{public}@ to this hittestRegion: %{public}@, shouldConsiderHitTesting: %@
policies: %{public}@
examining %x policy response %d
-------> Should send cancel due to client change to client: 0x%x contextID: 0x%x
-------> Should send begin due to client change to client: 0x%x contextID: 0x%x
This path (%d) %{public}@ %{public}@ %{public}@
failed to find %x, %x
Digitizer detached: %{public}@
Detected %d SmartCover sensors; available = %x; initial state = %x; trigger sensor = %d; effective state = %@
No SmartCover sensors detected
BKGetButtonHIDServicePlugin returned NULL.
Failed to set new button priorities.
usagePage:0x%x usage:0x%x downEvent:%d phase:%d pressCount:%d source:%d
usagePage:0x%x usage:0x%x downEvent:%d source:%d
Ringer %d
Obsolete Hold %d
Headset button %d
Headset availability changed
Menu Button Pressed: %s
Volume Lower: %s
Volume Upper: %s
Lock Button Pressed: %s
Event from unknown hall effect sensor (usage 0x%x). Ignoring.
Smart Cover HES (usage 0x%x): %s
Sending BKSHIDEventSmartCoverClosed
Sending BKSHIDEventSmartCoverOpen
Notifying that manual timer expired
Notifying that automatic timer expired
Rescheduling timer with new interval of %.2f
First boot is finished
BKSHID: event with no senderID -- sender:%{public}@ event:%{public}@
Cache is removing service: %{public}@
Cache is adding service: %{public}@
CarPlay HID requested, but there is no TVOut display connected.
resetting ALS curve
Resetting ALS preferences on upgrade from epoch %ld to %ld
This smart keyboard event doesn't have any data
Keyboard attached: %{public}@
Keyboard detached: %{public}@
Usable keyboard attached: %{public}@
Usable keyboard detached: %{public}@
New client is %{public}@, events enabled? %{public}@
Acc (type %d): %f %f %f
Setting system app orientation client to: %{public}@ currentOrientation: %d, orientationLocked: %{public}@
[Manager] Blocking the system app
[Manager] Open alternate system app with bundleID: %{public}@
[Manager] Terminating alternate system app with bundleID: %{public}@
[Manager] Unblocking the system app
[Manager] Alternate system app with bundleID: %{public}@ did fail to launch
[Manager] Alternate system app with bundleID: %{public}@ did launch
[Manager] Alternate system app with bundleID: %{public}@ exited with reason: %llu
DEMO MODE NOTIFICATION: %d
Current mode changed on %{public}@ -> %{public}@
Available modes changed on %{public}@
Making display 'PurpleTVOut' a car display for the simulator...............
Making display 'PurpleTVOut' a tvOut display for the simulator............
Setting up Car display
There are no available modes, clearing the tag of %{public}@
Removing wireless clone
%{public}@ changed on %{public}@ -> %{public}@
Can't clone display %{public}@ to itself
Add display clone %{public}@ to %{public}@
Updating primary system app to: %{public}@
Updating primary system the alternate system app: %{public}@
Updating primary system to nil because we are waiting for the alternate system app to launch
Updating primary system app to the old _systemApp: %{public}@
Updating primary system random app: %{public}@
Now monitoring "%{public}@"
No system apps remain. Waiting for one to spawn...
Handling exit request from %{public}@ with options: %{public}@
Blocking system apps.
Killing %{public}@.
Unblocking system apps.
System app connected: %{public}@
System app checked-in: %{public}@
Telling system app "%{public}@" that it can start immediately
System app wants restart: %{public}@
System app disconnected: %{public}@
No more system apps
System app "%{public}@" finished startup after %.2fs.
Sending orientation: %d event to %{public}@
Setting proximity mode: %d (HID %d); pocket touches expected: %@
[Server] Entitlement %{public}@ required to open alternate system app.
[Server] Rejecting BKAlternateSystemAppServer connection because we already have one
[Server] Accepted connection request
[Server] Got a connection request on listener %{public}@: connection %{public}@
[Server] Received request to block primary system app for alternate system app
[Server] Sent notification that system app is blocked for alternate system app
[Server] Received request to unblock primary system app for alternate system app
[Server] Sent notification that system app is no longer blocked for alternate system app
[Server] Received request to open alternate system app "%{public}@"
[Server] Sent notification that alternate system app "%{public}@" failed to open with error %{public}@
[Server] Sent notification that alternate system app "%{public}@" did open
[Server] Sent notification that alternate system app "%{public}@" did exit with reason %llu
[Server] Received request to terminate alternate system app "%{public}@"
[Server] Sent notification that alternate system app "%{public}@" did terminate
%s Ignoring unknown message type %llu from client: %{public}@
Migration complete (if performed). (Elapsed time: %.2f seconds)
A restore is currently running. Waiting to move restored preferences into place until later
Moving restored file into place from %{public}@ to %{public}@
Unable to move file at path %{public}@ to %{public}@: %{public}@
Reseting prox calibration
Proximity receiver state event: %s
Refreshing effective device orientation to: %{public}@
Updating device orientation for system app boot to: %{public}@
Turning on orientation events.
Turning off orientation events.
Resetting device orientation.
Effective device orientation changed to: %{public}@
Last effective interface orientation changed to: %{public}@
Current raw accelerometer device orientation changed to: %{public}@
Last unambiguous device orientation changed to: %{public}@
Updating device orientation from CoreMotion to: %{public}@
Locking device orientation for lock type: %d to: %{public}@
Locked device orientation for lock type: %d to: %{public}@
Unlocking device orientation for lock type: %d
This client connection pid: %d bundleID: %{public}@ doesn't have a valid task port, releasing...
trying to create a BKHIDClientConnection with a nil connection
[BKDisplayRenderOverlayPersistenceCoordinator] Loaded overlay from persistence: %{public}@ from location: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Persisting overlay: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to create path: %{public}@: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to exclude path from backups: %{public}@: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to save temporary snapshot to disk at %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Wrote overlay to file: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to move temporary file (%{public}@) to real location in the shared container (%{public}@): %{public}@
Current bootUI is an Apple Logo
Adding client connection: %{public}@ for client: %{public}@
Removing client connection %{public}@ for client: %{public}@
Got a client addition callback: %{public}@
Got a client removal callback: %{public}@
[%{public}@] Setting foreground application to: %{public}@ (%d)
client %{public}@ - (%d) updated deferrals to %{public}@
Warning, there is no system app, therefore I can't find the proper event destination
Please file a radar - we found a cycle in the event focus manager.  We already saw this property: %{public}@ 
 %{public}@
Freezing display: %{public}@
Conflicting choices for orientation lock, choosing orientation for this overlay: %{public}@
Disabling framebuffer changes on display (%d) because we have overlays that require disabled updates.
Enabling framebuffer changes on display (%d) because we have don't have any overlays that require disabled updates.
Dismissing sustained boot logo
Sustaining the boot logo
Can't persist a boot overlay that isn't there yet
Re-evalutate - _systemAppFinishedLaunching - %{public}@
Toggling underlay.
Re-evalutate overlay - _systemAppChanged - %{public}@
Re-evalutate overlay - _allSystemAppsExited - %{public}@
Not showing the boot UI because we were told to hide it
System app hasn't finished starting so show boot UI
Not dismissing overlay because it has been sustained by the system app
Removing the overlay
Not showing the boot UI overlay because we were told to hide it
Adding the overlay
Not showing the boot UI underlay because we were told to hide it
Adding the underlay
Removing the underlay
Cleaning up objects for display %{public}@ since there are no digitizers left
Cleaning up digitizerInfo for %{public}@ since it was removed
TDPS got a connection %{public}@
not allowing %{public}@ to include policies because it does not have appropriate permissions
Received policy invalidation on the server side %{public}@
Policy was %{public}@
Policy is %{public}@
Got new policy %{public}@, [self _policy] is now %{public}@
BKDisplayRenderOverlaySpinny
BKFenceArbiterServer
BKFenceArbiter
BKDigitizerEventSchedulerWithPostponementToNextVSync
BKTouchPadManager
BKDigitizerEventSchedulerWithDisplayLink
BKGestureRecognizer
BKGestureRecognizerEngine
BKHIDServiceInfoSimulator
BKDisplayBootUIRenderOverlay
CAAnimationDelegate
NSObject
BKVendorDefinedEvent
BKFirstBootKernelSemaphoreToken
BKFirstBootTokenProviding
BKHIDEvent
BKDigitizerSwizzler
BKHIDServiceInfo
BKEventClient
BSDescriptionProviding
BKDisplayRenderOverlayImage
BKHIDEventRouterManager
BKAlternateSystemApp
BKDisplayRenderOverlay
BKSDisplayRenderOverlayDescribing
BKButtonComboPressGestureRecognizer
BKGestureRecognizerDelegate
BKWatchdogService
BKGSEventSystem
BKProximityDetectionClient
BKProximitySensorInterface
BKEventClientDelegate
_BKDisplayRenderOverlayPersistenceData
NSSecureCoding
NSCoding
BKSecurityManager
BKKeyboardManagerDelegateImpl
BKKeyboardManagerDelegate
BKBacklightManager
BKButtonEvent
BKAccelerometerClientBKSAccelerometer
BKUserEventTimer
BKFirstBootDetector
BKHIDServiceInfoCache
BKSmartKeyboardOrigamiUnfoldGestureRecognizer
BKButtonPressGestureRecognizer
BKKeyboardManager
BKEventFocusClient
BKGSEventClient
BKDigitizerEventSchedulerBase
BKDigitizerEventSchedulerImmediate
BKDiscreteProximitySensorHardware
BKAccelerometerInterface
BKOrientationManagerObserver
BKAlternateSystemAppManager
BKAlternateSystemAppDelegate
BKTetherController
BKTVOutController
BKSecureDrawingMonitor
BKDisplayRenderOverlayPinkForTesting
BKAccessibility
BKSystemApplication
BKAccelerometerClient
BKSystemAppSentinel
BKSystemApplicationServerDelegate
BKDisplayBrightnessUpdateTransaction
BKDisplayBrightnessInterface
BKAccelerometerClientUIApp
BKGrapeIntegratedProximitySensorHardware
BKHIDServiceInfoAccessibility
BKDisplayRenderOverlayAppleLogo
BKStackshotter
BKDigitizerTouchStreamAggregate
BKSAlternateSystemAppClientProtocol
BKSAlternateSystemAppServerProtocol
BKAlternateSystemAppServer
NSXPCListenerDelegate
BKHIDServiceInfoUnknown
BKSmartKeyboardGestureRecognizer
BKSystemApplicationServer
BKMigrator
BKEventFocusManagerServerInterface
BKSEventFocusManagerClientInterface
BKEventFocusManagerServer
BKProximitySensorHardwareBase
BKSmartKeyboardOrigamiFoldGestureRecognizer
BKOrientationManager
BKHIDClientConnection
BKEventDestination
BKDigitizerTouchStreamClient
BKDisplayRenderOverlayPersistenceCoordinator
BKBootUIOverlayVendor
BKSystemAppEntitlementCache
BKEntitlementCache
BKHIDClientConnectionManager
BKEventFocusManager
BKSHIDEventKeyCommandRouter
BKHIDEventKeyCommandDescriptorMap
BKDisplayRenderOverlayManager
BKHIDServiceMatchingAction
BKHIDServiceManager
BKBootUIPresenter
BKHIDSystemInterface
BKDigitizerArbiterInfoPerDisplay
BKDigitizerArbiterAccess
BKDigitizerArbiterInfo
BKSTouchDeliveryPolicyServerInterface
BKTouchDeliveryPolicyServer
NSXPCConnectionDelegate
@16@0:4f8@12
@16@0:4@8f12
v8@0:4
@12@0:4@8
B8@0:4
^{CGImage=}12@0:4I8
v24@0:4@8@12@16^v20
I8@0:4
v12@0:4I8
@"NSArray"
@16@0:4@8@12
v16@0:4@8@12
@"NSObject<OS_dispatch_queue>"
@8@0:4
@12@0:4I8
@"BKFenceArbiterServer"
@"CAContext"
@"NSObject<OS_dispatch_semaphore>"
@"BSAtomicFlag"
@"BSMachPortSendRight"
@"BSMachPortReceiveRight"
d8@0:4
d20@0:4d8^d16
B16@0:4d8
v12@0:4@?8
v12@0:4@8
v20@0:4@?8^{__IOHIDEvent=}12I16
v16@0:4d8
@"NSMutableArray"
B16@0:4^{__IOHIDEvent=}8@12
v16@0:4^{__IOHIDEvent=}8@12
v20@0:4^{__IOHIDEvent=}8@12@16
@"NSMutableSet"
#8@0:4
v20@0:4^{__IOHIDEvent=}8@12I16
@"CADisplayLink"
@"NSThread"
i8@0:4
v12@0:4i8
@"<BKGestureRecognizerDelegate>"
@20@0:4@8Q12
^{__IOHIDService=}8@0:4
v12@0:4@"CAAnimation"8
v16@0:4@8B12
v16@0:4@"CAAnimation"8B12
B12@0:4@8
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@"CALayer"
*8@0:4
v12@0:4*8
^{__IOHIDEvent=}
@"BKSHIDEventDescriptor"
@"BKHIDServiceInfo"
@16@0:4@8^{__IOHIDEvent=}12
@12@0:4^{__IOHIDService=}8
Q8@0:4
f8@0:4
v12@0:4B8
v16@0:4Q8
C8@0:4
v12@0:4C8
^{__GSKeyboard=}8@0:4
^{__IOHIDService=}
@"NSString"
@"BKEventDestination"
^{__GSKeyboard=}
@"NSString"12@0:4@"NSString"8
@"BSDescriptionBuilder"12@0:4@"NSString"8
@"BSDescriptionBuilder"8@0:4
@16@0:4i8@12
@20@0:4i8@12@16
@24@0:4i8@12@16@20
@"<BKEventClientDelegate>"
@"BSProcessDeathWatcher"
@"BSPortDeathWatcher"
^{CGImage=}8@0:4
^{CGImage=}
@16@0:4^{__IOHIDEvent=}8@12
@12@0:4^{__IOHIDEvent=}8
i12@0:4@8
@"NSMapTable"
@20@0:4@8@12@16
@"<BKAlternateSystemAppDelegate>"
@"NSDictionary"
@"CADisplay"8@0:4
@"BKSDisplayProgressIndicatorProperties"8@0:4
@"BKSDisplayRenderOverlayDescriptor"
@"BKDisplayRenderOverlayPersistenceCoordinator"
v16@0:4@8i12
v16@0:4@"BKGestureRecognizer"8i12
@"BKHIDSystemInterface"
v12@0:4^{__GSEvent=}8
v12@0:4@"BKEventClient"8
I16@0:4d8
v20@0:4i8@12i16
@12@0:4i8
B20@0:4i8i12@16
v16@0:4^{__IOHIDEvent=}8^{__IOHIDService=}12
v16@0:4B8B12
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
@"BKProximitySensorHardwareBase"
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@24@0:4@8i12@16f20
v12@0:4^{CGImage=}8
v12@0:4f8
@"NSData"
B16@0:4@8^{?=[8I]}12
B16@0:4@8@12
@"<BKEntitlementCache>"
v16@0:4@"BKKeyboardManager"8@"BKHIDServiceInfo"12
v16@0:4B8@12
v36@0:4d8f16f20f24d28
v16@0:4i8B12
v20@0:4d8i16
@"BKSystemAppSentinel"
@"<BKFirstBootTokenProviding>"
@"BKAlternateSystemAppManager"
@"NSHashTable"
@16@0:4^{__IOHIDService=}8^{__IOHIDEvent=}12
@16@0:4Q8
@"BKSHIDEventKeyboardDescriptor"
@"<BKKeyboardManagerDelegate>"
@"NSSet"
v12@0:4^{?=ii{CGPoint=ff}{CGPoint=ff}IQ^viiI[0C]}8
v16@0:4@8I12
v16@0:4^{__IOHIDEvent=}8I12
@16@0:4i8B12
v20@0:4@8i12B16
v20@0:4@"BKOrientationManager"8i12B16
v36@0:4@8d12f20f24f28r^{?=[8I]}32
v24@0:4@8B12B16r^{?=[8I]}20
v20@0:4@8B12r^{?=[8I]}16
v12@0:4^{__IOHIDEvent=}8
v20@0:4@8r^{?=[8I]}12@?16
@"NSLock"
@"BKAccelerometerClient"
@"BKOrientationManager"
v12@0:4@"BKAlternateSystemApp"8
v20@0:4@8Q12
v20@0:4@"BKAlternateSystemApp"8Q12
v24@0:4@8@12@?16@?20
v28@0:4@8i12B16@20@?24
@?8@0:4
@"BKAlternateSystemApp"
B12@0:4^{__CFString=}8
v16@0:4{CGSize=ff}8
v12@0:4^?8
^?8@0:4
{CGPoint=ff}16@0:4{CGPoint=ff}8
{CGPoint=ff}20@0:4{CGPoint=ff}8I16
@"NSDate"
B20@0:4f8f12f16
B24@0:4d8d16
v16@0:4@"BKSystemApplicationServer"8@"BKSystemApplication"12
v20@0:4@8@12@?16
v20@0:4@"BKSystemApplicationServer"8@"BKSystemApplication"12@?<v@?>16
v20@0:4@8@12@16
v20@0:4@"BKSystemApplicationServer"8@"BKSystemApplication"12@"NSSet"16
@"BKSystemApplicationServer"
@"BKSystemApplication"
@28@0:4I8@12@?16d20
@20@0:4I8@12@?16
@24@0:4d8@16@?20
v16@0:4f8B12
i16@0:4i8B12
@"PUIProgressWindow"
v16@0:4@"NSString"8@"NSError"12
v20@0:4@"NSString"8Q12
v12@0:4@"NSString"8
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@"NSXPCListener"
@"NSXPCConnection"
B20@0:4@8d12
B12@0:4^{?=[8I]}8
@"<BKSystemApplicationServerDelegate>"
v12@0:4@"NSSet"8
v20@0:4^{__IOHIDEvent=}8@12B16
v20@0:4^v8^{__CFString=}12^{__IOHIDService=}16
B12@0:4^i8
B12@0:4I8
v16@0:4I8i12
@"CMDeviceOrientationManager"
@12@0:4^{__IOHIDEventSystemConnection=}8
^{__IOHIDEventSystemConnection=}8@0:4
^{__IOHIDEventSystemConnection=}
@"BKDigitizerTouchStreamAggregate"
@12@0:4f8
@"BKFirstBootDetector"
B20@0:4^{?=[8I]}8@12^B16
B20@0:4^{?=[8I]}8@"NSString"12^B16
v20@0:4B8^{?=[8I]}12@16
v20@0:4B8^{?=[8I]}12@"NSString"16
@12@0:4^{__IOHIDEventSystem=}8
^{__IOHIDEventSystemConnection=}12@0:4I8
^{__IOHIDEventSystemConnection=}12@0:4@8
v12@0:4^{__IOHIDEventSystemConnection=}8
^{__IOHIDEventSystem=}
^{__CFDictionary=}
v20@0:4@8@12i16
@20@0:4@8@12B16
@20@0:4@8i12@?16
@"BKEventFocusManagerServer"
i16@0:4@8@12
@24@0:4@8@12@16@20
@"CAWindowServer"
@"BKBacklightManager"
@16@0:4@?8@?12
v16@0:4@8@?12
v20@0:4@8@?12@?16
v12@0:4^{__IOHIDService=}8
@"BKBootUIOverlayVendor"
@"BKDisplayRenderOverlayManager"
@"BKDisplayRenderOverlay"
^{?=^{?}^{?}^{?}C[300{?=IIC}]^{BKDelayedEventClient}Id^{?}@^{BKPendingUpdateEvent}}12@0:4@8
@"BKDigitizerArbiterInfo"
@16@0:4@8B12
^{?=^{?}^{?}^{?}C[300{?=IIC}]^{BKDelayedEventClient}Id^{?}@^{BKPendingUpdateEvent}}16@0:4@8B12
I16@0:4@8@12
v12@0:4@"BKSTouchDeliveryPolicy"8
@"<NSSecureCoding>"20@0:4@"NSXPCConnection"8@"NSXPCCoder"12@16
v20@0:4@8@12B16
v20@0:4@"NSXPCConnection"8@"NSInvocation"12B16
@16@0:4^I8i12
B20@0:4I8d12
@"BKSTouchDeliveryPolicy"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleIdentifier</key>
<string>com.apple.backboardd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string></string>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.global-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.RootedSimulatorPath</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.backboardd</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.backboardd</string>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.gasgauge.user-access-device</key>
<true/>
<key>com.apple.hid.system.user-access-service</key>
<true/>
<key>com.apple.private.aea.haptics.user-access</key>
<true/>
<key>com.apple.private.allow-explicit-graphics-priority</key>
<true/>
<key>com.apple.private.cecd.control</key>
<true/>
<key>com.apple.private.cecd.observer</key>
<true/>
<key>com.apple.private.graphics-restart-no-kill</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.hid.client.event-filter</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.hid.manager.client</key>
<true/>
<key>com.apple.private.ubiquity-kvstore-access</key>
<array>
<string>com.apple.springboard</string>
<string>com.apple.Accessibility</string>
<string>com.apple.Accessibility.SwitchControl</string>
<string>com.apple.Accessibility.TouchAccommodations</string>
<string>com.apple.AssistiveTouch</string>
<string>com.apple.HearingAids</string>
<string>com.apple.SpeakSelection</string>
<string>com.apple.VoiceOverTouch</string>
<string>com.apple.ZoomTouch</string>
</array>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.backlightd</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.spd.anypidmonitoring</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.springboard</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
