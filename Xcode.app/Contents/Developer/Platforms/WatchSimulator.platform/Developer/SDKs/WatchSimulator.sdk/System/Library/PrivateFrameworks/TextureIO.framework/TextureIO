allocWithZone:
init
copyWithZone:
cubemapFromVerticallyStackedImage
setCubemapFromVerticallyStackedImage:
originOperation
setOriginOperation:
colorSpaceHandling
setColorSpaceHandling:
multiplyAlpha
setMultiplyAlpha:
_cubemapFromVerticallyStackedImage
_originOperation
_colorSpaceHandling
_multiplyAlpha
bytes
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
initForBuffer:withBytes:
.cxx_destruct
_bytes
_buffer
alloc
initWithBytes:length:
dealloc
initWithData:zone:
initWithLength:
mutableBytes
_data
newBufferWithLength:
newBufferWithBytesNoCopy:length:deallocNotification:error:
imageData
setImageData:
imageOrientation
setImageOrientation:
imageHasAlpha
setImageHasAlpha:
numArrayElements
setNumArrayElements:
numFaces
setNumFaces:
numMipmapLevels
setNumMipmapLevels:
width
setWidth:
height
setHeight:
depth
setDepth:
sampleCount
setSampleCount:
bytesPerRow
setBytesPerRow:
bitsPerPixel
setBitsPerPixel:
blockWidth
setBlockWidth:
blockHeight
setBlockHeight:
numPixelComponents
setNumPixelComponents:
pixelFormatIsCompressed
setPixelFormatIsCompressed:
pixelFormat
setPixelFormat:
_imageData
_imageOrientation
_imageHasAlpha
_numArrayElements
_numFaces
_numMipmapLevels
_width
_height
_depth
_sampleCount
_bytesPerRow
_bitsPerPixel
_blockWidth
_blockHeight
_numPixelComponents
_pixelFormatIsCompressed
_pixelFormat
dimensions
newImageFromSourceImage:scaledDimensions:bufferAllocattor:filter:error:
newImageFromSourceImage:bufferAllocattor:filter:error:
isCompressed:
packedMemoryLayoutForFormat:dimensions:
buffer
offset
newImageFromSourceImage:newPixelFormat:bufferAllocator:multiplyAlpha:gammaDegamma:error:
alphaInfo
initWithDimensions:pixelFormat:alphaInfo:bytesPerRow:bytesPerImage:buffer:offset:
dictionaryWithObjects:forKeys:count:
initWithDictionary:
mipmapOption
setObject:forKeyedSubscript:
initWithString:
cubemap
initWithFormat:
appendString:
baseFileAttributes
fileFormat
mipmapLevels
objectAtIndexedSubscript:
elements
faces
initWithImage:dimensions:pixelFormat:alphaInfo:
initFileURLWithPath:isDirectory:
exportImage:url:uttype:error:
addObject:
absoluteString
defaultManager
fileExistsAtPath:isDirectory:
initWithFileAtPath:
open
JSONObjectWithStream:options:error:
close
objectForKeyedSubscript:
count
initWithCapacity:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
interpretation
removeObjectForKey:
origin
countByEnumeratingWithState:objects:count:
idiom
graphicsFeatureSet
memory
displayColorSpace
scaleFactor
setString:
exportMipmapSet:face:directoryPath:textureConfig:error:
stringByReplacingOccurrencesOfString:withString:
fileURLWithPath:
exportTexture:toXCAssetWithName:setAttributes:textureConfigList:location:error:
numberWithInt:
initToFileAtPath:append:
writeJSONObject:toStream:options:error:
dictionaryWithObject:forKey:
initWithDomain:code:userInfo:
provideImageInfoAtLevel:element:face:
bytesPerImage
deferredProvide
initWithBytesPerRow:bytesPerImage:buffer:offset:
initAsLevel:element:face:dataSourceProvider:
error
_offset
_bytesPerImage
_error
_face
_element
_level
_dataSourceProvider
initWithDimensions:pixelFormat:alphaInfo:bufferAllocator:
setObject:atIndexedSubscript:
initAsLevel:element:cubemap:dataSourceProvider:
initAsLevel:element:dimensions:pixelFormat:alphaInfo:cubemap:bufferAllocator:
setImage:atFace:
_faces
initAsLevel:arrayLength:cubemap:dataSourceProvider:
initAsLevel:dimensions:pixelFormat:alphaInfo:arrayLength:cubemap:bufferAllocator:
setImage:atElement:atFace:
_elements
provideTextureInfo
mipmapLevelCount
arrayLength
initWithURL:bufferAllocator:options:error:
initWithDataSourceProvider:
newImageFromSourceImage:newPixelFormat:bufferAllocator:gammaDegamma:error:
initWithContentsOfURL:bufferAllocator:options:error:
initWithDimensions:pixelFormat:alphaInfo:mipmapLevelCount:arrayLength:cubemap:bufferAllocator:
initWithData:bufferAllocator:options:error:
exportToXCAssetWithName:setAttributes:textureConfigList:location:error:
exportToURL:error:
reformat:gammaDegamma:bufferAllocator:error:
generateMipmapsForRange:filter:error:
copyWithPixelFormat:options:bufferAllocator:
_bufferAllocator
_mipmapLevels
_dimensions
_cubemap
_alphaInfo
signalLoaded
info
setInfo:
_infoLoaded
_info
initAsCubemap:
initWithArrayLength:cubemap:
initWithMipmapLevelCount:arrayLength:cubemap:
mipmaps
_mipmaps
checkResourceIsReachableAndReturnError:
lastPathComponent
stringWithFormat:
initWithContentsOfURL:options:error:
_parseData:bufferAllocator:options:error:
isKTXFile:
_determineFileType:
parseData:bufferAllocator:options:error:
textureInfo
parsedImageAtLevel:element:face:
_fileIOQueue
_parser
_textureInfo
setColorSpace:
colorSpace
setOrigin:
setFileFormat:
_colorSpace
_origin
_fileFormat
specifyAllFaces
setFace:
face
doesSpecifyAllFaces
level
setLevel:
objectEnumerator
nextObject
removeObject:
addFileAttributesForLevel:
addFileAttributesForLevel:face:
addFileAttributesForLevel:withOrigin:fileFormat:colorSpace:
addFileAttributesForLevel:face:withOrigin:fileFormat:colorSpace:
setBaseFileAttributes:
fileAttributesList
setMipmapOption:
setMemory:
setGraphicsFeatureSet:
setIdiom:
setDisplayColorSpace:
setScaleFactor:
_baseFileAttributes
_fileAttributesList
_mipmapOption
_memory
_graphicsFeatureSet
_idiom
_displayColorSpace
_scaleFactor
setInterpretation:
_interpretation
integerValue
decodeCGImage:desiredPixelFormat:bufferAllocator:options:error:
setBytesPerImage:
setBuffer:
setOffset:
setAlphaInfo:
setDimensions:
setCubemap:
setMipmapLevelCount:
setArrayLength:
decodeCGImageNonIndexed:desiredPixelFormat:bufferAllocator:options:error:
determineColorSpaceClass:displayGamut:options:
_imageInfo
setError:
_mipmapLevelCount
_arrayLength
pixelBytes:
isInteger:
isFloat:
isSRGB:
hasAlpha:
isGammaEncoded:
componentsPerPixel:
initializeSizedFormatTable
getBytes:length:
numberWithBool:
arrayWithObjects:count:
numberWithUnsignedInteger:
determineFormatFromType:format:internalFormat:baseInternalFormat:options:
parseImageDataWithOptions:bufferAllocator:
numberWithUnsignedInt:
objectForKey:
objectAtIndex:
boolValue
unsignedIntegerValue
_fileIsLittleEndian
_type
_typeSize
_format
_internalFormat
_baseInternalFormat
_bytesOfKeyValueData
_isCompressed
_internalSizedFormatLookup
_deferredTextureInfo
_parserQueue
_shouldFlipVertically
newPixelFormatSetForCGImage:displayGamut:options:
initWithImage:dimensions:pixelFormat:
initWithCGImage:bufferAllocator:options:error:
initWithCGImage:pixelFormat:bufferAllocator:options:error:
TXROptions
NSCopying
TXRDefaultBufferMap
TXRBufferMap
NSObject
TXRDefaultBuffer
TXRBuffer
TXRDefaultBufferAllocator
TXRBufferAllocator
TXRParserBase
TXRDataScaler
TXRXCAssetParser
TXRImage
TXRArrayElement
TXRMipmapLevel
TXRTexture
TXRDeferredImageInfo
TXRDeferredElementInfo
TXRDeferredMipmapInfo
TXRDeferredTextureInfo
TXRFileDataSourceProvider
TXRDataSourceProvider
TXRXCFileAttributes
TXRXCMipFileAttributes
TXRXCTextureConfig
TXRXCSetAttributes
TXRParserImageIO
TXRParser
TXRImageInfo
TXRTextureInfo
TXRPixelFormatInfo
TXRParserKTX
TXRDataConverter
TXRImageIndependent
@12@0:4^{_NSZone=}8
B8@0:4
v12@0:4B8
I8@0:4
v12@0:4I8
^v8@0:4
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
@16@0:4@8^v12
v8@0:4
@"TXRDefaultBuffer"
@"<TXRBufferMap>"8@0:4
@16@0:4@8^{_NSZone=}12
@16@0:4^v8I12
@12@0:4I8
@"NSMutableData"
@"<TXRBuffer>"12@0:4I8
@24@0:4^v8I12@?16^@20
@"<TXRBuffer>"24@0:4^v8I12@?<v@?^vI>16^@20
v12@0:4@8
@"NSData"
@24@0:4@8@12I16^@20
@40@0:4@812@28I32^@36
B28@0:4@8I12@16@20^@24
@32@0:4@8@12@16@20@24^@28
@24@0:4I8I12@16I20
@24@0:4I8I12I16@20
@"<TXRBuffer>"
@"NSError"
@"<TXRDataSourceProvider>"
@24@0:4I8I12B16@20
@48@0:4I8I1216I32I36B40@44
v16@0:4@8I12
@"NSMutableArray"
@48@0:4I812I28I32I36B40@44
v20@0:4@8I12I16
@12@0:4@8
@24@0:4@8@12@16^@20
@48@0:48I24I28I32I36B40@44
@28@0:4@8@12@16@20^@24
v16@0:4@8^@12
v24@0:4I8B12@16^@20
v24@0:4{_NSRange=II}8I16^@20
@20@0:4I8@12@16
8@0:4
@"<TXRBufferAllocator>"
@"NSObject<OS_dispatch_semaphore>"
@"TXRImageInfo"
@12@0:4B8
@16@0:4I8B12
@20@0:4I8I12B16
@"TXRTextureInfo"
@20@0:4I8I12I16
@"TXRImageInfo"20@0:4I8I12I16
@"TXRTextureInfo"8@0:4
I12@0:4@8
v24@0:4@8@12@16^@20
@"NSObject<OS_dispatch_queue>"
@"<TXRParser>"
v12@0:4^{CGColorSpace=}8
^{CGColorSpace=}8@0:4
^{CGColorSpace=}
v16@0:4I8I12
v24@0:4I8I12I16^{CGColorSpace=}20
v28@0:4I8I12I16I20^{CGColorSpace=}24
@"TXRXCFileAttributes"
@"NSMutableSet"
i20@0:4^{CGImage=}8I12@16
@28@0:4^{CGImage=}8I12@16@20^@24
B24@0:4@8@12^{__CFString=}16^@20
B24@0:4@8@12@16^@20
B24@0:4@"NSData"8@"<TXRBufferAllocator>"12@"TXROptions"16^@20
v24@0:48
C12@0:4I8
B12@0:4I8
{TXRImageMemoryLayout=II}28@0:4I812
v16@0:4@8@12
B28@0:4I8I12I16I20@24
@"NSDictionary"
@"TXRDeferredTextureInfo"
@32@0:4@8I12@16B20B24^@28
@28@0:4@8I12@16B20^@24
@20@0:4^{CGImage=}8I12@16
@36@0:4@812I28I32
@32@0:4@812I28
@48@0:48I24I28I32I36@40I44
@24@0:4^{CGImage=}8@12@16^@20
@36@0:48I24I28@32
cubemapFromVerticallyStackedImage
TB,N,V_cubemapFromVerticallyStackedImage
originOperation
TI,N,V_originOperation
colorSpaceHandling
TI,N,V_colorSpaceHandling
multiplyAlpha
TB,N,V_multiplyAlpha
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
bytes
T^v,R,N
imageData
T@"NSData",&,N,V_imageData
imageOrientation
TI,N,V_imageOrientation
imageHasAlpha
TB,N,V_imageHasAlpha
numArrayElements
TI,N,V_numArrayElements
numFaces
TI,N,V_numFaces
numMipmapLevels
TI,N,V_numMipmapLevels
width
TI,N,V_width
height
TI,N,V_height
depth
TI,N,V_depth
sampleCount
TI,N,V_sampleCount
bytesPerRow
TI,N,V_bytesPerRow
bitsPerPixel
TI,N,V_bitsPerPixel
blockWidth
TI,N,V_blockWidth
blockHeight
TI,N,V_blockHeight
numPixelComponents
TI,N,V_numPixelComponents
pixelFormatIsCompressed
TI,N,V_pixelFormatIsCompressed
pixelFormat
TI,N,V_pixelFormat
Unsupported filter
Mipmap Generation of 3D textures not suppoted
Cannot scale image with pixel format
newScaledImageWithLancosFilter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-1.34.2/Source/TXRDataScaler.m
!"Unrecognized scale filter"
!"VImage scale error"
newScaledImageWithBoxFilter
!"TODO:Box filter needs implementation"
info
levels
level-mode
fixed
+[TXRXCAssetParser exportMipmapSet:face:directoryPath:textureConfig:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-1.34.2/Source/TXRXCAssetParser.m
!"TODO: Iterate through MipFileAttributes list"
!"TODO: Iterate through all mipmaps of given face output images and write stuff"
none
level-0
 face-%d 
.png
.jpg
filename
mipmap-level
base
%@/%@
properties
%@/%@.cubetextureset
%@/%@.textureset
%@/Contents.json
Unexpected format of Contents.json
Value of properties key is not an object
textures
Value of textures key is not an array
interpretation
data
origin
bottom-left
Universal
universal
iPhone
iphone
iPad
ipad
Apple TV
CarPlay
Metal 1v2
metal1v2
Metal 2v2
metal2v2
Metal 3v1
metal3v1
Metal 3v2
metal3v2
1 GB
2 GB
3 GB
4 GB
sRGB
r-8-unorm
rg-8-unorm
rgba-8-unorm
r-16-float
rg-16-float
rgba-16-float
rgb-10-extended-range-sRGB
astc-4x4
astc-4x4-sRGB
astc-8x8
astc-8x8-sRGB
idiom
+[TXRXCAssetParser exportTexture:toXCAssetWithName:setAttributes:textureConfigList:location:error:]
!"Invalid face index"
cube-face
memory
graphics-feature-set
color-space
scale
pixel-format
.mipmapset
version
author
TextureIO
TXRErrorDomain
TXRErrorKey
offset
TI,R,V_offset
buffer
T@"<TXRBuffer>",R,V_buffer
bytesPerImage
error
T@"NSError",R,V_error
faces
T@"NSArray",R,V_faces
elements
T@"NSArray",R
-[TXRTexture initWithData:bufferAllocator:options:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-1.34.2/Source/TXRTexture.m
!"TODO: Must Implement"
-[TXRTexture exportToURL:error:]
Range Location must be an index of an existing mipmap level
-[TXRTexture copyWithPixelFormat:options:bufferAllocator:]
dimensions
T,R,N,V_dimensions
cubemap
TB,R,N,V_cubemap
TI,R,N,V_pixelFormat
alphaInfo
TI,R,N,V_alphaInfo
mipmapLevels
T@"NSArray",R,N,V_mipmapLevels
T@"TXRImageInfo",&,N,V_info
T@"NSMutableArray",R,N,V_faces
T@"NSMutableArray",R,N,V_elements
T@"TXRTextureInfo",&,N,V_info
mipmaps
T@"NSMutableArray",R,N,V_mipmaps
Could not find resource %@ at specified location.
com.apple.txrtextureloaderfileio
/BuildRoot/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-1.34.2/Source/TXRFileDataSourceProvider.m
!"TODO: Must be able to return error to dipatching thread"
v4@?0
__72-[TXRFileDataSourceProvider initWithData:bufferAllocator:options:error:]_block_invoke
-[TXRFileDataSourceProvider _parseData:bufferAllocator:options:error:]
!"Unhandled fileType"
colorSpace
T^{CGColorSpace=},N
TI,N,V_origin
fileFormat
TI,N,V_fileFormat
level
TI,N,V_level
face
TI,N
baseFileAttributes
T@"TXRXCFileAttributes",&,N,V_baseFileAttributes
fileAttributesList
T@"NSSet",R,N,V_fileAttributesList
mipmapOption
TI,N,V_mipmapOption
TI,N,V_memory
graphicsFeatureSet
TI,N,V_graphicsFeatureSet
TI,N,V_idiom
displayColorSpace
TI,N,V_displayColorSpace
scaleFactor
TI,N,V_scaleFactor
TI,N,V_interpretation
RGBFloat32ToShareExponent32
/BuildRoot/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-1.34.2/Source/TXRFloatConvert.h
exp_shared <= RGB9E5_MAX_VALID_BIASED_EXP
maxm <= MAX_RGB9E5_MANTISSA
rm <= MAX_RGB9E5_MANTISSA
gm <= MAX_RGB9E5_MANTISSA
bm <= MAX_RGB9E5_MANTISSA
Image decoding failed
+[TXRParserImageIO determineColorSpaceClass:displayGamut:options:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-1.34.2/Source/TXRParserImageIO.m
!"Unhandled color space handling option"
Could retrieve image data from CGImageRef
+[TXRParserImageIO decodeCGImageNonIndexed:desiredPixelFormat:bufferAllocator:options:error:]
!"Unhandled vertical flipping case for 1 component pixels"
!"Unhandled vertical flipping case for 2 component pixels"
!"TODO: must handle vertical flipping for 3 component pixels"
!"Unhandled vertical flipping case for 4 component pixels"
Unable to vertically flip image
!"Unhandled horizontal flipping case for 1 component pixels"
!"Unhandled horizontal flipping case for 2 component pixels"
!"TODO: must handle horizontal flipping for 3 component pixels"
!"Unhandled horizontal flipping case for 4 component pixels"
Unable to horizontally flip image
!"Unhandled rotation case for 1 component pixels"
!"Unhandled rotation case for 2 component pixels"
!"TODO: must handle rotation for 3 component pixels"
!"Unhandled rotation case for 4 component pixels"
+[TXRParserImageIO exportImage:url:uttype:error:]
image.pixelFormat == TXRPixelFormatRGBA8Unorm
textureInfo
T@"TXRTextureInfo",R,N
T@"TXRTextureInfo",R,N,V_textureInfo
pixelBytes
/BuildRoot/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-1.34.2/Source/TXRFormatInfoFuncs.h
!"Unhandled or compressed format"
componentsPerPixel
!"Unhandled format"
TI,N,V_offset
T@"<TXRBuffer>",&,N,V_buffer
TI,N,V_bytesPerImage
T@"NSError",&,V_error
TI,N,V_alphaInfo
T,N,V_dimensions
mipmapLevelCount
TI,N,V_mipmapLevelCount
arrayLength
TI,N,V_arrayLength
TB,N,V_cubemap
compressedFormatInfo
!"Unhandled compressed format"
Could not determine format from KTX header
com.apple.txrtextureloaderparser
+[TXRDataConverter newImageFromSourceImage:newPixelFormat:bufferAllocator:multiplyAlpha:gammaDegamma:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-1.34.2/Source/TXRDataConverter.m
!"No support for decompression"
!"No support for compression"
convertToFloat4Slow
!"Unhandled Format"
convertFromFloat4Slow
)@)\
?333333
@"R
KTX 11
@(#)PROGRAM:TextureIO  PROJECT:TextureIO-1.34
