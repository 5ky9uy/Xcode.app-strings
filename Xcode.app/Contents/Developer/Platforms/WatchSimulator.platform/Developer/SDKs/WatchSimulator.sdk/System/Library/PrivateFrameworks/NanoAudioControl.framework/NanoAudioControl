%@ %@
muted
category
hasMuted
TB,N
TB,N,V_muted
hasCategory
TB,R,N
T@"NSString",&,N,V_category
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
pickedRoute
T@"NACAudioRoute",R,N
availableAudioRoutes
T@"NSArray",R,N
delegate
T@"<NACRoutingControllerDelegate>",W,N
T@"<NACRoutingControllerDelegate>",W,N,V_delegate
enabled
hasEnabled
TB,N,V_enabled
volumeWarningEnabled
hasVolumeWarningEnabled
TB,N,V_volumeWarningEnabled
com.apple.NanoAudioControl
NACVolumeValueDidChangeNotification
NACVolumeControlAvailabilityDidChangeNotification
NACMutedStateDidChangeNotificaton
NACSystemMutedStateDidChangeNotification
NACProminentHapticStateDidChangeNotification
NACEULimitDidChangeNotification
NACHapticIntensityDidChangeNotification
NACVolumeWarningDidChangeNotification
NACAudioRoutesDidChangeNotification
Audio/Video
Current
NanoMusicCore
NanoMediaRemote
NanoAudioControl
NanoMusicSync
v4@?0
com.apple.nanomusic
com.apple.NanoAudioControl.XPC
v8@?0@"NSError"4
NACMessageTypeSetVolumeValue
NACMessageTypeVolumeDidChange
NACMessageTypeBeginObservingVolume
NACMessageTypeEndObservingVolume
NACMessageTypeVolumeControlAvailabilityDidChange
NACMessageTypeMutedStateDidChange
NACMessageTypeSetMuted
NACMessageTypeBeginObservingAudioRoutes
NACMessageTypeEndObservingAudioRoutes
NACMessageTypePickAudioRoute
NACMessageTypeAudioRoutesDidChange
NACMessageTypeHapticIntensityDidChange
NACMessageTypeSetHapticIntensity
NACMessageTypeEUVolumeLimitDidChange
NACMessageTypeVolumeWarningDidChange
NACMessageTypeVolumeObservationCancelled
NACMessageTypeRouteObservationCancelled
NACMessageTypeSystemMutedStateDidChange
NACMessageTypeSetSystemMuted
NACMessageTypeProminentHapticStateDidChange
NACMessageTypeSetProminentHapticEnabled
RingtonePreview
volumeControlAvailable
TB,N,GisVolumeControlAvailable,V_volumeControlAvailable
TB,N,GisVolumeWarningEnabled,V_volumeWarningEnabled
TB,N,GisMuted,V_muted
EUVolumeLimit
Tf,N,V_EUVolumeLimit
throttler
T@"NACEventThrottler",&,N,V_throttler
volumeController
T@"MPVolumeController",&,N,V_volumeController
routingController
T@"MPAVRoutingController",&,N,V_routingController
runAssertion
T@"NACRunAssertion",&,N,V_runAssertion
message
T@"PBCodable",&,N,V_message
type
Ti,N,V_type
timeout
Td,N,V_timeout
queueOne
T@"NSString",C,N,V_queueOne
com.apple.private.alloy.audiocontrol.music
com.apple.nanoaudiocontrol.ids.server.dispatch
v8@?0@4
v8@?0i4
v16@?0@"MPAVRoute"4I8^B12
RequestedVolume
ForceVolumeWarning
com.apple.springboard.ringerstate
hasVolumeControlAvailable
TB,N,V_volumeControlAvailable
identifier
hasIdentifier
T@"NSString",&,N,V_identifier
volumeValue
Tf,N,V_volumeValue
audioRoutes
T@"NSArray",&,N,V_audioRoutes
deferredAudioRoutes
T@"NSArray",&,N,V_deferredAudioRoutes
observers
T@"NSMutableSet",&,N,V_observers
timestamp
Td,N,V_timestamp
com.apple.NanoAudioControl.Preview
com.apple.nanoaudiocontrol.NACXPCServer
VolumeRecords
HapticIntensity
SystemMutedState
ProminentHapticState
v16@?0@"NSString"4@"_NACAudioRoutesRecord"8^B12
v8@?0@"NSArray"4
T@"NACAudioRoute",R,N,V_pickedRoute
T@"NSArray",R,N,V_availableAudioRoutes
v8@?0f4
v8@?0B4
T@"<NACVolumeControllerDelegate>",W,N
TB,R,N,GisVolumeControlAvailable
TB,R,N,GisVolumeWarningEnabled
TB,R,N,GisMuted
Tf,R,N
hapticIntensity
Tf,N
systemMuted
TB,N,GisSystemMuted
prominentHapticEnabled
TB,N,GisProminentHapticEnabled
T@"<NACVolumeControllerDelegate>",W,N,V_delegate
TB,R,N,GisVolumeControlAvailable,V_volumeControlAvailable
TB,R,N,GisVolumeWarningEnabled,V_volumeWarningEnabled
TB,R,N,GisMuted,V_muted
Tf,R,N,V_EUVolumeLimit
TB,N,GisSystemMuted,V_systemMuted
TB,N,GisProminentHapticEnabled,V_prominentHapticEnabled
T@"NSMutableArray",&,N,V_audioRoutes
com.apple.nanoaudiocontrol.ids.client.outgoing
com.apple.nanoaudiocontrol.ids.client.dispatch
T@"<NACIDSClientDelegate>",W,N,V_delegate
uniqueIdentifier
routeName
routeType
routeSubtype
supportsVolumeControl
picked
hasUniqueIdentifier
T@"NSString",&,N,V_uniqueIdentifier
hasRouteName
T@"NSString",&,N,V_routeName
hasRouteType
Ti,N,V_routeType
hasRouteSubtype
Ti,N,V_routeSubtype
hasSupportsVolumeControl
TB,N,V_supportsVolumeControl
hasPicked
TB,N,V_picked
Unknown
Audio
Video
WirelessDisplay
(unknown: %i)
Speaker
Headphone
Headset
Receiver
LineOut
PersistentLineOut
DisplayPort
AirTunes
HDMI
BluetoothHeadphones
BluetoothHeadset
BluetoothLE
SPDIF
CarAudio
eventBlock
T@?,C,N,V_eventBlock
minimumDelay
Td,N,V_minimumDelay
value
T@,&,N,V_value
v8@?0@"NSNumber"4
DemoVolume
Tf,N,V_hapticIntensity
intensity
hasIntensity
Tf,N,V_intensity
hasEUVolumeLimit
eUVolumeLimit
Tf,N,V_eUVolumeLimit
%@ - %@
T@"NSString",R,N,V_uniqueIdentifier
T@"NSString",R,N,V_routeName
Ti,R,N,V_routeType
Ti,R,N,V_routeSubtype
TB,R,N,V_supportsVolumeControl
TB,R,N,GisPicked,V_picked
VolumeValue-%@
VolumeControlAvailability-%@
MutedState-%@
EUVolumeLimit-%@
VolumeWarning-%@
AudioRoutes-%@
Haptic
RouteObservationCancelled-%@
VolumeObservationCancelled
hasVolumeValue
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithBool:
setObject:forKey:
setCategory:
class
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
setMuted:
setHasMuted:
hasMuted
hasCategory
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
muted
category
_category
_muted
_has
setDiscoveryMode:
setDelegate:
availableRoutes
countByEnumeratingWithState:objects:count:
audioRouteWithMPAVRoute:
isEqualToAudioRoute:
pickRoute:
pickedRoute
addObject:
routingControllerDidUpdateAvailableRoutes:
routingControllerFailedToPickRoute:
respondsToSelector:
routingControllerAvailableRoutesDidChange:
routingController:pickedRouteDidChange:
routingControllerExternalScreenTypeDidChange:
routingController:didFailToPickRouteWithError:
routingControllerDidPauseFromActiveRouteChange:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
initWithAudioCategory:
beginObservingRoutes
endObservingRoutes
pickAudioRoute:
availableAudioRoutes
delegate
_routingController
_audioCategory
_delegate
setEnabled:
setHasEnabled:
hasEnabled
enabled
_enabled
alloc
localVolumeControllerWithAudioCategory:
remoteVolumeControllerWithAudioCategory:
proxyVolumeControllerWithAudioCategory:
demoVolumeControllerWithAudioCategory:
setVolumeWarningEnabled:
setHasVolumeWarningEnabled:
hasVolumeWarningEnabled
volumeWarningEnabled
_volumeWarningEnabled
_createConnection
beginObservingVolume
removeObject:
beginObservingAudioRoutesForCategory:
_proxy
endObservingVolume
volumeValueForCategory:result:
volumeControlAvailabilityForCategory:result:
mutedStateForCategory:result:
hapticIntensity:
prominentHapticEnabled:
systemMutedState:
EULimitForCategory:result:
volumeWarningForCategory:result:
setVolumeValue:category:
setMuted:category:
setHapticIntensity:
setProminentHapticEnabled:
setSystemMuted:
audioRoutesForCategory:result:
containsObject:
endObservingAudioRoutesForCategory:
pickAudioRouteWithIdentifier:category:
playAudioAndHapticPreview
playProminentHapticPreview
setWithObjects:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
initWithMachServiceName:options:
setRemoteObjectInterface:
_resumeVolumeObservingIfNecessary
_resumeRouteObservingIfNecessary
setInterruptionHandler:
invalidate
setInvalidationHandler:
resume
localizedDescription
remoteObjectProxyWithErrorHandler:
sharedClient
_xpcConnection
_xpcConnectionQueue
_isObservingVolume
_routeObservingCategories
arrayWithObjects:count:
initWithVolumeAudioCategories:
beginObservingHapticIntensity
beginObservingSystemMutedState
beginObservingProminentHapticState
gizmoServer
companionServer
_idsServer
isVolumeControlAvailable
setVolumeControlAvailable:
isVolumeWarningEnabled
isMuted
EUVolumeLimit
setEUVolumeLimit:
throttler
setThrottler:
volumeController
setVolumeController:
routingController
setRoutingController:
_volumeControlAvailable
_EUVolumeLimit
_throttler
_volumeController
runAssertion
setRunAssertion:
_runAssertion
message
setMessage:
type
setType:
timeout
setTimeout:
queueOne
setQueueOne:
_message
_type
_queueOne
_timeout
initWithService:
_handleSetVolume:
setProtobufAction:forIncomingRequestsOfType:
_handleSetMuted:
_handleSetHapticIntensity:
_handleBeginObservingVolume:
_handleEndObservingVolume:
_handleBeginObservingAudioRoutes:
_handleEndObservingAudioRoutes:
_handlePickAudioRoute:
_handleSetSystemMuted:
_handleSetProminentHapticEnabled:
_beginObservingVolume
addDelegate:queue:
defaultCenter
removeObserver:
dealloc
_hasRequestedVolumeAtLeastOnce
setVolumeAudioCategory:
setMinimumDelay:
floatValue
_sendVolumeValue:category:
setEventBlock:
setObject:forKeyedSubscript:
volumeValue
volumeControlIsAvailable
_sendVolumeControlAvailability:category:
_sendVolumeWarningEnabled:category:
_sendEUVolumeLimit:category:
_sendHapticIntensity:
_hapticIntensityDidChangeNotification:
addObserver:selector:name:object:
_sendCurrentHapticIntensityValue
_updateSystemMutedState
_sendSystemMutedState:
_updateProminentHapticState
_watchPrefersSalientToneAndVibration
_sendProminentHapticState:
_setRequestedVolumeAtLeastOnce
_sendCurrentObservingValues
_cancelVolumeObservation
objectForKeyedSubscript:
sharedAVSystemController
getVibeIntensity:
data
initWithData:
allowUserToExceedEUVolumeLimit
setVolumeValue:
isEqualToString:
server
_setWatchPrefersSalientToneAndVibration:
intensity
setVibeIntensityTo:
_cancelRouteObservationForCategory:
removeObjectForKey:
identifier
uniqueIdentifier
volumeAudioCategory
numberWithFloat:
setValue:
_sendMessage:type:timeout:queueOne:retry:
volumeWarningState
routeName
isPicked
setSupportsVolumeControl:
enumerateObjectsUsingBlock:
buffersFromAudioRoutes:
mutableCopy
setAudioRoutes:
userInfo
_shouldForceVolumeWarning
setIntensity:
initWithProtobufData:type:isResponse:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
initWithDictionary:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
length
code
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
volumeController:volumeValueDidChange:
volumeController:volumeWarningStateDidChange:
volumeController:mutedStateDidChange:
volumeController:EUVolumeLimitDidChange:
volumeController:EUVolumeLimitEnforcedDidChange:
_hapticThrottler
_volumeRunAssertion
_volumeObservers
_routesObservers
_messageRecords
_volumeAudioCategories
_idsService
_idsDispatchQueue
_shouldObserveHapticIntensity
_shouldObserveSystemMutedState
_isSystemMuted
_systemMuteToken
_shouldObserveProminentHapticState
_isProminentHapticEnabled
setHasVolumeControlAvailable:
hasVolumeControlAvailable
volumeControlAvailable
setIdentifier:
hasIdentifier
_identifier
decodeFloatForKey:
decodeBoolForKey:
encodeFloat:forKey:
encodeBool:forKey:
encodeWithCoder:
initWithCoder:
_volumeValue
audioRoutes
deferredAudioRoutes
setDeferredAudioRoutes:
observers
setObservers:
timestamp
setTimestamp:
_audioRoutes
_deferredAudioRoutes
_observers
_timestamp
initWithType:
initWithDomain:
synchronize
_cachedVolumeRecords
_cachedHapticIntensity
_cachedSystemMutedState
_cachedProminentHapticState
initWithMachServiceName:
setExportedInterface:
setExportedObject:
_cleanupConnection:
currentConnection
beginObservingVolumeForConnection:
count
_endObservingVolumeForConnection:
_volumeRecordForCategory:
_audioRoutesRecordForCategory:
timeIntervalSinceReferenceDate
_endObservingAudioRoutesForCategory:connection:
playWithCompletionHandler:targetQueue:
_persistVolumeRecords
_persistHapticIntensity
_persistProminentHapticState
_persistSystemMutedState
_scheduleDeferredAudioRoutesUpdate:category:
_updateAudioRoutes:category:
_cancelDeferredAudioRoutesUpdate
objectForKey:
unarchiveObjectWithData:
archivedDataWithRootObject:
boolForKey:
_routeObservationCategoriesForConnection:
enumerateKeysAndObjectsUsingBlock:
listener:shouldAcceptNewConnection:
client:volumeValue:didChangeForCategory:
client:volumeControlAvailable:didChangeForCategory:
client:mutedState:didChangeForCategory:
client:hapticIntensityDidChange:
client:EULimit:didChangeForCategory:
client:volumeWarningEnabled:didChangeForCategory:
client:audioRoutes:didChangeForCategory:
clientVolumeObservationCancelled:
client:routeObservationCancelledForCategory:
client:systemMutedStateDidChange:
client:prominentHapticStateDidChange:
audioAndHapticPreviewHasCompletedPlaying
_internalQueue
_audioAndHapticPreviewQueue
_domainAccessor
_volumeRecords
_audioRoutesRecords
_xpcListener
_idsClient
_hapticIntensity
_prominentHapticEnabled
_systemMutedState
_audioRouteDeferTimer
_alert
_audioAndHapticPreviewIsPlaying
_prominentHapticPreviewIsPlaying
_applicationDidBecomeActiveNotification:
_applicationWillResignActiveNotification:
_audioRoutesDidChange
audioRoutesFromBuffers:
_xpcClient
_isObserving
_availableAudioRoutes
_pickedRoute
_setVolumeValue:
_setHapticIntensity:
_volumeControlAvailabilityDidChange
_volumeValueDidChange
_mutedStateDidChange
_systemMutedStateDidChange
_prominentHapticStateDidChange
_hapticIntensityDidChange
_volumeWarningDidChange
_EUVolumeLimitDidChange
sharedApplication
applicationState
_cancelSetVolumeTimer
_volumeTimout
_scheduleTimeoutWithBlock:
_notifyDelegateVolumeChanged
_prominentHapticTimeout
_notifyDelegateProminentHapticStateChanged
_cancelSetProminentHapticTimer
_hapticTimeout
_notifyDelegateHapticChanged
_cancelSetHapticTimer
volumeControllerDidUpdateVolumeControlAvailibility:
volumeControllerDidUpdateMutedState:
_notifyDelegateSystemMutedStateChanged
volumeControllerDidUpdateEUVolumeLimit:
volumeControllerDidUpdateVolumeWarningEnabled:
volumeControllerDidUpdateVolumeValue:
volumeControllerDidUpdateHapticIntensity:
volumeControllerDidUpdateSystemMutedState:
volumeControllerDidUpdateProminentHapticState:
setVolumeValue:muted:overrideEULimit:
hapticIntensity
isSystemMuted
isProminentHapticEnabled
_volumeThrottler
_setVolumeTimer
_setHapticTimer
_setProminentHapticTimer
_lastReceivedVolumeValue
_lastRecievedHapticIntensity
_lastReceivedProminentHapticEnabled
_systemMuted
removeAllObjects
objectAtIndex:
initWithCapacity:
addAudioRoutes:
audioRoutesCount
clearAudioRoutes
audioRoutesAtIndex:
_handleVolumeValueDidChange:
_handleVolumeControlAvailabilityDidChange:
_handleMutedStateDidChange:
_handleHapticIntensityDidChange:
_handleEUVolumeLimitDidChange:
_handleVolumeWarningDidChange:
_handleAudioRoutesDidChange:
_handleVolumeObservationCancelled:
_handleRouteObservationCancelled:
_handleSystemMutedStatedDidChange:
_handleProminentHapticStateDidChange:
_sendMessage:type:timeout:queueOne:priority:
eUVolumeLimit
_idsOutgoingQueue
localRoutingControllerWithAudioCategory:
proxyRoutingControllerWithAudioCategory:
companionRoutingControllerWithAudioCategory:
setUniqueIdentifier:
setRouteName:
hasUniqueIdentifier
hasRouteName
routeType
setRouteType:
setHasRouteType:
hasRouteType
routeSubtype
setRouteSubtype:
setHasRouteSubtype:
hasRouteSubtype
setHasSupportsVolumeControl:
hasSupportsVolumeControl
setPicked:
setHasPicked:
hasPicked
supportsVolumeControl
picked
_routeName
_routeSubtype
_routeType
_uniqueIdentifier
_picked
_supportsVolumeControl
copy
_fire
cancel
eventBlock
minimumDelay
value
_lastUpdateTime
_timer
_eventBlock
_value
_minimumDelay
endObservingHapticIntensity
endObservingProminentHapticState
playPreview
_hapticIntensityDidChange:
removeObserver:name:object:
_volumeSetHistory
_persistVolumeValue:
_setNeedsVolumeReload
_volumeDictionary
_defaultsThrottler
setHasIntensity:
hasIntensity
_intensity
setHasEUVolumeLimit:
hasEUVolumeLimit
_eUVolumeLimit
_routeTypeFromMPAVRouteType:
avRouteDescription
initWithMPAVRoute:
_routeTypeFromRouteBufferType:
_routeSubtypeFromRouteBufferSubtype:
audioRouteFromBuffer:
buffer
_routeBufferTypeFromRouteType:
_routeBufferSubtypeFromMPAVRouteSubtype:
_routeBufferTypeFromMPAVRouteType:
setHasVolumeValue:
hasVolumeValue
NACMutedMessage
NSCopying
NACRoutingControllerLocal
MPAVRoutingControllerDelegate
NSObject
NACRoutingController
NACProminentHapticStateMessage
NACVolumeController
NACVolumeWarningMessage
NACCategoryMessage
NACXPCInterface
NACXPCClient
NACDaemonServer
_NACVolumeObserverRecord
_NACRoutesObserverRecord
_NACIDSMessageRecord
NACIDSServer
IDSServiceDelegate
MPVolumeControllerDelegate
NACVolumeControlAvailabilityMessage
NACPickAudioRouteMessage
_NACVolumeRecord
NSCoding
_NACAudioRoutesRecord
NACXPCServer
NSXPCListenerDelegate
NACIDSClientDelegate
NACRoutingControllerProxy
NACVolumeControllerProxy
NACAudioRoutesMessage
NACIDSClient
NACAudioRouteBuffer
NACRunAssertion
NACEventThrottler
NACVolumeControllerLocal
NACVolumeControllerDemo
NACHapticIntensityMessage
NACEUVolumeLimitMessage
NACAudioRoute
NACVolumeValueMessage
@12@0:4^{_NSZone=}8
v12@0:4B8
B8@0:4
@8@0:4
B12@0:4@8
v12@0:4@8
I8@0:4
v8@0:4
@"NSString"
{?="muted"b1}
v12@0:4@"MPAVRoutingController"8
v16@0:4@8@12
v16@0:4@"MPAVRoutingController"8@"MPAVRoute"12
v16@0:4@"MPAVRoutingController"8@"NSError"12
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
@12@0:4@8
@12@0:4@"NSString"8
v12@0:4@"NACAudioRoute"8
@"NACAudioRoute"8@0:4
@"NSArray"8@0:4
@"<NACRoutingControllerDelegate>"8@0:4
v12@0:4@"<NACRoutingControllerDelegate>"8
@"MPAVRoutingController"
@"<NACRoutingControllerDelegate>"
{?="enabled"b1}
{?="volumeWarningEnabled"b1}
v16@0:4@8@?12
v16@0:4@"NSString"8@?<v@?f>12
v16@0:4@"NSString"8@?<v@?B>12
v12@0:4@?8
v12@0:4@?<v@?f>8
v12@0:4@?<v@?B>8
v16@0:4f8@12
v16@0:4f8@"NSString"12
v16@0:4B8@12
v16@0:4B8@"NSString"12
v12@0:4f8
v16@0:4@"NSString"8@?<v@?@"NSArray">12
v12@0:4@"NSString"8
v16@0:4@"NSString"8@"NSString"12
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
@"NACIDSServer"
f8@0:4
@"NACEventThrottler"
@"MPVolumeController"
@"NACRunAssertion"
i8@0:4
v12@0:4i8
d8@0:4
v16@0:4d8
@"PBCodable"
v28@0:4@8@12@16@20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@8@12@16@20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@8@12@16B20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@8@12@16B20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@8@12@16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@"IDSService"8
v20@0:4@8@12@?16
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
v16@0:4@8f12
v16@0:4@"MPVolumeController"8f12
v16@0:4@8i12
v16@0:4@"MPVolumeController"8i12
v16@0:4@8B12
v16@0:4@"MPVolumeController"8B12
v32@0:4@8i12d16@24B28
@"NSMutableDictionary"
@"NSArray"
@"IDSService"
{?="volumeControlAvailable"b1}
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v20@0:4@8f12@16
v20@0:4@"NACIDSClient"8f12@"NSString"16
v20@0:4@8B12@16
v20@0:4@"NACIDSClient"8B12@"NSString"16
v16@0:4@"NACIDSClient"8f12
v20@0:4@8@12@16
v20@0:4@"NACIDSClient"8@"NSArray"12@"NSString"16
v12@0:4@"NACIDSClient"8
v16@0:4@"NACIDSClient"8@"NSString"12
v16@0:4@"NACIDSClient"8B12
@"NPSDomainAccessor"
@"NSXPCListener"
@"NACIDSClient"
@"NSObject<OS_dispatch_source>"
@"TLAlert"
@"NACXPCClient"
@"NACAudioRoute"
v20@0:4f8B12B16
@"<NACVolumeControllerDelegate>"8@0:4
v12@0:4@"<NACVolumeControllerDelegate>"8
@12@0:4@?8
@"NSNumber"
@"<NACVolumeControllerDelegate>"
@12@0:4I8
@"NSMutableArray"
v32@0:4@8i12d16@24i28
@"<NACIDSClientDelegate>"
{?="routeSubtype"b1"routeType"b1"picked"b1"supportsVolumeControl"b1}
@?8@0:4
@"NSCountedSet"
{?="intensity"b1}
{?="eUVolumeLimit"b1}
i12@0:4i8
{?="volumeValue"b1}
333?
?333?
XPC connection interrupted
XPC connection invalidated
Error getting proxy object: %@
Observing volume for category: %@
Observing haptic intensity
Observing system mute
Observing prominent haptic enabled
Handle begin observing volume
Volume observation has been holding a run assertion for 30 seconds, cancelling and informing client
Handle end observing volume
Handle set volume
Requested value: %f
Handle set muted
Handle set system muted
Handle set prominent haptic enabled
Handle set haptic intensity
Handle begin observing audio routes
Received attempt to begin observing audio routes for category [%@], but observing had already begun
Begin observing routes for category: %@
Route observation of category [%@] has been active for 30 seconds, cancelling and informing client
Handle end observing audio routes
End observing audio routes for category: %@
Received attempt to end observing audio routes for category [%@], but observing was not in progress
Handle pick audio route
Pick audio route with identifier: %@, category: %@
Found audio route, attempting to pick
Couldn't find audio route to pick
Received attempt to pick audio route for category [%@], but observing was not in progress
Volume value did change: %f
Muted state did change
EU limit did change
Volume warning state did change
Available routes updated
-> %@
Haptic intensity changed
Sending volume value: %f, category: %@
Sending volume availability: %@, category: %@
Failed to request delivery of IDS message, type: %@, queueOne: %@, identifier: %@, payload size: %tu, error: %@
Successfully requested delivery of IDS message, type: %@, queueOne: %@, identifier: %@, payload size: %tu
Successfully sent message (ID: %@).
Failed to send message (ID: %@) with error "%@".
Accepted new XPC connection
Audio route cache expired, waiting for an update from companion
Existing route list is larger, scheduling deferred update
VolumeControllerProxy begin observing volume
VolumeControllerProxy end observing volume
Setting volume: %f
Received volume value update: %f
VolumeControllerProxy begin observing volume due to re-entering foreground
VolumeControllerProxy end observing volume due to entering background
Handle volume change
Handle volume availability
Handle muted state
Handle haptic intensity change
Handling EU limit change
Handling volume warning change
Handle audio routes changed
Handle volume observation cancelled
Handle route observation cancelled
Handle system muted state did change
Handle prominent haptic state did change
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
