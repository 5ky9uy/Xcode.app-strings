Journal
index.sqlite
protected.sqlite
DBSchemaVersion
FullSyncVersion
ReceivedFullSyncMessages
SyncedMailboxType
SyncedMailboxAccountId
SyncedMailboxURL
SyncedMailboxCustomName
DateForRequestingMoreMessages
DatabaseRecentlyMigrated
LastIDSIdentifierForFullSyncRequest
LastIDSIdentifierForHaltSyncRequest
AppLastLaunchedDate
NotificationSettingsEnabled
com.apple.nanomail.db
M.ID = ?
v24@?0^{sqlite3_stmt=}8^Q16
v8@?0
SELECT 1 FROM MESSAGE WHERE ID = ?
SELECT STATUS_VERSION FROM MESSAGE WHERE ID = ?
M.ID IN (%@)
SELECT ID FROM MESSAGE WHERE ID IN (%@)
SELECT ID, STATUS_VERSION FROM MESSAGE WHERE ID IN (%@)
OR (STATUS & ?)
AND M.ID NOT IN (%@)
(DATE_RECEIVED >= ?) AND (STATUS & ?) AND (CONTENT_SYNCED = ?) AND ((ACCOUNT_ID IN (%@)) %@ %@) %@
(STATUS & ?) = 0
DATE_RECEIVED <= ?
SELECT IMAGE_ATTACHMENTS FROM MESSAGE WHERE ID = ?
W.ID IN (%@)
SELECT C.ID, (SELECT COUNT(ID) FROM CONVERSATION WHERE (DATE_RECEIVED > C.DATE_RECEIVED) OR (DATE_RECEIVED = C.DATE_RECEIVED AND ID < C.ID)) AS C_INDEX FROM CONVERSATION C WHERE ID IN (%@)
ID = ?
ID = (SELECT CONVERSATION_ID FROM MESSAGE WHERE ID = ?)
SELECT COUNT(ID) FROM CONVERSATION
A.ID = ?
v16@?0^{sqlite3_stmt=}8
INSERT INTO MESSAGE (ID, CONVERSATION_ID, ACCOUNT_ID, DATE_SENT, DATE_RECEIVED, MESSAGE_ID_HEADER, STATUS, STATUS_VERSION, CONTENT_SYNCED, NOTIFICATION_MESSAGE_ID) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MESSAGE (ID, "FROM", SUBJECT, PREVIEW, "TO", CC, BCC) VALUES (?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MESSAGE (ID, "FROM", SUBJECT, PREVIEW, "TO", CC, BCC) VALUES (%Q, %Q, %Q, %Q, %Q, %Q, %Q)
, STATUS_VERSION = ?
UPDATE MESSAGE SET STATUS = ?%@ WHERE ID = ?
UPDATE PROTECTED.MESSAGE SET PREVIEW = ? WHERE ID = ?
UPDATE PROTECTED.MESSAGE SET PREVIEW = %Q WHERE ID = %Q
UPDATE MESSAGE SET DATE_RECEIVED = ? WHERE ID = ?
SELECT ID FROM MESSAGE WHERE DATE_RECEIVED <= ?
UPDATE MESSAGE SET CONTENT_SYNCED = ?, IMAGE_ATTACHMENTS = ? WHERE ID = ?
INSERT INTO CONVERSATION (ID, DATE_RECEIVED) VALUES (?, ?)
UPDATE CONVERSATION SET DATE_RECEIVED = ? WHERE ID = ?
INSERT INTO ACCOUNT (ID) VALUES (?)
INSERT INTO PROTECTED.ACCOUNT (ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES) VALUES (?, ?, ?, ?)
INSERT INTO PROTECTED.ACCOUNT (ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES) VALUES (%Q, %Q, %i, %Q)
UPDATE PROTECTED.ACCOUNT SET DISPLAY_NAME = ?, SHOULD_ARCHIVE = ?, EMAIL_ADDRESSES = ? WHERE ID = ?
UPDATE PROTECTED.ACCOUNT SET DISPLAY_NAME = %Q, SHOULD_ARCHIVE = %i, EMAIL_ADDRESSES = %Q WHERE ID = %Q
DELETE FROM ACCOUNT WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT WHERE ID = %Q
INSERT INTO IDS_IDENTIFIER_NOT_YET_ACKD (IDS_IDENTIFIER, OBJECT_ID, OBJECT_TYPE, DATE_TO_RESEND, RESEND_INTERVAL) VALUES (?, ?, ?, NULL, ?)
SELECT OBJECT_ID, OBJECT_TYPE, RESEND_INTERVAL FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
DELETE FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
UPDATE IDS_IDENTIFIER_NOT_YET_ACKD SET RESEND_INTERVAL = ?, DATE_TO_RESEND = ? WHERE IDS_IDENTIFIER = ?
SELECT IDS_IDENTIFIER, DATE_TO_RESEND FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE DATE_TO_RESEND IS NOT NULL
INSERT INTO COMPOSED_MESSAGE (ID, REFERENCE_MESSAGE_ID, IDS_IDENTIFIER, PROGRESS, DATE_SENT) VALUES (?, ?, ?, ?, ?)
INSERT INTO PROTECTED.COMPOSED_MESSAGE (ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS, DATE_SENT, IDS_IDENTIFIER) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.COMPOSED_MESSAGE (ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS, DATE_SENT, IDS_IDENTIFIER) VALUES (%Q, %lu, %Q, %Q, %Q, %Q, %Q, %i, datetime(%f, 'unixepoch'), %Q)
UPDATE COMPOSED_MESSAGE SET PROGRESS = ? WHERE ID = ?
DELETE FROM COMPOSED_MESSAGE WHERE ID = ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE ID = ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE ID = %Q
DELETE FROM COMPOSED_MESSAGE WHERE DATE_SENT < ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE DATE_SENT < ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE DATE_SENT < datetime(%f, 'unixepoch')
IDS_IDENTIFIER = ?
SELECT REFERENCE_MESSAGE_ID, ID, PROGRESS FROM COMPOSED_MESSAGE WHERE REFERENCE_MESSAGE_ID IS NOT NULL ORDER BY REFERENCE_MESSAGE_ID
SELECT ID, PROGRESS, REFERENCE_MESSAGE_ID FROM COMPOSED_MESSAGE WHERE IDS_IDENTIFIER = ?
SELECT ID, SUBJECT FROM PROTECTED.COMPOSED_MESSAGE
SELECT REFERENCE_MESSAGE_ID FROM COMPOSED_MESSAGE WHERE ID = ?
SELECT COUNT(ID) FROM MESSAGE
M.ID is not null
CONTROL
PROTECTED
Database-Protected.sql
DELETE FROM ACCOUNT
DELETE FROM PROTECTED.ACCOUNT
v20@?0^{sqlite3_stmt=}8i16
SELECT KEY, VALUE FROM CONTROL
SELECT VALUE FROM %@CONTROL WHERE KEY = ?
PROTECTED.
INSERT OR REPLACE INTO %@CONTROL (KEY, VALUE) VALUES (?, ?)
INSERT OR REPLACE INTO PROTECTED.CONTROL (KEY, VALUE) VALUES (%s, %s)
LIMIT ?, ?
SELECT %@ FROM MESSAGE M INNER JOIN PROTECTED.MESSAGE P ON M.ID == P.ID WHERE %@ ORDER BY %@ %@
SELECT %@ FROM MESSAGE M WHERE %@ ORDER BY %@ %@
CONVERSATION_ID
%@ID, %@ AS CONVERSATION_ID, %@ACCOUNT_ID, NULL AS "FROM", %@DATE_SENT, NULL AS SUBJECT, %@DATE_RECEIVED, %@MESSAGE_ID_HEADER, NULL AS PREVIEW, %@STATUS, NULL AS "TO", NULL AS CC, NULL AS BCC, %@NOTIFICATION_MESSAGE_ID, %@STATUS_VERSION
%@ID, %@ AS CONVERSATION_ID, %@ACCOUNT_ID, %@"FROM", %@DATE_SENT, %@SUBJECT, %@DATE_RECEIVED, %@MESSAGE_ID_HEADER, %@PREVIEW, %@STATUS, %@"TO", %@CC, %@BCC, %@NOTIFICATION_MESSAGE_ID, %@STATUS_VERSION
%@DATE_RECEIVED DESC, %@ID ASC
WHERE ID IN (%@)
DELETE FROM PROTECTED.MESSAGE %@
DELETE FROM PROTECTED.MESSAGE 
DELETE FROM MESSAGE %@
DELETE FROM CONVERSATION WHERE NOT EXISTS (SELECT ID FROM MESSAGE WHERE CONVERSATION_ID = CONVERSATION.ID)
WHERE %@
, (SELECT COUNT(ID) FROM CONVERSATION WHERE (DATE_RECEIVED > C.DATE_RECEIVED) OR (DATE_RECEIVED = C.DATE_RECEIVED AND ID < C.ID)) AS C_INDEX
SELECT %@%@ FROM CONVERSATION C LEFT OUTER JOIN MESSAGE M ON M.CONVERSATION_ID = C.ID LEFT OUTER JOIN PROTECTED.MESSAGE P ON M.ID == P.ID WHERE C.ID IN (SELECT ID FROM CONVERSATION W %@ ORDER BY %@ LIMIT ?, ?) ORDER BY %@, %@
SELECT %@%@ FROM CONVERSATION AS C LEFT OUTER JOIN MESSAGE AS M ON M.CONVERSATION_ID = C.ID WHERE C.ID IN (SELECT ID FROM CONVERSATION W %@ ORDER BY %@ LIMIT ?, ?) ORDER BY %@, %@
SELECT COUNT(ID) FROM CONVERSATION WHERE (DATE_RECEIVED > ?) OR (DATE_RECEIVED = ? AND ID < ?)
SELECT %@ FROM ACCOUNT A INNER JOIN PROTECTED.ACCOUNT P_ACCOUNT ON A.ID == P_ACCOUNT.ID %@
P_ACCOUNT
SELECT %@ FROM ACCOUNT A %@
%@ID, NULL, NULL, NULL
%@ID, %@DISPLAY_NAME, %@SHOULD_ARCHIVE, %@EMAIL_ADDRESSES
SELECT ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS FROM PROTECTED.COMPOSED_MESSAGE WHERE %@
SELECT ID, NULL, NULL, NULL, NULL, NULL, REFERENCE_MESSAGE_ID, NULL FROM COMPOSED_MESSAGE WHERE %@
DELETE FROM IDS_IDENTIFIER_NOT_YET_ACKD
v16@?0@"NSString"8
Database-Unprotected.sql
NanoMailKit
database
T@"NNMKProtectedSQLiteConnection",&,N,V_database
journal
T@"NNMKSQLJournal",&,N,V_journal
databaseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_databaseQueue
waitingForMigration
TB,N,V_waitingForMigration
currentDatabaseSchemaVersion
TQ,N,V_currentDatabaseSchemaVersion
protectedDatabaseAttached
TB,R,N
fullSyncVersion
TQ,N,V_fullSyncVersion
receivedFullSyncMessages
TB,N,V_receivedFullSyncMessages
syncedMailboxType
TQ,N,V_syncedMailboxType
syncedMailboxAccountId
T@"NSString",&,N,V_syncedMailboxAccountId
syncedMailboxURL
T@"NSURL",&,N
syncedMailboxCustomName
T@"NSString",&,N
dateForRequestingMoreMessages
T@"NSDate",&,N,V_dateForRequestingMoreMessages
lastIDSIdentifierForFullSyncRequest
T@"NSString",&,N,V_lastIDSIdentifierForFullSyncRequest
lastIDSIdentifierForHaltSyncRequest
T@"NSString",&,N,V_lastIDSIdentifierForHaltSyncRequest
databaseRecentlyMigrated
TB,N,V_databaseRecentlyMigrated
appLastLaunchedDate
T@"NSDate",&,N,V_appLastLaunchedDate
notificationSettingsEnabled
TB,N,V_notificationSettingsEnabled
NanoMailDatabaseMigratedNotification
NanoMail
T@"NNMKDatabase",&,V_database
progress
Tf,V_progress
init
_shouldWaitForMigration
_setupDatabase
_loadControlValues
protectedDatabaseAttached
bindString:intoStatement:paramIndex:
_selectMessagesWhere:limitRange:blockForBinding:statusVersions:
count
firstObject
messageId
objectForKeyedSubscript:
unsignedIntegerValue
preparedStatementForPattern:
stepPreparedStatement:
isResponseOkFromPreparedStatementExecution:
lastErrorMessage
closeExecutedPreparedStatement:
unsignedIntegerFromStatement:columnIndex:
dictionaryWithCapacity:
_paramsStringWithString:count:
stringWithFormat:
countByEnumeratingWithState:objects:count:
setObject:forKeyedSubscript:
setWithCapacity:
objectAtIndexedSubscript:
stringFromStatement:columnIndex:
addObject:
numberWithUnsignedInteger:
bindDate:intoStatement:paramIndex:
bindUnsignedInteger:intoStatement:paramIndex:
bindBool:intoStatement:paramIndex:
componentsSeparatedByString:
_selectConversationWhere:limitRange:index:messagesKeyedByConversationId:blockForBinding:
_selectConversationsWhere:limitRange:messagesKeyedByConversationId:indexesKeyedByConversationId:blockForBinding:
_indexForConversation:
_selectAccountsWhere:blockForBinding:
beginTransaction
conversationId
accountId
dateSent
dateReceived
messageIdHeader
status
notificationMessageId
componentsJoinedByString:
from
subject
preview
UTF8String
stringWithUTF8String:
appendSQLStatement:
flushIfNeeded
commitTransaction
rollbackTransaction
updateMessageStatusForMessageWithId:newStatus:statusVersion:
arrayWithObjects:count:
_deleteMessagesWithIds:
array
string
attachments
length
appendString:
contentId
urlForMessageContentWithId:
archivedDataWithRootObject:
_storeProtectedData:atURL:
emailAddresses
displayName
shouldArchive
urlForImageAttachmentOfMessageWithId:contentId:
bindData:intoStatement:paramIndex:
dataFromStatement:columnIndex:
unarchiveObjectWithData:
dictionary
dateFromStatement:columnIndex:
date
composedMessageId
referenceMessageId
bindInteger:intoStatement:paramIndex:
sendingType
body
includeAttachments
timeIntervalSince1970
_selectComposedMessageWhere:blockForBinding:
integerFromStatement:columnIndex:
isEqualToString:
numberWithInteger:
attachProtectedDatabase
tableExists:inDatabase:
_createTablesUsingFile:
_mergeJournal
dettachProtectedDatabase
_deleteAllIDSIdentifiers
_setControlObjectForKey:protected:protectedBoundValue:withBlockForBinding:
URLWithString:
_controlValueForKey:protected:withBlockForColumn:
absoluteString
boolFromStatement:columnIndex:
_messageFieldsInExpectedOrderWithUnprotectedPrefix:protectedPrefix:conversationPrefix:nullifyProtected:
_messageOrderByWithPrefix:
alloc
_messageFromCurrentRowInStatement:statusVersion:
stringByAppendingString:
setMessageId:
setConversationId:
setAccountId:
setFrom:
setDateSent:
setSubject:
setDateReceived:
setMessageIdHeader:
setPreview:
setStatus:
setTo:
setCc:
setBcc:
setNotificationMessageId:
appendFormat:
defaultManager
urlForMessageContentsFolder
removeItemAtURL:error:
urlForImageAttachmentsFolder
urlForImageAttachmentsFolderForMessageWithId:
_conversationOrderByWithPrefix:
addMessageId:dateReceived:
setObject:forKey:
_accountFieldsInExpectedOrderWithPrefix:nullifyProtected:
_accountFromCurrentRowInStatement:
setDisplayName:
setShouldArchive:
setEmailAddresses:
setComposedMessageId:
setSendingType:
setBody:
setReferenceMessageId:
setIncludeAttachments:
preparedStatementForPattern:cacheStatement:
mergeUsingBlock:
_databaseDirectory
initWithUnprotectedDatabaseFileName:protectedDatabaseFileName:inDirectory:protectedDatabaseName:errorCode:
setCurrentDatabaseSchemaVersion:
stringByAppendingPathComponent:
initWithPath:
class
bundleForClass:
bundlePath
stringWithContentsOfFile:encoding:error:
executeSQL:
writeToURL:options:error:
currentDatabaseSchemaVersion
stringByPaddingToLength:withString:startingAtIndex:
deleteDatabaseDirectoryCompletely
initErrorCode:
messageWithId:statusVersion:
containsMessageWithId:
statusVersionForMessageWithId:
messagesWithIds:statusVersion:
messageIdsOfExistingMessagesWithMessageIds:
statusVersionForMessagesWithIds:
unreadMessagesWithContentAtIndexRange:sinceDate:fromAccountsWithIds:orVIPs:orNotifyConversation:excludingMessageIds:
messagesWithoutState:
messagesReceivedBefore:
imageAttachmentContentIdsForMessageWithId:
conversationAtIndex:messages:
conversationsAtIndexRange:messagesKeyedByConversationId:
conversationsReceivedBefore:count:initialIndex:messagesKeyedByConversationId:
conversationsWithIds:indexesKeyedByConversationId:messagesKeyedByConversationId:
indexesForConversationsWithIds:
conversationWithId:messages:index:
conversationForMessageWithId:messages:index:
conversationsCount
accountWithId:
accounts
addMessage:
updateMessageStatusForMessageWithId:newStatus:
updateMessagePreviewForMessageWithId:newPreview:
updateMessageDatesForMessage:
deleteMessageWithId:
deleteMessagesWithIds:
deleteMessagesOlderThan:
addMessageContent:
addConversation:
updateConversation:
addAccount:
updateAccount:
deleteAccountWithId:
addImageData:forImageAttachmentOfMessageWithId:contentId:
addObjectId:objectType:resendInterval:forIDSIdentifierNotYetAckd:
objectIdForIDSIdentifierNotYetAckd:objectType:resendInterval:
markIDSIdentifierAsAckd:
rescheduleIDSIdentifier:resendInterval:withDateToResend:
datesForIDSIdentifiersScheduledToBeResent
recordComposedMessage:IDSIdentifier:
updateProgress:forComposedMessageWithId:
deleteComposedMessageWithId:
deleteComposedMessagesOlderThan:
composedMessageWithIDSIdentifier:
composedMessageWithId:
composedMessageIdsKeyedByReferenceMessageIdsAndProgress:
composedMessageIdForIDSIdentifier:progress:referenceMessageId:
failedComposedMessageIdsAndSubjects
referenceMessageIdForComposedMessageId:
messagesCount
allMessages
waitingForMigration
notifyProtectionDataAvailable:
attemptToLoadProtectedData
deleteAllMessages
deleteAllAccounts
setFullSyncVersion:
setReceivedFullSyncMessages:
setSyncedMailboxType:
setSyncedMailboxAccountId:
syncedMailboxURL
setSyncedMailboxURL:
syncedMailboxCustomName
setSyncedMailboxCustomName:
setDateForRequestingMoreMessages:
setDatabaseRecentlyMigrated:
setLastIDSIdentifierForFullSyncRequest:
setLastIDSIdentifierForHaltSyncRequest:
setAppLastLaunchedDate:
setNotificationSettingsEnabled:
.cxx_destruct
fullSyncVersion
receivedFullSyncMessages
syncedMailboxType
syncedMailboxAccountId
dateForRequestingMoreMessages
lastIDSIdentifierForFullSyncRequest
lastIDSIdentifierForHaltSyncRequest
databaseRecentlyMigrated
appLastLaunchedDate
notificationSettingsEnabled
database
setDatabase:
journal
setJournal:
databaseQueue
setDatabaseQueue:
setWaitingForMigration:
_receivedFullSyncMessages
_databaseRecentlyMigrated
_notificationSettingsEnabled
_waitingForMigration
_fullSyncVersion
_syncedMailboxType
_syncedMailboxAccountId
_dateForRequestingMoreMessages
_lastIDSIdentifierForFullSyncRequest
_lastIDSIdentifierForHaltSyncRequest
_appLastLaunchedDate
_database
_journal
_databaseQueue
_currentDatabaseSchemaVersion
errorCodeMeansCorruptedDatabase:
_needsMigration
performMigration
dataClassName
estimatedDuration
migrationProgress
progress
setProgress:
_progress
Error checking if message exists (%{public}@).
Error retrieving message status version (%{public}@).
Error checking if messages exist (%{public}@).
Error getting status versions (%{public}@).
Error getting attachment content ids (Message Id: %{public}@, Error: %{public}@).
Tried to access protected when it's unavailable (device is probably locked).
Error selecting indexes for conversations (%{public}@).
Error getting conversations count (%{public}@).
Message ADDED to SQLite database (Id: %{public}@ - Date Received: %{public}@).
Error ADDING Message to SQLite database (%{public}@).
Message status UPDATED on SQLite database (Id: %{public}@ - Status: %lu).
Error UPDATING Message status on SQLite database (Id: %{public}@ - Error: %{public}@).
Message preview UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Message preview on SQLite database (Id: %{public}@ - Error: %{public}@).
Message dateRecieved UPDATED on SQLite database (Id: %{public}@).
Error UPDATING dateRecieved for Message on SQLite database (%{public}@).
Error retrieving messages for deletion (%{public}@).
Message Content ADDED to SQLite database (Id: %{public}@).
Error ADDING Message Content to SQLite database (%{public}@).
Conversation ADDED to SQLite database (Id: %{public}@).
Error ADDING Conversation to SQLite database (%{public}@).
Conversation UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Conversation on SQLite database (%{public}@).
Account ADDED to SQLite database (Id: %{public}@).
Error ADDING Account to SQLite database (%{public}@).
Account UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Account on SQLite database (%{public}@).
Account DELETED from SQLite database (Id: %{public}@).
Error DELETING Account from SQLite database (%{public}@).
Error adding Object for IDS Identifier (%{public}@).
Error retrieving Object for IDS identifier (%{public}@).
Error marking IDS Identifier as Ack'd (IDS Identifier: %{public}@ - Error: %{public}@).
Error rescheduling Object for IDS Identifier (IDS Identifier: %{public}@ - Error: %{public}@).
Error selecting IDS Identifiers scheduled to be resent (%{public}@).
Error ADDING Composed Message to Protected SQLite database (%{public}@).
Error ADDING Composed Message to SQLite database (%{public}@).
Error UPDATING Composed Message to SQLite database (%{public}@).
Error DELETING Composed Message from Protected SQLite database (%{public}@).
Error DELETING Composed Message from SQLite database (%{public}@).
Error DELETING Composed Message from Protected SQLite database before date (%{public}@).
Error selecting progress for Composed Message from IDS Identifier (%{public}@).
Error selecting message id for Composed Message (%{public}@).
Error getting messages count (%{public}@).
Error creating protected database. (%{public}@)
All Accounts deleted successfully.
Error deleting all accounts (%{public}@).
Error loading control values (%{public}@).
Error getting Control Object from SQLite database (Key: %{public}@ - Error: %{public}@).
Control Object CHANGED in SQLite database (Key: %{public}@).
Error CHANGING Control Object in SQLite database (Key: %{public}@ - Error: %{public}@).
Error selecting messages where %{public}@ (%{public}@).
Messages deleted successfully.
Error deleting messages (Error: %{public}@).
Error selecting messages and conversations where %{public}@ (%{public}@).
Error getting index for conversation (%{public}@).
Error selecting accounts where %{public}@ (%{public}@).
Error selecting Composed Message from IDS Identifier (%{public}@).
Error DELETING All IDS Identifiers from SQLite database (%{public}@).
Error executing SQL statement from journal (Error: %{public}@).
Journal merged sucessfully.
Error creating unprotected database. (%{public}@)
Error writing protected file to disk (URL: %{public}@ - Data Length: %lu - Error: %{public}@).
Database Corrupted. Deleting...
Migrator created.
Can't Perform Migration. Database isn't open.
performMigration starting now.
fullSyncVersion to migrate loaded (%lu).
database path removed.
Database Corrupted. Deleting and returning error...
new database created.
new full sync version set.
flagged as database recently migrated.
nanomaild notified.
performMigration did not run, as database schema version is already correct.
NNMKDatabase
NNMKClientDataMigrator
v16@0:8
@24@0:8^i16
B16@0:8
@32@0:8@16^Q24
B24@0:8@16
Q24@0:8@16
@32@0:8@16^@24
@24@0:8@16
@64@0:8{_NSRange=QQ}16@32@40B48B52@56
@24@0:8Q16
@32@0:8Q16^@24
@40@0:8{_NSRange=QQ}16^@32
@48@0:8@16Q24^Q32^@40
@40@0:8@16^@24^@32
@40@0:8@16^@24^Q32
Q16@0:8
@16@0:8
v24@0:8@16
v32@0:8@16Q24
v40@0:8@16Q24Q32
v32@0:8@16@24
v40@0:8@16@24@32
v48@0:8@16@24Q32@40
v40@0:8@16Q24@32
v32@0:8q16@24
@24@0:8^@16
@40@0:8@16^q24^@32
i20@0:8B16
v24@0:8Q16
v20@0:8B16
v36@0:8@16B24@?28
v44@0:8@16B24*28@?36
@56@0:8@16{_NSRange=QQ}24@?40^@48
@44@0:8@16@24@32B40
@32@0:8^{sqlite3_stmt=}16^Q24
@64@0:8@16{_NSRange=QQ}24^Q40^@48@?56
@64@0:8@16{_NSRange=QQ}24^@40^@48@?56
@32@0:8@16@?24
@28@0:8@16B24
@24@0:8^{sqlite3_stmt=}16
i16@0:8
B32@0:8@16@24
@32@0:8@16Q24
@"NSString"
@"NSDate"
@"NNMKProtectedSQLiteConnection"
@"NNMKSQLJournal"
@"NSObject<OS_dispatch_queue>"
f16@0:8
v20@0:8f16
@"NNMKDatabase"
zPLR
