/private/var/mobile/Library/NanoMailKit
RDStaging
RDTemplate
com.apple.nanomail.retailDemoMigrationQueue
v4@?0
isMigrating
TB,N,V_isMigrating
migrationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_migrationQueue
demoContentMigrationCompletionBlock
T@?,C,N,V_demoContentMigrationCompletionBlock
messageDatesUpdatedCompletionBlock
T@?,C,N,V_messageDatesUpdatedCompletionBlock
kDeviceLockStatusChangedNotification
kDatabaseMigratedNotification
Message
ComposedMessage
com.apple.private.nanomaild.sync
com.apple.nanomail.receiverServerQueue
NanoMail's Main Transaction
v8@?0B4
v8@?0@"<NNMKSyncReceiverXPCBasicClientInterface>"4
v8@?0@"<NNMKSyncReceiverXPCAdHocClientInterface>"4
@"NNMKConversationOperation"20@?0@"NSString"4@"NSArray"8@"NNMKConversation"12@"NSArray"16
v12@?0I4^B8
v8@?0@"<NNMKSyncReceiverXPCMessageUpdatesBasedClientInterface>"4
v8@?0@"<NNMKSyncReceiverXPCConversationsBrowsingBasedClientInterface>"4
v8@?0@"NSError"4
Trimming list of conversations so we don't send too many
We're not trimming the list of conversations
%lu|%@
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
serverQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serverQueue
xpcClientConnections
T@"NSMutableSet",&,N,V_xpcClientConnections
xpcConversationBrowsingBasedConnections
T@"NSMutableSet",&,N,V_xpcConversationBrowsingBasedConnections
xpcMessageUpdatesBasedConnections
T@"NSMutableSet",&,N,V_xpcMessageUpdatesBasedConnections
localDatabase
T@"NNMKDatabase",&,N,V_localDatabase
isDeviceUnlocked
TB,N,V_isDeviceUnlocked
messagesSyncService
T@"NNMKMessagesSyncServiceClient",&,N,V_messagesSyncService
contentSyncService
T@"NNMKMessageContentSyncServiceClient",&,N,V_contentSyncService
accountsSyncService
T@"NNMKAccountsSyncServiceClient",&,N,V_accountsSyncService
fetchesSyncService
T@"NNMKFetchesSyncServiceClient",&,N,V_fetchesSyncService
protectedSyncService
T@"NNMKProtectedSyncServiceClient",&,N,V_protectedSyncService
protectedContentSyncService
T@"NNMKProtectedContentSyncServiceClient",&,N,V_protectedContentSyncService
mainTransaction
T@"NSObject<OS_os_transaction>",&,N,V_mainTransaction
connectionsWaitingForConversationsFromFetch
T@"NSMutableSet",&,N,V_connectionsWaitingForConversationsFromFetch
lastFetchMoreMessagesIDSIdentifier
T@"NSString",&,N,V_lastFetchMoreMessagesIDSIdentifier
lastFetchRequestIDSIdentifier
T@"NSString",&,N,V_lastFetchRequestIDSIdentifier
messageIdsContentArrivedBeforeActualMessage
T@"NSMutableSet",&,N,V_messageIdsContentArrivedBeforeActualMessage
compactDatabaseProcedureContext
TI,N,V_compactDatabaseProcedureContext
fullSyncRequestedNextVersion
TI,N,V_fullSyncRequestedNextVersion
fullSyncRecoveredInThisSession
TB,N,V_fullSyncRecoveredInThisSession
nanoMailSnapshotRequester
T@"NNMKNanoMailSnapshotRequester",&,N,V_nanoMailSnapshotRequester
lastStandaloneMessagesTrimDate
T@"NSDate",&,N,V_lastStandaloneMessagesTrimDate
demoUtility
T@"NNMKRetailDemoUtility",&,N,V_demoUtility
NanoMailDatabaseMigratedNotification
machServiceName
T@"NSString",&,N,V_machServiceName
v20@?0@"NSDictionary"4{_NSRange=II}8^B16
v16@?0{_NSRange=II}4^B12
Journal
index.sqlite
protected.sqlite
DBSchemaVersion
FullSyncVersion
ReceivedFullSyncMessages
SyncedMailboxType
SyncedMailboxAccountId
SyncedMailboxURL
SyncedMailboxCustomName
DateForRequestingMoreMessages
DatabaseRecentlyMigrated
LastIDSIdentifierForFullSyncRequest
LastIDSIdentifierForHaltSyncRequest
AppLastLaunchedDate
NotificationSettingsEnabled
com.apple.nanomail.db
M.ID = ?
v12@?0^{sqlite3_stmt=}4^I8
SELECT 1 FROM MESSAGE WHERE ID = ?
SELECT STATUS_VERSION FROM MESSAGE WHERE ID = ?
M.ID IN (%@)
SELECT ID FROM MESSAGE WHERE ID IN (%@)
SELECT ID, STATUS_VERSION FROM MESSAGE WHERE ID IN (%@)
OR (STATUS & ?)
AND M.ID NOT IN (%@)
(DATE_RECEIVED >= ?) AND (STATUS & ?) AND (CONTENT_SYNCED = ?) AND ((ACCOUNT_ID IN (%@)) %@ %@) %@
(STATUS & ?) = 0
DATE_RECEIVED <= ?
SELECT IMAGE_ATTACHMENTS FROM MESSAGE WHERE ID = ?
W.ID IN (%@)
SELECT C.ID, (SELECT COUNT(ID) FROM CONVERSATION WHERE (DATE_RECEIVED > C.DATE_RECEIVED) OR (DATE_RECEIVED = C.DATE_RECEIVED AND ID < C.ID)) AS C_INDEX FROM CONVERSATION C WHERE ID IN (%@)
ID = ?
ID = (SELECT CONVERSATION_ID FROM MESSAGE WHERE ID = ?)
SELECT COUNT(ID) FROM CONVERSATION
A.ID = ?
v8@?0^{sqlite3_stmt=}4
INSERT INTO MESSAGE (ID, CONVERSATION_ID, ACCOUNT_ID, DATE_SENT, DATE_RECEIVED, MESSAGE_ID_HEADER, STATUS, STATUS_VERSION, CONTENT_SYNCED, NOTIFICATION_MESSAGE_ID) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MESSAGE (ID, "FROM", SUBJECT, PREVIEW, "TO", CC, BCC) VALUES (?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MESSAGE (ID, "FROM", SUBJECT, PREVIEW, "TO", CC, BCC) VALUES (%Q, %Q, %Q, %Q, %Q, %Q, %Q)
, STATUS_VERSION = ?
UPDATE MESSAGE SET STATUS = ?%@ WHERE ID = ?
UPDATE PROTECTED.MESSAGE SET PREVIEW = ? WHERE ID = ?
UPDATE PROTECTED.MESSAGE SET PREVIEW = %Q WHERE ID = %Q
UPDATE MESSAGE SET DATE_RECEIVED = ? WHERE ID = ?
SELECT ID FROM MESSAGE WHERE DATE_RECEIVED <= ?
UPDATE MESSAGE SET CONTENT_SYNCED = ?, IMAGE_ATTACHMENTS = ? WHERE ID = ?
INSERT INTO CONVERSATION (ID, DATE_RECEIVED) VALUES (?, ?)
UPDATE CONVERSATION SET DATE_RECEIVED = ? WHERE ID = ?
INSERT INTO ACCOUNT (ID) VALUES (?)
INSERT INTO PROTECTED.ACCOUNT (ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES) VALUES (?, ?, ?, ?)
INSERT INTO PROTECTED.ACCOUNT (ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES) VALUES (%Q, %Q, %i, %Q)
UPDATE PROTECTED.ACCOUNT SET DISPLAY_NAME = ?, SHOULD_ARCHIVE = ?, EMAIL_ADDRESSES = ? WHERE ID = ?
UPDATE PROTECTED.ACCOUNT SET DISPLAY_NAME = %Q, SHOULD_ARCHIVE = %i, EMAIL_ADDRESSES = %Q WHERE ID = %Q
DELETE FROM ACCOUNT WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT WHERE ID = %Q
INSERT INTO IDS_IDENTIFIER_NOT_YET_ACKD (IDS_IDENTIFIER, OBJECT_ID, OBJECT_TYPE, DATE_TO_RESEND, RESEND_INTERVAL) VALUES (?, ?, ?, NULL, ?)
SELECT OBJECT_ID, OBJECT_TYPE, RESEND_INTERVAL FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
DELETE FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
UPDATE IDS_IDENTIFIER_NOT_YET_ACKD SET RESEND_INTERVAL = ?, DATE_TO_RESEND = ? WHERE IDS_IDENTIFIER = ?
SELECT IDS_IDENTIFIER, DATE_TO_RESEND FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE DATE_TO_RESEND IS NOT NULL
INSERT INTO COMPOSED_MESSAGE (ID, REFERENCE_MESSAGE_ID, IDS_IDENTIFIER, PROGRESS, DATE_SENT) VALUES (?, ?, ?, ?, ?)
INSERT INTO PROTECTED.COMPOSED_MESSAGE (ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS, DATE_SENT, IDS_IDENTIFIER) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.COMPOSED_MESSAGE (ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS, DATE_SENT, IDS_IDENTIFIER) VALUES (%Q, %lu, %Q, %Q, %Q, %Q, %Q, %i, datetime(%f, 'unixepoch'), %Q)
UPDATE COMPOSED_MESSAGE SET PROGRESS = ? WHERE ID = ?
DELETE FROM COMPOSED_MESSAGE WHERE ID = ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE ID = ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE ID = %Q
DELETE FROM COMPOSED_MESSAGE WHERE DATE_SENT < ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE DATE_SENT < ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE DATE_SENT < datetime(%f, 'unixepoch')
IDS_IDENTIFIER = ?
SELECT REFERENCE_MESSAGE_ID, ID, PROGRESS FROM COMPOSED_MESSAGE WHERE REFERENCE_MESSAGE_ID IS NOT NULL ORDER BY REFERENCE_MESSAGE_ID
SELECT ID, PROGRESS, REFERENCE_MESSAGE_ID FROM COMPOSED_MESSAGE WHERE IDS_IDENTIFIER = ?
SELECT ID, SUBJECT FROM PROTECTED.COMPOSED_MESSAGE
SELECT REFERENCE_MESSAGE_ID FROM COMPOSED_MESSAGE WHERE ID = ?
SELECT COUNT(ID) FROM MESSAGE
M.ID is not null
CONTROL
PROTECTED
Database-Protected.sql
DELETE FROM ACCOUNT
DELETE FROM PROTECTED.ACCOUNT
v12@?0^{sqlite3_stmt=}4i8
SELECT KEY, VALUE FROM CONTROL
SELECT VALUE FROM %@CONTROL WHERE KEY = ?
PROTECTED.
INSERT OR REPLACE INTO %@CONTROL (KEY, VALUE) VALUES (?, ?)
INSERT OR REPLACE INTO PROTECTED.CONTROL (KEY, VALUE) VALUES (%s, %s)
LIMIT ?, ?
SELECT %@ FROM MESSAGE M INNER JOIN PROTECTED.MESSAGE P ON M.ID == P.ID WHERE %@ ORDER BY %@ %@
SELECT %@ FROM MESSAGE M WHERE %@ ORDER BY %@ %@
CONVERSATION_ID
%@ID, %@ AS CONVERSATION_ID, %@ACCOUNT_ID, NULL AS "FROM", %@DATE_SENT, NULL AS SUBJECT, %@DATE_RECEIVED, %@MESSAGE_ID_HEADER, NULL AS PREVIEW, %@STATUS, NULL AS "TO", NULL AS CC, NULL AS BCC, %@NOTIFICATION_MESSAGE_ID, %@STATUS_VERSION
%@ID, %@ AS CONVERSATION_ID, %@ACCOUNT_ID, %@"FROM", %@DATE_SENT, %@SUBJECT, %@DATE_RECEIVED, %@MESSAGE_ID_HEADER, %@PREVIEW, %@STATUS, %@"TO", %@CC, %@BCC, %@NOTIFICATION_MESSAGE_ID, %@STATUS_VERSION
%@DATE_RECEIVED DESC, %@ID ASC
WHERE ID IN (%@)
DELETE FROM PROTECTED.MESSAGE %@
DELETE FROM PROTECTED.MESSAGE 
DELETE FROM MESSAGE %@
DELETE FROM CONVERSATION WHERE NOT EXISTS (SELECT ID FROM MESSAGE WHERE CONVERSATION_ID = CONVERSATION.ID)
WHERE %@
, (SELECT COUNT(ID) FROM CONVERSATION WHERE (DATE_RECEIVED > C.DATE_RECEIVED) OR (DATE_RECEIVED = C.DATE_RECEIVED AND ID < C.ID)) AS C_INDEX
SELECT %@%@ FROM CONVERSATION C LEFT OUTER JOIN MESSAGE M ON M.CONVERSATION_ID = C.ID LEFT OUTER JOIN PROTECTED.MESSAGE P ON M.ID == P.ID WHERE C.ID IN (SELECT ID FROM CONVERSATION W %@ ORDER BY %@ LIMIT ?, ?) ORDER BY %@, %@
SELECT %@%@ FROM CONVERSATION AS C LEFT OUTER JOIN MESSAGE AS M ON M.CONVERSATION_ID = C.ID WHERE C.ID IN (SELECT ID FROM CONVERSATION W %@ ORDER BY %@ LIMIT ?, ?) ORDER BY %@, %@
SELECT COUNT(ID) FROM CONVERSATION WHERE (DATE_RECEIVED > ?) OR (DATE_RECEIVED = ? AND ID < ?)
SELECT %@ FROM ACCOUNT A INNER JOIN PROTECTED.ACCOUNT P_ACCOUNT ON A.ID == P_ACCOUNT.ID %@
P_ACCOUNT
SELECT %@ FROM ACCOUNT A %@
%@ID, NULL, NULL, NULL
%@ID, %@DISPLAY_NAME, %@SHOULD_ARCHIVE, %@EMAIL_ADDRESSES
SELECT ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS FROM PROTECTED.COMPOSED_MESSAGE WHERE %@
SELECT ID, NULL, NULL, NULL, NULL, NULL, REFERENCE_MESSAGE_ID, NULL FROM COMPOSED_MESSAGE WHERE %@
DELETE FROM IDS_IDENTIFIER_NOT_YET_ACKD
v8@?0@"NSString"4
Database-Unprotected.sql
NanoMailKit
database
T@"NNMKProtectedSQLiteConnection",&,N,V_database
journal
T@"NNMKSQLJournal",&,N,V_journal
databaseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_databaseQueue
waitingForMigration
TB,N,V_waitingForMigration
currentDatabaseSchemaVersion
TI,N,V_currentDatabaseSchemaVersion
protectedDatabaseAttached
TB,R,N
fullSyncVersion
TI,N,V_fullSyncVersion
receivedFullSyncMessages
TB,N,V_receivedFullSyncMessages
syncedMailboxType
TI,N,V_syncedMailboxType
syncedMailboxAccountId
T@"NSString",&,N,V_syncedMailboxAccountId
syncedMailboxURL
T@"NSURL",&,N
syncedMailboxCustomName
T@"NSString",&,N
dateForRequestingMoreMessages
T@"NSDate",&,N,V_dateForRequestingMoreMessages
lastIDSIdentifierForFullSyncRequest
T@"NSString",&,N,V_lastIDSIdentifierForFullSyncRequest
lastIDSIdentifierForHaltSyncRequest
T@"NSString",&,N,V_lastIDSIdentifierForHaltSyncRequest
databaseRecentlyMigrated
TB,N,V_databaseRecentlyMigrated
appLastLaunchedDate
T@"NSDate",&,N,V_appLastLaunchedDate
notificationSettingsEnabled
TB,N,V_notificationSettingsEnabled
com.apple.NanoMail
com.apple.nanomaild.ProcessMonitor
v8@?0@"NSDictionary"4
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
accumulatedPoints
TI,N,V_accumulatedPoints
lastNanoMailSnapshotRequest
T@"NSDate",&,N,V_lastNanoMailSnapshotRequest
numberOfUnprocessedOperations
TI,N,V_numberOfUnprocessedOperations
interruptedConnectionWithNanoMail
TB,N,V_interruptedConnectionWithNanoMail
deviceLocked
TB,N,V_deviceLocked
nanoMailState
TI,N,V_nanoMailState
nanoMailStateMonitor
T@"BKSApplicationStateMonitor",&,N,V_nanoMailStateMonitor
delegate
T@"<NNMKNanoMailSnapshotRequesterDelegate>",W,N,V_delegate
init
dealloc
forceDatabaseReplace
isMigrating
setIsMigrating:
stringByAppendingPathComponent:
defaultManager
contentsOfDirectoryAtPath:error:
countByEnumeratingWithState:objects:count:
isEqualToString:
fileURLWithPath:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
removeItemAtPath:error:
copyItemAtPath:toPath:error:
demoContentMigrationCompletionBlock
date
setAppLastLaunchedDate:
setNotificationSettingsEnabled:
setDatabaseRecentlyMigrated:
messagesReceivedBefore:
count
objectAtIndexedSubscript:
dateReceived
timeIntervalSinceNow
dateByAddingTimeInterval:
setDateReceived:
dateSent
setDateSent:
updateMessageDatesForMessage:
messageDatesUpdatedCompletionBlock
_watchDidStartPlayingDemoMovie
_watchDidStopPlayingDemoMovie
shiftContentDatesForDatabase:
.cxx_destruct
setDemoContentMigrationCompletionBlock:
setMessageDatesUpdatedCompletionBlock:
migrationQueue
setMigrationQueue:
_isMigrating
_demoContentMigrationCompletionBlock
_messageDatesUpdatedCompletionBlock
_migrationQueue
initWithQueue:
_isDeviceUnlocked
alloc
setDelegate:
defaultCenter
_handleDatabaseMigratedNotification
addObserver:selector:name:object:
_checkCurrentDeviceLockStatus
notifyDeviceLocked:
isRunningInStoreDemoMode
_setupDatabaseForRetailDemo
_setupDatabase
_deleteMessagesFromDatabaseBasedOnCurrentMailboxType
_startDelayedDatabaseCompactProcedure
datesForIDSIdentifiersScheduledToBeResent
enqueueIDSIdentifiersForResend:
_checkForMailSyncUsage
connectivityState
removeObserver:name:object:
_cancelDelayedDatabaseCompactProcedure
_connectionHasRequiredEntitlement:
setExportedInterface:
setExportedObject:
machServiceName
setRemoteObjectInterface:
addObject:
removeObject:
invalidate
setInvalidationHandler:
resume
currentConnection
conversationsAtIndexRange:messagesKeyedByConversationId:
_handleLoadedConversationsFromDatabase:messagesKeyedByConversationId:initialIndex:connectionToReply:
_dispatchAfterProtectedDatabaseAttached:
conversationsReceivedBefore:count:initialIndex:messagesKeyedByConversationId:
conversationWithId:messages:index:
lastObject
setConversationId:
archivedDataWithRootObject:
setBeforeDateReceived:
fullSyncVersion
setFullSyncVersion:
requestMoreMessagesForConversation:
messageWithId:statusVersion:
receiverXPCServerDidReplyWithMessage:
_replyToClientConnection:notificationBlock:
messageContentHasBeenDownloadedForMessageWithId:
imageAttachmentContentIdsForMessageWithId:
imageHasBeenDownloadedForMessageWithId:contentId:
_isPossiblyConnectedToPhone
_requestContentFromProviderForMessageWithId:highPriority:
receiverXPCServerDidReplyWithMessageContentLoadFailedForMessageWithId:
accounts
receiverXPCServerDidReplyWithAccounts:
composedMessageIdsKeyedByReferenceMessageIdsAndProgress:
receiverXPCServerDidReplyWithComposedMessageIds:progress:
failedComposedMessageIdsAndSubjects
receiverXPCServerDidReplyWithFailedComposedMessageIdsAndSubjects:
unreadMessagesWithContentAtIndexRange:sinceDate:fromAccountsWithIds:orVIPs:orNotifyConversation:excludingMessageIds:
receiverXPCServerDidReplyWithFirstUnreadMessages:
syncedMailboxType
syncedMailboxAccountId
syncedMailboxURL
syncedMailboxCustomName
receiverXPCServerDidReplyWithSyncedMailboxType:accountId:url:customName:
receiverXPCServerDidReplyWithIsConnected:
_messageIdsFromMessages:
statusVersionForMessagesWithIds:
messageId
status
setMessageId:
setUpdatedStatus:
objectForKeyedSubscript:
unsignedIntegerValue
setStatusVersion:
addMessageStatusUpdate:
updateMessagesStatus:
addObjectId:objectType:resendInterval:forIDSIdentifierNotYetAckd:
_updateMessagesStatusAndNotifyClients:statusVersionKeyedByMessageId:
arrayWithCapacity:
setDeletionState:
addMessageDeletion:
deleteMessages:
_deleteMessagesAndNotifyClients:
_fetchRequestProtobufForConversationId:
requestFetch:
composedMessageId
referenceMessageId
_sendComposedMessage:resendInterval:
deleteComposedMessageWithId:
composedMessageWithId:
copyWithNewId
notifyNewMessageReceived
arrayWithObjects:count:
_addMessagesAndNotifyClients:messagesAlreadyExistedOnCompanion:
messagesCount
receiverXPCServerDidReplyWithMessagesCount:
allMessages
receiverXPCServerDidReplyWithAllMessages:
dictionary
conversationsCount
copy
objectIdForIDSIdentifierNotYetAckd:objectType:resendInterval:
newResendIntervalForPreviousResendInterval:errorCode:
_resendObjectId:objectType:resendInterval:idsIdentifier:
_scheduleIdsIdentifierForResend:currentResendInterval:newResendInterval:
markIDSIdentifierAsAckd:
dequeueIDSIdentifierForResend:
composedMessageIdForIDSIdentifier:progress:referenceMessageId:
_updateProgress:forComposedMessageWithId:referenceMessageId:
_notifyClientsConnectivityChanged:
_verifyDatabaseOkForFullSyncVersion:
class
dateSynced
unarchiveObjectOfClass:withData:
reportFullSyncReceivedFullSyncVersion:syncedMailboxType:dateSynced:
URLWithString:
setReceivedFullSyncMessages:
setSyncedMailboxType:
setSyncedMailboxAccountId:
setSyncedMailboxURL:
setSyncedMailboxCustomName:
_notifyClientsThatSyncedMailboxTypeChanged:accountId:url:customName:
initialMessages
_messageIdsForMessageProtobufs:
messageIdsOfExistingMessagesWithMessageIds:
initialMessagesCount
_messageFromMessageProtobuf:
containsObject:
messageIdHeader
accountId
hasDateForRequestingMoreMessages
dateForRequestingMoreMessages
setDateForRequestingMoreMessages:
_notifyClientsThatFinishedSyncingMessagesSuccessfullyReceivingMessages:
messageAdditions
messageAdditionsCount
messagesAreNew
reportMessageReceivedWithId:willGenerateNotification:fullSyncVersion:dateSynced:
reportMessageUpdateReceivedForMessageWithId:fullSyncVersion:dateSynced:
dictionaryWithCapacity:
numberWithInt:
setObject:forKeyedSubscript:
reportMoreMessagesReceivedConversationSpecific:fullSyncVersion:dateSynced:
addedMessages
addedMessagesCount
removeAllObjects
conversationId
messageUpdates
messageDeletions
shouldTrimDatabase
deleteMessagesOlderThan:
_notifyClientsShouldReloadCache
addObjectsFromArray:
messagesWithIds:statusVersion:
statusVersion
updatedStatus
setStatus:
numberWithUnsignedInt:
_notifyClientsThatFetchRequestCompleted
messageStatusUpdates
messageStatusUpdatesCount
messageDeletionsCount
reportMessageDeletionReceivedForMessageWithId:fullSyncVersion:dateSynced:
hasNotificationMessage
notificationMessage
containsMessageWithId:
mainAlternativeValid
setMainAlternativeValid:
partiallyLoaded
setPartiallyLoaded:
attachmentsCount
attachments
contentId
type
renderOnClient
setRenderOnClient:
imageWidth
imageHeight
setImageSize:
setContentId:
fileName
setFileName:
fileSize
setFileSize:
setType:
setAttachments:
text
decompressedData
length
reportContentReceivedForMessageWithId:sizeInBytes:fullSyncVersion:dateSynced:
classesForUnarchivingTextData
unarchiveObjectOfClasses:withData:
isKindOfClass:
mutableCopy
prepareAttributedStringForDisplay:messageId:attachments:
setTextData:
addMessageContent:
_notifyClientsThatContentWasReceivedForMessageId:
preview
initWithData:encoding:
updateMessagePreviewForMessageWithId:newPreview:
conversationForMessageWithId:messages:index:
indexOfMessageId:
_notifyClientsThatMessageWasUpdated:
_updateConversationCalculatedFields:withMessages:
indexSet
indexSetWithIndex:
conversationUpdateOperationForConversation:previousIndex:newIndex:messagesAdded:messagesAddedIndexes:messagesUpdated:messagesUpdatedIndexes:messagesDeletedIndexes:messagesUnchanged:
_notifyClientsThatConversationOperationsWereExecuted:
_notifyClientsThatRepliedWithMessageContentLoadFailedForMessageWithId:
imageData
reportImageAttachmentReceivedForMessageWithId:contentId:sizeInBytes:fullSyncVersion:dateSynced:
addImageData:forImageAttachmentOfMessageWithId:contentId:
_notifyClientsThatImageAttachmentWasReceivedForMessageId:contentId:
notifyInitialSyncFinished:
accountWithId:
setAccountId:
displayName
setDisplayName:
shouldArchive
setShouldArchive:
emails
setEmailAddresses:
addAccount:
_notifyClientsThatAccountWasReceived:
updateAccount:
_notifyClientsThatAccountWasUpdated:
deleteAccountWithId:
_notifyClientsThatAccountWasDeleted:
deleteAllAccounts
initialAccounts
_errorWithCode:
_notifyClientsThatFailedSyncingMessagesWithError:
lastIDSIdentifierForFullSyncRequest
_requestFullSync
reportFullSyncRequestedFromWatch:corruptionDetected:migrationRelated:idsFailureRelated:fullSyncVersionMatchRelated:
lastIDSIdentifierForHaltSyncRequest
_requestHaltSync
setLastIDSIdentifierForFullSyncRequest:
setLastIDSIdentifierForHaltSyncRequest:
_notifyClientsThatNotifiedOldMessagesAvailable
progress
referenceMessageIdForComposedMessageId:
conversationAddOperationForConversation:index:messages:
receivedFullSyncMessages
requestMoreMessages:
code
receiverXPCServerDidReplyWithConversationOperations:totalConversationsCount:willFetch:error:
_ensureBulletinServiceIsRunning
_addMessagesOnLocalDatabase:toNewConversationWithId:
_addOrUpdateMessagesOnLocalDatabase:toExistingConversation:existingMessagesOnConversation:statusVersionKeyedByMessageId:
_processConversationsFromMessages:notifyMessageUpdatesBasedClients:usingBlock:
addMessage:
addMessageId:dateReceived:
addConversation:
array
allKeys
setWithArray:
setWithCapacity:
addIndex:
updateMessageStatusForMessageWithId:newStatus:statusVersion:
updateMessageStatusForMessageWithId:newStatus:
removeObjectForKey:
allValues
updateConversation:
indexesOfMessages:
removeMessageWithId:
_deleteMessageWithId:fromMessagesArray:
deleteMessagesWithIds:
conversationDeleteOperationForConversationId:previousIndex:
subarrayWithRange:
removeObjectsInRange:
conversationsWithIds:indexesKeyedByConversationId:messagesKeyedByConversationId:
messagesDeletedIndexes
messageIdAtIndex:
enumerateIndexesUsingBlock:
indexesForConversationsWithIds:
setNewIndex:
setPreviousIndex:
messagesAdded
_notifyClientsThatMessageWasAdded:
messagesUpdated
_notifyClientsThatMessageWithIdWasDeleted:
insertObject:atIndex:
subject
setSubject:
setPreview:
orderedSetWithCapacity:
from
addState:
setFrom:
messagesWithoutState:
currentCalendar
components:fromDate:
dateFromComponents:
addRemovedMessageId:
warnMessagesFilteredOut:
_runDatabaseCompactProcedure
dateWithTimeIntervalSinceNow:
deleteComposedMessagesOlderThan:
conversationAtIndex:messages:
firstObject
requestCompactMessages:
notificationSettingsEnabled
appLastLaunchedDate
reportHaltSyncRequestedFromWatch:
requestFetchResume
hasPrefix:
setComposedMessageId:
sendingType
setSendingType:
addTo:
body
setBody:
setReferenceMessageId:
includeAttachments
setIncludeAttachments:
sendMessage:
null
recordComposedMessage:IDSIdentifier:
_notifyClientsThatFailedSendingComposedMessageWithId:subject:
_notifyClientsThatStartedSendingComposedMessageWithId:referenceMessageId:
updateProgress:forComposedMessageWithId:
_notifyClientsThatSendingProgressForComposedMessageChanged:composedMessageWithId:referenceMessageId:
_handleDeviceLockStatusChanged:
notifyProtectionDataAvailable:
_checkForDatabaseCorruptionFromErrorCode:
resendReadyIDSIdentifiers
receiverXPCServerDidAddNewMessage:
_notifyMessageUpdatesBasedClients:
receiverXPCServerDidUpdateMessage:
receiverXPCServerDidDeleteMessageWithId:
receiverXPCServerDidExecuteConversationOperations:
_notifyConversationBrowsingBasedClients:
receiverXPCServerDidReceiveContentForMessageWithId:
_notifyAllClients:
receiverXPCServerDidReceiveImageAttachmentForMessageWithId:contentId:
receiverXPCServerDidChangeSyncedMailboxType:accountId:url:customName:
receiverXPCServerDidAddNewAccount:
receiverXPCServerDidUpdateAccount:
receiverXPCServerDidDeleteAccountWithId:
receiverXPCServerDidReportProgress:forComposedMessageWithId:referenceMessageId:
receiverXPCServerDidReportFailureSendingComposedMessageWithId:subject:
receiverXPCServerDidReportSendingComposedMessageStartedWithId:referenceMessageId:
receiverXPCServerDidDeleteAllMessages
receiverXPCServerDidRequestReloadCache
receiverXPCServerConnectivityDidChange:
receiverXPCServerDidFinishSyncingMessagesSuccessfullyReceivingMessages:
receiverXPCServerDidFailSyncingMessagesWithError:
receiverXPCServerDidNotifyOldMessagesAvailable
receiverXPCServerDidNotifyFetchRequestCompleted
_notifyClientConnection:notificationBlock:
notifyOperationsProcessed
remoteObjectProxyWithErrorHandler:
rescheduleIDSIdentifier:resendInterval:withDateToResend:
enqueueIDSIdentifierForResend:atDate:silent:
_resendPendingMessagesWithIds:forIDSIdentifier:newResendInterval:
_resendPendingComposedMessageForIDSIdentifier:newResendInterval:
composedMessageWithIDSIdentifier:
_scheduleIdsIdentifierForResendAfterUnlock:resendInterval:
protectedDatabaseAttached
attemptToLoadProtectedData
deleteDatabaseDirectoryCompletely
initErrorCode:
errorCodeMeansCorruptedDatabase:
_recreateDatabaseFromScratch:
demoUtility
databaseRecentlyMigrated
waitingForMigration
resetRepeatPreventionHistory
deleteAllMessages
_notifyClientsThatAllMessagesWereDeleted
setHighPriority:
requestContent:highPriority:
requestFullSync:
requestHaltSync:
setTo:
setCc:
bccs
setBcc:
setMessageIdHeader:
notificationMessageId
setNotificationMessageId:
removeObjectAtIndex:
_isPossiblyConnectedToPhoneThroughCloudMessaging
setWillTrimDatabaseAfterResults:
string
appendFormat:
dataUsingEncoding:
compressedData
setWantsBatchedResponse:
setCurrentMessageIdsAndStatus:
_isPossiblyConnectedToPhoneThroughMagnetOrWifi
errorWithDomain:code:userInfo:
launchBulletinService
messagesSyncServiceClient:didFailSendingProtobufWithIDSIdentifier:errorCode:
messagesSyncServiceClient:didSendProtobufSuccessfullyWithIDSIdentifier:
messagesSyncServiceClientConnectivityDidChange:
messagesSyncServiceClient:didAddMessages:
messagesSyncServiceClient:didSendInitialMessagesSync:
messagesSyncServiceClient:didFetchMoreMessages:
messagesSyncServiceClient:didFetchMoreMessagesForConversation:
messagesSyncServiceClient:didSendBatchedFetchResult:
messagesSyncServiceClient:didUpdateMessagesStatus:
messagesSyncServiceClient:didDeleteMessages:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
messageContentSyncServiceClient:didSyncMessageContent:
messageContentSyncServiceClient:didSyncImageAttachment:
messageContentSyncServiceClient:didNotifyInitialContentSyncCompleted:
accountsSyncServiceClient:didAddOrUpdateAccount:
accountsSyncServiceClient:didDeleteAccount:
accountsSyncServiceClient:didSyncInitialAccounts:
fetchesSyncServiceClient:didFailSendingProtobufWithIDSIdentifier:errorCode:
fetchesSyncServiceClient:didSendProtobufSuccessfullyWithIDSIdentifier:
fetchesSyncServiceClient:didRequestPrepareForFullSync:
fetchesSyncServiceClient:didWarnErrorDownloadingContentForMessage:
fetchesSyncServiceClient:didNotifyOldMessagesAvailable:
fetchesSyncServiceClient:didNotifyFetchRequestCompleted:
fetchesSyncServiceClient:didReportComposedMessageSendingProgress:
nanoMailSnapshotRequesterDidRequestNanoMailConnectionInterruption:
requestFirstConversations:
requestConversationsReceivedBefore:count:
requestMoreMessagesForConversationWithId:
requestMessageWithId:
notifyOpenedMessageWithId:
requestAccounts
requestSendingProgress
requestFailedComposedMessages
requestFirstUnreadMessagesWithContent:sinceDate:fromAccountsWithIds:orVIPs:orNotifyConversation:excludingMessageIds:
requestSyncedMailbox
requestIsConnected
requestSyncOfPreviewForMessageWithId:
requestFetchManual
requestFetchManualForConversationWithId:
removeMessagesBasedOnCurrentMailboxType
permitDatabaseCompactingProcedure
preventDatabaseCompactingProcedure
sendComposedMessage:
recordEventAppLaunched
recordNotificationSettingsEnabled:
discardComposedMessageWithId:
resendComposedMessageWithId:
ping
requestMessagesCount
requestAllMessages
requestFetchOldMessages
listener:shouldAcceptNewConnection:
resendIDSIdentifier:
serverQueue
setServerQueue:
xpcClientConnections
setXpcClientConnections:
xpcConversationBrowsingBasedConnections
setXpcConversationBrowsingBasedConnections:
xpcMessageUpdatesBasedConnections
setXpcMessageUpdatesBasedConnections:
localDatabase
setLocalDatabase:
isDeviceUnlocked
setIsDeviceUnlocked:
messagesSyncService
setMessagesSyncService:
contentSyncService
setContentSyncService:
accountsSyncService
setAccountsSyncService:
fetchesSyncService
setFetchesSyncService:
protectedSyncService
setProtectedSyncService:
protectedContentSyncService
setProtectedContentSyncService:
mainTransaction
setMainTransaction:
connectionsWaitingForConversationsFromFetch
setConnectionsWaitingForConversationsFromFetch:
lastFetchMoreMessagesIDSIdentifier
setLastFetchMoreMessagesIDSIdentifier:
lastFetchRequestIDSIdentifier
setLastFetchRequestIDSIdentifier:
messageIdsContentArrivedBeforeActualMessage
setMessageIdsContentArrivedBeforeActualMessage:
compactDatabaseProcedureContext
setCompactDatabaseProcedureContext:
fullSyncRequestedNextVersion
setFullSyncRequestedNextVersion:
fullSyncRecoveredInThisSession
setFullSyncRecoveredInThisSession:
nanoMailSnapshotRequester
setNanoMailSnapshotRequester:
lastStandaloneMessagesTrimDate
setLastStandaloneMessagesTrimDate:
setDemoUtility:
_fullSyncRecoveredInThisSession
_serverQueue
_xpcClientConnections
_xpcConversationBrowsingBasedConnections
_xpcMessageUpdatesBasedConnections
_localDatabase
_messagesSyncService
_contentSyncService
_accountsSyncService
_fetchesSyncService
_protectedSyncService
_protectedContentSyncService
_mainTransaction
_connectionsWaitingForConversationsFromFetch
_lastFetchMoreMessagesIDSIdentifier
_lastFetchRequestIDSIdentifier
_messageIdsContentArrivedBeforeActualMessage
_compactDatabaseProcedureContext
_fullSyncRequestedNextVersion
_nanoMailSnapshotRequester
_lastStandaloneMessagesTrimDate
_demoUtility
initWithMachServiceName:
currentRunLoop
postNotificationName:object:
setMachServiceName:
_machServiceName
initWithCapacity:
orderedSetWithArray:
defaultParagraphStyle
setHyphenationFactor:
setQuoteLevel:
setFirstLineHeadIndent:
setHeadIndent:
setAlignment:
addAttribute:value:range:
nnmlTextForegroundColorForQuoteLevel:
nnmlAppBackgroundColor
attributesAtIndex:effectiveRange:
setSpacingBeforeLeadingOfBody:
setSpacingAfterLeadingOfBody:
colorWithRed:green:blue:alpha:
nnmlTextWarningColor
_bestForegroundColorForForegroundColor:backgroundColor:
attribute:atIndex:longestEffectiveRange:inRange:
nnmlTextForegroundColorLinks
numberWithInteger:
_textAttachmentForAttachment:messageId:
numberWithBool:
containsIndex:
attribute:atIndex:effectiveRange:
addIndexesInRange:
enumerateAttributesInRange:options:usingBlock:
replaceCharactersInRange:withString:
nnmlCollapsedURLColor
dictionaryWithObjects:forKeys:count:
addAttributes:range:
enumerateRangesWithOptions:usingBlock:
attributedStringWithAttachment:
appendAttributedString:
imageSize
setBounds:
_shouldWaitForMigration
_loadControlValues
bindString:intoStatement:paramIndex:
_selectMessagesWhere:limitRange:blockForBinding:statusVersions:
preparedStatementForPattern:
stepPreparedStatement:
isResponseOkFromPreparedStatementExecution:
lastErrorMessage
closeExecutedPreparedStatement:
unsignedIntegerFromStatement:columnIndex:
_paramsStringWithString:count:
stringWithFormat:
stringFromStatement:columnIndex:
numberWithUnsignedInteger:
bindDate:intoStatement:paramIndex:
bindUnsignedInteger:intoStatement:paramIndex:
bindBool:intoStatement:paramIndex:
componentsSeparatedByString:
_selectConversationWhere:limitRange:index:messagesKeyedByConversationId:blockForBinding:
_selectConversationsWhere:limitRange:messagesKeyedByConversationId:indexesKeyedByConversationId:blockForBinding:
_indexForConversation:
_selectAccountsWhere:blockForBinding:
beginTransaction
componentsJoinedByString:
UTF8String
stringWithUTF8String:
appendSQLStatement:
flushIfNeeded
commitTransaction
rollbackTransaction
_deleteMessagesWithIds:
appendString:
urlForMessageContentWithId:
_storeProtectedData:atURL:
emailAddresses
urlForImageAttachmentOfMessageWithId:contentId:
bindData:intoStatement:paramIndex:
dataFromStatement:columnIndex:
unarchiveObjectWithData:
dateFromStatement:columnIndex:
bindInteger:intoStatement:paramIndex:
timeIntervalSince1970
_selectComposedMessageWhere:blockForBinding:
integerFromStatement:columnIndex:
attachProtectedDatabase
tableExists:inDatabase:
_createTablesUsingFile:
_mergeJournal
dettachProtectedDatabase
_deleteAllIDSIdentifiers
_setControlObjectForKey:protected:protectedBoundValue:withBlockForBinding:
_controlValueForKey:protected:withBlockForColumn:
absoluteString
boolFromStatement:columnIndex:
_messageFieldsInExpectedOrderWithUnprotectedPrefix:protectedPrefix:conversationPrefix:nullifyProtected:
_messageOrderByWithPrefix:
_messageFromCurrentRowInStatement:statusVersion:
stringByAppendingString:
urlForMessageContentsFolder
removeItemAtURL:error:
urlForImageAttachmentsFolder
urlForImageAttachmentsFolderForMessageWithId:
_conversationOrderByWithPrefix:
setObject:forKey:
_accountFieldsInExpectedOrderWithPrefix:nullifyProtected:
_accountFromCurrentRowInStatement:
preparedStatementForPattern:cacheStatement:
mergeUsingBlock:
_databaseDirectory
initWithUnprotectedDatabaseFileName:protectedDatabaseFileName:inDirectory:protectedDatabaseName:errorCode:
setCurrentDatabaseSchemaVersion:
initWithPath:
bundleForClass:
bundlePath
stringWithContentsOfFile:encoding:error:
executeSQL:
writeToURL:options:error:
currentDatabaseSchemaVersion
stringByPaddingToLength:withString:startingAtIndex:
statusVersionForMessageWithId:
deleteMessageWithId:
database
setDatabase:
journal
setJournal:
databaseQueue
setDatabaseQueue:
setWaitingForMigration:
_receivedFullSyncMessages
_databaseRecentlyMigrated
_notificationSettingsEnabled
_waitingForMigration
_fullSyncVersion
_syncedMailboxType
_syncedMailboxAccountId
_dateForRequestingMoreMessages
_lastIDSIdentifierForFullSyncRequest
_lastIDSIdentifierForHaltSyncRequest
_appLastLaunchedDate
_database
_journal
_databaseQueue
_currentDatabaseSchemaVersion
initWithBundleIDs:states:
applicationStateForApplication:
_resetAccumulatedPoints
queue
nanoMailState
_isApplicationStateActive:
accumulatedPoints
setNanoMailState:
setHandler:
_requestSnapshotUpdateIfNeeded
_incrementPointsIfAllowed:includeTimeExtraPoints:
_isApplicationStateLaunched:
delegate
sharedInstance
isDocked:
initWithPreferredDate:userString:
submitBackgroundTaskRequest:forBundleID:
setQueue:
setAccumulatedPoints:
lastNanoMailSnapshotRequest
setLastNanoMailSnapshotRequest:
numberOfUnprocessedOperations
setNumberOfUnprocessedOperations:
interruptedConnectionWithNanoMail
setInterruptedConnectionWithNanoMail:
deviceLocked
setDeviceLocked:
nanoMailStateMonitor
setNanoMailStateMonitor:
_interruptedConnectionWithNanoMail
_deviceLocked
_delegate
_queue
_accumulatedPoints
_lastNanoMailSnapshotRequest
_numberOfUnprocessedOperations
_nanoMailState
_nanoMailStateMonitor
Watch started playing demo movie.
Watch stopped playing demo movie.
Starting to replace retail database...
Error replacing database (%{public}@).
Finished replacing database.
Starting to copy template content to staging area...
Finished copying template content to staging area.
Sanitizing control settings for database to insure retail demo will run properly...
Starting to refresh messages dates (Fetched %lu messages)...
Shifting dates by interval of %ld seconds...
Finished refreshing message dates.
Receiver XPC Server Created (Connectivity: %lu)...
Dealloc'ed...
XPC Connection invalidated.
XPC Connection added...
XPC Connection does NOT have required entitlements.
Fetching from Companion for Specific Conversation (Last Date Received: %{public}@ - Conversation Id: %{public}@).
Message UPDATED (Id: %{public}@ - Status: %lu).
Message DELETED (Id: %{public}@ - Status: %lu).
Fetch resume requested.
Fetch manual requested (IDS Identifier: %{public}@).
Fetch manual requested for conversation (Conversation Id: %{public}@ - IDS Identifier: %{public}@).
Requested to send Composed Message (Id: %{public}@ - Reference Message Id: %{public}@).
Deleting composed message (Id: %{public}@).
Resending composed message (Original Id: %{public}@ - New Id: %{public}@).
User requested to resend composed message that doesn't exist (Id: %{public}@).
Ping received successfully.
Error sending IDS Messages (IDS Identifier: %{public}@ - Object Type: %{public}@ - Resend Interval: %lu - Error code: %li).
IDS Message sent successfully by IDS (IDS Identifier: %{public}@).
Changing progress (Composed message Id: %{public}@ - Progress: %li).
Connectivity did change (Is connected: %i - Connectivity type: %lu).
Initial Messages Sync Requested (Mailbox Type: %lu)
Message ADDED as Initial Sync from Provider (Message Id: %{public}@ - Message Id Header: %{public}@ - Account Id: %{public}@ - Date Received: %{public}@)
Message ADDED from Provider (Message Id: %{public}@ - Message Id Header: %{public}@ - Account Id: %{public}@ - Date Re%{public}@ - Protected Channel: %d)
Message Status UPDATED from Provider (Id: %{public}@ - Date Received: %{public}@ - Status: %lu - Protected Channel: %d)
More Messages Fetch Received
Message ADDED as More Messages Fetched from Provider (Message Id: %{public}@ - Message Id Header: %{public}@ - Account Id: %{public}@ - Date Re%{public}@)
Fetching finished successfully.
More Messages Fetch Received for Conversation (Conversation Id: %{public}@)
Message ADDED as More Messages Fetched for Conversation from Provider (Message Id: %{public}@ - Message Id Header: %{public}@ - Account Id: %{public}@ - Date Re%{public}@ - Conversation Id: %{public}@)
NNMKSyncReceiverXPCServer: Batched fetch result received (Additions: %lu - Updates: %lu - Deletions: %lu.
NNMKSyncReceiverXPCServer: Trimming database. Deleting messages older than %{public}@...
NNMKSyncReceiverXPCServer: Message ADDED from Provider in Batched Result (Message Id: %{public}@ - Message Id Header: %{public}@ - Account Id: %{public}@ - Date Received: %{public}@ - Protected Channel: %d)
NNMKSyncReceiverXPCServer: Message Status UPDATED from Provider in Batched Result but message did not exist. Ignoring... (Id: %{public}@ - Protected Channel: %d)
NNMKSyncReceiverXPCServer: Message Status UPDATE in Batched Result ignored, as it's outdated... (Id: %{public}@ - Existing Status Version: %lu - Request Status Version: %lu - Protected Channel: %d)
NNMKSyncReceiverXPCServer: Message Status UPDATED from Provider in Batched Result (Id: %{public}@ - Date Received: %{public}@ - Status: %lu - Protected Channel: %d)
NNMKSyncReceiverXPCServer: Message DELETED from Provider in Batched Result but message did not exist. Ignoring... (Id: %{public}@ - Protected Channel: %d)
NNMKSyncReceiverXPCServer: Message DELETED from Provider in Batched Result (Id: %{public}@ - Date Received: %{public}@ - Protected Channel: %d)
Message Status UPDATED from Provider but message did not exist. Ignoring... (Id: %{public}@ - Protected Channel: %d)
Message Status update request ignored, as it's outdated... (Id: %{public}@ - Existing Status Version: %lu - Request Status Version: %lu - Protected Channel: %d)
Message DELETED from Provider but message did not exist. Ignoring... (Id: %{public}@ - Protected Channel: %d)
Message DELETED from Provider (Id: %{public}@ - Date Received: %{public}@ - Protected Channel: %d)
NNMKSyncReceiverXPCServer: Notification Message ADDED from Provider along with Message Content (Message Id: %{public}@ - Message Id Header: %{public}@ - Account Id: %{public}@ - Date Received: %{public}@ - Protected Channel: %d)
NNMKSyncReceiverXPCServer: Message Content Received before actual message. Will request again when message arrives... (Id: %{public}@ - Protected Channel: %d)
NNMKSyncReceiverXPCServer: Message Content Received from Provider but had already been received. Discarding... (Id: %{public}@ - Protected Channel: %d)
Error unarchiving content. Will assume message has no content. (Message Id: %{public}@ - Exception: %{public}@).
Message Content Received from Provider (Id: %{public}@ - String Length: %lu - Compressed Data: %lu - Decompressed Data: %lu - Protected Channel: %d)
Message Preview UPDATED from Provider (Id: %{public}@)
Message Preview UPDATED in Conversation (Conversation Id: %{public}@)
Notifying clients we failed saving content (Message Id: %{public}@)...
NNMKSyncReceiverXPCServer: Image Attachment Received before actual message. Will request full content again when message arrives... (Id: %{public}@)
Image Attachment ADDED from Provider (Message Id: %{public}@ - Content Id: %{public}@)
Notification that all content has been sync'ed received (Full sync version: %lu - Callback IDS Identifier: %{public}@).
Account ADDED from Provider (Id: %{public}@)
Account UPDATED from Provider (Id: %{public}@)
Account DELETED from Provider (Id: %{public}@)
Initial Accounts Sync Requested.
Initial Account Synced from Provider (Id: %{public}@)
Last Fetch More Messages Request Failed being sent by IDS. Will inform NanoMail... (IDS Identifier: %{public}@ - Error code: %li)
Last Fetch Request Failed being sent by IDS. Will inform NanoMail... (IDS Identifier: %{public}@ - Error code: %li)
Last Full Sync Request Failed being sent by IDS. Will re-try... (IDS Identifier: %{public}@ - Error code: %li)
Last Halt Sync Request Failed being sent by IDS. Will re-try... (IDS Identifier: %{public}@ - Error code: %li)
Last Fetch More Messages Request sent successfully by IDS (IDS Identifier: %{public}@)
Last Fetch Request sent successfully by IDS. (IDS Identifier: %{public}@)
Full Sync Request sent successfully by IDS (IDS Identifier: %{public}@)
Halt Sync Request sent successfully by IDS (IDS Identifier: %{public}@)
Requested to prepare for version: %lu.
Companion responded with error for downloading message (Message id: %{public}@)... informing client.
Companion notified old messages are available.
Fetch Request Completed.
Received progress (Composed Message Id: %{public}@ - Progress: %li - Reference Message Id: %{public}@).
Fetching from Companion (Last Date Received: %{public}@ - IDS Identifier: %{public}@).
Client requested conversations, but we have no conversations or a date to request more messages in the database. We assume the mailbox is empty.
Will respond with conversations to client (Count: %lu - Initial Index: %lu - Will Fetch: %d - Error code: %li).
New Conversation ADDED (Id: %{public}@ - Messages Count: %lu)
Conversation UPDATED (Id: %{public}@ - Messages Count: %lu)
Conversation DELETED (Id: %{public}@)
Deleted messages from database based on Mailbox Type. (Mailbox Type: %lu - Count: %lu).
Compact database procedure cancelled.
Compact database procedure started delayed.
Compact database procedure will now run.
Database Compact Procedure requested for messages older than %{public}@.
Compact database procedure didn't compact messages because database doesn't have messages to compact (Count: %lu).
User hasn't been using NanoMail for a while and notifications are disabled. Halting Mail sync...
Resuming Mail sync...
Requested to send reply to a UITrigger message. Ignoring....
Sending message (Composed Message Id %{public}@ - IDS Identifier: %{public}@).
Database migrated. Recreating...
Lock state changed (Unlocked: %i)
Error retrieving Remote Object Proxy: %{public}@
Resending Message... (Id: %{public}@ - IDS Identifier: %{public}@ - Operation: Update).
Resending Message... (Id: %{public}@ - IDS Identifier: %{public}@ - Operation: Delete).
Resending Composed Message... (IDS Identifier: %{public}@).
Waiting for device to unlock to perform requested operation...
We couldn't unlock the device and attach the protected database before executing an operation that requires protected data. This might affect the UI.
Couldn't handle protection database. Not requesting a full sync at this point.
Couldn't recreate database. Not requesting a full sync at this point.
Found corrupted database.
Attempting to recover by recreating database from scratch...
Attempting to recover by replacing demo content...
Database recently migrated. Requesting a full sync...
Message discarded because database is waiting for migration.
Received message that has a fullSyncVersion so distant from the local one that we're triggering a full sync. (Local: %lu - Companion: %lu).
Message discarded because fullSyncVersion is different (Local: %lu - Companion: %lu).
Received new Sync Version: %lu.
Requesting Content (Message Id: %{public}@ - High Priority: %d)...
Requesting Full Sync... (IDS Identifier: %{public}@)
Incrementing Full Sync version to ignore other messages from Provider...
NNMKSyncReceiverXPCServer: Preparing to request a Fetch from Companion. We've detected we're connected over Could, so we'll send our list of conversations for the Companion to decide what changes to send back. %@ (Conversations count: %lu). We expect Companion to send us a batch of grouped updates and new messages.
NNMKSyncReceiverXPCServer: Preparing to request a Fetch from Companion. We've detected we're NOT connected over Could. Companion will trigger a fetch and will send messages as new messages/updates, instead of batching them all together.
Error checking if message exists (%{public}@).
Error retrieving message status version (%{public}@).
Error checking if messages exist (%{public}@).
Error getting status versions (%{public}@).
Error getting attachment content ids (Message Id: %{public}@, Error: %{public}@).
Tried to access protected when it's unavailable (device is probably locked).
Error selecting indexes for conversations (%{public}@).
Error getting conversations count (%{public}@).
Message ADDED to SQLite database (Id: %{public}@ - Date Received: %{public}@).
Error ADDING Message to SQLite database (%{public}@).
Message status UPDATED on SQLite database (Id: %{public}@ - Status: %lu).
Error UPDATING Message status on SQLite database (Id: %{public}@ - Error: %{public}@).
Message preview UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Message preview on SQLite database (Id: %{public}@ - Error: %{public}@).
Message dateRecieved UPDATED on SQLite database (Id: %{public}@).
Error UPDATING dateRecieved for Message on SQLite database (%{public}@).
Error retrieving messages for deletion (%{public}@).
Message Content ADDED to SQLite database (Id: %{public}@).
Error ADDING Message Content to SQLite database (%{public}@).
Conversation ADDED to SQLite database (Id: %{public}@).
Error ADDING Conversation to SQLite database (%{public}@).
Conversation UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Conversation on SQLite database (%{public}@).
Account ADDED to SQLite database (Id: %{public}@).
Error ADDING Account to SQLite database (%{public}@).
Account UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Account on SQLite database (%{public}@).
Account DELETED from SQLite database (Id: %{public}@).
Error DELETING Account from SQLite database (%{public}@).
Error adding Object for IDS Identifier (%{public}@).
Error retrieving Object for IDS identifier (%{public}@).
Error marking IDS Identifier as Ack'd (IDS Identifier: %{public}@ - Error: %{public}@).
Error rescheduling Object for IDS Identifier (IDS Identifier: %{public}@ - Error: %{public}@).
Error selecting IDS Identifiers scheduled to be resent (%{public}@).
Error ADDING Composed Message to Protected SQLite database (%{public}@).
Error ADDING Composed Message to SQLite database (%{public}@).
Error UPDATING Composed Message to SQLite database (%{public}@).
Error DELETING Composed Message from Protected SQLite database (%{public}@).
Error DELETING Composed Message from SQLite database (%{public}@).
Error DELETING Composed Message from Protected SQLite database before date (%{public}@).
Error selecting progress for Composed Message from IDS Identifier (%{public}@).
Error selecting message id for Composed Message (%{public}@).
Error getting messages count (%{public}@).
Error creating protected database. (%{public}@)
All Accounts deleted successfully.
Error deleting all accounts (%{public}@).
Error loading control values (%{public}@).
Error getting Control Object from SQLite database (Key: %{public}@ - Error: %{public}@).
Control Object CHANGED in SQLite database (Key: %{public}@).
Error CHANGING Control Object in SQLite database (Key: %{public}@ - Error: %{public}@).
Error selecting messages where %{public}@ (%{public}@).
Messages deleted successfully.
Error deleting messages (Error: %{public}@).
Error selecting messages and conversations where %{public}@ (%{public}@).
Error getting index for conversation (%{public}@).
Error selecting accounts where %{public}@ (%{public}@).
Error selecting Composed Message from IDS Identifier (%{public}@).
Error DELETING All IDS Identifiers from SQLite database (%{public}@).
Error executing SQL statement from journal (Error: %{public}@).
Journal merged sucessfully.
Error creating unprotected database. (%{public}@)
Error writing protected file to disk (URL: %{public}@ - Data Length: %lu - Error: %{public}@).
NanoMail's state changed. (State: %lu - Previous state: %lu - Foreground running: %d - Previously foreground running: %d - Number of accumulated points: %lu)
Interrupting the connection with NanoMail... (Number of unprocessed operations: %lu - Accumulated points: %lu)
Requesting NanoMail to process enqueued messages and take a snapshot. Reason: NanoMail is running in background and we're still XPC Connected with it. (Number of accumulated points: %lu)
Requesting NanoMail to process enqueued messages and take a snapshot. Reason: NanoMail is in the Dock. (Number of accumulated points: %lu)
We currently have enough accumulated points to request NanoMail to process messages and take a snapshot. However, NanoMail is not running in background and is not in the Dock. Ignoring and reseting counters... (Number of accumulated points: %lu)
NNMKRetailDemoUtility
NNMKSyncReceiverXPCServer
NNMKMessagesSyncServiceClientDelegate
NSObject
NNMKMessageContentSyncServiceClientDelegate
NNMKAccountsSyncServiceClientDelegate
NNMKFetchesSyncServiceClientDelegate
NNMKNanoMailSnapshotRequesterDelegate
NNMKSyncReceiverXPCServerInterface
NSXPCListenerDelegate
NNMKXPCListener
NNMKBodyContentPreparer
NNMKDatabase
NNMKNanoMailSnapshotRequester
@8@0:4
v8@0:4
v12@0:4@8
@?8@0:4
v12@0:4@?8
B8@0:4
v12@0:4B8
@"NSObject<OS_dispatch_queue>"
v20@0:4@8@12i16
v20@0:4@"NNMKMessagesSyncServiceClient"8@"NSString"12i16
v16@0:4@8@12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NSString"12
v12@0:4@"NNMKMessagesSyncServiceClient"8
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMessageAdditions"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoInitialMessagesSync"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMoreMessages"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMoreMessagesForConversation"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoBatchedFetchResult"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMessageStatusUpdates"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMessageDeletions"12
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v16@0:4@"NNMKMessageContentSyncServiceClient"8@"NNMKProtoMessageContentSync"12
v16@0:4@"NNMKMessageContentSyncServiceClient"8@"NNMKProtoImageAttachmentSync"12
v16@0:4@"NNMKMessageContentSyncServiceClient"8@"NNMKProtoInitialContentSyncCompletedNotification"12
v16@0:4@"NNMKAccountsSyncServiceClient"8@"NNMKProtoAccountAdditionOrUpdate"12
v16@0:4@"NNMKAccountsSyncServiceClient"8@"NNMKProtoAccountDeletion"12
v16@0:4@"NNMKAccountsSyncServiceClient"8@"NNMKProtoInitialAccountsSync"12
v20@0:4@"NNMKFetchesSyncServiceClient"8@"NSString"12i16
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NSString"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoPrepareForFullSyncRequest"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoErrorDownloadingContentForMessageWarning"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoOldMessagesAvailableNotification"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoFetchRequestCompletedNotification"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoComposedMessageSendingProgressReport"12
v12@0:4@"NNMKNanoMailSnapshotRequester"8
Vv12@0:4I8
Vv16@0:4@8I12
Vv16@0:4@"NSDate"8I12
Vv12@0:4@8
Vv12@0:4@"NSString"8
Vv32@0:4I8@12@16B20B24@28
Vv32@0:4I8@"NSDate"12@"NSArray"16B20B24@"NSArray"28
Vv12@0:4@"NSArray"8
Vv12@0:4@"NNMKComposedMessage"8
Vv12@0:4B8
Vv12@0:4@"NNMKMessage"8
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v24@0:4@8@12I16@20
v16@0:4@8B12
@16@0:4@8@12
@24@0:4@8@12@16@20
v20@0:4@8B12@?16
v16@0:4@8I12
v20@0:4i8@12@16
v24@0:4I8@12@16@20
v16@0:4@8@?12
v20@0:4@8I12I16
v20@0:4@8@12I16
B12@0:4i8
B12@0:4I8
@12@0:4@8
@12@0:4i8
v12@0:4I8
@"NSMutableSet"
@"NNMKDatabase"
@"NNMKMessagesSyncServiceClient"
@"NNMKMessageContentSyncServiceClient"
@"NNMKAccountsSyncServiceClient"
@"NNMKFetchesSyncServiceClient"
@"NNMKProtectedSyncServiceClient"
@"NNMKProtectedContentSyncServiceClient"
@"NSObject<OS_os_transaction>"
@"NSString"
@"NNMKNanoMailSnapshotRequester"
@"NSDate"
@"NNMKRetailDemoUtility"
v20@0:4@8@12@16
@12@0:4^i8
@16@0:4@8^I12
I12@0:4@8
@16@0:4@8^@12
@36@0:4{_NSRange=II}8@16@20B24B28@32
@12@0:4I8
@16@0:4I8^@12
@20@0:4{_NSRange=II}8^@16
@24@0:4@8I12^I16^@20
@20@0:4@8^@12^@16
@20@0:4@8^@12^I16
v20@0:4@8I12@16
v16@0:4i8@12
@12@0:4^@8
@20@0:4@8^i12^@16
i12@0:4B8
v24@0:4@8B12*16@?20
@28@0:4@8{_NSRange=II}12@?20^@24
@24@0:4@8@12@16B20
@16@0:4^{sqlite3_stmt=}8^I12
@32@0:4@8{_NSRange=II}12^I20^@24@?28
@32@0:4@8{_NSRange=II}12^@20^@24@?28
@16@0:4@8@?12
@16@0:4@8B12
@12@0:4^{sqlite3_stmt=}8
i8@0:4
@16@0:4@8I12
@"NNMKProtectedSQLiteConnection"
@"NNMKSQLJournal"
v16@0:4I8B12
@"<NNMKNanoMailSnapshotRequesterDelegate>"
@"BKSApplicationStateMonitor"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>FAKETEAMID.</string>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.mail.sync.messages</string>
<string>com.apple.private.alloy.mail.sync.content</string>
<string>com.apple.private.alloy.mail.sync.protected</string>
<string>com.apple.private.alloy.mail.sync.protected.content</string>
<string>com.apple.private.alloy.mail.sync.accounts</string>
<string>com.apple.private.alloy.mail.fetches</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.mail.sync.messages</string>
<string>com.apple.private.alloy.mail.sync.content</string>
<string>com.apple.private.alloy.mail.sync.protected</string>
<string>com.apple.private.alloy.mail.sync.protected.content</string>
<string>com.apple.private.alloy.mail.sync.accounts</string>
<string>com.apple.private.alloy.mail.fetches</string>
</array>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.gstore</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>nanomaild</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
