init
UUID
class
setWithObjects:
decodeObjectOfClasses:forKey:
setMessageUUID:
messageUUID
encodeObject:forKey:
UUIDString
stringWithFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
description
.cxx_destruct
_messageUUID
setSessionUUID:
setClientUserInfo:
sessionUUID
clientUserInfo
initWithSessionUUID:
_sessionUUID
_clientUserInfo
decodeObjectOfClass:forKey:
boolValue
setHandlesNotifications:
handlesNotifications
numberWithBool:
whitelistedClassForResultObject
_handlesNotifications
setMaxConcurrentOperationCount:
stringWithString:
isSuspended
appendFormat:
operationCount
numberWithUnsignedInteger:
operations
addDependency:
addOperation:
debugDescription
mLastOperation
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
copy
name
addTransitionToState:triggeringEvent:action:
objectForKeyedSubscript:
alloc
initWithState:action:
setObject:forKeyedSubscript:
initWithName:
addTransitionToState:triggeringEvent:
transitionWithTriggeringEvent:
enterAction
setEnterAction:
exitAction
setExitAction:
mTranstionByTriggeringEvent
_name
_enterAction
_exitAction
currentRunLoop
cat_performBlock:
mainRunLoop
arrayWithObjects:count:
arrayWithArray:
currentMode
addObject:
cat_performInModes:block:
getCFRunLoop
cat_performBlockOnMainRunLoop:
initWithTaskUUID:
setRequest:
request
initWithTaskUUID:request:
_request
handleFailureInFunction:file:lineNumber:description:
dictionaryWithDictionary:
enumerateKeysAndObjectsUsingBlock:
errorWithDomain:code:userInfo:
setNumberStyle:
isKindOfClass:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
length
getObjectValue:forString:range:error:
cat_numberWithObject:
inputStream
propertyForKey:
createConnectionPairWithConnection:andConnection:bufferSize:
getBoundStreamsWithBufferSize:inputStream:outputStream:
initWithInputStream:outputStream:bufferSize:
getInputStream:outputStream:
initWithInputStream:outputStream:
setDelegate:
setName:
setUnderlyingQueue:
setSuspended:
dealloc
initWithData:userInfo:
enqueueSendContext:
bufferSize
initWithStream:length:bufferSize:userInfo:
secureUsingIdentity:trustedCertificates:isServer:
connectionDidInterruptWithError:
streamError
dictionaryWithObjects:forKeys:count:
outputStream
streamStatus
open
connectionTimeoutInterval
connectionTimedOut
unscheduleStreams
close
setInputStream:
setOutputStream:
countByEnumeratingWithState:objects:count:
sendDidFail:withError:
cancelAllOperations
removeAllObjects
delegateDidClose
blockOperationWithBlock:
respondsToSelector:
hasBytesAvailable
hasSpaceAvailable
null
numberWithInt:
setProperty:forKey:
setUsesSSL:
usesSSL
delegateWillSecure
numberWithUnsignedInt:
delegateDidSecure
initWithConnection:trust:
delegate
connection:encounteredTrustDecisionWhileTryingToSecure:
connectionShouldSendData
connectionDidReceiveData
dataWithLength:
mutableBytes
setLength:
initWithData:
address
lastObject
trySendingDataWithContext:error:
hasBytesRemaining
removeLastObject
sendDidSucceed:
insertObject:atIndex:
bufferedDataWithError:
bytes
write:maxLength:
bytesWritten
setBytesWritten:
data
userInfo
delegateDidSendData:userInfo:
stream
delegateDidSendDataWithStream:userInfo:
delegateDidFailToSendData:userInfo:error:
delegateDidFailToSendDataWithStream:userInfo:error:
read:maxLength:
appendBytes:length:
delegateDidInterruptWithError:
connectionWillSecure:
connectionDidSecure:
connection:didSendData:userInfo:
connection:didFailToSendData:userInfo:error:
connection:didReceiveData:
connection:didReceiveDataRequestWithURL:
connection:didSendDataWithStream:userInfo:
connection:didFailToSendDataWithStream:userInfo:error:
connection:didReceiveStreamData:moreComing:
connectionDidOpen:
connectionDidClose:
connection:didInterruptWithError:
delegateDidReceiveData:
delegateDidReceiveStreamData:moreComing:
delegateDidReceiveDataRequestWithURL:
_stream:handleEvent:
configureStreamSocketOptions
delegateDidOpen
tryEvaluatingPeerTrustWithStream:
createConnectionPairWithConnection:andConnection:
messageParser:didParseRequestData:
messageParser:didParseResponseData:moreComing:
messageParser:didParseRequestWithURL:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
stream:handleEvent:
peerTrust
initWithNetService:
sendData:userInfo:
sendDataWithStream:length:userInfo:
secureUsingClientIdentity:trustedCertificates:
secureUsingServerIdentity:trustedCertificates:
scheduleStreams
trustDecisionDidRespondWithDecisionToAllowUntrustedConnection:
setConnectionTimeoutInterval:
socketOptions
setSocketOptions:
setBufferSize:
mMessageParser
mState
mPendingSendContexts
mConnectionTimeoutTimer
mInterruptionError
mReadBuffer
mTrustedCertificates
mPeerTrustState
mStreamEventQueue
_usesSSL
_delegate
_socketOptions
_inputStream
_outputStream
_bufferSize
_connectionTimeoutInterval
encodeRequestData:
subdataWithRange:
mEncodedData
_data
_userInfo
_bytesWritten
responseHeaderForContentWithLength:
dataLength
replaceBytesInRange:withBytes:
mBuffer
mHeaderData
mBytesRead
_stream
_dataLength
resourcesForKeys:exclusive:
count
allValues
invalidate
makeObjectsPerformSelector:
makeResourceProxyIfPossible:
initWithDelegateQueue:completionBlock:
waitForRegistrationEntry:forKey:exclusive:
resume
cancel
registerResource:forKey:maxConcurrentCount:
initWithResource:maxConcurrentCount:
removeObjectForKey:
currentCount
resourceForKey:exclusive:
waitForResourcesForKeys:exclusive:delegateQueue:completionBlock:
stopWaiting:
registerResource:forKey:
unregisterResourceForKey:
mRegistrationByKey
UTF8String
servicePendingWaitTokens
makeResourceProxyIfPossibleWithoutLocking:
initWithExclusive:group:
pendingWaitsNeedServicing
isExclusive
firstObject
removeObjectAtIndex:
notifyWithResourceProxy:
initWithResource:registration:exclusive:
waitForResourceWithExclusive:group:
resourceProxyDidInvalidate:
mResource
mMaxConcurrentCount
mPendingWaits
mPendingWaitsSource
mPendingWaitsQueue
_currentCount
methodSignatureForSelector:
setTarget:
invoke
forwardingTargetForSelector:
forwardInvocation:
mRegistration
_isExclusive
performCompletionBlock
whenStateIs:atomicallySwapWith:
resourceProxy
mTokenByKey
mDelegateQueue
mGroup
mCompletionBlock
mFinished
_resourceProxy
setTaskUUID:
taskUUID
_taskUUID
cat_shiftAndAddIndexesInRange:
shiftIndexesStartingAtIndex:by:
addIndexesInRange:
cat_shiftAndRemoveIndexesInRange:
removeIndexesInRange:
containsIndex:
cat_shiftAndRemoveIndex:
cat_shiftAndAddIndex:
cat_moveIndex:toIndex:
isEqualToString:
delegateDidReceiveRequestWithURL:
integerValue
delegateDidReceiveRequestData:
dataWithBytes:length:
delegateDidReceiveResponseData:moreComing:
URLWithString:
mCurrentMessage
mCurrentHeaderFields
mCurrentBytesReceived
currentState
initWithTarget:
standardUserDefaults
valueForKey:
setLogLevel:
addStateWithName:
sendHelloMessageAndResumeQueue
sendMessage:
enqueueSendForMessage:
resumeQueueAndConnection
cancelHelloMessageAndResumeQueueOperations
suspend
suspendQueueAndConnection
didReceiveMessage:
enqueueDelegateDidConnect
didInterruptWithError:
enqueueDelegateCouldNotConnectWithError:
enqueueDelegateDidReceiveMessage:
enqueueDelegateDidInterruptWithError:
cancelAndResumeQueuesAndEnqueueInvalidateConnection
invalidSendForMessage:
didInvalidate
enqueueDelegateDidInvalidateAndFinalize
start
eventWithTrigger:context:
delegateDidResume
resumeConnection
operationToSendMessage:
resumeQueue
suspendConnection
suspendQueue
error
domain
code
transport:didFailToSendMessage:error:
transport:didSendMessage:
setQueuePriority:
invalidateConnection
delegateDidInvalidate
transportDidResume:
transportDidConnect:
transport:didReceiveMessage:
transport:didInterruptWithError:
transportDidInvalidate:
mFSM
mControlQueue
mMessageQueue
mStrongSelf
isCancelled
isCanceled
respondWithDecisionToAllowUntrustedConnection:
trust
mConnection
mHasResponded
_trust
initWithName:userInfo:
setUserInfo:
initWithTaskUUID:name:userInfo:
strongToStrongObjectsMapTable
abandonTransport
enqueueMessage:
connectWithTransport:
resumeTransport:
connectWithTransportFromTaskSession:
resumeCapturedTransportFromTaskSession:
invalidateWithError:
clearQueuedMessagesAndCancelAllOperationsWithError:
clientDidResumeWithMessage:
evaluateConnectionWithResumeMessage:
acceptConnection
sendResumedMessage
rejectConnection
delegateDidConnect
sendMessageThroughTransport:
processTaskMessage:
processNotificationMessage:
delegateDidDisconnect
delegateWillInvalidateAndInvalidateSessionWithError:
didCompleteSendForMessage:
sessionDidInvalidate
delegateDidInvalidateAndFinalize
localOperationDidFinish:
addTarget:selector:forOperationEvents:delegateQueue:
initWithTarget:selector:object:
invocation
retainArguments
delegateEnqueueOperation:
containsObject:
removeObject:
savePreviousSessionInfo
delegateShouldAcceptConnection
discardPreviousSessionInfo
restorePreviousSessionInfo
captureTransport
weakObjectsHashTable
delegateWillInvalidate
initWithError:
objectForKey:
allKeys
setPendingRemoteTaskUUIDs:
setServerUserInfo:
processSessionMessage:
postNotificationWithName:userInfo:
processNotificationWithName:userInfo:
isFinished
canTransitionWithTriggeringEvent:
processStartMessage:
processCancelMessage:
processFetchProgressMessage:
initWithTaskUUID:taskError:
delegatePrepareOperationWithRequest:error:
notificationDelegate
setNotificationDelegate:
operationDidIncrementProgress:remoteUUID:
addTarget:selector:forOperationEvents:userInfo:delegateQueue:
operationDidFinish:remoteUUID:
initWithOperationUUID:
setPhase:
initWithTaskUUID:progress:
completedUnitCount
totalUnitCount
initWithTaskUUID:completedUnitCount:totalUnitCount:
progressForOperation:
setObject:forKey:
fetchProgress
delegatedidReceiveNotificationWithName:
session:prepareOperationForRequest:error:
session:enqueueOperation:
session:shouldAcceptConnectionFromTransport:
session:didReceiveNotificationWithName:userInfo:
sessionDidConnect:
session:didInterruptWithError:
sessionDidDisconnect:
sessionWillInvalidate:
sessionDidInvalidate:
taskOperation:didPostNotificationWithName:userInfo:
enqueueOperation:
disconnect
transport
mTransport
mOperations
mOperationByRemoteUUID
mEnqueuedMessages
mOrphanedTransports
mOrphanedOperationQueue
mPreviousSessionInfo
mRemoteUUIDsByFinishedOperationProgressUpdates
mSessionDidInvalidateGroup
mIsStarting
mDelegationQueue
updateKeysAffectingArrangementForceUpdate:includeAllContent:
isEqualToArray:
isEqualToIndexSet:
controllerDidChangeSelectionIndexes:
selectionIndexes
arrangedObjects
objectsAtIndexes:
array
unbindContent
objectAtIndex:
indexOfObject:
bindContentToObject:withKeyPath:usingTransformer:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
removeObserversFromObject:forKeyPaths:
setArrangedObjects:
cat_calculateAddedObjects
cat_calculateRemovedObjects
transformedValue:
enumerateObjectsUsingBlock:
changeContent:
scheduleRearrangeTimerIfNeed
observeValueForKeyPath:ofObject:change:context:
addObserversToObject:forKeyPaths:
arrangeObject:
changeObject:atIndex:forChangeType:newIndex:
filterPredicate
evaluateWithObject:
mutableCopy
newIndexForObject:inArrangedObjects:
sortDescriptors
valueForKeyPath:
compareObject:toObject:
compare:
indexOfObject:inSortedRange:options:usingComparator:
rearrangeTimerDidFire:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
automaticallyRearrangesObjects
addObjectsFromArray:
setWithSet:
setWithArray:
isEqualToSet:
minusSet:
initWithIndexSet:
notifyArrangedObjectsWillChange
willChangeValueForKey:
didChangeValueForKey:
notifyArrangedObjectsDidChangeWithPreviousArrangedObjects:
controllerWillChangeContent:
controller:willChangeObject:atIndex:forChangeType:newIndex:
controllerDidChangeContent:
controller:didChangeObject:atIndex:forChangeType:newIndex:
setAutomaticallyRearrangesObjects:
setSortDescriptors:
setFilterPredicate:
setSelectionIndexes:
selectedObjects
content
initWithObjects:
numberOfArrangedObjects
arrangedObjectAtIndex:
arrangedObjectsAtIndexes:
resolveArrangedObjectsAtIndexes:reply:
arrangedIndexOfObject:
bindContentToObject:withKeyPath:
rearrangeObjects
updateObject:
mPendingArrangedObjects
mPendingInsertedObjects
mPendingDeletedObjects
mContent
mTarget
mKeyPath
mChangingSelection
mDelegateKnowsContentIsChanging
mKeysAffectingArrangement
mObjectsToRearrange
mRearrangeTimer
mTransformer
mOriginalObjects
_automaticallyRearrangesObjects
_sortDescriptors
_filterPredicate
_selectionIndexes
_arrangedObjects
setProgress:
progress
_progress
initWithName:attributes:
localizedStandardCompare:
sortDescriptorWithKey:ascending:selector:
sortedArrayUsingDescriptors:
initWithUTF8String:
initialize
propertiesForClass:
propertiesForProtocol:
instanceVariableName
type
objectClass
isReadOnly
isNonAtomic
association
customGetterSelector
customSetterSelector
isWeakReference
_readOnly
_nonAtomic
_weakReference
_instanceVariableName
_type
_objectClass
_association
_customGetterSelector
_customSetterSelector
date
initWithOperation:
stateDescription
isAsynchronous
queuePriority
setWithObject:
isReady
setEnqueuedDate:
phase
waitUntilFinished
removeDependency:
operationWillStart
dependencies
setStartedDate:
endOperationWithError:
operationDidStart:
main
endOperationSuccessfullyIfNeeded
callStackSymbols
lock
unlock
finalizeOperation
setResultObject:
setError:
subarrayWithRange:
operationWillFinish
setFinishedDate:
operationDidFinish
operationDidFinish:
addObserver:
initWithTarget:selector:events:userInfo:delegateQueue:
automaticallyNotifiesObserversOfUUID
automaticallyNotifiesObserversOfCreatedDate
automaticallyNotifiesObserversOfEnqueuedDate
automaticallyNotifiesObserversOfStartedDate
automaticallyNotifiesObserversOfFinishedDate
isCancelable
keyPathsForValuesAffectingIsCanceled
isExecuting
endOperationWithResultObject:
operationWillEnqueueOntoOperationQueue:
addTarget:selector:forOperationEvents:
addTarget:selector:forOperationEvents:userInfo:
setUUID:
createdDate
setCreatedDate:
enqueuedDate
startedDate
finishedDate
resultObject
canCancel
setCompletedUnitCount:
setTotalUnitCount:
mCallStackSymbols
mLock
mObserverManager
_canCancel
_UUID
_createdDate
_enqueuedDate
_startedDate
_finishedDate
_phase
_error
_resultObject
_completedUnitCount
_totalUnitCount
events
notifyObserversOperationDidProgress:
allObjects
operationDidProgress:
removeObserver:forKeyPath:context:
removeObserver:
mObservers
mObserverQueue
mProgressSource
mOperation
mIsObserving
invokeActionWithOperation:
delegateQueue
target
selector
invocationWithMethodSignature:
setSelector:
numberOfArguments
setArgument:atIndex:
_target
_selector
_events
_delegateQueue
initWithRemoteConnection:
setTransport:
setMessage:
remoteTransportDelegate
transportWillSecure:
transport:encounteredTrustDecisionWhileTryingToSecure:
transportDidSecure:
didSendData
didFailWithError:
objectEnumerator
cat_unarchiveObjectOfClass:withData:
createRemoteTransportPairWithTransport:andTransport:
remoteTransportSendMessageOperation:sendData:
setRemoteTransportDelegate:
mOperationByUUID
mConnectionHasOpened
_remoteTransportDelegate
message
archivedDataWithRootObject:
didEncodeData:
_transport
_message
connectWithClientTransport:
makeSessionWithClientTransport:
startInvalidatingWithError:
allSessionsDidInvalidate
setValue:forKey:
makeObjectsPerformSelector:withObject:
delegateClientSession:shouldConnectWithTransport:
delegateClientSessionDidConnect:
delegateClientSessionDidDisconnect:
delegateClientSession:didInterruptWithError:
delegateSessionDidInvalidate:
delegateClientSession:didReceiveNotificationWithName:userInfo:
server:clientSession:operationForRequest:error:
server:clientSession:enqueueOperation:
server:clientSession:shouldConnectWithTransport:
serverDidInvalidate:
server:clientSession:didInterruptWithError:
server:clientSessionDidConnect:
server:clientSessionDidDisconnect:
server:clientSessionDidInvalidate:
server:clientSession:didReceiveNotificationWithName:userInfo:
clientSessions
connectedClientSessions
invalidateAllClientSessions
disconnectAllClientSessions
mSessions
mActiveSessionsByUUID
mInvalidatingSessionsByUUID
mConnectedSessionsByUUID
mAllSessionsDidInvalidateGroup
dataWithData:
port
isEqualToEndPoint:
initWithAddress:port:
_address
_port
adaptiveWriteTimeout
setAdaptiveWriteTimeout:
keepAliveEnabled
setKeepAliveEnabled:
keepAliveDelay
setKeepAliveDelay:
keepAliveInterval
setKeepAliveInterval:
keepAliveCount
setKeepAliveCount:
netServiceType
setNetServiceType:
copyWithZone:
_adaptiveWriteTimeout
_keepAliveEnabled
_keepAliveDelay
_keepAliveInterval
_keepAliveCount
_netServiceType
canSendNotificationWithName:userInfo:
defaultCenter
postNotificationName:object:userInfo:
validateRequest:error:
initWithRequest:
processMessage:
remoteUUID
setRemoteUUID:
_notificationDelegate
_remoteUUID
numberWithInteger:
prepareTaskOperationForRequest:
initWithRemoteTaskOperations:
cancelSubOperations
performSelectorOnMainThread:withObject:waitUntilDone:
remoteTaskDidFinish:
initWithTaskClient:requests:
remoteTaskOperations
mRemoteTasks
mQueue
cat_addDependencies:
dateWithTimeIntervalSinceReferenceDate:
cat_dateWithInternetTimeString:
cat_dateWithObject:
stringByPaddingToLength:withString:startingAtIndex:
localizedDescription
localizedRecoverySuggestion
formattedCode
verboseDescriptionWithIdentation:
stringByAppendingFormat:
formattedCode:
verboseDescription
isAny
isLocalWiFi
isEqualToAddress:
localWiFi
initWithString:
cat_unarchiveObjectOfClasses:withData:
initForReadingWithData:
setRequiresSecureCoding:
decodePropertyListForKey:
cat_unarchivePropertyListObjectWithData:
mapTableWithKeyOptions:valueOptions:
didPrepareTaskOperation:
enqueueTaskOperation:
connectWithTransportFromTaskClient:
resumeCapturedTransportFromTaskClient:
abandonTransportClearQueuedMessagesAndCancelAllOperationsWithError:
resumeSession
sessionResumedWithTaskUUIDs:
resumeWithTaskUUIDs:
trackTaskOperation:
taskOperationDidFailWithInvalidTaskClient:
initWithRequest:client:
clientFailedWithError:
activeOperationDidFinish:
serverUserInfo
pendingRemoteTaskUUIDs
taskError
delegatedidReceiveNotificationWithName:userInfo:
client:didReceiveNotificationWithName:userInfo:
clientDidConnect:
client:didInterruptWithError:
clientDidDisconnect:
clientWillInvalidate:
clientDidInvalidate:
remoteTaskOperation:preparedMessage:
mActiveRemoteTaskOperations
mRemoteTaskByUUID
mEnqueuedTaskUUIDs
_serverUserInfo
dictionaryFromTXTRecordData:
hasSuffix:
indexesOfObjectsPassingTest:
substringToIndex:
appendData:
dataFromTXTRecordDictionary:
cat_dictionaryFromData:
cat_dataFromDictionary:
didStart
invokeBlock:operation:
didProgress
didFinish
setDelegateQueue:
setDidStart:
setDidProgress:
setDidFinish:
_didStart
_didProgress
_didFinish
exportedObject
valueForEntitlement:
setUpConnection
tearDownConnection
remoteObjectProxy
didProcessMessage
_setQueue:
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedObject:
setExportedInterface:
setInterruptionHandler:
setInvalidationHandler:
initWithXPCConnection:
boolValueForEntitlement:
transportSendMessageOperation:processMessage:
mConnectionHasResumed
mConnectionShouldInvalidate
mConnectionHasInvalidated
_pendingRemoteTaskUUIDs
assertResultObject:isValidForRequestClassName:
classForResultObjectWithRequestClassName:
state
unsignedIntegerValue
setIsCancelable:
setIsCanceled:
setRequestClassName:
requestClassName
progressStateDescription
allocWithZone:
mutableCopyWithZone:
hasPrefix:
_isCancelable
_isCanceled
_requestClassName
initWithOperationUUID:requestClass:
strongToWeakObjectsMapTable
initWithBlock:request:
sessionDidInterruptWithError
sessionDidReceiveNotification
sessionDidConnect
sessionDidDisconnect
createClientTransport
registerBlock:forRequestClass:
registerLongRunningOperationForRequestClass:
cancelLongRunningOperationsForRequestClass:
setSessionDidConnect:
setSessionDidReceiveNotification:
setSessionDidInterruptWithError:
setSessionDidDisconnect:
setSessionDidInvalidate:
setDidInvalidate:
mServer
mOperationBlocksByRequestClassName
mLongRunningOperationRequestClassNames
mLongRunningOperationsByUUID
_clientSessions
_sessionDidConnect
_sessionDidReceiveNotification
_sessionDidInterruptWithError
_sessionDidDisconnect
_sessionDidInvalidate
_didInvalidate
mBlock
backgroundQueue
maxConcurrentOperationCount
startObserving:
delegateWillAddOperation:
delegateOperationDidFinish:
stopObserving:
operationQueue:operationDidFinish:
operationQueue:willAddOperation:
currentQueue
mainQueue
addOperations:waitUntilFinished:
action
_state
_action
nativeSocket
socketDidCancel
socketDidReceiveEvent
populateLocalEndPoint
populateRemoteEndPoint
setNativeSocket:
socketQueue
socketDidConnect
socketDidFailWithError:
socketSource
socketDidReceiveListeningEvent
socketDidReceiveData
acceptPendingConnection
initWithNativeSocket:
userQueue
delegateShouldAcceptNewSocket:
delegateDidFailWithError:
socket:shouldAcceptNewSocket:
socket:didReceiveData:
socketDidClose:
socketDidConnect:
socket:didFailWithError:
listenWithEndPoint:error:
connectToEndPoint:error:
localEndPoint
remoteEndPoint
mIsInvalid
_nativeSocket
_localEndPoint
_remoteEndPoint
_socketSource
_socketQueue
_userQueue
initWithLocaleIdentifier:
setLocale:
setDateFormat:
cat_RFC3339Formatters
dateFromString:
stringFromDate:
cat_internetTimeString
bundleForClass:
cat_localizedStringsForKey:value:table:
flags
isReachableForLocalWiFiWithFlags:
isReachableForNetworkWithFlags:
initWithAddress:
reachabilityWithAddress:
configureCallback
isReachable
reachabilityDidChangeWithFlags:
setFlags:
delegateDidChange
reachabilityDidChange:
keyPathsForValuesAffectingReachable
reachabilityForInternetConnection
reachabilityForLocalWiFi
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
mReachabilityRef
_flags
initWithRequest:clientError:
cancelOperationIfNeeded
client
updateProgressWithRemoteProgress:
updateCompletedUnitCount:andTotalUnitCount:
remotePhase
setRemotePhase:
invalidRemoteTaskWithRequest:error:
mClientError
_client
_remotePhase
helperForBundle:
stringsForKey:value:table:
weakToStrongObjectsMapTable
initWithBundle:
URLForResource:withExtension:subdirectory:localization:
initWithContentsOfURL:options:error:
propertyListWithData:options:format:error:
stringByKeyForTableName:
localizedStringForKey:value:table:
bundle
mStringByKeyByTableName
_bundle
initWithFormat:arguments:
unsignedIntValue
setTaskError:
_taskError
initialState
addState:
setInitialState:
setCurrentState:
delegateDidEnterState:event:
logLevel
eventForTriggeringEvent:
trigger
delegateWillExitState:event:
invokeAction:event:
context
stateWithName:
mStateByName
mCalloutReason
_initialState
_currentState
_logLevel
initWithEventTrigger:context:
_trigger
_context
messageUUID
<%@: { messageUUID = '%@' }>
supportsSecureCoding
TB,R
T@"NSUUID",&,N,V_messageUUID
sessionUUID
clientUserInfo
T@"NSUUID",C,N,V_sessionUUID
T@"NSDictionary",C,N,V_clientUserInfo
handlesNotifications
TB,N,V_handlesNotifications
Suspended: %@
Operation Count: %@
Operations: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATState.m
<Unknown File>
%@ cannot call %@
Invalid parameter not satisfying: %@
name
<%@: %p { name = %@ }>
triggeringEvent
%@ cannot add duplicate transition for %@
T@"NSString",R,C,N,V_name
enterAction
T:,N,V_enterAction
exitAction
T:,N,V_exitAction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTaskMessageStart.m
request
T@"CATTaskRequest",&,N,V_request
com.apple.catalyst
General
v4@?0
NSError *CATErrorWithDomainCodeAndUserInfo(NSString *__strong, NSInteger, CATErrorDescriptionsGenerator, NSDictionary *__strong)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATError.m
errorDescriptionsWithCodeAndUserInfo
NSDescription
v16@?0@4@8^B12
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATRemoteConnection.m
connection1
connection2
netService
inputStream
outputStream
Stream Event Queue
%@ cannot dealloc while receiver is still valid.
<%@: %p { name = %@ } >
%@ cannot call %@ when invalidated.
Connection did close
_scheduleInCFRunLoop:forMode:
identity
error
Handle Stream Event Operation
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
T@"NSInputStream",&,N,V_inputStream
T@"NSOutputStream",&,N,V_outputStream
usesSSL
TB,N,V_usesSSL
bufferSize
TI,N,V_bufferSize
delegate
T@"<CATRemoteConnectionDelegate>",W,N,V_delegate
T@"NSString",C,N,V_name
peerTrust
T^{__SecTrust=},R,N
connectionTimeoutInterval
Td,N,V_connectionTimeoutInterval
socketOptions
T@"CATRemoteConnectionSocketOptions",C,N,V_socketOptions
data
userInfo
T@,R,N
hasBytesRemaining
TB,R,N
bytesWritten
TI,N
T@"NSData",R,C,N,V_data
T@,R,N,V_userInfo
TI,N,V_bytesWritten
stream
T@"NSInputStream",R,C,N,V_stream
dataLength
TI,R,N,V_dataLength
TI,R,N,V_bufferSize
<%@: %p %@>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATArbitrator.m
%@ is missing entry for %@
resource
%@ cannot call %@ with maxConcurrentCount == 0
%@ cannot call %@ when key (%@) is already registered
maxConcurrentCount > 0
%@.%p.pending-waits
currentCount
TI,R,N,V_currentCount
%@ cannot call %@ because receiver has been invalidated
isExclusive
TB,R,N,V_isExclusive
delegateQueue
completionBlock
entry
v16@?0@"NSString"4@"_CATProxyWaitToken"8^B12
group
resourceProxy
T@,R,N,V_resourceProxy
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTaskMessage.m
taskUUID
<%@: %p { messageUUID = '%@', taskUUID = '%@' }>
T@"NSUUID",C,N,V_taskUUID
Content-Length
http://localhost/
POST
T@"<CATHTTPMessageParserDelegate>",W,N,V_delegate
Invalidated
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTransport.m
%@.%p.control
%@.%p.messages
CATTransportLogLevel
Not Connected (Suspended)
Connecting
Connecting (Suspended)
Connected
Connected (Suspended)
Invalidating
<%@: %p { name = %@, state = %@ }>
<%@: %p { state = %@ }>
Control Queue:%@
Message Queue:%@
Receive Message
Resume Connection
Resume Queue
Resume Queue and Connection
Send Message
Delegate Did Send Message
Invalid Send
Invalidate Connection
%@ cannot call %@ when it has not created a strong reference to self
Delegate Did Invalidate
Finalize Transport
%@ must override %@
Delegate Did Connect
Delegate Did Receive Message
Delegate Did Interrupt
T@"<CATTransportDelegate>",W,N,V_delegate
trust
T@,R,V_trust
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATNotificationMessage.m
T@"NSDictionary",C,N,V_userInfo
_CATTaskSessionUUID
_CATTaskSessionClientUserInfo
_CATTaskSessionOperationRemoteUUID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTaskSession.m
CATTaskLogLevel
Disconnected
Negotiating
<%@: %p { state = %@, session = %@, transport = %@ }>
<%@: %p { state = %@, session = %@ }>
operation
%@.%p.delegation
otherSession
%@ cannot call %@ when the other session is the receiver
%@ cannot call %@ when there is no transport
%@ cannot call %@ when previous session has not been popped
transport
%@ cannot call %@ with %@ when there is no transport
kCATErrorMessageNameKey
kCATErrorRequestNameKey
%@.%p.orphaned
T@"NSUUID",&,N,V_sessionUUID
T@"CATTransport",R,N,VmTransport
T@"<CATTaskSessionDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATCollectionController.m
%@ is already observing <%@: %p> on keypath %@
%@ cannot call %@ when there is already content set
v12@?0@4^B8
i12@?0@4@8
changeBlock
selectionIndexes
arrangedObjects
T@"NSArray",&,V_arrangedObjects
T@"<CATCollectionControllerDelegate>",W,V_delegate
sortDescriptors
T@"NSArray",&,V_sortDescriptors
filterPredicate
T@"NSPredicate",&,V_filterPredicate
T@"NSIndexSet",C,V_selectionIndexes
automaticallyRearrangesObjects
TB,V_automaticallyRearrangesObjects
content
T@"NSSet",R,N
selectedObjects
T@"NSArray",R
_CATCollectionControllerContentObservationContext
_CATCollectionControllerArrangementKeyObservationContext
progress
T@"CATTaskProgress",C,N,V_progress
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATProperty.m
attributes
instanceVariableName
T@"NSString",R,C,N,V_instanceVariableName
type
Ti,R,N,V_type
objectClass
T#,R,N,V_objectClass
readOnly
TB,R,N,GisReadOnly,V_readOnly
nonAtomic
TB,R,N,GisNonAtomic,V_nonAtomic
association
Ti,R,N,V_association
customGetterSelector
T:,R,N,V_customGetterSelector
customSetterSelector
T:,R,N,V_customSetterSelector
weakReference
TB,R,N,GisWeakReference,V_weakReference
%@.%p
<%@: %p { name = %@, ID = %@, state = %@, completed = %ld/%ld }>
%c%c%c [%ld]
---REEEEF
isCancelled
isReady
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATOperation.m
%@ cannot call %@ when state is %d
%@ cannot transition to '_CATOperationStateStarting' from state (%d).
%@ cannot transition to '_CATOperationStateRunning' from state (%d).
isExecuting
%@ cannot call %@ when operation's state is %ld
%@ cannot call %@ when operation is already finished. Previous call:
%@ cannot call %@ when the specified error is nil.
CATCaptureCallStackSymbols
*** Enable backtrace by setting CATCaptureCallStackSymbols to YES ***
isFinished
UUID
T@"NSUUID",&,V_UUID
phase
TI,V_phase
createdDate
T@"NSDate",&,V_createdDate
enqueuedDate
T@"NSDate",&,V_enqueuedDate
startedDate
T@"NSDate",&,V_startedDate
finishedDate
T@"NSDate",&,V_finishedDate
T@"NSError",&,V_error
T@"NSDictionary",&,V_userInfo
resultObject
T@,&,V_resultObject
completedUnitCount
Ti,V_completedUnitCount
totalUnitCount
Ti,V_totalUnitCount
isCanceled
canCancel
TB,R,V_canCancel
%@.%@
observer
%@ cannot call %@ with an operation (%@) not being observed
%@: %@ is unavailable
target
%@.%p.%p.%@
T@,R,N,V_target
selector
T:,R,N,V_selector
events
TI,R,N,V_events
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
_CATOperationCompletedUnitCountObservationContext
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATRemoteTransport.m
transport1
transport2
remoteConnection
remoteTransportDelegate
T@"<CATRemoteTransportDelegate>",W,N,V_remoteTransportDelegate
T@"CATRemoteTransport",W,N,V_transport
message
T@"CATMessage",&,N,V_message
T@"NSError",C,N,V_error
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTaskServer.m
Running
T@"<CATTaskServerDelegate>",W,N,V_delegate
clientSessions
T@"NSArray",R,C,N
connectedClientSessions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATEndPoint.m
The provided data is not long enough to be a sockaddr.
%@ address: %@ port: %d
T@"NSData",R,N,V_data
address
T@"CATAddress",R,N,V_address
port
TL,R,N,V_port
adaptiveWriteTimeout
T@"NSNumber",C,N,V_adaptiveWriteTimeout
keepAliveEnabled
T@"NSNumber",C,N,V_keepAliveEnabled
keepAliveDelay
T@"NSNumber",C,N,V_keepAliveDelay
keepAliveInterval
T@"NSNumber",C,N,V_keepAliveInterval
keepAliveCount
T@"NSNumber",C,N,V_keepAliveCount
netServiceType
T@"NSNumber",C,N,V_netServiceType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTaskOperation.m
kCATInvalidParameterErrorKey
remoteUUID
T@"NSUUID",C,N,V_remoteUUID
T@"CATTaskRequest",R,N,V_request
notificationDelegate
T@"<CATTaskOperationNotificationDelegate>",W,N,V_notificationDelegate
Ti,N,V_completedUnitCount
Ti,N,V_totalUnitCount
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATBatchRemoteTaskOperation.m
client
%@.%p.main
remoteTaskOperations
%@%@: %p
%@Desc   : %@
%@Sugg   : %@
%@US Desc: %@
NSRecoverySuggestion
%@US Sugg: %@
%@Domain : %@
%@Code   : %@
%@...Underlying error:
%@Extra info:
0x%lX (%ld)
 [sys = 0x%1$lX, sub = 0x%2$lX, code = 0x%3$lX (%3$ld)]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATAddress.m
%@ address: ANY %@
%@ address: LOCAL WIFI %@
%@ address: %@
T@"NSString",R,N,V_address
TB,R,N,GisAny
localWiFi
TB,R,N,GisLocalWiFi
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/NSKeyedUnarchiver+SecureCoding.m
class
classes
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTaskClient.m
otherClient
%@ cannot call %@ when the other client is the receiver
serverUserInfo
T@"NSDictionary",C,N,V_serverUserInfo
T@"<CATTaskClientDelegate>",W,N,V_delegate
B16@?0@"NSString"4I8^B12
-%lu
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
didStart
T@?,C,N,V_didStart
didProgress
T@?,C,N,V_didProgress
didFinish
T@?,C,N,V_didFinish
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATXPCTransport.m
xpcConnection
%@ cannot call %@ when underlying connection has not been torn down.
T@"CATXPCTransport",W,N,V_transport
pendingRemoteTaskUUIDs
T@"NSArray",C,N,V_pendingRemoteTaskUUIDs
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTaskProgress.m
uuid
%@ cannot call %@ because it is not allowed
%@: resultObject (%@) is not accepted class %@
Succeeded
Failed
Not Finished
isCancelable
requestClassName
finished
finished, error = %@
state = %@
{ UUID = %@, %@ }
<%@: %p { UUID = %@, state = %@, error = %@ }>
NSMutable
CATMutable
T@"NSUUID",C,N,V_UUID
TI,N,V_phase
T@,&,N,V_resultObject
T@"NSError",&,N,V_error
T@"NSDictionary",&,N,V_userInfo
TB,N,V_isCancelable
TB,N,V_isCanceled
T@"NSString",C,N,V_requestClassName
state
TI,R,N
requestClass
TI,D,N
T@,&,D,N
T@"NSError",&,D,N
T@"NSDictionary",&,D,N
TB,D,N
Ti,D,N
T@"NSArray",R,C,N,V_clientSessions
sessionDidConnect
T@?,C,N,V_sessionDidConnect
sessionDidReceiveNotification
T@?,C,N,V_sessionDidReceiveNotification
sessionDidInterruptWithError
T@?,C,N,V_sessionDidInterruptWithError
sessionDidDisconnect
T@?,C,N,V_sessionDidDisconnect
sessionDidInvalidate
T@?,C,N,V_sessionDidInvalidate
didInvalidate
T@?,C,N,V_didInvalidate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATOperationQueue.m
%@ cannot call %@ for backgroundQueue
Global Background Queue
%@ cannot use +currentQueue, call +[NSOperationQueue currentQueue] instead.
%@ cannot use +mainQueue, call +[NSOperationQueue mainQueue] instead.
<%@: %p { name = '%@', suspended = %d, operationCount = %lu, maxConcurrentOperationCount = %ld }>
T@"<CATOperationQueueDelegate>",W,N,V_delegate
_CATOperationQueueIsFinishedObservationContext
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTransition.m
<%@: %p { action = %@, state = %@ }>
T@"CATState",R,W,N,V_state
action
T:,R,N,V_action
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATSocket.m
%@ cannot call %@ when already connected.
%@ cannot call %@ when already invalidated.
endPoint
nativeSocket
Ti,N,V_nativeSocket
socketSource
T@"NSObject<OS_dispatch_source>",R,N,V_socketSource
socketQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_socketQueue
userQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_userQueue
T@"<CATSocketDelegate>",W,N,V_delegate
localEndPoint
T@"CATEndPoint",R,N,V_localEndPoint
remoteEndPoint
T@"CATEndPoint",R,N,V_remoteEndPoint
yyyy-MM-dd'T'HH:mm:ss.SSSZZZ
yyyy-MM-dd'T'HH:mm:ssZZZ
yyyy-MM-dd'T'HH:mm:ss
en_US_POSIX
Catalyst.error
An unknown error occurred.
CATErrors
A parameter was invalid.
The operation timed out.
The remote connection has been closed.
Receiving data failed.
Sending data failed.
The remote connection has been closed by the peer.
The remote connection could not create streams.
The connection timed out.
Unable to establish secure connection.
Failed to configure secure settings on connection.
Transport has been invalidated.
Transport could not connect.
Unable to parse message.
Malformed message.
Unexpected message.
An unknown service request (%@).
The operation is no longer available.
There was a problem serializing the request.
Failed to create operation for request (%@).
The operation was canceled.
Invalid task client.
Server session invalidated.
Client session invalidated.
The connection was rejected.
The client's transport was captured.
flags
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATNetworkReachability.m
<%@: %p { %@, flags = '%c %c%c%c%c%c%c%c' }>
reachable
unreachable
TI,N,V_flags
T@"<CATNetworkReachabilityDelegate>",W,N,V_delegate
TB,R,N,GisReachable
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATRemoteTaskOperation.m
Request must set before the remote task operation can be run
remotePhase
T@"NSNumber",C,N,V_remotePhase
T@"CATTaskClient",R,N,V_client
NSLocalizedDescription
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATLocalizationHelper.m
tableName
strings
English
Localizable
bundle
T@"NSBundle",R,W,N,V_bundle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/NSDictionary+ChangeDictionary.m
This is not a KVO change dictionary
Unexpected change type from a KVO'd collection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATTaskMessageError.m
taskError
T@"NSError",&,N,V_taskError
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Catalyst_Sim/Catalyst-1.24/Catalyst/CATStateMachine.m
<%@: %p>
%@ cannot be deallocated because of '%@'
<%@: %p { name = %@, currentState = %@ }>
%@ cannot call %@ when currentState is %@
%@ cannot add a duplicate state name (%@) to state machine.
%@ couldn't get a state for %@
%@ cannot call %@ when initialState is nil
%@ has already started. %@ cannot be called twice.
%@ has not been started. The state machine should not receive events before it has started
%@ cannot transition from %@ with %@
%@ cannot call %@ with event '%@' because the receiver is already '%@'
Calling Exit Action
Calling Transition Action
currentState
T@"CATState",&,N,V_currentState
initialState
T@"CATState",&,N,V_initialState
T@,R,W,N,V_target
logLevel
TI,N,V_logLevel
trigger
T@,R,N,V_trigger
context
T@,R,N,V_context
CATMessage
NSSecureCoding
NSCoding
CATSessionMessageResume
CATTaskRequest
CATSerialOperationQueue
CATState
CATBlocks
CATTaskMessageStart
CATCasting
CATRemoteConnection
CATHTTPMessageParserDelegate
NSObject
NSStreamDelegate
_CATRemoteConnectionSendDataContext
_CATRemoteConnectionSendContext
_CATRemoteConnectionSendDataWithStreamContext
CATArbitrator
_CATArbitratorRegistrationEntry
_CATArbitratorResourceProxy
CATArbitratorProxy
_CATArbitratorWaitToken
_CATProxyWaitToken
CATTaskMessage
CATShifting
CATHTTPMessageParser
CATTransport
_CATTransportDidSendMessageOperation
CATRemoteConnectionTrustDecision
CATNotificationMessage
CATTaskSession
CATTransportDelegate
CATTaskOperationNotificationDelegate
CATCollectionController
CATTaskMessageProgressUpdate
CATProperty
CATTaskMessageFetchProgress
CATSessionMessage
CATOperation
_CATObserverManager
CATOperationObserver
_CATOperationTargetSelectorObserver
CATRemoteTransport
CATRemoteConnectionDelegate
_CATRemoteTransportSendMessageOperation
CATSessionMessageInvalidate
CATTaskServer
CATTaskSessionDelegate
CATTaskMessageCancel
CATEndPoint
CATRemoteConnectionSocketOptions
CATTaskOperation
CATTaskMessageIncrementalProgress
CATBatchRemoteTaskOperation
CATVerboseDescription
CATAddress
CATSecureCoding
CATTaskClient
CATTXTRecord
CATTaskResultObject
CATBlockOperationObserver
CATXPCInterface
CATXPCTransport
_CATXPCTransportSendMessageOperation
CATSessionMessageResumed
NSMutableCopying
NSCopying
CATTaskProgress
CATMutableTaskProgress
CATTaskBlockServer
CATTaskServerDelegate
_CATBlockTaskOperation
_CATLongRunningTaskOperation
CATOperationQueue
CATTransition
CATSocket
CATInternetDateAndTime
_CATErrorBundleHelper
CATNetworkReachability
CATSessionMessageDidInvalidate
CATRemoteTaskOperation
CATLocalizationHelper
CATChangeDictionary
CATTaskMessageError
CATStateMachine
CATEvent
B8@0:4
v12@0:4@8
v12@0:4@"NSCoder"8
@12@0:4@8
@12@0:4@"NSCoder"8
@8@0:4
v8@0:4
@"NSUUID"
@"NSDictionary"
#8@0:4
v12@0:4B8
@"NSOperation"
v16@0:4@8@12
v20@0:4@8@12:16
:8@0:4
v12@0:4:8
@"NSMutableDictionary"
@"NSString"
v12@0:4@?8
v16@0:4@8@?12
@16@0:4@8@12
@"CATTaskRequest"
v16@0:4^@8^@12
v20@0:4^@8^@12I16
v16@0:4@"CATHTTPMessageParser"8@"NSData"12
v20@0:4@8@12B16
v20@0:4@"CATHTTPMessageParser"8@"NSData"12B16
v16@0:4@"CATHTTPMessageParser"8@"NSURL"12
B12@0:4@8
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v16@0:4@8I12
v16@0:4@"NSStream"8I12
^{__SecTrust=}8@0:4
@20@0:4@8@12I16
v20@0:4@8I12@16
v16@0:4^{__SecIdentity=}8@12
B20@0:4^{__SecIdentity=}8@12B16
B16@0:4@8^@12
v20@0:4@8@12@16
v16@0:4@8B12
d8@0:4
v16@0:4d8
v12@0:4I8
@"CATHTTPMessageParser"
@"NSMutableArray"
@"NSObject<OS_dispatch_source>"
@"NSError"
@"NSMutableData"
@"NSArray"
@"CATSerialOperationQueue"
@"<CATRemoteConnectionDelegate>"
@"CATRemoteConnectionSocketOptions"
@"NSInputStream"
@"NSOutputStream"
@12@0:4^@8
@"NSData"12@0:4^@8
@"NSData"
@24@0:4@8I12I16@20
@16@0:4@8B12
@24@0:4@8B12@16@?20
v20@0:4@8@12I16
I12@0:4@8
@16@0:4@8I12
@12@0:4B8
@16@0:4B8@12
@"NSObject<OS_dispatch_queue>"
@20@0:4@8@12B16
@"_CATArbitratorRegistrationEntry"
@16@0:4@8@?12
B16@0:4i8i12
@"NSObject<OS_dispatch_group>"
v16@0:4{_NSRange=II}8
v16@0:4I8I12
@12@0:4I8
B16@0:4r*8I12
^{__CFHTTPMessage=}
@"<CATHTTPMessageParserDelegate>"
@"CATStateMachine"
@"CATOperationQueue"
@"CATTransport"
@"<CATTransportDelegate>"
@16@0:4@8^{__SecTrust=}12
@"CATRemoteConnection"
@20@0:4@8@12@16
v12@0:4@"CATTransport"8
v16@0:4@"CATTransport"8@"CATMessage"12
v20@0:4@"CATTransport"8@"CATMessage"12@"NSError"16
v16@0:4@"CATTransport"8@"NSError"12
v20@0:4@"CATTaskOperation"8@"NSString"12@"NSDictionary"16
@16@0:4@8^@12
@"NSMutableSet"
@"CATTaskSession"
@"NSHashTable"
@"NSMapTable"
@"<CATTaskSessionDelegate>"
v24@0:4@8@12@16^v20
I16@0:4@8@12
v16@0:4B8B12
v24@0:4@8I12I16I20
@"NSMutableIndexSet"
@"NSSet"
@"NSTimer"
@"NSValueTransformer"
@"<CATCollectionControllerDelegate>"
@"NSPredicate"
@"NSIndexSet"
@"CATTaskProgress"
@12@0:4#8
@16@0:4r*8r*12
i8@0:4
v20@0:4@8:12I16
v24@0:4@8:12I16@20
v28@0:4@8:12I16@20@24
v12@0:4i8
@"NSLock"
@"_CATObserverManager"
@"NSDate"
v12@0:4@"NSOperation"8
@"CATOperation"
@28@0:4@8:12I16@20@24
v12@0:4@"CATRemoteConnection"8
v16@0:4@"CATRemoteConnection"8@"CATRemoteConnectionTrustDecision"12
v20@0:4@"CATRemoteConnection"8@"NSData"12@16
v24@0:4@8@12@16@20
v24@0:4@"CATRemoteConnection"8@"NSData"12@16@"NSError"20
v16@0:4@"CATRemoteConnection"8@"NSData"12
v16@0:4@"CATRemoteConnection"8@"NSURL"12
v20@0:4@"CATRemoteConnection"8@"NSInputStream"12@16
v24@0:4@"CATRemoteConnection"8@"NSInputStream"12@16@"NSError"20
v20@0:4@"CATRemoteConnection"8@"NSData"12B16
v16@0:4@"CATRemoteConnection"8@"NSError"12
@"<CATRemoteTransportDelegate>"
@"CATRemoteTransport"
@"CATMessage"
@20@0:4@8@12^@16
@"CATTaskOperation"20@0:4@"CATTaskSession"8@"CATTaskRequest"12^@16
B16@0:4@8@12
B16@0:4@"CATTaskSession"8@"CATTransport"12
v20@0:4@"CATTaskSession"8@"NSString"12@"NSDictionary"16
v16@0:4@"CATTaskSession"8@"NSError"12
v12@0:4@"CATTaskSession"8
v16@0:4@"CATTaskSession"8@"NSOperation"12
@"CATTaskServer"
@"<CATTaskServerDelegate>"
@16@0:4@8L12
L8@0:4
@"CATAddress"
@12@0:4^{_NSZone=}8
@"NSNumber"
@"<CATTaskOperationNotificationDelegate>"
@20@0:4@8i12i16
@"NSOperationQueue"
@12@0:4i8
@16@0:4#8@12
@"CATTaskClient"
@"<CATTaskClientDelegate>"
v16@0:4@?8@12
@?8@0:4
v12@0:4@"CATMessage"8
@"NSXPCConnection"
@"CATXPCTransport"
#12@0:4@8
@16@0:4@8#12
@24@0:4@8@12@16^@20
@"CATTaskOperation"24@0:4@"CATTaskServer"8@"CATTaskSession"12@"CATTaskRequest"16^@20
v20@0:4@"CATTaskServer"8@"CATTaskSession"12@"NSError"16
B20@0:4@8@12@16
B20@0:4@"CATTaskServer"8@"CATTaskSession"12@"CATTransport"16
v24@0:4@"CATTaskServer"8@"CATTaskSession"12@"NSString"16@"NSDictionary"20
v20@0:4@"CATTaskServer"8@"CATTaskSession"12@"NSOperation"16
v16@0:4@"CATTaskServer"8@"CATTaskSession"12
v12@0:4@"CATTaskServer"8
v16@0:4@?8#12
v12@0:4#8
@16@0:4@?8@12
@"<CATOperationQueueDelegate>"
@16@0:4@8:12
@"CATState"
@"<CATSocketDelegate>"
@"CATEndPoint"
B12@0:4I8
^{__SCNetworkReachability=}
@"<CATNetworkReachabilityDelegate>"
v16@0:4i8i12
@"NSBundle"
v16@0:4:8@12
%@: %@
trust result: %@
%{public}@ failed to send message %{public}@: %{public}@
Dropping message (%@) because delegate (%@) does not implement %@
%@ dropping notification '%@', either the client didn't expect it, or it wasn't whitelisted
%@ failed accepting from socket (%d): %s (%i)
There was an error reading %@: %@
%@ starting...
%@ transitioning from "%@" to "%@" because %@
%@ leaving %@
%@ invoking action for %@
%@ entering %@
%@ invoking exit action (%@) for %@
%@ invoking enter action (%@) for %@
C@(#)PROGRAM:Catalyst  PROJECT:Catalyst-1
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
