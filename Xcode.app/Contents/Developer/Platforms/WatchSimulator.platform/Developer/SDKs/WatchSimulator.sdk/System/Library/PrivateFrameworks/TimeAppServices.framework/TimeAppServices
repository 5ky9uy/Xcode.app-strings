com.apple.private.NanoTimer
com.apple.TimeAppServices.timerclient
com.apple.NanoClockAlertProvider.timer
Timer
com.apple.NanoAlarm
v4@?0
com.apple.timerserverqueue
SignificantTimeChangeNotification
v8@?0B4
texttone:Timer-Haptic
Trigger Dictionary
i12@?0@"NTSTimerAlert"4@"NTSTimerAlert"8
Unhandled trigger name: %@
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
%@{alert date = %@}
timer
T@"NTSTimer",&,N,V_timer
localNotification
T@"UILocalNotification",&,N,V_localNotification
bulletin
T@"BBBulletin",&,N,V_bulletin
triggerDictionary
T@"NSDictionary",&,N,V_triggerDictionary
com.apple.springboard.finishedstartup
com.apple.NanoTimeKit
com.apple.rootrobot
configuration
minimal
com.apple.NanoStopwatch
com.apple.TimeAppServices.stopwatchclient
com.apple.stopwatchserverqueue
TimerState
StartTotalTime
ElapsedTotalTime
StartLapTime
ElapsedLapTime
Laps
None
Default
AlarmId: %@, Title: %@, Hour: %ld, Minute: %ld, SoundType: %@, SoundId: %ld, isActive: %@, DaySetting: %@ isSnoozed: %@  Fire Date: %@ Sort Date: %@ isFiring: %@
AlarmId
Hour
Minute
DaySetting
AllowsSnooze
SoundType
SoundId
Title
IsActive
IsSnoozed
FireDate
SortDate
IsFiring
TimeZone
supportsSecureCoding
TB,R
alarmId
T@"NSString",R,N,V_alarmId
hour
Ti,N,V_hour
minute
Ti,N,V_minute
daySetting
Ti,N,V_daySetting
allowsSnooze
TB,N,V_allowsSnooze
soundType
Ti,N,V_soundType
soundId
Ti,N,V_soundId
title
T@"NSString",&,N,V_title
isActive
TB,N,V_isActive
isSnoozed
TB,R,N,V_isSnoozed
fireDate
T@"NSDate",R,N,V_fireDate
sortDate
T@"NSDate",R,N,V_sortDate
isFiring
TB,R,N,V_isFiring
timeZone
T@"NSTimeZone",R,N,V_timeZone
NanoTimerModelStateChangedNotification
NanoTimerModelCountdownChangedNotification
NTSTimerModelFiringTimersChangedNotification
v8@?0@"NSError"4
v32@?0i4d8d16d24
countdownDuration
Td,N,V_countdownDuration
state
Ti,N,V_state
fireTime
Td,N,V_fireTime
remainingTime
Td,R,N
com.apple.ntsclockmanagerqueue
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
com.apple.alarmtimersoundqueue
i12@?0@"NTSAlarmTimerAlert"4@"NTSAlarmTimerAlert"8
com.apple.NanoClockAlertProvider
NCAPSoundTimeout
type
TI,R,N,V_type
soundID
TL,R,N
content
T@,R,N,V_content
nightstand
TB,N,V_nightstand
LastMainMenuGravity
LastTimerType
LastTimerDuration
LastTimerAppInputCustomDuration
NTSStopwatchModelStateChangedNotification
NTSStopwatchModelLapAddedNotification
NTSStopwatchModelReloadNotification
v44@?0i4d8d16d24d32@"NSArray"40
startTotalTime
Td,N,V_startTotalTime
elapsedTotalTime
Td,N,V_elapsedTotalTime
startLapTime
Td,N,V_startLapTime
elapsedLapTime
Td,N,V_elapsedLapTime
minLapTime
Td,N,V_minLapTime
maxLapTime
Td,N,V_maxLapTime
laps
T@"NSMutableArray",&,N,V_laps
currentTime
adjustedDigitalTime
currentLapTime
com.apple.TimeAppServices.timerserver
displayLink
T@"CADisplayLink",&,N,V_displayLink
handlers
T@"NSMutableDictionary",&,N,V_handlers
nextToken
TI,N,V_nextToken
inForeground
TB,N,V_inForeground
com.apple.TimeAppServices.stopwatchserver
NTSAlarmModelAlarmsDidChange
NTSAlarmModelAlarmDidUpdate
NTSAlarmModelAlarmAdded
NTSAlarmModelNextAlarmDidChange
NTSAlarmModelFiringAlarmsDidChange
v12@?0@"NSArray"4@"NTSAlarm"8
v8@?0@"NSString"4
v8@?0@"NSArray"4
NTALogForCategory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoTimeAppFrameworks_Sim/NanoTimeApps-379.3.2.2/NanoTimer/Shared/NTALogging.m
category < NTALoggingCategoryCount
NanoTimeApps
TimeAppServices
NanoTimer
NanoAlarm
NanoStopwatch
NanoWorldClock
NanoClockAlertProvider
NanoClockActivateProvider
Tool
com.apple.nanotimeapps
com.apple.TimeAppServices.alarmserver
com.apple.TimeAppServices.alarmclient
com.apple.NanoClockAlertProvider.alarm
label
time
snoozeEnabled
soundEnabled
com.apple.alarmserverqueue
v8@?0@"NSNotification"4
time = Alarm time (NSDate)
label = Alarm label (NSString)
snoozeEnabled = Is snooze enabled for alarm (BOOL)
soundEnabled = Is sound enabled for alarm (BOOL)
i12@?0@"NTSAlarmAlert"4@"NTSAlarmAlert"8
v16@?0@"NTSAlarm"4I8^B12
%@{alert date = %@, sort date = %@, title = %@}
alarm
T@"NTSAlarm",&,N,V_alarm
Fire Date: %@ isFiring: %@ isRemote: %@
IsRemote
isRemote
TB,N,V_isRemote
isTimerNotification:
isEqualToString:
alloc
init
initWithMachServiceName:
setDelegate:
resume
sharedInstance
removeUIProvider:withUITriggerName:
dealloc
_initServer
_startServerIfReady
sharedManager
reloadState
fireTime
defaultDuration
state
setDefaultDuration:
invalidSnapshotContext
setSnapshotContext:forBundleID:
start
_reloadTimerState
class
bundleIDForNotifications
initWithBundleIdentifier:
setObserverFeed:
addUIProvider:forUITriggerName:englishUsage:
_queue_updateClientsExcept:
valueForEntitlement:
boolValue
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
addObject:
removeObject:
setInvalidationHandler:
countByEnumeratingWithState:objects:count:
_updateForLocalNotification:
currentConnection
refreshCache
removeCachedNotification:
fireDate
setFireDate:
setIsFiring:
setIsRemote:
initWithTimer:localNotification:
_addAlert:
_queue_updateFiringTimersClientsExcept:
_isBulletinForUs:
date
initWithTimer:bulletin:
shouldPlayLightsAndSirensForBulletin:forFeed:completion:
sectionSubtype
bulletin
bulletinID
_removeAlert:
_updateForRemovedBulletinID:
sectionID
isTimerSection:subType:
recordID
defaultToneIdentifierForAlertType:
_defaultTimerSound
scheduleAt:withSound:
_saveState
cancel
pause
remainingTime
remoteObjectProxy
updateModelWithState:fireTime:countdownDuration:remainingTime:
timer
isEqual:
localNotification
dismissAction
responseForAction:
send
setWithObject:
clearBulletins:inSection:
updateModelWithFiringTimers:
compare:
sortUsingComparator:
setTimer:
stringWithFormat:
listener:shouldAcceptNewConnection:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
notificationScheduler:didFireLocalNotifications:
notificationScheduler:didChangeScheduledLocalNotifications:
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionOrderRule:
observer:updateSectionOrder:
observer:updateSectionInfo:
observer:removeSection:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteAlertBehaviorOverridesChanged:
observer:noteAlertBehaviorOverrideStateChanged:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
requestUITriggerWithRegistration:UITriggerName:withDictionary:withReason:withCompletion:
_handleCarouselReady
_handleRestoreDone
startTimer:
cancelTimer
pauseResumeTimer:
setDefaultCountdownDuration:
requestUpdateState
getModelWithHandler:
dismissFiringTimer:
_handleSignificantTimeChange
.cxx_destruct
_queue
_clientConnections
_fireTime
_countdownDuration
_alerts
_isCarouselReady
_isRestoreDone
_isServerReady
_notificationScheduler
_bbObserver
_lightsAndSirensService
setLocalNotification:
setBulletin:
triggerDictionary
setTriggerDictionary:
_timer
_localNotification
_bulletin
_triggerDictionary
initWithSuiteName:
stringForKey:
doubleValue
copy
numberWithInteger:
numberWithDouble:
updateModelWithState:startTotalTime:elapsedTotalTime:startLapTime:elapsedLapTime:laps:
saveState:startTotalTime:elapsedTotalTime:startLapTime:elapsedLapTime:laps:
_state
_startTotalTime
_elapsedTotalTime
_startLapTime
_elapsedLapTime
_laps
defaultCenter
_appBackgrounded:
addObserver:selector:name:object:
_appForegrounded:
_modelStateChanged:
_modelReload:
sharedApplication
applicationState
removeObserver:
numberWithUnsignedInteger:
_nextToken
setObject:forKeyedSubscript:
_updateTimer
removeObjectForKey:
count
sharedStopwatchModel
_tick:
displayLinkWithTarget:selector:
setFrameInterval:
mainRunLoop
addToRunLoop:forMode:
invalidate
_invokeHandlers
_invokeDigitalTimeUpdateHandlers
allValues
sharedStopwatchTimer
startUpdatesWithHandler:
startDigitalTimeUpdatesWithHandler:
stopUpdatesForToken:
_displayLink
_updateDigitalTimeThisTick
_handlers
_digitalTimeUpdateHandlers
_appInForeground
currentCalendar
components:fromDate:
hour
setHour:
minute
setMinute:
setDaySetting:
setAllowsSnooze:
setSoundType:
setSoundId:
setTitle:
isActive
setIsActive:
nextFireDate
soundType
daySetting
daySettingToString:longVersion:everyWeekdayVersion:showNever:
isSnoozed
isFiring
alarmId
title
soundId
sortDate
encodeObject:forKey:
encodeInteger:forKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
allowsSnooze
isEqualToDate:
timeZone
isEqualToTimeZone:
setAlarmId:
setIsSnoozed:
setSortDate:
setTimeZone:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
copyWithZone:
initWithDefaultValues
_allowsSnooze
_isActive
_isSnoozed
_isFiring
_alarmId
_hour
_minute
_daySetting
_soundType
_soundId
_title
_fireDate
_sortDate
_timeZone
_forceUpdateState
_reloadAllAsync
_sharedTimerModel:
initWithMachServiceName:options:
_handleConnectionInterruption
setInterruptionHandler:
_connectToServer
remoteObjectProxyWithErrorHandler:
_reloadState:fireTime:countdownDuration:remainingTime:suppressNotification:
countdownDuration
setState:
setCountdownDuration:
setFireTime:
postNotificationName:object:
initWithCapacity:
initWithArray:copyItems:
sharedTimerModel
sharedTimerModelAsync
startTimer:type:
pauseResumeTimer
firingTimers
_timerServer
_remainingTime
_firingTimers
_didHaveValidConnection
queue
loadUserPreferences
_refreshCache
refreshScheduledLocalNotificationsCache
updatesToLocalNotificationsCache
addedObjects
setQueue:
playSoundForAlarm:nightstand:
initWithAlarm:
setNightstand:
_playSoundForAlert:
initWithTimer:
_stopSoundForAlert:
lock
unlock
_updatePlayingSound
standardUserDefaults
persistentDomainForName:
objectForKey:
intValue
firstObject
_soundTimeoutInterval
dateByAddingTimeInterval:
_stopPlayingAlertWithUrgency:
soundID
setCategory:error:
setActive:error:
numberWithBool:
dictionaryWithObjects:forKeys:count:
_timeout:
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
setActive:withOptions:error:
sharedAlertSoundController
playSoundForAlarm:
playSoundForTimer:
stopSoundForAlarm:
stopSoundForTimer:
isPlayingSound
_alertsLock
_playingAlert
_timeoutTimer
type
content
nightstand
_soundID
_nightstand
_type
_content
numberWithFloat:
floatValue
reloadState:startTotalTime:elapsedTotalTime:startLapTime:elapsedLapTime:laps:suppressNotification:
startTotalTime
elapsedTotalTime
startLapTime
elapsedLapTime
laps
setStartTotalTime:
setElapsedTotalTime:
setStartLapTime:
setElapsedLapTime:
mutableCopy
setLaps:
setMinLapTime:
setMaxLapTime:
minLapTime
maxLapTime
_pushToServer
currentLapTime
addLap:
removeAllObjects
currentTime
timeAdjustedForDigitalDisplay:
objectAtIndexedSubscript:
reset
stop
adjustedDigitalTime
lapTime:
lastLapTime
timeUntilLastLap
lapsCount
avgLapTime
pptTestPrep
_stopwatchServer
_minLapTime
_maxLapTime
getFiringTimersWithHandler:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
sharedTimerTimer
setHandlers:
_backgrounded:
_foregrounded:
removeObserver:name:object:
sharedAlarmModelAsync
nextAlarm
setDisplayLink:
sharedAlarmSnoozeTimer
displayLink
handlers
nextToken
setNextToken:
inForeground
setInForeground:
_inForeground
_forceRefreshAlarms
_sharedAlarmModel:
requestUpdateAlarms
getAllAlarmsWithHandler:
_findAlarmWithId:
objectAtIndex:
_findIndexOfAlarmWithId:
deleteAlarm:
addAlarm:withHandler:
updateAlarm:
setObject:atIndexedSubscript:
setAlarm:isActive:
getNextAlarmsForDateWithHandler:maxCount:handler:
getPreviousAlarmsForDateWithHandler:maxCount:handler:
dismissFiringAlarm:
snoozeFiringAlarm:
sharedAlarmModel
updateModelWithAlarms:
updateModelWithAlarm:
updateModelWithNextAlarm:
updateModelWithFiringAlarms:
alarmCount
alarmWithId:
alarmAtIndex:
indexForAlarm:
deleteAlarmAtIndex:
addAlarm:
alarms
nextAlarmsForDate:maxCount:
previousAlarmsForDate:maxCount:
firingAlarms
_alarmServer
_alarms
_nextAlarm
_firingAlarms
getFiringAlarmsWithHandler:
isAlarmNotification:
unloadAlarms
_createNTSAlarmFromAlarm:
_updateNextAlarm
nextAlarmForDate:activeOnly:allowRepeating:
_queue_updateNextAlarm
loadAlarms
makeObjectsPerformSelector:withObject:
loadScheduledNotifications
_reloadNTSAlarmList
mainQueue
_updateForSnoozedLocalNotification:
_handleSignificantTimeChange:
addObserverForName:object:queue:usingBlock:
_queue_updateAllAlarmsClientsExcept:
isFromSnooze
handleNotificationFired:
userInfo
length
_queue_updateOneAlarm:clientsExcept:
initWithAlarm:localNotification:
_queue_updateFiringAlarmsClientsExcept:
_invalidateAlarmAppSnapshot
handleNotificationSnoozed:
message
snoozeAction
sound
initWithAlarm:bulletin:
isAlarmSection:subType:
alarm
alarmID
uiTitle
prepareEditingProxy
editingProxy
setSound:ofType:
defaultSound
applyChangesFromEditingProxy
dropEditingProxy
removeAlarm:
_updateAlarm:fromNTSAlarm:
addAlarm:active:
_indexOfAlarmMatchingId:
updateAlarm:active:
setAlarm:active:
nextFireDateAfterDate:
_findNextAlarms:maxCount:
array
earlierDate:
addObjectsFromArray:
enumerateObjectsWithOptions:usingBlock:
subarrayWithRange:
setDay:
dateByAddingComponents:toDate:options:
_getAlarms:endDate:
_findPreviousAlarms:maxCount:
responseForSnoozeAction
arrayWithObjects:count:
snoozeScheduledLocalNotifications:
_alarmFromTriggerDictionary:
setAlarm:
objectForKeyedSubscript:
alarmDidUpdate:
_ntsAlarms
_updateForLocalNotificationQueue
_updateForSnoozedLocalNotificationQueue
_significantTimeListener
_alarm
isRemote
encodeBool:forKey:
decodeBoolForKey:
_isRemote
Timer server is now initialized (but not yet started).
Timer server is attempting to start...
Timer server is not ready to start yet. Reasons: _isServerReady=%d, _isCarouselReady=%d, _isRestoreDone=%d
Timer server has been notified that Carousel is ready (received CSLSCarouselDidLaunchNotification).
Timer server has been notified that restore is done (received CSLSApplicationStateRestoredNotification).
Timer server changed state. Flagged app for needing a new snapshot.
Timer server has started the clock manager.
Timer server is now ready.
Updating for timer fired local notification: %@
Received timer alert bulletin: %@
Ignoring unknown clock alert subtype: %d  Bulletin: %@
Handling removeBulletin for bulletin: %@
Handling noteInvalidatedBulletinIDs for bulletin with id: %@
Timer server is not ready.  Cannot start timer.
Timer server is not ready.  Cannot cancel timer.
Timer server is not ready.  Cannot pause or resume timer.
pauseResumeTimer should only be called if timer is running or paused.  Ignoring.
Timer server is not ready.  Cannot set default countdown duration.
Timer server is not ready.  Ignoring request.
Timer server is not ready.  Returning default values for model values.
Performing dismiss for %@
Stopwatch server is now running
Stopwatch server changed state. Flagged app for needing a new snapshot.
Timer server interruption. Will attempt to reconnect.
Timer server interruption. If you see this you are probably trying to use the server without the proper entitlement.
Error getting timer values from server.
Attempting to start clock manager...
Clock manager is now started.
Asked to play sound for: %@
Asked to stop sound for: %@
No current alert or timed out. Stopping sound for %@
Different current alert. Stopping sound for %@
Error setting audio category: %@
Error setting AVAudioSession active: %@
playing sound for %@
Alert sound timed out!
Stopwatch server interruption. If you see this you are probably trying to use the server without the proper entitlement.
Error getting stopwatch values from server.
Alarm server interruption. Will attempt to reconnect.
Alarm server interruption. If you see this you are probably trying to use the server without the proper entitlement.
Error getting alarm values from server.
Alarm server is now initialized (but not yet started).
Alarm server is attempting to start...
Alarm server is not ready to start yet. Reasons: _isServerReady=%d, _isCarouselReady=%d, _isRestoreDone=%d
Alarm server has been notified that Carousel is ready (received CSLSCarouselDidLaunchNotification).
Alarm server has been notified that restore is done (received CSLSApplicationStateRestoredNotification).
Alarm server has started the clock manager and refreshed the clock manager notifications cache.
Alarm server is now ready.
Updating for alarm fired local notification: %@
NTSAlarmServer: Got a local notification for an alarm firing we don't know about. %@
Received alarm alert bulletin: %@
Alarm server changed state. Flagged app for needing a new snapshot.
Alarm server is not ready.  Cannot delete alarm.
Alarm server is not ready.  Cannot add alarm.
Alarm server is not ready.  Cannot update alarm.
Alarm server is not ready.  Cannot set alarm active state.
Alarm server is not ready.  Ignoring request.
Alarm server is not ready.  No alarms loaded yet.
Alarm server: next alarms for date: %@
Alarm[%d] %@
Alarm server is not ready.  Cannot determine nextAlarms yet.
Alarm server: previous alarms for date: %@
Performing snooze for %@
NTSTimerServer
NSXPCListenerDelegate
NSObject
UNSNotificationSchedulerDelegate
BBObserverDelegate
CSLSUIProvider
NTSTimerAlert
NTSStopwatchServer
NTSStopwatchTimer
NTSAlarm
NSSecureCoding
NSCoding
NSCopying
NTSTimerModel
NTSTimerClient
NTSClockManager
NTSAlarmTimerAlertSoundController
NTSAlarmTimerAlert
NTSStopwatchModel
NTSStopwatchClient
NTSTimerTimer
NTSAlarmSnoozeTimer
NTSAlarmModel
NTSAlarmClient
NTSAlarmServer
AlarmDelegate
NTSAlarmAlert
NTSTimer
B12@0:4@8
B16@0:4@8i12
@8@0:4
v8@0:4
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v16@0:4@8@12
v16@0:4@"UNSNotificationScheduler"8@"NSArray"12
v28@0:4@8@12I16B20@?24
v28@0:4@"BBObserver"8@"BBBulletin"12I16B20@?<v@?B>24
v20@0:4@8@12I16
v20@0:4@"BBObserver"8@"BBBulletin"12I16
v16@0:4@"BBObserver"8@"BBBulletin"12
v16@0:4@8i12
v16@0:4@"BBObserver"8i12
v16@0:4@"BBObserver"8@"NSArray"12
v16@0:4@"BBObserver"8@"BBSectionInfo"12
v16@0:4@"BBObserver"8@"NSString"12
v20@0:4@8@12@16
v20@0:4@"BBObserver"8@"BBSectionParameters"12@"NSString"16
v16@0:4@8I12
v16@0:4@"BBObserver"8I12
v16@0:4@"BBObserver"8@"NSSet"12
v16@0:4@8B12
v16@0:4@"BBObserver"8B12
v24@0:4@8@12@16@?20
v24@0:4@"BBObserver"8@"BBAttachmentMetadata"12@"BBBulletin"16@?<v@?I>20
B12@0:4@"BBObserver"8
@20@0:4@8@12@16
@"BBThumbnailSizeConstraints"20@0:4@"BBObserver"8@"BBAttachmentMetadata"12@"BBBulletin"16
@16@0:4@8i12
@"BBThumbnailSizeConstraints"16@0:4@"BBObserver"8i12
v28@0:4@8@12@16@20@?24
v28@0:4@"BBObserver"8@"NSData"12@"BBAttachmentMetadata"16@"BBBulletin"20@?<v@?@"NSData">24
v28@0:4@"BBObserver"8@"NSData"12@"BBAttachmentMetadata"16@"BBBulletin"20@?<v@?@"UIImage">24
{CGSize=ff}28@0:4@8@12@16{CGSize=ff}20
{CGSize=ff}28@0:4@"BBObserver"8@"BBAttachmentMetadata"12@"BBBulletin"16{CGSize=ff}20
@24@0:4@8i12@16@20
@"UIImage"24@0:4@"BBObserver"8i12@"NSData"16@"NSString"20
{CGSize=ff}28@0:4@8i12f16f20@24
{CGSize=ff}28@0:4@"BBObserver"8i12f16f20@"NSString"24
v28@0:4@8@12@16i20@?24
v28@0:4@"CSLSUITriggerRegistration"8@"NSString"12@"NSDictionary"16i20@?<v@?B@"NSString">24
v12@0:4@8
v16@0:4d8
v12@0:4B8
v12@0:4@?8
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
@"NSMutableOrderedSet"
@"UNSNotificationScheduler"
@"BBObserver"
@"BLTLightsAndSirensService"
@16@0:4@8@12
@"NTSTimer"
@"UILocalNotification"
@"BBBulletin"
@"NSDictionary"
v48@0:4i8d12d20d28d36@44
@"NSArray"
^{NSNumber=#}8@0:4
@12@0:4@?8
@"CADisplayLink"
@"NSMutableDictionary"
v12@0:4@"NSCoder"8
@12@0:4@8
@12@0:4@"NSCoder"8
@12@0:4^{_NSZone=}8
i8@0:4
v12@0:4i8
@"NSString"
@"NSDate"
@"NSTimeZone"
@12@0:4B8
v36@0:4i8d12d20d28
v12@0:4@"NSArray"8
v40@0:4i8d12d20d28B36
d8@0:4
v20@0:4d8i16
B16@0:4d8
@"NSXPCConnection"
v12@0:4C8
@"NSLock"
@"NTSAlarmTimerAlert"
@"NSTimer"
L8@0:4
d16@0:4d8
v48@0:4i8d12d20d28d36@"NSArray"44
v52@0:4i8d12d20d28d36@44B48
d12@0:4I8
v12@0:4@?<v@?iddd>8
v12@0:4@"NTSTimer"8
v12@0:4@?<v@?@"NSArray">8
v12@0:4I8
v12@0:4@?<v@?idddd@"NSArray">8
@24@0:4I8B12B16B20
v12@0:4@"NTSAlarm"8
I12@0:4@8
@12@0:4I8
@16@0:4@8I12
@"NTSAlarm"
v16@0:4@8@?12
v16@0:4@"NTSAlarm"8@?<v@?@"NSString">12
v16@0:4@"NTSAlarm"8B12
v12@0:4@?<v@?@"NSArray"@"NTSAlarm">8
v20@0:4@8I12@?16
v20@0:4@"NSDate"8I12@?<v@?@"NSArray">16
v12@0:4@"Alarm"8
@(#)PROGRAM:TimeAppServices  PROJECT:NanoTimer-1
zPLR
zPLR
zPLR
zPLR
zPLR
