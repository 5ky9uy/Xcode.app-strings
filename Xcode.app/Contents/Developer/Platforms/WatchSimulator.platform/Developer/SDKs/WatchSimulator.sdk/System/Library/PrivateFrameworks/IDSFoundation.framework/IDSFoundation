IDSFieldReaderWriter
writeFieldToByteBuffer buffer too small, %ld %u
IDSFoundation
readFieldFromByteBuffer not enough bytes, %u %u %ld
initByteBuffer out of memory
com.apple.FTiMessageServerBagKey
com.apple.imessage.bag
ServerBag
Creating server bag: %@
com.apple.ids.errordomain
IDSMessageContextOutgoingResponseIdentifierKey
IDSMessageContextIncomingResponseIdentifierKey
IDSMessageContextServiceIdentifierKey
IDSMessageContextExpectsPeerResponseKey
IDSMessageContextWantsAppAckKey
IDSMessageContextStorageGuidKey
IDSMessageContextOriginalCommandKey
IDSMessageContextBroadcastTimeKey
IDSMessageContextPriorityKey
IDSMessageContextSequenceNumberKey
IDSMessageContextBroadcastIDKey
IDSMessageContextWantsManualAckKey
IDSMessageContextFromIDKey
IDSMessageContextToIDKey
IDSMessageContextOriginalDestinationDeviceKey
IDSMessageContextConnectionTypeKey
IDSMessageContextFromServerStorageKey
IDSMessageContextServerTimestampKey
__IDS_DEFAULT_PAIRED_DEVICE__
ids-device-state
IDSDeviceUniqueID
show-peer-errors
is-c2k-equipment
supports-inline-attachments
supports-keep-receipts
supports-location-sharing
supports-media-v2
supports-st-v1
supports-ca-v1
supports-be-v1
supports-ack-v1
supports-fsm-v1
supports-fsm-v2
supports-ii-v1
supports-impact-v1
optionally-receive-typing-indicators
com.apple.identityservicesd.embedded.auth
com.apple.identityservicesd.idquery.embedded.auth
com.apple.idsremoteurlconnectionagent.embedded.auth
com.apple.idscredentialsagent.embedded.auth
kIDSDaemonLaunchedDistNotification
com.apple.identityservicesd
com.apple.private.ids.registration
com.apple.private.ids.registration-reset
com.apple.private.ids.encryption-keys
com.apple.private.ids.icloud-signin-hack
com.apple.private.ids.messaging
com.apple.private.ids.nearby
com.apple.private.ids.idquery-cache
com.apple.private.ids.idquery-cache-update
com.apple.private.ids.session
com.apple.private.ids.session-private
com.apple.private.ids.remoteurlconnection
com.apple.private.ids.remotecredentials
com.apple.private.ids.self-session
com.apple.private.ids.messaging.high-priority
com.apple.private.ids.messaging.urgent-priority
com.apple.private.ids.continuity
com.apple.private.ids.device-uuid
com.apple.private.ids.bypass-size-check
com.apple.private.ids.force-encryption-off
com.apple.private.ids.prefer-infrawifi
com.apple.private.ids.link-preferences
com.apple.private.ids.localpairing
com.apple.private.ids.localpairing-api
com.apple.private.ids.allowed-traffic-classes
com.apple.private.ids.account-sync
com.apple.private.ids.key-rolling
com.apple.private.ids.report-imessage-spam
com.apple.private.ids.sub-services
com.apple.private.ids.registration-control
com.apple.private.ids.safeview
IDSLocalPairingErrorDomain
IDSAccountRegistrationErrorDomain
com.apple.ids.idssenderrordomain
com.apple.ids.idssessionerrorDomain
com.apple.ids.IDSRegistrationControlErrorDomain
com.apple.ids.IDSDataChannelErrorDomain
Accounts
EnabledAccounts
title
button
body
action
type
AccountType
ServiceName
PushTopic
UniqueID
Password
PrimaryService
PrimaryAccount
AuthID
DisplayName
UserDisabled
LoginAs
HasEverRegistered
Aliases
Alias
Status
ErrorCode
AlertInfo
____--SENTINEL--ALIAS--V0--____
____--SENTINEL--SELF--ALIAS--V0--____
VettedAliases
AppleID
SelfHandle
Registration
InternalErrorCode
Profile
Region
Number
ServerContext
ServerHost
ServerPort
12345678-7654-DADA-DADA-DADADADADADA
Identifier
LegacyIdentifier
QueryServiceName
ProtocolName
CanUseLargePayload
SendOnePerToken
AllowPartialSendsToSucceed
LaunchDarwinNotification
LaunchMachServiceNotification
SupportsPhoneNumberRegistration
iCloudService
HoldMessagesUntilClassCUnlock
TunnelService
LinkedServices
AdHocServiceType
ShouldShowUsageNotifications
DuetIdentifiers
AllowLocalDelivery
AllowMagnetDelivery
AllowedTrafficClasses
DataProtectionClass
AutoConfigureDSID
AutoConfigureVettedAddresses
SyncAccounts
NoSyncPhoneNumberAccounts
AllowProxyDelivery
WantsLocalReflectedSend
WatchOnlyService
AllowDuplicateMessages
UseiMessageCallerID
MinCompatibilityVersion
AccountSyncMinCompatibilityVersion
SuperService
AllowPendingMessagesForInactiveDevice
AllowSendingMessagesToInactiveDevice
ClassAProtectedTraffic
SilentlyFailMessagesOnSwitch
AllowCloudDelivery
EnabledOnlyWhenPaired
forceHTTPQueries
FaceTime
iMessage
Calling
com.apple.private.alloy.invitation.screensharing
com.apple.private.alloy.multiplex1
com.apple.private.alloy.ids.cloudmessaging
delegates
com.apple.private.ids
service-data
handles
email-address
auth-token
self-handle
invitation-context
apple-id
profile-id
realm-user-id
password
alert
account-info
account-exists
status
message
BackupIDSAccountToken
__kIDSRegistrationKeychainChangedNotification
00000000-0000-0000-0000-000000000000
hardware-version
device-name
identities
push-token
service
sub-services
linked-user-uri
locally-present
default-paired-device
nsuuid
default-local-device
private-device-data
ids-identifier
ids-identifier-override
encryption-key
encryption-key-class-a
encryption-key-class-c
client-data
pairing-protocol-version
min-compatibility-version
max-compatibility-version
service-min-compatibility-version
is-hsa-trusted-device
is-active-paired-device
sessionmessage
initiate
accept
decline
pclm
unique-id
account-id
destinations
transport
client-id
connection-count-hint
single-channel-direct-mode
wait-pre-connection-data
isinitiator-key
peer-protocol-version-key
disallow-cellular-interface-key
disallow-wifi-interface-key
preferred-address-family-key
prefer-cellular-for-call-setup-key
client-uuid-key
disable-encryption
always-skip-self-key
use-stun-mi
use-secure-qr-control-message
need-wait-SKE
IDSRemoteURLConnectionErrorDomain
command
request
tryForceCellular
alwaysForceCellular
requireIDSHost
dataUsageBundleIdentifier
response
responseStatusCode
httpVersion
resultData
responseError
headers
shouldUsePipelining
concurrentConnections
disableKeepAlive
keepAliveWifi
keepAliveCell
request-version
username
bad-password
show-forgot-password
should-remember-password
out-service-id
out-self-id
request-id
password-or-token
was-cancelled
was-saved-in-keychain
password-clicked
imessage-account-info
faceTime-account-info
success
encryption-class-a-key
encryption-class-c-key
identifier
cache
sync-payload
lightQuery
allowQuery
idStatusUpdates
fromURI
serviceTypes
accountMap
loginID
account-type
AVChatConferenceData
AVChatInviteesData
VCNewCallerIPPortData
VCResponseData
VCPresentity
VCPropertyCN
VCIPPortData
VCConnectData
VCExtIP
VCExtSIP
VCAudioOnly
VCResponse
VCOneWay
VCInviteesList
VCOrderIsFinal
VCSessionID
VCCallID
VCOngoingConferenceID
VCCallIsReinitiate
VCCallHasReinitiateCapability
VCProtocolVersion
VCPropertyNATType
BreakBeforeMake
VCPropertyPeerNATType
VCPropertyNATIP
VCPropertyPeerNATIP
VCPropertyPeerICEData
VCPropertySKEData
VCDetectedSameNAT
VCICEData
VCARDNegotiation
__kIDSVCPropertyTargetAddress
VCRelaySupported
VCInlineRelayInitiate
FZPersonID
com.apple.ids.continuityerrordomain
priority
scope
encryption
account
srtp-protocol-version
name
domain
cbuuid
phonecall
cloud-enabled
open-soket-connection-uuid
open-soket-awd-metrics-client-init
open-soket-awd-metrics-client-osc
open-socket-awd-metrics-success
localpriority
idsdc-awd-client-init
idsdc-awd-daemon-open-socket
idsdc-awd-connection-init
idsdc-awd-daemon-completion-handler
idsdc-awd-client-open-socket-completion
idsdc-awd-first-data-packet-receive
idsdc-awd-success
idsdc-awd-created-at
idsdc-awd-connection-uuid
idsdc-awd-service-name
ids-message-resource-transfer-url
ids-message-resource-transfer-data
ids-message-resource-transfer-metadata
ids-message-resource-transfer-total-bytes
ids-message-resource-transfer-expiry-date
ids-message-resource-transfer-sandbox-extension
ids-message-resource-transfer-original-file-sandbox-extension
kIDSPairingStateChangedNotification
kIDSDefaultPairedDeviceStartedBeingNearbyNotification
ids-stun-message-type
ids-stun-message-transactionid
ids-stun-attribute-messageintegrity
ids-stun-attribute-lifetime
ids-stun-attribute-software
ids-stun-attribute-requestedtransport
ids-stun-attribute-xormappedaddress
ids-stun-attribute-xorrelayedaddress
ids-stun-attribute-channelnumber
ids-stun-attribute-data
ids-stun-attribute-cellrat
ids-stun-attribute-qr-relaysessiontoken
ids-stun-attribute-qr-relaysessionid
ids-stun-attribute-qr-internalrelaysessionid
ids-stun-attribute-qr-data
ids-stun-attribute-qr-requestnonce
ids-stun-attribute-qr-hmac
ids-stun-attribute-qr-sessionid
ids-stun-attribute-qr-sessiontokenkey
ids-stun-attribute-qr-realloctoken
com.apple.private.alloy.quickrelay
clientchannel
qos-family
qos-family-payload-type
qos-family-timestamp-value
qos-family-offset-bytes
qos-family-transaction-id
qos-family-drop-operation
gl-attr-ipfamily
gl-attr-counter
gl-attr-transport
gl-attr-mtu
gl-attr-rat
gl-attr-skedata
gl-attr-conndata
gl-attr-acceptdelay
gl-attr-relayremoteaddress
gl-attr-hmac
qr-server-provider
gl-option-forcerelay
gl-option-disallow-cellular
gl-option-disallow-wifi
gl-option-prefer-cellular-for-call-setup
gl-option-client-type
gl-option-enable-ske
gl-option-preferred-address-family
gl-option-invite-sent-time
gl-option-invite-recv-time
gl-option-use-secure-control-message
com.apple.ids
RegistrationControl
apple
md-use-binary-plist
com.apple.imessage
useBinaryPlists
Warning, missing %@ to add to %s
dictionary
wantsDeliveryStatus
T@"NSNumber",C,V_wantsDeliveryStatus
deliveryStatusContext
T@"NSDictionary",C,V_deliveryStatusContext
version
T@"NSNumber",C,V_version
v4@?0
com.apple.identityservices.keychain-reader
%@V%d
KeychainManager
Purged keychain reader
Loaded keychain dictionary, %d entries
Attempting to load V%d keychain blob from service: %@   account: %@   accessGroup: %@
  => Found V%d keychain blob
KeychainReader
  => No blob found in keychain
FTServices
  => Failed to get keychain blob (error: %d)
Unable to parse property list: %@
Removing invalid keychain data (V%d) for service: %@   account: %@
  => Unable to remove invalid keychain blob (error: %d)
Keychain dictionary V%d needs upgrade
Ignoring keychain registration request for local account
Looking up registration with service type: %@  registration type: %@   value: %@
main-id
phone-number-registration
com.apple.facetime
registration
data
Invalid keychain dict version (%d) -- current is %d
Updating keychain dict to current version (%d)
Keychain dictionary before upgrade : %@
  => Updating from V0 to V1
Keychain dictionary after upgrade : %@
Unable to upgrade an empty keychain data from V0 to V1
phone-number
user-id
migrated-v0-dictionary
IDSNetworkingLogDump
%s: %s
%s: asked to dump networking logs flags %lu
%s: lskq for identityservicesd %lu
%@/lskq_identityservicesd_%@.txt
/usr/bin/lskq -p %lu > %@
%s: === lskq file [%@] ===
%s: simulate crash
%s: simulate crash skipped - already done recently (%.6lfs ago)
%s: kick off sysdiagnose
%s: sysdiagnose finished
v8@?0@"NSError"4
%s: sysdiagnose skipped - already done recently (%.6lfs ago)
com.apple.identityservices.socketConnection-%@
highPriorityReadQueues
v8@?0@"<IDSBaseSocketPairConnectionDelegate>"4
FTMessageDelivery
IDSBaseSocketPairConnection
resource temporarily unavailable, trying again later...
Error %d (%s) when receiving bytes, closing connection
Remote side closed the connection, cleaning up
Processing incoming bytes %lu
Socekt Pair BPS: avg %f instant %f
Connected socket closed, cannot send data, cleaning up...
No data to send on socket, suspending write source
socket timeout, ignoring...
error %d (%s) trying to get SO_RCVBUF size, cleaning up...
no buffer space available socket is full with %d bytes, waiting...
send error %d (%s) trying to send data of size %lu, dropping packets to send...
send error %d (%s) trying to send data of size %lu, cleaning up...
Resuming write source
socket
Ti,R,N,V_connectedSocket
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
topics
T@"NSSet",C,N,V_topics
commands
T@"NSSet",C,N,V_commands
isConnected
TB,R,N
pushToken
T@"NSData",R,N
shouldWaitToSetTopics
TB,N,V_shouldWaitToSetTopics
com.apple.ids.messagecontext
wantsAppAck
TB,N
storageGuid
T@"NSString",C,N
originalCommand
T@"NSNumber",N
broadcastTime
boostContext
T@,&,N
broadcastID
Tq,N
connectionType
outgoingResponseIdentifier
incomingResponseIdentifier
serviceIdentifier
fromID
toID
originalDestinationDevice
expectsPeerResponse
wantsManualAck
fromServerStorage
serverReceivedTime
T@"NSDate",R,N
_kIDSServerBagFinishedLoadingNotification
__k_IDSServerBagFinishedLoadingDistributedNotification
Cache-Control
max-age=
com.apple.IDSServerBagKey
** Clearing Bag Cache **   (%@)
CachedBag
CacheTime
Date
Not loading from cache, we have the bag already   (%@)
Loading bag from cache   (%@)
Found cached bag: %@
Found cached reference date: %@
Found cached date: %@
Found cached url: %@
Found cached time: %@
Found cached time (Clamped): %@
Using cached bag: %@
Saving bag cache to disk: %d items     %@
ServerBag.Verbose
Saving cached bag to disk: %@
  => Not saving
Cached bag is up to date   (%@)
Saving bag to cache: %d items   (%@)
Saving bag to cache: %@
APSConnection
ApplePushService
geoRegion
gr=%@
%@ %@
server-bag
agentString: %@
user-agent
true
x-internal
com.apple.IDSServerBagQueue
          URL: %@   (%@)
  environment: %@   (%@)
Has paired device %llu for server bag %@
v16@?0i4Q8
%@: Invalid dictionary to parse URL bag (%@)
Certificates: %@
Signature: %@
Signed Bag: %@
%@: Insufficient data to parse URL bag
Evaluating trust: %p
Security Error: %d
com.apple.ids.debug
ForceNoBagValidation
TRUST validation failed with result %d
Server bag trust validation result %ld
%@: URL bag data invalid (not valid)
%@: URL bag data invalid (signature check failed)
%@: Could not unserialize the URL bag: %@
Received data of length: %d
Processing result data... request was cached: %@ (Hex: %@)
  => We're already trusted, and it was cached, so bailing
Got empty bag data, ignoring!
Response dict %@
****** Allowing unsigned server bag ******
Cancelling bag load   (%@)
Time since last load: %f
Cache Time: %f
 **** We are in debilitated mode, using cache time %f
Bag server doesn't need loading
Bag needs reloading
(%@) Bag needs reloading
Bag server is not available: %@
Warning
Bag loading failed! Error (%@:%ld): %@ %@
Finished loading bag: %@
Async loaded bag: %d items   (%@)
Async loaded bag: %@
Cache Time: %@
 Load date is: %@
Cache time is: %@
Hitting deferred save on main thread
v20@?0@"NSURLResponse"4i8@"NSData"12@"NSError"16
Could not start bag load, no URL found
Start bag load %@
%s (%@)
-[IDSServerBag connectionMonitorDidUpdate:]
Bag type (%@)
Server is available   (%@)
   Starting bag load   (%@)
Server is not available   (%@)
   Stopping bag load   (%@)
_connectionMonitor
T@"IMConnectionMonitor",&,V_connectionMonitor
bagURL
T@"NSURL",&,V_bagURL
apsEnvironmentName
T@"NSString",&,V_apsEnvironmentName
_bag
T@"NSDictionary",&,S_setBag:,V_bag
_cachedBag
T@"NSDictionary",&,S_setCachedBag:,V_cachedBag
_urlRequest
T@"NSMutableURLRequest",&,V_urlRequest
_cachedURLString
T@"NSString",&,S_setCachedURLString:,V_cachedURLString
_cachedHash
T@"NSString",&,S_setCachedHash:,V_cachedHash
_loadDate
T@"NSDate",&,V_loadDate
_cacheTime
T@"NSNumber",&,V_cacheTime
_remoteURLConnection
T@"IMRemoteURLConnection",&,V_remoteURLConnection
_bagQueue
T@"NSObject<OS_dispatch_queue>",V_bagQueue
_trustStatus
Ti,S_setTrustStatus:,V_trustStatus
_certData
T@"NSData",&,V_certData
allowSelfSignedCertificates
TB,V_allowSelfSignedCertificates
allowUnsignedBags
TB,V_allowUnsignedBags
token
Ti,V_token
hasPairedDeviceState
TQ,V_hasPairedDeviceState
isLoaded
TB,R
isLoading
isInDebilitatedMode
isServerAvailable
IDSServerBag
Bag loaded externally
certs
signature
FAILED to create cert %d
Bag signature verification failed %d
Could not extract public key from trust
DATA verification failed
 *** JT *** can't convert v4 address to string (%d)
 *** JT *** can't convert v6 address to string (%d)
Tr^{sockaddr=CC[14c]},R,N
Tr^{sockaddr_in=CCS{in_addr=I}[8c]},R,N
Tr^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I},R,N
saPortHostOrder
TS,R,N
%%%u]:%u
<unsupported address>
<invalid address>
public-message-identity-key
v12@?0^v4I8
SocketPairMessage
Got unhandled socket pair command %d
TC,R,N,V_command
underlyingData
T@"NSData",R,&,N,V_underlyingData
underlyingDataLength
TI,R,N
context
T@"<NSObject>",&,N,V_context
topic
T@"NSString",&,N,V_topic
useDynamicServiceName
TB,N,V_useDynamicServiceName
cancelled
TB,N,V_cancelled
Response identifier length is bigger than packet size, offset %u identifier length %u packet length %u
sequenceNumber
TI,N,V_sequenceNumber
streamID
TS,N,V_streamID
T@"NSData",R,&,N
TB,R,N,V_expectsPeerResponse
TB,R,N,V_wantsAppAck
compressed
TB,N,V_compressed
peerResponseIdentifier
T@"NSString",R,&,N,V_peerResponseIdentifier
messageUUID
T@"NSString",R,&,N,V_messageUUID
expiryDate
T@"NSDate",&,N,V_expiryDate
versionNumber
TI,R,N,V_versionNumber
OTREncryptedMessage: version %u streamID %u priority %u sequenceNumber %u fileXfer %u
TC,R,N,V_versionNumber
encrypted
TB,R,N,V_encrypted
TS,R,N,V_priority
TI,R,N,V_sequenceNumber
fileXfer
TB,R,N,V_fileXfer
OTRMessage: encrypted %@ shouldEncrypt %@ version %u streamID %u protectionClass %u priority %u sequenceNumber %u
shouldEncrypt
TB,R,N,V_shouldEncrypt
protectionClass
TC,R,N,V_protectionClass
isResponse
TS,R,N,V_isResponse
TS,R,N,V_type
T@"NSData",R,&,N,V_data
fragmentedMessage: ID: %u, index: %u, total: %u
FragmentedMessage: have %u pieces, %u expected, 0 length
FragmentedMessage: can't create NSMutableData of %u length (have %u pieces, %u expected)
createOriginalMessageFromFragmentedMessages: made cmd %u length %u from %u pieces
createOriginalMessageFromFragmentedMessages: have %u pieces, nothing created
createMessageFragmentsFromOriginalMessage: made %u pieces from %u length at %u per fragment
fragmentedMessageID
TI,R,N,V_fragmentedMessageID
fragmentIndex
TI,R,N,V_fragmentIndex
totalFragmentCount
TI,R,N,V_totalFragmentCount
IDSSocketPairResourceTransferMessage: resource transfer type %d does not support byteOffset
IDSSocketPairResourceTransferMessage: resource transfer type %d does not support cancelReason
IDSSocketPairResourceTransferReceiver: missing header (%d)
IDSSocketPairResourceTransferReceiver: cannot get system attributes (%d) for path %@
IDSSocketPairResourceTransferReceiver: system space unavailable file %llu system %llu (%d)
IDSSocketPairResourceTransferReceiver: cannot create file (errno: %d (%s))
IDSSocketPairResourceTransferReceiver: failed to fchmod the file %d
IDSSocketPairResourceTransferReceiver: init called with filesystem-free-size %llu header %@ expiryDate %@
IDSSocketPairResourceTransferReceiver: failed to unlink aborted transfer @ %@
IDSSocketPairResourceTransferReceiver: incoming chunk does not have sufficient data (%lu)
IDSSocketPairResourceTransferReceiver: mismatching incoming resource chunk index: stated %llu != actual %llu
IDSSocketPairResourceTransferReceiver: error writing %lu (%llu total) to file %@ (errno: %d (%s))
IDSSocketPairResourceTransferReceiver: only wrote %ld/%lu bytes to file %@
IDSSocketPairResourceTransferReceiver: wrote %lu (received %llu out of %llu total) bytes to file %@ at %llu
IDSSocketPairResourceTransferReceiver: finished writing all %llu  bytes to file %@
IDSSocketPairResourceTransferReceiver: received %llu bytes, more than expected %llu to file %@
IDSSocketPairResourceTransferReceiver: already done with this resource! messageUUID %@
IDSSocketPairResourceTransferReceiver: messageUUID %@ does not match original messageUUID %@
IDSSocketPairResourceTransferReceiver: appending message %@ (size: %lu decompressed: %lu) to file %@
IDSSocketPairResourceTransferReceiver: appending message %@ (size: %lu) to file %@
com.apple.identityservices.deliver
Issued sandbox extension [%s] for file [%@]
Failed to issue sandbox extension for file [%@]
totalBytesReceived
TQ,R,N,V_totalBytesReceived
T@"NSDate",R,&,N,V_expiryDate
IDSSocketPairResourceTransferSender: created with path %@  metadata %@ sequenceNumber %lu streamID %u expectsPeerResponse %@ wantsAppAck %@ compressed %@ peerResponseIdentifier %@ messageUUID %@ expiryDate %@
IDSSocketPairResourceTransferSender: unable to read file attributes %@
IDSSocketPairResourceTransferSender: file too big %llu
IDSSocketPairResourceTransferSender: path: %@  attributes: %@  metadata: %@  sentFirstMessage: %@  nextbyte: %llu  totalbytes: %llu  messageUUID: %@  filedescriptor: %d expiryDate: %@
IDSSocketPairResourceTransferSender: done with %@ attributes %@ fd %d messageUUID %@
IDSSocketPairResourceTransferSender: already done reading
IDSSocketPairResourceTransferSender: file not open
IDSSocketPairResourceTransferSender: no more bytes to read - should not happen
IDSSocketPairResourceTransferSender: malloc failed for %llu
IDSSocketPairResourceTransferSender: unable to read file (errno: %d)
IDSSocketPairResourceTransferSender: read all %llu bytes from file %@
IDSSocketPairResourceTransferSender: unable to open file for read (errno %d)
SocketPairMessage open() failed
firstMessageDictionary
IDSSocketPairResourceTransferSender: failed to create first message from %@
IDSSocketPairResourceTransferSender: failed to create data message from %@
sentFirstMessage
TB,R,N,V_sentFirstMessage
isDone
TB,R,N,V_done
maxChunkSize
TI,N,V_maxChunkSize
resumeResourceTransfers
TB,N,V_resumeResourceTransfers
nextByte
TQ,N,V_nextByte
IDSSocketPairServiceMapMessage: Unknown field type: %u
reason
TC,R,N,V_reason
mappedStreamID
TS,R,N,V_mappedStreamID
serviceName
T@"NSString",R,&,N,V_serviceName
/Library/IdentityServices/incomingfiles/
makeTemporaryFileFromOriginalFilePath: can't get last path component from %@
makeTemporaryFileFromOriginalFilePath: can't get new path from original %@ destination %@
makeTemporaryFileFromOriginalFilePath: can't create new directory from original %@ destination %@ (may be benign)
makeTemporaryFileFromOriginalFilePath: can't allocate %ld bytes for new file path
makeTemporaryFileFromOriginalFilePath: can't open file for writing @%s errno %d
makeTemporaryFileFromOriginalFilePath: could not make path string from path c string %s
makeTemporaryFileFromOriginalFilePath: originalFilePath %@ newFilePath %@ newFileDescriptor %d
IDSSendParametersDataKey
IDSSendParametersMessageKey
IDSSendParametersProtobufKey
IDSSendParametersResourcePathKey
IDSSendParametersResourceMetadataKey
IDSSendParametersFromIDKey
IDSSendParametersDestinationsKey
IDSSendParametersAccountUUIDKey
IDSSendParametersUseDictAsTopLevelKey
IDSSendParametersDataToEncryptKey
IDSSendParametersEncryptPayloadKey
IDSSendParametersCompressPayloadKey
IDSSendParametersTimeoutKey
IDSSendParametersCommandKey
IDSSendParametersWantsAppAckKey
IDSSendParametersWantsDeliveryStatusKey
IDSSendParametersDeliveryStatusContextKey
IDSSendParametersMessageUUIDKey
IDSSendParametersAlternateCallbackIDKey
IDSSendParametersPriorityKey
IDSSendParametersLocalDeliveryKey
IDSSendParametersRequireBluetoothKey
IDSSendParametersIdentifierKey
IDSSendParametersWantsResponseKey
IDSSendParametersBulkedPayloadKey
IDSSendParametersExpectsPeerResponseKey
IDSSendParametersCompressedKey
IDSSendParametersPeerResponseIdentifierKey
IDSSendParametersBypassDuetKey
IDSSendParametersFakeMessageKey
IDSSendParametersBypassStorageKey
IDSSendParametersActivityContinuationKey
IDSSendParametersQueueOneIdentifierKey
IDSSendParametersDuetIdentifiersOverrideKey
IDSSendParametersForceEncryptionOffKey
IDSSendParametersNonWakingKey
IDSSendParametersBypassSizeCheckKey
IDSSendParametersDaemonDeathResendKey
IDSSendParametersFireAndForgetKey
IDSSendParametersRequireAllRegistrationPropertiesKey
IDSSendParametersRequireLackOfRegistrationPropertiesKey
IDSSendParametersInterestingRegistrationPropertiesKey
IDSSendParametersIsProxiedOutgoingMessageKey
IDSSendParametersEnforceRemoteTimeoutsKey
IDSSendParametersAccessTokenKey
IDSSendParametersHomeKitPayloadKey
IDSSendParametersDisableAliasValidationKey
IDSSendParametersSubServiceKey
IDSSendParametersSubServiceAccountUUIDKey
IDSSendParametersMainAccountUUIDKey
IDSSendParametersOriginalfromIDKey
IDSSendParametersLocalDestinationDeviceUUIDKey
IDSSendParametersAllowCloudDeliveryKey
IDSSendParametersMessageTypeKey
IDSSendParametersSessionIDKey
IDSSendParametersAlwaysSkipSelfKey
params
T@"NSDictionary",&,N
T@"NSData",&,N
protobuf
resourcePath
T@"NSString",&,N
resourceMetadata
T@"NSArray",&,N
accountUUID
mainAccountUUID
localDestinationDeviceUUID
encryptPayload
compressPayload
timeout
Td,N
Ti,N
localDelivery
requireBluetooth
bypassDuet
fakeMessage
bypassStorage
activityContinuation
nonWaking
queueOneIdentifier
fireAndForget
duetIdentifiersOverride
forceEncryptionOff
subService
subServiceAccountUUID
allowCloudDelivery
messageType
T@"NSNumber",&,N
alwaysSkipSelf
originalfromID
useDictAsTopLevel
wantsResponse
dataToEncrypt
alternateCallbackID
interestingRegistrationProperties
requireAllRegistrationProperties
requireLackOfRegistrationProperties
isProxiedOutgoingMessage
bulkedPayload
daemonDeathResend
bypassSizeCheck
expirationDate
T@"NSDate",R,&,N
dictionaryRepresentation
T@"NSDictionary",R,&,N
enforceRemoteTimeouts
sessionID
accessToken
homeKitPayload
disableAliasValidation
Transport
IDSLoggingEnabled
com.apple.registration
fakeBadSIM
*********** Faking bad SIM, switch is ON !! ***********
fakeSMSCharge
*********** Faking SMS charge, switch is ON !! ***********
overridePhoneUserResponseCode
*********** Faking phone number challenge, switch is ON !! ***********
overrideEmailUserResponseCode
*********** Faking email challenge, switch is ON !! ***********
fakeIdentityRegeneration
*********** Faking identity regeneration, switch is ON !! ***********
overridePhoneNumberRepairTimer
*********** Override phone repair timer, switch is ON !! ***********
phoneNumberRepairTimerOverride
overrideGDRRegistrationResponseCode
*********** Faking GDR response code, switch is ON !! ***********
gdrCodeOverride
*********** Override GDR response code to %ld !! ***********
printBagData
*********** Printing bag data, switch is ON !! ***********
Unknown
Authenticating
Authenticated
Registered
Registering
Failed
Unregistered
none
pair
_IDSDaemonRunningNotifyToken
com.apple.private.alloy
Apple ID
Phone Number
Local
iCloud
com.apple.iMessage
com.apple.FaceTime
com.apple.Calling
com.apple.private.ac
com.apple.ess
com.apple.madrid
Messenger
Madrid
Venice
com.apple.private.alloy.sms
com.apple.private.alloy.electrictouch
com.apple.private.alloy.facetime.audio
com.apple.private.alloy.facetime.video
%@-%@
identity-rsa-public-key
 ** Did not find public key in the keychain [Identifier: %@]
 ** Failed to get public key from the keychain [Identifier: %@] (error: %d)
identity-rsa-private-key
 ** No private key found, generating one
 ** Did not find private key in the keychain [Identifier: %@]
 ** Failed to get private key from the keychain [Identifier: %@] (error: %d)
identity-rsa-key-pair-signature-v1
 ** No signature found, generating one [Identifier: %@]
 ** Did not find signature in the keychain [Identifier: %@]
 ** Failed to get signature from the keychain [Identifier: %@] (error: %d)
Waiting for keychain upgrade to be complete before loading key pair
 => Loaded Identity public key [Identifier: %@]
 ** No Identity public key found [Identifier: %@]
 => Loaded Identity key pair signature: %@ [Identifier: %@]
 ** No Identity key pair signature found [Identifier: %@]
 => Loaded Identity private key [Identifier: %@]
 ** No Identity private key found [Identifier: %@]
Failed storing keypair signature data [Identifier: %@] (error: %d)
 => We have good public and private keys, generating and migrating identity key pair signature: %@ [Identifier: %@]
 Generated public key: %p   private key: %p  [Identifier: %@]  result: %ld
System/Library/IdentityServices/ServiceDefinitions/
Library/IdentityServices/ServiceDefinitions/
AppleInternal/Library/IdentityServices/ServiceDefinitions/
var/mobile/Library/IdentityServices/ServiceDefinitions/
com.apple.private.alloy.madrid.healthcheck
com.apple.private.alloy.test1
Forcing development type for %@
com.apple.private.alloy.smsrelay
Ignoring empty service definition at: %@
No identities for device %@
@8@?0@"NSDictionary"4
self-token:%@/%@
No UniqueID Provided
device:%@
tel:
mailto:
token:
self-token:
accessory:
device:
urn:ck:
Invalid token %@ or idsID %@
token:%@/%@
tel:%@
mailto:%@
accessory:%@
Phone number: %@
Ignoring malformed alias %@ in _IDSCopyOrderedAliases
CallerID
_IDSCopyOrderedAliases: Canonicalized and deduplicated aliases %@ down to %@
v16@?0@"NSString"4I8^B12
I8@?0@"NSString"4
i12@?0@"NSString"4@"NSString"8
_IDSCopyOrderedAliases sorted aliases %@  (my phone number: %@)
Asked for callerID with fromID %@ for ds-based account. Forcing fromID = %@
CallerID - no fromID and this is a ds-based account, using %@
Asked for callerID with fromID %@ from a non-ds-based account.
CallerID - no fromID - choosing %@ from aliases %@ (originally %@). Prefer phone numbers %@
Unable to find fromID %@ in set of valid aliases %@   (falling back to: %@)
com.apple.ids.trafficclass.all
com.apple.ids.trafficclass.control
Unhandled server key: %@
Missing keys in the authentication dictionary service keys.  Please file! [%@]
@8@?0@4
    * kIDSListenerCapConsumesLaunchOnDemandIncomingMessages
    * kIDSListenerCapConsumesLaunchOnDemandOutgoingMessageUpdates
    * kIDSListenerCapConsumesLaunchOnDemandSessionMessages
    * kIDSListenerCapConsumesLaunchOnDemandIncomingData
    * kIDSListenerCapConsumesLaunchOnDemandIncomingProtobuf
dataProtectionClass
TI,V_dataProtectionClass
guid
T@"NSString",&,SsetGUID:,V_guid
alternateGUID
T@"NSString",&,SsetAlternateGUID:,V_alternateGUID
IDS checking errno for fatal error
%s fatal errno %d
Fatal error encountered %s, aborting in %d seconds
IDSFoundationUtils
Raising alert for [%@] [%@] [%@]
YYYY-MM-dd
@icloud.com
URLLoading
IDSRemoteURLClient
Clearing out _connection, we're disconnected
Forcing a disconnect, terminating connection
Connecting to URLLoading agent
URL Loading service disconnected
Init with URL request: %@  (%p)
Released URL request: %@  (%p)
Sending URL request: %@ (Data usage identifier: %@)  (%p)
alwaysForceCelluar
Loaded disconnected for request: %@  (%p)
Remote loader crashed for request: %@
 => Retrying... (%d/%d) retries
Not retrying, calling completion block
           Cancelled, not retrying or notifying of failure!
Loaded completed for request: %@  (Data usage identifier: %@) (%p)
error
statusCode
           Response: %@
        Status Code: %d
 Result Data Length: %d
              Error: %@
           Cancelled, not calling out!
v8@?0@"NSObject<OS_xpc_object>"4
Cancelling URL request: %@  (%p)
TB,V_requireIDSHost
forceCellularIfPossible
TB,V_forceCellularIfPossible
TB,V_alwaysForceCellular
bundleIdentifierForDataUsage
T@"NSString",&,V_bundleIdentifierForDataUsage
TB,V_shouldUsePipelining
Ti,V_concurrentConnections
TB,V_disableKeepAlive
Ti,V_keepAliveWifi
Ti,V_keepAliveCell
T@"NSURLRequest",&,V_request
block
T@?,C,V_block
IDSRemoteURLConnection
Client
Messages
StreamBytesSent = %llu 
StreamBytesReceived = %llu 
StreamPacketsSent = %llu 
StreamPacketsReceived = %llu 
MessageSentSize = %llu 
MessageDeliveredSize = %llu 
MessageDeliveredRTT = %llu 
MessageReceivedSize = %llu 
Count of MessageDeliveredDeliveryError = %llu 
StreamBytesSent
TQ,N,V_StreamBytesSent
StreamBytesReceived
TQ,N,V_StreamBytesReceived
StreamPacketsSent
TQ,N,V_StreamPacketsSent
StreamPacketsReceived
TQ,N,V_StreamPacketsReceived
MessageSentSize
TQ,N,V_MessageSentSize
MessageDeliveredSize
TQ,N,V_MessageDeliveredSize
MessageDeliveredRTT
TQ,N,V_MessageDeliveredRTT
MessageReceivedSize
TQ,N,V_MessageReceivedSize
MessageDeliveredDeliveryError
TQ,N,V_MessageDeliveredDeliveryError
numMessageSentSize
TQ,R,N,V_numMessageSentSize
numMessageDeliveredSize
TQ,R,N,V_numMessageDeliveredSize
numMessageDeliveredRTT
TQ,R,N,V_numMessageDeliveredRTT
numMessageReceivedSize
TQ,R,N,V_numMessageReceivedSize
IDSWRMExchange
Re-subscribe to WRM for link recommendations of type: %d
WiFi
Recommended link changed to '%s'
Active link changed from '%s' to '%s'
com.apple.FTFaceTimeServerBagKey
com.apple.facetime.bag
vc-disaster-mode
do-http-pipelining
max-concurrent-connections
do-http-keep-alive
http-keep-alive-idle-timeout-wifi-millis
http-keep-alive-idle-timeout-cell-millis
vc-temporary-get-dependent-interval
anisette-headers-global-timeout
anisette-headers-disabled
User-Agent
internalHeadersDisabled
testAppHeaderEnabled
X-Apple-Test-Application
testOptionsHeader
X-Apple-Test-Options
com.apple.da
ExperimentGroup
walkabout
x-trace
x-logging
creationDate
T@"NSDate",&,V_creationDate
_usingOutgoingPush
TB,S_setUsingOutgoingPush:,V_usingOutgoingPush
_cachedBody
T@"NSDictionary",&,S_setCachedBody:,V_cachedBody
wantsIDSServer
isValidMessage
payloadCanBeLogged
uniqueID
TI,V_uniqueID
uniqueIDString
T@"NSString",R,&
T@"NSString",R,&,V_dataUsageBundleIdentifier
Td,V_timeout
timeSent
Td,V_timeSent
completionBlock
T@?,C,V_completionBlock
deliveryAcknowledgementBlock
T@?,C,V_deliveryAcknowledgementBlock
bagKey
T@"NSString",&,V_topic
Ti,R
responseCommand
hasReceivedPushAck
TB,V_hasReceivedPushAck
hasAttemptedAPSDelivery
TB,V_hasAttemptedAPSDelivery
importanceLevel
Ti,V_importanceLevel
deliveryMechanism
Ti,V_deliveryMechanism
T@"NSString",C,V_service
T@"NSString",C,V_subService
underlyingService
T@"NSString",C,V_underlyingService
forceCellular
TB,V_forceCellular
TB,V_alwaysForceCelluar
highPriority
TB,V_highPriority
wantsSignature
wantsBodySignature
wantsCFNetworkTimeout
wantsManagedRetries
wantsExtraTimeoutRetry
maxTimeoutRetries
wantsHTTPHeaders
wantsCompressedBody
wantsBinaryPush
TB,V_wantsBinaryPush
wantsIntegerUniqueIDs
TB,V_wantsIntegerUniqueIDs
wantsJSONBody
wantsBagKey
wantsUserAgentInHeaders
wantsHTTPGet
wantsAPSRetries
wantsAnisetteHeaders
anisetteHeadersTimeout
Td,R
TB,V_wantsResponse
wantsMultipleResponses
TB,V_wantsMultipleResponses
isWebTunnelMessage
timeoutRetries
Ti,V_timeoutRetries
ignoresNetworkConnectivity
wantsCustomRetryInterval
customRetryInterval
requiredKeys
T@"NSArray",R,&
responseAlertInfo
T@"NSDictionary",C,V_responseAlert
messageBody
T@"NSDictionary",R,&
messageBodyUsingCache
additionalMessageHeaders
additionalQueryStringParameters
additionalInternalHeaders
additionalMessageHeadersForOutgoingPush
nonStandardMessageHeadersForOutgoingPush
pushPrivateKey
T^{__SecKey=},N
pushPublicKey
pushCertificate
T@"NSData",C,N
certDataArray
T@"NSMutableArray",C,N
publicKeyArray
privateKeyArray
userIDArray
serverTimestamp
T@"NSNumber",C,N
serverTimestampReceivedDate
identityPrivateKey
T^{__SecKey=},R,N
identityPublicKey
IDCertificate
T@"NSData",R,C,N
dsAuthID
T@"NSString",C,N,SsetDSAuthID:,V_dsAuthID
serviceData
T@"NSData",C,V_serviceData
clientInfo
T@"NSDictionary",C,V_clientInfo
userAgentHeaderString
retryCount
T@"NSNumber",C,N,V_retryCount
allowDualDelivery
userInfo
T@"NSDictionary",C,V_userInfo
T@,&,V_context
MessageDelivery
Missing message key: %@   (Message: %@)
IDSHC
CreateContext - p:%u c:%u s_port:%u d_port:%u seq:%u ack:%u
IDSCompressTCPPacket2 - invalid TCP header length %d.
TPThread
should assert real time mode on thread %p, not %p
asserting real time mode on thread %p but already in real time mode (%d assertions)
asserting real time mode on thread %p (%d => %d)
unasserting real time mode on thread %p but not in real time mode
unasserting real time mode on thread %p but still in real time mode (%d assertions)
unasserting real time mode on thread %p (%d => %d)
DisableKeventForTransportThread
kqueue
select
use %s
IDSTransportThreadInit: transport thread not initialized
IDSTransportPriority
Set IDSTransportThread priority at %d.
IDSTransportThreadInit socketpair failed (%d)
IDSTransportThreadInit created controlScoketPair %d/%d
IDSTransportThreadInit kqueue failed (%d)
kevent(fd[0]=%d, READ, ADD|ENABLE) failed with error(%d)
failed to create transport thread (%d)
Created transport thread with tid(%p).
Transport thread with tid(%p) stopped.
failed to write control command buffer (%d)
realloc(%d) for fds failed
realloc(%d) for readBlocks failed
realloc(%d) for writeBlocks failed
TransportThread Primary
TransportThread %@
URGENT
Default
Sync
IDSTransportProc started...
kevent
%s(%d, %x-%x, %x-%x) failed with error(%d)
failed to read from control socket (%d)
Unknown control command %u
IDSTransportProc ended
should not add a sync block to the current thread %p
IDSTransportThreadAddSocket called with bad socket %d
should add socket on thread %p, not %p
found existing socket %d - releasing old blocks
kevent(fd[%d]=%d, READ, DELETE) failed with error(%d)
kevent(fd[%d]=%d, WRITE, DELETE) failed with error(%d)
kevent(fd[%d]=%d, READ, ADD|ENABLE) failed with error(%d)
kevent(fd[%d]=%d, WRITE, ADD|ENABLE) failed with error(%d)
added socket %d at %d (count:%d) with readBlock %p writeBlock %p
IDSTransportThreadSuspendSocket called with bad socket %d
kevent(fd[%d]=%d, READ, DISABLE) failed with error(%d)
kevent(fd[%d]=%d, WRITE, DISABLE) failed with error(%d)
suspendSocket(%d, forRead:%@) cannot find socket (count:%d)
IDSTransportThreadResumeSocket called with bad socket %d
kevent(fd[%d]=%d, READ, ENABLE) failed with error(%d)
kevent(fd[%d]=%d, WRITE, ENABLE) failed with error(%d)
resumeSocket(%d, forRead:%@) cannot find socket (count:%d)
IDSTransportThreadRemoveSocket called with bad socket %d
should remove socket on thread %p, not %p
removing socket %d at %d (count:%d) with readBlock %p writeBlock %p
removeSocket(%d) cannot find socket (count:%d)
IDSProtoBufDataKey
IDSProtoBufTypeKey
IDSProtoBufIsResponseKey
IDSProtoBufMessageContextKey
IDSProtobuf %p type %d isResponse %d data length %lu
protobufparams
uncompressedData
T@"NSData",&,N,V_uncompressedData
TS,N
T@"IDSMessageContext",&,N
IDSSysdiagnoseLogCollectorErrorDomain
Collecting sysdiagnose not allowed - Failed {isInternalInstall: %@, hasLoggingProfileInstalled: %@}
Sysdiagnose disabled {isInternalInstall: %@, hasLoggingProfileInstalled: %@}
com.apple.sysdiagnose.service.xpc
sysdiagnose
compress
Sending XPC message to sysdiagnose XPC port.
Received reply from sysdiagnose.
path
Sysdiagnose log is located at %s
Reply from sysdiagnose does not contain a path to the log file.
Failed to capture sysdiagnose.
Error
sysdiagnose failed!
sysdiagnose returned non-dictionary!
writeFieldToByteBuffer buffer too small, %ld %u
readFieldFromByteBuffer not enough bytes, %u %u %ld
initByteBuffer out of memory
%s: %s
%s: asked to dump networking logs flags %lu
%s: lskq for identityservicesd %lu
%s: === lskq file [%@] ===
%s: simulate crash
%s: simulate crash skipped - already done recently (%.6lfs ago)
%s: kick off sysdiagnose
%s: sysdiagnose finished
%s: sysdiagnose skipped - already done recently (%.6lfs ago)
resource temporarily unavailable, trying again later...
Error %d (%s) when receiving bytes, closing connection
Remote side closed the connection, cleaning up
Processing incoming bytes %lu
Socekt Pair BPS: avg %f instant %f
Connected socket closed, cannot send data, cleaning up...
No data to send on socket, suspending write source
socket timeout, ignoring...
error %d (%s) trying to get SO_RCVBUF size, cleaning up...
no buffer space available socket is full with %d bytes, waiting...
send error %d (%s) trying to send data of size %lu, dropping packets to send...
send error %d (%s) trying to send data of size %lu, cleaning up...
Resuming write source
Has paired device %llu for server bag %@
%@: Invalid dictionary to parse URL bag (%@)
Certificates: %@
Signature: %@
Signed Bag: %@
%@: Insufficient data to parse URL bag
Evaluating trust: %p
Security Error: %d
TRUST validation failed with result %d
Server bag trust validation result %ld
%@: URL bag data invalid (not valid)
%@: URL bag data invalid (signature check failed)
%@: Could not unserialize the URL bag: %@
Received data of length: %d
Response dict %@
Time since last load: %f
Cache Time: %f
 **** We are in debilitated mode, using cache time %f
(%@) Bag needs reloading
Bag loading failed! Error (%@:%ld): %@ %@
Finished loading bag: %@
 Load date is: %@
Cache time is: %@
Got unhandled socket pair command %d
Response identifier length is bigger than packet size, offset %u identifier length %u packet length %u
FragmentedMessage: have %u pieces, %u expected, 0 length
FragmentedMessage: can't create NSMutableData of %u length (have %u pieces, %u expected)
createOriginalMessageFromFragmentedMessages: made cmd %u length %u from %u pieces
createOriginalMessageFromFragmentedMessages: have %u pieces, nothing created
createMessageFragmentsFromOriginalMessage: made %u pieces from %u length at %u per fragment
IDSSocketPairResourceTransferMessage: resource transfer type %d does not support byteOffset
IDSSocketPairResourceTransferMessage: resource transfer type %d does not support cancelReason
IDSSocketPairResourceTransferReceiver: missing header (%d)
IDSSocketPairResourceTransferReceiver: cannot get system attributes (%d) for path %@
IDSSocketPairResourceTransferReceiver: system space unavailable file %llu system %llu (%d)
IDSSocketPairResourceTransferReceiver: cannot create file (errno: %d (%s))
IDSSocketPairResourceTransferReceiver: failed to fchmod the file %d
IDSSocketPairResourceTransferReceiver: init called with filesystem-free-size %llu header %@ expiryDate %@
IDSSocketPairResourceTransferReceiver: failed to unlink aborted transfer @ %@
IDSSocketPairResourceTransferReceiver: incoming chunk does not have sufficient data (%lu)
IDSSocketPairResourceTransferReceiver: mismatching incoming resource chunk index: stated %llu != actual %llu
IDSSocketPairResourceTransferReceiver: error writing %lu (%llu total) to file %@ (errno: %d (%s))
IDSSocketPairResourceTransferReceiver: only wrote %ld/%lu bytes to file %@
IDSSocketPairResourceTransferReceiver: wrote %lu (received %llu out of %llu total) bytes to file %@ at %llu
IDSSocketPairResourceTransferReceiver: finished writing all %llu  bytes to file %@
IDSSocketPairResourceTransferReceiver: received %llu bytes, more than expected %llu to file %@
IDSSocketPairResourceTransferReceiver: already done with this resource! messageUUID %@
IDSSocketPairResourceTransferReceiver: messageUUID %@ does not match original messageUUID %@
IDSSocketPairResourceTransferReceiver: appending message %@ (size: %lu) to file %@
IDSSocketPairResourceTransferReceiver: appending message %@ (size: %lu decompressed: %lu) to file %@
Issued sandbox extension [%s] for file [%@]
Failed to issue sandbox extension for file [%@]
IDSSocketPairResourceTransferSender: created with path %@  metadata %@ sequenceNumber %lu streamID %u expectsPeerResponse %@ wantsAppAck %@ compressed %@ peerResponseIdentifier %@ messageUUID %@ expiryDate %@
IDSSocketPairResourceTransferSender: unable to read file attributes %@
IDSSocketPairResourceTransferSender: file too big %llu
IDSSocketPairResourceTransferSender: done with %@ attributes %@ fd %d messageUUID %@
IDSSocketPairResourceTransferSender: already done reading
IDSSocketPairResourceTransferSender: file not open
IDSSocketPairResourceTransferSender: no more bytes to read - should not happen
IDSSocketPairResourceTransferSender: malloc failed for %llu
IDSSocketPairResourceTransferSender: unable to read file (errno: %d)
IDSSocketPairResourceTransferSender: read all %llu bytes from file %@
IDSSocketPairResourceTransferSender: unable to open file for read (errno %d)
IDSSocketPairResourceTransferSender: failed to create first message from %@
IDSSocketPairResourceTransferSender: failed to create data message from %@
IDSSocketPairServiceMapMessage: Unknown field type: %u
makeTemporaryFileFromOriginalFilePath: can't get last path component from %@
makeTemporaryFileFromOriginalFilePath: can't get new path from original %@ destination %@
makeTemporaryFileFromOriginalFilePath: can't create new directory from original %@ destination %@ (may be benign)
makeTemporaryFileFromOriginalFilePath: can't allocate %ld bytes for new file path
makeTemporaryFileFromOriginalFilePath: can't open file for writing @%s errno %d
makeTemporaryFileFromOriginalFilePath: could not make path string from path c string %s
makeTemporaryFileFromOriginalFilePath: originalFilePath %@ newFilePath %@ newFileDescriptor %d
*********** Faking bad SIM, switch is ON !! ***********
*********** Faking SMS charge, switch is ON !! ***********
*********** Faking phone number challenge, switch is ON !! ***********
*********** Faking email challenge, switch is ON !! ***********
*********** Faking identity regeneration, switch is ON !! ***********
*********** Override phone repair timer, switch is ON !! ***********
*********** Faking GDR response code, switch is ON !! ***********
*********** Override GDR response code to %ld !! ***********
*********** Printing bag data, switch is ON !! ***********
 ** Did not find public key in the keychain [Identifier: %@]
 ** Failed to get public key from the keychain [Identifier: %@] (error: %d)
 ** No private key found, generating one
 ** Did not find private key in the keychain [Identifier: %@]
 ** Failed to get private key from the keychain [Identifier: %@] (error: %d)
 ** No signature found, generating one [Identifier: %@]
 ** Did not find signature in the keychain [Identifier: %@]
 ** Failed to get signature from the keychain [Identifier: %@] (error: %d)
Waiting for keychain upgrade to be complete before loading key pair
 => Loaded Identity public key [Identifier: %@]
 ** No Identity public key found [Identifier: %@]
 => Loaded Identity key pair signature: %@ [Identifier: %@]
 ** No Identity key pair signature found [Identifier: %@]
 => Loaded Identity private key [Identifier: %@]
 ** No Identity private key found [Identifier: %@]
Failed storing keypair signature data [Identifier: %@] (error: %d)
 => We have good public and private keys, generating and migrating identity key pair signature: %@ [Identifier: %@]
 Generated public key: %p   private key: %p  [Identifier: %@]  result: %ld
Forcing development type for %@
Phone number: %@
Ignoring malformed alias %@ in _IDSCopyOrderedAliases
_IDSCopyOrderedAliases sorted aliases %@  (my phone number: %@)
Asked for callerID with fromID %@ for ds-based account. Forcing fromID = %@
CallerID - no fromID and this is a ds-based account, using %@
Asked for callerID with fromID %@ from a non-ds-based account.
CallerID - no fromID - choosing %@ from aliases %@ (originally %@). Prefer phone numbers %@
Unable to find fromID %@ in set of valid aliases %@   (falling back to: %@)
Unhandled server key: %@
Missing keys in the authentication dictionary service keys.  Please file! [%@]
Fatal error encountered %s, aborting in %d seconds
Raising alert for [%@] [%@] [%@]
Clearing out _connection, we're disconnected
Forcing a disconnect, terminating connection
Connecting to URLLoading agent
URL Loading service disconnected
Init with URL request: %@  (%p)
Released URL request: %@  (%p)
Sending URL request: %@ (Data usage identifier: %@)  (%p)
Loaded disconnected for request: %@  (%p)
Remote loader crashed for request: %@
 => Retrying... (%d/%d) retries
Not retrying, calling completion block
           Cancelled, not retrying or notifying of failure!
Loaded completed for request: %@  (Data usage identifier: %@) (%p)
           Response: %@
        Status Code: %d
 Result Data Length: %d
              Error: %@
           Cancelled, not calling out!
Cancelling URL request: %@  (%p)
Re-subscribe to WRM for link recommendations of type: %d
Recommended link changed to '%s'
Active link changed from '%s' to '%s'
Missing message key: %@   (Message: %@)
CreateContext - p:%u c:%u s_port:%u d_port:%u seq:%u ack:%u
IDSCompressTCPPacket2 - invalid TCP header length %d.
should assert real time mode on thread %p, not %p
asserting real time mode on thread %p but already in real time mode (%d assertions)
asserting real time mode on thread %p (%d => %d)
unasserting real time mode on thread %p but not in real time mode
unasserting real time mode on thread %p but still in real time mode (%d assertions)
unasserting real time mode on thread %p (%d => %d)
use %s
IDSTransportThreadInit: transport thread not initialized
Set IDSTransportThread priority at %d.
IDSTransportThreadInit socketpair failed (%d)
IDSTransportThreadInit created controlScoketPair %d/%d
IDSTransportThreadInit kqueue failed (%d)
kevent(fd[0]=%d, READ, ADD|ENABLE) failed with error(%d)
failed to create transport thread (%d)
Created transport thread with tid(%p).
Transport thread with tid(%p) stopped.
failed to write control command buffer (%d)
realloc(%d) for fds failed
realloc(%d) for readBlocks failed
realloc(%d) for writeBlocks failed
IDSTransportProc started...
%s(%d, %x-%x, %x-%x) failed with error(%d)
failed to read from control socket (%d)
Unknown control command %u
IDSTransportProc ended
should not add a sync block to the current thread %p
IDSTransportThreadAddSocket called with bad socket %d
should add socket on thread %p, not %p
found existing socket %d - releasing old blocks
kevent(fd[%d]=%d, READ, DELETE) failed with error(%d)
kevent(fd[%d]=%d, WRITE, DELETE) failed with error(%d)
kevent(fd[%d]=%d, READ, ADD|ENABLE) failed with error(%d)
kevent(fd[%d]=%d, WRITE, ADD|ENABLE) failed with error(%d)
added socket %d at %d (count:%d) with readBlock %p writeBlock %p
IDSTransportThreadSuspendSocket called with bad socket %d
kevent(fd[%d]=%d, READ, DISABLE) failed with error(%d)
kevent(fd[%d]=%d, WRITE, DISABLE) failed with error(%d)
suspendSocket(%d, forRead:%@) cannot find socket (count:%d)
IDSTransportThreadResumeSocket called with bad socket %d
kevent(fd[%d]=%d, READ, ENABLE) failed with error(%d)
kevent(fd[%d]=%d, WRITE, ENABLE) failed with error(%d)
resumeSocket(%d, forRead:%@) cannot find socket (count:%d)
IDSTransportThreadRemoveSocket called with bad socket %d
should remove socket on thread %p, not %p
removing socket %d at %d (count:%d) with readBlock %p writeBlock %p
removeSocket(%d) cannot find socket (count:%d)
sharedInstanceForBagType:
_bagCreationLock
alloc
init
isLoaded
startBagLoad
class
release
_initWithURL:apsEnvironmentName:allowSelfSignedCertificates:allowUnsignedBags:
sharedInstance
_sharedInstanceForClass:
_bagDefaultsDomain
setTimeout:
setWantsIntegerUniqueIDs:
objectForKey:
intValue
setWantsBinaryPush:
copyWithZone:
wantsDeliveryStatus
setWantsDeliveryStatus:
deliveryStatusContext
setDeliveryStatusContext:
version
setVersion:
dealloc
messageBody
mutableCopy
autorelease
wantsAPSRetries
wantsHTTPHeaders
userAgentHeaderString
wantsUserAgentInHeaders
_wantsDeliveryStatus
_deliveryStatusContext
_version
invalidate
_flush
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
setFireTimeInterval:
stringWithFormat:
count
_reloadFromKeychainLocked
copy
_setPurgeTimer
keychainServiceForVersion:
keychainAccountForVersion:
keychainAccessGroupForVersion:
length
propertyListWithData:options:format:error:
unsignedIntegerValue
_reloadFromDictionaryLocked:
countByEnumeratingWithState:objects:count:
isEqualToString:
retain
flushCache
registrationData
registrationWithServiceType:accountType:value:
_registrationData
_purgeTimer
_purgeCancelBlock
_purgeEnqueueBlock
dictionary
setObject:forKey:
numberWithUnsignedInteger:
arrayWithObjects:
UTF8String
stringGUID
processInfo
processName
stringWithUTF8String:
collectSysdiagnoseLog:
weakRefWithObject:
initWithFormat:
initWithQueue:delegate:
start
initWithSocket:queue:delegate:start:
endSession
connectionDidClose:
respondsToSelector:
_callDelegatesWithBlock:
object
initWithBytes:length:
hash
connection:didReceiveData:
_processBytesAvailable
firstObject
bytes
removeObjectAtIndex:
_sendToConnectedSocket
addObject:
_setupWriteSource
initWithSocket:queue:delegate:
setDestination:
sendData:
socket
_delegate
_queue
_outgoingDataArray
_readQueue
_readSource
_writeSource
_connectedSocket
_lastDateCheck
_bytesReceived
_prevBPS
_writeSourceIsResumed
initWithQueue:topics:commands:
topics
setTopics:
commands
setCommands:
queue
_topics
_commands
initWithPort:
_updateTopicsOnIvarQueue
sharedInstanceWithPortName:
pushToken
isConnected
_recalculateTopicsCacheOnIvarQueue
addListener:topics:commands:queue:
removeListener:
setTopics:forListener:
setCommands:forListener:
setShouldWaitToSetTopics:
configureAsMacNotificationCenterObserver:
shouldWaitToSetTopics
_shouldWaitToSetTopics
setQueue:
removeObjectForKey:
serverTimestamp
doubleValue
dateWithTimeIntervalSince1970:
self
numberWithBool:
boolValue
numberWithLongLong:
longLongValue
initWithDictionary:boostContext:
boostContext
setBoostContext:
serverReceivedTime
setOutgoingResponseIdentifier:
outgoingResponseIdentifier
setIncomingResponseIdentifier:
incomingResponseIdentifier
setServiceIdentifier:
serviceIdentifier
setStorageGuid:
storageGuid
setFromID:
fromID
setToID:
toID
setOriginalDestinationDevice:
originalDestinationDevice
setOriginalCommand:
originalCommand
setBroadcastTime:
broadcastTime
setPriority:
priority
setServerTimestamp:
setExpectsPeerResponse:
expectsPeerResponse
setWantsAppAck:
wantsAppAck
setBroadcastID:
broadcastID
setWantsManualAck:
wantsManualAck
setFromServerStorage:
fromServerStorage
setConnectionType:
connectionType
_dict
_boostContext
_ivarQueue
response
_cacheTime
isKindOfClass:
allHeaderFields
numberWithInt:
rangeOfString:
substringFromIndex:
_bag
_setCachedBag:
dateWithTimeIntervalSinceReferenceDate:
_setCachedURLString:
absoluteString
timeIntervalSinceReferenceDate
_setBag:
_setTrustStatus:
__saveCacheToPrefs
cancelPreviousPerformRequestsWithTarget:selector:object:
numberWithDouble:
performSelector:withObject:afterDelay:
_cachedBag
isEqualToDictionary:
_saveCacheToPrefs
_setCachedHash:
_loadFromCache
performSelector:
__imURLByAppendingQueryString:
initWithURL:cachePolicy:timeoutInterval:
userAgentString
setValue:forHTTPHeaderField:
isInternalInstall
setHTTPShouldHandleCookies:
initWithRemoteHost:delegate:
connectionMonitorDidUpdate:
clear
setDelegate:
_saveToCache
_arrayForKey:
_dataForKey:
_allowInvalid
SHA1HexString
_trustStatus
_loadFromDictionary:returningError:
_loadFromSignedDictionary:returningError:
defaultCenter
__mainThreadPostNotificationName:object:
isMainThread
cancel
_cachedURLString
initWithTimeIntervalSinceNow:
timeIntervalSinceDate:
isInDebilitatedMode
isServerAvailable
_generateURLRequest
_cancelCurrentLoad
domain
code
localizedDescription
userInfo
_processBagResultData:response:inBackground:
initWithURLRequest:completionBlock:
setRequireIDSHost:
load
callStackSymbols
__im_onMainThread
_startBagLoad:
defaultBag
URLWithString:
isLoading
_sharedInstance
_clearCache
_bagExternallyReloaded
_invalidate
forceBagLoad
urlWithKey:
_connectionMonitor
set_connectionMonitor:
bagURL
setBagURL:
apsEnvironmentName
setApsEnvironmentName:
_urlRequest
set_urlRequest:
_remoteURLConnection
set_remoteURLConnection:
_bagQueue
set_bagQueue:
_certData
set_certData:
_cachedHash
_loadDate
set_loadDate:
set_cacheTime:
allowSelfSignedCertificates
setAllowSelfSignedCertificates:
allowUnsignedBags
setAllowUnsignedBags:
token
setToken:
hasPairedDeviceState
setHasPairedDeviceState:
_allowSelfSignedCertificates
_allowUnsignedBags
_bagURL
_apsEnvironmentName
_token
_hasPairedDeviceState
objectAtIndex:
host
dataWithBytes:length:
initWithSockAddr:
wrapperWithAddressString:withPortHostOrder:withInterfaceName:
isEqualToWrapper:
wrapperWithSockAddr:
wrapperWithAddressString:withPortHostOrder:
wrapperWithWrapper:andPortHostOrder:
description
saPortHostOrder
isEqualToSockAddr:
ipData
ipString
isEqual:
copySockAddr:
initWithBytesNoCopy:length:deallocator:
subdataWithRangeNoCopy:
getBytes:range:
headerDataSize
messageWithCommand:data:
initWithCommand:underlyingData:
underlyingData
command
appendBytes:length:
_nonHeaderData
appendData:
dataLengthFromHeaderData:
messageWithData:
messageWithHeaderData:data:
underlyingDataLength
_existingUnderlyingData
context
setContext:
topic
setTopic:
useDynamicServiceName
setUseDynamicServiceName:
cancelled
setCancelled:
_underlyingData
_command
_context
_topic
_useDynamicServiceName
_cancelled
subdataWithRange:
initWithData:encoding:
initWithTimeIntervalSinceReferenceDate:
data
sequenceNumber
streamID
dataUsingEncoding:
initWithSequenceNumber:streamID:expectsPeerResponse:wantsAppAck:compressed:peerResponseIdentifier:messageUUID:data:expiryDate:
compressed
setCompressed:
messageUUID
peerResponseIdentifier
expiryDate
setExpiryDate:
setStreamID:
setSequenceNumber:
_sequenceNumber
_streamID
_payloadOffset
_payloadLength
_data
_expectsPeerResponse
_wantsAppAck
_compressed
_peerResponseIdentifier
_messageUUID
_expiryDate
versionNumber
initWithVersionNumber:
_versionNumber
initWithData:
initWithVersion:encrypted:streamID:priority:sequenceNumber:fileXfer:data:
encrypted
fileXfer
_offset
_encrypted
_fileXfer
_priority
initWithVersion:encrypted:shouldEncrypt:protectionClass:streamID:priority:sequenceNumber:data:
shouldEncrypt
protectionClass
_shouldEncrypt
_protectionClass
initWithSequenceNumber:
initWithSequenceNumber:streamID:peerResponseIdentifier:
isResponse
type
initWithSequenceNumber:streamID:expectsPeerResponse:wantsAppAck:compressed:peerResponseIdentifier:messageUUID:expiryDate:protobuf:
_isResponse
_type
totalFragmentCount
dataWithCapacity:
initWithCapacity:
initWithData:withFragmentedMessageID:fragmentIndex:totalFragmentCount:
createOriginalMessageFromFragmentedMessages:
createMessageFragmentsFromOriginalMessage:withFragmentedMessageID:fragmentSize:
fragmentedMessageID
fragmentIndex
_fragmentedMessageID
_fragmentIndex
_totalFragmentCount
resumeMessageWithSequenceNumber:streamID:messageUUID:nextByteOffset:
cancelMessageWithSequenceNumber:streamID:messageUUID:cancelReason:
byteOffset
cancelReason
_FTDecompressData
dateWithTimeIntervalSinceNow:
timeIntervalSinceNow
unsignedLongLongValue
defaultManager
attributesOfFileSystemForPath:error:
dictionaryWithDictionary:
writeResourceData:resourceByteOffset:
writeResourceData:
fileSystemRepresentation
incomingFilePathForMessageUUID:
incomingFilePath
initWithMessage:resumeResourceTransfers:receiverError:
abortTransfer
appendMessage:receiverError:
finalizedMessageDictionaryIfDone
totalBytesReceived
_resourcePath
_metadata
_fileDescriptor
_totalBytesExpected
_totalBytesReceived
_done
_isResuming
_resumeResourceTransfers
attributesOfItemAtPath:error:
fileSize
closeFileAndMarkDone
dataWithBytesNoCopy:length:freeWhenDone:
readNextBytes:byteOffset:
readNextBytes
numberWithUnsignedLongLong:
_FTCopyGzippedData
nextMessage_old
initWithResourceAtPath:metadata:sequenceNumber:streamID:expectsPeerResponse:wantsAppAck:compressPayload:compressed:peerResponseIdentifier:messageUUID:expiryDate:
nextMessage
reset
sentFirstMessage
isDone
maxChunkSize
setMaxChunkSize:
resumeResourceTransfers
setResumeResourceTransfers:
nextByte
setNextByte:
_resourceAttributes
_sentFirstMessage
_totalBytes
_nextByte
_maxChunkSize
_compressPayload
initWithBytes:length:encoding:
initWithReason:mappedStreamID:serviceName:
reason
mappedStreamID
serviceName
_reason
_mappedStreamID
_serviceName
pathWithComponents:
fileURLWithPath:
lastPathComponent
arrayWithObjects:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
removeItemAtPath:error:
getFileSystemRepresentation:maxLength:
stringWithFileSystemRepresentation:length:
initWithDictionary:
decodeObjectForKey:
encodeObject:forKey:
numberWithInteger:
integerValue
timeout
initWithCoder:
encodeWithCoder:
dictionaryRepresentation
setData:
setMessage:
message
setProtobuf:
protobuf
setResourcePath:
resourcePath
setResourceMetadata:
resourceMetadata
setDestinations:
destinations
setAccountUUID:
accountUUID
setDataToEncrypt:
dataToEncrypt
setCommand:
setIdentifier:
identifier
setMessageUUID:
setAlternateCallbackID:
alternateCallbackID
setBulkedPayload:
bulkedPayload
setPeerResponseIdentifier:
setRequireAllRegistrationProperties:
requireAllRegistrationProperties
setRequireLackOfRegistrationProperties:
requireLackOfRegistrationProperties
setInterestingRegistrationProperties:
interestingRegistrationProperties
setQueueOneIdentifier:
queueOneIdentifier
setDuetIdentifiersOverride:
duetIdentifiersOverride
setAccessToken:
accessToken
setSubService:
subService
setSubServiceAccountUUID:
subServiceAccountUUID
setMainAccountUUID:
mainAccountUUID
setOriginalfromID:
originalfromID
setLocalDestinationDeviceUUID:
localDestinationDeviceUUID
setMessageType:
messageType
setSessionID:
sessionID
setUseDictAsTopLevel:
useDictAsTopLevel
setEncryptPayload:
encryptPayload
setCompressPayload:
compressPayload
setWantsResponse:
wantsResponse
setLocalDelivery:
localDelivery
setRequireBluetooth:
requireBluetooth
setBypassDuet:
bypassDuet
setFakeMessage:
fakeMessage
setBypassStorage:
bypassStorage
setActivityContinuation:
activityContinuation
setNonWaking:
nonWaking
setDaemonDeathResend:
daemonDeathResend
setBypassSizeCheck:
bypassSizeCheck
setFireAndForget:
fireAndForget
setIsProxiedOutgoingMessage:
isProxiedOutgoingMessage
setEnforceRemoteTimeouts:
enforceRemoteTimeouts
setHomeKitPayload:
homeKitPayload
setDisableAliasValidation:
disableAliasValidation
setForceEncryptionOff:
forceEncryptionOff
setAllowCloudDelivery:
allowCloudDelivery
setAlwaysSkipSelf:
alwaysSkipSelf
expirationDate
_params
hasPrefix:
isEqualToIgnoringCase:
dictionaryWithObjectsAndKeys:
stringByAppendingPathComponent:
initWithObjects:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
dictionaryWithContentsOfURL:
initWithArray:
numberWithUnsignedInt:
setObject:forKeyedSubscript:
__imHexString
_stringForKey:
_stripFZIDPrefix
__imArrayByApplyingBlock:
_FZBestGuessFZIDType
_URIFromFZIDType:
lowercaseString
_appearsToBePhoneNumber
_appearsToBeEmail
_appearsToBeDSID
hasSuffix:
enumerateObjectsUsingBlock:
allObjects
compare:
sortedArrayUsingComparator:
__imFirstObject
containsObject:
intersectsSet:
caseInsensitiveCompare:
allKeys
appendString:
dataProtectionClass
setDataProtectionClass:
guid
setGUID:
alternateGUID
setAlternateGUID:
_dataProtectionClass
_guid
_alternateGUID
date
setDateFormat:
dateFromString:
userNotificationWithIdentifier:title:message:defaultButton:alternateButton:otherButton:
addUserNotification:listener:
hasMobileMeSuffix
stripMobileMSuffixIfPresent
stringByAppendingString:
_disconnected
_disconnect
_connect
bundleIdentifierForDataUsage
forceCellularIfPossible
alwaysForceCellular
requireIDSHost
shouldUsePipelining
concurrentConnections
disableKeepAlive
keepAliveWifi
keepAliveCell
errorWithDomain:code:userInfo:
setForceCellularIfPossible:
setBundleIdentifierForDataUsage:
setShouldUsePipelining:
setConcurrentConnections:
setDisableKeepAlive:
setKeepAliveWifi:
setKeepAliveCell:
setAlwaysForceCellular:
request
setRequest:
block
setBlock:
_request
_bundleIdentifierForDataUsage
_block
_connection
_loading
_forceCellularIfPossible
_alwaysForceCellular
_retries
_requireIDSHost
_shouldUsePipelining
_concurrentConnections
_disableKeepAlive
_keepAliveWifi
_keepAliveCell
resetMetric
setStreamBytesSent:
setStreamBytesReceived:
setStreamPacketsSent:
setStreamPacketsReceived:
setMessageSentSize:
setMessageDeliveredSize:
setMessageDeliveredRTT:
setMessageReceivedSize:
setMessageDeliveredDeliveryError:
StreamBytesSent
StreamBytesReceived
StreamPacketsSent
StreamPacketsReceived
MessageSentSize
MessageDeliveredSize
MessageDeliveredRTT
MessageReceivedSize
MessageDeliveredDeliveryError
numMessageSentSize
numMessageDeliveredSize
numMessageDeliveredRTT
numMessageReceivedSize
_StreamBytesSent
_StreamBytesReceived
_StreamPacketsSent
_StreamPacketsReceived
_MessageSentSize
_MessageDeliveredSize
_MessageDeliveredRTT
_MessageReceivedSize
_MessageDeliveredDeliveryError
_numMessageSentSize
_numMessageDeliveredSize
_numMessageDeliveredRTT
_numMessageReceivedSize
_resetLocalMetric
_stopXPCConnection
_startXPCConnection
_registerWithWRM
_restartSubscriptionIfNeeded
_submitBlockAsync:
_restartClient
_dispatchAfter:block:
_newPrefSubscribeMessage:
_newRegisterMessage
_sendXPCMessage:
_newSubscribeMessage
_sendMetricReportPeriodically
_newMetricReportMessage
_sendMetricReport
_updateLocalMetric:
_newSubscribeStatusUpdateMessage
_processXPCEvent:
_reconnectUntilTimeout
_isXPCDictionary:
_newUnsubscribeMessage
subscribeForRecommendation:recommendationType:block:
unsubscribeForRecommendation
_processXPCMessage:
_processLinkPreferenceNotificationEvent:
isWiFiRecommended
isBTRecommended
recommendedLinkType
_setRecommendedLinkType:
_notifyDelegate
_setReportInterval:
_processMetricsConfigEvent:
submitMetric:
handleActiveLinkChange:
handleNetworkStateChangeUpdate:nearby:
_recommendedLinkType
_activeLinkType
_activeRecommendationType
_registered
_subscribed
_reportInterval
_shouldSendReport
_metrics
_connectCount
_nearbyOverWiFi
_isPaired
_isPairedNotifyToken
_delegateQueue
_delegateBlock
setCreationDate:
setHighPriority:
setClientInfo:
setServiceData:
setUserInfo:
setDeliveryAcknowledgementBlock:
setCompletionBlock:
_setCachedBody:
setResponseAlertInfo:
setService:
setUnderlyingService:
dsAuthID
setDSAuthID:
setUniqueID:
forceCellular
setForceCellular:
alwaysForceCelluar
setAlwaysForceCelluar:
timeoutRetries
setTimeoutRetries:
highPriority
serviceData
clientInfo
wantsMultipleResponses
setWantsMultipleResponses:
wantsBinaryPush
wantsIntegerUniqueIDs
creationDate
timeSent
setTimeSent:
completionBlock
deliveryAcknowledgementBlock
responseAlertInfo
retryCount
setRetryCount:
importanceLevel
setImportanceLevel:
deliveryMechanism
setDeliveryMechanism:
service
underlyingService
hasAttemptedAPSDelivery
setHasAttemptedAPSDelivery:
uniqueID
stringValue
_cacheBody
requiredKeys
messageBodyUsingCache
array
uniqueIDString
wantsIDSServer
wantsCompressedBody
wantsJSONBody
wantsHTTPGet
allowDualDelivery
wantsBagKey
wantsCFNetworkTimeout
maxTimeoutRetries
wantsExtraTimeoutRetry
wantsManagedRetries
wantsAnisetteHeaders
anisetteHeadersTimeout
ignoresNetworkConnectivity
wantsSignature
isWebTunnelMessage
wantsBodySignature
wantsCustomRetryInterval
customRetryInterval
dataUsageBundleIdentifier
payloadCanBeLogged
isValidMessage
pushPrivateKey
setPushPrivateKey:
pushPublicKey
setPushPublicKey:
pushCertificate
setPushCertificate:
setPushToken:
certDataArray
setCertDataArray:
publicKeyArray
setPublicKeyArray:
privateKeyArray
setPrivateKeyArray:
userIDArray
setUserIDArray:
identityPrivateKey
identityPublicKey
IDCertificate
serverTimestampReceivedDate
setServerTimestampReceivedDate:
hasRequiredKeys:
responseCommand
bagKey
additionalMessageHeaders
additionalQueryStringParameters
additionalMessageHeadersForOutgoingPush
nonStandardMessageHeadersForOutgoingPush
additionalInternalHeaders
handleResponseHeaders:
handleResponseDictionary:
logFailureInfo
_usingOutgoingPush
_setUsingOutgoingPush:
_cachedBody
hasReceivedPushAck
setHasReceivedPushAck:
_forceCellular
_wantsResponse
_wantsMultipleResponses
_wantsBinaryPush
_wantsIntegerUniqueIDs
_highPriority
_hasReceivedPushAck
_hasAttemptedAPSDelivery
_alwaysForceCelluar
_clientInfo
_serviceData
_uniqueID
_userInfo
_creationDate
_completionBlock
_deliveryAcknowledgementBlock
_dsAuthID
_dataUsageBundleIdentifier
_timeoutRetries
_responseAlert
_retryCount
_subService
_service
_importanceLevel
_deliveryMechanism
_underlyingService
_timeout
_timeSent
numberWithUnsignedShort:
keyRepresentationForType:isResponse:
initWithProtobufData:type:isResponse:
dictionaryRepresentationWithUncompressedData
setType:
setIsResponse:
uncompressedData
setUncompressedData:
_protoBufParams
_uncompressedData
_collectSysdiagnoseLog:
dictionaryWithObjects:forKeys:count:
IDSiMessageServerBag
IDSMessage
NSCopying
IDSAppleRegistrationKeychainReader
IDSBaseSocketPairConnection
IDSPushHandlerContext
IDSPushHandler
IDSDelegateInfo
IDSMessageContext
_IDSServerBagAdditions
IDSServerBag
IDSSockAddrWrapper
IDS_NSData_subdataWithRangeNoCopy
IDSSocketPairMessage
IDSSocketPairDataMessage
IDSSocketPairDictionaryMessage
IDSSocketPairHandshake
IDSSocketPairEncryptedMessage
IDSSocketPairOTREncryptedMessage
IDSSocketPairOTRMessage
IDSSocketPairAckMessage
IDSSocketPairKeepAliveMessage
IDSSocketPairAppAckMessage
IDSSocketPairSessionInvitationMessage
IDSSocketPairSessionAcceptMessage
IDSSocketPairSessionDeclineMessage
IDSSocketPairSessionCancelMessage
IDSSocketPairSessionMessage
IDSSocketPairSessionEndMessage
IDSSocketPairSMSTextMessage
IDSSocketPairSMSTextDownloadMessage
IDSSocketPairSMSOutgoing
IDSSocketPairSMSDownloadOutgoing
IDSSocketPairSMSDeliveryReceipt
IDSSocketPairSMSReadReceipt
IDSSocketPairSMSFailure
IDSSocketPairProxyOutgoingNiceMessage
IDSSocketPairProxyIncomingNiceMessage
IDSSocketPairTextMessage
IDSSocketPairDeliveryReceipt
IDSSocketPairReadReceipt
IDSSocketPairAttachmentMessage
IDSSocketPairPlayedReceipt
IDSSocketPairSavedReceipt
IDSSocketPairReflectedDeliveryReceipt
IDSSocketPairGenericCommandMessage
IDSSocketPairGenericGroupMessageCommand
IDSSocketPairLocationShareOfferCommand
IDSSocketPairExpiredAckMessage
IDSSocketPairErrorMessage
IDSSocketPairProtobufMessage
IDSSocketPairFragmentedMessage
IDSSocketPairResourceTransferMessage
IDSSocketPairResourceTransferReceiver
IDSSocketPairResourceTransferSender
IDSSocketPairServiceMapMessage
IDSSendParameters
IDSMessageToDelete
IDSRemoteURLConnection
IDSWRMMetricContainer
IDSWRMExchange
IDSFaceTimeServerBag
IDSBaseMessage
IDSProtobuf
NSCoding
IDSSysdiagnoseLogCollector
@8@0:4
@12@0:4#8
@12@0:4^{_NSZone=}8
v8@0:4
B8@0:4
v12@0:4@8
@"NSNumber"
@"NSDictionary"
@12@0:4I8
@20@0:4@8i12@16
@"NSMutableArray"
@"IMTimer"
@16@0:4@8@12
@24@0:4i8@12@16B20
@20@0:4i8@12@16
v12@0:4@?8
B12@0:4@8
i8@0:4
@"IMWeakReference"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@20@0:4@8@12@16
@"NSSet"
@12@0:4@8
v24@0:4@8@12@16@20
v16@0:4@8@12
v12@0:4B8
v16@0:4q8
q8@0:4
@"NSMutableDictionary"
@12@0:4i8
@24@0:4@8@12B16B20
B16@0:4@8^@12
v20@0:4@8@12B16
v12@0:4i8
Q8@0:4
v16@0:4Q8
@"IMConnectionMonitor"
@"NSURL"
@"NSString"
@"NSMutableURLRequest"
@"IMRemoteURLConnection"
@"NSData"
@"NSDate"
@12@0:4r^{sockaddr=CC[14c]}8
@20@0:4@8S12@16
@16@0:4@8S12
r^{sockaddr=CC[14c]}8@0:4
r^{sockaddr_in=CCS{in_addr=I}[8c]}8@0:4
r^{sockaddr_in6=CCSI{in6_addr=(?=[16C][8S][4I])}I}8@0:4
S8@0:4
B12@0:4r^{sockaddr=CC[14c]}8
I8@0:4
v12@0:4^{sockaddr=CC[14c]}8
{sockaddr_storage="ss_len"C"ss_family"C"__ss_pad1"[6c]"__ss_align"q"__ss_pad2"[112c]}
@16@0:4{_NSRange=II}8
I12@0:4@8
@16@0:4C8@12
C8@0:4
@"<NSObject>"
@44@0:4I8S12B16B20B24@28@32@36@40
v12@0:4S8
v12@0:4I8
@36@0:4C8B12S16S20I24B28@32
@40@0:4C8B12B16C20S24S28I32@36
@20@0:4I8S12@16
@20@0:4@8I12I16
@24@0:4@8I12I16I20
@28@0:4I8S12@16Q20
@24@0:4I8S12@16C20
@20@0:4@8B12^C16
B20@0:4@8Q12
B16@0:4@8^C12
@52@0:4@8@12I16S20B24B28B32B36@40@44@48
B16@0:4^@8^Q12
@20@0:4C8S12@16
v16@0:4d8
d8@0:4
@16@0:4@8@?12
@?8@0:4
@"NSURLRequest"
@"NSObject<OS_xpc_object>"
v20@0:4d8@?16
@12@0:4B8
v24@0:4@8Q12@?20
B16@0:4Q8
v16@0:4B8B12
@"IDSWRMMetricContainer"
^{__SecKey=}8@0:4
v12@0:4^{__SecKey=}8
B12@0:4^@8
@16@0:4S8B12
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@20@0:4@8S12B16
.A@(#)PROGRAM:IDSFoundation  PROJECT:IDSFoundation-
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
