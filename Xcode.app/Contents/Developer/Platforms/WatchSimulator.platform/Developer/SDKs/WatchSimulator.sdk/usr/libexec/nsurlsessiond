%@ %@
session
socketUUID
host
port
hasSession
TB,R,N
T@"PDURLSessionProxySessionMessage",&,N,V_session
hasSocketUUID
T@"NSString",&,N,V_socketUUID
hasHost
T@"NSString",&,N,V_host
hasPort
TB,N
TI,N,V_port
task
disposition
credential
hasTask
T@"PDURLSessionProxyTaskMessage",&,N,V_task
hasDisposition
Ti,N,V_disposition
hasCredential
T@"PDURLSessionProxyCredential",&,N,V_credential
UseCredential
PerformDefaultHandling
CancelAuthenticationChallenge
RejectProtectionSpace
(unknown: %i)
configuration
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
hasConfiguration
T@"NSData",&,N,V_configuration
hasSupportsRedirects
TB,N,V_supportsRedirects
hasDelegateImplementsWillSendRequest
TB,N,V_delegateImplementsWillSendRequest
hasDelegateImplementsSessionAuthChallenge
TB,N,V_delegateImplementsSessionAuthChallenge
hasDelegateImplementsTaskAuthChallenge
TB,N,V_delegateImplementsTaskAuthChallenge
hasDelegateImplementsWillPerformRedirection
TB,N,V_delegateImplementsWillPerformRedirection
hasDelegateImplementsDidReceiveResponse
TB,N,V_delegateImplementsDidReceiveResponse
NSURLSessionDelegateImplementsWillSendRequestForEstablishedConnectionKey
NSURLSessionDelegateImplementsSessionAuthChallengeKey
NSURLSessionDelegateImplementsTaskAuthChallengeKey
NSURLSessionDelegateImplementsWillPerformRedirectionKey
NSURLSessionDelegateImplementsDidReceiveResponseKey
NSURLSessionDelegateImplementsDidFinishCollectingMetricsKey
%@|%@
Session %@ using UUID of %@
Using bundle ID %@ for client source application audit token with pid %d (client bundle %@)
Failed to get bundle ID for client source application audit token with pid %d (client bundle %@)
v12@?0@"PBCodable"4@"NSError"8
XPC Connection for %@ invalidated
Invalidating session %@ since client exited
v4@?0
Task <%@>.<%lu>
v16@?0@"NSNumber"4@"NSMutableArray"8^B12
Session %@ changing UUID and re-sending CreateSession message since we're re-sending a task message and the initial CreateSession message failed to send. New UUID: %@
message
type
Error %d reading from body stream for %@
Read body stream data of length %lu for %@
Read bytes from pipe fd %d when current expected fd is %d
v16@?0B4@"NSObject<OS_dispatch_data>"8i12
Using fd %d for body stream for %@
v8@?0i4
Created stream with file descriptor: %d
PDURLSessionProxyClient Session %@ received message with non-matching session UUID; dropping message
Will re-send task-specific message for %@ once devices are re-connected, or after 10 seconds is devices are connected
Devices are connected. Re-sending message for %@
Devices not nearby after 10 seconds. Waiting until we get a notification that devices are nearby before re-sending message for %@
Forcing -997 error for %@ since message pertaining to that task failed to send
%@ didReceiveChallenge %@
v12@?0i4@"NSURLCredential"8
v8@?0@"NSError"4
%@ willSendRequestForEstablishedConnection request = %@
Client responded to willSendRequest callback for %@ with request %@, file handle %@
v12@?0@"NSURLRequest"4@"NSFileHandle"8
%@ needs new body stream
Received file handle %@ (%d) from client for %@
v8@?0@"NSFileHandle"4
%@ willPerformHTTPRedirection response %@, new request %@
Client responded to redirect for %@ with request %@
v8@?0@"NSURLRequest"4
%@ didReceiveResponse %@
Client responded to didReceiveResponse callback for %@ with disposition %d
%@ didReceiveData of length %lu
%@ willRetry after error %@
Session %@ becameInvalid
Waiting for local session invalidation before delivering invalidation callback
Session %@ received unexpected BecameInvalid message
%@ waiting for connection with reason %lld
getAuthHeadersForResponse for %@
v12@?0B4@"NSDictionary"8
Adjusting resource timer by %f seconds to account for actual start time
Resource timer fired for %@
Watchdog timer fired for %@
com.apple.cloudkit.cloudd
com.apple.cloudd
%@ completed with error %@
Client acknowledged completion of %@
Failed to get taskInfo for %@, replyMessage %@
Got socket %d, error %@
v12@?0i4@"NSError"8
dataTaskWithRequest request = %@, %@
Session %@ changing UUID since remote device re-started. New UUID: %@
Session %@ already has an outstanding task with identifier %lu
_kCFNetworkProxySessionNeedsNewBodyStreamSignal
dataTaskWithRequest request = %@, %@ -- GOING DIRECT to WiFi
Received proxy transfer request %@ with a non-http URL scheme. Rejecting request.
cancelTaskWithIdentifier %@
suspendTaskWithIdentifier %@
resumeTaskWithIdentifier %@
setPriority:forTaskWithIdentifier priority = %lld, %@
invalidateWithReply: for %@
-[PDURLSessionProxyClient retainWiFi]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/nsnetworkd_Sim/CFNetwork-811.4.12/nsurlsessiond/SessionProxy/PDURLSessionProxyClient.mm
!_isRetainingWiFi
-[PDURLSessionProxyClient releaseWiFi]
_isRetainingWiFi
Need socket for host %@ port %u
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<PDURLSessionProxyClientDelegate>",R,V_delegate
identifier
T@"NSString",R
_nsurlsessiondErrorDomain
%02x
_unsafe
Error %d renaming item at %@ to %@
Exception caught trying to unarchive file at %@: %@
Error %d renaming item at %@ to %@. Won't try to unarchive.
SIGTERM received, shutting down.
--privileged
--postlogoutsync
com.apple.nsurlsessiond
priority
hasPriority
TI,N,V_priority
T@"PBCodable",C,V_message
TS,V_type
com.apple.nsurlsessiond.NSURLSessionProxyService-Queue
com.apple.private.alloy.nsurlsessionproxy
PDURLSessionProxyService setting preferInfraWiFi to NO
%@: Devices unpaired
%@: Device became active
%@ sent startup message with identifier %@
sendProtobuf: returned NO for PDURLSessionProxy startup message, error %@
%@ Updated device state connected = %@
PDURLSessionProxyService setting preferInfraWiFi to %@
Received a message of priority %ld with lower sequence number %llu than existing sequence number %llu. Dropping message.
%@::%@ type = %u, connected = %@, isReply = %@
NSURLSessionProxyClientBundleIdentifier
Timed out waiting for reply for message, identifier = %@, type = %u
Failed to send message! Type = %u, error = %@
Sent NSURLSessionProxy message, identifier = %@, data length = %lu, result = %@
Subclass did not handle message %@ of type %u
Subclass did not handle message send failure for message %@
Received a reply with identifier %@ but don't have a corresponding reply block
%@::%@ outgoingResponseIdentifier = %@, type = %u, isResponse = %@, data length = %lu
%@ received protobuf of type %u which could not be decoded! isResponse = %@, data length = %lu
Received PDURLSession Startup message with launchUUID %@
Received PDURLSessionProxy message with new launchUUID %@
Dropping NSURLSessionProxy message with old launchUUID %@
Received PDURLSessionProxy Startup message (without a launchUUID)
Incoming (non-reply) message with identifier %@ has priority %lld and sequence number %llu
v8@?0@"PBCodable"4
%@::%@ success = %@, identifier = %@, error = %@
Failed to send PDURLSessionProxy startup message, error %@
%@: activeAccountsChanged: %@
%@: didSwitchActivePairedDevice
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
connected
TB,GisConnected,V_connected
launchUUID
T@"NSString",&,V_launchUUID
taskInfo
hasTaskInfo
T@"NSData",&,N,V_taskInfo
originalRequest
currentRequest
taskSequenceNumber
hasOriginalRequest
T@"PDURLSessionProxyRequest",&,N,V_originalRequest
hasCurrentRequest
T@"PDURLSessionProxyRequest",&,N,V_currentRequest
hasTaskSequenceNumber
TQ,N,V_taskSequenceNumber
response
hasResponse
T@"PDURLSessionProxyResponse",&,N,V_response
Got a nil AVAssetDownloadSession
com.apple.nsurlsessiond.NDAVAssetDownloadSessionWrapper-queue
Disavowing AVAssetDownloadSession
Taking power assertion for AVAssetDownloadSessionWrapper %lu
AssertType
PreventUserIdleSystemSleep
AssertLevel
AssertName
AVAssetDownloadSessionWrapper %llu
Failed to take power assertion for AVAssetDownloadSessionWrapper %lu
Releasing power assertion for AVAssetDownloadSessionWrapper %lu
Starting AVAssetDownloadSession
countOfBytesWritten
TQ,V_countOfBytesWritten
countOfBytesExpectedToWrite
TQ,V_countOfBytesExpectedToWrite
totalTimeRange
T@"NSValue",C,V_totalTimeRange
T@"<NDAVAssetDownloadSessionWrapperDelegate>",R,W,V_delegate
delegateQueue
T@"NSObject<OS_dispatch_queue>",R,&,V_delegateQueue
T@"NSURL",R,C,V_URL
destinationURL
T@"NSURL",R,C,V_destinationURL
options
T@"NSDictionary",R,&,V_options
downloadToken
TQ,R,V_downloadToken
taskIdentifier
TI,V_taskIdentifier
com.apple.private.nsurlsession.impersonate
com.apple.private.nsurlsession.allow-discretionary-cellular
com.apple.private.nsurlsession-allow-override-connection-pool
com.apple.nsurlsessiond.session-manager
com.apple.nsurlsessiond.session-archive-queue
sessions.plist
downloadDirectoryPath.plist
configuration.plist
options.plist
Not restoring session with identifier: %@ for bundleID: %@ since it does not have any tasks
Coudn't restore session with identifier: %@ for bundle id: %@
Missing or invalid configuration.plist for bundleID: %@, sessionID: %@. Removing session directory
No directory for bundleID: %@, sessionID: %@
com.apple.OTACrashCopier
Launching application %@ since we could not restore session %@
Holding boost for %@
Capturing boost activity from %@
Ending boost activity from %@
Client %@ tried to specify a shared container that it cannot access: %@
Client tried to set _sourceApplicationBundleIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationSecondaryIdentifier but is missing the %@ entitlement
Client tried to set _sourceApplicationAuditTokenData but is missing the %@ entitlement
Client tried to set _respectsAllowsCellularAccessForDiscretionaryTasks but is missing the %@ entitlement
com.apple.private.dark-wake-network-reachability
Client tried to set _allowsPowerNapScheduling but is missing the %@ entitlement
Client tried to set _connectionPoolName but is missing the %@ entitlement
Client tried to set _directoryForDownloadedFiles but does not have access to directory %@
Client specified shared container identifier %@. App %@ can access: %d, Extension %@ can access: %d
kNSURLSessionThrowImmediateAVExceptionKey
Session with identifier: %@ for bundle id: %@ already has a connected client, returning nil proxy object to client
NSURLError
kNSURLSessionImmediateInvalidationErrorKey
Reconnecting session with identifier: %@ for bundle id: %@
Creating session with identifier: %@ for bundle id: %@
Coudn't create session with identifier: %@ for bundle id: %@
sendPendingCallbacksForIdentifier: %@
Asked to send pending callbacks for session %@ that we have no record of. This shouldn't happen
releaseAssertionForSession: %@
Signalled that it is okay to send pending callbacks for session %@ that we have no record of. This shouldn't happen
obliterateAllSessions for bundleID %@
v16@?0@4@8^B12
Removing session with identifier: %@ for bundle id: %@
Obliterating session manager for bundle ID: %@
xpcConn
T@"NSXPCConnection",W,V_xpcConn
T@"<NDSessionManagerDelegate>",W,V_delegate
isSpringBoardApp
TB,V_isSpringBoardApp
obliterationCompletion
T@?,C,V_obliterationCompletion
com.apple.private.nsurlsession.set-task-priority
NSURLSessionBackgroundPoolName
NSURLSessionBackgroundPoolName-sync-%d
Client %@ is a WatchKit extension for %@
Client %@ is acting on behalf of cloud documents container with identifier: %@
Client %@ is acting on behalf of application %@, impersonatingSpringBoardApp: %d
Client %@ is a SpringBoard application
Client %@ is a daemon or non-SpringBoard application
Uploads
Couldn't find out download directory for %@. Not creating session
Session <%@>.<%@> using resource timeout: %f, request timeout: %f
Session <%@>.<%@> allowsCellularAccess: %d, allowsExpensiveAccess: %d
Session <%@>.<%@> specified _sourceApplicationBundleIdentifier: %@, _sourceApplicationSecondaryIdentifier: %@
PlugIn %@ connected to session <%@>.<%@>
Application %@ was reinstalled, adjusting download paths
Couldn't find out download directory for re-installed application %@. It must not have been re-installed properly. Obliterating session
Library/Caches/com.apple.nsurlsessiond/Downloads
Obliterating session: %@ for bundle ID: %@
tasks.plist
Task <%@>.<%@>.<%lu>
%@ [delay: %f, duration: %f, allowsCellularAccess: %d]
%@ [allowsCellularAccess: %d]
VPN not connected
Duet Said No
Waiting for start time
Duration expired
Waiting for power
Waiting for inexpensive network
Waiting for non-cellular network
Link quality too poor
Cellular service is unavailable
Thermal conditions are not good
Conflicting parameters
Required data protection level is locked
Connection pool is full
Opportunistic
Network unavailable
Blocked by proxy
Unknown (%llu)
%f seconds past start time, new delay: %f, new window: %f
Re-scheduling potentially discretionary task, was discretionary: %d, is now discretionary: %d
Couldn't create new task. task: %@, path: %@
Couldn't create new task becuase adjusted request is nil, taskInfo.currentRequest = %@
__NSCFLocalDownloadTask
NSMutableData
NSKeyedArchiver
NSKeyedArchiveRootObjectKey
Error creating resume data: %@
Could not create resume data for %@ the server might not support resumable downloads. Will retry full download
__NSCFLocalUploadTask
__NSCFLocalDataTask
timingData
trailers
Restoring %@ which had never been started, will resume implicitly
Download directory for bundle %@ has moved to %@, but saved download file path is %@. Need to fix download path
New download path: %@
%@ completed with error %@ (was active before nsurlsessiond exit)
Couldn't recreate existing task with identifier: %@ in session: %@ for bundle ID: %@
Exception caught while restoring a task: %@
v16@?0@"NSNumber"4@"__NSCFURLSessionTaskInfo"8^B12
NSURLErrorBackgroundTaskCancelledReasonKey
v8@?0B4
com.apple.sharingd
Retrying %@ after %lld seconds
Client disconnected without resuming %@, resuming it implicitly
Delivering pending events immediately for client: %@ session: %@. Signalled already: %d, isHandlingBackgroundSession: %d
Waiting for notification to deliver pending events for client: %@ session: %@
Received signal to deliver pending events for client: %@ session: %@
Delivering pending events for client: %@ session: %@
Application %@ is not handling a background URLSession but we still received a signal to deliver pending events
Session: %@ get tasks for reconnection: %@
Current discretionary status for %@ is non-discretionary, since the app is being debugged
Current discretionary status for %@ is non-discretionary, since nsurlsessiond is running in EDU sync mode
Current discretionary status for %@ is discretionary (opt-in: %d)
Current discretionary status for %@ is non-discretionary
Resuming %@
Cannot resume task because task: %@ or taskInfo: %@ for %@ is nil
Suspending %@
Failed to consume sandbox extension %s for fileURL %@
CFNetworkUpload_%@
Error linking upload file: %@
Error copying upload file: %@
Couldn't deliver auth challenge to client, performing default handling
Skipping acknowledgement teardown for %@ since it's not actually complete
Not waking up client %@ since sessionSendsLaunchEvents is NO
Not waking up client %@ since it doesn't support app wakes
Not waking up client %@ since session is obliterated
Not waking up client %@ since it's already connected
Waking up the client app: %@
Failed to wake app: %@
Adding delay of %f to %@
Using UUID %@ for %@
Received a background download request from unsafe resume data from %@
__NSCFURLSessionTaskInfo
Couldn't create task or taskInfo: task = %@, taskInfo = %@
downloadTaskWithRequest: %@, %@
Received an unsafe request for background download: %@ from %@
uploadTaskWithRequest: %@ fromFile: %@, %@
Received a background upload request for a file that the client cannot read: %@ from %@
%@%@%@
__com.apple.CFNetwork.prefix__
v16@?0@"NSURLProtectionSpace"4@"NSURLCredential"8^B12
dataTaskWithRequest: %@, %@
Received resume data for %@
v8@?0@"NSData"4
cancelTaskWithIdentifier for %@
resumeTaskWithIdentifier for %@
setPropertyOnStreamWithIdentifier for %@
%@ tried to set the priority of a task but is missing the %@ entitlement
Setting priority of %@ to %ld
%@ tried to set the loading priority of a task but is missing the %@ entitlement
Setting loading priority of %@ to %f
Setting limit of %lld bytes per second for %@
InvalidateWithReply: for session %@ bundle ID %@
Cleaning up and invalidating immediately since there are no tasks
Session %@ didBecomeInvalidWithError: %@
NSURLAuthenticationMethodNTLM
NSURLAuthenticationMethodNegotiate
NSURLAuthenticationMethodClientCertificate
NSURLAuthenticationMethodServerTrust
Invalid trust status: %d, or result: %d
Extended trust validation failed
%@ didReceiveChallenge: %@, protection space: %@
Performing Extended Validation Trust evaluation for %@
Extended Validation Trust evaluation for %@ succeeded
Extended Validation Trust evaluation for %@ failed
Client doesn't implement session-level or task-level auth challenge delegate, performing default handling for auth challenge for %@
Client doesn't implement task-level auth challenge delegate, performing default handling for auth challenge for %@
Client is not running and doesn't support app wakes, performing default handling for auth challenge for %@
Client is not running and trust is valid, performing default handling for auth challenge for %@
Client is not running and challenge has a previousFailureCount of 0 and a proposedCredential, performing default handling for auth challenge for %@
Modifying conditional connection properties for %@ since new request %@ is to a different host than previous request %@
%@ willPerformHTTPRedirection, response: %@, new request: %@
%@ didFinishCollectingMetrics
Retrying %@ because error %@ is recoverable
Failed to retry %@
%@ didReceiveResponse: %@
Client disconnected with didReceiveResponse for %@ outstanding, responding with a cancel disposition
Client responded to didReceiveResponse for %@ with disposition %d
Received data task didReceiveResponse callback for %@ and there is no connected client. Canceling task.
%@ did receive data (%lld of %lld total bytes)
Received data for %@ and there is no connected client. Canceling task.
%@ became download task
%@ finished downloading to %@
%@ didResumeAtOffset: %lld expectedTotalBytes: %lld
%@ _willSendRequestForEstablishedConnection
Client does not implement _willSendRequestForEstablishedConnection, so using proposed request
Established a connection for %@ which requires the client to be running, but it isn't running and doesn't support app wakes. Canceling the task.
Perhaps the client %@ was uninstalled?
Using proposed request for %@ since the client application is not running and doesn't support wakes
%@ is waiting for connection, reason: %@
Conditions changed for %@ satisfied: %d
Need file descriptor for file at path %@
Client %@ does not support app wakes, cannot get file descriptor for download file!
Client %@ does not support app wakes, but it is still running. Will attempt to get file descriptor for download file.
Failed to communicate with HTTP Authenticator for Client %@
Received auth headers for response for %@, continueLoad: %d
Companion is %@ available
no longer
__NSCFURLLocalSessionConnection
v16@?0@"NSNumber"4@"__NSCFLocalSessionTask"8^B12
T@"<NDBackgroundSessionDelegate>",W,V_delegate
T@"NSString",R,V_identifier
clientBundleID
T@"NSString",R,V_clientBundleID
monitoredAppBundleID
T@"NSString",R,V_monitoredAppBundleID
secondaryID
T@"NSString",R,V_secondaryID
invalidateReply
T@?,C,V_invalidateReply
sharedContainerIdentifier
T@"NSString",C,V_sharedContainerIdentifier
version
hasVersion
TI,N,V_version
hasLaunchUUID
T@"NSString",&,N,V_launchUUID
com.apple.nsurlsessionproxy-logging-queue
Logs
nsurlsessionproxy
com.apple.nsurlsessiond-logging-queue
CrashReporter
DiagnosticLogs
nsurlsessiond
headerData
continueLoad
hasHeaderData
T@"NSData",&,N,V_headerData
hasContinueLoad
TB,N,V_continueLoad
com.apple.nsurlsessiond.NSURLSessionProxyService
Adding WiFi Auto-Association Client
NSURLSessionProxyWiFiToken
-[PDURLSessionProxyClientService releaseDirectWiFi]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/nsnetworkd_Sim/CFNetwork-811.4.12/nsurlsessiond/SessionProxy/PDURLSessionProxyClientService.mm
_directWiFiRetainCount > 0
Removing WiFi Auto-Association Client
v16@?0@"NSString"4@"PDURLSessionProxyClientManager"8^B12
Received NSURLSessionProxy message type = %u, fullIdentifier = %@
NSURLSessionProxy message of type %u received for unknown session %@
Failed to get bundle ID for client with pid %d because it might not have the application-identifier entitlement
Received connection from %@
receivedData
hasReceivedData
T@"NSData",&,N,V_receivedData
taskDescription
hasTaskDescription
T@"NSString",&,N,V_taskDescription
com.apple.nsurlsessiond.status-monitor
Simulating network change event since %lld seconds have passed
SCDynamicStoreCreateRunLoopSource failed: %s
SCDynamicStoreSetNotificationKeys failed: %s
com.apple.nsurlsessiond.UserEventAgentConnectionQueue
com.apple.nsurlsessiond-launchondemand
Created xpc listener: %@
Received xpc event
NDUserEventAgentConnection received connection
v8@?0@"NSObject<OS_xpc_object>"4
Received a new connection from UserEventAgent! Canceling the old one
com.apple.nsurlsessiond-events.message-type
com.apple.nsurlsessiond-events.registered-clients
Updated Registered Launch-On-Demand Clients: %@
Attempting to launch client %@ for session %@
Couldn't launch application %@ because we don't have an xpc connection to UserEventAgent
Will wake client %@ for session %@ if we receive a notification that it supports launch-on-demand
Start
Suspend
Stop
%@ [%d]: %@
DisableInfraWiFi
DisableDirectWiFi
UseProxySocket
EnableDebugLogging
/AppleInternal
EnableDebugFileLogging
yyyy-MM-dd HH:mm:ss.SSS
Could not break full NSURLSession identifier %@ into bundle ID and session ID components
NSURLSessionConfiguration
__NSCFURLSessionConfiguration
Exception %@ caught attempting to unarchive data of class %@, length %lu
http
https
_actualConfiguration
T@"NSURLSessionConfiguration",&,S_setActualConfiguration:
_actualTaskInfo
T@"__NSCFURLSessionTaskInfo",&,S_setActualTaskInfo:
Error %@ deserializing auth headers
_actualAuthHeaders
T@"NSDictionary",&,S_setActualAuthHeaders:
com.apple.nsurlsessionproxy.cancelError
NSErrorPeerCertificateChainKey
NSErrorClientCertificateChainKey
supportsSecureCoding
TB,R
com.apple.nsnetworkd
Error removing item at path: %@, error: %@
Error removing item at url: %@, error: %@
Couldn't create directory at %@, error: %@
com.apple.nsurlsessiond/Downloads
Error getting caches directory: %@
streamErrorDomain
streamErrorCode
hasStreamErrorDomain
Ti,N,V_streamErrorDomain
hasStreamErrorCode
Ti,N,V_streamErrorCode
archiveList
hasArchiveList
T@"NSData",&,N,V_archiveList
bundleIdentifier
T@"NSString",&,V_bundleIdentifier
currentRequestDelay
Td,V_currentRequestDelay
com.apple.nsurlsessiond.NDSpringBoardApplication.request-delay-queue
Resetting request delay for %@
Set request delay for %@ to %f
Resetting request delay and clearing pending wake requests for %@ since the first observer is being added
Application %@ has been in background for %lu seconds. Will reschedule downloads as discretionary
Application %@ has been in background for %lu seconds. Will reschedule uploads as discretionary
Resetting request delay and clearing pending wake requests for %@ since it came into the foreground
Cancel
Allow
BecomeDownload
request
hasRequest
T@"PDURLSessionProxyRequest",&,N,V_request
reason
hasReason
TI,N,V_reason
shouldCancel
hasShouldCancel
TB,N,V_shouldCancel
v16@?0@"NSString"4@"PDURLSessionProxyClient"8^B12
Acting on behalf of watch extension: %@, watch app: %@, companion app: %@
Client %@ reconnecting to existing session %@
Client %@ creating session with identifier %@
Invalidating session %@ for client %@ since there is no default paired device
Removing session %@ for client %@
com.apple.nsurlsessiond.credential-storage-queue
v12@?0@"NSDictionary"4@"NSDictionary"8
v8@?0@"NSDictionary"4
v8@?0@"NSURLCredential"4
T@"<NDCredentialStorageDelegate>",W,V_delegate
bundleID
T@"NSString",C,V_bundleID
hasBodyStream
hasHasBodyStream
TB,N,V_hasBodyStream
bytesSent
totalBytesSent
totalBytesExpectedToSend
hasBytesSent
TQ,N,V_bytesSent
hasTotalBytesSent
TQ,N,V_totalBytesSent
hasTotalBytesExpectedToSend
TQ,N,V_totalBytesExpectedToSend
hasTaskIdentifier
TQ,N,V_taskIdentifier
Canceling task because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec
basePriority
Tq,V_basePriority
EnableDiagnosticLogging
DebugLogFileLimit
EnableVerboseDebugLogging
challenge
hasChallenge
T@"PDURLSessionProxyAuthChallenge",&,N,V_challenge
domain
code
userInfo
hasDomain
T@"NSString",&,N,V_domain
hasCode
TQ,N,V_code
hasUserInfo
T@"NSData",&,N,V_userInfo
Couldn't set attributes of directory at %@, error: %@
Non-directory file exists at: %@. Removing it.
com.apple.nsurlsessiond.daemon-queue
com.apple.nsurlsessiond-xpc-transaction-queue
bundles.plist
NDTaskInfo
Bundle ID Archive %@ has unexpected format
NDSessionManager for client %@ was empty, not restoring
Application %@ is not installed, removing directory
No directory for bundleID: %@
i12@?0@4@8
v16@?0@"NSString"4@"NDSessionManager"8^B12
Failed to write archive to path: %@
Failed to get bundle ID for client because it might not have the application-identifier entitlement
Process with pid %d does not have a bundle ID, rejecting connection
__NSCFURLSessionXPC
<%@>.<%@> Lost connection to app -- connection interrupted or invalidated
Application: %@ re-installed. Need to adjust download paths
Application: %@ uninstalled. Need to obliterate
nsurlsessiond started
com.apple.nsurlsessiond.started
networkd restarted-- exiting in order to kick things off again!
T@"NSObject<OS_dispatch_queue>",R,V_queue
privileged
TB,GisPrivileged,V_privileged
inSyncBubble
TB,GisInSyncBubble,V_inSyncBubble
bodyData
hasBodyData
T@"NSData",&,N,V_bodyData
com.apple.mt
KeepAppsUpToDateAppList
com.apple.nsnetwork.SpringBoard-queue
NSDistributedNotificationCenter
Application %@ was quit in the app switcher
Background updates are on
Background update setting for %@ was changed to %@
Notifying observers for %@ that background update setting was turned off
v16@?0@"NSString"4@"NSNumber"8^B12
Background updates were turned off
v16@?0@"NSString"4@"NSArray"8^B12
Application %@ no longer foreground
Application %@ entered foreground
Application %@ was suspended
Invalidating assertion for bundleID: %@. sessionID: %@
com.apple.nsurlsessiond.handlesession %@
Couldn't create process assertion for %@
We already have an assertion for bundleID: %@, sessionID: %@. This shouldn't happen.
UIApplicationLaunchOptionsURLSessionKey
Failed to open application, error: %@
Successfully opened app
kKeepAppsUpToDateEnabledChangedNotification
Canceling AVAssetTask because of low throughput monitoring! Current throughput: %f bytes/sec, current threshold: %f bytes/sec
sessionIdentifier
uuidString
sequenceNumber
idsPriority
hasSessionIdentifier
T@"NSString",&,N,V_sessionIdentifier
hasUuidString
T@"NSString",&,N,V_uuidString
hasSequenceNumber
TQ,N,V_sequenceNumber
hasIdsPriority
Tq,N,V_idsPriority
error
hasError
T@"PDURLSessionProxyError",&,N,V_error
args
Ti,V_type
T@"NSArray",C,V_args
hasBeenDrained
TB,V_hasBeenDrained
Client acknowledged %@ file download
Performing auth challenge callback for %@, challenge %@
Client responded to task challenge for %@ with disp %d, cred %@
Performing will send request callback for %@, request %@
Failed to ask client for modified request for %@, using original proposed request
Client responded to will send request callback for %@ with request %@ handle %@
Performing open file at path callback for path %@ mode %d
Client responded to open file callback with handle %@
Performing did finish collecting metrics callback for %@, metrics %@
Failed to deliver task metrics for %@
Failed to deliver resolved MediaSelection for %@
Draining authentication challenge callback for %@
Draining willSendRequest callback for %@
Draining openFileAtPath callback for %@
T@"<NDCallbackQueueDelegate>",W,V_delegate
Delayed wake timer fired for session <%@.%@>
Triggering delayed wake for session <%@.%@>
Scheduled delayed wake for session <%@.%@>
Canceling delayed wake for session <%@.%@>
Failed to re-instantiate AVURLAsset with token %llu for %@
Error getting container path: %llu
Error getting User managed assets path: %llu
Error removing file at location of asset downloads directory: %@
Error creating asset downloads directory: %@
%llu
%@%@%@.movpkg
Lowering priority of AVAssetDownloads for %@ since it is no longer in the foreground
Bumping priority of AVAssetDownloads for %@ since it entered the foreground
Cancelling AVAssetDownloads for session <%@.%@> since client was quit from app switcher
avAssetDownloadTaskWithDownloadToken: %llu, URL: %@, destinationURL: %@, temporaryDestinationURL: %@, assetTitle: %@, assetArtworkData: %@, options: %@, %@
file-write-data
new AVAssetDownloadSession %@ taskIdentifier %lu
Failed to instantiate AVAssetDownloadSession for %@
Failed to instantiate AVAsset for %@, token %llu
Client %@ does not have write access to destination directory %@ for %@
Retrying AVAssetDownloadTask %@
Removing destination file for AVAssetDownloadTask %@ in order to retry
Retrying %@ after %f seconds
configuration.apple.com
Creating tcp_connection to host: %@, port: %d
tcp_connection_create() returned NULL for %@ (host %@, port %d, queue %@, taskInfo %@, URL %@)
Created tcp_connection: %@
Received tcp_connection event %d for %@
v12@?0I4r^v8
created AVAssetDownloadSession with token %llu
Couldn't create AVAssetDownloadSession for %@; returning an error
startAVAssetDownloadSessionWithTaskIdentifier for %@ wrapper: %@ taskIdentifier: %lu
Canceling tcp_connection for %@
Completion of task %@ %s wake client
did not
Completion of task %@ did not wake client and client is not active - requesting delayed wake
Completion of task %@ woke client or client is active - not requesting delayed wake
AVAssetDownloadSession for %@ did complete with error %@
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithUnsignedInt:
alloc
init
setSession:
setSocketUUID:
setHost:
class
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasSession
hasSocketUUID
hasHost
setPort:
setHasPort:
hasPort
readFrom:
writeTo:
copyTo:
.cxx_destruct
session
socketUUID
host
port
_host
_port
_session
_socketUUID
_has
setTask:
setCredential:
hasTask
disposition
setDisposition:
setHasDisposition:
hasDisposition
hasCredential
task
credential
_credential
_disposition
_task
numberWithBool:
setConfiguration:
hasConfiguration
setSupportsRedirects:
setHasSupportsRedirects:
hasSupportsRedirects
setDelegateImplementsWillSendRequest:
setHasDelegateImplementsWillSendRequest:
hasDelegateImplementsWillSendRequest
setDelegateImplementsSessionAuthChallenge:
setHasDelegateImplementsSessionAuthChallenge:
hasDelegateImplementsSessionAuthChallenge
setDelegateImplementsTaskAuthChallenge:
setHasDelegateImplementsTaskAuthChallenge:
hasDelegateImplementsTaskAuthChallenge
setDelegateImplementsWillPerformRedirection:
setHasDelegateImplementsWillPerformRedirection:
hasDelegateImplementsWillPerformRedirection
setDelegateImplementsDidReceiveResponse:
setHasDelegateImplementsDidReceiveResponse:
hasDelegateImplementsDidReceiveResponse
configuration
supportsRedirects
delegateImplementsWillSendRequest
delegateImplementsSessionAuthChallenge
delegateImplementsTaskAuthChallenge
delegateImplementsWillPerformRedirection
delegateImplementsDidReceiveResponse
_configuration
_delegateImplementsDidReceiveResponse
_delegateImplementsSessionAuthChallenge
_delegateImplementsTaskAuthChallenge
_delegateImplementsWillPerformRedirection
_delegateImplementsWillSendRequest
_supportsRedirects
UUID
UUIDString
identifier
sharedService
queue
_preventsDirectWiFiAccess
copy
set_disablesUseOfProxySession:
respondsToSelector:
_sourceApplicationBundleIdentifier
set_sourceApplicationBundleIdentifier:
setURLCache:
setHTTPCookieStorage:
setIdentifier:
_sourceApplicationAuditTokenData
bytes
length
pluginKitProxyForIdentifier:
containingBundle
bundleIdentifier
applicationProxyForIdentifier:
companionApplicationIdentifier
set_watchExtensionBundleIdentifier:
set_watchAppBundleIdentifier:
set_companionAppBundleIdentifier:
set_sourceApplicationAuditTokenData:
_setActualConfiguration:
baseMessage
updateCreateSessionMessageFromDelegateOptions:
sendProtobufMessage:ofType:withReply:
objectForKeyedSubscript:
boolValue
invalidateWithReply:
proxyClientBecameInvalid:withCompletionHandler:
invalidate
releaseDirectWiFi
setInvalidationHandler:
setSessionIdentifier:
setUuidString:
setTaskIdentifier:
countByEnumeratingWithState:objects:count:
currentRequest
_web_errorWithDomain:code:URL:
unsignedIntegerValue
taskWithIdentifier:taskInfo:completedWithError:
completeInvalidation
companionAvailabilityChanged:
resendPendingMessage:forWithIdentifier:
removeAllObjects
enumerateKeysAndObjectsUsingBlock:
resendCreateSessionMessage
_nsurlsessionproxy_setSessionUUID:
sendTaskCreationMessage:forTaskIdentifier:
numberWithUnsignedInteger:
descriptionForTaskWithIdentifier:
taskMessageForIdentifier:
setBodyData:
touchWatchdogTimerForTaskWithIdentifier:
performNextReadFromBodyStreamForTaskIdentifier:
removeObjectForKey:
fileDescriptor
closeFile
setObject:forKeyedSubscript:
isConnected
_nsurlsessionproxy_sessionUUID
_nsurlsessionproxy_taskIdentifier
isEqualToString:
handleDidReceiveChallengeMessage:forTaskIdentifier:withReply:
handleWillSendRequestMessage:forTaskIdentifier:withReply:
handleDidReceiveResponseMessage:forTaskIdentifier:withReply:
handleDidSendBodyDataMessage:forTaskIdentifier:
handleDidCompleteWithErrorMessage:forTaskIdentifier:
handleDidReceiveDataMessage:forTaskIdentifier:withReply:
handleWillRetryMessage:forTaskIdentifier:
handleBecameInvalidMessage:
handleConnectionWaitingMessage:forTaskIdentifier:
handleGetAuthHeadersMessage:forTaskIdentifier:withReply:
handleOpenBodyStreamMessage:forTaskIdentifier:
handleWillPerformRedirectionMessage:forTaskIdentifier:withReply:
_allowsRetryForBackgroundDataTasks
_shouldPreserveBackgroundSessionDisposition
numberWithUnsignedShort:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
backgroundTask:hasConnectionWaitingWithError:
addObject:
containsObject:
removeObject:
challenge
_actualAuthChallenge
_initWithActualCredential:
deliverImmediateCancelledErrorForTaskWithIdentifier:
remoteObjectProxyWithErrorHandler:
backgroundTask:didReceiveChallenge:reply:
request
_actualRequest
_initWithActualRequest:
setRequest:
setHasBodyStream:
startReadingBodyStreamFromFileHandle:forTaskIdentifier:
backgroundTask:_willSendRequestForEstablishedConnection:reply:
backgroundTask:needNewBodyStream:withReply:
response
_actualResponse
backgroundTask:willPerformHTTPRedirection:withNewRequest:reply:
backgroundTask:didReceiveResponse:timingData:reply:
bytesSent
totalBytesSent
totalBytesExpectedToSend
setCountOfBytesSent:
backgroundTask:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
error
_actualError
_actualTaskInfo
receivedData
countOfBytesReceived
setCountOfBytesReceived:
backgroundDataTask:didReceiveData:withReply:
cancelWatchdogTimerForTaskWithIdentifier:
willRetryBackgroundDataTask:withError:timingData:
reason
setContinueLoad:
_setActualAuthHeaders:
backgroundTask:getAuthHeadersForResponse:reply:
timeIntervalSinceReferenceDate
timeoutIntervalForResource
cancelResourceTimerForTaskWithIdentifier:
closeBodyStreamForTaskWithIdentifier:
close
backgroundTask:didCompleteWithError:info:reply:
setTaskSequenceNumber:
hasTaskInfo
numberWithInteger:
streamErrorCode
streamErrorDomain
defaultPairedDevice
initSocketWithDevice:options:completionHandler:queue:
_nsurlsessionproxy_isSafeRequest
shouldUseDirectWiFi
_nsurlsessionproxy_requiresBackgroundSession
propertyForKey:inRequest:
mutableCopy
data
inputStreamWithData:
open
setHTTPBodyStream:
dataTaskWithRequest:
retainDirectWiFi
_askForConnectedSocketLater
setOriginalRequest:
setCurrentRequest:
doubleValue
startResourceTimerForTaskWithIdentifier:overriddenStartTime:
taskIsUsingDirectWiFi:
cancel
suspend
resume
setTaskDescription:
set_priority:
setPriority:
setShouldCancel:
finishTasksAndInvalidate
setupIDSSocketForHost:port:completion:
taskIdentifierForLocalTask:
inputStreamWithFileHandle:
backgroundTask:hasConnectionWaitingWithReason:
streamStatus
HTTPBody
downloadTaskWithRequest:originalRequest:downloadFilePath:identifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:sandboxExtensionData:identifier:potentialCredentials:reply:
dataTaskWithRequest:originalRequest:identifier:reply:
downloadTaskWithResumeData:identifier:reply:
cancelTaskWithIdentifier:
cancelTaskWithIdentifier:byProducingResumeData:
suspendTaskWithIdentifier:
resumeTaskWithIdentifier:
setDescription:forTask:
setPriority:forTaskWithIdentifier:
setLoadingPoolPriority:forTaskWithIdentifier:
setBytesPerSecondLimit:forTaskWithIdentifier:
resetStorageWithReply:
setPropertyOnStreamWithIdentifier:propDict:propKey:withReply:
retainWiFi
releaseWiFi
avAssetDownloadTaskWithDownloadToken:URL:destinationURL:temporaryDestinationURL:assetTitle:assetArtworkData:options:identifier:reply:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
_URLSession:task:getAuthHeadersForResponse:completionHandler:
_URLSession:openFileAtPath:mode:completionHandler:
_URLSession:companionAvailabilityChanged:
_URLSession:needConnectedSocketToHost:port:completionHandler:
initWithConfiguration:bundleID:clientProxy:delegateOptions:delegate:
getTaskInformation
setXPCConnection:
cancelEverything
devicesConnected
devicesDisconnected
handleMessage:ofType:withReply:
handleFailedMessageSend:ofType:
uploadTaskWithRequest:originalRequest:fromFile:sandboxExtensionData:identifier:reply:
_URLSession:dataTask:didReceiveData:completionHandler:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
delegate
_clientBundleID
_fullIdentifier
_uuidString
_clientProxy
_xpcConnection
_postInvalidationHandler
_queue
_tasks
_resourceTimers
_watchdogTimers
_outstandingTaskIDs
_deviceConnections
_pendingMessagesByTask
_bodyStreamHandles
_identifiersToLocalTasks
_localTasksToIdentifiers
_identifiersToBodyStreamsFromCallback
_identifiersToDeviceConnections
_identifiersUsingDirectWiFi
_delegateOptions
_localSession
_taskSequenceNumber
_isInvalid
_shouldCancel
_expectingInvalidation
_shouldResendCreateSession
_isRetainingWiFi
_delegate
UTF8String
stringWithCapacity:
appendFormat:
uppercaseString
_sha1Hash
domain
code
userInfo
integerValue
objectForKey:
numberWithInt:
_isRecoverableErrorForBackgroundTask
_isPriorityChangedError
_shouldRemoveCacheFileForError
_errorShouldSuppressWake
_errorShouldBeRewritten
_cancelledReasonForError
isForeground
_priorityValue
_setPriority:withMonitoredApplication:
valueForEntitlement:
_connectionHasEntitlement:
defaultManager
fileExistsAtPath:
stringByDeletingLastPathComponent
lastPathComponent
stringByAppendingString:
stringByAppendingPathComponent:
fileSystemRepresentation
unarchiveObjectWithFile:
removeItemAtPath:
_safe_unarchiveObjectWithFile:
sharedDaemon
setPrivileged:
setInSyncBubble:
start
restoreState
initWithMachServiceName:
setDelegate:
_setQueue:
currentRunLoop
setHasPriority:
hasPriority
priority
_priority
initWithMessage:type:
message
setMessage:
type
setType:
_type
_message
initWithService:
addDelegate:queue:
setPreferInfraWiFi:
_onqueue_sendStartupMessage
_onqueue_updateDeviceState
_onqueue_remoteDeviceStartedUp
withWorkQueue:
launchUUID
setLaunchUUID:
initWithProtobufData:type:isResponse:
numberWithDouble:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
devices
isDefaultPairedDevice
isNearby
_onqueue_devicesDisconnected
_onqueue_devicesConnected
numberWithLongLong:
unsignedLongLongValue
numberWithUnsignedLongLong:
_nsurlsessionproxy_sessionIdentifier
getComponentsForFullIdentifier:bundleIdentifier:sessionIdentifier:
_onqueue_priorityForMessage:ofType:isReply:
bumpAndReturnOutgoingSequenceNumberForPriority:
_nsurlsessionproxy_setSequenceNumber:
_nsurlsessionproxy_setMessagePriority:
_nsurlsessionproxy_setLaunchUUID:
_onqueue_messageWithIdentifier:didSendWithSuccess:error:
_onqueue_handleFailedMessageSend:ofType:
_onqueue_sendMessage:ofType:responseIdentifier:withReply:
_onqueue_handleReceivedReply:forIdentifier:ofType:withError:
outgoingResponseIdentifier
isResponse
messageSubclassForMessageType:isReply:
initWithData:
_nsurlsessionproxy_launchUUID
incomingResponseIdentifier
_nsurlsessionproxy_sequenceNumber
_nsurlsessionproxy_messagePriority
verifyAndUpdateIncomingSequenceNumber:forPriority:
_onqueue_handleReceivedMessage:ofType:withReply:
count
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
devicesDidUnpair:
newDeviceBecameActive:
hasDefaultPairedDevice
_onqueue_receivedNewLaunchUUID:isStartupMessage:
_onqueue_setPrefersInfraWiFi:
setQueue:
setConnected:
_idsService
_outstandingReplies
_outstandingMessages
_startupMessageIdentifier
_outgoingSequenceNumbersByPriority
_incomingSequenceNumbersByPriority
_receivedLaunchUUIDs
_currentRemoteLaunchUUID
_prefersInfraWiFi
_startupMessageFailed
_haveReceivedLegacyStartupMessage
_connected
_launchUUID
setTaskInfo:
taskInfo
_taskInfo
hasOriginalRequest
hasCurrentRequest
setHasTaskSequenceNumber:
hasTaskSequenceNumber
originalRequest
taskSequenceNumber
_currentRequest
_originalRequest
setResponse:
hasResponse
_response
assetDownloadSessionWithURL:destinationURL:options:
addSessionObservers
downloadToken
assetDownloadSessionWithAsset:destinationURL:options:
defaultCenter
didReceiveSucceededNotification:
addObserver:selector:name:object:
didReceiveFailedNotification:
didReceiveFileSizeAvailableNotification:
removeObserver:name:object:
releasePowerAssertion
removeSessionObservers
sendProgressUpdate
disavowSession
NDAVAssetDownloadSessionWrapper:didCompleteWithError:
countOfBytesWritten
setCountOfBytesWritten:
fileSize
setCountOfBytesExpectedToWrite:
countOfBytesExpectedToWrite
NDAVAssetDownloadSessionWrapper:didUpdateProgressWithLastBytesWritten:totalBytesWritten:totalBytesExpectedToWrite:
takePowerAssertion
pause
stop
startLoadingMetadata
initWithURL:destinationURL:options:delegate:queue:
initWithURLAsset:destinationURL:options:delegate:queue:
cancelAndDeliverError:
delegateQueue
destinationURL
options
taskIdentifier
totalTimeRange
setTotalTimeRange:
_downloadSession
_asset
_timer
_workQueue
_powerAssertion
_delegateQueue
_URL
_destinationURL
_options
_taskIdentifier
_totalTimeRange
_downloadToken
_countOfBytesWritten
_countOfBytesExpectedToWrite
bundleManagerPath:
fileURLWithPath:
createDirectoryAtURL:
URLByAppendingPathComponent:
path
archivePath
array
sessionPath:forBundleID:
fileExistsAtPath:isDirectory:
_supportsAVAssetDownloads
restoreOptionsFromArchivePath:
initWithConfiguration:bundleID:isSpringBoardApp:downloadDirectory:options:clientProxy:delegate:workQueue:archiveQueue:
restoreTasks:
addObjectsFromArray:
applicationWithIdentifier:
wakeForSessionIdentifier:
removeItemAtURL:
archiveState
allKeys
archiveRootObject:toFile:
processInfo
beginActivityWithOptions:reason:
sharedSpringBoard
applicationIsForeground:
endActivity:
currentConnection
sharedContainerIdentifier
connection:canUseSharedContainerIdentifier:
setSharedContainerIdentifier:
_sourceApplicationSecondaryIdentifier
set_sourceApplicationSecondaryIdentifier:
_respectsAllowsCellularAccessForDiscretionaryTasks
set_respectsAllowsCellularAccessForDiscretionaryTasks:
_allowsPowerNapScheduling
set_allowsPowerNapScheduling:
_connectionPoolName
set_connectionPoolName:
_directoryForDownloadedFiles
isPrivileged
processIdentifier
_isSafeDirectoryForDownloads:
set_directoryForDownloadedFiles:
groupContainerURLs
stringWithUTF8String:
copyAndSanitizeClientConfiguration:
hasConnectedClient
getTasksForReconnection
reconnectClient:withCompletion:
removePendingLaunchTasksForBundleID:sessionID:cancel:
releaseAssertionForBundleID:sessionID:
allowReconnect
cleanupWithCompletionHandler:
setObliterationCompletion:
obliterate
dropBoost
obliterationCompletion
managerBecameEmpty:bundleID:withCompletionHandler:
clientApplicationWasReinstalled
boost
createSessionWithConfiguration:clientProxy:cachesDirectory:options:reply:
sendPendingCallbacksForIdentifier:reply:
releaseAssertionForSession:reply:
okayToSendPendingCallbacksForIdentifier:reply:
getActiveSessionIdentifiersWithReply:
obliterateAllSessionsWithReply:
sessionCompleted:withCompletionHandler:
initWithDelegate:bundleID:isSpringBoardApp:
downloadDirectoryDataPath
restoreState:
getSessionWithIdentifier:
xpcConn
setXpcConn:
isSpringBoardApp
setIsSpringBoardApp:
_sessions
_reconnectingProxies
_bundleDirectory
_sessionArchiveQueue
_boost
_isSpringBoardApp
_xpcConn
_obliterationCompletion
defaultSessionConfiguration
timeoutIntervalForRequest
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
connectionProxyDictionary
setConnectionProxyDictionary:
TLSMinimumSupportedProtocol
setTLSMinimumSupportedProtocol:
TLSMaximumSupportedProtocol
setTLSMaximumSupportedProtocol:
HTTPAdditionalHeaders
setHTTPAdditionalHeaders:
HTTPMaximumConnectionsPerHost
setHTTPMaximumConnectionsPerHost:
networkServiceType
setNetworkServiceType:
_authenticatorStatusCodes
set_authenticatorStatusCodes:
_atsContext
set_atsContext:
_TCPAdaptiveReadTimeout
set_TCPAdaptiveReadTimeout:
_TCPAdaptiveWriteTimeout
set_TCPAdaptiveWriteTimeout:
_onBehalfOfPairedDevice
set_onBehalfOfPairedDevice:
canBeSuspended
set_shouldPreserveBackgroundSessionDisposition:
set_disablesOutOfProcessDirectWiFiUsage:
setURLCredentialStorage:
allowsCellularAccess
setAllowsCellularAccess:
setShouldUseExtendedBackgroundIdleMode:
_allowsExpensiveAccess
set_allowsExpensiveAccess:
set_tcpConnectionPoolName:
isInSyncBubble
set_connectionCachePurgeTimeout:
set_longLivedConnectionCachePurgeTimeout:
set_preventsIdleSleepOnceConnected:
_collectsTimingData
set_collectsTimingData:
_timingDataOptions
set_timingDataOptions:
_shouldSkipPreferredClientCertificateLookup
set_shouldSkipPreferredClientCertificateLookup:
_requiresPowerPluggedIn
set_requiresPowerPluggedIn:
set_requiresClientToOpenFiles:
defaultWindowDurationForResourceTimeout:
set_forcedNetworkServiceType:
isDiscretionary
setDiscretionary:
set_socketStreamProperties:
setSkip_download_unlink:
addTransaction
watchKitExtensionApplicationWithBundleIdentifier:
springboardApplicationWithBundleIdentifier:
springBoardApplicationExistsWithIdentifier:
setupDownloadDirectory
initWithDelegate:forBundleID:
configurationWithClientConfiguration:discretionary:
sessionSendsLaunchEvents
_sessionSendsLaunchOnDemandEvents
_performsEVCertCheck
initWithDispatchQueue:
sessionWithConfiguration:delegate:delegateQueue:
initWithDelegate:
_infersDiscretionaryFromOriginatingClient
addObserver:
setUserInfo:
populateWithInitialCredentials
sharedUserEventAgentConnection
removePendingWakeForClient:sessionIdentifier:
clientDidDisconnect
taskKind
downloadFileURL
setDownloadFileURL:
downloadFile
setPath:
archiveTaskInfo:
containerURL
URLByAppendingPathComponent:isDirectory:
defaultDownloadDirectoryForBundleID:
removeObserver:
releaseTransaction
cleanupSessionWithCompletionHandler:
archivedDataWithRootObject:
tasksArchivePath
writeToFile:atomically:
_timeWindowDelay
_timeWindowDuration
creationTime
_setTimeWindowDuration:
_setTimeWindowDelay:
mayBeDemotedToDiscretionary
currentDiscretionaryStatus
priorityForDiscretionaryStatus:
setBasePriority:
updateCurrentRequest:
taskDescription
state
setState:
setError:
uniqueIdentifier
set_uniqueIdentifier:
storagePartitionIdentifier
set_storagePartitionIdentifier:
pathToDownloadTaskFile
set_pathToDownloadTaskFile:
fileURL
setUploadFile:
removeDownloadFileForTaskInfo:
adjustDiscretionaryStatusForTaskInfo:
requestWithAdjustedWindowForTaskInfo:
sessionForDiscretionaryStatus:
_downloadTaskWithRequest:downloadFilePath:
uploadTaskWithRequest:fromFile:
initializeTask:fromTaskInfo:
createResumeInformation:
propertyList:isValidForFormat:
initForWritingWithMutableData:
setRequiresSecureCoding:
encodeObject:forKey:
finishEncoding
downloadTaskWithResumeData:
createNewTaskFromInfo:
arrayWithObject:
initWithCallbackType:taskIdentifier:args:
addPendingCallback:forceWakeup:
supportsWakes
wakeClientUponNotification:sessionIdentifier:
_backgroundTaskTimingData
_backgroundTrailers
null
arrayWithObjects:count:
restoreCompletedTask:
hasStarted
restoreInProgressTask:
setSuspendCount:
setHasStarted:
basePriority
loadingPriority
set_loadingPriority:
bytesPerSecondLimit
set_bytesPerSecondLimit:
setStartTime:
hasPrefix:
shouldCancelOnDisconnect
restoreTask:isOutstanding:
addOutstandingTaskWithIdentifier:
restoreTasksFromArchivedInfo:
sessionHasOutstandingTasks
wakeUpClient
setEstablishedConnection:
startResourceTimer
clientErrorForError:
requeueTask:skipResume:
sharedMonitor
lowThroughputTimerRetryCount
setLowThroughputTimerRetryCount:
suspendCount
taskShouldResume:
performBlockAfterNetworkChangedEvent:numberOfPreviousRetries:
retryCount
setRetryCount:
performBlockAfterNetworkChangedEvent:delay:
cancelMonitorForTask:
finalizeTaskCompletionWithSuppressedWake:
clientIsActive
error:code:
cancel_with_error:
cancelTasksRequiringClientConnectionAndResumeUnstartedTasks
setInvalidateReply:
performAllCallbacks
isHandlingBackgroudURLSessionWithIdentifier:
countOfBytesSent
countOfBytesExpectedToSend
setCountOfBytesExpectedToSend:
countOfBytesExpectedToReceive
setCountOfBytesExpectedToReceive:
fillInByteCountsForTaskInfo:withTaskID:
isBeingDebugged
hasForegroundBackgroundStates
hasBackgroundTaskCompletion
taskWillResume
taskWillSuspend
initWithTask:taskInfo:clientBundleIdentifier:secondaryIdentifier:monitoredApplication:priority:options:queue:
enqueueTaskWithIdentifier:
getBytes:length:
linkItemAtURL:toURL:error:
copyItemAtURL:toURL:error:
drainCallbacksForTaskIdentifier:
invalidateReply
addPendingCallbackToFront:
currentRequestDelay
_copySocketStreamProperties
_legacySocketStreamProperties
setCreationTime:
setMayBeDemotedToDiscretionary:
HTTPBodyStream
set_DuetActivityProperties:
set_legacySocketStreamProperties:
_isSafeResumeDataForBackgroundDownload
initWithDownloadTask:bundleID:sessionID:
setExpectingResumeCallback:
performCommonSetupForTask:taskInfo:identifier:discretionaryStatus:
descriptionForRequest:
_isSafeRequestForBackgroundDownload
_isSafeFileForBackgroundUpload:
makeTempUploadFile:withExtensionData:
uploadTaskWithStreamedRequest:
initWithUploadTask:bundleID:sessionID:
user
password
protocol
realm
authenticationMethod
initWithHost:port:protocol:realm:authenticationMethod:
credentialWithUser:password:persistence:
sharedCredentialStorage
setDefaultCredential:forProtectionSpace:
setFileURL:
initWithDataTask:bundleID:sessionID:
setShouldCancelOnDisconnect:
setDisablesRetry:
cancelByProducingResumeData:
backgroundTaskDidSuspend:
taskShouldSuspend:
backgroundTaskDidResume:
setProperty:forKey:
_socketStreamProperties
setLoadingPriority:
setBytesPerSecondLimit:
reset
protectionSpace
serverTrust
trustPassesExtendedValidation:
credentialForTrust:
previousFailureCount
proposedCredential
arrayWithObjects:
scheme
taskTransferredData:countOfBytesReceived:
establishedConnection
inputStreamWithFileHandle:taskIdentifier:
set_backgroundTaskMetrics:
disablesRetry
handleCompletionOfTask:identifier:taskInfo:isRecoverable:suppressWake:
_timingData
retryTask:originalError:timingData:
set_backgroundTaskTimingData:
_trailers
set_backgroundTrailers:
removeOutstandingTaskWithIdentifier:
removeUploadFileForTaskInfo:
statusCode
backgroundTask:didReceiveResponse:timingData:
backgroundDataTaskDidBecomeDownloadTask:
setTaskKind:
expectingResumeCallback
backgroundDownloadTask:didResumeAtOffset:expectedTotalBytes:
backgroundDownloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
descriptionForTCPConnectionWaitingReason:
cfConn
applicationWasQuitFromAppSwitcher:
backgroundUpdatesDisabledForApplication:
applicationWasSuspended:
applicationEnteredForeground:
applicationNoLongerInForeground:
applicationEndedNonDiscretionaryBackgroundGracePeriod:
applicationEndedExtendedNonDiscretionaryBackgroundGracePeriod:
errorOccurredDuringFinishedCallbackDelivery:
errorOccurredDuringAuthCallbackDelivery:completionHandler:
clientAcknowledgedTerminalCallbackForTask:
getClientProxy
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
_URLSession:downloadTask:didReceiveResponse:
_URLSession:downloadTaskNeedsDownloadDirectory:
_delegateOptions_clientImplementsCollectingMetrics
requeueTask:
clientBundleID
monitoredAppBundleID
secondaryID
_userInitiatedSession
_discretionaryPrioritySession
_credentialStorage
_archiveQueue
_clientApplication
_connectedExtension
_tasksToIdentifiers
_identifiersToTasks
_identifiersToMonitors
_identifiersToStreams
_identifiersToStreamQueues
_lastArchiveTime
_sessionDirectory
_downloadDirectory
_uploadsDirectory
_clientImplementsWillSendRequest
_clientImplementsSessionChallenge
_clientImplementsTaskChallenge
_clientImplementsCollectingMetrics
_sendsLaunchEvents
_discretionary
_obliterated
_cleanedUp
_hasBeenSignalledToDeliverPendingEvents
_infersDiscretionary
_shouldPullInitialCredentials
_completeReconnectionBlock
_clientPID
_watchExtensionBundleIdentifier
_retryDataTasks
_callbackQueue
_monitoredApplication
_identifiersToTaskInfo
_identifier
_monitoredAppBundleID
_secondaryID
_invalidateReply
_sharedContainerIdentifier
setVersion:
setHasVersion:
hasVersion
hasLaunchUUID
version
_version
objectAtIndex:
dealloc
stringByAppendingPathExtension:
_onqeue_logFilePathWithIndex:
_onqueue_openFile
_onqueue_checkFileSize
dataUsingEncoding:
writeData:
name
_onqueue_closeFile
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_onqueue_activePath
initWithFileDescriptor:closeOnDealloc:
seekToEndOfFile
_onqueue_rollFiles
removeItemAtPath:error:
moveItemAtPath:toPath:error:
sharedFileLogger
logString:
_fileHandle
_fileObserverSource
_lastFileStatTime
_logsDirectoryPath
setHeaderData:
hasHeaderData
setHasContinueLoad:
hasContinueLoad
headerData
continueLoad
_headerData
_continueLoad
sharedInstance
addWoWClient:
addWiFiAutoAssociationClientToken:
removeWoWClient:
removeWiFiAutoAssociationClientToken:
sessionForIdentifier:
auditToken
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
initWithBundleID:
bgSessionManagerInterface
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
_sessionManagers
_directWiFiRetainCount
setReceivedData:
hasReceivedData
_receivedData
hasTaskDescription
_taskDescription
startMonitoringDynamicStore
stopMonitoringDynamicStore
handleDynamicStoreCallback:changedKeys:
handleBetterNetworkEvent
_dynamicStoreSource
_blocksToExecuteAfterNetworkChange
_networkChangeEventCount
_symptomToken
handleNewConnection:
launchProcessWithIdentifier:sessionIdentifier:
canLaunchProcessWithIdentifier:
_connection
_listener
_registeredClients
_pendingWakes
initWithFormat:arguments:
initWithFormat:
setWithArray:
componentsSeparatedByString:
whitelistedClassesForUnarchiving
setClassName:forClass:
_nsurlsessionproxy_secureArchivedDataWithRootObject:
initForReadingWithData:
setByAddingObject:
decodeObjectOfClasses:forKey:
_nsurlsessionproxy_secureUnarchiveObjectOfClass:withData:
_nsurlsessionproxy_cancelWithError:
_nsurlsessionproxy_clearError
_nsurlsessionproxy_error
lowercaseString
uuidString
sessionIdentifier
sequenceNumber
setSequenceNumber:
idsPriority
setIdsPriority:
setDomain:
setCode:
_initWithActualError:
setArchiveList:
archiveList
_initWithActualResponse:
_initWithActualAuthChallenge:
_actualCredential
_actualConfiguration
_setActualTaskInfo:
propertyListWithData:options:format:error:
dataWithPropertyList:format:options:error:
_actualAuthHeaders
supportsSecureCoding
encodeWithCoder:
initWithCoder:
nsurlsessiondPath
removeItemAtURL:error:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLForDirectory:inDomain:appropriateForURL:create:error:
oldDaemonPath
createDirectoryAtPath:
setStreamErrorDomain:
setHasStreamErrorDomain:
hasStreamErrorDomain
setStreamErrorCode:
setHasStreamErrorCode:
hasStreamErrorCode
_streamErrorCode
_streamErrorDomain
hasArchiveList
_archiveList
initWithIdentifier:
identifierIsForSpringBoardApplication:
initialize
isAwake
isSuspended
invokeSelectorForAllObservers:
setBundleIdentifier:
setCurrentRequestDelay:
_bundleIdentifier
_observers
_currentRequestDelay
dataContainerURL
requestDelayQueue
_onqueue_resetRequestDelay
setupDelayTimer
wakeUpApp:forSession:
applicationIsAwake:
applicationIsSuspended:
application:isHandlingBackgroundSessionWithIdentifier:
applicationIsBeingDebugged:
applicationHasBackgroundTaskCompletion:
startMonitoringBundleID:
addObserver:forApplication:
removeObserver:forApplication:
stopMonitoringBundleID:
setupNonDiscretionaryGracePeriodTimer
disableNonDiscretionaryGracePeriodTimer
startNonDiscretionaryGracePeriodTimer
applicationBackgroundUpdatesTurnedOff:
_delayTimer
_nonDiscretionaryGracePeriodTimer
_extendedNonDiscretionaryGracePeriodTimer
_containingApplication
launchBundleIdentifier
hasRequest
_request
setReason:
setHasReason:
hasReason
_reason
setHasShouldCancel:
hasShouldCancel
shouldCancel
_watchAppBundleIdentifier
_companionAppBundleIdentifier
boost:
_boostReply
addEntriesFromDictionary:
credStorage_getInitialCredentialDictionariesWithReply:
dictionaryWithDictionary:
credStorage_credentialsForProtectionSpace:reply:
credStorage_allCredentialsWithReply:
credStorage_setCredential:forProtectionSpace:
credStorage_defaultCredentialForProtectionSpace:reply:
credStorage_setDefaultCredential:forProtectionSpace:
credentialsForProtectionSpace:
allCredentials
setCredential:forProtectionSpace:
removeCredential:forProtectionSpace:
defaultCredentialForProtectionSpace:
bundleID
setBundleID:
_cachedCredentials
_cachedDefaultCredentialUsers
_bundleID
setHasHasBodyStream:
hasHasBodyStream
hasBodyStream
_hasBodyStream
setBytesSent:
setHasBytesSent:
hasBytesSent
setTotalBytesSent:
setHasTotalBytesSent:
hasTotalBytesSent
setTotalBytesExpectedToSend:
setHasTotalBytesExpectedToSend:
hasTotalBytesExpectedToSend
_bytesSent
_totalBytesExpectedToSend
_totalBytesSent
setHasTaskIdentifier:
hasTaskIdentifier
firstObject
lastObject
currentThroughputThreshold
setThroughputTimerForCurrentInterval
currentIntervalEndDelta
startThroughputMonitoringIfAppropriate
removeObjectAtIndex:
calculateThroughput
startThroughputMonitoring
stopThroughputMonitoring
_clientBundleIdentifier
_clientSecondaryIdentifier
_throughputTimer
_progressTimestamps
_progressValues
_throughputInterval
_throughputMonitoringStartTime
_startedDuetReporter
_connectionIsCellular
_hasTransferredData
_explicitlyDiscretionary
_performsNonDiscretionaryThrougputMonitoring
_mayBeDemotedToDiscretionary
_powerMonitorToken
_basePriority
setChallenge:
hasChallenge
_challenge
hasDomain
setHasCode:
hasCode
hasUserInfo
_code
_domain
_userInfo
setAttributes:ofItemAtPath:error:
defaultWorkspace
bundleURL
applicationIsInstalled:
isPlaceholder
isAppUpdate
setClass:forClassName:
setupNewClassMappingsForUnarchiver
compare:
sortedArrayUsingComparator:
sessionID
getSessionWithIdentifier:forBundleID:
setInterruptionHandler:
beginTransaction
endTransaction
applicationIdentifier
waitUntilDeviceIsUnlocked
createDaemonDirectory
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
_clients
_transactionQueue
_privileged
_inSyncBubble
hasBodyData
bodyData
_bodyData
setupMonitor
sharedConnection
isAutomaticAppUpdatesAllowed
handleAppSwitcherQuitAppNotification:
allObjects
updateInterestedBundleIDs:
handleApplicationStateChange:
setHandler:
object
resetStandardUserDefaults
standardUserDefaults
persistentDomainForName:
getBackgroundSettingsAppList
isEqualToNumber:
applicationStateForApplication:
applicationStateForBundleID:
isApplicationBeingDebugged:
applicationInfoForApplication:completion:
application:hasAssertion:withName:
assertionNameForIdentifier:
_onqueue_releaseAssertionForBundleID:sessionID:
initWithBundleIdentifier:flags:reason:name:withHandler:
dictionaryWithObject:forKey:
activationOptionsForNSURLSessionWithIdentifier:
activateApplication:options:withResult:
handleBackgroundSettingsChange
takeAssertionForBundleID:sessionID:
_monitor
_service
_assertions
_launchActivities
_appStates
_observedBackgroundSettings
_backgroundUpdatesAllowed
_monitoredBundleIDs
currentIntervalThroughputThreshold
currentIntervalDuration
initWithWrapper:monitoredApplication:priority:options:queue:
wrapperWillSuspend
wrapperTransferredData:
_wrapper
_performsNonDiscretionaryThroughputMonitoring
hasSessionIdentifier
hasUuidString
setHasSequenceNumber:
hasSequenceNumber
setHasIdsPriority:
hasIdsPriority
_idsPriority
_sequenceNumber
_sessionIdentifier
hasError
_error
setArgs:
encodeInteger:forKey:
args
decodeIntegerForKey:
decodeObjectOfClass:forKey:
hasBeenDrained
setHasBeenDrained:
_hasBeenDrained
_args
objectAtIndexedSubscript:
backgroundDownloadTask:didFinishDownloadingToURL:reply:
backgroundSessionDidStartAppWake:reply:
backgroundSessionDidFinishAppWake:reply:
intValue
openFileAtPath:mode:withReply:
backgroundTask:didFinishCollectingMetrics:reply:
backgroundAVAssetDownloadTask:didResolveMediaSelectionProperyList:reply:
insertObject:atIndex:
performCallback:
drainCallback:
_callbacks
AVURLAsset
isFileURL
originalNetworkContentURL
temporaryDestinationURL
assetTitle
assetArtworkData
setOptions:
_URLToUse
_destinationURLToUse
_AVAssetDownloadSesssionOptions
cancelDelayedCompletionWakeTimer
initializedFromToken
downloadTokenFromInitialization
URLAssetWithURL:options:
setAVURLAsset:
_web_errorWithDomain:code:failingURL:
URLByDeletingLastPathComponent
avAssetDownloadsDirectory
updatePriorityForTaskID:
cancelAVDownloadAndFailTaskWithIdentifier:withError:
downloadDirectoryToUse:
initWithAVAssetDownloadURL:destinationURL:assetTitle:assetArtworkData:options:taskIdentifier:bundleID:sessionID:
setInitializedFromToken:
setDownloadTokenFromInitialization:
setTemporaryDestinationURL:
setAssetTitle:
setAssetArtworkData:
destinationURLToUseForTask:
setDestinationURL:
newAVAssetDownloadSessionWrapperForTaskInfo:
setupThroughputMonitorForWrapper:taskInfo:identifier:
setPriority:forTCPConnectionWithTaskIdentifier:
taskWithIdentifier:didCompleteWithError:
absoluteString
startAVAssetDownloadSessionWithTaskIdentifier:
setAVAssetDownloadToken:
backgroundAVAssetDownloadTask:didReceiveDownloadToken:
ensureAVAssetDownloadSessionWrapperForTaskIdentifier:
cancelThroughputMonitorForWrapper:
setupDelayedCompletionWakeTimer
cancelTCPConnectionForTask:withError:
backgroundAVAssetDownloadTaskDidUpdateProgress:totalBytesWritten:totalBytesExpectedToWrite:
backgroundAVAssetDownloadTask:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
retryTask:originalError:
NDAVAssetDownloadSessionWrapper:didLoadTimeRange:totalTimeRangesLoaded:timeRangeExpectedToLoad:
NDAVAssetDownloadSessionWrapper:didResolveMediaSelectionPropertyList:
downloadTaskWithRequest:originalRequest:identifier:reply:
uploadTaskWithRequest:originalRequest:fromFile:identifier:reply:
dataTaskWithRequest:originalRequest:pipeHandle:identifier:reply:
adjustedTCPConnectionPriorityForTaskPriority:
stopAVAssetDownloadSessionWithTaskIdentifier:
_identifiersToAVWrappers
_identifiersToThroughputMonitors
_identifiersToTCPConnections
_identifiersToDASActivities
_clientConfig
_delayedWakeTimer
caseInsensitiveCompare:
addOperationWithBlock:
maxConcurrentOperationCount
PDURLSessionProxyOpenSocket
NSCopying
PDURLSessionProxyDidReceiveChallengeReply
PDURLSessionProxyCreateSession
PDURLSessionProxyClient
NDBackgroundSessionProtocol
NSObject
NSURLSessionDataDelegatePrivate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
NSURLSessionDelegate_Internal
nsurlsessiond_Additions
PDURLSessionProxySetTaskPriority
PDURLSessionProxyMessageInfo
PDURLSessionProxyService
IDSServiceDelegate
PDURLSessionProxyDataTaskWithRequestReply
PDURLSessionProxyDataTaskWithRequest
PDURLSessionProxyGetAuthHeaders
NDAVAssetDownloadSessionWrapper
NDSessionManager
NDBackgroundSessionManagerProtocol
NDBackgroundSessionDelegate
NDBackgroundSession
NDApplicationObserver
NDCallbackQueueDelegate
NSURLSessionDataDelegate_Internal
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegatePrivate
NSURLSessionDownloadDelegate_Private
NDCredentialStorageDelegate
NSURLSessionDelegateOptions_Internal
PDURLSessionProxyStartedUp
PDFileLogger
NDFileLogger
PDURLSessionProxyGetAuthHeadersReply
PDURLSessionProxyClientService
NSXPCListenerDelegate
PDURLSessionProxyDidReceiveData
PDURLSessionProxyDidReceiveResponse
PDURLSessionProxyResumeTask
PDURLSessionProxySetTaskDescription
NDStatusMonitor
NDUserEventAgentConnection
PDURLSessionProxyCommon
NSURLSessionProxyAdditions
NSSecureCoding
NSCoding
PDURLSessionProxySocketDisconnected
NDFileUtilities
PDURLSessionProxyOpenSocketReply
PDURLSessionProxyResponse
NDApplication
NDSpringBoardApplication
NDSpringBoardAppObserver
NDWatchKitExtension
PDURLSessionProxyDidReceiveResponseReply
PDURLSessionProxyWillPerformRedirectionReply
PDURLSessionProxyRequest
PDURLSessionProxyCredential
PDURLSessionProxyTaskWaiting
PDURLSessionProxyDidReceiveDataReply
PDURLSessionProxySuspendTask
PDURLSessionProxyInvalidateSession
PDURLSessionProxyClientManager
PDURLSessionProxyClientDelegate
NDCredentialStorage
PDURLSessionProxyWillSendRequest
PDURLSessionProxyOpenBodyStream
PDURLSessionProxyDidSendBodyData
PDURLSessionProxyCancelTask
PDURLSessionProxyTaskMessage
NDTaskMonitor
PDURLSessionProxyDidReceiveChallenge
PDURLSessionProxyError
Daemon
LSApplicationWorkspaceObserverProtocol
NDSessionManagerDelegate
PDURLSessionProxyUploadBodyData
NDSpringBoard
NDAVThroughputMonitor
PDURLSessionProxySessionMessage
PDURLSessionProxyTaskWillBeRetried
PDURLSessionProxyConnectedToServer
PDURLSessionProxyAuthChallenge
PendingCallback
NDCallbackQueue
PDURLSessionProxySessionBecameInvalid
NDAVAdditions
NDAVBackgroundSession
NDAVAssetDownloadSessionWrapperDelegate
DummyQueue
PDURLSessionProxyTaskCompleted
PDURLSessionProxyWillPerformRedirection
@12@0:4^{_NSZone=}8
B8@0:4
v12@0:4I8
v12@0:4B8
@8@0:4
B12@0:4@8
v12@0:4@8
I8@0:4
v8@0:4
@"NSString"
@"PDURLSessionProxySessionMessage"
{?="port"b1}
i8@0:4
v12@0:4i8
@"PDURLSessionProxyCredential"
@"PDURLSessionProxyTaskMessage"
{?="disposition"b1}
@"NSData"
{?="delegateImplementsDidReceiveResponse"b1"delegateImplementsSessionAuthChallenge"b1"delegateImplementsTaskAuthChallenge"b1"delegateImplementsWillPerformRedirection"b1"delegateImplementsWillSendRequest"b1"supportsRedirects"b1}
v28@0:4@8@12@16I20@?24
v28@0:4@"NSURLRequest"8@"NSURLRequest"12@"NSString"16I20@?<v@?B>24
v36@0:4@8@12@16@20I24@28@?32
v36@0:4@"NSURLRequest"8@"NSURLRequest"12@"NSURL"16@"NSData"20I24@"NSDictionary"28@?<v@?B>32
v24@0:4@8@12I16@?20
v24@0:4@"NSURLRequest"8@"NSURLRequest"12I16@?<v@?B>20
v20@0:4@8I12@?16
v20@0:4@"NSData"8I12@?<v@?B>16
v16@0:4I8@?12
v16@0:4I8@?<v@?@"NSData">12
v16@0:4@8I12
v16@0:4@"NSString"8I12
v20@0:4q8I16
v20@0:4d8I16
v12@0:4@?8
v12@0:4@?<v@?>8
v24@0:4I8@12@16@?20
v24@0:4I8@"NSDictionary"12@"NSString"16@?<v@?B>20
v48@0:4Q8@16@20@24@28@32@36I40@?44
v48@0:4Q8@"NSURL"16@"NSURL"20@"NSURL"24@"NSString"28@"NSData"32@"NSDictionary"36I40@?<v@?B>44
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v20@0:4@8@12@16
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSError"16
v16@0:4@8@12
v16@0:4@"NSURLSession"8@"NSURLSessionDataTask"12
v24@0:4@8@12@16@?20
v24@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLResponse"16@?<v@?i>20
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLSessionDownloadTask"16
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLSessionStreamTask"16
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSData"16
v24@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSCachedURLResponse"16@?<v@?@"NSCachedURLResponse">20
v28@0:4@8@12@16@20@?24
v28@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSHTTPURLResponse"16@"NSURLRequest"20@?<v@?@"NSURLRequest">24
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLAuthenticationChallenge"16@?<v@?i@"NSURLCredential">20
v20@0:4@8@12@?16
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@?<v@?@"NSInputStream">16
v40@0:4@8@12q16q24q32
v40@0:4@"NSURLSession"8@"NSURLSessionTask"12q16q24q32
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLSessionTaskMetrics"16
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSError"16
v16@0:4@"NSURLSession"8@"NSError"12
v20@0:4@"NSURLSession"8@"NSURLAuthenticationChallenge"12@?<v@?i@"NSURLCredential">16
v12@0:4@"NSURLSession"8
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLResponse"16@?<v@?B@"NSDictionary">20
v24@0:4@8@12i16@?20
v24@0:4@"NSURLSession"8@"NSString"12i16@?<v@?i>20
v16@0:4@8B12
v16@0:4@"NSURLSession"8B12
v24@0:4@"NSURLSession"8@"NSString"12I16@?<v@?i{?=ii}>20
@28@0:4@8@12@16@20@24
@12@0:4I8
B12@0:4I8
I12@0:4@8
@12@0:4@8
v20@0:4@8S12@?16
v16@0:4@8S12
v20@0:4I8d12
v20@0:4I8@12@16
v32@0:4@8@12@16@20I24@?28
v24@0:4@8@12q16
@"NSURLSessionConfiguration"
@"<NDBackgroundSessionClient><PDURLSessionCompatibilityProtocol><NSXPCProxyCreating>"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"NSMutableSet"
@"NSDictionary"
@"NSURLSession"
@"<PDURLSessionProxyClientDelegate>"
v20@0:4q8@16
{?="priority"b1}
@16@0:4@8S12
S8@0:4
v12@0:4S8
@"PBCodable"
v28@0:4@8@12@16@20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@8@12@16@20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@8@12@16B20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@8@12@16B20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@8@12@16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
i20@0:4@8S12B16
Q16@0:4q8
B24@0:4Q8q16
v24@0:4@8S12@16@?20
v24@0:4@8@12S16@20
v20@0:4@8B12@16
@"IDSService"
v16@0:4Q8
Q8@0:4
@"PDURLSessionProxyRequest"
{?="taskSequenceNumber"b1}
@"PDURLSessionProxyResponse"
@"AVAssetDownloadSession"
@"AVURLAsset"
@"NSObject<OS_dispatch_source>"
@"<NDAVAssetDownloadSessionWrapperDelegate>"
@"NSURL"
@"NSValue"
v28@0:4@"NSURLSessionConfiguration"8@"<NDBackgroundSessionClient>"12@"NSURL"16@"NSDictionary"20@?<v@?@"<NDBackgroundSessionProtocol>"@"NSDictionary"B>24
v16@0:4@8@?12
v16@0:4@"NSString"8@?<v@?>12
v12@0:4@?<v@?@"NSArray">8
v16@0:4@"NDBackgroundSession"8@?<v@?>12
@20@0:4@8@12B16
@12@0:4^B8
B16@0:4@8@12
@?8@0:4
@"<NDSessionManagerDelegate>"
v12@0:4@"NDApplication"8
v12@0:4@"NSError"8
v16@0:4@"NSError"8@?<v@?i@"NSURLCredential">12
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"8@0:4
@"NSString"12@0:4I8
v24@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSData"16@?<v@?>20
v20@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12@"NSURL"16
v40@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12q16q24q32
v32@0:4@8@12q16q24
v32@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12q16q24
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLRequest"16@?<v@?@"NSURLRequest">20
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12q16
v16@0:4@"NSURLSession"8@"NSURLSessionTask"12
v20@0:4@8@12B16
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12B16
v20@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12@"NSURLResponse"16
@16@0:4@8@12
@"NSURL"16@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12
d16@0:4d8
@16@0:4@8B12
@44@0:4@8@12B16@20@24@28@32@36@40
@12@0:4B8
@16@0:4q8
@16@0:4@8^B12
B20@0:4@8@12@16
v28@0:4@8I12@16B20B24
B12@0:4B8
q12@0:4B8
v16@0:4I8B12
@16@0:4@8I12
v24@0:4@8@12I16B20
B12@0:4^{__SecTrust=}8
@"NDCredentialStorage"
@"NDApplication"
@"NSMutableArray"
@"NDCallbackQueue"
@"<NSXPCProxyCreating><NDBackgroundSessionClient>"
@"<NDBackgroundSessionDelegate>"
{?="version"b1}
@12@0:4i8
@"NSFileHandle"
{?="continueLoad"b1}
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v16@0:4@?8I12
v20@0:4@?8q12
v16@0:4^{__SCDynamicStore=}8^{__CFArray=}12
^{__CFRunLoopSource=}
@"NSObject<OS_xpc_object>"
v20@0:4@8^@12^@16
#16@0:4S8B12
@16@0:4#8@12
q8@0:4
v16@0:4q8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
{?="streamErrorCode"b1"streamErrorDomain"b1}
v12@0:4:8
d8@0:4
v16@0:4d8
v12@0:4@"NSString"8
@"NDSpringBoardApplication"
{?="reason"b1}
{?="shouldCancel"b1}
v16@0:4@"PDURLSessionProxyClient"8@?<v@?>12
@"<NDCredentialStorageDelegate>"
{?="hasBodyStream"b1}
{?="bytesSent"b1"totalBytesExpectedToSend"b1"totalBytesSent"b1}
{?="taskIdentifier"b1}
@44@0:4@8@12@16@20@24q28I36@40
v16@0:4I8I12
@"NSURLSessionTask"
@"PDURLSessionProxyAuthChallenge"
{?="code"b1"version"b1}
v12@0:4@"NSArray"8
v16@0:4@"NSArray"8@"NSArray"12
v20@0:4@"NDSessionManager"8@"NSString"12@?<v@?>16
B20@0:4@8I12@16
@"BKSApplicationStateMonitor"
@"BKSSystemService"
@32@0:4@8@12q16I24@28
@"NDAVAssetDownloadSessionWrapper"
{?="idsPriority"b1"sequenceNumber"b1}
@"PDURLSessionProxyError"
@20@0:4i8I12@16
@"NSArray"
@"<NDCallbackQueueDelegate>"
v16@0:4@"NDAVAssetDownloadSessionWrapper"8@"NSError"12
v36@0:4@8Q12Q20Q28
v36@0:4@"NDAVAssetDownloadSessionWrapper"8Q12Q20Q28
v24@0:4@"NDAVAssetDownloadSessionWrapper"8@"NSValue"12@"NSArray"16@"NSValue"20
v16@0:4@"NDAVAssetDownloadSessionWrapper"8@"NSDictionary"12
v20@0:4@8@12I16
v16@0:4I8@12
q16@0:4q8
(\8@fffff
@@)\
hF@ffffffN@
(\8@fffff
@@)\
hF@ffffffN@
Current discretionary status for %@ is non-discretionary, since the app is being debugged
Current discretionary status for %@ is non-discretionary, since nsurlsessiond is running in EDU sync mode
Current discretionary status for %@ is discretionary (opt-in:%d
Current discretionary status for %@ is non-discretionary
Enqueueing Task %lu with UUID %@ for client %@, session %@
Task %lu requesting URL %@
Client %@ cancel for task %lu
Client %@ suspend for task %lu
Client %@ resume for task %lu
Daemon %@ setPropertyOnStreamWithIdentifier %@ for task %lu
Task %lu for client %@ received auth challenge with type %@
Task %lu for client %@ will be retried after error - code: %ld
Task %lu for client %@ was cancelled
Task %lu for client %@ completed with error - code: %ld
Task %lu for client %@ completed successfully
Task %lu for client %@ received response, status code: %d
Task %lu for client %@ has a connection
Task %lu for client %@ is waiting for connection - reason: %lld
Task %lu for client %@ conditions changed - satisfied: %d
Download Task %lu for client %@ received response, status code: %d
Canceling task because of low throughput monitoring! Current throughput; %f bytes/sec, current threshold: %f bytes/sec
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>nsurlsessiond</string>
<key>CFBundleIdentifier</key>
<string>com.apple.nsurlsessiond</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>nsurlsessiond</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleVersion</key>
<string>811.4.12</string>
<key>CFBundleDisplayName</key>
<string>nsurlsessiond</string>
<key>CFBundleShortVersionString</key>
<string>811.4.12</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<true/>
</dict>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>FAKETEAMID.com.apple.nsurlsessiond</string>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.join_connection_pool</key>
<true/>
<key>com.apple.networkd.set_account_identifier</key>
<true/>
<key>com.apple.private.dark-wake-network-reachability</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
