alloc
init
busyCount
UIBusyCount
_recomputePowerAssertion
isAssertingPowerAssertion
setIsAssertingPowerAssertion:
_assertPowerAssertion
_deassertPowerAssertion
sharedManager
retainBusy
releaseBusy
retainUIBusy
releaseUIBusy
setBusyCount:
setUIBusyCount:
isBusy
toggleAssertion
setIsBusy:
_isAssertingPowerAssertion
_isBusy
_busyCount
_UIBusyCount
currentRunLoop
getCFRunLoop
dealloc
info
runLoopSource
setRunLoopSource:
userNotification
setUserNotification:
.cxx_destruct
owner
setOwner:
personID
setPersonID:
completionBlock
setCompletionBlock:
_owner
_personID
_userNotification
_runLoopSource
_completionBlock
removeObjectForKey:
objectForKey:
_dismissNotificationForPersonID:
setObject:forKey:
_showNotificationInfo:
sharedAlertManager
_userDidRespondToNotification:info:responseFlags:
displayAlertForPersonID:notificationDict:completionBlock:
_personIDToNotification
initWithAlertManager:
accounts
countByEnumeratingWithState:objects:count:
isEqualToString:
displayName
stringWithFormat:
numberWithBool:
dictionaryWithObjectsAndKeys:
URLWithString:
defaultWorkspace
openSensitiveURL:withOptions:
_accountForPersonID:
primaryEmailVerified
saveAllAccounts
_didReceiveAccountConfigChangedNotification
_promptUserForAuthComplianceForAccount:personID:
updateAccountPropertiesWithHandler:
currentThread
mainThread
performSelectorOnMainThread:withObject:waitUntilDone:
defaultCenter
postNotificationName:object:
didEncounterAuthenticationFailureForPersonID:
didEncounterAuthenticationSuccessForPersonID:
rearmAuthenticationAlert
isWaitingForAuth
isListeningToKeybagChanges
setIsListeningToKeybagChanges:
keybagChangeNotifyToken
setKeybagChangeNotifyToken:
_state
_alertManager
_bagRefetchCount
_isListeningToKeybagChanges
_keybagChangeNotifyToken
thePlatform
addBarrierBlock:
initWithMachServiceName:options:
isBusyCompletionBlock:
enqueueAssetCollections:personID:reply:
dequeueAssetCollectionWithGUIDs:personID:reply:
deleteAssetCollections:personID:
pollForSubscriptionUpdatesForPersonID:
retryOutstandingActivities
pollForSubscriptionUpdatesTriggeredByPushNotificationForPersonID:
serverSideConfigurationForPersonID:reply:
refreshServerSideConfigurationForPersonID:
resetServerStateForPersonID:
abortAllActivityForPersonID:
pauseForUUID:
unpauseForUUID:
forgetEverythingForPersonID:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
interfaceWithProtocol:
setRemoteObjectInterface:
resume
removeAllObjects
_machErrorWithUnderlyingError:
remoteObjectProxyWithErrorHandler:
boolValue
_waitForMessageToBeSent
MSVerboseDescription
setValue:forKey:
initWithServer:
MSErrorWithDomain:code:description:underlyingError:
sharedConnection
enqueueAssetCollections:personID:outError:
dequeueAssetCollectionWithGUIDs:personID:outError:
checkForOutstandingActivities
handleSubscriptionPushForPersonID:
forgetPersonID:
serverSideConfigurationForPersonID:
abortActivitiesForPersonID:
pause
resume:
_center
_noWakeCenter
_serverSideConfig
_serverSideConfigQueue
_serverSideConfigNotificationToken
_rereadDefaults
_facilityStringForFacility:
MSMSUserDirectory
stringByAppendingPathComponent:
bundleWithPath:
principalClass
processInfo
operatingSystemVersionString
initWithFormat:
mainBundle
infoDictionary
defaultMonitor
isExternalPowerConnected
batteryPercentRemaining
isPaused
_mayPerformFileTransfer
accountWithPersonID:
authToken
standardUserDefaults
propertiesForDataclass:
URLByAppendingPathComponent:
length
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
shouldLogAtLevel:
logFacility:level:format:args:
logFile:func:line:facility:level:format:args:
fullNameFromFirstName:lastName:
pathMediaStreamDir
publisherPluginClass
subscriberPluginClass
sharingPluginClass
deletePluginClass
didDetectUnrecoverableCondition
UDID
hardwareString
OSString
appBundleInfoString
policyMayUpload
policyMayDownload
policyMaySendDelete
socketOptions
pushTokenForPersonID:
pushToken
shouldEnableNewFeatures
contentURLForPersonID:
baseURLForPersonID:
authTokenForPersonID:
theDaemon
isPerformanceLoggingEnabled
OSVersion
personIDUsesProductionPushEnvironment:
setPushToken:
isPerfLoggingEnabled
setIsPerfLoggingEnabled:
_isPerfLoggingEnabled
_pushToken
arrayWithObjects:
stringByAppendingString:
stringByResolvingSymlinksInPath
initWithContentsOfFile:
bundleForClass:
localizedStringForKey:value:table:
MSMakeUUID
timerQueueTimerFired
timerQueuePing
disable
server
remoteObjectProxy
gate
enabled
timerQueue
setTimerQueue:
setServer:
setGate:
_UUID
_timerQueue
_server
_gate
allValues
invalidate
count
dateWithTimeIntervalSinceNow:
_timerDidFire:
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
_addPauseUUID:
pauseManagerDidPause:
pauseManagerDidUnpause:
userInfo
_removeTimerUUID:
pingPauseUUID:
unpauseUUID:
delegate
setDelegate:
_UUIDToTimerMap
_delegate
_isExternalPowerConnected
initWithServiceName:delegate:
setConnection:
UTF8String
logLevel:personID:albumGUID:format:
dictionary
connection
sendMessageReliably:data:maxRetryCount:withHandler:
MSErrorWithDomain:code:description:
_sendMessageReliably:data:successHandler:failureHandler:
arrayWithCapacity:
objectAtIndex:
albumWithAlbum:
addObject:
enumerateObjectsUsingBlock:
assetCollectionWithAssetCollection:
assetWithAsset:
copy
dictionaryWithObject:forKey:
_sendMessageReliably:
dictionaryWithObjects:forKeys:count:
noWakeConnection
setNoWakeConnection:
sendMessage:data:withHandler:
intValue
timerPingQueueSendSetUIForeground:personID:
timerPingQueueForegroundPingTimerExpiredContext:personID:
foregroundPingTimerContextByPersonID
enable
GUID
setFocusAlbumGUID:forPersonID:
numberWithUnsignedInteger:
serverSideConfigurationDictionaryByPersonID
refreshResetSync:personID:info:
refreshContentOfAlbumWithGUID:resetSync:personID:info:
refreshAccessControlListForAlbumWithGUID:personID:info:
refreshCommentsForAssetCollectionWithGUID:resetSync:personID:info:
addAlbum:personID:info:
modifyAlbumMetadata:personID:info:
deleteAlbumWithGUID:personID:info:
markAlbumGUIDAsViewed:personID:info:
markAlbumGUIDAsViewed:personID:moveLastViewedAssetCollectionMarker:info:
setPublicAccessEnabled:forAlbumWithGUID:personID:info:completionBlock:
_communicationFailureError
setMultipleContributorsEnabled:forAlbumWithGUID:personID:info:completionBlock:
subscribeToAlbumWithGUID:personID:info:
unsubscribeFromAlbumWithGUID:personID:info:
acceptInvitationWithToken:personID:info:completionBlock:
acceptInvitationWithGUID:personID:info:
rejectInvitationWithGUID:personID:info:
addAccessControlEntries:toAlbumWithGUID:personID:info:
removeAccessControlEntryWithGUID:personID:info:
addAssetCollections:toAlbumWithGUID:personID:info:
deleteAssetCollectionWithGUID:personID:info:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:personID:info:
addComments:toAssetCollectionWithGUID:personID:info:
deleteCommentWithGUID:personID:info:
numberWithInt:
XPCNSClientConnection:didReceiveRequest:
focusAlbumTimerByPersonID
focusAlbumGUIDByPersonID
_cloneArray:
nextActivityDateHandler:
isInRetryStateHandler:
retryOutstandingActivitiesForPersonID:
cancelActivitiesForPersonID:
handlePushNotificationForPersonID:
assetsInDownloadQueueCountForPersonID:completionBlock:
activityIsThrottledByLackOfDiskSpacePersonID:completionBlock:
pingForeground
setIsUIForeground:forPersonID:
setFocusAlbum:forPersonID:
setFocusAssetCollectionGUID:forPersonID:
albumGUIDsForPersonID:completionBlock:
albumWithGUID:personID:completionBlock:
accessControlGUIDsForAlbumWithGUID:personID:completionBlock:
accessControlWithGUID:personID:completionBlock:
invitationGUIDsForPersonID:completionBlock:
invitationWithGUID:personID:completionBlock:
assetCollectionGUIDsInAlbumWithGUID:personID:completionBlock:
assetCollectionWithGUID:personID:completionBlock:
videoURLForAssetCollectionWithGUID:personID:completionBlock:
videoURLsForAssetCollectionWithGUID:forMediaAssetType:personID:completionBlock:
isAssetCollectionWithGUID:markedAsUnviewedPersonID:completionBlock:
commentGUIDsForAssetCollectionWithGUID:personID:completionBlock:
commentWithGUID:personID:completionBlock:
serverSideConfigurationDictionaryForPersonID:completionBlock:
refreshResetSync:personID:
refreshContentOfAlbumWithGUID:resetSync:personID:
refreshAccessControlListForAlbumWithGUID:personID:
refreshCommentsForAssetCollectionWithGUID:resetSync:personID:
addAlbum:personID:
modifyAlbumMetadata:personID:
deleteAlbumWithGUID:personID:
markAlbumGUIDAsViewed:personID:
setPublicAccessEnabled:forAlbumWithGUID:personID:completionBlock:
setMultipleContributorsEnabled:forAlbumWithGUID:personID:completionBlock:
subscribeToAlbumWithGUID:personID:
unsubscribeFromAlbumWithGUID:personID:
markAsSpamInvitationWithToken:personID:completionBlock:
markAsSpamInvitationWithGUID:personID:completionBlock:
acceptInvitationWithToken:personID:completionBlock:
acceptInvitationWithGUID:personID:
rejectInvitationWithGUID:personID:
addAccessControlEntries:toAlbumWithGUID:personID:
removeAccessControlEntryWithGUID:personID:
addAssetCollections:toAlbumWithGUID:personID:
deleteAssetCollectionWithGUID:personID:
deleteAssetCollectionsWithGUIDs:personID:
markCommentsForAssetCollectionWithGUID:asViewedWithLastViewedDate:personID:
addComments:toAssetCollectionWithGUID:personID:
deleteCommentWithGUID:personID:
forgetEverythingAboutPersonID:
retrieveAssets:inAlbumWithGUID:personID:
retrieveAssetsFromAssetCollectionsWithGUIDs:assetTypeFlags:personID:
setForegroundPingTimerContextByPersonID:
setFocusAlbumTimerByPersonID:
setFocusAlbumGUIDByPersonID:
setServerSideConfigurationDictionaryByPersonID:
memberQueue
setMemberQueue:
_connection
_noWakeConnection
_foregroundPingTimerContextByPersonID
_focusAlbumTimerByPersonID
_focusAlbumGUIDByPersonID
_serverSideConfigurationDictionaryByPersonID
_memberQueue
setDate:
contextWithDate:
isValid
setIsValid:
date
_isValid
_date
workQueue
MSPowerBudgetDidRequestPersistedValues:
workQueueSetPushTimerDate:
workQueueSetPostForegroundTimerDate:
workQueueSetGlobalResetSyncTimerDate:
workQueueRecomputeFileTransferAllowed
workQueuePushTimerContext
setWorkQueuePushTimerContext:
timeIntervalSinceNow
workQueueCommitPersistedValues
workQueuePostForegroundTimerContext
setWorkQueuePostForegroundTimerContext:
workQueueGlobalResetSyncTimerContext
setWorkQueueGlobalResetSyncTimerContext:
workQueueIsExternalPowered
workQueueIsForeground
setIsFileTransferAllowed:
MSPowerBudget:didRequestStorageOfPersistedValues:
workQueueMaxActiveTimeAfterPush
workQueueSetForeground:
MSPowerBudgetGotSignificantEvent:
workQueueMaxActiveTimeAfterLossOfForeground
workQueueMaxActiveTimeAfterGlobalResetSync
workQueueSetExternalPowered:
focusAlbumGUID
focusAssetCollectionGUID
shutDown
maxActiveTimeAfterPush
setMaxActiveTimeAfterPush:
maxActiveTimeAfterGlobalResetSync
setMaxActiveTimeAfterGlobalResetSync:
maxActiveTimeAfterLossOfForeground
setMaxActiveTimeAfterLossOfForeground:
isFileTransferAllowed
hasForegroundFocus
hasActiveTimers
workQueueSetIsFileTransferAllowed:
didReceivePushNotification
didBeginForegroundFocus
didEndForegroundFocus
didReceiveGlobalResetSync
didBeginExternalPower
didEndExternalPower
setFocusAlbumGUID:
setFocusAssetCollectionGUID:
_postForegroundTimerDidExpire:
_globalResetSyncTimerDidExpire:
workQueueIsFileTransferAllowed
workQueueSetFileTransferAllowed:
setWorkQueue:
_workQueueIsFileTransferAllowed
_workQueueIsExternalPowered
_workQueueIsForeground
_focusAlbumGUID
_focusAssetCollectionGUID
_workQueuePushTimerContext
_workQueuePostForegroundTimerContext
_workQueueGlobalResetSyncTimerContext
_workQueue
_maxActiveTimeAfterPush
_maxActiveTimeAfterLossOfForeground
_maxActiveTimeAfterGlobalResetSync
defaultManager
fileExistsAtPath:
timeIntervalSinceDate:
removeItemAtPath:error:
data
writeToFile:options:error:
deviceHasEnoughDiskSpaceRemainingToOperate
albumSharingDaemon
isPersonIDAllowedToDownloadAssets:
isEnabledForDataclass:
array
pathAlbumSharingDir
pluginClass
baseSharingURLForPersonID:
personIDsEnabledForAlbumSharing
MSASIsAllowedToTransferMetadata
MSASIsAllowedToUploadAssets
MSASPersonIDIsAllowedToDownloadAssets:
setSuppressCellular:
MMCSConcurrentConnectionsCount
shouldDownloadEarliestPhotosFirst
personIDEnabledForAlbumSharing:
metadataSocketOptionsForPersonID:
MMCSDownloadSocketOptionsForPersonID:
MMCSUploadSocketOptionsForPersonID:
sharedStreamsProtocolVersionString
fileSystemRepresentation
v4@?0
%@: Retaining process busy. New busy: %d, UI busy: %d
%@: Releasing process busy. New busy: %d, UI busy: %d
%@: Retaining process UI busy. New busy: %d, UI busy: %d
%@: Releasing process UI busy. New busy: %d, UI busy: %d
%@: Retaining process power assertion.
%@: Releasing process power assertion.
%@: Toggling process power assertion off then on.
isBusy
TB,N,V_isBusy
isAssertingPowerAssertion
TB,N,V_isAssertingPowerAssertion
busyCount
Ti,N,V_busyCount
UIBusyCount
Ti,N,V_UIBusyCount
owner
T@"MSAlertManager",W,N,V_owner
personID
T@"NSString",&,N,V_personID
runLoopSource
T^{__CFRunLoopSource=},N
userNotification
T^{__CFUserNotification=},N
completionBlock
T@?,C,N,V_completionBlock
Dismissing notification for personID %@
Cannot find notification associated with person ID %@ to dismiss. Ignoring.
Showing alert to user.
Failed to create user notification run loop source. Cannot display notification.
Failed to create user notification. Error: %ld
MSAuthenticationManagerDidReceiveAuthenticationChangeNotification
AUTH_TITLE
AUTH_MESSAGE_P_ACCOUNTNAME
AUTH_SETTINGS_BUTTON
AUTH_IGNORE_BUTTON
Prompting user for authentication compliance.
prefs:root=CASTLE
v12@?0B4L8
Encountered authentication error for personID %@.
The account for personID %@ is not yet vetted. Waiting for account change.
The account for personID %@ has been successfully reauthenticated.
Could not reauthenticate personID %@. Error: %@
v12@?0B4@"NSError"8
We've refetched the bag too many times. Prompting user to change password.
Cannot find AAAccount for personID %@. Ignoring authentication error.
Ignoring authentication failure as we are already handling a previous authentication error.
Received account change notification. Retrying activities.
Received account change notification, but we weren't waiting for it. Ignoring.
Resetting authentication state. No longer waiting for user to reauth.
Not resetting authentication state as we're waiting for a server response.
isListeningToKeybagChanges
TB,N,V_isListeningToKeybagChanges
keybagChangeNotifyToken
Ti,N,V_keybagChangeNotifyToken
waitingForAuth
TB,R,N,GisWaitingForAuth
MSCServerSideConfigurationDidChangeNotification
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
com.apple.MediaStream.MSConnection._serverSideConfigQueue
Sending local notification that server-side config has changed.
v8@?0i4
Could not enqueue asset collections %@ for personID %@: %@
v8@?0@"NSError"4
v8@?0@"NSDictionary"4
Could not dequeue asset collections %@ for personID %@: %@
Could not delete asset collections %@ for personID %@: %@
Could not poll for subscription updates for personID %@: %@
Could not checkForOutstandingActivities: %@
Could not handle subscription push for personID %@: %@
Could not send message to forget personID %@: %@
Can't retrieve server-side configuration for personID %@. Error: %@
Could not refresh server side configuration for personID %@: %@
Could not reset server state for personID %@: %@
Can't abort activities for personID %@: %@
v8@?0B4
ERROR_MACH_FAILURE
com.apple.mediastream.mstreamd
com.apple.mediastream.mstreamd-nowake
retval
error
MSServerSideConfigurationDidChangeNotification
MSIdleStateDidChangeNotfication
mstreamdErrorDomain
mstreamd
perf
mmcs
com.apple.managedconfiguration.defaultsdidchange
Re-reading defaults.
com.apple.mediastream
MSPerfLogLevel
MSPerfOutputLevel
MSPlatformPerformanceLoggingSettingDidChange
Library
MediaStream
/System/Library/MediaStreamPlugins/PhotoStreamsPlugin.mediastream
publisherPluginClass bundle %@
publisherPluginClass principalClass %@
subscriberPluginClass bundle %@
subscriberPluginClass principalClass %@
sharingPluginClass bundle %@
sharingPluginClass principalClass %@
deleterPluginClass bundle %@
deleterPluginClass principalClass %@
ProductVersion
ProductBuildVersion
iOS;%@;%@
CFBundleShortVersionString
%@/%@
Battery level is too low to continue at %.1f%%.
Restarting mstreamd.
Missing authToken. Requesting
MSForcedBaseURL
apsEnv
production
shouldEnableNewFeatures
%@ %@
isPerfLoggingEnabled
TB,N,V_isPerfLoggingEnabled
pushToken
T@"NSData",&,N,V_pushToken
Library/Logs/CrashReporter/DiagnosticLogs/Photos/Process
mstreamdOutputLevel
mstreamdLogLevel
MSOutputLevel
MSLogLevel
MSASOutputLevel
MSASLogLevel
mstreamd-perf
mstreamd-ids
mstreamd-mmcs
iPhoneSimulator
/System/Library/CoreServices/SystemVersion.plist
Pause context %p started.
MSClientSidePauseContext timer queue
Pause context %p ended.
Pause context %p pinging server.
timerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_timerQueue
server
T@"NSXPCConnection",&,N,V_server
gate
T@"MSTimerGate",&,N,V_gate
Pause manager received an invalid UUID. Making up a new one: %@
Pause timer ping for UUID %@
Pause timer UUID %@ expired.
delegate
T@"<MSPauseManagerDelegate>",W,N,V_delegate
MSBatteryPowerMonitorExternalPowerSourceChangedNotification
isExternalPowerConnected
TB,R,N,V_isExternalPowerConnected
com.apple.mediastream.sharing
com.apple.mediastream.sharing-nowake
MSASConnectionErrorDomain
MSASConnection member queue
%@: Server side configuration changed. Purging local cache.
%@: Could not register for server-side configuration change notification.
Failed to send XPC command: %@
v12@?0B4@"<NSCoding>"8
ERROR_CONNECTION_FAILED
v16@?0@4I8^B12
%@: Failed to send message to retry outstanding activities for personID %@. Error:%@
Failed to send message to retry outstanding activities.
%@: Missing person ID for push notification, ignoring.
B20@?0i4@"<NSCoding>"8B12L16
%@: Pinging UI Foreground state: %d personID: %@
%@: Setting focus album GUID to %@
%@: Setting focus asset collection GUID to %@
%@: Retrieved server side config for personID %@: %@
%@: Could not retrieve server side config for person ID %@
v12@?0@"NSDictionary"4@"NSError"8
MSASConnection received an unexpected request. Ignoring.
connection
T@"XPCNSClientConnection",&,N,V_connection
noWakeConnection
T@"XPCNSClientConnection",&,N,V_noWakeConnection
foregroundPingTimerContextByPersonID
T@"NSMutableDictionary",&,N,V_foregroundPingTimerContextByPersonID
focusAlbumTimerByPersonID
T@"NSMutableDictionary",&,N,V_focusAlbumTimerByPersonID
focusAlbumGUIDByPersonID
T@"NSMutableDictionary",&,N,V_focusAlbumGUIDByPersonID
memberQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
serverSideConfigurationDictionaryByPersonID
T@"NSMutableDictionary",&,N,V_serverSideConfigurationDictionaryByPersonID
MSASConnection timer ping queue
MSPowerBudgetDidBeginAllowingFileTransferNotification
MSPowerBudgetDidEndAllowingFileTransferNotification
pushTimerDate
postForegroundTimerDate
globalResetSyncTimerDate
isValid
TB,N,V_isValid
date
T@"NSDate",&,N,V_date
MSPowerBudget work queue
%@: Setting push timer to fire in %0.2f seconds.
%@: Push timer fired.
%@: Stopping push timer.
%@: Setting post-foreground timer to fire in %0.2f seconds.
%@: Post-foreground timer fired.
%@: Stopping post-foreground timer.
%@: Setting global reset sync timer to fire in %0.2f seconds.
%@: Global reset sync timer fired.
%@: Stopping global reset sync timer.
%@: Setting max active time after push to %0.2f seconds.
%@: Setting max active time after global reset sync to %0.2f seconds.
%@: Setting max active time after loss of foreground to %0.2f seconds.
%@: Setting file transfers allowed = %d
%@: Push received. Allowing file transfers to continue for %0.2f seconds
%@: UI foregrounded. Allowing file transfers.
%@: UI no longer foregrounded. Allowing file transfers to continue for %0.2f seconds.
%@: Global reset sync received. Allowing file transfers to continue for %0.2f seconds.
%@: Plugged in to external power. Allowing file transfers.
%@: Unplugged from external power.
%@: UI focus on album GUID: %@
%@: UI focus on asset collection GUID: %@
%@: Post-foreground timer expired.
%@: Global reset sync timer expired.
workQueueIsFileTransferAllowed
TB,N,SworkQueueSetFileTransferAllowed:,V_workQueueIsFileTransferAllowed
workQueueIsExternalPowered
TB,N,SworkQueueSetExternalPowered:,V_workQueueIsExternalPowered
workQueueIsForeground
TB,N,SworkQueueSetForeground:,V_workQueueIsForeground
workQueuePushTimerContext
T@"MSPBTimerContext",&,N,V_workQueuePushTimerContext
workQueuePostForegroundTimerContext
T@"MSPBTimerContext",&,N,V_workQueuePostForegroundTimerContext
workQueueGlobalResetSyncTimerContext
T@"MSPBTimerContext",&,N,V_workQueueGlobalResetSyncTimerContext
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"<MSPowerBudgetDelegate>",W,N,V_delegate
maxActiveTimeAfterPush
Td,N,V_maxActiveTimeAfterPush
maxActiveTimeAfterLossOfForeground
Td,N,V_maxActiveTimeAfterLossOfForeground
maxActiveTimeAfterGlobalResetSync
Td,N,V_maxActiveTimeAfterGlobalResetSync
focusAlbumGUID
T@"NSString",&,N,V_focusAlbumGUID
focusAssetCollectionGUID
T@"NSString",&,N,V_focusAssetCollectionGUID
fileTransferAllowed
TB,R,N,GisFileTransferAllowed
foregroundFocus
TB,R,N,GhasForegroundFocus
hasActiveTimers
TB,R,N
albumshare
/System/Library/MediaStreamPlugins/PhotoSharingPlugin.mediastream
Loading Shared Streams plugin...
Loaded class: %@
MSASForcedBaseURL
sharedstreams
MSASPlatformImplementation disk space queue
Checking remaining disk space for the first time.
Detected that the process was shut down while throttled by disk space. Remaining throttled.
Checking remaining disk space again.
Disk space has become too low for continued operation.
Enough disk space has become available to continue operation.
Disk space is OK to continue operations.
Disk space is too low for continued operation.
mstreamd is paused. Not transferring metadata at this time.
Not enough disk space to continue transferring metadata.
mstreamd is paused. Not uploading assets at this time.
Not enough disk space to continue uploading assets.
mstreamd is paused. Not downloading assets at this time.
%@ is not allowed to download assets at this time.
Not enough disk space to continue downloading assets.
AlbumSharingMMCSConnections
Using user-defined MMCS connection count of %d.
com.apple.mediastream.mstreamd.disk-throttled
Checked disk space remaining: %lld blocks.
Cannot check disk space remaining: %s
MSPowerAssertionManager
MSAMNotificationInfo
MSAlertManager
MSAuthenticationManager
MSDaemonProtocols
NSObject
MSConnection
MSMSPlatform
MSPlatform
MSClientSidePauseContext
MSPauseManager
MSBatteryPowerMonitor
MSMSStringUtilities
MSASConnection
XPCNSClientConnectionDelegate
MSPBTimerContext
MSPowerBudget
MSASPlatformImplementation
MSASPlatform
@8@0:4
v8@0:4
v12@0:4i8
B8@0:4
i8@0:4
v12@0:4B8
^{__CFRunLoopSource=}8@0:4
v12@0:4^{__CFRunLoopSource=}8
^{__CFUserNotification=}8@0:4
v12@0:4^{__CFUserNotification=}8
v12@0:4@8
@?8@0:4
v12@0:4@?8
@"MSAlertManager"
@"NSString"
^{__CFUserNotification=}
^{__CFRunLoopSource=}
v20@0:4^{__CFUserNotification=}8@12L16
v20@0:4@8@12@?16
@"NSMutableDictionary"
@12@0:4@8
v16@0:4@8@12
v12@0:4@?<v@?B>8
v20@0:4@"NSArray"8@"NSString"12@?<v@?@"NSDictionary">16
v16@0:4@"NSArray"8@"NSString"12
v12@0:4@"NSString"8
v16@0:4@8@?12
v16@0:4@"NSString"8@?<v@?@"NSDictionary">12
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
B20@0:4@8@12^@16
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
B12@0:4i8
v24@0:4i8i12@16*20
v24@0:4i8i12@"NSString"16*20
v36@0:4r*8r*12i16i20i24@28*32
v36@0:4r*8r*12i16i20i24@"NSString"28*32
@16@0:4@8@12
@"NSString"16@0:4@"NSString"8@"NSString"12
@"NSDictionary"8@0:4
@"NSData"12@0:4@"NSString"8
@"NSData"8@0:4
@"NSURL"12@0:4@"NSString"8
@"NSString"12@0:4@"NSString"8
@"MSMediaStreamDaemon"8@0:4
^{__CFString=}12@0:4i8
@"NSData"
@"MSTimerGate"
@"<MSPauseManagerDelegate>"
d8@0:4
v16@0:4@"XPCNSClientConnection"8@"XPCNSRequest"12
v24@0:4@8@12@?16@?20
v16@0:4B8@12
v24@0:4@8I12@16@?20
v20@0:4B8@12@16
v20@0:4@8B12@16
v24@0:4@8B12@16@20
v20@0:4@8@12@16
v24@0:4@8@12B16@20
v24@0:4B8@12@16@?20
v28@0:4B8@12@16@20@?24
v24@0:4@8@12@16@?20
v24@0:4@8@12@16@20
v20@0:4@8i12@16
@"XPCNSClientConnection"
@"NSDate"
v16@0:4d8
@"<MSPowerBudgetDelegate>"
@"MSPBTimerContext"
v24@0:4i8@12@16@20
v24@0:4i8@"NSString"12@"NSString"16@"NSString"20
@"MSAlbumSharingDaemon"8@0:4
B12@0:4@"NSString"8
@"NSArray"8@0:4
@"NSDictionary"12@0:4@"NSString"8
zPLR
zPLR
zPLR
zPLR
