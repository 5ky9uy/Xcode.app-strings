removeAllObjects
alloc
init
addObject:
count
objectAtIndex:
class
description
dictionaryRepresentation
stringWithFormat:
dictionary
initWithCapacity:
countByEnumeratingWithState:objects:count:
setObject:forKey:
addPassRelevancyTuples:
passRelevancyTuplesCount
clearPassRelevancyTuples
passRelevancyTuplesAtIndex:
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
passRelevancyTuplesType
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
passRelevancyTuples
setPassRelevancyTuples:
_passRelevancyTuples
addTransactionsBytes:
addTransactionPassIDs:
transactionsBytesCount
clearTransactionsBytes
transactionsBytesAtIndex:
transactionPassIDsCount
clearTransactionPassIDs
transactionPassIDsAtIndex:
transactionsBytesType
transactionPassIDsType
transactionsBytes
setTransactionsBytes:
transactionPassIDs
setTransactionPassIDs:
_transactionPassIDs
_transactionsBytes
setCatalogData:
catalogData
_catalogData
greenCarOriginStationCode
greenCarDestinationStationCode
shinkansenOriginStationCode
shinkansenDestinationStationCode
shinkansenSecondaryOriginStationCode
shinkansenSecondaryDestinationStationCode
allObjects
setStationCodes:
_setExternalTransitLookupParameters:
initWithRequest:
_mapkit_underlyingGEOError
mapItems
objectAtIndexedSubscript:
name
startWithCompletionHandler:
initWithCallbackQueue:
resolveStationCodesForAppletState:paymentApplication:passUniqueIdentifier:completion:
callbackQueue
setCallbackQueue:
_callbackQueue
_init
setPassesQueue:
defaultCenter
handlePassLibraryChangedNotification:
addObserver:selector:name:object:
handleRelevantPassTuplesChangedNotification:
handleRelevancyPotentialChangedNotification:
handleRelevancyCheckCompletedNotification:
_updatePassDescriptions
_updateRelevantPassIDs
removeObserver:
setInvalidationHandler:
setInterruptionHandler:
invalidate
passLibraryChangedCoalescingTimer
dealloc
passesQueue
style
deletePending
_descriptionsWithFilter:
devicePrimaryPaymentApplication
devicePrimaryContactlessPaymentApplication
devicePrimaryInAppPaymentApplication
contactlessPaymentPassDescriptions
reverseObjectEnumerator
nfcPayload
hasStoredValue
encryptionPublicKeyData
arrayByAddingObjectsFromArray:
passCache
objectForKeyedSubscript:
getPassWithID:reply:queue:
serverHasPasses
xpcConnection
remoteObjectProxyWithErrorHandler:
disableCaching
setObject:forKeyedSubscript:
fetchPassWithID:reply:
fetchDiffForPassWithID:reply:
deletePassWithID:reply:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
paymentPassDescriptions
performWorkAfterFirstLibraryLoad:
getSharedWebServiceContextWithCompletion:
setSharedWebServiceContext:completion:
preferredPaymentApplicationsCache
setPreferredPaymentApplicationsCache:
uniqueID
removeObjectForKey:
applicationIdentifier
setPreferredPaymentApplicationAID:forPaymentPassWithID:
passDescriptions
isEqualToString:
preferredPaymentApplication
enumerateObjectsUsingBlock:
setExpressTransitUniqueID:applicationIdentifier:completion:
getSecureElementIdentifiers:
fetchSecureElementIdentifiers:
isKindOfClass:
npkArchiveData
addPassData:completion:
handleValueAddedServiceTransactions:forPassUniqueIDs:completion:
handlePaymentTransactions:forPassUniqueIDs:completion:
processFelicaTransitHistory:forPaymentApplication:withPassUniqueIdentifier:transactionDate:
processFelicaTransitAppletState:forPassUniqueID:
handleAddedValue:forPassUniqueID:
handleEndedServiceModeRequest
noteWebServiceUpdateNeededWithCompletion:
array
arrayWithArray:
_updatePassDescriptionsWithCompletionHandler:
setPassLibraryChangedCoalescingTimer:
setServerHasPasses:
setServerHasPotentiallyRelevantPasses:
updatingPassDescriptions
setNeedsUpdatePassDescriptions:
setUpdatingPassDescriptions:
setPassDescriptions:
setPassCache:
needsUpdatePassDescriptions
initialLoadComplete
setInitialLoadComplete:
workToPerformAfterInitialLoad
setWorkToPerformAfterInitialLoad:
fetchPassDescriptionsWithReply:
serverHasPotentiallyRelevantPasses
handleRelevantPassTuplesChanged:
fetchRelevantPassTuplesWithReply:
date
timeIntervalSinceDate:
initWithMachServiceName:options:
fetchPrerenderedPassImageWithID:width:height:compact:reply:
setNeedsRelevancyInformation:
boostPriorityUntilPassDBAvailable:
markAsHavingReceivedLocation
fetchPreferredPaymentApplicationAIDForPaymentPassWithID:reply:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
interfaceWithProtocol:
setRemoteObjectInterface:
remoteObjectInterface
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
_tearDownConnectionBecauseOfInvalidation
resume
setLastSeenRelevantPassTuples:
remoteObjectProxy
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
userInfo
lastSeenRelevantPassTuples
sharedInstance
relevantPassTuples
inAppPaymentPassDescriptions
nonPaymentPassDescriptions
nfcPassDescriptions
cachedPassWithID:
getPassWithID:reply:
getDiffForPassWithID:reply:
deletePassWithID:
getDeviceHasAnyPaymentPassesWithCompletion:
setPreferredPaymentApplication:forPaymentPass:completion:
preferredPaymentApplicationForPaymentPass:
addPass:completion:
boostDaemonUntilPassDBAvailable:
needsRelevancyInformation
setDisableCaching:
_connectionSemaphore
_xpcConnection
_dateOfLastInvalidation
_invalidationOccurrences
_disabled
_noPassesInDaemon
_updatePassDescriptionsFailureCount
_needsRelevancyInformation
_updatingPassDescriptions
_needsUpdatePassDescriptions
_initialLoadComplete
_serverHasPasses
_serverHasPotentiallyRelevantPasses
_disableCaching
_passDescriptions
_preferredPaymentApplicationsCache
_passCache
_passesQueue
_lastSeenRelevantPassTuples
_passLibraryChangedCoalescingTimer
_workToPerformAfterInitialLoad
numberWithBool:
setConfigurationDataBytes:
setPending:
setHasPending:
hasPending
hasConfigurationDataBytes
pending
configurationDataBytes
_configurationDataBytes
_pending
_has
setUrl:
setSeid:
setCommand:
setInfoDictionary:
hasInfoDictionary
seid
command
infoDictionary
_command
_infoDictionary
_seid
_url
setConnection:
initWithConnection:
setFilter:
valueForEntitlement:
copy
processIdentifier
connection
setExportedInterface:
setServiceActive:
setQueue:
queue
filter
allowAccessToPass:
serviceActive
passAdded:
passUpdated:
passRemoved:
serviceResumed
serviceSuspended
broadcastPassAdded:
broadcastPassUpdated:
broadcastPassRemoved:
remoteProcessApplicationIdentifier
remoteProcessIdentifier
delegate
setDelegate:
_serviceActive
_connection
_filter
_remoteProcessApplicationIdentifier
_remoteProcessIdentifier
_delegate
_queue
npkWatchBarcode
messageData
length
barcode
format
npkHasBarcode
expirationDate
compare:
npkCompleteHashForWatchOSVersion:
manifestHash
dataWithData:
settings
appendBytes:length:
isImageSetLoaded:
npkSupportsHidingBarcode
npkExpired
npkCompleteHash
hasLogoImageSet
devicePaymentApplications
supportsContactlessPayment
predicateWithBlock:
filteredSetUsingPredicate:
supportsInAppPayment
isPaymentOptionSelectable
npkDeviceContactlessPaymentApplications
npkDeviceInAppPaymentApplications
displayName
sortedArrayUsingComparator:
npkHasUserSelectableContactlessPaymentApplications
containsObject:
npkHasUserSelectableInAppPaymentApplications
npkSortedDeviceContactlessPaymentApplications
npkSortedDeviceInAppPaymentApplications
npkPreferredContactlessPaymentApplication
npkPreferredInAppPaymentApplication
npkSetPreferredPaymentApplication:
dictionaryWithDictionary:
npkRelevancyUniqueID
npkRelevancyRelevantText
npkRelevancyTupleWithUniqueID:relevantText:
stringWithString:
appendString:
setWebServiceContextBytes:
hasWebServiceContextBytes
webServiceContextBytes
_webServiceContextBytes
setPushToken:
hasPushToken
pushToken
_pushToken
setDataToSign:
setDigestToSign:
setAid:
hasDataToSign
hasDigestToSign
entanglementMode
setEntanglementMode:
setHasEntanglementMode:
hasEntanglementMode
entanglementModeAsString:
StringAsEntanglementMode:
hasAid
dataToSign
digestToSign
_aid
_dataToSign
_digestToSign
_entanglementMode
removeObserver:name:object:
_handleNotification:
_internalNameForNotificationName:
weak_removeObserver:name:object:
stringByAppendingString:
object
weak_addObserver:selector:name:object:
weak_removeObserver:
setPassTypeIdentifier:
passTypeIdentifier
_passTypeIdentifier
setSuccess:
setHasSuccess:
hasSuccess
success
_success
setIsAvailable:
setHasIsAvailable:
hasIsAvailable
isAvailable
_isAvailable
setPassData:
passData
_passData
_handlePMUButtonEvent
initWithHandler:
paymentSessionSourceReceivedDelegatedButtonEvent:
_performDelegateCallback:
hasOutstandingSessions
initWithQueue:
setDeferAuthorization:
startSession
setCurrentPass:
setVasPasses:
paymentSessionSource:startedPaymentSession:
paymentSessionSource:declinedToStartPaymentSessionDueToPreconditionState:
initWithDelegate:callbackQueue:
setDelegateHandlingButtonEvents:
setPreconditionState:
setInitialPass:
_buttonListener
_sessionSourceQueue
_delegateHandlingButtonEvents
_deferAuthorization
_preconditionState
_initialPass
_vasPasses
numberWithUnsignedInt:
addUniqueIDs:
addManifestHashes:
setExpectedHash:
uniqueIDsCount
clearUniqueIDs
uniqueIDsAtIndex:
manifestHashesCount
clearManifestHashes
manifestHashesAtIndex:
uniqueIDsType
manifestHashesType
hasExpectedHash
setFullResyncNeeded:
setHasFullResyncNeeded:
hasFullResyncNeeded
setResyncID:
setHasResyncID:
hasResyncID
expectedHash
uniqueIDs
setUniqueIDs:
manifestHashes
setManifestHashes:
fullResyncNeeded
resyncID
_expectedHash
_manifestHashes
_resyncID
_uniqueIDs
_fullResyncNeeded
setCryptogram:
setChallengeResponse:
hasCryptogram
hasChallengeResponse
cryptogram
challengeResponse
_challengeResponse
_cryptogram
numberWithDouble:
addEntriesFromDictionary:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
npkDescription
outgoingResponseIdentifier
incomingResponseIdentifier
expectsPeerResponse
type
isResponse
context
data
setAuthToken:
hasAuthToken
authToken
_authToken
setPassID:
setPreferredApplicationAID:
hasPassID
hasPreferredApplicationAID
passID
preferredApplicationAID
_passID
_preferredApplicationAID
pathForResource:ofType:
defaultManager
fileExistsAtPath:
fileURLWithPath:
size
constraintsWithMaxSize:
resizedImage:
resizedImageToCover:
logoImage
setLogoImage:
networkLogoImage
setNetworkLogoImage:
cobrandLogoImage
setCobrandLogoImage:
bankLogoImage
setBankLogoImage:
backgroundImage
setBackgroundImage:
cardBackgroundImage
setCardBackgroundImage:
cardBackgroundCombinedImage
setCardBackgroundCombinedImage:
stripImage
setStripImage:
resizeWithScreenSize:
loadPDFArtFromBundle:
setRegistrationDataBytes:
hasRegistrationDataBytes
registrationDataBytes
_registrationDataBytes
owningConnection
setOwningConnection:
setUniqueID:
serviceModeRequested
setServiceModeRequested:
_serviceModeRequested
_owningConnection
_uniqueID
boolValue
connectionDied:
setTransientPassUniqueID:
setExportedObject:
_setQueue:
handleNewConnection:
setTransientPassRequest:
connection:hasNewTransientPassRequest:
transientPassRequest
initWithConnection:queue:delegate:
isBackgrounded
setBackgrounded:
_backgrounded
_transientPassRequest
initWithMachServiceName:
connections
_updateAppStateMonitor
removeObject:
_queue_transientPassUniqueID
transientPaymentRequests
filterUsingPredicate:
_notifyDelegateOfTransientPassChangeToUniqueID:
_queue_serviceModeRequested
enumerateObjectsWithOptions:usingBlock:
_activeTransientPassRequest
objectForKey:
intValue
unsignedIntValue
_bundleIDForXPCConnection:
updateInterestedBundleIDs:
initWithBundleIDs:states:
_handleAppStateChangeWithStateDictionary:
setHandler:
stringWithUTF8String:
transientPassAssertionServer:didReceiveNewTransientPassUniqueID:
listener:shouldAcceptNewConnection:
transientPassUniqueID
transitServiceModeRequested
getTransientPassUniqueID:transitServiceModeRequested:
xpcListener
setXpcListener:
setConnections:
setTransientPaymentRequests:
appStateMonitor
setAppStateMonitor:
_xpcListener
_connections
_transientPaymentRequests
_appStateMonitor
paymentPass
setManifestHash:
setStyle:
relevantDate
setRelevantDate:
logoText
setLogoText:
displayProfile
backgroundColor
setBackgroundColor:
foregroundColor
setForegroundColor:
labelColor
setLabelColor:
ingestedDate
setIngestionDate:
setDevicePaymentApplications:
setDevicePrimaryPaymentApplication:
setDevicePrimaryContactlessPaymentApplication:
setDevicePrimaryInAppPaymentApplication:
isPrivateLabel
setPrivateLabel:
isCobranded
setCobranded:
setDeletePending:
constraintsWithFixedSize:
blurredImageWithRadius:constraints:
localizedDescription
setLocalizedDescription:
setNfcPayload:
setCompleteHash:
setHasStoredValue:
setSettings:
availableActions
setAvailableActions:
organizationName
setOrganizationName:
frontFieldBuckets
setFrontFieldBuckets:
backFieldBuckets
setBackFieldBuckets:
decodeObjectOfClass:forKey:
setGroupID:
decodeIntegerForKey:
decodeObjectOfClasses:forKey:
setPreferredPaymentApplication:
setEffectivePaymentApplicationState:
decodeBoolForKey:
setHasUserSelectableContactlessPaymentApplications:
setLogoImageEncoded:
setBackgroundImageEncoded:
unsignedIntegerValue
setFelicaTransitAppletState:
setLastAddValueAmount:
setPendingAddValueDate:
encodeObject:forKey:
groupID
encodeInteger:forKey:
ingestionDate
effectivePaymentApplicationState
encodeBool:forKey:
hasUserSelectableContactlessPaymentApplications
logoImageEncoded
backgroundImageEncoded
completeHash
numberWithUnsignedInteger:
felicaTransitAppletState
lastAddValueAmount
pendingAddValueDate
isEqualToData:
isEqualToDate:
numberWithInteger:
arrayWithObjects:count:
stringByAppendingFormat:
initForWritingWithMutableData:
setRequiresSecureCoding:
finishEncoding
encodeAsData:
initForReadingWithData:
safeUnarchiveObjectOfClass:withData:
isCachingEnabled
paymentNetworkIdentifier
state
supportsInAppPaymentOnNetworks:capabilities:
_personalizedInAppPaymentApplicationsForNetworks:
paymentType
initWithFelicaAppletState:paymentApplication:
timeIntervalSinceNow
felicaProperties
isInStation
isInShinkansenStation
supportsSecureCoding
setCachingEnabled:
encodeWithCoder:
initWithCoder:
initWithPass:
encodeObject:asDataInCoder:withKey:
supportsInAppPaymentOnNetworks:
effectiveContactlessPaymentApplicationState
fieldForKey:
isAddValuePending
isEnroute
_hasStoredValue
_privateLabel
_cobranded
_deletePending
_hasUserSelectableContactlessPaymentApplications
_logoImage
_backgroundImage
_groupID
_manifestHash
_style
_relevantDate
_ingestionDate
_nfcPayload
_completeHash
_settings
_logoText
_backgroundColor
_foregroundColor
_labelColor
_localizedDescription
_devicePaymentApplications
_devicePrimaryPaymentApplication
_devicePrimaryContactlessPaymentApplication
_devicePrimaryInAppPaymentApplication
_preferredPaymentApplication
_effectivePaymentApplicationState
_availableActions
_organizationName
_felicaTransitAppletState
_frontFieldBuckets
_backFieldBuckets
_lastAddValueAmount
_pendingAddValueDate
_logoImageEncoded
_backgroundImageEncoded
setPass:
setLibraryHash:
setPreviousManifestHash:
setCatalog:
hasLibraryHash
hasPreviousManifestHash
hasCatalog
setLastKnownResyncID:
setHasLastKnownResyncID:
hasLastKnownResyncID
pass
libraryHash
previousManifestHash
catalog
lastKnownResyncID
_catalog
_lastKnownResyncID
_libraryHash
_pass
_previousManifestHash
_handleDeviceUnpaired:
_handleDevicePaired:
_handleDeviceBecameActive:
_handleDevicePairingFailure:
UTF8String
_handleCompanionAgentStarted
valueForProperty:
internalQueue
deferredActions
deferredSharedPaymentWebServiceContexts
setQueueAppropriateFailedActions:
enumerateKeysAndObjectsUsingBlock:
_performDeferredActions
_cleanUpDeferredDataForPairingID:
getPairedDevices
allKeys
setWithArray:
unionSet:
minusSet:
sharedDeferredActionHandler
performActionWhenCompanionAgentIsAvailable:forDevice:
deferredSharedPaymentWebServiceContextForDevice:
setDeferredSharedPaymentWebServiceContext:forDevice:
setDeferredActions:
setInternalQueue:
setDeferredSharedPaymentWebServiceContexts:
_deferredActions
_internalQueue
_deferredSharedPaymentWebServiceContexts
numberWithUnsignedLongLong:
setBitmapData:
width
setWidth:
height
setHeight:
bitsPerComponent
setBitsPerComponent:
bitsPerPixel
setBitsPerPixel:
bytesPerRow
setBytesPerRow:
bitmapInfo
setBitmapInfo:
bitmapData
_bitsPerComponent
_bitsPerPixel
_bytesPerRow
_height
_width
_bitmapData
_bitmapInfo
acceptedPasses
beginUpdates
setPaymentApplication:
endUpdates
npkSetPassAndPaymentApplicationForAID:
initWithService:
devices
deviceForNRDevice:fromIDSDevices:
isConnected
setPasscodeConnection:
setSystemSettingsManager:
setPreflighting:
setPreflightCompletionHandler:
_checkSpaceAvailableOnSecureElement
_checkWatchConnected
_checkCompanioniCloudAccount
_checkWatchiCloudAccount
_checkPasscodeEnabledAndUnlockedState
_checkWristDetectEnabledState
_finishPresentingSetupControllerIfReadyWithSuccess:error:
watchConnected
_errorForConnectionIssue
companionAgentConnection
setSpaceAvailableOnSecureElement:
paymentPassUniqueIDs:
setWatchConnected:
setNeedsCompanioniCloudAccount:
setCheckedCompanioniCloudStatus:
_errorForCompanionAccountNeeded
setNeedsWatchiCloudAccount:
setCheckedWatchiCloudStatus:
_currentlyPairing
setCheckedWatchPasscodeAndUnlockedStatus:
setNeedsPasscode:
setNeedsUnlock:
setAuthRandomSetIfNecessary:
setWatchPasscodeAndUnlockedQueryDate:
passcodeConnection
checkedWatchPasscodeAndUnlockedStatus
needsPasscode
needsUnlock
_setAuthRandomIfNecessary
getRemoteDeviceState:
watchPasscodeAndUnlockedQueryDate
boolForKey:
setNeedsWristDetection:
setCheckedWristDetectionStatus:
webService
targetDevice
_errorForGenericIssue
setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow:
isPreflighting
checkedCompanioniCloudStatus
checkedWatchiCloudStatus
checkedWristDetectionStatus
needsWatchiCloudAccount
needsWristDetection
spaceAvailableOnSecureElement
authRandomSetIfNecessary
_errorForWristDetectNeeded
needsCompanioniCloudAccount
_errorForGizmoAccountNeeded
_errorForPasscodeNeeded
_errorForUnlockNeeded
preflightCompletionHandler
bundleForClass:
localizedStringForKey:value:table:
URLWithString:
errorWithDomain:code:userInfo:
getActivePairedDevice
initWithWebService:companionAgentConnection:
addCardPreflightWithCompletion:
transferToCompanionPreflightWithCompletion:
systemSettingsManager
setWebService:
setCompanionAgentConnection:
_checkedWatchPasscodeAndUnlockedStatus
_checkedCompanioniCloudStatus
_checkedWatchiCloudStatus
_checkedWristDetectionStatus
_authRandomSetIfNecessary
_watchConnected
_spaceAvailableOnSecureElement
_needsPasscode
_needsUnlock
_needsCompanioniCloudAccount
_needsWatchiCloudAccount
_needsWristDetection
_preflighting
_passcodeConnection
_systemSettingsManager
_preflightCompletionHandler
_webService
_companionAgentConnection
_watchPasscodeAndUnlockedQueryDate
setHashData:
hasHashData
hashData
_hashData
reset
shouldAutomaticallyPresentForSettings:
_postLoyaltyEngineConfigurationChanged
postNotificationName:object:
sharedQuickPaymentLoyaltyEngine
storedValueCardDescriptions
greylistedLoyaltyCardDescriptions
whitelistedLoyaltyCardDescriptions
moveCardDescriptionFromGreylistToWhitelist:
removeCardDescriptionFromGreylistAndWhitelist:
_storedValueCardDescriptions
_whitelistedLoyaltyCardDescriptions
_greylistedLoyaltyCardDescriptions
_performFakeTransitHistoryFetch
transitAppletHistoryFetcher:gotTransitAppletHistory:forAppletWithAID:
setAIDToFetch:
requestTransitHistoryFetch
aidToFetch
setAidToFetch:
_aidToFetch
numberWithInt:
setResponseDictionary:
hasResponseDictionary
setHttpStatus:
setHasHttpStatus:
hasHttpStatus
resultCode
setResultCode:
responseDictionary
httpStatus
_httpStatus
_responseDictionary
_resultCode
_resyncState
setXpcConnection:
_remoteObjectProxy
initWithPassWithUniqueID:
setRequestServiceMode:
requestServiceMode
_requestServiceMode
addPassAppletStates:
passAppletStatesCount
clearPassAppletStates
passAppletStatesAtIndex:
passAppletStatesType
passAppletStates
setPassAppletStates:
_passAppletStates
setDate:
setPaymentPass:
paymentApplication
transaction
setTransaction:
valueAddedServicePasses
setValueAddedServicePasses:
valueAddedServiceTransactions
setValueAddedServiceTransactions:
felicaHistory
setFelicaHistory:
_date
_paymentPass
_paymentApplication
_transaction
_valueAddedServicePasses
_valueAddedServiceTransactions
_felicaHistory
registerObserver:
_handleTimeoutTimer
_setTimeoutTimer
_handleTransactionCompleteDarwinNotification
unregisterObserver:
ourInternalQueue
setOurCurrentPass:
invalidated
ourCallbackQueue
paymentSession:didMakePassCurrent:
paymentSession:willActivatePass:
_scheduleDidActivateEventForPass:
ourCurrentPass
setOurVasPasses:
ourVasPasses
setOurInServiceMode:
ourInServiceMode
paymentSession:didCompleteForReason:withTransactionContext:
ourConfirmed
setOurConfirmed:
setInvalidated:
changeCardToken
setChangeCardToken:
paymentSession:didActivatePass:
timeoutTimer
fieldDetectorDidEnterField:withProperties:
fieldDetectorDidExitField:
currentPass
vasPasses
deferAuthorization
setInServiceMode:
inServiceMode
confirmOrRenewSession
renewSession
deactivateSessionWithCompletion:
setOurCallbackQueue:
setOurInternalQueue:
setTimeoutTimer:
fieldDetector
setFieldDetector:
_ourConfirmed
_ourInServiceMode
_invalidated
_ourCurrentPass
_ourVasPasses
_ourCallbackQueue
_ourInternalQueue
_timeoutTimer
_fieldDetector
_changeCardToken
dataAccessor
archiveData
currentUserActivity
passListUserActivity
initWithActivityType:
setPassListUserActivity:
_saveUserActivity:
provisionPassUserActivity
_skeletonBridgeUserActivity
setProvisionPassUserActivity:
individualPassUserActivity
setIndividualPassUserActivity:
addUserInfoEntriesFromDictionary:
getPaymentPassesUserActivity
setGetPaymentPassesUserActivity:
setCurrentUserActivity:
becomeCurrent
sharedContinuityCoordinator
userViewingPassList
userViewingPassWithUniqueID:isPaymentPass:
userNeedsToProvisionPassWithUniqueID:
userNeedsPaymentPasses
userActivityForPassWithUniqueID:
invalidateAllActivities
_provisionPassUserActivity
_getPaymentPassesUserActivity
_passListUserActivity
_individualPassUserActivity
_currentUserActivity
dataWithBytesNoCopy:length:freeWhenDone:
initWithData:
bytes
initWithCGImageRef:
initWithEncodedImage:
encodedImage
createImageRef
enumerateAllPixels:
setAppDisplayName:
hasAppDisplayName
appDisplayName
_appDisplayName
hasUniqueID
setCancelOutstandingRequests:
setHasCancelOutstandingRequests:
hasCancelOutstandingRequests
cancelOutstandingRequests
_cancelOutstandingRequests
setWhitelist:
_entitledForObject:
whitelist
passesAddSilently
passesAllAccess
objectsPassingTest:
teamID
associatedPassTypeIdentifiers
_entitledForPassTypeID:teamID:associatedPassTypeIdentifiers:
passType
associatedApplicationIdentifiers
applicationID
passTypeIDs
teamIDs
intersectsSet:
filterPassIfNeeded:
allowsSilentAdd
entitlementFilteredPasses:
_whitelist
weakObjectsHashTable
_outstandingSessionHashTable
isDeactivated
_loyaltyEngineConfigurationChanged:
_handleNewContactlessSession:
_internalQueue_updateSessionWithCurrentPassAndLoyaltyState
_sessionQueue_enablePersistentCardEmulation
_sessionQueue_startContactlessSessionWithSuccessfulCompletionOnInternalQueue:
earlierDate:
isConfirmed
setConfirmed:
contactlessSession
credential
authorizeAndStartCardEmulationWithCredential:deferAuthorization:
_updateAuthorizationValidity
_sessionQueue_invokeAppropriateCallbackForActivationWithSuccess:invokeOnSuccess:contactlessValidity:forPass:
_checkContactlessValidity:authorizationValidity:performWork:
_internalQueue_getContactlessAndAuthorizationValidityAndPerformWork:
isDeactivating
_internalQueue_deactivateSessionWithCompletion:
contactlessSessionHandle
deactivationCompletionBlocks
setDeactivationCompletionBlocks:
setDeactivating:
setDeactivated:
_internalQueue_invokeDeactivationCompletionBlocks
invalidateSessionWithCompletion:
invalidateSession
setContactlessSessionHandle:
setContactlessSession:
_internalQueue_updateContactlessValidityAndPerformWork:
activationState
_sessionQueue_updateContactlessSessionForPass:paymentApplication:whitelistedVASPasses:greylistedVASPasses:sessionConfirmed:deferAuthorization:
activatedPaymentApplication
activatedValueAddedServicePasses
_checkContactlessValidity:performWork:
activateValueAddedServicePassWhitelist:greylist:
activatePaymentApplication:forPaymentPass:
startContactlessInterfaceSessionWithCompletion:
isFirstInQueue
queuePersistentCardEmulation
getAllVASPasses:
_internalQueue_updateContactlessSessionForPass:whitelistedVASPasses:greylistedVASPasses:
paymentSessionDidEnterField:
paymentSessionDidExitField:
paymentSessionDidReceiveStartTransaction:
paymentSessionDidReceiveActivityTimeout:
paymentSessionDidReceiveFinishTransaction:
_handleFelicaTransitTransactionWithContext:
_handleConventionalTransactionWithContext:
contactlessInterfaceSession:didFinishTransactionWithContext:
paymentSessionDidSelectPayment:
paymentSessionDidSelectValueAddedService:
didSucceed
paymentSession:didFailTransactionForPass:withValueAddedServiceTransactions:forValueAddedServicePasses:
contactlessInterfaceSessionHasPendingServerRequest:
contactlessInterfaceSessionDidFailTransaction:forPaymentApplication:paymentPass:
contactlessInterfaceSessionDidTimeout:forPaymentApplication:paymentPass:valueAddedServicePasses:
contactlessInterfaceSessionDidFail:forPaymentApplication:paymentPass:valueAddedServicePasses:
contactlessInterfaceSessionDidStartTransaction:
contactlessInterfaceSessionDidReceiveActivityTimeout:
contactlessInterfaceSession:didEndPersistentCardEmulationWithContext:
contactlessInterfaceSession:didTransitionFromState:toState:
contactlessInterfaceSessionDidEnterField:withProperties:
contactlessInterfaceSession:didReceiveExpressState:
contactlessInterfaceSessionDidExitField:
contactlessInterfaceSessionDidSelectPayment:
contactlessInterfaceSessionDidSelectValueAddedService:
contactlessInterfaceSessionDidFailDeferredAuthorization:
setCredential:
paymentSessionQueue
setPaymentSessionQueue:
contactlessValidity
setContactlessValidity:
authorizationValidity
setAuthorizationValidity:
_inServiceMode
_confirmed
_deactivating
_deactivated
_currentPass
_credential
_paymentSessionQueue
_contactlessSessionHandle
_contactlessSession
_deactivationCompletionBlocks
_contactlessValidity
_authorizationValidity
setLabel:
setIdentifier:
zero
setAmount:
setDetail:
decimalNumberWithString:
arrayWithObjects:
decimalNumberByMultiplyingBy:
decimalNumberByAdding:
amount
summaryItemWithLabel:amount:
setMerchantIdentifier:
setCountryCode:
setCurrencyCode:
setSupportedNetworks:
setMerchantCapabilities:
setRequiredShippingAddressFields:
setRequiredBillingAddressFields:
setBillingContact:
setShippingContact:
setShippingMethods:
shippingMethods
firstObject
setPaymentSummaryItems:
setGivenName:
setFamilyName:
setName:
setEmailAddress:
phoneNumberWithStringValue:
setPhoneNumber:
setStreet:
setCity:
setState:
setPostalCode:
setCountry:
setISOCountryCode:
setPostalAddress:
stopUpdatingLocation
setCompletionHandler:
initWithEffectiveBundle:
newAssertionForBundle:withReason:
requestWhenInUseAuthorization
location
completionHandler
startUpdatingLocation
setLocationFixTimeout:
setLocationManager:
setInUseAssertion:
_finishLocationFixWithLocation:
locationManager
locationFixTimeout
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
fetchLocationWithCompletion:
inUseAssertion
_completionHandler
_locationFixTimeout
_locationManager
_inUseAssertion
authorizationStatusForBundle:
locationServicesEnabled
horizontalAccuracy
timestamp
setPassAppletState:
hasPassAppletState
passAppletState
_passAppletState
addTsmRegionPushTopics:
addTsmRegionURLs:
addBrokerRegionPushTopics:
tsmRegionPushTopicsCount
clearTsmRegionPushTopics
tsmRegionPushTopicsAtIndex:
tsmRegionURLsCount
clearTsmRegionURLs
tsmRegionURLsAtIndex:
brokerRegionPushTopicsCount
clearBrokerRegionPushTopics
brokerRegionPushTopicsAtIndex:
setPrimaryRegionTopic:
tsmRegionPushTopicsType
tsmRegionURLsType
brokerRegionPushTopicsType
hasPrimaryRegionTopic
tsmRegionPushTopics
setTsmRegionPushTopics:
tsmRegionURLs
setTsmRegionURLs:
brokerRegionPushTopics
setBrokerRegionPushTopics:
primaryRegionTopic
_brokerRegionPushTopics
_primaryRegionTopic
_tsmRegionPushTopics
_tsmRegionURLs
setDefaultShippingAddress:
setDefaultBillingAddresses:
setDefaultContactEmail:
setDefaultContactPhone:
setDefaultContactName:
hasDefaultShippingAddress
hasDefaultBillingAddresses
hasDefaultContactEmail
hasDefaultContactPhone
hasDefaultContactName
defaultShippingAddress
defaultBillingAddresses
defaultContactEmail
defaultContactPhone
defaultContactName
_defaultBillingAddresses
_defaultContactEmail
_defaultContactName
_defaultContactPhone
_defaultShippingAddress
setPushTopic:
hasPushTopic
pushTopic
_pushTopic
showInAppInterfaceWithPaymentRequest:forHostApplicationName:hostBundleIdentifier:hostProcessIdentifier:hostIdentifier:orientation:activationHandler:
showInAppInterfaceWithRemotePaymentRequest:activationHandler:
remoteInterfacePresenterConnectionInterrupted:
presentInAppPaymentInterfaceWithPaymentRequest:forHostApplicationName:hostBundleIdentifier:hostProcessIdentifier:hostIdentifier:orientation:completion:
presentContinuityPaymentInterfaceWithRemotePaymentRequest:completion:
_migrationDelegateQueue
_handleHasMigrationDataSource
setPassDBIsAvailable:
database
_preconditionsMetForDatabaseOpen
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
_executeSQL:
_migrationDataSource
secureElementIdentifiers
updateDevicePaymentApplicationsWithSecureElementIdentifiers:
latestWatchOSMajorVersion
setObject:atIndexedSubscript:
initWithDictionary:bundle:
setMissingImageSetsFromObject:
flushLoadedImageSets
archivedDataWithRootObject:
_enumerateAllPassesForMigration:
_updateNFCPayloadDuringMigration:
_updatePrivateLabelAndCobrandDuringMigration:
_updateDeviceAndPreferredPaymentApplicationsDuringMigration:
_updateIngestedDatesDuringMigration:
_updateEffectivePaymentApplicationStateDuringMigration:
_updateHasUserSelectableContactlessPaymentApplications:
_updateEncodedPaymentPassDuringMigration:
_updateHasStoredValueDuringMigration:
_updateSettingsDuringMigration:
_updateCompleteHashesDuringMigration:
_updateAvailableActionsDuringMigration:
_updateOrganizationNamesDuringMigration:
_updateFrontAndBackFieldBucketsDuringMigration:
_updateLocalizedDescriptionDuringMigration:
_updateDevicePaymentApplicationsDuringMigration:
_updatePrimaryContactlessAndInAppPaymentApplicationsDuringMigration:
_updateEncodedImageSetsDuringMigration:
_repairEncodedImagesDuringMigration:
_migrateDatabase:
removeItemAtPath:error:
_notifyDatabaseChangedExternally
_notifyForFirstUnlock
dataWithBytes:length:
_decodeObjectOfClass:fromStatement:column:
_decodeObjectOfClasses:fromStatement:column:
dateWithTimeIntervalSinceReferenceDate:
_loadInitialManifestLocked
_savePassLocked:wasUpdate:
_libraryHashLockedForWatchOSMajorVersion:
_notifyDatabaseChangedWithNoop:
_saveDiffLocked:forPassWithUniqueID:
_removePassWithUniqueIDLocked:
_performTransactionWithBlock:
_saveTransactionLocked:forPassWithUniqueID:
_trimTransactionsForPassWithUniqueIDLocked:withPaymentCredentialType:
_removeTransactionWithIdentifier:forPassWithUniqueID:
_transactionsForUniqueIDLocked:withTransactionSource:withBackingData:limit:
_transactionWithIdentifierLocked:
_passUniqueIDAssociateToTransactionWithIdentifier:
_felicaTransitAppletStateForPassWithUniqueIDLocked:
_setFelicaTransitAppletStateLocked:forPassWithUniqueID:
_setCurrentEphemeralTransactionIdentifier:forPassWithUniqueID:
_currentEphemeralTransactionIdentifierForPassWithUniqueID:
_setLastAddValueAmountLocked:forPassWithUniqueID:
_lastAddValueAmountForPassWithUniqueIDLocked:
_setPendingAddValueDateLocked:forPassWithUniqueID:
_pendingAddValueDateForPassWithUniqueIDLocked:
transactionsForPassWithUniqueID:withTransactionSource:withBackingData:limit:
currentEphemeralTransactionIdentifierForPassWithUniqueID:
setFelicaTransitAppletState:forPassWithUniqueID:
setLastAddValueAmount:forPassWithUniqueID:
setPendingAddValueDate:forPassWithUniqueID:
sharedDatabase
passForUniqueID:
setPreferredPaymentApplication:forPaymentPass:
saveTransaction:forPassWithUniqueID:withPaymentCredentialType:
setCurrentEphemeralTransactionIdentifier:forPassWithUniqueID:
_notifyDatabaseChangedWithNoop:firstUnlock:
_passDBIsAvailableLocked
_passForUniqueIDLocked:includeImageSets:
_getPreferredPaymentApplicationForPaymentPass:aid:
_getDeletePendingForUniqueID:
diff:
deleteStatement
insertStatement
setIngestedDate:
timeIntervalSinceReferenceDate
stringValue
deleteTransactionsForPassStatement
insertTransactionStatement
identifier
transactionDate
transactionSource
transactionType
hasNotificationServiceData
removeTransactionStatement
trimTransactionsForPassStatement
selectTransactionsStatementWithTransactionSource:
selectTransactionWithIdentifierStatement
selectPassUniqueIDAsssociateToTransactionWithIdentifierStatement
selectFelicaTransitAppletStateForPassStatement
updateFelicaTransitAppletStateForPassStatement
insertEphemeralTransactionStatement
deleteEphemeralTransactionByPassUniqueIDStatement
currentEphemeralTransactionIdentifierStatement
selectLastAddValueAmountForPassStatement
updateLastAddValueAmountForPassStatement
selectPendingAddValueDateForPassStatement
updatePendingAddValueDateForPassStatement
stringWithCString:encoding:
_executeSQLQuery:processResultsBlock:
selectPassAndImageSetsDataStatement
selectPassDataStatement
selectPassDiffStatement
insertDiffStatement
_diffForUniqueIDLocked:
updateDeletePendingStatement
selectDeletePendingStatement
paymentApplications
updatePreferredAIDStatement
selectPreferredAIDStatement
libraryHashForWatchOSMajorVersion:
caseInsensitiveCompare:
sortedArrayUsingSelector:
npkComprehension:
manifestHashesForWatchOSMajorVersion:
dictionaryWithCapacity:
enumerateAllPassesAndDescriptionsWithBlock:
evaluateWithObject:
_databaseVersionExists:valid:
maxDatabaseVersion
_updateDatabaseVersionRow:
_insertDatabaseVersionRow:
integerValue
_attemptDatabaseOpen
setMigrationDataSource:
savePass:
saveDiff:forPassWithUniqueID:
removePassWithUniqueID:
rebuildDatabaseWithPasses:
removeTransactionWithIdentifier:forPassWithUniqueID:
transactionWithIdentifier:
passUniqueIDAssociateToTransactionWithIdentifier:
felicaTransitAppletStateForPassWithUniqueID:
lastAddValueAmountForPassWithUniqueID:
pendingAddValueDateForPassWithUniqueID:
restoreBlockForVolatilePassData
passDBIsAvailable
numberOfPasses
diffForUniqueID:
setDeletePending:forUniqueID:
enumerateAllPassesWithBlock:
hasPassesMatchingPassDescriptionPredicate:
filteredPassesUsingPassDescriptionPredicate:includeImageSets:
_handleDatabaseChangedExternally
_handleFirstUnlock
_database
_deleteStatement
_insertStatement
_insertDiffStatement
_selectPassDataStatement
_selectPassAndImageSetsDataStatement
_selectPassDiffStatement
_updateDeletePendingStatment
_selectDeletePendingStatement
_updatePreferredAIDStatement
_selectPreferredAIDStatement
_insertTransactionStatement
_removeTransactionStatement
_selectTransactionsStatement
_selectTransactionsStatementWithSource
_selectTransactionsStatementWithoutSource
_selectTransactionWithIdentifierStatement
_selectPassUniqueIDAsssociateToTransactionWithIdentifierStatement
_deleteTransactionsForPassStatement
_trimTransactionsForPassStatement
_selectFelicaTransitAppletStateForPassStatement
_updateFelicaTransitAppletStateForPassStatement
_insertEphemeralTransactionStatement
_deleteEphemeralTransactionByPassUniqueIDStatement
_currentEphemeralTransactionIdentifierStatement
_selectLastAddValueAmountForPassStatement
_updateLastAddValueAmountForPassStatement
_selectPendingAddValueDateForPassStatement
_updatePendingAddValueDateForPassStatement
_dbQueue
_isInTransaction
_manifest
_libraryHashes
_externallyChangedBroadcasts
_sendingLocalNotifyDatabaseChanged
_needsMoreLocalNotifyDatabaseChanged
_passDBIsAvailable
_initializeHIDClient
_handleButtonEvent:
setHidSystemClient:
setHidSystemQueue:
buttonHandler
setButtonHandler:
hidSystemClient
hidSystemQueue
_buttonHandler
_hidSystemClient
_hidSystemQueue
sharedServiceModeRequestController
setProvisioningDataBytes:
hasProvisioningDataBytes
provisioningDataBytes
_provisioningDataBytes
_encodedDataForContact:
_rawDefaultBillingAddresses
_encodedDataForBillingAddressDictionary:
_contactFromEncodedData:
deleteDefaultShippingAddress
deleteDefaultContactEmail
deleteDefaultContactPhone
deleteDefaultContactName
_billingAddressDictionaryFromEncodedData:
_setRawDefaultBillingAddresses:
_deleteAllDefaultBillingAddresses:
setTransactionDefaultsRequest
handleSetTransactionDefaultsRequest:
initWithQueue:takeOutTransactions:
setRemainingWork:
setTakeOutTransactions:
performingWork
remainingWork
setPerformingWork:
removeObjectAtIndex:
takeOutTransactions
_onQueue_doWorkIfNecessary
performWork:
_performingWork
_takeOutTransactions
_remainingWork
addCardAIDs:
cardAIDsCount
clearCardAIDs
cardAIDsAtIndex:
cardAIDsType
cardAIDs
setCardAIDs:
_cardAIDs
mainBundle
bundleIdentifier
configuration
bridgedClientInfoHTTPHeader
_supportedRegionsForWebService:
setUnlockRequired:
setHasUnlockRequired:
hasUnlockRequired
unlockRequired
_unlockRequired
setRelevantText:
hasRelevantText
relevantText
_relevantText
setSignedData:
setCertsBytes:
setSignatureInfoBytes:
hasSignedData
hasCertsBytes
hasSignatureInfoBytes
signedData
certsBytes
signatureInfoBytes
_certsBytes
_signatureInfoBytes
_signedData
_webServiceContext
setContext:
_deviceFailedToPair:
secureElementID
setDeviceID:
initWithContext:targetDevice:archiver:
setTransactionServiceDisabled:
setMessageServiceDisabled:
setIgnoreProvisioningEnablementPercentage:
archiveContext:
sharedWebServiceProvider
handlePreconditionNotMetWithUniqueIDs:shouldUnregister:
handlePushToken:
handleUpdatePaymentPassWithTypeIdentifier:
handlePreferredAID:forPassWithUniqueID:
handlePaymentTransactions:appletStates:forUniqueIDs:
handleAppletState:forUniqueID:
handleRemoveTransactionsWithIdentifiers:
archiveWebServiceContext:
archiveWebServiceBackgroundContext:
setNewAuthRandom:
sendWebServiceContextToWatch
showPaymentSetupForAppDisplayName:
sendPaymentOptionsDefaultsToWatch
loadWebService
setTargetDevice:
_targetDevice
paymentDevice
queueConnectionToTrustedServiceManagerForPushTopic:withCompletion:
configurationData
registrationDataWithAuthToken:completionHandler:
signData:signatureEntanglementMode:withCompletionHandler:
provisioningDataWithCompletionHandler:
setRegistrationRegionMap:primaryRegionTopic:
deviceRegion
deleteApplicationWithAID:
paymentWebService:setNewAuthRandomIfNecessaryReturningPairingState:
paymentWebServiceDidUpdateConfiguration:
paymentWebService:queueConnectionToTrustedServiceManagerForPushTopic:withCompletion:
paymentWebService:configurationDataWithCompletionHandler:
paymentWebService:registrationDataWithAuthToken:completionHandler:
paymentWebService:signData:signatureEntanglementMode:withCompletionHandler:
paymentWebService:provisioningDataWithCompletionHandler:
paymentWebService:deleteApplicationWithAID:
paymentWebService:didRegisterWithRegionMap:primaryRegionTopic:
paymentWebService:filterVerificationChannels:
paymentSupportedInCurrentRegionForWebService:
deviceDescriptionForPaymentWebService:
deviceName
bridgedClientInfo
supportsAutomaticPassPresentation
noteProvisioningUserInterfaceDidAppear
noteProvisioningUserInterfaceDidDisappear
noteProvisioningDidBegin
noteProvisioningDidEnd
paymentWebService:hasPassesOfType:
paymentWebService:canProvisionPaymentPassWithPrimaryAccountIdentifier:
paymentWebService:validateAddPreconditionsWithCompletion:
paymentWebService:addPaymentPass:withCompletionHandler:
downloadAllPaymentPassesForPaymentWebService:
paymentWebService:validateTransferPreconditionsWithCompletion:
paymentWebService:handlePotentialExpressPass:withCompletionHandler:
felicaSecureElementIsAvailable
paymentWebService:addPaymentPass:withCompletionHandlerV2:
paymentWebService:removePass:withCompletionHandler:
archiveBackgroundContext:
paymentWebService:didRegisterWithRegionMap:
paymentWebService:setNewAuthRandomIfNecessary:
setPaymentDevice:
_paymentDevice
setApplicationIdentifier:
hasApplicationIdentifier
setRequestAuthorization:
setHasRequestAuthorization:
hasRequestAuthorization
requestAuthorization
_applicationIdentifier
_requestAuthorization
showInterfaceForExpressFelicaTransitTransactionCompleteWithConcreteTransactions:ephemeralTransaction:forPass:paymentApplication:withAppletState:completion:
displayExpressFelicaTransitTransactionCompleteWithConcreteTransactions:ephemeralTransaction:forPass:paymentApplication:withAppletState:completion:
exceptionWithName:reason:userInfo:
raise
addAppletsBytes:
lifecycleStatesCount
clearLifecycleStates
lifecycleStatesAtIndex:
addLifecycleStates:
activationStatesCount
clearActivationStates
activationStatesAtIndex:
addActivationStates:
appletsBytesCount
clearAppletsBytes
appletsBytesAtIndex:
appletsBytesType
lifecycleStates
setLifecycleStates:count:
activationStates
setActivationStates:count:
appletsBytes
setAppletsBytes:
_activationStates
_lifecycleStates
_appletsBytes
messageIdentifier
setMessageIdentifier:
errorHandler
setErrorHandler:
_messageIdentifier
_errorHandler
initWithContext:responseQueue:
setResponseQueue:
queueTSMConnectionResponse:
setProtobufAction:forIncomingResponsesOfType:
provisioningDataResponse:
registrationDataResponse:
configurationDataResponse:
signDataResponse:
secureElementGetAppletsResponse:
secureElementRemoveAppletsResponse:
setNewAuthRandomResponse:
didRegisterResponse:
dumpLogsResponse:
pendingRemovalResponse:
updatePaymentPass:
setProtobufAction:forIncomingRequestsOfType:
updatePushToken:
preconditionNotMet:
handleValueAddedServiceTransactions:
preferredAIDRequest:
preferredAIDResponse:
handleWebServiceContextNeededRequest:
handlePaymentTransactions:
handleRemovedTransaction:
setExpressFelicaTransitPassResponse:
handleUpdatedAppletState:
getPairingInfoResponse:
handleShowPaymentSetupRequest:
enableServiceModeResponse:
handleTransactionDefaultsNeededRequest:
addDelegate:queue:
setProvisioningService:
setOutstandingRequests:
outstandingRequests
domain
code
componentsFromLocaleIdentifier:
provisioningActiveDeviceAssertion
setProvisioningActiveDeviceAssertion:
setActivePairedDevice:withActiveDeviceAssertionHandler:
paymentPassesWithPrimaryAccountIdentifier:completion:
_setOrResetCleanupTimerForRequest:
initWithProtobufData:type:isResponse:
_sendProtobuf:responseExpected:
_deviceIsDaytonaOrLater
_setNewAuthRandomReturningPairingState:
_getPairingInfoWithCompletion:
_setNewAuthRandomIfNecessaryReturningPairingState:
responseQueue
setLocation:
phoneNumber
paymentWebService:signData:withCompletionHandler:
SHA256Hash
initWithDomain:
synchronize
synchronizeNanoDomain:keys:
regions
mutableCopy
removeAIDsFromSecureElement:withCompletion:
savePaymentPass:forDevice:completion:
downloadRemoteAssetsWithScreenScale:suffix:completion:
removePaymentPassWithUniqueID:forDevice:requireRemoteConfirmation:completion:
redownloadAllPaymentPassesWithCompletion:
initWithIdentifier:lifecycleState:
_sendProtobuf:responseExpected:extraOptions:
failedPrecondition
passIDs
insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:completion:
passWithUniqueID:
hasValidNFCPayload
scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:handler:
identifiers
provisioningService
setIdentifiers:
actualUniqueID
cancelled
setDefaultExpressFelicaTransitPassIdentifier:applicationIdentifier:requestAuthorization:completion:
handlePotentialExpressPass:withCompletionHandler:
getAllDevices
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
secureElementCardsWithCompletion:
dumpLogsWithCompletion:
handlePendingRemovalOfPassWithUniqueID:completion:
handlePreferredAID:forPassWithUniqueID:completion:
retrieveTransactionsForPassWithUniqueID:
handleDeletePaymentTransactionWithIdentifier:passUniqueIdentifier:
cancelOutstandingSetDefaultExpressFelicaTransitPassRequests
enableServiceModeForPassWithUniqueIdentifier:completion:
cancelOutstandingEnableServiceModeRequests
sendWebServiceContextToWatch:
_serialNumbersOfAllPairedDevices
_context
_provisioningService
_outstandingRequests
_responseQueue
_provisioningActiveDeviceAssertion
connect
noteWatchOfferDisplayedForPaymentPassWithUniqueID:
beginProvisioningFromWatchOfferForPaymentPass:withCompletion:
noteProvisioningPreflightCompleteWithSuccess:error:completion:
paymentPassWithUniqueID:reply:
paymentPassWithDeviceAccountIdentifier:completion:
savePaymentPassAtURL:withUniqueID:forPairingID:completion:
removePaymentPassWithUniqueID:forPairingID:requireRemoteConfirmation:completion:
setDefaultCard:completion:
defaultCard:
defaultPaymentApplicationForPassWithUniqueID:completion:
setDefaultPaymentApplication:forPassWithUniqueID:completion:
initiateConsistencyCheckWithCompletion:
handlePendingUnpairingWithCompletion:
handlePendingiCloudSignoutWithCompletion:
setSharedPaymentWebServiceContext:forPairingID:completion:
sharedPaymentWebServiceContextForPairingID:withCompletion:
initiateLostModeExitAuthWithCompletion:
transactionsForPaymentPassWithUniqueIdentifier:withTransactionSource:withBackingData:limit:completion:
deletePaymentTransactionWithIdentifier:passUniqueIdentifier:fromDeviceWithPairingID:completion:
felicaStateWithPassUniqueIdentifier:paymentApplication:completion:
paymentPassWithUniqueIdentifier:didEnableTransactionService:
paymentPassWithUniqueIdentifier:didReceiveTransaction:
paymentPassWithUniqueIdentifier:didRemoveTransactionWithIdentifier:
serialNumber
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
_handleServerPaymentPassesChanged:
_handleDefaultCardChanged:
_clearCaches
supportsSerialNumberBasedProvisioning
requiresTransferSerialNumberBasedProvisioning
initWithUUIDString:
supportsCapability:
primarySecureElementIdentifier
secureElementIdentifier
_isApplePaySupportedInCurrentRegion
_remoteObjectProxyWithFailureHandler:
_cachedUniqueIDs
_setCachedUniqueIDs:
_cachedPassForUniqueID:
_addPassToCache:
_applyPropertiesToPass:
_removePassWithUniqueIDFromCache:
fileURL
_savePaymentPass:atURL:forDevice:completion:
_sharedPaymentWebServiceContextForDevice:withCompletion:
sharedPaymentWebServiceContextForDevice:
queueAppropriateFailedActions
setSharedPaymentWebServiceContext:forDevice:
_errorHandlerWithCompletion:
cachedUniqueIDs
setWithSet:
setCachedUniqueIDs:
cachedPasses
setCachedPasses:
initWithFileURL:error:
setDataAccessor:
setRemotePass:
watchProvisioningURL
watchProvisioningURLForPaymentPass:
isSetupAssistantProvisioningSupported
isIssuerAppProvisioningSupported
shouldShowWatchOfferForPaymentPass:withCompletion:
noteWatchOfferShownForPaymentPass:
setDefaultCardUniqueID:completion:
defaultCardUniqueID:
consistencyCheckWithCompletion:
sharedPaymentWebServiceContext
shouldShowApplePaySettingsWithCompletion:
watchPaymentWebService
deletePaymentTransactionWithIdentifier:passUniqueIdentifier:fromDevice:completion:
connectionAvailableActions
setConnectionAvailableActions:
connectionUnavailableWebServiceContext
setConnectionUnavailableWebServiceContext:
_xpcConnectionQueue
_cacheQueue
_queueAppropriateFailedActions
_cachedPasses
_connectionAvailableActions
_connectionUnavailableWebServiceContext
addPassIDs:
passIDsCount
clearPassIDs
passIDsAtIndex:
passIDsType
failedPreconditionAsString:
StringAsFailedPrecondition:
setFailedPrecondition:
setPassIDs:
_failedPrecondition
_passIDs
addIdentifiers:
identifiersCount
clearIdentifiers
identifiersAtIndex:
identifiersType
_identifiers
setActualUniqueID:
setCancelled:
setHasCancelled:
hasCancelled
setHasNeedsUnlock:
hasNeedsUnlock
hasActualUniqueID
_actualUniqueID
_cancelled
npkSetObject:forKey:
_processArgumentWithMutableDictionary:object:key:
npkDictionaryWithObjectsAndKeys:
npkFindFirstObjectMatchingCondition:
npkSafeObjectAtIndex:
npkFakeArcRetain
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
uppercaseString
npkHasContent
isAllCaps
getDevicesMatching:
synchronizeUserDefaultsDomain:keys:
floatValue
valueWithPointer:
characterAtIndex:
substringFromIndex:
isMainThread
stringByAppendingPathExtension:
dictionaryWithContentsOfFile:
currentLocale
initWithConfiguration:url:
supportedRegionsForOSVersion:deviceClass:platform:
intersectSet:
scheme
path
copyItemAtPath:toPath:error:
setSecureElementIdentifier:
setDPANSuffix:
setSupportsInAppPayment:
setSupportsContactlessPayment:
setDPANIdentifier:
setFelicaProperties:
passPropertiesForPass:
currentCalendar
component:fromDate:
locale
initWithBytes:length:encoding:
bundle
initWithPassDictionary:bundle:
applicationProxyForBundleURL:
localizedName
pluginKitProxyForURL:
containingBundle
appletDataFormat
initWithBytes:length:
hexEncoding
%@ %@
passRelevancyTuples
T@"NSMutableArray",&,N,V_passRelevancyTuples
transactionsBytes
transactionPassIDs
T@"NSMutableArray",&,N,V_transactionsBytes
T@"NSMutableArray",&,N,V_transactionPassIDs
catalogData
-[NPKProtoCatalog writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoCatalog.m
nil != self->_catalogData
T@"NSData",&,N,V_catalogData
v4@?0
v12@?0@"MKLocalSearchResponse"4@"NSError"8
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
_MKLocalSearchExternalTransitLookupParameters
/System/Library/Frameworks/MapKit.framework/MapKit
MKLocalSearchRequest
MKLocalSearch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/NPKLibrary.m
com.apple.NanoPassbook.NPKLibrary
-[NPKLibrary passDescriptions]
-[NPKLibrary paymentPassDescriptions]
B8@?0@"NPKPassDescription"4
-[NPKLibrary contactlessPaymentPassDescriptions]
-[NPKLibrary inAppPaymentPassDescriptions]
-[NPKLibrary nonPaymentPassDescriptions]
-[NPKLibrary nfcPassDescriptions]
v8@?0@"NSError"4
v8@?0@"PKPass"4
v8@?0@"PKDiff"4
v8@?0B4
v8@?0@"PKPaymentWebServiceContext"4
v16@?0@"NPKPassDescription"4I8^B12
v12@?0I4@"NSString"8
v8@?0@"NSArray"4
v16@?0@?<v@?>4I8^B12
v12@?0@"NSArray"4B8
NPKLibrary has failed to connect to nanopassd 5 times in a row in quick succession.  Disabling Passbook functionality forever.
NPKLibrary disabled
com.apple.gizmo.NanoPassbookService
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
PKPass
PKDiff
xpcConnection
T@"NSXPCConnection",R,D
passDescriptions
T@"NSArray",&,N,V_passDescriptions
preferredPaymentApplicationsCache
T@"NSMutableDictionary",&,N,V_preferredPaymentApplicationsCache
passCache
T@"NSMutableDictionary",&,N,V_passCache
passesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_passesQueue
lastSeenRelevantPassTuples
T@"NSArray",&,N,V_lastSeenRelevantPassTuples
updatingPassDescriptions
TB,N,V_updatingPassDescriptions
needsUpdatePassDescriptions
TB,N,V_needsUpdatePassDescriptions
passLibraryChangedCoalescingTimer
T@"NSTimer",&,N,V_passLibraryChangedCoalescingTimer
initialLoadComplete
TB,N,V_initialLoadComplete
workToPerformAfterInitialLoad
T@"NSMutableArray",&,N,V_workToPerformAfterInitialLoad
serverHasPasses
TB,V_serverHasPasses
serverHasPotentiallyRelevantPasses
TB,V_serverHasPotentiallyRelevantPasses
disableCaching
TB,N,V_disableCaching
needsRelevancyInformation
TB,N,V_needsRelevancyInformation
relevantPassTuples
T@"NSArray",R,N
paymentPassDescriptions
T@"NSArray",R,D,N
contactlessPaymentPassDescriptions
inAppPaymentPassDescriptions
nonPaymentPassDescriptions
nfcPassDescriptions
com.apple.NanoPassbook.NPKLibrary.PassesChanged
com.apple.NanoPassbook.NPKLibrary.PassesChanged.Internal
com.apple.NanoPassbook.NPKLibrary.RelevantPassesReceived
com.apple.NanoPassbook.NPKLibrary.RelevancyCheckComplete
com.apple.NanoPassbook.NPKLibrary.WillDeletePass
com.apple.NanoPassbook.NPKLibrary.PreferredPaymentApplicationDidChange
RelevantPassTuples
DeletedPassID
pending
configurationDataBytes
hasPending
TB,N
TB,N,V_pending
hasConfigurationDataBytes
TB,R,N
T@"NSData",&,N,V_configurationDataBytes
seid
command
infoDictionary
-[NPKProtoRemoteAdminPerformRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoRemoteAdminPerformRequest.m
nil != self->_url
nil != self->_seid
nil != self->_command
T@"NSData",&,N,V_url
T@"NSString",&,N,V_seid
T@"NSString",&,N,V_command
hasInfoDictionary
T@"NSData",&,N,V_infoDictionary
application-identifier
com.apple.NanoPassKit.NPDPassLibrary
connection
T@"NSXPCConnection",N,V_connection
serviceActive
TB,V_serviceActive
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
filter
T@"NPKPassLibraryFilter",&,N,V_filter
remoteProcessApplicationIdentifier
T@"NSString",R,N,V_remoteProcessApplicationIdentifier
remoteProcessIdentifier
Ti,R,V_remoteProcessIdentifier
delegate
T@"<NPDPassLibraryDelegate>",W,N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/PKPass+NanoPassKit.m
npkHasBarcode
TB,R
npkWatchBarcode
T@"PKBarcode",R
npkSupportsHidingBarcode
npkExpired
npkCompleteHash
T@"NSData",R
hasLogoImageSet
B12@?0@"PKPaymentApplication"4@"NSDictionary"8
i12@?0@"PKPaymentApplication"4@"PKPaymentApplication"8
UniqueID
RelevantText
npkRelevancyUniqueID
T@"NSString",R
npkRelevancyRelevantText
v16@?0@"NSDictionary"4I8^B12
webServiceContextBytes
hasWebServiceContextBytes
T@"NSData",&,N,V_webServiceContextBytes
pushToken
hasPushToken
T@"NSString",&,N,V_pushToken
dataToSign
digestToSign
entanglementMode
hasDataToSign
T@"NSData",&,N,V_dataToSign
hasDigestToSign
T@"NSData",&,N,V_digestToSign
hasEntanglementMode
Ti,N,V_entanglementMode
hasAid
T@"NSString",&,N,V_aid
PlatformIdentifier
JCOPInfo
(unknown: %i)
_internal
passTypeIdentifier
-[NPKProtoUpdatePaymentPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoUpdatePaymentPassRequest.m
nil != self->_passTypeIdentifier
T@"NSString",&,N,V_passTypeIdentifier
success
hasSuccess
TB,N,V_success
isAvailable
hasIsAvailable
TB,N,V_isAvailable
passData
-[NPKProtoGizmoInitiatedAddPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoGizmoInitiatedAddPassRequest.m
nil != self->_passData
T@"NSData",&,N,V_passData
NPKQuickPaymentSessionSource
com.apple.fake-payment-activation
v8@?0i4
expectedHash
uniqueIDs
manifestHashes
fullResyncNeeded
resyncID
hasExpectedHash
T@"NPKProtoHash",&,N,V_expectedHash
T@"NSMutableArray",&,N,V_uniqueIDs
T@"NSMutableArray",&,N,V_manifestHashes
hasFullResyncNeeded
TB,N,V_fullResyncNeeded
hasResyncID
TI,N,V_resyncID
cryptogram
challengeResponse
hasCryptogram
T@"NSData",&,N,V_cryptogram
hasChallengeResponse
T@"NSData",&,N,V_challengeResponse
(%@ outgoingResponseIdentifier %@ incomingResponseIdentifier %@ expectsPeerResponse %d)
%@, <%p> type %d isResponse %d context %@ length %lu
authToken
hasAuthToken
T@"NSString",&,N,V_authToken
passID
preferredApplicationAID
hasPassID
T@"NSString",&,N,V_passID
hasPreferredApplicationAID
T@"NSString",&,N,V_preferredApplicationAID
registrationDataBytes
hasRegistrationDataBytes
T@"NSData",&,N,V_registrationDataBytes
owningConnection
T@"NPKTransientPassAssertionConnection",W,N,V_owningConnection
uniqueID
T@"NSString",&,N,V_uniqueID
serviceModeRequested
TB,N,V_serviceModeRequested
com.apple.nanopassbook.payment
T@"<NPKTransientPassAssertionConnectionDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
transientPassRequest
T@"NPKTransientPassRequest",&,N,V_transientPassRequest
T@"NSXPCConnection",&,N,V_connection
backgrounded
TB,N,GisBackgrounded,V_backgrounded
com.apple.NPKTransientPassServer
B12@?0@"NPKTransientPassRequest"4@"NSDictionary"8
v16@?0@"NPKTransientPassRequest"4I8^B12
v12@?0@"NPKTransientPassAssertionConnection"4^B8
v8@?0@"NSDictionary"4
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
connections
T@"NSMutableSet",&,N,V_connections
transientPaymentRequests
T@"NSMutableArray",&,N,V_transientPaymentRequests
appStateMonitor
T@"BKSApplicationStateMonitor",&,N,V_appStateMonitor
T@"<NPKTransientPassAssertionServerDelegate>",W,N,V_delegate
groupID
manifestHash
style
relevantDate
ingestionDate
logoText
backgroundColor
foregroundColor
labelColor
devicePaymentApplications
devicePrimaryPaymentApplication
devicePrimaryContactlessPaymentApplication
devicePrimaryInAppPaymentApplication
preferredPaymentApplication
effectivePaymentApplicationState
privateLabel
cobranded
deletePending
hasUserSelectablePaymentApplications
logoImageEncoded
backgroundImageEncoded
localizedDescription
nfcPayload
completeHash
hasStoredValue
settings
availableActions
organizationName
felicaTransitAppletState
frontFieldBuckets
backFieldBuckets
lastAddValueAmount
pendingAddValueDate
<%@> (uniqueID %@ groupID %@ passTypeIdentifier %@ manifestHash %@ style %d relevantDate %@ ingestionDate %@ logoText %@ logoImage %@ logoImageEncoded %p backgroundColor %@ foregroundColor %@ labelColor %@ backgroundImage %@ backgroundImageEncoded %p, localizedDescription %@, devicePaymentApplications (%@) devicePrimaryPaymentApplication (%@) devicePrimaryContactlessPaymentApplication (%@) devicePrimaryInAppPaymentApplication (%@) preferredPaymentApplication (%@) effectivePaymentApplicationState %d privateLabel %d cobranded %d deletePending %d hasUserSelectableContactlessPaymentApplications %d nfcPayload %@ completeHash %@ hasStoredValue %d settings %d)
 (availableActions %@ organizationName %@ felicaTransitAppletState %@ frontFieldBuckets %@ backFieldBuckets %@ lastAddValueAmount %@ pendingAddValueDate %@)
supportsSecureCoding
T@"NSData",&,N,V_logoImageEncoded
T@"NSData",&,N,V_backgroundImageEncoded
T@"NSNumber",&,N,V_groupID
T@"NSData",&,N,V_manifestHash
Ti,N,V_style
T@"NSDate",&,N,V_relevantDate
T@"NSDate",&,N,V_ingestionDate
T@"PKNFCPayload",&,N,V_nfcPayload
TB,N,V_hasStoredValue
T@"NSData",&,N,V_completeHash
TI,N,V_settings
T@"NSString",&,N,V_logoText
logoImage
T@"PKImage",&,N,V_logoImage
T@"PKColor",&,N,V_backgroundColor
T@"PKColor",&,N,V_foregroundColor
T@"PKColor",&,N,V_labelColor
backgroundImage
T@"PKImage",&,N,V_backgroundImage
T@"NSString",&,N,V_localizedDescription
T@"NSSet",&,N,V_devicePaymentApplications
T@"PKPaymentApplication",&,N,V_devicePrimaryPaymentApplication
T@"PKPaymentApplication",&,N,V_devicePrimaryContactlessPaymentApplication
T@"PKPaymentApplication",&,N,V_devicePrimaryInAppPaymentApplication
T@"PKPaymentApplication",&,N,V_preferredPaymentApplication
Ti,N,V_effectivePaymentApplicationState
TB,N,GisPrivateLabel,V_privateLabel
TB,N,GisCobranded,V_cobranded
TB,N,V_deletePending
hasUserSelectableContactlessPaymentApplications
TB,N,V_hasUserSelectableContactlessPaymentApplications
effectiveContactlessPaymentApplicationState
Ti,R,N
T@"NSArray",&,N,V_availableActions
T@"NSString",&,N,V_organizationName
T@"PKFelicaTransitAppletState",&,N,V_felicaTransitAppletState
T@"NSArray",&,N,V_frontFieldBuckets
T@"NSArray",&,N,V_backFieldBuckets
T@"NSDecimalNumber",&,N,V_lastAddValueAmount
T@"NSDate",&,N,V_pendingAddValueDate
pass
libraryHash
previousManifestHash
catalog
lastKnownResyncID
-[NPKProtoUpdatePassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoUpdatePassRequest.m
self->_pass != nil
T@"NPKProtoPass",&,N,V_pass
hasLibraryHash
T@"NPKProtoHash",&,N,V_libraryHash
hasPreviousManifestHash
T@"NSData",&,N,V_previousManifestHash
hasCatalog
T@"NPKProtoCatalog",&,N,V_catalog
hasLastKnownResyncID
TI,N,V_lastKnownResyncID
NPKCompanionAgentDeferredActionHandler
v16@?0@"NSUUID"4@"PKPaymentWebServiceContext"8^B12
v16@?0@"NSUUID"4@"NSArray"8^B12
v16@?0@?<v@?@"NPKCompanionAgentConnection">4I8^B12
v16@?0@"NRDevice"4I8^B12
v12@?0@"NSUUID"4^B8
deferredActions
T@"NSMutableDictionary",&,N,V_deferredActions
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
deferredSharedPaymentWebServiceContexts
T@"NSMutableDictionary",&,N,V_deferredSharedPaymentWebServiceContexts
width
height
bitsPerComponent
bitsPerPixel
bytesPerRow
bitmapInfo
bitmapData
-[NPKProtoBitmap writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoBitmap.m
nil != self->_bitmapData
TQ,N,V_width
TQ,N,V_height
TQ,N,V_bitsPerComponent
TQ,N,V_bitsPerPixel
TQ,N,V_bytesPerRow
TI,N,V_bitmapInfo
T@"NSData",&,N,V_bitmapData
v12@?0@"PKPaymentApplication"4^B8
v16@?0@"PKPaymentPass"4I8^B12
com.apple.private.alloy.passbook.provisioning
v8@?0@"NSSet"4
v20@?0B4B8B12@"NSError"16
com.apple.Carousel
DisableWristDetection
Preflight issue
WRIST_DETECT_REQUIRED_ALERT_TITLE
NanoPassKit
WRIST_DETECT_REQUIRED_ALERT_MESSAGE
WRIST_DETECT_REQUIRED_ALERT_BUTTON
bridge:root=GENERAL_LINK
GIZMO_ACCOUNT_REQUIRED_ALERT_TITLE
GIZMO_ACCOUNT_REQUIRED_ALERT_MESSAGE
GIZMO_ACCOUNT_REQUIRED_ALERT_BUTTON
bridge:root=GENERAL_LINK&path=LINK_WITH_ICLOUD_LINK
PASSCODE_REQUIRED_ALERT_TITLE
PASSCODE_REQUIRED_ALERT_MESSAGE
PASSCODE_REQUIRED_ALERT_BUTTON
bridge:root=PASSCODE_ID
UNLOCK_REQUIRED_ALERT_TITLE
UNLOCK_REQUIRED_ALERT_MESSAGE
GIZMO_UNREACHABLE_ALERT_TITLE
GIZMO_UNREACHABLE_ALERT_MESSAGE
passcodeConnection
T@"PUConnection",&,N,V_passcodeConnection
systemSettingsManager
T@"NSSManager",&,N,V_systemSettingsManager
checkedWatchPasscodeAndUnlockedStatus
TB,N,V_checkedWatchPasscodeAndUnlockedStatus
checkedCompanioniCloudStatus
TB,N,V_checkedCompanioniCloudStatus
checkedWatchiCloudStatus
TB,N,V_checkedWatchiCloudStatus
checkedWristDetectionStatus
TB,N,V_checkedWristDetectionStatus
authRandomSetIfNecessary
TB,N,V_authRandomSetIfNecessary
watchConnected
TB,N,V_watchConnected
spaceAvailableOnSecureElement
TB,N,V_spaceAvailableOnSecureElement
needsPasscode
TB,N,V_needsPasscode
needsUnlock
TB,N,V_needsUnlock
needsCompanioniCloudAccount
TB,N,V_needsCompanioniCloudAccount
needsWatchiCloudAccount
TB,N,V_needsWatchiCloudAccount
needsWristDetection
TB,N,V_needsWristDetection
preflightCompletionHandler
T@?,C,N,V_preflightCompletionHandler
webService
T@"PKPaymentWebService",&,N,V_webService
companionAgentConnection
T@"NPKCompanionAgentConnection",&,N,V_companionAgentConnection
preflighting
TB,N,GisPreflighting,V_preflighting
watchPasscodeAndUnlockedQueryDate
T@"NSDate",&,N,V_watchPasscodeAndUnlockedQueryDate
PUConnection
initPUConnection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/NPKPaymentPreflighter.m
classPUConnection
/System/Library/PrivateFrameworks/PairedUnlock.framework/PairedUnlock
PairedUnlockLibrary
frameworkLibrary
hashData
hasHashData
T@"NSData",&,N,V_hashData
-[NPKProtoNewLibraryHashRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoNewLibraryHashRequest.m
self->_libraryHash != nil
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassbookAlertBundle/NPKLoyaltyEngine.m
com.apple.nanopassbook.NPKLoyaltyEngine
-[NPKLoyaltyEngine moveCardDescriptionFromGreylistToWhitelist:]_block_invoke
NPDLoyaltyEngineConfigurationChanged
T@"NSObject<OS_dispatch_queue>",&,V_internalQueue
storedValueCardDescriptions
T@"NSArray",R
whitelistedLoyaltyCardDescriptions
greylistedLoyaltyCardDescriptions
NPKTransitAppletHistoryFetcher
aidToFetch
T@"NSString",&,N,V_aidToFetch
T@"<NPKTransitAppletHistoryFetcherDelegate>",W,N,V_delegate
resultCode
responseDictionary
httpStatus
TI,N,V_resultCode
hasResponseDictionary
T@"NSData",&,N,V_responseDictionary
hasHttpStatus
Ti,N,V_httpStatus
NPKTransientPassAssertionQueue
T@"NSXPCConnection",&,N,V_xpcConnection
requestServiceMode
TB,N,V_requestServiceMode
-[NPKProtoCatalogChangedRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoCatalogChangedRequest.m
self->_catalog != nil
passAppletStates
T@"NSMutableArray",&,N,V_passAppletStates
date
T@"NSDate",&,N,V_date
paymentPass
T@"PKPaymentPass",&,N,V_paymentPass
paymentApplication
T@"PKPaymentApplication",&,N,V_paymentApplication
transaction
T@"PKPaymentTransaction",&,N,V_transaction
valueAddedServicePasses
T@"NSArray",&,N,V_valueAddedServicePasses
valueAddedServiceTransactions
T@"NSArray",&,N,V_valueAddedServiceTransactions
felicaHistory
T@"PKFelicaAppletHistory",&,N,V_felicaHistory
FakePaymentSessionInternal
com.apple.NPKFakePaymentSession.TransactionComplete
ourCurrentPass
T@"PKPass",&,N,V_ourCurrentPass
ourVasPasses
T@"NSDictionary",&,N,V_ourVasPasses
ourCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_ourCallbackQueue
ourInternalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_ourInternalQueue
ourConfirmed
TB,N,V_ourConfirmed
ourInServiceMode
TB,N,V_ourInServiceMode
timeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimer
fieldDetector
T@"PKFieldDetector",&,N,V_fieldDetector
invalidated
TB,N,V_invalidated
changeCardToken
TI,N,V_changeCardToken
com.apple.NanoPassbook.NPKGizmoServerPassesChanged
com.apple.NanoPassbook.NPKGizmoServerRelevantPassesChanged
RelevancyCheckCompleted
com.apple.NanoPassbook.NPKGizmoServerPassAdded
com.apple.NanoPassbook.NPKGizmoServerPassUpdated
com.apple.NanoPassbook.NPKGizmoServerPassRemoved
com.apple.NanoPassbook.NPKGizmoServerPaymentPassActivated
com.apple.NanoPassbook.RelevancyPotentialChanged
com.apple.NanoPassbook.PassRasterizationInvalidated
ServerHasNoPasses
ServerHasNoPotentiallyRelevantPasses
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/NPKContinuityCoordinator.m
com.apple.NanoPassKit.NPKContinuityCoordinator
-[NPKContinuityCoordinator userViewingPassWithUniqueID:isPaymentPass:]
-[NPKContinuityCoordinator userNeedsToProvisionPassWithUniqueID:]
passUniqueID
com.apple.nano.passbook.provisioning
provisionPassUserActivity
T@"NSUserActivity",&,N,V_provisionPassUserActivity
getPaymentPassesUserActivity
T@"NSUserActivity",&,N,V_getPaymentPassesUserActivity
passListUserActivity
T@"NSUserActivity",&,N,V_passListUserActivity
individualPassUserActivity
T@"NSUserActivity",&,N,V_individualPassUserActivity
currentUserActivity
T@"NSUserActivity",W,N,V_currentUserActivity
TL,V_width
TL,V_height
TL,V_bitsPerComponent
TL,V_bitsPerPixel
TL,V_bytesPerRow
TI,V_bitmapInfo
T@"NSData",&,V_bitmapData
appDisplayName
hasAppDisplayName
T@"NSString",&,N,V_appDisplayName
cancelOutstandingRequests
hasUniqueID
hasCancelOutstandingRequests
TB,N,V_cancelOutstandingRequests
B12@?0@"PKPass"4^B8
T@"NSXPCConnection",&,V_connection
whitelist
T@"PKEntitlementWhitelist",&,V_whitelist
allowsSilentAdd
NPKQuickPaymentSessionInternalQueue
NPKQuickPaymentSessionQueue
v12@?0@"NSArray"4@"NSMutableArray"8
v20@?0Q4Q12
v12@?0Q4
v8@?0@"PKContactlessInterfaceSession"4
v12@?0@"NSArray"4@"NSArray"8
v16@?0@"PKValueAddedServiceTransaction"4I8^B12
paymentSessionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_paymentSessionQueue
contactlessSessionHandle
T@"PKPaymentSessionHandle",&,N,V_contactlessSessionHandle
contactlessSession
T@"PKContactlessInterfaceSession",&,N,V_contactlessSession
contactlessValidity
TQ,N,V_contactlessValidity
authorizationValidity
TQ,N,V_authorizationValidity
confirmed
TB,N,GisConfirmed,V_confirmed
deactivating
TB,N,GisDeactivating,V_deactivating
deactivated
TB,N,GisDeactivated,V_deactivated
deactivationCompletionBlocks
T@"NSMutableArray",&,N,V_deactivationCompletionBlocks
T@"<NPKQuickPaymentSessionDelegate>",W,N,V_delegate
currentPass
T@"PKPass",&,N,V_currentPass
vasPasses
T@"NSDictionary",&,N,V_vasPasses
credential
T@"NSData",&,N,V_credential
deferAuthorization
TB,N,V_deferAuthorization
inServiceMode
TB,N,V_inServiceMode
Free Shipping
free
FedEx Ground
fedexg
Arrives in 5-7 days
8.95
UPS Next Day
upsnda
Arrives tomorrow
23.95
37.50
0.0875
Items
Sales Tax
Shipping
Target
mock-1
John
Appleseed
john@apple.com
(408) 577-1010
1 Infinite Loop
Cupertino
95014
United States
NanoPassKit one-shot fetcher requested location
completionHandler
T@?,C,N,V_completionHandler
locationFixTimeout
T@"NSObject<OS_dispatch_source>",&,N,V_locationFixTimeout
locationManager
T@"CLLocationManager",&,N,V_locationManager
inUseAssertion
T@"CLInUseAssertion",&,N,V_inUseAssertion
passAppletState
hasPassAppletState
T@"NSData",&,N,V_passAppletState
tsmRegionPushTopics
tsmRegionURLs
brokerRegionPushTopics
primaryRegionTopic
T@"NSMutableArray",&,N,V_tsmRegionPushTopics
T@"NSMutableArray",&,N,V_tsmRegionURLs
T@"NSMutableArray",&,N,V_brokerRegionPushTopics
hasPrimaryRegionTopic
T@"NSString",&,N,V_primaryRegionTopic
defaultShippingAddress
defaultBillingAddresses
defaultContactEmail
defaultContactPhone
defaultContactName
hasDefaultShippingAddress
T@"NSData",&,N,V_defaultShippingAddress
hasDefaultBillingAddresses
T@"NSData",&,N,V_defaultBillingAddresses
hasDefaultContactEmail
T@"NSData",&,N,V_defaultContactEmail
hasDefaultContactPhone
T@"NSData",&,N,V_defaultContactPhone
hasDefaultContactName
T@"NSData",&,N,V_defaultContactName
pushTopic
hasPushTopic
T@"NSString",&,N,V_pushTopic
com.apple.NPKInAppPaymentServer
NPKRemoteInterfacePresenterQueue
T@"<NPKRemoteInterfacePresenterDelegate>",W,N,V_delegate
-[NPKProtoGizmoInitiatedDeletePassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoGizmoInitiatedDeletePassRequest.m
nil != self->_passID
CREATE TABLE IF NOT EXISTS pass (unique_id TEXT NOT NULL, type_id TEXT NOT NULL, style INTEGER, hash BLOB NOT NULL, encoded_pass BLOB NOT NULL, encoded_diff BLOB, logo_text TEXT, logo_image BLOB, background_color BLOB, label_color BLOB, foreground_color BLOB, delete_pending INTEGER DEFAULT 0, background_image BLOB);
CREATE UNIQUE INDEX IF NOT EXISTS pass_unique_id_idx ON pass(unique_id)
CREATE TABLE IF NOT EXISTS key_value_store (key TEXT NOT NULL, value TEXT);
CREATE UNIQUE INDEX IF NOT EXISTS key_value_store_idx1 ON key_value_store(key)
ALTER TABLE pass ADD preferred_aid TEXT;
ALTER TABLE pass ADD nfc_payload BLOB;
ALTER TABLE pass ADD private_label INTEGER DEFAULT 0;
ALTER TABLE pass ADD cobranded INTEGER DEFAULT 0;
ALTER TABLE pass ADD device_primary_payment_application BLOB;
ALTER TABLE pass ADD preferred_payment_application BLOB;
ALTER TABLE pass ADD ingested_date INTEGER;
ALTER TABLE pass ADD complete_hash BLOB
ALTER TABLE pass ADD effective_payment_application_state INTEGER DEFAULT 0
ALTER TABLE pass ADD has_user_selectable_payment_applications INTEGER DEFAULT 0
ALTER TABLE pass ADD has_stored_value INTEGER DEFAULT 0
ALTER TABLE pass ADD settings INTEGER DEFAULT 0
ALTER TABLE pass ADD complete_hashes BLOB
ALTER TABLE pass ADD available_actions BLOB
CREATE TABLE IF NOT EXISTS transactions (pass_unique_id TEXT NOT NULL, transaction_id TEXT NOT NULL UNIQUE ON CONFLICT REPLACE, transaction_date INTEGER, transaction_sources INTEGER, encoded_transaction BLOB NOT NULL);
CREATE INDEX IF NOT EXISTS transactions_pass_unique_id_index ON transactions(pass_unique_id)
ALTER TABLE pass ADD organization_name TEXT
ALTER TABLE transactions ADD transaction_source INTEGER
ALTER TABLE transactions ADD has_notification_service_data INTEGER
ALTER TABLE pass ADD felica_transit_applet_state BLOB
ALTER TABLE pass ADD front_field_buckets BLOB
ALTER TABLE pass ADD back_field_buckets BLOB
ALTER TABLE transactions ADD transaction_type INTEGER
CREATE TABLE IF NOT EXISTS ephemeral_transactions (pass_unique_id TEXT NOT NULL UNIQUE ON CONFLICT REPLACE, transaction_id TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS ephemeral_transactions_pass_index ON ephemeral_transactions(pass_unique_id)
ALTER TABLE pass ADD last_add_value_amount TEXT
ALTER TABLE pass ADD pending_add_value_date INTEGER
ALTER TABLE pass ADD device_payment_applications BLOB
ALTER TABLE pass ADD device_primary_contactless_payment_application BLOB;
ALTER TABLE pass ADD device_primary_in_app_payment_application BLOB;
ALTER TABLE pass ADD localized_description TEXT
ALTER TABLE pass add encoded_image_sets BLOB
nanopasses.sqlite3
NPKGizmoDatabaseMigrationDataSourceSetNotification
NPKGizmoDatabaseMigrationDelegateQueue
com.apple.NanoPassbook.NPKGizmoDatabase
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/nanopassd/NPKGizmoDatabase.m
PRAGMA journal_mode = WAL;
encodedPass
ingestedDate
completeHashes
encodedImageSets
encodedPassWithoutImageSets
encodedLogoImageData
encodedBackgroundImageData
v12@?0@"PKPass"4@"NSString"8
B12@?0i4i8
%@-shm
%@-wal
DELETE FROM pass WHERE unique_id = ?
INSERT INTO pass (unique_id, type_id, style, hash, encoded_pass, encoded_image_sets, encoded_diff, logo_text, logo_image, background_color, label_color, foreground_color, background_image, nfc_payload, private_label, cobranded, device_payment_applications, device_primary_payment_application, device_primary_contactless_payment_application, device_primary_in_app_payment_application, preferred_aid, preferred_payment_application, ingested_date, complete_hash, delete_pending, effective_payment_application_state, has_user_selectable_payment_applications, has_stored_value, settings, complete_hashes, available_actions, organization_name, felica_transit_applet_state, front_field_buckets, back_field_buckets, last_add_value_amount, localized_description, pending_add_value_date) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
UPDATE pass SET encoded_diff = ? WHERE unique_id = ?
UPDATE pass SET delete_pending = ? WHERE unique_id = ?
SELECT delete_pending FROM pass WHERE unique_id = ?
UPDATE pass SET preferred_aid = ?, preferred_payment_application = ? WHERE unique_id = ?
SELECT preferred_aid FROM pass WHERE unique_id = ?
SELECT encoded_pass FROM pass WHERE unique_id = ?
SELECT encoded_pass, encoded_image_sets FROM pass WHERE unique_id = ?
SELECT encoded_diff FROM pass WHERE unique_id = ?
INSERT INTO transactions (pass_unique_id, transaction_id, transaction_date, transaction_source, transaction_type, has_notification_service_data, encoded_transaction) VALUES (?, ?, ?, ?, ?, ?, ?)
DELETE FROM transactions  WHERE pass_unique_id = ? AND transaction_id = ?
SELECT encoded_transaction FROM transactions WHERE pass_unique_id = ? AND ((? OR has_notification_service_data == ?) OR ((? OR transaction_type == ?) AND (? OR transaction_type != ?))) ORDER BY transaction_date DESC LIMIT ?
SELECT encoded_transaction FROM transactions WHERE pass_unique_id = ? AND ((? OR has_notification_service_data == ?) OR ((? OR transaction_type == ?) AND (? OR transaction_type != ?))) AND transaction_source != 0 ORDER BY transaction_date DESC LIMIT ?
SELECT encoded_transaction FROM transactions WHERE pass_unique_id = ? AND ((? OR has_notification_service_data == ?) OR ((? OR transaction_type == ?) AND (? OR transaction_type != ?))) AND transaction_source == 0 ORDER BY transaction_date DESC LIMIT ?
SELECT encoded_transaction FROM transactions WHERE transaction_id = ?
SELECT pass_unique_id FROM transactions WHERE transaction_id = ?
DELETE FROM transactions WHERE pass_unique_id = ?
DELETE FROM transactions WHERE pass_unique_id = ? AND transaction_id NOT IN (SELECT transaction_id FROM transactions WHERE pass_unique_id = ? ORDER BY transaction_date DESC LIMIT ?)
SELECT felica_transit_applet_state FROM pass WHERE unique_id = ?
UPDATE pass SET felica_transit_applet_state = ? WHERE unique_id = ?
INSERT INTO ephemeral_transactions (pass_unique_id, transaction_id) VALUES (?, ?)
DELETE FROM ephemeral_transactions WHERE pass_unique_id = ?
SELECT transaction_id FROM ephemeral_transactions WHERE pass_unique_id = ? LIMIT 1
SELECT last_add_value_amount FROM pass WHERE unique_id = ?
UPDATE pass SET last_add_value_amount = ? WHERE unique_id = ?
SELECT pending_add_value_date FROM pass WHERE unique_id = ?
UPDATE pass SET pending_add_value_date = ? WHERE unique_id = ?
SELECT unique_id, type_id, style, hash, logo_text, logo_image, background_color, label_color, foreground_color, delete_pending, background_image, nfc_payload, private_label, cobranded, device_payment_applications, device_primary_payment_application, device_primary_contactless_payment_application, device_primary_in_app_payment_application, preferred_payment_application, ingested_date, complete_hash, effective_payment_application_state, has_user_selectable_payment_applications, has_stored_value, settings, complete_hashes, available_actions, organization_name, felica_transit_applet_state, front_field_buckets, back_field_buckets, last_add_value_amount, localized_description, pending_add_value_date FROM pass
BEGIN IMMEDIATE TRANSACTION;
COMMIT;
ROLLBACK;
v16@?0@4@8^B12
B4@?0
v16@?0@"PKPaymentTransaction"4I8^B12
v8@?0@"NPKGizmoDatabase"4
-[NPKGizmoDatabase _setFelicaTransitAppletStateLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setCurrentEphemeralTransactionIdentifier:forPassWithUniqueID:]
-[NPKGizmoDatabase _currentEphemeralTransactionIdentifierForPassWithUniqueID:]
-[NPKGizmoDatabase _setLastAddValueAmountLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setPendingAddValueDateLocked:forPassWithUniqueID:]
SELECT encoded_pass, encoded_image_sets, preferred_aid FROM pass
v12@?0B4^{sqlite3_stmt=}8
UPDATE pass SET nfc_payload=? WHERE unique_id=?
UPDATE pass SET private_label=?, cobranded=? WHERE unique_id=?
UPDATE pass SET device_primary_payment_application=?, preferred_payment_application=? WHERE unique_id=?
UPDATE pass SET device_primary_contactless_payment_application=?, device_primary_in_app_payment_application=? WHERE unique_id=?
UPDATE pass SET encoded_pass=?, encoded_image_sets=? WHERE unique_id=?
UPDATE pass SET logo_image=? WHERE unique_id=?
UPDATE pass SET background_image=? WHERE unique_id=?
UPDATE pass SET device_payment_applications=? WHERE unique_id=?
UPDATE pass SET ingested_date=? WHERE unique_id=?
UPDATE pass SET complete_hash=?, complete_hashes=? WHERE unique_id=?
UPDATE pass SET front_field_buckets=?, back_field_buckets=? WHERE unique_id=?
UPDATE pass SET available_actions=? WHERE unique_id=?
UPDATE pass SET organization_name=? WHERE unique_id=?
UPDATE pass SET localized_description=? WHERE unique_id=?
UPDATE pass SET effective_payment_application_state=? WHERE unique_id=?
UPDATE pass SET has_user_selectable_payment_applications=? WHERE unique_id=?
UPDATE pass SET encoded_pass=? WHERE unique_id=?
UPDATE pass SET has_stored_value=? WHERE unique_id=?
UPDATE pass SET settings=? WHERE unique_id=?
-[NPKGizmoDatabase setPreferredPaymentApplication:forPaymentPass:]
-[NPKGizmoDatabase preferredPaymentApplicationForPaymentPass:]
v16@?0@"NSString"4I8^B12
@8@?0@"NSArray"4
v16@?0@"NSString"4@"NSArray"8^B12
v32@?0@"PKPass"4@"NPKPassDescription"8Q12Q20^B28
SELECT value FROM key_value_store WHERE KEY="version"
INSERT INTO key_value_store (key, value) VALUES ("version", "%ld")
UPDATE key_value_store SET value="%ld" WHERE key="version"
passDBIsAvailable
TB,N,V_passDBIsAvailable
database
T^{sqlite3=},R,D
deleteStatement
T^{sqlite3_stmt=},R,D
insertStatement
selectPassDataStatement
selectPassAndImageSetsDataStatement
selectPassDiffStatement
insertDiffStatement
T^{sqlite3_stmt=},R
updateDeletePendingStatement
updatePreferredAIDStatement
selectPreferredAIDStatement
selectTransactionWithIdentifierStatement
deleteTransactionsForPassStatement
trimTransactionsForPassStatement
selectFelicaTransitAppletStateForPassStatement
updateFelicaTransitAppletStateForPassStatement
insertEphemeralTransactionStatement
deleteEphemeralTransactionByPassUniqueIDStatement
currentEphemeralTransactionIdentifierStatement
selectLastAddValueAmountForPassStatement
updateLastAddValueAmountForPassStatement
selectPendingAddValueDateForPassStatement
updatePendingAddValueDateForPassStatement
T@"NSData",R,D
T@"NSDictionary",R,D
numberOfPasses
TI,R,N
NPKGizmoDatabaseChangedNotification
_NPKGizmoDatabaseExternallyChanged
WasNo-Op
WasFirstUnlock
NPKGizmoDatabasePassAddedNotification
NPKGizmoDatabasePassUpdatedNotification
NPKGizmoDatabasePassRemovedNotification
Pass
PrimaryUsagePage
PrimaryUsage
NPSButtonListener
v20@?0^v4^v8^v12^{__IOHIDEvent=}16
buttonHandler
T@?,C,N,V_buttonHandler
hidSystemClient
T^{__IOHIDEventSystemClient=},N,V_hidSystemClient
hidSystemQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_hidSystemQueue
-[NPKProtoRemovePassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoRemovePassRequest.m
NPKServiceModeRequestStateChanged
provisioningDataBytes
hasProvisioningDataBytes
T@"NSData",&,N,V_provisioningDataBytes
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/NPKWorkQueue.m
remainingWork
T@"NSMutableArray",&,N,V_remainingWork
performingWork
TB,N,V_performingWork
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
takeOutTransactions
TB,N,V_takeOutTransactions
cardAIDs
T@"NSMutableArray",&,N,V_cardAIDs
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
-[NPKProtoPass writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoPass.m
unlockRequired
hasUnlockRequired
TB,N,V_unlockRequired
-[NPKProtoMarkPaymentPassForDeleteRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoMarkPaymentPassForDeleteRequest.m
relevantText
-[NPKProtoRelevantPassTuple writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoRelevantPassTuple.m
hasRelevantText
T@"NSString",&,N,V_relevantText
signedData
certsBytes
signatureInfoBytes
hasSignedData
T@"NSData",&,N,V_signedData
hasCertsBytes
T@"NSData",&,N,V_certsBytes
hasSignatureInfoBytes
T@"NSData",&,N,V_signatureInfoBytes
targetDevice
T@"NPKPaymentWebServiceWatchTargetDevice",&,N,V_targetDevice
v12@?0B4@"NSError"8
v16@?0B4@"NSData"8@"NSData"12
paymentDevice
T@"PKPaymentDevice",&,N,V_paymentDevice
applicationIdentifier
requestAuthorization
hasApplicationIdentifier
T@"NSString",&,N,V_applicationIdentifier
hasRequestAuthorization
TB,N,V_requestAuthorization
-[NPKProtoAddPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/Generated/NPKProtoAddPassRequest.m
com.apple.NPKEFTServer
NPKExpressFelicaTransitInterfaceClientQueue
idx (%tu) is out of range (%tu)
lifecycleStates
activationStates
appletsBytes
lifecycleStatesCount
T^I,R,N
activationStatesCount
T@"NSMutableArray",&,N,V_appletsBytes
messageIdentifier
T@"NSString",C,N,V_messageIdentifier
T@,C,N,V_completionHandler
errorHandler
T@?,C,N,V_errorHandler
com.apple.private.alloy.passbook.maintenance
com.apple.NPKPaymentWebServiceCompanionTargetDevice
.GlobalPreferences
AppleLocale
v12@?0@"NSError"4@"NRActiveDeviceAssertion"8
v20@?0B4@"NSData"8@"NSData"12@"NSError"16
v16@?0@"PKPaymentDeviceRegistrationData"4@"NSString"8@"NSError"12
v8@?0@"CLLocation"4
v12@?0@"PKPaymentDeviceProvisioningData"4@"NSError"8
not present
present
com.apple.seld
v16@?0@"NSString"4@"NSString"8^B12
Configuration
v16@?0B4f8@"NSError"12
retrieveTransactions-%@
SetExpressFelicaTransitPassIdentifier
EnableServiceModeIdentifier
v12@?0B4@"NSSet"8
NPKTransactionDefaultsQueueOne
NPKWebServiceContextQueueOne
context
TI,N,V_context
provisioningService
T@"IDSService",&,N,V_provisioningService
outstandingRequests
T@"NSMutableDictionary",&,N,V_outstandingRequests
responseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
provisioningActiveDeviceAssertion
T@"NRActiveDeviceAssertion",&,N,V_provisioningActiveDeviceAssertion
T@"<NPKPaymentWebServiceCompanionTargetDeviceDelegate>",W,N,V_delegate
com.apple.NPKCompanionServer.PaymentPassesChanged
com.apple.NPKCompanionServer.DefaultCardChanged
com.apple.NPKCompanionAgent.Server
bridge:root=com.apple.Passbook&path=ADD_CARD
bridge:root=com.apple.Passbook&path=ADD_CARD&passTypeIdentifier=%@&passSerialNumber=%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/NPKCompanionAgentConnection.m
6C4614A2-1ECC-4405-9FEE-B5F0A5666961
v8@?0@"PKPaymentPass"4
v8@?0@"PKPaymentApplication"4
v8@?0@"NPKCompanionAgentConnection"4
T@"NSXPCConnection",R
cachedUniqueIDs
T@"NSMutableSet",&,V_cachedUniqueIDs
cachedPasses
T@"NSMutableDictionary",&,V_cachedPasses
connectionAvailableActions
T@"NSMutableDictionary",&,N,V_connectionAvailableActions
connectionUnavailableWebServiceContext
T@"PKPaymentWebServiceContext",&,N,V_connectionUnavailableWebServiceContext
queueAppropriateFailedActions
TB,N,V_queueAppropriateFailedActions
T@"<NPKCompanionAgentConnectionDelegate>",W,N,V_delegate
com.apple.NanoPassKit.NPKCompanionAgentConnection.PassesChanged
com.apple.NanoPassKit.NPKCompanionAgentConnection.DefaultCardChanged
failedPrecondition
passIDs
Ti,N,V_failedPrecondition
T@"NSMutableArray",&,N,V_passIDs
Passcode
WristDetection
AppleAccount
identifiers
T@"NSMutableArray",&,N,V_identifiers
general
stockholm
relevancy
com.apple.passkit
cancelled
actualUniqueID
hasCancelled
TB,N,V_cancelled
hasNeedsUnlock
hasActualUniqueID
T@"NSString",&,N,V_actualUniqueID
com.apple.nanopassbook
DefaultPaymentPass
KnownPaymentPushTopics
IEFTPPUniqueID
IEFTPPApplicationIdentifier
NeedsPaymentOptions
com.apple.NPKErrorDomain
com.apple.NanoPassKit.NPKAppleAccountChanged
com.apple.NanoPassKit.NPKAppleAccountDeleted
com.apple.NanoPassKit.NPKSharedPaymentWebServiceChanged
com.apple.NanoPassKit.ExpressTransitCardChanged
v16@?0@4I8^B12
npkHasContent
isAllCaps
NPKClassFromString
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-608.1.3/NanoPassKit/NPKUtilities.m
com.apple.NanoPassKit.LastReturnedDevice
B8@?0@"NRDevice"4
com.apple.private.alloy.connectivityindicator
CPSharedResourcesDirectory
AppSupport
/Library/NanoPasses/
PaymentCards
NanoPaymentWebServiceContext.archive
NanoPaymentWebServiceBackgroundContext.archive
RasterizedPasses
NPKInternalSyncedSettingsChangedRemotely
NPKSyncedSettings
com.apple.nanopassbook.syncedsettingschanged
~watch
main-screen-scale
NPSFixedPriorityRootQueue
did not set
/Library/Managed Preferences/mobile
plist
mobile
WatchOS
IDS_COMMUNICATION_ERROR
file
%@.%@
B8@?0@"NSDictionary"4
B12@?0@"PKPaymentApplication"4^B8
com.apple.nanopassbook.payment.field-detect-warning.outside-quick-pay
com.apple.nanopassbook.payment.field-detect-warning.in-quick-pay
com.apple.nanopassbook.payment.requested
com.apple.nanopassbook.payment.requested.no-passes
com.apple.nanopassbook.payment.requested.no-passcode
com.apple.nanopassbook.payment.requested.while-locked
com.apple.nanopassbook.payment.requested.while-busy
com.apple.nanopassbook.payment.requested.while-restricted
com.apple.NPKCompanionAgent.bulletins
com.apple.NPKCompanionAgent.started
com.apple.NPKCompanionAgent.WillSetExpressTransit
StoreDemoMode
com.apple.demo-settings
ENABLED
disabled
PKBarcodeFormat
PKBarcodeFormatUnknown, PKBarcodeFormatQR, PKBarcodeFormatPDF417, PKBarcodeFormatAztec, PKBarcodeFormatCode128
NPKProtoRelevantPassesRequest
NSCopying
NPKProtoRetrievePaymentTransactionsResponse
NPKProtoCatalog
NPKTransitStationCodeResolver
NPKGizmoServerProtocol
NSObject
NPKLibrary
NPKGizmoClientProtocol
NPKProtoConfigurationDataResponse
NPKProtoRemoteAdminPerformRequest
NPDPassLibrary
PDXPCServiceExportedInterface
NanoPassKit
NPKRelevancy
NPKProtoConfigurationDataRequest
NPKProtoWebServiceContextDidChangeRequest
NPKProtoQueueTSMConnectionResponse
NPKProtoUpdatePushTokenRequest
NPKProtoSignDataRequest
WeakObservers
NPKProtoUpdatePaymentPassRequest
NPKProtoMarkPaymentPassForDeleteResponse
NPKProtoRemoteAdminAvailabilityChangeRequest
NPKProtoDumpLogsRequest
NPKProtoGizmoInitiatedAddPassRequest
NPKQuickPaymentSessionSource
NPKProtoRelevantPassesPendingRequest
NPKProtoResyncNeededRequest
NPKProtoSecureElementSetNewAuthRandomResponse
NPKProtoAdditions
NPKProtoRegistrationDataRequest
NPKProtoSetPreferredPaymentApplicationResponse
NPKProtoRegistrationDataResponse
NPKTransientPassRequest
NPKTransientPassAssertionServerProtocol
NPKTransientPassAssertionConnection
NPKTransientPassAssertionServer
NSXPCListenerDelegate
NPKTransientPassAssertionConnectionDelegate
NPKPassDescription
NSSecureCoding
NSCoding
NPKProtoUpdatePassRequest
NPKCompanionAgentConnectionDeferredActionHandler
NPKProtoRemoteAdminAvailabilityRequest
NPKProtoBitmap
NPKPaymentPreflighter
NPKProtoRetrievePaymentTransactionsRequest
NPKProtoSecureElementGetAppletsRequest
NPKProtoHash
NPKProtoNewLibraryHashReceivedRequest
NPKProtoNewLibraryHashRequest
NPKLoyaltyEngine
NPKTransitAppletHistoryFetcher
NPKProtoRemoteAdminPerformResponse
NPKTransientPassAssertion
NPKProtoCatalogChangedRequest
NPKProtoHandlePaymentTransactionsRequest
NPKProtoSecureElementGetPairingInfoResponse
PKContactlessInterfaceTransactionContext
NPKFakePaymentSession
PKFieldDetectorObserver
WatchKitSupport
NPKContinuityCoordinator
NPKProtoProvisioningDataRequest
NPKBitmapImage
NPKProtoShowPaymentSetupRequest
NPKProtoEnableServiceModeRequest
NPKPassLibraryFilter
NPKQuickPaymentSession
PKContactlessInterfaceSessionDelegate
NPKOneShotLocationFetcher
CLLocationManagerDelegate
NPKProtoRemoteAdminAvailabilityResponse
NPKProtoHandleAppletStateChangeRequest
NPKProtoDeviceDidRegisterRequest
NPKProtoDumpLogsResponse
NPKProtoSetTransactionDefaultsRequest
NPKProtoQueueTSMConnectionRequest
NPKInAppPaymentInterfaceServerExportedInterface
NPKRemoteInterfacePresenter
NPKProtoGizmoInitiatedDeletePassRequest
0"0@
NPKGizmoDatabase
NPKPMUButtonListener
NPKProtoRemovePassRequest
NPKServiceModeRequestController
NPKProtoProvisioningDataResponse
NPKProtoSecureElementGetPairingInfoRequest
NPKPaymentOptionsSerialization
NPKWorkQueue
NPKProtoWebServiceContextNeededRequest
NPKProtoSecureElementRemoveAppletsRequest
NPKPaymentWebServiceTargetDevice
NPKProtoSetPreferredPaymentApplicationRequest
NPKProtoPass
NPKProtoEnableServiceModeResponse
NPKProtoMarkPaymentPassForDeleteRequest
NPKProtoRelevantPassTuple
NPKProtoSignDataResponse
NPKQuickPaymentSessionCleanupDelegate
NPKQuickPaymentSessionDelegate
NPKSharedWebServiceProvider
NPKPaymentWebServiceCompanionTargetDeviceDelegate
NPKPaymentWebServiceWatchTargetDevice
PKPaymentWebServiceTargetDeviceProtocol
PKPaymentWebServiceArchiver
NPKProtoSetIEFTPPUniqueIDRequest
NPKProtoTransactionDefaultsNeededRequest
NPKProtoAddPassRequest
NPKExpressFelicaTransitInterfaceServerExportedInterface
NPKExpressFelicaTransitInterfaceClient
NPKProtoSecureElementGetAppletsResponse
NPKPaymentWebServiceCompanionTargetDeviceOutstandingRequest
NPKPaymentWebServiceCompanionTargetDevice
IDSServiceDelegate
NPKProtoHandleValueAddedServiceTransactionsRequest
NPKProtoSecureElementSetNewAuthRandomRequest
NPKProtoDeviceDidRegisterResponse
NPKCompanionServerProtocol
NPKCompanionClientProtocol
NPKCompanionAgentConnection
NPKProtoSecureElementRemoveAppletsResponse
NPKProtoPaymentPreconditionsNotMetRequest
NPKProtoHandleRemoveTransactionsRequest
NPKProtoSetIEFTPPUniqueIDResponse
NilProtection
#8@0:4
@12@0:4^{_NSZone=}8
v8@0:4
v12@0:4@8
I8@0:4
@12@0:4I8
@8@0:4
B12@0:4@8
@"NSMutableArray"
@"NSData"
@12@0:4@8
v24@0:4@8@12@16@?20
@"NSObject<OS_dispatch_queue>"
v12@0:4@?8
v12@0:4@?<v@?@"NSArray"B>8
v12@0:4@?<v@?@"NSArray">8
v16@0:4@8@?12
v16@0:4@"NSString"8@?<v@?@"PKPass">12
v16@0:4@"NSString"8@?<v@?@"PKDiff">12
v28@0:4@8@12@16@20@?24
v28@0:4@"NSString"8@"NSNumber"12@"NSNumber"16@"NSNumber"20@?<v@?@"NSData">24
v16@0:4@"NSString"8@?<v@?B>12
v12@0:4B8
v12@0:4@?<v@?>8
v16@0:4@8@12
v16@0:4@"NSString"8@"NSString"12
v16@0:4@"NSString"8@?<v@?@"NSString">12
v20@0:4@8@12@?16
v20@0:4@"NSString"8@"NSString"12@?<v@?I@"NSString">16
v16@0:4@"NSData"8@?<v@?B@"NSError">12
v20@0:4@"NSArray"8@"NSArray"12@?<v@?>16
v24@0:4@8@12@16@20
v24@0:4@"PKFelicaAppletHistory"8@"PKPaymentApplication"12@"NSString"16@"NSDate"20
v16@0:4@"PKFelicaTransitAppletState"8@"NSString"12
v16@0:4@"NSDecimalNumber"8@"NSString"12
v12@0:4@?<v@?@"PKPaymentWebServiceContext">8
v16@0:4@"PKPaymentWebServiceContext"8@?<v@?B>12
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v20@0:4@8@?12@16
@12@0:4@?8
@"NSObject<OS_dispatch_semaphore>"
@"NSXPCConnection"
@"NSDate"
@"NSArray"
@"NSMutableDictionary"
@"NSTimer"
{?="pending"b1}
@"NSString"
i8@0:4
@"NPKPassLibraryFilter"
@"<NPDPassLibraryDelegate>"
@16@0:4@8@12
v12@0:4i8
@12@0:4i8
i12@0:4@8
{?="entanglementMode"b1}
v24@0:4@8:12@16@20
v20@0:4@8@12@16
{?="pending"b1"success"b1}
{?="isAvailable"b1}
v12@0:4I8
@"<NPKQuickPaymentSessionSourceDelegate>"
@"NPKPMUButtonListener"
@"PKPass"
@"NSDictionary"
@"NPKProtoHash"
{?="resyncID"b1"fullResyncNeeded"b1}
@16@0:4{CGSize=ff}8
v16@0:4{CGSize=ff}8
@"NPKTransientPassAssertionConnection"
v12@0:4@"NSString"8
@20@0:4@8@12@16
@"<NPKTransientPassAssertionConnectionDelegate>"
@"NPKTransientPassRequest"
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v12@0:4@"NPKTransientPassAssertionConnection"8
v16@0:4@"NPKTransientPassAssertionConnection"8@"NPKTransientPassRequest"12
v16@0:4^@8^B12
@"<NPKTransientPassAssertionServerDelegate>"
@"NSXPCListener"
@"NSMutableSet"
@"BKSApplicationStateMonitor"
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@16@0:4#8@12
B16@0:4@8I12
@"PKImage"
@"NSNumber"
@"PKNFCPayload"
@"PKColor"
@"NSSet"
@"PKPaymentApplication"
@"PKFelicaTransitAppletState"
@"NSDecimalNumber"
@"NPKProtoCatalog"
@"NPKProtoPass"
{?="lastKnownResyncID"b1"resyncID"b1}
v16@0:4@?8@12
Q8@0:4
v16@0:4Q8
v16@0:4B8@12
@?8@0:4
@"PUConnection"
@"NSSManager"
@"PKPaymentWebService"
@"NPKCompanionAgentConnection"
@"<NPKTransitAppletHistoryFetcherDelegate>"
{?="httpStatus"b1}
@"PKPaymentPass"
@"PKPaymentTransaction"
@"PKFelicaAppletHistory"
v16@0:4@"PKFieldDetector"8@"PKFieldProperties"12
v12@0:4@"PKFieldDetector"8
@"NSObject<OS_dispatch_source>"
@"PKFieldDetector"
v16@0:4@8B12
@"NSUserActivity"
@12@0:4^{CGImage=}8
^{CGImage=}8@0:4
L8@0:4
v12@0:4L8
{?="cancelOutstandingRequests"b1}
B20@0:4@8@12@16
@"PKEntitlementWhitelist"
v12@0:4@"PKContactlessInterfaceSession"8
v20@0:4@"PKContactlessInterfaceSession"8@"PKPaymentApplication"12@"PKPaymentPass"16
v24@0:4@"PKContactlessInterfaceSession"8@"PKPaymentApplication"12@"PKPaymentPass"16@"NSArray"20
v16@0:4@"PKContactlessInterfaceSession"8@"PKContactlessInterfaceTransactionContext"12
v20@0:4@8I12I16
v20@0:4@"PKContactlessInterfaceSession"8I12I16
v16@0:4@"PKContactlessInterfaceSession"8@"PKFieldProperties"12
v16@0:4@8I12
v16@0:4@"PKContactlessInterfaceSession"8I12
B32@0:4@8@12@16@20B24B28
v28@0:4B8B12Q16@24
B12@0:4@?8
v20@0:4Q8@?16
v28@0:4Q8Q16@?24
@"<NPKQuickPaymentSessionDelegate>"
@"PKPaymentSessionHandle"
@"PKContactlessInterfaceSession"
v20@0:4@"CLLocationManager"8@"CLLocation"12@"CLLocation"16
v16@0:4@"CLLocationManager"8@"NSArray"12
v16@0:4@"CLLocationManager"8@"CLHeading"12
B12@0:4@"CLLocationManager"8
v20@0:4@8i12@16
v20@0:4@"CLLocationManager"8i12@"CLRegion"16
v20@0:4@"CLLocationManager"8@"NSArray"12@"CLBeaconRegion"16
v20@0:4@"CLLocationManager"8@"CLBeaconRegion"12@"NSError"16
v16@0:4@"CLLocationManager"8@"CLRegion"12
v16@0:4@"CLLocationManager"8@"NSError"12
v20@0:4@"CLLocationManager"8@"CLRegion"12@"NSError"16
v16@0:4@8i12
v16@0:4@"CLLocationManager"8i12
v12@0:4@"CLLocationManager"8
v16@0:4@"CLLocationManager"8@"CLVisit"12
@"CLLocationManager"
@"CLInUseAssertion"
{?="success"b1}
v36@0:4@8@12@16i20@24@28@?32
v36@0:4@"PKPaymentRequest"8@"NSString"12@"NSString"16i20@"NSString"24@"NSNumber"28@?<v@?B@"NSError">32
v16@0:4@"PKRemotePaymentRequest"8@?<v@?B>12
@"<NPKRemoteInterfacePresenterDelegate>"
^{sqlite3=}8@0:4
^{sqlite3_stmt=}8@0:4
^{sqlite3_stmt=}12@0:4I8
@20@0:4@8^{sqlite3_stmt=}12i16
@20@0:4#8^{sqlite3_stmt=}12i16
v20@0:4@8@12i16
@24@0:4@8I12I16I20
v16@0:4B8B12
v16@0:4@8^B12
@16@0:4@8B12
@16@0:4@8^@12
i16@0:4^B8^B12
^{sqlite3=}
^{sqlite3_stmt=}
v12@0:4^{__IOHIDEvent=}8
^{__IOHIDEventSystemClient=}8@0:4
v12@0:4^{__IOHIDEventSystemClient=}8
^{__IOHIDEventSystemClient=}
{?="pending"b1"unlockRequired"b1}
v16@0:4@"NPKQuickPaymentSession"8@"PKPass"12
v24@0:4@"NPKQuickPaymentSession"8@"PKPass"12@"NSArray"16@"NSArray"20
v20@0:4@8I12@16
v20@0:4@"NPKQuickPaymentSession"8I12@"PKContactlessInterfaceTransactionContext"16
v12@0:4@"NPKQuickPaymentSession"8
v16@0:4@"NSArray"8B12
v20@0:4@"NSArray"8@"NSDictionary"12@"NSArray"16
v12@0:4@"NSArray"8
v12@0:4@"PKPaymentWebServiceContext"8
v12@0:4@"PKPaymentWebServiceBackgroundContext"8
v12@0:4@?<v@?B>8
@"NPKPaymentWebServiceWatchTargetDevice"
v12@0:4@"PKPaymentWebService"8
v20@0:4@"PKPaymentWebService"8@"NSString"12@?<v@?B@"NSError">16
v16@0:4@"PKPaymentWebService"8@?<v@?@"PKPaymentDeviceConfigurationData"@"NSError">12
v20@0:4@"PKPaymentWebService"8@"NSString"12@?<v@?@"PKPaymentDeviceRegistrationData"@"NSError">16
v24@0:4@8@12I16@?20
v24@0:4@"PKPaymentWebService"8@"NSData"12I16@?<v@?@"NSData"@"PKSecureElementSignatureInfo"@"NSError">20
v16@0:4@"PKPaymentWebService"8@?<v@?@"PKPaymentDeviceProvisioningData"@"NSError">12
v16@0:4@"PKPaymentWebService"8@"NSString"12
v20@0:4@"PKPaymentWebService"8@"NSDictionary"12@"NSString"16
@"NSArray"16@0:4@"PKPaymentWebService"8@"NSArray"12
i12@0:4@"PKPaymentWebService"8
@"NSString"12@0:4@"PKPaymentWebService"8
@"NSArray"8@0:4
v16@0:4@"PKPaymentWebService"8@?<v@?B@"NSData"@"NSData">12
B16@0:4@"PKPaymentWebService"8I12
B16@0:4@"PKPaymentWebService"8@"NSString"12
v16@0:4@"PKPaymentWebService"8@?<v@?B@"NSError">12
v20@0:4@"PKPaymentWebService"8@"PKPaymentPass"12@?<v@?>16
v20@0:4@"PKPaymentWebService"8@"PKPaymentPass"12@?<v@?@"NSSet">16
v20@0:4@"PKPaymentWebService"8@"PKPaymentPass"12@?<v@?@"PKPaymentPass">16
v20@0:4@"PKPaymentWebService"8@"PKPass"12@?<v@?B@"NSError">16
@"PKPaymentDevice"
{?="cancelOutstandingRequests"b1"requestAuthorization"b1}
v32@0:4@8@12@16@20@24@?28
v32@0:4@"NSArray"8@"PKPaymentTransaction"12@"PKPass"16@"PKPaymentApplication"20@"PKFelicaTransitAppletState"24@?<v@?B>28
^I8@0:4
I12@0:4I8
v16@0:4^I8I12
{?="list"^I"count"I"size"I}
v28@0:4@8@12@16@20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@8@12@16@20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@8@12@16B20@24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@8@12@16B20@24@28
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
@16@0:4I8@12
v24@0:4@8@12B16@?20
@20@0:4@8B12@16
@"<NPKPaymentWebServiceCompanionTargetDeviceDelegate>"
@"IDSService"
@"NRActiveDeviceAssertion"
v16@0:4@"PKPaymentPass"8@?<v@?B@"NSError">12
v20@0:4B8@12@?16
v20@0:4B8@"NSError"12@?<v@?>16
v12@0:4@?<v@?@"NSSet">8
v16@0:4@"NSString"8@?<v@?@"PKPaymentPass">12
v16@0:4@"NSString"8@?<v@?@"NSSet">12
v24@0:4@"NSURL"8@"NSString"12@"NSUUID"16@?<v@?B>20
v24@0:4@"NSString"8@"NSUUID"12B16@?<v@?B@"NSError">20
v12@0:4@?<v@?@"NSString">8
v16@0:4@"NSString"8@?<v@?@"PKPaymentApplication">12
v20@0:4@"PKPaymentApplication"8@"NSString"12@?<v@?@"PKPaymentPass">16
v20@0:4@"PKPaymentWebServiceContext"8@"NSUUID"12@?<v@?>16
v16@0:4@"NSUUID"8@?<v@?@"PKPaymentWebServiceContext">12
v12@0:4@?<v@?@"NSError">8
v28@0:4@8I12I16i20@?24
v28@0:4@"NSString"8I12I16i20@?<v@?@"NSSet">24
v24@0:4@"NSString"8@"NSString"12@"NSUUID"16@?<v@?@"NSError">20
v20@0:4@"NSString"8@"PKPaymentApplication"12@?<v@?@"PKFelicaTransitAppletState">16
v16@0:4@"PKPaymentPass"8@?<v@?B@"NSSet">12
v16@0:4@"NSString"8B12
v16@0:4@"NSString"8@"PKPaymentTransaction"12
@?12@0:4@?8
@"<NPKCompanionAgentConnectionDelegate>"
@"PKPaymentWebServiceContext"
{?="cancelled"b1"needsUnlock"b1"pending"b1"success"b1}
Notice: Resolving station codes for unique ID %@
Notice: Resolved station codes for unique ID %@: %@
Notice: Failed to resolve station codes for unique ID %@: %@
Notice: No station codes for unique ID %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: NPKLibrary is a singleton; please do not call -init directly)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Singleton should never be deallocated)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Calling %s on a NPKLibrary that has failed to update its pass descriptions too many times)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Calling %s on a NPKLibrary that has failed to update its pass descriptions to many times)
Error: Found unencrypted stored value card; this is invalid and will not be used in quick pay: %@
Error: Failed to get pass from nanopassd
Error: Failed to talk to nanopassd to delete payment pass with ID %@
Error: Failed to get shared web service context
Notice: %@ %@
Error: Failed to set preferred payment application
Error: Failed to set express transit card via nanopassd: error
Error: Failed to get secure element ID from nanopassd: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to add payment passes from gizmo)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: -addPass: can only take passes that were initialized with underlying pass data)
Error: Unable to communicate to nanopassd to add pass: %@
Error: Unable to add value added service transactions: %@ error: %@
Error: Unable to add payment transactions: %@ error: %@
Error: Unable to process Felica transactions with error: %@
Error: Unable to process Felica applet state with error: %@
Error: Unable to process added value with error: %@
Error: Unable to process ended service mode request: %@
Error: Unable to request web service update
Error: Failed to connect to nanopassd to obtain new list of passes: %@
Error: Failed to connect to nanopassd to obtain new list of passes
Notice: NSXPCConnection interrupted
Notice: Connection to service invalidated, re-creating
Notice: Client changing needsRelevancyInformation from %d to %d
Error: Pass DB never became available!
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot call -performWorkAfterFirstLibraryLoad: with nil work block)
Notice: performing work immediately
Notice: queueing work
Error: failed with error %@
Notice: Pass library changed
Notice: Broadcasting relevant pass IDs: %@
Notice: Suppressing broadcast of relevant pass IDs, since it's the same as what we have.
Notice: %@
Error: Unable to broadcast pass added: %@
Error: Unable to broadcast pass updated: %@
Error: Unable to broadcast pass removed: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot calculate npk complete hash for version %llu)
Notice: Session source received PMU button event
Notice: Sesssion source is delegating button event
Notice: Outstanding payment sessions; ignoring
Notice: Session source initial precondition state is %d
Notice: No initial pass; session source reporting no cards
Notice: Session source providing session to delegate
Notice: Payment session failed to start; session source reporting busy
Notice: Service %@ sent protobuf (%@) destinations %@ priority %ld options %@: identifier %@ success %d error %@
Notice: found resource at path %@
Notice: unable to find first page of PDF document
Notice: unable to create PDF document
Notice: unable to find resource at path %@
Notice: returning %@
Notice: Resizing image %@ from %f x %f to %f x %f to cover %f x %f
Notice: Resizing image %@ from %f x %f to cover %f x %f would upscale, ignoring
Notice: Connection %@ interrupted
Notice: Connection %@ invalidated
Notice: Connection accepted; resuming
Warning: Process %d attempted to access payment service without entitlement!
Notice: NPKTransientPassAssertionServer initializing
Notice: %d
Notice: state %@ was backgrounded %d is now backgrounded %d
Notice: decoding logo image from data on demand
Notice: decoding background image from data on demand
Notice: Perform action when companion agent is available: %@
Notice: Fetched deferred shared web service context %@ for device %@
Notice: Setting deferred shared web service context: %@
Notice: Performing deferred actions
Notice: Pairing ID %@: shared web service context %@
Notice: Pairing ID %@: %u actions
Notice: Removing deferred data for pairing ID %@ (deferred action count %u deferred shared context %@)
Notice: Deferred action handler: companion agent started
Notice: Deferred action handler: device became active
Notice: Deferred action handler: device paired
Notice: Deferred action handler: device unpaired
Notice: Deferred action handler: device pairing failure
Notice: Transfer to companion preflight: watch is connected
Notice: Transfer to companion preflight: watch is not connected
Notice: Checking watch connected state
Notice: gizmo connected
Notice: gizmo not connected
Notice: Checking companion iCloud account state
Notice: has companion account
Notice: does not have companion account
Notice: Checking watch iCloud account state
Notice: Device is pairing
Notice: passcode enabled %d device passcode locked %d error %@
Notice: Setting auth random if necessary
Notice: query date %@ now %@
Notice: Setting auth random if necessary at the beginning of the provisioning flow
Notice: Auth random set if necessary (success %d)
Notice: success: %d
error: %@
preflighting: %d
checked passcode/unlocked: %d
checked companion iCloud account: %d
checked watch iCloud account: %d
checked wrist detect: %d
needsPasscode: %d
needsUnlock: %d
needsGizmoiCloudAccount: %d
needsWristDetection: %d
gizmo connected: %d
space available on SE: %d
auth random set if necessary: %d
Notice: Invoking preflight handler with success %d error %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Please use +[NPKLoyaltyEngine sharedQuickPaymentLoyaltyEngine] instead of -[[NPKLoyaltyEngine alloc] init])
Notice: populated stored value card descriptions: %@ whitelisted descriptions: %@ greylisted descriptions: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s whitelist already contained description)
Notice: History fetcher set AID to %@
Notice: History fetcher received fetch request
Notice: Transient pass assertion connection interrupted
Notice: Transient pass assertion: resyncing state
Error: Couldn't get remote object proxy
Notice: Fake payment session: setting current pass %@
Notice: Fake payment session: setting VAS passes %@
Notice: Fake payment session: detected field
Notice: Fake payment session: confirming session for pass %@
Notice: Fake payment session: renewing session for pass %@
Notice: Fake payment session: deactivating session
Notice: Fake payment session: setting timer
Notice: Fake payment session: handling timeout
Notice: Fake payment session: Got transaction complete Darwin notification
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Don't call -[NPKContinuityController init] but instead use singleton!)
Notice: Continuity: user is viewing pass list
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil uniqueID)
Notice: %@ %d
Notice: Continuity: user needs payment passes
Notice: Invalidating old activity %@
Notice: New activity was already current, calling -becomeCurrent again: %@
Notice: session: %@ deactivated %d
Notice: Payment session: setting current pass to %@
Warning: Failed to enable service mode!
Warning: Cannot disable persistent card emulation on a session!
Notice: Found conflicting VAS passes with same merchant ID: %@ and %@
Notice: Preferred / earlier pass is: %@
Notice: Returning all whitelisted VAS passes: %@ greylisted passes: %@ stored value passes: %@
Notice: Quick payment session: confirming session
Notice: session state %u
Notice: Quick payment session: deactivating session
Notice: deactivating %d deactivated %d
Notice: underlying session deactivated
Notice: pass %@ whitelisted %@ greylisted %@
Notice: success %d now activated %d session confirmed %d
Notice: %@ whitelisted %@ greylisted %@ (session %@)
Notice: Using VAS passes: whitelist %@ greylist %@
Notice: VAS success %d payment success %d session confirmed %d
Notice: Invoking callback for activation: success %d invokeOnSuccess %d contactlessValidity %u pass %@
Notice: Quick payment session: Starting contactless session on session queue
Notice: Was not first in queue; tearing down and invalidating session
Notice: No contactless session; marking as deactivated
Notice: Enabling persistent card emulation
Notice: No contactless session; not yet enabling persistent card emulation
Notice: Quick payment session: updating with current pass and loyalty state
Notice: Quick payment session: did enter field
Notice: Quick payment session: did exit field
Notice: Quick payment session: did fail transaction for AID %@ and pass with unique ID %@
Notice: Quick payment session: Session timed out for AID %@ and pass with unique ID %@
Notice: Ignoring timeout for service mode (should get persistent card emulation event instead)
Notice: Quick payment session: Session failed for AID %@ and pass with unique ID %@
Notice: Quick payment session: Received Start Transaction
Notice: In service mode; ignoring Start Transaction
Notice: Quick payment session: Received activity timeout
Notice: In service mode; ignoring activity timeout
Notice: Quick payment session: Received Finish Transaction
Notice: Quick payment session: ended persistent card emulation
Notice: Quick payment session: selected payment
Notice: Quick payment session: selected VAS
Notice: Quick payment session: failed deferred authorization
Notice: Quick payment session: has pending server request, sending timeout event
Notice: %@ %@ %@ %@ %@
Notice: Quick payment session: Loyalty engine configuration changed
Notice: Can determine device location.
Notice: Start updating location
Notice: Event handler fired
Notice: Immediately retrieved location
Notice: Returning provisioning device data without location
Notice: Location did update
Notice: Found candidate location
Notice: Location did fail
Notice: Remote interface presenter connection interrupted
Notice: Remote interface presenter connection invalidated
Notice: Request to present in-app payment interface for host application: %@ payment request: %@
Error: Remote object proxy error handler for present in-app payment interface invoked: %@
Notice: Request to present continuity payment interface for remote payment request: %@
Error: Remote object proxy error handler for present continuity payment interface invoked: %@
Error: %@: Could not execute SQL: %@: [%d, %s]
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "%@" statement)
Notice: Not opening database because we don't have what we need to migrate it
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Couldn't open %@ because of auth failure)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Couldn't open %@ (result %d))
Error: Couldn't set journal mode on database (result %d)
Notice: NPKGizmoDatabase: schema applied successfully: %d
Notice: Generating potentially-missing description fields
Error: Database is in a bad state; deleting and recreating
Notice: Gizmo database opened! Broadcasting database changed notification
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare deletion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare insertion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update delete pending" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass diff" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass data" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "insert transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "remove transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions with source for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions without source for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select delete transactions" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transit applet state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update transit applet state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "insert ephemeral transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "delete ephemeral transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select last add value amount" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update last add value amount" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pending add value date" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update pending add value date" statement)
Notice: Lazily loading initial manifest
Error: *** CORRUPTED / INVALID PASS DATABASE: Unable to prepare "select pass descriptions" statement; this most likely means you need to delete the database at "%@" and kill %@
Notice: Initial manifest encountered key %@ value %@
Notice: Loaded initial manifest: %@
Warning: failed to unarchive: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot save nil pass)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Pass %@ has nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Pass %@ has nil complete hash)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Nil database handle; did you check passDBIsAvailable before calling?)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unique ID %@ is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot remove pass with nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Transaction is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Transaction Unique ID is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: pass Unique ID could not be nil)
Notice: NPKGizmoDatabase already sending DB change, so coalescing
Notice: NPKGizmoDatabase alerting of DB change
Notice: Finished alerting of DB change, but a coalesced change was detected...rebroadcasting
Notice: Alerting external clients of DB change...
Notice: Saving diff %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Insert failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Insert transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete transacion failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Trim transactions failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Updating Felica transit applet state failed: %s; %s)
Notice: Updating description %@ with new Felica transit applet state %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil pass unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete ephemeral transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Setting last add value amount failed: %s; %s)
Notice: Updating description %@ with new last add value amount %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Setting pending add value date failed: %s; %s)
Notice: Updating description %@ with new pending add value date %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Save diff failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: setDeletePending:forUniqueID: can't accept nil uniqueID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Update delete pending failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil payment pass)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ did not contain payment application %@ (has applications = %@))
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Update preferred AID failed: %s; %s)
Notice: Updating description %@ with new preferred payment application %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Received invalid watch OS version %lu)
Notice: NPKGizmoDatabase: on-disk version %ld out of date, migrating to current version %ld
Notice: NPKGizmoDatabase: migration success = %d
Notice: NPKGizmoDatabase: on-disk version %ld matches current version
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Invalid pass DB version string: %@)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot save unsupported database version %ld)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to save version number to DB: %ld)
Notice: We were expecting a DB change, so suppressing DB reload
Notice: NPKGizmoDatabase DB changed externally, reloading
Notice: First unlock detected
Notice: Retrying opening database
Notice: initializing HID client
Error: ButtonController:IOHIDEventSystemClientCreate create failed
Notice: Sending default shipping address
Notice: Sending default contact email
Notice: Sending default contact phone
Notice: Sending default contact name
Notice: Sending %d default billing addresses
Notice: Decoded default shipping address
Notice: Decoded default contact email
Notice: Decoded default contact phone
Notice: Decoded default contact name
Notice: Decoded %d default billing addresses
Error: Unable to decode contact: %@
Error: Unable to decode billing address: %@
Notice: ending XPC transaction for work
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: NPKWorkQueue was performing work, but somehow self.performingWork was NO)
Notice: taking out XPC transaction for work
Notice: Cleanup delegate got session complete for reason %d with transaction %@ and Felica history %@ for unique ID %@
Notice: Loading web service context
Notice: Device unpaired
Error: No web service context from NPKCompanionAgent; starting fresh!
Notice: Device failed to pair: %@
Error: Should not be receiving precondition not met messages from Bridge (%@)
Error: Should not be receiving payment transactions from Bridge (%@ %@ %@)
Error: Should not be receiving applet state from Bridge (%@ %@)
Error: Should not be receiving remove transactions from Bridge (%@)
Error: Should not be receiving update payment pass requests from Bridge (%@)
Error: Should not be receiving preferred AID updates from Bridge (%@)
Error: Unable to archive web service context (%@)
Error: Should not be archiving web service background context from Bridge
Notice: Shared web service provider: Sending web service context to watch
Error: Should not be receiving show payment setup requests from Bridge
Error: Should not be receiving send payment options defaults requests from Bridge
Notice: Provisioning user interface did appear
Notice: Provisioning user interface did disappear
Notice: Provisioning did begin
Notice: Provisioning did end
Notice: Web service %@ updated configuration
Notice: Queueing TSM connection on local SE for %@
Notice: Web service %@ requested configuration data
Notice: Web service %@ requested registration data
Notice: Request to sign data of length %lu with signature entanglement mode %d
Notice: Web service %@ requested provisioning data
Notice: Web service %@ registered with region map: %@
Notice: Web service %@ registered with region map: %@ primary region topic %@
Notice: Web service %@ requested filtering of verification channels
Notice: Web service %@ checking support for region %@: support %d
Notice: Web service %@ requests deletion of AID %@
Notice: Web service %@ requests setting auth random if necessary and pairing state
Notice: Web service %@ requests setting auth random if necessary
Notice: Web service %@ requests has passes of type %d
Notice: Web service %@ requests can provision payment pass with FPANID %@
Notice: Web service %@ requests validate add preconditions
Notice: Web service %@ requests add payment pass with unique ID %@
Notice: Web service %@ requests remove pass with unique ID %@
Notice: Web service %@ requests download all payment passes
Notice: Web service requests archive context: %@
Notice: Web service requests archive background context: %@
Notice: Express felica transit interface connection interrupted
Notice: Express felica transit interface connection invalidated
Notice: Express felica transit interface client: requesting presentation of transaction complete interface for unique ID %@
Error: Error handler for express felica transit transaction for unique ID %@ invoked: %@
Error: %@ %@ %@ %@ %@
Notice: %@ %@ %@ %d %@
Notice: identifier %@ request %@ error handler %@
Notice: Noting that provisioning began
Notice: Noting that provisioning ended
Notice: Noting that the provisioning UI appeared
Notice: error %@ assertion %@
Notice: Noting that the provisioning UI disappeared
Notice: Archiving web service context: %@
Notice: Archiving web service background context: %@
Notice: Payment web service has passes of type %lu? %d
Notice: incoming protobuf %@
Warning: got response with no associated message handler
Error: No associated message ID in response
Warning: No response identifier for message with identifier %@
Error: No message identifier for protobuf %@
Notice: Device is pre-Daytona; not sending pairing info request
Notice: Not necessary to set auth random; returning pairing state
Notice: currentlyPairing %d
Notice: Do not need to set auth random from PassKit request; returning pairing info
Notice: Push token from gizmo is %@
Error: Received nil SE registration data!
Notice: Fetcher %@ fetched location %@
Notice: Fetched provisioning data %@
Notice: Got provisioning error %@
Notice: Device provisioning data:
device name is %s
phone number is %s
location is %s
Notice: Falling back to pre-Daytona signing method
Notice: Request to sign data of length %lu
Notice: did register with region map %@ (primary topic %@)
Notice: completed %d %@
Notice: error %@
Notice: region %@ support %d
Notice: %@ completed %d %@
Notice: finished %d progress %f error %@
Notice: Redownloading all payment passes as requested by web service %@
Notice: Redownload of all payment passes complete as requested by web service %@
Error: Unable to decode applet: %@
Error: Returned card protobuf does not have matching array lengths (%u %u %u)!
Warning: No response expected for message with identifier %@
Notice: unique ID %@ AID %@
Notice: precondition %d unique IDs %@ should unregister %d
Notice: %u transactions
Error: VAS transaction protobuf does not have matching array lengths (%u %u)!
Error: Unable to decode VAS transaction: %@
Notice: pass %@ has valid payload %d
Notice: Scheduling automatic presentation notification for unique ID %@
Notice: Automatic presentation notification scheduled for unique ID %@: %d
Error: Payment transaction protobuf does not have matching array lengths (%u %u)!
Error: Unable to decode payment transaction: %@
Notice: Transaction: %@ for unique ID %@
Error: Applet state protobuf does not have matching array lengths (%u %u)!
Error: Unable to decode applet state: %@
Notice: Request to remove transactions with identfiers: %@
Notice: Retrieving transactions for unique ID %@
Error: IDS failed to send protobuf %@
Notice: Received updated applet state for pass with unique ID %@
Notice: Decoded applet state: %@
Notice: Target device: set default express felica transit pass: unique ID %@, AID %@, request authorization %d
Notice: Ignoring set express felica transit request to pre-Daytona watch
Notice: Sending message to cancel outstanding set default express felica pass requests
Notice: Target device: enable service mode for unique ID %@
Notice: Ignoring set enable express transit request to pre-Daytona watch
Notice: Sending message to cancel outstanding service mode requests
Notice: Target device: handling potential express pass %@
Notice: Sending updated payment options defaults to watch
Error: Failed to send updated payment options defaults to watch %@!
Notice: Sent updated payment options defaults to watch with message ID %@
Notice: Sending web service context to watch: %@
Error: Failed to send web service context to watch %@!
Notice: Sent web service context to watch with message ID %@
Notice: Watch requested web service context
Notice: Watch requested that we show payment setup for app %@
Notice: Watch requested transaction defaults
Notice: Timed out waiting for response; invoking error handler for message %@
Error: Connection to NPKCompanionAgent invalidated
Error: Connection to NPKCompanionAgent interrupted
Notice: New NPKCompanionAgentConnection created: %@
Notice: NPKCompanionAgentConnection deallocating: %@
Notice: NPKCompanionAgentConnection: XPC connection to daemon was invalidated
Notice: NPKCompanionAgentConnection: XPC connection to daemon was interrupted
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: -[NPKCompanionAgentConnection xpcConnection] would have returned nil)
Notice: Server payment passes changed
Notice: Companion agent connection: default card changed
Notice: Card on Felica secure element cannot be transferred to non-Felica watch
Notice: Request to determine if we should show the watch offer for %@ (have paired watch %d can be transferred %d)
Notice: Should show watch offer: supported in region %d hasPassOnWatch %d hasMaximumPassesOnWatch %d
Notice: Note watch offer showin for %@
Notice: Requesting that provisioning begin from watch offer for %@
Notice: Note provisioning preflight complete with success %d error %@
Notice: Client requested payment pass unique IDs
Notice: Reply with cached unique IDs: %@
Notice: No cached unique IDs available; requesting from daemon
Notice: Reply with newly-fetched unique IDs: %@
Notice: Requesting payment pass with unique ID %@ from daemon
Notice: Reply with cached payment pass: %@
Notice: Reply with newly-fetched payment pass: %@
Notice: Requesting payment passes with FPANID %@
Notice: Requesting payment pass with DPANID %@
Notice: Requesting save of payment pass with unique ID %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ has data accessor %@)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ had nil file URL)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ had nil uniqueID)
Error: Unable to copy file from %@ to %@
Notice: Success, deleting temporary pass file %@
Notice: Request to remove payment pass with unique ID %@
Notice: Request to set default card with unique ID %@
Notice: Fetching default card unique ID
Notice: Fetching default payment application for pass with unique ID %@
Notice: Setting default payment application for unique ID %@: %@
Notice: Requesting consistency check
Notice: Requesting redownload all payment passes
Notice: Sending pending unpairing request
Notice: Sending pending iCloud signout request
Notice: Should show Apple Pay settings: %s (supported in region %d hasPaymentPasses %d)
Notice: Request to delete from device with Pairing ID: %@ Transaction with Identifier: %@ for Pass Unique Identifier: %@
Notice: Error while creating connection to delete transaction with Identifier: %@ for Pass Unique Identifier: %@. Error: %@
Notice: NPKCompanionAgentConnection: handling potential express pass %@
Notice: Could not get remote object proxy for potential express pass
Notice: Handled potential express pass (handled %d, modes %@)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: -[NPKCompanionAgentConnection remoteObjectProxy] would have returned nil)
Error: Error on NPKCompanionAgentConnection connection: %@
Notice: Payment pass did enable transaction service: %@
Notice: Payment pass did receive transaction: %@ transaction %@
Notice: Payment pass did remove transaction: %@, transaction %@
Error: Tried to access invalid object at index %lu in array %@ with %lu elements
Error: *** NPKAssertion failure in %{public}s, %{public}s:%ld (reason: Unable to find class for string %@)
Notice: Paired or pairing device has advertised name %@
Notice: 
All devices: %@
Notice: 
Active paired device has advertised name %@
Notice: Synced settings changed remotely
Notice: Adding handler to runloop...
Notice: setting defaults for %@
Notice: 
%@ %@: old %@ new %@ (%@)
Notice: synchronizing and sending '%@' notification for domain %@
Notice: 
managed %@ %@: old %@ new %@ (%@)
Notice: countryCode %@ configuration dict %@ support %d
Notice: this device class 
 OS version 
 platform 
 supported regions %@
Notice: paired device class 
 OS version 
 platform 
 supported regions %@
Notice: Final supported regions: %@
Error: NPKCopyFileAtURL: one of the source URL (%@) or destination URL (%@) were invalid
Notice: Applet state is %@
Notice: Felica properties is %@ (%@)
Notice: Pass %@ has applet %d
Notice: Home directory is %@
Notice: Got device paired notification; updating home directory path
Notice: Got device active notification; updating home directory path
Notice: Demo mode values updated:
Store demo mode is %s
Hands-on demo mode is %s
UI-only demo mode is %s
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
