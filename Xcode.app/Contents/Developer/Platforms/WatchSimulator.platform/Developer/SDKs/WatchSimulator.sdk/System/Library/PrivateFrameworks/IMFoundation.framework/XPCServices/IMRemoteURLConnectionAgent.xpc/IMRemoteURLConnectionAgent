com.apple.private.imcore.imremoteurlconnection
Quit - goodbye!
Warning
IMRemoteURLConnectionAgent
IMRemoteURL
Unhandled signal: %d
v4@?0
Denying xpc connection, task does not have entitlement: %@  (%@:%d)
v8@?0@"NSObject<OS_xpc_object>"4
IMRemoteURLConnectionAgent_peer_event_handler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IMFoundation_Sim/IMFoundation-594.7/IMRemoteURLConnectionAgent/main.m
type == XPC_TYPE_DICTIONARY
mockResponse
Got a mockResponse to schedule with mockID: %@
RemoteLoading
received message from peer(%d): %s
request
tryForceCellular
alwaysForceCelluar
requireIDSHost
shouldUsePipelining
concurrentConnections
disableKeepAlive
keepAliveWifi
keepAliveCell
dataUsageBundleIdentifier
Decoded URL request: %@
 Try force cell: %@
 Always force cell: %@
 data usage identifier: %@
 requireIDSHost: %@
 shouldUsePipelining: %@
 concurreentConnection: %d
 disableKeepAlive: %@
 keepAliveWifi: %@
 keepAliveCell: %@
For this url, with have the following mockID: %@, lets check the keyPath!
We got a mock with valide key path for this url: %@
RequestAndAnswer:
 Request: %@
 RequestBody: %@
 Answer: %@
 AnswerBody: %@
Finished loading request: %@
 Data Usage identifier: %@
              Response: %@
     ResultData Length: %d
            StatusCode: %d
                 Error: %@
       Bound interface: %@
     Cell Link Quality: %d
     WiFi Link Quality: %d
resultData
response
error
statusCode
v24@?0@"NSURLRequest"4@"NSURLResponse"8i12@"NSData"16@"NSError"20
URLLoading
Creating loader with request: %@
  => Celluar Interface exists: %@
  => Celluar Interface doesn't exist
Loading URL request: %@   try force cell: %@
  => Setting bound interface: %@
  => Data usage identifier: %@
close
Connection
Cancelling URL request: %@
Sending callback with result code: %d    connection properties: %@
  headers: %@
  status code: %d
Connection failed for request: %@
Connection finished loading request: %@
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
TB,V_requireIDSHost
forceCellularIfPossible
TB,V_forceCellularIfPossible
alwaysForceCellular
TB,V_alwaysForceCellular
bundleIdentifierForDataUsage
T@"NSString",&,V_bundleIdentifierForDataUsage
TB,V_shouldUsePipelining
Ti,V_concurrentConnections
TB,V_disableKeepAlive
Ti,V_keepAliveWifi
Ti,V_keepAliveCell
%s - failed removing file for fsPath: %@ - errno: %d
-[IMMockResponseManager removeMock:]
%@/%@
/var/mobile/Library/Caches/com.apple.imfoundation.IMRemoteURLConnectionAgent
Unhandled signal: %d
Denying xpc connection, task does not have entitlement: %@  (%@:%d)
received message from peer(%d): %s
Decoded URL request: %@
 Try force cell: %@
 Always force cell: %@
 data usage identifier: %@
 requireIDSHost: %@
 shouldUsePipelining: %@
 concurreentConnection: %d
 disableKeepAlive: %@
 keepAliveWifi: %@
 keepAliveCell: %@
RequestAndAnswer:
 Request: %@
 RequestBody: %@
 Answer: %@
 AnswerBody: %@
Finished loading request: %@
 Data Usage identifier: %@
              Response: %@
     ResultData Length: %d
            StatusCode: %d
                 Error: %@
       Bound interface: %@
     Cell Link Quality: %d
     WiFi Link Quality: %d
Creating loader with request: %@
  => Celluar Interface exists: %@
  => Celluar Interface doesn't exist
Loading URL request: %@   try force cell: %@
  => Setting bound interface: %@
  => Data usage identifier: %@
Cancelling URL request: %@
Sending callback with result code: %d    connection properties: %@
  headers: %@
  status code: %d
Connection failed for request: %@
Connection finished loading request: %@
IMRemoteURLAWDLogging
IMRemoteAgentURLLoader
NSURLConnectionDelegate
NSObject
IMMockResponseManager
@(#)PROGRAM:IMRemoteURLConnectionAgent  PROJECT:IMRemoteURLConnectionAgent-1000
class
mockID
sharedInstance
scheduleMock:
numberWithInt:
absoluteString
getMockForURL:
requestBodyKeyPath
data
propertyListWithData:options:format:error:
valueForKeyPath:
removeMock:
response
statusCode
alloc
initWithData:encoding:
HTTPBody
length
boundInterfaceIdentifier
linkQualityValueForInterfaceType:
copy
initWithURLRequest:completionBlock:
setShouldUsePipelining:
setConcurrentConnections:
setDisableKeepAlive:
setKeepAliveWifi:
setKeepAliveCell:
setForceCellularIfPossible:
setAlwaysForceCellular:
setBundleIdentifierForDataUsage:
setRequireIDSHost:
load
init
shouldSubmit
submitTiming:withError:
submitTiming:
mutableCopy
forceCellularIfPossible
setBoundInterfaceIdentifier:
_setCollectsTimingData:
shouldUsePipelining
setHTTPShouldUsePipelining:
concurrentConnections
disableKeepAlive
addValue:forHTTPHeaderField:
keepAliveWifi
keepAliveCell
count
_initWithRequest:delegate:usesCache:maxContentLength:startImmediately:connectionProperties:
cancel
connectionProperties
allHeaderFields
_callBackWithError:resultData:statusCode:response:
_timingData
appendData:
connection:didFailWithError:
connectionShouldUseCredentialStorage:
connection:willSendRequestForAuthenticationChallenge:
connection:canAuthenticateAgainstProtectionSpace:
connection:didReceiveAuthenticationChallenge:
connection:didCancelAuthenticationChallenge:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
_celluarInterface
connection:didReceiveResponse:
connectionDidFinishLoading:
connection:didReceiveData:
.cxx_destruct
bundleIdentifierForDataUsage
requireIDSHost
alwaysForceCellular
_block
_request
_currentURLConnection
_currentURLResponse
_currentResponseData
_bundleIdentifierForDataUsage
_currentStatusCode
_forceCellularIfPossible
_alwaysForceCellular
_requireIDSHost
_shouldUsePipelining
_concurrentConnections
_disableKeepAlive
_keepAliveWifi
_keepAliveCell
fileSystemPathFromURL:
archivedDataWithRootObject:
writeToFile:atomically:
unarchiveObjectWithFile:
UTF8String
fileSystemNameFromURL:
initWithFormat:
stringByReplacingOccurrencesOfString:withString:
@8@0:4
B8@0:4
v16@0:4@8@12
v12@0:4@8
v16@0:4@"NSURLConnection"8@"NSError"12
B12@0:4@8
B12@0:4@"NSURLConnection"8
v16@0:4@"NSURLConnection"8@"NSURLAuthenticationChallenge"12
B16@0:4@8@12
B16@0:4@"NSURLConnection"8@"NSURLProtectionSpace"12
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
@16@0:4@8@?12
v8@0:4
v24@0:4@8@12i16@20
v12@0:4B8
i8@0:4
v12@0:4i8
@"NSMutableURLRequest"
@"NSURLConnection"
@"NSURLResponse"
@"NSMutableData"
@"NSString"
@12@0:4@8
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.imremoteurlconnectionagent</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.CommCenter.fine-grained - 2</key>
<array>
<string>spi</string>
</array>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<string>YES</string>
<key>com.apple.mobile.deleted.AllowFreeSpace</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>IMRemoteURLConnectionAgent</string>
</array>
</dict>
</plist>
zPLR
zPLR
