LastSystemVersionMigrated
v4@?0
/var/mobile/Library/Caches/com.apple.Carousel.sharedimagecache/
v20@?0@"NSArray"4@"NSUUID"8@"NSDictionary"12f16
v16@?0@"NSData"4I8^B12
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
BackupLibrarySequenceIdKey
com.apple.ntkd.zip-archivist
extractPKZip
sequesterResources
copyResources
inputStream
createPKZip
outputStream
com.apple.ntkd.complicationstore.%p
com.apple.ntkd.complicationstore.observercallback.%p
com.apple.ntkd.complicationstore.asyncwork
com.apple.ntkd.complicationstore.asyncobservercallback
v16@?0@"NSString"4@"NSNumber"8^B12
v12@?0@"NSNumber"4@?<v@?>8
i12@?0@"NSNumber"4@"NSNumber"8
collectionIdentifier
T@"NSString",R,N,V_collectionIdentifier
deviceUUID
T@"NSUUID",R,N,V_deviceUUID
ClientToSampleTemplate
PerDeviceStores
ComplicationCollectionStores
GlobalStores
sequence-id.string
manifest-sequence-id.string
last-delete-sequence-id.string
sample-template-sequence-id.string
Complications
version.string
manifest.plist
sample-template
string could not be converted to UUID: %@
deleted.plist
com.apple.ntkd.collectionstorecreation
com.apple.ntkd.collectioncoordinator
com.apple.ntkd.collectioncoordinator.callouts
v8@?0@"NTKDCollectionClient"4
v8@?0@"NTKDCollectionStore"4
v12@?0@"NSString"4@"NSUUID"8
v16@?0@"NTKDCollectionStoreKey"4@"NTKDCollectionStore"8^B12
com.apple.ntkd.collectioncoordinator.busy
com.apple.ntkd.collectioncoordinator.callout
com.apple.ntkd.curatecollection.
type=%@, faceUUID=%@, complicationClientID=%@
face-selection
face-order
unknown
messageType
faceUUID
payload
progress
complicationClientID
objectIdentifier
T@"NSString",R,N
sequencer
changeType
Ti,R,N
Ti,N,V_messageType
T@"NSUUID",&,N,V_faceUUID
payloadData
T@"NSData",&,N,V_payloadData
Td,N,V_progress
T@"NSString",C,N,V_complicationClientID
identifier
modificationDate
T@"NSDate",R,N
path
photo
T@"NPTOPhoto",R,N,V_photo
com.apple.ntkd.photolibrarydeviceobserver
com.apple.ntkd.photolibraryobserver.asyncwork
B12@?0@"NTKFace"4@"_NTKDLazySidecarPhoto"8
v12@?0@"NTKDCollectionStore"4^B8
v8@?0@"NPTOPhoto"4
%@/%@
com.apple.ntkd.facesnapshotclient.busy
com.apple.ntkd.facesnapshotclient.%p
invalidationHandler
T@?,C,N,V_invalidationHandler
NTKDActiveDeviceUUIDChangedNotification
v8@?0@"NSString"4
face.json
Resources
data
Clock Face Sync Error
A rare error has occurred. Please trigger a co-sysdiagnose (hold both crown & side button for 1 second) and file a bug under 'Pepper UI Clock | 1.0'. (Internal alert only.)
v8@?0B4
DateOfLastActivity_
com.apple.nanotimekit.daemon-activity-queue
checkin
v8@?0@"NSObject<OS_xpc_object>"4
guard-early-jetsam
--30s-extension
com.apple.nanotimekit.daemon-activity
com.apple.nanotimekit.daemon-transaction-queue
CleanSnapshotCache
CleanAllFaceSnapshots
snapshotting-session-activity
delaying-snapshots
NTKFaceSnapshotsAreDirtyKey
com.apple.ntkd.facesnapshotcontroller.%p
com.apple.ntkd.facesnapshotcontroller.observercallback.%p
v16@?0@"NSUUID"4@"NTKFace"8^B12
v12@?0@"NTKRemoteComplication"4@"NSString"8
v8@?0@"NTKFace"4
v12@?0B4@"UIImage"8
v16@?0@"NSString"4I8^B12
v8@?0@"NTKFaceViewController"4
v16@?0@"NSString"4@"NTKComplicationController"8@"NTKComplicationDisplayWrapperView"12
v8@?0@"NTKDelayedBlock"4
com.apple.ntkd.facesnapshotcontroller.asyncwork
com.apple.ntkd.facesnapshotcontroller.asyncmappedimagecachework
com.apple.ntkd.facesnapshotcontroller.asyncobservercallback
v12@?0@"NSString"4^B8
%@%@%@
SnapshotSequenceIdKey
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
SnapshotContexts.archive
com.apple.ntkd.collectionclient.busy
com.apple.ntkd.collectionclient.%p
com.apple.ntkd.collectionclient.register
v8@?0@"NSError"4
outgoing-sync-session-activity
com.apple.ntkd.synccontroller.outgoingsession
com.apple.ntkd.synccontroller.incomingsession
com.apple.ntkd.synccontroller.outgoingsessionrequested
com.apple.ntkd.synccontroller.libraryvalidation
com.apple.ntkd.synccontroller
com.apple.ntkd.synccontroller.busy
v8@?0@"NTKDComplicationStore"4
v16@?0@4@"_MessageList"8^B12
v16@?0@"NSString"4@"NTKComplicationSampleData"8^B12
DailyLibraryHashValidation
nextObjectBlock
T@?,C,N,V_nextObjectBlock
message-type
face-uuid
complicaiton-clientID
payload-id
v16@?0@"NSDictionary"4I8^B12
@"NTKDSyncMessage"4@?0
B8@?0@"NSDictionary"4
needs-reset-sync
sequence-id
needsResetSync
TB,N
seqId
T@"NSNumber",&,N
Global
Sync
store-status.plist
complication-store-status.plist
incoming-messages.plist
outgoing-messages.plist
v8@?0@"NSUUID"4
MessagePayloads
com.apple.ntkd.snapshotcoordinator
com.apple.ntkd.snapshotcoordinator.callouts
v8@?0@"NTKDFaceSnapshotClientHandler"4
com.apple.notifyd.matching
LanguageChange
LocaleChange
SignificantTimeChange
com.apple.private.alloy.clockface.sync
NTKSyncBackoffPeriodInSeconds
com.apple.nanotimekit.messageType
com.apple.nanotimekit.message
-[NTKDCompanionSyncWrapper initAsMaster:]
-[NTKDCompanionSyncWrapper resume]
v16@?0B4@"NSString"8@"NSError"12
-[NTKDCompanionSyncWrapper serviceDidPairDevice:]
-[NTKDCompanionSyncWrapper service:startSession:error:]
-[NTKDCompanionSyncWrapper syncSession:applyChanges:completion:]
-[NTKDCompanionSyncWrapper syncSession:resetDataStoreWithError:]
-[NTKDCompanionSyncWrapper dataFromChange:]
-[NTKDCompanionSyncWrapper changeFromData:ofType:]
isMaster
TB,R,N,V_isMaster
delegate
T@"<NTKDSyncDelegate>",W,N,V_delegate
pairedDevice
T@"NRDevice",R,N
com.apple.pairedsync.faces.NTKSyncBackoffQueue
com.apple.pairedsync.faces.NTKSyncServiceQueue
UUIDs
facebackup
v12@?0@"NTKFace"4@"NSString"8
Backups
faceList
selectedFace
version
npsManager
T@"NPSManager",&,N,V_npsManager
archivist
T@"NTKDZIPArchivist",&,N,V_archivist
com.apple.ntkd.collectionstore.%p
com.apple.ntkd.collectionstore.observercallback.%p
com.apple.ntkd.collectionstore.asyncwork
com.apple.ntkd.collectionstore.asyncobservercallback
v16@?0@"NSUUID"4@"NSNumber"8^B12
%@ [%@], 
%02x
Tf,N
buildVersion
T@"NSString",&,N
isInitialSetupComplete
TB,R,N
isEmpty
refusesToDeleteLastFace
CollectionManifest[
(%@:%@)
uuid
style
expected a string for key '%@' (instead found %@)
could not generate UUID from string: %@
expected a number for key '%@' (instead found %@)
CollectionStores
selected-uuid-sequence-id.string
added-sequence-id.string
Faces
configuration-sequence-id.string
resources-sequence-id.string
build-version.string
setup-complete
selected-uuid.string
invalid UUID string: %@
com.apple.ntkd.complicationcollectioncoordinator
com.apple.ntkd.complicationcollectioncoordinator.callouts
v8@?0@"NTKDComplicationCollectionClient"4
v16@?0@"NTKDCollectionStoreKey"4@"NTKDComplicationStore"8^B12
com.apple.ntkd.complicationcollectioncoordinator.busy
com.apple.ntkd.complicationcollectioncoordinator.callout
B16@?0@"NTKFace"4I8^B12
@"NSArray"8@?0i4
v16@?0@"NSUUID"4I8^B12
AddableFacesCuratorLibrarySequenceIdKey
%@:%@
global
com.apple.nanotimekitd.daemon-queue
com.apple.ntkd.complicationcollectionclient.busy
com.apple.ntkd.complicationcollectionclient.%p
com.apple.ntkd.complicaitoncollectionclient.register
beginning pre migration
pre migration complete
beginning post migration
post migration complete
error cleaning up old snapshot directory: %@
cleaned up old snapshot directory
Beginning library face curation - waiting for NPS
Finishing library face curation
Setup still incomplete - attempting migration from prefs archive
Successfully migrated
Store is empty - adding default faces
Store initial setup is incomplete; checking with the backup manager
Backup manager returned %d faces
Removing unavailable faces
Removing face of style %@
Error decoding archived face: %@
Couldn't create BOMCopier for zipping
Error copying/zipping: %d
BOM file error: symlinks are unsupported
BOM could not extract archive %s
BOM could not extract archive for path %s: %s
BOM file error for path %s, %s
BOM file conflict error for path %s
Cleaning up orphaned complication stores...
...deleting complication stores for device uuid %@
Unable to read manifest at path %@: %@
Error decoding sample complication template for family %@: %@
Unable to read removals dictionary at path %@: %@
_NTKDPhotoLibraryDeviceObserver(%@): addStore(%@)
_NTKDPhotoLibraryDeviceObserver(%@): loading all faces from %@ and synchronizing with default photos
_NTKDPhotoLibraryDeviceObserver(%@): purgeStore(%@)
_NTKDPhotoLibraryDeviceObserver(%@): purgeStore(%@) done
_NTKDPhotoLibraryDeviceObserver(%@): loadEverything:... for store %@. WHY IS THIS STILL CALLED???
_NTKDPhotoLibraryDeviceObserver(%@): _locketDidChange: (loaded/total) == (%lu/%lu)
_NTKDPhotoLibraryDeviceObserver(%@): _setAlbumDataForStore: locket = %@
_NTKDPhotoLibraryDeviceObserver(%@): _synchronizeDefaultPhotosWithStore(%@)
_NTKDPhotoLibraryDeviceObserver: _synchronizeDefaultPhotosWithReader
_NTKDPhotoLibraryDeviceObserver: no changes
_NTKDPhotoLibraryDeviceObserver(%@): _updateDefaultPhotos: loading new default photos
_NTKDPhotoLibraryDeviceObserver(%@): _updateDefaultPhotos: locket is empty: no default photos
_NTKDPhotoLibraryDeviceObserver(%@): Checking %@ face %@ in %@
_NTKDPhotoLibraryDeviceObserver(%@):   updating %@ with resources in %@
_NTKDPhotoLibraryDeviceObserver(%@):   creation of temp sidecar failed!
NTKDPhotoLibraryObserver: run
NTKDPhotoLibraryObserver: collectionStoreHasBeenCreated(%@-%@)
NTKDPhotoLibraryObserver: creating new observer for device %@
NTKDPhotoLibraryObserver: collectionStoreWillBePurged(%@-%@)
NTKDPhotoLibraryObserver: no purgable stores for device %@
Failed to create face from data: %@
unzip failed, data written to disk for analysis: %@
performing activity for identifier %@ because minimum interval %g has elapsed since last performed (%@)
not performing activity for identifier %@ because minimum interval %g has not elapsed since last performed (%@)
checkin complete with state = %s
begin activity '%@'
end activity '%@'
unregistering xpc activity
scheduling xpc activity for 5 minutes from now
xpc activity handler unexpectedly invoked -- we should have adjusted it further into the future before it fired
adjust xpc activity criteria timer fired
****** imbalanced transactions for reason '%@' -- please file a radar on Pepper UI Clock ******
Delaying snapshots for %is
Snapshot delay elapsed; starting
Clean snapshot caches due not having been cleaned in the last five days
Updating snapshot due to face configuration change for face %@
Updating snapshot due to face resource directory change for face %@
Updating snapshot due to face added for face %@
Updating snapshots due to loading all faces for collection store
Updating snapshot due to updating selected UUID for face %@
Updating snapshot due to updated template for client identifier %@ and face %@
Setting flag to clean all snapshots due to not having been cleaned in last day
Maybe updating snapshot for face %@
Updating...
Updating unadorned...
Done! (%@ ms)
No update needed.
Persisting snapshot contexts
Cleaning snapshot cache
Removing snapshot for key: %@
Not snapshotting face. Missing complication template for %@
Failed to render
Failed to get CA server buffer
Setting daemon to exit when clean
No snapshots taken. Not setting daemon to exit when clean
Error decoding face snapshot contexts: %@
register for <%@,%@> with seqId %@
<%@,%@> setSelectedFaceUUID: %@
<%@,%@> setOrderedFaceUUIDs: %@
<%@,%@> updateFaceForUUID: %@ withConfiguration: %@
<%@,%@> updateFaceForUUID: %@ withResourceDirectory: %@
<%@,%@> addFaceForUUID: %@ face: %@
<%@,%@> removeFaceForUUID: %@
<%@,%@> resetCollection
<%@,%@> flushUpdatesWithIdentifier: %@
outgoing to client: <%@,%@> load %@ faces (seqId = %@)
outgoing to client: <%@,%@> update selected uuid to %@ (seqId = %@)
outgoing to client: <%@,%@> update ordered uuids to %@ (seqId = %@)
outgoing to client: <%@,%@> update face for UUID %@ to config %@ (seqId = %@)
outgoing to client: <%@,%@> update face for UUID %@ with resource directory %@ (seqId = %@)
outgoing to client: <%@,%@> add face %@ for UUID %@ (seqId = %@)
outgoing to client: <%@,%@> remove face of style %@ for UUID %@ (seqId = %@)
outgoing to client: <%@,%@> reset collection store 
Cleaning up orphaned sync directories...
...deleting sync data for device uuid %@
prevented collectionStore reset sync request from gizmo
collectionStore (seqId = %@) did update selected uuid: %@
collectionStore (seqId = %@) did update ordered uuids
collectionStore (seqId = %@) did update face for uuid '%@' with configuration: %@
collectionStore (seqId = %@) did update face for uuid '%@' with resource directory: %@
collectionStore (seqId = %@) did add face for uuid '%@': %@
collectionStore (seqId = %@) did remove face of style %@ for uuid '%@'
collectionStore seqId = %@
prevented complicationStore reset sync request from gizmo
complicationStore did update template of family %@ for client '%@'
complicationStore did remove complication for client '%@'
complicationStore seqId is now %@
NRDevicePropertySystemBuildVersion did change. enqueuing sync request
outgoing session (reset=%@) start for device %@ (UUID %@)
estimated number of messages to send: %lu
progress: %lu / %lu => %f
outgoing session get next message: returning %@
outgoing session end (success = %@)
incoming session start for device %@ (UUID %@)
incoming session reset data store
ignoring unexpected request to reset data store -- should not happen on watch!
incoming session: enqueuing message: %@
incoming session end (success = %@)
clearing incoming message list after unsuccessful sync session
requesting reset sync (needed for collection: %s, complication: %s)
applying incoming message lists
incoming message list for device uuid '%@' has messages; will apply...
building up reset state from reset message list
processing incoming message (part of reset): %@
**** ignoring unexpected message type %@ in reset sync message list (this should not be possible: please file a radar on Pepper UI Clock) ****
unsuccessful reset sync! no faces added. not applying changes, will request new reset sync.
applying incoming message: %@
**** ignoring unexpected 'reset' message inside delta message list (this should not be possible: please file a radar on Pepper UI Clock) ****
ignoring library store validation attempt -- sync messages currently enqueued
unable to read message list at path %@: %@
message list enqueue message %@
Pruning enqueued message made obsolete by new message. Pruned message: %@
Unable to read store status at path %@: %@
Update all snapshots due to daemon exiting while snapshotting
Update all snapshots due to calendar day changed notification
Update all snapshots due to current localed changed notification
Update all snapshots due to %s
%s - isMaster:%d _syncServiceQueue:%@ _syncService:%@
error resuming _syncService: %@
sent library validation hash to companion: %@
error sending out of band message: %@
reset sync successfully requested
reset sync ongoing, incoming request ignored
delta sync successfully requested
backing off for %tu seconds before attempting sync
reset sync under backoff, delta sync delayed
delta sync under backoff, reset sync delayed
delta sync already under backoff, no delta sync requested
sync service encountered an error: %@
requesting new reset sync after previous failure
ignoring unexpected incoming validation message -- should not happen on watch!
UNEXPECTED SYNC OUTCOME: please file a radar w/ co-sysdiagnose under 'Pepper UI Clock'
sessionStateResult: %ld, messageToSend: %@
syncSessionApplyMessage: %@, success: %d
%s - result:%d
error:%@
sync session ended with error: %@
%s - changeType=%ld
Adding face with UUID %@ to backup
Removing face with UUID %@ from backup
Setting backup UUID list to %@
Setting backup selected face UUID to %@
Setting backup version to %f
Starting backup load
Found a face with UUID %@
Found a facebackup file that's not a UUID: %@
No faces found in backup
Attempting to load face %@ from backup
Successfully loaded face %@
Failed to load face %@
Finished loading faces
Selected face UUID in the backup wasn't available; selecting the first one instead
Failed to load face backup with UUID %@: couldn
t find backup file
Cleaning up orphaned face collection stores...
...deleting face collection stores for device uuid %@
store<%@,%@> created with setupComplete: %@, seqId: %@, manifest: %@
store<%@,%@> set version: %f
store<%@,%@> set build version: %@
store<%@,%@> mark initial setup complete
Swapping in faces (%@) for collection (%@)
<%@,%@,%@> update face for UUID %@: configuration = %@
<%@,%@,%@> update face for UUID %@: new resource directory = %@
<%@,%@,%@> remove face for UUID %@
<%@,%@,%@> add face for UUID %@: %@
<%@,%@> did not add face (because face already present) for UUID: %@
<%@,%@> ignoring attempt to add nil face for UUID: %@
<%@,%@,%@> set selected UUID: %@
<%@,%@> ignoring attempt to select already-selected UUID %@
<%@,%@,%@> set ordered UUIDs (first uuid = %@)
<%@,%@> ignoring reorder request that would not change face order
collection store string: %@
collection store string, part 2: %@
collection store string, part 3: %@
collection store string, part 4: %@
collection store string, part 5: %@
collection store string, part 6: %@
generated library collection store hash: %@
store<%@,%@> playback changes since seqId %@
[playback changes - seqId %@] update selected uuid: %@
[playback changes - seqId %@] update ordered uuids (first uuid = %@))
[playback changes - seqId %@] add face %@
[playback changes - seqId %@] update face configuration %@
[playback changes - seqId %@] update face resource directory %@
[playback changes - seqId %@] remove face for uuid %@
Error reading selected UUID at path %@: string could not be converted to UUID: %@
Unable to extract face from JSON object. Error = %@. JSON object = %@
Could not remove Resouces directory at path (%@) with error (%@)
Not executing _WriteRemovals as we are in demo mode and have no companion
Unable to convert payload data to array of UUIDS: %@
Unable to convert payload data to NTKComplicationSampleData: %@
daemon is running
SYNC DISABLED: running in demo mode
_cleanUpOutdatedSnapshotCache
isEqualToString:
defaultManager
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
runPreMigrator
runPostMigrator
alloc
init
sharedInstance
registerCurator:forCollectionIdentifier:
isRunningInStoreDemoMode
isInitialSetupComplete
_migrateFromLibraryPrefsArchiveToStore:
markInitialSetupComplete
synchronize
_deleteLibraryPrefsArchive
_removeUnavailableFacesFromStore:
isEmpty
_addDefaultFacesToStore:
_ensureSelectedFaceInStore:
setVersion:
selectedUUID
setSelectedFaceUUID:
orderedUUIDs
setFaceUUIDs:
setRefusesToDeleteLastFace:
addObserver:withSeqId:
count
countByEnumeratingWithState:objects:count:
objectForKey:
addFace:forUUID:
setOrderedUUIDs:
setSelectedUUID:
loadBackupWithCompletion:
_waitForNanoPrefsSyncWithCompletion:
_allFacesIncludingSignificantAdditionalConfigurations
swapInTheseFaces:
_selectFaceOfStyle:inStore:
addFace:withUUID:
faceForUUID:
removeFaceWithUUID:
UUID
faceStyleForUUID:
removeFaceForUUID:
integerValue
defaultFaceOfStyle:
optionWithCharacter:
selectOption:forCustomEditMode:slot:
addObject:
_addFace:toStore:andSelect:
class
isKindOfClass:
initForReadingWithData:
setRequiresSecureCoding:
decodeObjectOfClass:forKey:
enumerateObjectsUsingBlock:
floatValue
firstObject
faceStyle
curateCollectionStore:completion:
resetStoreDefaults:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
collectionStore:loadOrderedUUIDs:selectedUUID:facesByUUID:seqId:acknowledge:
collectionStore:didUpdateSelectedUUID:seqId:
collectionStore:didUpdateOrderedUUIDs:seqId:
collectionStore:didUpdateFaceForUUID:withConfiguration:seqId:
collectionStore:didUpdateFaceForUUID:withResourceDirectory:seqId:acknowledge:
collectionStore:didAddFace:forUUID:seqId:
collectionStore:didRemoveFaceOfStyle:forUUID:seqId:acknowledge:
resetCollectionStore:
.cxx_destruct
_initialSyncCompletedHandler
_backupManager
dictionaryWithObjects:forKeys:count:
fileSystemRepresentation
initToMemory
open
propertyForKey:
unzipStream:toPath:completionHandler:
zippedDataForPath:
_unzipQueue
containsObject:
copy
stringWithFormat:
UTF8String
weakObjectsHashTable
dictionary
_faultInAllClientData
clientIds
objectForKeyedSubscript:
familiesWithSampleTemplateForClientIdentifier:
initWithSupportedFamilies:
setObject:forKey:
supportedFamilies
templateForFamily:
setTemplate:forFamily:
_queue_loadFullCollectionForObserver:
_queue_playbackChangesForObserver:fromSeqId:
_onQueue_async:
removeObject:
_queue_clearRemovalsThroughSeqId:
_queue_sampleTemplateForClientIdentifier:family:
_updateLocalizableSampleDataTemplate:forClientIdentifier:family:skipSyncObserver:
_removeComplicationForClientIdentifier:skipSyncObserver:
_updateLocalizableSampleData:forClientIdentifier:skipSyncObserver:
addClientId:supportForSampleTemplateForFamily:
_queue_incrementSeqId
_queue_notifyDidUpdateSampleTemplate:forClientIdentifier:family:skipSyncObserver:
removeClientId:
removeObjectForKey:
_queue_notifyDidRemoveComplicationForClientIdentifier:skipSyncObserver:
unsignedIntegerValue
numberWithUnsignedInteger:
array
enumerateKeysAndObjectsUsingBlock:
removeObjectsForKeys:
complicationStore:didUpdateLocalizableSampleTemplate:forClientIdentifier:family:seqId:
_onObserverQueue_async:
complicationStore:didRemoveComplicationForClientIdentifier:seqId:
allKeys
sortedArrayUsingComparator:
complicationStore:loadFullCollectionWithLocalizableSampleTemplates:seqId:
complicationStore:didSuppressNotificationForSeqId:
cleanupOrphanedStoresWithCurrentDeviceUUIDs:
initWithCollectionIdentifier:deviceUUID:
complicationSampleDataForClientID:
removeObserver:
setSyncObserver:withSeqId:
clearSyncObserver
version
clients
sampleTemplateForClientIdentifier:family:
updateLocalizableSampleDataTemplate:forClientIdentifier:family:
removeComplicationForClientIdentifier:
withoutNotifyingSyncObserverSetComplicationSampleData:forClientIdentifier:
withoutNotifyingSyncObserverRemoveComplicationForClientIdentifier:
collectionIdentifier
deviceUUID
_queue
_storeDirectory
_seqId
_observers
_syncObserver
_observerCallbackQueue
_manifest
_clientIDtoSampleData
_removals
_collectionIdentifier
_deviceUUID
addObjectsFromArray:
allObjects
numberWithInteger:
initWithContentsOfFile:
writeToFile:atomically:
emptyManifest
_clientToSampleTemplateFamilies
UUIDString
stringByAppendingPathComponent:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringWithContentsOfFile:encoding:error:
writeToFile:atomically:encoding:error:
dataWithContentsOfFile:
archivedDataWithRootObject:
dictionaryWithContentsOfFile:
initWithUUIDString:
raise:format:
reason
removeAllObjects
contentsOfDirectoryAtPath:error:
initWithMachServiceName:
setDelegate:
resume
initWithConnection:
setInvalidationHandler:
keyWithCollectionIdentifier:deviceUUID:
checkoutStore:
_onCalloutQueue_async:
_queue_addCheckoutHandler:forStoreKey:
_queue_notifyObserversStoreCreated:
_queue_invokeCheckoutHandlersForStoreKey:withStore:
_queue_curateStore:withCompletion:
checkoutStoreForCollectionIdentifier:deviceUUID:withHandler:
relinquishStore:
enumerateStoreIdentifiersWithBlock:
collectionStoreHasBeenCreated:
runCollectionServer
listener:shouldAcceptNewConnection:
enumerateAllStoresWithHandler:
addCollectionLifecycleObserver:
removeCollectionLifecycleObserver:
_clients
_curatedStores
_storesBeingCurated
_checkoutHandlersByStoreKey
_curatorsByCollectionIdentifier
_collectionLifecycleObservers
_calloutQueue
setMessageType:
messageOfType:
setFaceUUID:
setComplicationClientID:
decodeIntegerForKey:
doubleValue
encodeInteger:forKey:
encodeObject:forKey:
numberWithDouble:
messageOfType:withFaceUUID:
messageOfType:withComplicationCliendId:
supportsSecureCoding
objectIdentifier
sequencer
changeType
initWithCoder:
encodeWithCoder:
messageType
faceUUID
payloadData
setPayloadData:
progress
setProgress:
complicationClientID
_uuid
_messageType
_faceUUID
_payloadData
_complicationClientID
_progress
path
dealloc
identifier
modificationDate
isPhotoIris
initWithPhoto:
photo
_photo
_sidecarPhoto
initWithName:
photoLibraryDeviceObserverQueue
defaultCenter
_setStoreDataForStore:
_setAlbumDataForStore:
_synchronizeDefaultPhotosWithStore:
dispatch:
resourceDirectory
initWithPath:
_facePhoto:shouldUpdateTo:
_face:hasPhotoButNotIrisMovieOf:
_setResourceOfFaceInStore:uuid:to:ifCondition:
object
reader
numberOfLoadedPhotos
numberOfTotalPhotos
_synchronizeDefaultPhotosWithReader:
addObserver:
sharedLocket
_locketDidChange:
addObserver:selector:name:object:
_updateCachedDefaultPhotos:
_updateAlbumFacesInStore:
_updateUserPhotoFacesInAddableStore
_updateUserPhotoFacesInStoreIfNilOrTurnedIntoIris:
loadPhotoAtIndex:handler:
_enumerateFacesInStore:ofStyle:setResource:ifCondition:
_loadUUIDsOfStyle:fromStore:
updateFaceForUUID:withResourceDirectory:
timeIntervalSinceDate:
initWithDeviceUUID:
addStore:
purgeStore:
_workQ
_locket
_defaultAlbumPhoto
_defaultUserPhoto
_stores
_addableStore
arrayWithObjects:count:
setWithArray:
collectionStoreWillBePurged:
_deviceObservers
lastPathComponent
stringByDeletingLastPathComponent
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
_handleInvalidation
updateAllSnapshots
_onQueueAsync:
createFaceForPerformanceTesting:
updateSnapshotForFace:
remoteObjectProxy
faceSnapshotChangedForKey:
initWithConnection:snapshotController:
registerForUpdates
requestSnapshotOfFace:
invalidationHandler
_connection
_snapshotController
_invalidationHandler
valueForProperty:
getActivePairedDevice
close
inputStreamWithData:
fileExistsAtPath:
JSONObjectWithData:options:error:
faceWithJSONObjectRepresentation:
setResourceDirectory:
JSONObjectRepresentation
dataWithJSONObject:options:error:
linkItemAtPath:toPath:error:
stringByAppendingString:
date
_queue_beginActivity:
_queue_endActivity:
_queue_setOrUpdateActivityAndTimer
beginActivity:
endActivity:
checkin
_activityIdentifiers
_adjustCriteriaTimer
_removePostWakeActivityTimer
_xpcActivityRegistered
removeLastObject
queue
_preferencesKeyForCollectionStore:
_cleanCache
_queue_updateAllSnapshots
hasLoaded
_startSnapshottingActivity
_cleanAllFaces
_endSnapshottingActivityDidTakeSnapshot:
_updateSnapshotForFace:
_createFace:snapshotUIOnly:unadornedContent:forceLockedUI:canSnapshotFace:
_queue_updateSnapshotForFace:
clientIdentifier
_queue_updateSnapshotForFace:complicationTemplateChanged:
_enumerateRemoteComplicationsForFace:block:
_enumerateAllFacesForDeviceUUID:block:
mutableCopy
indexOfObject:
exchangeObjectAtIndex:withObjectAtIndex:
_cleanFace:
dailySnapshotKey
wantsUnadornedSnapshot
unadornedSnapshotKey
_cleanCacheExcludingKeys:
_cleanFace:complicationTemplateChanged:
_currentContext
_snapshotExistsForKey:
snapshotContext:isStaleRelativeToContext:
unmodifiedDate
_takeSnapshotOfFace:snapshotUIOnly:unadornedContent:forceLockedUI:
_writeImageToDisk:imageName:
_noteExternalChangeForKey:
_notifyFaceSnapshotChangedForKey:
setImage:forKey:withCompletion:
_cleanContexts
postNotificationName:object:
removeImageForKey:withCompletion:
setDataMode:
setSupressesNonSnapshotUI:
setShowsCanonicalContent:
setShowContentForUnadornedSnapshot:
setShowsLockedUI:
initWithFace:configuration:
complication
complicationType
display
complicationTemplate
enumerateComplicationControllersAndDisplaysWithBlock:
freeze
_showSnapshotWindow
setRootViewController:
setHidden:
faceView
begin
setDisableActions:
setNeedsLayout
layoutIfNeeded
setNeedsDisplay
setNeedsRender
commit
flush
size
contentScaleFactor
_contextId
mainDisplay
name
initWithCGImage:
reset
_hideSnapshotWindow
initWithDelay:action:
cancel
setDate:
currentCalendar
setCalendar:
sharedLocationManager
lastLocation
setLocation:
customMonogram
setMonogram:
currentLocale
localeIdentifier
setLocale:
numberWithBool:
setUses24hTime:
setBuildVersion:
timeZoneDataVersion
setTzVersion:
numberWithUnsignedChar:
setEnhanceTextLegibilityEnabled:
setLunarCalendarLocaleID:
complicationForSlot:
enumerateComplicationSlotsWithBlock:
stringByAppendingPathExtension:
writeToFile:options:error:
complicationCollection:didUpdateSampleTemplateForClient:
complicationCollection:didRemoveSampleTemplatesForClient:
complicationCollectionDidLoad:
_loadComplicationCollection
_snapshotContexts
_hideSnapshotWindowBlock
_snapshotWindow
_complicationCollection
_needToUpdateSnapshotsForFacesWithThirdPartyComplications
_setImageForKeyOperationsCount
initWithFrame:
setContentScaleFactor:
blackColor
setBackgroundColor:
setOpaque:
_isSecure
_shouldUseRemoteContext
_wantsSceneAssociation
_isWindowServerHostingManaged
_alwaysGetsContexts
_orientationForViewTransform
_orientationForRootTransform
setWithObjects:
decodeObjectOfClasses:forKey:
_performOrEnqueueAction:
updateFaceForUUID:withConfiguration:
flushCompleteForIdentifier:
_onQueue:
flushWithObserverCallback:
remoteObjectProxyWithErrorHandler:
loadFullCollectionWithOrderedUUIDs:selectedUUID:facesByUUID:seqId:completion:
updateSelectedFaceUUID:seqId:
updateOrderedFaceUUIDs:seqId:
updateFaceForUUID:withConfiguration:seqId:
updateFaceForUUID:withResourceDirectory:seqId:completion:
addFace:forUUID:seqId:
removeFaceForUUID:seqId:completion:
resetClientCollection
registerForCollectionIdentifier:deviceUUID:withSeqId:
setOrderedFaceUUIDs:
resetCollection
flushUpdatesWithIdentifier:
_collectionStore
_actionsEnqueuedWhileWaitingForStore
initAsMaster:
addComplicationCollectionLifecycleObserver:
_queue_applyIncomingMessageLists
_queue_requestSyncIfNecessary
_queue_storeStatusForDeviceUUID:
seqId
_queue_complicationStoreStatusForDeviceUUID:
_queue_outgoingMessageListForDeviceUUID:
enqueueMessage:
setSeqId:
pairedDevice
_queue_checkoutLibraryStoreForDeviceUUID:
_queue_checkoutComplicationStoreForDeviceUUID:
clearAllMessages
initWithPersistencePath:
suspendCoalescing
messageEnumerator
nextObject
_queue_addPayloadToMessage:withFaceStore:complicationStore:
setNeedsResetSync:
clearMessageCount:
_queue_endGuardingOutgoingSessionRequest
_queue_validateLibraryFaces
resumeCoalescing
_queue_incomingMessageListForDeviceUUID:
_queue_applyIncomingMessageList:collectionStore:complicationStore:storeStatus:
_queue_requestSyncIfNecessaryAndForceDeltaRequestOtherwise:
checkoutStoreForComplicationCollectionIdentifier:deviceUUID:withHandler:
needsResetSync
requestResetSync
isMaster
hasMessages
requestDeltaSync
_queue_beginGuardingOutgoingSessionRequest
firstMessage
_queue_applyResetMessageList:collectionStore:complicationStore:
_queue_applyDeltaMessageList:collectionStore:complicationStore:
withoutNotifyingSyncObserverResetWithFaces:orderedUUIDs:selectedUUID:
withoutNotifyingSyncObserverAddFace:forUUID:
withoutNotifyingSyncObserverUpdateFaceForUUID:withConfiguration:
withoutNotifyingSyncObserverUpdateFaceForUUID:withResourceDirectory:
withoutNotifyingSyncObserverRemoveFaceForUUID:
withoutNotifyingSyncObserverSetOrderedUUIDs:
withoutNotifyingSyncObserverSetSelectedUUID:
dequeueFirstMessage
sendOutOfBandMessage:ofType:
_queue_executeIfSyncQueuesAreEmpty:
flushAndComputeValidationHashWithObserverCallback:
cleanupOrphanedSyncDirectoriesWithCurrentDeviceUUIDs:
complicationCollectionStoreHasBeenCreated:
complicationCollectionStoreWillBePurged:
collectionStore:didSuppressNotificationForSeqId:
outgoingSyncSessionDidStart:
outgoingSyncSessionGetNextMessage
outgoingSyncSessionDidEnd:withError:
incomingSyncSessionDidStart:
incomingSyncSessionApplyMessage:
incomingSyncSessionResetDataStoreWithError:
incomingSyncSessionDidEnd:withError:
incomingLibraryValidationMessage:
device:propertyDidChange:fromValue:
_companionSyncWrapper
_outgoingMessageLists
_incomingMessageLists
_storeStatuses
_complicationStoreStatuses
_complicationStores
_guardingOutgoingSessionRequest
_sessionMessageList
_sessionStoreStatus
_sessionComplicationStoreStatus
_sessionStore
_sessionComplicationStore
_sessionIsResetSync
_estimatedNumberOfMessagesToSend
_countOfSentMessages
_outgoingSessionMessageEnumerator
nextObjectBlock
setNextObjectBlock:
_nextObjectBlock
arrayWithContentsOfFile:
_enqueueMessageDict:
_persistMessageDictionaries
removeObjectsInRange:
_ensureCoalescingSuspended
_messageAtIndex:
objectAtIndex:
removeObjectAtIndex:
_getMessageType:
_getFaceUUID:
_getClientID:
dataWithContentsOfFile:options:error:
_pruneMessagesMadeObsoleteByNewMessageOfType:withFaceUUID:clientID:
indexSet
addIndex:
removeObjectsAtIndexes:
_persistencePath
_messageDictionaries
_coalescingSuspended
boolValue
_status
null
_setupXPCEventListner
_updateAllSnapshots
_handleCalendarDayChangedNotification
_handleCurrentLocaleDidChangeNotification
runSnapshotServer
initWithService:priority:asMasterStore:options:
setDelegate:queue:
resume:
_queue_resetSync
_queue_deltaSync
data
initForWritingWithMutableData:
finishEncoding
sendData:options:completion:
setNeedsResetSync
_queue_requestSync:withBlock:
setHasChangesAvailable
_getSyncBackoffPeriod
setSerializer:
setTargetQueue:
isSending
delegate
isResetSync
serializer
dataFromChange:
unarchiveObjectWithData:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
_syncService
_syncServiceQueue
_resetSyncRequested
_syncFailureCount
_syncBackoffOngoing
_syncSerialQueue
_deltaSyncRequiredAfterBackoff
_resetSyncRequiredAfterBackoff
_isMaster
_delegate
_pathForFaceBackupWithUUID:
_notifyBackupFileChangedAtPath:
_faceUUIDListPath
_selectedFacePath
_versionPath
_faceUUIDs
_selectedFaceUUID
_version
_backupDirectoryPath
pathExtension
stringByDeletingPathExtension
arrayByExcludingObjectsInArray:
_loadFaceWithUUID:completion:
setAttributes:ofItemAtPath:error:
backupFileAtPath:
_removeBackupDirectory
npsManager
setNpsManager:
archivist
setArchivist:
_npsManager
_archivist
_queue_loadFullCollectionForObserver:completion:
buildVersion
_queue_isEmpty
_queue_faceForUUID:
_setOrderedUUIDs:skipSyncObserver:
_setSelectedUUID:skipSyncObserver:
_addFace:forUUID:skipSyncObserver:
_updateFaceForUUID:withConfiguration:skipSyncObserver:
_updateFaceForUUID:withResourceDirectory:skipSyncObserver:
_removeFaceForUUID:skipSyncObserver:
_fromSyncResetWithFaces:orderedUUIDs:selectedUUID:
_resetWithFaces:orderedUUIDs:selectedUUID:completion:
_queue_setOrderedUUIDs:
_queue_notifyDidUpdateOrderedUUIDs:skipSyncObserver:
_queue_setSelectedUUID:
_queue_notifyDidUpdateSelectedUUID:skipSyncObserver:
_queue_addFace:forUUID:
_queue_notifyDidAddFace:forUUID:skipSyncObserver:
applyConfiguration:
_queue_notifyDidUpdateFaceForUUID:withConfiguration:skipSyncObserver:
_queue_notifyDidUpdateFaceForUUID:withResourceDirectory:skipSyncObserver:completion:
_queue_isEmptyExceptForUUID:
removeUUID:
_queue_notifyDidRemoveFaceOfStyle:forUUID:skipSyncObserver:completion:
removeAllUUIDs
_queue_computeValidationHash
addUUID:withFaceStyle:
updateOrderWithUUIDs:
configuration
validationString
appendFormat:
length
substringFromIndex:
stringWithCapacity:
_queue_copyAllFacesByUUID
isBuildVersionOutdated
refusesToDeleteLastFace
_initialSetupComplete
_refusesToDeleteLastFace
_facesByUUID
_selectedUUID
stringWithString:
appendString:
removeObjectsInArray:
isEqualToArray:
_getUUID:boxedStyle:fromEntry:
_containsUUID:
_orderedUUIDs
_boxedStylesByUUID
destinationOfSymbolicLinkAtPath:error:
copyItemAtPath:toPath:error:
createSymbolicLinkAtPath:withDestinationPath:error:
initWithData:encoding:
arrayWithCapacity:
dataUsingEncoding:
runComplicationStoreServer
removeComplicationCollectionLifecycleObserver:
allValues
_updateAddableFacesFromLibraryFaces:
_loadFacesOfStyle:fromStore:
_updateAddableFaceOfStyle:withExistingLibraryFaces:
indexesOfObjectsPassingTest:
objectsAtIndexes:
_needAddableFaceOfStyle:givenExistingLibraryFaces:
_uuidForAddableFaceOfStyle:updatedWithExistingLibraryFaces:
_fixAddableFaceOrderWithUpdatedUUID:forStyle:
isSingular
applyUniqueConfigurationWithExistingFaces:
insertObject:atIndex:
_organizeFacesByStyle:
_addableFacesStore
_curationCompleteHandler
copyWithZone:
plistRepresentation
prewarm
mainRunLoop
loadFullCollectionWithLocalizableSampleTemplates:seqId:
updateLocalizableSampleTemplate:forClientIdentifier:family:seqId:
removeComplicationForClientIdentifier:seqId:
_complicationStore
NTKDMigrator
NTKDLibraryFacesCurator
NTKDCollectionCurator
NSObject
NTKDCollectionStoreObserver
NTKDZIPArchivist
NTKDComplicationStore
_NTKDComplicationCollectionManifest
NTKDCollectionCoordinator
NSXPCListenerDelegate
NTKDSyncMessage
SYChange
_NTKDLazySidecarPhoto
PhotoFacesCurator
_NTKDPhotoLibraryDeviceObserver
NTKDPhotoLibraryObserver
NTKDCollectionLifecycleObserver
NTKDFaceSnapshotClientHandler
NTKDFaceSnapshotControllerObserver
NTKDActivityTracker
NTKDFaceSnapshotController
NTKComplicationCollectionObserver
_NTKDFaceSnapshottingWindow
NTKDCollectionClient
NTKCollectionServer
NTKDSyncController
NTKDComplicationCollectionLifecycleObserver
NTKDCollectionStoreSyncObserver
NTKDComplicationStoreSyncObserver
NTKDComplicationStoreObserver
NTKDSyncDelegate
NRDevicePropertyObserver
_MessageListEnumerator
_MessageList
_StoreStatus
NTKDFaceSnapshotCoordinator
NTKDCompanionSyncWrapper
SYServiceDelegate
SYSessionDelegate
SYChangeSerializer
NTKDBackupFileManager
NTKDCollectionStore
_NTKDCollectionManifest
NTKDComplicationStoreCoordinator
NTKDAddableFacesCurator
NTKDCollectionStoreKey
NSCopying
NTKDDaemon
NTKDComplicationCollectionClient
NTKComplicationStoreServer
v8@0:4
@8@0:4
v16@0:4@8@?12
v16@0:4@"NTKDCollectionStore"8@?<v@?>12
v12@0:4@8
v12@0:4@"NTKDCollectionStore"8
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v32@0:4@8@12@16@20@24@?28
v32@0:4@"NTKDCollectionStore"8@"NSArray"12@"NSUUID"16@"NSDictionary"20@"NSNumber"24@?<v@?>28
v20@0:4@8@12@16
v20@0:4@"NTKDCollectionStore"8@"NSUUID"12@"NSNumber"16
v20@0:4@"NTKDCollectionStore"8@"NSArray"12@"NSNumber"16
v24@0:4@8@12@16@20
v24@0:4@"NTKDCollectionStore"8@"NSUUID"12@"NTKFaceConfiguration"16@"NSNumber"20
v28@0:4@8@12@16@20@?24
v28@0:4@"NTKDCollectionStore"8@"NSUUID"12@"NSString"16@"NSNumber"20@?<v@?>24
v24@0:4@"NTKDCollectionStore"8@"NTKFace"12@"NSUUID"16@"NSNumber"20
v28@0:4@8i12@16@20@?24
v28@0:4@"NTKDCollectionStore"8i12@"NSUUID"16@"NSNumber"20@?<v@?>24
v20@0:4@8@12B16
v16@0:4i8@12
v12@0:4@?8
@"NTKDBackupFileManager"
v20@0:4@8@12@?16
@12@0:4@8
@"NSObject<OS_dispatch_queue>"
@16@0:4@8@12
v16@0:4@8@12
f8@0:4
v12@0:4f8
@16@0:4@8i12
v20@0:4@8@12i16
v24@0:4@8@12i16B20
v16@0:4@8B12
@"NSString"
@"NSNumber"
@"NSHashTable"
@"<NTKDComplicationStoreSyncObserver>"
@"_NTKDComplicationCollectionManifest"
@"NSMutableDictionary"
@"NSUUID"
B16@0:4@8i12
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
v16@0:4@?8@12
@"NSMutableSet"
@12@0:4i8
@16@0:4i8@12
i8@0:4
v12@0:4i8
d8@0:4
v16@0:4d8
@"NSData"
@"NPTOPhoto"
@"NPTOSidecarPhoto"
v24@0:4@8i12@16@?20
B24@0:4@8@12@16@?20
@"NTKFirstUnlockQueue"
@"NPTOLocket"
@"_NTKDLazySidecarPhoto"
@"NTKDCollectionStore"
v12@0:4@"NSString"8
@?8@0:4
@"NSXPCConnection"
@"NTKDFaceSnapshotController"
@"NSObject<OS_dispatch_source>"
v16@0:4@"NTKComplicationCollection"8@"NSString"12
v12@0:4@"NTKComplicationCollection"8
B16@0:4@8B12
@28@0:4@8B12B16B20^B24
@24@0:4@8B12B16B20
v12@0:4B8
^{__CFString=}12@0:4@8
@"NTKDelayedBlock"
@"_NTKDFaceSnapshottingWindow"
@"NTKComplicationCollection"
@"NSObject<OS_dispatch_semaphore>"
v20@0:4@"NSString"8@"NSUUID"12@"NSNumber"16
v12@0:4@"NSUUID"8
v12@0:4@"NSArray"8
v16@0:4@"NSUUID"8@"NTKFaceConfiguration"12
v16@0:4@"NSUUID"8@"NSString"12
v16@0:4@"NTKFace"8@"NSUUID"12
@"NSMutableArray"
v12@0:4@"NTKDComplicationStore"8
v16@0:4@"NTKDCollectionStore"8@"NSNumber"12
v16@0:4@"NTKDComplicationStore"8@"NSNumber"12
v20@0:4@"NTKDComplicationStore"8@"NSDictionary"12@"NSNumber"16
v28@0:4@8@12@16i20@24
v28@0:4@"NTKDComplicationStore"8@"CLKComplicationTemplate"12@"NSString"16i20@"NSNumber"24
v20@0:4@"NTKDComplicationStore"8@"NSString"12@"NSNumber"16
@"NTKDSyncMessage"8@0:4
v16@0:4B8@12
v16@0:4B8@"NSError"12
B12@0:4@"NTKDSyncMessage"8
B12@0:4^@8
v20@0:4@"NRDevice"8@"NSString"12@16
B20@0:4@8@12@16
@"NTKDCompanionSyncWrapper"
@"_MessageList"
@"_StoreStatus"
@"NTKDComplicationStore"
@"NSEnumerator"
v12@0:4I8
@12@0:4I8
v20@0:4i8@12@16
i12@0:4@8
B20@0:4@8@12^@16
B20@0:4@"SYService"8@"SYSession"12^@16
v20@0:4@"SYService"8@"SYSession"12@"NSError"16
v20@0:4@"SYService"8@"NSData"12@?<v@?B@"NSError">16
v24@0:4@8@12@16@?20
v24@0:4@"SYService"8@"NSInputStream"12@"NSDictionary"16@?<v@?B@"NSError">20
v20@0:4@"SYService"8@"NSError"12@"NSDictionary"16
@20@0:4@8@12@16
@"SYSession"20@0:4@"SYService"8@"SYSession"12@"SYSession"16
v20@0:4@"SYService"8@"NSUUID"12@"NSUUID"16
v16@0:4@"SYService"8B12
v12@0:4@"SYService"8
i20@0:4@8@?12^@16
i20@0:4@"SYSession"8@?<B@?@"<SYChange>">12^@16
v20@0:4@"SYSession"8@"NSArray"12@?<v@?B@"NSError">16
v16@0:4@"SYSession"8@"NSError"12
B16@0:4@8^@12
B16@0:4@"SYSession"8^@12
v16@0:4@"SYSession"8@?<v@?B@"NSError">12
v16@0:4@"SYSession"8@"NSSet"12
@"NSData"12@0:4@"<SYChange>"8
@"<SYChange>"16@0:4@"NSData"8i12
@"NSData"12@0:4@"<SYObject>"8
@"<SYObject>"12@0:4@"NSData"8
@"NSData"16@0:4@"<SYChange>"8i12
@20@0:4@8i12i16
@"<SYChange>"20@0:4@"NSData"8i12i16
@12@0:4B8
v16@0:4@8i12
v16@0:4i8@?12
@"SYService"
@"<NTKDSyncDelegate>"
@"NPSManager"
@"NTKDZIPArchivist"
v24@0:4@8@12B16@?20
v24@0:4i8@12B16@?20
@"<NTKDCollectionStoreSyncObserver>"
@"_NTKDCollectionManifest"
v20@0:4^@8^@12@16
B16@0:4i8@12
@12@0:4^{_NSZone=}8
v20@0:4@"CLKComplicationTemplate"8@"NSString"12i16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>FAKETEAMID.</string>
<key>com.apple.QuartzCore.secure-capture</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.carousel.backlightaccess</key>
<true/>
<key>com.apple.developer.healthkit</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.authorization_bypass</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.clockface.sync</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServicePhotos</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
