%@: Handle new flow: %@
%@: Handle remediation for flow: %@
%@: Notify rules changed
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
remediationMap
T@"NSDictionary",C
URLAppendStringMap
blockpage
Request Access
html
Error loading block page: %@
blockpage_style
 by &ldquo;%@&rdquo;
UNBLOCK_URL_NO_LOC
UNBLOCK_BUTTON_TEXT_NO_LOC
UNBLOCK_STYLE_NO_LOC
PROVIDER_ORGANIZATION_NO_LOC
USER_VISIBLE_RESTRICTED_URL_NO_LOC
INCLUDE_CSS_FILE_NO_LOC
pageTemplateURL
T@"NSURL",R,V_pageTemplateURL
userURL
T@"NSString",C,V_userURL
formActionURL
T@"NSString",C,V_formActionURL
organization
T@"NSString",C
unblockStyle
T@"NSString",C,V_unblockStyle
remediationButtonText
T@"NSString",C,V_remediationButtonText
%@: NEProfilePayloadBase validatePayload should be overriden, dict %@
PayloadUUID
AccessGroup
payloadAtom
T@"NSDictionary",&,N,V_payloadAtom
pendingCertificates
T@"NSMutableDictionary",&,V_pendingCertificates
pluginUpgradeInfo
T@"NSDictionary",&,V_pluginUpgradeInfo
v4@?0
%@: setting reasserting %d
%@: setting tunnel configuration
EncryptionAlgorithm
IntegrityAlgorithm
DiffieHellmanGroup
LifeTime
encryptionAlgorithm
3DES
AES-128
AES-256
AES-128-GCM
AES-256-GCM
SHA1-96
integrityAlgorithm
SHA1-160
SHA2-256
SHA2-384
SHA2-512
diffieHellmanGroup
lifetimeMinutes
Invalid SA life time (%d), valid range is %d to %d inclusive
Invalid DH group (%ld), valid values are 1, 2, 5, 14-21
supportsSecureCoding
TB,R
Ti,V_encryptionAlgorithm
Ti,V_integrityAlgorithm
Ti,V_diffieHellmanGroup
Ti,V_lifetimeMinutes
com.apple.managed.vpn.shared
DeadPeerDetectionRate
ServerCertificateIssuer
ServerCertificateCommonName
IKESAParameters
ChildSAParameters
IKESAParametersArray
ChildSAParametersArray
WakeForRekey
CertificateType
UseConfigurationAttributeInternalIPSubnet
DisableMOBIKE
DisableRedirect
EnablePFS
NATKeepAliveOffloadEnable
NATKeepAliveOffloadInterval
DisableMOBIKERetryOnWake
ProviderBundleIdentifier
PluginType
EnableRevocationCheck
StrictRevocationCheck
none
deadPeerDetectionRate
medium
high
serverCertificateIssuer
serverCertificateCommonName
childSAParameters
childSAParametersArray
wakeForRekey
certificateType
ECDSA256
ECDSA384
ECDSA521
useConfigurationAttributeInternalIPSubnet
disableMOBIKE
disableRedirect
enabledPFS
natKeepAliveOffloadEnable
natKeepAliveOffloadInterval
providerBundleIdentifier
pluginType
enableRevocationCheck
strictRevocationCheck
TB,V_wakeForRekey
T@"NSString",R,V_pluginType
IKESecurityAssociationParametersArray
T@"NSArray",&,V_IKESecurityAssociationParametersArray
childSecurityAssociationParametersArray
T@"NSArray",&,V_childSecurityAssociationParametersArray
T@"NSString",C,V_providerBundleIdentifier
Ti,V_natKeepAliveOffloadEnable
Ti,V_natKeepAliveOffloadInterval
disableMOBIKERetryOnWake
Ti,V_disableMOBIKERetryOnWake
Ti,V_deadPeerDetectionRate
serverCertificateIssuerCommonName
T@"NSString",C,V_serverCertificateIssuerCommonName
T@"NSString",C,V_serverCertificateCommonName
Ti,V_certificateType
TB,V_useConfigurationAttributeInternalIPSubnet
IKESecurityAssociationParameters
T@"NEVPNIKEv2SecurityAssociationParameters",R,V_IKESecurityAssociationParameters
childSecurityAssociationParameters
T@"NEVPNIKEv2SecurityAssociationParameters",R,V_childSecurityAssociationParameters
TB,V_disableMOBIKE
TB,V_disableRedirect
enablePFS
TB,V_enablePFS
TB,V_enableRevocationCheck
TB,V_strictRevocationCheck
MDM must be used to create NEAppProxyProvider configurations
Error creating connection for configuration %@: %@
v8@?0@"NSError"4
v12@?0@"NSArray"4@"NSError"8
LocalEndpoint
v16@?0{?=^{flow_dgram}^^{flow_dgram}}4l12
%s: Size of datagrams array (%lu) does not match size of remoteEndpoints array (%lu)
-[NEAppProxyUDPFlow writeDatagrams:sentByEndpoints:completionHandler:]
%s: Datagrams array contains a non-NSData object
%s: Remote endpoints array contains a non-NWEndpoint object
v8@?0l4
%s: Failed to write flow Data
UDP %@ local port %@
localEndpoint
T@"NWEndpoint",R,V_localEndpoint
type
data
needs-reply
Received
v8@?0@"NSData"4
The IPC connection was closed by the remote end
v8@?0@"NSObject<OS_xpc_object>"4
Received a new connection from %d
Sent
%@ an IPC message with type %u and length %lu, hash %@
messageHandler
T@?,C,V_messageHandler
connection
T@"NSObject<OS_xpc_object>",&,V_connection
listener
T@"NSObject<OS_xpc_object>",&,V_listener
connected
protocolFamily
metadata
T@"NSData",R,C,V_data
TC,R,V_protocolFamily
T@"NEFlowMetaData",R,V_metadata
Failed to create Keepalive packet
Failed to send Keepalive packet
Skipped sending Keepalive packet
Failed to receive Keepalive packet
Failed to process Keepalive packet
Failed to find IKE SA
Failed to create Informational packet
Failed to send Informational packet
Failed to receive Informational packet
Failed to process Informational packet
Cannot initiate connection while in server mode
Failed to generate Child SA SPI
Failed to generate local crypto values
Failed to create IKE SA Init packet
Failed to send IKE SA Init packet
Failed to receive IKE SA Init packet
Received server redirect
Received cookie notification, retrying IKE SA Init with cookie
Failed to create IKE SA Init retry packet
Failed to send IKE SA Init retry packet
Failed to receive IKE SA Init retry packet
Received DH group preference, retrying IKE SA Init
Failed to generate new local crypto values
Failed to process IKE SA Init packet
Failed to generate crypto values
Failed to create IKE Auth packet
Failed to send IKE Auth packet
Failed to receive IKE Auth packet
EAP only mode, IKE Auth packet does not contain EAP
Failed to process IKE Auth (EAP) packet
Failed to send IKE Auth (EAP) packet
Failed to receive IKE Auth (EAP) packet
Failed to process IKE Auth packet
Failed to generate Child SA crypto values
Failed to finish configuration establishment
Failed to update configuration
Failed to install Child SA
Failed to update traffic selectors
Completed connection
IKE Auth
Failed to receive AUTH packet
Error (Invalid Syntax)
Error (No Proposal Chosen)
Error (Invalid SPI)
Error (TS Unacceptable)
Failed to generate local Child crypto values
Failed to create Create Child SA packet
Failed to send Create Child SA packet
Failed to receive Create Child SA packet
Failed to process Create Child SA packet
No eligible configuration for new Child SAs
Error (No Additional SAs)
Failed to process Create Child SA
Created Child SA
Failed to finish Child SA rekey
Failed to uninstall old SAs
Rekeyed Child SA
Delete Child SA
Failed to receive DELETE packet
Failed to create valid IKE SA
Failed to generate local IKE crypto values
Failed to generate IKE SA crypto values
Failed to generate Delete old IKE SA
Failed to switch to rekeyed IKE SA
Rekeyed IKE SA
Failed to send Rekey IKE SA packet
Delete IKE SA
failed to get initiator queue
Failed to copy callback handler
MOBIKE not supported for this IKE SA. Ignoring message.
Failed to connect a new socket for IKE SA
0.0.0.0
Failed to fetch new local address for IKE SA
Failed to send Informational packet again
Failed to receive Informational packet again
Failed to migrate child SAs
Switched IKE SA addresses
ReasonCode
NotifyCode
Failed to process MOBIKE packet
Failed to create MOBIKE packet
Failed to send MOBIKE packet
Failed to process REDIRECT packet
Failed to create REDIRECT response packet
Failed to send REDIRECT response packet
Failed to create Delete packet
Failed to send Delete packet
Failed to receive packet
Failed to process packet
Failed to receive Delete packet
Failed to process Delete packet
Failed to create packet
Failed to send packet
MachineAuthenticationMethod
SharedSecret
MachineIdentity
MachineIdentityData
MachineIdentityDataImported
LocalIdentifier
Missing machine identity
machineAuthenticationMethod
sharedSecretReference
machineIdentity
machineIdentityDataInternal
machineIdentityDataImported
localIdentifier
%@.%@
SCNetworkInterfaceSetExtendedConfiguration failed: %s
Cannot set IPSec settings in service, interface is NULL
T@"NEIdentityKeychainItem",&,V_machineIdentity
T@"NSData",C,V_machineIdentityDataInternal
TB,V_machineIdentityDataImported
Ti,V_machineAuthenticationMethod
T@"NSData",C
sharedSecretKeychainItem
T@"NEKeychainItem",C,V_sharedSecretKeychainItem
machineIdentityReference
T@"NSString",C,V_localIdentifier
AuthName
AuthPassword
NEStatus
IPSec
Status
ConnectTime
v8@?0i4
%s: Cannot create ne_session for nil configID
-[NEVPNConnection newSessionWithConfigID:withCompletionHandler:]
%s: Cannot create ne_session for configID: %@
v12@?0i4^v8
session
T^v,V_session
sessionType
Ti,R,V_sessionType
weakmanager
T@"NEVPNManager",W,V_weakmanager
status
Ti,R,V_status
connectedDate
T@"NSDate",R,V_connectedDate
manager
T@"NEVPNManager",R
VPN-%@.plist
NEPluginPreferences
Failed to create preferences for %@: %s
Enabled
ApplicationURL
%s: failed to commit preferences for %@: %s
-[NEPluginPreferences setPluginTypeEnabled:appURLData:]
%s: failed to apply preferences for %@: %s
Failed to resolve app bookmark from data for %@: %@
PerConfiguration
%s: invalid Per Configuration Data dictionary in preferences file for %@
-[NEPluginPreferences setPreferences:ofType:configurationIdentifier:]
%s: cannot set persistent data for %@: %s
GlobalData
%s: cannot commit changes to persistent data for %@: %s
%s: cannot apply changes to persistent data for %@: %s
/Library/Preferences/SystemConfiguration/VPN-%@.plist
Failed to remove %@: %@
/Library/Preferences/SystemConfiguration
VPN-
.plist
VPN-.plist
com.apple.networkextension.app-proxy
com.apple.networkextension.packet-tunnel
prefs
T^{__SCPreferences=},V_prefs
%@: Setting initial flow divert control socket to %p
NEFlow queue
v20@?0I4i8r*12^{__CFString=}16
v12@?0^{_NEFlow=}4@?<v@?C>8
%@: Setting flow divert delegate interface to %u
%@: Opening new flow divert control socket
%@: Received new flow divert control socket %d
v8@?0@"NSFileHandle"4
%@: Verifying app with signing identifier %@ and pid %d
%@: Calling handleNewFlow with %@
%@: Calling startProxyWithOptions with options %p
%@: Calling stopProxyWithReason because: %s
flowQueue
T@"NSObject<OS_dispatch_queue>",&,V_flowQueue
director
T^{_NEFlowDirector=},V_director
delegateInterfaceIndex
TI,V_delegateInterfaceIndex
PassBytes
PeekBytes
passBytes
TQ,V_passBytes
peekBytes
TQ,V_peekBytes
T@"NSURL",&,V_url
FilterInbound
FilterOutbound
PeekInboundBytes
PeekOutboundBytes
filterInbound
TB,V_filterInbound
filterOutbound
TB,V_filterOutbound
peekInboundBytes
TQ,V_peekInboundBytes
peekOutboundBytes
TQ,V_peekOutboundBytes
Inbound pass offset
Inbound peek offset
Outbound pass offset
Outbound peek offset
inboundPassOffset
TQ,V_inboundPassOffset
inboundPeekOffset
TQ,V_inboundPeekOffset
outboundPassOffset
TQ,V_outboundPassOffset
outboundPeekOffset
TQ,V_outboundPeekOffset
Drop
Remediate
URLAppendString
RemediationURLMapKey
RemediationButtonTextMapKey
URLAppendStringKey
NeedRules
needRules
TB,V_needRules
drop
TB,V_drop
remediate
TB,V_remediate
urlAppendString
TB,V_urlAppendString
remediationURLMapKey
T@"NSString",&,V_remediationURLMapKey
remediationButtonTextMapKey
T@"NSString",&,V_remediationButtonTextMapKey
urlAppendStringMapKey
T@"NSString",&,V_urlAppendStringMapKey
UpdateRules
HandleByDataProvider
Control verdict is set to %@ and %@ rules and %@ the data provider to handle the flow
DROP
ALLOW
UPDATE
NOT UPDATE
NOT ASK
updateRules
TB,V_updateRules
handledByDataProvider
TB,V_handledByDataProvider
Type
Identifier
PasswordReference
ServerAddress
Username
Password
PasswordEncryption
Identity
IdentityData
IdentityDataPassword
IdentityDataPasswordKeychainItem
IdentityDataImported
IdentityDataHash
ProxySettings
DisconnectOnIdle
DisconnectOnIdleTimeout
DisconnectOnSleep
DisconnectOnWake
DisconnectOnWakeTimeout
DisconnectOnUserSwitch
DisconnectOnLogoutKey
DNSSettings
Missing server address
ikev1
l2tp
pptp
plugin
ikev2
<unknown>
identifier
serverAddress
username
password
passwordEncryption
passwordReference
identity
%lu bytes
identityData
identityDataImported
identityDataHash
identityDataPassword
identityReference
proxySettings
disconnectOnSleep
disconnectOnIdle
disconnectOnIdleTimeout
disconnectOnWake
disconnectOnWakeTimeout
__NEVPNProtocolIdentifier
__NEVPNProtocolType
__NEVPNKeychainDomain
keychainDomain
Ti,V_keychainDomain
keychainAccessGroup
T@"NSString",&,V_keychainAccessGroup
T@"NEIdentityKeychainItem",&,V_identity
T@"NSUUID",C,V_identifier
Ti,R,V_type
TB,V_disconnectOnWake
Ti,V_disconnectOnWakeTimeout
passwordKeychainItem
T@"NEKeychainItem",C,V_passwordKeychainItem
T@"NSString",C,V_passwordEncryption
identityReferenceInternal
identityDataInternal
T@"NSData",C,V_identityDataInternal
TB,V_identityDataImported
T@"NSData",C,V_identityDataHash
identityDataPasswordKeychainItem
T@"NEKeychainItem",C,V_identityDataPasswordKeychainItem
T@"NEDNSSettings",C,V_DNSSettings
TB,V_disconnectOnIdle
Ti,V_disconnectOnIdleTimeout
disconnectOnUserSwitch
TB,V_disconnectOnUserSwitch
disconnectOnLogout
TB,V_disconnectOnLogout
T@"NSString",C,V_serverAddress
T@"NSString",C,V_username
T@"NSData",C,V_passwordReference
T@"NSString",C,V_identityDataPassword
TB,V_disconnectOnSleep
T@"NEProxySettings",C,V_proxySettings
MD5-128
MD5-96
%s: No configured local certificate identity
ikev2_crypto_copy_local_sec_identity
%s: No match for configured local certificate identity
%s: Failed to retrieve data for configured local certificate identity (%d)
%s: Failed to sign data - failed to retrieve local identity
ikev2_crypto_copy_cert_signed_data
%s: Failed to sign data - failed to retrieve local identity private key (%d)
%s: Failed to sign data (%d)
SHA-256-HASH
SHA-384-HASH
SHA-512-HASH
crypto context is NULL
failed to reset gcm context
failed to increment gcm iv
Matching remote hostname %@ with remote certificate
<not set>
Could not create secure policy with hostname %@
Could not create certificate array
Certificate data at index %ld was NULL
Certificate %ld Properties:
Certificate at index %ld %s
did not fall within valid dates
could not be created
No valid remote certificate
Certificate is not trusted
Certificate public key: %@
Could not verify signature
Peer certificate is valid
%s: Failed to create shared secret auth data
ikev2_crypto_create_initiator_authentication_data
%s: Failed to create certificate auth data
ikev2_crypto_create_responder_authentication_data
Invalid decryption parameters
Invalid decryption lengths: key(%ld = %ld) key(%ld = %ld) encryptedDataLength(%ld)
CC decrypt failed (status %d, bytes %ld)
Padded len (%d) > payload data len (%zu)
%s: failed to retrieve remote CA cert data by CN (%@)
ikev2_crypto_copy_remote_certificate_authority_array
%s: failed to retrieve remote CA cert data by references
certificate hash did not match for CN (%@)
%s: Failed to retrieve certificate from persistent data (%d)
ikev2_crypto_copy_certificate_from_persistent_data
Failed to set DH group %u
Failed to generate DH key
Failed to generate / set publicKey
Failed to set dhContext
Failed to set publicKeySize
Invalid DH parameter grp=%d.
Unsupported DH parameters grp=%d.
Failed to get DH buffer.
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD129024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DDEF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245E485B576 625E7EC6 F44C42E9 A63A3620 FFFFFFFF FFFFFFFF
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD129024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DDEF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7EDEE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE65381FFFFFFFF FFFFFFFF
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD129024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DDEF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7EDEE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3DC2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D670C354E 4ABC9804 F1746C08 CA237327 FFFFFFFF FFFFFFFF
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD129024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DDEF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7EDEE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3DC2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3BE39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA051015728E5A 8AACAA68 FFFFFFFF FFFFFFFF
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD129024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DDEF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7EDEE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3DC2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3BE39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA051015728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6BF12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200CBBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB3143DB5BFC E0FD108E 4B82D120 A93AD2CA FFFFFFFF FFFFFFFF
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD129024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DDEF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7EDEE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3DC2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3BE39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA051015728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6BF12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200CBBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB3143DB5BFC E0FD108E 4B82D120 A9210801 1A723C12 A787E6D788719A10 BDBA5B26 99C32718 6AF4E23C 1A946834 B6150BDA2583E9CA 2AD44CE8 DBBBC2DB 04DE8EF9 2E8EFC14 1FBECAA6287C5947 4E6BC05D 99B2964F A090C3A2 233BA186 515BE7ED1F612970 CEE2D7AF B81BDD76 2170481C D0069127 D5B05AA993B4EA98 8D8FDDC1 86FFB7DC 90A6C08F 4DF435C9 34063199FFFFFFFF FFFFFFFF
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD129024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DDEF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7EDEE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3DC2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3BE39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA051015728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6BF12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200CBBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB3143DB5BFC E0FD108E 4B82D120 A9210801 1A723C12 A787E6D788719A10 BDBA5B26 99C32718 6AF4E23C 1A946834 B6150BDA2583E9CA 2AD44CE8 DBBBC2DB 04DE8EF9 2E8EFC14 1FBECAA6287C5947 4E6BC05D 99B2964F A090C3A2 233BA186 515BE7ED1F612970 CEE2D7AF B81BDD76 2170481C D0069127 D5B05AA993B4EA98 8D8FDDC1 86FFB7DC 90A6C08F 4DF435C9 3402849236C3FAB4 D27C7026 C1D4DCB2 602646DE C9751E76 3DBA37BDF8FF9406 AD9E530E E5DB382F 413001AE B06A53ED 9027D831179727B0 865A8918 DA3EDBEB CF9B14ED 44CE6CBA CED4BB1BDB7F1447 E6CC254B 33205151 2BD7AF42 6FB8F401 378CD2BF5983CA01 C64B92EC F032EA15 D1721D03 F482D7CE 6E74FEF6D55E702F 46980C82 B5A84031 900B1C9E 59E7C97F BEC7E8F323A97A7E 36CC88BE 0F1D45B7 FF585AC5 4BD407B2 2B4154AACC8F6D7E BF48E1D8 14CC5ED2 0F8037E0 A79715EE F29BE32806A1D58B B7C5DA76 F550AA3D 8A1FBFF0 EB19CCB1 A313D55CDA56C9EC 2EF29632 387FE8D7 6E3C0468 043E8F66 3F4860EE12BF2D5B 0B7474D6 E694F91E 6DCC4024 FFFFFFFF FFFFFFFF
FFFFFFFF FFFFFFFF C90FDAA2 2168C234 C4C6628B 80DC1CD129024E08 8A67CC74 020BBEA6 3B139B22 514A0879 8E3404DDEF9519B3 CD3A431B 302B0A6D F25F1437 4FE1356D 6D51C245E485B576 625E7EC6 F44C42E9 A637ED6B 0BFF5CB6 F406B7EDEE386BFB 5A899FA5 AE9F2411 7C4B1FE6 49286651 ECE45B3DC2007CB8 A163BF05 98DA4836 1C55D39A 69163FA8 FD24CF5F83655D23 DCA3AD96 1C62F356 208552BB 9ED52907 7096966D670C354E 4ABC9804 F1746C08 CA18217C 32905E46 2E36CE3BE39E772C 180E8603 9B2783A2 EC07A28F B5C55DF0 6F4C52C9DE2BCBF6 95581718 3995497C EA956AE5 15D22618 98FA051015728E5A 8AAAC42D AD33170D 04507A33 A85521AB DF1CBA64ECFB8504 58DBEF0A 8AEA7157 5D060C7D B3970F85 A6E1E4C7ABF5AE8C DB0933D7 1E8C94E0 4A25619D CEE3D226 1AD2EE6BF12FFA06 D98A0864 D8760273 3EC86A64 521F2B18 177B200CBBE11757 7A615D6C 770988C0 BAD946E2 08E24FA0 74E5AB3143DB5BFC E0FD108E 4B82D120 A9210801 1A723C12 A787E6D788719A10 BDBA5B26 99C32718 6AF4E23C 1A946834 B6150BDA2583E9CA 2AD44CE8 DBBBC2DB 04DE8EF9 2E8EFC14 1FBECAA6287C5947 4E6BC05D 99B2964F A090C3A2 233BA186 515BE7ED1F612970 CEE2D7AF B81BDD76 2170481C D0069127 D5B05AA993B4EA98 8D8FDDC1 86FFB7DC 90A6C08F 4DF435C9 3402849236C3FAB4 D27C7026 C1D4DCB2 602646DE C9751E76 3DBA37BDF8FF9406 AD9E530E E5DB382F 413001AE B06A53ED 9027D831179727B0 865A8918 DA3EDBEB CF9B14ED 44CE6CBA CED4BB1BDB7F1447 E6CC254B 33205151 2BD7AF42 6FB8F401 378CD2BF5983CA01 C64B92EC F032EA15 D1721D03 F482D7CE 6E74FEF6D55E702F 46980C82 B5A84031 900B1C9E 59E7C97F BEC7E8F323A97A7E 36CC88BE 0F1D45B7 FF585AC5 4BD407B2 2B4154AACC8F6D7E BF48E1D8 14CC5ED2 0F8037E0 A79715EE F29BE32806A1D58B B7C5DA76 F550AA3D 8A1FBFF0 EB19CCB1 A313D55CDA56C9EC 2EF29632 387FE8D7 6E3C0468 043E8F66 3F4860EE12BF2D5B 0B7474D6 E694F91E 6DBE1159 74A3926F 12FEE5E438777CB6 A932DF8C D8BEC4D0 73B931BA 3BC832B6 8D9DD300741FA7BF 8AFC47ED 2576F693 6BA42466 3AAB639C 5AE4F5683423B474 2BF1C978 238F16CB E39D652D E3FDB8BE FC848AD922222E04 A4037C07 13EB57A8 1A23F0C7 3473FC64 6CEA306B4BCBC886 2F8385DD FA9D4B7F A2C087E8 79683303 ED5BDD3A062B3CF5 B3A278A6 6D2A13F8 3F44F82D DF310EE0 74AB6A364597E899 A0255DC1 64F31CC5 0846851D F9AB4819 5DED7EA1B1D510BD 7EE74D73 FAF36BC3 1ECFA268 359046F4 EB879F924009438B 481C6CD7 889A002E D5EE382B C9190DA6 FC026E479558E447 5677E9AA 9E3050E2 765694DF C81F56E8 80B96E7160C980DD 98EDD3DF FFFFFFFF FFFFFFFF
Generate ECP DH %d key
Failed to generate EC %d key, ccec_generate_key returned %d
Memory error
Generated ECP key len %ld
Generate MODP DH %d key
Failed to create DH context.
Failed to generate DH key pair
Failed DH public key size check.
Invalid DH type %d.
Invalid ECP DH GRP %d
Invalid public DH information was generated.
%s: Failed to retrieve all certificate identities (%d)
ikev2_crypto_copy_all_cert_identities
Compute ECP DH %d result
Failed to import remote/local ECP keys
Failed to compute ECP shared secret
Computed ECP shared secret len %ld
Compute MODP DH result
Failed to compute DH value
failed to allocate nonce
failed to allocate gcm context
failed to create copy of gcm context
failed to initialize gcm context
Failed to set child dhContext
Failed to set child publicKeySize
Request certificate revocation check
Failed to add certificate revocation check policy
Failed to set anchor CA certificates for remote certificate validation
Remote certificate evaluation error (%d)
Certificate evaluation error = 
kSecTrustResultInvalid
kSecTrustResultProceed
kSecTrustResultDeny
kSecTrustResultUnspecified
kSecTrustResultRecoverableTrustFailure
kSecTrustResultFatalTrustFailure
kSecTrustResultOtherError
Unknown (%d)
---------------Returned error strings: ---------------.
type = %s.
value = %s.
-----------------------------------------------------.
Strict Certificate Revocation Check is not supported
Verifying signature with hash %@
Could not create remote octets with hash %@
Failed to verify signature with hash %@
Key Pad for IKEv2
gmac failed
gcm update failed
gcm finalize failed
gcm init failed
gcm set iv failed
gcm gmac failed
gcm finalize failure
DestinationAddress
DestinationSubnetMask
RouteGatewayAddress
Missing IPv4Route Destination address
Invalid IPv4Route Destination address
IPv4Route Destination address in loopback
Missing IPv4Route Destination subnetmask
Invalid IPv4Route Gateway address
destinationAddress
destinationSubnetMask
gatewayAddress
T@"NSString",R,V_destinationAddress
T@"NSString",R,V_destinationSubnetMask
T@"NSString",C,V_gatewayAddress
ConfigMethod
AddressArray
Address
initwithcoder single router IPv4address %@
SubnetMaskArray
SubnetMask
initwithcoder subnet mask %@
Router
IncludeRoutes
ExcludeRoutes
OverridePrimary
Missing IPv4 address
Invalid IPv4 address
Missing IPv4 subnet mask
Invalid IPv4 subnet mask
Missing IPv4 router
Invalid IPv4 router
automatic
configMethod
manual
addresses
subnetMasks
router
includedRoutes
excludedRoutes
overridePrimary
Ti,V_configMethod
T@"NSString",C,V_router
TB,V_overridePrimary
T@"NSArray",R,V_addresses
T@"NSArray",R,V_subnetMasks
T@"NSArray",C,V_includedRoutes
T@"NSArray",C,V_excludedRoutes
NETunnelProviderErrorDomain
NEPacketTunnelNetworkSettings can only be used with NEPacketTunnelProvider
NEPacketTunnelNetworkSettings must be used with NEPacketTunnelProvider
%@: setTunnelConfiguration validation failed
%@: Handle App Message with %@
protocolConfiguration
T@"NEVPNProtocol",&,V_protocolConfiguration
onDemandEnabled
TB,V_onDemandEnabled
appRules
T@"NSArray",&,V_appRules
routingMethod
Ti,R
reasserting
Failed to load the configuration: %@
v12@?0@"NEConfiguration"4@"NSError"8
Calling init on NEPolicyCondition is not valid
condition-type
application-uuid
address
end-address
domain
account-identifier
interface-name
custom-entitlement
traffic-class-start
traffic-class-end
ip-protocol
prefix
effective-application
real-application
effective-pid
all-interfaces
scoped-interface
traffic-class-range
local-address-subnet
local-address-range
remote-address-subnet
remote-address-range
entitlement
conditionType
Ti,V_conditionType
applicationUUID
T@"NSUUID",C,V_applicationUUID
Ti,V_pid
TI,V_uid
accountIdentifier
T@"NSString",C,V_accountIdentifier
T@"NSString",C,V_domain
interfaceName
T@"NSString",C,V_interfaceName
trafficClassStart
TI,V_trafficClassStart
trafficClassEnd
TI,V_trafficClassEnd
ipProtocol
TS,V_ipProtocol
TC,V_prefix
startAddress
T@"NWAddressEndpoint",&,V_startAddress
endAddress
T@"NWAddressEndpoint",&,V_endAddress
customEntitlement
T@"NSString",&,V_customEntitlement
negative
TB,GisNegative,V_negative
Calling init on NEPolicyRouteRule is not valid
action
interface
allow
deny
qos-marking
cellular
wifi
wired
expensive
Ti,V_action
Ti,V_type
Calling init on NEPolicyResult is not valid
result-type
secondary-result
control-unit
service-uuid
agent-uuid
route-rules
pass
skip
filter
socket-divert
socket-scoped
ip-tunnel
use-netagent
trigger-scoped
resultType
Ti,V_resultType
secondaryResultType
Ti,V_secondaryResultType
skipOrder
TI,V_skipOrder
controlUnit
TI,V_controlUnit
agentUUID
T@"NSUUID",C,V_agentUUID
serviceUUID
T@"NSUUID",C,V_serviceUUID
serviceData
TI,V_serviceData
routeRules
T@"NSArray",C,V_routeRules
Calling init on NEPolicy is not valid
Failed to init NEPolicy
order
result
conditions
TI,V_order
T@"NEPolicyResult",&,V_result
T@"NSArray",C,V_conditions
Failed to init NEPolicySession
NEPolicy Control IO Queue
priority
policies
control
privileged-tunnel
default
Internal Error
Unknown Packet Type
Invalid TLV
Policy Result Invalid
Policy Conditions Invalid
Policy ID Not Found
Invalid Process
Unknown Error %u
com.apple.net.necp_control
Failed to get an NECP control socket from nehelper
Failed to set socket %d to non-blocking mode
Failed to create dispatch read source
Invalid policy message size: %zu
Policy control socket received error %s
Policy control socket received EOF
Policy write error: %s
Policy failed to write an entire message (%zd < %zu)
Failed to create set priority message
Failed to send set priority message
Failed to receive set priority message
Failed to set priority to %u: %@
Failed to create lock session message
Failed to send lock session message
Failed to receive lock session message
Failed to lock session to process: %@
Failed to create register service message
Failed to send register service message
Failed to receive register service message
Failed to register service %@: %@
Failed to unregister service %@: %@
Failed to create add message
Failed to add TLVs to message
Failed to send add message
Failed to receive add message
Failed to add policy: %@
unknown
%s (%u)
default 
effective-application:%s 
real-application:%s 
domain:%s 
account-identifier:%s 
custom-entitlement:%s 
entitlement 
effective-pid:%u 
uid:%u 
all-interfaces 
scoped-interface:%s 
traffic-class-range:%u-%u 
ip-protocol:%u 
local-address:%@/%u
<nil>
remote-address:%@/%u
local-address-range:%@-%@
remote-address-range:%@-%@
NO DATA
Reached end of TLV Buffer
TLV buffer truncated
MISSING POLICY INFORMATION!
Failed to create dump-all message
Failed to send dump-all message
Failed to receive dump-all response
PROCESS
SESSION ORDER
POLICY ORDER
CONDITIONS
RESULTS
Failed to create apply message
Failed to send apply message
Failed to receive apply message
Failed to apply policies: %@
Failed to create delete message
Failed to send delete message
Failed to receive delete message
Failed to delete policy %u: %@
Failed to create delete all message
Failed to send delete all message
Failed to receive delete all message
Failed to delete all policies: %@
internalPriority
Ti,V_internalPriority
T@"NSMutableDictionary",&,V_policies
ioQueue
T@"NSObject<OS_dispatch_queue>",&,V_ioQueue
responseSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_responseSemaphore
lastReceivedResponse
T@"NSData",&,V_lastReceivedResponse
lastSendMessageID
TI,V_lastSendMessageID
controlSource
T@"NSObject<OS_dispatch_source>",&,V_controlSource
controlSocket
Ti,V_controlSocket
VendorConfiguration
Organization
IdentityReference
FilterBrowsers
FilterSockets
Missing plugin type
vendorConfiguration
filterBrowsers
filterSockets
T@"NSString",&,V_pluginType
TB,V_filterBrowsers
TB,V_filterSockets
T@"NSDictionary",C,V_vendorConfiguration
T@"NSString",C,V_organization
T@"NSData",C,V_identityReference
DestinationPrefixLength
Missing NEIPv6Route Destination address
Invalid NEIPv6Route Destination address
IPv6Route Destination address in loopback
Missing NEIPv6Route Destination Network Prefix Length
Invalid NEIPv6Route Gateway address
destinationNetworkPrefixLength
T@"NSNumber",R,V_destinationNetworkPrefixLength
initwithcoder single router IPv6address %@
PrefixLengthArray
PrefixLength
initwithcoder single prefixLength %@
Missing IPv6 address
Invalid IPv6 address
Missing IPv6 router
Invalid IPv6 router
Invalid IPv6 prefix length
link-local
networkPrefixLengths
T@"NSArray",R,V_networkPrefixLengths
Error while calling extension: %@
Vendor context object is nil, cannot talk to extension
Host: %@
vendorContext
T@"<NEFilterExtensionProviderProtocol>",R
%d %d %d
pfkey get spi, source/destination is NULL
pfkey get spi, source IP family(%d) does not match destination IP family(%d)
pfkey get spi, invalid source IP family %d
pfkey delete all, source/destination is NULL
pfkey delete all, source IP family(%d) does not match destination IP family(%d)
pfkey delete all, invalid source IP family %d
kern.ipc.maxsockbuf
Invalid PFKey message size: %zu
PFKey socket received error: %s
PFKey socket received EOF
pfkey send invalid args
PFKey write error: %s
PFKey failed to write an entire message (%zd < %zu)
pfkey %s, source/destination is NULL
sadb add
sadb update
pfkey %s, source IP family(%d) does not match destination IP family(%d)
pfkey %s, invalid source IP family %d
sadb delete
sadb get
pfkey sadb promisc failed, satype %u
pfkey %d, sa type %u
pfkey spd add, source/destination is NULL
pfkey spd add, source IP family(%d) does not match destination IP family(%d)
pfkey spd add, invalid source IP family %d
pfkey spd add, plen %u prefs len %u prefd len %u
IKE SA Init
ikev2_packet_create_to_send(kIKEv2ExchangeTypeIKESAInit) failed
Failed to find preferred DH group
Notify (Cookie)
Failed to add cookie data
Failed to add payloads
Failed to add redirect payload
Notify (Redirected From)
Notify (Redirect Supported)
Redirected, but redirection not supported
Failed to add NAT detection source payload
Notify (NAT Detection Source IP)
Failed to add NAT detection destination payload
Notify (NAT Detection Destination IP)
Notify (IKEv2 Fragmentation Supported)
Failed to add Vendor ID payload
Error (Invalid KE Payload)
Error (Unsupported Critical Payload)
Notify (Server Redirect)
Unable to find matching IKE proposal
Detected remote NAT
Detected local NAT
IKEv2 fragmentation supported
Vendor ID did not match required ID
CANCEL_BUTTON
/System/Library/Frameworks/UIKit.framework
UIDevice
%s: bundle %@ class %@
+[NEUserNotification getUIDeviceClass]
DONT_ALLOW_BUTTON
ALLOW_BUTTON
isBanner
TB,V_isBanner
notification
T@,&,V_notification
notificationSource
T@,&,V_notificationSource
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,V_callbackQueue
callback
T@?,C,N,V_callback
Servers
SearchDomains
domainName
matchDomains
matchDomainsNoSearch
Missing both DNS servers and DNS search domains
Non-string for DNS server
Invalid DNS server
Non-string for DNS search domain
server
searchDomains
servers
T@"NSArray",R,V_servers
T@"NSArray",C,V_searchDomains
T@"NSString",C,V_domainName
T@"NSArray",C,V_matchDomains
TB,V_matchDomainsNoSearch
com.apple.private.neagent
NEProvider creation failed, caller does not have the %s entitlement
com.apple.developer.networking.networkextension
NEProvider objects cannot be instantiated from non-extension processes
Failed to init NEProvider
path
%@: Sleeping
%@: Waking
CFBundlePackageType
XPC!
NSExtension
NSExtensionPointIdentifier
com.apple.networkextension.
defaultPathEvaluator
T@"NWPathEvaluator",&,V_defaultPathEvaluator
defaultPath
T@"NWPath",&,V_defaultPath
context
T@"NEExtensionProviderContext",&,V_context
deviceIdentifier
T@"NSString",&,V_deviceIdentifier
appName
T@"NSString",&,V_appName
data_delegate
T@"<NEFilterDataExtensionProviderHostDelegate>",W,V_data_delegate
Action
DNSSearchDomainMatch
DNSServerAddressMatch
InterfaceTypeMatch
SSIDMatch
ProbeURL
Invalid action
Invalid search domain
connect
disconnect
ignore
evaluate-connection
interfaceTypeMatch
WiFi
probeURL
Cellular
Ti,R,V_action
T@"NSArray",C,V_DNSSearchDomainMatch
T@"NSArray",C,V_DNSServerAddressMatch
Ti,V_interfaceTypeMatch
T@"NSArray",C,V_SSIDMatch
T@"NSURL",C,V_probeURL
Rules
Missing connection rules
Invalid connection rules
connectionRules
T@"NSArray",C,V_connectionRules
MatchDomains
UseDNSServers
Invalid connection rule action
Missing connection rule match domains
Invalid connection rule domain
Invalid connection rule required DNS server
connect-if-needed
never-connect
useDNSServers
T@"NSArray",R,V_matchDomains
T@"NSArray",C,V_useDNSServers
csops to get the blob size failed for pid %d: %s
No codesigning blob for pid %d
csops to get the blob data (size %u) failed: %s
Codesign blob does not contain a code directory blob.
task_for_pid(mach_task_self(), %d, &task) => %d (%s)
task_info(mach_task_self(), %d, TASK_AUDIT_TOKEN) => %d (%s)
%s: Failed to get max proc count (%s)
NEKernMaxProc
app:
v8@?0@"NSString"4
v8@?0@"NSArray"4
name
grade
enterprise
personal
Invalid configuration grade: %@
aovpn
appvpn
contentfilter
pathcontroller
Invalid configuration type: %@
No configuration found for swapping %@ -> %@
Invalid configuration type for swapping: %@
plugin-type
Invalid protocol type
Missing interface name
Only "plugin" and IKE protocols are supported with App VPN
PPP protocols are not supported with Personal VPN
Configuration does not have a VPN type
Configuration does not have content filter type
Plugin configuration could not be created
filter-browsers
filter-sockets
enabled
Missing protocol
on-demand-enabled
server-address
disconnect-on-idle-timeout
disconnect-on-sleep
Invalid %@, an identity in the %s keychain is required
system
user
persistent-reference
Invalid %@ index, use the "list-identities" command to obtain a list of available identities and their indicies
provider-bundle-identifier
"provider-bundle-identifier" can only be specified for provider-based configurations
access-group
provider-type
Provider type can only be set for plugin-based per-app VPN configurations
app-proxy
packet-tunnel
Invalid %@, must be either "app-proxy" or "packet-tunnel"
Configuration VPN type is not IPSec
authentication-method
certificate
shared-secret
Invalid %@, valid values are "none", "certificate", and "shared-secret"
certificate-type
Invalid %@, valid values are "RSA", "ECDSA256", "ECDSA384", and "ECDSA521"
use-internal-ip-subnet
disable-mobike
disable-redirect
enable-pfs
enable-revocation-check
strict-revocation-check
local-identifier
remote-identifier
use-extended-authentication
dead-peer-detection-rate
Invalid %@, valid values are "none", "low", "medium", and "high"
%@ is only available for the IKEv2 protocol
server-CA-name
server-cert-name
encryption-algorithm
Invalid %@, valid values are "%@", "%@", "%@", "%@", "%@" and "%@"
integrity-algorithm
Invalid %@, valid values are "%@" and "%@"
diffie-hellman-group
Invalid %@, valid values are 1, 2, 5, 14-21
life-time
Invalid %@, valid values are in the range %d - %d minutes (24 hours)
child-encryption-algorithm
child-integrity-algorithm
child-diffie-hellman-group
child-life-time
Invalid %@, valid values are in the range 10 - 1440 minutes (24 hours)
Configuration VPN type is not L2TP
securID
kerberos
cryptocard
Invalid %@, valid values are "password", "securID", "certificate", "kerberos", and "cryptocard"
verbose-logging-enabled
ipv4-config-method
Invalid %@, valid values are "ppp", "manual", "automatic", and "off"
ipv4-address
ipv4-subnet-mask
ipv4-router
%@ %@ %@ cannot be specified, %@ is not "manual"
send-all-traffic
%@ cannot be specified, %@ is not "manual" or "ppp"
ipv6-config-method
Invalid %@, valid values are "automatic", "manual", and "link-local"
ipv6-address
ipv6-prefix-length
ipv6-router
machine-authentication-method
Invalid %@, valid values are "shared-secret" and "certificate"
Invalid %@, VPN type is not L2TP
machine-identity
Invalid %@, an identity in the system keychain is required
evaluateconnection
dns-search-domain-match
dns-server-match
interface-type
ethernet
ssid-match
probe-url
index
No rule present with given index
cellular-fallback
foreground
background
No Path Controller configuration present
match-signing-identifier
match-path
match-domains
match-account-identifiers
cellular-behavior
wifi-behavior
allow-while-roaming
Cellular behavior value not recognized
WiFi behavior value not recognized
No Path Controller configuration present to apply path rules to
No rules present
No Path Controller configuration present to apply app rules to
No App VPN configuration present to apply app rules to
Failed to load the current configurations: %@
Requires AlwaysOn configuraton
ui-toggle-enabled
service-exception-name
AirPlay
AirPrint
AirDrop
VoiceMail
Service must be: AirPlay, AirPrint, AirDrop or VoiceMail
service-exception-action
Action is required
Allow
Action must be Allow or Drop
allow-all-cn-plugins
allow-websheet
cn-plugin-bundle-id
BundleId already exists
No existing service to be removed
Service does not exist
No existing CaptoveNetworkPlugin to be removed
BundleId does not exist
auto-proxy-discovery
auto-config-url
exclude-simple-hostnames
exception-list
use-passive-ftp
http
https
rtsp
gopher
socks
Invalid proxy type: %@, valid values are "http", "https", "ftp", "rtsp", "gopher", and "socks"
port
authentication-required
Authentication is required, but username is missing
Authentication is required, but password is missing
%-5s %-100s %-9s %-6s
Subject Summary
Validity
Domain
certificate-data
%-5lu %-100s %-9s %-6s
valid
expired
configuration-file-path
Configuration with name "%@" already exists
profile-file-path
Failed to create a configuration from profile payload at %@. Make sure that the file only contains the configuration payload.
Failed to read from %@
Configuration with name "%@" does not exist
Failed to remove configuration "%@": %@
New Configurations:
Unreadable or empty file
UserMap
%@ (Users:
 %s(%d)[%@]
 %d[%@]
 None)
v16@?0@"NSDictionary"4q8
Failed to save configuration "%@": %@
process ingestion command, path %@
neutil
Unknown command
v12@?0@"NEConfiguration"4@"NSString"8
T@"NEConfigurationManager",R,V_manager
createdConfigurations
T@"NSMutableArray",&,V_createdConfigurations
currentConfigurations
T@"NSMutableArray",&,V_currentConfigurations
identities
T@"NSMutableArray",&,V_identities
configFile
T@"NSString",C,V_configFile
configFileLast
T@"NSString",C,V_configFileLast
currentConfiguration
T@"NEConfiguration",&,V_currentConfiguration
onDemandRules
T@"NSArray",C
isAlwaysOn
TB,R,V_isAlwaysOn
clientName
T@"NSString",R,V_clientName
NEConfigurationErrorDomain
configuration is corrupted
configuration is invalid: %@
configuration type is wrong
configuration owner application is wrong
configuration is stale
failed to write configuration to disk
configuration does not exist
invalid configuration operation request
configuration is unchanged
permission denied
IPC failed
failed to make the change in SCPreferences
failed to copy keychain items
failed into import certificates into keychain
unknown certificate format
failed to import certificate
internal failure with certificate installation
file not found
com.apple.networkextension
%@: reasserting set to %d
%@: provider set tunnel configuration to %@
%@: Calling handleAppMessage with message of length %u and completionHandler %p
%@: no provider found
%@: AlwaysOn VPN configuration: activeInterfaceProtocolKey %@
%@: configuration has no VPN configuration
%@: IPC detached
%@: IPC is already established
v20@?0B4I8@"NSData"12@?<v@?@"NSData">16
%@: created IPC listener
T@"NEIPC",&,V_ipc
ipcIdleTimer
T@"NSObject<OS_dispatch_source>",&,V_ipcIdleTimer
mobile
/System/Library/PrivateFrameworks/LoggingSupport.framework/LoggingSupport
dlopen(LoggingSupport) failed
OBJC_CLASS_$_OSLogPreferencesSubsystem
Inherit
Debug
successfully set new logging level to %s
failed to set new logging level to %s (%ld,%ld)
failed to allocate an OSLogPreferencesSubsystem
TrustedExecutables
NetworkConnect.icns
/System/Library/Frameworks/NetworkExtension.framework
TLSSessionID
T@"NSData",C,V_TLSSessionID
SSLCipherSuites
T@"NSSet",C,V_SSLCipherSuites
minimumSSLProtocolVersion
TI,V_minimumSSLProtocolVersion
maximumSSLProtocolVersion
TI,V_maximumSSLProtocolVersion
com.apple.
Plugin_NEFilterInit
Plugin_NEFilterStart
Plugin_NEFilterStop
Plugin_NEFilterEnvironmentEvent
Plugin_NEFilterDispose
Failed to load the plugin's init and dispose functions
message-type
flow-uuid
direction
socket-identifier
error
New flow rejected due to invalid parameters
New flow rejected because flow object creation failed
verdict-drop
verdict-peek
verdict-pass
Add data message rejected, no browser flows exist
Add data message rejected, invalid Flow UUID parameter
Add data message ignored, no open flow for UUID
Add data message rejected, invalid data parameter
data-start-offset
v40@?0{?=CQQQQ}4
Data complete message rejected, no browser flows exist
Data complete message rejected, invalid Flow UUID parameter
Data complete message ignored, no open flow for UUID
command
Received new agent client connection, %@
xpc-connection
config-id
UniqueDeviceID
DeviceUniqueIdentifier
ServiceID
PluginInit failed
%s: Plugin does not implement PluginStart
-[NEAgentFilterPlugin handleStart:]
parameters
NEFilterProviderConfiguration
%s: Missing or invalid parameters
%s: Plugin does not implement PluginStop
-[NEAgentFilterPlugin handleStop:]
event-type
event-data
%s: Plugin does not implement PluginEnvironmentEvent
-[NEAgentFilterPlugin handleEnvironmentEvent:]
socket
persistent-data
persistent-data-type
T@"NEAgentSession",R,W,V_session
queue
T@"NSObject<OS_dispatch_queue>",R,V_queue
pluginInitialized
TB,V_pluginInitialized
configID
T@"NSUUID",&,V_configID
pluginPrefs
T@"NEPluginPreferences",&,V_pluginPrefs
clientListener
T@"NSObject<OS_xpc_object>",&,V_clientListener
outstandingSetGlobalDataOps
Ti,V_outstandingSetGlobalDataOps
outstandingSetDataOps
Ti,V_outstandingSetDataOps
builtInPlugin
TB,R,V_builtInPlugin
{?=CCCQQ}16@?0^{NESocketContentFilter_s=}4^{NEContentFilterFlow_s=}8^v12
v8@?0^{NESocketContentFilter_s=}4
NEConfigurationManager queue
com.apple.developer.networking.vpn.api
com.apple.private.AuthorizationServices
com.apple.private.neconfiguration-write-access
failed to make changes in SCPreferences: %@
Exception caught while decoding configuration %@: %@
config-plugin-type
%s: failed to load the configurations: %@
-[NEConfigurationManager postGeneration]_block_invoke
Failed to read the index: %@
%@ No configurations exist
user-uuid
ConfigurationProperties
ApplicationID
Reload from disk complete
current generation (%lld) does not equal posted generation (%llu), fetching a new index
config-operation
config-index
config-generation
v20@?0B4q8@"NSObject<OS_xpc_object>"16
com.apple.neconfigurationchanged
notify_register_dispatch failed: %d
Signature
/Library/Preferences/com.apple.networkextension.plist
%@ Failed to read data from %@
NEVPNAppRule
NEVPNProtocolPlugin
Generation
Version
Index
SCPreferencesSignature
SCPreferencesSignature2
Got an exception while reading the index: %@
plugin-types
application-id
Successfully posted generation %lld
System configuration is enabled
On Demand configuration is enabled
App VPN configuration is enabled
Always On VPN is enabled
%s clean up system keychain for reset protocol
-[NEConfigurationManager saveConfigurationToDisk:updateSCPreferences:currentSignature:userUUID:notifyNow:isUpgrade:]
%@: SCPreferencesCommitChanges failed with configuration %@: %@
%@: SCPreferencesApplyChanges failed with configuration %@: %s
NEConfigurationManager save prefs
%s (%d)
SCPreferencesCreate failed: %@
%s:%d: Locking SCPreferences
-[NEConfigurationManager saveConfigurationToDisk:currentSignature:userUUID:isUpgrade:completionQueue:completionHandler:]_block_invoke
SCPreferencesLock failed while saving a configuration: %@
%s:%d: Unlocking SCPreferences
%@ Failed to save configuration %@ to disk: %ld
%@ Skipped saving configuration %@ to disk, because it is unchanged
%@ Successfully saved configuration %@ to disk
SCPreferencesCommitChanges failed while removing configuration %@: %@
SCPreferencesApplyChanges failed while removing configuration %@: %s
NEConfigurationManager remove prefs
-[NEConfigurationManager removeConfigurationFromDisk:completionQueue:completionHandler:]_block_invoke
SCPreferencesLock failed while removing a configuration: %@
%@ Failed to remove configuration %@ from disk: %@
%@ Successfully removed configuration %@ from disk
Updating the saved SCPreferences signature
Some non-nehelper process is trying to save the SCPreferences signature
Failed to write the new file while updating the SCPreferences signature
%s failed to load configurations: %@
-[NEConfigurationManager syncWithSystemConfigurationWithAppNameCallback:completionHandler:]_block_invoke
NEConfigurationManager prefs sync
SCPreferencesCreate failed: %s
SCPreferencesLock failed: %s
SCPreferences signature (%@) does not match saved signature (%@), checking all configurations
Updating configuration "%@" from the corresponding SCNetworkService
Creating a new configuration corresponding to SCNetworkService "%@"
%s:appname %@ returned for plugin %@
Failed to convert %@ to a UUID
Configuration "%@" no longer has a corresponding SCNetworkService, removing it
SCPreferences signature matches saved signature, change origin was NetworkExtension
config-identifiers
config-ids-data
config-objects
%@ Failed to load configurations: %@
filtering-only
%s: unsupported protocol type %d for Always-on VPN
-[NEConfigurationManager resetKeychainItemsAfterProtocolChange:newConfiguration:]
%@ Saving configuration with existing signature %@
config-object
config-data
config-signature
config-identifier
handleFileRemoved
%s: failed to save %@: %@
-[NEConfigurationManager handlePluginTypesRemoved:configuration:vpn:updateSCPreferences:]
SCPreferencesCreate failed while handling application removal: %s (%d)
-[NEConfigurationManager handleApplicationsRemoved:withCompletionHandler:]_block_invoke
SCPreferencesLock failed while handling application removal: %s (%d)
Removing configuration %@ because the corresponding VPN application has been removed
%s: failed to remove configuration %@: %@
Removing app rule %@ from configuration %@ because the corresponding application has been removed
identity-reference
%@ Loaded identities from nehelper, ipc_success = %d, result_code = %lld, response_data = %p
client-name
changedNotifyToken
Ti,V_changedNotifyToken
currentIndex
T@"NSDictionary",&,V_currentIndex
changedQueue
T@"NSObject<OS_dispatch_queue>",&,V_changedQueue
changedHandler
T@?,C,V_changedHandler
loadedIndex
T@"NSMutableDictionary",&,V_loadedIndex
loadedConfigurations
T@"NSMutableDictionary",&,V_loadedConfigurations
decoder
T@"NSKeyedUnarchiver",&,V_decoder
generation
Tq,V_generation
helper
T@"NEHelper",R
T@"NSData",&,V_SCPreferencesSignature
hasReadPermission
TB,V_hasReadPermission
isVPNPublicAPI
TB,V_isVPNPublicAPI
isVPNPrivateAPI
TB,V_isVPNPrivateAPI
isNEHelper
TB,V_isNEHelper
hasVPNAPIEntitlement
TB,V_hasVPNAPIEntitlement
userUUID
T@"NSUUID",R,V_userUUID
T@"NSString",C,N,V_configFile
delegate
T@"<NEConfigurationManagerDelegate>",&,V_delegate
incomingMessageHandler
T@?,C
configurationChangeSource
Ti,V_configurationChangeSource
v16@?0^{ikev2_socket_s=}4^{ikev2_packet_s=}8i12
%s: Get socket %d
ikev2_session_create_block_invoke_4
v20@?0^{sockaddr=CC[14c]}4^{sockaddr=CC[14c]}8*12^i16
Failed to get PFKEY socket
IKEv2 Session Database
Mode
Tunnel
IPSecProtocol
LifeTimeinSeconds
LocalAddress
RemoteAddress
LocalPort
RemotePort
UniqueID
OutgoingInterface
IPSecInterface
IKEv2 Session Main
IKEv2 Session Initiator
IKEv2 Session Responder
%llX Sending request:
%llX Sending reply:
AssignedIPv4Address
AssignedIPv4NetMask
AssignedIPv6Address
AssignedIPv6NetMask
UseNATTraversal
Data
SendPosition
ReceivePosition
Notify (Additional IPv4 Address)
Notify (Additional IPv6 Address)
Additional_IP4_Addresses
Additional_IP6_Addresses
RedirectedToServer
RedirectedToServerType
IKESocketError
SocketErrorConnRefused
SocketErrorNetUnreach
TrafficSelectorsLocal
TrafficSelectorsRemote
DerivedTrafficSelectors
Skipping Keepalive for %llX: (rekeying %s, cur spi %llX)
IKEv2Session
NATTraversal
NATTPort
NATTKeepAlive
NATTKeepAliveOffload
NATTKeepAliveOffloadInterval
NATTKeepAliveInterval
NATTDetectedPeer
Failed to migrate incoming SA
Failed to migrate outgoing SA
Sending IKE Packet  : REQ: %llX msg id %d on %@
%llX Sending fragment %ld/%ld on %@
Sending IKE Packet  : REP: %llX msg id %d on %@
Receiving IKE Packet: %s: %llX msg id %d (i %llx r %llX) (inQueue %s) (%@)
%llX Ignoring received packet: (Initiator %llX, Responder %llX)
%llX Received fragment:
%llX Ignoring received packet: nonce check failed
%llX Received packet:
Rekey IKE SA
Rekey Child SA
Notify (Rekey SA)
Create Child SA
Informational
%llX Received duplicate for message %d, re-sending reply
%llX Received duplicate fragment %d for message %d
NEIPSecIKE Child
ConditionType
RemoteAddressSubnet
Result
Skip
SkipOrder
RemoteAddressRange
StartAddress
EndAddress
SubnetPrefix
BoundInterface
InterfaceName
LocalAddressSubnet
IPTunnel
TunnelInterface
Cannot write on routing socket
ReplayWindowSize
SPIValue
EncryptionKey
AuthAlgorithm
AuthKey
LocalStartAddress
LocalEndAddress
RemoteStartAddress
RemoteEndAddress
ikev2_socket: Adding client %s for %@
ikev2_socket: Cancelling client %s for %@
ikev2_socket: Removing client %s for %@
IKEv2 found %u NAT64 prefix%s on interface %d(%s)
nw_nat64_synthesize_v6 failed
Failed to get IKE socket from NEHelper
copyconninfo (%s)
ikev2_socket: Created socket %@ on interface %@ with%s local address
Failed to initialize IKEv2 socket
Send failed (%s)
IKEv2 Socket Queue
IKEv2Socket
<ikev2_socket %p> %@:%u -> %@:%u%s
 (Closed)
Failed to receive isakmp packet: %s
Failed to receive keep alive packet: %s
Packet shorter than header size (size: %zu, minimum expected: %zu)
Failed to receive packet: %s
The length in the isakmp header is too big.
Failed to allocate socket read buffer.
Invalid len (%zd Bytes) & extralen (%lu Bytes)
Content Filter Flow queue
Flow not open
NEContentFilterFlow
<NEContentFilterFlow, %p [%p]> {
IPv4Settings
IPv6Settings
TunnelOverheadBytes
tunnelOverheadBytes
legacy dictionary is missing a VPN dictionary
T@"NEIPv4Settings",C,V_IPv4Settings
T@"NEIPv6Settings",C,V_IPv6Settings
T@"NSNumber",C,V_tunnelOverheadBytes
T@"NSNumber",C,V_MTU
DeadPeerDetectionEnabled
DeadPeerDetectionInterval
DeadPeerDetectionRetryInterval
DeadPeerDetectionRetryIntervalMilliseconds
DeadPeerDetectionMaxRetries
DeadPeerDetectionMaxRetriesBeforeReporting
MOBIKESupported
RedirectSupported
RedirectedFromServer
%s: Failed to retrieve password by reference
ikev2_ike_sa_get_configured_password
IDAddress
LocalIdentifierType
RemoteIdentifier
RemoteIdentifierType
SharedSecretReference
%s: Failed to retrieve shared secret by reference
ikev2_ike_sa_get_configured_shared_secret
SharedSecretKey
LocalCertificate
LocalCertificateReference
RemoteCertificateAuthorityName
RemoteCertificateAuthorityReferences
RemoteCertificateAuthorityHash
CertificateRevocationCheckEnable
CertificateStrictRevocationCheck
EAPProperties
None
InternalInterface
InterfaceUnspecified
ServerMode
AutoEnable
InitialContact
ValidateRemoteCertificate
RemoteCertificateHostname
NATTKeepAliveEnabled
DisableSwitchToNATTPort
ConfigurationAttributeRequest
ConfigurationRequest
ConfigurationReply
CustomPayloads
IKESAInit
IKEAuth
VendorID
VendorIDPosition
VerifyVendorID
Proposals
NonceSize
DHGroup
PRFAlgorithm
EAPMethod
AuthenticationMethod
Lifetime
Certificate
IdleTimeoutEnabled
IdleTimeoutSeconds
IKEv2IKESA
DeadPeerDetectionReceiveIntervalTriggerReporting
DeadPeerDetectionReceiveMaxShortDPDBeforeReporting
DisplayName
network
T^{__CNNetwork=},V_network
T@"NSString",R
SSID
BSSID
signalStrength
Td,R
secure
TB,R,GisSecure
autoJoined
TB,R,GdidAutoJoin
justJoined
TB,R,GdidJustJoin
chosenHelper
TB,R,GisChosenHelper
response
T^{__CNPluginResponse=},V_response
T^{__CNPluginCommand=},V_command
commandType
T@"NEHotspotNetwork",R
networkList
T@"NSArray",R
v8@?0^{__CNPluginCommand=}4
Received error: %@
Notify (Cookie 2)
Notify (Update SA Addresses)
Error (Unacceptable Addresses)
Failed to receive Update Addresses packet
NEAppProxyProviderDefaultErrorDomain
startProxyWithOptions:completionHandler: not implemented
control_delegate
T@"<NEFilterControlExtensionProviderHostDelegate>",W,V_control_delegate
IKEVersion
DummyIPSecObject
v16@?0^{NEIPSecIKE_s=}4C8^{__CFDictionary=}12
failed to get ike remote address
failed to get remote port
failed to create remote address struct
%s:%d: value for key %@ is missing or type != %lu
NEIPSecIKEFixConfigurationDictionary
%s:%d: type of value for key %@ != %lu
NEIPSecIKEValidateIKEDictionary
ReparseConfFile
IdentifierVerification
Name
NEIPSecIKEValidateIKEChildDictionary
InstallPolicies
InstallRoutes
ForcedRouteRemote
ForcedRouteRemotePrefix
TSType
TSStartAddress
TSEndAddress
TSStartPort
TSEndPort
TSProtocol
ChildProposals
ChildProtocol
ipsecobjectref
ipsecopcode
ipsecikedict
ipsecchilddict
send_xpc_ike_create result %d
com.apple.SecureNetworking.IPSec
NEIPSec:create_xpc_connection, xpc_connection_create_mach_service fails
NEIPSec: connection returns unknown type
v8@?0^v4
com.apple.SecureNetworking.IPSec.xpc
NEIPSec: connection interrupted
NEIPSec: connection error
process_response invalid reply, opcode = 0x%llx
process_response: op 0x%llx
process_response unknown reply, opcode = 0x%llx
reply
get_response_boolean response ERROR: requestref %p, returned ref %p
get_response_boolean response: ref %p
com.apple.networkextension.disable-restrictions
com.apple.networkextension.use-ikev2provider
com.apple.symptoms.hasAlternateAdvice
com.apple.networkextension.fallback-default
statistics
configuration
extended status
flow divert token
SessionCommandType
SessionBootstrapPort
SessionAuditSessionPort
SessionGroupID
SessionUserID
SessionPID
SessionOptions
SessionForceOnDemand
SessionDisableOnDemand
SessionPrimaryPluginEndpoint
SessionSecondaryPluginEndpoint
Establish IPC returning primary = %p, secondary = %p
/Library/Preferences/com.apple.networkextension.necp.plist
drop_all_level
net.necp.drop_all_level
com.apple.nehelper
nehelper connection received non-invalid XPC error, cancelling
nehelper connection received XPC_ERROR_CONNECTION_INVALID
nehelper connection received unknown message: %s
nehelper connection received NULL message
xpc_connection_create_mach_service(%s, XPC_CONNECTION_MACH_SERVICE_PRIVILEGED) failed
ipv4-subnets
ipv6-subnets
subnet-addresses
subnet-masks
service-probe-failed
redirected-addresses
included-routes
excluded-routes
service-dns-service
disconnected
connecting
disconnecting
invalid
Failed to fetch security session info: %s
stop all queue
com.apple.nesessionmanager
Got an error on the XPC connection used to fetch the list of active sessions: %s
SessionClientType
SessionPluginType
SessionList
SessionIdentifier
SessionConfigType
B12@?0L4^v8
%s: no matching sessions found
ne_session_stop_all_with_plugin_type_block_invoke
Failed to obtain the flow divert token for configuration %s
flow-host-name
flow-host-address
flow-host-port
flow-multipath-requested
app-data
flow divert token size is 0
Failed to allocate %u bytes for the flow divert token
getsockopt(SO_FLOW_DIVERT_TOKEN) failed: %s
NetworkExtension
PathController
LogToFile
LogLevel
Stop command received
Device slept too long
Plugin initiated
No network available
Network changed, tunnel no longer viable
Plugin was disabled
Plugin failed
Authentication was canceled
Device went to sleep
Bad configuration
Authentication took too long
Tunnel did not come up in time
Tunnel did not re-assert in time
Tunnel must be started from the app
Configuration does not have a server address
Server address is invalid
Failed to resolve the server address
Negotiation with the server failed
Tunnel was idle for too long
Server is not responding
Tunnel was terminated by the server
Server is down or unreachable
Authentication failed
Client certificate is missing
Client certificate is invalid
Client certificate is not yet valid
Client certificate has expired
Server certificate is invalid
Server certification is not yet valid
Server certificate has expired
Configuration was disabled
Configuration was removed
Configuration was superceded by another configuration
User logged out
Console user changed
Tunnel is being re-started with different credentials
com.apple.nesessionmanager.running
com.apple.nesessionmanager.info
ne_session queue
SessionStatus
SessionInfoType
SessionInfo
Failed to fetch info with type %d: %s
mach-lookup
com.apple.nesessionmanager.flow-divert-token
Falling back to %s
SessionNotificationType
SessionStopReason
com.apple.networkextension.ondemandcachechanged
delegate-class-id
cache-command
result-data
services
service-domain-info
service-domains
Invalid flow properties: hostname is empty
Invalid flow properties: address is INADDR_ANY
Invalid flow properties: address is IN6ADDR_ANY_INIT
Invalid flow properties: missing hostname and address
Invalid flow properties: invalid port
flow divert token queue
Flow divert token session status changed to %d, cleaning up
SessionFlowDivertTokenControlUnit
SessionFlowDivertTokenProperties
SessionFlowDivertTokenSigningIdentifier
SessionFlowDivertTokenKey
ne_tlv_add
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NetworkExtension_Sim/NetworkExtension-563.50.32/SessionClient/ne_session.c
tlv_iter->remaining >= add_size
setting-name
setting-type
setting-value
result-code
lite
Invalid configuration type, valid types are "lite", "packet-tunnel" and "filter"
provider
Invalid protocol type, valid type is "provider"
Invalid protocol type, valid types are "ikev1" and "ikev2"
Protocol can only be specified for "lite", "packet-tunnel", and "app-proxy" configurations
%@.PASSWORD
Failed to set the password in the keychain: %d
Failed to delete the password keychain item: %d
%@.SHAREDSECRET
Failed to set the shared secret in the keychain: %d
Failed to delete the shared secret keychain item: %d
The provider type cannot be specified for this configuration type
Got an error on the connection with the app: %@
Failed to establish an IPC connection to target app %@
Newly-created (unsaved) configurations:
%@ (filter)
%@ (app-proxy)
%@ (packet-tunnel)
%@ (lite)
%@ (packet-tunnel)
Failed to load configuration %@: %@
Current Status:        Invalid
Current Status:        Disconnected
Current Status:        Connecting
Current Status:        Connected
Current Status:        Reasserting
Current Status:        Disconnecting
stop-current-session
Failed to start the tunnel: %@
v12@?0@"NSObject"4@"NSString"8
T@"NSXPCListener",R,V_listener
currentManager
T@"NEVPNManager",&,V_currentManager
createdManagers
T@"NSMutableArray",&,V_createdManagers
currentManagers
T@"NSMutableArray",&,V_currentManagers
targetAppBundleID
T@"NSString",&,V_targetAppBundleID
isServerMode
TB,V_isServerMode
T@"NSXPCConnection",&,V_connection
remoteObject
T@"<NEConfigurationCommandHandling>",&,V_remoteObject
listenerEndpoint
T@"NSXPCListenerEndpoint",R
NEFilterSource global queue
com.apple.nefilterpolicychanged
parent-url
URL_Request
url-request
URL_Response
url-response
NEFilterSource could not add new flow
remediation-url
x-apple-content-filter://nefilter-unblock
remediation-button-text
url-append-string
Duplicate request made.
%@%@%@%@
display:none
PageData
RemediationURL
RedirectURL
remediateWithDecisionHandler: dont expect remediation
remediateWithDecisionHandler: could not establish connection to data provider
registered
TB,V_registered
pendingData
T@"NSMutableData",&,V_pendingData
flowUUID
T@"NSUUID",&,V_flowUUID
lastPendingDataStartIndex
TQ,V_lastPendingDataStartIndex
lastSendDataLength
TQ,V_lastSendDataLength
pendingDataStartIndex
TQ,V_pendingDataStartIndex
peekIndex
TQ,V_peekIndex
passLength
TQ,V_passLength
currentResponse
T@"NSURLResponse",&,V_currentResponse
currentRequest
T@"NSURLRequest",&,V_currentRequest
T@"NSObject<OS_dispatch_queue>",&,V_queue
T@"NSString",&,V_urlAppendString
remediationURL
T@"NSString",&,V_remediationURL
T@"NSString",&,V_remediationButtonText
T@"NSString",&,V_organization
expectRemediation
TB,V_expectRemediation
parentURL
T@"NSURL",&,V_parentURL
T@"NSURL",R,V_url
Ti,R,V_direction
socketIdentifier
TQ,R,V_socketIdentifier
compare:
Not hashing dictionary containing one or more non-string keys
Not hashing value with class %@
Not hashing value with type %s
NEHasherInvalidOperationException
NEHasher cannot be used as a decoder
sha1Context
T^{CC_SHA1state_st=IIIIIII[16I]i},V_sha1Context
%@: failed to init, providerClass is not subclass of NEAppProxyProvider
%@: Calling stopProxyWithReason
%@: Calling stop completion handler
T@"<NEAppProxyProviderContainerDelegate>",&,V_delegate
stopCompletionHandler
T@?,C,V_stopCompletionHandler
T@"NEAppProxyProvider",R,V_provider
Notify (Initial Contact)
Notify (MOBIKE Supported)
%s: Failed to add IDi / Initial Contact / MOBIKE payload
ikev2_ike_auth_initiator_create
%s: Failed to add IDr payload
X.509 Certificate Signature
%s: Failed to add auth payload
%s: Failed to add cert payload
%s: Failed to add config request payload
Notify (ESP TFC Padding Not Supported)
Notify (Non First Fragments Also)
%s: Failed to add child sa / TSi / TSr payload
Notify (EAP Only Authentication)
%s: Failed to add EAPOnly payload
%s: Failed to add vendor payload
Error (Authentication Failed)
Authentication method did not match
EAP authentication data could not be verified
Notify (PrivateError)
Received private notify error %u
%s proposal chosen
More than one
Could not receive SPI
Proposal did not match
Server MOBIKE supported
Could not ingest traffic selectors
%s: No EAP data received
ikev2_ike_auth_initiator_create_eap_response
Initiator ID could not be verified
Responder ID could not be verified
No Proposals requested
Could not setup chosen proposal
Authentication data could not be verified
Request
ikev2_ike_auth_responder_create
%s: Failed to add authentication data payload
%s: Failed to add config reply payload
%s: No TSi / TSr
%s: No chosen child proposal
%s: Failed to create array for chosen child proposals
No certificate payload received
Could not allocate certificate array
Certificate %ld could not be read
No authentication data received
Certificate authentication data could not be verified
Passing authentication because configuration does not require certificate validation
NEFilterErrorDomain
com.apple.networkextension.filter-configuration-changed
-[NEFilterManager init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NetworkExtension_Sim/NetworkExtension-563.50.32/Framework/Managers/NEFilterManager.m
NEFilterManager objects cannot be instantiated from NEProvider processes
%s: failed to remove the configuration: %@
-[NEFilterManager removeFromPreferencesWithCompletionHandler:]_block_invoke
%s: failed to save the new configuration: %@
-[NEFilterManager saveToPreferencesWithCompletionHandler:]_block_invoke
localizedDescription
providerConfiguration
hasLoaded
TB,V_hasLoaded
T@"NEConfiguration",&,V_configuration
configurationManager
T@"NEConfigurationManager",R,V_configurationManager
T@"NEFilterProviderConfiguration",&
TB,GisEnabled
Control
PrivilegedTunnel
High
Default
Pass
SocketDivert
Filter
Trigger
TriggerIfNeeded
TriggerScoped
NoTriggerScoped
SocketScoped
RouteRules
UseNetAgent
Application
RealApplication
Account
AllInterfaces
TrafficClassRange
Protocol
LocalAddressRange
Entitlement
Deny
QoSMarking
Wired
Expensive
Failed to save NECP drop level to %@
Failed to set %s to %d: %s
TunnelSecondaryResult
ScopedInterface
FlowDivertControlUnit
FilterControlUnit
ServiceUUID
ServiceData
Interface
NetAgentUUID
ApplicationUUID
RealApplicationUUID
AccountID
StartTrafficClass
EndTrafficClass
ProtocolIndex
Port
StartPort
EndPort
IsNegative
NEVPNErrorDomain
com.apple.networkextension.statuschanged
com.apple.networkextension.app-configuration-changed
-[NEVPNManager init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NetworkExtension_Sim/NetworkExtension-563.50.32/Framework/NEVPNManager.m
%@ objects cannot be instantiated from NEProvider processes
Failed to remove the configuration: %@
Missing protocol or protocol has invalid type
Failed to save the new configuration: %@
Failed to save configuration: %@
The configuration was not saved because it was unchanged from the previously saved version
Unknown: %@
Unknown.
T@"NEConfiguration",C,V_configuration
TB,GisOnDemandEnabled
protocol
T@"NEVPNProtocol",&
T@"NEVPNConnection",R,V_connection
Failed to create a NEConfiguration from profile payload with type '%@'
ExternalIdentifierString
Grade
AlwaysOnVPN
AppVPN
ContentFilter
ProfileInfo
ApplicationName
Missing configuration identifier
Missing name
Invalid configuration grade
externalIdentifier
applicationName
application
alwaysOnVPN
appVPN
contentFilter
pathController
payloadInfo
Application-Created VPN Identity
com.apple.security.pkcs12
Application-Created VPN Payload
Application-Created VPN Profile
Application-Created Content Filter Payload
Application-Created Content Filter Profile
Ti,R,V_grade
T@"NSUUID",R,V_identifier
T@"NSString",C,V_application
T@"NSString",C,V_name
T@"NSString",C,V_applicationName
applicationIdentifier
T@"NSString",C,V_applicationIdentifier
T@"NSString",C,V_externalIdentifier
T@"NEVPN",C,V_VPN
T@"NEAOVPN",C,V_alwaysOnVPN
T@"NEVPNApp",C,V_appVPN
T@"NEContentFilter",C,V_contentFilter
T@"NEProfileIngestionPayloadInfo",C,V_payloadInfo
T@"NEPathController",C,V_pathController
Provider
Missing plugin
TB,GisEnabled,V_enabled
T@"NEFilterProviderConfiguration",C,V_provider
TunnelType
Invalid app rule
App Proxy tunnel type can only be used with plugin-based configurations
tunnelType
packet
Failed to send a FLOW_DIVERT_PKT_APP_MAP_CREATE message: %s
Failed to send a FLOW_DIVERT_PKT_APP_MAP_CREATE with size %lu bytes: %s
T@"NSArray",C,V_appRules
Ti,V_tunnelType
noRestriction
TB,V_noRestriction
To-Do: NEProfilePayloadContentFilter validatePayload: dict %@
Security Association
Key Exchange
Initiator Identity
Responder Identity
Certificate Request
Authentication
Nonce
Error (Invalid IKE SPI)
Error (Invalid Major Version)
Error (Invalid Message ID)
Error (Single Pair Required)
Error (Internal Address Failure)
Error (Failed CP Request)
Error (Invalid Selectors)
Error (Unexpected NAT Detected)
Notify (Set Window Size)
Notify (Additional TS Possible)
Notify (IPComp Supported)
Notify (Use Transport Mode)
Notify (HTTP Cert Lookup Supported)
Notify (No Additional Addresses)
Notify (No NATs Allowed)
Delete
Vendor
Initiator Traffic Selector
Responder Traffic Selector
Encrypted
Encrypted Fragment
Configuration
Error (Temporary Failure)
Error (Child SA Not Found)
IDFQDN
IDUserFQDN
ADASN1DN
KeyID
IPv4
IPv6
Reply
AssignedIPv4DNS
AssignedIPv4DHCP
AssignedAppVersion
AssignedIPv6DNS
AssignedIPv6DHCP
AssignedIPv4Subnet
AssignedAttributes
AssignedIPv6Subnet
AssignedIPv4PCSCF_STD
AssignedIPv6PCSCF_STD
AssignedIPv6PCSCF
AssignedDNSDomain
IPv4Address
IPv6Address
IPv4Subnet
IPv6Subnet
String
RedirectedToServerTypeIPAddress
RedirectedToServerTypeIPv6Address
RedirectToServerTypeFQDN
Failed to create SA payload
Failed to create KE payload
Failed to create NONCE payload
Failed to create Notify payload
Failed to create Delete payload
Informational reply does not contain Delete payload
IKEv2 Packet
Initiator SPI: %llX
Responder SPI: %llX
Exchange Type: %@
Response: %@
Initiator: %@
Message ID: %d
Fragment: %d/%d
%@ Payload:
IKEv2Packet
Failed to decrypt packet: Bad encrypted payload
Failed to decrypt packet: Bad checksum
Failed to process fragment number %d/%d
Failed to decrypt packet
Decrypted data: %@
Netmask
AssignedIPv6PCSCFNetMask
IKE SPI: %llX
DH Group: %d
Key: %@
Type: %@
Value: %@
%sEncoding: %@
Data: %@
Encoding: %@
Data: %@
Method: %@
Data: %@
Message Type: %@
Configuration: %@
%sNo Data
%sAddress[%ld]: %@
IKE SPI: %llX
Child SPI: %X
No Data
IKE SPI: %llX
Data: %@
Child SPI: %X
Data: %@
Data: %@
currentVerdict
isOpen
isRemediationFlow
NEFilterFlow queue
T@"NEFilterAbsoluteVerdict",&
TB,V_isRemediationFlow
T@"NSURL",R,V_URL
ParentURL
URLRequest
URLResponse
NEFilterBrowser:
URL:%@
request
T@"NSURLRequest",&,V_request
T@"NSURLResponse",&,V_response
SocketFamily
SocketType
SocketProtocol
EPID
UUID
EUUID
RemoteEndpoint
NEFilterSocketFlow:
Socket Family:%d
Socket Type: %d
Socket Protocol: %d
Local IP: %@
Remote IP: %@
URL: %@
epid
Ti,V_epid
T@"NWEndpoint",C,V_localEndpoint
remoteEndpoint
T@"NWEndpoint",C,V_remoteEndpoint
socketFamily
Ti,V_socketFamily
socketType
Ti,V_socketType
socketProtocol
Ti,V_socketProtocol
PayloadRoot
PayloadOrganization
PayloadType
PayloadIdentifier
PayloadDescription
PayloadContent
PayloadVersion
PayloadRemovalDisallowed
PayloadCertificateHash
ProfileSourceTypeKey
ProfileSourceTypeMDMPush
ProfileSourceTypeDefault
VPNType
VPNSubType
ProviderType
VendorConfig
PromptForVPNPIN
com.apple.vpn.managed
com.apple.vpn.managed.applayer
com.apple.vpn.managed.alwayson
com.apple.webcontent-filter
com.apple.networkusagerules
IKEv2
L2TP
PPTP
Proxies
HTTPProxyType
Automatic
Manual
HTTPProxyAuthenticated
HTTPProxyUsername
HTTPProxyPassword
_activeVPN
_certificateData
_certificatePassphrase
ExportedSharedSecret
IPSecSharedSecret
IPSecSharedSecretObf
com.apple.payload
PayloadCertificateUUID
PayloadCertificateFileName
PayloadCertificateIdentityUUID
IdentityCertificate
UserDefinedName
PayloadDisplayName
AlwaysOn
LinkLocal
OnDemandSupported
OnDemandEnabled
OnDemandRules
DisconnectOnIdleTimeOut
XAuthName
XAuthPassword
XAuthPasswordRef
XAuthPasswordEncryption
XAuthMethod
ExchangeMode
HashAlgorithm
AES256
SHA1
ExtendedAuthEnabled
UserName
AuthPasswordPluginType
CommRemoteAddress
IdentityDataPasswordKeyStr
AuthEAPPlugins
AuthProtocol
EAP-RSA
EAP-TLS
EAP-KRB
TokenCard
CCPEnabled
CCPMPPE40Enabled
CCPMPPE128Enabled
VerboseLogging
DisconnectOnIdleTimer
DisconnectOnWakeTimer
DisconnectOnFastUserSwitch
DisconnectOnLogout
Extended
Prompt
TunnelConfigurations
Interfaces
ServiceExceptions
UIToggleEnabled
AllowCaptiveWebSheet
AllowAllCaptiveNetworkPlugins
AllowedCaptiveNetworkPlugins
BundleIdentifier
ServiceName
ProtocolType
ServerCertificateIssuerCommonName
LifeTimeInMinutes
ChildSecurityAssociationParameters
NATKeepAliveInterval
EnableCertificateRevocationCheck
StrictCertificateRevocationCheck
Medium
_PayloadCertificateRefForWifi
_PayloadCertificateRefForCellular
_PayloadCertificateRef
_PayloadMachineCertificateRef
AppRules
ExecutableMatch
SigningIdentifier
DesignatedRequirement
Path
AccountIdentifierMatch
DNSDomainMatch
NoDivertDNS
VPNUUID
com.apple.mobilesafari
com.apple.webapp
MobileSafari
OnDemandMatchAppEnabled
com.apple.WebKit.Networking
identifier "com.apple.WebKit.Networking" and anchor apple
/System/Library/Frameworks/WebKit.framework/Versions/A/XPCServices/com.apple.WebKit.Networking.xpc/Contents/MacOS/com.apple.WebKit.Networking
FilterType
Plugin
PluginBundleID
ApplicationCreated
PPP Password
IPSec XAuth Password
CF Password
IPSec Shared Secret
.XAUTH
VPNApplicationBundleID
ApplicationRules
AppIdentifierMatches
AllowRoamingCellularData
AllowCellularData
%@ getConfigurationProtocol: protocol info to be initialized
configurePluginWithPayload: start with type %@ and dict %@
configurePluginWithPayload: plugin info missing
configurePluginWithPayload: pluginType missing
HasPacketTunnel
configurePluginWithPayload: failed to allocate for %@ protocol
HasAppProxy
configurePluginWithPayload: unsupported payload type %@
%@ configurePluginWithPayload: unsupported authen type %@.
configurePluginWithPayload: done, serverAddress %@, providerConfiguration %@
%@ ingestDisconnectOptions start with %@
%@ ingestDisconnectOptions failed: protocol not allocated
ingestPPPDict start with %@
ingestPPPDict failed: VPN not initialized
%@ ingestPPPDict: unsupported password data type %@
%@ ingestPPPDict: unsupported %@ type %@
%@ ingestPPPDict: invalid %@ type %@
%@ ingestPPPDict: done with result %@
configurePPPCommon start
configurePPPCommon failed: VPN not initialized
configurePPPCommon: IPv4 settings are Off for payload dictionary %@
configurePPPCommon: invalid IPv6 dictionary
configureL2TPwithPPPOptions
configureL2TPwithPPPOptions failed: app-layer VPN not supported
configureL2TPwithPPPOptions failed to allocate for L2TP
configurePPPWithVPNOptions
configurePPPWithVPNOptions: L2TP not initialized
configurePPPWithVPNOptions: nothing to do, empty %@ dictionary
configurePPPWithVPNOptions: invalid %@ dictionary
%@ ingestProxyOptions: missing protocol info
%@ ingestProxyOptions %@
%@ ingestProxyOptions: unsupported proxy data type %@
%@ configureIKE with %@
configureIKE: protocol not initialized
%@ configureIKE failed to locate protocol for ipsec
%@ configureIKE failed to find protocol object for ipsec
%@ configureIKE: unsupported Xauth password data type %@
%@ configureIKE: unsupported password data type %@
%@ configureIKE: unsupported shared secret data type %@
%@ configureIKE: unsupported authen type %@.
%@ configureIKE, done with %@
%@ configureVpnOnDemandRules: start with %@
%@ configureVpnOnDemandRules failed: VPN not initialized
%@ configureVpnOnDemandRules: VPN OnDemand rules already ingested. Skip current dictionary.
%@ configureVpnOnDemandRules done: onDemand rules %@
%@ ingestPPPData for %@
%@ ingestIPSecDict for type %@ with dict '%@'
%@ ingestIPSecDict: empty %@ dict
%@ ingestIPSecDict: empty IPSec dict for L2TP. Apply defaults.
%@ ingestIPSecDict: can't alloc dictionary
%@ ingestIPSecDict: assuming authen by sharedsecret
%@ initWithVPNPayload: '%@'
%@ initWithVPNPayload: empty payload atom
%@ initWithVPNPayload: couldn't extract VPN type from payload
%@ initWithVPNPayload : VPN type '%@' not supported
%@ initWithVPNPayload failed for config '%@'
%@ initWithVPNPayload failed, can't create VPN for config '%@'
%@ initWithVPNPayload: ingest %@
%@ initWithVPNPayload: done, serverAddress %@
%@ initWithVPNPayload: failed
%@ initWithAppLayerVPNPayload: '%@'
%@ initWithAppLayerVPNPayload: empty payload atom
%@ initWithAppLayerVPNPayload: VPN type missing
%@ initWithAppLayerVPNPayload: initWithName failed for '%@'
%@ initWithAppLayerVPNPayload failed, can't create VPN for config '%@'
%@ initWithAppLayerVPNPayload failed, missing %@ configuration
initWithAppLayerVPNPayload: Could not set App-layer VPN rule for identifier %@
%@ initWithAppLayerVPNPayload: done, serverAddress %@
%@ initWithAppLayerVPNPayload: failed
NEConfiguration configureAOVPNTunnelFromTunnelDict called with dict %@
NEConfiguration configureAOVPNTunnelFromTunnelDict failed to create object
v8@?0I4
%@ configureAOVPNTunnelFromTunnelDict: unsupported password data type %@
%@ configureAOVPNTunnelFromTunnelDict: %@ required for %@ with %@ method
%@ configureAOVPNTunnelFromTunnelDict: invalid authen type %@.
%@ configureAOVPNTunnelFromTunnelDict: invalid ProtocolType (%@),  IKEv2 expected
%@ configureAOVPNTunnelFromTunnelDict: unsupported shared secret data type %@
%@ configureAOVPNTunnelFromTunnelDict: %@ required with %@ method
%@ initWithAlwaysOnVPNPayload: '%@'
%@ initWithAlwaysOnVPNPayload: empty payload atom
%@ initWithAlwaysOnVPNPayload: missing %@ dictionary
%@ initWithAlwaysOnVPNPayload failed
%@ initWithAlwaysOnVPNPayload failed, can't create VPN
%@ initWithAlwaysOnVPNPayload: invalid %@ %@ option '%@'
%@ initWithAlwaysOnVPNPayload: failed to create tunnel configs
%@ initWithAlwaysOnVPNPayload: missing %@ array
%@ initWithAlwaysOnVPNPayload: multiple %@ configurations detected
%@ initWithAlwaysOnVPNPayload: invalid tunnel configuration interfaces
AlwaysOnVPNInterfaceWiFi
AlwaysOnVPNInterfaceCellular
%@ initWithAlwaysOnVPNPayload: must have one of %@ or %@ configs
%@ initWithAlwaysOnVPNPayload: aovpn tunnel configs %@, self %@
%@ initWithContentFilterPayload: '%@'
%@ initWithContentFilterPayload: empty payload atom or plugin type, or wrong filter type
%@ initWithContentFilterPayload failed
%@ initWithContentFilterPayload failed, can't create content filter
%@ initWithContentFilterPayload failed, can't create provider
%@ initWithContentFilterPayload: unsupported password data type %@
%@ initWithContentFilterPayload: provider %@
NEConfiguration setCertificatesAOVpn: certs %@, mapping %@
NEConfiguration setCertificatesAOVpn: alwaysOnVPN config missing
NEConfiguration setCertificatesAOVpn: cellular tunnel configs missing
NEConfiguration setCertificatesAOVpn: tunnel cert %s for Cellular tunnel
missing
NEConfiguration setCertificatesAOVpn: WiFi tunnel config missing
NEConfiguration setCertificatesAOVpn: tunnel cert %s for WiFi tunnel
NEConfiguration setCertificatesAppVPN: done (OK %d)
NEConfiguration setCertificatesVPN: done (OK %d)
NEConfiguration setCertificateContentFilter: done
NEConfiguration setCertificates: malformed certificate references %@
NEConfiguration getPendingCertificateUUIDsVPN: pending %d, cert UUIDs %@
NEConfiguration getPendingCertificateUUIDsAppVPN: pending %d, cert UUIDs %@
setConfigurationVPNPassword failed: VPN not allocated
%@ setPayloadInfoIdentityUserNameAndPassword: missing protocol info
%@ setPayloadInfoIdentityProxy: proxy user %@, password %@
%@ setPayloadInfoIdentityProxy: skipped, not in payload.
%@ setPayloadInfoIdentityProxy: missing  protocol info
setPayloadInfoIdentityIPSecSharedSecret: no SharedSecret found, set to blank
setPayloadInfoIdentity called for AlwaysOn, not applicable
setPayloadInfoIdentity with %@
%@ setPayloadInfoCommon payload UUID '%@', organization '%@'
%@ setProfileInfo %@
%@ setAppLayerVPNRuleSettings: appID %@
%@ setAppLayerVPNRuleSettings: appLayer VPN not initialized
%@ setAppLayerVPNRuleSettings: skip rule setting for empty ID or rules %@, %@
%@ setAppLayerVPNRuleSettings: failed to set %@, unsupported type %@
%@ setAppLayerVPNRuleSettings: failed to allocate for app rules
%@ setAppLayerVPNRuleSettings: done with %@
setAppLayerVPNRuleSettings could not add Safari App VPN rules
%@ initWithPathControllerPayload: '%@'
%@ initWithPathControllerPayload: empty payload atom
%@ initWithPathControllerPayload: ApplicationRules missing
%@ initWithPathControllerPayload: ApplicationRules malformed
%@ initWithPathControllerPayload: AppIdentifierMatches malformed
%@ initWithPathControllerPayload: AllowRoamingCellularData malformed
%@ initWithPathControllerPayload: AllowCellularData malformed
%@ initWithPathControllerPayload: initWithName failed for '%@'
%@ initWithPathControllerPayload failed, could not create Path Controller for config '%@'
%@ initWithPathControllerPayload: done
%@ initWithPathControllerPayload: failed
setLocalCertificate: unsupported data type %@.
ingestIKEv2Dict: empty dictionary
ingestIKEv2Dict: uninitialized protocol
%@ extractPayloadContentsSharedSecret: dict %@
%@ extractPayloadContentsSharedSecret: Invalid shared secret object type %@, setting to nil
%@ extractPayloadContentsSharedSecret: (value class %@)
%@ extractPayloadContents: payloadDict %@
%@ NEProfilePayloadVPNBase initWithPayload: payloadDict %@
NEProfilePayloadVPNBase initWithPayload: self %@,  cached atom %@
NEProfilePayloadBaseVPN validate: To-Do. dict %@
AuthNameRequired
AuthPasswordRequired
HTTPProxyUsernameRequired
HTTPProxyPasswordRequired
SharedSecretRequired
PromptForVPNPINRequired
NEProfilePayloadBaseVPN getPreprocessedPayloadContents: dict %@
%@ setPostprocessedPayloadContents newContents %@
userNameRequired
TB,N,V_userNameRequired
passwordRequired
TB,N,V_passwordRequired
proxyUserNameRequired
TB,N,V_proxyUserNameRequired
proxyPasswordRequired
TB,N,V_proxyPasswordRequired
sharedSecretRequired
TB,N,V_sharedSecretRequired
pinRequired
TB,N,V_pinRequired
userName
T@"NSString",C,N,V_userName
T@"NSString",C,N,V_password
proxyUserName
T@"NSString",C,N,V_proxyUserName
proxyPassword
T@"NSString",C,N,V_proxyPassword
sharedSecret
T@"NSString",C,N,V_sharedSecret
T@"NSString",C,N,V_pin
AutoProxyDiscovery
AutoProxyConfigurationEnabled
AutoConfigURL
AutoConfigJavaScript
HTTPEnabled
HTTPServer
HTTPSEnabled
HTTPSServer
FTPEnabled
FTPServer
SOCKSEnabled
SOCKSServer
RTSPEnabled
RTSPServer
GopherEnabled
GopherServer
ExcludeSimpleHostnames
ExceptionList
UsePassiveFTP
SupplementalMatchDomains
SupplementalMatchOrders
Non-string for proxy exception
Non-string for proxy supplemental match domain
Non-number for proxy supplemental match order
autoProxyDiscovery
autoProxyConfigurationEnabled
proxyAutoConfigurationURL
proxyAutoConfigurationJavaScript
gopherEnabled
gopherServer
excludeSimpleHostnames
usePassiveFTP
supplementalMatchDomains
supplementalMatchOrders
HTTPUser
HTTPSUser
FTPUser
GopherUser
RTSPUser
SOCKSUser
TB,V_autoProxyDiscovery
proxyAutoConfigURL
T@"NSURL",C,V_proxyAutoConfigURL
proxyAutoConfigJavaScript
T@"NSString",C,V_proxyAutoConfigJavaScript
TB,V_FTPEnabled
T@"NEProxyServer",C,V_FTPServer
TB,V_SOCKSEnabled
T@"NEProxyServer",C,V_SOCKSServer
TB,V_RTSPEnabled
T@"NEProxyServer",C,V_RTSPServer
TB,V_gopherEnabled
T@"NEProxyServer",C,V_gopherServer
TB,V_usePassiveFTP
T@"NSArray",C,V_supplementalMatchDomains
T@"NSArray",C,V_supplementalMatchOrders
TB,V_autoProxyConfigurationEnabled
T@"NSURL",C
TB,V_HTTPEnabled
T@"NEProxyServer",C
TB,V_HTTPSEnabled
TB,V_excludeSimpleHostnames
exceptionList
T@"NSArray",C,V_exceptionList
AuthenticationRequired
Missing proxy server address
authenticationRequired
T@"NSString",R,V_address
Ti,R,V_port
TB,V_authenticationRequired
T@"NSString",C,V_password
Error while calling host: %@
Host context object is nil, cannot talk to host
Calling completeRequest
%@: Calling sleepWithCompletionHandler:
%@: Calling wake
[Extension %@]
%@: Setting configuration to %@
%@: Setting configuration
%@: Calling stop completion handler with error %@
%@: Started with error %@
%@: display message
%@: disposing
ChosenIntegrityAlgorithm
ChosenDHGroup
ChosenEncryptionAlgorithm
RemoteSPIValue
ChildSelectedProposalNumber
Failed to set chosen proposal index
Failed to set chosen remote spi
Null chosen encryption algorithm
Failed to set chosen encryption algorithm
Null chosen integrity algorithm is not allowed
Failed to set chosen integrity algorithm
Failed to set chosen DH group
IKEv2ChildSA
Transport
Transport mode Child SA was not accepted
Did not receive valid nonce
Did not receive key data
Traffic selectors did not match
No proposal chosen
Proposals did not match
Unable to get matched proposal
Unable to set spi/proposal number in rekey proposal
Could not set remote SPI/Proposal Number
NESocketContentFilter Control IO Queue
com.apple.content-filter
Error setting CFIL_OPT_NECP_CONTROL_UNIT on socket: %s
Failed to get a SYSPROTO_CONTROL socket from NEHelper
Created a new NESocketContentFilter
Created a new NESocketContentFilter from socket
NESocketContentFilter
<NESocketContentFilter, %p [%p]> {
dispatch_io channel creation failed: %s
Received read error: %s
Received EOF
Received message of invalid len %d from kernel content filter
Received unexpected message of type %d from kernel content filter
Received new socket from kernel content control filter, but no handler is registered
Received unexpected message operation %d from kernel content filter
B20@?0^{dispatch_data_s=}4L8r^v12L16
v16@?0B4^{dispatch_data_s=}8i12
Socket Content Filter write error: %s
%*s%@ = (
%*s{%@
%*s},
%*s<%lu-char-str>,
%*s%@,
%*s)
%*s%@ = {
%*s%@ = {%@
%*s%@ = <%lu-char-str>
%*s%@ = %@
%*s}
%*s%@ = %d
%%-%ds
(%u): %s
Failed to get connection info from tunnel socket
Open, sending successful connect result
Opening the DNS flow
(%u): plugin read %lu bytes
(%u): plugin read %u bytes
(%u): plugin wrote %lu bytes, total so far = %u
invalid data object
(%u): data length %ld <= 0
(%u): plugin wrote %ld bytes
(%u): flow is closed for writes, cannot write %ld bytes of data
Flags
AppData
Failed to get connection info from the new tunnel socket
Sending properties update
Failed to set the local address - invalid address
Sending a properties update with app data
NEFlowTLVAdd
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NetworkExtension_Sim/NetworkExtension-563.50.32/Framework/NEFlow.c
NEFlowTLVAddCFString
overhead + (uint32_t)encoded_len <= tlv_iter->remaining
Creating a new flow director
flow director queue
Destroying flow director
NEFlowDirectorHandleNewControlSocket_block_invoke
director->data_source == NULL
(%u): Failed to set SO_SNDBUF on the data control socket: %s
(%u): getpeername failed on the data control socket: %s
fe80::1
DNS_TUN: aborting director due to EOF
(%u): DNS_TUN: aborting director due to read error: %s
v20@?0^{dispatch_source_s=}4i8r^v12L16
Failed validation, aborting
NEFlow
(%u): Destroying, client tx %u, client rx %u, kernel rx %u, kernel tx %u
All data written to the kernel, sending close
(%u): %s: write error: %s
(%u): %s: failed to write an entire message (%zd < %zu)
Dropping the director
NEFlow type = %s, app = %@, name = %@, address = %s, port = %d)
stream
datagram
(%u): Closing reads, closed by plugin: %d
(%u): Closing writes, %s close
sending
not sending
writes are still pending, delaying sending close until all data is sent to the kernel
C8@?0^{flow_write_request={sockaddr_storage=CC[6c]q[112c]}^{__CFData}{?=ii}@?{?=^{flow_write_request}}}4
flow_notify_client
event->data != NULL && event_data != NULL
(%u): Dropping %s event because it is no longer valid
(%u): invoking %s event handler
bytes available
can accept bytes
read end encountered
write end encountered
error occurred
open completed
properties changed
(%u): Wrote %ld bytes to the kernel (total bytes written = %u)
kCFStreamNetworkServiceTypeBackgroundSystemInitiated
/System/Library/Frameworks/CFNetwork.framework/CFNetwork
DYLD_IMAGE_SUFFIX
kCFStreamNetworkServiceTypeBackground
kCFStreamNetworkServiceTypeResponsiveData
kCFStreamNetworkServiceTypeOAM
kCFStreamNetworkServiceTypeAVStreaming
kCFStreamNetworkServiceTypeResponsiveAV
kCFStreamNetworkServiceTypeVideo
kCFStreamNetworkServiceTypeVoice
kCFStreamNetworkServiceTypeNetworkControl
(%u): Destination address is not AF_INET6 (%d)
Packet is not 16-bit aligned
flow_director_send_dns_packet
!(csum >> 16)
dns tun
Deallocated flow director
(%u): %s: aborting director due to EOF
(%u): %s: aborting director due to read error: %s
(%u): %s: received a message that is too short (%zu)
(%u): %s: Recevied a %s message for flow %u, but the flow cannot be found
(%u): Sending error connect result: %s
(%u): Flow %u is connecting
(%u): Flow properties are incomplete for flow %u, port = %d, dest_name = %@, target_addr family = %d, app_signing_id = %@
flow_director_handle_connect
new_flow != NULL
rb_tree_insert_node(&director->flow_tree, new_flow) == new_flow
(%u): New flow: %@
(%u): Got a connect result with window size %u
Flow is closed, sending close while handling connect result
(%u): received %zu tcp bytes from app
(%u): received %zu udp bytes from app
received bytes, but flow is closed
(%u): app read %u bytes
received properties update
connect result
close
read notification
group init
properties update
unknwon
flow_director_ctl_source_do_read
saved_handler != NULL
Failed to read an entire packet
Message was too big for the read buffer
(%u): Requesting rule matching for pid %d
Delivering to client
v8@?0C4
No new flow callback registered, dropping the flow
No DNS flow, dropping DNS packet
Dropping a DNS packet because the queue is full
(%u): Received a DNS packet that is too small (%zu < %zu)
PersistentReference
OldItem
persistentReference
accessGroup
setIdentifier: old %@, new %@
%@: SecItemCopyMatching failed: %d
KEYCHAIN_KIND_IPSEC_SHARED_SECRET
KEYCHAIN_KIND_IPSEC_XAUTH_PASSWORD
KEYCHAIN_KIND_VPN_PASSWORD
VPN Password
%@: SecItemAdd failed: %d
%@: SecItemUpdate failed: %d
%@: SecItemUpdate failed while updating the keychain access group to %@: %d
%@: Failed to retrieve keychain item from the keychain
%@: SecItemDelete failed: %d
Adding/Updating keychain item with identifier %@, persistentReference %@, password %p
syncUsingConfiguration: failed to add or update keychain
%@: Removing keychain item
%@: _SCPreferencesSystemKeychainPasswordItemRemove failed: %s
oldItem
T@"NEKeychainItem",C,V_oldItem
legacy
TB,R,V_legacy
Ti,V_domain
T@"NSString",C,V_accessGroup
Failed to update the access group to %@ for key %@: %d
Failed to update the access group to %@ for certificate %@: %d
Cannot update access group, identity has no public key hash attribute
Cannot update access group, failed to fetch attributes for persistent reference %@
Cannot update access group, failed to find item with persistent reference %@: %d
SecItemCopyMatching returned NULL when getting an identity's persistent reference
SecItemCopyMatching returned an object with an unexpected type (%lu) when getting an identity's persistent reference
%@: failed to get the certificate from an identity: %d
SecItemCopyMatching returned NULL while searching for identities
SecItemCopyMatching returned an unsupported type (%lu) when searching for identities
SecItemCopyMatching failed: %d
%@[%@]
sourceAppSigningIdentifier
sourceAppUniqueIdentifier
fastOpenRequested
TB,R,V_fastOpenRequested
multipathRequested
TB,R,V_multipathRequested
T@"NSData",R,V_sourceAppUniqueIdentifier
T@"NSString",R,V_sourceAppSigningIdentifier
VerboseLoggingEnabled
Missing identity
authenticationMethod
verboseLoggingEnabled
Logfile
/var/log/ppp.log
Ti,V_authenticationMethod
TB,V_verboseLoggingEnabled
%@: Calling startTunnelWithOptions with options %p
%@: Calling stopTunnelWithReason because: %s
%@: Setting virtual interface socket to %p
%@: Requesting IKE socket for interface %@
%@: canceling with error %@
%@: Starting with options %@
%@: Stopping with reason %ld
%@: Getting %s Socket for Interface %@
PFKey
packetFlow
T@"NEPacketTunnelFlow",&,V_packetFlow
NEVPNConfigurationCreate_block_invoke
%@: created
%s called
NEVPNConfigurationCopyAll
%s: error while loading configurations: %@
NEVPNConfigurationCopyAll_block_invoke
__NEVPNPluginType
%@: saving configuration %@
%s: failed to save the modified configuration: %@
NEVPNConfigurationSet_block_invoke
%@: removing configuration
NEVPNConfigurationRemove_block_invoke
%@: setting name to %@
NEVPNConfigurationSetName_block_invoke
%@: setting enabled to %d
NEVPNConfigurationSetEnabled_block_invoke
com.apple.nehelper.reevaluate
%@: setting vendor data to %@
NEVPNConfigurationSetVendorData_block_invoke
%@: failed to set the vendor data: no protocol
%@: scheduling with run loop
%@: unscheduling from run loop failed, configuration is not scheduled
%@: unscheduling from run loop failed, configuration is not scheduled on the given run loop
%@: unscheduling from run loop
%@: unscheduled from all run loops, canceling all callbacks
%@: starting the session
%@: stopping the session
%@: configuration not enabled, get status returning %d
%@: get status returning %d
%@: sending a message with type %u and length %ld
LastCause
Stop reason = %d
%@: %s returning %@
NEVPNConfigurationCopyLastConnectionError
%@: set persistent data %p with type %ld result = %d
%@: copy persistent data %p with type %ld
NEVPNConfigurationRemoveAppRule_block_invoke
NEVPNConfigurationSetAppRule_block_invoke
%@: creating IPC channels
Failed to send an IPC message with type %u and length %ld because the IPC channel could not be established
v8@?0^{IPCMessage=@I{?=^{IPCMessage}}}4
%@: failed to create IPC channels
v12@?0@"NSObject<OS_xpc_object>"4@"NSObject<OS_xpc_object>"8
%@: removing from IPC
%@: adding to IPC
%@: Removing IPC handle
primary_ipc
T@"NEIPC",&,V_primary_ipc
secondary_ipc
T@"NEIPC",&,V_secondary_ipc
config_id
T@"NSUUID",&,V_config_id
configurations
T^{__CFArray=},V_configurations
send_queue
T^{ipc_queue=^{IPCMessage}^^{IPCMessage}},V_send_queue
VPNConfiguration
%@: deallocating
%@[%@:scheduled=%d]
NEVPNConfiguration queue
NEVPNConfiguration global list queue
%@: calling message callback with a message of type %u and length %d
%@: calling connection callback with status %d
%@: calling configuration changed callback
copy identities internal
[Host %@]
%@: Set Configuration
%@: started with error %@
v12@?0B4@"NSArray"8
T@"<NEExtensionProviderHostDelegate>",W,V_delegate
NEProfileIngestion queue
%@ initWithNameAndType name %@, type %@
%@ loadConfigurationsWithRefreshOption failed: empty dispatch queue.
loadConfigurationsWithRefreshOption Failed to load the current configurations: %@
%@ loadConfigurationsWithRefreshOption (refresh = %d) done, error = %d, #configs loaded %lu
0123456789 
 %ld
resolveConfigurationNameConflict system configurations disappeared
setAsideConfigurationName: configID %@, unset %d, configurations %@
setAsideConfigurationName can't find configuration of ID  %@
setAsideConfigurationName: unset-aside failed. Name '%@' would be empty after unset-aside
setAsideConfigurationName: unset-aside failed. Name '%@' is not a set-aside name
setAsideConfigurationName failed (unSetAside = %d), name '%@' in use.
setAsideConfigurationName failed (unSetAside = %d), configuration '%@' is missing payload info.
findConfigurationByPayloadUUID for payloadUUID %@
findConfigurationByPayloadUUID check config with payloadUUID %@
findConfigurationByConfigurationID failed: empty identifier
createConfigurationFromPayload type %@, name '%@', atom %@, #systema-configs %lu
%@ createConfigurationFromPayload: rename %@ to %@
v8@?0@"NSDictionary"4
ingesting PPTP not supported
%@ createConfigurationFromPayload: installations of multiple Always-On VPN configs are not allowed.
%@ createConfigurationFromPayload: installations of multiple Content Filter configs are not allowed.
%@ createConfigurationFromPayload: Removing overridden content filter configuration %@.
NEProfileIngestion createConfigurationFromPayload: unsupported payload type '%@'
%@ createConfigurationFromPayload: configuration created (%s)
%@ saveConfigurationByConfiguration failed: empty configuration or configuration name
%@ saveConfiguration '%@' failed: empty dispatch queue.
%@ saveConfiguration: '%@'
%@ Error occurred when saving configuration '%@': %@
%@ saved configuration '%@': %@
%@ saveConfiguration '%@', ok = %d, configuration %@
%@ enableAlwaysOnVpnInternal with sanityCheck %d
%@ enableAlwaysOnVpnInternal: Always-On VPN configs found %@
%@ enableAlwaysOnVpnInternal: Sanity check OK, %d Always-On VPN configs found (%d set aside).
%@ enableAlwaysOnVpnInternal: Sanity check failed. %d Always-On VPN configs found (%d set aside). Enabling will be disallowed.
%@ enableAlwaysOnVpnInternal: %d Always-On VPN configs found (%d set aside), skip enabling new AOVpn configs.
%@ enableAlwaysOnVpnInternal: enable the only Always-On VPN config%s.
 anyway
%@ enableAlwaysOnVpnInternal: the only Always-On VPN config is already enabled.
%@ enableAlwaysOnVpnInternal: no Always-On VPN configs to enable
%@ enableAlwaysOnVpnInternal: empty configuration database
%@ removeConfiguration skipped: empty configuration.
%@ removeConfiguration '%@' failed: empty dispatch queue.
%@ removeConfiguration: '%@'
Error occurred when removing configurations '%@': %@
%@ removeConfiguration '%@', ok = %d
%@ removeConfiguration '%@' from cached list
%@ removeConfigurationWithIdentifier failed: no configuration found with id %@
%@ removeIngestedConfiguration skipped: current configuration does not exist
To-DO: updateDefaultAfterAddingConfiguration
To-DO: updateDefaultAfterDeletingConfiguration
%@ enableAlwaysOnVpn
TO-DO: lockConfigurations
TO-DO: unlockConfigurations
TO-DO: enableDefaultService: activate last service after removing current service
%@ updateAppLayerVPNMappingRules %@
%@ updateAppLayerVPNMappingRules vpnUUIDsByAppID %@, appIDsByVPNUUID %@
%@ updateAppLayerVPNMappingRules vpnUUID %@, appIDs %@
updateAppLayerVPNMappingRules: Removing App-layer VPN rule for identifier %@.
updateAppLayerVPNMappingRules: Could not remove App-layer VPN rule for identifier %@.
updateAppLayerVPNMappingRules: Adding App-layer VPN rule for identifier %@.
updateAppLayerVPNMappingRules: Could set not App-layer VPN rule for identifier %@
%@ updateManagedAppRules %@
%@ newPathRules for %@: %@
getServiceIDForPayload start with payload stub %@
getServiceIDForPayload: ignore non-vpn payload
getServiceIDForPayload payload stub has no payload UUID
NEProfileIngestion Migrator
getServiceIDForPayload failed to create SCPreference
getServiceIDForPayload found %lu services
getServiceIDForPayload found matching service '%@'
getServiceIDForPayload found matching service %@
payloadType
T@"NSString",R,V_payloadType
ingestedConfiguration
T@"NEConfiguration",&,V_ingestedConfiguration
observing
TB,V_observing
NEProfilePayloadAOVPN validatePayload: To-Do. dict %@
PathRuleDefaultIdentifier
CellularBehavior
DenyCellularFallback
AggregateEnterpriseCellularBehavior
AggregatePersonalCellularBehavior
WiFiBehavior
AggregateEnterpriseWiFiBehavior
AggregatePersonalWiFiBehavior
cellularBehavior
denyCellularFallback
wifiBehavior
matchSigningIdentifier
supportsAllowCellular
supportsDenyCellular
supportsAllowCellularWhileRoaming
aggregatePersonalCellular
T@"NSNumber",&,V_aggregatePersonalCellular
aggregateEnterpriseCellular
T@"NSNumber",&,V_aggregateEnterpriseCellular
internalCellularBehavior
Ti,V_internalCellularBehavior
aggregatePersonalWiFi
T@"NSNumber",&,V_aggregatePersonalWiFi
aggregateEnterpriseWiFi
T@"NSNumber",&,V_aggregateEnterpriseWiFi
internalWiFiBehavior
Ti,V_internalWiFiBehavior
defaultPathRule
TB,R,GisDefaultPathRule
TB,V_denyCellularFallback
NE_FLOW_URL
NE_FLOW_HOSTNAME
NE_ORGANIZATION
NE_USERNAME
URL is not http or https
v8@?0@"NEFilterNewFlowVerdict"4
v8@?0@"NEFilterControlVerdict"4
Add data message rejected, no browser flow exist
Add data flow rejected due to invalid parameters
v8@?0@"NEFilterDataVerdict"4
Data complete message rejected, no browser flows exist.
Remediation message rejected, no browser flow exists
Remediation message rejected, invalid flow UUID parameter
Remediation message ignored, no open flow for UUID
v8@?0@"NEFilterRemediationVerdict"4
Write operation on the socket failed (%s)
recv() failed: %s
Received message of invalid length %d from kernel content filter
v12@?0@"NEFilterNewFlowVerdict"4@"NEFilterSocketFlow"8
control socket is invalid: %d
dispatch source cancel handler called!
Invalid controlSocket value: %d
%@://%@
controlProviderExists
TB,V_controlProviderExists
T@"NSXPCListenerEndpoint",&,V_listenerEndpoint
browserFlows
T@"NSMutableDictionary",&,V_browserFlows
socketFlows
T@"NSMutableDictionary",&,V_socketFlows
socketExceptions
T@"NSMutableArray",&,N,V_socketExceptions
source
T@"NSObject<OS_dispatch_source>",&,V_source
T@"NSDictionary",&,V_remediationMap
T@"NSDictionary",&,V_URLAppendStringMap
pendingConnections
T@"NSMutableArray",&,V_pendingConnections
Failed to create interface for configuration "%@"
Failed to re-set the service ID for configuration "%@": %s
Failed to set the service name for configuration "%@": %s
Failed to set up default service configuration for configuration "%@": %s
Failed to add the network service for configuration "%@" to the current network set: %s
Failed to set the serve name for configuration "%@": %s
SCNetworkServiceSetEnabled failed for configuration "%@": %s
Failed to set the interface configuration for configuration "%@": %s
Failed to create a legacy dictionary for configuration "%@"
Failed to set the profile payload info for configuration "%@"
Failed to create a legacy profile payload dictionary for configuration "%@"
SCNetworkInterface for configuration "%@" is NULL: %s
SCNetworkServiceRemove failed for configuration %@: %s
MCVPNUUID
Failed to initialize an NEVPNApp object from service %@
Failed to initialize an NEVPN object from service %@
Failed to initialize the NEVPNProtocol from service %@
NE migrate passwords
Failed to create a SCPreferencesRef for migrating passwords: %s
SCNetworkServiceAddProtocolType(%@) failed: %s
SCNetworkProtocolSetConfiguration(%@) failed: %s
SCNetworkProtocolSetEnabled(%@) failed: %s
Created a new NEIPSecDB session
add larval SA, session is NULL
add larval SA dictionary validation failed
Direction
add larval SA, pfkey send get spi failed
add larval SA, failed to receive response for pfkey get spi
get spi, session is NULL
add SA, session is NULL
add SA dictionary validation failed
NULL
add SA, pfkey add SA failed
add SA, failed to receive response for pfkey add SA
update SA, session is NULL
update SA dictionary validation failed
update SA, failed to find existing SA
pfkey send update SA failed
failed to receive response for pfkey update SA
migrate SA, session is NULL
migrate SA dictionary validation failed
migrate SA, failed to find existing SA
pfkey send migrate SA failed
failed to receive response for pfkey migrate SA
delete SA, session is NULL
delete SA, saData is NULL
failed to receive response for pfkey delete SA
copy SA, session is NULL
copy SA, saData is NULL
pfkey send get SA failed
failed to receive response for pfkey get SA
flush SA, session is NULL
failed to receive response for pfkey flush SA
add policy, session is NULL
add policy dictionary validation failed
add policy, invalid direction
add policy, invalid ipsec protocol
UpperLayerProtocol
OuterLocalAddress
OuterRemoteAddress
Level
Unique
Require
Discard
add policy, invalid policy level
LocalRangeEndAddress
LocalRangeEndPort
LocalPrefix
RemoteRangeEndAddress
RemoteRangeEndPort
RemotePrefix
IntializeDisabled
pfkey send add policy failed
failed to receive response for pfkey add policy
delete policy, session is NULL
delete policy, policy data is NULL
PolicyID
pfkey send delete policy failed
failed to receive response for pfkey delete policy
copy policy, session is NULL
copy policy, policy data is NULL
pfkey send spd get failed
failed to receive response for pfkey spd get
flush policies, session is NULL
failed to receive response for pfkey flush policies
flush all, session is NULL
%s: Starting IdleTimeout (SAs in:%d out:%d) Polling: every %d, timeout %d
NEIPSecDBStartIdleTimeout
%s: failed to send stats request for inbound SA
NEIPSecDBStartIdleTimeout_block_invoke
%s: failed to send stats request for outbound SA
NEIPSecDB
<NEIPSecDB, %p [%p]> {
NEIPSecDB PFKey IO Queue
saData is NULL
NEIPSecDBFilloutBasicSAInfo error
pfkey send delete failed
Received PFKey Message that could not be matched (type %d).
Received PFKey Message reporting error: %s (type %d).
Received PFKey Message associated with DB (type %d)
CreateTime
CurrentTime
DiffTime
LastUseTime
CurrentBytes
CurrentAllocations
HardLifetime
HardUseTime
HardBytes
SoftAllocations
SoftLifetime
SoftUseTime
SoftBytes
State
Larval
Mature
Dying
Dead
PolicyType
Bypass
Generate
Entrust
pfkey received message is NULL
pfkey received SA is NULL
%s: Bad sadb getsastat response
NEIPSecDBStatsHandleReply
%s: msg type %d: session-id[0] is invalid.
%s: msg type %d: sastats is invalid.
%s: invalid arguments
NEIPSecDBStatsUpdate
%s: SA is idle for past %d secs
NEIPSecDBValidateSADictionary
NEIPSecDBValidatePolicyDictionary
PayloadAppRules
cellularFallbackFlags
pathRules
payloadAppRules
config-aggregate-rules
T@"NSArray",C,V_payloadAppRules
hasNonDefaultRules
Ti,V_cellularFallbackFlags
T@"NSArray",C,V_pathRules
RemediationMapRemediationURL
RemediationMapRemediationButtonText
%@: Start Filter
%@: Stop Filter with reason %ld
filterConfiguration
T@"NEFilterProviderConfiguration",&,V_filterConfiguration
NEIPCWrapper IPC queue
NEIPCWrapper send queue
sendQueue
T@"NSObject<OS_dispatch_queue>",R,V_sendQueue
ipcQueue
T@"NSObject<OS_dispatch_queue>",R,V_ipcQueue
T@"NEIPC",R,V_ipc
%@: Handle inbound data for flow: %@ with read byte start offset: %lu, and read bytes: %@
%@: Handle outbound data for flow: %@ with read byte start offset: %lu, and read bytes: %@
%@: Handle inbound data complete for flow: %@
%@: Handle output data complete for flow: %@
%@: Handle rules changed
127.0.0.1
IsNULL
255.255.255.255
%s: setting DNS to %@
%s: removing DNS
%s: setting IPv4 to %@
%s: removing IPv4
%s: setting IPv6 to %@
%s: removing IPv6
%s: setting proxies to %@
%s: removing proxies
NEVirtualInterface Failure in %s at line %d.
NEVirtualInterfaceCreate
Failed to open interface control socket
NEVirtualInterface Helper Session
Failed to open dynamic store session
Created a new NEVirtualInterface (%@)
NEVirtualInterfaceCreateFromSocket
Created a new NEVirtualInterface from socket
NEVirtualInterfaceCreateChannel
setsockopt ENABLE_CHANNEL failed (errno = %d)
getsockopt GET_CHANNEL_UUID failed (errno %d)
os_channel_create failed (errno %d)
NEVirtualInterfaceEnableProcessUUID
getsockopt flags failed on kernel control socket (errno = %d)
setsockopt flags failed on kernel control socket (errno = %d)
NEVirtualInterfaceSetReadMultipleIPPacketsHandler
NEVirtualInterfaceSetReadMultipleIPPayloadsHandler
NEVirtualInterfaceGetReadAutomatically
NEVirtualInterfaceReadyToReadMultiple
NEVirtualInterfaceWriteMultipleIPPackets
User Tunnel write error: %s
NEVirtualInterfaceWriteMultipleIPPayloadsFromArray
Could not set delegate interface: %s
Requested MTU (%d) is larger than maximum allowed (%d)
Failed to set MTU with NEHelper: %s
NEVirtualInterfaceSetMaxPendingPackets
Failed to set max pending packets to %u with NEHelper: %s
NEVirtualInterfaceGetMaxPendingPackets
%s failed to get max pending packets: %s
%s failed to get correct output length when getting max pending packets
Failed to set output traffic class to %d with NEHelper: %s
Reset serviceID for NEVirtualInterface (%@)
Failed to set address with NEHelper: %s
Failed to remove address with NEHelper: %s
interface is NULL
interface created from socket
address is not a CFString
NECreateAddressDataFromString failed
address is loopback
NECreateAddressDataFromString result too short
Failed to get statistics from interface %s: %s
BytesIn
BytesOut
PacketsIn
PacketsOut
ErrorsIn
ErrorsOut
NEVirtualInterface
<NEVirtualInterface, %p [%p]> {
com.apple.net.utun_control
com.apple.net.ipsec_control
Cannot get kernel control socket from NEHelper
FIONBIO failed: %d
NEVirtualInterfaceAdjustMetadataBufferSize
NEVirtualInterfaceAdjustReadBufferSize
%s: interface_get_mtu failed (%d), defaulting to max mtu
%s: failed to change read buffer size (length=%zu)
%s: failed to alloc metadata buffer (cnt=%d, prev=%d)
%s: failed to allocate read buffer (cnt=%d, prev=%d)
%s: failed to allocate read buffers (cnt=%d, prev=%d)
%s: failed to reduce read buffer (cnt=%d)
Failed to create ioctl socket to get MTU: %s
SIOCGIFMTU failed: %s
NEVirtualInterfaceAdjustSendCount
%s: failed to allocate send buffers (cnt=%d)
NEVirtualInterfaceSetBothReadIPPacketHandlers
%s: Error: cannot set both single and mutliple packet handlers
Invalid interface type for creating read source
NEVirtualInterface could not create read source
NEVirtualInterfaceSetBothReadIPPayloadHandler
%s: Error: cannot set both single and mutliple payload handlers
NEVirtualInterfaceWriteMultipleIPPayloadsInner
getsockopt ifname failed on kernel control socket (errno = %d)
utun
ipsec
%@: setVirtualInterfaceSocket
%@: fetchVirtualInterfaceTypeWithCompletionHandler
%@: requestSocket %@
ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff
Not Valid Before
Not Valid After
Current time before valid time
Current time after valid time
yMdHm
Certificate not valid before yr %d, mon %d, days %d, hours %d, min %d
Certificate not valid after yr %d, mon %d, days %d, hours %d, min %d
%s: Failed to open socket
NEIsInterfaceWIFI
%s: Failed to get media
%s: all CA certificates %@
NECopyAllCACertificates
packet-tunnel-provider
app-proxy-provider
app-proxy-provider-system
content-filter-provider
%s: certificates %@
NECopyAllCertificateRefs
Basic Constraints
section
%s: certRef %@ is CA cert: %@
NEHasCAProperty
Certificate Authority
ExceptionApps
Invalid on demand rule object
Exception app rules are not allowed
exceptionApps
PPTP is not supported
T@"NSArray",C,V_exceptionApps
TB,GisOnDemandEnabled,V_onDemandEnabled
T@"NSArray",C,V_onDemandRules
T@"NEVPNProtocol",C,V_protocol
NEPacketTunnelFlow queue
-[NEPacketTunnelFlow readPacketsWithCompletionHandler:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NetworkExtension_Sim/NetworkExtension-563.50.32/Framework/NEPacketTunnelFlow.m
num_packets <= NEVPNPluginMaxPendingPackets
v32@?0^{NEVirtualInterface_s=}4r^I8r^[16C]12r^^v16r^I20I24^v28
Failed to set the multiple packet read handler
-[NEPacketTunnelFlow readPacketObjectsWithCompletionHandler:]_block_invoke
%s: packets count (%lu) does not equal protocols count (%lu)
-[NEPacketTunnelFlow writePackets:withProtocols:]
%s: Failed to allocate memory for packet data pointers
%s: Failed to allocate memory for packet protocols
%s: Failed to allocate memory for packet lengths
%s: object at index %lu of packets array is not an NSData
%s: object at index %lu of protocols array is not an NSNumber
-[NEPacketTunnelFlow writePacketObjects:]
handlerSetup
TB,V_handlerSetup
T@"NSFileHandle",&,V_socket
uuidMappings
T@"NSMutableDictionary",&,V_uuidMappings
packetHandler
T@?,C,V_packetHandler
packetObjectHandler
T@?,C,V_packetObjectHandler
packetDataArray
T^*,V_packetDataArray
packetProtocols
T^I,V_packetProtocols
packetLengths
T^I,V_packetLengths
buffersSize
TL,V_buffersSize
interfaceType
Tl,R,V_interfaceType
T^{NEVirtualInterface_s=},R,V_interface
ControlProviderInitialized
KeychainAccessGroup
controlProviderInitialized
TB,V_controlProviderInitialized
EncryptionLevel
encryptionLevel
Creating PPTP interface failed, protocol is no longer supported
Ti,V_encryptionLevel
Got an unexpected message on the nehelper connection
initMessage
T@"NSObject<OS_xpc_object>",R,V_initMessage
T@?,C,V_incomingMessageHandler
NEAppProxyFlowErrorDomain
The operation could not be completed because the flow is not connected
The peer closed the flow
An invalid argument was passed
The destination could host could not be reached
The flow timed out
The flow was refused
The flow was aborted
The datagram was too large
A read operation is already pending
v8@?0r^v4
flow
T^{_NEFlow=},V_flow
applicationData
T@"NSData",&
metaData
T@"NEFlowMetaData",R,V_metaData
com.cisco.anyconnect.applevpn.plugin
com.apple.ac-anyconnect.applevpn.plugin
net.juniper.sslvpn
.vpnplugin
VendorInfo
AuthenticationPluginType
ReassertTimeout
NEProviderBundleIdentifier
vendorInfo
authenticationPluginType
reassertTimeout
ReassertionTimer
%s: SCNetworkInterfaceSetConfiguration failed: %s
-[NETunnelProviderProtocol setServiceProtocolsInService:]
T@"NSString",C,V_authenticationPluginType
T@"NSDictionary",C,V_vendorInfo
Ti,V_reassertTimeout
T@"NSDictionary",C,V_providerConfiguration
LegacyEncryptionAlgorithm
LegacyIntegrityAlgorithm
LegacyDiffieHellmanGroup
LegacyLifeTime
lifetimeSeconds
Invalid SA lifetime seconds (%d), valid range is %d to %d inclusive
Ti,V_lifetimeSeconds
UseExtendedAuthentication
LegacyProposals
LegacyExchangeMode
ExtendedAuthPasswordPrompt
Unsupported authenticationMethod
remoteIdentifier
useExtendedAuthentication
legacyProposalParameters
legacyExchangeMode
extendedAuthPasswordPrompt
XAUTH
.IDDATA
IDDATA
legacyProposals
T@"NSArray",C,V_legacyProposals
T@"NSArray",C,V_legacyExchangeMode
TB,V_extendedAuthPasswordPrompt
TB,V_useExtendedAuthentication
T@"NSData",C,V_sharedSecretReference
T@"NSString",C,V_remoteIdentifier
NEFilterExtensionProviderContext queue
[Extension: %@]
%@: Calling stopFilterWithReason because: %s
T@"NSObject<OS_dispatch_queue>",&
-[NEAppProxyTCPFlow initWithNEFlow:queue:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NetworkExtension_Sim/NetworkExtension-563.50.32/Framework/NEAppProxyTCPFlow.m
_remoteEndpoint != nil
v12@?0@"NSObject<OS_dispatch_data>"4l8
%lu: Data object passed is not an NSData
%lu: Failed to write flow Data
TCP %@ remote: %@
T@"NWEndpoint",R,V_remoteEndpoint
MatchAccountIdentifiers
MatchExecutable
Missing signing identifier in app rule match executable
Dis-allowed app rule signing identifier (starts with com.apple): %@
Invalid app rule match domain
At least one match domain is required for this app rule
Invalid app rule account identifier
matchPath
accountIdentifiers
noDivertDNS
additionalExecutables
T@"NSArray",C,V_additionalExecutables
matchAccountIdentifiers
T@"NSArray",C,V_matchAccountIdentifiers
TB,V_noDivertDNS
T@"NSString",R,V_matchSigningIdentifier
matchDesignatedRequirement
T@"NSString",R,V_matchDesignatedRequirement
T@"NSString",C,V_matchPath
request is NULL
nehelper_copy_connection() returned NULL
nehelper sent NULL response
nehelper sent invalid response: %s
response_queue is NULL
response_handler is NULL
socket-type
socket-localaddr
socket-remoteaddr
socket-interface
NEHelperGetIKESocket error: %d
socket-control-name
received invalid kernel control socket result %d
nehelper sent invalid kernel control socket response: %s
nehelper sent NULL kernel control socket response
interface-command
interface-address
interface-netmask
interface-mtu
interface-socket
interface-option
interface-option-data
cache-service
cache-routes
cache-domain-dictionaries
cache-redirected-address
cache-signing-identifier
cache-executable-path
cache-app-uuid
one-per-configuration
bundle-id
tunnelRemoteAddress
Missing NETunnelNetworkSettings tunnelRemoteAddress
Invalid NETunnelNetworkSettings tunnelRemoteAddress
Legacy dictionary is not a valid dictionary
Legacy dictionary is missing a VPN dictionary
Legacy dictionary does not have a remote address string in its VPN dictionary
T@"NSString",R,V_tunnelRemoteAddress
Invalid service name for service exception
Invalid action for service exception
service-name
bundle-identifier
serviceName
T@"NSString",C,V_serviceName
bundleIdentifier
T@"NSString",C,V_bundleIdentifier
ToggleEnabled
InterfaceProtocolMapping
ActiveInterfaceProtocolKey
Missing interface to protocol mapping
Invalid interface name in interface to protocol mapping
Invalid protocol
Invalid service name for service exceptions
Invalid service exception
Invalid bundle identifier for allowed Captive network plugin
Invalid Captive network plugin exception
toggle-enabled
allow-captive-websheet
allow-all-captive-network-plugins
interface-to-protocol-mapping
active-interface-protocol-key
service-exceptions
allowed-captive-network-plugins
toggleEnabled
TB,GisToggleEnabled,V_toggleEnabled
allowCaptiveWebSheet
TB,GisAllowCaptiveWebSheet,V_allowCaptiveWebSheet
allowAllCaptiveNetworkPlugins
TB,GisAllowAllCaptiveNetworkPlugins,V_allowAllCaptiveNetworkPlugins
interfaceProtocolMapping
T@"NSDictionary",C,V_interfaceProtocolMapping
activeInterfaceProtocolKey
T@"NSString",C,V_activeInterfaceProtocolKey
serviceExceptions
T@"NSDictionary",C,V_serviceExceptions
allowedCaptiveNetworkPlugins
T@"NSDictionary",C,V_allowedCaptiveNetworkPlugins
ProfileIdentifier
ProfileUUID
ProfileOrganization
isSetAside
profileIngestionDate
systemVersion
profileSource
payloadUUID
payloadOrganization
profileUUID
profileIdentifier
profileOrganization
payloadProtocolType
applicationCreated
Ti,V_profileSource
T@"NSString",C,V_payloadProtocolType
T@"NSString",C,V_payloadUUID
T@"NSString",C,V_payloadOrganization
T@"NSString",C,V_profileOrganization
T@"NSString",C,V_profileIdentifier
T@"NSString",C,V_profileUUID
T@"NSDate",C,V_profileIngestionDate
T@"NSString",C,V_systemVersion
TB,V_isSetAside
TB,V_applicationCreated
context
notifyRulesChanged
dictionary
beginRequestWithExtensionContext:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handleNewFlow:completionHandler:
handleRemediationForFlow:completionHandler:
remediationMap
setRemediationMap:
URLAppendStringMap
setURLAppendStringMap:
.cxx_destruct
_remediationMap
_URLAppendStringMap
init
bundleForClass:
URLForResource:withExtension:
stringWithContentsOfURL:encoding:error:
length
stringWithFormat:
_blockPage
_css
stringByReplacingOccurrencesOfString:withString:
organization
setOrganization:
page
pageTemplateURL
userURL
setUserURL:
formActionURL
setFormActionURL:
unblockStyle
setUnblockStyle:
remediationButtonText
setRemediationButtonText:
_organization
_pageTemplateURL
_userURL
_formActionURL
_unblockStyle
_remediationButtonText
payloadAtom
addCertificatePending:certificateTag:accessGroup:
alloc
initWithCapacity:
setObject:forKeyedSubscript:
setObject:forKey:
allocWithZone:
copy
setPayloadAtom:
pendingCertificates
setPendingCertificates:
initWithPayload:
validatePayload
getPreprocessedPayloadContents
setPostprocessedPayloadContents:
addCertificatePending:certificateTag:
copyWithZone:
pluginUpgradeInfo
setPluginUpgradeInfo:
_payloadAtom
_pendingCertificates
_pluginUpgradeInfo
establishIPCWithCompletionHandler:
sleepWithCompletionHandler:
wake
dispose
setConfiguration:extensionIdentifier:deviceIdentifier:
startWithOptions:completionHandler:
stopWithReason:
interfaceWithProtocol:
didSetReasserting:
setTunnelConfiguration:completionHandler:
handleIPCDetached
startedWithError:
displayMessage:message:completionHandler:
delegate
extension:didSetStatus:
extension:didSetTunnelConfiguration:completionHandler:
vendorContext
extensionDidDetachIPC:
_extensionAuxiliaryVendorProtocol
_extensionAuxiliaryHostProtocol
decodeInt32ForKey:
encryptionAlgorithm
encodeInt32:forKey:
integrityAlgorithm
diffieHellmanGroup
lifetimeMinutes
appendPrettyObject:withName:andIndent:options:
appendPrettyInt:withName:andIndent:options:
setEncryptionAlgorithm:
setIntegrityAlgorithm:
setDiffieHellmanGroup:
setLifetimeMinutes:
addError:toList:
numberWithInteger:
numberWithInt:
supportsSecureCoding
checkValidityAndCollectErrors:
descriptionWithIndent:options:
encodeWithCoder:
initWithCoder:
copyDictionary
_encryptionAlgorithm
_integrityAlgorithm
_diffieHellmanGroup
_lifetimeMinutes
keychainDomain
setKeychainDomain:
identity
setDomain:
passwordKeychainItem
setKeychainAccessGroup:
initWithType:
setPluginType:
setDisconnectOnWake:
setUseExtendedAuthentication:
initWithPluginType:
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
deadPeerDetectionRate
serverCertificateIssuerCommonName
encodeObject:forKey:
serverCertificateCommonName
IKESecurityAssociationParameters
childSecurityAssociationParameters
IKESecurityAssociationParametersArray
childSecurityAssociationParametersArray
wakeForRekey
encodeBool:forKey:
certificateType
useConfigurationAttributeInternalIPSubnet
disableMOBIKE
disableRedirect
enablePFS
natKeepAliveOffloadEnable
natKeepAliveOffloadInterval
disableMOBIKERetryOnWake
providerBundleIdentifier
pluginType
enableRevocationCheck
strictRevocationCheck
setDeadPeerDetectionRate:
setServerCertificateIssuerCommonName:
setServerCertificateCommonName:
UUID
setIdentifier:
initWithString:
appendPrettyBOOL:withName:andIndent:options:
copyLegacyDictionary
useExtendedAuthentication
numberWithBool:
clone
setCertificateType:
setUseConfigurationAttributeInternalIPSubnet:
setDisableMOBIKE:
setDisableRedirect:
setEnablePFS:
setEnableRevocationCheck:
setStrictRevocationCheck:
setWakeForRekey:
setIKESecurityAssociationParametersArray:
setChildSecurityAssociationParametersArray:
setProviderBundleIdentifier:
setNatKeepAliveOffloadEnable:
setNatKeepAliveOffloadInterval:
setDisableMOBIKERetryOnWake:
_useConfigurationAttributeInternalIPSubnet
_disableMOBIKE
_disableRedirect
_enablePFS
_enableRevocationCheck
_strictRevocationCheck
_wakeForRekey
_deadPeerDetectionRate
_serverCertificateIssuerCommonName
_serverCertificateCommonName
_certificateType
_IKESecurityAssociationParameters
_childSecurityAssociationParameters
_pluginType
_IKESecurityAssociationParametersArray
_childSecurityAssociationParametersArray
_providerBundleIdentifier
_natKeepAliveOffloadEnable
_natKeepAliveOffloadInterval
_disableMOBIKERetryOnWake
loadedManagers
sharedManager
mapError:
count
countByEnumeratingWithState:objects:count:
appVPN
protocol
type
tunnelType
isLegacyPluginType:
initWithSessionType:
setConfiguration:
addObject:
identifier
setHasLoaded:
connection
newSessionWithConfigID:withCompletionHandler:
removeAllObjects
loadConfigurationsWithCompletionQueue:handler:
loadAllFromPreferencesWithCompletionHandler:
initWithNEFlow:queue:
bytes
endpointWithAddress:
openWithLocalEndpoint:completionHandler:
flow
flowErrorForVPNFlowError:
queue
objectAtIndexedSubscript:
address
metaData
localEndpoint
port
readDatagramsWithCompletionHandler:
writeDatagrams:sentByEndpoints:completionHandler:
_localEndpoint
dataWithBytes:length:
logMessageType:data:actionString:
stop
messageHandler
handleMessage:withHandler:
setMessageHandler:
setListener:
listener
setConnection:
setupMessageHandlingWithQueue:
dataWithBytesNoCopy:length:freeWhenDone:
startInListenModeWithQueue:messageHandler:
startWithEndpoint:queue:messageHandler:
sendMessageWithType:data:replyQueue:replyHandler:
connected
_messageHandler
_connection
_listener
initWithProcessUUID:signingIdentifier:
initWithData:protocolFamily:metadata:
decodeIntForKey:
data
protocolFamily
metadata
initWithData:protocolFamily:signingIdentifier:processUUID:
initWithData:protocolFamily:
_protocolFamily
_data
_metadata
machineAuthenticationMethod
sharedSecretKeychainItem
machineIdentity
machineIdentityDataInternal
machineIdentityDataImported
localIdentifier
setMachineAuthenticationMethod:
setSharedSecretKeychainItem:
setMachineIdentity:
setMachineIdentityDataInternal:
setMachineIdentityDataImported:
setLocalIdentifier:
keychainAccessGroup
initWithPersistentReference:domain:accessGroup:
setPersistentReference:
persistentReference
stringByAppendingString:
syncWithKeychainInDomain:configuration:suffix:
domain
sync
UUIDString
initWithIdentifier:domain:accessGroup:
syncUsingConfiguration:accountName:passwordType:identifierSuffix:
needToUpdateKeychain
password
removeKeychainItemsInDomain:keepIdentity:
migratePasswordsFromPreferences:
migrateFromPreferences:
machineIdentityReference
objectForKeyedSubscript:
initWithLegacyIdentifier:domain:accessGroup:
setMachineIdentityReference:
isEqualToString:
setServiceProtocolsInService:
copyLegacyIPSecDictionary
updateWithServiceProtocolsFromService:
setIPSecSettingsFromLegacyDictionary:
setSharedSecretReference:
sharedSecretReference
createInterface
_machineIdentityDataImported
_machineAuthenticationMethod
_sharedSecretKeychainItem
_localIdentifier
_machineIdentity
_machineIdentityDataInternal
session
setSession:
dealloc
startVPNTunnelWithOptions:andReturnError:
status
errorWithDomain:code:userInfo:
manager
configuration
isEnabled
connectedDate
processInfo
systemUptime
date
dateByAddingTimeInterval:
defaultCenter
postNotificationName:object:
getUUIDBytes:
sessionType
updateSessionInfoWithCompletionHandler:
startVPNTunnelAndReturnError:
stopVPNTunnel
destroySession
weakmanager
setWeakmanager:
_status
_connectedDate
_session
_sessionType
_weakmanager
stringWithUTF8String:
initWithFormat:arguments:
UTF8String
prefs
URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:
defaultManager
fileExistsAtPath:
removeItemAtPath:error:
contentsOfDirectoryAtPath:error:
hasPrefix:
hasSuffix:
substringWithRange:
copyAppURL
initWithURL:
bundleIdentifier
applicationProxyForIdentifier:
isInstalled
isPluginTypeEnabled
plugInKitPlugins
removePreferencesForPluginType:
copyIdentifiersOfInstalledVPNApps
isAppInstalled:
isEnabledForPluginType:applicationRemoved:
setPluginTypeEnabled:appURLData:
isFlagSet:
setPreferences:ofType:configurationIdentifier:
copyPersistentDataOfType:configurationIdentifier:
setPrefs:
_prefs
setDelegateInterface:
setInitialFlowDivertControlSocket:
setInitialFlowDivertControlSocket:extraValidation:
verifyAppWithPID:uuid:matchesAppRule:completionHandler:
openFlowDivertControlSocketWithCompletionHandler:
fileDescriptor
setFlowQueue:
flowQueue
setDirector:
director
delegateInterfaceIndex
flowDivertOpenControlSocket
flowDivertMatchAppRulesWithFlow:pid:uuid:signingIdentifier:
flowDivertNewFlow:completionHandler:
setDelegateInterfaceIndex:
hostContext
copyAppRuleBySigningIdentifier:
matchSigningIdentifier
_principalObject
handleNewFlow:
startProxyWithOptions:completionHandler:
neStopReasonToProviderStopReason:
stopProxyWithReason:completionHandler:
cancelWithError:
_flowQueue
_director
_delegateInterfaceIndex
decodeInt64ForKey:
passBytes
encodeInt64:forKey:
peekBytes
setPassBytes:
setPeekBytes:
setUrl:
allowVerdict
setNeedRules:
initWithDrop:remediate:
setRemediationURLMapKey:
setRemediationButtonTextMapKey:
needRulesVerdict
dropVerdict
remediateVerdictWithRemediationURLMapKey:remediationButtonTextMapKey:
dataVerdictWithPassBytes:peekBytes:
_url
_passBytes
_peekBytes
filterInbound
filterOutbound
peekInboundBytes
peekOutboundBytes
setFilterInbound:
setFilterOutbound:
setPeekInboundBytes:
setPeekOutboundBytes:
setUrlAppendString:
setUrlAppendStringMapKey:
URLAppendStringVerdictWithMapKey:
filterDataVerdictWithFilterInbound:peekInboundBytes:filterOutbound:peekOutboundBytes:
_filterInbound
_filterOutbound
_peekInboundBytes
_peekOutboundBytes
inboundPassOffset
inboundPeekOffset
outboundPassOffset
outboundPeekOffset
setInboundPassOffset:
setInboundPeekOffset:
setOutboundPassOffset:
setOutboundPeekOffset:
initWithDrop:inboundPassOffset:inboundPeekOffset:outboundPassOffset:outboundPeekOffset:
_inboundPassOffset
_inboundPeekOffset
_outboundPassOffset
_outboundPeekOffset
drop
remediate
urlAppendString
remediationURLMapKey
remediationButtonTextMapKey
urlAppendStringMapKey
needRules
setDrop:
setRemediate:
_needRules
_drop
_remediate
_urlAppendString
_remediationURLMapKey
_remediationButtonTextMapKey
_urlAppendStringMapKey
updateRules
handledByDataProvider
setUpdateRules:
setHandledByDataProvider:
allowVerdictWithUpdateRules:
dropVerdictWithUpdateRules:
_updateRules
_handledByDataProvider
passwordReference
serverAddress
username
passwordEncryption
identityDataInternal
identityDataPassword
identityDataPasswordKeychainItem
identityDataImported
identityDataHash
proxySettings
disconnectOnIdle
disconnectOnIdleTimeout
disconnectOnSleep
disconnectOnWake
disconnectOnWakeTimeout
DNSSettings
initWithProtocolIdentifier:
setServerAddress:
setUsername:
setPasswordReference:
setIdentity:
setIdentityDataInternal:
setIdentityDataPassword:
setIdentityDataPasswordKeychainItem:
setIdentityDataImported:
setIdentityDataHash:
setProxySettings:
setDisconnectOnIdle:
setDisconnectOnIdleTimeout:
setDisconnectOnSleep:
setDisconnectOnWakeTimeout:
setPasswordKeychainItem:
setPasswordEncryption:
setDNSSettings:
type2str
identityReference
addDisconnectOptions:
intValue
initWithPassword:domain:accessGroup:
initDisconnectOptions:
initFromLegacyDictionary:
boolValue
setConfiguration:forProtocol:inService:
copyConfigurationForProtocol:inService:
setIdentityReferenceInternal:
identityReferenceInternal
syncWithKeychain
syncWithKeychainInDomainCommon:
removeKeychainItems
remove
setIdentityData:
copyPasswordsFromKeychain
copyPassword
setIdentityReference:
identityData
copyPasswordsFromKeychainInDomain:
disconnectOnUserSwitch
setDisconnectOnUserSwitch:
disconnectOnLogout
setDisconnectOnLogout:
_disconnectOnSleep
_disconnectOnWake
_identityDataImported
_disconnectOnIdle
_disconnectOnUserSwitch
_disconnectOnLogout
_serverAddress
_username
_passwordReference
_identityDataPassword
_proxySettings
_keychainDomain
_keychainAccessGroup
_identity
_identifier
_type
_disconnectOnWakeTimeout
_passwordKeychainItem
_passwordEncryption
_identityDataInternal
_identityDataHash
_identityDataPasswordKeychainItem
_DNSSettings
_disconnectOnIdleTimeout
initWithDestinationAddress:subnetMask:
initGlobals
defaultRoute
destinationAddress
destinationSubnetMask
gatewayAddress
setGatewayAddress:
isDefaultRoute
_destinationAddress
_destinationSubnetMask
_gatewayAddress
initWithObjects:
configMethod
addresses
subnetMasks
router
includedRoutes
excludedRoutes
overridePrimary
initWithAddresses:subnetMasks:
setConfigMethod:
setRouter:
setIncludedRoutes:
setExcludedRoutes:
setOverridePrimary:
hasDefaultRoute
_overridePrimary
_addresses
_subnetMasks
_includedRoutes
_excludedRoutes
_configMethod
_router
dictionaryWithObjects:forKeys:count:
componentsJoinedByString:
setTunnelNetworkSettings:completionHandler:
reasserting
setReasserting:
handleAppMessage:completionHandler:
routingMethod
protocolConfiguration
setProtocolConfiguration:
appRules
setAppRules:
onDemandEnabled
setOnDemandEnabled:
_reasserting
_onDemandEnabled
_protocolConfiguration
_appRules
initWithGrade:connection:
mainBundle
setEnabled:
removeObjectForKey:
loadConfigurationWithID:withCompletionQueue:handler:
initWithArray:copyItems:
isProtocolTypeValid:
additionalSetup
loadFromPreferencesWithCompletionHandler:
copyAppRules
initInternal
setConditionType:
setApplicationUUID:
setPid:
setUid:
setAccountIdentifier:
setInterfaceName:
setTrafficClassStart:
setTrafficClassEnd:
setIpProtocol:
setStartAddress:
setPrefix:
setEndAddress:
setCustomEntitlement:
conditionTypeString
conditionTypeValue
appendBytes:length:
dataUsingEncoding:
appendData:
addressData
getBytes:length:
addressFamily
addTLVToMessage:type:length:value:
effectiveApplication:
realApplication:
effectivePID:
uid:
accountIdentifier:
domain:
allInterfaces
scopedInterface:
trafficClassStart:end:
ipProtocol:
localAddress:prefix:
remoteAddress:prefix:
localAddressStart:end:
remoteAddressStart:end:
entitlement
customEntitlement:
validate
addTLVsToMessage:
conditionType
isNegative
setNegative:
applicationUUID
accountIdentifier
interfaceName
trafficClassStart
trafficClassEnd
ipProtocol
prefix
startAddress
endAddress
customEntitlement
_negative
_prefix
_ipProtocol
_conditionType
_applicationUUID
_pid
_uid
_accountIdentifier
_domain
_interfaceName
_trafficClassStart
_trafficClassEnd
_startAddress
_endAddress
_customEntitlement
setAction:
setType:
actionString
typeString
actionValue
typeValue
routeRuleWithAction:forInterfaceName:
routeRuleWithAction:forType:
action
_action
setResultType:
setSkipOrder:
setControlUnit:
setSecondaryResultType:
setAgentUUID:
setRouteRules:
setServiceUUID:
setServiceData:
resultTypeString
secondaryResultTypeString
resultTypeValue
secondaryResultTypeValue
pass
skipWithOrder:
divertSocketToControlUnit:
scopeSocketToInterfaceName:
tunnelIPToInterfaceName:secondaryResultType:
filterWithControlUnit:
netAgentUUID:
routeRules:
triggerScopedService:data:
resultType
secondaryResultType
skipOrder
controlUnit
agentUUID
serviceUUID
serviceData
routeRules
_resultType
_secondaryResultType
_skipOrder
_controlUnit
_agentUUID
_serviceUUID
_serviceData
_routeRules
initWithOrder:result:conditions:
order
setOrder:
result
setResult:
conditions
setConditions:
_order
_result
_conditions
openControlSource
initWithSocket:
controlSource
controlSocket
appendString:
priorityString
policies
internalPriority
lastSendMessageID
setLastSendMessageID:
copyTLVForBytes:messageLength:type:includeHeaderOffset:n:
setControlSocket:
ioQueue
setLastReceivedResponse:
responseSemaphore
lastReceivedResponse
setResponseSemaphore:
createTLVMessage:
sendMessage:
messageIDForMessage:
copyReceivedResponseForMessageID:
errorFromMessage:
setInternalPriority:
policyIDFromMessage:
numberWithUnsignedInteger:
getTLVtypeForBytes:includeHeaderOffset:nextTLVOffset:
appendFormat:
objectForKey:
numberWithUnsignedChar:
appendToStringAtColumnWithContent:column:content:appendAsNewLine:addNewLine:
objectAtIndex:
isTLVValid:cursorCurrent:totalLength:
string
readTLVOfType:startCursor:currentCursor:totalLength:readTLVInstance:
policyDumpFromData:
parseTLVResponseForDump:
dupSocket
priority
setPriority:
lockSessionToCurrentProcess
registerServiceUUID:
unregisterServiceUUID:
addPolicy:
dumpKernelPolicies
apply
policyWithID:
removePolicyWithID:
removeAllPolicies
setPolicies:
setIoQueue:
setControlSource:
_internalPriority
_policies
_ioQueue
_responseSemaphore
_lastReceivedResponse
_lastSendMessageID
_controlSource
_controlSocket
vendorConfiguration
filterBrowsers
filterSockets
setVendorConfiguration:
setFilterBrowsers:
setFilterSockets:
_filterBrowsers
_filterSockets
_vendorConfiguration
_identityReference
initWithDestinationAddress:networkPrefixLength:
destinationNetworkPrefixLength
isEqualToNumber:
integerValue
_destinationNetworkPrefixLength
networkPrefixLengths
initWithAddresses:networkPrefixLengths:
_networkPrefixLengths
_auxiliaryConnection
extension:didFailWithError:
remoteObjectProxyWithErrorHandler:
setDescription:
setExtensionIdentifier:deviceIdentifier:
updateConfiguration:
startFilterWithOptions:completionHandler:
_vendorContext
setNotification:
notification
setIsBanner:
cancel
notificationSource
isBanner
setCallback:
setCallbackQueue:
setNotificationSource:
fileExistsAtPath:isDirectory:
bundleWithPath:
load
classNamed:
getUIDeviceClass
currentDevice
localizedModel
initWithFormat:
initBannerWithHeader:message:alternateMessage:defaultMessage:
shouldPromptForLocalAuthentication
promptForLocalAuthenticationWithReason:completionQueue:completionHandler:
initAuthenticationWithHeader:options:flags:
postNotificationWithCallbackQueue:callbackHandler:
initAddConfigurationsForApp:warningHeader:warning:
callbackQueue
callback
_isBanner
_notification
_notificationSource
_callbackQueue
_callback
servers
searchDomains
domainName
matchDomains
matchDomainsNoSearch
initWithServers:
setSearchDomains:
setDomainName:
setMatchDomains:
setMatchDomainsNoSearch:
_matchDomainsNoSearch
_servers
_searchDomains
_domainName
_matchDomains
isRunningInProvider
sharedDefaultEvaluator
setDefaultPath:
defaultPathEvaluator
removeObserver:forKeyPath:
setDefaultPathEvaluator:
setContext:
addObserver:forKeyPath:options:context:
path
setEnableTLS:
TLSSessionID
setTLSSessionID:
SSLCipherSuites
setSSLCipherSuites:
minimumSSLProtocolVersion
setMinimumSSLProtocolVersion:
maximumSSLProtocolVersion
setMaximumSSLProtocolVersion:
initWithEndpoint:parameters:delegate:
createTCPConnectionToEndpoint:enableTFO:initialData:enableMultipath:enableTLS:TLSParameters:delegate:URL:
setEnableTFO:
setInitialDataPayload:
setMultipath:
hostname
endpointWithHostname:port:
setLocalAddress:
initWithEndpoint:parameters:
appName
isNEProviderBundle:forExtensionPoint:
infoDictionary
setdefaultPathObserver:
observerHelperHandler:ofObject:change:context:
createTCPConnectionToEndpoint:enableTLS:TLSParameters:delegate:
createTCPConnectionToEndpoint:enableTFO:initialData:enableMultipath:enableTLS:TLSParameters:delegate:
createUDPSessionToEndpoint:fromEndpoint:
displayMessage:completionHandler:
defaultPath
deviceIdentifier
setDeviceIdentifier:
setAppName:
_defaultPath
_defaultPathEvaluator
_context
_deviceIdentifier
_appName
_startListening
initForPlugInKit
beginUsing:withBundle:
endUsing:
communicationsFailed:
fetchProviderConnectionWithCompletionHandler:
providerControlSocketFileHandle:
handleRulesChanged
provideRemediationMap:
provideURLAppendStringMap:
sendBrowserContentFilterServerRequest
sendSocketContentFilterRequest
fetchCurrentRulesForFlow:completionHandler:
data_delegate
dataExtension:didStartWithError:
setData_delegate:
_data_delegate
DNSSearchDomainMatch
isEqualToArray:
DNSServerAddressMatch
interfaceTypeMatch
SSIDMatch
probeURL
initWithAction:
setDNSSearchDomainMatch:
setDNSServerAddressMatch:
setInterfaceTypeMatch:
setSSIDMatch:
setProbeURL:
absoluteString
URLWithString:
initWithMatchDomains:andAction:
setConnectionRules:
createOnDemandRulesFromLegacyDictionary:
_DNSSearchDomainMatch
_DNSServerAddressMatch
_interfaceTypeMatch
_SSIDMatch
_probeURL
connectionRules
_connectionRules
useDNSServers
setUseDNSServers:
_useDNSServers
allClients
initWithClientName:
initInternalWithClientName:
sharedManagerForAllUsers
loadConfigurationsForceRefresh:completionHandler:
setChangedQueue:andHandler:
currentConfiguration
contentFilter
alwaysOnVPN
isOnDemandEnabled
onDemandRules
setOnDemandRules:
interfaceProtocolMapping
initWithName:grade:
setVPN:
setAlwaysOnVPN:
setAppVPN:
setContentFilter:
setPathController:
createdConfigurations
setCreatedConfigurations:
setProtocol:
setTunnelType:
mutableCopy
setInterfaceProtocolMapping:
grade
provider
setProvider:
protocolForParameters:
isAlwaysOn
setPasswordWithParameters:errorStr:
identities
setProviderTypeWithParameters:errorStr:
setAccessGroup:
setPassword:
unsetPasswordWithParameters:errorStr:
setAuthenticationMethod:
setSharedSecretWithParameters:errorStr:
setRemoteIdentifier:
unsetSharedSecretWithParameters:errorStr:
setVerboseLoggingEnabled:
IPv4Settings
setIPv4Settings:
IPv6Settings
setIPv6Settings:
arrayWithObjects:count:
initWithArray:
removeObjectAtIndex:
pathController
setCellularFallbackFlags:
copyPathRuleBySigningIdentifier:
initWithSigningIdentifier:
removePathRuleBySigningIdentifier:
setMatchPath:
setMatchAccountIdentifiers:
setCellularBehavior:
setWifiBehavior:
pathRules
setPathRules:
removeObject:
copyAppRuleByID:
removeAppRuleByID:
currentConfigurations
setCurrentConfigurations:
configFile
configFileLast
initWithDictionary:
setIdentities:
addIdentityProperties:withDomain:
copyIdentities:fromDomain:withCompletionQueue:handler:
setToggleEnabled:
serviceExceptions
setServiceName:
setServiceExceptions:
setAllowAllCaptiveNetworkPlugins:
setAllowCaptiveWebSheet:
allowedCaptiveNetworkPlugins
setBundleIdentifier:
setAllowedCaptiveNetworkPlugins:
setAutoProxyDiscovery:
setAutoProxyConfigurationEnabled:
setProxyAutoConfigurationURL:
setExcludeSimpleHostnames:
setExceptionList:
setUsePassiveFTP:
setProxyAutoConfigURL:
initWithType:address:port:
setAuthenticationRequired:
authenticationRequired
setHTTPServer:
setHTTPEnabled:
setHTTPSServer:
setHTTPSEnabled:
setFTPServer:
setFTPEnabled:
setRTSPServer:
setRTSPEnabled:
setGopherServer:
setGopherEnabled:
setSOCKSServer:
setSOCKSEnabled:
clientName
removeClientWithName:
reloadIdentityListWithCompletionHandler:
setConfigFileLast:
setConfigFile:
setCurrentConfiguration:
createConfigurationWithParameters:errorStr:
dictionaryWithContentsOfFile:
configurationWithProfilePayload:grade:
swapConfigurationTypeWithParameters:errorStr:
removeObjectIdenticalTo:
removeConfiguration:withCompletionQueue:handler:
setProtocolWithParameters:errorStr:
setFilterPluginWithParameters:errorStr:
setCommonParameters:errorStr:
unsetCommonParameters:errorStr:
setIPSecParameters:errorStr:
unsetIPSecParameters:errorStr:
setPPPParameters:errorStr:
unsetPPPParameters:errorStr:
addOnDemandRuleWithParameters:errorStr:
removeOnDemandRuleWithParameters:errorStr:
addAppRuleWithParameters:errorStr:
removeAppRuleWithParameters:errorStr:
setPathControllerWithParameters:errorStr:
addPathRuleWithParameters:errorStr:
removePathRuleWithParameters:errorStr:
name
containsObject:
stringByAppendingFormat:
loadIndexWithFilter:completionQueue:handler:
saveConfiguration:withCompletionQueue:handler:
initWithName:
createConfigurationFromPayload:payloadType:
ingestedConfiguration
saveIngestedConfiguration
setAlwaysOnParameters:errorStr:
unsetAlwaysOnParameters:errorStr:
setProxyParameters:errorStr:
unsetProxyParameters:errorStr:
setProxyServer:errorStr:
unsetProxyServer:errorStr:
loadConfigurationWithName:completionHandler:
clientWithName:
handleCommand:forConfigWithName:withParameters:completionHandler:
enabled
isIsAlwaysOn
_isAlwaysOn
_clientName
_manager
_createdConfigurations
_currentConfigurations
_identities
_configFile
_configFileLast
_currentConfiguration
code
localizedDescription
activeInterfaceProtocolKey
setIpc:
ipcIdleTimer
setIpcIdleTimer:
resetIPCIdleTimer
_setEndpoint:
_ipc
_ipcIdleTimer
initWithUUIDBytes:
setEnabledLevel:
setPersistedLevel:
enabledLevel
persistedLevel
_TLSSessionID
_SSLCipherSuites
_minimumSSLProtocolVersion
_maximumSSLProtocolVersion
pluginInitialized
setPluginInitialized:
cleanup
handleInitMessage:
handleStart:
handleStop:
handleEnvironmentEvent:
handleAddClientMessage:
closeBrowserFilterFlow:forUUID:
handleNewFlowMessage:forConnection:
handleAddDataMessage:forConnection:
handleDataCompleteMessage:forConnection:
handleClientMessage:forConnection:
clientListener
setClientListener:
acceptNewClientConnection:
setConfigID:
setPluginPrefs:
initForReadingWithData:
setRequiresSecureCoding:
optionsDict
sendStatus:withError:
sendEnvironmentEventComplete:
sendMessage:withReply:
outstandingSetGlobalDataOps
setOutstandingSetGlobalDataOps:
outstandingSetDataOps
setOutstandingSetDataOps:
pluginPrefs
configID
initWithSession:pluginType:primaryPluginType:pluginBundle:
handleInitWithCompletionHandler:
handleDisposeWithCompletionHandler:
handleMessage:withOuterMessage:
handleCancel
sendSocketContentFilterRequestWithCompletionHandler:
sendSetPersistentData:ofType:
copyPersistentDataOfType:
copySocketContentFilter
setBrowserNewFlowHandler:dataHandler:dataCompleteHandler:clientQueue:andClientInfo:
builtInPlugin
_pluginBundle
_pendingGlobalPersistentData
_pendingPerConfigurationPersistentData
_socketContentFilter
_pluginCallbacks
_pluginInfo
_browserNewFlowHandler
_browserDataHandler
_browserDataCompleteHandler
_clientQueue
_clientInfo
_browserFlows
_pluginInitialized
_builtInPlugin
_queue
_configID
_pluginPrefs
_clientListener
_outstandingSetGlobalDataOps
_outstandingSetDataOps
initWithUserUUID:
changedNotifyToken
decoder
initWithDelegateClassID:queue:
helper
setIncomingMessageHandler:
incomingMessageHandler
sendRequest:responseHandler:
loadedConfigurations
updateFlags:withConfiguration:
generation
postChangeNotificationWithGeneration:andFlags:
loadConfigurationsInternal:withCompletionHandler:
overlapsWithRule:
readIndexFromDiskWithError:
hasReadPermission
setDecoder:
setCurrentIndex:
userUUID
filterIndexWithFilter:
notifyChanges
loadedIndex
allKeys
clearLoadedConfigurationsWithIDs:
currentIndex
decodeConfigurationWithIdentifier:
didLoadConfiguration:
applicationIdentifier
dictionaryWithDictionary:
registerForChangeNotifications
isVPNPublicAPI
reloadFromDisk
isNEHelper
setGeneration:
errorWithCode:specifics:
changedQueue
changedHandler
copyChangedConfigurationIDs:
getCurrentIndexWithCompletionHandler:
setChangedNotifyToken:
setLoadedIndex:
setLoadedConfigurations:
didLoadConfiguration:withSignature:
removeObjectsForKeys:
isEqualToData:
addObjectsFromArray:
configurationHasChanged:
arrayWithArray:
setHasReadPermission:
isReadableFileAtPath:
dataWithContentsOfFile:options:error:
setClass:forClassName:
setSCPreferencesSignature:
configurationIsEnabled:
resetKeychainItemsAfterProtocolChange:newConfiguration:
syncWithSystemKeychain
generateSignature
makeMutableCopyOfIndex:
isSupportedBySC
initForWritingWithMutableData:
configuration:overlapsWithOtherConfiguration:
disableConfiguration:onDemandOnly:
applyChangesToSCServiceInPreferences:
stringWithCString:encoding:
SCPreferencesSignature
finishEncoding
writeToFile:atomically:
saveConfigurationToDisk:updateSCPreferences:currentSignature:userUUID:notifyNow:isUpgrade:
clearSystemKeychain
payloadInfo
applicationCreated
profileIdentifier
isSetAside
removeProfile:
SCServiceWithIdentifier:existsInPreferences:
removeSCServiceWithIdentifier:fromPreferences:
removeConfigurationFromDisk:updateSCPreferences:
initWithUUIDString:
updateFromSCService:
initFromSCService:
applicationName
setApplicationName:
postChangeNotification
updateSCPreferencesSignatureOnDisk
allValues
syncWithUserKeychain
clearUserKeychain
setChangedQueue:
setChangedHandler:
application
externalIdentifier
copyIdentities:fromDomain:
postGeneration
saveConfigurationToDisk:currentSignature:userUUID:isUpgrade:completionQueue:completionHandler:
removeConfigurationFromDisk:completionQueue:completionHandler:
syncWithSystemConfigurationWithAppNameCallback:completionHandler:
loadConfigurations:withFilter:completionQueue:completionHandler:
handleFileRemovedWithCompletionHandler:
handlePluginTypesRemoved:configuration:vpn:updateSCPreferences:
handleApplicationsRemoved:withCompletionHandler:
triggerLocalAuthenticationForConfigurationWithID:withCompletionQueue:handler:
fetchClientListenerWithBundleID:completionQueue:handler:
fetchUpgradeInfoForPluginType:completionQueue:handler:
fetchCarrierBundleNATKeepAliveIntervalOverCell:handler:
setIsVPNPublicAPI:
isVPNPrivateAPI
setIsVPNPrivateAPI:
setIsNEHelper:
hasVPNAPIEntitlement
setHasVPNAPIEntitlement:
setDelegate:
configurationChangeSource
setConfigurationChangeSource:
_description
_helper
_hasReadPermission
_isVPNPublicAPI
_isVPNPrivateAPI
_isNEHelper
_hasVPNAPIEntitlement
_changedNotifyToken
_currentIndex
_changedQueue
_changedHandler
_loadedIndex
_loadedConfigurations
_decoder
_SCPreferencesSignature
_userUUID
_delegate
_configurationChangeSource
_generation
extension:didRequestMatchAppPID:uuid:withAppRule:completionHandler:
extension:didRequestFlowDivertControlSocketWithCompletionHandler:
tunnelOverheadBytes
setTunnelOverheadBytes:
setMTU:
_IPv4Settings
_IPv6Settings
_tunnelOverheadBytes
_MTU
setNetwork:
network
initWithNetwork:
SSID
BSSID
signalStrength
setConfidence:
isSecure
didAutoJoin
didJustJoin
isChosenHelper
_network
setResponse:
response
initWithResponse:
setNetworkList:
deliver
_response
command
setCommand:
initWithInterfaceName:
setRequiredInterface:
initWithCommand:
commandType
networkList
createResponse:
createTCPConnection:
createUDPSession:
_command
registerWithOptions:queue:handler:
logoff:
supportedNetworkInterfaces
bindToHotspotHelperCommand:
cancelProxyWithError:
control_delegate
controlExtension:didStartWithError:
setControl_delegate:
_control_delegate
componentsSeparatedByString:
anonymousListener
resume
handleConfigChanged:
addObserver:selector:name:object:
setExportedInterface:
setExportedObject:
setCurrentManager:
setCurrentManagers:
setCreatedManagers:
setInvalidationHandler:
setInterruptionHandler:
endpoint
currentManager
setLocalizedDescription:
createdManagers
providerConfiguration
setProviderConfiguration:
setKeychainItemData:withName:persistentReference:
deleteKeychainItemWithPersistentReference:
currentManagers
loadAllWithCompletionHandler:
isServerMode
invalidate
setRemoteObject:
remoteObject
targetAppBundleID
initWithListenerEndpoint:
setRemoteObjectInterface:
removeFromPreferencesWithCompletionHandler:
saveToPreferencesWithCompletionHandler:
listener:shouldAcceptNewConnection:
initForServerMode
listenerEndpoint
setTargetAppBundleID:
setIsServerMode:
_isServerMode
_currentManager
_createdManagers
_currentManagers
_targetAppBundleID
_remoteObject
initializeGlobals
checkPolicyFilterUnit
filterUnit
registered
socketIdentifier
setRemediationURL:
remediationURL
setExpectRemediation:
setPeekIndex:
setPassLength:
passLength
setRegistered:
connectToAgentWithCompletionHandler:
currentRequest
currentResponse
parentURL
direction
flowUUID
prepareAgentForURL:urlRequest:urlResponse:parentURL:direction:flowUUID:handler:
setCurrentResponse:
setFlowUUID:
setCurrentRequest:
pendingData
pendingDataStartIndex
replaceBytesInRange:withBytes:length:
setPendingDataStartIndex:
peekIndex
lastPendingDataStartIndex
lastSendDataLength
setLastSendDataLength:
setLastPendingDataStartIndex:
sendDataToPluginWithConnection:completionHandler:
containsString:
characterAtIndex:
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
mergeURLString:withAppendString:
replacementData
prepareAgentWithHandler:
filterOptions
prepareAgentForRequest:handler:
prepareAgentForResponse:handler:
expectRemediation
filterRequired
initWithURL:direction:socketIdentifier:
addData:withCompletionQueue:completionHandler:
dataCompleteWithCompletionQueue:completionHandler:
initWithParentURL:decisionQueue:
initWithDecisionQueue:
willSendRequest:decisionHandler:
receivedResponse:decisionHandler:
receivedData:decisionHandler:
finishedLoadingWithDecisionHandler:
remediateWithDecisionHandler:
setPendingData:
setQueue:
setParentURL:
_registered
_expectRemediation
_direction
_pendingData
_flowUUID
_currentResponse
_currentRequest
_remediationURL
_parentURL
_socketIdentifier
_lastPendingDataStartIndex
_lastSendDataLength
_pendingDataStartIndex
_peekIndex
_passLength
encodeRootObject:
finishHashing
setSha1Context:
sha1Context
sortedArrayUsingSelector:
encodeObject:
encodeDataObject:
longLongValue
encodeValueOfObjCType:at:
encodeBytes:length:
encodeConditionalObject:
exceptionWithName:reason:userInfo:
decodeValueOfObjCType:at:
decodeBytesWithReturnedLength:
decodeObject
hashObject:
allowsKeyedCoding
containsValueForKey:
versionForClassName:
encodeBytes:length:forKey:
encodeConditionalObject:forKey:
encodeDouble:forKey:
encodeInt:forKey:
encodeFloat:forKey:
encodeInteger:forKey:
decodeDataObject
decodeBytesForKey:returnedLength:
decodeDoubleForKey:
decodeFloatForKey:
decodeIntegerForKey:
decodeObjectForKey:
decodePropertyListForKey:
_sha1Context
setStopCompletionHandler:
container:didStartWithError:
stopCompletionHandler
container:didRequestFlowDivertControlSocketWithCompletionHandler:
initWithDelegate:providerClass:
observeValueForKeyPath:ofObject:change:context:
_provider
_stopCompletionHandler
configurationManager
setApplication:
createEmptyConfiguration
initFilterManagerWithPluginType:
hasLoaded
setName:
_hasLoaded
_configuration
_configurationManager
numberWithUnsignedInt:
array
_endpoint
setExternalIdentifier:
setApplicationIdentifier:
setPayloadInfo:
initWithVPNPayload:configurationName:grade:
initWithAlwaysOnVPNPayload:configurationName:grade:
initWithAppLayerVPNPayload:configurationName:grade:
initWithContentFilterPayload:configurationName:grade:
initWithPathControllerPayload:configurationName:grade:
initWithConfiguration:
descriptionWithOptions:
syncWithKeychainInDomain:
clearKeychainInDomain:
copyProfileDictionaryWithCertificateUUID:
configurationWithProfilePayload:
updateWithConfiguration:
initWithIdentifier:
copyProfileDictionary
copyPasswordsFromSystemKeychain
_grade
_application
_name
_applicationName
_applicationIdentifier
_externalIdentifier
_VPN
_alwaysOnVPN
_appVPN
_contentFilter
_payloadInfo
_pathController
_enabled
additionalExecutables
matchPath
matchAccountIdentifiers
arrayByAddingObjectsFromArray:
copyUniqueSigningIdentifiers
commonPrefixWithString:options:
cStringUsingEncoding:
copyAppRuleIDs
installSigningIdentifiersWithFlowDivertControlSocket:
noRestriction
setNoRestriction:
_noRestriction
_tunnelType
currentVerdict
isOpen
isRemediationFlow
setCurrentVerdict:
setIsOpen:
setIsRemediationFlow:
close
_isOpen
_currentVerdict
_isRemediationFlow
_URL
request
setRequest:
initWithURL:parentURL:
_request
socketFamily
socketType
socketProtocol
epid
remoteEndpoint
setSocketFamily:
setSocketType:
setSocketProtocol:
setEpid:
setLocalEndpoint:
setRemoteEndpoint:
initWithSocketFamily:socketType:socketProtocol:pid:epid:uuid:euuid:
lastRemoteAddress:
lastLocalAddress:
_uuid
_euuid
_lastLocalAddress
_lastRemoteAddress
_remoteEndpoint
_socketFamily
_socketType
_socketProtocol
_epid
setConfigurationVPNPassword:
initFromLegacyDictionaryExtra:
setAuthenticationPluginType:
ingestDisconnectOptions:
getConfigurationProtocol
initWithData:encoding:
ingestPPPDict:
configurePPPCommon:
setExtendedAuthPasswordPrompt:
setLegacyExchangeMode:
setLifetimeSeconds:
setLegacyProposals:
configureVpnOnDemandRules:
configureL2TPWithPPPOptions:
importPKCS12Data:passphrase:
configureIKE:vpnType:payloadBase:vpn:
ingestPPPData:vnpType:
configurePPPWithVPNOptions:payloadBase:
ingestIPSecDict:vpnType:vpn:
configurePluginWithPayload:pluginType:payloadType:
configureVpnOnDemand:vpnType:
ingestDNSOptions:
ingestProxyOptions:
setAppLayerVPNRuleSettings:withAppIdentifier:
authenticationMethod
configureAOVPNTunnelFromTunnelDict:tunnelDict:payloadBase:interfaceType:
setApplicationCreated:
setCertificatesVPN:
setCertificatesAppVPN:
setCertificatesAOVpn:
setCertificateContentFilter:
accessGroup
getPendingCertificateUUIDsInternal:
getPendingCertificateUUIDsVPN:
getPendingCertificateUUIDsAppVPN:
getPendingCertificateUUIDsAOVpn:
getPendingCertificateUUIDsContentFilter:
userName
proxyUserName
proxyPassword
HTTPServer
HTTPSServer
sharedSecret
setConfigurationSharedSecret:
setPayloadInfoIdentityUserNameAndPassword:
setPayloadInfoIdentityProxy:
setPayloadInfoIdentityIPSecSharedSecret:
setPayloadInfoIdentityPIN:
setPayloadUUID:
setPayloadOrganization:
setProfileOrganization:
setProfileUUID:
setProfileIdentifier:
setNoDivertDNS:
setPayloadAppRules:
setCertificates:
getCertificates
getPendingCertificateUUIDs:
getPendingCertificateInfo:
getConfigurationIdentifier
setPayloadInfoIdentity:
setPayloadInfoCommon:payloadOrganization:
setProfileInfo:
setAppLayerVPNUUID:andSafariDomains:
extractPayloadContentsHTTPProxy:
extractPayloadContentsUserNamePassword:
extractPayloadContentsSharedSecret:
extractPayloadContentsPIN:
extractPayloadContents:
setValue:forKey:
userNameRequired
setUserNameRequired:
passwordRequired
setPasswordRequired:
proxyUserNameRequired
setProxyUserNameRequired:
proxyPasswordRequired
setProxyPasswordRequired:
sharedSecretRequired
setSharedSecretRequired:
pinRequired
setPinRequired:
setUserName:
setProxyUserName:
setProxyPassword:
setSharedSecret:
setPin:
_userNameRequired
_passwordRequired
_proxyUserNameRequired
_proxyPasswordRequired
_sharedSecretRequired
_pinRequired
_userName
_password
_proxyUserName
_proxyPassword
_sharedSecret
_pin
initWithBytes:length:encoding:
autoProxyDiscovery
autoProxyConfigurationEnabled
proxyAutoConfigURL
proxyAutoConfigJavaScript
HTTPEnabled
HTTPSEnabled
FTPEnabled
FTPServer
SOCKSEnabled
SOCKSServer
RTSPEnabled
RTSPServer
gopherEnabled
gopherServer
excludeSimpleHostnames
exceptionList
usePassiveFTP
supplementalMatchDomains
supplementalMatchOrders
setProxyAutoConfigJavaScript:
setSupplementalMatchDomains:
setSupplementalMatchOrders:
removeFromKeychain
proxyAutoConfigurationURL
proxyAutoConfigurationJavaScript
setProxyAutoConfigurationJavaScript:
_HTTPServer
_HTTPSServer
_autoProxyConfigurationEnabled
_HTTPEnabled
_HTTPSEnabled
_excludeSimpleHostnames
_autoProxyDiscovery
_FTPEnabled
_SOCKSEnabled
_RTSPEnabled
_gopherEnabled
_usePassiveFTP
_exceptionList
_proxyAutoConfigURL
_proxyAutoConfigJavaScript
_FTPServer
_SOCKSServer
_RTSPServer
_gopherServer
_supplementalMatchDomains
_supplementalMatchOrders
initWithProxyHost:port:type:realm:authenticationMethod:
copyProtectionSpace
initWithUser:password:persistence:
sharedCredentialStorage
setDefaultCredential:forProtectionSpace:
defaultCredentialForProtectionSpace:
removeCredential:forProtectionSpace:
initWithAddress:port:
_authenticationRequired
_address
_port
completeRequestReturningItems:completionHandler:
completeSession
_hostContext
legacy
initWithData:
copyQueryWithReturnTypes:
copyDataFromKeychainItem:outPassword:outIdentifier:outPersistentReference:
copyKindForPasswordType:
addOrUpdateWithConfiguration:passwordType:accountName:identifierSuffix:
oldItem
setOldItem:
initWithPassword:domain:
initWithIdentifier:domain:
initWithPersistentReference:domain:
initWithLegacyIdentifier:domain:
setIdentifierInternal:
_persistentReference
_legacy
_accessGroup
_oldItem
copyPersistentReferenceForIdentity:
copyPropertiesForIdentity:persistentReference:
arrayWithObject:
unsignedIntValue
sourceAppSigningIdentifier
sourceAppUniqueIdentifier
fastOpenRequested
multipathRequested
initWithUniqueIdentifier:signingIdentifier:fastOpenRequested:multipathRequested:
initFromFlow:
_fastOpenRequested
_multipathRequested
_sourceAppUniqueIdentifier
_sourceAppSigningIdentifier
verboseLoggingEnabled
instancesRespondToSelector:
_verboseLoggingEnabled
_authenticationMethod
setVirtualInterfaceSocket:
fetchVirtualInterfaceTypeWithCompletionHandler:
requestSocket:interface:local:remote:completionHandler:
packetFlow
closeVirtualInterface
startTunnelWithOptions:completionHandler:
stopTunnelWithReason:completionHandler:
interfaceType
resetReadHandler
initWithVirtualInterfaceType:
interface
getTunnelInterface
createTCPConnectionThroughTunnelToEndpoint:enableTLS:TLSParameters:delegate:
createUDPSessionThroughTunnelToEndpoint:fromEndpoint:
cancelTunnelWithError:
setPacketFlow:
_packetFlow
deregisterConfiguration:
sendMessageWithType:data:forConfiguration:
initWithDomain:code:userInfo:
setObject:atIndexedSubscript:
setConfig_id:
config_id
createIPCFromEndpoint:
setPrimary_ipc:
setSecondary_ipc:
send_queue
primary_ipc
secondary_ipc
setSend_queue:
removeConfiguration:
addConfiguration:
sendMessage:withType:
configurations
getIndexOfConfiguration:
setConfigurations:
_primary_ipc
_secondary_ipc
_config_id
_configurations
_send_queue
_xpcConnection
extension:didStartWithError:
copyValueForEntitlement:
initWithNameAndType:payloadType:
findConfigurationByConfigurationID:
setIngestedConfiguration:
loadConfigurationsWithRefreshOption:
characterSetWithCharactersInString:
stringByTrimmingCharactersInSet:
substringToIndex:
findConfigurationByName:
setIsSetAside:
saveConfiguration:
payloadUUID
findConfigurationByPayloadUUID:
resolveConfigurationNameConflict:
loadConfigurationsForceReloadFromDisk
enableAlwaysOnVpnInternal:
dictionaryWithCapacity:
payloadAppRules
findMostSpecificAppRuleForBundleID:config:
getServiceIDForPayload:
profileMigrationComplete
removeIngestedConfiguration
removeConfigurationWithIdentifier:
setAsideConfigurationName:unsetAside:
isInstalled:
lockConfigurations
unlockConfigurations
enableDefaultService
enableAlwaysOnVpn
updateDefaultAfterAddingConfiguration
updateDefaultAfterDeletingConfiguration
copyManagedConfigurationIDs
updateAppLayerVPNMappingRules:
updateManagedAppRules:
getCertificatesForConfigurationWithIdentifier:
payloadType
_payloadType
_ingestedConfiguration
setObserving:
startFilterWithCompletionHandler:
observing
stopObserving
_observing
cellularBehavior
wifiBehavior
internalCellularBehavior
denyCellularFallback
aggregateEnterpriseCellular
aggregatePersonalCellular
internalWiFiBehavior
aggregateEnterpriseWiFi
aggregatePersonalWiFi
setInternalCellularBehavior:
setDenyCellularFallback:
setAggregateEnterpriseCellular:
setAggregatePersonalCellular:
setInternalWiFiBehavior:
setAggregateEnterpriseWiFi:
setAggregatePersonalWiFi:
isAggregateRule
supportsCellularBehavior:
aggregateNetworkBehavior:other:
initDefaultPathRule
isDefaultPathRule
signingIdentifierAllowed:domainsRequired:
addCellularBehavior:grade:
addWiFiBehavior:grade:
supportsWiFiBehavior:
_denyCellularFallback
_aggregatePersonalCellular
_aggregateEnterpriseCellular
_internalCellularBehavior
_aggregatePersonalWiFi
_aggregateEnterpriseWiFi
_internalWiFiBehavior
controlProviderInitialized
setControlProviderExists:
setPendingConnections:
closePendingConnections
teardownSocketSource
browserFlows
alphanumericCharacterSet
scheme
replaceOccurrencesOfString:withString:options:range:
host
lowercaseString
finishDecoding
socketExceptions
numberWithUnsignedLongLong:
setBrowserFlows:
filterConfiguration
cleanRemediationURL:flow:providerConfiguration:
sanitizeRemediationButtonText:
controlProviderExists
handleInboundDataFromFlow:readBytesStartOffset:readBytes:
handleOutboundDataFromFlow:readBytesStartOffset:readBytes:
handleInboundDataCompleteForFlow:
handleOutboundDataCompleteForFlow:
handleRemediationForFlow:
handleRemediationMessage:forConnection:
pendingConnections
socketFlows
socketContentFilterWriteMessageWithControlSocket:socketID:drop:inboundPassOffset:inboundPeekOffset:outboundPassOffset:outboundPeekOffset:
closeSocketFlow:socketID:
initWithBytes:length:
setSource:
handleSocketSourceEventWithSocket:
source
setSocketFlows:
setupSocketSourceWithControlSocket:
setupSocketContentFilterWithControlSocket:
setListenerEndpoint:
setSocketExceptions:
_controlProviderExists
_listenerEndpoint
_socketFlows
_socketExceptions
_source
_pendingConnections
cellularFallbackFlags
copyAggregatePathRules
copyPathRuleSigningIdentifiers
hasNonDefaultRules
_cellularFallbackFlags
_pathRules
_payloadAppRules
stopFilterWithReason:completionHandler:
setFilterConfiguration:
_filterConfiguration
cancelSharedWrapperForSession:
sharedWrapperForSession:
sendQueue
startTunnelWithOptions:andReturnError:
stopTunnel
sendProviderMessage:returnError:responseHandler:
ipcQueue
initWithSession:identifier:
_sendQueue
_ipcQueue
extension:didRequestSocket:interface:local:remote:completionHandler:
exceptionApps
setExceptionApps:
_onDemandRules
_protocol
_exceptionApps
setSocket:
socket
setHandlerSetup:
setPacketHandler:
packetDataArray
setPacketDataArray:
packetProtocols
setPacketProtocols:
packetLengths
setPacketLengths:
packetHandler
handlerSetup
initWithUnsignedInt:
initWithObjects:count:
uuidMappings
setUuidMappings:
packetObjectHandler
setPacketObjectHandler:
signingIdentifierForUUID:
buffersSize
setBuffersSize:
readPacketsWithCompletionHandler:
readPacketObjectsWithCompletionHandler:
writePackets:withProtocols:
writePacketObjects:
_handlerSetup
_socket
_uuidMappings
_packetHandler
_packetObjectHandler
_packetDataArray
_packetProtocols
_packetLengths
_buffersSize
_interfaceType
_interface
setControlProviderInitialized:
_controlProviderInitialized
encryptionLevel
setEncryptionLevel:
_encryptionLevel
initMessage
_incomingMessageHandler
_initMessage
clearEventHandlers
copyVPNFlowErrorFromFlowError:
closeReadWithError:
closeWriteWithError:
applicationData
setApplicationData:
setFlow:
_metaData
_flow
vendorInfo
authenticationPluginType
reassertTimeout
setVendorInfo:
setReassertTimeout:
addEntriesFromDictionary:
_providerConfiguration
_authenticationPluginType
_vendorInfo
_reassertTimeout
lifetimeSeconds
_lifetimeSeconds
remoteIdentifier
legacyProposals
legacyExchangeMode
extendedAuthPasswordPrompt
_sharedSecretReference
_useExtendedAuthentication
_extendedAuthPasswordPrompt
_remoteIdentifier
_legacyProposals
_legacyExchangeMode
_onceToken
numberWithUnsignedShort:
stringValue
readDataWithCompletionHandler:
writeData:withCompletionHandler:
subarrayWithRange:
noDivertDNS
matchDesignatedRequirement
setAdditionalExecutables:
_noDivertDNS
_matchSigningIdentifier
_matchDesignatedRequirement
_matchPath
_additionalExecutables
_matchAccountIdentifiers
tunnelRemoteAddress
initWithTunnelRemoteAddress:
_tunnelRemoteAddress
serviceName
_serviceName
_bundleIdentifier
isToggleEnabled
isAllowCaptiveWebSheet
isAllowAllCaptiveNetworkPlugins
setActiveInterfaceProtocolKey:
_toggleEnabled
_allowCaptiveWebSheet
_allowAllCaptiveNetworkPlugins
_interfaceProtocolMapping
_activeInterfaceProtocolKey
_serviceExceptions
_allowedCaptiveNetworkPlugins
operatingSystemVersionString
payloadProtocolType
payloadOrganization
profileUUID
profileOrganization
profileIngestionDate
systemVersion
profileSource
setPayloadProtocolType:
setProfileIngestionDate:
setSystemVersion:
setProfileSource:
_isSetAside
_applicationCreated
_payloadProtocolType
_payloadUUID
_payloadOrganization
_profileOrganization
_profileIdentifier
_profileUUID
_profileIngestionDate
_systemVersion
_profileSource
NEFilterControlProvider
NSExtensionRequestHandling
NSObject
NEFilterBlockPage
NEProfilePayloadBase
NEProfilePayloadBaseDelegate
NEExtensionTunnelProviderProtocol
NEExtensionProviderProtocol
NEExtensionTunnelProviderHostProtocol
NEExtensionProviderHostProtocol
NEExtensionTunnelProviderHostContext
NEVPNIKEv2SecurityAssociationParameters
NEConfigurationValidating
NEPrettyDescription
NSSecureCoding
NSCoding
NSCopying
NEVPNProtocolIKEv2
NEAppProxyProviderManager
NEAppProxyUDPFlow
NEIPC
NEPacket
NEVPNProtocolL2TP
NEVPNConnection
NEPluginPreferences
NEExtensionAppProxyProviderProtocol
NEExtensionAppProxyProviderHostProtocol
NEExtensionAppProxyProviderContext
NEFilterDataVerdict
NEFilterNewFlowVerdict
NEFilterAbsoluteVerdict
NEFilterVerdict
NEFilterControlVerdict
NEFilterRemediationVerdict
NEVPNProtocol
NEConfigurationLegacySupport
NEVPNProtocolPlugin
NEIPv4Route
NEIPv4Settings
NETunnelProvider
NETunnelProviderManager
NEPolicyCondition
NEPolicyRouteRule
NEPolicyResult
NEPolicy
NEPolicySession
NEContentFilterPlugin
NEIPv6Route
NEIPv6Settings
NEFilterExtensionProviderHostContext
NEFilterExtensionProviderProtocol
NEFilterExtensionProviderHostProtocol
NEUserNotification
NEDNSSettings
NEProvider
NEProvider_Subsystem
PKModularService
NEFilterDataExtensionProviderProtocol
NEFilterDataExtensionProviderHostProtocol
NEFilterDataExtensionProviderHostContext
NEOnDemandRule
NEOnDemandRuleConnect
NEOnDemandRuleDisconnect
NEOnDemandRuleIgnore
NEOnDemandRuleEvaluateConnection
NEEvaluateConnectionRule
NEUtilConfigurationClient
NEConfigurationCommandHandling
NEExtensionTunnelProviderContext
NWTLSParameters
NEAgentFilterPlugin
NEAgentSessionDelegate
NEConfigurationManager
NEExtensionAppProxyProviderHostContext
NEPacketTunnelNetworkSettings
NEHotspotNetwork
NEHotspotHelperResponse
NEHotspotHelperCommand
NEHotspotHelper
NEAppProxyProvider
NEFilterControlExtensionProviderProtocol
NEFilterControlExtensionProviderHostProtocol
NEFilterControlExtensionProviderHostContext
NEProviderAppConfigurationClient
NSXPCListenerDelegate
NEFilterSource
NEHasher
NEAppProxyProviderContainer
NEFilterManager
NEVPNManager
NEConfiguration
NEContentFilter
NEVPNApp
NEProfilePayloadContentFilter
NEFilterFlow
NEFilterBrowserFlow
NEFilterSocketFlow
NEProfileIngestionMethods
NEProfilePayloadHandlerDelegate
NEProfilePayloadBaseVPN
NEProxySettings
NEProxyServer
NEExtensionProviderContext
NEPrettyPrint
NEKeychainItem
NEIdentityKeychainItem
NEFlowMetaData
NEVPNProtocolPPP
NEExtensionPacketTunnelProviderProtocol
NEExtensionPacketTunnelProviderHostProtocol
NEExtensionPacketTunnelProviderContext
NEPacketTunnelProvider
NEIPCHandle
NEExtensionProviderHostContext
NEProfileIngestion
NEProfileIngestionDelegate
NEFilterControlExtensionProviderContext
NEProfilePayloadAOVPN
NEPathRule
NEFilterDataExtensionProviderContext
SCNetworkService
NEPathController
NEFilterProvider
NETunnelProviderSession
NEIPCWrapper
NEFilterDataProvider
NEExtensionPacketTunnelProviderHostContext
NEVPN
NEPacketTunnelFlow
NEFilterProviderConfiguration
NEVPNProtocolPPTP
NEHelper
NEAppProxyFlow
NETunnelProviderProtocol
NEVPNIKEv1ProposalParameters
NEVPNProtocolIPSec
NEFilterExtensionProviderContext
NEAppProxyTCPFlow
NEAppRule
NEVPNAppRuleExecutable
NETunnelNetworkSettings
NEAOVPNException
NEAOVPN
NEProfileIngestionPayloadInfo
v12@0:4@8
v12@0:4@"NSExtensionContext"8
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
v16@0:4@8@?12
v8@0:4
@"NSDictionary"
@"NSString"
@"NSURL"
@12@0:4@8
@12@0:4@"NSDictionary"8
@"NSError"8@0:4
@"NSDictionary"8@0:4
B12@0:4@"NSDictionary"8
B16@0:4@8@12
B20@0:4@8@12@16
@12@0:4^{_NSZone=}8
@"NSMutableDictionary"
v12@0:4@?8
v12@0:4@?<v@?@"NSXPCListenerEndpoint">8
v12@0:4@?<v@?>8
v20@0:4@8@12@16
v20@0:4@"NEConfiguration"8@"NSString"12@"NSString"16
v16@0:4@"NSDictionary"8@?<v@?@"NSError">12
v12@0:4i8
v12@0:4B8
v16@0:4@"NETunnelNetworkSettings"8@?<v@?@"NSError">12
v12@0:4@"NSError"8
v20@0:4@8@12@?16
v20@0:4@"NSString"8@"NSString"12@?<v@?B>16
B12@0:4@"NSMutableArray"8
@16@0:4i8I12
@"NSString"16@0:4i8I12
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
i8@0:4
@"NEVPNIKEv2SecurityAssociationParameters"
@"NSArray"
@16@0:4^{_NEFlow=}8@12
@"NWEndpoint"
@16@0:4@8@?12
B24@0:4I8@12@16@?20
v20@0:4I8@12@16
@?8@0:4
@"NSObject<OS_xpc_object>"
@20@0:4@8C12@16
@24@0:4@8C12@16@20
@16@0:4@8C12
C8@0:4
@"NSData"
@"NEFlowMetaData"
v20@0:4i8@12@16
v16@0:4i8B12
v12@0:4^{__SCPreferences=}8
^{__SCNetworkInterface=}8@0:4
B12@0:4^{__SCNetworkService=}8
@"NEKeychainItem"
@"NEIdentityKeychainItem"
@12@0:4i8
B12@0:4^@8
B16@0:4@8^@12
^v8@0:4
v12@0:4^v8
@"NSDate"
@"NEVPNManager"
B16@0:4@8B12
v16@0:4B8@12
B12@0:4^{__CFString=}8
B20@0:4^{__CFDictionary=}8l12@16
^{__CFDictionary=}16@0:4l8@12
^{__SCPreferences=}8@0:4
^{__SCPreferences=}
v12@0:4I8
v12@0:4@"NSFileHandle"8
v16@0:4@8B12
v16@0:4@"NSFileHandle"8B12
v24@0:4i8@12@16@?20
v24@0:4i8@"NSUUID"12@"NEAppRule"16@?<v@?B>20
v12@0:4@?<v@?@"NSFileHandle">8
v24@0:4I8i12[16C]16^{__CFString=}20
v16@0:4^{_NEFlow=}8@?12
^{_NEFlowDirector=}8@0:4
v12@0:4^{_NEFlowDirector=}8
@"NSObject<OS_dispatch_queue>"
^{_NEFlowDirector=}
@16@0:4@8@12
@16@0:4I8I12
Q8@0:4
v16@0:4Q8
@24@0:4B8I12B16I20
@44@0:4B8Q12Q20Q28Q36
@16@0:4B8B12
@12@0:4B8
@"NSMutableDictionary"8@0:4
@"NEProxySettings"
@"NSUUID"
@"NEDNSSettings"
@"NEVPNProtocol"
B12@0:4i8
@12@0:4I8
@12@0:4S8
S8@0:4
v12@0:4S8
v12@0:4C8
@"NWAddressEndpoint"
@16@0:4i8@12
@16@0:4i8i12
@16@0:4@8i12
@16@0:4@8I12
@20@0:4I8@12@16
@"NEPolicyResult"
v24@0:4@8C12L16r^v20
@28@0:4r*8L12C16B20i24
C20@0:4r*8B12^I16
I12@0:4@8
B20@0:4*8*12L16
@28@0:4C8*12^*16L20I24
@12@0:4C8
B12@0:4I8
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_dispatch_source>"
@"NSNumber"
v16@0:4@8@12
v16@0:4@"NSString"8@"NSString"12
v12@0:4@"NEFilterProviderConfiguration"8
v16@0:4@"NEFilterProviderConfiguration"8@?<v@?@"NSError">12
@"<NEFilterExtensionProviderProtocol>"
@24@0:4@8@12@16@20
@20@0:4@8@12I16
B16@0:4@8@?12
@20@0:4@8@12@16
v24@0:4@8@12@16^v20
@24@0:4@8B12@16@20
@36@0:4@8B12@16B20B24@28@32
@40@0:4@8B12@16B20B24@28@32@36
@"NWPath"
@"NWPathEvaluator"
@"NEExtensionProviderContext"
v16@0:4@"<PKSubsystemServicePersonality>"8@"NSBundle"12
v12@0:4@"<PKSubsystemServicePersonality>"8
@"<PKModularService>"8@0:4
v12@0:4@"NSDictionary"8
v16@0:4@"NEFilterFlow"8@?<v@?@"NEFilterControlVerdict">12
@"<NEFilterDataExtensionProviderHostDelegate>"
v24@0:4i8@"NSString"12@"NSDictionary"16@?<v@?@"NSArray">20
v16@0:4B8@?12
v16@0:4@8i12
@"NEConfigurationManager"
@"NSMutableArray"
@"NEConfiguration"
@"NEIPC"
@"NSSet"
@24@0:4@8@12@16^{__CFBundle=}20
@24@0:4@"NEAgentSession"8@"NSString"12@"NSString"16^{__CFBundle=}20
v12@0:4@?<v@?B>8
v16@0:4@"NSObject<OS_xpc_object>"8@"NSObject<OS_xpc_object>"12
v16@0:4^{NEContentFilterFlow_s=}8^{__CFUUID=}12
v16@0:4l8l12
v12@0:4l8
B12@0:4@?8
B16@0:4^{__CFDictionary=}8l12
^{__CFDictionary=}12@0:4l8
^{NESocketContentFilter_s=}8@0:4
v28@0:4@?8@?12@?16@20^v24
^{__CFBundle=}
^{__CFDictionary=}
^{NESocketContentFilter_s=}
{NEAgentFilterPluginCallbacks="PluginInit"^?"PluginStart"^?"PluginStop"^?"PluginEnvironmentEvent"^?"PluginDispose"^?}
@"NEAgentSession"
@"NEPluginPreferences"
v16@0:4^Q8@12
i16@0:4@8@12
@12@0:4^@8
v24@0:4q8Q16
@32@0:4@8^{__SCPreferences=}12@16@20B24B28
v32@0:4@8@12@16B20@24@?28
@16@0:4@8^{__SCPreferences=}12
v16@0:4@?8@?12
v24@0:4@8@12@16@?20
v24@0:4@8@12@16^{__SCPreferences=}20
v24@0:4@8i12@16@?20
q8@0:4
v16@0:4q8
@"NEHelper"
@"NSKeyedUnarchiver"
@"<NEConfigurationManagerDelegate>"
@"NEIPv4Settings"
@"NEIPv6Settings"
@12@0:4^{__CNNetwork=}8
v12@0:4^{__CNNetwork=}8
^{__CNNetwork=}8@0:4
d8@0:4
^{__CNNetwork=}
@12@0:4^{__CNPluginResponse=}8
v12@0:4^{__CNPluginResponse=}8
^{__CNPluginResponse=}8@0:4
^{__CNPluginResponse=}
@12@0:4^{__CNPluginCommand=}8
v12@0:4^{__CNPluginCommand=}8
^{__CNPluginCommand=}8@0:4
^{__CNPluginCommand=}
B20@0:4@8@12@?16
v16@0:4i8@?12
@"<NEFilterControlExtensionProviderHostDelegate>"
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
l20@0:4@8@12^@16
l12@0:4@8
@"NSXPCListener"
@"NSXPCConnection"
@"<NEConfigurationCommandHandling>"
v36@0:4@8@12@16@20i24@28@?32
@24@0:4@8i12Q16
@"NSMutableData"
@"NSURLResponse"
@"NSURLRequest"
i12@0:4@8
v16@0:4r*8r^v12
v20@0:4r*8I12@16
v16@0:4r^v8I12
v20@0:4d8@16
v16@0:4i8@12
v16@0:4f8@12
v20@0:4q8@16
v16@0:4r*8^v12
r*16@0:4@8^I12
d12@0:4@8
f12@0:4@8
q12@0:4@8
@16@0:4#8@12
^{CC_SHA1state_st=IIIIIII[16I]i}8@0:4
v12@0:4^{CC_SHA1state_st=IIIIIII[16I]i}8
^{CC_SHA1state_st=IIIIIII[16I]i}
@16@0:4@8#12
@"NEAppProxyProvider"
@"<NEAppProxyProviderContainerDelegate>"
@"NEVPNConnection"
@"NEVPN"
@"NEAOVPN"
@"NEVPNApp"
@"NEContentFilter"
@"NEProfileIngestionPayloadInfo"
@"NEPathController"
@"NEFilterProviderConfiguration"
@"NEFilterAbsoluteVerdict"
@36@0:4i8i12i16i20i24[16C]28[16C]32
v12@0:4^{sockaddr=CC[14c]}8
[16C]
{sockaddr_storage="ss_len"C"ss_family"C"__ss_pad1"[6c]"__ss_align"q"__ss_pad2"[112c]}
B24@0:4@8@12@16@20
@20@0:4@8@12i16
@"NSDictionary"12@0:4@"<NEProfilePayloadBaseDelegate>"8
@"NSArray"8@0:4
B12@0:4@"<NEProfilePayloadBaseDelegate>"8
B16@0:4@"NSString"8@"NSString"12
B16@0:4@"NSString"8@"NSArray"12
B16@0:4@"NSDictionary"8@"NSString"12
@"NEProxyServer"
@20@0:4i8@12i16
i12@0:4i8
@"<NEExtensionProviderHostProtocol>"
v24@0:4@8@12i16I20
v24@0:4B8@12i16I20
v24@0:4i8@12i16I20
v28@0:4^i8C12r*16B20B24
@20@0:4@8i12@16
B24@0:4^v8^@12^@16^@20
B24@0:4@8i12@16@20
v24@0:4@8@12i16@20
@12@0:4^{__SecIdentity=}8
@16@0:4^{__SecIdentity=}8@12
@24@0:4@8@12B16B20
@12@0:4^{_NEFlow=}8
v12@0:4@?<v@?l>8
v28@0:4B8@12@16@20@?24
v28@0:4B8@"NSString"12@"NSData"16@"NSData"20@?<v@?@"NSFileHandle">24
@12@0:4l8
@"NEPacketTunnelFlow"
v12@0:4^{_VPNConfigurationPrivate={__CFRuntimeBase=I[4C]}^{__CFString}C^{__CFRunLoopSource}^{__CFRunLoopSource}^{__CFRunLoopSource}^{__CFArray}^?{?=i^v^?^?^?}^?{?=i^v^?^?^?}@^v{ipc_queue=^{IPCMessage}^^{IPCMessage}}@{?=^{_VPNConfigurationPrivate}}}8
B20@0:4I8^{__CFData=}12^{_VPNConfigurationPrivate={__CFRuntimeBase=I[4C]}^{__CFString}C^{__CFRunLoopSource}^{__CFRunLoopSource}^{__CFRunLoopSource}^{__CFArray}^?{?=i^v^?^?^?}^?{?=i^v^?^?^?}@^v{ipc_queue=^{IPCMessage}^^{IPCMessage}}@{?=^{_VPNConfigurationPrivate}}}16
@12@0:4^{_VPNConfigurationPrivate={__CFRuntimeBase=I[4C]}^{__CFString}C^{__CFRunLoopSource}^{__CFRunLoopSource}^{__CFRunLoopSource}^{__CFArray}^?{?=i^v^?^?^?}^?{?=i^v^?^?^?}@^v{ipc_queue=^{IPCMessage}^^{IPCMessage}}@{?=^{_VPNConfigurationPrivate}}}8
l12@0:4^{_VPNConfigurationPrivate={__CFRuntimeBase=I[4C]}^{__CFString}C^{__CFRunLoopSource}^{__CFRunLoopSource}^{__CFRunLoopSource}^{__CFArray}^?{?=i^v^?^?^?}^?{?=i^v^?^?^?}@^v{ipc_queue=^{IPCMessage}^^{IPCMessage}}@{?=^{_VPNConfigurationPrivate}}}8
B16@0:4^{__CFData=}8I12
^{__CFArray=}8@0:4
v12@0:4^{__CFArray=}8
^{ipc_queue=^{IPCMessage}^^{IPCMessage}}8@0:4
v12@0:4^{ipc_queue=^{IPCMessage}^^{IPCMessage}}8
^{__CFArray=}
^{ipc_queue=^{IPCMessage}^^{IPCMessage}}
@"<NEExtensionProviderProtocol>"
@"NEUserNotification"
@"<NEExtensionProviderHostDelegate>"
@16@0:4@"NSString"8@"NSString"12
@"NEConfiguration"12@0:4@"NSString"8
B16@0:4@"<NEProfilePayloadBaseDelegate>"8@"NSString"12
@"NEConfiguration"8@0:4
B12@0:4@"NEConfiguration"8
B12@0:4@"NSString"8
@16@0:4@8B12
@"NEConfiguration"16@0:4@"NSString"8B12
B12@0:4@"NSArray"8
@"NSArray"12@0:4@"NSString"8
@"NSString"12@0:4@"NSDictionary"8
B12@0:4B8
i16@0:4i8i12
B16@0:4@8o^B12
v16@0:4i8i12
v20@0:4@8Q12
B56@0:4i8Q12B20Q24Q32Q40Q48
@"NSXPCListenerEndpoint"
B12@0:4^{__SCPreferences=}8
@12@0:4^{__SCNetworkService=}8
B16@0:4@8^{__SCPreferences=}12
B20@0:4^{__CFDictionary=}8^{__CFString=}12^{__SCNetworkService=}16
^{__CFDictionary=}16@0:4^{__CFString=}8^{__SCNetworkService=}12
B20@0:4@8^@12@?16
@12@0:4^v8
@16@0:4^v8@12
@20@0:4@8I12@16
^*8@0:4
v12@0:4^*8
^I8@0:4
v12@0:4^I8
L8@0:4
v12@0:4L8
l8@0:4
^{NEVirtualInterface_s=}8@0:4
@"NSFileHandle"
^{NEVirtualInterface_s=}
^{__CFError=}12@0:4@8
^{_NEFlow=}8@0:4
v12@0:4^{_NEFlow=}8
^{_NEFlow=}
IKEv2 processing socket read event
SessionClient processing get connection request
NEFilterDataExtensionProviderContext processing socket source event
NEVirtualInterface processing read event
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
