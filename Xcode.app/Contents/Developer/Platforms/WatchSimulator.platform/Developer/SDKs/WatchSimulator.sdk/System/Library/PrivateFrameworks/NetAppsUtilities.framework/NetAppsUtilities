alloc
initWithFirst:second:
init
pairWithFirst:second:
.cxx_destruct
first
second
_first
_second
count
initWithCapacity:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
dictionaryWithDictionary:
dictionaryWithCapacity:
na_filter:
na_dictionaryByMappingValues:
objectForKey:
na_safeSetObject:forKey:
na_objectForKey:withDefaultValue:
componentsSeparatedByString:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
na_map:
dictionary
numberWithDouble:
exceptionWithName:reason:userInfo:
arrayWithObjects:count:
dictionaryWithObjects:forKeys:
errorWithDomain:code:userInfo:
na_errorWithCode:
domain
isEqualToString:
code
na_isTimeoutError
na_isCancelledError
na_timeoutError
na_cancelledError
na_genericError
setBlock:
mainThreadScheduler
setScheduler:
setAccessQueue:
accessQueue
isFinished
started
setStarted:
scheduler
initWithFuture:
block
performBlock:
_runIfNecessary
addSuccessBlock:
addFailureBlock:
addCompletionBlock:
initWithBlock:scheduler:
_started
_block
_scheduler
_accessQueue
initWithThrottleInterval:initialValue:
initWithThrottleInterval:
valueUpdateCancelationToken
cancel
dealloc
isEqual:
_enqueueValueUpdateIfNecessary
setValueUpdateCancelationToken:
updateScheduler
throttleInterval
_notifyObserversOfValueUpdate
afterDelay:performBlock:
observerBlocks
countByEnumeratingWithState:objects:count:
value
copy
addObject:
removeObject:
tokenWithCancelationBlock:
setValue:
setUpdateScheduler:
observeValueChangesWithBlock:
flushValueChanges
hasPendingValueChange
_updateScheduler
_value
_observerBlocks
_valueUpdateCancelationToken
_throttleInterval
initWithQueue:
UTF8String
initWithMaxConcurrentOperationCount:
immediateScheduler
globalAsyncScheduler
schedulerWithDispatchQueue:
serialDispatchQueueSchedulerWithName:
operationQueueSchedulerWithMaxConcurrentOperationCount:
isMainThread
isCanceled
scheduledTimerWithTimeInterval:repeats:block:
invalidate
addCancelationBlock:
performCancelableBlock:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
nts_cancel
callCancelationBlocks:
array
tokenWrappingCancelable:
addCancelable:
_isCanceled
_cancelationBlocks
null
_queue_isCancelled
_flushCompletionBlocks
didCancel
finishWithResult:error:
finishWithResult:
finishWithError:
_descriptorForChainOperation:onFuture:withBlock:
setDescriptor:
future
descriptor
stringWithFormat:
finishWithNoResult
completionHandlerAdapter
errorOnlyCompletionHandlerAdapter
isCancelled
flatMap:
reschedule:
recover:
_finished
_completionBlocks
_resultValue
_resultError
_descriptor
_future
futureWithNoResult
futureWithResult:
futureWithBlock:scheduler:
lazyFutureWithBlock:scheduler:
combineAllFutures:scheduler:
combineAllFutures:ignoringErrors:scheduler:
enumerateObjectsUsingBlock:
reverseObjectEnumerator
allObjects
arrayWithArray:
_chainFuturesWithFutureStack:
lastObject
removeLastObject
recoverIgnoringError
futureWithError:
futureWithBlock:
lazyFutureWithBlock:
combineAllFutures:
chainFutures:
futureWithCompletionHandlerAdapterBlock:
futureWithErrorOnlyHandlerAdapterBlock:
na_safeAddObject:
arrayWithCapacity:
indexesOfObjectsPassingTest:
objectsAtIndexes:
na_arrayByFlattening
addObjectsFromArray:
na_each:
setObject:forKeyedSubscript:
arrayWithObject:
na_firstObjectPassingTest:
na_arrayWithResultsOfBlock:
na_any:
na_all:
na_dictionaryWithKeyGenerator:
na_arrayByRepeatingWithCount:generatorBlock:
na_arrayWithSafeObject:
queue
_queue
setWithCapacity:
objectsPassingTest:
na_setByFlattening
unionSet:
mutableCopy
intersectSet:
minusSet:
setWithObject:
na_setByIntersectingWithSet:
na_setByRemovingObjectsFromSet:
na_setWithSafeObject:
initWithComparator:
initWithStrategy:
initWithCapacity:overflowHandler:
enqueueObject:buffer:
firstObject
removeObjectAtIndex:
removeAllObjects
priorityQueueWithComparator:
boundedQueueWithCapacity:
boundedQueueWithCapacity:overflowHandler:
enqueue:
peek
dequeue
dequeueObject:
drain
_buffer
_strategy
_insertionIndexForObject:buffer:
insertObject:atIndex:
indexOfObjectPassingTest:
_priorityComparator
_capacity
_overflowHandler
sleepForTimeInterval:
setMaxConcurrentOperationCount:
addOperationWithBlock:
blockOperationWithBlock:
addOperation:
initWithWeakObserver:notificationName:observerQueue:observerBlock:
_na_addNotificationObserverProxy:
initWithWeakObserver:observedObject:keyPath:options:observerBlock:
_na_removeNotificationObserverProxy:
na_associatedObjectForDescriptor:
na_setAssociatedObject:assocatedObjectDescriptor:
na_addNotificationBlockObserverForName:object:queue:usingBlock:
na_addNotificationBlockObserverForObject:keyPath:options:usingBlock:
na_removeNotificationBlockObserver:
initWithWeakObserver:
weakObserver
isValid
_valid
_weakObserver
defaultCenter
performObserverBlock
addObserverForName:object:queue:usingBlock:
removeObserver:
observerQueue
observerBlock
notificationName
_notificationObserver
_observerQueue
_observerBlock
_notificationName
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
observeValueForKeyPath:ofObject:change:context:
observedObject
keyPath
_isObserving
_observedObject
_keyPath
NAPair
NAAdditions
NAErrors
_NALazyFuture
NAValueThrottler
NAScheduler
_NAMainThreadScheduler
NSObject
NACancelationToken
NACancelable
NAFuture
NAPromise
NAConveniences
_NAQueueScheduler
NAQueue
_NADefaultQueueingStrategy
NAQueueingStrategy
_NAPriorityQueueingStrategy
_NABoundedQueueingStrategy
_NAImmediateScheduler
_NAOperationQueueScheduler
_NAObserverProxy
_NANotificationObserverProxy
_NAKeyValueObserverProxy
@16@0:4@8@12
v8@0:4
@8@0:4
@12@0:4@?8
v16@0:4@8@12
@16@0:4@8@?12
B8@0:4
@12@0:4I8
@16@0:4@?8@12
v12@0:4@?8
@?8@0:4
v12@0:4@8
v12@0:4B8
@"<NAScheduler>"
@"NSObject<OS_dispatch_queue>"
@16@0:4d8
@20@0:4d8@16
d8@0:4
@"NSMutableSet"
@"<NACancelable>"
@12@0:4@8
v12@0:4@?<v@?>8
@"<NACancelable>"12@0:4@?<v@?@"NACancelationToken">8
@20@0:4d8@?16
@"<NACancelable>"20@0:4d8@?<v@?>16
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
@"NSMutableArray"
@20@0:4@8@12@16
B12@0:4@"NSError"8
B16@0:4@8@12
B16@0:4@8@"NSError"12
@?<v@?@@"NSError">8@0:4
@?<v@?@"NSError">8@0:4
@"NSError"
@"NSString"
@"NAFuture"
@20@0:4@8B12@16
B12@0:4@?8
@16@0:4I8@?12
@"<NAQueueingStrategy>"
v16@0:4@8@"NSMutableArray"12
I16@0:4@8@12
@"NSOperationQueue"
@24@0:4@8@12@16@?20
@24@0:4@8@12I16@?20
v16@0:4@8r^{?=*L}12
@12@0:4r^{?=*L}8
@28@0:4@8@12@16I20@?24
v24@0:4@8@12@16^v20
first
T@,R,V_first
second
T@,R,V_second
v16@?0@4@8^B12
v16@?0@"<NSCopying>"4@8^B12
@8@?0@"NSString"4
NAErrorDomain
com.apple.NetAppsUtilities.LazyFutureAccessQueue
v4@?0
block
T@?,C,N,V_block
scheduler
T@"<NAScheduler>",&,N,V_scheduler
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
started
TB,N,V_started
observerBlocks
T@"NSMutableSet",R,N,V_observerBlocks
valueUpdateCancelationToken
T@"<NACancelable>",&,N,V_valueUpdateCancelationToken
throttleInterval
Td,R,N,V_throttleInterval
updateScheduler
T@"<NAScheduler>",&,N,V_updateScheduler
value
T@,&,N,V_value
hasPendingValueChange
TB,R,N
@4@?0
v8@?0@"NSTimer"4
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0@"<NACancelable>"4
com.apple.NAFutureAccessQueue
v12@?0@4@"NSError"8
v8@?0@"NSError"4
flatMap
v8@?0@4
reschedule
recover
canceled
succeeded
failed
active
@"NSString"4@?0
: "%@"
, result = %@
, error = %@
<%@ %p (%@)%@%@>
finished
TB,R,GisFinished
cancelled
TB,R,GisCancelled
descriptor
T@"NSString",C,N,V_descriptor
future
T@"NAFuture",R,V_future
T@"NSString",C,N
@"NAFuture"8@?0@"NSError"4
v16@?0@"NAFuture"4I8^B12
@"NAFuture"8@?0@4
v16@?0@4I8^B12
B16@?0@4I8^B12
queue
T@"NSObject<OS_dispatch_queue>",R,V_queue
v12@?0@4^B8
B12@?0@4^B8
count
allObjects
T@"NSArray",R
weakObserver
T@,R,W,N,V_weakObserver
valid
TB,R,N,GisValid,V_valid
v8@?0@"NSNotification"4
observerQueue
T@"NSOperationQueue",R,N,V_observerQueue
observerBlock
T@?,R,C,N,V_observerBlock
notificationName
T@"NSString",R,C,N,V_notificationName
observedObject
T@,R,W,N,V_observedObject
keyPath
T@"NSString",R,C,N,V_keyPath
_NAObserverProxyArray
C@(#)PROGRAM:NetAppsUtilities  PROJECT:NetAppsUtilities-1
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
