openssl_md_meth_names
HASH
_hashlib.HASH
<%U HASH object @ %p>
sha1
sha224
sha256
sha384
sha512
update
digest
hexdigest
copy
Unicode-objects must be encoded before hashing
object supporting the buffer API required
Buffer must be single dimension
unknown reasons
[%s: %s] %s
[%s] %s
digest_size
block_size
name
algorithm name.
_hashlib
pbkdf2_hmac
hmac_digest
openssl_md5
openssl_sha1
openssl_sha224
openssl_sha256
openssl_sha384
openssl_sha512
string
name must be a string
unsupported hash type
hash_name
password
salt
iterations
dklen
argument 'hash_name'
embedded null character
argument 'password'
contiguous buffer
argument 'salt'
integer argument expected, got float
password is too long.
salt is too long.
iteration value must be greater than 0.
iteration value is too great.
key length must be greater than 0.
key length is too great.
argument 'key'
argument 'msg'
argument 'digest'
key is too long.
msg is too long.
HASH(name, string=b'')
A hash is an object used to calculate a checksum of a string of information.
Methods:
update() -- updates the current digest with an additional string
digest() -- return the current digest value
hexdigest() -- return the current digest as a string of hexadecimal digits
copy() -- return a copy of the current hash object
Attributes:
name -- the hash algorithm being used by this object
digest_size -- number of bytes in this hashes output
update($self, obj, /)
Update this hash object's state with the provided string.
digest($self, /)
Return the digest value as a bytes object.
hexdigest($self, /)
Return the digest value as a string of hexadecimal digits.
copy($self, /)
Return a copy of the hash object.
new($module, /, name, string=b'')
Return a new hash object using the named algorithm.
An optional string argument may be provided and will be
automatically hashed.
The MD5 and SHA1 algorithms are always supported.
pbkdf2_hmac($module, /, hash_name, password, salt, iterations,
            dklen=None)
Password based key derivation function 2 (PKCS #5 v2.0) with HMAC as pseudorandom function.
hmac_digest($module, /, key, msg, digest)
Single-shot HMAC.
openssl_md5($module, /, string=b'')
Returns a md5 hash object; optionally initialized with a string
openssl_sha1($module, /, string=b'')
Returns a sha1 hash object; optionally initialized with a string
openssl_sha224($module, /, string=b'')
Returns a sha224 hash object; optionally initialized with a string
openssl_sha256($module, /, string=b'')
Returns a sha256 hash object; optionally initialized with a string
openssl_sha384($module, /, string=b'')
Returns a sha384 hash object; optionally initialized with a string
openssl_sha512($module, /, string=b'')
Returns a sha512 hash object; optionally initialized with a string
HASH(name, string=b'')
A hash is an object used to calculate a checksum of a string of information.
Methods:
update() -- updates the current digest with an additional string
digest() -- return the current digest value
hexdigest() -- return the current digest as a string of hexadecimal digits
copy() -- return a copy of the current hash object
Attributes:
name -- the hash algorithm being used by this object
digest_size -- number of bytes in this hashes output
update($self, obj, /)
Update this hash object's state with the provided string.
digest($self, /)
Return the digest value as a bytes object.
hexdigest($self, /)
Return the digest value as a string of hexadecimal digits.
copy($self, /)
Return a copy of the hash object.
new($module, /, name, string=b'')
Return a new hash object using the named algorithm.
An optional string argument may be provided and will be
automatically hashed.
The MD5 and SHA1 algorithms are always supported.
pbkdf2_hmac($module, /, hash_name, password, salt, iterations,
            dklen=None)
Password based key derivation function 2 (PKCS #5 v2.0) with HMAC as pseudorandom function.
hmac_digest($module, /, key, msg, digest)
Single-shot HMAC.
openssl_md5($module, /, string=b'')
Returns a md5 hash object; optionally initialized with a string
openssl_sha1($module, /, string=b'')
Returns a sha1 hash object; optionally initialized with a string
openssl_sha224($module, /, string=b'')
Returns a sha224 hash object; optionally initialized with a string
openssl_sha256($module, /, string=b'')
Returns a sha256 hash object; optionally initialized with a string
openssl_sha384($module, /, string=b'')
Returns a sha384 hash object; optionally initialized with a string
openssl_sha512($module, /, string=b'')
Returns a sha512 hash object; optionally initialized with a string
openssl_md_meth_names
HASH
_hashlib.HASH
<%U HASH object @ %p>
sha1
sha224
sha256
sha384
sha512
update
digest
hexdigest
copy
Unicode-objects must be encoded before hashing
object supporting the buffer API required
Buffer must be single dimension
unknown reasons
[%s: %s] %s
[%s] %s
digest_size
block_size
name
algorithm name.
_hashlib
pbkdf2_hmac
hmac_digest
openssl_md5
openssl_sha1
openssl_sha224
openssl_sha256
openssl_sha384
openssl_sha512
string
name must be a string
unsupported hash type
hash_name
password
salt
iterations
dklen
argument 'hash_name'
embedded null character
argument 'password'
contiguous buffer
argument 'salt'
integer argument expected, got float
password is too long.
salt is too long.
iteration value must be greater than 0.
iteration value is too great.
key length must be greater than 0.
key length is too great.
argument 'key'
argument 'msg'
argument 'digest'
key is too long.
msg is too long.
