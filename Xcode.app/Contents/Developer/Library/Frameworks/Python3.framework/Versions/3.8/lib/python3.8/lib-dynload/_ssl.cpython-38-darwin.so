A certificate could not be verified.
SSL/TLS session closed cleanly.
Non-blocking SSL socket needs to read more data
before the requested operation can be completed.
Non-blocking SSL socket needs to write more data
before the requested operation can be completed.
System error when attempting SSL operation.
SSL/TLS connection terminated abruptly.
_wrap_socket($self, /, sock, server_side, server_hostname=None, *,
             owner=None, session=None)
_wrap_bio($self, /, incoming, outgoing, server_side,
          server_hostname=None, *, owner=None, session=None)
set_ciphers($self, cipherlist, /)
_set_alpn_protocols($self, protos, /)
_set_npn_protocols($self, protos, /)
load_cert_chain($self, /, certfile, keyfile=None, password=None)
load_dh_params($self, path, /)
load_verify_locations($self, /, cafile=None, capath=None, cadata=None)
session_stats($self, /)
set_default_verify_paths($self, /)
set_ecdh_curve($self, name, /)
cert_store_stats($self, /)
Returns quantities of loaded X.509 certificates.
X.509 certificates with a CA extension and certificate revocation lists
inside the context's cert store.
NOTE: Certificates in a capath directory aren't loaded unless they have
been used at least once.
get_ca_certs($self, /, binary_form=False)
Returns a list of dicts with information of loaded CA certs.
If the optional argument is True, returns a DER-encoded copy of the CA
certificate.
NOTE: Certificates in a capath directory aren't loaded unless they have
been used at least once.
get_ciphers($self, /)
Set a callback that will be called when a server name is provided by the SSL/TLS client in the SNI extension.
If the argument is None then the callback is disabled. The method is called
with the SSLSocket, the server name as a string, and the SSLContext object.
See RFC 6066 for details of the SNI extension.
do_handshake($self, /)
write($self, b, /)
Writes the bytes-like object b into the SSL object.
Returns the number of bytes written.
read(size, [buffer])
Read up to size bytes from the SSL socket.
pending($self, /)
Returns the number of already decrypted bytes available for read, pending on the connection.
getpeercert($self, der=False, /)
Returns the certificate for the peer.
If no certificate was provided, returns None.  If a certificate was
provided, but not validated, returns an empty dictionary.  Otherwise
returns a dict containing information about the peer certificate.
If the optional argument is True, returns a DER-encoded copy of the
peer certificate, or None if no certificate was provided.  This will
return the certificate even if it wasn't validated.
get_channel_binding($self, /, cb_type='tls-unique')
Get channel binding data for current connection.
Raise ValueError if the requested `cb_type` is not supported.  Return bytes
of the data or None if the data is not available (e.g. before the handshake).
Only 'tls-unique' channel binding data from RFC 5929 is supported.
cipher($self, /)
shared_ciphers($self, /)
version($self, /)
selected_alpn_protocol($self, /)
compression($self, /)
shutdown($self, /)
Does the SSL shutdown handshake with the remote end.
verify_client_post_handshake($self, /)
Initiate TLS 1.3 post-handshake authentication
_setter_context(ctx)
This changes the context associated with the SSLSocket. This is typically
used from within a callback function set by the sni_callback
on the SSLContext to change the certificate information associated with the
SSLSocket before the cryptographic exchange handshake messages
Whether this is a server-side socket.
The currently set server hostname (for SNI).
The Python-level owner of this object.Passed as "self" in servername callback.
_setter_session(session)
Get / set SSLSession.
Was the client session reused during handshake?
read($self, size=-1, /)
Read up to size bytes from the memory BIO.
If size is not specified, read the entire buffer.
If the return value is an empty bytes instance, this means either
EOF or that no data is available. Use the "eof" property to
distinguish between the two.
write($self, b, /)
Writes the bytes b into the memory BIO.
Returns the number of bytes written.
write_eof($self, /)
Write an EOF marker to the memory BIO.
When all data has been read, the "eof" property will be True.
The number of bytes pending in the memory BIO.
Whether the memory BIO is at EOF.
Does the session contain a ticket?
Session id
Ticket life time hint.
Session creation time (seconds since epoch).
Session timeout (delta in seconds).
Implementation module for SSL socket operations.  See the socket module
for documentation.
_test_decode_cert($module, path, /)
RAND_add($module, string, entropy, /)
Mix string into the OpenSSL PRNG state.
entropy (a float) is a lower bound on the entropy contained in
string.  See RFC 4086.
RAND_bytes($module, n, /)
Generate n cryptographically strong pseudo-random bytes.
RAND_pseudo_bytes($module, n, /)
Generate n pseudo-random bytes.
Return a pair (bytes, is_cryptographic).  is_cryptographic is True
if the bytes generated are cryptographically strong.
RAND_status($module, /)
Returns 1 if the OpenSSL PRNG has been seeded with enough data and 0 if not.
It is necessary to seed the PRNG with RAND_add() on some platforms before
using the ssl() function.
get_default_verify_paths($module, /)
Return search paths and environment vars that are used by SSLContext's set_default_verify_paths() to load default CAs.
The values are 'cert_file_env', 'cert_file', 'cert_dir_env', 'cert_dir'.
txt2obj($module, /, txt, name=False)
Lookup NID, short name, long name and OID of an ASN1_OBJECT.
By default objects are looked up by OID. With name=True short and
long name are also matched.
nid2obj($module, nid, /)
Lookup NID, short name, long name and OID of an ASN1_OBJECT by NID.
An error occurred in the SSL implementation.
_socket.CAPI
ssl.SSLCertVerificationError
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/python3/python3-72/Python/Modules/_ssl.c
ssl.SSLZeroReturnError
ssl.SSLWantReadError
ssl.SSLWantWriteError
ssl.SSLSyscallError
ssl.SSLEOFError
SSLError
SSLCertVerificationError
SSLZeroReturnError
SSLWantReadError
SSLWantWriteError
SSLSyscallError
SSLEOFError
_SSLContext
_SSLSocket
MemoryBIO
SSLSession
_DEFAULT_CIPHERS
DEFAULT:!aNULL:!eNULL:!MD5:!3DES:!DES:!RC4:!IDEA:!SEED:!aDSS:!SRP:!PSK
SSL_ERROR_ZERO_RETURN
SSL_ERROR_WANT_READ
SSL_ERROR_WANT_WRITE
SSL_ERROR_WANT_X509_LOOKUP
SSL_ERROR_SYSCALL
SSL_ERROR_SSL
SSL_ERROR_WANT_CONNECT
SSL_ERROR_EOF
SSL_ERROR_INVALID_ERROR_CODE
CERT_NONE
CERT_OPTIONAL
CERT_REQUIRED
VERIFY_DEFAULT
VERIFY_CRL_CHECK_LEAF
VERIFY_CRL_CHECK_CHAIN
VERIFY_X509_STRICT
VERIFY_X509_TRUSTED_FIRST
ALERT_DESCRIPTION_CLOSE_NOTIFY
ALERT_DESCRIPTION_UNEXPECTED_MESSAGE
ALERT_DESCRIPTION_BAD_RECORD_MAC
ALERT_DESCRIPTION_RECORD_OVERFLOW
ALERT_DESCRIPTION_DECOMPRESSION_FAILURE
ALERT_DESCRIPTION_HANDSHAKE_FAILURE
ALERT_DESCRIPTION_BAD_CERTIFICATE
ALERT_DESCRIPTION_UNSUPPORTED_CERTIFICATE
ALERT_DESCRIPTION_CERTIFICATE_REVOKED
ALERT_DESCRIPTION_CERTIFICATE_EXPIRED
ALERT_DESCRIPTION_CERTIFICATE_UNKNOWN
ALERT_DESCRIPTION_ILLEGAL_PARAMETER
ALERT_DESCRIPTION_UNKNOWN_CA
ALERT_DESCRIPTION_ACCESS_DENIED
ALERT_DESCRIPTION_DECODE_ERROR
ALERT_DESCRIPTION_DECRYPT_ERROR
ALERT_DESCRIPTION_PROTOCOL_VERSION
ALERT_DESCRIPTION_INSUFFICIENT_SECURITY
ALERT_DESCRIPTION_INTERNAL_ERROR
ALERT_DESCRIPTION_USER_CANCELLED
ALERT_DESCRIPTION_NO_RENEGOTIATION
ALERT_DESCRIPTION_UNSUPPORTED_EXTENSION
ALERT_DESCRIPTION_CERTIFICATE_UNOBTAINABLE
ALERT_DESCRIPTION_UNRECOGNIZED_NAME
ALERT_DESCRIPTION_BAD_CERTIFICATE_STATUS_RESPONSE
ALERT_DESCRIPTION_BAD_CERTIFICATE_HASH_VALUE
ALERT_DESCRIPTION_UNKNOWN_PSK_IDENTITY
PROTOCOL_SSLv23
PROTOCOL_TLS
PROTOCOL_TLS_CLIENT
PROTOCOL_TLS_SERVER
PROTOCOL_TLSv1
PROTOCOL_TLSv1_1
PROTOCOL_TLSv1_2
OP_ALL
OP_NO_SSLv2
OP_NO_SSLv3
OP_NO_TLSv1
OP_NO_TLSv1_1
OP_NO_TLSv1_2
OP_NO_TLSv1_3
OP_CIPHER_SERVER_PREFERENCE
OP_SINGLE_DH_USE
OP_NO_TICKET
OP_SINGLE_ECDH_USE
OP_NO_COMPRESSION
HOSTFLAG_ALWAYS_CHECK_SUBJECT
HOSTFLAG_NO_WILDCARDS
HOSTFLAG_NO_PARTIAL_WILDCARDS
HOSTFLAG_MULTI_LABEL_WILDCARDS
HOSTFLAG_SINGLE_LABEL_SUBDOMAINS
PROTO_MINIMUM_SUPPORTED
PROTO_MAXIMUM_SUPPORTED
PROTO_SSLv3
PROTO_TLSv1
PROTO_TLSv1_1
PROTO_TLSv1_2
PROTO_TLSv1_3
HAS_SNI
HAS_TLS_UNIQUE
HAS_ECDH
HAS_NPN
HAS_ALPN
HAS_SSLv2
HAS_SSLv3
HAS_TLSv1
HAS_TLSv1_1
HAS_TLSv1_2
HAS_TLSv1_3
err_codes_to_names
err_names_to_codes
lib_codes_to_names
OPENSSL_VERSION_NUMBER
IIIII
OPENSSL_VERSION_INFO
OPENSSL_VERSION
_OPENSSL_API_VERSION
_ssl._SSLContext
_wrap_socket
_wrap_bio
set_ciphers
_set_alpn_protocols
_set_npn_protocols
load_cert_chain
load_dh_params
load_verify_locations
session_stats
set_default_verify_paths
set_ecdh_curve
cert_store_stats
get_ca_certs
get_ciphers
sock
server_side
server_hostname
owner
session
argument 'sock'
integer argument expected, got float
ascii
reason
library
verify_message
verify_code
unknown error
Hostname mismatch, certificate is not valid for '%S'.
IP address mismatch, certificate is not valid for '%S'.
[%S: %S] %s: %S (_ssl.c:%d)
[%S: %S] %s (_ssl.c:%d)
[%S] %s (_ssl.c:%d)
%s (_ssl.c:%d)
server_hostname cannot be an empty string or start with a leading dot.
strict
Value is not a SSLSession.
Session refers to a different SSLContext.
Cannot set session for server-side SSLSocket.
Cannot set session after handshake.
incoming
outgoing
argument 'incoming'
argument 'outgoing'
argument
embedded null character
No cipher can be selected.
contiguous buffer
protocols longer than %u bytes
The NPN extension requires OpenSSL 1.0.1 or later.
certfile
keyfile
password
certfile should be a valid filesystem path
keyfile should be a valid filesystem path
password should be a string or callable
password cannot be longer than %d bytes
unable to allocate password buffer
password callback must return a string
cafile
capath
cadata
cafile, capath and cadata cannot be all omitted
cafile should be a valid filesystem path
capath should be a valid filesystem path
cadata should be a contiguous buffer with a single dimension
cadata should be an ASCII string or a bytes-like object
Empty certificate data
Certificate data is too long.
Can't allocate buffer
number
connect
connect_good
connect_renegotiate
accept
accept_good
accept_renegotiate
hits
misses
timeouts
cache_full
unknown elliptic curve name %R
{sisisi}
x509
x509_ca
binary_form
subject
issuer
version
failed to allocate BIO
serialNumber
notBefore
notAfter
subjectAltName
OCSP
caIssuers
crlDistributionPoints
DirName
email
Registered ID
<INVALID>
IP Address
%d.%d.%d.%d
%X:%X:%X:%X:%X:%X:%X:%X
<invalid>
Unknown general name type %d
Invalid value %.200s
{sksssssssisi}
name
protocol
description
strength_bits
alg_bits
check_hostname
_host_flags
minimum_version
maximum_version
_msg_callback
sni_callback
options
post_handshake_auth
verify_flags
verify_mode
invalid value for verify_mode
Option is too long
The context's protocol doesn't support modification of highest and lowest version.
Unsupported protocol version 0x%x
not a callable object
Osiiiy#
write
read
sni_callback cannot be set on TLS_CLIENT context
invalid return value from SSL_CTX_get_verify_mode
Cannot set verify_mode to CERT_NONE when check_hostname is enabled.
invalid protocol version
Python
_ssl._SSLSocket
do_handshake
pending
getpeercert
get_channel_binding
cipher
shared_ciphers
selected_alpn_protocol
compression
shutdown
verify_client_post_handshake
Underlying socket connection gone
_ssl.c:1091: The handshake operation timed out
_ssl.c:1095: Underlying socket has been closed.
_ssl.c:1099: Underlying socket too large for select().
TLS/SSL connection has been closed (EOF)
The operation did not complete (read)
The operation did not complete (write)
The operation did not complete (X509 lookup)
The operation did not complete (connect)
EOF occurred in violation of protocol
Some I/O error occurred
A failure in the SSL library occurred
Invalid error code
string longer than %d bytes
The write operation timed out
Underlying socket has been closed.
Underlying socket too large for select().
i:read
iw*:read
_ssl._SSLSocket.read requires 1 to 2 arguments
size should not be negative
maximum length can't fit in a C 'int'
The read operation timed out
handshake not done yet
cb_type
tls-unique
argument 'cb_type'
'%s' channel binding type not implemented
unknown
Post-handshake auth is not supported by your OpenSSL version.
context
session_reused
The value must be a SSLContext
_ssl.MemoryBIO
write_eof
cannot write() after write_eof()
_ssl.Session
has_ticket
ticket_lifetime_hint
time
timeout
_ssl
_test_decode_cert
RAND_add
RAND_bytes
RAND_pseudo_bytes
RAND_status
get_default_verify_paths
txt2obj
nid2obj
Can't malloc memory to read file
Can't open file
Error decoding PEM-encoded file
argument 1
num must be positive
(ks)
NNNN
argument 'txt'
unknown object '%.100s'
Unknown object
issN
NID must be positive.
unknown NID %i
ssl.SSLError
BAD_BASE64_DECODE
BAD_DECRYPT
BAD_END_LINE
BAD_IV_CHARS
BAD_MAGIC_NUMBER
BAD_PASSWORD_READ
BAD_VERSION_NUMBER
BIO_WRITE_FAILURE
CIPHER_IS_NULL
ERROR_CONVERTING_PRIVATE_KEY
EXPECTING_PRIVATE_KEY_BLOB
EXPECTING_PUBLIC_KEY_BLOB
INCONSISTENT_HEADER
KEYBLOB_HEADER_PARSE_ERROR
KEYBLOB_TOO_SHORT
NOT_DEK_INFO
NOT_ENCRYPTED
NOT_PROC_TYPE
NO_START_LINE
PROBLEMS_GETTING_PASSWORD
PUBLIC_KEY_NO_RSA
PVK_DATA_TOO_SHORT
PVK_TOO_SHORT
READ_KEY
SHORT_HEADER
UNSUPPORTED_CIPHER
UNSUPPORTED_ENCRYPTION
UNSUPPORTED_KEY_COMPONENTS
APP_DATA_IN_HANDSHAKE
ATTEMPT_TO_REUSE_SESSION_IN_DIFFERENT_CONTEXT
BAD_ALERT_RECORD
BAD_AUTHENTICATION_TYPE
BAD_CHANGE_CIPHER_SPEC
BAD_CHECKSUM
BAD_DATA
BAD_DATA_RETURNED_BY_CALLBACK
BAD_DECOMPRESSION
BAD_DH_G_LENGTH
BAD_DH_PUB_KEY_LENGTH
BAD_DH_P_LENGTH
BAD_DIGEST_LENGTH
BAD_DSA_SIGNATURE
BAD_ECC_CERT
BAD_ECDSA_SIGNATURE
BAD_ECPOINT
BAD_HANDSHAKE_LENGTH
BAD_HELLO_REQUEST
BAD_LENGTH
BAD_MAC_DECODE
BAD_MAC_LENGTH
BAD_MESSAGE_TYPE
BAD_PACKET_LENGTH
BAD_PROTOCOL_VERSION_NUMBER
BAD_PSK_IDENTITY_HINT_LENGTH
BAD_RESPONSE_ARGUMENT
BAD_RSA_DECRYPT
BAD_RSA_ENCRYPT
BAD_RSA_E_LENGTH
BAD_RSA_MODULUS_LENGTH
BAD_RSA_SIGNATURE
BAD_SIGNATURE
BAD_SRP_A_LENGTH
BAD_SRP_B_LENGTH
BAD_SRP_G_LENGTH
BAD_SRP_N_LENGTH
BAD_SRP_PARAMETERS
BAD_SRP_S_LENGTH
BAD_SRTP_MKI_VALUE
BAD_SRTP_PROTECTION_PROFILE_LIST
BAD_SSL_FILETYPE
BAD_SSL_SESSION_ID_LENGTH
BAD_STATE
BAD_VALUE
BAD_WRITE_RETRY
BIO_NOT_SET
BLOCK_CIPHER_PAD_IS_WRONG
BN_LIB
CA_DN_LENGTH_MISMATCH
CA_DN_TOO_LONG
CA_KEY_TOO_SMALL
CA_MD_TOO_WEAK
CCS_RECEIVED_EARLY
CERTIFICATE_VERIFY_FAILED
CERT_CB_ERROR
CERT_LENGTH_MISMATCH
CHALLENGE_IS_DIFFERENT
CIPHER_CODE_WRONG_LENGTH
CIPHER_OR_HASH_UNAVAILABLE
CIPHER_TABLE_SRC_ERROR
CLIENTHELLO_TLSEXT
COMPRESSED_LENGTH_TOO_LONG
COMPRESSION_DISABLED
COMPRESSION_FAILURE
COMPRESSION_ID_NOT_WITHIN_PRIVATE_RANGE
COMPRESSION_LIBRARY_ERROR
CONNECTION_ID_IS_DIFFERENT
CONNECTION_TYPE_NOT_SET
COOKIE_MISMATCH
DATA_BETWEEN_CCS_AND_FINISHED
DATA_LENGTH_TOO_LONG
DECRYPTION_FAILED
DECRYPTION_FAILED_OR_BAD_RECORD_MAC
DH_KEY_TOO_SMALL
DH_PUBLIC_VALUE_LENGTH_IS_WRONG
DIGEST_CHECK_FAILED
DTLS_MESSAGE_TOO_BIG
DUPLICATE_COMPRESSION_ID
ECC_CERT_NOT_FOR_KEY_AGREEMENT
ECC_CERT_NOT_FOR_SIGNING
ECC_CERT_SHOULD_HAVE_RSA_SIGNATURE
ECC_CERT_SHOULD_HAVE_SHA1_SIGNATURE
ECDH_REQUIRED_FOR_SUITEB_MODE
ECGROUP_TOO_LARGE_FOR_CIPHER
EE_KEY_TOO_SMALL
EMPTY_SRTP_PROTECTION_PROFILE_LIST
ENCRYPTED_LENGTH_TOO_LONG
ERROR_GENERATING_TMP_RSA_KEY
ERROR_IN_RECEIVED_CIPHER_LIST
EXCESSIVE_MESSAGE_SIZE
EXTRA_DATA_IN_MESSAGE
GOT_A_FIN_BEFORE_A_CCS
GOT_NEXT_PROTO_BEFORE_A_CCS
GOT_NEXT_PROTO_WITHOUT_EXTENSION
HTTPS_PROXY_REQUEST
HTTP_REQUEST
ILLEGAL_PADDING
ILLEGAL_SUITEB_DIGEST
INAPPROPRIATE_FALLBACK
INCONSISTENT_COMPRESSION
INVALID_CHALLENGE_LENGTH
INVALID_COMMAND
INVALID_COMPRESSION_ALGORITHM
INVALID_NULL_CMD_NAME
INVALID_PURPOSE
INVALID_SERVERINFO_DATA
INVALID_SRP_USERNAME
INVALID_STATUS_RESPONSE
INVALID_TICKET_KEYS_LENGTH
INVALID_TRUST
KEY_ARG_TOO_LONG
KRB5
KRB5_C_CC_PRINC
KRB5_C_GET_CRED
KRB5_C_INIT
KRB5_C_MK_REQ
KRB5_S_BAD_TICKET
KRB5_S_INIT
KRB5_S_RD_REQ
KRB5_S_TKT_EXPIRED
KRB5_S_TKT_NYV
KRB5_S_TKT_SKEW
LENGTH_MISMATCH
LENGTH_TOO_SHORT
LIBRARY_BUG
LIBRARY_HAS_NO_CIPHERS
MESSAGE_TOO_LONG
MISSING_DH_DSA_CERT
MISSING_DH_KEY
MISSING_DH_RSA_CERT
MISSING_DSA_SIGNING_CERT
MISSING_ECDH_CERT
MISSING_ECDSA_SIGNING_CERT
MISSING_EXPORT_TMP_DH_KEY
MISSING_EXPORT_TMP_RSA_KEY
MISSING_RSA_CERTIFICATE
MISSING_RSA_ENCRYPTING_CERT
MISSING_RSA_SIGNING_CERT
MISSING_SRP_PARAM
MISSING_TMP_DH_KEY
MISSING_TMP_ECDH_KEY
MISSING_TMP_RSA_KEY
MISSING_TMP_RSA_PKEY
MISSING_VERIFY_MESSAGE
MULTIPLE_SGC_RESTARTS
NON_SSLV2_INITIAL_PACKET
NO_CERTIFICATES_RETURNED
NO_CERTIFICATE_ASSIGNED
NO_CERTIFICATE_RETURNED
NO_CERTIFICATE_SET
NO_CERTIFICATE_SPECIFIED
NO_CIPHERS_AVAILABLE
NO_CIPHERS_PASSED
NO_CIPHERS_SPECIFIED
NO_CIPHER_LIST
NO_CIPHER_MATCH
NO_CLIENT_CERT_METHOD
NO_CLIENT_CERT_RECEIVED
NO_COMPRESSION_SPECIFIED
NO_GOST_CERTIFICATE_SENT_BY_PEER
NO_METHOD_SPECIFIED
NO_PEM_EXTENSIONS
NO_PRIVATEKEY
NO_PRIVATE_KEY_ASSIGNED
NO_PROTOCOLS_AVAILABLE
NO_PUBLICKEY
NO_RENEGOTIATION
NO_REQUIRED_DIGEST
NO_SHARED_CIPHER
NO_SHARED_SIGATURE_ALGORITHMS
NO_SRTP_PROFILES
NO_VERIFY_CALLBACK
NULL_SSL_CTX
NULL_SSL_METHOD_PASSED
OLD_SESSION_CIPHER_NOT_RETURNED
OLD_SESSION_COMPRESSION_ALGORITHM_NOT_RETURNED
ONLY_DTLS_1_2_ALLOWED_IN_SUITEB_MODE
ONLY_TLS_1_2_ALLOWED_IN_SUITEB_MODE
ONLY_TLS_ALLOWED_IN_FIPS_MODE
OPAQUE_PRF_INPUT_TOO_LONG
PACKET_LENGTH_TOO_LONG
PARSE_TLSEXT
PATH_TOO_LONG
PEER_DID_NOT_RETURN_A_CERTIFICATE
PEER_ERROR
PEER_ERROR_CERTIFICATE
PEER_ERROR_NO_CERTIFICATE
PEER_ERROR_NO_CIPHER
PEER_ERROR_UNSUPPORTED_CERTIFICATE_TYPE
PEM_NAME_BAD_PREFIX
PEM_NAME_TOO_SHORT
PRE_MAC_LENGTH_TOO_LONG
PROBLEMS_MAPPING_CIPHER_FUNCTIONS
PROTOCOL_IS_SHUTDOWN
PSK_IDENTITY_NOT_FOUND
PSK_NO_CLIENT_CB
PSK_NO_SERVER_CB
PUBLIC_KEY_ENCRYPT_ERROR
PUBLIC_KEY_IS_NOT_RSA
PUBLIC_KEY_NOT_RSA
READ_BIO_NOT_SET
READ_TIMEOUT_EXPIRED
READ_WRONG_PACKET_TYPE
RECORD_LENGTH_MISMATCH
RECORD_TOO_LARGE
RECORD_TOO_SMALL
RENEGOTIATE_EXT_TOO_LONG
RENEGOTIATION_ENCODING_ERR
RENEGOTIATION_MISMATCH
REQUIRED_CIPHER_MISSING
REQUIRED_COMPRESSSION_ALGORITHM_MISSING
REUSE_CERT_LENGTH_NOT_ZERO
REUSE_CERT_TYPE_NOT_ZERO
REUSE_CIPHER_LIST_NOT_ZERO
SCSV_RECEIVED_WHEN_RENEGOTIATING
SERVERHELLO_TLSEXT
SESSION_ID_CONTEXT_UNINITIALIZED
SHORT_READ
SIGNATURE_ALGORITHMS_ERROR
SIGNATURE_FOR_NON_SIGNING_CERTIFICATE
SRP_A_CALC
SRTP_COULD_NOT_ALLOCATE_PROFILES
SRTP_PROTECTION_PROFILE_LIST_TOO_LONG
SRTP_UNKNOWN_PROTECTION_PROFILE
SSL23_DOING_SESSION_ID_REUSE
SSL2_CONNECTION_ID_TOO_LONG
SSL3_EXT_INVALID_ECPOINTFORMAT
SSL3_EXT_INVALID_SERVERNAME
SSL3_EXT_INVALID_SERVERNAME_TYPE
SSL3_SESSION_ID_TOO_LONG
SSL3_SESSION_ID_TOO_SHORT
SSLV3_ALERT_BAD_CERTIFICATE
SSLV3_ALERT_BAD_RECORD_MAC
SSLV3_ALERT_CERTIFICATE_EXPIRED
SSLV3_ALERT_CERTIFICATE_REVOKED
SSLV3_ALERT_CERTIFICATE_UNKNOWN
SSLV3_ALERT_DECOMPRESSION_FAILURE
SSLV3_ALERT_HANDSHAKE_FAILURE
SSLV3_ALERT_ILLEGAL_PARAMETER
SSLV3_ALERT_NO_CERTIFICATE
SSLV3_ALERT_UNEXPECTED_MESSAGE
SSLV3_ALERT_UNSUPPORTED_CERTIFICATE
SSL_CTX_HAS_NO_DEFAULT_SSL_VERSION
SSL_HANDSHAKE_FAILURE
SSL_LIBRARY_HAS_NO_CIPHERS
SSL_NEGATIVE_LENGTH
SSL_SESSION_ID_CALLBACK_FAILED
SSL_SESSION_ID_CONFLICT
SSL_SESSION_ID_CONTEXT_TOO_LONG
SSL_SESSION_ID_HAS_BAD_LENGTH
SSL_SESSION_ID_IS_DIFFERENT
TLSV1_ALERT_ACCESS_DENIED
TLSV1_ALERT_DECODE_ERROR
TLSV1_ALERT_DECRYPTION_FAILED
TLSV1_ALERT_DECRYPT_ERROR
TLSV1_ALERT_EXPORT_RESTRICTION
TLSV1_ALERT_INAPPROPRIATE_FALLBACK
TLSV1_ALERT_INSUFFICIENT_SECURITY
TLSV1_ALERT_INTERNAL_ERROR
TLSV1_ALERT_NO_RENEGOTIATION
TLSV1_ALERT_PROTOCOL_VERSION
TLSV1_ALERT_RECORD_OVERFLOW
TLSV1_ALERT_UNKNOWN_CA
TLSV1_ALERT_USER_CANCELLED
TLSV1_BAD_CERTIFICATE_HASH_VALUE
TLSV1_BAD_CERTIFICATE_STATUS_RESPONSE
TLSV1_CERTIFICATE_UNOBTAINABLE
TLSV1_UNRECOGNIZED_NAME
TLSV1_UNSUPPORTED_EXTENSION
TLS_CLIENT_CERT_REQ_WITH_ANON_CIPHER
TLS_HEARTBEAT_PEER_DOESNT_ACCEPT
TLS_HEARTBEAT_PENDING
TLS_ILLEGAL_EXPORTER_LABEL
TLS_INVALID_ECPOINTFORMAT_LIST
TLS_PEER_DID_NOT_RESPOND_WITH_CERTIFICATE_LIST
TLS_RSA_ENCRYPTED_VALUE_LENGTH_IS_WRONG
TRIED_TO_USE_UNSUPPORTED_CIPHER
UNABLE_TO_DECODE_DH_CERTS
UNABLE_TO_DECODE_ECDH_CERTS
UNABLE_TO_EXTRACT_PUBLIC_KEY
UNABLE_TO_FIND_DH_PARAMETERS
UNABLE_TO_FIND_ECDH_PARAMETERS
UNABLE_TO_FIND_PUBLIC_KEY_PARAMETERS
UNABLE_TO_FIND_SSL_METHOD
UNABLE_TO_LOAD_SSL2_MD5_ROUTINES
UNABLE_TO_LOAD_SSL3_MD5_ROUTINES
UNABLE_TO_LOAD_SSL3_SHA1_ROUTINES
UNEXPECTED_MESSAGE
UNEXPECTED_RECORD
UNINITIALIZED
UNKNOWN_ALERT_TYPE
UNKNOWN_CERTIFICATE_TYPE
UNKNOWN_CIPHER_RETURNED
UNKNOWN_CIPHER_TYPE
UNKNOWN_CMD_NAME
UNKNOWN_DIGEST
UNKNOWN_KEY_EXCHANGE_TYPE
UNKNOWN_PKEY_TYPE
UNKNOWN_PROTOCOL
UNKNOWN_REMOTE_ERROR_TYPE
UNKNOWN_SSL_VERSION
UNKNOWN_STATE
UNSAFE_LEGACY_RENEGOTIATION_DISABLED
UNSUPPORTED_COMPRESSION_ALGORITHM
UNSUPPORTED_DIGEST_TYPE
UNSUPPORTED_ELLIPTIC_CURVE
UNSUPPORTED_PROTOCOL
UNSUPPORTED_SSL_VERSION
UNSUPPORTED_STATUS_TYPE
USE_SRTP_NOT_NEGOTIATED
VERSION_TOO_LOW
WRITE_BIO_NOT_SET
WRONG_CERTIFICATE_TYPE
WRONG_CIPHER_RETURNED
WRONG_CURVE
WRONG_MESSAGE_TYPE
WRONG_NUMBER_OF_KEY_BITS
WRONG_SIGNATURE_LENGTH
WRONG_SIGNATURE_SIZE
WRONG_SIGNATURE_TYPE
WRONG_SSL_VERSION
WRONG_VERSION_NUMBER
X509_LIB
X509_VERIFICATION_SETUP_PROBLEMS
AKID_MISMATCH
BAD_X509_FILETYPE
BASE64_DECODE_ERROR
CANT_CHECK_DH_KEY
CERT_ALREADY_IN_HASH_TABLE
CRL_ALREADY_DELTA
CRL_VERIFY_FAILURE
ERR_ASN1_LIB
IDP_MISMATCH
INVALID_DIRECTORY
INVALID_FIELD_NAME
ISSUER_MISMATCH
KEY_TYPE_MISMATCH
KEY_VALUES_MISMATCH
LOADING_CERT_DIR
LOADING_DEFAULTS
METHOD_NOT_SUPPORTED
NEWER_CRL_NOT_NEWER
NO_CERT_SET_FOR_US_TO_VERIFY
NO_CRL_NUMBER
PUBLIC_KEY_DECODE_ERROR
PUBLIC_KEY_ENCODE_ERROR
SHOULD_RETRY
UNABLE_TO_FIND_PARAMETERS_IN_CHAIN
UNABLE_TO_GET_CERTS_PUBLIC_KEY
UNKNOWN_KEY_TYPE
UNKNOWN_NID
UNKNOWN_PURPOSE_ID
UNKNOWN_TRUST_ID
UNSUPPORTED_ALGORITHM
WRONG_LOOKUP_TYPE
WRONG_TYPE
X509
