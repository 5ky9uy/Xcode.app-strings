can't initialize the _multibytecodec module
MultibyteIncrementalEncoder
encode
getstate
setstate
reset
input
final
integer argument expected, got float
couldn't convert the object to str.
pending buffer overflow
illegal multibyte sequence
incomplete multibyte sequence
internal codec error
unknown runtime error
sOnns
encoding error handler must return (str, int) tuple
position %zd from error handler out of bounds
pending buffer too large
argument
strict
errors
how to treat errors
ignore
replace
cannot delete attribute
errors must be a string
|s:IncrementalEncoder
codec
codec is unexpected type
MultibyteIncrementalDecoder
decode
argument 'input'
contiguous buffer
decoding error handler must return (str, int) tuple
tuple
SO!;setstate(): illegal state argument
|s:IncrementalDecoder
MultibyteStreamReader
read
readline
readlines
arg 1 must be an integer
stream function returned a non-bytes object (%.100s)
stream
O|s:StreamReader
MultibyteStreamWriter
write
writelines
arg must be a sequence object
O|s:StreamWriter
MultibyteCodec
embedded null character
argument 'errors'
str or None
couldn't convert the object to unicode.
_multibytecodec
__create_codec
multibytecodec.__map_*
argument type invalid
encode($self, /, input, final=False)
getstate($self, /)
setstate($self, state, /)
reset($self, /)
decode($self, /, input, final=False)
getstate($self, /)
setstate($self, state, /)
reset($self, /)
read($self, sizeobj=None, /)
readline($self, sizeobj=None, /)
readlines($self, sizehintobj=None, /)
reset($self, /)
write($self, strobj, /)
writelines($self, lines, /)
reset($self, /)
encode($self, /, input, errors=None)
Return an encoded string version of `input'.
'errors' may be given to set a different error handling scheme. Default is
'strict' meaning that encoding errors raise a UnicodeEncodeError. Other possible
values are 'ignore', 'replace' and 'xmlcharrefreplace' as well as any other name
registered with codecs.register_error that can handle UnicodeEncodeErrors.
decode($self, /, input, errors=None)
Decodes 'input'.
'errors' may be given to set a different error handling scheme. Default is
'strict' meaning that encoding errors raise a UnicodeDecodeError. Other possible
values are 'ignore' and 'replace' as well as any other name registered with
codecs.register_error that is able to handle UnicodeDecodeErrors."
__create_codec($module, arg, /)
[encode($self, /, input, final=False)
getstate($self, /)
setstate($self, state, /)
reset($self, /)
decode($self, /, input, final=False)
getstate($self, /)
setstate($self, state, /)
reset($self, /)
read($self, sizeobj=None, /)
readline($self, sizeobj=None, /)
readlines($self, sizehintobj=None, /)
reset($self, /)
write($self, strobj, /)
writelines($self, lines, /)
reset($self, /)
encode($self, /, input, errors=None)
Return an encoded string version of `input'.
'errors' may be given to set a different error handling scheme. Default is
'strict' meaning that encoding errors raise a UnicodeEncodeError. Other possible
values are 'ignore', 'replace' and 'xmlcharrefreplace' as well as any other name
registered with codecs.register_error that can handle UnicodeEncodeErrors.
decode($self, /, input, errors=None)
Decodes 'input'.
'errors' may be given to set a different error handling scheme. Default is
'strict' meaning that encoding errors raise a UnicodeDecodeError. Other possible
values are 'ignore' and 'replace' as well as any other name registered with
codecs.register_error that is able to handle UnicodeDecodeErrors."
__create_codec($module, arg, /)
can't initialize the _multibytecodec module
MultibyteIncrementalEncoder
encode
getstate
setstate
reset
input
final
integer argument expected, got float
couldn't convert the object to str.
pending buffer overflow
illegal multibyte sequence
incomplete multibyte sequence
internal codec error
unknown runtime error
sOnns
encoding error handler must return (str, int) tuple
position %zd from error handler out of bounds
pending buffer too large
argument
strict
errors
how to treat errors
ignore
replace
cannot delete attribute
errors must be a string
|s:IncrementalEncoder
codec
codec is unexpected type
MultibyteIncrementalDecoder
decode
argument 'input'
contiguous buffer
decoding error handler must return (str, int) tuple
tuple
SO!;setstate(): illegal state argument
|s:IncrementalDecoder
MultibyteStreamReader
read
readline
readlines
arg 1 must be an integer
stream function returned a non-bytes object (%.100s)
stream
O|s:StreamReader
MultibyteStreamWriter
write
writelines
arg must be a sequence object
O|s:StreamWriter
MultibyteCodec
embedded null character
argument 'errors'
str or None
couldn't convert the object to unicode.
_multibytecodec
__create_codec
multibytecodec.__map_*
argument type invalid
