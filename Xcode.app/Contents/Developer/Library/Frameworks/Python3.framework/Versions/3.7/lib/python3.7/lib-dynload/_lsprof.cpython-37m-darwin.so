Profiler
profiler_entry
profiler_subentry
_lsprof
Fast profiler
_lsprof.Profiler
getstats
enable
disable
clear
memory was exhausted while profiling
((OllddO))
((Olldd))
subcalls
builtins
|ii:enable
<%U.%s>
<%s>
<built-in method %S.%s>
<built-in method %s>
timer
timeunit
|Odii:Profiler
_lsprof.profiler_entry
code
code object or built-in function name
callcount
how many times this was called
reccallcount
how many times called recursively
totaltime
total time in this entry
inlinetime
inline time in this entry (not in subcalls)
calls
details of the calls
_lsprof.profiler_subentry
called code object or built-in function name
how many times this is called
how many times this is called recursively
total time spent in this call
inline time (not in further subcalls)
Profiler(timer=None, timeunit=None, subcalls=True, builtins=True)
    Builds a profiler object using the specified timer function.
    The default timer is a fast built-in one based on real time.
    For custom timer functions returning integers, timeunit can
    be a float specifying a scale (i.e. how long each integer unit
    is, in seconds).
getstats() -> list of profiler_entry objects
Return all information collected by the profiler.
Each profiler_entry is a tuple-like object with the
following attributes:
    code          code object
    callcount     how many times this was called
    reccallcount  how many times called recursively
    totaltime     total time in this entry
    inlinetime    inline time in this entry (not in subcalls)
    calls         details of the calls
The calls attribute is either None or a list of
profiler_subentry objects:
    code          called code object
    callcount     how many times this is called
    reccallcount  how many times this is called recursively
    totaltime     total time spent in this call
    inlinetime    inline time (not in further subcalls)
enable(subcalls=True, builtins=True)
Start collecting profiling information.
If 'subcalls' is True, also records for each function
statistics separated according to its current caller.
If 'builtins' is True, records the time spent in
built-in functions separately from their caller.
disable()
Stop collecting profiling information.
clear()
Clear all profiling information collected so far.
