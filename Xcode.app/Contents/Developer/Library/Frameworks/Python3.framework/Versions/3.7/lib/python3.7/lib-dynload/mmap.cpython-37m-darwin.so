error
mmap
PROT_EXEC
PROT_READ
PROT_WRITE
MAP_SHARED
MAP_PRIVATE
MAP_ANON
MAP_ANONYMOUS
PAGESIZE
ALLOCATIONGRANULARITY
ACCESS_DEFAULT
ACCESS_READ
ACCESS_WRITE
ACCESS_COPY
mmap.mmap
mmap closed or invalid
mmap index out of range
mmap object doesn't support item deletion
mmap assignment must be length-1 bytes()
mmap can't modify a readonly memory map.
mmap indices must be integers
mmap doesn't support item deletion
mmap item value must be an int
mmap item value must be in range(0, 256)
mmap object doesn't support slice deletion
mmap slice assignment is wrong size
mmap indices must be integer
close
find
rfind
flush
move
read
read_byte
readline
resize
seek
size
tell
write
write_byte
__enter__
__exit__
cannot close exported pointers exist
y*|nn:rfind
y*|nn:find
|nn:flush
flush values out of range
nnn:move
source, destination, or count out of range
|O&:read
read byte out of range
n:resize
new size out of range
mmap: resizing not available--no mremap()
mmap can't resize with extant buffers exported.
mmap can't resize a readonly or copy-on-write memory map.
n|i:seek
unknown seek type
seek out of range
y*:write
data out of range
b:write_byte
write byte out of range
closed
fileno
length
flags
prot
access
offset
in|iiil
memory mapped length must be positive
memory mapped offset must be positive
mmap can't specify both access and flags, prot.
mmap invalid access parameter.
cannot mmap an empty file
mmap offset is greater than file size
mmap length is greater than file size
Windows: mmap(fileno, length[, tagname[, access[, offset]]])
Maps length bytes from the file specified by the file handle fileno,
and returns a mmap object.  If length is larger than the current size
of the file, the file is extended to contain length bytes.  If length
is 0, the maximum length of the map is the current size of the file,
except that if the file is empty Windows raises an exception (you cannot
create an empty mapping on Windows).
Unix: mmap(fileno, length[, flags[, prot[, access[, offset]]]])
Maps length bytes from the file specified by the file descriptor fileno,
and returns a mmap object.  If length is 0, the maximum length of the map
will be the current size of the file when mmap is called.
flags specifies the nature of the mapping. MAP_PRIVATE creates a
private copy-on-write mapping, so changes to the contents of the mmap
object will be private to this process, and MAP_SHARED creates a mapping
that's shared with all other processes mapping the same areas of the file.
The default value is MAP_SHARED.
To map anonymous memory, pass -1 as the fileno (both versions).
