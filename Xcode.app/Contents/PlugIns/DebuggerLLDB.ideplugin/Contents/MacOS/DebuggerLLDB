@(#)PROGRAM:DebuggerLLDB  PROJECT:IDEPlugIns-19557.2
summary
description
is_fatal
notes
fixits
filename
start_line
v8@?0
os_log_fault_default_callback
v32@?0@"IDEBreakpoint"8Q16^c24
-[DBGLLDBRuntimeIssuesHelper shouldStopForRuntimeIssuesBreakpointAtLocation:session:frame:]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBRuntimeIssuesHelper.mm
[location.symbolName isEqualToString:@"os_log_fault_default_callback"]
location: %@, symbolName: %@
    struct os_log_fault_callback_info_t {
        const uint32_t version;
        const void* handle;
        const char *subsystem;
        const char *category;
        const char *format_str;
        const char *message;
        const void *pc;
    } * __info_from_os_log = (os_log_fault_callback_info_t *)$arg1;
    const char *__xcode_simulator_root = (const char *)getenv("SIMULATOR_ROOT");
    const char *__xcode_caller_path = (const char *)dyld_image_path_containing_address(__info_from_os_log->pc);
    struct {
        const char *subsystem;
        size_t subsystem_len;
        const char *category;
        size_t category_len;
        const void *pc;
        const char *simulator_root;
        size_t simulator_root_len;
        const char *caller_path;
        size_t caller_path_len;
    } os_log_fault_xcode_data = {
        __info_from_os_log->subsystem,
        __info_from_os_log->subsystem ? (size_t)strlen(__info_from_os_log->subsystem) : 0,
        __info_from_os_log->category,
        __info_from_os_log->category ? (size_t)strlen(__info_from_os_log->category) : 0,
        __info_from_os_log->pc,
        __xcode_simulator_root,
        __xcode_simulator_root ? (size_t)strlen(__xcode_simulator_root) : 0,
        __xcode_caller_path,
        __xcode_caller_path ? (size_t)strlen(__xcode_caller_path) : 0,
    };
    os_log_fault_xcode_data;
    
@"NSString"12@?0i8
IDELogLLDBRPCChannels
IDEDebuggerEnableReproducerCapture
_s_connectionIDsLock
/tmp/lldbrpc.log
_codeModuleForModuleIDTable lock
Previous DBG Threads Lock
Xcode.DebuggerKit.DebugNavigator.DebugNavigatorContentDelegate
ConcurrentQueue: %@
-[DBGLLDBProcess _updateCodeModulesAfterDelay]_block_invoke
v12@?0i8
__TEXT
libsystem_malloc.dylib
v32@?0@"DBGLLDBThread"8Q16^c24
v32@?0@"DBGLLDBStackFrame"8Q16^c24
-[DBGLLDBProcess updateQueuesAndThreads:]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBProcess.mm
*controlState == IDEDebugProcessPausedForStepCompletedState || *controlState == IDEDebugProcessPausedState
controlState must either be IDEDebugProcessPausedForStepCompletedState or IDEDebugProcessPausedState at this point.
refreshed paused states for '%@'. %lu queues, %lu threads, '%@' is the current thread.
-[DBGLLDBProcess readMemoryAtAddress:numberOfBytes:progressHandler:resultHandler:]_block_invoke
v16@?0@"NSData"8
failed to create destination buffer
canceling memory read
-[DBGLLDBProcess clearQueueThreadStackStates]
[[NSThread currentThread] isMainThread]
%@ has to be executed on the main thread.
isDoingAsyncAttach
Waiting to Attach
RESOURCE_TYPE_MEMORY
instrumentation_class
ThreadSanitizer
UndefinedBehaviorSanitizer
MainThreadChecker
SwiftRuntimeReporting
request Continue() after _handleStopForInstrumentation
v32@?0@"IDEConsoleItem"8Q16^c24
c16@?0@"NSString"8
crash-info annotations
message
message2
DBGStopOnExec
request Continue() after eStopReasonExec
 (%lu)
Thread
Original Exception Backtrace
can't immediately reflect LLDB selected thread : %u
reflected selected thread and stack frame from LLDB in the UI model objects.
can't reflect LLDB selected thread : %u
v16@?0@"NSArray"8
-[DBGLLDBProcess _assertIsLLDBSessionThread]
((lldbSession)) != nil
%@ should not be nil.
(lldbSession)
%#llx
-[DBGLLDBProcess symbolicatedThreadFromAddress:size:isLiteZone:isVMregion:handler:]_block_invoke
-[DBGLLDBProcess _mallocStackLogForAddress:size:isLiteZone:isVMregion:error:]
!DVTIsMainThread()
code should not be running on main thread
com.apple.instruments.server.services.remoteleaks
Retrieving VM region stack logs is not supported for this target device or OS.
Retrieving stack logs is not supported for this target device or OS.
Malloc stack logging is not enabled for this process.
Selected item has no allocation backtrace recorded.
v16@?0@"DTXMessage"8
(bool)turn_on_stack_logging(4)
isCancelled
Xcode.DBGLLDBSession
libdispatch
DBGRecordedFramesForNSOperation
__NSOQSchedule_f
_dispatch_client_callout
v32@?0@"IDEStackFrame"8Q16^c24
DBGRecordedFramesDepth
stackFrames
DBGLLDBThread lock for controlling access to _delayedInvalidationStackFrames
DBGLLDBThread lock for controlling access to _reuseGeneration
requested_qos.printable_name
-[DBGLLDBThread _assertOnSessionThread]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBThread.mm
self.parentProcess != nullptr
self.parentProcess.parentDebugSession != nullptr
[self.lldbSession currentThreadIsSessionThread]
DBGDisableSwiftAsyncFunctionSupport
-[DBGLLDBThread fetchBackingStackFramesIfNecessary:markRecorded:]_block_invoke
!_hasFetchedFullListOfStackFrames
 [inlined]
0x%8.8llx
0x%*.*llx
IsSwiftAsyncFunction
-[DBGLLDBStackFrame _assertOnSessionThread]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBStackFrame.mm
self.parentThread != nullptr
[self _isSessionThread]
v16@?0@"<DBGSBValue>"8
-[DBGLLDBStackFrame _mapDataValuesFromValueList:withBlock:]
((block)) != nil
(block)
this
self
fetched data value for symbol '%@', value is '%@'
LLDB StackFrame
Couldn't find variable named '%@'.
-[DBGLLDBStackFrame evaluateExpression:options:withResultBlock:]
((options)) != nil
(options)
Unknown error
DBGDynamicValueTypeForLLDB
IDEMinNumberOfChildrenToUsePlaceholdersFor
IDEMaxNumberOfChildrenForDataValue
DBGForceGreaterThan4BillionToHex
__lldb_autogen_nspair
struct __lldb_autogen_nspair
key/value pair
-[DBGLLDBDataValue _assertOnSessionThread]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBDataValue.mm
self.thread != nullptr
self.thread.parentProcess != nullptr
self.thread.parentProcess.parentDebugSession != nullptr
set value for '%@' from '%@' to '%@'
failed to set value for '%@' from '%@' to '%@', with error: %s
value
-[DBGLLDBDataValue _calculateSummaryForDictionaryElement]
_isDictionarySynthesizedParent
[_lldbValueObject GetNumChildren] == 2
(no summary)
%@ : %@
Error : The debugger cannot retrieve the string. The variable might not be initialized.
-[DBGLLDBDataValue loadedSummary:]
DVTIsMainThread()
code should be running on main thread
-[DBGLLDBDataValue loadedSummary:]_block_invoke
v32@?0@8@"NSDictionary"16^c24
fullSummary
-[DBGLLDBDataValue loadedFullSummary:]_block_invoke
childValues
-[DBGLLDBDataValue childWithName:foundChild:]
-[DBGLLDBDataValue childWithName:foundChild:]_block_invoke
v16@?0@"NSString"8
<%@ %p> name: "%@", value %@
watch set variable %@
Failed to set watch point
855031
error: failed to create watchpoint for %@
-[DBGLLDBDataValue ensureAllDisplayablePropertiesAreLoaded:]
-[DBGLLDBDataValue classNameHierarchy:]
%lu:%@
%@:%@
%@ : formatForName : %@
Boolean
Bytes (char)
Bytes (hex)
Bytes (hex with ASCII)
C String
Complex
Float
Unicode 16
Unicode 32
Pointer
Vector of char
Vector of sint8
Vector of uint8
Vector of sint16
Vector of uint16
Vector of sint32
Vector of uint32
Vector of sint64
Vector of uint64
Vector of float32
Vector of float64
Vector of uint128
parent
[%lu] %@
DBGDelayBeforeKillingLLDBRPCServer
IDELoadMinimalSymbolsWhenCommandLineTestingOnDevice
IDEUseOnlyStandardLLDBFramework
IDETimeoutForCheckingdsymForUUID
IDEDebuggerLogToFile
DBGCreatePTYForCustomCommands
DBGSkipSettingModuleCachePath
RawUnderlyingErrorMessage
_s_launcherForIntegerTokenLock
DBGLLDBLauncher Serial Queue
lldb > %s
settings set target.process.thread.step-out-avoid-nodebug true
command source -s true %@
-[DBGLLDBLauncher _createDebuggerConsoleAdaptor:launchParameters:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBLauncher.mm
((_debugSession)) != nil
(_debugSession)
Console is not supported for a recorded stack frame.
-[DBGLLDBLauncher parseConsoleInputFromOriginalInput:]
Execute lldb commands queue for %u
-[DBGLLDBLauncher _launchErrorForDescription:message:rawErrorMessage:]
((description)) != nil
(description)
((message)) != nil
(message)
((rawErrorMessage)) != nil
(rawErrorMessage)
 locked
unable to attach
root
the user
no such process
Bad executable
internal error
c8@?0
/var/db
3AC94139-8D9A-4470-830B-C71063AAED49
com.apple.dt.Xcode
[Internal only] 
AppleInternalString.CheckSigningOrDefang
LLDB provided no error string.
error: attach by pid '%llu' failed
no such process.
 -- %@
error: failed to launch '%@'
Extracting UTF8String from '%@' (%@) as argument or environment variable
argument[%li] = %@
setting platform file spec to remote install path: %@
BackgroundContentFetching
ActivateSuspended
 %@ %@
v32@?0@"NSString"8@"NSString"16^c24
/usr
/System
 /usr %@ /System %@
/Developer
 /Developer %@
/private
setting current platform to: %s
setting symbols path in device support directory: %@
target modules search-paths add %@
setting path subsitution pairs: %@
settings set target.memory-module-load-level minimal
settings set target.display-expression-in-crashlogs true
settings set symbols.clang-modules-cache-path 
-[DBGLLDBLauncher _consumeEventAfterConnectToDebugServer:]
state == eStateConnected
Frameworks
.dylib
lldbTarget.AddModule for '%@'
settings append target.exec-search-paths '%@'
settings append target.debug-file-search-paths '%@'
DBGShellCommands
com.apple.DebugSymbols
/usr/local/bin/dsymForUUID
AppleInternalString.dsymForUUID
c16@?0@"IDECodeModule"8
/usr/lib/dyld
LLDB is likely reading from device memory to resolve symbols.
The default %@ has been set to YES, prohibiting Xcode from retrieving debug symbols from the run destination.
AppleInternalString.DebugSymbolsFromMemory
IDESlowLaunchSuppressionUserDefaultReadFromMemory
Using LLDBRPC. The LLDB framework is from %@
Using standard LLDB framework
Warning: Error creating LLDB target at path '%s'- using an empty LLDB target which can cause slow memory reads from remote devices.
Using an empty LLDB target for launch remote path '%@' can cause slow memory reads from remote devices.
error: executable doesn't exist: '%@'
User Command: %@
mach-o-core
debugserver file descriptor: %i
connect://[%@]:%ld
fd://%u
gdb-remote
v32@?0q8@16@"NSError"24
-[DBGLLDBLauncher terminate]_block_invoke
-[DBGLLDBLauncher terminate]_block_invoke_3
-[%@ terminate] is called twice. Check backtrace for problematic upstream callers.
__objc_no
Called DVTWarn
You may need to manually terminate your process
Xcode has killed the LLDB RPC server to allow the debugger to detach from your process. %@.
The LLDB RPC server has crashed. %@. The crash log is located in ~/Library/Logs/DiagnosticReports and has a prefix 'lldb-rpc-server'. Please file a bug and attach the most recent crash log.
The LLDB RPC server has exited unexpectedly. %@. Please file a bug if you have reproducible steps.
lldb-rpc-server has exited/crashed with status: %d signal: %d
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
mtc:main-thread-api-violation
mtc:
(Recorded stack frame) 
--end--;
expression
thread
stackFrame
expressionQueue
expressionResultHandler
expressionResultBlock
language
threadSanitizerIssues
_threadSanitizerIssues
UBSanitizerIssues
_UBSanitizerIssues
mainThreadCheckerIssues
_mainThreadCheckerIssues
swiftRuntimeReportingIssues
_swiftRuntimeReportingIssues
Event Callback Lock
DBGLLDBDebugSession lock for controlling access to _resumeActions and _threadActions
Queue to set the _isLongRunningConsoleCommand flag
lastObserversForGaugesState
com.apple.platform.iphoneos
12.0
DYLD_INSERT_LIBRARIES
/usr/lib/libgmalloc.dylib
libgmalloc
libclang_rt.asan
Address Sanitizer
libclang_rt.tsan
Thread Sanitizer
NSZombieEnabled
-[DBGLLDBSession trackProcess]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBSession.mm
((self.process)) != nil
(self.process)
debugSession
-[DBGLLDBSession _setSessionThreadIdentifier:]
pthread_self() == thread
__llvm_profile_write_file
((void(*)())%llu)()
v32@?0@"NSString"8@"NSString"16@"NSError"24
-[DBGLLDBSession requestStepIntoCallSymbol:atLocation:]
%s is not implemented yet.
-[DBGLLDBSession _runActionOnSessionThreadWhenPaused:]
[self currentThreadIsSessionThread]
readyForActionsWhenPaused
-[DBGLLDBSession _runActionOnSessionThreadWhenPaused:]_block_invoke
self.readyForActionsWhenPaused
There should only be one transition from NO -> YES
-[DBGLLDBSession bundleIDOfLaunchParameters]
((launchSession)) != nil
(launchSession)
Unable to determine bundle identifer because launchParameters is nil.
Unable to determine bundle identifer because there is no buildable product associated with this debug session, or it couldn't be determined from '%@'
%s blueprint is nil.
%s provisionable is nil.
%s buildParameters are nil.
%s provisionable bundle identifier is nil.
-[DBGLLDBSession _requestFetchEventOnSessionThread]
BackgroundApplication
-[DBGLLDBSession _putLLDBInThreadID:stackFrameID:restoreThreadFrameAfterWork:toDoWork:]
Can't find lldb thread ID %lu to do work
Can't find lldb stack frame ID %lu to do work
Sending LLDB command: '%@'
settings set auto-confirm true
settings set auto-confirm false
add-dsym -u %@
dylib loading error
%@: unknown error trying to load %@
%@: %s
%@: process is invalid
DBGDebugger
errorMessage
Successfully inserted library : %@
NULL
0x%llx
Printing description of %@:
asked to pause, but already paused -- ignoring this request
eProcessControlActionContinue
Calling Continue()
Not calling continue() because not paused. pendingRun : %i, controlState : %i
eProcessControlActionStepIn
Calling StepInstruction(false)
Calling StepInto(%@)
eOnlyThisThread
eOnlyDuringStepping
-[DBGLLDBSession _handleNextActionWithState:pendingRun:]
Can't find current thread to do eProcessControlActionStepIn
Not doing eProcessControlActionStepIn because not paused. pendingRun : %i, controlState : %i
eProcessControlActionStepOver
Calling StepInstruction(true)
Calling StepOver(%@)
Can't find current thread to do eProcessControlActionStepOver
Not doing eProcessControlActionStepOver because not paused. pendingRun : %i, controlState : %i
eProcessControlActionStepOut
Calling StepOut()
Can't find current thread to do eProcessControlActionStepOut
Not calling StepOut() because not paused. pendingRun : %i, controlState : %i
eProcessControlActionStepUntil
Calling StepOverUntil() until line : %ld
StepOverUntil() Error: %s
Can't find current thread to do eProcessControlActionStepUntil
Not calling StepOverUntil() because not paused. pendingRun : %i, controlState : %i
eProcessControlActionPause
process->_lldbProcess.Stop() -> %s
eProcessControlActionDetach
process plugin packet send 'QSetEnableAsyncProfiling;enable:0;'
calling SendAsyncInterrupt at kill() to end long running Console command.
kill
eProcessControlActionKill cancelling async attach
process->_lldbProcess.Kill()...
process->_lldbProcess.Kill() -> %s
-[DBGLLDBSession _drainAllSessionThreadActionsWithActionsLockAlreadyTaken]
-[DBGLLDBSession _quitWatchdogOnProcessState:]_block_invoke
WARNING: Preemptively setting control state to IDEDebugProcessUnloadedState since we have wait %.2f seconds for LLDB to send the appropriate eStateExited message.
-[DBGLLDBSession _killWatchdog]_block_invoke
Doing -_delayedSetRunningState, which will do -clearQueueThreadStackStates
v32@?0@"IDEThread"8Q16^c24
prin
print
expr
expre
expres
express
expressi
expressio
call
error
-[DBGLLDBSession _evaluateExpressionFromSessionThread:threadID:stackFrameID:queue:options:resultBlock:completionHandler:]
breakpoint was created
failed to create breakpoint '%@'
exception-typename
__cxa_throw
objc_exception_throw
__cxa_begin_catch
-[DBGLLDBSession _deleteWatchpointFromLLDBSessionThread:]
-[DBGLLDBSession deleteWatchpoint: %@]
Failed to delete watchpoint that is valid: %@
breakpoint was added from lldb
-[DBGLLDBSession _breakpointLocationFromSBBreakpointLocation:parentBreakpoint:]
breakpoint was deleted via the console, id = %i
breakpoint location was added from lldb
v32@?0@"IDEBreakpointLocation"8Q16^c24
v32@?0@"IDEBreakpoint"8@"NSMutableArray"16^c24
-[DBGLLDBSession _deleteBreakpointFromLLDBSessionThread:breakpointLocations:]
breakpoint was not deleted because it wasn't valid, id = %li
breakpoint was deleted, id = %lu
breakpoint is already deleted in lldb and we do the cleanup in Xcode as a follow-up, id = %lu
-[DBGLLDBSession activationStateChanged: %i forBreakpoints:%@]
%@, %@, enabled = %@
<No Stream>
%@, SBBreakpoint: id = %d, location id = %d
-[DBGLLDBSession _sbBreakpointLocationForIDEBreakpointLocationID:parentBreakpointID:]
calling DispatchInputInterrupt to avoid blocking at console prompt
process plugin packet send 'QSetEnableAsyncProfiling;enable:1;interval_usec:1000000;scan_type:0x%x;'
--end--
num_cpu
host_user_ticks
host_sys_ticks
host_idle_ticks
elapsed_usec
task_used_usec
thread_used_id
thread_used_name
thread_used_usec
used
total
anonymous
phys_footprint
mem_cap
energy
cpu_cap_p
cpu_cap_t
-[DBGLLDBSession _handleThreadEvent:]
-[DBGLLDBSession assertIsLLDBSessionThread]
-[DBGLLDBSession _refreshThreadListAndUpdateCurrentThread:]
failure to refresh paused states for '%@'
-[DBGLLDBSession _runPendingExpressionsAndPurgeList]
Can't find lldb thread index ID %lu to evaulate expression "%@"
Can't find lldb stack frame ID %lu to evaulate expression "%@"
LLDB Session
(bool)turn_on_stack_logging
-[DBGLLDBSession _lldbProcessPlugnPacketSend:]
response:
lost connection
Memory
debugserver
-[DBGLLDBSession _handleSessionThreadEndOfLifeWithExitCode:exitDescription:]
device
Lost connection to the debugger on %@.
Message from debugger: %@
Message from debugger: %@
calling setFinishRunning from session listener thread
-[DBGLLDBSession _delayedTurnOnMemoryDebugging]
-[DBGLLDBSession setValue:forGlobalVariable:ofType:completionHandler:queue:]_block_invoke_3
v16@?0r*8
Symbol not found
Invalid type
_UniqueValue%i
_s_sessionForIntegerTokenLock
<DBGLLDBSessionThread (pid=%i)>
entering %s()
DBGLLDBSessionThread
quit
process launch
DVTInvalidation_ObjectsReportedToRadarDuringCurrentEventHashTable
Q24@?0*8Q16
detected eStateRunning stopped state after kill - forcing eStateExited
got process state: %s (event_mask = 0x%8.8x)
detected running state : %u
detected stopped state : %u (hasStoppedOnce = %i)
setting controlState = IDEDebugProcessRunningState
setting controlState = IDEDebugProcessPausedState
setting controlState = IDEDebugProcessPausedForStepCompletedState
request Continue() due to stopDueToMSLDuringAttach: %i, continueAfterExpression: %i, ignoreSigTermKill: %i
controlState = IDEDebugProcessRunningState
IDEDebugProcessUnloadedState
IDEDebugProcessPausedForStepCompletedState
IDEDebugProcessPausedState
IDEDebugProcessRunningState
controlState = %@
process plugin packet send 'qGetProfileData;scan_type:0x%x;'
setting controlState = IDEDebugProcessUnloadedState because CLI unit test crashed.
resetting controlState = IDEDebugProcessRunningState for CLI unit test.
IDEDebugConsolePerformance
Started
controlState = IDEDebugProcessUnloadedState
exit description: %@
lldb
v16@?0@"DBGLLDBInternalMetricsReport"8
-[DBGLLDBSanitizerHelper init]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBSanitizerHelper.mm
method %@ is inappropriate for instances of %@
-[DBGLLDBSanitizerHelper handleExtendedInfo:forThread:]
method %@ is a responsibility of subclasses of %@
memory_address
-[DBGLLDBMemoryManager init]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBMemoryManager.mm
This is a internal shared object that should never be created externally.
-[DBGLLDBMemoryManager _memoryPressureDetected]_block_invoke
v16@?0@"NSNotification"8
-[DBGLLDBAddressSanitizerHelper init]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBAddressSanitizerHelper.mm
currentThread
struct { char name[%lu]; char type[%lu]; void *region_address; size_t region_size; } t = {0}; const char *type = ((const char * (*)(void *addr, char *name, size_t name_size, void **region_address, size_t *region_size))__asan_locate_address)((void *)0x%llx, t.name, %lu, &t.region_address, &t.region_size); ((char * (*)(char * destination, const char * source, size_t num))strncpy)(t.type, type, %lu); t;
region_address
region_size
v24@?0@8@"NSError"16
inside
before
after
%@ %@
Unknown address
heap
a %zu-byte heap region at 0x%llx
heap-invalid
Invalid memory
stack
global
-[DBGLLDBAddressSanitizerHelper _retrieveShadowParametersWithHandler:]
struct { size_t scale; size_t offset; } t = {0}; ((void (*)(size_t *scale, size_t *offset))__asan_get_shadow_mapping)(&t.scale, &t.offset); t;
scale
offset
((0x%llx) >> 0x%llx) + 0x%llx
v24@?0Q8@"NSData"16
address
line
ubsan:
DBGDebuggerLLDB
serial
concurrent
-[DBGLLDBQueue pendingBlocksThreads]
/Library/Caches/com.apple.xbs/Sources/IDEPlugins_DebugAndDelta/IDEPlugins-19557.2/IDEDebugger/DebuggerLLDB/DBGLLDBQueue.mm
!self.isRecorded
DBGPendingBlocksLimit
location_description
issue_type
stacks
location_filename
location_line
tsan:
objectForKeyedSubscript:
boolValue
recordedIssueThreadsFromThread:type:
memoryDataFrom:forThread:
recordedThreadCollection
setRecordedThreads:
setDisplayName:
firstObject
documentLocationForFrameWithDebugSymbolInRecordedThread:
array
countByEnumeratingWithState:objects:count:
objectForKey:
length
dictionary
setObject:forKeyedSubscript:
fileURLWithPath:isDirectory:
intValue
timestamp
initWithDocumentURL:timestamp:lineRange:
addObject:
dictionaryWithObjectsAndKeys:
count
parentDebugSession
mutableSwiftRuntimeReportingIssues
handleExtendedInfo:forThread:
shouldAutomaticallyResumeForExtendedInfo:
init
pointerValue
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithConnection:path:
initWithConnection:path:resolve:
Exists
GetPath:dst_len:
GetFilename
GetDirectory
initWithSBFileSpec:
.cxx_destruct
.cxx_construct
_fileSpec
IsValid
GetID
SetEnabled:
initWithSBWatchpoint:
_watchpoint
initWithConnection:
GetSize
GetStringAtIndex:
AppendString:
_stringList
dvt_isNonEmpty
breakpoints
shouldBeEnabled
isRuntimeIssue
categoriesAsSet
containsObject:
enumerateObjectsUsingBlock:
symbolName
isEqualToString:
dynamicValueType
EvaluateExpression:use_dynamic:
GetThread
GetProcess
launcher
lldbDebugger
CreateError
GetChildAtIndex:use_dynamic:can_create_synthetic:
GetValueAsUnsigned:
ReadMemory:buf:size:error:
stringWithCString:encoding:
breakpointManager
_shouldBreakpointAfterConsultingBreakpoints:category:
launchSession
runtimeIssuesCollector
launchParameters
environmentVariables
shouldDisplayRuntimeIssueWithSubsystem:category:imagePath:environmentVariables:
breakpointSymbolName
shouldStopForRuntimeIssuesBreakpointAtLocation:session:frame:
initWithIdentifier:pathString:
initWithIdentifier:pathString:lldbModule:
_lldbModule
initWithSBError:
initWithSBValue:
initWithSBType:
initWithSBData:
Clear
GetError
GetName
GetTypeName
GetFormat
SetFormat:
GetValue
GetValueType
GetValueDidChange
GetSummary
GetSummary:options:
GetObjectDescription
IsInScope
MightHaveChildren
GetNumChildren
GetStaticValue
GetExpressionPath:
GetType
SetValueFromCString:error:
GetValueAsSigned:
GetChildMemberWithName:use_dynamic:
GetDescription:
GetData
AddressOf
_value
SetCapping:
_typeSummaryOptions
initWithSBSection:
initWithSBAddress:
GetUUIDString
GetFileSpec
GetNumCompileUnits
SetPlatformFileSpec:
FindSection:
ResolveFileAddress:
initWithSBModule:
_module
standardUserDefaults
registerDefaults:
dispatchLockWithDebugName:
arrayForKey:
UTF8String
valueWithPointer:
numberWithUnsignedInteger:
toolsInfo
isAppleInternal
boolForKey:
performLockedBlock:
initWithConnection:argv:
initWithConnection:path:wait_for:async:
initWithConnection:PID:
initWithConnection:name:
initWithSBTarget:
initWithSBListener:
initWithSBCommandInterpreter:
initialize
initWithLogCallBack:token:frameworkPath:
CreateLaunchInfoWithArgv:
CreateAttachInfoWithPath:wait_for:async:
CreateAttachInfoWithPID:
CreateFileSpecWithPath:
CreateFileSpecWithPath:resolve:
CreateEvent
CreateStream
CreateCommandReturnObject
CreateStringList
CreateExpressionOptions
CreateTypeSummaryOptions
CreateBroadcasterWithName:
CreateFileSpecList
RemoteFileDescriptorForLocalFileDescriptor:
SkipLLDBInitFiles:
SkipAppInitFiles:
RunCommandInterpreter:spawnThread:
Destroy
CreateTarget:targetTriple:platformName:addDependentModules:error:
GetTargetAtIndex:
SetSelectedTarget:
SetCurrentPlatform:
SetCurrentPlatformSDKRoot:
HandleCommand:
GetNumTargets
GetPrompt
GetListener
GetCommandInterpreter
SetUseColor:
GetServerProcessID
SetIOFile:
SetInputFileHandle:transfer:
SetOutputFileHandle:transfer:
SetErrorFileHandle:transfer:
AddServerExitedCallback:baton:
RemoveServerExitedCallback:baton:
IsSameConnection:
HasCrashedWithStatus:signal:
_debugger
_RPCConnection
_rpcConnectionValue
dataWithBytes:length:
JSONObjectWithData:options:error:
GetAsJSON:
GetDictionaryFromStream:outError:
GetBooleanForKey:
initWithSBStructuredData:
_structuredData
initWithSBThread:
initWithSBQueue:
initWithSBThreadCollection:
initWithSBBroadcaster:
GetTarget
GetPluginName
GetProcessID
GetState
GetNumThreads
GetNumQueues
Continue
IsInstrumentationRuntimePresent:
GetAddressByteSize
SendAsyncInterrupt
Stop
SendEventData:
SetSelectedThreadByIndexID:
LoadImage:error:
Detach
Kill
GetSTDOUT:dst_len:
GetSTDERR:dst_len:
GetAsyncProfileData:dst_len:
GetExitStatus
GetExitDescription
GetThreadAtIndex:
GetSelectedThread
SetSelectedThread:
GetQueueAtIndex:
GetHistoryThreads:
GetBroadcaster
GetExtendedCrashInformation
StateIsStoppedState
initWithSBProcess:
_process
GetStartAddress
GetLine
GetColumn
initWithSBLineEntry:
_lineEntry
GetExtendedBacktraceThread:
GetAddress
initWithSBQueueItem:
_queueItem
SetExecutableFile:addAsFirstArg:
SetEnvironmentEntries:append:
AddOpenFileAction:path:read:write:
SetLaunchEventData:
SetWorkingDirectory:
SetUserID:
SetLaunchFlags:
_launchInfo
initWithSBTypeMember:
_typeMember
initWithDebugSession:
lldbTarget
setCurrentStackFrame:
prompt
isRecorded
debuggerConsoleAdaptor
outputForStandardOutput:isPrompt:isOutputRequestedByUser:
stopMemoryDebugging
_assertIsLLDBSessionThread
_updateCodeModulesAfterDelay
stringWithUTF8String:
stringWithFormat:
isValid
_updateCodeModulesImmediatelyIfNecessary
addSessionThreadAction:
defaultManager
stringWithFileSystemRepresentation:length:
buildProductDirectories
hasPrefix:
setIsInBuiltProductDirectories:
GetLoadAddress:
setAddress:
setDebugSymbolsLoadState:
setNeedCodeModuleUpdate:
needCodeModuleUpdate
debuggerShouldAttachToTarget
enableMallocStackLoggingDuringAttach
GetNumModules
arrayWithCapacity:
GetModuleAtIndex:
codeModuleForLLDBModule:
name
enableMallocStackLoggingDuringAttach:
setLoadedCodeModules:
GetStopReason
mutableCopy
_currentLLDBThread
GetIndexID
uniqueID
isEqualToNumber:
initWithParentProcess:uniqueID:lldbThread:
removeObjectIdenticalTo:
autoRefreshStackFramesWhenPaused
willReuse:
threadName
setThreadName:
setCurrentThread:
_updateThreadStateAndStopReason:controlState:
refreshStackFrames
addObjectsFromArray:
copy
GetQueueID
initWithParentProcess:lldbQueue:
GetThreadID
lldbThread
setPrimitiveQueue:
setPrimitiveThreads:
removeObjectsInArray:
state
stopReason
breakpointStackSelectionBehavior
restoreFrameNumber
frameNumber
setRestoreFrameNumber:
backingStackFrames
bestStackFrameForFrames:
_shouldSelectFirstSymbolFrame:
hasSymbols
currentStackFrame
setInstructionPointerStackFrame:
delayToAllowFastPCDrawing
_updateThreads:currentThread:controlState:
_updateQueues:withComputedThreads:
allObjects
removeAllObjects
invalidate
setControlState:
setQueues:
setThreads:
clearQueueThreadStackStates
_setInitialCurrentStackFrameForThread:
threadDisplayName
logDebugStringWithTimestampUsingFormat:
_rawMemoryDataForAddressExpression:numberOfBytes:resultHandler:
currentThread
primitiveStackFrames
lldbFrame
EvaluateExpression:
Success
dataWithBytesNoCopy:length:
readMemoryAtAddress:numberOfBytes:progressHandler:resultHandler:
dataWithCapacity:
_readMemoryAtAddress:numberOfBytes:dataToReadInto:shouldCancel:progressHandler:resultHandler:
logDebugStringWithTimestamp:
isCancelled
appendData:
isMainThread
keyPathsForValuesAffectingSubtitle
setByAddingObject:
isDoingAsyncAttach
subtitle
_getStopReasonText:
containsString:
GetStopReasonExtendedInfoAsJSON:
_createThreadSanitizerHelper
stopOnEveryThreadSanitizerIssue
TSanBreakpointTotalIgnoreCount
_createUBSanitizerHelper
stopOnEveryUBSanitizerIssue
UBSanBreakpointTotalIgnoreCount
_createMainThreadCheckerHelper
stopOnEveryMainThreadCheckerIssue
MTCBreakpointTotalIgnoreCount
_createSwiftRuntimeReportingHelper
_createAddressSanitizerHelper
setBreakpointStackSelectionBehavior:
GetStopDescription:dst_len:
string
lldbProcess
targetConsoleAdaptor
allConsoleItems
content
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
enumerateObjectsWithOptions:usingBlock:
appendFormat:
outputForStandardOutput:
GetStopReasonDataAtIndex:
breakpointForIdentifier:
_isExceptionBreakpoint:thread:stopReason:stopReasonText:
customStopReasonString
FindBreakpointByID:
FindLocationByID:
GetHitCount
isSignalNumberFatal:
_extractExceptionInfoFrom:stopReasonText:
_retrieveCrashInfo
isLLDBExceptionFatal:
_isMemoryResourceException:thread:
_handleStopForInstrumentation:controlState:threadState:hasCrashed:
stringByAppendingFormat:
setState:
setStopReason:
lastReasonStopped
setLastReasonStopped:
hasCrashed
setHasCrashed:
GetCurrentExceptionBacktrace
initWithProcess:
numberWithUnsignedInt:
initWithParentProcess:uniqueID:lldbThread:recorded:
setRecordedForDisplayingStackFrames:
arrayWithObjects:count:
setRecordedThreadCollection:
GetCurrentException
_exceptionStopReason:fromSBValue:
initWithLLDBValueObject:thread:stackFrame:withParent:updateSummary:
setExceptionDataValue:
_recordedExceptionThreadForThread:
GetSelectedFrame
threads
setStackFrames:
GetFrameID
requestStackFrames:handleOnMainQueue:resultHandler:
assertIsLLDBSessionThread
dvt_removeObjectsIdenticalToObjectsInArray:
primitiveInvalidate
numberWithUnsignedLongLong:
descriptionForAddress:handleOnMainQueueWithResultHandler:
shadowMemoryForAddress:numberOfBytes:handleOnMainQueueWithResultHandler:
isMemoryFaultForDataValue:
GetCompileUnit
GetNumLineEntries
GetOffset
GetLineEntryAtIndex:
GetSymbol
GetDisplayName
unsignedLongLongValue
initWithParentThread:frameNumber:framePointer:name:lldbFrame:
GetModule
setModule:
GetLineEntry
updateForLineEntry:
_lineEntryWithLineNumberFromSymbolContext:lineEntry:
initWithParentProcess:uniqueID:
objectAtIndexedSubscript:
ResolveLoadAddress:
GetSymbolContext:
symbolicatedFrameFromSymbolContext:parentThread:frameNumber:address:
_mallocStackLogForAddress:size:isLiteZone:isVMregion:error:
runDestination
targetDevice
productType
runsOnProxy
activeProxiedDevice
primaryInstrumentsServer
requestVMregionStackLog:forAddress:size:
runnablePID
messageWithSelector:typesAndArguments:
requestMallocStackLog:forAddress:size:isLiteZone:
makeChannelWithIdentifier:
object
errorStatus
dvt_errorWithDomain:errorCode:messageFormat:
numberWithBool:
dvt_errorByInjectingUserInfoObject:forKey:
_symbolicatedFramesFromAddresses:
sendControlSync:replyHandler:
cancel
IsLoaded:
evaluateExpression:threadID:stackFrameID:queue:resultBlock:
contentDelegateUIExtensionIdentifier
setLLDBProcess:
addressByteSize
updateCodeModulesImmediately
updateQueuesAndThreads:
classForMemoryData
rawMemoryDataForAddressExpression:numberOfBytes:resultHandler:
readMemoryAtAddress:numberOfBytes:resultHandler:
reflectLLDBSelectedThreadAndFrame
recordedThreadsForAddress:handleOnMainQueueWithResultHandler:
memoryPointerDescriptionForAddress:handleOnMainQueueWithResultHandler:
symbolicatedThreadFromAddress:size:isLiteZone:isVMregion:handler:
loadedCodeModules
setIsDoingAsyncAttach:
isCoreFile
setIsCoreFile:
setTSanBreakpointTotalIgnoreCount:
setUBSanBreakpointTotalIgnoreCount:
setMTCBreakpointTotalIgnoreCount:
_lldbTarget
_lldbProcess
_previousThreadsToInvalidate
_previousDBGThreadsLock
_previousDBGThreads
_addressByteSize
_needCodeModuleUpdate
_pendingLazyCodeModuleUpdate
_hasEnabledMallocStackLoggingDuringAttach
_codeModulesTableLock
_codeModuleForModuleIDTable
_reflectingLLDBSelectedThreadAndFrame
_threadsForReflection
_addressSanitizerHelper
_threadSanitizerHelper
_UBSanitizerHelper
_mainThreadCheckerHelper
_swiftRuntimeReportingHelper
_TSanBreakpointCurrentIgnoreCount
_UBSanBreakpointCurrentIgnoreCount
_MTCBreakpointCurrentIgnoreCount
_isDoingAsyncAttach
_isCoreFile
_loadedCodeModules
_TSanBreakpointTotalIgnoreCount
_UBSanBreakpointTotalIgnoreCount
_MTCBreakpointTotalIgnoreCount
T@"DBGLLDBSession",R
T@"NSArray",C,V_loadedCodeModules
T@"<DBGSBProcess>",&,N,SsetLLDBProcess:
Tc,V_isDoingAsyncAttach
Tc,V_isCoreFile
TQ,V_TSanBreakpointTotalIgnoreCount
TQ,V_UBSanBreakpointTotalIgnoreCount
TQ,V_MTCBreakpointTotalIgnoreCount
willChangeValueForKey:
didChangeValueForKey:
cancelled
Tc,R,GisCancelled
_isCancelled
Tc,R,GisCancelled,V_isCancelled
BroadcastEventByType:unique:
_broadcaster
StartListeningForEvents:event_mask:
StartListeningForEventClass:broadcaster_class:event_mask:
WaitForEvent:event:
GetNextEvent:
_listener
initWithSBBreakpoint:
initWithSBBreakpointLocation:
BroadcasterMatchesRef:
GetRestarted
GetBreakpointEventType
GetNumBreakpointLocations
GetCString
EventIsThreadEvent
GetBreakpoint
GetBreakpointLocationAtIndex:
_event
initWithDictionary:
keyPathsForReporting
removeObjectForKey:
dictionaryRepresentation
dvt_dictionaryByAddingEntriesFromDictionary:
statisticsInJSON
setStatisticsInJSON:
_statisticsInJSON
T@"NSDictionary",&,V_statisticsInJSON
initWithSBValueList:
initWithSBSymbolContext:
initWithSBCompileUnit:
GetPC
SetPC:
GetFP
Disassemble
GetDisplayFunctionName
IsInlined
GetVariables:locals:statics:in_scope_only:use_dynamic:
FindVariable:use_dynamic:
FindValue:value_type:use_dynamic:
EvaluateExpression:options:
GetRegisters
IsSwiftThunk
GetLanguageSpecificData
initWithSBFrame:
_frame
SetCondition:
GetCondition
GetIgnoreCount
SetIgnoreCount:
IsEnabled
_breakpointLocation
GetFileAddress
_section
initWithSBSymbolContextList:
GetNumWatchpoints
Attach:error:
ConnectRemote:url:plugin_name:error:
Launch:error:
FindFirstGlobalVariable:
BreakpointCreateByLocation:line:column:moveToNearestCode:
BreakpointCreateByName:module_name:
BreakpointCreateByAddress:
BreakpointCreateByNames:num_names:name_type_mask:module_list:comp_unit_list:
BreakpointCreateForException:catch_bp:throw_bp:extra_args:
DeleteWatchpoint:
BreakpointDelete:
GetWatchpointAtIndex:
FindWatchpointByID:
AddModule:triple:uuid:
FindGlobalFunctions:max_matches:match_type:
GetStatistics
SetCollectingStats:
CreateValue:address:type:
FindSymbols:type:
FindFirstType:
_target
_isLookingForNSOperationInStackFrames:
GetExtendedBacktraceOriginatingIndexID
stackFrames
GetQueueName
initWithParentProcess:name:type:recordedThread:
integerValue
leadingThread
recordedThreadDepth
setLeadingThread:depth:
recordedThread
setRecordedThread:
dvt_changeValueForKey:usingBlock:
_setLLDBQueueItem:
setRecorded:
fetchBackingStackFramesIfNecessary:markRecorded:
lldbSession
GetInfoItemByPathAsString:stream:
setQualityOfServiceValue:
parentProcess
currentThreadIsSessionThread
compressedStackFramesIncludingRecorded:
hasSwiftAsyncFrames
queue
queryRecordedStackFramesForThread:withParentProcess:queue:lldbThread:
_assertOnSessionThread
terminateCurrentDebuggerCommandIfNeeded
GetNumFrames
stopRequested
GetFrameAtIndex:
_frameNameForSBFrame:
swiftAsyncFunction
setHasSwiftAsyncFrames:
setHasSymbols:
stringByAppendingString:
defaultMetrics
stackFrameFetchStarted:
hasLatestStackFrames
registerThreadAutoRefreshesStackFrames:
hasInitializedStackFrames
setHasInitializedStackFrames:
deregisterThreadAutoRefreshesStackFrames:
_setStackFramesOnMainThread:
_invalidateAndClearBackingStackFrames:
stackFrameFetchCompleted:
isCurrentThread
setDelayToAllowFastPCDrawing:
indexSetWithIndexesInRange:
objectsAtIndexes:
Suspend
setUserSuspended:
Resume
indexOfObjectIdenticalTo:
supportsInvalidationPrevention
createPendingBlockThreadWithParentProcess:queueItem:name:
requestSuspend
requestUnsuspend
invalidateUnusedStackFramesAfterCallToSetStackFrames:
_lldbThread
_lldbQueueItem
_derivedRecordedThread
_hasFetchedFullListOfStackFrames
_backingStackFrames
_delayedInvalidationStackFrames
_delayedInvalidationStackFramesLock
_reuseGeneration
_reuseGenerationLock
_currentThread
_delayToAllowFastPCDrawing
T@"NSArray",R,V_backingStackFrames
Tc,GisCurrentThread,V_currentThread
Tc,V_delayToAllowFastPCDrawing
initWithSBFileSpecList:
_fileSpecList
initWithSBSymbol:
_symbol
IsPointerType
GetTypeClass
GetPointeeType
GetNumberOfDirectBaseClasses
GetDirectBaseClassAtIndex:
GetDisplayTypeName
IsReferenceType
_type
initWithParentThread:frameNumber:framePointer:name:
setInstructionPointerAddressString:
_checkIsSwiftAsyncFunc
null
_lldbSession
sessionThreadIdentifier
_setReturnValueFromInitIfNecessary
GetStopReturnValue
_isSessionThread
initWithLLDBValueObject:stackFrame:withParent:
setReturnValue:
setReturnValueIsValid:
_addSessionThreadAction:
parentThread
_mapDataValuesFromValueList:withBlock:
GetValueAtIndex:
_getFrameVariablesOnLLDBSessionThreadAndOnlyIncludeArgs:includeLocals:includeStatics:inScopeOnly:
globalSymbolKind
globalVariableSymbolKind
instanceVariableSymbolKind
_findSymbolWithName:symbolKind:atLocation:
value
errorWithDomain:code:userInfo:
expressionWithSubstitutedTypesForExpression:
_evaluateExpressionOnSessionThread:options:error:
callbackQueue
timeoutInMicroSeconds
SetTimeoutInMicroSeconds:
SetFetchDynamicValue:
unwindOnError
SetUnwindOnError:
SetIgnoreBreakpoints:
language
SetLanguage:
autoHandleExceptions
SetTrapExceptions:
dataValueName
setName:
dictionaryWithObjects:forKeys:count:
_dataValuesFromValueList:valueMask:
setArguments:
_didAddDataValues:
setLocals:
_getStaticAndGlobalFrameVariablesOnLLDBSessionThread
setGlobals:
setFileStatics:
setRegisters:
_getArgumentsFromLLDBOnSessionThread
_getLocalsFromLLDBOnSessionThread
_getGlobalsAndFileStaticsFromLLDBOnSessionThread
_getRegistersFromLLDBOnSessionThread
setFileURL:
setLineNumber:
setColumnNumber:
setSettingDisassembly:
setDisassemblyString:
disassemblyString
setWithArray:
unionSet:
requestDataValueForSymbol:symbolKind:atLocation:onQueue:withResultBlock:
evaluateExpression:options:withResultBlock:
arguments
locals
fileStatics
globals
registers
isSwiftThunk
_lldbFrame
_lldbRegisters
_lldbStaticAndGlobalFrameVariables
_allDataValuesCache
_expressionDataValuesToInvalidate
_sessionThreadIdentifier
_hasInitializedDisassembly
_hasRequestedGlobalsAndFileStaticsFromLLDB
_swiftThunk
_swiftAsyncFunction
_locals
_arguments
_registers
_fileStatics
_globals
T@"NSArray",C,N,V_locals
T@"NSArray",C,N,V_arguments
T@"NSArray",C,N,V_registers
T@"NSArray",C,N,V_fileStatics
T@"NSArray",C,N,V_globals
AddName:
RemoveName:
GetNames:
GetNumLocations
GetLocationAtIndex:
SetCallbackWithBaton:
SetCallbackToNull
_breakpoint
breakpointHit:thread:location:
integerForKey:
initWithStackFrame:
_createNSStringForCString:
indexSet
_persistedLLDBFormatForValueName:
longLongValue
_calculateZeroPointers
initWithTypename:withType:
primitiveSetDynamicType:
_calculateSummary
initWithFormat:
stackFrame
_fetchSummaryFromLLDBOnSessionThreadIfNecessary
_fetchFullSummaryFromLLDBOnSessionThreadIfNecessary
thread
cStringUsingEncoding:
parent
_refreshValue
setSummary:
valueHasChanged
formattedSummaryFetchStarted:
formattedSummaryFetchCompleted:
_calculateSummaryForDictionaryElement
setFullSummary:
summary
dvt_newObserverForKeyPath:options:owner:withHandlerBlock:
fullSummary
_fetchChildValuesFromLLDBOnSessionThreadIfNecessary
loadedSummary:
loadedChildValues:
_setChildValuesToArrayOfActualChildren
_setChildValuesToArrayOfPlaceholders
_setChildValuesWithKVO:
setChildValuesCountValid:
_initWithParentDataValue:childIndex:
containsIndex:
indexGreaterThanIndex:
childValues
addIndexesInRange:
objectAtIndex:
addIndex:
willChange:valuesAtIndexes:forKey:
replaceObjectsAtIndexes:withObjects:
didChange:valuesAtIndexes:forKey:
GetByteSize
dataWithLength:
mutableBytes
ReadRawData:offset:buf:size:
setLength:
_dataValueFormatForLLDBFormat:
_persistLLDBFormat:
_lldbValueObjectDescription
_lldbValueDescription
className
expressionPath
HandleCommand:result:add_to_history:
GetErrorSize
dvt_stringWithPotentiallyMalformedUTF8Bytes:length:
initWithDomain:code:userInfo:
setAlertError:
initWithExpression:variableName:
setIdentifier:forWatchpoint:
executionEnvironment
addWatchpoint:
outputForStandardError:
_calculateRepresentsNilObjectiveCObject:
_calculateRepresentsNullObjectPointer:
_calculateRepresentsNullClassTypedef:
_classNameHierarchyStartingWithType:
arrayWithObject:
displayName
_persistenceKeyForValueWithName:
setObject:forKey:
componentsSeparatedByString:
filePath
lastPathComponent
supportedDataValueFormats
naturalFormatUsingTag:
binaryFormatUsingTag:
_dataValueWithDisplayName:tag:
osTypeFormatUsingTag:
decimalFormatUsingTag:
hexFormatUsingTag:
octalFormatUsingTag:
unsignedDecimalFormatUsingTag:
localizedStringForKey:value:table:
initWithDisplayName:tag:
setValue:
summaryHasChanged
dynamicTypeHasChanged
loadedFullSummary:
childWithName:foundChild:
_faultNextSetOfChildValuesStartingAtIndex:
primitiveChildValues
_rawDataWithHandler:
format
setFormat:
lldbDescription
wantsToProvideSummary
watch
representsNilObjectiveCObject
representsNullObjectPointer
representsNullClassTypedef
mightRespondToSelectors
ensureAllDisplayablePropertiesAreLoaded:
classNameHierarchy:
isMemoryFault
address
pointeeAddress
childValuesCountValid
hasChildValues
inScope
staticType
_isDictionarySynthesizedParent
_thread
_dbgStaticType
_lldbValueObject
_lldbFormat
_childValues
_fetchedIndexesForPlaceHolders
_expr_path_str
_classNameHierarchy
_requested_children
_requestedSummary
_summaryHasBeenFetched_mainThreadOnly
_requestedFullSummary
_fullSummaryHasBeenFetched_mainThreadOnly
_representsNilObjectiveCObject
_representsNullObjectPointer
_representsNullClassTypedef
_mightRespondToSelectors
_value_has_changed
_childValuesCountValid
_hasChildValues
_in_scope
_name
_value_str
_address
_pointeeAddress
_summary_str
_fullSummary
_parent
T@"DBGLLDBThread",R,N
T@"DBGLLDBStackFrame",R,N
T@"NSString",C,N,V_summary_str
T@"NSString",C,N,V_fullSummary
Tc,V_childValuesCountValid
_parentDataValue
_childIndex
_hasFaulted
FindLineEntryIndex:line:inline_file_spec:
_compileUnit
start
doubleForKey:
initWithExtensionIdentifier:launchSession:
setIsLongTerm:
lldbRPCServerPID
setForceKillingLLDBRPCServer:
logDebugStringWithFormat:
finishedWithError:
customLLDBInitFile
SourceInitFileInHomeDirectory:
fileExistsAtPath:
useOnyStandardLLDBFramework
initWithAccessMode:ownsSlaveFileDescriptor:error:
masterFileHandle
initWithType:standardInput:standardOutput:standardError:
setDelegate:
slaveFD
addConsoleAdaptor:
setDebuggerConsoleAdaptor:
_sourceLLDBInitFile:
initWithAccessMode:error:
slaveName
stringForKey:
toolchainLLDBFrameworkPath
initWithDebugLauncher:
debugSessionStarted:
_createDebuggerConsoleAdaptor:launchParameters:
setFinishedRunning:
mutableDebugSessions
setProcess:
setCurrentDebugSession:
dbgLLDBProcess
executeConsoleCommand:threadID:stackFrameID:
characterAtIndex:
_executeLLDBCommands:
debuggerHasStandardOutput
hasSuffix:
stringByReplacingOccurrencesOfString:withString:
_modifyMessageForDisplay:suggestedErrorCode:
runnableDisplayName
rangeOfString:options:
debugProcessAsUID
debugSession
RPCServerCrashedOrExitedMessage
stringByAppendingPathComponent:
fileExistsAtPath:isDirectory:
launchStyle
_logSetUID:
debugAsAService
SetIgnoreExisting:
_errorMessageForAttachingToName:
_errorMessageForAttachingToPID:
Fail
_errorStringFromLLDBError:
representsAnXPCService
parentLaunchSession
isAlive
_launchErrorForDescription:message:rawErrorMessage:
_logToConsoleForUserActions:
failedToLaunchErrorForRunDestination:internalLaunchError:
consoleMode
setTargetConsoleAdaptor:
_createTargetConsoleAdaptorForPTY:
fileSystemRepresentation
filePathToBinary
pathString
commandLineArgs
UTF8StringFromPotentialString:
workingDirectory
compositeEnvironmentVariables
launchAutomaticallySubstyle
supportedLaunchOptions
componentsJoinedByString:
_configureConsoleMode:forLaunchInfo:
errorForLLDBLaunchError:target:
targetArchitecture
dvt_firstObjectPassingTest:
additionalDeviceSubstitutionPaths
dvt_stringByQuotingOnlyIfNeeded:quoteTabsAndEOLs:quoteHighBitUnichars:
enumerateKeysAndObjectsUsingBlock:
deviceSupportSymbolsPath
runnableLocation
pathExtension
stringByDeletingLastPathComponent
dvt_stringByRemovingPrefix:
platformIdentifier
platformForIdentifier:
ide_extendedInfo
debuggingPlatformName
_devicePathSubstitutionPairsString
isUsingCommandLineUnitTesting
workspaceArena
derivedDataLocation
isWatchApplication
appExtensionBuiltPaths
isAppExtension
bundleWithPath:
pathForResource:ofType:
contentsOfDirectoryAtPath:error:
setSlowLaunchInfo:
runsRemoteFromHostLauncher
process
path
dvt_onlyObjectPassingTest:
_warnSlowLaunchDSYMForUUIDEnabled
_warnSlowLaunchReadFromMemory
_createBasicDebuggerObjects:
_setPlatformForStart:
_setupSearchPaths:
_warnSlowLaunch
askOnLaunchHostPath
remoteInstallPath
_addExtraModules:
tryOtherArchWhenDesignatedArchFails
_tryWithAnotherArchitectureOnBinaryPath:
customLaunchCommand
dvt_stringByTranslatingSmartQuotesToReal
setTarget:
_setMiscHandleCommands:
debugServiceFD
debugserverPort
debugserverConnectionAddress
_consumeEventAfterConnectToDebugServer:
_doAttachWithTarget:childPID:outError:
_doRegularDebugWithTarget:usingDebugServer:errTargetString:outError:
setRunnablePID:
setPID:
trackProcess
_storeKitConfigurationFileSync
startNextWorkerFromCompletedWorker:error:
observeFinish:
asyncPerformLockedBlock:
forceKillLLDBRPCServer
requestStop
debugSessionCompleted:
parseConsoleOutputFromOriginalOutput:
terminateCalled
setFinishedRunning
removeObject:
setupAppStoreServices
futureWithResult:
assertionBehaviorAfterEndOfEventForSelector:
parseConsoleInputFromOriginalInput:
_logDebugStringFromLLDB:
terminate
setDebugSession:
forceKillingLLDBRPCServer
_lldbDebugger
_lastKnownDebuggerPrompt
_ignorePromptOnce
_executeLLDBCommandQueue
_hasFinishedRunning
_lifeCycleLock
_remoteInstallPath
_lldbTargetFromLocalPath
_useOnlyStandardLLDBFramework
_hasQueriedLLDBRPCUserDefaults
_terminateCalled
_forceKillingLLDBRPCServer
_lldbRPCServerPID
_debugSession
T@"DBGLLDBSession",&,V_debugSession
Tc,V_forceKillingLLDBRPCServer
Tc,R,V_terminateCalled
Ti,R,V_lldbRPCServerPID
setRPCServerCrashedOrExitedMessage:
_threadCollection
GetOutput
GetOutputSize
_commandReturnObject
setShadowMemoryData:
gatherAdditionalInformationForAddress:numberOfBytes:
shadowMemoryData
_shadowMemoryData
T@"NSData",C,N,V_shadowMemoryData
IsActive
SetCommandOverrideCallback:callback:baton:
HandleCompletion:cursor_pos:match_start_point:max_return_elements:matches:
_commandInterpreter
_valueList
GetStopReasonExtendedBacktraces:
StepInstruction:
StepInto:
StepOver:
StepOut
SetSelectedFrame:
StepOverUntil:fileSpec:line:
_data
_attachInfo
helpURLFromDiagnosticID:sanitizerPrefix:
mutableMainThreadCheckerIssues
synthesizeMutableArrayProperty:withInstanceVariable:
setPauseRequested:
setHitCount:
breakpointLocationForIdentifier:parentBreakpoint:
modified
type
shouldStopForRuntimeIssuesBreakpointAtLocation:frame:
_performBreakpointActions:frame:
continueAfterRunningActions
registerDoingWorkOnBreakpoint:block:
setCurrentCPUFirstIndicator:
setCPUFirstIndicatorLow:
setCPUFirstIndicatorHigh:
setCPUDistribution:
setTotalRunningTimeMicroSeconds:
setCPUUsageThreadName:forThreadID:
setCurrentThreadsCPUUsage:
setCurrentMemoryFirstIndicator:
setMemoryDistribution:
setCurrentMemoryMeasurement:
setCurrentEnergyMeasurement:
setCurrentCPUCapMeasurement:
setCurrentCPUCapAverageMeasurement:
_setLastValue:inGaugeValues:
_updateMemoryMeasureDictionary:firstEntry:key:highValue:highValueKey:lowValue:lowValueKey:
_setupProfileScanType:
lastObserversForGaugesState
_setProfilingEnabled:
dvt_addObserverForKeyPath:options:owner:withHandlerBlock:
isWatch2Application
operatingSystemVersion
dvt_versionNumberComparison:
_setupProfileEnergyCPUCap
_setupProfileMemoryCap
debugLauncher
setProfilingSupported:
_shouldRecordStatistics
_setUpRecordingStackFramesForAttach
startMemoryDebuggingIfNeeded
_resetFlagsForTestingLongRunningConsoleCommand
_appendProcessControlAction:scope:arg:location:
initWithAction:scope:thread:arg:location:
perceivedStepStarted
_appendProcessControlAction:scope:arg:
perceivedStepStopped
GetContextAtIndex:
evaluateExpression:threadID:stackFrameID:queue:options:resultBlock:
_runActionOnSessionThreadWhenPaused:
shouldDetachForRequestStop
requestDetach
shouldGenerateRuntimeProfile
writeOutProfileDataWhenPaused
_killWatchdog
continueAfterActions
setContinueRequestedAfterExpression:
readyForActionsWhenPaused
buildableProduct
dvt_uncachedBundleIdentifierAtPath:
blueprint
provisionable
buildConfiguration
initForBuildWithConfigurationName:
bundleIdentifierForBuildParameters:
bundleIDOfLaunchParameters
performFetchEventForBundleIdentifier:orPid:onProxy:
supportsFetchEvents
_requestFetchEventOnSessionThread
simulateMetricPayloadsWithBundleID:payload:onProxy:completed:
snapshotUIForBundleIdentifier:orPid:onProxy:completed:
fetchEventRequested
setFetchEventRequested:
substringToIndex:
inputForStandardInput:
_putLLDBInThreadID:stackFrameID:restoreThreadFrameAfterWork:toDoWork:
initWithDebugSession:consoleAdaptor:selectedThreadIndex:selectedFrameIndex:
actions
expressions
expressionString
_logicalValueForBreakpointActionExpression:
setResult:
performActionUsingContext:andBreakpoint:
scannerWithString:
scanHexLongLong:
action
_drainAllSessionThreadActionsWithActionsLockAlreadyTaken
dvt_popFirstObject
scope
argument
location
startingLineNumber
shouldIgnoreKillSignals
_lldbProcessPlugnPacketSend:
setKillCalled:
_quitWatchdogOnProcessState:
debugSessions
setAutoRefreshStackFramesWhenPaused:
setWithObjects:
isProfilingSupported
_getProfileEnableString
evaluateExpression:threadID:stackFrameID:queue:options:completionHandler:
_evaluateExpressionFromSessionThread:threadID:stackFrameID:queue:options:resultBlock:completionHandler:
_runPendingExpressionsAndPurgeList
setStopOnEveryThreadSanitizerIssue:
ignoreCount
setStopOnEveryUBSanitizerIssue:
setStopOnEveryMainThreadCheckerIssue:
nameForDebugger
identifierForBreakpoint:
_createBreakpointFromFileBreakpoint:
_createBreakpointFromAddressBreakpoint:
_createBreakpointFromSymbolicBreakpoint:
_createBreakpointFromTestFailureBreakpoint:
_createBreakpointFromConstraintErrorBreakpoint:
_createBreakpointFromSwiftErrorBreakpoint:
_createBreakpointFromExceptionBreakpoint:
isSanitizerBreakpoint
_handleSanitizerBreakpoint:stop:multiplier:
setIdentifier:forBreakpoint:
_changeNameForBreakpoint:initial:
condition
_addBreakpointHitCallback:
_logBreakpointState:usingPrefix:
documentURL
startingColumnNumber
moduleName
symbolNames
_sbBreakpointForSymbolsNames:
typeName
exceptionName
setWithObject:
stopOnStyle
hexAddress
_deleteWatchpointFromLLDBSessionThread:
identifierForWatchpoint:
_breakpointLocationFromSBBreakpointLocation:parentBreakpoint:
setInitialResolvedLocations:
timeIntervalSinceReferenceDate
numberWithDouble:
initWithDocumentTextLocation:symbolName:moduleName:address:
setOffsetFromSymbolStart:
setIdentifier:forBreakpointLocation:parentBreakpoint:
setShouldBeEnabled:
locations
removeBreakpoint:
_logBreakpointLocationState:usingPrefix:
locationWasResolved:
breakpointsActivated
setShouldBeEnabled:withKVO:
_handleBreakpointEnabled:eventFromLLDB:
identifierForBreakpointLocation:
locationsWereRemoved:
_deleteBreakpointFromLLDBSessionThread:breakpointLocations:
_removeBreakpointHitCallback:
isLoggingEnabled
_allSanitizerBreakpointsInSameEnabledStateAsBreakpoint:
parentBreakpoint
_sbBreakpointLocationForIDEBreakpointLocationID:parentBreakpointID:
usesParentBreakpointCondition
profileScanType
_stringFromHexString:
numberWithUnsignedLong:
unsignedIntegerValue
numberWithInteger:
CPUFirstIndicators
appendString:
scanUpToString:intoString:
scanLocation
processProfileDataString:
setScanLocation:
initWithString:
_refreshThreadListAndUpdateCurrentThread:
UUIDString
identifier
expressionsWhenPaused
SetTryAllThreads:
simulatorPID
parentPID
isPaused
_delayedTurnOnMemoryDebugging
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
memoryDebuggingState
setMemoryDebuggingState:
hasExitCode
_delayedSetRunningState
setBreakpointLifeCycleDelegate:
lastObject
rangeOfString:
isTracingOnDeviceAndTargetGotJetsam
errorCodeForExitDescription:
dictionaryWithObject:forKey:
setExitCode:
setHasExitCode:
createBreakpointIfNecessary:
deleteBreakpoint:
activationStateChanged:forBreakpoints:
deleteWatchpoint:
breakpointNameChanged:
breakpointConditionChanged:
breakpointIgnoreCountChanged:
breakpointEnablementChanged:
breakpointLocationConditionChanged:
breakpointLocationIgnoreCount:
breakpointLocationEnablementChanged:
watchpointEnablementChanged:
lldbBroadcaster
_setAndAppendPrompt:
_setSessionThreadIdentifier:
requestStepIn
requestStepInSuspendOtherThreads
requestStepIntoInstruction
requestStepOverLine
requestStepOverInstruction
requestStepOverSuspendOtherThreads
requestStepOut
requestPause
requestContinue
requestStepIntoCallSymbol:atLocation:
requestContinueToLocation:
requestFetchEvent
simulateMetricPayloads
requestUISnapshotRefresh
executeDebuggerCommand:threadID:stackFrameID:
requestMovePCInStackFrame:toLineNumber:
requestLoadSymbolsForStackFrameUUID:
requestLoadDylibAtPath:completionBlock:
requestDataContainerForSymbol:atLocation:
printDescriptionOfDataValueToConsole:runAllThreads:completionHandler:
completeString:resultHandler:
_handleNextActionWithState:pendingRun:
_drainAllSessionThreadActionsByFirstTakingActionsLock
commandsExpectingExpressions
evaluateExpression:threadID:stackFrameID:queue:completionHandler:
_handleBreakpointAddedEventFromLLDB:
_handleBreakpointRemovedEventFromLLDB:
_handleBreakpointLocationsAddedEvent:
_handleBreakpointEnabledEventFromLLDB:
_handleBreakpointDisabledEventFromLLDB:
_handleBreakpointLocationsRemovedEvent:
consoleShouldTrackInputHistory
supportedDataValueFormatsForDataValue:
appendProfileDataString:
forceRefreshPausedStates
symbolicatedFramesFromUUIDsAndOffsets:markRecorded:
_handleThreadEvent:
_shouldIgnoreSigTermKill
_stopDueToMSLDuringAttach
_handleSessionThreadEndOfLifeWithExitCode:exitDescription:
setValue:forGlobalVariable:ofType:completionHandler:queue:
hitFirstStop
setHitFirstStop:
memoryProfilingDisabledMessage
setIsTracingOnDeviceAndTargetGotJetsam:
setStopRequested:
setSessionThreadIdentifier:
isProfilingEnabled
setProfilingEnabled:
setProfileScanType:
pauseRequested
continueRequestedAfterExpression
killCalled
actionsWhenPaused
setActionsWhenPaused:
setContinueAfterActions:
setReadyForActionsWhenPaused:
shouldIssueKillAfterPause
setShouldIssueKillAfterPause:
setExpressionsWhenPaused:
_lldbBroadcaster
_prompt
_eventCallbackLock
_resumeActions
_actionsOnSessionThread
_actionsLock
_shouldSetIsLongRunningConsoleCommand
_isLongRunningConsoleCommand
_isLongRunningConsoleCommandQueue
_previousHostUserTicks
_previousHostSystemTicks
_previousHostIdleTicks
_totalElapsedMicroSec
_previousElapsedMicroSec
_previousUsedMicroSec
_previousUsedMicroSecForThreadTable
_previousEnergy
_CPUCapAverage
_CPUCapIntervalCounter
_profilingCPUCapForWatch
_previousProfileDataString
_threadSanitizerIssues
_UBSanitizerIssues
_mainThreadCheckerIssues
_swiftRuntimeReportingIssues
_runtimeIssuesHelper
_isTracingOnDeviceAndTargetGotJetsam
_stopRequested
_profilingEnabled
_pauseRequested
_continueRequestedAfterExpression
_fetchEventRequested
_killCalled
_continueAfterActions
_readyForActionsWhenPaused
_shouldIssueKillAfterPause
_profileScanType
_memoryProfilingDisabledMessage
_RPCServerCrashedOrExitedMessage
_actionsWhenPaused
_expressionsWhenPaused
Tc,VhitFirstStop
profilingEnabled
Tc,N,GisProfilingEnabled,V_profilingEnabled
Ti,V_profileScanType
Tc,V_pauseRequested
Tc,V_continueRequestedAfterExpression
Tc,V_fetchEventRequested
Tc,V_killCalled
T@"NSMutableArray",&,V_actionsWhenPaused
Tc,V_continueAfterActions
Tc,V_readyForActionsWhenPaused
Tc,V_shouldIssueKillAfterPause
T@"NSMutableArray",&,V_expressionsWhenPaused
T@"DBGLLDBLauncher",R
T@"NSString",C,V_RPCServerCrashedOrExitedMessage
Tc,V_isTracingOnDeviceAndTargetGotJetsam
Tc,V_stopRequested
mutableThreadSanitizerIssues
T@"NSMutableArray",R,C,D
mutableUBSanitizerIssues
T^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]},V_sessionThreadIdentifier
recursiveDispatchLockWithDebugName:
hasCurrentGroup
threadDictionary
addGroup
data
defaultCenter
postNotificationName:object:
setIgnoreFutureOutput:
setWasDetached:
isCurrentlyTracing
canBeJetsamedDuringGPUTracing
logAspectWithName:
startedMetricForAspect:logLevel:label:
setIdentifier:
initWithPID:
processURL
filePathForFileURL:
setReplacementRunnableLocation:
debugPauseAtEntry
appendBytes:length:
bytes
dvt_stringWithPotentiallyMalformedUTF8Bytes:length:stopAtTrailingIncompleteUTF8Sequence:getUsedLength:getNumberOfMalformedSequences:
setData:
delegate
workspace
publishReportWithType:projectName:version:measureDuring:
GetKind
GetNumPendingItems
GetPendingItemAtIndex:
_queue
initWithTypename:
displayTypeName
isPointer
isUnknownType
pointeeTypeName
setPointeeTypeName:
_lldbType
_pointeeTypeName
_displayTypeName
_isPointer
T@"NSString",&,V_pointeeTypeName
_expressionOptions
_stream
initWithExpression:numberOfBytes:process:
setMemoryFaulted:
addMemoryFaultedMemoryDatum:
documentationManager
urlForDiagnosticID:
_symbolContext
_symbolContextList
initWithAction:scope:thread:arg:
_action
_scope
_arg0
_location
Ti,R,V_action
Ti,R,V_scope
T@"DBGLLDBThread",R,V_thread
TQ,R,V_arg0
T@"DVTTextDocumentLocation",R,V_location
_initInternal
_invalidate
mainQueue
_memoryPressureDetected
addObserverForName:object:queue:usingBlock:
removeObserver:
stop
_workspaceClosedNotificationObserver
_memoryPressureNotificationObserver
_error
_descriptionForAddress:evaluateWithStackFrame:handleOnMainQueueWithResultHandler:
subdataWithRange:
formatDescriptionForStartingAddress:regionAddress:regionSize:objectName:objectType:
evaluateExpression:withResultBlock:
setAllowedUnits:
stringFromByteCount:
_positiveNumberToByteString:
_positionStringWithOffset:size:
_expandShadowData:withStartingAddress:
_retrieveShadowParametersWithHandler:
longValue
_shadowParametersRetrieved
_shadowMemoryScale
_shadowMemoryOffset
_reportAddress
_reportRegionStart
_reportRegionSize
setPendingBlocksThreads:
pendingBlocksThreads
lldbQueue
numberOfPendingBlocks
_lldbQueue
_derivedPendingBlocks
_numberOfPendingBlocks
framePointer
module
fileURL
lineNumber
_threadsFromIssueThreads:
removeObjectsInRange:
setUsedInRuntimeIssue:
setSpecialRuntimeThread:
DBGLLDBSwiftRuntimeReportingHelper
LLDBRPCFileSpec
DBGSBFileSpec
NSObject
LLDBWatchpoint
DBGSBWatchpoint
LLDBRPCStringList
DBGSBStringList
DBGLLDBRuntimeIssuesHelper
LLDBFileSpec
DBGLLDBCodeModule
LLDBValue
DBGSBValue
LLDBTypeSummaryOptions
DBGSBTypeSummaryOptions
LLDBModule
DBGSBModule
LLDBRPCDebugger
DBGSBDebugger
LLDBStructuredData
DBGSBStructuredData
LLDBRPCProcess
DBGSBProcess
LLDBLineEntry
DBGSBLineEntry
LLDBQueueItem
DBGSBQueueItem
LLDBRPCLaunchInfo
DBGSBLaunchInfo
LLDBTypeMember
DBGSBTypeMember
DBGLLDBProcess
DBGLLDBReadMemoryCancellableToken
DVTCancellable
LLDBRPCBroadcaster
DBGSBBroadcaster
LLDBListener
DBGSBListener
LLDBEvent
DBGSBEvent
DBGLLDBInternalMetricsReport
LLDBRPCFrame
DBGSBFrame
LLDBBreakpointLocation
DBGSBBreakpointLocation
LLDBSection
DBGSBSection
LLDBTarget
DBGSBTarget
DBGLLDBThread
IDEThreadSuspendProtocol
LLDBRPCLineEntry
LLDBFileSpecList
DBGSBFileSpecList
LLDBSymbol
DBGSBSymbol
LLDBRPCSymbol
LLDBRPCTypeSummaryOptions
LLDBRPCType
DBGSBType
DBGLLDBStackFrame
LLDBDebugger
LLDBRPCBreakpoint
DBGSBBreakpoint
DBGLLDBDataValue
DBGLLDBChildPlaceholderDataValue
LLDBRPCCompileUnit
DBGSBCompileUnit
DBGLLDBLauncher
IDEConsoleAdaptorDelegateProtocol
LLDBThreadCollection
DBGSBThreadCollection
LLDBRPCCommandReturnObject
DBGSBCommandReturnObject
LLDBRPCSection
DBGLLDBMemoryData
LLDBCommandInterpreter
DBGSBCommandInterpreter
LLDBRPCTypeMember
LLDBValueList
DBGSBValueList
LLDBThread
DBGSBThread
LLDBData
DBGSBData
LLDBBreakpoint
LLDBRPCAddress
DBGSBAddress
LLDBRPCStructuredData
LLDBAttachInfo
DBGSBAttachInfo
DBGLLDBMainThreadCheckerHelper
LLDBRPCThread
LLDBRPCModule
LLDBCompileUnit
LLDBLaunchInfo
LLDBAddress
LLDBProcess
LLDBCommandReturnObject
LLDBType
DBGLLDBSession
DBGDebugSessionBreakpointLifeCycleDelegate
LLDBRPCAttachInfo
LLDBQueue
DBGSBQueue
LLDBFrame
DBGLLDBDataType
LLDBRPCExpressionOptions
DBGSBExpressionOptions
LLDBRPCQueue
LLDBStream
DBGSBStream
DBGLLDBSanitizerHelper
LLDBRPCFileSpecList
LLDBRPCSymbolContext
DBGSBSymbolContext
LLDBExpressionOptions
LLDBRPCSymbolContextList
DBGSBSymbolContextList
DBGLLDBProcessControl
LLDBRPCWatchpoint
LLDBStringList
LLDBRPCQueueItem
LLDBRPCCommandInterpreter
LLDBRPCTarget
DBGLLDBMemoryManager
LLDBError
DBGSBError
LLDBRPCListener
LLDBRPCError
DBGLLDBAddressSanitizerHelper
LLDBRPCThreadCollection
LLDBRPCData
LLDBBroadcaster
DBGLLDBUBSanitizerHelper
LLDBRPCEvent
LLDBRPCValueList
LLDBSymbolContext
_DBGDebuggerLLDBBundlePrivateClassForFindingBundle
DBGLLDBQueue
LLDBSymbolContextList
LLDBRPCStream
DBGLLDBThreadSanitizerHelper
LLDBRPCValue
LLDBRPCBreakpointLocation
v32@0:8@16@24
c24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
c16@0:8
c24@0:8#16
c24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
c24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16r*24
@36@0:8@16r*24B32
B16@0:8
I32@0:8*16Q24
r*16@0:8
@24@0:8r^{SBFileSpec=IIQ}16
v16@0:8
{SBFileSpec="m_connection_id"I"m_class_id"I"m_object_id"Q}
i16@0:8
v20@0:8B16
@24@0:8r^v16
{SBWatchpoint="m_opaque_wp"{weak_ptr<lldb_private::Watchpoint>="__ptr_"^{Watchpoint}"__cntrl_"^{__shared_weak_count}}}
@24@0:8@16
I16@0:8
r*24@0:8Q16
v24@0:8r*16
{SBStringList="m_connection_id"I"m_class_id"I"m_object_id"Q}
c32@0:8@16@24
c40@0:8@16@24@32
{SBFileSpec="m_opaque_up"{unique_ptr<lldb_private::FileSpec, std::default_delete<lldb_private::FileSpec>>="__ptr_"{__compressed_pair<lldb_private::FileSpec *, std::default_delete<lldb_private::FileSpec>>="__value_"^{FileSpec}}}}
@40@0:8@16@24@32
@"<DBGSBModule>"
v20@0:8i16
r*32@0:8@16@24
B24@0:8@16
B32@0:8r*16@24
q24@0:8q16
Q24@0:8Q16
@28@0:8r*16i24
@28@0:8I16i20B24
@"<DBGSBError>"16@0:8
r*32@0:8@"<DBGSBStream>"16@"<DBGSBTypeSummaryOptions>"24
@"<DBGSBValue>"16@0:8
B24@0:8@"<DBGSBStream>"16
@"<DBGSBType>"16@0:8
B32@0:8r*16@"<DBGSBError>"24
@"<DBGSBValue>"28@0:8r*16i24
@"<DBGSBValue>"28@0:8I16i20B24
@"<DBGSBData>"16@0:8
{SBValue="m_opaque_sp"{shared_ptr<ValueImpl>="__ptr_"^{ValueImpl}"__cntrl_"^{__shared_weak_count}}}
{SBTypeSummaryOptions="m_opaque_up"{unique_ptr<lldb_private::TypeSummaryOptions, std::default_delete<lldb_private::TypeSummaryOptions>>="__ptr_"{__compressed_pair<lldb_private::TypeSummaryOptions *, std::default_delete<lldb_private::TypeSummaryOptions>>="__value_"^{TypeSummaryOptions}}}}
@24@0:8r*16
@24@0:8Q16
@"<DBGSBFileSpec>"16@0:8
B24@0:8@"<DBGSBFileSpec>"16
@"<DBGSBSection>"24@0:8r*16
@"<DBGSBAddress>"24@0:8Q16
{SBModule="m_opaque_sp"{shared_ptr<lldb_private::Module>="__ptr_"^{Module}"__cntrl_"^{__shared_weak_count}}}
@40@0:8^?16^v24r*32
@24@0:8r^*16
@32@0:8r*16B24B28
@20@0:8i16
@28@0:8r*16B24
i20@0:8i16
v24@0:8B16B20
@52@0:8r*16r*24r*32B40@44
@20@0:8I16
v24@0:8@16
B24@0:8r*16
i24@0:8r*16
v28@0:8^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}16B24
@"<DBGSBLaunchInfo>"24@0:8r^*16
@"<DBGSBAttachInfo>"32@0:8r*16B24B28
@"<DBGSBAttachInfo>"20@0:8i16
@"<DBGSBFileSpec>"24@0:8r*16
@"<DBGSBFileSpec>"28@0:8r*16B24
@"<DBGSBEvent>"16@0:8
@"<DBGSBStream>"16@0:8
@"<DBGSBCommandReturnObject>"16@0:8
@"<DBGSBStringList>"16@0:8
@"<DBGSBExpressionOptions>"16@0:8
@"<DBGSBTypeSummaryOptions>"16@0:8
@"<DBGSBBroadcaster>"24@0:8r*16
@"<DBGSBFileSpecList>"16@0:8
@"<DBGSBTarget>"52@0:8r*16r*24r*32B40@"<DBGSBError>"44
@"<DBGSBTarget>"20@0:8I16
v24@0:8@"<DBGSBTarget>"16
@"<DBGSBError>"24@0:8r*16
@"<DBGSBListener>"16@0:8
@"<DBGSBCommandInterpreter>"16@0:8
B32@0:8^?16^v24
B32@0:8{Connection={shared_ptr<rpc_common::Connection>=^{Connection}^{__shared_weak_count}}}16
B32@0:8^i16^i24
{SBDebugger="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{Connection="m_connection_sp"{shared_ptr<rpc_common::Connection>="__ptr_"^{Connection}"__cntrl_"^{__shared_weak_count}}}
@"NSValue"
@32@0:8@16^@24
c24@0:8r*16
@"<DBGSBError>"24@0:8@"<DBGSBStream>"16
@"NSDictionary"32@0:8@"<DBGSBStream>"16^@24
{SBStructuredData="m_impl_up"{unique_ptr<lldb_private::StructuredDataImpl, std::default_delete<lldb_private::StructuredDataImpl>>="__ptr_"{__compressed_pair<lldb_private::StructuredDataImpl *, std::default_delete<lldb_private::StructuredDataImpl>>="__value_"^{StructuredDataImpl}}}}
Q48@0:8Q16^v24Q32@40
B20@0:8i16
B20@0:8I16
I32@0:8@16@24
Q32@0:8*16Q24
@"<DBGSBTarget>"16@0:8
Q48@0:8Q16^v24Q32@"<DBGSBError>"40
I32@0:8@"<DBGSBFileSpec>"16@"<DBGSBError>"24
@"<DBGSBThread>"24@0:8Q16
@"<DBGSBThread>"16@0:8
B24@0:8@"<DBGSBThread>"16
@"<DBGSBQueue>"24@0:8Q16
@"<DBGSBThreadCollection>"24@0:8Q16
@"<DBGSBBroadcaster>"16@0:8
@"<DBGSBStructuredData>"16@0:8
{SBProcess="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
@"<DBGSBAddress>"16@0:8
c24@0:8@"<DBGSBLineEntry>"16
@24@0:8^v16
{SBLineEntry="m_opaque_up"{unique_ptr<lldb_private::LineEntry, std::default_delete<lldb_private::LineEntry>>="__ptr_"{__compressed_pair<lldb_private::LineEntry *, std::default_delete<lldb_private::LineEntry>>="__value_"^{LineEntry}}}}
@"<DBGSBThread>"24@0:8r*16
{SBQueueItem="m_queue_item_sp"{shared_ptr<lldb_private::QueueItem>="__ptr_"^{QueueItem}"__cntrl_"^{__shared_weak_count}}}
@32@0:8@16r^*24
v28@0:8@16c24
v28@0:8r^*16B24
B36@0:8i16r*20B28B32
v20@0:8I16
v28@0:8@"<DBGSBFileSpec>"16c24
{unique_ptr<lldb_rpc::SBLaunchInfo, std::default_delete<lldb_rpc::SBLaunchInfo>>="__ptr_"{__compressed_pair<lldb_rpc::SBLaunchInfo *, std::default_delete<lldb_rpc::SBLaunchInfo>>="__value_"^{SBLaunchInfo}}}
{SBTypeMember="m_opaque_up"{unique_ptr<lldb_private::TypeMemberImpl, std::default_delete<lldb_private::TypeMemberImpl>>="__ptr_"{__compressed_pair<lldb_private::TypeMemberImpl *, std::default_delete<lldb_private::TypeMemberImpl>>="__value_"^{TypeMemberImpl}}}}
v20@0:8c16
v40@0:8^@16^@24^i32
v32@0:8^@16@24
c24@0:8^i16
v40@0:8@16Q24@?32
@40@0:8Q16Q24@?32
@48@0:8Q16Q24@?32@?40
v64@0:8Q16Q24@32@40@?48@?56
c24@0:8Q16
c32@0:8Q16@24
v48@0:8@16^i24^i32^c40
v32@0:8@16^i24
v32@0:8@16^@24
c48@0:8@16@24^i32^@40
v32@0:8Q16@?24
v40@0:8Q16Q24@?32
@32@0:8@16@24
@48@0:8@16@24@32@40
v48@0:8Q16Q24c32c36@?40
@48@0:8Q16Q24c32c36^@40
v24@0:8Q16
@"<DBGSBTarget>"
@"<DBGSBProcess>"
@"NSMutableSet"
@"DVTDispatchLock"
@"NSArray"
@"NSMutableDictionary"
@"DBGLLDBAddressSanitizerHelper"
@"DBGLLDBThreadSanitizerHelper"
@"DBGLLDBUBSanitizerHelper"
@"DBGLLDBMainThreadCheckerHelper"
@"DBGLLDBSwiftRuntimeReportingHelper"
v24@0:8I16B20
{SBBroadcaster="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
I28@0:8@16I24
I36@0:8@16r*24I32
B28@0:8I16@20
I28@0:8@"<DBGSBBroadcaster>"16I24
I36@0:8@"<DBGSBDebugger>"16r*24I32
B28@0:8I16@"<DBGSBEvent>"20
B24@0:8@"<DBGSBEvent>"16
{SBListener="m_opaque_sp"{shared_ptr<lldb_private::Listener>="__ptr_"^{Listener}"__cntrl_"^{__shared_weak_count}}"m_unused_ptr"^{Listener}}
B24@0:8@"<DBGSBBroadcaster>"16
@"<DBGSBBreakpoint>"16@0:8
@"<DBGSBBreakpointLocation>"20@0:8I16
{SBEvent="m_event_sp"{shared_ptr<lldb_private::Event>="__ptr_"^{Event}"__cntrl_"^{__shared_weak_count}}"m_opaque_ptr"^{Event}}
@"NSDictionary"
B24@0:8Q16
@36@0:8B16B20B24B28i32
@32@0:8r*16i24i28
@32@0:8r*16@24
@"<DBGSBValueList>"36@0:8B16B20B24B28i32
@"<DBGSBValue>"32@0:8r*16i24i28
@"<DBGSBValue>"24@0:8r*16
@"<DBGSBValue>"32@0:8r*16@"<DBGSBExpressionOptions>"24
@"<DBGSBValueList>"16@0:8
@"<DBGSBSymbolContext>"20@0:8I16
@"<DBGSBLineEntry>"16@0:8
@"<DBGSBCompileUnit>"16@0:8
c24@0:8@"<DBGSBFrame>"16
{SBFrame="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBBreakpointLocation="m_opaque_wp"{weak_ptr<lldb_private::BreakpointLocation>="__ptr_"^{BreakpointLocation}"__cntrl_"^{__shared_weak_count}}}
Q24@0:8@16
Q24@0:8@"<DBGSBTarget>"16
{SBSection="m_opaque_wp"{weak_ptr<lldb_private::Section>="__ptr_"^{Section}"__cntrl_"^{__shared_weak_count}}}
@48@0:8@16r*24r*32@40
@36@0:8@16I24I28c32
@32@0:8r*16r*24
@48@0:8r^*16I24I28@32@40
@36@0:8i16B20B24@28
@40@0:8r*16r*24r*32
@32@0:8r*16I24i28
@40@0:8r*16@24@32
@"<DBGSBProcess>"32@0:8@"<DBGSBAttachInfo>"16@"<DBGSBError>"24
@"<DBGSBProcess>"16@0:8
@"<DBGSBProcess>"48@0:8@"<DBGSBListener>"16r*24r*32@"<DBGSBError>"40
@"<DBGSBProcess>"32@0:8@"<DBGSBLaunchInfo>"16@"<DBGSBError>"24
@"<DBGSBBreakpoint>"20@0:8i16
@"<DBGSBBreakpoint>"36@0:8@"<DBGSBFileSpec>"16I24I28c32
@"<DBGSBBreakpoint>"32@0:8r*16r*24
@"<DBGSBBreakpoint>"24@0:8Q16
@"<DBGSBBreakpoint>"48@0:8r^*16I24I28@"<DBGSBFileSpecList>"32@"<DBGSBFileSpecList>"40
@"<DBGSBBreakpoint>"36@0:8i16B20B24@"<DBGSBStringList>"28
@"<DBGSBWatchpoint>"20@0:8I16
@"<DBGSBWatchpoint>"20@0:8i16
@"<DBGSBModule>"40@0:8r*16r*24r*32
@"<DBGSBModule>"20@0:8I16
B24@0:8@"<DBGSBModule>"16
@"<DBGSBSymbolContextList>"32@0:8r*16I24i28
@"<DBGSBValue>"40@0:8r*16@"<DBGSBAddress>"24@"<DBGSBType>"32
@"<DBGSBSymbolContextList>"28@0:8r*16i24
@"<DBGSBType>"24@0:8r*16
{SBTarget="m_opaque_sp"{shared_ptr<lldb_private::Target>="__ptr_"^{Target}"__cntrl_"^{__shared_weak_count}}}
@44@0:8@16@24@32c40
@24@0:8q16
@28@0:8Q16c24
v36@0:8Q16c24@?28
@"<DBGSBThread>"
@"<DBGSBQueueItem>"
@"NSMutableArray"
@24@0:8^{SBLineEntry=IIQ}16
{SBLineEntry="m_connection_id"I"m_class_id"I"m_object_id"Q}
{SBFileSpecList="m_opaque_up"{unique_ptr<lldb_private::FileSpecList, std::default_delete<lldb_private::FileSpecList>>="__ptr_"{__compressed_pair<lldb_private::FileSpecList *, std::default_delete<lldb_private::FileSpecList>>="__value_"^{FileSpecList}}}}
@24@0:8r^{SBSymbol=^{Symbol}}16
{SBSymbol="m_opaque_ptr"^{Symbol}}
{SBSymbol="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBTypeSummaryOptions="m_connection_id"I"m_class_id"I"m_object_id"Q}
@"<DBGSBTypeMember>"20@0:8I16
{SBType="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
@56@0:8@16@24@32@40@48
v24@0:8@?16
@28@0:8@16I24
v32@0:8@16@?24
@32@0:8c16c20c24c28
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
@40@0:8@16@24^@32
@"<DBGSBFrame>"
@"<DBGSBValueList>"
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}
{SBDebugger="m_opaque_sp"{shared_ptr<lldb_private::Debugger>="__ptr_"^{Debugger}"__cntrl_"^{__shared_weak_count}}}
v24@0:8^v16
v24@0:8@"<DBGSBStringList>"16
@"<DBGSBBreakpointLocation>"20@0:8i16
{SBBreakpoint="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
@32@0:8@16Q24
@52@0:8@16@24@32@40c48
c24@0:8q16
i24@0:8@16
@"DBGLLDBThread"
@"DBGLLDBDataType"
@"<DBGSBValue>"
@"NSMutableIndexSet"
@"NSString"
@"DBGDataValue"
@"DBGLLDBDataValue"
I32@0:8I16I20@24
I32@0:8I16I20@"<DBGSBFileSpec>"24
@"<DBGSBLineEntry>"20@0:8I16
{SBCompileUnit="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
Q24@0:8:16
@"NSString"24@0:8@"NSString"16
c32@0:8^@16@24
@32@0:8@16^i24
@40@0:8@16^Q24^@32
r*24@0:8@16
@44@0:8@16c24@28^@36
@"<DBGSBDebugger>"
@"NSObject<OS_dispatch_queue>"
@"DBGLLDBSession"
{SBThreadCollection="m_opaque_sp"{shared_ptr<lldb_private::ThreadCollection>="__ptr_"^{ThreadCollection}"__cntrl_"^{__shared_weak_count}}}
{SBCommandReturnObject="m_connection_id"I"m_class_id"I"m_object_id"Q}
{SBSection="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
v32@0:8Q16Q24
@"NSData"
B40@0:8r*16^?24^v32
i44@0:8r*16I24i28i32@36
i36@0:8r*16@24B32
i44@0:8r*16I24i28i32@"<DBGSBStringList>"36
i36@0:8r*16@"<DBGSBCommandReturnObject>"24B32
v24@0:8@"<DBGSBCommandReturnObject>"16
@24@0:8r^{SBCommandInterpreter=^{CommandInterpreter}}16
{SBCommandInterpreter="m_opaque_ptr"^{CommandInterpreter}}
@24@0:8r^{SBTypeMember=IIQ}16
{SBTypeMember="m_connection_id"I"m_class_id"I"m_object_id"Q}
@"<DBGSBValue>"20@0:8I16
{SBValueList="m_opaque_up"{unique_ptr<ValueListImpl, std::default_delete<ValueListImpl>>="__ptr_"{__compressed_pair<ValueListImpl *, std::default_delete<ValueListImpl>>="__value_"^{ValueListImpl}}}}
Q20@0:8I16
@36@0:8@16@24I32
B32@0:8r*16@"<DBGSBStream>"24
@"<DBGSBThreadCollection>"20@0:8i16
@"<DBGSBFrame>"20@0:8I16
@"<DBGSBFrame>"16@0:8
@"<DBGSBError>"36@0:8@"<DBGSBFrame>"16@"<DBGSBFileSpec>"24I32
c24@0:8@"<DBGSBThread>"16
{SBThread="m_opaque_sp"{shared_ptr<lldb_private::ExecutionContextRef>="__ptr_"^{ExecutionContextRef}"__cntrl_"^{__shared_weak_count}}}
Q48@0:8@16Q24^v32Q40
Q48@0:8@"<DBGSBError>"16Q24^v32Q40
{SBData="m_opaque_sp"{shared_ptr<lldb_private::DataExtractor>="__ptr_"^{DataExtractor}"__cntrl_"^{__shared_weak_count}}}
{SBBreakpoint="m_opaque_wp"{weak_ptr<lldb_private::Breakpoint>="__ptr_"^{Breakpoint}"__cntrl_"^{__shared_weak_count}}}
@"<DBGSBSymbol>"16@0:8
@"<DBGSBModule>"16@0:8
@24@0:8^{SBAddress=IIQ}16
{SBAddress="m_connection_id"I"m_class_id"I"m_object_id"Q}
@24@0:8r^{SBStructuredData=IIQ}16
{SBStructuredData="m_connection_id"I"m_class_id"I"m_object_id"Q}
@40@0:8@16r*24B32B36
@28@0:8@16i24
{unique_ptr<lldb::SBAttachInfo, std::default_delete<lldb::SBAttachInfo>>="__ptr_"{__compressed_pair<lldb::SBAttachInfo *, std::default_delete<lldb::SBAttachInfo>>="__value_"^{SBAttachInfo}}}
{SBThread="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBModule="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
@24@0:8r^{SBCompileUnit=^{CompileUnit}}16
{SBCompileUnit="m_opaque_ptr"^{CompileUnit}}
{unique_ptr<lldb::SBLaunchInfo, std::default_delete<lldb::SBLaunchInfo>>="__ptr_"{__compressed_pair<lldb::SBLaunchInfo *, std::default_delete<lldb::SBLaunchInfo>>="__value_"^{SBLaunchInfo}}}
{SBAddress="m_opaque_up"{unique_ptr<lldb_private::Address, std::default_delete<lldb_private::Address>>="__ptr_"{__compressed_pair<lldb_private::Address *, std::default_delete<lldb_private::Address>>="__value_"^{Address}}}}
{SBProcess="m_opaque_wp"{weak_ptr<lldb_private::Process>="__ptr_"^{Process}"__cntrl_"^{__shared_weak_count}}}
{SBCommandReturnObject="m_opaque_up"{unique_ptr<lldb_private::SBCommandReturnObjectImpl, std::default_delete<lldb_private::SBCommandReturnObjectImpl>>="__ptr_"{__compressed_pair<lldb_private::SBCommandReturnObjectImpl *, std::default_delete<lldb_private::SBCommandReturnObjectImpl>>="__value_"^{SBCommandReturnObjectImpl}}}}
{SBType="m_opaque_sp"{shared_ptr<lldb_private::TypeImpl>="__ptr_"^{TypeImpl}"__cntrl_"^{__shared_weak_count}}}
c40@0:8^v16@24@32
v28@0:8c16@20
v24@0:8@"IDEBreakpoint"16
v28@0:8c16@"NSArray"20
v24@0:8@"IDEWatchpoint"16
v24@0:8@"IDEBreakpointLocation"16
v24@0:8^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}16
v32@0:8i16i20Q24
v40@0:8i16i20Q24@32
v44@0:8Q16Q24c32@?36
v40@0:8@16Q24Q32
v32@0:8@16Q24
v36@0:8@16c24@?28
c32@0:8^i16^c24
v24@0:8^i16
v56@0:8@16Q24Q32@40@?48
v64@0:8@16Q24Q32@40@48@?56
v72@0:8@16Q24Q32@40@48@?56@?64
v40@0:8@16q24q32
@32@0:8Q16Q24
@28@0:8@16c24
v32@0:8q16@24
v56@0:8@16@24@32@?40@48
^{_opaque_pthread_t=q^{__darwin_pthread_handler_rec}[8176c]}16@0:8
@"<DBGSBBroadcaster>"
^{__CFDictionary=}
@"NSMutableString"
@"DBGLLDBRuntimeIssuesHelper"
{unique_ptr<lldb_rpc::SBAttachInfo, std::default_delete<lldb_rpc::SBAttachInfo>>="__ptr_"{__compressed_pair<lldb_rpc::SBAttachInfo *, std::default_delete<lldb_rpc::SBAttachInfo>>="__value_"^{SBAttachInfo}}}
@"<DBGSBQueueItem>"20@0:8I16
@"<DBGSBThread>"20@0:8I16
{SBQueue="m_opaque_sp"{shared_ptr<lldb_private::QueueImpl>="__ptr_"^{QueueImpl}"__cntrl_"^{__shared_weak_count}}}
{SBFrame="m_opaque_sp"{shared_ptr<lldb_private::ExecutionContextRef>="__ptr_"^{ExecutionContextRef}"__cntrl_"^{__shared_weak_count}}}
@"<DBGSBType>"
{SBExpressionOptions="m_connection_id"I"m_class_id"I"m_object_id"Q}
{SBQueue="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBStream="m_opaque_up"{unique_ptr<lldb_private::Stream, std::default_delete<lldb_private::Stream>>="__ptr_"{__compressed_pair<lldb_private::Stream *, std::default_delete<lldb_private::Stream>>="__value_"^{Stream}}}"m_is_file"B}
@"DBGLLDBProcess"
@24@0:8r^{SBFileSpecList=IIQ}16
{SBFileSpecList="m_connection_id"I"m_class_id"I"m_object_id"Q}
@24@0:8r^{SBSymbolContext=IIQ}16
{SBSymbolContext="m_connection_id"I"m_class_id"I"m_object_id"Q}
{SBExpressionOptions="m_opaque_up"{unique_ptr<lldb_private::EvaluateExpressionOptions, std::default_delete<lldb_private::EvaluateExpressionOptions>>="__ptr_"{__compressed_pair<lldb_private::EvaluateExpressionOptions *, std::default_delete<lldb_private::EvaluateExpressionOptions>>="__value_"^{EvaluateExpressionOptions}}}}
@24@0:8r^{SBSymbolContextList=IIQ}16
{SBSymbolContextList="m_connection_id"I"m_class_id"I"m_object_id"Q}
@40@0:8i16i20@24Q32
@48@0:8i16i20@24Q32@40
@"DVTTextDocumentLocation"
{SBWatchpoint="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBStringList="m_opaque_up"{unique_ptr<lldb_private::StringList, std::default_delete<lldb_private::StringList>>="__ptr_"{__compressed_pair<lldb_private::StringList *, std::default_delete<lldb_private::StringList>>="__value_"^{StringList}}}}
{SBQueueItem="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBCommandInterpreter="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBTarget="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBError="m_opaque_up"{unique_ptr<lldb_private::Status, std::default_delete<lldb_private::Status>>="__ptr_"{__compressed_pair<lldb_private::Status *, std::default_delete<lldb_private::Status>>="__value_"^{Status}}}}
{SBListener="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
@24@0:8r^{SBError=IIQ}16
{SBError="m_connection_id"I"m_class_id"I"m_object_id"Q}
v40@0:8Q16@24@?32
@32@0:8q16Q24
@56@0:8Q16Q24Q32@40@48
{SBThreadCollection="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBData="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBBroadcaster="m_opaque_sp"{shared_ptr<lldb_private::Broadcaster>="__ptr_"^{Broadcaster}"__cntrl_"^{__shared_weak_count}}"m_opaque_ptr"^{Broadcaster}}
{SBEvent="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
@24@0:8r^{SBValueList=IIQ}16
{SBValueList="m_connection_id"I"m_class_id"I"m_object_id"Q}
{SBSymbolContext="m_opaque_up"{unique_ptr<lldb_private::SymbolContext, std::default_delete<lldb_private::SymbolContext>>="__ptr_"{__compressed_pair<lldb_private::SymbolContext *, std::default_delete<lldb_private::SymbolContext>>="__value_"^{SymbolContext}}}}
@"<DBGSBQueue>"
{SBSymbolContextList="m_opaque_up"{unique_ptr<lldb_private::SymbolContextList, std::default_delete<lldb_private::SymbolContextList>>="__ptr_"{__compressed_pair<lldb_private::SymbolContextList *, std::default_delete<lldb_private::SymbolContextList>>="__value_"^{SymbolContextList}}}}
{SBStream="m_connection_id"I"m_class_id"I"m_object_id"Q}
{SBValue="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
{SBBreakpointLocation="m_object_ref_sp"{shared_ptr<rpc::ObjectRef>="__ptr_"^{ObjectRef}"__cntrl_"^{__shared_weak_count}}}
